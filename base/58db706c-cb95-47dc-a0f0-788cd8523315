{
    "title": "Secret Smiles and Three Little Words Pt. 34",
    "pages": [
        "Chapter 42\n\nLivy followed Alex into her parent's house, they had been laughing all day. Alex in a good mood because her energy level had finally returned after a week of being home. Livy happy that Alex was there with all her positive energy. It helped her avoid the doldrums of her mother and older sisters with their holier than thou attitude and looking down their noses as they had been doing since she moved to Averin.\n\nLeaving the church hadn't been the big deal that Livy thought it would be, then again, having Father Jack for spiritual advice sure made that transition a lot easier. Having a church that believed in God and His teaching of love and acceptance was also very helpful.\n\nShe did find the occasional person who seemed to grimace slightly when she told them about her and Nora but no husband. But Father Jack was always preaching about letting God do the judging so most of the congregation welcomed her with open arms.\n\nIt reminded Livy of what Alex said about throwing the first stone. Livy decided, maybe Alex was closer to God than all of them combined, even though she didn't go to church. Even though she lived in sin, as her mother claimed. If she lived in sin and was damned for it, why was she so fortunate to find a man to love her the way Gavin did? Father Jack had told her that love was God's domain. He dispersed it to those who earned it.\n\nIf that was the case, Alex was in God's good graces. The stories of the little things Gavin did for her. The spoiling, which always had Alex rolling her eyes, even when she talked about them, had Livy jealous. She saw the jealous looks from Krista and Brandy as well. No they didn't get the little things like Alex did. None of them did. Krista and Brandy doubted the stories, until Livy told them of the stunning choker she saw there at the condo.\n\n\"Ok,\" Alex asked as they peeled their coats off. \"So what are you doing about church?\"\n\n\"I have a church,\" Livy smiled.\n\n\"You do?\"\n\n\"I do,\" Livy nodded. \"I'm going to the Catholic Church in Averin. Father Jack has been counseling me about God, poker, and accepting who I am.\"\n\n\"Wait,\" Alex shook her head. \"You are going to a Catholic Church?\" She gasped in disbelief. According to their mother, the Catholics were actually worse off than non-believers! Livy nodded with a knowing smile.\n\n\"Does Mom know?\" Alex asked her, taking full note of the little smile on her sister's face.\n\n\"Are you crazy?\" Livy choked out in a soft laugh. \"Like I don't have enough trouble right now!\"\n\n\"Ok,\" Alex agreed. \"So Father Jack?\"\n\n\"Yeah,\" Livy nodded with a broad smile. \"He has been quite the lifesaver!\"\n\nAlex looked to her suspiciously. The mischievous grin creeping across Alex's face had Livy shaking her head. Whatever was going through her little sister's head wasn't good! She had been around her long enough to know, that her little grin meant some sort of smart ass remark was coming.\n\n\"What?\" Livy finally had to ask.\n\n\"You don't have some sort of Thorn Birds thing going, do you?\" Alex asked in a half tease referencing the popular book and TV mini-series starring Richard Chamberlain and Rachel Ward.\n\n\"What?\" Livy gasped and laughed at the same time. \"NO!\" she responded firmly. Her laughter had Alex raising her eyebrows at her.\n\n\"No,\" Livy said again getting her laughter under control. \"Father Jack has been fixing the holes in my faith.\" She assured Alex.\n\n\"So, he's not a zealot?\" Alex smiled.\n\n\"Oh, he's a zealot, but totally about God's love,\" Livy laughed.\n\n\"Poker?\" Alex asked.\n\n\"Yeah,\" Livy nodded. \"I'm getting pretty good at beating the holy men in my community.\"\n\n\"Explain,\" Alex demanded.\n\n\"All the preachers come to Father Jack's for poker night,\" Livy explained.\n\n\"No shit?\" Alex scoffed in disbelief.\n\n\"No shit,\" Livy repeated with a smile. \"They try and convince each other that they are better men of God than the others. All the while, I'm stealing pot after pot!\" Livy mimicked pulling in a large pot of money with both arms.\n\n\"You will go to Hell for stealing from holy men, you know that right?\" Alex giggled.\n\n\"Hey, I'm doing God's work,\" Livy defended. \"Holy men shouldn't gamble, I'm trying to show them the error of their ways!\"\n\n\"Hey Dad,\" Alex smiled as they found him at the table. \"Are you ok?\" She asked when he looked up at her. His face was a little ashen and he seemed to be having a bit of trouble breathing.\n\n\"Yeah,\" Al nodded. \"I'm fine! How much damage did you ladies do?\" He joked in reference to the shopping trip trying to divert the concern from him.\n\n\"We left a couple of stores still standing,\" Livy told him as she kissed his cheek. \"You look a little tired.\" She warned him. \"You coming down with something?\"\n\n\"Yeah, it's spring, maybe my allergies are kicking up,\" Al shrugged.\n\n\"Never bothered you before,\" Alex pointed out sitting down feeling his head for a fever.\n\n\"I'm not as young as I used to be!\" Al countered with a grunt.\n\n\"You are still my dad!\" Alex said proudly. \"Did you call Madelyn?\"\n\n\"I did,\" he frowned.\n\n\"Another one bites the dust!\" Alex teased in tempo with the popular song by Queen. \"Told ya, she is one tough hombre!\"\n\n\"That she is!\" Al nodded with a twisted frown. \"I would have thought she would have at least let me contribute! But nooooo, she was downright brutish!\"\n\n\"I'm sorry Dad, you are a tough cookie, but nothing compares to Madelyn!\" Alex sighed with a shake of her head thinking of all the arguments she had with the woman since they had met. Then the arguments Gavin had attempted.\n\n\"Any chance Gavin can help?\" Al asked hopefully. He wasn't comfortable with this unknown woman footing the bill for his daughter's marriage.\n\n\"Gavin has less sway than I do!\" Alex huffed. \"I mean, she looks on him like he is her son...she treats him that way...she will not break! I gave up trying.\"\n\n\"I just don't like her paying for all of it!\" Al groused.\n\n\"Dad,\" Alex shook her head. \"Trust me, once you see her place...you will realize, she can afford it.\"\n\n\"It has nothing to do with whether or not she can afford it!\" Al warned her.\n\n\"I know,\" Alex shook her head. \"But she has no kids, no heir to leave her fortune...Gavin is it.\"\n\n\"I'm not done trying,\" Al said firmly.\n\n\"Like losing do you?\" Alex teased. He glared at her as she kissed his cheek.\n\n\"When are you leaving again?\" Al smiled.\n\n***\n\nAlex was washing the dishes after lunch that she and Livy had prepared for the three of them. Marylyn walking in had Alex tensing slightly. She had promised herself that she would not argue with her anymore around her father. She knew it bothered him.\n\n\"Still here?\" Marylyn asked as she pulled groceries out of the bag and began to place them in the refrigerator.\n\n\"Am I not welcome here?\" Alex asked, her voice tight with her effort to keep her emotions in check. Her heart began beating harder in her chest. To keep from letting her mother goad her into another argument.\n\n\"This is your home,\" Marylyn said. Which Alex found didn't really answer her question.\n\n\"Mom,\" Alex said resting her hands on the edge of the sink. \"Do we always have to fight?\"\n\n\"You seem to like it,\" Marylyn told her continuing to put the groceries up.\n\nAlex turned to her with the edges of her eyes blurring with tears.\n\n\"Is that what you think?\" Alex asked her. The tremor in her voice caused Marylyn to look at her. She nodded seeing the tears.\n\n\"Why would you ever think that?\" Alex asked her.\n\n\"You do it so well,\" Marylyn pointed out.\n\n\"Because I had to learn how to,\" Alex told her wiping her single tear. \"I don't know why you don't love me.\"\n\n\"I don't love you?\" Marylyn gasped. \"Why am I fighting so hard to save you?\"\n\nAlex dropped her head. She thought about that statement. Her mother was trying to save her? Alex left her head down as she thought about that statement.\n\n\"What if you are wrong?\" Alex asked her softly.\n\n\"Wrong about what?\" Marylyn asked her sharply.\n\n\"All of it,\" Alex asked lifting her head. \"What if God doesn't want you to be the way your church says you have to be. What if, God only wants you to follow the one rule Jesus has set down? What if the rest of the Bible is just for guidance?\"\n\n\"What is Jesus's one rule?\" Marylyn asked.\n\nAlex walked over and put her arms around her mother. Marylyn stood there a moment in shock that Alex had done so before wrapping her own arms around her daughter.\n\n\"John chapter 13 verse 34; 'A new command I give you: Love one another. As I have loved you, so you must love one another.'\" Alex whispered within the embrace.\n\n\"What if, we aren't supposed to argue with one another that their belief is wrong? What if, we are just supposed to accept the person in front of us just as they are, no exceptions or demands of them? What if, God sent His Son to set the world straight and that we are only supposed to love one another. The sinner and the Saint? The liar and the faithful? The lost and the righteous? Gay or straight?\"\n\n\"Maybe the problems in the world can be solved by God's word...but we have to start with the one rule. The rule that Jesus lived day in and day out, from the prostitute He saved from stoning, to the thief He saved while they both were crucified? Even the love He showed for those who were murdering Him...He asked God to forgive them. Maybe that is all we are supposed to do?\" Alex leaned back. \"Love. Nothing else?\"\n\n\"My church has a mission to spread the word of God, to teach those who don't believe that God is great!\" Marylyn told her firmly pushing Alex's arms from her. \"Beware the wolf who comes in sheep's clothing!\" Alex dropped her head and nodded. Now she was being equated to the devil. The wolf. In her mind she thought of Gavin, the Wolf, but a wolf in every good sense.\n\n\"My Church will sing his praises on every street corner at the top of our lungs! We will rejoice at His coming and shed no tears for those we leave behind in the sewer of sinners in this world.\"\n\nAlex forced her smile to break her lips. She nodded as the tear rolled down her nose.\n\n\"Matthew chapter six; 'Be careful that you don't practice your religion in front of people to draw their attention. If you do, you will have no reward from your Father who is in Heaven. Whenever you give to the poor, don't blow your trumpet as the hypocrites do in the synagogues and in the streets so that they may get praise from people. I assure you, that's the only reward they'll get.\"\n\n\"I memorized that verse, because I love you,\" Alex said to her mother as she moved to the door. \"Your beloved Church is not of God, any church that purports the idea that they are above all...is not built on the foundation of Christ. A man who washed the feet of his disciples. A man who loved a woman he did not know and saved her from death. A man who forgave the very people who wished him dead.\" Alex turned to face her mother who stood there staring at the table in deep thought.\n\n\"Dad will walk me down the aisle at my wedding,\" Alex said firmly. \"I want you to be a part of it. If you want to be. But know this, this is my day. This is the day I prove to you that love is given by God himself...and He gave me Gavin. The man I love. The man I will bear children with. The man who loves me for all that I am. Both sinner....and saint.\"\n\n\"If you cannot be kind to those I love,\" Alex said her voice gaining strength. \"Do not come. I don't want you there. Mother...this is the end of me fighting with you. It is killing Dad inside to see us at each other's throat. So for my love for him, I will respect you and treat you the way he wants you treated. Not because you have earned it. But because he has.\"\n\nWhen Marylyn had gathered her breath back she looked to the door where Alex once stood but she was gone.\n\n***\n\n\"What did you say to Alex?\" Al growled at her as she sat over her coffee.\n\n\"Nothing,\" Marylyn said turning her eyes to him.\n\n\"Why is she leaving a day early then?\" Al barked as he rolled his head to relieve the stress building there. \"She said she wasn't leaving until Thursday!\"\n\n\"Your daughter doesn't want to be here,\" Marylyn said getting up and dumping her cold untouched coffee in the sink. \"She hates me, she hates my beliefs.\"\n\n\"So,\" Al gasped with a shake of his head. \"Is Livy next then? Going to push them both away?\"\n\n\"They make their choices,\" she told him with her back to him.\n\n\"No,\" Al disagreed. \"You are making those choices for them. In the end, you will lose it all.\"\n\n\"What?\" she turned angrily.\n\n\"I don't know what happened to my wife,\" Al said slowly. \"The woman I fell in love with, but it is obvious that she is gone. Am I next? If I disagree with your precious church, will you push me away?\"\n\n\"No,\" Marylyn gasped. \"I would never dream of such a thing!\"\n\n\"Oh, but you have,\" Al told her. \"The moment you pushed Alex away. Now it's Livy, next it will be me because I love them, and I will stand with them. Against your church. And now against you.\" Al grunted and pain washed through him and out his arm. \"One last thing, if you do anything to hurt Alex on her wedding...all you will have is your church.\"\n\nHe turned and left his wife with her bewildered look in the kitchen alone. The last statement left no room for interpretation. It shocked Marylyn to her very core.\n\n***\n\nAlex left early the next morning from her hotel, she drove all the way home in anger mixed with sadness. Her mind relived the whole scene. The words, the way her mother pushed her loving embrace away. The coldness in her mother's eyes. Alex could tell, she was dead to her mother for all intents and purposes.\n\n\"Good evening, Ms. Lasko,\" Mike said from the counter as she walked in. Alex forced a smile but said nothing as she walked to the elevator and waited for it.\n\n\"Are you ok Alex?\" Mike's voice came again. She looked to him and nodded, he watched her. She then thought of it, was this the first time he had called her by her first name? It was always the formal address before.\n\n\"Yes, Mike, thank you for asking,\" she said for her first words, but even the sound of her voice betrayed her true feelings.\n\nShe stepped on the elevator and pushed the button for her floor. The doors closed and Alex let her head drop and the tears came. She tried to stop them but they came anyway. With a shaking hand she struggled to open the locked door of the condo. After trying multiple tries she was able to open it.\n\nGavin was gone and that made her cry harder, she needed him now. She needed his arms around her. His voice to soothe her, to assure her that it was going to be alright. Then she remembered. She wasn't supposed to be back until Friday. He wasn't even expecting her today.\n\nShe walked into the spare room which was converted back into her studio. She saw the easel there and walked to it. Placing a blank canvass on it she stared at it for a few seconds. Pulling her paints out, she began working feverishly. She didn't even bother with putting on her protective clothes to keep the paint off her dress.\n\nColors of red and orange, splashes of black. Her brush ripped the colors on, bursting in her anger. The angry face of the one woman that shouldn't be so hateful towards her. The tears streaked down Alex's face. The outline of her mother appeared in the fire, Alex slowed to get the eyes right. The eyes she saw yesterday. The cold unloving eyes that cut her to the bone.\n\nAlex stepped back after a couple of hours, the colors said it all. Her anger. Her pain. Her burgeoning hatred. The sadness, it all erupted within her like a volcano. She stared at the picture of her mother, wrapped in flames of red and orange. It looked like Marylyn was on fire, it wasn't conscious in Alex's mind, but there it was. What her heart was feeling.\n\nRage took control, she grabbed the newly painted inferno and smashed it violently across the easel breaking both. She continued to slam the portrait of her mother into bits on the floor, her hands gripping so tightly that the splinters from the wood dug into her skin causing her to throw the demolished face into a pile with the easel.\n\nShe collapsed onto the floor in a fit of tears, the paint she was using now all over. It was on the floor, which was covered in the heavy tarp, there was some on the walls but mostly it was on her. Mixing with her blood which oozed out of the wounds left when the wood ripped her flesh from her hands.\n\nFrom the corner of her eye she saw him and closed her eyes while on the floor. Her tears streaming down her face. She looked to him, Gavin, as he sat in the chair by the door. His legs crossed comfortably over one another. His hand propping up his chin. His dark eyes watching her. His face blank.\n\nShe crawled on the floor to him and rested her weary mind in his lap. His hand coming to her hair and stroking it gently. She clutched his leg with her arms as she cried into his pant legs, drowning the fabric with her tears, her paint and her blood.\n\n\"I've lost my mother,\" Alex said when she could speak.\n\n\"Only if you give up on her,\" Gavin said softly.\n\n\"She doesn't love me,\" Alex countered.\n\n\"Hate cannot defeat love,\" Gavin whispered. \"It never has...it never will. Love conquers all.\"\n\n\"Please be right,\" Alex sobbed as she buried his face into his leg.\n\nGavin slipped from the chair and sat with her on the floor. He put his arms around her and held her tightly. Letting her cry with no more words.\n\n***\n\nChapter 43\n\nAlex sat in the tub, her head down, the hot water warmly enveloping her. Soothing her. Gavin sat on the outside of the tub in a chair, his face scrunched up as he picked at the splinters in her hand that came from her symbolic destruction of her mother. She winced from time to time, as he pulled out a sliver.\n\n\"What do I do?\" Alex finally asked him from her trance like state.\n\n\"What makes you think you have to do something?\" he asked back never moving his eyes from the task at hand.\n\n\"She is poisoning everybody with her puritanical bullshit!\" Alex told him firmly.\n\n\"Who are you to judge?\" Gavin asked lifting his eyes.\n\n\"What?\"\n\n\"Listen to yourself, you want her to accept your way of thinking, but not willing to follow your own advice,\" Gavin pointed out. \"It is not your job to point out other people's flaws. Your job is to either accept them as they are...or cut them from your life. There is no middle ground, if you try to find that middle ground you get to the point where you are slamming yourself, twisting yourself into knots.\"\n\nAlex thought about that. Holy shit. She couldn't believe her own hypocritical actions.\n\n\"Do you think I'm wrong?\" Alex asked him.\n\n\"That is not important, who is right? Who is wrong? There is no right or wrong. There just is. What is right for you, isn't right for your mother. What is right for your mother isn't right for you. Finding someone to blame is what is driving you apart,\" Gavin said putting the tweezers down.\n\n\"How long were you sitting in the chair?\" Alex asked him.\n\n\"I was home twenty minutes after Mike called me,\" Gavin sighed.\n\n\"Mike called you?\" she asked him sorrowfully.\n\n\"He was worried about you,\" he pointed out. \"He called and said he felt you were upset.\"\n\n\"I came home and saw you painting, the look on your face...the body language...the colors you were using. They all screamed the same thing, you were angry. I know your art is therapeutic, so I left you alone,\" Gavin stood and went to his bag and pulled out antibiotic ointment and gauze wrap. He sat down and continued taking care of her wounds.\n\n\"But let me make one thing perfectly clear,\" Gavin said with his jaw locked as he continued to tend to her medically. Alex swallowed hard, the tone he was using was enough. \"You are never to injure yourself again, you...all of you...belong to me and I will not have what belongs to me damaged. If you need to throw a temper tantrum find an outlet that doesn't damage what I own.\"",
        "He looked at her without lifting his head and she saw the smile. He meant it, but not in a harsh way.\n\n\"Yes Sir,\" she whispered back. \"I am sorry.\"\n\n***\n\n\"Are you and Mom alright?\" Livy's voice caused Al to turn.\n\n\"Yes,\" he said turning back around to keep the lie from her.\n\n\"Try again,\" Livy demanded.\n\n\"Your mother and I are fighting,\" Al said. \"It's nothing new, after all these years we have a right to fight!\" He turned and winked at her. \"Don't you agree?\"\n\n\"That depends on why you are fighting,\" Livy said coming to him. \"I'm sorry that it's me.\"\n\n\"It's not you,\" Al said firmly. \"It's us, this has nothing to do with you.\"\n\n\"I love you Dad, but you are so full of it!\" Livy smiled. She appreciated the effort he was giving to try and protect her. \"If I hadn't gotten a divorce..,\"\n\n\"You would have been miserable,\" Al cut her off. \"That would have made Nora miserable, which in turn would have bled into everything else!\" He turned and put a hand to his daughter's face.\n\n\"This is my fault,\" Livy said again.\n\n\"No, it's mine,\" Al told her sharply. \"I let her push one daughter away with her religious bullshit with me on the sidelines. To this day I haven't forgiven myself for my silence. I won't make that mistake again. No matter what that entails.\"\n\n\"Dad,\" Livy let the tear fall. \"Don't...I'm not worth losing everything you have worked so hard for. All the years of marriage...I'm just not worth it!\"\n\n\"Bullshit,\" he said firmly. \"You are worth it all! You deserve it all, like Alex has. She has a good man, a timeless love. You deserve that as well. What you did took incredible courage! Incredible sacrifice! No, this fight should have been had years ago, I just lacked the courage.\"\n\n\"But your marriage is important!\" Livy cried. She could feel the decision was made on Al's part. His line in the sand was drawn, and it was drawn around her. Would he end over thirty years of marriage because of her?\n\n\"My marriage will live and die with your mother,\" he told her. \"She must decide, her church or me.\"\n\n\"Dad, don't!\" Livy begged.\n\n\"It's already been done,\" Al exhaled deeply. \"Now...well now she must decide.\"\n\nLivy clutched at her father as she cried into his chest. His Old Spice attempting to comfort her through her tears. She was now jeopardizing two marriages. Her own now failed marriage, and because of it, her parent's.\n\nAl shooed her into the house so he could finish working on the mower. He needed to get it ready for the mowing season. She hesitated at the door, but went in. Her mother was at the table with her Bible and her preacher, Rev. Sellers.\n\n\"Good afternoon, Olivia,\" Rev. Sellers said as he held her mother's hands.\n\n\"Good afternoon,\" Livy said back looking at her mother. \"Is everything alright?\"\n\n\"You mean besides the fact you have destroyed your marriage? Besides the fact my youngest daughter doesn't want me at her wedding? Besides the fact my husband is forcing me to choose between him and my faith?\" Marylyn snapped.\n\nLivy lowered her head.\n\n\"I hope you are satisfied with yourself,\" Marylyn told her harshly.\n\n\"What?\"\n\n\"Because of your selfishness, the devil has entered our lives to destroy us!\" Marylyn barked angrily. \"You opened the door for him, invited him in and now look at the damage he has caused. All because of your selfish desires to divorce!\"\n\n\"That's not fair,\" Livy said softly.\n\n\"What's not fair,\" Rev. Sellers told her angrily. \"Is that you have opened yourself up to temptation and now the infection has metastasized into all of your lives.\"\n\n\"What about Don?\" Livy asked him. \"Have you said anything about his sin?\"\n\n\"Don has been forgiven,\" Sellers told her. \"He paid his debt to God and the Church.\"\n\n\"He has gotten another woman pregnant! A woman who was not his wife!\" Livy growled the tears flowing down her face.\n\n\"What he did was not a sin,\" Sellers told her. Livy's jaw dropped. \"Even Abraham had multiple wives. In second Samuel, God says that if David's wives and concubines were not enough, He would have given him more!\"\n\n\"Are you saying polygamy is ok?\" Livy gasped.\n\n\"I'm saying God does not punish men for taking multiple women,\" Sellers told her. \"Perhaps if you would have done your wifely duties to his satisfaction, Don wouldn't have had a need to seek it elsewhere!\"\n\n\"You have got to be fucking kidding me!\" Livy gasped, her brain fighting with itself to understand what was being said. Because what was being said surely wasn't being said! This must be some sort of nightmare. To have her mother and her former preacher telling her that it was ok for Don to take multiple women. That it was her fault for her mother's unhappiness as well as Don's unfaithfulness.\n\n\"Get out of my house!\" Marylyn barked, standing up suddenly. \"Take you sin and your devil and never come back! How dare you speak to my guest in my home like that?\"\n\nLivy's lower lip trembled as she looked to her mother. She was shocked into her frozen state.\n\n\"I said get out!\" Marylyn said again. Livy left in a run, her hands shaking as she started her car and sped off.\n\n***\n\nFather Jack opened his door to a crying mess. Livy nearly collapsed in his arms and he had to half carry, half drag her into the residence. Livy struggled with her breathing and with her tears as she retold what had happened.\n\n\"Jesus Christ,\" Jack gasped. He tilted Livy's head up. \"Listen to me, the problem isn't with your mother. I thought perhaps she was just misinterpreting God's word...but now I know. This has nothing to do with your mother. This has to do with her spiritual leader!\"\n\n\"What?\" Livy asked him.\n\n\"I am responsible for my flock,\" Jack told her. \"If they fail, the fault isn't their own, its mine and I will answer for it! I must lead my flock with the true word of God. This man, your mother's spiritual guide...he is no better than David Koresh! He is using God's word to twist and turn his children against God himself!\"\n\n\"Then why is it in the Bible? Does God say men can do that?\" Livy begged for clarification.\n\nFather Jack stood and nearly flipped his coffee table over as his temper was oozing out. Livy watched him go to the window and stand there for a few moments not saying anything at all.\n\n\"We are not Hebrew,\" Father Jack finally said. \"You cannot take one book and separate its rules from the new book!\" He turned around. \"Only the Israelites are to follow the Old Testament alone...Christians must follow Christ!\"\n\n\"In the Bible, the Old Testament allowed that. The first instance of polygamy was in Genesis...Lamech married two women.\" Father Jack turned around. \"Yes Abraham, Jacob David and Solomon all had multiple wives. But again, only the Hebrew follow the Old Testament exclusively. In the New Testament, Timothy and Titus describe marriage as the husband of one wife.\"\n\n\"So he is wrong?\" Livy asked.\n\n\"In the beginning there was only Adam and Eve. Not Adam and Eve, and Jessica, Stacy, Lucille, Janet or any combination thereof!\" Jack said smiling. He came back and sat with Livy. \"Marriage, is of one man and one woman. The vows are very specific. 'Forsake all others'.\"\n\nLivy fell into him and he hugged her firmly.\n\n\"The problems with that church reveal themselves,\" Jack whispered. \"It is led by an immoral man, the roots. If the roots are decayed, the tree will be decayed.\"\n\n\"How do I save my mother?\" Livy asked him.\n\n\"I don't know,\" Jack admitted. \"This will sound harsh, but...I don't care about your mother. You are in my flock. You are my charge. I will do whatever I can to help you in your times of need, but I will not try to save those who do not wish to be saved.\"\n\n\"Thank you Father,\" Livy smiled enjoying his embrace. \"Why are all the good men taken?\"\n\n\"What do you mean?\" Jack asked swallowing hard.\n\n\"My sister Alex found a great man, here you are, another great man...taken,\" Livy whispered. He didn't respond.\n\nInstead he held Livy and after a few moments she began to think of something Alex had joked about. Thorn Birds. She sat up quickly.\n\n\"I'm sorry Father,\" Livy said as quickly as it popped into her head.\n\n\"For what?\" Jack asked her confused at her sudden distance.\n\n\"I'm being inappropriate,\" Livy told him. Jack shook his head.\n\n\"How?\" He asked her.\n\n\"I've got to go,\" Livy left hurriedly leaving Jack on the couch.\n\n***\n\n\"What happened to your hand?\" Alex cringed as soon as the question left Madelyn's lips.\n\n\"A temper tantrum,\" Alex admitted turning to the woman in the doorway.\n\n\"Has Gavin seen it?\" she asked. Alex nodded. \"Are you ok?\" Again she nodded.\n\n\"Family problems,\" Alex told her.\n\n\"Your mother?\" Madelyn asked point blank. Alex looked up at her and stared for a moment before nodding. \"Is she angry that I want the wedding here?\"\n\n\"No! Nothing like that! She believes I am the work of the devil,\" Alex told her. \"That I have infected my sister into a divorce.\"\n\n\"The fucker that knocked up another woman had nothing to do with it?\" Madelyn hissed as she sat down. Alex blurted out a laugh at the venom. She shrugged.\n\n\"My mother felt Livy should have stayed with him, not gotten a divorce. She said it looks bad in their church,\" Alex whispered as she flipped through the bridal magazine.\n\n\"Hmm,\" Madelyn sighed. \"What does she say about your proclivity for kinky sex?\" Alex laughed heartily. \"I see, she doesn't know!\"\n\n\"No way, no how!\" Alex laughed.\n\n\"Well, I guess I'll have to eliminate the whips and chains room!\" Madelyn said seriously as she wrote it down on the note pad then drew a firm line through it. Alex looked to her with her jaw open. Madelyn winked at her that she was kidding.\n\n\"I want to throw you an engagement party,\" Madelyn told her as she took a sip of her tea.\n\n\"No, that is not necessary,\" Alex shook her head. Madelyn dropped her head down to the table exasperated.\n\n\"Are we going to have to go through all this fighting...again?\" the elder woman asked.\n\n\"No,\" Alex laughed at her demeanor.\n\n\"I want to meet your family,\" Madelyn told her lifting her head. \"I want to meet your friends. I want to make sure everybody knows just how happy you two are. I want the world to see what love is!\"\n\n\"Yes Mistress,\" Alex said with a shake of her head.\n\n\"I like this new Alexandria,\" Madelyn smiled. \"Less argument!\"\n\n\"That's only because I know it's a losing fight,\" Alex told her with a kiss to the woman's hand.\n\n\"I was married a long time Dearie, I know how to win a fight!\" Madelyn smiled. She stared at Alex for the longest time. Alex saw it but said nothing at first.\n\n\"Problem?\" She finally had to ask.\n\n\"You really are quite spectacular,\" Madelyn smiled. \"I knew it that first night. There was something about you...something I couldn't place.\"\n\n\"Really?\" Alex scoffed.\n\n\"I have watched him over the years,\" Madelyn said with a tear in her eye. \"I have watched Carla's infection of him with a disease of sadness and fear and knew that there was only one cure.\"\n\n\"What cure was that?\" Alex asked.\n\n\"You,\" Madelyn replied plainly. \"You are a walking, talking cure of broken hearts.\"\n\n\"Whatever,\" Alex shook her head.\n\n\"No,\" Madelyn said firmly. \"Not 'whatever'. You saved his life, and mine.\"\n\n\"How did I save yours?\" Alex asked her.\n\n\"By reminding me of what I had,\" Madelyn smiled. \"Reminding me that love is truly a gift...I wanted Gavin to find it, so I could see the transformation.\"\n\n\"What transformation?\"\n\n\"From cold, unfeeling doctor,\" Madelyn said softly. \"To warm, loving man. He was so gifted with his abilities, but he hid behind them so well! All his relationships became a patient. He giving his best, but leaving himself distanced enough to be unemotional.\"\n\n\"Then you came along,\" Madelyn laughed as she relived that first night, their first meeting.\n\n\"Elizabeth brought me in to replace her,\" Alex shrugged.\n\n\"Do you think, for one moment, that Elizabeth made the choice?\" Madelyn asked.\n\n\"Of course,\" Alex said to her.\n\n\"Do you think you were the only girl Elizabeth tried to bring in?\" Madelyn gasped. Alex nodded. \"Oh please! That girl was looking for her exit for months! Gavin turned down each and every pet she tried!\"\n\n\"What?\" Alex asked, the shock causing it to be a whisper.\n\n\"Oh yes! Elizabeth tried multiple different pets! Kelly for one, Julie for another. There were several girls that Gavin rejected,\" Madelyn told her. \"We talked about it, he knew Elizabeth wanted an out, she was looking for it. He also knew she was using as well.\"\n\n\"So why did he not turn me away?\" Alex asked her.\n\n\"Because, you are radiant! You are the absolute example of perfection!\" Madelyn told her. \"It radiates off you, any Dom can see it! That your submission is the greatest of gifts! That you are one to experience. That you are one in which other subs will be measured!\"\n\n\"I wasn't even in the life!\" Alex argued.\n\n\"Doesn't matter,\" Madelyn laughed. \"That moment I first laid eyes on you...I knew. I knew then that we would be sitting here talking about a wedding!\"\n\n\"How?\"\n\n\"By the way he looked at you my Dear,\" Madelyn told her as she took her hand. \"The way his breath caught in his chest when you smiled. The way his lips curled at the edges when you were near. The way he watched you walk around the party. Memorizing your every move, your every angle.\"\n\n\"And I knew with every stolen glance by you towards him,\" Madelyn continued. \"The way when you were close to one another, you acted like your bodies were drawn to one another like a magnet to metal.\"\n\n\"I have known every sub,\" Madelyn smiled. \"None held the power over that Dom. Make no mistake, you claim to be the sub. But there is no way! That magnificent Dom now bows to you!\"\n\nAlex sat back and looked at her. It was normal for Madelyn to gush praise on her, she was used to it. But this was different. Normally it was praise on her looks or her abilities to be a sub. This was about her. The relationship she now held with Gavin. This wasn't about how her body looked in a dress. Or the way she wore her makeup. This was more than that.\n\n\"Now,\" Madelyn continued. \"I'm thinking a week from Saturday?\" Alex nodded.\n\n\"I'll call home,\" Alex pulled her phone to her and dialed her Dad's number. He was thrilled at the idea, he also wanted to meet Madelyn and argue with her in person. He assured her that he would make sure everybody was there.\n\n***\n\nChapter 44\n\n\"I've got it Charles,\" Alex told him as she went for the door. He nodded and waited at the staircase.\n\n\"Hey!\" Alex smiled broadly as Al stood there. He hugged her warmly. \"Hey,\" she said to Livy who hugged her as well.\n\nShe nodded to Ken and Krista, as well as Brandy and her husband Jeremy. Trevor was proudly displaying his Penguins jersey and Nora rushed and jumped into Alex's arms.\n\n\"Miss me that much?\" Alex asked as she held Nora tightly.\n\n\"Yes!\" Nora squealed. \"Sir Charles!\" she yelled in Alex's ear. She let the girl down and she ran to Charles who bowed formally at her.\n\n\"Good afternoon, Princess Nora!\" Charles smiled from his bow.\n\nAlex looked and didn't see her mother. She looked to her father who nodded at her.\n\n\"It was my doing,\" he said quietly. \"Not hers. I told her to stay home.\"\n\n\"Why?\" Alex asked immediately.\n\n\"Because, this is about you,\" Al told her. \"When she figures that out, then she can become a part of it. I will not allow her to hurt you, or taint your day. Never again.\"\n\n\"Dad,\" Alex whispered as she put her face in her hand.\n\n\"Trust me,\" Al smiled as he lifted her chin. \"Now is your future husband here?\"\n\n\"No,\" Alex shook her head. \"He had to go to the hospital.\"\n\n\"Damn,\" Al groused. \"I'm gonna need a cut man, if I'm going fifteen rounds with Madelyn!\"\n\n\"You'll be done like a fight in Tyson's prime. First round knockout!\" Alex teased.\n\n\"Maybe,\" Al nodded. \"But even Mike Tyson got knocked out by Buster Douglas! Just need my shot!\"\n\n\"Wow,\" Alex drawled trying to put the distaste of her mother not coming out of her mouth. \"You really are glutton for punishment, aren't you?\"\n\nJust then Nora shrieked as Madelyn came in from the library.\n\n\"Queen Madelyn,\" Nora said bowing to her.\n\n\"My little Princess!\" Madelyn smiled kissing Nora's cheek. She took the girl by the hand and walked to Alex's family.\n\n\"Good afternoon,\" She said warmly. Her eyes searching for the one woman she was looking forward to destroying. She then smiled at Al when she realized Marylyn wasn't in the group.\n\n\"Mrs. Faultz,\" Al said narrowing his eyes playfully which caused Alex to laugh.\n\n\"Mr. Lasko,\" Madelyn gave back. \"Ready to lose again? Alex warns me that you still think you are going to contribute to this?\"\n\n\"I am going to contribute!\" Al said forcefully.\n\n\"Just like all men, thinking they are in charge!\" Madelyn teased which made them all laugh. \"Charles, take their bags to their rooms, while Al and I start round two?\"\n\n\"We are staying at a hotel,\" Al told her.\n\n\"No, you are not. You are staying here, with Alex and I, so that we can get the wedding planning done without a bunch of travel time wasted,\" Madelyn told him. She waved her arm to the dining room and the group followed her.\n\n\"Down goes Frazier!\" Alex teased her father.\n\n\"I'm using the Rope-a-Dope,\" Al glared at his daughter.\n\n\"She is Ali, you are the sparring partner!\" Alex warned him.\n\n\"No faith?\" Al gasped.\n\n\"Faith can move mountains, but Maddy? Not a chance!\" Alex said tucking her arm into Al's and guiding him toward the dining room.\n\nThey ate and laughed together. Madelyn and Al argued with smiles. Alex loved it, she was only reminded from time to time that her mother wasn't there when she looked around and didn't see her there.\n\n\"Uncle GAAAVIINNNN!\" Nora screamed as she ran from the table to him and he scooped her up lovingly and hugged and kissed her. He carried her to the table and kissed Alex gently on the lips causing her to blush at the way he was looking at her.\n\n\"Losing again Al?\" Gavin smiled while staring at Alex.\n\n\"This woman is impossible!\" Al growled at him.\n\n\"Try living with her!\" Gavin gasped as he put Nora in her seat and kissed Livy on the cheek. He shook hands with the rest of the family and then kissed Madelyn lovingly.\n\n\"Where are we at?\" Gavin asked as he sat next to Alex.\n\n\"Well, Dad had her on the run early...talking about how it's the bride's family that is supposed to be the one's paying for it...it was tradition!\" Alex said looking at Livy.\n\n\"Then Maddy threw a roundhouse right into Dad saying 'come into the twenty first century with the rest of us',\" Livy teased as Al looked on in shock that his daughters were enjoying their argument, giving a humorous play by play account of the lost battle.\n\n\"Dad was staggered momentarily,\" Alex said dropping her head and moving it side to side as they did the hilarious play by play. \"Tried to connect with an uppercut of 'she is my daughter', missed completely and Madelyn slammed an overhand left to his available jaw with 'she is about to be my daughter too!'\"\n\n\"Are you done?\" Al said glaring at the two. They looked to one another and laughed as they nodded.\n\n\"Yeah, that is pretty much it,\" Alex nodded. \"We had to give Dad the standing eight count.\"\n\n\"Loser,\" Gavin smiled. \"Al, the chick is just too good at arguing! I haven't won a fight with her in years, and I knew her husband, and he never won a fight either!\"\n\n\"So I should just give up?\" Al asked him. \"Not help out with my daughter's wedding?\"\n\n\"No, you can help...I'll even let you decide how you are going to help,\" Madelyn smiled putting her wine glass down. \"Your daughter indicated you were to walk her down the aisle...well if you want, I'll change jobs with you. You pay, and I'll walk her down the aisle. I mean, fair is fair, I want to be a part of her special day as well!\"\n\n\"You are out of your damn mind!\" Al laughed. \"I'm walking her!\"\n\n\"Then it's settled, you have your job, and I have mine!\" Madelyn said firmly.",
        "\"Boom!\" Trevor, Krista's son laughed, while he stood from the table to indicate a knockout with a wave of his arms like a referee would.\n\n\"Walked right into that one, didn't I?\" Al said smiling at Madelyn.\n\n\"Winner and still champeen!\" Gavin laughed lifting Madelyn's hand.\n\n\"Wow,\" Al groused as he looked to Alex with a wink. \"Back to the drawing board.\" Alex blew him a kiss from her fingers for his losing effort.\n\n***\n\nEven though Madelyn had assured her that no one would let on to her secret, Alex was still nervous someone would make a comment about the lifestyle. Something as innocent as \"who is your sub or Dom\" would cause her to reel in embarrassment.\n\n\"Why are you so nervous?\" Gavin finally had to ask.\n\n\"What if someone goes up to Livy and asks about her owner?\" Alex gasped.\n\n\"This is not a lifestyle party,\" Gavin chuckled shaking his head.\n\n\"These people are in the life, are they not?\" she asked.\n\n\"Some are,\" Gavin nodded. \"Look, when Madelyn throws a party the invitation spells out it's a lifestyle party so everybody is on the same page. The invitation for this party was only for our engagement.\"\n\n\"So nobody is expecting kink?\" Alex asked as her worry dropped.\n\n\"There are kids present,\" Gavin pointed out with a mock look of shock. \"So no, we may have fiendish tendencies but we are not fiends!\" Alex shook her head at him for his laughter.\n\n\"You're not helping,\" Alex warned him.\n\n\"Wasn't trying to,\" he pointed out pulling her into a hug.\n\n\"Look, we enjoy our lifestyle but we don't advertise,\" Gavin told her. \"What we do behind closed doors is our business, nobody else's. So relax.\" She nodded into his chest.\n\nAlex had to show the ring to everybody, it was the first thing they would say to her, 'show me the ring'. She was happy to of course. Many would awe, most would shake their heads and congratulate her on landing the one guy they assumed would be a bachelor his whole life.\n\nGavin was standing with Ken when he saw her and his stomach flopped. What was Elizabeth doing here? So much for a festive night. His mood soured as she looked through the thong of people before her eyes fell on him. He stared at her for a moment before walking over to her. She met him halfway across the back yard.\n\n\"Good evening Elizabeth,\" Gavin said somewhat sociably. Trying to contain both the disappointment and the anger of her being here.\n\n\"Gavin,\" Elizabeth returned in a near growl.\n\n\"How are you doing?\" he asked her looking over her beleaguered appearance.\n\nShe was thin, her eyes sunken and dark. Her body trembled slightly as she stood with him. She was sniffling and her nose seemed raw around the edges like she had a bitter cold even though it was early summer. She started to scratch at her skin and he stopped her. All were telltale signs she was abusing. He felt her shake under his touch. He wondered if that had to do with her anger, which was radiating off her, or the drugs.\n\n\"You look surprised to see me,\" Elizabeth pointed out.\n\n\"In all honesty, I am,\" Gavin told her with a frown.\n\nHe shook his head, gone was the beautiful woman that served him. It appeared her new master didn't care about her appearance. Then again, drugs cared about no one, and everything about Elizabeth's appearance screamed her new Dom was drugs.\n\n\"Glad I can still surprise you,\" she snapped, she saw it in his eyes he was disappointed and even though she was no longer his sub she still felt the duty to please him. She waited for him to correct her. Deep down she wanted him to punish her for her attitude like he used to do. But it didn't come, instead came his apathy, something she knew he would do to keep himself from caring about anything.\n\n\"What do you want?\" he asked her, his dark eyes sharpening on her.\n\n\"Just to congratulate you two!\" she told him looking around for Alex. The sarcasm and venom dripped off the words. \"I am a little hurt as I must have missed my invitation!\"\n\n\"You weren't invited,\" Gavin said pointedly.\n\n\"Why?\"\n\n\"Because you are train wreck,\" he sighed. \"This is for Alex...she doesn't need your drama.\"\n\n\"This is for Alex? What about you?\" she asked.\n\n\"I'm happy as long as Alex is,\" he told her looking to the ground.\n\n\"You know,\" Elizabeth moved into him. \"If I would have known marriage was on the table for you, I would have tried harder!\"\n\n\"It was never on the table for you,\" Gavin said lifting his eyes. \"Our relationship was based on exactly what we both wanted. You were never marriage material.\"\n\n\"Why?\"\n\n\"Because you only love yourself,\" he told her knocking the wind out of her.\n\n\"I was a damn good sub,\" she defended.\n\n\"Only when it suited you,\" he shot back. \"Like the drugs...and the other men.\"\n\n\"Royce raped me,\" she snarled, she didn't know how he knew but he knew evidently.\n\n\"And the Senator in California? Did he also rape you?\" Gavin asked. The breath left her. \"How about the Congressman from Washington? I mean if every guy you meet rapes you I have to wonder what your definition of rape is.\"\n\nThe words were like blows from a two by four. She lost sight of him as her eyes blurred with tears.\n\n\"How did you know?\" she asked him looking to the ground.\n\n\"How could I not know?\" he asked her back. \"Everything you have done, or are doing has only been for you. That is why marriage was never on the table for you. In a marriage you aren't thinking about you as an individual, you are thinking about the other exclusively. You never concerned yourself with me unless you were with me, then the service was still about what you wanted. I was a tool that you used to meet some gratification. A dildo if you will.\"\n\n\"Oh and your precious little Alex doesn't think about herself? She is only obeying you right?\" Elizabeth barked. \"I heard she doesn't listen like a sub should! Doesn't obey you!\"\n\n\"What Alex does or doesn't do for me is not your concern,\" he told her coldly. His eyes matching his voice.\n\n\"I hear she even got pneumonia because of her disobedience. I hear she didn't service you while she spent hours on her precious little wall of fame! Chasing her own selfish dreams and not serving or satisfying you!\" Elizabeth pointed out.\n\n\"You're wrong, even in those things, it wasn't because of her selfish desires,\" he said calmly with an exhale.\n\n\"How is that? She didn't obey you?\"\n\n\"Alex got pneumonia because she was more concerned about her kids she was teaching than herself, the wall? That had absolutely nothing to do with her! That had everything to do with honoring her father! She wanted that wall to show her father that his love of art carried on through her!\" Gavin laughed humorlessly as he was trying to explain a concept that Elizabeth would never be able to understand. It wasn't in her nature to.\n\n\"Nothing Alex does is for Alex. It is all for someone else!\" Gavin growled. His anger bubbling as he stepped closer to Elizabeth.\n\n\"No, Elizabeth, you have no concept of what Alex does because it is not in your personality. You do drugs to make yourself feel better, you brought Alex to me so you could leave. You hooked your wagon to Royce so you could have a shot at the White House. The glory of such a prize! You. You. You,\" Gavin shook his head as he gathered his composure.\n\n\"You and Royce deserve each other. You are both only concerned about yourselves. At least in your relationship, nobody will get hurt thinking the other cares for them, because you both know you don't.\"\n\n\"I know one thing you can't deny,\" she told him stroking the side of his face which he knocked away. \"I fucked you well.\"\n\n\"That's right, we fucked,\" Gavin nodded. \"No emotion, no caring, we fucked...cold, unfeeling fucking. I could pay a prostitute for a fucking, and it would be good too.\" Elizabeth gasped that she was compared to a prostitute.\n\n\"See that is the biggest difference between you and Alex,\" Gavin said trying to reel in his anger. \"You gave me what I wanted...Alex gives me what I need.\"\n\n\"It took Alex to show me the difference in fucking and making love. It took Alex to teach me that unless I loved myself, I couldn't love another. We may have a Dom/sub relationship, but I have found with Alex in my life, that those roles are interchangeable. While she openly serves me in the lifestyle. I willingly submit myself to her love.\"\n\n\"Excuse me,\" Charles' voice interrupted. \"I'm sorry Miss Elizabeth, but this party is by invitation only. If you will follow me?\"\n\n\"You should go,\" Gavin told her. \"Resist your impulsive desire to please yourself by making a scene and ruining something beautiful.\"\n\n\"That hurts,\" she told him. \"I hoped we could be friends.\"\n\n\"You chose your friends,\" Gavin told her stepping away. \"Drugs, Royce and his wannabe ambitions.\"\n\n\"Royce is going to be something,\" she snapped stopping him. \"He is going to be the most powerful man in the world!\"\n\n\"First off, the President of the United States is a puppet, bound by so many laws and rules he is virtually no different that the Queen of England. A face to put with a country. And Royce will never make that step...his skeletons will haunt him and cause him his downfall!\"\n\nGavin walked away from her and the party. Making his way towards the stables to get himself under control. His anger was spewing from him as he slammed the door and threw a nearby chair across the barn smashing it into bits, causing the horses to jitter in their stalls. His temper of old was back and before he knew it, he punched a hole in the nearby drywall, causing pain to radiate up from his hand to his shoulder.\n\nHe shook his hand angrily, shaking the tingling from it. It had been a long time since his temper ruled him as it was now. He was unhappy of its return. Seeing Elizabeth in the same stages as Carla brought his unwelcome friend back.\n\n\"She is not your concern,\" he told himself in the barn, flexing his hand. \"You can't save her any more than you could Carla. Some people are just beyond saving!\" The words he said aloud held no comfort for him. They were hollow, and the darkness of the depression he had during Carla's demise threatened its return.\n\nHe was there for nearly twenty minutes before the opening of the door told him he was no longer alone.\n\n\"Are you ok?\" she asked him.\n\n\"Yes, Little One,\" He smiled while he stroked the horse in front of him. \"I am fine.\"\n\n\"Liar,\" Alex told him coming up alongside him. \"I saw Elizabeth talking to you, is everything alright?\"\n\n\"She just wanted to congratulate us,\" he smiled.\n\n\"God you suck at lying,\" she sighed. He said nothing as he looked to the steed in front of him. Afraid of turning to her to reveal the pain in his eyes.\n\n\"Any regrets?\" she asked him, wondering if he still thought of Elizabeth and the pleasure she brought him.\n\n\"Yes,\" he nodded. The air was sucked out of her as he turned to face her. \"I regret I didn't find you sooner. All those wasted years I could have spent with you...I regret I can't give them to you.\"\n\n\"The things you say!\" she smiled touching his cheek. He closed his eyes and melted into her soft hands. Submitting to her love.\n\nAlex watched the anger melt from his face at her touch. That made her happy. In his darkest, she could pull him out. His eyes opened and his secret smile came out.\n\n\"Something I can do to please you, Sir?\"\n\n\"I have been pleased,\" he smiled. \"Ever since I laid eyes on you at the coffee shop. The moment I wondered what you would feel like beneath my fingers. The mere thought of your flesh beneath my hand makes me hard.\"\n\nAlex lifted her hand and placed it on the outer portion of his pants. She felt him and smiled.\n\n\"How shall I please you Sir?\" she asked him.\n\nHe led her to a nearby table set up for working on saddles and lifted her and placed her on it. She let her smile come out showing him she was pleased. She watched him, his firm hands told her not to help, he was doing what he wanted and she was just to enjoy.\n\nHe ran his hands up her outer thighs, when his hands hit her hips he realized something.\n\n\"No,\" she smiled as she realized he came to the knowledge. \"No panties.\" He arched a brow at her.\n\n\"I was hoping for a moment like this!\" she admitted. He nodded. He let his hands slide under her and lift her pulling her to the edge. She let her fingers tug on his belt pulling it loose, her excitement building causing them to shake.\n\nThe air around them filled with excitement. Both of the upcoming sex, and the idea that anyone could walk in at any moment. The forbidden desire of allowing one's pleasure to be had in such a public place.\n\nTaking his hot shaft in her hand she felt it throb within her fingers. She licked her fingers and rubbed his cock with it to lube it gently.\n\nShe gasped as he filled her and took her neck into his mouth at the same time. He gripped her ass firmly as he drove into her, his hands scraping on the wood of the table as he held her off of it.\n\nShe bit her lips to keep from calling out, the echo of their moans were already a concern in the large barn. She was concerned that the party goers would hear and come to investigate. She watched him smiled at her, she approved with her eyes as her body responded to him. She fell back to the straw cover table as he drove into her. He lifted her legs and put them over his shoulder to allow him a deeper penetration.\n\nHer orgasm came as his did, both mixing together there in the barn, she clamped her lips to his to trap her scream into his mouth. They stared into one another's eyes as they came down from their high.\n\nAlex found Livy standing by herself with a smile as she approached.\n\n\"You can drop the fake smile,\" Alex warned her. \"I know you too well.\" Livy rolled her eyes and shook her head.\n\n\"What's up?\" Alex asked her sister.\n\n\"No,\" Livy said firmly. \"I'm not ruining your day. Ask me tomorrow.\"\n\n\"Livy,\"\n\n\"No, Alex,\" Livy said firmly. \"I have enough on my conscience. Just tell me that you and Gavin were down there in the barn doing something that would make Mom mad with the idea that you were doing something that only married couples should be doing. And then only for procreation only!\"\n\n\"Do you really want to know?\" Alex asked her.\n\n\"I already know,\" Livy laughed pulling a piece of straw from her dress before walking away. \"And you should wipe that naughty smile from your face...sinner!\"\n\n\"I was in Heaven at the time!\" Alex teased causing them both to break up in boisterous laughter.\n\n***\n\nHello readers,\n\nI'm sorry for the long delay for this chapter, but I have been doing some soul searching. I'm at a crossroads here. I have an ending in mind, one that would ultimately take an entire third book to complete. But to do so will take me away from the Literotica world. The third book would be less about the sexual world of BDSM and more of the personal world of Alex and Gavin.\n\nI have an alternate ending in mind, so I have to decide how to proceed. If I proceed with the alternate ending, there will be only a few chapters left. When I started this journey with Gavin and Alex, I wanted to show a different side of BDSM. One more realistic. One that was closer to the truth, with a little fantasy thrown in. Now I think it is time to finish with these characters and save the third book for a mainstream audience.\n\nI have decided to edit and rewrite this story and take it to a more mainstream audience and e-publish the books. Those who come to Literotica do so for some sexual stimulation, perhaps the alternate ending for Literotica readers is the way to go, then produce the three novels for the mainstream with an entirely different ending.\n\nAny advice?\n\nCJT"
    ],
    "authorname": "CJT",
    "tags": [
        "public",
        "drama",
        "bdsm novella"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-34"
}