{
    "title": "Finn Ch. 08: Mine",
    "pages": [
        "\"Can you escape?\" she asked.\n\n\"I don't want to escape, Mistress.\"\n\n\"That isn't what I asked.\" Her eyes ran over every part of him, all at her fingertips to use however she pleased. \"Can you escape?\"\n\nHe pulled against the ropes holding him spread eagle in the center of the bed, his elbows and knees bending until they hit the resistance. Her blood ripped through her, her heart throbbing between her legs while she watched him attempt to break free.\n\n\"No, Mistress. I can't.\"\n\nHe was exquisite in his helplessness. A body she had imagined touching too many times and now she would use it while it was still hers to have. The past week had been a pleasant foreplay, but now the part of her she had been trying to suppress was screaming through her veins.\n\nShe wrapped the thin piece of rope she was holding around her hand, then reached down and grabbed the hem of her dress, pulling it off over her head. She shoved her underwear to the floor then unhooked her bra and let it fall from her chest. \n\nHis tongue played against his lips while she approached, then deftly slid over her clit when she lowered herself onto his mouth. His hands made weak attempts at freedom, their jerks and twists intensifying the electricity his mouth was sending through her.\n\nShe rotated around and rubbed her nipples down his core, then wrapped her hand around his length, pulling it towards her mouth. His hot breath gasped against her, his tongue momentarily losing its focus when her lips wound around his tip. \n\nHer mouth slid down over him, her tongue and cheeks enveloping him inside their warmth. She wanted him hard, as hard as she could get him. His tongue floundered over her uselessly, unable to maintain giving pleasure as it received pleasure. It was a lesson he needed to learn, but not tonight. \n\nShe moved away from his face, rubbing herself down his chest. His knees jerked up, his heels trying to dig into the bed so he could shove himself farther into her mouth. Every desperate movement his body made sent more of her arousal dripping down his skin. She ground her clit into him, sliding herself up and down his sternum.\n\n\"Mistress, please let me come,\" his breathless plea sounded from behind her.\n\n\"No.\" She began wrapping the rope from her hand around the top of his sac. She continued winding it tightly, encasing his orgasm inside the bindings. Once he was thoroughly imprisoned, she took his length into her mouth one more time before sitting up and positioning herself over him.\n\nShe turned to face him before sliding him in slowly, watching his eyes follow the sight of himself disappearing inside of her. His width provided a pleasurable stretch, his length a satisfying fullness. She spread her thighs until she covered every last inch then ground down on him, rocking her hips back to grind her clit against him. \n\nShe lifted herself back off, grasping him in her hand and rubbing him between her folds. His body pulled at its bonds, trying to take back control. His desperation sent tremors through her, and when she couldn't take denying herself a minute longer she lowered herself onto him again, the feel of him inside of her forcing a groan from her lips. \n\nShe shoved her hips forward, the friction making her shiver. His eyes followed the rhythm of her breasts, his fingers curling towards them. She moved her hands to her chest, taunting him as they played against her own skin.\n\nRipples of heat coursed through her the harder she pounded down onto him. She kept going, craving the tingle shooting through her body every time his length penetrated through her. \n\nHe pulled against his bindings, his instinct begging to take command of the thrusting. But the ropes held tight and his motions tore through her, turning the ripples of heat into crashing waves. \n\nShe bent down over him and he lifted his head up, his tongue hunting for her own. She pressed her lips to his between gasping breaths, the taste of his mouth calling her back every time she pulled away.\n\nThe heat burned straight up her spine and out through her fingertips. Her muscles spasmed and clenched as the orgasm took control of her body. Her breath came out in a loud moan while her hips continued to slam down against his, prolonging the sensation as long as her body would allow. An aftershock hit, the spasms stealing the remaining energy from her fatigued muscles. \n\n\"Please, Mistress...\" he begged into her ear.\n\n\"No,\" she said, trying to catch her breath.\n\n**************************\n\nHe sat on the floor of his room waiting for his mistress to get home from work. He wished she would hurry so he could show her how good a boy he planned to be. Maybe if he was a good boy tonight she would allow him relief from the eternal throbbing her denial caused. Memories of the previous night wouldn't release him from their incessant taunting. He could still feel her grinding into his chest, and had left her scent on himself as long as she would allow.\n\nThough it had been several days, his recent punishment still lingered in his mind and he had no intention of giving her a reason to repeat it- ever. He was still refusing to return the multiple texts from his friends, and had asked his uncle if he could work at ranches they wouldn't be at. He couldn't avoid them forever, but it was easier to try than it was to deal with them.\n\nWhen he heard the front door open his heart began to pound. He touched his fingers to his neck nervously as her footsteps grew closer.\n\n\"Get cleaned up and dressed in something decent,\" she said, leaning on the doorframe.\n\n\"Yes, Mistress.\" He jumped to his feet to follow her directions. After he showered he stood in front of his closet trying to decide what to wear. His only option for pants was jeans and he pulled on the nicest pair he owned. He grabbed his favorite long sleeved button-up shirt and started putting it on.\n\n\"I don't like that shirt. Pick a different one,\" her voice came from the doorway. Then she turned and walked away.\n\n\"Yes, Mistress.\" He unbuttoned the shirt and threw it on the floor of the closet. He picked through the rest of the shirts that hung there, unsure which one would please her. When he couldn't decide he started to worry he was taking too long. Then his anxiety doubled when he realized by picking the wrong shirt originally he may have missed an opportunity for praise. He began wildly tearing through the closet.\n\n\"Why aren't you dressed?\" she asked, startling him. \n\nHe turned to look at her, his panic paralyzing him. She stared at him for a minute then walked towards the closet. He sat down at her feet and wrapped his arms around her legs, praying she wouldn't scold him. The sound of the hangers scraping against the wooden pole was all he heard.\n\n\"Put this one on,\" she directed, handing a shirt down to him.\n\n\"Yes, Mistress,\" he replied, releasing his hold on her legs to take it from her.\n\nAn hour later he was shocked when the limo that had picked them up was pulling into the parking lot of a bowling alley two towns over. He had assumed they were going to the ch\u00e2teau, though her slacks and t-shirt had hinted otherwise. \n\nHe held open one of the double doors at the entrance then followed her inside. Music blared from a jukebox surrounded by people waiting to pay their dollar and pick the next song. He had to yell his shoe size over the sound of the music and the echoing of balls crashing into pins to the woman on the other side of the counter. \n\nA man with dark hair and a goatee approached the counter then stopped next to his mistress, leaning down towards her face. \"You ready to get slaughtered?\"\n\nHe went to step between them, his muscles tensing in anticipation of knocking the man to the ground. But she put her hand on his chest, stopping him. \n\nShe leaned in towards the man's ear, lowering her voice. \"You have a better chance of Mistress Natalia letting your cock out of its cage tonight and sucking it dry than you do of slaughtering anyone.\"\n\n\"Please don't say things like that,\" the man said, flashing a smile. \"It makes my balls hurt.\" \n\nShe laughed and grabbed the shoes off the counter then headed towards the lanes. He followed behind her closely, the man with the goatee a few steps behind him. Most of the lanes were taken, and a group of people were already seated around the one she stopped at.\n\n\"Finn, this is Lexa and her husband, Ian,\" she started the introductions. \n\nRecognition instantly hit him, and his face started to burn when he realized the first time they met he was collared and sitting at his mistress' feet. But they smiled at him like the night at the ch\u00e2teau had never happened, and he shook their hands and smiled back like he didn't know about Ian's piercing.\n\n\"This is Natalie, Rachel, Alex and Ray...\" his mistress continued, turning around when she said the last name. \n\nHe followed her lead and turned to shake hands with the man who several minutes ago he had wanted to punch in the face, then sat down in the empty chair next to her and began pulling off his shoes. When he looked up he noticed Lexa had her feet in Ian's lap and he was tying her laces. It was a subtle act, one he wouldn't have thought twice about if he didn't also notice the anklet she wore with a key hanging from it.\n\n\"Beer?\" Alex asked, approaching his mistress with a full pitcher in one hand and two empty mugs in the other. Recognition set in once again, flashing back to the night his mistress had brought him to the ch\u00e2teau. He had stared at the metal collar around Alex's neck while he walked through the front door. \n\n\"Yes, thank you,\" she replied, and grasped the mug when he handed it to her.\n\nAlex then turned and looked down at him. \"Beer?\"\n\n\"Ummm...\" he started, remembering the internal inferno.\n\nAlex smiled and winked at him then turned to his mistress.\n\n\"Yes. One,\" she said.\n\nAlex poured the mug full and handed it to him. He could feel the redness creeping back into his face. They all knew his secret. \n\n\"Finally, the s-Team has a new player!\" Ian said, pointing up at the screens above their heads. \"Finn, please tell me you can bowl, 'cause we need to kick some ass.\"\n\nHe looked up at the screens and noticed his mistress, as well as the other three women, were listed under the M-Team. \"I used to be pretty good. I mean, I can hit the majority of the pins the majority of the time.\" \n\n\"He could bowl like Roy Munson before his hand got demolished and the s-Team still wouldn't stand a chance,\" Rachel said, and the other girls cheered in agreement.\n\n\"Only because you ladies cheat,\" Ray fired back.\n\nRachel's eyes ripped through him. \"Excuse me?\" She began poking him in the ribcage with her finger, making him laugh and flinch. \n\n\"Stop! That tickles!\" he begged.\n\nShe smiled as she continued her assault on his ribcage. \"We do not cheat.\"\n\n\"Fine! You don't cheat!\" His torso turned away from her, his arms wrapping around his sides to block her. \"Red! Red!\"\n\nShe paused momentarily, then grinned and shoved her hand underneath his arm to dig her fingers into his side. \"That isn't your safeword.\"\n\n\"I don't remember it,\" Ray said, smashing himself into one of the chairs in a fruitless attempt to squirm away from her. \n\n\"How unfortunate for you,\" Rachel replied, digging her fingers between his ribs.\n\n\"Rumpelstiltskin! Rumpelstiltskin!\" Ray cried out, his face red with laughter.\n\nHis beer almost shot back out through his nose at the statement, and he turned to see his mistress choking on hers. He managed to slap her on the back several times even though his laughter was quickly draining the strength from his muscles. She turned to look at him, her smile covering her face as she wiped tears from her eyes.\n\n\"That isn't your safeword, either!\" Rachel exclaimed, still trying to catch her breath once her own laughter had subsided.\n\n\"No, but it got you to stop,\" Ray replied, standing back up and grabbing a yellow ball off the rack. \"Can we begin?\" he asked, turning to Lexa.\n\n\"Yes,\" Lexa answered, standing up to grab a ball of her own.\n\nThe interaction shocked him. He had imagined the slaves spending their days locked in cages when they weren't being used. But here they were, laughing and joking with those who enslaved them. And while there were subtle hints of the hierarchy, to anyone who wasn't aware of its existence they all just appeared to be a group of friends joking with each other. \n\n\"Good luck,\" his mistress said, running her fingers through the hair on the back of his head when his name lit up on the board. \n\nHe closed his eyes and everything disappeared except the feel of her touch. When she stopped he opened his eyes again and felt slightly dazed. He took a sip of his beer, trying to force his mind back into reality. Ray was right, they did cheat.\n\nAfter he managed to knock down nine of ten pins in two rolls he sat back down. When his mistress got up for her turn, he could almost taste her as she bent down to roll the ball. All the pins went flying, and he glanced up at the red X flashing across the screen. She smiled proudly, then shook her head at him when she caught his eyes wandering over her body as she walked back towards him. \n\n\"Damn,\" Ian said, watching the screen, then stood up for his turn. \n\n\"Sit,\" Lexa demanded, putting her hand on his shoulder to stop him. Then she got up and sat back down in his lap, grinding her hips into it momentarily before getting back up. \"Now you can go. Good luck.\"\n\nEven though he wasn't the one with the piercing, he could imagine the discomfort Lexa's tease had caused.\n\n\"Shake it off. Just shake it off,\" Alex prompted, rubbing Ian's shoulders while he approached the lane.\n\n\"I am. I got this,\" Ian replied, shaking his head then his torso and arms. He rolled the ball down the lane, then turned back around and held his hands in the air in celebration when the X flashed on the screen. He headed back towards his seat, high-fiving Alex and Ray on his way. \"Nice try,\" he said to Lexa, then smiled when she playfully spanked him as he sat down.\n\nThey were all so comfortable with each other, which was shocking given what they all knew about each other. But they all shared the same secrets, and so did he. He wasn't an outsider looking in, or a pretender trying to fit in. \n\n\"How was work?\" Natalie asked, running her hand down her long blonde ponytail before sitting down next to his mistress.\n\n\"My first appointment this morning consisted of me watching a naked man run up and down stairs,\" she replied.\n\n\"That's why I prefer to tie mine down. Makes things much easier,\" Natalie said, looking over his mistress' shoulder to him.\n\n\"I promise it wasn't me,\" he replied, reading her assumption. \"I'm done running.\"\n\n\"Good,\" his mistress said, grabbing him under his chin and pulling him towards her mouth. When she went to lean back into her seat his mouth followed hers as long as it could before his flexibility halted it.\n\n\"Why was he running up and down the stairs naked?\" Alex asked.\n\n\"Because he wants to self touch and the staff aren't letting him, so he keeps running to different areas of the house trying to get them to leave him alone,\" she replied.\n\n\"Self touch?\" Alex asked.\n\n\"That's the terminology we use to refer to masturbation because it sounds less...sexual,\" she explained.\n\n\"So what did you recommend?\" Natalie asked, pressing her fingers together until her knuckles popped. \"I mean, it's his right to do it.\"\n\n\"That's what I told them. As long as he's not doing it in a public area they need to get over it,\" she replied.\n\n\"Wait a minute...\" Ray said, cutting in on their conversation. \"What are these rights you speak of?\"\n\n\"You gave up your rights three years ago,\" Natalie reminded him. \"Unless you want them back.\"\n\nRay bent down and discreetly pressed his lips to her thigh, bringing a smile flashing across her face. \"Never.\"\n\n\"So let me make sure I understand this,\" he started, turning towards his mistress. \"You spend your days fighting for the rights of men, but spend your afternoons thinking up creative ways to enslave them?\"\n\nShe tapped her finger against her chin and tilted her head up, then turned towards him and ran her hand through his hair. \"I like to think if I use my powers for good it will cancel out me using them for evil.\"\n\nHe watched the movement of her mouth as she responded, almost too lost in the curve of her lips to hear her words. When he forced himself to look away he found Ian's eyes watching his hand touch at his neck. He hadn't realized he was doing it, and quickly moved his hand back to his lap.\n\n*********************************\n\nShe stood in her kitchen, furiously stirring together diced chicken, ricotta cheese, spinach and the other various ingredients she needed to make the lasagna she had planned. It was a complicated recipe, but she needed the distraction to calm her nerves. \n\nBowling night had been a success, at least for her team and her purpose in bringing him. He needed to understand his desire to be submissive didn't have to change who he was. It was just another part of him, and he didn't have to lose the rest of himself to embrace it.\n\nOnce dinner was in the oven she took a quick shower then put on a sheer grey dress which fit her in a way that would make him wonder why she had bothered putting on anything at all. The timer went off when she walked back into the kitchen and she pulled the lasagna out, made their plates, then sat down at the kitchen table, scrolling through her phone while she waited. \n\nThe sound of the front door opening caught her attention and she watched him take off his boots then walk to where she was. He obediently sat at her feet and leaned down to kiss her leg.\n\n\"How was your day?\" she asked.\n\n\"Good, Mistress.\"\n\n\"What did you do?\"\n\n\"I checked the fence on one of the ranches we haven't been to in awhile. But we're going to have to move the cattle there soon once the weather cools off.\" He shoveled lasagna into his mouth, then guzzled the glass of water she handed him.\n\n\"Did you see your friends?\"\n\n\"No, Mistress.\" His hand lightly ran over his neck before falling back into his lap.\n\n\"Why not?\" she asked, watching his hand go back to his neck at her question. He wanted his collar, but it was important for him to recognize the difference in how he felt when he had it on versus how he felt when it was off.\n\n\"They were working somewhere else today I guess.\" \n\nShe let his lie slide. It was an issue he would have to deal with eventually but it wasn't one she could help him with. However, maybe having better trained friends would show him his current friends didn't make the rules on what it meant to be a man. \n\nOnce they were finished with dinner he went to take a shower, following the routine she had set for him. She met him in his room after he got out, leaning down to buckle the collar around his neck. She couldn't help but wonder if this would be the last time she saw him collared and chained. The thought was devastating. But she had to trust her instinct, and her gut told her she couldn't wait any longer. Waiting longer would just delay the inevitable.\n\n\"Do you want to please me?\" she asked, buckling the left wrist restraint in place.\n\n\"Yes, Mistress,\" he responded eagerly, pushing his head underneath her dress.\n\n\"On the bed.\" \n\nHe got on the bed and lay down on his back, his mouth silently calling to her. She positioned herself over his face, shuddering when his tongue slid over her.\n\n\"Good boy.\" She closed her eyes while she rubbed against him. \"Hands above your head.\" \n\nHe removed his hands from their place on her thighs and she fastened them above his head to the wrought iron headboard, then climbed off him and stepped off the bed.\n\nHe looked confused, aware she hadn't come. His confusion quickly turned to concern. \"Was I not pleasing you, Mistress?\"\n\n\"You were pleasing me very well,\" she assured him. \"Roll over onto your knees and put your hands against the wall.\"",
        "He rolled over and pulled his knees underneath himself, putting his palms through the headboard then pressing them flat against the wall for balance. \n\nShe stared at him for a minute, trying to memorize how he looked in case it was the last time she saw him this way. Since the night at the bar he had never said her name. Now she wondered if she would hear it scream from his lips, ending their adventure. Vanilla women loved hearing their name on the lips of their lovers, but to her it meant the end of everything. A safeword she couldn't ignore, as soon as it was uttered the game was over. But either he was going to accept his place, as well as hers, or he wasn't. \n\nHis eyes followed her while she walked to the dresser. When she pulled out what she needed she looked at him. He stared at it wide eyed but remained silent. His unblinking gaze moved to the mattress while she adjusted her new appendage, and even through the dim light she could see the color draining from his skin. He knew what was coming, but he still hadn't said her name.\n\nShe thought he would say it when she snapped open the bottle of lube. Even though he flinched he remained quiet. She had been slowly desensitizing him to the idea of having the most private part of his body used, but a finger and even a small plug were easy to disassociate from. A strap-on, however, was completely different. Maybe not physically, but mentally.\n\nWhen she poured the lube over her womanhood and started to stroke it she thought the safeword would fly from his lips. He kept his eyes down and burning into the mattress, but still was silent.\n\nWhen she stepped up on the bed he sucked in a breath of air. She froze for a minute, waiting to hear her name. When it didn't come she poured lube over her finger and pushed it inside of him. His nervous muscles immediately clamped down, so she reached underneath him with her other hand and gently massaged his sac until he relaxed. \n\n\"Good boy,\" she praised, pushing another finger inside of him. Her strap-on was larger than any of the toys she had previously used on him, and she had to be careful the only part of him getting hurt was his pride. \n\nHis breath became heavier the more his body relaxed, and her fingers began to slide easily. She stopped and positioned herself behind him, rubbing her tip over his entrance. Then she waited, still expecting him to shout out her name. He squirmed against her touch but the only sound that came through his lips was his frantic breath. Carefully she pushed into him, running her hand up his back when it raised up against the intrusion. \n\nHe gasped and tried to move forward but there was nowhere for him to escape to. She continued pushing against his clenching muscles slowly but confidently. Her name wasn't going to be said. Not now, not ever. She reached underneath him and ran her hand over him. He was harder than she had ever felt. Once she was fully inside of him she stopped.\n\n\"You are mine,\" she said as his muscles fought against her ownership. \"Every part of your body is mine. I will take it when I want and you will let me. If you continue to resist, your punishment will be worse than the one you've already earned.\" \n\n\"Yes, Mistress,\" he replied, his voice shaking. \n\nShe held her position in him and waited for his muscles to start releasing their hold. When she began thrusting again the resistance had decreased, though not completely disappeared. \n\nHis body clamped down suddenly and without warning. He fell to his elbows and shoved his face into the bed, whimpering through the orgasm. She continued moving inside of him as his muscles spasmed. She was surprised but not angry. It was the ultimate confirmation of what she had already known.\n\nOnce his body stopped convulsing she pulled out and untied him. \"I don't appreciate having to work so hard to fuck what's rightfully mine.\" \n\n\"I'm sorry, Mistress,\" he stammered, sitting back shakily and avoiding her stare.\n\n\"It isn't completely your fault. I'm willing to take some responsibility. I've been slacking in that area,\" she replied. \"Bend over the bed.\" \n\nHe reluctantly followed her directions, his body beginning to tense as he did so. \n\nShe walked over to the dresser and started rummaging around in the drawer. \"Unfortunately, this is going to be one of those lessons that's not so fun for you now but will make things more fun for you later.\" \n\n\"Yes, Mistress,\" he replied, burying his head into the mattress. \n\nShe positioned herself next to him and looked down. He was already growing hard again and pressing into the side of the bed. She poured a generous amount of lube over the plug then positioned it over his entrance and began slowly pushing it in. His body clamped down against the insertion, so she pulled it out slightly then pushed back harder. She wrapped her other hand around his length, gently stroking him. \n\n\"Good boy,\" she praised when the largest part finally slipped inside of him, causing his body to jump with surprise. \"You can come watch some T.V. with me before bed.\"\n\n\"Yes, Mistress.\" He straightened up slowly, the skin on his face bright red. \n\nHer body pulsed with heat when he hesitantly took a step forward, then another. His face burned and his gaze never left the floor as he walked towards the living room. Her heartbeat throbbed while she watched his cautious, uncomfortable steps. When they reached the living room he carefully sat down on the floor at her feet.\n\n\"Mistress?\" he asked timidly.\n\n\"Yes?\"\n\n\"How long do I have to wear it?\"\n\nShe looked back to the television, flipping through the channels while he squirmed at her feet.\n\n*****************\n\nHe had never felt so humiliated. Not because of the item currently violating him. That was a discomfort he had no control over. But his erection was within his control, and it proudly displayed his truth no matter how much he willed it to go away. He was trying his best to control his thoughts so it would deflate and behave but it was impossible, especially with the constant reminder of her ownership over his body.\n\nThis wasn't the first time she had made him wear one, but compared to the others this one felt huge. Maybe this was his punishment for coming without permission. But he never had an opportunity to ask for permission. Her words pushed him over an edge he hadn't even realized he was standing on. \n\nHe jumped when her hand ran through his hair, then turned his head towards her when she did it again. Why was he so embarrassed? Humiliation was a feeling usually coinciding with being laughed at. But she never laughed, she soothed. And that was what he needed now, to be soothed. He scooted towards her, more blood flowing to where he wished it would leave when the plug shifted at his movement. He wrapped his arms around her legs and laid his head in her lap.\n\nHer fingers ran through his hair, gently stroking his scalp. The longer her hands rubbed the thicker the fog in his head became. What was he so afraid of? He clenched against the plug, trying to figure out why it felt so good to have it inside of him. And it was okay if his body betrayed his truth, it was a truth she already knew. \n\n\"Come,\" she directed when she rose from the couch. \n\nHe carefully followed her back to his room, his movements slow and uncertain. \n\nShe chained his hands loosely to his neck and he climbed into bed. He ran his wrist up the chain and took a deep breath. He kept running his wrist up and down, making sure when he hit the end of the slack he pushed against it to feel the resistance. His muscles repeatedly clenched against the plug, and it provided a new sensation of resistance he had never experienced before. \n\nWhen his eyes opened again soft sunlight was creeping through the cracks in the blinds. A feeling of fullness was an instant reminder of where he was, and it surprised him he found the feeling comforting. He pulled against his restraints to make sure they were still there then relaxed and closed his eyes again, falling back into a deep sleep. \n\nThe sound of her light footsteps interrupted his dreams. He rolled out of bed and got to his knees, adjusting as the plug pushed farther inside of him.\n\nAfter she removed the chain he stretched his arms forward, hating how free they felt. She pushed his head to the floor then slowly removed the plug. Once it was gone he thought he would feel relief, but all he felt was empty.\n\n\"Stay,\" she told him when he went to sit up. \n\nHe froze with his head on the floor and hips in the air. The sound of her adjusting her strap-on caught his ear and he closed his eyes and relaxed. He was exactly where he belonged, on his knees for his mistress. \n\nHis fingers ran over his collar while she slid into him. It felt good to have her inside of him, refilling the void left behind by the plug. This morning there was no resistance. His body was hers to do with as she pleased. There was nothing left to be afraid of.\n\nA pleasurable warmth started, stemming from where she stroked him. It was a strange and unfamiliar feeling, and he closed his eyes as it built up inside of him. When it began spreading through him he started running his hand up and down his length, matching his stroke with hers. \n\n\"Mistress, can I please come?\" he begged, the intense warmth taking him over.\n\n\"Yes,\" she said, maintaining her movement.\n\nWhen the fire rolled through his body he gasped. It seemed to go on forever, tingling and burning through him until it had penetrated every inch. It left him weak, and when she pulled out he collapsed over onto his side. She looked down at him, smiling. He couldn't help but smile back. She undid the strap-on and leaned down, pressing her lips to his.\n\n\"Do you want to please me?\" she whispered.\n\n\"I always want to please you, Mistress.\" \n\nShe straddled his face and he caressed her, listening to the sound of her moans while enjoying the feel of her nails digging into his scalp. If this was what life was like on his knees, he couldn't imagine why he would ever want to stand up again. When the taste of her climax hit his mouth he buried his tongue inside of her, holding her body down on his lips so he could savor the pleasure he had brought her.\n\n\"Enough,\" she finally insisted, climbing off his mouth and landing next to him on the floor. He rolled onto his side to look at her, memorizing the face he usually got scolded for looking at. She caught his eye but didn't correct him. Instead she smiled again.\n\n\"You're a good boy, Finn,\" she said, running her hand over his collar. "
    ],
    "authorname": "SyptemberSmyth",
    "tags": [
        "femdom",
        "pegging",
        "male submissive",
        "mistress",
        "dominatrix",
        "oral sex",
        "female dominant",
        "male slave",
        "butt plug",
        "strap on"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/finn-ch-08-mine"
}