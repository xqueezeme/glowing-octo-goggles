{
    "title": "WVC Ch. 14: The Supplicant Ceremony",
    "pages": [
        "\"You are now ready for the final phase of your membership into the White Vampyres Club. On Saturday March 21<sup>st</sup>, assuming you pass the last test, the members of the Club will honor you, and you will select your trainer. Be at 734 Elm Street promptly at 7 PM, and as before, eat lightly and dress casually. \n\nContinue to take your blue diamond shaped pills every day, once in the morning and once in the evening. In addition, follow the regimen of herbal supplements in the package you just retrieved. Remember to bring your leather cock strap, your collar, and to give yourself a thorough enema before Saturday's ceremony.\" \n\nThis was the contents of the e-mail that was waiting for me when I returned to my dorm room (WVC Ch.13 - The Traffic Stop). Scanning the instructions that accompanied the supplements, it didn't seem to be complicated. But by the time Friday arrived, my cock was constantly erect. I was totally embarrassed with the enormous lump that distended my pants. Most of the time, no one noticed, but on those occasions when someone did, it was the cause of considerable attention. I was grateful when Saturday finally came and I could spend the day hiding out. \n\nAfter taking care of the required preparations, I actually entered the house early on Saturday and found the usual note with instructions. I sat and waited, wearing the blindfold and robe, the sandals and the leather collar. Under the thin robe, the leather strap was snapped tight around my erect cock and swollen balls. I couldn't remember the last time I'd emptied them, and I was nervous. \n\nWhat was the \"last test\"? Would I be equal to it? And would I finally get to cum? Valerie had said as much, but now with the reality only a few minutes away, I had doubts. \n\nI heard a car pull up, the doors open and close, and felt the gentle hands leading down the steps, out of the house and into the back seat. Leather, of course. Surreptitiously, I let my hands caress the seat but there was no way I could tell if it were Valerie's Acura or not. And a discreet sniff of the air didn't reveal any clues either. \n\nThe drive out of town was silent and uneventful, and I was led into the small anteroom, my stiff cock tenting the robe, swaying before me with each step. A few moments later, the door opened and Mistress entered. Her spicy perfume preceded her and the sharp click of her high heels announced her arrival. \n\n\"Good evening, Bill. Show me your penis.\" \n\nImmediately, I unbelted my robe and held it wide. I caught my breath as she curled her hand around my thickened shaft. Squeezing gently, she stroked me to a full erection. It didn't take much. She chuckled. \n\n\"I see your penis is particularly responsive tonight. That's excellent. Once you pass the final trial, and I'm confident that you will pass, you will then choose your trainer.\" \n\nAs she fell silent, I wondered exactly what she meant. A trainer for what? I didn't have time to ponder this as she continued to fondle me, coaxing even more blood into the swollen organ, pumping my stalk, fingering the prominent ridge that crowned my engorged bulb. Smick, smick, smick - the now familiar sound echoed in the small room. \n\n\"And you're generating lots of pre-cum fluid as well. That's very good, Bill.\" \n\nMistress kept posting up and down my dripping cock as she continued. \n\n\"Once you are secured in the spread eagle position, you will have your blindfold removed, and you will finally see the interior of our chapter room. Although you met each member last week, tonight they introduce themselves to you, this time without your blindfold. You will be able to put a face and a figure to each. It is likely you will know and recognize some of the sisters, despite wearing masks and costumes.\" \n\nMy breath was starting to become ragged as she wrapped her second hand around my pole to work on my throbbing hard-on. \n\n\"Each sister will kneel before you, bowing down between your parted legs and will honor you by kissing this, your royal scepter. She will receive this magnificent penis of yours into her mouth, licking and sucking it, but you are not allowed to ejaculate. At least, not then. Once you have met the entire chapter and each member has bathed your erect penis with her saliva, you will once again be blindfolded.\" \n\nRecognizing that I was getting close to the edge of orgasm, she abruptly stopped stroking me and pinched the tip of my cockhead, staving off the impending explosion and forcing the blood back down my shaft. \n\n\"Should you ejaculate prematurely, before you've met every Club member face to face, then you will have failed the final test. You will be escorted from these premises with a wonderful memory, but nothing else. You will not join the Club. Is that clear?\" \n\n\"Yes Mistress. I must not cum.\" \n\nI could hear the smile in her voice as she replied. \n\n\"At least, not until I say you may.\" \n\nSatisfied that my moment of urgency had passed, Mistress released my still bloated cock and tied the robe loosely around my waist. Taking me by my shoulder, she led me down the hallway, pausing just before we entered the great room. \n\n\"Do you have any questions before we begin?\" \n\nIt was the first time I had a chance to ask any questions, and I was so anxious about the coming events, that I couldn't think of anything. She chuckled at my evident distress. \n\n\"Don't worry, Bill. You'll have an opportunity to ask all the questions you like in a more relaxed setting next week. Are you ready to meet the members?\" \n\n\"Yes, Mistress.\" \n\nMy voice squeaked as I struggled to get the words out. \n\n\"Then let's go. One more thing you should know. As they introduce themselves, each member may lick your face. It's a Club tradition, and you are not to respond. Simply let her have her way with you.\" \n\nI heard her swing open the door and we entered. As before, there was an expectant hush over the group, but this time it seemed different. We mounted the stairs and Mistress stripped away the thin robe, leaving my jutting erection swaying freely before me, tightly bound by the leather strap. Unseen hands quickly attached cuffs to my wrists and ankles, pulling them wide and securing my limbs to the frame, stretching me into a large X. \n\n\"Good evening, sisters. As you can plainly see, Bill and his large penis are ready and eager to play. Mount the stage and array yourselves for his unveiling.\" \n\nIn silence, they gathered on the platform. I could hear the distinctive click, click, click of high heels as they climbed the steps and positioned themselves. My cock was throbbing in anticipation. I held my breath as Mistress stroked my back, letting her hand drift lower to caress my bare buttocks as we waited. \n\n\"Now Bill, behold the assembled members of the White Vampyres Club.\" \n\nDeftly, she removed my mask, and I blinked in the bright lights. The small stage was bathed in the at least dozen theatrical spotlights that were arranged to cover the entire platform. The room itself wasn't particularly large, but it did have ceilings that were quite high, giving it a spacious, regal quality. \n\nTo one side of the stage, numerous couches were lined up end to end, covered in white sheets. Various odd shaped pieces of furniture, some wooden, others burnished aluminum, were stowed away against the back wall, among them small steps, large frames and what appeared to be a throne. But what held my attention were the assembled members of the Club, lined up across from me, perhaps fifteen to twenty feet away. \n\nMy already erect cock surged higher at the sight of so many stunning women. I was astounded by the sheer volume of bare skin, by the amount of black leather, and by the size and variety of nude breasts and shaved pubic mounds. Each member wore some kind of concealing mask, either high-heeled boots or sandals, and a black leather costume that revealed her breasts and nude pussy. A few had tattoos and most sported some form of body jewelry, including numerous genital piercings that gleamed from bare pubic mounds. With a start, I realized that I had already tasted every single one of them. \n\nBehind me, Mistress continued to fondle my ass cheeks, squeezing and massaging my muscles. Suddenly, I realized that I hadn't seen her. She had remained out of my sight during the unmasking. \n\n\"Come sisters! Greet this male supplicant, and his very eager penis!\" \n\nWearing thigh high boots, the first member approached. The chain top she wore swayed with each step, rubbing over the incredibly long nipples that jutted pink and fully erect from her smallish breasts. Originating from a leather collar around her neck, the chains fell in concentric circles across her sloping globes to be gathered in a leather strap that lifted them slightly. The bottom series of chains were suspended from another leather strap, this one around her slim waist that allowed the glittering metal to bounce loosely against her bare lower abdomen with each step. \n\nHer long strawberry blonde hair was pulled into a ponytail behind her leather half mask, and even through the narrow slits, I could see that she had bright blue eyes. The pale skin of her thighs contrasted sharply with the black leather boots. \n\n\"Hello, Bill. I'm Taylor. We met Wednesday in the Sigma Epsilon parking lot.\" \n\nSpeechless, I just nodded. She was the sorority president. \n\nWith that introduction, she took my head between her hands and gently licked first one cheek, and then the other. Glancing down at the quivering erection protruding from between my thighs, she slowly sank to her knees and purposely wrapped one hand around the swollen shaft. I held my breath as she leaned closer, the warm air from her exhale washing over the purple knob. Caressing my buttocks, Mistress smoothly urged my hips forward as the kneeling blonde opened her mouth wide and guided the engorged bulb of my cock between her lips. \n\nHolding me firmly by the root of my stalk, she began to post up and down the thickened shaft, pausing to bathe the bloated knob with her saliva as she drew her head back. Mistress palmed both of my ass cheeks at the same time, squeezing them together and then pulling them apart. \n\nThe room was silent as the rest of the Club watched Taylor pick up the pace until she was energetically bobbing up and down on my erection. A few girls were idly fingering nipples or pussies, and one pair was caressing each other. After several minutes of soundless slurping, Mistress gripped my hips and pulled me backwards, although Taylor tried to keep my hard-on securely in her mouth. Reluctantly, she let go, my stiff cock emerging from between her wet lips with a noticeable 'pop'. \n\nAs she gracefully rose to her feet, she smiled at me and took her place at the end of the line as the next member approached. This girl was also blonde, about the same height, but with a stocky muscular build that reflected the amount of time she must have spent in a gym. Wearing a leather collar and an open corset that both revealed and supported her large breasts, she jiggled her way toward me. I was mesmerized by the enormous nipples that peeked above the edge of the black leather. Puckered and erect, the pinkish brown circles must have been nearly three inches across, and were pierced horizontally by shiny silver bars. \n\nSmiling broadly, she stopped about two feet from me, resting her hands on her wide hips with her feet well apart, showing me her bare pussy and the double rings that gleamed from the pink lips. Wearing short ankle boots, she had her dark blonde hair pulled back so that it cascaded over her bare shoulders, held in place by her black half mask. In addition, she also sported a glittering jewel in her navel. \n\n\"Hi, Bill. I'm Brooke. Remember me?\" \n\nOf course. Valerie had introduced us in the Student Union. She was the regular from the weight room. As Mistress Shannon continued to massage my butt, I nodded, not trusting my voice. \n\nHer voice was flat, and her demeanor was almost belligerent, like she really didn't want to be here. Or maybe, she didn't want to be here with me. \n\nWhen she opened her mouth to speak, I caught a glimpse of a tongue stud. My jutting hard-on throbbed involuntarily, bouncing up and down as I realized that very soon, that metal button would be raking my engorged cockhead. Behind me, Mistress dipped her fingers down into the cleft between my bare ass cheeks, running them lightly over my puckered sphincter. \n\n\"From the weight room at the gym.\" \n\n\"I remember.\" \n\nWithout sounding too much like mouse, I managed a response as she leisurely closed the last few feet to stand aloof and proud, right in front of me. Sticking out her tongue to make certain that I saw her stud, she leaned forward and licked my right jawline, starting just below my ear until she bathed my chin, a long wet kiss that was punctuated with the metal button. \n\nHolding my gaze, she reached down and curled her hand around my quivering pole. It was not a friendly grasp. I caught my breath as she squeezed. A wicked gleam appeared in her brown eyes as she pumped my stalk, a short jagged movement that was meant more to establish her position. \n\n\"Get on with it, Brooke.\" \n\nMistress Shannon gently reminded the blonde as she slipped a finger into my ass. Still maintaining eye contact with me, Brooke dropped to her knees and sucked my hard-on into her mouth. Reaching between my open thighs, she cupped my tightly bound balls with one hand as she continued to jack my cockshaft. Swirling her studded tongue around my pulsing knob and bathing my jutting erection with her saliva, she applied her talents with a gusto that surprised me. I would have guessed that her fervor lay elsewhere. \n\nAfter a few moments, I felt a familiar tingling in my balls and started to respond to the stocky blonde, following her rhythm in shoving my cock farther between her lips. Mistress gently but firmly pulled my hips away from the enthusiastic attention Brooke was lavishing on my hard-on. \n\n\"That's enough. We want to leave something for everyone else, don't we?\" \n\n\"Yes, Mistress.\" \n\nLooking slightly embarrassed and but still haughty, the muscular blonde rose from the floor and retreated to the end of the line, her firm buttocks revolving atop those toned thighs. \n\nNext up was a tall girl with long slim legs that appeared even longer because of her thigh high boots that stopped just below her nude crotch. I couldn't tell whether she was blonde or brunette since she wore a black leather mask that covered her whole head, leaving only her mouth and chin bare. Unlike the two previous members, no collar circled her long neck. Her leather corset was cut to reveal her small firm breasts, standing high and proud, topped with long reddish brown nipples. \n\nAs she approached me, she too stopped to pose, opening her thighs to reveal the three vertical metal bars arranged in a 'V' in her plump lips. With a tight smile, she stepped closer and gave a long lick on the left side of my face, all the way from my jaw to just under my eye, a prolonged gesture that was more of a way to mark me that it was a welcoming sign. \n\n\"I'm Diane.\" \n\nWith her expressionless green eyes boring into mine, she sank to the floor and sucked me between her thin lips. Almost perfunctorily, she wrapped one hand around my shaft as she worked me with her mouth. While the other two sisters had shown admirable delight in servicing my cock, Diane almost looked bored. I suspected that she might not prefer men. \n\nWhile sliding her finger excruciatingly slowly in and out of my ass, Mistress tapped Diane's bare shoulder when the time was up. Glistening with her saliva, my stiff rod swung free as the tall girl spit me out and stood up. Unlike the previous members, she stood aside and waited for the next in line to draw near. This girl was quite small and slim, a very pretty redhead with porcelain skin and surprisingly full breasts. Besides her black eye mask and high-heeled sandals, she wore only a high posture collar with a single glittering chain that swung between her bare breasts to snuggle between her pink pussy lips and disappear into her crotch. Her rounded globes swayed softly as she walked, crowned with tiny red buttons for nipples. They too were pierced, adorned with shiny round rings, each glittering with a bright red stone. \n\nAlmost shyly, she paused and spread her thighs, exposing more body ornaments, two pairs of jeweled rings that decorated her full pussy lips. Like a proud mother hen, anxious to protect her vulnerable young, Diane hovered nearby. \n\n\"Hi. I'm Jordan.\" \n\nAs she introduced herself, I saw the flash of shimmering metal in her mouth. The petite redhead had one more ornament. Like the gym rat, Brooke, she wore a stud in her delicate tongue. Timidly, she stretched up and lightly flicked that studded tongue across my right cheek. \n\nAvoiding my gaze, she glanced down at my towering erection before descending to floor between my outstretched legs. Hesitantly, Jordan reached up and curled one hand around the base of my thick stalk. Her nipples were fiercely erect, pointing proudly out from her full breasts as she leaned forward and opened her lips, stretching wide to accommodate my broad cockhead. She could barely get it into her small mouth. \n\n\"Be careful with Jordan. Yours is the first penis she's ever handled.\" \n\nMistress whispered in my ear as she kept massaging my buttocks, pulling them apart so that her finger could slide more easily in and out of my hole. That made the small redhead's tentative licking all the more arousing. Although she might be experienced, it must have been with other women, mostly like the tall girl in the full head mask who lingered close by. \n\nI began to relax as Jordan me licked me up and down, bathing my twitching hard-on with her saliva as the nub of her stud stimulated me even more. Gradually, she grew more confident, more energetic, even trying to swallow my bloated knob once more. This time, she was able to ingest the whole bulb, her pretty lips reaching partway down my thick stalk before she choked and spit me out. \n\nMistress signaled the end of her session and I pulled back, letting the kneeling redhead rise elegantly to her feet. She gazed down at my jutting cock, now shiny and wet with her saliva. As she retreated, Diane slipped an arm around her shoulders and they left together. \n\nNext up was another petite member, but this girl had tawny skin and short jet-black hair. Muscular with broad shoulders, she looked vaguely familiar as she strode toward me, wearing an eye mask, high heeled cage toed sandals, and a black leather bikini top with open cups that left her large breasts high and free, pointing out from her torso like torpedoes. The straps that circled those proud globes connected to a leather collar around her neck. \n\n\"Hello, Bill. I'm Mya. Remember me from the gym?\" \n\nOf course, she was the Asian girl who was the blonde's workout partner, and I certainly did remember her. She'd caught my eye before, and the spectacular body revealed before me now confirmed what I had only suspected before. And as she spoke, I caught a glimpse of another tongue gleaming with studded metal. \n\n\"Hi, Mya. Yes, of course.\" \n\nLike the members before her, she stopped to pose, standing with her sandaled feet spread well apart. Since she wore nothing below her waist, I could clearly see the silky smooth pubic mound and the two metal rings adorning her plump pussy lips. She arched her back, thrusting her firm breasts out toward me, the large oval nipples dark brown and erect, pulsing eagerly atop those amazing spheres. Her eye mask only slightly hid her dark eyes, glittering behind the black leather. \n\nSmiling slyly, she stepped up to me, poking her excited nipples into my chest as she licked my cheeks, first one and then the other. Lightly tweaking my own erect nipples with her fingers as she slid down my torso, she quickly sucked my engorged cockhead between her lips and began posting up and down, the metal bar raking my sensitive skin. Unlike the timid Jordan, the Asian girl knew her way around an erect cock. ",
        "Squeezing the base firmly with both hands, she milked me into her mouth, taking me deep into her throat as she sucked. My breath started to get ragged as she continued to pump my hard-on, encouraging me to go right to the edge of an orgasm. Recognizing the signs of an impending explosion, Mistress abruptly broke my mood by smacking my ass, hard. I yelped and involuntarily drove my erect cock even deeper down Mya's throat. Gagging at the unexpected penetration, she pulled back, coughing. After that one spank, Mistress held my hips, not letting me plunge my cock back into her mouth. \n\n\"That's enough for now. Maybe she'll get another chance to finish you. Next!\" \n\nStill coughing, Mya smiled at me as she backed away and a light haired brunette took her place. Just as muscular but slimmer and slightly lighter skinned than the Asian, this girl also looked vaguely familiar. She wore a half leather corset that bared full breasts riding high and proud on her slim chest, large reddish brown nipples puckered and erect, her lower body completely nude. Shiny black leather boots came to her knees. \n\nSmiling behind her black eye mask, she paused to let me examine her body. As she opened her trim thighs, she exposed moist lips and the single vertical bar that decorated them. \n\n\"Hello, Bill. I'm Erika. You know me from the pool.\" \n\nThe light clicked on in my head. \n\n\"Oh, yes. You rescued me from the girls at the pool. You and another girl.\" \n\nHer smile broadening, she nodded and looked down, breaking eye contact to stare directly at my throbbing cock. \n\n\"Yes, that was when I first met you, you and your erect penis.\" \n\nEven though I'd been hanging there completely nude and totally exposed for at least half an hour, I still blushed at her frank words. Confidently, she walked up to me and held my gaze with deep blue eyes as she took my head between her hands and licked my cheeks, up one entire side and then down the other. She too was marking me. \n\nStill holding my gaze, she slid down to the floor, grasping my wet cock with both hands. Finally breaking our locked stare, she studied my pulsing erection as she licked her red lips before ducking her head and swallowing me whole. I caught my breath as she sucked, expertly working up and down the stiff shaft, holding me firmly at the root. Mistress slipped a second finger into my butt as she stretched my ass cheeks open wide, rimming me gently. \n\nI held my breath as the two skillfully brought me close to the edge of a climax once more. When Mistress began twisting and turning her fingers in my rectum, I started to pant, my breath becoming ragged and erratic. She must have noticed the change as she abruptly yanked both digits out of my bottom, edging me backward and causing my dripping cock to pop free from brunette's sucking mouth. \n\n\"Mmmmm, you do have a very tasty penis.\" \n\nSmiling up at me, she licked her lips again as she stood up. Tossing her head, she strode to the back of the line as a blonde with slim, shapely legs walked toward me, swaying with the grace of a dancer. With her long honey colored hair pulled back so that her half mask covered the top of her head, she wore an open cupped teddy, the leather straps crisscrossing her slim torso and framing surprisingly large breasts. Topped with long pointed nipples, they rode high and proud, spilling off both sides of her narrow chest. On her long legs, she wore high-heeled sandals that came up to her knees. Not bothering to pose, she stopped only inches from me, her smoky blue eyes nearly level with mine. \n\n\"I'm Amanda. We also met on Wednesday, on the back porch of Sigma Epsilon.\" \n\nOh yes, I recalled that incident, when Valerie had jerked my cock through the loose pouch for her and another sorority sister. Amanda was the pretty blonde with the open face, and I could see that her body was just as spectacular as I had suspected. \n\nHolding my gaze, she licked my chin and just under my mouth, lathering me with her saliva before she leaned back and smiled. After marking me, she looked down at my quivering cock, raw and reddened from all the prolonged oral stimulation, and dripping with anticipation with the release yet to come. Capturing my wet stalk with one fist, she carefully rubbed the pad of her other forefinger back and forth across my cockslit, teasing it to spread wide. And when she slid her fingernail into the gaping hole, I gasped at the rude intrusion. \n\nGlancing up to see my eyes as she toyed with me, she giggled. After a long moment, she dropped her gaze back down to my throbbing erection and elegantly lowered herself to her knees. Deliberately opening her red lips, she leaned forward and gulped down my entire cockhead, while gripping me firmly with both fists around the base of my shaft. As the blonde began to post up and down my swollen log, Mistress squeezed my ass cheeks to get my attention. \n\n\"You're nearing the end of the first round, Bill. Don't forget your purpose here.\" \n\n\"Yes Mistress.\" \n\nI was breathing heavily as the two women brought me to the edge once more. As they worked me, I saw that the other members were not idle. Diane and the petite redhead were intertwined with each other with Jordan nibbling on her friend's long erect nipples while the taller girl had her hand active between the redhead's thighs. Taylor was resting her head on the shoulder of the muscular blonde from the gym while spreading her legs to accommodate someone else's hand from behind. \n\nWhen I started to pant, in danger of getting too close to the point of no return, Mistress separated us, guiding me from Amanda's suctioning mouth. As the shapely blonde rose and smiled her goodbye, she wiped her mouth with her fingers, sucking her forefinger between her reddish lips. Her leisurely saunter back in the line gave me a chance to realize that she had a great ass, and admire their muscular roundness as a striking black girl took her place. \n\nWith broad shoulders and an athlete's swagger, she smiled as she approached, an open chain vest dangling from the black leather collar around her neck. Through the glittering jewels, her high shallow breasts rode proudly on her chest, bisected by a leather strap and crowned with large black nipples, pulsing and erect. She wore a full leather mask, open only at her eyes, her nose and her mouth. Her black leather boots came all the way up her muscular thighs, leaving her smooth pubic mound exposed and shining in the bright lights. \n\n\"Hello, Bill. I'm Lydia. Remember me from the pool?\" \n\nI remembered. That afternoon was firmly etched in my mind. \n\n\"Hi, Lydia.\" \n\nTaking me by my shoulders and pressed her bare hips against my jutting cock as she held my gaze, slowly rubbing her nude pussy back and forth across my trapped shaft. Just as slowly, she rose on her tiptoes and lightly licked my right cheek. As she descended to the floor between my spread legs, she let her wet tongue trail down my torso, now slick with perspiration. Grasping my thickened cock by the root with one hand, she reached between my parted thighs to cradle my tight balls with the other. Parting her lips, she swallowed the shiny bulb, making noisy slurping sounds as she started posting up and down my erect cock. \n\nRather quickly, I felt the approach of a mammoth climax, coming much faster than with the other girls. Mistress noticed too, smacking my bare buttocks three times in rapid succession, getting my attention and breaking my mood. Without any prompting from her, I pulled back from Lydia, leaving her wanting more, kneeling before me with her mouth gaping wide. \n\n\"One last Club member, Bill. And then the final round begins.\" \n\nMesmerized by the swagger of Lydia's bubble butt as she strode haughtily away, I didn't become aware of the shapely brunette standing before me, her lightly streaked, curly brown hair pulled back into a ponytail, smiling at me from behind her black eye mask, her green eyes sparkling with laughter. \n\n\"Hello, Bill. I've been waiting for this evening for a long time.\" \n\n\"Hi Valerie.\" \n\nHer body was magnificent, perfectly rounded breasts totally revealed by the black straps of the open cupped leather teddy and topped by perky nipples, excited and erect. Tilting her hips and opening her firm thighs, she showed me a pair of thick lips pierced with two silver rings, gleaming under the bright lights. Knee-high boots and a black leather collar completed her costume. \n\nThe posing over, she stepped close to me and immediately wrapped her fist around my oozing shaft, before licking both cheeks, letting her tongue linger on my face as she squeezed my throbbing cock. Leaning back, she glanced down to watch her hand begin to pump my drooling hard-on. Still gazing down at my captured cock, she whispered as Mistress massaged both of my bare buttocks. \n\n\"I've wanted to play with this big penis of yours ever since I saw you that first day in class. And when you wore that tiny G-string, showing me just how big you are -\" \n\nShe paused as she slid her fingertip across the gaping cockhole, smearing the clear liquid seeping from the cavity all over the purple bulb. Still playing with my engorged cockhead, Valerie continued. \n\n\"You have a beautiful penis.\" \n\nAs she dipped her fingernail into the urethra, I gasped. Mistress used the opportunity to slip her finger deep into my ass, pulling my cheeks open wide to gain access as she pushed a single digit farther into my bottom than before. Caught between the two women, I squirmed under the dual assault, quickly approaching the brink of an enormous orgasm once more. \n\n\"Valerie, you need to kneel before him and honor his penis.\" \n\nLooking up into my eyes and smiling wickedly, she continued to stroke my cock ever so slowly as she removed her invading fingernail and reached between my parted thighs to cradle my tightly bound balls in the palm of her hand. \n\n\"I'm going to enjoy this.\" \n\nStill keeping her green eyes locked on mine, she slid to floor. Dropping her gaze to the quivering erection jutting toward her face, she opened her mouth and leaned close, flicking her tongue out to tickle the very tip of my swollen bulb. I shivered as she continued to play with me, lightly rolling my balls in one palm, posting her fist up and down the dripping shaft, and teasing the distended knob with her pink tongue. \n\nWhen Mistress slid a second finger into my rectum, I pitched forward and drove my cock between her surprised lips. Once she had me in her mouth, she started sucking voraciously, her head bobbing up and down as loud slurping sounds echoed off the cavernous walls. I managed to withstand the combined attack until Mistress slipped a third finger inside of my rectum. I cried out, feeling my cock swell with the pre-orgasmic anticipation. Valerie felt it too, abandoning my swollen balls to wrap both hands around my pulsing shaft. Immediately, Mistress withdrew all three fingers from my ass and pulled my hips back. With a loud 'pop', my drooling cock emerged wet and shiny from the kneeling girl's mouth, looking like it was about to explode. \n\n\"I think Bill needs a bit of a rest before the final round.\" \n\nReluctantly, Valerie rose gracefully to her feet, her firm breasts swaying only slightly with her movements. Looking directly down at my reddened hard-on, she watched it twitch and quiver urgently straining against the leather strap, vainly seeking release. I was gasping for air as Mistress continued to lazily massage my ass cheeks. Finally, the curly haired brunette lifted her eyes up to meet mine. \n\n\"I look forward to next time I get to play with this gorgeous penis of yours.\" \n\nShe winked at me and turned to leave, her slim hips swaying provocatively with each step. Valerie had a fantastic ass, tight and round. When she had assumed her position at the end of the line, Mistress released her grip of my buttocks. \n\n\"Now that Bill has passed the final trial and has met each one of you, I will blindfold him once more so that he will choose a trainer completely without bias. But first -\" \n\nAs I listened to the click, click, click of her high heels, I suddenly realized that she was walking around me. When she finally came into my vision, I gasped. She was stunning, tall and regal, her thick reddish brown hair pulled tightly back and emerging from the back of her full head mask, a long pony tail cascading down her back. Her green eyes glittered beneath the black leather. \n\n\"I am Mistress Shannon.\" \n\nHer full body was encased in a form fitting leather corset, the pale skin contrasting sharply with the sleek black leather. Large breasts spilled over the top of her corset, revealing dark red nipples that peeked above the edge of the leather, puckered and erect. Her long legs were sheathed in thigh-high boots, the tops of which grazed her bare pubic mound. Her pussy lips were plump and full, glistening with moisture in the bright light on the stage. Standing with her hands on her hips and her legs well apart, she waited, letting me study her body for a long minute. \n\n\"Seen enough?\" \n\nHer question was rhetorical, as she was amused by my open mouthed staring. Dangling the blindfold from her fingers, she sauntered toward me, her full breasts jiggling slightly above the restraining corset top. My last glance before she fastened it around my head was of her nipples. Even though they were partly hidden beneath the leather, I see they wildly erect, the deep reddish ovals wrinkled with excitement and the rigid buttons rubbing against the supple leather. And then, all I saw was total darkness. \n\nStill restrained in the shape of an 'X', I didn't realize just how sore my arms and legs were from being forced to remain in the spread eagle position while I was enjoying so much visual stimulation. But now that I was deprived of seeing all those gorgeous female bodies, I was reminded just how painful the restraints were. \n\nWithout vision, my other senses were heightened, and I listened to the sharp click of the high heels as the club members rearranged themselves. I could tell that Mistress Shannon walked behind me again, but that was all I could discern. She began to fondle my exposed ass cheeks before she spoke. \n\n\"For the last portion of tonight's ceremony, you will again receive the attention of each member's sucking mouth. The members will not be in the same order as before. They will be rearranged into a random sequence. But this time you are free to ejaculate whenever you choose. And whoever you anoint with your male nectar, whoever drinks the initial spurt of milk from your regal staff, your penis, - that member will become your trainer for the next level of your initiation.\" \n\nI had no idea what the training entailed, but the realization that I was finally free to cum had my raging hard-on bobbing uncontrollably. \n\n\"Of course, she will share your cream with the other members. Although you will remain restrained for the duration of the ceremony, since I will remove your blindfold, you will be pleased to witness that loving transfer of your sweet nectar. And if you prove to be up for it, the Club members will have the opportunity to drink additional fluid from your majestic penis, for as long as you are able to supply it.\" \n\nMy cock surged higher. I could cum as many times as possible? This was unbelievable, too good to true after all the weeks of denial. But Mistress Shannon said so, so it must be true. \n\n\"Sisters, remember that you may not talk, nor may you touch Bill's body anywhere but his genitals. All right, you may begin.\" \n\nI held my breath as I listened to the approaching footsteps, precise and confident. The unseen Club member paused and knelt between my spread legs. I gasped as she gripped my thick shaft, squeezing firmly as she leaned closer. The warmth of her breath washed over the straining bulb just before she engulfed it with her wet mouth. Sucking energetically, she seemed to have but one purpose, to get me to cum as fast as possible. \n\nMistress Shannon continued to massage my buttocks, pulling them apart and slipping her soft fingers down the valley between them, teasing my puckered asshole. The kneeling girl used both hands as she slurped loudly, pumping my slick stalk into her mouth. I felt the impending wave of an enormous explosion start to gather. I think she felt it too as she seemed to redouble her efforts to get me to erupt between her voracious lips. \n\n\"Your time is up. Release his penis.\" \n\nImmediately, the girl obeyed and my dripping cock swung free. I heard her sigh as she rose to her feet, the tapping of high heels announcing her replacement. In silence, she knelt on the floor, breathing heavily on my protruding cockhead. Mistress fingered my tight sphincter as she gave the instructions. \n\n\"You may begin.\" \n\nGently, this member curled both hands around my quivering shaft as she dipped her head and captured the swollen knob between her lips. As she launched into her bobbing head action, I felt the unmistakable stimulation of a tongue stud. I shivered under her expert assault on my hard cock. It wasn't the shy redhead with the tall girlfriend, but I couldn't recall who else had one. \n\nQuickly, I approached the point of no return and my speculation as to just who was sucking my cock mattered little. Mistress Shannon slipped a single fingertip inside of me and I gasped, driving my leaking cock farther into the open mouth before me. She accepted my intrusion, taking my plunging spear deep into her throat, until she released her two fisted grip on my shaft and her lips pressed against my hairless abdomen. Just as she started to gag, Mistress Shannon rotated her finger in my ass, stretching it wide enough to accept a second. \n\nI was just about to explode when the kneeling girl abruptly pulled her head back, coughing and trying to catch her breath. She'd recaptured my twitching stalk with one hand while she retched, squeezing and pumping while she collected herself. Gamely, she sucked me back into her mouth and tried to pick up where she had left off, but the spell was broken. A moment later, Mistress signaled the end of her session. \n\n\"Time's up.\" \n\nI could feel her disappointment as she reluctantly released my trembling cock, throbbing urgently as it jutted out from between my thighs. With the two near misses and Mistress' fingers reaming my asshole, I knew it wouldn't take much to tip me over the edge. \n\nWith my erection jerking and twitching in the air, I waited expectantly as the next girl approached, taking her place on the platform kneeling between my widely spread feet. Surprisingly, she didn't touch me with her hands. Instead, she leaned forward and licked the very tip of my cockhead. I shivered as she bathed my engorged bulb with her saliva, blowing lightly on the wet skin as she deliberately refrained from holding my shaft. \n\nWhen Mistress Shannon slid a third finger into my sphincter, I jerked forward, involuntarily driving my throbbing cock deep between into her lips. Cupping my bloated balls in the palm of one hand while the other circled the base of my shaft, the kneeling girl began to suck me ravenously. With Mistress pumping her fingers in and out of my ass, I began to match her rhythm, shoving my swollen cock in and out of the vacuum of the girl's relentless mouth. \n\nWith a loud cry, I threw back my head and erupted between those insistently sucking lips. As the first jet of cream burst from my cockhole and into her mouth, my eyes rolled back and for just the briefest of moments, I blacked out. Sagging against the restraints, I collapsed as Mistress smacked my buttocks and shoved her fingers further into my ass, bringing me back to real time. Startled by the force of her blow, I yelped and thrust my erupting cock even deeper between the kneeling girl's lips, just in time for a second spurt of my nectar to hit the back of her throat. \n\nShe swallowed, still stroking my shaft with one hand while the other kneaded my balls. Abruptly, she pulled her head back, releasing my shuddering cock and letting the third burst of cream spray across her unseen face. Mistress whacked my butt again as she spoke. ",
        "\"That's it, Bill. Anoint your new trainer. Drench her with your male nectar.\" \n\nI cried out again and thrust against her pumping hands, delivering yet another spurt of fluid somewhere on her body. Through my orgasmic fog, I sensed rather than heard others gathering closer. While she continued to ream my asshole with the fingers of one hand, Mistress kept spanking my defenseless buttocks with the other. And I kept cumming, shooting jet after jet of cream, sending them flying through the air, and landing who knows where. \n\n\"Oh yes! Cover her with the sweet cream flowing from that big penis of yours.\" \n\nObediently, I surged forward once more, hurling yet another burst of liquid onto the unseen girl. Gasping for air, I sagged against the restraints, my knees buckling from the exertion of my mammoth ejaculation. Ruthlessly, the girl milked my cock and squeezed my balls, urging even more fluid up the long shaft, encouraging it to spew forth from the open cockslit. \n\nAs the last drops of cum dribbled from the tip of my cock, Mistress pulled her fingers from my ass and caressed my blistered cheeks, soothing the flaming skin. While she rose to her feet, my new trainer kept stroking me, holding my stalk like she never intended to let me go. Mistress Shannon took off my blindfold as she spoke. \n\n\"Open your eyes and behold your trainer, Bill.\" \n\nShe'd stripped off her mask. Her pretty face streaked with strands of cum, the light haired brunette with the gorgeous body from the pool stood beaming before me, both hands still wrapped around my slowly drooping cock. I was pleased that I had unknowingly chosen Erika, and my cock responded, pulsing in her hands as she kept fondling me. \n\n\"I'm delighted that you choose me, Bill. I can't wait to start our sessions together.\" \n\nOther members had crowded around us, all having discarded their masks, congratulating her. I was surprised when the black girl, Lydia, dipped her head and began to lick the rope of cum that decorated her friend's shoulder. That seemed to be the expected norm as the gorgeous tall blonde, Amanda I think, ducked her head and lovingly started licking her neck. As the two girls attended to her upper body, the strawberry blonde who was the sorority president turned Erika's face toward her and briefly kissed her on the lips, exchanging my cum between them before sliding to her cheek and sucking up the creamy drops I'd deposited there. As the Asian girl leaned close to kiss Erika on the lips, Taylor, the freckled blonde let her kisses slide lower until she too was licking the trainer's neck and shoulders. Mistress Shannon whispered in my ear. \n\n\"It's traditional that the new trainer shares the trainee's nectar with the entire chapter.\" \n\nI just nodded, still tightly bound hand and foot by the ropes hanging from the wooden frame. Mistress caressed my ass cheeks as Mya broke the wet kiss and sank to her knees, eyeing my still thickened cock, firmly captured in Erika's grip. Valerie took her place, forcing her tongue into my new trainer's mouth as the other three girls kept licking the beads of cum from her skin. When the curly haired brunette from the art class severed the kiss and dropped to floor to join Mya, Brooke seized the opportunity to clean Erika's face, energetically licking and sucking the remaining drops of my cream, the silver stud flashing between tongue strokes. \n\nBoth Mya and Valerie leaned closer to my crotch, sliding their hands up my spread thighs, ever nearer to my cock, watching intently as it slowly revived with Erika idly stroking me. Although it had never gone completely limp, it had definitely lost stiffness and altitude, even while staying long and thick in my new trainer's grip. \n\nShe was relishing the licks on her neck, craning to give the Lydia and the two other girls complete access to her upper body all the while energetically returning the muscular blonde's kisses. As the girls continued to lick and kiss Erika, I glanced over her shoulder and saw Jordan and her tall friend on a couch, kissing and fondling each other, more interested in the other than sharing in the ritual. The petite redhead had spread her legs open wide to allow Diane easy access to her bare pussy, and now that she had discarded her full head mask, I saw she was a brunette with close cropped curly hair. \n\n\"Erika, let the others have a taste of him.\" \n\nImmediately, my new trainer released her two handed grip on my still distended cock and turned to the strawberry blonde, cupping her small breasts through the chain bikini and tweaking her incredibly long nipples as she kept sharing a tongue kiss with Brooke. I gasped. Valerie had circled the base of my shaft with one fist and squeezed firmly, milking the very last drop of my cream, offering it to Mya. \n\nThe Asian girl leaned closer and eagerly sucked the reddened bulb between her lips, tasting the juice she'd been denied earlier. I shivered as she expertly used her studded tongue, rimming the pronounced ridge around the crown of my shiny bulb, licking the sides of my heavily veined shaft and dipping the tip of her tongue into the open eye of my cockhead. She certainly knew her way around a cock. \n\nBrooke broke off the extended kiss and knelt on the floor between Valerie and her gym partner. Satiated for the moment, Mya let my reddened knob pop from her mouth so that Valerie could offer it to the blonde. Immediately, Brooke swallowed my bulb and started posting enthusiastically, up and down, up and down, coordinating her bobbing head with the rhythm of Valerie's hand strokes. What she may have lacked in technique, she made up for it with extra zeal. \n\nSurprisingly, I began to feel a renewed vitality in my cock. The shapely brunette felt it too, pumping my swelling shaft with forceful determination into the blonde's slurping mouth as she grinned up at me. While she continued to massage my ass cheeks, Mistress Shannon peered over my shoulder. \n\n\"Go easy on him, girls. We don't want to exhaust this big penis of his too soon.\" \n\nHer words had little effect, as Brooke's loud sucking noises seemed to intensify. Mya reached up to cradle my tightly bound balls in the palm of her hand as Valerie kept pumping. It didn't take long until my cock regained a full erection. The muscular blonde leaned back, letting my hard-on emerge from between her wet lips, shining with her saliva in the bright lights, her panting mouth wide open, the stud in her tongue glistening. \n\nReleasing my buttocks and moving lightly around me, Mistress stopped with her legs spread and looked down at the kneeling blonde. I was surprised to see that she still wore her mask. Turning to watch Mistress Shannon, Valerie slowed her rhythm on my jutting cock. \n\n\"Brooke, put that marvelous tongue of yours to work between my thighs.\" \n\n\"Yes Mistress.\" \n\nImmediately, the stocky blonde slid between the standing woman's boots and grasped her bare ass with both hands, pulling the prominent pussy into her face. We all watched as she extended her tongue and leaned closer. The tall brunette mistress shuddered as that long pink tongue found its mark, moaning as it penetrated deep into her cleft. \n\nLooking beyond her, I saw that Erika and the 3 members that were attending to her had retreated to a couch. Lydia was kneeling beside the couch and had her head buried between my new trainer's open thighs while the shapely brunette was passionately kissing Taylor, the strawberry blonde with the freckled skin. She was splayed across the couch, allowing Amanda, the other blonde easy access to her exposed pussy. \n\nOn another couch, Jordan was lapping at the crotch of her brunette partner. Diane had retrieved a riding crop and was lightly tapping the kneeling redhead's ass cheeks. My attention was brought back to my cock as Valerie began to post her fist up and down with more determination and purpose. Her warm breath washed over my swollen cockhead as she leaned closer. I shivered as the tip of her tongue flicked out and teased my rounded knob, sliding into the gaping eye, rimming it lightly. \n\nI gasped as she swallowed the entire bulb, stretching wide to accommodate my girth. Gripping the base of my shaft firmly, she began to bob her head up and down on my stalk, working to get more of the long shaft into her mouth until I felt the back of her throat. Immediately, she pulled back, letting my dripping cock pop free of her lips as she continued to stroke me with both hands. Grinning broadly, Valerie looked up at me, saliva streaming from the corners of her full lips, her pretty face beaming. \n\n\"Don't hold back, Bill. Tonight, you're free to cum as many times as you can. And the next time this big penis of yours to explodes, I want it to be deep in my mouth.\" \n\nInstantly, she ducked her head and gulped my stiff pole back into her mouth. As she continued to suck my hard cock, she gradually slid her hands onto the front of my thighs, and then around behind me to cup my buttocks. Still cupping my balls in one hand, Mya wrapped her other around the thickened shaft, squeezing and pumping me in coordination with the brunette's enthusiastic head dance. \n\nMistress began to moan, her bare hips gyrating against Brooke's face. Across the room, Jordan was bringing her curly haired partner to a loud, boisterous climax. And when Valerie slipped her fingers into the valley between my spread ass cheeks, teasing the puckered hole, I started to gasp, knowing that my next orgasm was near. \n\nMore moans came from the group with Erika just as Mistress Shannon cried out, pulling the blonde's head firmly against her crotch. Humping her face as best I could while still restrained and spread eagled, I exploded into Valerie's mouth, the first blast of cum hitting the back of her open throat. \n\nWhile the kneeling brunette held onto my bucking hips, Mya kept pumping my spasming cock, jacking me into her mouth. Valerie swallowed the early jets of my milk, but as I kept spurting deep into her throat, the sheer volume began to overwhelm her. As my white nectar started to dribble from both sides of her mouth, the Asian girl leaned close and licked her face, lapping up the overflowing milk, still stroking my thick shaft between Valerie's sweet lips. \n\nFinally, she pulled back and kissed Mya passionately. As they continued with their lips pressed together, their tongues intertwined and the shapely Asian kept pumping my slowly deflating cock, slick from my juice and Valerie's spit. Smick, smick, smick - I was surprised that I could hear the familiar rhythm over the other sounds of passion in the room. \n\nMistress Shannon shuddered with a last tremor of her climax, her breasts jiggling atop the supporting corset, her reddish nipples puckered sternly erect with her arousal. Exhaling loudly, the brunette mistress reached down to help Brooke rise to her feet, those magnificent globes swaying heavily. She turned to me, looking down at my wilting erection as I sagged against the restraints. I was exhausted. \n\n\"I hope there's more cream in that big penis of yours. Not all the members have had the opportunity to drink your nectar.\" \n\n\"Yes Ma'am, I think so. I just need a little rest.\" \n\n\"That's a major difference between men and women. We can go all night.\" \n\nSmiling, she gestured around the room. Everywhere, female bodies were entangled, and passionate moans and cries echoed off the high ceiling. \n\n\"This was a major concern when we contemplated accepting men into our club. Some members were skeptical that men could keep up with us and didn't even want to consider it. It took someone with special qualifications to get this far.\" \n\nShe glanced back down at my nude crotch, watching the gorgeous Asian stroke my limp cock, trying unsuccessfully to coax it back to life. Disappointed, she eventually released me, letting the long shaft swing free. Valerie, Mya and Mistress Shannon all watched it hang between my outstretched thighs, pointing down toward the floor, glistening wetly in the spotlights. The Asian began rubbing the kneeling brunette's shoulders, gradually moving lower until she was massaging her rounded breasts, reaching between the leather straps of her teddy to cup them lovingly and lift them higher. Valerie closed her eyes as Mya tweaked her nipples, fingering them into wildly excited buds. \n\n\"Mya, why don't you and Valerie move to a couch while I attempt to revive this penis of Bill's?\" \n\nThey didn't answer as Mya leaned over to kiss the brunette, slipping her studded tongue into Valerie's mouth. With their lips still locked together, the two girls rose rather awkwardly from the floor. As their kiss became more passionate, they walked toward an empty couch, Valerie palming the other girl's ass cheek and squeezing it vigorously. Mistress Shannon stood right in front of me, legs spread apart and her hands on her bare hips, just below the lower edge of her corset. Gazing down at my dangling cock, she continued without raising her green eyes. \n\n\"I don't think I've ever seen this penis of yours soft. It's always been hard and stiff.\" \n\n\"I'm sorry Ma'am.\" \n\n\"No need to be. I've just gotten used to seeing it fully erect.\" \n\nCurling her hand around the shaft, she lifted it, weighing me in the palm of her hand. \n\n\"Does it always stay this long and thick when you're not aroused?\" \n\n\"No Ma'am. It gets smaller, especially when I exercise, or when it gets cold.\" \n\n\"I see.\" \n\nWith her eyes still focused on my cock, she began to squeeze me, gently but firmly. Over her shoulder, I could see that the tall gorgeous blonde had disengaged from the group on the couch with Erika. Walking toward us with a lithe grace, wearing an open cupped leather teddy that let her surprisingly full breasts bounce lightly, she didn't need any support as they rode high on her chest. As she drew close, I could see she had a wild look in her smoky blue eyes, and her reddish brown oval nipples were stiff and crinkled. Mistress glanced up as the other girl stopped to watch. \n\n\"Do you want more of this big penis, Amanda?\" \n\nThe girl with the honey blonde hair nodded, her blue eyes still staring directly at my heavy cock. Almost absentmindedly, she reached up to finger her nipples, twisting and stretching those buds into long sharp points, bullet tips crowning the firm globes of her breasts. Suddenly, I felt new life in my cock. Mistress Shannon must have noticed it as well. \n\nSmiling slyly, she gave me one last squeeze before releasing me, lifting my cock high and then letting it drop. Long and heavy, it swung back and forth between my widely parted thighs as the two women watched. Under their intense scrutiny, my log started to rise and fill, twitching hesitantly as it grew, jerking out and up until jutted from between my spread thighs, still pointing down toward the floor. \n\n\"It's all yours, Amanda. Just be sure to share him.\" \n\nThe supple blonde's eyes lit up as she immediately dropped to her knees between my feet, wrapping both hands around the base of my shaft. \n\n\"Certainly, I will, Mistress. I do love to feel a penis grow and swell in my mouth.\" \n\nLeaning forward, she sucked the reddened bulb between her lips. Once I was deep in her throat, she just held me there, lightly squeezing the base of my shaft with her fist. It was an exquisite sensation. I could feel the tip of my cockhead resting against the back of her gullet, my log continuing to slowly thicken as her throat muscles massaged me. Mistress finally looked up at my face as she turned to leave us, her green eyes twinkling. \n\n\"Bill, I'm leaving you in good hands, or rather, in a good mouth.\" \n\nHer rounded hips swaying, she sauntered off toward the couch where the elfin redhead was receiving a full blown whipping on her bare ass cheeks from Diane as she continued to feast between the legs of her brunette friend. The riding crop stopped as Mistress spoke to them, but I couldn't hear any words as moans and slurping sounds from the other couches drowned them out. Besides, my attention was drawn back to the shapely blonde with my swelling cock in her throat as Amanda started to hum, the soft vibration increasing as my cock continued to expand. \n\nMy breathing grew heavier and more ragged as the light squeezes of her hands gradually became outright strokes, firm posting up and down the part of my shaft that wasn't between her lips. Gasping for air, the stunning blonde eventually had to spit me out. While she kept pumping my slick stalk, she looked up into my eyes, beaming. \n\n\"You have a gorgeous penis, Bill.\" \n\nWith that, she ducked her head and started to work my now fully erect cock in and out of her mouth, sucking voraciously while jacking the slippery shaft with both hands. I wasn't sure how long it would be before I delivered another load of cum between her lips. Since I was concentrating on the action of her mouth, I neglected to notice Mistress returning with Jordan and her partner in tow until the three of them stood right in front of me. The tall brunette didn't look thrilled. \n\n\"Amanda, Jordan and Diane have not yet had the opportunity to drink Bill's nectar.\" \n\nThe kneeling blonde glanced up at the standing trio, but since she didn't lift her head off my hard-on, she couldn't reply. She just nodded, keeping her lips wrapped tightly around my cockhead. Mistress chuckled. \n\n\"Girls, I'm not sure that she really wants to share.\" \n\n\"That's okay with me.\" \n\nThe brunette with the closely cropped hair was attempting a feeble joke, but Mistress was not amused. She fastened her steely gaze on Diane. \n\n\"Kneel down and take him into your mouth. You may yet find enjoyment in controlling a man.\" \n\nLooking doubtful, Diane obeyed, grudgingly kneeling beside the slurping blonde. Ever watchful, her redheaded partner took a position kneeling opposite. Still nursing on my purple bulb, Amanda released her two fisted grip on my cockshaft and slid her hands onto my inner thighs, allowing the other two girls access to my slick pole. Mindful that Mistress Shannon was hovering over her, Diane extended her tongue and licked tentatively at the side of my swollen pole. \n\n\"Better. Now put a little enthusiasm into it.\" \n\nObediently, she sucked the heavily veined side of my stalk into her mouth. Jordan followed suit, tentatively closing her mouth over my thick shaft until their lips met. Gradually, their kissing grew more fervent with my distended rod trapped between them. As Amanda continued to bob up and down on the end of my engorged bulb, they matched her rhythm, so that the three of them were actually exchanging wet kisses. It was almost as if my hard-on was in the way. \n\n\"Much better.\" \n\nMistress Shannon nodded approvingly as she moved around behind me, palming my ass cheeks, open and vulnerable as I hung helplessly spread eagle in the wooden frame. Diane slid one hand up the back of my thigh until she cupped the underside of my buttock, squeezing and massaging, coordinating her efforts with Mistress. Jordan again followed her friend's lead, lightly tracing her fingertips up my leg as well. Amanda cradled my tightly bound balls in her palm, squeezing them gently as she kept posting up and down. Mistress leaned close to my ear. \n\n\"Do you like this, Bill? Do you like having three gorgeous girls kneeling at your feet, sucking your big penis?\" \n\nI gasped. \n\n\"Yes Ma'am.\" \n\nThe combined exertion was getting to me. I felt Mistress pull my ass cheeks wide, slipping her hand down between them, circling my ass hole, pressing her fingertip firmly against the puckered opening. She just held it there as she whispered again. \n\n\"Relax, Bill. Let me in. I'm going to help you anoint these Club members with your cream.\" \n\nI took a deep breath and consciously tried to loosen the muscles surrounding my sphincter. Gently, but firmly, Mistress pushed until her forefinger popped inside. After sliding the one finger in and out once, twice, three times, she twisted her finger and rimmed my hole, stretching it wider until she was able to introduce a second finger. As she rotated them and pushed deeper, she leaned close, poking sharply erect nipples into my back. ",
        "\"That's it, Bill. Just let go. We need to get you looser back here. There are many delights that await you once you learn to accept this intrusion.\" \n\n\"Yes Ma'am.\" \n\nI was gasping for breath, getting closer to the edge when she began to pump her fingers in and out. Following her gradually increasing rhythm, I started to move my hips, shoving my dripping cock in and out of the blonde's sucking lips. With one last squeeze of my balls, Amanda released them and reached behind me to grab my bare buttocks, jostling aside the other hands that were in her way to pull me closer. I started to moan as Mistress picked up the pace, pounding my asshole. Gamely, the two other girls kept their lips wrapped around my throbbing shaft as I rammed it like a piston into the blonde's open mouth. \n\n\"Now, Bill. Feed Amanda your nectar.\" \n\nAs she spoke, she thrust her fingers far into my cavity, holding them there, massaging my prostate as I cried out and exploded between the kneeling girl's voracious lips. She took the first blast down her throat, and then quickly pulled back and released my spurting cock, arching her back and offering her magnificent breasts up as my target. Diane and Jordan were still trying to hold the shaft of my jerking erection in their mouths as more spurts of white cream squirted from the gaping eye at the very tip, splattering onto the blonde's tawny skin. \n\n\"That's it, Bill. Empty your balls. Give them your male milk.\" \n\nWithout any hesitation, Diane ducked her head and sucked the spewing bulb between her lips, wrapping one hand around my throbbing pole. Turning slightly for a better angle into her mouth, l erupted with another jet of cream, sending it deep down her throat. Although she choked on the large amount of cum that I gave her, she held on, the excess dribbling out both sides of her mouth. \n\nQuickly, Jordan spat out my slick shaft and leaned over to kiss Diane, licking the drops of white liquid off her chin. With one last reaming of my rectum, Mistress Shannon popped her fingers out and patted my ass cheeks as the kneeling brunette milked the final drips of cum into her mouth. Pulling her head back, Diane gave her redheaded friend a sloppy kiss, exchanging saliva and white cream as she continued to squeeze and stroke my cock. Amanda leaned back and let go of my legs so she could rub the creamy globs of cum into her skin with one hand while the other snaked down between her spread thighs and started rubbing her open pussy. \n\nAs Mistress stepped back to survey us, the threesome with Erika was beginning to untangle. While Lydia and my new trainer talked softly and lightly stroked one another, the strawberry blonde rose and adjusted her chain bikini, arranging the top so that her long pink nipples poked proudly though the glittering chains. \n\n\"He's pretty tasty. I didn't expect his juice to be so sweet.\" \n\nMistress chuckled at Jordan's remark. \n\n\"I guess his diet of pineapple is working. Diane, why don't you give Jordan a sip directly from the source?\" \n\nReluctantly; the tall brunette pointed my still thickened cock toward her partner and milked the shaft. When a single glistening drop emerged from the gaping hole at the tip of my reddened bulb, Jordan clapped her hands in delight and immediately ducked her head. Delicately, she flicked her tongue out and gathered in the drop, arching her beautiful neck as she swallowed, relishing the flavor. \n\n\"Is there any more?\" \n\nHer pale blue eyes gazed at my cockhead as Diane milked my shaft one more time. When another drop appeared at the aperture, she leaned over and sucked my entire bulb into her small mouth, wrapping both hands over Diane's. Even though I had begun to wilt, she still had difficulty in stretching her lips around the whole knob. Enthusiastically, she tried to swallow more of my pole, bobbing her head up and down as she'd seen the other girls do, but her efforts were cute more than effective. An inch or two was all the distance her head moved. \n\nThe sorority president, the strawberry blonde with the incredibly long nipples joined us, sinking to her knees beside Amanda. Leaning over the shapely blonde, Taylor took her head between her hands and kissed her, deeply, passionately, sending her tongue snaking between Amanda's lips and down her throat. When she came up for air, Taylor smiled and started lapping up the white ropes of cum that laced her friend's impressive chest. \n\n\"Jordan, I think that's all he's got.\" \n\nDiane spoke lovingly, almost as one would admonish a child. Looking extremely disappointed, the redhead let my shrinking cock slip from her mouth. Holding it up before her pale blue eyes, she gazed at it longingly. \n\n\"It's all right, honey. You'll get more from it another time.\" \n\nLooking as if she might cry, Jordan rose and retreated to an empty couch, where Diane went to console her, holding her close and whispering in her ear. Mistress Shannon's voice was low as she spoke over my shoulder. \n\n\"Is she right, Bill? Is that all there is tonight? Is your big penis finally empty?\" \n\nI shrugged, causing my dangling cock to swing back and forth between my spread legs. \n\n\"I don't know Mistress. I don't think I've ever cum four times in a row.\" \n\n\"Ah, but you're young. And you have so much visual and tactile stimulation.\" \n\nThe two blondes at my feet were kissing ardently, tongues and bodies intertwined. Amanda had her fingers deep in the other blonde's pussy while she was receiving the favor returned. Both were moaning, obviously close to the edge. Behind me, Mistress Shannon was lightly stroking my ass, letting her fingertips trail over my skin, teasing me. I shivered, sending my still lengthened cock swinging again. \n\n\"And we have time. It's early.\" \n\nIt didn't feel early to me. My shoulders ached. My hips were sore. Both my wrists and my ankles were rubbed raw by the restraining leather cuffs. Even though they were lined with a soft fleece material, I was ready to have them off. And my poor abused cock was red and tender from all the attention. It hung thick and heavy down between my spread thighs, looking as worn and exhausted as I felt. \n\nWhen the sound of high heels approaching across the platform echoed off the walls, I glanced up. Erika and Lydia had finished their session on the couch and were coming toward me. The black girl was in the lead, walking with the arrogant strut of a star athlete. Her shallow breasts barely moved with each step, topped with the blackest nipples I'd ever seen. They were proudly erect, jutting out toward me as the two girls drew near. Mistress continued to fondle my bare ass as Lydia spoke. \n\n\"We were wondering if Bill was ready for some more action.\" \n\nIt sounded as if she was addressing Mistress Shannon, but her steady gaze was focused directly on my limp cock. Erika stood slightly to one side, stroking the black girl's back. Neither one acknowledged the pair of blondes writhing on the floor at our feet. I could hear the smile in Mistress' voice as she answered. \n\n\"I don't know. What did you two have in mind?\" \n\nLydia shifted her weight and spread her booted legs well apart, opening her legs so that the brunette could have easy access between her thighs. The moans from the floor seemed to be reaching a peak. My eyes darted back and forth, switching between watching the blondes bring each other to a roaring climax, and fascinated by what Erika was doing to Lydia from behind. My new trainer answered as the black girl began to rotate her sturdy hips against her friend's hand, studying the way my flaccid cock dangled wetly between my outstretched thighs. \n\n\"Lydia wants to drink his nectar straight from the source.\" \n\nWith one hand still palming my buttock, Mistress reached around my waist to curl the other under my thick shaft, lifting it up for all to see. The moans from the blondes sprawled on the floor gradually subsided and they helped each other up, taking a leisurely retreat to an unoccupied couch. \n\n\"I don't know that this big penis has anything left to give.\" \n\nSlowly, deliberately, she squeezed and stroked my stalk, trying to revive me. \n\nInching closer to me, not wanting to break from the attention Erika was giving her, Lydia bent at the waist and parted her lips, sticking out her tongue to flick the very tip of my reddened bulb. I shivered as Mistress Shannon pulled on my cock, offering it to the muscular black girl as she parted her lips. Squeezing my ass, Mistress encouraged me to arch my back and thrust my hips forward, and I let her feed my cock into Lydia's yawning mouth. \n\nThe position put more strain on my already aching shoulders, and the throbbing pain threatened to distract me from Lydia's talented mouth. Mistress Shannon continued to grip my cockshaft at the very root, squeezing and pumping it between the black girl's eagerly sucking lips. Since she was leaning over, I had a clear view of Erika's two-fingered attack on her friend's pussy, coordinating her thrusts with the rhythm of Lydia's mouth on my cock. Mistress slid her fingers back between my parted ass cheeks, teasing my puckered crevice. \n\nI knew what was next, at least I thought I did. But I was totally surprised when Mistress Shannon smacked my defenseless buttocks. I yelped and drove my cock deeper down Lydia's throat. To her credit, she started to gag, but grabbed my hips with both of her hands and hung on. Smick, smick, smick - this time the familiar sound came from the bent over girl's pussy as well as from her mouth. \n\nMistress' spanking grew harder and more intense, and although I appreciated the lingering caresses she applied between strokes, I found myself dreading the next blow. So I was totally astonished when my cock started to swell, partly in response to the persistent assault by Lydia's mouth, and partly as the result of the steady slaps by Mistress Shannon. \n\n\"I think he likes having his ass spanked.\" \n\nMistress had noticed my slowly reviving cock, growing thicker in her hand. \n\n\"Maybe he just appreciates Lydia sucking his big penis. I know she likes it.\" \n\nErika grinned at me as she kept pumping her fingers in and out of the Lydia's wet pussy. The black girl nodded and murmured her assent as she slurped, the movement and vibration adding another dimension to her assault on my cock. Dropping to her knees, my new trainer replaced her fingers with her tongue, matching the rhythm that the three of us had established. Lydia cried out when she felt the invading tongue between her thighs. Pulling her head back briefly, she freed my dripping wet cock just long enough so she could speak clearly to Erika over her shoulder. \n\n\"I love it when you do that.\" \n\nMistress interrupted her with another stinging blow to my backside, causing me to lurch forward and bury my now fully engorged cock back between her thick lips. The sharp smacks continued, coming quicker as Mistress Shannon picked up her pace. \n\n\"I think he's getting closer, girls. I'm not sure just how much juice he has left. This big penis has ejaculated a lot of milk tonight.\" \n\nLydia abandoned my twitching cock once more to look up at her mistress. \n\n\"I want to drink it all, Mistress. That is, unless I need to share it with someone else.\" \n\n\"Let me see if we've missed anyone.\" \n\nIn between spanks, Mistress paused briefly and surveyed the room. Following her eyes, I saw that all of the other girls were busy. Mistress brought my attention back with another quick strike of my exposed ass, sliding one hand around my waist, spreading her fingers so they covered much of my lower abdomen, just above my jutting hard-on. I didn't think about it then, but it made sense in just a moment. \n\n\"No, Lydia. I think everyone has participated. You're free to drink as much cream as he can give you.\" \n\nThe black girl renewed her slurping attack on my cockhead, and as she increased her pace, I could feel the telltale stirrings deep in my balls. Grunting with each thrust, I began to pump my hips, driving my erect cock into her willing mouth. She stopped her bobbing movement and held her head still, giving me a stationary target and guiding my bucking hips with her hands. Erika worked her finger into her friend's upraised ass and Lydia moaned in appreciation, tilting her hips higher to accommodate the extra attention. \n\nWithout any warning, Mistress Shannon shoved three fingers up my sphincter. I would have driven my cock all the way down Lydia's throat, but for the restraining hand around my waist. All I could do was cry out, motionless except for the pulsing pole that was about to explode into the vacuuming mouth. \n\nMistress withdrew her hand and rammed me again. This time, I went over the edge, screaming with pain and ecstasy as the first burst of fluid erupted between the kneeling girl's lips. Sucking voraciously, she took every spurt I could produce, eagerly drinking in the white cream. I had much less this time, and when I finished, gasping for breath and slumping against the restraining ropes, she didn't stop, milking my shrinking shaft with both hands and suctioning my cock for the every last drop. \n\nI winced at her intensity, involuntarily pulling back from her face as she continued to suck. Mistress spotted my discomfort as she withdrew her fingers. Patting my buttocks affectionately, she stepped around to my front and gently touched Lydia's shoulders, finally breaking the girl's ferocious concentration. \n\n\"Lydia, I think he's empty. There's nothing left. You've sucked his penis dry.\" \n\nErika looked up from behind those muscular black buttocks, grinning at me. Weakly, I smiled back. Lydia sighed, releasing my reddened cock, watching it swing limply between my widely parted thighs, dripping with her saliva. She shuddered with another orgasm as the brunette kept her fingers busy, the spasm rippling through her toned body. Mistress watched for a moment, letting the contraction pass through those shiny black muscles before she spoke. \n\n\"He might have another one if we really work him, but I doubt it. Men are just built differently.\" \n\nAs Lydia crumpled onto the floor, moaning softly, my trainer stood up, arching her back as she stretched, her full breasts riding high and proud on her chest . Her large nipples were vehemently erect, puckered and reddish brown, contrasting sharply with the tawny suppleness of her skin. The half corset was still cinched tightly around her slim waist as she stood with her feet spread, hands resting lightly on her bare hips. She was stunning' \n\n\"Erika, help me free him.\" \n\nThose amazing breasts barely moved as she bounded forward, reaching up to release my wrists from the ropes overhead. Valerie had untangled herself from the others on the couches, and knelt at my feet to unfasten my ankles. I was so exhausted I almost collapsed onto the wooden platform. The girls caught me, and helped me back down the long hallway and into the small changing room, while Mistress Shannon followed. Once I was settled onto a chair, the two girls left. Still wearing her black leather head mask, she smiled. \n\n\"Take a shower and relax, Bill. The festivities will probably go on for a while longer.\" \n\nI nodded, watching her reddish nipples pulse as they extended past the edge of her corset. \n\n\"Your new trainer will be back shortly to take back to campus.\" \n\nClosing the door behind her, she left me alone. \n\nSince I'd always been blindfolded, I had never seen the interior of the room. One wall held a small bank of lockers, three of which were locked while one stood open. I was surprised to discover that my clothes had been retrieved from the house on Elm Street and were waiting for me there. \n\nIn the center of the tiny room sat an easy chair while a wooden stool was off to the side. No curtain covered the single shower stall, but there were plenty of amenities, soap, shampoos, bath gels, body creams, and lots of fresh towels. I took off my leather cock strap and my collar and stepped under the stinging spray, luxuriating in a long, hot shower. \n\nAfter shutting off the water, I dried off and got dressed, sitting in the surprisingly comfortable chair to wait. It was so comfortable that I dozed off. I had no idea how long I was out when a knock at the door finally aroused me. Erika stuck her head inside and grinned at me. \n\n\"Good. You're ready to go. Come on, I've driving you back to campus.\" \n\nHer dark brown hair was still damp. Evidently, she had taken a quick shower too. Her clothes were those of a typical coed, shorts, sandals, and a loose tailored blouse with no hint of the leather queen she'd been earlier. She was carrying a large gym bag, so I guessed that it held her leather costume. \n\nIn silence, she led me down the corridor outside to a gravel parking lot. Several late model cars were parked haphazardly, including the silver Acura with black leather interior. Erika's car was a dark blue BMW parked next to it. After starting to get in the back seat, I suddenly realized that no one else was riding with her. The beautiful brunette smiled at my mistake but said nothing as I got in the front with her. \n\nThe building we'd been in seemed to be a converted barn in the rear of a rather large estate. As we passed the main buildings, I saw that there were lights on and a number of luxury cars parked there as well. Erika exited the long gravel driveway and pulled onto a paved county road in the decidedly rural area. She drove in silence for a couple of miles before she cleared her throat. I still hadn't seen any neighbors. \n\n\"You probably have lots of questions, Bill. I can only tell you a little bit now, mostly about myself. I'm a junior, majoring in medieval history, with a special interest in torture implements and the Spanish Inquisition.\" \n\nShe glanced at me and smiled. \n\n\"Although I find my studies useful for the Club activities, rest assured that I will not be using any of them on you.\" \n\nI smiled back at her, only somewhat relieved by her joking tone. With her deep blue eyes back on the road, she continued. \n\n\"Along with the other girls, I live at the Sigma Epsilon sorority. I'm consistently on the dean's list and you already know I'm on the swim team. And I'm good friends with Lydia, but you probably already knew that as well.\" \n\nThere was another silence, this one a bit more awkward than the last. I was embarrassed and tongue tied around this gorgeous brunette. I simply didn't know what to say, so I decided to confess that. \n\n\"Erika, I don't know what to ask.\" \n\nShe giggled and smiled, giving me a quick glance at a stoplight. \n\n\"Well, that's not a surprise. Think about it over the rest of the weekend. You'll have a chance to have your questions answered, so you better think of some to ask.\" \n\nShe cast another look at me, and then dropped her gaze down to my crotch. \n\n\"Open you pants and take out your penis.\" \n\nIt wasn't a question. It was a command, the very first I'd received from my new trainer. Although my hesitation was short-lived, Erika addressed it right away. \n\n\"Bill, I am now your trainer, and you are expected to obey me immediately, to follow my instructions without delay.\" \n\n\"Yes Ma'am.\" \n\nProperly chastised, I quickly unzipped my shorts and reached inside to cup my cock and balls, lifting them out into the open. Erika took another quick peek and nodded. \n\n\"Much better.\" \n\nWe drove in silence for another minute, with my trainer stealing looks at my limp cock. Although it stayed flaccid, it did feel thick and heavy lying on my thigh. \n\n\"I know quite a bit about you, Bill. I know that you have an older sister who bossed you around when you were younger. I know that your father left your family when you were five, and that your mother works diligently to provide for you and your sister. I know that you're on partial scholarship and that you have to work for your meals and books.\" \n\nShe paused and took another glimpse of my exposed cock. ",
        "\"I know that your erect penis is just under nine inches. That's the official measurement, although I suspect that it may be longer now.\" \n\nI began to blush as this dazzling coed continued discussing my cock like it was the weather. \n\n\"It certainly felt longer than that when it was down my throat. And I know that the glans is more than 6 inches around when you're fully aroused.\" \n\nNot surprisingly, it began to lengthen and fill as she spoke, stretching down my thigh. I shifted in my seat, adjusting my position, allowing it room to expand. Noticing my not so subtle movement, she smiled at me and I blushed. \n\n\"I know that you like girls, and that your penis is quite responsive to stimuli.\" \n\nWe pulled onto campus and halted briefly at a stop sign, which gave the stunning brunette time to steal one more glance between my thighs. \n\n\"Time to put that away. It's had enough exercise for tonight.\" \n\nErika drove through the parkway that wound through the campus until she stopped in front of my dorm. Turning to me, she touched me briefly on my shoulder and smiled. \n\n\"I'm glad that you picked me to be your trainer, and I'm really looking forward to our training sessions. Sleep well, Bill. We'll be in touch.\" \n\nI felt awkward. I had an impulse to respond in some way to her, to hug her, to kiss her, something. But I just nodded and mumbled. \n\n\"Goodnight, Erika.\" \n\nSheepishly, I exited the car and bounded up the steps to my dorm. Even though I felt socially inept, I'd been accepted into the White Vampyres Club. And for the first time in weeks, my balls were empty. \n\nOnce I crawled between the sheets of my bed, I immediately fell asleep. I slept most of the next day, finally rousing myself just before 2 in the afternoon. When I turned on my computer, another message was waiting in my in-box. It had been sent from the Art Department."
    ],
    "authorname": "gupiao",
    "tags": [
        "femdom",
        "group sex",
        "ffm",
        "male submissive",
        "mistress",
        "blowjob",
        "fellatio",
        "college",
        "coed",
        "orgy"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/wvc-ch-14-the-supplicant-ceremony"
}