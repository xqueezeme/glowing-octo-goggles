{
    "title": "Lights End",
    "pages": [
        "Linley flipped her foot irritably as she looked across the breakfast table at her boyfriend. \"David Matthew, we have had this conversation! I told you I was not getting married until I was out of college.\"\n\n\"But babe, you can go to school and live with me, it will be great!\"\n\n\"I said no. I have made it clear for the last six months that I wasn't ready and I didn't want to get married the day I turned eighteen!\"\n\n\"But you know how girls are. They say they don't want anything for Valentine's Day but they are secretly hoping for a huge surprise.\"\n\n\"Not me and you know that. I am serious. I won't even consider marriage until I am out of college, so please stop pressing the issue!\"\n\n\"Babe, don't you love me like I love you?\"\n\n\"Of course I love you David Matthew, but I want you to stop pushing me and trying to change me. I know you don't want me to go to school, you want to take me back to Charleston with you and 'mold' me as you put it.\"\n\n\"Babe, you are being a little unreasonable.\"\n\n\"I am not. I have been saying it for months, since the first time you asked. AND I told you last week that I would not change my mind today and say yes just because I was suddenly old enough. Seriously, I am done with this conversation. I cannot believe you showed up first thing in the morning on my birthday to push this.\"\n\n\"Babe, we can at least talk about it!\"\n\n\"I am talked out! I said no. Actually, you know what? I don't really think this is going to work between us. You thought I was this young, impressionable, biddable girl that you could shape to your wants, but I was never that girl.\"\n\n\"You were happy enough when I asked you out!\"\n\n\"What sixteen year old wouldn't be stoked that a twenty year old was asking them out? The problem is that now I know that it was never about me, it was about you making me what you wanted me to be.\"\n\n\"That's ridiculous!\"\n\n\"Is it David Matthew? And what the hell about that anyway, why do you demand both names like you want to constantly feel like you are in trouble with mommy? I assumed you didn't want me to meet your parents because I was underage, now I think it's because you have mommy issues.\"\n\n\"You don't have to be a bitch, Linley,\" he scowled, standing.\n\nLinley stood as well. \"This is good, actually. I have felt this coming. Part of me knew I was resisting because I knew I didn't want to spend the rest of my life with you.\"\n\n\"Linley, don't do this. Come on babe, let's go kiss and make up, we can talk about the rest later. Come on, I got a present for you,\" He said softly, trying to put his arms around her.\n\nLinley pulled away, rolling her eyes. She knew what the present was, it was the same thing it always was for every event over the last two years. It was him pulling out his four inch cock and rutting on top of her for thirty seconds. She wasn't obsessed with sex, but she did know she wanted more than four inches and thirty seconds for the rest of her life. \n\n\"Baby,\" he cooed, trying to pull her close and kiss her neck.\n\n\"No, David Matthew. No. It's over. Have a good life.\"\n\n\"Babe! You can't be serious!\"\n\n\"I am. Please leave now.\"\n\n\"Babe, come on, let's talk about this?\"\n\n\"I mean it, please leave. Don't make me wake my dad up.\"\n\n\"Jesus fucking christ Linley, seriously? You break up with me because I love you so much I want to spend my life with you?\"\n\n\"I am breaking up with you because I do not want to spend my life with you. Seriously, please go.\"\n\n\"Babe. Fuck. I will go for now, but can we talk later? After you cool down and have had time to think?\"\n\n\"I won't change my mind David Matthew. Bye.\"\n\nHe stormed out, pissed, but Linley didn't care. She felt like a huge weight had been lifted from her shoulders. She felt free and excited. She hadn't even known how stifled she had felt until she broke free. She knew she should be sad, or upset, but she wasn't. David Matthew had tried to make her make him her life. He wanted to own her, make her into the girl he wanted her to be. He had taken an impressionable teenager and tried to manipulate her. She could see it all now, even if she hadn't realized it at the time. Her eyes had been full of him at first, but he had never counted on her stubborn, strong will. \n\nLinley looked around, and suddenly she was anxious and wanted to get out of the house. She usually was happy to get time to herself and read or paint, but today was her birthday. She wanted to get out and do something. She considered a moment, then thought about her dorm she would be moving into in less than three weeks. Maybe she could go get some new stuff for her room? New decor and bedding for her new life. She liked that idea and there was a new little consignment shop in the old downtown that had a lot of cute stuff. She picked up the phone and called her mom.\n\n\"Hey Lee! Happy Birthday!\"\n\n\"Thanks mama. Hey, do you think I could borrow the mazda?\"\n\n\"Of course sweetie, I told you that you could use it any time. No, the red one Gracie! Sorry baby, it's a busy morning.\"\n\n\"No problem, I know, I just wanted to let you know I was going into town really anyway. Maybe if you get to leave for lunch you can call me and we can meet up?\"\n\n\"Sure sweetie, but it's not looking likely. Sue and Melody both called in and it's a mess here. I love you though and happy birthday! Bye! Gracie I said you can't..\" Her mother drifted off as she hung up.\n\nLinley had known it was a longshot, but it was worth a chance. She grabbed the keys to the old car and headed into the city.\n\nOld downtown had not been originally designed for adequate parking with the new revitalization project, so it was all side street parking. Linley didn't mind, it wasn't too hot this morning as she made her way to the little shop. The bell rang loudly when she pushed in and the woman at the counter beamed at her, but stayed quiet with her ear pressed against the phone. Linley walked down the main isle, looking around at all of the cool bohemian decor, so bright, cheerful and colorful. She enjoyed herself, taking her time. Something she could never do with Matthew David, he hated shopping. \n\nShe got close to the back of the store and glanced to the side to see that someone was at the end of the isle. She turned to look, automatically, because that's what you do when someone appears in your periphery. It was a tall man, in a long, light, black trench coat with a hood. It looked like a cosplay coat, something medieval. His face was hidden in the hood. Linley looked away quickly, but watched him from the corner of her eye nervously. She turned away from him and started back up the aisle, wishing the store was more brightly lit and less closed in. As she almost made the intersection, the man appeared at the top of the aisle, moving towards her. How had he gotten there so quickly? She spun, but no. There was the man behind her. There were two of them dressed exactly the same. \n\nHer heart began pounding. She hurried to the intersection and almost ran into a third man, dressed the same. She spun and fled, running and turning to sprint to the front. She thought rapidly of what she would say to the lady, but it sounded absurd. 'Call the cops, there are three men walking the isles dressed alike and they make me nervous!' When she reached the front, the option was taken from her. The woman wasn't there. She shot out the door and turned to make sure she wasn't being followed. They were nowhere in sight. She pulled out her phone and her keys as she fast walked to her car, her head on a swivel. She had mace in her car, why hadn't she carried it with her? She had thought her dad was so ridiculous for being insistent she have it with her all the time. Now she wished she had listened. \n\nShe turned the corner and could see her car. She felt relief for a moment, then she got stung in the neck. She cried out as her hand slapped at the sting, but her fingers hit something large and cold, metal. An arm caught her around the waist and held her up as her legs began to sag. She tried to yell but her mouth didn't respond to what her brain wanted. Panic rose up as she realized she was moving rapidly to a black panel van and the door slid open. The men in the black coats reached for her and pulled her in before her eyes slid shut.\n\nLinley woke in a bright, airy, open bedroom. Long white, sheer panels billowed in a breeze that smelled like honeysuckle. The sheets laying over her were also white and she wondered if she was dreaming. Or maybe dead. She sat up, feeling her neck. She could feel the small sore from a puncture and her eyes darted around as she scrambled out of the bed. She was in a long white gown that puddled around her feet on the floor. She stared a moment, trying to comprehend what was happening. The room was mostly a light colored wood with a few green ferns and all white textiles. It was tasteful, beautiful even, and very in touch with nature. She glanced at the door, but hurried to the tall windows and looked out. She was a few stories high, too high to jump or climb down. She looked at the panels and wondered if she could make a rope? \n\nThe door opened and she spun. The woman who stood there was older and she looked pleasant. Kind even. \"Hello,\" the woman offered in a sweet, caring voice. \"Don't be upset or alarmed. I know it seems a little scary right now, but soon you will realize you worried for naught. My name is Amanda.\"\n\n\"Where am I?\" Linley demanded.\n\n\"Lights End. You may be thinking of trying to run girl, but you won't be getting far. There is no way out of this place, not for you. There is room to roam, grow a garden if you wish, any number of things, but the barrier will keep you within.\"\n\n\"What do you want? Why am I here? Please, my family isn't wealthy, no one can pay...\"\n\n\"No no child. It's not like that. You are here for a special reason that we will soon tell you. Please, would you like to come with me?\"\n\n\"No! I wouldn't! I want answers!\"\n\n\"Oh, little one, do not make me call Lukan, please. He doesn't always know how to be gentle and you are such a slip of a thing. Really, no harm will come to you, I am taking you to the answers you seek. Won't you come?\"\n\nLinley stood looking at the woman fearfully, but she also didn't feel as though resisting would serve her right now. This wasn't the time. She clasped her hands and nodded, following the taller woman out the door and down a long hall. They stepped down a long, curving staircase three full stories. Linley was sure this was the ground floor and she looked around for a door to the outside. Amanda showed her into a large room that made her pause. There was one large chair on the floor near her and six regular chairs lined up on a dais facing the one. She looked over at Amanda and the woman smiled and directed her to the single chair.\n\nLinley nervously went to sit, eyeing the door they had come in, and the side door on the dais. She could also see windows lined behind the chairs and trees out beyond that looked heavy with fruit. She had to hop up into the chair and she scowled at how high it was, her bare feet a foot off the floor, though the long dress barely touched it. She curled her feet under her as she sat back to wait.\n\nShe did not have to wait long. Almost as soon as she made herself comfortable, the side door opened and six tall men strode in. They didn't even look around as they marched to their chairs. They were all disparate, but the same. Dangerous. Like they all trained under the same master for martial arts. A movement that was uniform. Like soldiers, but more graceful. \n\nLinley swallowed hard as they sat down facing her, all of them taking her in from head to toe.\n\n\"My lords, this is Linley Allewel, the first of the six, judged so by a consensus of 12 out of 12.\"\n\n\"She looks small,\" one of the men said with a scowl. \"Have her stand.\"\n\nAmanda immediately helped Linley stand and Linley was blushing furiously.\n\n\"No,\" the man said, then stood and left. \n\nThe other five remained seated, watching her consideringly. \n\nLinley was terrified at those looks, she felt like prey under their gazes.\n\nAll of the men were dressed in light forest colors, light browns, tans, white. All but the one on the end. He was dressed in black and he was different from the others in that they all had short to medium hair ranging from blonde to light brown. His was black, long, messy and tied into a sloppy knot on the back of his head. They all had mostly pleasant expressions, but he looked sour. He scared her.\n\nAmanda turned her, then helped her back into the chair. She did not lean back, she sat perched on the end, her feet dangling. What the hell was happening?\n\n\"My lords, do you have further inquiries?\" Amanda asked diffidently.\n\nAnother of the men stood, eyeing her objectively. \"Speak, girl,\" he demanded.\n\n\"I am not a dog, you can't give me stupid commands like that and expect an actual response!\" Linley said angrily.\n\nA different man stood and left, leaving four. The one still standing was still considering her. \"Do you read?\"\n\n\"Yes, I am not an idiot. What is all of this? What is happening here?\"\n\nThe man sat back down. \"I am finished,\" he said gently, addressing Amanda.\n\n\"I am finished,\" the two others dressed the same said.\n\nThe man in black eyed her again, then turned with a shrug and looked bored.\n\n\"Very good,\" Amanda said breathlessly. \"We can begin the interviews! Come child, we will go right through here so you may meet the lords one at a time.\"\n\nAmanda pulled her out the door and into another room. It was smaller with only two chairs. Linley pulled out of her grip and turned to her. \"What is this? You said I would have answers!\"\n\n\"You are one of the six. Every sixty to seventy years, based on the life cycle of the last six, a new set of six are born. All on the same day, all at the same time. You are born with the specific purpose, with the specific ability to exist in this place. You are brought here for the lords, as a companion to them. Six girls, six lords. You are first and that means you get to choose among those who desired to be interviewed. Any one of them.\"\n\n\"That's... ridiculous. You can't just kidnap people and say here, pick a guy. No. I want to go home!\"\n\n\"You are home now child. If you do not choose, then they will draw lots and you may end up with one you hoped to avoid. Come now, this is not an onerous task. This is a lovely place and the lords are mostly wonderful men. Lord Joshua even sat after your outburst and he is the most even tempered. He would do well for you, he is a gentle soul. Now, please behave, or you may find yourself with Lord Eli with his dark moods and dark temper. Speak to them, make a choice,\" she said as she went to the door.\n\n\"Wait! I have more... ugh.\" Linley tried the door the woman had shut and it was locked. She went to the windows to check them and they were also locked. In the distance she could see what looked like a tall wall. It encircled the valley laid out in front of her as far as she could see. \n\n\"Please, have a seat,\" a deep, gentle voice chided.\n\nLinley turned to the tall man standing inside the door. He was the one who had stood and asked her questions, the one dressed in the lightest colors with the blondest hair. Linley put the chair between them and he smiled patiently as he sat down.\n\n\"I am Joshua. Do you have questions Linley?\"\n\n\"Just Lee. Yes, how do I get out of here?\"\n\n\"There is no leaving Lights End. Not for one such as you.\"\n\n\"There will be people looking for me!\"\n\n\"They will not find you. Come now Lee, do not fret so much. It is nice here. Beautiful even. Life is good and I can make it exceptional for you.\"\n\n\"How old are you?\"\n\n\"How old do I look?\"\n\n\"Old. Like, thirty. Thirty five. Maybe older.\"\n\nHe smiled and looked down. \"I am much older, Lee. We are all much older. We have lived through multiple companions, unfortunately. If we could share our gift of immortality, we would have long ago. I know this is a lot to take in, but please do consider how wonderful life can be here if you let it.\"\n\n\"What is this place? Why is it here? Who are you people?\"\n\n\"We are the wardens, the keepers of the seasons and the days and the nights. We are older than a time you have known to count. We have taken new forms, new names over the centuries, but we remain in our core who we once were.\"\n\n\"Why do you kidnap girls?\"\n\n\"When the last of our companions dies, a new set of six are born. We have eighteen years until we see their faces. You were never meant for that world, it is not kidnapping to return you to where you belong.\"\n\n\"Is this some joke? Some new reality show? Did someone set me up for my birthday?\"\n\n\"No, Linley, this is not a trick. Now. I was afforded an extra few moments on my interview for your inevitable questions, but our time is ticking away.\"\n\nLinleys head was racing as her mind tried to catch up. \"Ok. Ok. Ok... umm. Are you people going to hurt me? Kill me? What is it you want?\"\n\nHis smile was gentle as his hands made placating gestures. \"No Linley, nothing like that. You are here to choose one among us as a companion. To be our companion. You will speak to each of us who stayed and then make your choice.\"\n\n\"For... for forever?\"\n\n\"Yes. For the rest of your life.\"\n\n\"That's... this is all insane! You are all insane! I am not doing this!\"\n\n\"If you do not choose, we must draw lots and you will end with whoever draws you. You are first among the six which means you get your choice among those who would be pleased to have you. If you choose, you control your own destiny more. You say you read. Books are one of the few things that can be brought into Lights End, I am happy to bring you all you wish to help you pass your time. While I am seeing to my duties. When I am not seeing to my duties... we would spend time together.\"\n\n\"Doing what?\"\n\n\"Keeping each other company, doing what comes naturally to couples.\"\n\nLinley felt her face flush, knowing what he was intimating.\n\n\"So, you are saying I must what? Marry one of you?\"\n\n\"In essence, though there is no vow or ceremony. You make your choice and then it is done. I am sorry Linley, our time is coming to an end. I do hope you might consider me, I would see you treated well.\"\n\nHe stood and left and Linley stared at the door wide eyed. Was this really happening? Was she dreaming? She was in a coma and it was one of those hyper-realistic dreams that felt real. Something. Anything but reality.\n\nAnother man walked in and his smile was less light and open than Joshuas. He looked... predatory. He was in slightly darker colors and his lascivious smirk as he looked her over said his thoughts were all dirty. He sat and eyed her behind the chair as if she were something he might like to eat. Linley felt like huddling behind the chair until he left.\n\n\"Hello kitten,\" he purred, his voice all silk. \"I am Levi, I am Spring and... fertility. I can promise you that you will never know boredom with me, or go a day without earth shattering pleasure.\"\n\nLinley swallowed and gaped at him. Was he for real? He exuded sex on every level. He was handsome, in a slick sort of way, not as handsome as Joshua had been, but much sexier. She backed up to the window and watched him warily. She had just thought this morning, was it this morning? What day was it? She had just thought that she would like to have more in her life than Mathew Davids four inches and thirty seconds. This man looked like he could deliver on that. She did not want her life to revolve around that though. \n\n\"Come now kitten, have a seat and let me look at you. Come closer and let me touch you. I will not bite. Not until our first night together. I would like to taste those full lips.\"\n\nLinley felt herself sliding further away, all the way down the wall to the corner. Nope. This man was too much for her and she knew it. She shook her head slightly. ",
        "He stood, pouting, but did not move closer. \"A single kiss my little kitten?\" he asked, still with that velvet voice.\n\n\"No,\" Linley said, finding her voice. \"No. Leave me alone.\"\n\nThe man smiled slightly and gave her a small nod before leaving. Linley let out a shuddering breath. She did not want to be stuck with him and she knew it. That would mean choosing. She didn't want to choose any of them though.\n\nAnother man walked in, looking her over curiously, but aloof. He was in darker brown than all the rest save the man in black. He seemed shy, but pleasant enough. \"Hello. I am Aaron. Usually David and Mason would see you first, but they opted out. Ummm. You look lovely. You don't have to be afraid. You can sit down if you like. What do you like to do?\"\n\n\"What are you?\"\n\n\"Winter, if that is what you mean. It is cold in my tower, but I would keep you warm. Linley is not a name I have heard often?\"\n\n\"It is a family name. My grandmother Lynn and my other grandmother Leah. Linley. I go by Lee.\"\n\n\"Lee. Sweet and simple. It seems to suit you, to a degree. What are your hobbies? I can provide you with a few luxuries if it is your wish, for your time alone. Our time together...\" he blushed and smiled a shy smile. \n\nWas that all they all thought about? She bit her lip and played with her fingernail, digging at a jagged edge where a nail had broken. She focused on it. If she ignored them, they would leave, wouldn't they? She wanted to be left alone.\n\n\"You have no hobbies?\" he asked uncertainly, his cheeks bringing up more color. She could see a light in his eye then. A vague, cold sense of anger. He did not like being ignored.\n\n\"I do,\" she answered. \"Umm. I'm sorry. No thank you,\" she said softly, hoping he would leave like Spring had.\n\nHe stood, the spots of color darker now and he looked unhappy, but he bowed and left.\n\nLinley let out a breath. \n\nThe man that walked in last was the man in black. He glanced at her, then strode to the window and looked out. Linley moved to the other corner, farther away from him, watching him. He did not speak, he stared out the window as if he had no interest in her. \n\n\"What are you?\" she asked quietly.\n\n\"I am darkness,\" he answered, not looking at her. He seemed disinterested. She wondered why he hadn't left when the other two had if he wasn't interested? Maybe it was because he didn't care who he got, it didn't matter. Maybe he only wanted to be alone and would leave his companion alone as well. Leave her in peace. \n\nTime ticked away silently as he stood and watched out the window and Linley stood with her back to the corner, watching him. He was still wild looking, dark and untamed against the others who had all seemed more clean cut.\n\nHe turned suddenly and left, and seconds later, Amanda returned with a smile. \"Come then child, are you ready to choose?\"\n\n\"Do I really have to?\" Linley asked fearfully as Amanda led her back to the room with the dais. \n\nThe four men were there, three of them speaking and the one in black standing off my himself next to the door, waiting. The three stopped speaking and turned to her expectantly.\n\n\"She has come to make her choice or to allow a draw,\" Amanda announced.\n\n\"No!\" Linley said, her eyes going fearfully to Levi and Aaron. Oversexed and temperamental. No. \"Umm..\" she looked between Joshua and the man in black. Light and dark. Joshua was smiling encouragingly and the other was turned to the windows, looking bored. She swallowed, trying to think. Joshua would expect her time, the other would not. He would leave her alone... wouldn't he? He didn't care about her? \"Umm... him,\" she said, pointing to the man in black.\n\nEveryone gaped at her, even the man in black stared at her incredulously.\n\nShe felt another panic starting to rise. Why were they all so shocked? They couldn't understand not wanting to be pressured and forced into companionship?\n\nThe man in black snorted derisively and stepped down from the dais, strolling to her. He stopped in front of her and looked down at her with a shrewd smile. \"I stayed for the draw. You surprise me, girl,\" he said in his gravelly voice. He caught her hand and pulled her from the room.\n\nHis long strides had her running to keep up as she tried to tug her hand free. She stumbled over her too-long dress and he caught her around the waist and lifted her off her feet. He carried her up a rounding staircase like a sack under one arm. Linley was too shocked to struggle. \n\nThe climb seemed endless, but finally, he opened the door to a huge, round room. It was dark. All the textiles black and the wood the darkest she had ever seen. The light coming through the black panels seemed to be diminished in the dark room.\n\nHe set her on her feet and stood back, looking her over. \"You will change,\" he barked, motioning to her dress.\n\n\"Umm, into what?\"\n\n\"Black,\" he answered, striding away militantly. He went to a tall, standing writing desk then wrote something on a paper, rolled it into a tube and dropped the tube into a pipe. He turned again and looked over her from afar. \"You are small,\" he scowled distastefully.\n\n\"You could have left,\" she shot back, embarrassed.\n\n\"You are still pretty enough. I always get the ugly ones. Unless there is a draw.\"\n\n\"Why?\"\n\nHis smile then was dark, his look almost evil. Linley felt sick. Had she miscalculated? \"Most girls do not like what I like. Some out in the world enjoy pain, but none who come here have ever volunteered for it.\"\n\nLinley sat down hard on the floor, staring up at him fearfully. He circled closer, looking down at her like he was seeing best how to dissect her. \n\n\"Stand and remove the dress. I do not like white.\"\n\n\"Do you have something for me to...\"\n\n\"Do not ask questions, do as you are told,\" he snapped loudly.\n\nLinley flinched and cowered from him, scooting away. Her hands went to the flimsy straps of the gossamer white dress and she slid them off her arms but held the dress up with her hands.\n\n\"Stand and let it fall,\" he demanded.\n\nLinley stood, stumbling twice as she stepped on the skirt of the dress, yanking it down forcefully. She let it fall and covered herself with her hands since there was nothing under the dress.\n\n\"Move them,\" he demanded.\n\nLinley was panting, looking around for an escape. He circled her again, like he was waiting for her to disobey to that he could act on it. She made her hands into fists and forced them to her sides as she squeezed her eyes shut. She heard his steps cease as he stood still. She imagined his eyes on her and she wanted to cover again. \n\n\"You are pale,\" he said more gently. \"Do you not sun yourself?\"\n\n\"No,\" she whispered.\n\n\"You will not,\" he demanded, still speaking more softly. She felt fingertips brush her arm and she jerked away, falling to the floor as she stumbled over the dress pooled at her feet. She yanked it up as she scooted and covered herself with it fearfully.\n\n\"Stand, girl. Release the garment. Now.\"\n\nHe snatched the dress up when she let it fall and opened a small door in the wall, dropping it down a chute. He went to a wardrobe and pulled out a black pullover shirt like the one he was wearing. He tossed it at her and she snatched it off the floor to pull it on. \n\nHe continued pacing, watching her. Finally, he went back to the desk, wrote another note and sent it down the pipe in a tube. \n\n\"I am Eli. Dark. Night. I work at night when I work. You will sleep while I am away and stay awake while I am home, waiting to see how you can serve me. You will call me Master Eli, or just Master.\"\n\n\"I will NOT! I am not a slave or... any of that perverted weird stuff!\"\n\nEli looked at her, his eyes going hooded as he regarded her. \"You assume I am asking you to play along, girl. I am not playing. You will serve me or you will be punished. Tell me why you chose me over my brothers.\"\n\n\"I... you were so disinterested. I thought... I thought you didn't want me, you just wanted to be left alone. I thought you would leave me alone.\"\n\nHe laughed, a wicked laugh that made her blood turn to ice. \"No, girl. I was simply waiting for the draw. Perhaps it would have been more fair to tell you I was not interested in bedding you, only owning you. Punishing you. Bending you to my will. Now you know. I imagine my brother is gnashing his teeth right now, losing such a sweet little thing like you. I imagine they all are. Mm. Not Mason or David. No. You are too short for David, he likes tall girls, and biddable. Not like you. And Mason. I imagine you could not handle his... bedding. He needs a larger girl to accommodate him. There you are Jeffrey. This is my new companion, she needs to be measured and fitted. I need a collar. Did you bring her file? Thank you. Go ahead and measure.\" he trailed off, opening a folder full of papers. \n\nLinley watched him warily as the short man began taking her measurements. Did he say collar?!? This was hell. She needed to wake up. He wanted to own her. Punish her. At least he said he didn't intend to rape her. That was something, right? And the others had mentioned she would have free time sometimes. Maybe if she was good, she could avoid his anger?\n\n\"I have never seen a girl your size first among the six, but I am seeing why. You are clever, apparently. Sweet and gentle, but you will stand up for yourself when you are wronged. Usually the first is more... endowed as well as moderately clever. Still. You can't be too smart if you chose me willingly. You are also creative. That will also be lost on me. Oh, Joshua would have worshipped you,\" he laughed, snapping the folder shut. He tossed it on a table near the man who was still wrapping a measuring tape around her. He paced again, watching impatiently. \n\nLinley kept her eyes down, trying to think of a way out of this. \n\n\"Did you know,\" he said suddenly, as the little man made a final notation on his clipboard and packed up to go. He grabbed the folder and left. \"We receive the six every eighty years or so. Our 'companions',\" he said the word derisively. \"It doesn't matter if one companion dies the first year, the new companions are not born until the very last one dies. So, one among us only has to wait eighteen years. The rest have to wait longer. For some of us, it is much longer. My 'companion' never lasts more than five years. Usually not near so long.\" \n\nHe laughed as she went to her knees, shaking and sobbing. \n\n\"Get up girl. Go to the bed and bend over it. Lift the shirt,\" he commanded, testing several instruments he had sitting out. A cane, a whip, a cat o'nine tails, a riding crop, a paddle and a belt. He swung the riding crop a few times, then nodded with a grim smile. \"I fear you may not last long, girl. You look like you will break easily and if you think I will go easy because of your size, you are mistaken.\"\n\nThe first blow landed on her exposed bottom and she yelped and slid off the bed, scurrying away. He caught her arm and shoved her back over the bed. \"If you move or try to get away again, I will cane your back. Stay there. Scream and cry all you wish.\"\n\nThe next blow landed and she did scream and grip his blankets in her fists as she sobbed. Blow after blow rained down on her and she kicked and screamed and thrashed, but did not move off the bed. He spread the blows out, all over her ass and down her thighs, but soon there were no places that were not already so tender that she feared he was breaking skin. \n\nFinally, he stopped, dropping the crop next to her on the bed. She wailed and panted for at least five more minutes, writhing with pain. She was on fire and the pain was so sharp and awful.\n\nHe took her arms and rolled her and she tried to arch her stinging and throbbing backside off the bed. He shoved the shirt up over her head, leaving the sleeves on her arms. \"Keep your arms high,\" he demanded, picking the crop back up. \n\nThe first blow landed right on top of her tender little nipple and she wailed anew, tossing her head and wishing she had the nerve to kick him and run. He landed another on her other nipple, then began landing blows all over her small breasts. There was no real spreading it out, her breasts were smaller than her ass, so he tortured her flesh for an eternity, until his own arm was tired from the effort. He finally turned away from her and put the crop away.\n\nLinley rolled to her side and curled into fetal position, rocking and crying. He was a monster! Why hadn't she been smarter? Why hadn't she chose the nice one?\n\n\"Go wash your face,\" he demanded. \"The others will be done by now and custom dictates we feast together even though it is not weeks end. Move faster or I will motivate you, girl.\"\n\nThe door opened and Jeffrey came back in. Eli quickly took the black leather collar from him, as well as four black leather cuffs. Jeffrey left and Eli approached her from behind, looking determined. Linley watched him from the mirror fearfully. His look said he full expected a fight. She dropped her eyes and stood still as he wrapped the collar around her neck, spinning it so that a metal D ring showed in the front. She held her arm up as he attached two more to her wrists, then lifted her feet to his knee when he knelt to do her ankles. He looked... wary when he stood. He had not expected compliance at all. \n\nHe turned her back to the mirror and brushed her hair roughly, pulling it back harshly from her face, making a severe ponytail.By the time he was done, Jeffrey was coming in again with a small scrap of black fabric and a slightly larger piece of black gossamer. Eli grabbed it and shoved it at Linley.\n\nShe changed quickly, pulling on the tiny black thong panties, then the almost sheer babydoll gown that barely came to her hips. He clipped a leash to the collar, then started walking, expecting her to follow. She walked quickly, half running to keep slack in the leash. He led her down all of the stairs and down the great hall they had been in earlier to a far room. He shoved the door open and walked in. \n\nLinley looked around at the other five brothers and the girls with them. All still in their long white gowns. She dropped her eyes quickly and followed Eli to his chair as he sat. All the other girls were sitting at the table with the brothers, but there was no chair next to Eli. There was, to her horror, two dog bowls on the floor next to him. Humiliated, but determined not to earn another beating, she dropped to her hands and knees next to him. He petted her head. Like a dog. She trembled and shook, furious, but stared at the floor refusing to act on it. \n\nLinley could hear the sound of people speaking, but she couldn't quite hear them as they spoke too softly. She let tear dops fall as the cold floor bit into her knees and she cursed herself. \n\n\"Eli!\" a male voice said harshly, more loud now. \"You cannot treat her like the others! She is frail, small! You will kill her within the week!\"\n\n\"She is mine to kill,\" Eli shot back. \"She did not choose you, Joshua. Turn your attention to the one who did.\"\n\nLinley flinched when a hand dropped into her view and poured water into one of the bowls. A moment later, the other bowl was filled with pieces of meat and then vegetables. She knew it was Eli's hand and she leaned close to kiss the back of it. He paused, then his hand rose out of her view. She was not hungry, but she knew he was watching and he would be angry if she did not play the role for him. She moved to the water and tried to find a way to drink it. She ended puckering her lips and sucking it up like a straw. The food was slightly easier, but she could only eat a few bites. If she tried to do more, she would vomit. \n\nShe knelt there, as still and as quiet as she could be. She was glad her backside was pointing at the wall and no one was getting a view of her abused ass and the skimpy underwear. \n\n\"It's custom!\" the same male voice snapped. Joshua.\n\nEli made an annoyed noise and tugged on her leash. She stood quickly, panting fearfully and kept her eyes down. She was humiliated knowing that everyone was looking at her now. The little gown covered next to nothing and you could see her reddened and bruised breasts through the fabric.\n\n\"Hurry,\" Eli snapped, but he wasn't talking to her.\n\n\"Linley,\" Joshua said gently. \"This is Jennifer, Everly, Maley, Harper and Oaklynn. They are your sisters now. I am Joshua, that is Levi, David, Mason and Aaron. We are your brothers. This is Linley, Eli's companion and your new sister.\"\n\n\"No,\" Eli snapped. \"This is my new plaything. You won't be seeing her much after today.\"\n\n\"You are a sadistic animal!\" Joshua raged.\n\n\"Oh? You have never raised a complaint before, brother. Not once. Are you that jealous? I imagine so. How did you end up with the sixth of the six? That is unprecedented!\" he mocked with a derisive laugh. \n\nLinley lowered herself without him asking or telling her to. She didn't want anyone to see her start crying all over again. \n\n\"Eli, you go too far!\" Joshua hissed. \"I should challenge you to rights. You had to have lied to her to get her to choose you. It is the only explanation!\"\n\nEli laughed again. \"Pet, rise up a moment and tell him why you chose me.\"\n\nLinley stood and stared at the table in front of her. \"He was quiet. Disinterested. I thought... he would leave me alone. Let me be alone. I... was wrong.\" She whispered the last, her voice catching and she let out a small hiccoughing sob before she dropped back to the floor so hard she knew she had bruised her knees.\n\nEli laughed again, sitting back in his chair. \"So you see, brother? I never lied to her. I never spoke to her. I didn't even look at her.\"\n\n\"She still chose you under a misapprehension!\"\n\n\"Her own doing, not mine. You would not win the challenge, but feel free to try. The girl is mine Joshua. Move on. I am done,\" Eli snapped, standing. Linley quickly stood, waiting for him to leave. \"I do have to admit though, she is proving to be a well behaved little pet, even if she does have a ridiculously low pain tolerance.\" \n\nHe spun and walked out, Linley following close behind him. \n\nWhen they got to his tower, he dropped her leash and she stood still, not moving it from the spot he dropped it. She knelt slowly as he paced, sitting on her legs with her palms on her thighs. She kept her eyes down, but she watched his feet as he paced.\n\n\"Would you go to my brother, if you could?\" he asked after several long moments.\n\nLinley hesitated, considering her answer carefully. Finally, when it was obvious he was becoming agitated, she spoke. \"I do wish I would have chosen him this morning. But now, knowing what I know, no, I would not go to him.\"\n\n\"No? Why not?\"\n\n\"I have no right to put another into the harm I put myself into. She doesn't deserve it any more than I do.\"\n\n\"Compassionate. Remove the gown, I would not have it ruined. Lay on the bed,\" he ordered, picking up the cane.\n\nLinley wanted to argue, to plead, but she knew it would not help. It would make it far worse. She lay on the bed and tried to go somewhere else in her mind. The first blow on her back yanked her back, sharp and immediate. She screamed into the blankets as she arched her back, trying to escape the next blow. It was fast and sharp and she started to roll away, but forced herself to stillness, trying to shove the panic away. The third blow made her scramble a few inches up the bed before she could stop herself.\n\nHe put the cane down and went back to pacing. She didn't dare move.\n\nEli looked down at her back with a scowl. The third strip raised blood to her back. He had never had a girl so fragile. Joshua was right. If he did not let up, she would be dead inside of a week. Did it matter? If she were gone he could get back to his routines. He did not need a companion like the others did, all they did was die. He would use them to release his rage and move on. Still. He wanted his fun for more than a week. Eighty years was a long time. ",
        "He went to the basin and wet a cloth, then cleaned her wound and she squirmed and hissed and sobbed. He took her leash and unclipped it, then led her to the mat next to the wall with her water and food bowl. He clipped her to the short chain and walked away from her.\n\nNight was coming. He stepped to the balcony and dissipated into the shadows. \n\nLinley felt the moment she was alone in the room. He was gone, but she still dared not move. It was getting dark and it was cold. She huddled on the small mat and shivered, wondering if he was working and she was supposed to try and sleep like this. An hour passed and she was shaking so hard, her bones ached with the cold and parts of her body were still on fire. The stripes of pain across her back would still be making her weep if she had any tears left. She heard him suddenly, his soft, quiet movements as he crossed the room to his bed. She lifted her eyes and watched as he undressed before climbing into the blankets.\n\nEli let out a breath, ready to sleep, but he heard her move. He smiled slightly. Eventually, they all tried to kill him. All of them. He let her come, wondering what she would use. He felt her touch the bed, then gently climb up and he forced himself to stillness, waiting. Did she have a bludgeon? Something sharp? The idiots never understood what immortal meant. Still, it was fun to punish them after, so he waited. She slipped beneath the blankets and he wondered if she meant to try and cut his manhood off. One girl had tried that once, though he hadn't understood that. He never raped them. He tortured their sex like he had every part of their body, but it was never sexual. \n\nThe girl curled on the bed next to him, shivering. She snuggled herself in, close and Eli froze. She sighed and pressed herself closer, warming herself with his body heat. Was she really not going to try and kill him? She had come to him for comfort?!? He remained still, wondering if it were a trick. She was trying to lull him. Her breathing slowed and her body relaxed. \n\nShe was asleep. Next to him, in his bed. He was outraged, but also still in shock. Not one of them had ever come to him for comfort. She warmed against him as he lay there trying to decide if he should punish her or not. He fell asleep debating.\n\nHe woke at first light. He had a ritual, but the small girl curled up next to him in his bed made him falter. His cock was rock hard like it was every morning. He always took care of his own need in the morning before getting up. He'd be damned if he let his pet stop him. He closed his eyes and began stroking himself, ignoring the little bundle of heat next to him.\n\nHe did feel her when she woke though, and was aware when she rose enough to watch him in his morning ritual. She slid her hand across his chest and lay on his shoulder, watching. It did not make him uncomfortable, she was only a pet. A toy. If anything, it may have heightened the pleasure slightly. Not too much. This was a normal bodily function that he had to take care of. No different that pissing or shitting. His body required it, he took care of it. He came and paused only a moment to catch his breath before getting up and going to the basin. He could feel her eyes on him. He returned to her and sat, then rolled her roughly across his knee. He spanked her with his hand, something he didn't normally do. He preferred less personal, but just now he wanted to feel her ass warm under his blows. She cried and squirmed and kicked, but did not struggle. She was so unusual, this girl. He didn't understand her.\n\nHe released her and tossed her the same shirt he had let her use the day before, then fed and watered her before leaving. \n\nLinley sat there alone for hours after he left. She tried to plan, to strategize, but mostly her mind kept going back to her pain and she tried to find a better way to sit. He finally came through the door and she stood with her eyes down and waited patiently. He fed and watered her again, though she didn't really need it, then went to his desk as he gestured her to her bowls. She went obediently and ate and drank. As soon as she ate what she could stomach, she went to kneel next to him at his chair. He was scribbling away, focusing on his work, but she knew he was aware of her. He tossed the pen down then turned to her suddenly. He put a single finger under her chin and lifted her face to his. He looked into her eyes for several long moments, scowling before standing and gesturing. \n\nLinley followed him to a wall with several chains on it, feeling sick all over again. He turned her and pushed her to the wall, clipping all of her cuffs to the wall so she couldn't move. He clipped her collar last and went to a small table with a box on it. He opened it and looked over the contents before pulling out a small clip with a ring on it. He didn't pause or wait, he turned and pinched her nipple hard enough to draw a wail from her. As soon as it was hard, he snapped the clip on it, making her scream again. Her other nipple got the same treatment and the same sort of clip. She was still sore enough from the beating her breasts took that it was much worse than this new torture alone. He flicked them both, testing their hold and making her whimper again. He turned and took out a chain, linking it to one clip, then the other. It was too short and he had to pull her breasts painfully to get them close enough. When he released, the chain pulled on the clamps and her nipples hard enough to make her scream and struggle in her bonds. He pulled out two larger clamps and pinched skin together on her waist before attaching a clamp so tight it drew another loud wail. He did the same to the other side, then attached two more chains from each of those clamps to her nipples. Now they were pulled in and down as well. He pulled out another clamp and knelt, putting his fingers on her pussy and spreading her labia apart with as much interest as a doctor might. He closed the clamp around her clit and the scream it drew was loud and piercing. She screamed until she was out of breath and then again and again. Two more chains came out, attaching the last clamp to the ones on her waist. She was trying to hunch in on herself, but she had no slack. The pain was unbearable and she was about to beg him for mercy, but he stood and went to the balcony and was gone. \n\nLinley was alone with the excruciating pain for over an hour. She was still crying and pleading hoarsely when he returned. He went to her quietly, unclamping her efficiently before unclipping her cuffs. She went to her knees immediately and hugged herself, rocking. He yanked her up and pulled her to her mat, clipping her into place again before going to get ready for bed. He lay listening to her sob quietly for a while and when she finally calmed down, he closed his eyes to sleep. \n\nHe woke, but did not move when she climbed into bed with him again. She cuddled against him for all the world as if she needed him. He lay wondering about her. He felt like she was invading his space and he should not allow it, but the other side of it felt like it felt good to be needed, even in such a small way. \n\nHe decided he would let it stand for now, but wouldn't let it affect any of the plans he had in store for her. Only because it was warmer and comfortable. He slept.\n\nWhen he woke and began his morning ritual, she woke as well and laid on his shoulder to watch again. He wondered if she was curious, or perhaps an innocent? \n\nShe slid closer suddenly and slid her hand down, reaching past his cock to gently cup his balls. He tensed a moment, thinking she meant to try and hurt him, but she did not. She stroked them softly, watching from several inches away as he stroked himself. \n\nClosing his eyes, he tried to pull back from the edge. He had forgotten how good it felt to have a warm hand, a touch not his own. He was getting close quickly and she shifted again. He felt warm, wet heat cover the tip of his cock and his eyes shot open to see her take the tip in her mouth as he yanked. He came immediately, shooting into her mouth. He groaned as she pulled and sucked with her little lips, swallowing everything. He swallowed hard looking down at her, then laid back. That was better than having to go clean up... but still.\n\nHe sat up and turned her over his knee again, punishing her for her forwardness and intrusion. The whole time he thought about those hot, wet lips and how good they had felt sucking up his cum. He dumped her to the floor before feeding and watering her and leaving, agitated.\n\nHe did not return until almost dark. He quickly clipped her to her mat and left, not speaking to her or looking at her. When he returned, he went to the box and pulled out a small device. He yanked her arms behind her back and clipped her wrists together before sliding a ring over each thumb, holding her thumbs together as well. He tightened the screw down on them until she cried out. She would not be unhooking herself tonight.\n\nHe went to bed. In the morning he completed his ritual alone, like normal and hated that he wanted more. She had given him a small sample of that additional pleasure and that pissed him off. He picked up the paddle on his way to her and swung it full arm across her bottom. Her shrill scream was music to his ears as he landed two more. He dropped it then left her there without food or water. \n\nHe would not have returned until night if it were not weeks end and he didn't have to take her down to dinner. \n\nHer thumbs were bleeding and her eyes vacant as he unhooked her from the wall, attaching the leash. She looked terrible, her face blotchy, her hair disheveled. She had bruises all over her and blood dripping from her thumbs freely now that the pressure was gone. He smiled grimly as he led her down. She was shaking and wide eyed from shock as he opened the door. All of his brothers stood when he shoved her to the floor, to her bowls and Joshua looked furious.\n\n\"You truly are a monster, Eli,\" he hissed.\n\n\"Do you remember the girl from two cycles ago? The chubby one? I brought her down with open cuts across her back from the cane, a full dozen of them. She cried and begged you all to help her. Not one of you spoke up or even looked at her. Why is this one different? The next time, when she had an eye missing, scooped right out, you said nothing. This girl is mine. I will do as I please with her and none of you can stop me. If you try, I will invoke my rights. We will see how it is settled then.\"\n\n\"No one is interfering, I am stating a fact. You do not deserve her.\"\n\n\"And yet, from her own lips she said she would not go to you if I let her. She would stay.\"\n\nThere was silence then as everyone sat down tensely.\n\nLinley stayed on the floor, staring numbly, wishing for sleep. She was so tired and she ached so badly. She drank gratefully when he gave her water, but could not eat more than a few bites. She pressed her head to his calf when she finished, trying to block out the noise of the others speaking. She could not focus on them, or what they represented. She could only focus on Eli and how to please him. How to make him human.\n\nHe clipped her to her mat that night and wondered if she would be dumb enough to try and unhook herself again. He slipped away as darkness fell and looked at her when he returned. She was huddled up, hugging herself and shaking. With an evil chuckle, he lowered the temperature a few more degrees before climbing in bed.\n\nTo his amazement, she did climb into bed with him again, still shaking. She huddled against him and even pulled his arm down and around her as she clutched him. He lay there shocked and amazed at her audacity. She was so small. Such a slight thing wrapped in his arm. Weak. Frail. Gods. He hated that she needed him like this, trusted him to not hurt her. He hated that he did not want to hurt her right this moment. She was seeking safety in his arms. Not trying to hide in part of Lights End, or trying to run. She came to him. He swallowed angrily, but held her against him as she fell asleep. He would punish her for this in the morning.\n\nMorning came and she woke him seconds before he woke on his own. Her fingers wrapped around his cock and her mouth sliding over the tip. He grabbed a fistful of her hair to yank her back just as she slid her mouth and tongue down his shaft and he groaned again, letting her. Gods, her mouth was hot and wet and tight without being rigid. Her tongue played over him and he used his grip to pull her down harder and faster instead of pulling her away. It felt so fucking good as he hit the back of her throat.\n\nLinley let his hand control her speed, but she pushed him further and further down her throat with each pass until she was taking all of him. He was more than twice what she was used to, both in length and girth, but she forced her throat to open to him as he gasped and moaned in pleasure. He came much more quickly than he had while jerking himself off and she swallowed convulsively as he held her head down the length of him. When he finished, she pulled back slowly, licking and sucking him clean as she did.\n\nHe released his hold on her hair and panted as he lay there staring wide eyed at the ceiling. Fuck. That had been amazing. He still had to punish her. She had woken him and presumed to touch him, not to mention unhooking herself and getting into his bed.  \n\nHe got up and pulled her across his lap, laying his hand on her bottom, but he looked down at her in confusion. She lay quietly, willingly, waiting for the punishment. He spanked her, but probably not as hard as he should have. She still cried out and squirmed and he considered how to best punish her for the day. \n\nPart of him wanted to go easy enough that she would return that night... and suck his cock again. The thought of it made his dick twitch and he sucked his breath in in shock. He hadn't gotten hard twice in one day for as long as he could remember. Not since the first companion. No. He would not think of her. He redoubled his efforts on her ass until his own hand was stinging too badly to continue. He gave her no time to recover, he dragged her to the wall and chained her to it with her back and ass out. \n\nStalking away, he pulled out another box. One he usually saved for hard offenses. He set it down and opened it then began setting out pieces. Once he decided on a size, he put the others away and moved to the next piece. That one was easier to determine, the size on it mattered less for the moment. He could further that later if she required more hard lessons. He set the size two next to the size four and put the rest away. Next he coated them both in oil and set them aside. He wrapped a belt around her waist with a third strap dangling down her middle right below her belly button. He secured the belt as tight as it would go, then moved to the two oil covered devices. The size four plug he shoved into her ass roughly after spreading her cheeks. She screamed and tried to arch her back against it, but he didn't pause or wait. He took the other long size two phallus and slid it into her pussy. For that she did not scream, not yet. He pulled the dangling strap up between her legs , holding the plug and phallus securely in place, securing it to the back of the belt and wrenching it down, digging into the slit between her legs painfully. She wailed and sobbed and tried to squirm but she had no room. \n\nHe put everything away slowly, watching as she whimpered and struggled, waiting for the oil to start working.\n\nHe knew the moment it began. She went still, frozen. Her cheek was planted against the wall and her eyes went wide as she began panting, her breath hitching and catching as the oil heated inside of her. She whimpered and shook her head, trying to push the pain away, but he knew it was going to get so much worse. \n\nHe dressed and was starting out the door when the first scream came. He smiled as he shut the door, leaving her to her day of pain.\n\nWhen he returned that evening, she had pissed herself and there was drool hanging from her slack lips. She had passed out. He removed the belt and the plug and phallus, then unhooked her feet first. Before he unhooked her arms, he caught her around the waist so she wouldn't fall. She was easy to carry down to the baths and he tossed her into one of the deep pools. She came up sputtering and coughing. With a scream of fear.\n\nHe took his clothes off and stepped in with her, relaxing across from her. \n\n\"Wash yourself,\" he demanded. \"And then me.\"\n\nHer eyes darted around the room, large and fearful. She was shaking and jerky in her movements, but she washed herself. When she finished, she stared wide eyed at nothing for a moment, then moved to him and started scrubbing him. She seemed to settle down as she worked, her wits coming back to her. She washed and scrubbed his hair, massaging his scalp with deft fingers, then his shoulders, working out stress he didn't know he was holding in them. She scrubbed his arms and back and legs, then his torso. He watched her eyes flit up to his and back down as she climbed up, straddling him to wash his chest. She moved slowly, deliberately, her eyes following the motions of her hands. She leaned, reaching and he felt her pussy press and roll against his dick and it immediately got hard. Her breath caught and her eyed flitted up to his again, but she kept washing. She moved as if washing, but her hips slid around to position herself so that his cock was up his belly and she could roll her hips over it with ease. \n\nFor a moment, he considered grabbing her by the throat and holding her under the water until she passed out. He waited though, his body tense as she worked her hips slowly, her hands sliding over his chest. She dropped the cloth and let her fingers glide through the soap and then lifted herself, sliding her pussy along the length of him. When she reached the tip, she hovered for a moment, then reached into the water and guided his cock to her entrance. He grabbed her hips angrily and she froze, looking up at him. Her eyes, so big and brown and full of want, her full little lips, parted with anticipation. He was so torn. He had not coupled with a companion since his first, but he wanted this... his body did at least. His body was demanding it. He relaxed his hold just slightly and pulled her hips lower. She was tight and hot as he eased in and his eyes closed as her fingers went to his hair. She had to work her hips and hold him to guide him in and he could hear her tiny whimpers and sighs as she worked him in. She finally got him as far as he could go, pushing against her inner wall, then she slowly began riding him, her other hand going to his neck to hold on as she rode him. \n\nIt was maddening, she was going too slow. It felt so good, but fuck, it wasn't enough. His body needed release. He lifted her out of the water and pushed her over the edge of the inset pool, then shoved into her from behind. She cried out, but it sounded as much pleasure as pain and that spurred him to move faster and harder. He took her hips and pounded into her, looking down at her red and bruised little ass and hips. He came hard, leaning over her and clutching her against him as he shot load after load into her. \n\nHe held her there trying to catch his breath and think. He had just fucked her. No finding pleasure and happiness in them, he couldn't let that happen. She was nothing. A toy. A brief plaything and he would not let her become more. \n\nHe shoved her back into the water and away as he climbed out. \"Clean up,\" he ordered, drying himself off and gathering his clothes. He left, leaving her there. He needed a moment alone. He got to his tower and got dressed quickly and was gone before she slipped into the room wrapped in a towel. \n\nWhen he arrived back on his balcony, he looked in his room to see if she was there or had tried to run and hide. She was there, waiting patiently next to his bed on the floor. He ignored her as he came in and got a drink, then put food and water in her bowls. She went to them silently and he got in bed, looking at the far wall trying to figure out what he wanted. ",
        "If she got into his bed tonight, he would punish her. Leave her on the wall all night. He would. He would beat her with the paddle. \n\nShe slid into the blankets and moved close, laying on his shoulder and pulling his arm around her with a contented sigh. He swallowed. In the morning he would punish her. Her small, naked, vulnerable body felt good. It would help him sleep, that's all. She fell asleep and the amount of trust in that still amazed and confused him. He was not to be trusted. He should prove it to her. Wake her with his fingers around her throat until she lost consciousness. Let her wake hanging from the wall upside down as he rained blows down on that little pussy that he wanted so badly. Fuck. He wanted it right now. His cock was a fucking traitor. \n\nHe forced thoughts away from her and did a focusing exercise to go to sleep. Of course she woke him with her mouth again and of course he didn't have the willpower to stop her. He did take her control though, going to his knees and grabbing her face and fucking her throat as hard as he could. She choked and her little hands grabbed his wrists, but she did not pull away or struggle. She tried hard to take his thrusts and she even swallowed all of him when he came. \n\nAngry with himself more than her, he dressed and stormed out, leaving her on the bed.\n\nHe returned that evening ready to punish her. To his shock, she had clipped herself to the wall, all but one hand. He walked up to her and put a single finger under her chin to raise her eyes to his. He studied her face, looking for a trace of something besides her complete submission. Some deception, or defiance. Anything. He could see nothing. He let her chin fall and secured her last hand before returning to her with the riding crop. \n\nHe made her scream and cry and watched her little breasts bounce and jiggle with each hard smack. Her nipples were almost purple and he wondered if her flesh was as hot as it looked. He hesitated, then reminded himself she was his to use as he pleased. He tasted her, pulling that sensitive flesh up between his lips and rolling his tongue over her nipple. She hissed in a breath and let out a soft, whimpering moan. Her flesh was hot and he sucked harder before moving to the next one. \n\nHis cock was throbbing with need. Fucking traitor. He growled as he released her feet and lifted her hips, pulling his hard cock out of his pants. She had to be in pain, hanging from her wrists, but she wrapped her legs around him as he drove into her, He pounded forcefully, ramming her and trying to draw screams from her. She screamed, but they were different. Not enough pain, too much pleasure. He wanted to be angry, he was trying to hurt her, but another part of him swelled with a pride that he was unfamiliar with. She was screaming like that for him, for how much she was enjoying what he was doing. He came with a roar, both angry and elated. Fuck she felt so good wrapped around his cock but damnit, he didn't want to enjoy anything about her. He wanted to punish her and make her as miserable as he was. \n\nHe dropped her thighs and she stood on wobbly legs and tried to catch her breath. He could see his cum sliding out of her, down the inside of her thighs and he felt shame. He should not be giving into these base instincts. He released her hands and she went to her hands and knees.\n\n\"Wash yourself,\" he demanded angrily. He left, going to the balcony and slipping into the darkness.\n\nWhen he returned, she was waiting by his bed again, her hands on her thighs and her face down. He considered securing her to her mat again, but seeing her red and swollen breasts and chaffed nipples made him pause. She had to still be hurting, but she was still there, on the floor waiting. He decided to ignore her as he undressed for bed and got in. She didn't wait, she climbed in with him and lay on his shoulder. Scowling, he put his arm around her to hold her against him, telling himself that it was because he wanted it. He liked the feel of her, the warmth of her in the cold nights. She fit easily against him, so soft and small and vulnerable. She wanted comfort from him, she wanted protection from him. Despite everything. She was an enigma. \n\nHe had expected to wake to her mouth on his cock, but when he woke it was to her burning up with fever. She was fitful and mewling and clutching him in her delirium. He was at a loss. He immediately summoned Amanda to see to her, but stood pacing and watching instead of leaving when she arrived.\n\nAmanda washed her face with a cool cloth and sat her up to ease medicine into her, then pulled back all the blankets but the sheet, despite the fact that the girl was shivering and shaking, her teeth chattering. He was distressed and uncomfortable with his own distress. He paced, trying to work it out. She had probably become infected in one of the wounds he had given her. Maybe one on her back, or her thumbs... he tried to think of the other open sores he had caused. Damnit! He yanked himself back to his core. Who cares if she dies? It's not like he cared. They all died. All of them. \n\nHe steeled himself and hardened his heart and turned back to her. \"Heal her, or don't,\" he said coldly. \"If she is dead before I return, dispose of her corpse.\"\n\nHe left, but part of him felt sick. He hoped she did not die. \n\nHe could not concentrate as he went about his daily routine. He avoided his brothers with a will. He never went out of his way to see them, but sometimes they came to him if they saw him. Today he walked away if he saw them move towards him. He did not want to let anyone see the distress he was in. He lost all focus and went back to his tower before noon. \n\nAmanda was still there, wiping the girls brow. \"What is wrong with her?\" he demanded of Amanda.\n\n\"Fever m'lord. I cannot find a festering wound, she must have caught sick.\"\n\n\"The medicine is not helping?\"\n\n\"Her fever has dropped a bit m'lord, but she really is such a frail young woman. I am about to give her another dose, but there isn't much more to it but waiting.\"\n\nHe watched her ease the girl up and ease more medicine and a bit of water down her throat. She lay her back down and stood. \"I will come back in a while m'lord. If you happen to be here when she wakes, send for me and I will take care of her.\"\n\nEli nodded and waved her off as he went to his desk, showing disinterest. As soon as Amanda was gone, he went to the bed to look down at the girl. Her eyebrows were knit and her lip trembled as she tossed in her fitful sleep. He swallowed hard and scowled at the girl. \"I forbid you to die yet. You won't die until I kill you myself,\" he hissed. He paced, watching her whimper and shiver. Finally, he could take it no more. He got into his bed and pulled her against him, spooning her as he gripped her wrists and held them to her chest. \"You will obey me, girl,\" he whispered. \"You will not give in to this. I will pull you from your grave to punish you so thoroughly you will never dare do it again.\"\n\nHe didn't know how long he lay holding her against him, but when Amanda came back in and her mouth opened in shock, he glared at her, daring her to say a single word. She did not speak. She came to the girl and he lifted her so Amanda could dose her again and give her more water, then she left quietly. When darkness came, he was loathe to move, but he did, grudgingly. \n\nWhen he returned, she was whimpering and sobbing and writhing on the bed. He climbed in and held her against him and she immediately calmed, then stopped. Her breathing became even and she relaxed her taut muscles. He pulled her closer, rolling her to her side so he could spoon her properly and buried his face in her hair. \"You will wake in the morning,\" he commanded angrily, trying not to let the worry seep into his voice.\n\nShe woke in the night and she was so weak he had to help her to the toilet and then carry her back to bed. He made her sip more water before she fell back into an exhausted sleep, hugging his arm tight. \n\nWhen he woke, her fever was down and she was breathing normally. Amanda was slipping in with a tray that smelled like broth. \"I checked her while you were both asleep,\" she said softly, setting the tray down. \"I'd like to get her to eat some of this if she wakes. I can wake her now if you prefer and feed her, or if you would rather let her sleep and help her? She will be weak and...\"\n\n\"Leave it,\" he hissed impatiently, wanting the woman and her smug looks gone. The girl shifted then, making a small mewling sound as her muscles tensed. She turned to him, her hands holding him as she pressed her face to his chest and hide from the light. \"You must sit and eat,\" he growled, but didn't make her move. In her darkest moments, in all of her pain and misery, she wanted his arms. She made no sense at all. \n\n\"Eli?\" she whispered hoarsely.\n\n\"Mm.\" he answered, his chin on her head.\n\n\"Thank you, I'm sorry I have put you to so much trouble.\"\n\n\"You will pay for it soon enough,\" he answered, but knew he didn't actually mean it. \"Sit up now and eat.\" He sat her up, pulling her into his lap to feed her broth. She was still very weak, her head lolling on his shoulder and as soon as she ate half the broth, she fell back to sleep in his arms. He knew he should put her to bed and go see to his routine... but he wanted to stay. Her hands gripped him so tightly, even in her sleep. It was a primal need to stay and protect her, keep her safe and comforted. It was insane, considering the moment she was better he intended to hurt her himself. Not just because he enjoyed it, but because she had scared him so badly and for the looks Amanda was giving him now. He owed her a great deal of pain and she would pay him in screams. \n\nWhen she was better.\n\nHe held her while she slept for a while, but became restless and anxious. He set a chair near the bed and read aloud to her, to occupy his time. He didn't know when she had woken, but when he glanced at her, her large brown eyes were looking up at him in adoration. He snapped the book shut and sat up. \"By morning you will be well and ready for punishment,\" he demanded.\n\n\"Yes Eli,\" she said softly. \n\nHe narrowed his eyes at her. \"I do not know your game, girl, but if you are thinking to make me complacent so you can run or try and kill me... Know that I cannot be killed and there is no place that you can hide that I will not find you.\"\n\n\"I know,\" she answered. \"I do not intend either.\"\n\n\"What do you intend?\"\n\n\"To see you pleased,\" she answered simply.\n\nEli stood and went to the balcony angrily, wondering why she got under his skin so much. When he returned, she was asleep again. He considered putting her on her mat, but decided she might need a little more rest to recover. He held her tight against him and she turned, snuggling close to him and holding him.\n\nWhen he woke, it was to her straddling him and grinding her pussy against his cock until he was hard. She rode him like a wild thing and he held her hips as she pulled pleasure from him, making him come after just a few minutes. She collapsed on his chest for just a moment before going to wash herself, then clipping herself to the wall, ass out. \n\nHe watched her, then got up and washed up himself before picking up the cat o'nine tails and securing her last hand. The first blow on her bottom made her shriek in fear and try to wiggle away. By the time he was done, she was slack in her restraints and sobbing hopelessly. He left her there, hoping Amanda came in and saw her. Bitch.\n\nWhen he returned that evening, she was trembling and shifting on her feet. He released her and she went to her hands and knees, still shaking. Still, she crawled to him and pressed her head to his calf. He walked away, fed and watered her, then went to the balcony without looking at her again. She was making him soft. He hated her for that. \n\nWhen he returned, she was waiting next to his bed, but she was also passed out. Her little ass, red and striped made his cock throb and he gritted his teeth and went to her. He jerked her off the floor, making her gasp, then shoved her over the edge of the bed. She whimpered slightly, as he pulled his cock out, then made a mewling sound when he shoved into her. He rammed as hard as he could and watched her hands gripping the blankets in her fists as she tried to deal with the pain. When she started making sounds like she was enjoying it and she was getting wet, he pulled out. Her scream when he shoved into her ass was so perfect, he came almost instantly as her tight asshole clenched around him. He pulled out of her roughly, then pulled her up to shove her to the wash basin. He washed himself quickly then left her to get into bed. She came close to the bed and paused. He could sense her in the darkness and he wondered if that had been a tipping point for her. Some girls had always found that more distressing than other things. She climbed into the bed after a moment, laying on her side in fetal position. She was hurting. Out of curiosity, her turned towards her and pulled her close, wondering if she would pull away or shy away. She wiggled back against him and hugged his arm close to her, clutching his hand. He did not understand her, going to the man who just hurt her for comfort. Maybe she was being deceitful, she just wanted the comfort of the bed and not him at all. No. She had clung to him in her sleep, whimpered his name and calmed under his hand. It wasn't comfort, it was him. She put herself in the position to be punished without complaint or balking. \n\nAnd she was stunning. She was petite, but he found he was liking her little body. She fit so nicely in his arms. She was beautiful and smart... Part of him wished he had just abstained from the interviews and took what was left. Stupid and ugly had always been fine with him, all he cared about was taking his anger and frustrations out on them. He hated them. After the first...\n\nNo. He scowled and refused to think of her.\n\nThey died, all of them. Attachment was just more pain. \n\nHe pulled his arm out of her grip and rolled away from her, glaring at the wall angrily. He would not get attached. Not again. Never again. \n\nShe turned to him and nestled into his back and he let her. \n\nHe drifted off trying not to think about how good her little arm felt laying across his waist. \n\nHe woke in the night trying to turn, but she was in the way and he felt unaccountably grumpy that she inconveniencing them. He shoved her, meaning to move her over, but she rolled off the bed with a cry. He sat up as the cry cut off abruptly and the loud thump. He lit the lamp and hurried to her, but she lay on the floor unresponsive, blood seeping from her head.\n\nNo. NO!\n\nHe rang for help immediately, then tried to check her pulse. Amanda hurried in, Lukel in her wake. \"Oh! Lord Eli, I am sorry,\" Amanda said, going to the girl. \n\n\"She isn't dead!\" he yelled at her angrily. \"Fix her!\"\n\nAmanda hurried to the girl and found her wound on the back of her head and staunched it. \"Was she struck? How hard?\"\n\n\"She fell off the bed!\" Eli said angrily. \n\n\"Oh, well she probably got a good bell ringing m'lord, but it doesn't seem too bad. Her head will ache, she will loathe the light. Head wounds bleed and she is a slip of a girl. Let's see her woke and get her head bandaged. Lukel?\" she said, motioning to Linley. \n\n\"I will get her,\" Eli snapped, lifting Linley to the bed. Amanda hurriedly put towels under her head so she wouldn't bleed on the linens. \n\n\"Yes, it's not so bad. We just have to stop the flow and clean her up a bit... Lukel I think you can go.\"\n\nEli glared at Lukels retreating back. Amanda had assumed the girl was dead and Lukel would have to carry her out and see her disposed of. That realization made him angry enough to lash out at the long time servant. \"You will fix her, you have two minutes to get out that door and I don't want to see your face again. Send Adam, Jeffrey, anyone else. You show your face again and I will peel it off with my knife.\"\n\nAmanda pursed her lips, but did not speak as she wound a bandage around Linleys head. She stood with a curtsy. \"See the dressing changed every day, she will need herbs for the pain. I will send them with Adam. If you change your mind or she is in need of me, send for me and I will come,\" she said leaving, her voice sounding offended and hurt.\n\nEli paced and felt rage rising. \"Why are you so fragile?\" he demanded angrily,screaming at her. \"I refuse to go easy on you! I refuse to let up! You will have to learn to adapt, get stronger because I will NOT change who I am for you.\" He paced again then growled before getting back into bed. He moved close to her and put his face next to hers, nuzzling into her jaw and hair. \"You will wake in the morning,\" he commanded. \n\nShe woke in under twenty minutes, jerking and whimpering in his arms. \"Eli?\" she wailed, grasping for him.\n\n\"Hush. I am here. You fell, knocked your head. You need to sleep now.\"\n\n\"I will try my love, the pain is sharp and may not allow it. I will be still and quiet.\"\n\nHe had frozen at her words. My love. No. Why did he feel so elated now? No. Love was out of the question, even for her. He wouldn't allow it. \n\n\"Sleep,\" he said harshly.\n\n\"Yes Eli,\" she whispered, moving to lay on his shoulder with a whimper of pain. He allowed it, but only because she was hurt. Again. Damn her to hell for her frailty! She passed out before he did, holding the confusing woman in his arms and trying to sort out his feelings. \n\nHe woke later than usual in the morning and looked over at her. She had her face hidden in his ribs, tucked under his arm, hiding from the light. He quietly and gently took care of his morning need, trying not to wake her, but she did wake. She was hurting, but she pulled him to roll on her, wrapping her legs around him as she did. He couldn't help himself, he slid into her and her hot cunt welcomed him. Gods she felt good. Her fingers twined in his hair and she pulled him close as he gently took her. He went slow, relishing the feeling of her getting wetter and wetter around his cock and how tight she was wrapped around him. She pulled him down to kiss him and he let her, his breath catching when her lips touched his. \n\nHe did not even remember the last time his lips touched a woman. He kissed her back, emotion flooding through him as he took hold of her face in his hands. His pace quickened with need as his mouth tried to devour her, starved for the affection she was lavishing on him. He came and she let out a small, contented sigh, \"Oh, my love,\" she whispered into his neck, before kissing his jaw and pulling him close in her arms.\n\nHe pushed off of her, his body tense. He hardly took the time to yank on his pants before he left. She watched him flee, confused. She hid her eyes from the light and wished this place had something for pain. \n\nEli sat on the stairs, his emotions had turned to a very unfamiliar feeling and tears welled in his eyes. He raged in his own mind about what she was doing to him. He did not catch feelings. Ever. He was a void, emotionless and empty. He sat, trying to convince himself of that until Adam came up the stairs with a tray.\n\nEli stood and left, motioning the man away. Chances were she was sleeping again anyway. \n\nHe stayed gone all day, but he didn't fall into his routine. He walked, and thought about her. He should kill her. Throw her out of the tower and watch her body shatter at the bottom. The thought of her body lying broken made his gut wrench. He walked until darkness fell and he slipped into the night. \n\nWhen he returned to the balcony, he stood outside to watch her. She was standing over the basin, trying to wash the blood out of her hair, the bandage set aside. He watched her for several long minutes, then went to her and helped her rinse her hair out. She dropped her hands and lowered her head, but her eyes watched him in the mirror. So hopeful, so trusting. His heart leapt at the affection in her eyes as she looked at him.",
        "How? How could she care for him? How could anyone care for him?\n\nHe turned away from her gaze, shame and anger filling him. She dried her hair and went to him. She led him to his bed and pulled him in, pushing him to lay on his stomach. She climbed on him, straddling his back and then digging her fingers and palms into the muscles on his back. He let out a satisfied moan as she massaged him, taking away all of his doubts and fears to just be at peace. As he drifted off, he felt her lean in and kiss his jaw before sliding down and cuddling with his arm. He shifted, turning and pulling the blankets up, then pulled her close to hold her. She was his to hold. It meant nothing, he convinced himself, but it was a token denial and he knew it.\n\nHe woke in the morning, his need throbbing and immediate. The moment he shifted, she woke as well. She winced at the light, but quickly moved to take him in her mouth. He caught her arm and laid her down, rolling to hold himself over her. He hesitated, then kissed her tentatively. Her hands went to his face and hair and pulled him closer, tighter, kissing him passionately. \n\nHe did something then that he had never done. He moved his hand down her belly all the way to her pussy, already getting hot and wet. He touched her there, exploring, and she gasped and bit her lip and pulled him into more kisses. He slid a finger into her and she moaned into his mouth, rolling her hips up to his fingers. He pulled back, hesitating, then moved lower. He had no real idea how to please a woman with his mouth, but it couldn't be too difficult. He kissed the little patch of hair above her pussy, then pushed her legs apart. She seemed stressed and tense, but she didn't pull away or stop him. He slid his tongue up her slit, tasting her. \n\n\"Ooooh!\" she moaned in a whisper.\n\nHe looked down at her, sliding his fingers through her wet juices and exploring with his eyes as well as his fingers. He slid a finger into her and slid it in and out, watching. Listening to her gasps and sighs as she squirmed was thrilling. He rolled his tongue over that little nub that he knew was easy to torture because of the nerves there. Judging from her reaction and yelp of pleasure, she really liked that. He felt himself smirking as he teased and flicked with his tongue and sucked with his lips. She was panting and she slid her fingers into his hair with one hand, the other gripped the sheets in a fist. Her excitement had her so wet and insensible and the satisfaction in that was its own reward. When she came, with a cry of pleasure and her pussy clenching around his finger, it drove him absolutely wild. He didn't even wait for her to finish before he forced her rigid legs open and rammed into her with a triumphant roar. \n\nHer scream of heightened pleasure as her hands clutched at him brought him over the edge immediately. He couldn't remember the last time he had come that hard as his hand dug into her thigh. The release made his entire body go rigid and her cry of pain was heady. He knew his fingers would leave bruises as he squeezed harder, wanting a larger scream from her. Her wail of despair was perfect as he collapsed above her, gasping for breath. He released her thigh and pushed himself up. She had tears in her eyes, but the wide eyed look she gave him was more of a shock and surprise. \n\nHe pushed off of her and went to the basin to wash up, his mind unfogging now that his need had been sated. \n\nShe was a thing. His pet. His slave. She was his to punish and torture and use if he wanted to. It wasn't about feelings, he had only wanted to test a few theories on her sensitivity, not bring her pleasure. \n\nShe quietly joined him, also washing as he looked down at her in the mirror. She was flushed and her eyes bright. Her full lips were red and swollen, inviting more kisses and he wanted to give them to her.\n\nHe turned and dressed, then left, forcing the girl from his mind. He went to his normal routine, but she kept nagging at the back of his mind. She wasn't sick or hurt, she was fine, so why did he care? Why wouldn't she leave his mind in peace?\n\nHe stood at the practice yard, holding his sword but not going through any forms. He was standing and thinking of her.\n\n\"Eli,\" David offered and Eli turned to his brother. His brother was standing, his hand on the shoulder of a tall, slender girl with big blue eyes that seemed mostly vacant. \n\n\"David,\" he spat, putting the sword on the stand.\n\n\"Have you met Everly? She was studying ballet. She...\"\n\n\"If I don't give a fuck about my slave, why do you think I would care about yours?\" Eli snapped.\n\n\"You are in a more foul mood than usual brother,\" David said mildly. \"Would you like to go a round?\"\n\nEli scowled at his brother, then nodded, jerking his sword back up. He went to the center of the practice yard while his brother picked out a sword. Only Eli had his own, he was the only one who practiced as a daily routine and not just when he was bored. \n\nThey ended up going eleven rounds over the course of an hour. Eli won with ease every time, but his brother was always happy to go again and again. At first, the vapid looking girl was their only audience, but soon Aaron and Harper joined her, and then Joshua and Oaklynn. \n\nAfter the eleventh win, David laughed, breathless. \"All right brother, I concede. Thank you for the workout.\"\n\nEli gave a single nod, but cocked his head when Joshua picked up a sword and stepped into the yard. \"You feel up to another go?\" Joshua asked, smirking. He was trying to come off as light and joking, but Eli could read the anger in his eyes. He was going to come at him hard.\n\nHe smiled grimly and raised his sword with a small bow. If his brother had thought him winded or tired, he was disabused very quickly. Eli took him down in under a minute. \n\n\"Again!\" Joshua demanded, wiping dirt off his arm and picking his sword up from the ground. \n\nEli shrugged and waited for his brother to come to him this time. His brother had so much rage in him, he was being clumsy, which was a first for Eli to see. Usually he was the angry one, but Joshua came at him all rage and no finesse. Eli took him down seven more times before Aaron called a halt to it.\n\n\"I'm not done!\" Joshua scowled.\n\n\"It's my turn brother,\" Aaron grinned as he stepped into the yard, testing his blade.\n\nJoshua stepped out with bad grace and Eli watched Aaron. Of his brothers, Aaron came closest to his abilities. He was sweating and breathless with exertion, but he was happy to get more frustration out on the field. He went three rounds with Aaron in just over an hour. He still won, but the challenge was far superior. \n\nWhen it ended, he clasped arms with Aaron and enjoyed a rare grim smile with him. He had needed that. \n\n\"Eli,\" Aaron offered, leading him to the girl still standing at the edge. \"This is Harper. If you would like, I can come back here the same time tomorrow.\"\n\nEli half nodded. \"I come at ten, I stayed over today. By now I am usually in the greenhouse.\"\n\n\"Yes, I am aware. Ten then.\"\n\nEli watched his brother walk off, the girl on his arm. All of them had had their girls with them. Maybe he should bring Linley with him. Not because he wanted her with him, but to keep her humble. Keep her leashed. On her hands and knees. Show his brothers what a slave should be. Show her what she had lost out on as she watched the other girls walking free, enjoying their time. Happy. \n\nHe shoved the sword to the stand and stalked to the greenhouse. Late. He never made it, considering as he walked. He turned mid stride and headed into the manor. Jeffrey was easy to find and he passed off his orders irritably. \n\nHe climbed his tower half expecting to go in and catch her doing something she shouldn't be doing. In his desk, in his wardrobe, sleeping in his bed. She was sitting on her mat. Of course. She looked up at him when he came in, her face lighting up and smiling before she dropped her eyes obediently. He walked towards her, then paced in front of her, considering. \n\n\"Be prepared, slave, for a very hard day tomorrow.\"\n\n\"Yes my love,\" she said quickly, breathlessly. \n\n\"Master. You will call me Master, especially tomorrow. Do you understand?\"\n\n\"Yes my master,\" she breathed. \n\n\"Stand.\" She stood quickly and lifted her eyes to him. \"If you misbehave tomorrow, or put a single foot wrong, I will leave you tied to that wall with the belt on for a week. Do you understand me?\"\n\n\"Yes my master! I will make you proud!\"\n\nHe looked down at her, so confused. She looked so genuine and eager to please him. If this was a game, tomorrow would see through her ruse. \n\nHe took her arm and led her to the wall. She immediately lifted her arms and he secured them with a smirk. She gasped when he yanked her leg up and secured it next to her wrist and then did the same with the other. She looked a little frantic as he looked over his display and he sneered at her. Doubled over on herself, folded in half, struggling to breath. Her pussy and ass were sticking out, exposed, just inches from her face where she could see every blow. \n\nHe picked up the crop, a favorite of his, and turned to her. He patted her bottom with it gently, stroking it over her pussy, making her suck in a breath. He followed with a fast, hard smack right on her clit. She jerked in her restraints and let out a cry. He played it over her asshole a moment before landing another hard blow on it. She screamed again, her body trying to tense up in her restraints. He stopped playing with her and began spreading blows all over her ass, thighs and exposed pussy. Her screams and cries and pleas for mercy were a balm. He was not getting weak. She was not making him soft. He smacked harder, landing a final blow on her clit again, then tossing the crop down. He walked away to get himself a drink, then sat to look at her. Her ass was so perfectly red and her tear stricken face was still beautiful. Her pussy lips were swollen and red and he considered burying his cock in her before letting her down. That he wanted to made him angry. \n\nHe stood, deciding her wouldn't let her down. He couldn't leave her doubled over, so he undid her hands and let her drop and hang upside down from her ankles. He left her there like that, sniffling and sobbing. \n\nHe did not return until well after dark, returning to his balcony. He could hear her before he saw her, still sobbing. He scowled angrily as he went in.\n\n\"Silence, or you will stay there all night.\"\n\nShe immediately quieted, but she was still trembling and shaking. He released one leg, then held the other as he unclipped it. He let it down slowly and she lay on the floor, her eyes squeezed shut and breathing hard.\n\n\"What is your problem?\"\n\n\"I'm sorry my master,\" she whispered hoarsely. \"My head.\"\n\nHe got her a drink and helped her sit up to drink it. She whimpered and her hand fluttered to her head. He should have considered the blow to her head and hanging upside down for that long wouldn't mix well. He laid her on the bed, then sent down to Adam for herbs for a headache. He had to wake her up to drink the tea when Adam arrived and she whimpered and clutched Eli, unable to open her eyes. \n\n\"This will help her sleep as well m'lord. She may not wake in the night if that's not an issue?\"\n\n\"It's fine, drink it all Linley,\" Eli demanded, tipping the cup up when she started to lower it. She choked it all down, making a face. \n\n\"Should I check her head m'lord? Her cut and knot?\"\n\n\"Hurry,\" Eli demanded with a curt nod. \n\nAdam checked the bump and the cut, but shook his head. \"I don't see as it should be causing her additional discomfort now m'lord. I don't specialize in hurts though, if you'd rather I sent for...\"\n\n\"No. Leave us.\"\n\nThe man left and Eli laid her back down gently before standing to get undressed. \"Please don't go my love?\" she whispered, her hands curling into little fists as he let her go.\n\n\"Hush,\" he said harshly, but it wrenched his heart to hear her in so much pain and asking for him. Why didn't it effect him the same when she was crying as he beat her? It occurred to him then. When he punished her, she didn't ask for his help, she didn't ask him to hold her or for comfort. She cried and screamed and begged him to stop, but when he was punishing her, she never asked him for help. It was almost as if she was letting him punish her, then coming to him after. Like she knew part of him needed to do it and she separated it from her feelings for him.\n\nHe lay down next to her and pulled her against him, trembling. She couldn't really care for him? She didn't know him. It was all some sort of manipulation. Whatever it was, it wouldn't work. He resolved himself to that. \n\nShe pulled his arms closer and sighed, pressing her cheek to his fingers. He curled around her and held her as tight as he could. He kissed the top of her head and lay there trying to figure her out. \n\nIn the morning, he woke second guessing himself. Did he really want to punish her so harshly again? He realized then, that he hadn't woke with a need to relieve himself. He had woke up worrying about not hurting her too badly. Not breaking her spirit. She was still clutching him, even in her sleep. He sat up and shook her gently, but she did not wake. He shook harder and she rolled to her back limply, still out. \n\nDamn it. He got up and dressed, then sent for Adam. He came immediately, bringing breakfast with him.\n\n\"How long will she be out?\" he demanded angrily.\n\n\"M'lord?\"\n\n\"The tea? How long will she sleep?\"\n\n\"She has not woke yet?\" he asked, going to Linley to check on her. \"M'lord... Please, may I send for Amanda? I don't know why she has not woken.\"\n\n\"Send for her. Tell her to god damn run.\"\n\nAdam left at a run and Amanda must have been standing by. She came in quickly, going straight to Linley. \"What's wrong?\" she demanded, pulling back Linleys eyelid.\n\nAdam had followed her back in. \"I gave her Marrowroot tea for her headache and to help her sleep.\"\n\n\"Then she should be waking... how much did you give her?\"\n\n\"A single cup.\"\n\n\"Tsss. You would give a whole cup to Lord Eli, but this little slip you would give less than half. A third. She will be fine M'lord, but she may not wake soon. May I check her wounds?\"\n\n\"Quickly.\"\n\nShe looked over the head wound and felt around it, then laid her back down. \"It looks just fine M'lord. I can come check on her, keep an eye on her if you wish it, until you return.\"\n\n\"Check on her,\" Eli demanded, then left. He wanted to call down Adam for making the mistake, but he knew it was his own fault. He should not have banished Amanda, she was the healer, she was who knew what to do. Not Adam. \n\nHe returned to his tower as soon as Aaron was too tired to keep sparring. It was an excellent way to vent his frustrations. He would have to make his brothers come around more often to the field. She was still asleep and Amanda was sitting close to her, sewing and singing softly. He cleaned at his basin, letting her know he was here, but she did not stop. He went around the bed and pulled his shirt off before laying next to Linley and pulling her close. He silently dared Amanda to speak, but she just kept sewing and singing as if he wasn't there. He turned to pull her closer and stroked her hair back. \n\nWhy was she so fragile? She was so much work. So tedious. He should just end her so he wouldn't be so tied in knots all the time. She had no right to do this to him!\n\n'Wake up!' he willed her silently.\n\nAmanda stood and touched Linleys neck, then rolled back her eyes again. Whatever she felt and saw, she didn't say as she sat back down and went back to singing and sewing.\n\nAn hour later, she did it again. This time, she nodded and picked up a bottle. She unstoppered it and wafted it under Linleys nose.\n\nLinley jerked, recoiling from the smell, then coughed and opened her eyes. \"Oh!\" she cried, squeezing her eyes shut again and pressing her face into Elis chest. \"My love, I hurt.\"\n\n\"Silence,\" he demanded, glaring at Amanda.\n\nAmanda did not speak of it or give him a look. She helped Linley turn and peeled back her eyelid again. \"Does the light still hurt girl?\" Amanda asked in concern.\n\n\"Yes!\" Linley whispered, pulling back to close her eyes.\n\n\"Hmm. Did you hit your head worse? Did something else happen?\"\n\n\"I hung her by her feet,\" Eli growled, daring the woman to admonish him or speak against his punishment for his slave.\n\n\"Oh, I see. Try to sit up girl. I want you to drink all of this water. You are dehydrated. All of it now. Now here. Drink this tea. I know it's cold, it will still work. It will numb the ache, relax your muscles, but it won't make you sleep. Too much sleep isn't helping your head. Sit up a bit more, I am putting another pillow behind you. Try and sit up as much as you can. Sip more water. M'lord, she will need food, probably a broth is best, may I send for some?\"\n\n\"Hurry,\" he demanded.\n\nShe scrawled a note and sent it down the tube, then returned to Linley. \"Keep sipping child. Let me know when the pain eases.\"\n\n\"Sitting up helped, thank you. It still hurts too bad to open my eyes. I am sorry Master, I will try and do better. I didn't mean to ruin your plans.\" She pressed her head to his chest, gripping him tightly.\n\n\"Drink, Linley,\" he said gruffly, but not too loud. \"I will punish you for this trouble tomorrow.\"\n\n\"Yes Master,\" she whispered, still clutching him. \n\nAmanda helped her drink the broth as Eli held her. \"There you go girl. How's the pain now?\"\n\n\"I'm not sure. I feel... off. Fuzzy. Like I am out of my body. It's all... muted.\"\n\n\"Good, it is working then. Keep her sitting and drinking m'lord. I will stay and do it if you wish, or leave and come back when she needs more tea and dinner.\"\n\n\"Go,\" Eli said with a scowl. \"Return later.\"\n\n\"As you wish.\"\n\nAs soon as she was gone, Linley moved closer to him and laid her head on his chest. \"I am sorry. I will make it up to you. Tomorrow I will make you proud, I swear it.\"\n\n\"You better. Stop talking and rest. You need to harden yourself girl. You are too fragile. You break too easily. I refuse to keep coddling you.\"\n\n\"I will try my love, I will.\"\n\nHe got up and paced, watching her. \"Drink,\" he demanded. She drank down all of the water and he got her some more. \"I should punish you now for all the trouble you have put me through.\"\n\nShe looked up at him, then nodded slightly. She turned and rolled to her stomach on the bed, moving so her ass was over the edge. He considered a moment, then lifted her and put her over his lap. He put his hand on her bare bottom and immediately got hard. Traitorous fucking cock. He spanked her, but not hard. She squirmed and cried, but he hardly warmed her bottom at all before turning her back over. She did not hesitate, she spun and opened his pants, pulling his cock out, taking it into her mouth. \n\nHe closed his eyes and laid back on the bed, letting her suck him off. Fuck, her hot wet mouth felt so good. She knew her way around a cock, knew how to pull pleasure from him in ways he had never known as she caressed his balls and pressed her tongue against him as she sucked. His hand went to her hair, but he did not force anything, just let her go. When he came into her mouth, she slid her lips down around him and sucked, swallowing and pulling more and more from him. He laid there and let himself bask in the langid feeling for longer than he ever had. She drank her water, then laid on his shoulder, cuddling close to him.\n\n\"Sit up,\" he demanded, but moved so he was sitting up next to her and he could hold her against him.\n\nShe put her arms around him in a sort of hug as she laid her head on him. He was uncomfortable in his comfort in holding her. What he wanted was to turn her and kiss her, feel her passion pour into him again. He yearned for it. If he kissed her now, would it be the same? Was it a one time thing?",
        "She lifted her head to look up at him, her eyes full of adoration. He didn't think, he pulled her up into a kiss and it was all he had hoped for. She moved higher, straddling him, her hands on his face as she kissed him passionately, lovingly. She slipped an arm around his neck and slid her other hand into his hair, pulling him harder into her mouth. He pulled her body closer, his other hand on her jaw. His heart ached with a need for this, for her. For her need for him, her feelings for him. \n\nHe held her there, kissing her until his need rose again, pressing into the heat of her very wet pussy. She needed no urging to raise up and let him guide himself into her. She rode him slowly, kissing him more gently. The love in her gentleness, her hands and her arms... it was almost more than he could bear. He could feel tears rolling down his cheeks but he refused to acknowledge them. She rode him that way, so slow and loving as she sighed and kissed his jaw and neck for over an hour. Until he could take it no more and rocked forward, putting her on her back. He moved faster, but not rough. Her cries of pleasure were bliss and when she came around his cock, he felt an inordinate amount of satisfaction.\n\nThe door opened and immediately closed, but he didn't care. He made love to her, moving faster as he kissed her as she had him. Soft kisses on her lips, her head, her jaw. He came with a sigh of contentment as she moaned. He held her there in his arms, keeping himself deep inside of her as he grew soft.\n\n\"Oh, my love, that was amazing,\" she sighed in a happy whisper, her eyes shining up at him. \n\nHe kissed her, then got up, feeling awkward. \"Clean up,\" he demanded as he went to do the same. She followed him and put her arms around him from behind, hugging him close as she kissed his back. He patted her hands, then pulled her around to the basin, feeling his face go hot. \n\nThere was a soft knock at the door. \"Enter!\" Eli snapped, handing Linley one of his shirts as he pulled on a pair of pants. \n\nAmanda came in with a tray, not looking at them as she went to the bed and set it on the table. \"The tea is still warm and it is easier to drink warm child,\" she said, not looking up. \"Keep drinking your water and finish all of the broth. Will you be needing anything else m'lord?\"\n\n\"No. Leave us.\"\n\nLinley sat and drank the tea, then her broth. She sipped her water and looked up at him as he stood and watched her. He watched her lips part slightly as she looked him over, her eyes taking him in. She liked what she saw, that was obvious. She raised her eyes back to his and she blushed. Part of him wanted to smile at her, but he shoved it away. \n\nHe pulled on a shirt and looked at her before going out to the balcony. \"Finish that water before I return and another as well.\"\n\n\"Yes my love,\" she breathed, still blushing.\n\nShe was asleep when he returned, still half sitting up, propped up on the pillows. She looked like she had fallen asleep waiting for him. The cup was empty, so he didn't wake her. He undressed and got into bed next to her. She rolled with a small noise and laid on his shoulder with a sigh. He held her stiffly, knowing he was taking an unwise path. End it now, he told himself. Do not get attached. They die. They always die. She would grow old and feeble and die. \n\nIt took a long time for him to sleep, holding the small girl in his arms. He wished she didn't feel so good there.\n\nHe woke in the morning at his usual time, his cock hard and ready. The moment he stirred, she woke as well and pulled him to kiss her. He made love to her again, relishing in her kisses and her adoring arms. Seconds after he had come and was holding her, his head pressed to hers, the door opened and closed again. \n\n\"Come!\" he yelled angrily. \n\nAmanda stepped in, her head down and cheeks pink. Eli rolled off of Linley and went to the basin. Amanda looked at Linleys eyes. \"How do you feel girl?\"\n\n\"Better Amanda, thank you for your help. Truly.\"\n\n\"Happy to help child. Keep drinking your water, you look much better today. Is the pain gone? I brought more tea, just in case.\"\n\n\"Thank you Amanda. Would half a cup help as well as a full? It is not so bad as yesterday and I need to be more... alert today.\"\n\n\"Yes girl, it will help and not numb your head so much. Eat all of your oatmeal.\"\n\n\"I will, thank you.\"\n\nAmanda left and Linley got up and hurried to wash. Eli dressed and watched her eat as he sent a note down the chute. \n\nMoments later, Jeffrey appeared with a box. Linley watched him set it down warily, then watched Eli as he picked the box up and moved it to the table in front of her. The first thing he took out and set on the table was a ball gag. The next was a series of leather straps, all connected. Linley assumed she was supposed to wear it. The last was, to her horror, a long, thick anal plug with a long horse tail attached to the end. Once the plug was inserted, it would look as if she had a tail. \n\nLinley was horrified, but she stood and went to him, pulling his shirt off as she did. He began putting the leather strap outfit on her and she was humiliated all over again. Nothing was covered, nothing. There were triangles of straps around her breast, but her breasts were on full display. The same with her pussy. You could see everything. He left part of it unhooked and hanging and she knew why. There was a hole in that strap to hold the plug in place in her ass. He pulled her hair up into a severe ponytail again, then affixed the ball gag into place, forcing her jaws open painfully. He gently pushed her over the bed and began working her clit until she was mewling and relaxed, open to him. He began working the lubed plug into her slowly, but it's size made her scream around the gag despite his efforts to ease her into it. He kept pushing it in, working it deeper and deeper. Finally, her sore asshole closed around the taper and she could feel the hard plate that held the tail pushing into her cheeks. He secured the plug in place, though she knew there was no way it was going anywhere. It was too large to come back out on it's own. \n\nFinally, he affixed another strap to the gag that went under her chin and over her head, then a leash to that. A bridle, she realized. There were tears rolling down her cheeks when he made her stand. He led her in a circle around the room, but she had trouble walking with the large plug in her ass.\n\n\"Walk right. Keep your head held high and be ready to do all you are asked. I said walk right!\" he demanded and pulled the crop off his hip. He smacked her hip with it lightly.\n\nLinley forced herself to walk as well as she could, despite the discomfort. \n\n\"Tall and proud. Head up. Good girl. Come.\" He led her out the door and down the stairs, then outside. The grass was soft on her bare feet and she let out a sigh despite her discomfort. He led her at a fast pace to a large flower garden, and to her horror, there were people there. Two of the brothers with their companions. She kept her head high as she stayed close to Eli, but did not look at them as they watched her. One of them was Joshua. Eli walked her around, then sat down on a bench. Without being told, she went to her hands and knees on the grass next to him, her head high, staring at the fountain in front of her. Eli petted her. Linley could see the others watching her in horror and anger. She wanted to hide her face, but instead she turned and offered her ass to Eli, putting her face in the grass. He used the crop to smack her several times, then tugged the leash. She went back to her place next to him. He stood and she quickly followed, walking proudly almost next to him, but a step behind. He went to a large, fenced off circle , then tied her leash to a slat in the fence. She dropped to her knees as he went out into the dirt and took off his jacket. He picked up a sword and Linley felt people moving up around her. She watched Eli raptly, not daring to look around at the people standing next to her. One of them took his own jacket off and went out to the field with Eli. It was Joshua.\n\n\"Oh you poor thing,\" a girl whispered. \n\nLinley did not acknowledge her or look away from Eli as he and Joshua began sparring. She saw quickly that Eli was good. \n\nShe blushed when she heard Levi come up behind her. \"Now that looks good enough to eat. Maley, I am going to have to get you an outfit like that. Hello there girl. Regretting your decision yet?\"\n\nLinley ignored him.\n\n\"I'm talking to you,\" he said more loudly with a light smack on her bottom, right on the plug. Linley yelped around the gag and Eli turned to her. His face went red with rage.\n\n\"Did you just strike my slave?\" he demanded, stalking to Levi.\n\n\"It was barely a pat, she wouldn't acknowledge me. I was making sure she heard me,\" Levi answered dismissively. \n\n\"I am calling you to account,\" Eli spat through gritted teeth.\n\nEveryone went still and Linley could feel the tension in everyone.\n\n\"Eli...\" Aaron began.\n\n\"No. He struck my slave. I call him to account. You all bore witness.\"\n\n\"We did,\" Aaron said gently. \"I don't think he realized how much a touch there might hurt her. Eli, he hardly touched her, and you have done so much...\"\n\n\"What I do to my own slave is no one's concern but mine. I call him to account. Would you deny me?\"\n\n\"No,\" Joshua said angrily. \"We will not deny you. We do not touch each others companions, it is one of our oldest rules. Levi, you have no excuses. Maley. You belong to Eli for 24 hours, starting now.\"\n\n\"What? NO!\" the girl wailed. Eli struck her, hard, knocking her to the ground. Levi rushed to her, but did not touch her.\n\n\"If you kill her, you know the penalty,\" Levi said angrily.\n\n\"She looks much more resilient than my own slave,\" Eli smirked. \"I've seen football players who weren't built as big as her. She won't be dead. She just may not be very useful for a while.\"\n\nHe untied Linleys leash and she stood quickly as Eli grabbed a handful of the other girls hair. He drug her to his tower, her screaming and struggling the entire time. \n\nAs soon as they reached his room, he released Linleys leash and she went to her knees immediately. Maley, who really was built like a linebacker, he secured to his wall, ass out. She struggled and cussed him, but he ignored her as cut off her clothes and pulled his little box out. He pulled out a huge phallus and an even larger anal plug and coated them in oil before putting the belt on her. He shoved the phallus in first and the girl wailed and begged him to take it out.\"\n\n\"You want it out?\" he asked dangerously.\n\n\"Please! Yes please!\"\n\nHe pulled it out and pulled out a larger one, coating it as well. He picked up the plug and started working it into her as she screamed and bucked against the wall. He was not gentle as he shoved it in. He was less gentle with the phallus, shoving it up hard with the palm of his hand. He secured them both with the strap, then washed his hands. He lifted Linleys leash and she stood, staring at Maley in wide eyed horror. \n\n\"You feel bad for her?\" Eli asked softly. Linley nodded emphatically. \"You would have me go easier on her?\" She nodded again. \"You would take her place?\" Linley hesitated, but nodded slowly, tears coming to her eyes. \n\n\"Duly noted. Come,\" he commanded, pulling her down the stairs. He went back out to the practice field, where all of the other brothers were still in a group, yelling at each other.\n\n\"Where is she?\" Levi demanded, looking around as Eli approached.\n\n\"She is fine, I chained her to a wall,\" he said offhandedly, securing Linleys leash to the same slat. She went to her hands and knees. \n\n\"Eli,\" David began.\n\n\"No. Rules are rules. He put his hands on my slave, hurt her even. Do any of you deny it?\"\n\n\"I think he just scared her,\" Aaron said gently.\n\n\"I came to spar. Do any of you...\"\n\n\"I will!\" Levi said angrily. \n\nLinley watched them spar. She watched Eli spar with every single one of his brothers, who all seemed angry at him. Eli beat them all, even after it was obvious he was winded. She was in awe of him. How was he so good? She supposed he had more time to practice than the others did.\n\nMore of the girls moved close to her and tried to whisper to her, offer their commiseration, but she ignored them all. They stayed close and she could hear them speaking, mostly about her and how badly Eli was treating her. \n\nIt finally ended, none of the brothers wanting back onto the field. Eli took her leash and she stood, staggering slightly which earned her a light smack. She stood up straight and tall and dared look the other girls in the eye. She showed no fear or sadness or pain. She showed only pride. She also noticed Levi was gone. \n\n\"Eli,\" Joshua said, his tone less angry. \"Do not break his companion. It was a light offense. She does not deserve you anger.\"\n\n\"She is more than capable of handling it. My own slave offered to stand in for her. Would it be so bad if she did that? I will return her here at ten tomorrow. Hmm. Perhaps not. Tell him to be at the base of my tower at ten. She may not be able to walk all the way out here.\" He chuckled as he led Linley off. She cast all of them a single challenging look as he led her away.\n\nHe took her to the greenhouse and showed her the plants he liked to work on, how to care for them, what they were. Halfway through, he turned to her with a smirk. \"I saw the way you looked at those girls. You have pleased me well so far today. Keep it up into weeks end meal tonight.\"\n\nShe nodded, a single dip of her head to him, but he could see the pleased and proud look in her eyes. He kissed the top of her head and showed her the rest of his plants. After, he led her out into the grass, walking her out in the rolling hills to look around the huge valley nestled into a deep bowl with high cliffs. It was beautiful. Finally, he led her back inside to the dining hall. Levi glared at him, but Eli didn't notice as he led her to his chair. She stared a challenge at everyone before going to her hands and knees in front of her bowls. Eli stroked her hair and back before undoing her ball gag and pouring her some water. She drank it all quickly and he poured her more before filling her food bowl.\n\nThe dinner was tense and quiet with little to no conversation. Eli didn't really wait at all, he finished quickly and stood. Linley stood quickly, picking up the gag and followed him up to his tower. \n\nThe girl was hanging limply and Eli immediately sent down. He led Linley to the bed and leaned her over it. Adam showed up and Eli motioned to the floor near the girl. The man began cleaning up the piss. He took Linley out of the straps, then eased the plug out of her as she wailed and sobbed. She managed to collect herself almost as soon as he removed it, though she still sniffled and winced as she stood to face him. \n\n\"You did very well. You may put my shirt on and lay down while I am gone,\" he said, then pulled her hand up and kissed the inside of her wrist. She blushed and smiled under his praise, then went up on tiptoe to kiss his lips. He offered her a small, pleased smile before he went to the girl on the wall.\n\nHe took the belt off and the phallus slid out on it's own. She woke and bleated like a sheep when he began to roughly work the plug out. He had to move quickly when he got it out, as she shit on the floor. Adam quickly cleaned it up, though he looked disgusted. Eli looked furious, but he left without punishing her further, going to the balcony.\n\nLinley wanted to go to the girl, comfort her, but she knew Eli would not like that. She curled up in his shirt on the bed, laying on her side. She was sore and very tender, but she knew Maley must be worse. She had stressed herself sick over it by the time he returned. \n\nHe came to the bed, pulling off his shirt, then scowled down at her. \"What is wrong with you?\" Fearful and trembling, she looked over her shoulder at Maley and he growled in frustration. \"You would truly take her place?\" he asked angrily.\n\nLinley nodded, tears in her eyes.\n\nEli growled in anger as he wrote a summons and sent it, then went to Maley and began releasing her restraints. The girl fell to the floor, sobbing and Eli stalked away from her. Adam came in and Eli motioned to Maley. Adam cleaned her up as Eli waited, scowling at Linley the whole time.\n\nAs soon as Adam was done, Eli secured the girls wrists behind her back and chained her to the wall. He left her laying there on the floor as he returned to bed, shucking his pants as he did. Linley started to get up, to go to the wall but he caught her arm. \"Lay down,\" he snapped. She eased back into bed and curled up against him as he pulled her close. \"That is your reward for doing so well today. Never expect another.\"\n\n\"Thank you my love,\" she whispered, kissing his chest gently. \"I will strive to be worthy of your generosity.\"\n\nHe heard no sarcasm or derision in her voice, and the way she pulled him closer, hugging him tighter, he felt a warmth spreading over him. He held her close, a peaceful sleep coming over him. More peaceful than he had had in centuries. \n\nShe woke him in the morning by climbing onto him, straddling him and taking his cock into her. She was already so hot and wet, and he watched her with a hooded expression as she pulled the shirt off before she began riding him slowly. He watched her face, her expression turn to euphoria as he put his hands on her hips. She got into a steady movement and her pace quickened. He knew from the way she was biting her lip that she was working to her own orgasm as well as his. Her cry of pleasure as her legs locked around his hips and her hot pussy clamped down on his cock brought him to fulfillment. He shoved his hips up into her hard as he came, shooting deep into her. \"Oh! Oh yes my love!\" she whispered as her tight hole squeezed him and encouraged every drop out of him. She collapsed into his arms with a sigh of content. He stroked her back gently for a moment, then shifted. They both got up and went to wash, then Eli turned to Maley. \n\nThe girl was still on the floor and she had pissed herself again. Eli released her restraints and pulled her up by her hair, then shoved her to the basin. \"Wash yourself he demanded, then moved to the chute to send for Adam. \n\nMaley lifted the basin in both beefy ands and turned to Eli, lifting it over her head. \n\n\"NO! ELI!\" Linley screamed, but he was already moving. \n\nHe spun and caught the large ceramic basin and jerked it from her hands, then shoved her roughly to the floor as he set it down. \"You will pay dearly for that, girl. I have another four hours with you.\"\n\nThe girl lunged at the desk and snatched up his pen, then turned and lunged at Linley as if to stab her with it. Eli looked terrified as he shot forward and grabbed the girl by the hair, stopping her inches from Linleys face. He yanked her back hard, throwing her to the floor to go to Linley. He heard wood break and a loud crack and thud and had Linleys horrified face to tell him what just happened.\n\nHe turned and the girl was on the floor, her eyes wide and sightless as blood pooled beneath her. His desk was half collapsed from her head hitting the corner. He turned quickly and pulled Linley to his arms, moving to block her view. \"Did she hurt you?\" he asked in a whisper.\n\n\"No my love. Thank you for saving me!\"\n\n\"Shhh. Come,\" he said gently and pulled her with him to send a full summons to his tower.\n\nAmanda, Jeffrey, Adam and Lucan all came in and Amanda went pale. \"Take her down and convene my brothers,\" Eli said coldly. \"Replace my desk and clean that up.\"\n\nThey nodded and Eli helped Linley pull on one of his shirts before he got dressed. She was shaking badly and tears were rolling from her eyes. \"Easy,\" he whispered. \"You are fine. That is all that matters. Come now.\" He led her down to the room where she had first seen the six brothers, then pulled his own chair down next to the one she had sat in. ",
        "Lucan carried Maley in, wrapped in a white shroud. Linley turned her face away and sobbed as he lay the body between the chairs, where everyone would have to see her. The brothers arrived and they all froze as they entered, looking down at the body wide eyed. Levi shook his head in denial and went to the girl, unwrapping her. \n\n\"No! NO! You killed her! Why? You will pay! I will see you stripped of all of your rights! I will have your pet and you will never receive another companion!\"\n\n\"Levi,\" Joshua said gently. \"Sit, please. He has called to convene. If you are unable to sit, you must leave.\"\n\nLevi covered the girls face, then went to sit, glaring murder at Eli.\n\n\"Eli, you cave called to convene. I assume it is about the death of the companion of your brother Levi? Did you kill her?\"\n\n\"I did,\" Eli said standing.\n\n\"It was self defense!\" Linley yelled, also standing. \"She was trying to kill me! She almost did!\"\n\n\"Hush,\" Eli whispered, but not harshly. He pulled her close as she began sobbing again and she hugged him and cried into his shirt as he held her. Eli looked up to five stunned expressions. \n\n\"Is that true?\" Joshua finally managed, gaping at the girl Eli was holding.\n\n\"It is. I told her to wash and she tried to attack me with my wash basin. When I pushed her away to the floor, she took up my fountain pen and went after Linley. I stopped her only just in time and threw her back, away from Linley. I had no intention of hurting her, or killing her, only seeing Linley safe. Her head hit the corner of the desk and he was gone before she hit the floor.\"\n\n\"Is that how it happened, Linley?\" Joshua asked.\n\n\"Yes,\" Linley sobbed.\n\n\"I rule it an accidental death,\" Joshua said standing.\n\n\"Accidental death,\" David and Mason said, standing.\n\n\"Accidental death,\" Aaron said gently. \"I am sorry for your loss Levi.\"\n\nLevi stood, his face red and his eyes full of unshed tears. \"I have never known you to lie or be anything less than straightforward. And what you say... that sounded like her. She came after me that way the first three days. But it would never have happened if you had not taken her!\"\n\n\"It never would have happened if you had not put your hands on my slave!\" Eli shot back.\n\n\"A girl is dead!\" Linley said angrily, turning to Levi. \"Stop trying to lay blame and honor her memory and mourn her! It is no ones fault, it is a horrible accident. Give her an honorable farewell and celebrate her life!\"\n\n\"The girl is right,\" Joshua said gently, taking Levi by the arm.\n\n\"I demand shared rights!\" Levi demanded. \"I reconvene to debate my rights to the companion Linley!\"\n\n\"No!\" Eli said angrily, pulling Linley against him.\n\n\"We have been convened, brother. Send the girl out.\"\n\nEli glared at his brothers, but led Linley to the door. \"I will not let him have you,\" he whispered softly. \"Do not fear.\"\n\n\"I know you won't my love,\" she whispered back, before going up on tiptoe to kiss him.\n\nEli brushed her cheek with his knuckle before closing the door. Linley paced outside the door and four girls joined her. \n\n\"Hi,\" a tall slender girl with big blue eyes said. \"What is happening?\"\n\nLinley turned to the girls, blushing. They all stood in their flowing white gowns and she stood in an oversized black shirt. She supposed it was better than leather straps, but somehow the straps had been more empowering. \"Maley is dead,\" she finally answered and the girls all gasped and one begand crying.\n\n\"Oh, he is such a monster!\" another girl said breathlessly.\n\n\"I know you are not speaking of Eli,\" Linley said dangerously.\n\n\"He KILLED her!\" the first girl said.\n\n\"No. He saved me. Her dying was an accident. She tried to kill me because I warned Eli that she was about to try and hurt him. He pulled her off of me and she fell back and hit her head. That was all.\"\n\n\"Oh. Poor Maley. I'm Everly,\" the tall girl said. \"And this is Jennifer, Oaklynn and Harper. You are Linley, right?\"\n\n\"Yes,\" Linley answered warily.\n\n\"Is Eli as awful as he seems?\"Jennifer asked, wide eyed.\n\n\"He isn't awful, just misunderstood and a little jaded. No one knows him like I do, you can't understand.\"\n\n\"You are braver than I am,\" Harper said said with a gentle smile. \n\n\"So you really did choose him first?\" Oaklynn asked wide eyed. \"Joshy said it was an accident, a misunderstanding.\"\n\n\"I chose him,\" Linley said gently. It had been an accident, but she knew now that it hadn't been chance. He needed her. \n\n\"So where are you from? You know, before here?\" Jennifer asked. \"We get to talk to each other all the time, but never you.\"\n\n\"I am from a small farm town.\"\n\n\"You know,\" Everly said gently. \"I think Maley may be better off. She hated it here. She hated Levi. For her, this place was hell.\"\n\n\"Why?\" Linley asked in confusion.\n\n\"Maley likes... liked girls. For her to be stuck with Levi... that was a special sort of hell for her. She said he tried to be nice about it, and he was nice to her and gave her a lot of free time. But she wasn't happy. I think she was working herself up to ending herself anyway,\" Everly answered, tears welling in her eyes. \n\nThe door opened and Eli stood there looking down at Linley. She forgot herself and did not kneel, she looked up at him fearfully, trying to read an answer in his face. He touched her cheek and gave her a small smile. \"You are safe little one. He will not have you.\"\n\nLinley let out the breath she was holding, then remembered herself and started to kneel. He caught her arm and pulled her out the front door to walk with him. He released her arm and walked slowly. She knew he was chewing on something to say. She slipped her hand in his as they walked and he held it absently as they walked. He finally spoke.\n\n\"I have never killed anyone that way. Accidentally. Oh, there have been times a girl died without me meaning for it to happen, but I knew full well that it was a possibility going into the punishment. Never has it happened and made me feel regret. I did not wish the girl dead. I only meant to show my brother I would not tolerate him putting his hands on you. I would not change it though. Not for a moment. If she had harmed you... \" His hand tightened around hers. \"It was a consensus that he had no right to you, not even for an hour a week. Her death was caused by her own actions.\"\n\n\"The other girls said she wished to die,\" Linley said softly. \"She was unhappy here.\"\n\n\"Levi is not for everyone, but he usually manages to keep his companions happy.\"\n\n\"She liked girls.\"\n\n\"Ahh. I see the issue there. Did you enjoy speaking to the girls?\" he asked, and Linley felt like an idiot suddenly.\n\n\"I am sorry Master,\" she whispered. \"I should have waited for you silently and not spoken to them. I realize that now.\"\n\n\"Hush. Did you?\"\n\n\"It was not awful?\"\n\n\"So you might enjoy some time to... socialize with them?\"\n\nLinley looked up at him carefully. \"I would much rather spend time with you my love.\"\n\nHe gave her a knowing smile. \"If I were to allow you to join me when I spar with my brothers, would you like to socialize while I am busy?\"\n\n\"I would not hate it, but I find I like watching you spar. You are... amazing. I can't even explain how incredibly proud I was while watching you.\"\n\n\"Each of us have something we excel at. For me it is the sword.\"\n\n\"You have not talked much about your brothers?\" she prodded.\n\n\"No. We are different creatures. They are all closer to each other. Joshua is creative, like you. He can paint and draw. He has masterpieces in his tower of every companion he has ever had. Levi... I am sure you can imagine what his specialty is.\"\n\nLinley blushed and he chuckled at her. \n\n\"David has his own greenhouse and gardens and puts mine to shame. Mason writes. Poetry mostly, but also stories for his companions. Aaron likes to cook for his companions. Weeks end meals, he always prepares. We each have our things.\"\n\nThey had walked all the way out to where the grass was high and he watched Linley run her hand over the top of the grass as they walked. She turned to look up at him when he stopped talking, then smiled up at him, her eyes so full of adoration that it hurt his heart. She glanced around, then pulled him down in the high grass. She lay on her back and pulled him down to kiss him. He made love to her there out under the open sky, then lay holding her and enjoyed the peace of the whispering breeze passing over them. They laid there contentedly until it was time to spar. Eli didn't know if anyone would show up today, but he led Linley to the yard while he worked his forms.\n\nIt wasn't long until people did show up. Aaron went onto the field immediately, but Joshua came to stand next to her as she watched, leaning against the fence.\n\n\"I owe you an apology,\" he said softly.\n\nLinley turned and looked up at him curiously.\n\n\"I was so angry with Eli for somehow deceiving you, snatching you away from me. I see now that you are exactly where you need to be. You have... managed to do what no one else ever has. He speaks to us now, spars with us. He has not done that in a long time. And the way he was with you earlier... he has changed. He cares for you. You have managed to break away that wall he has held in place for so long. How did you do it?\"\n\n\"I loved him,\" she answered simply, turning back to watch Eli. \n\n\"I can see that you do. You are what he has needed. Thank you.\"\n\nLinley shrugged. \"You can convince yourself of anything if your life depends on it, and he was well worth the little bit of effort it took.\""
    ],
    "authorname": "gabthewriter",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/lights-end"
}