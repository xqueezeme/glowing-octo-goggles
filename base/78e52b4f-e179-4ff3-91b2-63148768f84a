{
    "title": "Starlight Gleaming Ch. 15",
    "pages": [
        "Assassins, and then Sparanztlo, the Seventh Hell \n\nby T.J.Skywind \u00a9 \n\nPlease note that this chapter contains some very dark elements, including sections of indirectly describing torture and non-consensual male on male anal rape. \n\nWhile I am not personally a fan of BDSM, I am aware enough to know that those practitioners are generally ethical in their behavior to their partners; a dominant-top recognizes and respects the concept of a \"safe\" word, and understands that losing control is a serious, potentially life-threatening issue, one that may require intervention. (Thank you, writer Jerry Stahl and actress Melinda Clarke for Lady Heather from the TV series CSI. 'Pirates of the Reich' caused me a lot of clarifying introspection.) \n\nTorture, on the other hand, is simply and purely evil. And underneath all the lies told to justify its use, those who practice torture do so to indulge their inhuman desire for unadulterated cruelty. The inclusion of such scenes are not for shock value but to convey the dangers of unregulated power; when torture is allowed, compassion is the first casualty, and restraint and justice quickly follow. Survival itself under such rule becomes a matter of luck or caprice. \n\nThere is also a section where a frank discussion of a character's past incest experiences takes place. It is clearly marked. \n\nFor those made uncomfortable by such literary images, feel free to skim or skip the offending section, or simply wait for the next chapter, which I hope will be exciting, engaging, and satisfying for those following this series of tales.  \n\nFor those in the service, especially the US military, I am quite aware that when one says soldier, that means army. Those in the navy are sailors, not soldiers; a marine is a marine (and always a marine); those in the air force are airmen (even though they were once the army air force), and those in the coast guard are coasties. \n\nIn the Empire of Chimorro, all the military services are part of the Warrior social caste. Even an enlisted person who was born into the Free Farmer Caste socially outranks a Guild Caste whil\"e on ac\"tive duty. (Guild Caste is the highest common, or non-noble rank in the Empire. Remember, enlisted military service is the means for upward social mobility.) While the various Imperial services recognize the differences between their branches, even to fostering rivalry as to which is the best branch, the shared social caste means more than any differences between the various branches of service. If someone says that those of the different branches are 'all soldiers of the Empire', and while individually someone may feel their branch is better than the other services, the phrase is readily recognized as a reference to the more important shared social caste. \n\n* * * \n\nThanks to my reader, gyfurune, who helps catch my mistakes. My debt to him continues to grow. Any errors that slip through are my own. \n\nSummary \n\nThe humanoid reptilian draconians use personal cloaking technology that allows them to either become invisible or to disguise themselves as any human they wish to mimic. The cloaking also acts as a personal body shield, protecting them from most projectile weapons. The draconians are allies to the Aesir-Vedans, one of the three pre-eminent world powers. The other two are Atlantis and the Empire of Chimorro. \n\nCaptain Janetta Tlacotli, Ranji's lover, barely survived the attempt on her life by a draconian assassin, and managed to thwart the self-destruct mechanism, allowing the Empire to capture the technology. Attacking the Imperial research facility outright would provoke war with the Greys and their Atlantean allies, as well as other alien races. \n\nArjun Kandikan is getting too close to understanding how to create and manipulate energy fields. Even no longer working, the captured draconian technology will radically speed the process to the Empire creati\"ng its o\"wn defensive field technology. \n\nTo punish Arjun for leaving Veda and to sabotage the Empire's efforts, the draconians have initiated their plan to kill both father and son together.\" \n\n\"Ranji Kandikan, Senior Lieutenant in the Imperial Air Service, has left his family at High Guard \"War\" Base under the pretense of visiting his parents; his immediate goal is thwarting the assassination plot to kill his father, Arjun Kandikan. And regardless of how successful the rescue effort, afterward, Ranji must then leave for Sparantzlo, the training center for the feared Imperial Security to become an agent himself in order to protect his family\u2014even if it puts him closer to the attention of Minister Supay, the head of Imperial Security and the most powerful man in the Empire after the Emperor, while hiding his allegiance to Itznacoco.\" \n\n* * * * * \n\nThe hard jolt of the Condor's giant wheels making contact on the airfield woke me up. We'd arrived at Sentry War Base. As I stretched, scores of others did the same. It was several minutes before the huge, six-engined transport slowed to a halt. Then it turned and began to move slowly off the airfield and toward the terminal. \n\nStanding up, I removed the ear protectors, stuffing them into the slot behind my seat. I collected my duffle bag and waited with the others to debark. \n\nThe rear ramp finally opened and we formed up into a queue to exit into the predawn summer morning, the air mixed with the smells of fuel, machines, and the ocean breeze coming from the north. \n\nAt the bottom of the ramp, three Air Security with tablets passed us through, scanning our ID cards, confirming and recording our arrival. I followed the others heading to the line of people waiting by the airport terminal. Some ran to meet loved ones. The rest of us headed into the brightly lit building for food, phones, or transportation elsewhere. \n\nJust inside the doors, I was surprised to find Styen Topangiti and Lieutenant Bilan Monaycote waiting for me. \n\nDelighted, I started laughing as I moved to them. \"What are you two renegades doing out here at this time of morning? It's not even daylight yet.\" \n\n\"Waiting for my prodigal student to return home,\" Styen grinned. \"How are you, Master Ranji?\" \n\n\"Much better now,\" I told him. It was good to see them. I hadn't heard from either one of them since their departure from High Guard. Dropping my duffle, I gave Styen a solid hug with both arms, which he returned. Then I gave one to Bilan who also greeted me warmly. \"I guess this means I don't have to rent a vehicle to get home?\" \n\n\"No, sir,\" Bilan said, smiling at me. \"We wouldn't dream of it.\" \n\nStyen looked at me rakishly. \"I don't know. Maybe we should make him walk. The exercise would be good for him.\" \n\nBilan gave him a conspiratorial look, his eyes merry. \"Hmm. Maybe we should at that.\" \n\n\"It's two hundred and forty-two rads!\" I exclaimed. \"It would take me at least a day or two to cover that much ground.\" \n\n\"Ah, the sheltered life of the Imperial Air Service,\" Styen sighed, shaking his head dramatically. \"Why, when I was in the Ground Service, we were up before dawn, and we had to walk fifteen rads just to get to the mess hall. All of it uphill, rain or shine, often with a full day-pack. After a hard day's training, it was fifteen rads, uphill, back to the barracks.\" \n\nBilan burst out laughing. \"I think I was at that training center!\" \n\nUphill both ways? I snorted in laughter. \n\nStyen grabbed my duffle and we headed out through the terminal, then out to the parking lot. At the sedan, he tossed my bag into the back seat. I recognized it as the same one I'd ridden in during my last visit. \n\nStyen went for the driver's side. \n\nPushing over my duffle, I got in the back seat behind Styen. \"So how was the voyage?\" I hadn't heard anything from either one of them about their journey aboard the freighter. \n\n\"A close call,\" Bilan answered, getting into the front passenger seat. \n\n\"Tell me what happened.\" I looked at Styen, then to Bilan. \"I want to hear everything.\" \n\nStyen powered up the ChoCac, and he began driving to the main gates. \n\nAfter buckling in, Bilan partially turned to make talking easier. \"Apparently the captain of the ship decided we were worth too much as slaves for him to pass up. As soon as he was a hundred rads from the port and outside the Navy's patrol radius, he turned east, bound for the slave blocks of Port Iago.\" \n\n\"Iago!\" I exclaimed. \"With a ship full of more than two thousand Chimorran citizens, and those mostly women and children. Probably to the slave farms of Iberia or the mines of K'mer. Greedy bastard! What did you do?\" \n\nBilan nodded at my assessment. \"They knew we were military. After all, we had the uniforms, didn't we? My squad and I were rounded up and under guard pretty fast. But then they started rounding up every man among the refugees, including servants and slaves. Then older boys. Putting them into separate holding areas. They also grabbed any woman who wasn't cowed, stowing them in another, separate cargo hold. Styen, though, managed to evade capture. Then he began taking them out. Once he reached us and freed us, it didn't take us long to seize control of the ship. I myself shot the captain in front of the crew. The third mate agreed to take us where we were supposed to go. We lost Rimanchu. A good man. Stippan and Taygatchu took serious hits, and will be out for weeks, if not longer. But at least now they are recovering at Paxilman. Only Styen, Barato, and myself escaped unscathed. We shared watch on the third mate until we reached port.\" \n\nPaxilman was the Ground Service hospital at Sentry War Base, adjacent to the bustling port city of Tohingo. \n\n\"It was ugly, though, Ranji.\" Bilan shook his head. \"Some of the sailors had pulled out some of the prettier women and were 'breaking them in.'\" \n\n\"Raping them, you mean,\" I corrected quietly. \n\nHe nodded. \"Those six, I ordered tossed over the side. The last two wouldn't go until we shot them. So we did. Then we tossed them. The ship was down to one-third crew by the time we were done, but we made it to Tohingo without further problems.\" \n\nThen I saw Bilan close his eyes briefly, then swallow. \n\n\"What else?\" I prompted. \n\nBilan looked at my former tutor, his face full of emotion. \"Styen saved my Rana and my boys. The first mate had broken into our cabin. He hit Powan, who tried to defend his mother. He's only six years old! Hurt him bad. Even Mika was knocked about. But before that piece of filth actually... raped her... Styen arrived and killed him. Then he rendered first aid to my boys.\" \n\nBilan, his face and voice full of emotion, turned his gaze to our driver. \"I owe Styen more than I can ever repay. I am forever in your debt, too, for sending him along. But I would rather have that debt than the alternative. Thank you, sir.\" \n\nI held up my hand, pointing at the scar on my palm. \"We are Warrior brothers, Bilan. I know you are trying to be respectful of my rank, but save it for formal occasions. I am your brother and you are mine. I will protect your family with all that I have, just as I know you would defend mine. Please call me Ranji.\" \n\n\"Ranji.\" Bilan nodded, smiling. \"I'm still not sure why you offered to be my brother, but I seem to be in your debt. Again. You saved my Rana, and then sent your man, Styen, to keep watch over us. I am grateful, believe me. Yet I would like to understand why you go to such efforts on our behalf. Will you tell me why?\" \n\nI remembered the man who loyally stood by Melannee and myself on the beach, risking his life for her. The intensity of his love for his sons. His willingness to act honorably under desperate conditions. And that his own memories of all these things were buried, hidden by the memory alteration technology of Imperial Security, in an effort to protect him and his family from Supay's rage. \n\n\"I do it, Bilan, because I know the measure of your heart,\" I answered. \"You are a brave Warrior, loyal and true to those you love. While I am distressed that you and the others were in danger, and that you lost a good man, I am pleased more than I can tell you that Styen was so helpful.\" After a short pause, I added, \"Besides, Rana is a sweetheart and a gem, so if she likes you, you rotten scoundrel, your mangy hide must be worth something.\" \n\nStyen burst out laughing and I joined him. Bilan blinked, and then he laughed with us. \"Too true,\" he admitted. \"She is a gem and a sweetheart, indeed. I was blessed the day she became my wife.\" \n\nI blinked at that. He might never learn the irony of that sentiment. \n\nAsking more about his boys, Bilan told me of some of their explorations of my parent's estate gushing with praise of the welcome he and his family had received. \n\nKnowing Sentry War Base and the city quite well, Styen took the Valley Expressway, bypassing downtown Tohingo itself. In a short time, we were heading southeast through Caibo Valley, making our way toward the Shtomar Mountains and home. So close to the equator, at five hours after midnight, the eastern sky was already beginning to show the light of pre-dawn. \n\nI yawned. \n\n\"There's more, Ranji,\" Bilan said. \"We took the money from the captain's safe. It's a fortune. There's a hundred thousand Imperial credits in bank notes. What should we do with it?\" \n\nStretching, I took a deep breath. \"Pay for your two men at Paxilman to get nano-treatment. Set aside twenty thousand for yourself, Bilan. Give a ten-thousand share to each your men, including one for Styen. And don't argue with me about it, Styen. As long as I live, you will have a home with us. But fortunes change, and I want you to have something of your own set aside.\" \n\nStyen just glanced at me in the mirror, saying nothing. \n\n\"Pass Rimanchu's portion on to his next of kin,\" I continued. \"Give it to them with the provision they see to his proper burial - if that hasn't already been done. Make sure your men know they are not to go wild on spending, nor admit to how the money came to them. We don't know if some of that money belongs to others. Drive home the idea that we don't want to attract undue attention. That should leave around twenty thousand credits. Give it to my mother. Tell her to use the funds to help offset taking care of the refugees or however she deems best.\" \n\n\"It is a good plan, my brother,\" Bilan replied. \"I thank you for your generosity.\" \n\n\"How else are you going to decently take care of your wife and sons on a Lieutenant's pay? Get the boys learning tablets and some nice clothes for Rana. Maybe buy some stocks toward retirement.\" \n\nI felt good. To my mind, the money helped offset the madness that cost Bilan and his men their former lives. \n\nStyen just glanced at me again. I had spent a lot of time under his tutelage, learning martial arts and equally important intangibles like honor and duty. Then he gave an approving nod before turning his attention back to the road. \n\nStyen's approval meant a lot. I loved him like an uncle. Not only had he imparted to me some of his considerable combat skills, but his sense of duty and honor as well. Those were debts that could never be repaid but through love and devotion. \n\nI yawned again. \n\nBilan noticed it. \"Grab some shut eye, Ranji. We'll be back to your parent's estate in about two hours.\" \n\n\"All right. But first I want to know, how is that you two were there to pick me up?\" \n\n\"I got a call from a Senior Sergeant Itznacoco - from Tik\u00fan of all places! I've never been there, but he said he knew you and that you were inbound with an ETA of zero-four-thirty this morning. He seemed to know all about Rana and my boys, too, asking how they were adjusting. He told me to bring Styen along. How does he know of us?\" \n\n\"Probably from my personnel jacket. You are officially listed as my blood brother, Bilan.\" I shook my head. \"Fascinating. Do either of you know why I've come here, today?\" \n\nBoth men shook their heads. \n\n\"I'm apparently a secondary target, but there's a plot by the Aesir-Veda to kill Father. It's partly in revenge for leaving the Kingdom of Veda, but more because he's getting close to some important breakthroughs.\" \n\nI could see I had their attention. \"Father's work on energy fields is vital to the Empire. We've been exchanging secured emails since my posting to High Guard, and he's been catching me up on some of the research. In a year, maybe less, we hope to have a working shield capable of deflecting energy weapons. And that's just the beginning. Apparently the Aesir-Vedans are worried - or at least their draconian allies are. There have been eight draconians killed in the last two months that I'm aware of - all at High Guard or in nearby Capisco. Two of them died yesterday, in another attempt on me. Janetta Tlacotli, the love of my life, managed to survive the attempt to kill her, and in the process, she even prevented the auto-destruct of the draconian. Imperial Security has recovered its personal shield and camouflage technology intact.\" \n\n\"Holy gods, Ranji,\" Bilan muttered. \"That's huge.\" \n\nStyen voiced his agreement. \n\nI continued. \"There have been recent military advances by both Atlantis and Aesir-Veda, aided no doubt by their respective alien allies. Their engines and aircraft designs are suddenly advancing by leaps and bounds. Once they get shields and energy weapons, it will be a dark day for the Empire. Our military won't stand a chance! Mastering this captured tech, and what my father is working on, will help keep us on par with our rivals. And, it will bring us closer to the day we can challenge the Greys and draconians themselves.\" \n\n\"Challenging the aliens? Are you serious?\" Bilan asked. \"To what end?\" \n\n\"The possibilities are endless, Bilan!\" I answered. \"Instead of taking days to travel to the moon, it will be but a matter of hours. Colonies on the other planets become possible. Soon, visits to other star systems, and even more human colonies. And that's for starters.\" \n\n\"Human-built starships? We're decades from that. Maybe centuries even.\" \n\n\"Only because the aliens are interfering. Part of that interference is this plot to kill Father. Imperial Security - by way of the Atlantean Huginn but without their knowledge or cooperation, of course - told me to expect a message about the circumstances of my birth. That expected message arrived late yesterday evening. Supposedly it was from Calia, but the sender obviously did not know she was at High Guard. I knew immediately it was a fake. But the message was designed to draw me here, and so here I am. And it also means there is at least one Aesir-Vedan agent in my parent's household, in position to kill Father. At least one.\" \n\n\"Are you sure about this, Master Ranji?\" Styen asked. \"What about Imperial Security? I thought they thoroughly check out everyone who visits or comes to work there. And if they knew about the threat, why didn't they increase the family's security?\" \n\n\"I'm sure they do check everyone out. I'm just guessing, but probably to avoid letting the enemy know their plot had been uncovered. And yes, I trust the source of this information.\" \n\nIt was the first thing Melannee had warned me about when she and I first met. Perhaps it had been discovered by Melannee herself. Knowing her, I would not be in the least bit surprised. \n\n\"I am counting on both of you to help prevent my father's death,\" I told them. \n\n\"Whatever you need,\" Styen replied. \n\n\"A chance to fight at your side? I'm your man!\" Bilan confirmed eagerly. \"Do you know anything about how they plan to do it?\" \n\n\"Only the trigger word. Which means the assassin or assassins might not even be aware they have been programmed to kill. Deep hypno-conditioning would be a way for someone to bypass Imperial Security scrutiny, even one using truth drugs.\" ",
        "\"What's the trigger word?\" Bilan asked. \n\n\"Persavati.\" \n\nHe frowned. \"Is that a name? Or some foreign word?\" \n\n\"It was the name of my mother's hand-maiden. She was killed shortly after I was born, by Vedan operatives trying to stop my parents from reaching the Empire. My speaking her name in front of my parents is supposed to trigger the attack.\" \n\n\"Don't worry, Ranji,\" Bilan assured me. \"We will stop them.\" \n\nStyen glanced in the mirror at me. \"Master Ranji, are we to try to take prisoners?\" \n\n\"Your practical expertise here is much greater than mine. What are your thoughts?\" \n\n\"From what you've told us, it sounds like even seconds will be vital. A quick kill may be all we can manage and still save your father. And you, too. I would rather be safe than to risk either one of you.\" \n\n\"Any prisoner would no doubt delight Imperial Security. However, I agree with you. We take no chances with my father's life. Stun or disable if you can do so without a chance of failure. Kill if you cannot be sure.\" \n\nThey both nodded, then became quiet as they thought over the information I'd given them. \n\nTaking Bilan's advice, I exhaled slowly and closed my eyes. \n\n* * * * * \n\nI don't know what it is, but whenever I approach home, I wake up. I know, home is High Guard, where Janetta, my daughters, and the other women I love live. Still, the home where you grow up is also home, full of its own memories. Maybe it's the play of light through the tropical trees combined with the sound of the rubber tires on the concrete road, or even the subtle turns of the road itself. Perhaps we just know deep down when we approach a place that is familiar to us? \n\nIn any event, we were only a couple of rads out when I came awake. After clearing my eyes and my throat, I spoke. \n\n\"Bilan? When we get there, I want you to go in first. Have Rana tell one of the servants that she and your boys will take their meal in their room this morning. The absence of your family will not cause suspicion, and there is no reason to endanger them. If anyone asks why, say they are spending some family time together.\" \n\n\"But what about you?\" he asked. \"If I do that, how can I be there to help you?\" \n\n\"When we arrive, I'll stretch my legs. We'll wait outside about twenty minutes. Styen and I will circle around, through the garden, entering into the house through the sun room. Remember, protecting my father is top priority. If he's here, I'll wait until your arrival before I attempt anything. If he's not there, we'll talk after the meal and make follow up plans.\" \n\nBilan looked at me, then nodded. \"As you wish, Ranji. Thank you for this honor, this chance of helping to protect your family. May the gods smile on us this day.\" \n\nStyen pulled up by the garage and shut off the engine. Bilan immediately headed inside while Styen stood watching me stretch. Shaking his head as he heard my body make popping noises. \n\n\"You still have the stunner?\" I asked him. \n\n\"In my jacket pocket, fully re-charged,\" he replied. \"You are moving like an old man, Master Ranji. Whatever is the matter with you?\" \n\n\"Except for a couple of nights, I haven't had a good night's rest in weeks. Tonight, it was three hours in the Condor and another two sitting up in the back seat of the ChoCac. Seems like every time I turned around, someone was getting hurt. And by the gods, there's always so much to do.\" Continuing my stretches, I told him about the break-in the night before, and Anton's injury. \n\nStyen's face was incredulous. \"Three Atlantean riffraff broke into your house? How in the world did they get onto an Imperial War base? How did they get past gate security?\" \n\nSo I quickly filled him in on Commander Voyacherno, the two attempts on me, and the other recent events. \n\nStyen was right, though. My body was tight and fidgety. I needed a long, hot shower, a deep massage, and a couple of days of solid sack time. And a lot more regular exercise. Not that I'd really get any decent sleep, mind you, missing Janetta, my girls, and the other women. Noticing I had trouble putting my palms flat onto the ground, I frowned. \n\nI saw his disapproving look, and I nodded. \"I know, I know. Whatever I say is just an excuse. The one thing I can control is myself, and I need to take the time to keep myself in shape.\" \n\nAs we started around the main building, Styen asked, \"Do you need me to return to High Guard while you're gone?\" \n\n\"Yes, please. I would really appreciate you being there. Plus, it would allow Anton to return here to his wife. Janetta's a straight-up hard-ass in a fight, but she can't do it alone. The rest of them will fight given the chance, but they don't have the training or the experience to respond quickly. And Calia, Nariya, and my daughters are helpless.\" \n\n\"Don't be so quick to write off Calia. She's kept up her exercises. If cornered, she can defend herself.\" \n\n\"She knows the skills, but I've never seen her use them against another person. And even if she did, she'd grieve afterward over the violence.\" \n\n\"But she would be alive,\" he assured me. \n\nTurning the corner, we followed the building until it was met by tall, wooden fencing. \n\n\"Ixma and Sisi have had one practice session on the first Jaguar kata. So if you go back, helping them begin regular self-defense training would be appreciated.\" \n\n\"It would be an honor,\" he said, smiling. \n\nHe unlocked the gate and we entered the garden. While Styen locked it again, I scanned around, taking in the tropical herbs and flowers that my mother spent so much time managing and cultivating. She kept three gardeners busy full time. Of course, there were many changes from the last time I was there. And yet it all somehow seemed the same. \n\nWe entered the main house, sliding open the sun room's large glass door. \n\nMy mother and Muni, her primary personal maid, entered at almost the same instant. \n\n\"Ranji!\" my mother exclaimed, holding out her arms as she advanced on me. \"It's so good to see you! I've missed you so much, my son.\" \n\nKissing her cheek, I embraced her, savoring the comfort her arms gave me. \"It's good to see you, too, Mother. How are you? And how's Father?\" \n\n\"I'm fine, and he's here, finishing his breakfast. I decided to take a chance and wait until you arrived so I could eat with you. I really am pleased to see you! When your father learned last night you were coming today for a short visit, he made arrangements to stay home. Just for you, you scamp!\" \n\nThen she narrowed her deep brown eyes. \"Just how long is a short visit, my son? And Grandchildren! I want you to tell me - from your own lips, mind you! - all about these two girls you have adopted. What are they like? How did it come about? Did you bring them along? I am eager to meet them.\" \n\nTo emphasize her point, she looked around me for any small girl children I might have tried to sneak past her vigilance. \n\nI couldn't help but laugh. \"I'm not exactly sure how long the visit will be, Mother.\" Then I took a deep breath, the danger to my father demanding my attention. \"I hope it will be a few days. I don't know. A lot depends on what happens today.\" \n\n\"It is good to hear you laugh, but now you look so serious. What troubles you, my son?\" \n\nI looked at Muni, my mother's handmaid. She was my mother's trusted servant, and her companion for more than ten years. It was just the four of us present. Perhaps I was being paranoid, but the draconian camouflage technology nagged at me. \n\n\"It will all become clear very soon. Come, let's go see Father.\" \n\n\"I want to go into the garden first, to gather some orchids for the table. You go ahead. I'll only be a moment-\" \n\nGrasping her arm, I shook my head. \"Surely that can wait until afterward? Please.\" \n\nStartled, she looked at my hand firmly gripping her wrist, taking in Styen's impassive face, then looking at me. \n\n\"I'm sorry, Mother. That was rude of me.\" I released her. \"Shall we take breakfast together?\" \n\n\"As you wish, Son,\" she quietly replied. \n\nI stepped back, gesturing with my arm. \"After you, please.\" \n\nMuni paused to follow behind me, but I shook my head. \"You first.\" \n\nStyen quietly pulled up the rear. \n\nAs we strode through hallways toward the center of the house, nervous tension built within me. Even though the temperature inside was cool, I began to sweat. \n\nEntering the dining room, I saw my father in his usual place at the head of the table. The remains of his breakfast were just being cleared. Seeing us enter, he set down his hot tea and newspaper, rising up. Mother reached him first, and they lightly kissed. \n\n\"No flowers, Shanti?\" Then he whispered, \"Shona. My love.\" \n\n\"Pyar shir. My precious tiger,\" she breathed, touching her forehead to his as he clasped her hand into both of his. For a second, deep affection was mirrored between them before hiding once again behind propriety. \"Ranji's just arrived, so I've decided to wait to get fresh flowers until after breakfast. I want to hear his news.\" \n\nPulling out her chair beside his own, she smiled as he helped her sit next to him. Then he turned to me, holding out his arms. \"It's good to see you, my son!\" \n\n\"I've missed you, too, Father. You and Mother both.\" \n\nWe hugged briefly, then I moved to my usual place at the other end of the table. I found myself glancing around for Calia to enter and take her place beside me. Focus, I reminded myself. \n\nSeated again, my father replaced his cloth napkin onto his lap. I saw him smile knowingly at me. \"I half expected to see her, too. Calia is where she should be, taking care of you and your home. Things are working out with her there?\" \n\n\"They are, indeed,\" I replied. \"She and Anton have been invaluable. I've asked Styen to go back to High Guard so that Anton can return here.\" \n\nMuni poured tea for my mother, then stood against the wall, out of the way. Sometimes in private, Muni took her meals with my mother, but never when there were guests present. \n\nAt that moment, Bilan entered the room. Spotting me, he took the nearest chair beside mine. \n\nMother smiled at his entrance. \"Our dashing young Lieutenant. Thank you for driving half the night to bring our son home. We are in your debt.\" \n\n\"Styen did the driving, Lady Shanti. I just kept him company. And I was happy to do it,\" Bilan replied. \n\n\"Where's Rana? Surely your charming wife and your handsome boys be joining us?\" \n\n\"They are indisposed at the moment. A bit later, perhaps.\" Bilan glanced at me. \n\n\"Nothing serious, I hope?\" Mother queried. \n\n\"They are just taking their morning meal privately this morning,\" he answered evasively. \n\nFrowning briefly, Mother glanced at me, then carefully sipped her hot tea. I could see her curiosity, but she politely left it at that. \n\nI scanned around. Aside from Muni, there was the young servant girl I'd seen during my last visit home. She gave my father a refill of his tea. Beechan, another long-time servant, stood by the serving cart. Styen positioned himself near the large windows, close to my father, dividing his attention between the room and keeping watch outside the large windows. \n\nThe young girl filled Bilan's cup, and then mine. Hot, black tea with milk and cardamom filled the air. The familiar scents infused me with calm. \n\n\"Bilan, I find their absence a real deprivation,\" Mother said at last. \"Your sons are so well behaved, and they remind me how much I miss the sounds of happy children running about. But since Ranji's here, I sincerely hope he will satisfy my curiosity about my new grandchildren.\" \n\nI did not miss my mother's piercing gaze pointed in my direction. \n\n\"I wrote to Father about Sisi and Mina, asking him to share the information with you,\" I replied. My father nodded at that. \"I sent along the only pictures I have of them. Calia and Ixma have had newer ones taken, and I've asked Calia to send copies to you as soon as she's able to do so.\" \n\nMother shook her head. \"Ranji, that's not acceptable. You've written very briefly about them, but I have yet to see them or even talk to them on the telephone. You have formally adopted them, giving them our House name. What do their names mean?\" \n\n\"Sisi is the Tacanan word for happiness. And she certainly seems to embody that. Mina is Sharanahuan for butterfly.\" \n\n\"Sisi Kandikan. Mina Kandikan.\" Mother said them slowly, testing how the words fell from her lips. Then she shook her head. \"Ranji, I won't be satisfied until I hear their voices and hold them in my arms. Until then, they won't be real to me.\" \n\n\"What would you have of me?\" I asked her. \n\n\"I want to hear how this all came about. And who is this Ixma? The last time you were here, you talked about how much you were in love with a woman named Janetta. Have you a new lover now?\" \n\nBeechan prepared dishes for my mother and set it in front of her, then returned to his place beside the cart. Mother nodded her thanks at him. \n\n\"Ixma is Mina's adoptive mother,\" I explained. I had already written about all this to Father, and I'd no doubt he'd shared it with her earlier. \"Zinja is mother to Ixma and has adopted Sisi.\" \n\nBreakfast was a delight. Masala eggs, with slices of avocado and sour cream. A large spoonful of blueberries with slices of papaya on the side. At both ends of the table were baskets filled with hot, freshly-made parathas, covered by a small towel to keep them warm. A bowl with soft butter beside them. \n\n\"There are two different women who are mothers to my granddaughters? That would make...\" \n\n\"Sisi is Mina's aunt, yes.\" \n\nBeechan placed food before Bilan and me. I suddenly realized I had completely missed dinner the night before. I also realized that things wouldn't happen until I myself provoked them. During basic and more so during the survival courses, we learned the maxim: eat when you can and sleep when you can, because you never know when you'll be short of either. \n\nPicking up a fork, I dug in. Flavors and spices, hot and cool together going down was exquisite. I made pleased noises while I quickly reduced the portion on my plate. Eating fast was also quickly learned in boot. \n\n\"Ranji?\" Mother prompted. \"What about that Janetta you raved about? How did you meet these two? And are you... being intimate with... both of them?\" \n\nMy father sipped his tea, his eyes on me. Carefully setting down his cup, he just nodded. He, too, wanted to hear the tale. \n\n\"Janetta is my love, the woman who fires my heart. Zinja, Cholan, and Ixma are Janetta's flight crew.\" \n\n\"So you're still together with this Janetta?\" \n\nI nodded, my mouth full. Swallowing, I said, \"As long as she'll have me. For my part, I'm completely in love with her.\" \n\n\"But why isn't Janetta their mother?\" \n\n\"She didn't know about them until after the girls were adopted. She was in the hospital when I adopted the girls. Janetta wasn't happy about it at first, but she's coming around.\" I remembered Sisi giving Janetta her magic hug, and Janetta's adroit handling of Sisi's attempt to finagle three cookies. Although, come to think of it, Sisi did get that third cookie! \n\nI scooped up another bite. I was making good headway on my plate. \n\n\"How is she handling Calia's presence? Is she treating her well?\" \n\nI nodded. \"She and Calia have an understanding. Janetta made sure I had some time with Calia and Ixma before I left last night.\" \n\nMother coughed as she tried to swallow. \"Excuse me? So you are intimate with this Ixma as well? And your Janetta is okay with this? Three women are -\" \n\n\"Five,\" I corrected. \n\n\"Five?\" she repeated. \"You're... you're... I'm sure I don't know what to say to that, Ranji. Arjun! Our son has acquired a... a harem!\" \n\nMy father gave me an odd look, like he wasn't sure if he should be proud of me or shocked or a mixture of both. \n\nStyen knew about the situation, but hadn't had time to learn the circumstances. And Bilan, too, was curious. \n\n\"I didn't set out that way, Mother, I assure you. It just happened.\" I grabbed my second paratha, using it to collect eggs for another bite. \"Janetta has my heart, and Calia will always have a place with me. Zinja and Ixma are now mothers to my girls, so I am bound separately to them as well. And Cholan, well, she's dear to me, too. I love them all, in different ways, but love them I do.\" \n\n\"How does sleeping with five different women just happen, Son?\" she asked tersely. \n\n\"Zinja, Cholan, and Ixma are Janetta's flight crew. They service her aircraft and help keep her safe. When they were living in Tik\u00fan, they had some protection because they lived in the Women's Barracks. But at High Guard, we live together in one house. While Janetta keeps them all pretty busy, they are more vulnerable. I marked Ixma first, partly because she was with me, but partly because as a corporal, she was the lowest ranking member of Janetta's crew and the most vulnerable.\" \n\n\"You... marked her? What does that mean, Ranji?\" Mother looked alarmed. \"Tell me that's not some sort of tattoo like slaves get!\" \n\nSo I explained how wearing the neckerchief of an officer gave the enlisted women some protection from being forced into sex by other enlisted and even some officers, based on the rank pins on the neckerchief. \n\nTo my mother's puzzled expression, Bilan confirmed my words. \"In the military, because we wear our rank for all to see, a man knows instantly the status of the woman he encounters. A woman of lower rank can be ordered to submit to sex and has no recourse but to obey the order. An enlisted woman who can find an officer as her lover benefits from his rank, even when he's not there to protect her. In fact, because the woman's status is so readily known, a woman being ordered to have sex happens a lot more often than among the civilian population.\" \n\nAfter sipping her tea, Mother looked at me. \"So these neckerchiefs 'mark' them as belonging to you?\" \n\nI nodded, taking a long drink of my own tea. The cardamon and black leaves smelled heavenly. \"Yes, they do. My name's not on the neckerchief, but my rank is. But to add credence, I gave them each charge cards to my account, so that if they need to get things, I don't have to be there. The cards have my name and theirs. Even Janetta has one - though that took some persuasion. She's a proud and independent woman.\" \n\n\"Well, I'm not sure that was a wise thing, Ranji! Is this a separate account you created for them? Oh, tell me it's not full access to your personal account! You're not married to a single one of them!\" \n\nEven my father raised his eyebrows in surprise. \n\n\"Mother, they've had the cards for almost two months, and I trust them. Correction. I trust them with my life, Mother. Each one of them. They are fiercely loyal to Janetta, and they have come to love me, and I have come to love them in return.\" \n\nI remembered Cholan's heartfelt declaration that after our first time having sex that I'd made her feel like a human being. Ixma's astonished, heartfelt joy experiencing gentle love. Zinja's resistance born out of loyalty to her officer followed by her eagerly taking me as her lover. \n\n\"All right, Ranji. Obviously you feel strongly about it. But this marking them, surely that didn't mean you had to have sex with them?\" \n\nI chuckled. \"Of course it did. Janetta insisted on sharing me because her honor demanded it. She refused to let them wear the neckerchiefs without there being a real relationship to back it up. She is a Warrior and to her, that means she does not lie. If I wasn't sleeping with them and that fact came out, it would be a serious matter for all of us. And all three women are happy with the arrangements. You have to understand, too, that as much I would love to marry Janetta - and yes, I feel that strongly about her - she can't get married without having to leave the service. She lives to fly jets, and I love her too much to take that away from her. If I foolishly even tried, all I would do is alienate all four of them. To marry any of the others would force them to leave the military, and that would cause a hardship to Janetta, as she would have to replace them. Janetta, too, rightly points out that as officers, we too are at the beck and call of those of higher rank.\" ",
        "My mother flushed. \"Do you mean that you have had to -\" \n\n\"While at Tik\u00fan, Janetta was required to submit almost daily, and sometimes more than once. I've had to be with those of higher rank as well. As a woman, and more, as a beautiful woman, Janetta has had to endure it a lot more than I ever had to deal with. I became aware, too, of how many in my own unit endured in silence. Which is why when I got my own command a couple of months ago, I issued the first Unit Protection Order.\" \n\nTo her puzzled look, I explained, \"It's an order forbidding forced sex between other members of the unit, regardless of rank, and includes their civilian spouses and family members. Consensual sex is allowed, but ordering another to submit is no longer allowed within the unit. Now, those outside the unit - if they are of higher rank, they are not bound by the order, but without question it gives people the option to say no. More important, it gets them thinking that it's no longer a given right. Several other units have also adopted the order, and it's growing in popularity, with a lot of men supporting it, too. Yes, there's resistance, and in some cases, it's quite vigorous. Still, it's a price I am willing to pay.\" \n\nMother looked at Father before returning her attention back to me. \"How many others have become protected by this Order of yours?\" \n\n\"The commander of my associated unit has two companies - a few hundred people. Some of the units are small. Janetta's commander has amended his previous orders about Janetta so as to make it affect the other women in his unit, but that's another hundred or so. A marine lieutenant heard about the order, talked about it with his wife, and issued the order for his own company. Probably the most influential, though, is Commander Barankoshto of the 67th Armored and commander of the 1st brigade. She is well liked, and she's issued it for those under her command. That's another fifteen hundred. Chances are it will spread to the rest of her division. People are talking about the Protection Orders, Mother! The main effect is to treat forced sex as the crime of rape, the equivalent of assault. Morale in those units adopting the Order has been amazingly positive.\" \n\nI remembered the bus of women who helped us move into our new home, and their shouting out, \"Llam Nuqan - we work together\". The sheer love and admiration in Janetta's words last night, talking about how much the Protection Order meant to her. \n\n\"Words elude me, Son,\" my mother said, then giving my suddenly smiling father a warning look before continuing. \"On the one hand, I'm appalled by your living situation. I am eagerly looking forward to meeting your new daughters, but five women! Some would say you are overly enjoying your male privilege. I believe you when you say they are willing. I believe you feel you are acting honorably, and I trust you, my son. Still, I will feel better when I can see for myself how you and they interact. Yet this other news you bring is remarkable. Fantastic even! If enough people in the military adopt this Protection Order of yours, it could filter out to the other castes! Imagine, women having the right to say no. That's... words escape me, my son.\" \n\n\"That's the hope,\" I agreed. \n\nMy father burst out laughing as I realized what I'd said. \n\n\"No, no! What I meant was I hope it spreads,\" I protested. \n\nMy mother looked shocked for several seconds, then glared at my father. \n\n\"Not that you... oh, gods. I am truly sorry, Mother.\" I bowed my head. \n\n\"Don't blame him, Shanti. Look at the boy. See the dark circles under his eyes? He looks exhausted.\" \n\nMother looked back to me, and her face softened. She appeared about to say something, but my father added in, \"Still, it was pretty funny.\" \n\nShe whirled. \"Arjun! That is not very nice of you.\" \n\n\"Agreed,\" he chuckled. \"But who else can I tease and talk to if not you? And you know that I absolutely adore you.\" \n\nNarrowing her eyes at him, she said, \"Arjun, I love you. But right now I don't like you very much.\" \n\n\"I promise to make it up to you later,\" he said with a smile. \n\n\"Ranji, you I forgive. Your father is right. You do look tired, and now I will worry more about you. Calia should be taking care of you. I will talk with her about this. But the news you bring about these Protection Orders, it fills me with such pride and such love. I am very aware that I enjoy a life filled with privilege and protection, and that when my husband isn't laughing at my expense, he truly is a good man.\" \n\n\"There it is.\" My father grinned. \n\nIgnoring him, she continued. \"What prompted you to do this?\" \n\n\"You did. You and Father. I grew up seeing how it could be - no, how it should be between a man and woman, a husband and wife. Janetta, too - seeing a bit into what she's had to endure for simply being a woman. I keep hearing how a woman can't fight, but a woman can shoot as well as a man. And Janetta's aerial combat ratings are incredible. I saw her and her crew forced, Mother. It changed me. Made all the things I knew in my heart that were wrong and made it personal. With the way things are now, half of our potential as a nation, as a people is locked away. Until women are on a parity with men, the Empire will never reach its full potential, and its people will never be truly happy.\" \n\nBilan turned to me. \"You are my brother. I have seen this, and turned my eyes away. You have not. I hope to refill our decimated company with some recruits from Sentry War Base. For my Rana and for my sons, I will issue my own Unit Protection Order at the next opportunity.\" \n\n\"This morning you asked why we are brothers. This is why, Bilan. This is why.\" \n\nI decided that it was time to deal with the matter at hand. Stopping the assassins. I pushed my plate away, setting my napkin onto the table beside it. \n\n\"Shall we retire to the lounge?\" Mother asked. \"You've given us a great deal of news, but I want to know more details and my rear is tired of this chair. I want something with a bit more give to it while we visit.\" \n\n\"Yes, the reason for my visit. I need to discuss that with the both of you, right now.\" I gave meaningful looks to Styen and Bilan, both of whom took note. \n\n\"Are you going back to that War Base after your visit with us?\" Mother shifted in her seat. She wanted us to move, but so far, her desire to not miss a word was overriding her sense of comfort. \n\n\"No,\" I said, shaking my head. \"I have a training assignment afterward.\" \n\n\"How long will you be away?\" \n\n\"At least ten weeks. Maybe more.\" \n\n\"That's a hundred days, Ranji, almost a third of a year!\" Mother took a sip of her tea, long since cold, frowned at it, and set it back onto the table. \n\n\"Trust me, Mother. I and they all know that. While am glad to see you both, there is a reason why I came, and why it was at such short notice. Late yesterday I got a strange, disturbing email.\" \n\nMy father had picked up his newspaper, but then set it down again. \n\nBilan's hand moved under the table, slowly inching toward the heavy stunner in his holster. I unhooked the strap on my Talon, and flipped off the safety. \n\n\"Supposedly this message was from Calia,\" I began. \"That in itself was quite odd. Calia is now living with me. Why would she send me a message when she could simply wait until I got home from work? Even more puzzling was that it was so poorly written. Still, all those things are irrelevant. The important part was the message itself. It stated that you are not my mother, but that my real mother was Persavati, your-\" \n\nThe effect was immediate. \n\nShrieking, the young serving girl grabbed a knife from the table and charged around the table toward my father. More immediate to my mind was Muni, who snatched up a knife from the table, and being so close, stabbed my mother in her side. \n\n\"Rakshasa kuttiya! Randi backarchodu! Marana, bhula se deva!\" Muni hissed. \"Demon bitch! Whore fucker of goats! Die, forgotten by God!\" \n\nThe look on Mother's face! I didn't know if it was the pain of the blade or the words that cut deeper. \n\nStyen moved, and with two quick blows, deftly felled the girl, and then grappled with Muni. \n\nI started to rise when I got plowed from behind. Beechan drew a very sharp dagger and moved to bury it within me. Bilan reached over me, using one hand to keep the knife away from me, while the other pointed the heavy stunner and fired point blank. To no effect. I saw the flare of golden sparkles and my guts went cold. \n\nWith a swing from his other hand, the draconian easily knocked Bilan away. \n\n\"Haramzadi! Bastard child!\" he growled at me. \"All your gloating will come to nothing! All your plans will become dust. After I kill you I will eat your children and enslave your women. Keep them chained and naked. I will fuck them every day, and they will curse the day they ever met you!\" \n\nWith one hand, I tried to hold back the dagger, but the draconian was stronger. Before he could add his other hand to the blade, I managed to put the pistol against Beechan's guts. Sparing it a disdainful glance, he actually laughed. \"Stupid monkey-\" \n\nI fired. Over and over. \n\nHe looked shocked as the fleshettes tore into his guts. Then he tried using his weight to drive the dagger into my chest. I lifted the muzzle higher and fired again. Beechan jerked, his claws suddenly ripping into my arm. I gave him two more rounds. \n\nAnger crossed his face, then disbelief as his grip weakened. \"No. Impossible!\" \n\nI forced my leg in between us and kicked him away. He lay there, twitching. Standing up, I put three shots into his head. \n\n\"Shanti!\" my father cried. \"Shanti, don't leave me!\" \n\nComing around the table, I saw the girl and Muni lying motionless on the floor. \n\nBlood soaked Mother's right side, the knife still embedded in her ribs. My father held her in his arms, cradling her, tears falling. Styen examined her wound. \n\nI kneeled by Styen. \"How bad is it?\" \n\n\"Bad,\" Styen replied. Reaching up to the table, he grabbed more cloth napkins and pressed down, packing them around the wound. \"We dare not remove it in case it's hit an artery.\" \n\nMy father gave me a helpless, despairing look before focusing back on his wife. \"Oh, my love, my Shanti.\" \n\nBilan stood next to me. One side of his face was darkening from the blow he'd taken. \"Ranji?\" \n\n\"Secure the girl and Muni, Bilan. Metal cuffs, not plastic restraints.\" Reaching to my belt, I handed him my own. \"Use truth drugs, whatever you need to do, but don't let them die or commit suicide. I want to know how they got to Muni, and how this girl passed inspection! And where's the rest of the damned security?\" \n\n\"Ranji, she really needs a hospital,\" Styen said. \"She's bleeding too much.\" \n\n\"Then let's go!\" I snapped. \n\nHe shook his head. \"The clinic in Ofiya has limited facilities, and half the time, the doctor is out on house calls. The nearest hospital is in Tohingo. Paxilman and the civilian hospital both have Nano-Treatment facilities there. But they are over two hours away. I don't think she'll make the trip.\" \n\n\"What about the Sunskipper?\" I demanded. \n\nMy father shook his head. \"That's no good, Son. The pilot is away on leave.\" \n\n\"I can pilot the shuttle!\" \n\nHope suddenly filled Father's face. \"That's right! You can!\" \n\n\"You need to move, Lord Kandikan,\" Styen told him. \"I need to come around and pick her up from the other side so I don't jostle the knife.\" \n\n\"No, I will carry her, Styen.\" Leaning down carefully, he lifted her up into his arms. Pale and unconscious, my mother suddenly appeared fragile, even frail. \n\nJust then, a Ground Service corporal entered the room. \"My Lord, the servant Beechan has been found... in a closet - Holy gods!\" He lifted his radio microphone. \"Alert! Alert! There's been an attack inside the main house. Main Dining Room! Lady Kandikan appears badly injured. Some servants have also been injured. We need the Medico Sergeant here immediately!\" \n\nOutside, a distant klaxon began. \n\nThe shuttle bay was offset from the main house, built into the hillside behind and beneath the main residential structure. I led the way as we hurried through to the rear annex, where I accessed the coded elevator that would take us down. Bilan and the corporal kept pace, squeezing in with us. The elevator descended. \n\nThe doors opened and we moved from behind the blast wall and into the main hangar proper. In the center was the Sunskipper, a sub-orbital shuttle, and the most advanced aircraft known to Chimorran aerospace. It is a joy to fly. The main body of the shuttle is built fairly low to the ground, needing only a short ramp to enter the passenger-cargo area. The Sunskipper didn't have a great deal of range, but with one turbine under each wing and one at the rear, it is amazingly fast. And right now, speed mattered a great deal. \n\nNone of the maintenance crew appeared to greet us. In addition to the pilot, normally there were a minimum of four men assigned to care for the aircraft. \n\nHustling ahead of the others, I opened up the main door of the shuttle and entered first. With some quick adjustments, four seats quickly converted to a railed bed. My father gently laid my mother down and settled in next to her. \n\nUnhooking my weapon belt, I handed my pistol and its spare clips to Bilan. \"The fleshettes are the only thing we've found that's effective against draconian body shields. Take it.\" \n\n\"What should I do? And what about you?\" he asked. \"And what will you do for protection?\" \n\n\"Stay here, Bilan. Protect your family. Interrogate the prisoners. I need you to find out how that draconian got into our home!\" \n\nStyen looked at me. \"I should come along. Your father and mother will need protection.\" \n\nI nodded. \"Strap Mother down, then both of you get belted in. You need to leave, Bilan, right now. We'll be back as soon as we can. Maybe you can salvage some of that breakfast for your wife and boys.\" \n\nHe smiled grimly as I guided him out. \"Good luck, Ranji! To you and your mother.\" \n\n\"Get clear of the shuttle, at least thirty feet. Behind that barrier near the door is best. I'm going to crank up the engines and then hit sky. The jet wash, if it catches you, will throw you against the wall like you were a rag doll. Am I clear?\" \n\n\"Yes, sir!\" He buckled on the Talon, saluted, and hurried to the protected part of the shuttle bay, physically hauling the protesting corporal along with him. \n\nI secured the door, then moved to the pilot's seat. I didn't have time for a pre-flight or external exam. Protocol was that it was supposed to be kept ready to go at a moment's notice. Hopefully, no one had interfered with that protocol. \n\nSlipping on the headset and securing the seat harness, I started flipping switches. Banks of light flickered on. There was a deep hum, and with another switch, the engines ignited and deep rumbling could be felt throughout the craft. The next switches started up the internal air system, and fired up the maneuvering jets. Reaching up, I flipped on one entire bank of avionics - the ID beacon, ECM, ECCM, MAWS or Missile Advanced Warning System, radar, and the transponder visible to civilian air traffic. Power and fuel read one hundred percent. All systems were active and good to go. \n\n\"Styen, is Mother strapped down?\" I began rotating the shuttle, and tapped the remote to open the bay doors. \n\n\"Yes.\" \n\n\"You both buckled in?\" \n\n\"Yes,\" they informed me. \n\nAs the bay doors widened, a squad of Ground Service swarmed into view, waving weapons. I switched the external speaker. \"Clear the shuttle bay! Emergency medical departure! Clear the flight path or I will run you over! On my mark, take off in fifteen seconds! Mark!\" \n\nBilan added his own shouting, ordering and waving the soldiers out of the way. \n\nOut of the big bubble windows on the far side, I saw legs on the ground, poking out from around some crates. One of the crew? \n\nUsing the speakers again, I called out, \"Bilan! Once we're airborne, check the hangar for the flight crew. I can see a body.\" \n\nHe gave me the hand signal for message received. I disengaged the outside speakers. \n\nThe restraining cable was still in place, but I also locked the brakes as I carefully opened up the throttle to the halfway mark. The sound in the bay became a deafening roar as the engines screamed to life. Soldiers covered their ears, grimacing at the noise, finally deciding it was better to run clear of the hangar doors. \n\nA second glance to confirm. Fuel tanks full. Power readings - normal. \n\nRaising the flaps, I hit the release. Catapulting forward, we burst out from the shuttle bay as the energy slammed us back into the seats. Pulling back on the wheel, we lifted, and within hundred feet, we were fully airborne. Up came the landing gear as I engaged the HUD. Then I began radio communications as I scanned the sky around us. \n\n\"Sentry War Base Control Tower, this is Sunskipper 2, come in. Sunskipper 2 calling Sentry War Base. Come in, please.\" \n\nKeeping low, I kept the shuttle less than five hundred feet above the tree line, hugging the surface as close as I dared. \n\n\"This is Sentry Control. No flight plans are on file, Sunskipper 2. Please identify nature of flight and pilot.\" \n\n\"Sunskipper 2 with a medical emergency. Lady Kandikan, wife of Lord Arjun Kandikan, injured by knife wound and bleeding heavily. She is aged forty-six. Injury site is center of right, possibly lower lung or liver. She is in need of immediate medical attention. Repeat, in need of immediate medical attention. Please have medevac transport waiting for our arrival. Pilot ident, Senior Lieutenant Ranji Kandikan, serial one-two-four-chan-kay-seven-seven-qwa-mun. Medical emergency, requesting priority clearance.\" I glanced at the dash chronometer and calculated. \"ETA to Sentry is eight minutes.\" \n\nRadar and MAWS suddenly gave me fourteen separate tones. Images populated the HUD. Sentry War Base was first to show, and then others blinked in, filling the screen. \n\nThe second was from a UFO on my left rear, rising up from the ground, hovering in place. The third was from a second UFO, also rising, about three hundred rads east of us. \n\nComputer identified both UFOs as draconian craft. \n\n\"Kali's throbbing cunt!\" \n\nThe rest were SAM batteries; four were outside Sentry, two at Paro about seventy rads to the southeast, one was at nearby Bresh to the southwest, and surprisingly, two batteries from home! One tone was a combined read from the Combat Air Patrol flying above Sentry War Base. The last one was a satellite ping. \n\nI was suddenly a popular boy, and none of the reasons were good ones. \n\nThen the tones from both draconians went solid. My guts went cold. \n\nI dropped us lower, hugging the tree line, while kicking back and forth on the rudder to fly in a horizontal zig-zag. \n\n\"Sentry, I have two draconian aircraft, repeat two alien aircraft with active targeting locked. Taking evasive action!\" Over my shoulder, I yelled, \"Hang on back there. It might get rough!\" \n\nThe Sunskipper had a score each of flares and chaff bursts, as well as a defense computer to help against close-ranged targeting. That's it. No offensive weapons at all. The Sunskipper depended on its great speed to escape danger. Besides, the Sunskipper flew so fast that it overran any projectile gun or missile in our current air weapons inventory. \n\nBut against draconian ships and their advanced alien tech? This might be a very short ride. However, I didn't plan on giving up without a fight. \n\nThe CAP in front of me split into two formations; four craft continued circling near the base while the other six turned to our direction and rapidly closed the distance. Alarms on the HUD flickered, and the second draconian craft shifted, suddenly appearing immediately behind us. A proximity alarm blared in the cabin. ",
        "Trees blurred as we careened barely above them. \n\n\"Alien UFO One firing, two plasma cannons,\" the computer intoned. Defensive alarms sounded, adding to the noise as the lower right of the HUD rapidly updated. \"UFO One is identified as draconian, Scout class, Predator IV designation. UFO Two is draconian, Enhanced Scout-Escort class, Gorgon II designation.\" \n\nFlares and chaff were useless against energy weapons! \n\n\"Oh, gods,\" I muttered, banking us hard left toward the river. Miss! Miss! Miss! \n\nThe Sunskipper's air-defense computer immediately sucked power as the frequency jammer kicked in, and two bursts of chaff rapidly ejected, one lower right, the other to the upper left, desperately attempting to distract the alien ship. \n\nI couldn't help feeling like I had just dropped my trousers and painted a big red target on my bare ass. The draconians wanted us dead, and after so many failures, they now had us dead to rights. \n\nAt that moment, the six Lightnings screamed by. \n\n\"You catch that Tiger Leader?\" \n\n\"Affirmative, Tiger Ten. Sentry Control, two - repeat: two - draconian scout craft confirmed. They appear to be shooting at each other. Second craft now returning fire on the first.\" \n\nIn seconds we were over the river. Lining us up with the waterway, I dropped us to about a hundred feet above the deck. The tree line gave us some bit of cover. We passed by dozens of boats on the water. I hoped we were high enough not to sink anyone with the jet wash, but I didn't dare go higher. \n\n\"Sentry Control, acknowledged, Tiger Leader. Proceed with escort. Do not engage draconians unless fired on first. Repeat: do not engage draconians.\" \n\n\"Confirmed, Control. All Tigers, weapons are secure. Tiger Three and Tiger Four, escort the chick back to the nest. Everyone else, heads up. Attention, Sunskipper 2. Do not deviate from your declared flight plan or we will treat you as hostile and fire upon you.\" \n\n\"Wilco, Tiger leader,\" I replied. \n\nFantastic. Make that a blinking, neon-red target on my ass. With an arrow pointing right at my sphincter. \n\nTwo Lightnings came about and fell in behind us. The other four interceptors kept rear guard, ready to jump in between us and the draconians. \n\n\"Sunskipper 2, this is Sentry Control. You have priority clearance. You are cleared for emergency landing on runway two-eight-zero. Repeat: Runway two-eight-zero. Emergency vehicles are on standby.\" \n\n\"Sentry Control, this is Sunskipper 2. Runway two-eight-zero, confirmed. Decelerating in ten seconds.\" \n\nOnce the forest gave way to farmlands, I quit hugging the widening river and straightened my flight path, climbing to two hundred feet. A steady proliferation of more dwellings, vehicles, and people zipped by beneath us. We were still pretty low, and the sleek, shiny Sunskipper followed by the two black fighter aircraft screaming above them no doubt made for quite a sight for those on the ground. \n\nI never did open the throttle past the half-way mark. We would have overshot the base if I had. For the fighters to have kept up, they must have been running their engines with their afterburners engaged the whole way, sucking down huge amounts of fuel. \n\n\"Beginning turn for runway two-eight-zero,\" I announced to our escort, throttling down to one-quarter power. \n\nThen suddenly, we were over the War Base. I cut power again, keeping the nose up. Spotting the runway, I made adjustments to our flight path. Dropping the landing gear, I pulled back gently on the wheel. The Lightnings suddenly shot past us and climbed for the sky. The screech of wheels hitting the ground, then the drag of sudden contact reducing our speed a bit more. \n\nWe were down, rolling quickly down the airstrip. \n\nVehicles zipped out from the sidelines, sirens blaring and lights flashing. Imperial and Air Security cruisers, two ambulances, and three fire trucks chased us down the tarmac. \n\nThrottling down, I worked the brakes as I engaged the reverse thrusters. When we finally came to a stop, I idled the engines. \n\n\"We're here!\" My heart pounding, I unbuckled, heading for the main hatch. \n\nStyen and my father jumped up, my father leaning over my mother. \"Stay with me, Shanti,\" he urged. \n\nA score of vehicles surrounded us, lights flashing. Once the door was opened, I moved out of the way. Father carried Mother out, and Styen followed them both. \n\nI'm not sure when I had started crying, but tears ran freely down my face. It all hit me at once. Fear for my mother's life. Blood had soaked much of her dress, and her face was even paler than when we'd set out. A glance back to the large pool of blood where she'd lain. Relief we were back on the ground, safe. \n\nI wiped my eyes as they entered the ambulance. In seconds, lights flashing, it zipped away, followed hotly by two cruisers. The second ambulance and fire trucks took off in another direction at a much slower pace. \n\nTake a breath. Take another one. Nice and slow, I told myself, leaning against the doorway. I was determined not to give in to the shakes. \n\nI realized I still had the headset on, and that Sentry Control Tower was avidly trying to get my attention. Two Imperial Security entered the shuttle. \n\nMy mother was hurt and I wanted to leave this craft right where it was and haul ass to the hospital. Yet the fact remained that the Sunskipper was a high-tech aircraft, normally flown only at night, and when not in flight, it stayed hidden in its storage bay, away from prying eyes and possible recording devices. Yeah, I had to get this bird off the field. I also knew that the Imperial Air Service does not like unusual events. \n\nSecurity noticed the blood on the seats, and waited quietly while I responded to the control tower. \n\nWhen the tower was done giving instructions, I nodded to them. \"Have a seat. It's not safe to stand while this thing is moving.\" \n\nOne, a lieutenant, dropped into the pilot's seat. \"That's my seat,\" I informed him. \"Take the other one.\" \n\nWhile he moved, the sergeant, took a seat in back. \n\nFollowing the directions of the line marshal with his direction wands, I taxied the Sunskipper off the field toward a hangar. The remaining security cruisers escorted us. \n\nI had no doubt I'd be stuck dealing with the Air Service until everything was properly checked at least a dozen times to make sure nothing was amiss, and that the Sunskipper was safely secured under guard. Based on the emergency circumstances, I didn't see any problems. I was a qualified pilot and trained to fly the Sunskipper. A bit green perhaps, but still I was checked out. \n\nEven so, Imperial and Air Security brusquely escorted me off the craft and kept me busy for three long hours, going over all the minutia, comparing data from the flight recorder and radio logs to my statements. I wondered sourly if they didn't have anything else to do. \n\nThey didn't even offer me anything to drink. They grudgingly agreed to let me have tepid water in a plastic cup. Getting a urine break was like pulling teeth. Four of them kept me company while I pissed in the urinal. \n\nThen I was ordered to another interrogation room to debrief about the aliens, and how exactly was it again that my mother became injured. More hours dragged by. My voice grew hoarse. Breakfast now a distant memory, I was short on sleep, and on top of everything, I was worried about my mother. Requests for more water were ignored. \n\n\"So, after the servant stabbed your mother, what did you do?\" \n\n\"I answered that six times already.\" \n\n\"Humor us.\" \n\nI'd had had enough. \"Kandikan, Ranji, Senior Lieutenant, Imperial Air Service. Serial number one-two-four-chan-kay-seven-seven-qwa-mun.\" \n\nThere was a short pause. \n\n\"We're all on the same side here, Lieutenant,\" an Imperial Security captain said. \n\nThe other three, previously a little bored, suddenly looked at me with renewed interest. \n\n\"With all due respect, that does not appear to be the case,\" I growled. \"I am certified to fly the Sunskipper.\" \n\n\"Funny, that's not what your records show, Lieutenant.\" \n\n\"I was at Nazca Proving Grounds eighteen months ago. I'm certified to fly the Sunskipper!\" \n\n\"He was at Nazca,\" one said. \n\n\"But there's no certification,\" countered another. \n\n\"Seven hells. Someone's screwed with my personnel records?\" \"Kandikan, Ranji, Senior Lieutenant, Imperial Air Service. Serial number one-two-four-chan-kay-seven-seven-qwa-mun.\" \n\nThe door opened, and in walked an Imperial Security Field Commander. No House name tag, I noticed. But that was par for Imperial Security. He was an older man with his brown hair going to grey in a ponytail, and he carried a briefcase. \n\nTo the disappointment of my interrogators, he gave a jerk of his head, and they quietly got up and exited. \n\nOnce they were gone, he faced me directly, looking at me steadily for several long seconds. Then, sitting down, he pulled the briefcase onto the table, unlocked and then opened it. Reaching in, he pulled out a folder filled with papers, and what looked like an aerial topo map on top. Closing up the briefcase, he locked it and set it down beside his chair. \n\nTossing the folder onto the table, he said, \"Those are your travel orders and your flight plan.\" Glancing at his watch, he continued, \"Waiting off the queue on runway one-four-zero, there's a PE-15 fueled up and waiting -\" \n\n\"What about my mother?\" I snapped at him. \"I've been here for hours. I want to see her! I want to know if she's all right!\" \n\nInterrupting a superior officer was never a good idea, but at that moment, I didn't care. \n\n\"You have a phone. Call your father.\" Calm. No emotional response to my outburst. \"Your flight is scheduled to leave in forty-five minutes, Kandikan. It's an eight-hour flight to Sparanztlo if you go by way of Cuzco, but only four hours if you fly direct. The winds in the mountains at night, however, make a direct route risky. Even so, you are supposed to report for training tomorrow at zero-five hundred hours. The shorter flight is highly encouraged. Highly.\" \n\n\"I'm flying there? I thought the location of the base is supposed to be secret?\" \n\n\"It will be,\" he replied. \"One way or another. And you flying there is part of your orders. It's not your place to question them. Nor is it mine.\" \n\n\"What about my gear?\" I asked. \"And a change of clothes? I left everything at my parent's house.\" \n\n\"Everything you need is already on the aircraft. You don't need anything else. You are going to an elite training facility, not a holiday resort!\" \n\nGlaring, I took a breath, then pulled out my phone and dialed. \n\nMy father picked up on the second ring. \"Ranji? Where are you, Son?\" \n\n\"I'm still with Security, dealing with the mess. How is Mother doing?\" \n\n\"They gave her an immediate transfusion right off. She is in the nutrient tanks right now. It was a close call, but they assure me they got to her in time. It would be good for her to see you when she wakes. Will you be here soon?\" \n\nI kept my eyes on the man across from me. He stared right back. \n\n\"It appears not, Father. Please give Mother my love. I've been ordered to leave immediately for my next assignment. Keep Bilan and his men there at the house for your protection. I trust Bilan. Have him review the household security. Whatever changes he recommends, support him. And, as soon as you and mother are safe at home, I want Styen to go relieve Anton.\" \n\nHe paused, then said, \"I understand, Son. I know your mother will be disappointed, but I will explain it to her. Thank you, Son. You saved her life.\" \n\n\"I'm glad you are both alive. It could have gone very badly. I love you, Father.\" \n\n\"I love you, too, Son. Please take care of yourself, and call us when you can.\" \n\n\"I will. Goodbye.\" I slipped my phone back into my pocket. \n\nWithout another word, the Imperial Security officer stood, collected his briefcase, and exited the room. \n\nOpening up the folder, I quickly scanned the map and the flight plan. The last part of the flight would be tough. The regional weather report showed an incoming front due later that very evening. While it was mid-summer at High Guard War Base, south of the equator, it was winter time. \n\nThe weather report for the Nazca Proving Grounds, somewhat south of Cuzco, indicated gale force winds. Snow and ice would be everywhere at the higher elevations, and flying over the mountains could become treacherous. Updrafts, downdrafts, and changing wind shear. It could get very messy really fast. At least I didn't have to worry about the engines freezing. The PE-15 was rated for ultra-cold conditions. Its onboard sensors would activate the batteries to keep vital systems from freezing. \n\nI also reflected on the draconian ships. Why did one intercede, protecting us? Was it the Order of Quetzal? It was the only reasonable explanation. But, since I couldn't ask them, I didn't dwell on it - only on the result, which was that we were all still alive. \n\nOn the one hand, knowing about the assassination plot ahead of time had been vitally important. Yet if my father was so vital to the Empire, why hadn't there been more effort on the part of Imperial Security to keep him alive? Why was it left to me? I already knew the Minister himself was corrupt. The only thing that made sense was that the divisions in the upper Houses must run deeper than we were led to believe. And why was there no closer medical help? \n\nPeople, important and powerful people, were arraying themselves against me, but there were also good, solid people lining up with me and my family. And all this hinted that things were going to get bigger and uglier as I went along. \n\nSupay was the Minister of Imperial Security. His actions with the sale of children meant he was actively dealing with our political enemies for the sake of money. The casual way he destroyed a Condor and its crew, and putting hundreds of men and women to death on a whim? That was enormous power, but it also spoke of a deranged mad man. \n\nMy heart aching and full of anger, I had to pull myself back to reviewing the flight plan several times. I wanted to see for myself that my mother was all right. And I already missed my family at High Guard. With just over three hours of rough sleep on the Condor and barely two hours during the drive home, the fight at home and the tense flight, followed by almost six hours of interrogation, I was exhausted. But that seemed to be my usual mode of operation these days. Flying alone into a winter storm at night, high in the mountains, was going to make for a grueling, desperate night. I was going to need a lot of cahault and stim tabs. \n\nWhen I was done scanning through the folder, I exited the building and made my way back to the airfield on foot. Fortunately, the airfield was close and I somewhat knew my way around Sentry War Base. \n\nI quickly located the Albatross by matching the number on the wing to one on the flight plan, and I began checking her over. \n\nSummoning a nearby private, I offered him sixty credits to go to the cafeteria and grab me two pre-packed meals, a thermos of cahault, a pack of stim tabs, as well as two bottles of water from the base cafeteria. If he was back within the hour, he could keep the change. At the outside, the cost for everything would be ten credits. Privates made one hundred and forty-three credits each month. He moved quick. \n\nDropping the folder and map onto the front passenger seat, I performed a full pre-flight check of the craft, taking my time to do it right. Then I did it again. Everything appeared normal. The PE-15 Albatross isn't fancy or large, but the two engine craft is reliable, capable of carrying three tons of cargo, and can go for long stretches without full maintenance if needed - a major consideration for front-line use. This one looked well-used, but also well taken care of. \n\n\"Hello, girl,\" I murmured to the craft. \"Pretty soon, it's going to be you and me up there, all alone. Let's say we have a quiet trip, shall we?\" I patted the fuselage for luck. \n\nA corporal with a small duffle and a parachute walked up and tossed the duffle bag onto the seat, covering the folder and map. Then he tossed in the parachute. I came around the craft and approached. \n\n\"What's that?\" I asked, pointing at the duffle bag. \n\n\"Tik\u00fan Travel said that you should take these with you, and asked that you keep both together.\" Reaching in, the corporal clipped the duffle bag handles to the parachute. \"Just in case, Lieutenant. Your travel agent is looking into what happened. He also asks that you take care when you arrive that things are less stable than they were once thought to be.\" \n\nGreat. Itznacoco's worried, which means I'm jumping from the frying pan and straight into the fire. \n\nI leaned into the craft and scanned the parachute. I'd had the basics at the Academy, but I firmly believed that if I was a good enough pilot, I wouldn't need to practice jumping out of a perfectly good aircraft. I'd done a dozen simulations, but never jumped for real. \n\nInside the duffle bag was a standard emergency field kit. Caiman 35 pistol with holster. Two spare clips. First aid kit. Lighter. Compass. Combat knife. Canteen. Wool blanket. Three Meals Ready to Eat. Wait. Ground Service MREs? \n\nSomeone hates me, I thought, frowning. I mean, really, really hates me. \n\nI stuffed the folder into the duffle bag, keeping the map out. When I turned around, the corporal had quietly disappeared. Great! \n\nI put the pistol and combat knife onto my belt and felt a bit better. But the Caiman inspired very little confidence. I wanted another Wampag Talon. \n\nAfter a latrine break, I liberated a flight suit, slipping it over my uniform. The PE-15s have decent cabin heaters, but even with that, the alpine weather always seemed to leave my legs feeling cold. The extra layer of clothing would help. \n\nFortunately, there was also a flight jacket in the back seat, so I wasn't going to freeze right away. Climbing into the Albatross, I started up the engines. The private drove up and handed me the food, obviously worried I would change my mind about the nearly fifty credits in change. I waved him off and he was gone, grinning like a maniac. It was the last of my spare cash on hand. I had food to help compensate for my missed lunch and dinner during my long hours of questioning. \n\nAn hour later, I was in the air, heading south by southwest. Once I was two rads above the deck, I put on the autopilot and grabbed the thermos, pouring myself a cup. I took two stim tabs, then digging into the paper sack, I grabbed the top sandwich wrap, peeled back the paper and started eating. \n\nUgh. A bit on the soggy side. Ah, well. It was food. More importantly, it was not a Ground Service Meal, Ready to Eat. The chocolate coffee was hot, strong, and overly bitter, but it helped make up for the sandwich's deficiencies. Stuffing the paper sack into the duffle bag, I ate and worked on gaining more altitude for the trip over the mountains, keeping my ear to listening to the weather updates. \n\nFor the next three hours, I steadily climbed higher and higher, heading south by southwest toward Sparantzlo. According to the map, it was in a remote valley smack in the highest part of the Sky Mountains, the huge mountain spine that ran the length of the southern continent. \n\nAs time passed, the west winds picked up, and it began to get rough. Like currents in a river, the winds whipped faster through crevices and gorges. After a while, I was fighting snow and sleet as well as the wind. \n\nYep. Winter weather, all right. Dangerous stuff. \n\nEven with the cabin heater cranked, it grew cold, so I pulled on the flight jacket. I was pleasantly surprised to find a winter cap and gloves stuffed into the large pocket lining the inside. I put them on. And, because I had to climb higher yet, I slipped on the oxygen mask. ",
        "As I neared my destination, I was getting tired. The clouds above were blacker than night, and sometimes all I could see out my windshield was the one solid cloud bank. Visual was impossible, so I was depending entirely on my instrumentation to avoid smacking into a mountain, struggling to avoid being blown into some cliff face by shifting, high winds. \n\nI kept myself busy, talking to the aircraft, encouraging her to treat me right by getting me to my destination safely. \n\nThe computer kept me updated with radio beacons and radar sweeps. Climbing over one peak, I started a slow descent. According to the map, I was less than fifty rads to the landing field. Fighting the headwinds had added almost ninety minutes to the flight time. I was exhausted, but decided against another round of stim tabs. I tossed my empty thermos into the duffle. \n\nFortunately, the cloud cover cleared up as I approached the mountain ridge. Then over the top! Even better, a half-moon shown temporarily, lighting up the snow-filled valley with grey light. Although the lights were out, I could make out the smooth line of the snow-covered runway. I sighed with relief. \n\nFlipping on the radio, I announced myself as the folder had indicated I should. \"Red Jaguar base, this is Lost Albatross coming home. Come in, Red Jaguar base.\" \n\nThat's when the MAWS lit up, letting me know two SAM sites had me targeted. I glanced up. My ID transponder was broadcasting normally, reporting its military status. \n\nThen both tones went solid. \"Two missiles incoming detected,\" the computer spoke. \n\nSeven hells! \n\nThe defense computer fired two flares while I dove, banking hard left. I came around a short rise and both missiles, having lost targeting lock, followed the flares into the mountain behind me. The concussion of the explosions buffeted the Albatross. \n\nReaching over, I immediately throttled down, then grabbed the parachute. Over one arm, then the other. I barely got the top clasp in place when I had to pull hard on the wheel to fly over the ridge suddenly looming in front of me. \n\nAlmost immediately both SAM sites locked onto me again. I dropped to under five hundred feet. \n\nWhen the tones went solid, I banked hard right while pulling up, and the computer ejected two more flares. I carried the climb up to a slow barrel roll. \n\nThe explosions bracketed me, shaking the craft hard, and then my right engine coughed and died, spilling black smoke into the eerie grey-lit night. \n\n\"Two missiles incoming. Defensive weapons exhausted. Evade. Evade.\" \n\nReleasing my safety belt, I struggled against the wind to shove open the door, then I kicked my way free of the wounded Albatross. With less than eight hundred feet to the ground, I yanked the rip cord immediately, and the high winds jerked me about, sweeping me hundreds of feet higher into the night sky. Icy wind bite deep into my exposed skin. Gods, it was cold! \n\nBoth missiles hit the aircraft, and heat from the fireball was intense. My fuel tanks had been three-quarters full. Then I saw half a wing spinning upward, heading right for me, looming larger and larger. \n\n\"Fuck!\" \n\nThe fifteen-foot wide section spun wildly. The flat of the wing hit me like a giant fly swatter. Then a sensation of spinning. Falling. \n\n* * * * * \n\nWhen I awoke, I hurt all over. I started to move, but the pain was too intense. I groaned, and it quickly became a whimper. Even my ears ached. \n\n\"Good. You're awake. Don't move about. I'm pretty sure you have a concussion. And you have a massive set of bruises on your left side. Except for your nose, nothing seems broken, and I didn't find any open wounds. I put Nu-Skins along the ribs, so that should help with any tenderness. Unfortunately, you also have frostbite on your ears, the tip of your nose, and in most of your fingers. There's a nano facility at the base, though.\" \n\nOpening my eyes, I saw we were in a small cave, with a fire going. Crouched by a small fire was someone covered in an alpine fur suit. The voice had definitely been female. \n\nBending over to avoid the cave roof, she approached, carrying a steaming cup, and handed it to me. \"Careful, it's hot. Sip it slow.\" \n\nI was wrapped in a thermal blanket inside a double-sized sleeping bag, sitting up against the cave wall. I tried to take the cup from her, but my hands shook too badly and I couldn't seem to get a grip. She steadied my hands, bringing it to my lips. \n\nMy lips were dried and coated. When I sipped, it was bitter. I also tasted metal in my mouth, but as the hot liquid went down, the metallic tasted cleared. Blood, I thought. \n\nWith her snow goggles sitting on her forehead, all I could see of her face was her pale blue eyes and the white skin around them, and her light brown eyebrows. Blue eyes in the Empire were a rarity. The only non-brown-eyed persons I knew were myself, my parents, Ixma, and Melannee - and I knew Melannee was Atlantean by birth. \n\nTaking off a glove, she held up her index finger. \"Follow it.\" \n\nShe moved it side to side, up and down, then nodded. \n\n\"Who -?\" I croaked out. \n\n\"You must have taken a beating coming down. Lieutenant Deedee Marrin, Ground Service. We only found out late yesterday afternoon that you were flying in by yourself. Kartin, my partner tried to reach the SAM control station, but obviously he didn't make it. I haven't heard from him since just before you were shot down,\" - she glanced at her watch - \"And that was seven hours ago.\" \n\nI'd checked the temperature just before I entered the valley. Minus thirty. With wind chill, it was minus one-fifty. Unconscious, I would have frozen to death within less than an hour. \n\n\"You saved me,\" I said hoarsely. \n\n\"You aren't directly in the Minister's gun sights yet, but someone is working hard to burn your ass, Lieutenant Kandikan. My bosses are trying to prevent that from happening. You are going to have to be light on your feet to avoid becoming a casualty.\" \n\n\"I will do what I can,\" I rasped out as earnestly as I could. \n\n\"Drink down the rest of it, and I'll give you more. Caffeine, electrolytes, and pain meds. Sorry about the frostbite. I saw you go down, but it took me almost two hours to reach you. If not for the rocks providing some cover, you'd have frozen to death.\" \n\nI started to lift up, and my whole chest suddenly flared hot. Bad idea! \n\n\"I'll have to help you walk out of here,\" she nodded, taking the cup back to the fire and refilling it from a pot. \"It's not going to be easy. But this is Sparantzlo, and they will consider this experience a good test of your survival skills.\" She returned with a fresh cup and helped me get the bitter liquid down. \"Welcome to Sparantzlo, the Seventh Hell.\" \n\n\"Wonderful,\" I muttered. \n\nWhen I finished it, I started having trouble keeping my eyes open. She rinsed out the tins and the small pot with snow, then secured them. \n\n\"You're going to make it, Lieutenant,\" she said, lifting up part of the thermal blanket and sliding in next to me. \"The storm is back, and won't lift for several hours. Snuggle up and I'll keep you warm.\" \n\nBefore I could say anything, she pulled me close and I faded out. \n\n* * * * * \n\nOnce we left the protection of the small cave, the wind and light both became factors in our travel, adding difficulty to the rocky, mostly ice-covered terrain. \n\nIt was slow going. My entire left front was badly bruised from the impact with the wing fragment. Besides my lower fingers, several of my toes were also dead. My hip hurt, too, and I wondered if it was just bruised or maybe worse. The Nu-Skin patches over the ribs helped, but it still hurt badly to walk and climbing was worse. \n\nWhile my companion had some winter gear, I was not as well dressed for the cold or the terrain. The flight jacket helped some, but by the end of the day, my core was chilled and my eyes burned. \n\nWe didn't even try to speak. Trying to yell against the wind was futile. When we were moving, it was all I could do to focus on moving itself, and block out how hard it was to suck in the freezing air. My aviator glasses hadn't survived my hard landing. Within a couple of hours, I began to suffer snow blindness as well. \n\nDeedee had brought along an extra pair of snow boots and thermal pants, which helped keep me alive. I had to take frequent breaks. I broke out into sweat, and my vision swam. Once, I had to stop and heaved my mostly empty stomach into the snow. Because of me, we didn't make much progress the first day. Shivering, nauseated, and my head throbbing, by afternoon I was done in. We found a nook against some rocks and bedded down together in the double sleeping bag again. \n\n\"H-How d-did you f-f-find me?\" I chattered. \n\nShe leaned against me, using her body to shield mine from the wind. Lips near ears made talking easier. \"Short range tracker in the duffle bag,\" she explained. \"It helped me find you.\" \n\nOpening two protein bars, she gave me one. To make them edible, she had kept several stored inside her clothing, using her body heat to keep them soft and chewable. The bars were followed by water with several pain pills. Slowly, they eased the pain in my body, head, and eyes, and we talked a bit while I warmed up. \n\n\"Once we get to the top of this ridge, we'll reach my snow sled. It's only a few hours to the base from there. Another day, maybe two the way you are now.\" \n\n\"A sled... is good.\" I shivered, my eyes closed. \n\n\"Here.\" She unzipped her own coat, shirt, and then opened my jacket and unzipped both the flight suit and shirt underneath. Wrapping her arms around me, I felt her bare chest against mine. The heat was intense. She felt like a soft but oh-so-warm radiator! I just closed my eyes and shook. The cold of my skin made her nipples harden like small nails as she pressed herself into me. \n\n\"Gods, you're cold! Skin to skin will help you warm up faster,\" she assured me. \"When we reach the base, you will be assigned a training partner. Ask for me. Deedee Marrin. And remember, expect that you will be monitored at all times, so be careful what you say and who you trust. There will be times during training when you are away from the base itself. Save any questions for then.\" \n\n\"All right.\" \n\nI felt a splash hit my cheek. Opening my eyes, I saw her weeping silent tears. In the quickly fading light, I saw the cloth cover protecting her face was loose, revealing her narrow chin and full lips. Even so close, though, she was blurry to my partially blinded eyes. \n\n\"Are... Are you okay?\" I asked. \n\n\"I'm sorry. My radio has been on since I set out. There's still no word from my partner, Kartin. He must be dead. And that means we're on our own out here.\" \n\nMeaning if anything happened, no one would come looking for us. \n\n\"I'm sorry for your loss.\" It was all I could think of to say. A man had died trying to save my life. Deedee had endangered her own as well, coming out into this storm over rough, mountainous terrain to rescue me. I shivered as a tremor of cold ran through me. \"Will his death put you in danger when we get there?\" \n\n\"No, I don't think so,\" Deedee replied, sniffling. \"We didn't arrive together. Before coming here, though, we had trained together for about three months. He was decent. Not too demanding about me giving him sex, and sometimes it felt nice. The rest of us came by transport from Nazca. Whatever possessed you to try and fly here on your own?\" \n\nI should have been furious. Would have been. Instead, I just added it to my list of injustices. \"When I was at Sentry War Base, I was ordered to fly myself here.\" I kept my eyes closed while I talked because it eased my burning eyes. I'd stopped shaking, but still felt chilled. As I warmed, the pain in my hands and feet grew. \n\n\"So someone planned to have you 'accidentally' shot down,\" she concluded. \"I know you are important because of who sent Kartin and me to look out for you. Who are you and what have you done to garner so much effort to get you killed?\" \n\nHaltingly, I told her about the Drug Plot, breaking the child trafficking ring, and that we had instituted Unit Protection Orders at High Guard War base. \n\nDeedee frowned. \"Unit Protection Orders? What are those?\" \n\n\"Forbidding forced sex between anyone within the unit, including spouses and civilian family. Naturally, we can't force this on those of higher rank. But one has to start somewhere. Once people get used to the idea, it's my hope it will begin to grow on its own. Filter out to the lower Castes, too.\" \n\n\"But - that's unheard of. Incredible even! You mean a woman can actually say no?\" \n\n\"Yes. And not just women. Men, too.\" \n\n\"I've never heard of a man who doesn't want sex.\" \n\n\"It happens. A woman of rank demanding it of a subordinate. Then there are men who prefer men, just as there are women who prefer women.\" \n\n\"Yes, of course, you're right. Still, I can't believe it! No ordering you to spread your legs and take it? You actually instituted those orders and no one... objected?\" \n\nI managed a small smile. \"Yes, I did. And yes, there have been objections. Even so, the idea is spreading.\" \n\nFor long seconds, she said nothing. I just shivered against her bare heat. \n\n\"No wonder people are trying to kill you,\" she said at last. \"You threaten the old order big time. By Inti's holy light, I think you are going to be a very dangerous person to hang out with.\" \n\n\"I've heard it described as trying to survive an avalanche.\" \n\nShe snorted. \"Considering our current predicament, that's appropriate, and hopefully not predictive.\" \n\n\"You still want me to ask for you as my training partner?\" \n\n\"Of course!\" she answered tersely, frowning. \"I am a Warrior, Lieutenant, and I follow orders.\" \n\n\"I meant no insult to you. The fact that you saved my life at the risk of your own means I can trust you. I just wanted to give you an out.\" \n\n\"In that case, you are welcome. But let them know you want to be my partner.\" She gave a small smile. \"You've stopped shaking. That's a good sign.\" \n\n\"You're very toasty. Still cold, though. Please, my friends call me Ranji.\" \n\n\"I've been ordered to keep you alive. Why do you want to be friends?\" \n\n\"You saved me yesterday, and right now you are doing it again. I'm sort of odd that way, but I am well-disposed toward you, Deedee Marrin.\" \n\nShe laughed. \"Gratitude, with humor. All right. I accept. Hello, Ranji.\" \n\n\"So how ever did you get a name like Deedee?\" \n\n\"Why, it's a small bird in southern Je State. I'm told that's the sound it makes.\" \n\n\"In Vedan, it means sister.\" \n\nDeedee laughed harder. \"So according you, your sister's bare teats are keeping you warm?\" \n\n\"I'm an only child, but I see your meaning. Deedee the bird it is, then.\" \n\n\"Do you have any notion what you are going into?\" she asked, more somber. \n\n\"Not a clue.\" \n\nShe shuddered. \n\n\"This will be my second time around,\" she said. \"I was here two years ago. Since then, I have a new identity, and I've had some genetic alterations, including new fingerprints, so I'm sure I'm safe from discovery. With my white skin and blonde hair, I can pass as Aesir or Atlantean. Some people discriminate by skin color. I... I hope that doesn't put you off.\" \n\n\"No,\" I said with a smile, thinking of Melannee. She'd worried, too. \"I actually like blondes, and you have pretty eyes. My parents are full Vedan, Deedee. I have experienced some of that prejudice on occasion. No, you looking white doesn't bother me one bit. I hope you don't mind that I'm not copper colored.\" \n\n\"Thank you. And no, skin color doesn't matter to me. Anyway, most of the instructors here are brutal. The Minister is big on humiliation and degradation to break independent thinkers. Try to not lose your temper or your mouth. After your arrival, they will torture you. I won't kid you, Ranji. It's brutal. They will beat you bloody, break your bones, cut you until you scream, and they will stick their cocks in you because you are helpless. If they hurt you too badly, they just throw you into the tanks, let the nanobots fix you up, and then they start again. You're in pretty bad shape, so they might start you out with a couple of hours in the tanks before working you over. For you and me, it'll be even worse. You're decent looking and it will attract their attention. Me, I'm a woman, so it's a given. It's... harsh and deliberately cruel, Ranji. They ask things they already know, over and over. Demanding basic information about your past, your family, or your previous assignments. Assessing your ability to resist, finding out what or who you value and your will to live. Then a few days to heal. Remember, however bad it gets, it won't last forever. Hang on to that thought while they're hurting you. If you survive, you will be matched up with your partner, and... and...\" \n\nThis was how they trained Imperial Security agents? Trained... for what? \n\n\"And?\" I prompted. \n\n\"There aren't a lot of women,\" Deedee said, refusing to look at me. \"All pairs must have a leader. They call them dominants and supports. Male pairs are forced to fight, to determine who is the dominant partner. The... The first one to shoot sperm into the other's ass is judged dominant, and the others... well, they call them 'pussies in training.' Dominants must fuck their partner regularly, and the trainers inspect them for traces of semen. It's not... a pleasant experience. Dominants can even demand to fuck others who aren't a dominant.\" \n\n\"Seven hells. What about the women?\" \n\n\"What about them? If you drip with someone else's semen, you are a support person. That's how your role and status are assigned here. Women are biologically incapable of ejaculating semen.\" \n\n\"I'm sorry you are going to endure this for me.\" Even with my own eyes blurry, I saw pain in hers. \"There's more. Tell me, Deedee.\" \n\nShe studied me for several seconds. \"After all the pairs are assigned, all the men take turns having their way with any women present. It goes on... for hours.\" \n\n\"They gang-rape the women?\" \n\n\"To prove your stamina and courage, once they are done with you, you have to make it to your quarters under your own power. No healing is allowed until the next day. And at the end of each week, they celebrate again. I couldn't even... coming back here... It's not something I ever wanted to repeat. But I follow orders.\" \n\nDeedee shook, and not from the freezing cold. \n\nI slipped my arms around Deedee and held her. Kissed my cracked lips on her forehead. She looked surprised, then held me in return. \n\nAfter a bit, I said, \"So you being my partner has a benefit for you, too.\" \n\n\"Is that so bad?\" \n\n\"No, Deedee, it's not. And I think you are amazingly brave.\" \n\nShe didn't say anything, but I felt her gaze on me. \n\n\"I believe in the Empire, Deedee. This is my country. We are losing the tech race against Atlantis and Aesir-Veda. But we have a chance - if we all pull together. To me, that means men and women working together for the good of the Empire, side by side as partners. That can't happen if women are afraid of men, and ending that fear starts by people having the right to say no.\" \n\nShe didn't comment. \n\nI took a long breath, waiting for the dizziness to pass. \"I'm not sure what or how, but I won't stand by and let them hurt you, Deedee. Not if there's anything I can do about it.\" \n\n\"Your words are getting slurred. I think the meds are starting to work. Go to sleep, Ranji. We'll talk later.\" She adjusted the sleeping bag, then settled in beside me, resting her face in the crook of my arm. \n\nAnd I descended into darkness. \n\n* * * * * \n\nGetting up early, we ate a small breakfast of more energy bars and melted snow. We packed up the sleeping bag and blankets, and set off. Or rather, Deedee did the work. My hands were wrapped in gauze and oozing. Using them to grip anything was almost impossible. ",
        "I moved slowly and my eyes still burned. I could tell Deedee was growing frustrated with my pace, but she said nothing about it. \n\nFortunately, the clouds darkened during the day, so my eyes only felt as if they were being stabbed by glass shards instead of being scraped out of my sockets. By early afternoon, we finally reached the top of the ridge. While I rested, she searched for her sled, now buried under the snow. Besides the easy transportation it offered, another storm was moving in, so we had to hurry. \n\nSome hours later, Deedee found the sled and came back for me. She tied me to her back, and I hung on as best I could. \n\nIt would have been easy to become depressed. I was badly hurt, and I was walking toward men who would make my current pain feel like a toe-stub in comparison. \n\nThe wind picked up as the afternoon faded away, and several times we had to stop, or slow way down, so Deedee could navigate between rocks and bushes now hidden by snow. After I fell off once, she tied me to her back. It was several hours after dark when we finally reached the outer perimeter of the base. \n\n* * * * * \n\n(The next section has scenes describing male on male rape. For those who object, skip ahead to the next break mark.) \n\nAfter we were examined, Deedee and I were separated. \n\nSparantzlo was as horrifying and brutal as she'd warned me about. After being checked over by the medical staff, I did spend two hours in the nutrient tanks, letting the nanobots replace my dead flesh. Afterward, I was taken to a room where I was held down and received the worst beating I had ever experienced. Some of the new flesh on my fingers fell off under the battering. \n\nMy main torturers were Group Captain Stryker, and Sergeants Charunt and Belton. \n\nThere were others who inflicted pain - and sometimes they joined my main tormenters. All I know is that when the door opened, sometimes I heard the distant cries of others undergoing their own agony. These three, however, burned themselves into my memory. And when they weren't beating on me, I lay there too weak to move, grateful to have the beating stop. \n\nOn the second day of my so-called testing, while I was tied to a stanchion, they used rubber batons, focusing on my kidneys. It hurt so bad I openly wept. Not satisfied, Stryker brought out a flogging whip and gave me thirty lashes. While the pain burned, Belton dumped a bottle of rubbing alcohol over my bleeding back. Agony seared away all thought. When I came to, gasping at the intensity of more pain, I was being whipped again. This time it was Charunt. When he was done, Belton laughed as he doused me again. I just passed out. \n\nTheir work on my kidneys was thorough. Hours later, still tied and unable to move, I pissed blood. \n\nTo clean the room, they simply turned on the sprinklers until the room was deemed clean enough. I simply lay there, too hurt to move, shivering from the cold. Mentally, I was in a haze. \n\nThat was followed by twelve mind-numbing hours in the nutrient tanks. Enough time for the soft tissue damage to heal. Not nearly enough to finish restoring my fingers or heal my ribs. Later I awoke in my bed, Nu-Skin patches over my back and hands. Too much in pain to get up, I rolled onto my side and pissed in the bucket. \n\nThe next day I was back in their torture room. Stryker, Charunt, and Belton broke two ribs, then using a small, ultra-sharp knife, began peeling the skin off part of my back, section by section, all the while demanding to know about my family and the people in my life - information readily available in my personnel file. Why did all Janetta's crew have an officer's neckerchief. Were they truly mine? Was I really fucking Janetta's crew or was I lying about it? How did it feel to fuck Doyya? Surely I was fucking my sergeants! Why not? Were they diseased? \n\nWhile I bled, they used it to lube their cocks, and each of them took turns raping me. Then Charunt showed me a lemon, which he peeled and then forced into my bleeding rear. I was too hoarse to do more than croak out my protests before passing out again. Each time I woke, pushing that burning, acidic fruit out of my burning ass was all I could think about. They left me like that for hours. Tied up, battered, and in agony. When I finally expelled it, I sobbed with relief. \n\nJanetta was right. It hurt to shit afterward. \n\nThen they brought in the bullet ants. A sting to each limb. After the third one to my back, I passed out from the agony. \n\nThey drugged me up again, and I spent three solid days in the tanks as the nanobots went to work. The removal of the ant venom was so intense I wept with relief. Afterward, I slept for almost twenty-four hours. \n\nEach time I slept, I dreamt vaguely of the women that I loved and of my girls. I woke up totally convinced of their love for me. Memories of them helped me endure. \n\nThe justification for all the brutality I'd experienced was supposedly to make me tough, willing to face extreme pain to complete whatever assignment I'd been given. \n\nHowever, torture had been discredited more than a century earlier as a means of obtaining useful information. It was proven over and over to be totally unreliable. A person will say anything, even lie, to stop the pain. Especially lie. Truth drugs were effective, quick, and did no lasting damage. \n\nNo. These were sick bastards who got their jollies inflicting body-breaking injuries and pain, and they used the nano-technology to fix the damage so they could do it all over again. \n\nStyen had drilled it into me that a Warrior who uses his intelligence and makes use of opportunity more often walks away from a fight. Deedee, too, had warned me to watch my mouth. I bit back my anger and bided my time. \n\nI also felt ashamed. During the time they had brutalized me, I had not spared a thought or a prayer for Deedee Marrin, who I knew was enduring the same inhumane torture. I knew there were others here, too, but Deedee had saved my life. The only thing I could think of to justify my lack of concern was simple survival. I held on to the fact that I knew if I just held on, I could get through it. If Janetta or one of the others had been trapped here - by all the gods, forbid! - I honestly didn't know if I could have spared them a thought until right then, when my mind and body weren't fighting to survive. That admission both troubled and saddened me. I would like to think that Calia would have told me I was only human. If anything, I was more convinced about my love for my family. \n\nOnce I was done with the self-reflection, I thought about what they were doing here. The stated purpose was a complete fallacy of stupendous dimensions. Worse was that their casual brutality that necessitated the use of nano-treatments to repair the damage. I wondered how many died because these maniacs got carried away. Many in the Empire were denied access to the nano-treatments because of the expense, yet these bastards casually used the technology to indulge their sick lust to inflict pain. They clearly had no sense of control. But then I realized that if someone were exposed to this for a prolonged period, it could destroy one's personality. \n\nI was repeatedly told I was 'Vedan trash.' That insult I could deal with, but it was difficult, knowing they used the color of my skin as a pejorative. I knew the color of one's skin did not make the person; it was what was in one's heart and how one acted in a crisis that made the person. I knew I was a loyal citizen of the Empire. Again, it was the sure knowledge of my family waiting for me at home, that helped me heal. The faces of Janetta, Zinja, Cholan, Ixma, Calia, Sisi, and Mina filled my thoughts and gave me comfort. \n\nAlmost as disturbing was my absolute loathing for Stryker, Charunt, and Belton. \n\nProfoundly painful were the foul descriptions of my mother and father, and of Janetta and the other women that I loved. Stryker, Charunt, and Belton should have stopped there. \n\nThey didn't. \n\nThey found the names of Sisi and Mina in my service jacket, and went on about all the depraved, sick things they would do to them. I knew that much of it was simply psychological warfare, designed to break me. Or so I desperately hoped. The alternative was too horrific and despicable to imagine. \n\nI loved Janetta with all my heart. And I'd put myself in harm's way to protect her. I'd do the same for Calia, Zinja, Ixma, and Cholan. But my children? I found a spark deep within myself, and there I forged a cold, cold rage. No one threatened my children. No one. And woe betide anyone who hurt them. \n\nStill, I knew envisioning myself wallowing in the blood of Stryker, Charunt, and Belton was not healthy. That, too, was a trap leading toward the same perverse thinking underpinning this farce. In between naps, I focused on letting go of some of my anger and hatred. \n\nWhen the medicos finally discharged me from the medical ward, I was issued an Imperial Security uniform with its grey piping, bereft of name or insignia, shown where to get some food, and where I could sleep. \n\nNo discussion, no apology, nothing. Here's your new uniform and move along. \n\nI had worn my Imperial Air Service uniform with pride. The Imperial Security uniform gave me no satisfaction whatsoever. I knew it didn't have to be that way. This perversion was ultimately Supay's doing. Itznacoco, Melannee, and other good people were working to save the Empire. They were doing what needed to be done. I needed to take my place and serve the Empire, not Supay. And I would use whatever access to knowledge and power I gained to protect my family. \n\nI returned to my tiny room and slept for hours. Later, I woke up surprisingly refreshed. Settled even. \n\nThat evening, someone came around to my room. We were summoned to a training room, covered with mats on the floor, and a podium at the front. \n\nAt the beginning, all of us recruits had been gathered together before being separated for our \"endurance\" training. There had been twenty-seven recruits in our cohort. But once sessions began, I'd not seen any of the others. Tonight, only twenty recruits entered the room. Seventeen men and three women. Two men and five women were simply gone. I saw Deedee Marrin and was relieved. Saw her hollow eyes, and I ached inside. Knowing that whatever she'd endured, it had been for my sake. How can one ever pay such a debt? \n\nCaptain Stryker and Sergeants Belton and Charunt were already there, waiting for us. Stryker stood behind a podium and the sergeants flanked him, smug looks on their self-important faces. At first, all I could think of was how much I wanted to kill them. Taking a deep breath, I forced myself to calm down. \n\nWe were ordered to completely strip, and leave our clothing at the door. \n\nI was surprised at the mats. The spongy rubber felt strange against my bare feet. Deedee had warned me about this, too. \n\nMost of the men had the initial tattoos showing they were either a first or second degree Eagle or a Jaguar Warrior. I was one of four men that did not have any tattoos at all. Physical combat didn't worry me. Styen was an advanced master of Jaguar and Snake schools, and he even knew some Eagle katas. I had been prepared by a dedicated teacher. \n\nOn our arrival, I'd already made my request for Deedee Marrin to be my training partner the day I'd arrived. At the time I had been laughed at. \"Too soon for that! First, you have to survive being properly conditioned.\" \n\nStryker explained we were to be paired up with a partner. On each team, the \"dominant\" one was the team leader. Just as Deedee had warned, you became team leader by ejaculating inside your opponent in front of the rest of the cohort. \n\nNow that they were finished brutalizing us, we were expected to brutalize each other. All in the name of Imperial Security. \n\nDeedee and other two women tried to remain calm. But it's difficult stay calm when you \"know at the end of the event you are going to be one of the three people who will be gang-raped. \n\nI think it was then that I began to understand, on a deeper level, that this was what women within the Empire lived with all their lives. With but a word, you had to expose yourself and endure. As Janetta had once told me, it wasn't the act of sex itself that she and the others objected to. No, it was being taken without the social ability to resist the assault on their body, and that dry penetration could and often did tear sensitive flesh. As women, their only protection was their Caste or rank, and having adequate male protection. \n\nAll this added fuel to my rage, yet also hardened my resolve to make the Unit Protection Orders universal throughout the military. It might be my sole accomplishment for my life, but if so, it would be a good one! Once embraced by the military, social change for the civilian population would become possible. Whether the noble classes would accept the change - well, hopefully, they weren't that stupid. \n\nI moved beside Deedee, but so did three other men, and they were openly ogling her. The other two women were also surrounded by aroused men. Deedee looked at me with hope. I nodded and smiled at her. \n\nOne of the brazen young men took his cock and began stroking it, telling Deedee that he was going to enjoy ripping her apart and hearing her scream. \n\n\"I see a lot of men are eager to get started!\" Stryker announced gleefully. \"Since the cunts have attracted so much attention, the men will fight single rounds to knockdown, pin, or knock-out for the right to have them at their beck and call. When two men fight, if the winner does not fuck the loser, the loser becomes open to the first man who can mount him and fill his ass. Be warned now, that if you have lost one fight, you cannot forego mounting your opponent.\" \n\nStryker looked around the room. \"Remember: leaders are dominant. Supports are expected to submit to their leaders. That means physically as well as socially. Be advised that the role, once decided here, will be enforced throughout the remainder of your stay and will affect your future assignments and future promotions. If you lose your fight, your ass gets filled and you become a 'pussy in training.' You become the fuck toy for your leader. Any loser who resists getting fucked after today will be severely punished. Duels for the right to fuck someone else's pussy or pussy-in-training will be considered. \n\n\"I see that Teegart, Majoha, and Fronkiatl have indicated they want ownership of Bacholet. I can verify that both of her holes are tight. Teegart and Fronkiatl will fight for her first, then the winner will fight Majoha. Once that's decided, the men wanting Prina's pussy will fight for her. Then we'll see who fights the Vedan Trash for Marrin's holes. Since he was hot for her when he arrived, he will take on all challengers.\" \n\nSome of them laughed. \n\nOkay, I admit it. At that moment, I imagined the blood of Stryker, Charunt, and Belton running over my hands as they died, and it felt good. Then I chastised myself. I needed to focus, not fantasize. \n\nStryker continued. \"No fatal attacks are allowed, and anyone who kills their opponent will be shot, right here, no reprieves.\" For emphasis, he withdrew his Chon .44 from his side holster and set it onto the podium. \"Understand this, all of you. You are the property of Imperial Security. If you die here, you will be tossed into an unmarked hole in the ground. There will be no temple rites. To everyone else on the outside, you will simply disappear. \n\n\"Now as for these fights. Anyone who is injured in a challenge will get no considerations. No healing will take place until tomorrow after dawn. Winners will be expected to assert their dominance. You will fuck your partner when ordered to do so, and when you stop, the hole you fucked better drip with semen. During the rest of your training, support members will be regularly checked as will their underwear for cum stains and blood. If you aren't fucking them regularly, you will be disciplined. Two such failures will result in your dominant role being open for review. You do not want that to happen.\" \n\nWhat a load of shit, I thought. Institutionalized rape has nothing to do with the security of the Empire. \n\nSince I was in the third fight, I stretched while the others crowded to watch the first two fights, keeping myself close to Deedee. Besides, I wanted to make sure she wasn't harassed. \n\nMinutes ticked by, as each fight began and resolved. Both of the losers were pounced upon and quickly beaten by other men to hoots and catcalls as they were pinned to the mat and raped. \n\nBy the time it was my turn, the men had grown eager for blood, ready to see who was going to be the next victim. More than a few sported erections. \n\nMy first opponent was Kormunat. As he did a couple of quick loosening moves, I called out. \"Marrin, do you submit to me?\" \n\n\"Yes, I submit to you,\" she answered, puzzled. \n\n\"Llam nuqan, Marrin! We work together!\" I said. Turning to the four challengers, I said, \"You heard her. She is now mine and under my protection. Walk away and we're done.\" \n\nKormunat laughed and launched himself at me. We traded blows and blocks, moving and circling. Four inches taller and a bit heavier, twice he landed hits. A clip to the chin followed by a solid, numbing hit to my left shoulder. I needed to adjust for his longer reach. \n\nThen he overextended himself. I pounced! A solid punch to the nose, followed by a triple to his chest and stomach. While he staggered, blinking at me, I wheeled and gave him a roundhouse kick, putting my foot solidly alongside his head. Down he went. Yanking back his arm, I put my knee into his back and pinned him. Helpless and spitting blood, Kormunat slapped the mat and yielded. \n\nJumping back, I looked around. \n\nAlmost before I was out of the way, another man pounced, quickly re-pinning Kormunat to the floor. My former opponent struggled, to no avail, yelling and cursing while his attacker mounted his ass dry, savagely pumping into his bowels. In less than a minute, the man on top grunted. Grinning, he pulled out, and semen dribbled from Kormunat's battered, bleeding orifice. \n\nSome laughed at the scene. Scowling, I rolled my head, then rubbed my shoulder. \n\nA pause for me, while two more fights for the other women resolved. The losers again were subjected to quick pins followed by anal rape. \n\nJanoose was my next opponent. He was bigger than Kormunat and wider, and maybe fifty pounds heavier than me. Ah well. Warriors don't always get to pick their battles. \n\nI repeated my offer to Janoose to yield the floor to me. \n\n\"I will enjoy taking her from you,\" he growled. \n\n\"Llam nuqan, Marrin!\" \n\n\"Llam nuqan,\" she repeated. It was obvious she was unsure what I aimed for, but she followed my lead. \n\nI crouched as he slowly advanced, beginning the third Jaguar kata. The fourth Snake was a perfect counter. As I expected, on the fifteenth second of his attack, he moved into an overhand strike. I dropped, using my hands to brace myself on the ground and I kicked out, hard. My heel connected with the soft flesh of his groin. With a cry and a wheeze, he toppled over, clutching his balls. \n\nI moved out of reach and stood up, keeping my eyes open. \n\nLike sharks, three men struggled to roll him over and be the one into his ass. Two of them grappled, and while they were distracted, the third man shoved himself into Janoose. The man's swearing devolved into humiliated tears. \n\nMy revulsion at this travesty grew. \n\nThe two men realized their prey was in the process of being snatched from them. Together, they turned to tackle the third man, who was already pumping away, but Stryker ordered them to stop. \n\nThese were supposed to be Warriors. Imperial officers! Could a lifetime of Caste values be undone in such a short time? I sincerely hoped not. "
    ],
    "authorname": "TJSkywind",
    "tags": [
        "early earth",
        "consensual",
        "native",
        "alt history",
        "military",
        "aliens",
        "poly"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-15"
}