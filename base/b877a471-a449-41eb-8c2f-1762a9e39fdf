{
    "title": "Andi and the Unruly Class Ch. 01",
    "pages": [
        "All characters in this story are at least 18 years old. \n\n***** \n\nMONDAY (first session after morning break) \n\nI knew that he was going to be there, and I dreaded going in. \n\nAt 22 I had finally made it. I was a teacher; a Newly Qualified Teacher maybe, with a year to prove myself, but I was a teacher. It was still my first year in my first school out of training, but I had a proper teaching job. And so far it was going quite well. Apart from Him. \n\nI'd wanted a fresh start, something away from home and University and where I'd trained, and so had taken this post in a city up north. I'd made so many mistakes and experimented in each of those places to such an extent that a new start was both wise and desirable. The Headmaster was nice and professional, and seemed to know everything about kids and teaching in general. Which was just as well, because I was finding the older teenagers a bit difficult to handle. \n\nThe trouble with English is so many people think its easy to teach. Just because they can read. But trying to convey deeper truths and unravel the soul can be hard work, especially with unresponsive teenagers. Listen to me! I'm hardly older myself! \n\nIt wasn't that Dave Jordan did anything wrong, exactly. Or even the whole class. It was just a feeling like I wasn't in control. That when I gave instructions they were followed to humour me for now, with no promise of continued cooperation. Quite a few times I'd noticed other boys and girls in the class glance across to Dave to see if it was ok to do as I'd said, and every so often they quietly ignored me. I had found it easiest to pretend I hadn't noticed. \n\nI wasn't sure why they kept referring to him. Ok, he had a certain confidence and assurance that was unusual for an 18 year old. Yes, he was good looking with shortish fair hair, strong chin, broad shoulders with athletic chunky arms and legs. He was a school rugby player, after all. But it didn't seem to be his looks, so maybe it was his quietly assertive manner? \n\nWhatever it was, everyone seemed to know who was in charge. And it wasn't me. \n\nAnd now it was time to start the lesson. \n\nI knew this lesson was going to be difficult. As a school we were being Inspected next week. Everyone knew it, and had known for a little while, but suddenly it was upon us. Almost. And I needed this class to let me look good. And that was the problem; it really was up to them. \n\nIt was the first session after morning break, and steeling my nerve I pushed open my classroom door. They would be here any moment. \n\nSince I'd been dreading this session of all my classes that day, I'd prepared meticulously and the room was ready. Date up. Texts ready. Notes printed. It wasn't the lesson content I was worried about. \n\nOpening the store cupboard I quickly examined myself in the mirror on the inside of its door. Dark hair brushed neatly and in a ponytail. Charcoal suit short jacket buttoned and matching knee length skirt straight on my slim frame. Cream fitted blouse tidy with the button line vertical and fastened to the throat, chest not too obvious. Tights presentable, with no snags and flat black shoes clean. The gold studs, one in each ear lobe, looked nice and my makeup was discreet. Ok. \n\nAnd then they were streaming in. \n\nThey all took their seats as usual, a mixture of boys and girls in sensible clothes, mostly t-shirts and jeans. Some were sporty like Dave, some musical, some academic, some more practical, but they were all bright and thanks to the highly active Sports curriculum all were physically toned and lean. Since this was a senior class there were only seven of them, three girls and four boys. \n\nI decided to just bite the bullet and confront my worries. \n\n\"Good morning, everyone. Now, I've prepared some material in advance for next week, so that when the Inspectors are here, we all look good and get a positive assessment.\" \n\nDrawing breath, I looked out over the sea of faces, well perhaps more a pond, and didn't yet detect any hint of them being on my side. \n\n\"So I'll give out the notes for you all to look at and then we'll go through them, ok?\" \n\nI shouldn't have made it sound like a request! Damn! \n\nAlready a little flustered I picked up the photocopied sheets and started round the classroom, placing one set carefully on each desk in front of the pupil. \n\n\"Miss Kay? Did you say that you wanted us all to look good?\" \n\nOh damn. It would be Him. \n\n\"Yes, Dave, that's right, next week during Inspection.\" \n\n\"Wouldn't it be best if we started looking good this week?\" he asked, quite reasonably I thought. \n\n\"Well yes, of course.\" \n\n\"I think we might be able to manage that .. Can't we class?\" Dave looked round the room from his seat at the back, and every student turned to meet his eye, before turning back to look at me. \n\nI smiled at them, proud of them all for getting behind me so quickly, far more than I had expected. \n\n\"Yes, I think we might be able to manage that,\" he continued, \" .. Perhaps a slightly shorter skirt tomorrow might help make the class feel less intimidated, make us feel safer in expressing ourselves?\" \n\n\"David!\" I replied, a little shocked. Then I became embarrassed and changed what I was going to say. \"Are you suggesting I make you feel intimidated? That you don't already feel safe enough to express yourselves?\" \n\n\"Well, Miss Kay, IF you want US all to start looking good from tomorrow ..?\" and he left the rest unsaid. \n\nI was more than a little conflicted. Was he really suggesting that if I wore a shorter skirt tomorrow they'd all behave well? Was he also implying that if I didn't wear a shorter skirt, they wouldn't behave? \n\n\"Please read through the notes I've just given you,\" I announced to give myself time to think. I retreated behind my teaching desk at the front of the class, defensively making it a barrier between me and them. \n\nWhen I realised how that looked I came back out from behind my ramparts and deliberately walked among the desks, showing them that I was in charge, that I wasn't in my turn intimidated by them. \n\nAs I came to Dave's desk, he handed me a small folded piece of paper. Curious, I took it and went back to sit at my desk to read it. \n\nOpening it up I saw, \n\n\"Mid-thigh skirt. Hold-up stockings.\" \n\nLooking up immediately to Dave he met my eye, and tilted his head slightly raising an eyebrow. Then he looked around the room at the backs of all the other students' heads, and then back at me. \n\nClearly he was asking me if I accepted the deal, and implying possible consequences if I didn't. \n\nA shorter skirt was still well within the staff Dress Code. And stockings? No-one would ever know if I did or not, and the Dress Code wasn't that intrusive. \n\nThe question was, could I get a good assessment next week without Dave's help? There was always a chance that our lessons wouldn't be Inspected, that they'd choose others of my classes. But this was where I was vulnerable, and did I want to take the risk? \n\nIt didn't seem much of an ask, so looking Dave in the eye I nodded ever so slightly. In reply he mouthed, \"Good girl.\" I blushed, and trying to hide my face I lowered my head. \n\nThe rest of the lesson went by in pretty much a blur. Regaining my composure I kept to the lesson plan from that point on, and soon it was the end of the session and they were gone. Without further incident. \n\nThe next class was in almost immediately and I didn't have time to think about what had transpired until the end of the day and my drive home. \n\nI fretted all evening about whether I really would go through with it, picking out the skirt, and the stockings but having my more usual choices ready as well. I didn't sleep well that night. \n\nTUESDAY (Last session) \n\nThe next day I was up and dressed early, and made it to school in record time. The traffic was lighter than usual, and all the lights seemed in my favour. I went through my usual routine, got through the school Assembly and morning lessons, and didn't feel at all hungry at lunch. I was dreading the last session of the day, with That Class. \n\nEventually it came round. It had been a horrible day. In my nervousness I'd been a bit harsh with some of my younger groups, and they'd become fractious picking up my own uncertainty. I'd had to punish a few pupils yet I knew that the problem was not with them. Until I sorted things out with Dave's class, the rest of my teaching was going to suffer, which meant it didn't matter which classes of mine were Inspected next week, I was going to bomb. \n\nAnd here they were, filing in, smiling when they saw me. I wondered if it was the smile of sharks before they feasted. \n\nCalling the class to order I asked them to get out the sheets from yesterday, which they did. \n\n\"That's a nice skirt, Miss Kay,\" said Dave from his usual place at the back. The rest of them grinned at his remark. \"Is it new?\" he asked, \"I don't remember seeing you in such a short skirt before?\" \n\n\"No, Dave, its not new. Now, in the material on page one, does anyone have any questions?\" \n\n\"Um, I do?\" said a pretty curvy blond girl in the front row. \n\n\"Yes, Sandra?\" \n\n\"Um, it talks about a 'Quid pro quo'? What exactly is that?\" \n\n\"It basically means a fair exchange, 'this for that' though not literally in the original latin.\" \n\n\"And the suggestion is that this is a good thing?\" she continued. \n\n\"Yes, generally its what makes the world go round. It's the basis of commerce, bartering, money, business, human interaction,\" I replied \n\n\"A bit like here then?\" added Dave from the back. \"You're looking good for us this week, and we're gonna look good for you next week. Our very own quid pro quo. You did wear the shorter skirt for US, didn't you?\" he asked, \"And you DO look good in it.\" \n\nThere were a few chuckles and smiles, but they were basically quiet, curious to follow this exchange. \n\nWell how was I to answer that? If I said 'yes', I was admitting to dressing for their satisfaction in return for their cooperation. If I said 'no', I was saying I was doing nothing for them, so how could I expect anything from them? \n\n\"So anyway,\" I continued but was interrupted by Dave again. \n\n\"Did you, Miss Kay? Did you wear it for us?\" he insisted. Just a glance at the rest of the class was enough to know that they weren't going to move on until I had answered Dave's question. \n\n\"Very well, yes Dave, this is an example of a quid pro quo, a fair exchange in which neither party is diminished. Do you see, Sandra?\" I replied, trying to make it seem normal and incorporate it into the lesson. \n\n\"Let me get this, Miss Kay,\" he continued, \"you wore a shorter skirt today for us so that we would make you look good next week for the inspectors?\" \n\n\"Its not quite as simple as you're making out, Dave ..\" \n\n\"Oh but it is, Miss Kay. Either 'this is an example of a quid pro quo, a fair exchange,' or you were misleading Sandra, in which case we can't trust what you're telling us, so we'll be very confused all next week. So we need to understand, Miss Kay. Did you wear a shorter skirt today in exchange for us making you look good next week for the inspectors? Either Yes or No.\" \n\nI had lost what appearance of control I'd had. I didn't know how to answer. I couldn't tell Dave off, or punish him, he'd done nothing wrong, really. I could leave the room, but that would be a disaster for my career. I'd never regain any respect. But the class wouldn't allow me to avoid the question. \n\n\"Yes,\" I answered, chin up, defiantly, trying to make the best of it. \n\n\"So you wore a shorter skirt and showed off your great legs showing us how good you look, so we'd look good for you next week?\" he persisted. \n\nThrowing away what caution remained, I again answered confidently, \"Yes Dave.\" \n\n\"Could you just repeat my statement again, so we all get the idea of a quid pro quo?\" \n\nTutting and huffing, I repeated, \"In a quid pro quo I wore a shorter skirt and showed off my legs looking good for you so that you'd look good for me when the Inspectors are here. Ok? I think we have the concept, now!\" I tried to persuade myself that the feeling in my tummy was from being cross with Dave. \n\n\"Good girl,\" Dave replied softly, but still loud enough for everyone to hear. Again I felt a blush rising and turned back to my desk to hide it. That feeling in my tummy intensified. Getting a grip on myself I turned to face them, and they let me continue with the lesson without interruption. Near the end as I was wrapping things up dealing with their questions, Dave asked, \n\n\"Those instructions on yesterday's note. I can see you did the first one ... what about the second?\" \n\nI felt chilled. No-one was supposed to ever know either about the note or whether indeed I had obeyed both parts. \n\nLooking at Dave I silently pleaded with him to stop. The other class members were confused but alert. Clearly he hadn't confided in any of them. \n\n\"Yes or no?\" he asked casually, but again the rest of them weren't going anywhere until this little episode was done. \n\nWhat harm could there be in a simple yes or no? \n\n\"Yes, Dave.\" \n\nHe smiled, rather charmingly I thought. \"Good girl.\" Damn but I was blushing again. \n\n\"I think you should prove it.\" He stated. \n\n\"No! Absolutely not! That's too far, David!\" \n\n\"Oh well, we aren't going anywhere until you do. No-one leaves. Which means that effectively you are keeping us in after class.\" \n\nThere was a silence in the room, a stillness of expectation, anticipation. They all knew that this was important without knowing anything else. \n\nI really didn't know what to do. I walked out of the room and wandered the corridor where I bumped into the short stocky middle aged figure of the balding Deputy Head, Mr Cosgrove. \n\n\"Is everything alright, Andrea?\" he asked, clearly sensing my agitation. The noise coming from my classroom was like a sea of murmuring. \"Did you keep the class in? You do know we have to give a day's notice? And its most unusual in a class this senior. Though I'm impressed that they're still there even though you left the room. So what was it? Lack of homework? Discipline issue?\" \n\n\"Oh, a discipline issue ... not obeying instructions ... not demonstrating that instructions have been carried out?\" I answered, and knew that I had to go back in. \n\n\"Well you've probably made your point .. I doubt there'll be a repeat of the disobedience. Go and dismiss the class, I want them gone in five minutes, ok? If you need help ..?\" \n\n\"No, no, its ok, I can manage. But thanks.\" I smiled weakly at him and turned back towards my classroom. \n\nAs soon as I entered a hush rippled from the door to the farthest corner. \n\n\"Welcome back, Miss Kay,\" said Dave. \n\nI didn't reply but stood leaning back against my desk, facing them. \n\n\"Now, perhaps you would tell the class what was the first thing written on yesterday's note?\" \n\nLetting out a deep sigh of defeat, I answered, \"Mid thigh skirt.\" \n\n\"Which, like a good girl, you have worn today. And what was the second part?\" \n\n\"Hold up stockings,\" I replied quietly. \n\n\"And did you?\" He asked, gently. \n\n\"Yes,\" I replied, waiting for the inevitable. I only had minutes to dismiss them. It would be over soon. \n\n\"Show us.\" He quietly ordered. \n\nI simply bent over a little and rucked up my skirt until the stocking tops and some thigh were showing, straightening as I did so. \n\nI could feel the colour in my chest and face like a wave of pressure. \n\nThe class members were stunned. \n\n\"Good girl. Tomorrow same length skirt, again hold up stockings, and you will not wear your jacket in our class. Understood?\" \n\nI simply nodded and let the skirt return to its proper length while they all filed out, grinning and whispering to each other. \n\nI wondered where this was going to end. \n\nThat evening at home I couldn't settle, and paced around my small flat before sitting in my favourite armchair. But I couldn't relax, and again paced until I was in my bedroom looking through my clothes. If I wasn't to wear a jacket then I had a number of skirts to choose from and laid out a nice blue suede skirt fitted down to the hips then flaring but still of the right length. A fresh pair of 15 Denier black stockings with lace tops joined the skirt and I actually blushed again, here alone in the privacy of my bedroom, when it occurred to me that I was allowing for having to show my stocking tops. Far worse, I was quite looking forward to it. \n\nA pale pink long sleeved button front fitted blouse with high collar complemented the set, and I knew that I was going to 'look good' tomorrow. A pale blue v neck lambs wool sweater completed the ensemble and would allow my nicely proportioned chest to swell appropriately and emphasise my figure. For jewellery I chose a pair of simple gold long drop earrings. The flat shoes were replaced with heels. I could feel my excitement growing already. If I made an effort to look really good for them, then hopefully they would look really good for me next week. After all, it was about a quid pro quo. \n\nI had a light supper and watched a sit-com before going to bed, reading a favourite novel until my eyes drooped enough to ensure sleep. \n\nWEDNESDAY (Last session) \n\nIn the morning I was at school in plenty of time, refreshed and quietly excited. Next week was going to go so well and I'd get a brilliant assessment. Of course I needed my senior class to learn the material I'd prepared but we now had a deal, and I was confident that they'd honour their part. \n\nMy other lessons went really smoothly with none of the crotchetiness of yesterday and I was looking forward to the Seniors last session. \n\nIn they came, and a few of them murmured 'nice skirt Miss' or something similar, and once Dave was in his usual place I began the lesson. We discussed page two of the notes and I was revelling in the positive looks I was getting from the boys and the girls too, my confidence expanding with their approval. \n\nAbout halfway through the session, Dave raised his hand, and surprised me with, \n\n\"You look good in that outfit; I approve. But when I said no jacket, I anticipated an unobstructed view of your blouse, not for you to wear the sweater.\" \n\n\"I'm sorry if you're disappointed, Dave, but I have complied with your request,\" I pointed out. \n\n\"Your apology is accepted, Miss Kay. As I said, you do look very good. But on reflection I still want an unobstructed view of your blouse.\" \n\nHe made it an instruction, not an observation. I could feel a tingle inside, that feeling again, and looking round the room could see the mixture of uncertainty and hope on the faces in front of me. I could feel my own excitement rising, and didn't think I could resist. So I didn't. \n\nCrossing my hands over I gripped the hem of the sweater and slowly lifted the soft garment up to my shoulders and neck. Pulling my arms through I then carefully lifted it over my head, avoiding snagging the earrings, and turned to place it on my desk. \n\nFacing them again I pulled the rather tight fitting blouse straight, and asked, \"Is that better, Dave?\" \n\n\"Very nice!\" he replied, \"which gives me an idea for tomorrow. You will wear a t shirt top or sweater and may wear a jacket over it if you wish, except in our class.\" \n\n\"Very well,\" I answered. That might look quite nice, and I might also wear a necklace of some sort. \n\nWe continued the lesson as I'd planned it, and were making good progress through the material I'd given them. With five minutes to go I was beginning to get restless. The lesson was pretty much wrapped up, but I felt that proceedings were incomplete without our little end-of-lesson ritual. I couldn't tell if Dave was picking up on my own feelings, but with barely a minute before the bell he simply stated out loud, ",
        "\"Miss Kay, I'd like you to repeat your instructions for tomorrow.\" No raised hand. No 'please Miss,' just his bald statement. His requirement. \n\nI didn't even try to resist or demand a more respectful tone, but obediently stated, \"Mid-thigh skirt, hold up stockings, sweater or t shirt type top with no other top under, and nothing over during your class.\" \n\nOf course, I was well aware that he hadn't insisted on the hold up stockings or the specified skirt for tomorrow, but I wanted to do it for my own sake as if it was a requirement. My tummy was again doing all sorts of funny but kind of nice things, and my fingers were fidgeting with my skirt at the sides of my legs. I needed to know if he was going to ask me to prove it again. I wanted him to ask. My fingers became more obvious in their unspoken request. \n\n\"Was there something else, Miss Kay?\" he asked nonchalantly, clearly teasing me. \n\nI knew he wanted me to ask, to beg. So I did. I was enjoying this game too much now and was hooked. \n\n\"You can see that I complied with the instruction to wear a mid thigh skirt ..\" Instruction?? I shouted silently to myself. Did I really mean to tell him how much I wanted this? \n\n\"Yes, we can,\" was his brief reply. He was making me work for it. \n\n\"I wore the stockings as well, again as instructed.\" \n\n\"I expected nothing less from such an obedient good girl.\" \n\nDamn! He wasn't playing along! I sighed, supposing I'd be disappointed, but he was playing me. \n\n\"Were you expecting to have to prove it?\" he finally asked, with only half a minute to go. \n\n\"Well, yes.\" \n\n\"Did you want to prove it?\" \n\n\"I'm ready to,\" I answered dodging the real meaning of his question. \n\n\"You may ask us for permission to prove that you are wearing stockings.\" \n\nThat threw me a bit, but time was fast running out although the class didn't look like it was going anywhere just now. \n\nDrawing in a breath, savouring the new low to which I was sinking, I asked, \n\n\"May I please show you all that I'm wearing hold up stockings today as you wanted.\" \n\n\"You may,\" Dave answered, grinning. \n\n\"Miss is really getting into this!\" blurted a pretty slim brunette in the front row, and I frowned at Alicia. \"I'm investing in next week!\" I replied, trying to excuse my behaviour. \n\nJust like yesterday I bent forward and lifted today's skirt high enough to show them my bare thighs above the stocking tops. \n\n\"Very nice, Miss!\" \"Great legs!\" \"Awesome, Miss!\" were some of the comments, and I became a little giddy with pleasure. \n\n\"Higher, Miss Kay, lift the skirt higher,\" came Dave's voice. I complied until all of my thighs were visible. \"And turn round,\" he added. \n\nI did. \n\n\"Lift the skirt to your waist, Miss Kay,\" he ordered. \n\nOh, fuck! Could I do that? Show my knickers? They were nice knickers, plain dark blue bikini cut cotton. Of course I did. \n\n\"Wow!\" \"Nice arse!\" \"Peachy!\" They couldn't see the colour rising from my chest to my hairline, or the glow of pleasure I was experiencing. \n\n\"Turn round again, Miss Kay.\" \n\nI could have dropped the skirt back in place before turning, but I didn't, and now I was facing them with my stockings, thighs and knickers on show from my feet to my waist. There were lots of approving looks. \n\n\"Tomorrow you will wear a thong.\" stated Dave. \n\n\"Yes,\" I replied, the squirming of my insides confirming my secret delight. \n\n\"Good girl.\" The bell went, I returned my skirt to its proper state, and they left. On wobbly legs I went to sit behind my desk ignoring their grins and farewell comments. \n\nTHURSDAY (First Session) \n\nI didn't eat much when I got home, just nibbled on some crackers and drank too much red wine. It was just a fairly inexpensive Merlot from the supermarket, but I drained the bottle as if it were a cola. In the morning my head protested loudly, hitting me repeatedly behind the eyes, but I got to school on time. All my lessons were already prepared, but first session it was Them, and I was both nervous and excited. \n\nAs they filed in I stood in front of the teaching desk, hands clasped behind my back. Feet together, mid-thigh dark green cotton skirt flaring nicely from my hips though figure hugging from there to my waist. The short sleeved pale green knitted cotton v neck top was tucked in and clung to my body, and I was aware that my white bra could be discerned beneath it. I had worn the gold drop earrings again, my hair in a ponytail, and this time I wore a green glass pendant that nestled in the bare v of the top, between my breasts. I felt sexy, and hoped they liked how I looked. I wasn't disappointed with the admiring looks I got. \n\nDave seemed to ignore me as he came in and took his usual seat. \n\nDamn Him! \n\nI started the lesson and despite a lack of reaction from Dave it was going well. They seemed to have read the notes I'd given them and actually understood them. This was going to work as a partnership. \n\nIn the first open forum of the lesson, where I answered their questions on the notes and our text, I made a point of assuring them that it was ok to ask questions that might appear perhaps silly, because there was a good chance that someone else had the same question. \n\nDave finally put up his hand. \n\n\"Yes, Dave?\" I asked, a little surprised that he had reverted to such respectful behaviour. \n\n\"What you're saying is that we should trust each other, not make fun of another person's ideas, or thoughts or ways of expressing themselves?\" \n\n\"Well yes, absolutely. If you all remember, its one of those things we discussed in out first lesson together.\" \n\n\"I think its really important, Miss Kay,\" he continued, \"We all need to trust each other to not embarrass anyone else about how they express themselves in this class. My Dad always says that Trust is one of the most valuable commodities, and should be prized. He's a very wise man, my Dad. Someone to be listened to. He says a betrayal of trust undermines relationships, and proves a person unworthy of loyalty. They lose all the protection of friendship!\" \n\nThat sounded almost like a threat, and looking round the classroom I saw that all the others understood what Dave was saying. I was impressed at how respectfully he spoke of his father, who sounded like quite an interesting man. \n\nDave added, \"What happens in here, stays in here. Agreed?\" \n\nHe might as well have said 'understood'. Everyone in the class nodded, including me. \n\n\"Good. Now, Miss Kay, come here please and continue the lesson.\" Dave pointed to a spot just to the right of his desk, at the back of the class. \n\nI could have protested that this made no sense since everyone would have to turn round, and not have their notes in front of them, but of course I simply obeyed and walked to where he indicated, turning my back on him to face everyone else, so that he was slightly behind my left shoulder. \n\nCarrying on from where we left off I started going through the points I'd made on page three of the handout. After a minute or so I was getting into my stride and most of the students had their papers in their hands to follow along. \n\nThat was when I felt the hand softly caress my left calf, the one nearest Dave. I faltered, turned it into a cough to clear my throat and continued. His hand carried on stroking up and down, now reaching the back of my knee. Looking at the faces in front of me I saw most eyes were indeed on my left lower leg, not my face. They knew what he was doing. Everyone kept a straight face, and I continued talking. I lost track of what I was saying as his hand crossed the threshold of my knee, running up the back of my thigh as far as the hem of my skirt. \n\nI think we were all mesmerised over what he'd do next. Dave surprised me by sliding his right hand, it must have been his right, along the inside of my leg just above my knee, and I could feel his strong fingers delicately pressing into the front of my leg where surely everyone could clearly see. In fact some moved in their seats for a better view. \n\nI knew I'd stopped talking when Dave softly chided, \"Keep talking, Miss Kay, there's a good girl.\" \n\nObediently I carried on, not saying anything brilliant but waffling on topic. All my attention was on his hand. Which was when it slid smoothly up between my legs until it reached my underwear. Everyone must have known how high he'd gone. The soft flesh of my inner thighs were pressed tightly against the palm and the back of his warm strong hand. \n\n\"Move your feet apart, Miss Kay,\" he ordered, his quiet firm voice carrying to the front of the room, and faltering in my explanation I immediately complied, the whole class watching. \n\n\"Recite the quotations we should learn,\" he continued, and I started on the first, the rest of my being focused like everyone's eyes on the hand pressing up into my groin. Looking down I could see the outline of his motionless hand distorting the front of my skirt. \n\nI stammered my way through the first short quote. \n\n\"You may back to your desk, but if you stay here I will go further,\" Dave said in his assertive way that carried to everyone in the room. \n\nI simply moved my left foot a little further from my right, and started the second quote. \n\nA slight gasp could be heard but I don't know who uttered it. \n\nWith more room he shifted his hand to firmly cup me from underneath. His hand was pressing into my pubic mound, then he started moving that hand forward and back, slowly, teasingly, so that every forward movement would push out the front of my skirt. I'd stopped talking again and his hand was becoming even more obvious, rubbing his palm against the soft folds between my legs. \n\nSuddenly he stopped and took his hand away saying, \"Go back to your desk.\" \n\n\"Yes, Dave,\" I replied without thinking, blushing and hurrying to where I should have been. Once there I found the courage to turn an face the class, but they were still looking at Dave. He was holding up his right hand, palm toward them. It was glistening, slickly wet. Yes, I was soaked. \n\n\"I think now is the perfect time for you to show us that you obeyed my instructions from yesterday, Miss Kay. You will face us and lift your skirt to your waist.\" \n\n\"Yes, Dave,\" I replied as they all turned to look at me, wonder and excitement and curiosity on their faces. \n\nI was loving this. Surely Dave understood that? Bending forward I grasped the hem of my skirt in our now usual ritual, and lifted, peeling it up to my waist. \n\n\"Feet apart, Miss Kay.\" \n\nObeying, I knew that the soaking wet front of my white thong would be visible to everyone, possibly through it even my trimmed dark bush. \n\n\"Turn around, show everyone that you're wearing a thong.\" \n\nI turned, and stayed like that through the indrawn breaths, until I had permission to turn again. \n\n\"Face us, and let your skirt back into its proper state,\" which I did. \n\n\"There's one more thing,\" he added, with a pause for dramatic effect. \n\n\"You will not wear a bra tomorrow. At any time. Understood?\" \n\nI gaped. I think my mouth literally fell open. \n\n\"You can't be serious!\" I stammered. \n\n\"Do we need a repeat of yesterday's disciplining? It will be more serious each time I have to discipline you for disobedience!\" \n\nThrough my mind rushed the fear of him asking me tomorrow to prove that I wasn't wearing a bra, but maybe he wouldn't repeat that particular trial. \n\nThere was a knock at the door, and then the Deputy Head, Mr Cosgrove came into the classroom. \n\n\"Don't mind me, \" he said, \"I'm just going round a few classes before the Inspectors are in next week, making sure everything is ok,\" smiling at the class but giving the impression that he was checking up where behaviour might be in doubt. I knew he was following up from when it had looked like I'd kept the class back. \n\n\"Everything is fine, Mr Cosgrove,\" I assured him, \"We're just preparing ourselves for next week, so that we can all look good.\" \n\nI didn't know if I was taunting Dave, challenging him or giving in to him. \n\nTurning to one of the brighter boys in my class, the Deputy Head asked, \n\n\"So Brian, tell me a little about the text you're studying.\" \n\nThe slim student with short dark hair sensibly repeated some of what I'd most recently covered from the notes, and then Sandra interrupted and corrected him. That lead to Alicia countering with one of the observations we'd made yesterday and soon there was a healthy and informed discussion which actually sounded quite impressive. \n\n\"Miss Kay has certainly done a good job getting you to engage with the text! I'll have to make sure that the Inspectors visit this class. There's no reason why they shouldn't, is there?\" he asked me, but his question was clearly directed at the class, who he still suspected of playing me up the other day. Although he was short, his stocky frame leant him an authority. \n\n\"No reason at all, Mr Cosgrove, \" I replied, \"as you can see, we engage in discussion and the sharing of views and opinions, but its all well disciplined.\" \n\n\"Ah, that's good to hear. So no, um, no problems with 'not obeying instructions?' That would make me very disappointed,\" he responded with quiet emphasis. \n\n\"Oh no, no problem at all,\" I assured him, \"all instructions are carried out in full, completely,\" sneaking a glance at Dave who remained impassive as if this had nothing to do with him. \n\n\"Excellent! Carry on the good work, all of you,\" and smiling at the class he left, closing the door behind him. \n\n\"You heard the Deputy Head, we are to continue where we left off. In this class where my instructions are carried out in full and completely. Aren't they, Miss Kay?\" announced Dave. \n\nI just nodded, and detected a look of glee on many faces. \n\n\"Say it. Repeat back to me your instructions for tomorrow.\" \n\n\"I will wear a mid thigh skirt, hold up stockings, t shirt or sweater top but no bra all day.\" \n\nI knew my face was red and could almost hear my heart thumping, but the excitement and admiration directed toward me was the reward I needed, and knew I'd done the right thing. Yes I was embarrassed, yes humiliated, yes it was totally inappropriate. But I loved it. Dave knew. Somehow he knew. He also knew I was waiting for it ... for him to say it \n\n\"Good girl,\" and I let out a sigh of contentment. \n\nFRIDAY (Last Session) \n\nSoon after arriving at school Mr Cosgrove sought me out in the Staff Room and asked me to join him in his office for a word. Quickly gulping down my coffee I followed him, nervously running through in my mind all the things I might have done wrong, hoping desperately that he hadn't found out about That Class. \n\nClosing his door he gestured to the pair of comfortable seats at one side of his desk, and I perched carefully on the edge of one. \n\n\"I was really impressed with the progress you've made with your English senior class. They showed an involvement and enthusiasm I've rarely seen. I very much want the Inspectors to visit, but I'm aware that you might find that a bit daunting, so I thought I'd sit in on your next lesson with them, to give you a sense of what its like having someone observe you in a real lesson.\" \n\nI was sure that he meant it kindly, but how was I to manage the class's expectations with him in the room? \n\nI replied, \"It's OK Mr Cosgrove, I was observed plenty of times during my teaching practice, and once I'd got used to it I wasn't phased by it at all.\" I so hoped to put him off. \n\n\"That's great! Then it won't bother you that I'm there.\" He smiled, pleased with himself. \n\n\"There was one thing I wanted to ask you about,\" I said, changing the subject. \"What do you know of Mr Jordan, you know, Dave Jordan's father? He speaks so highly of his Dad.\" \n\n\"Oh, he rarely if ever comes to school. He's a local businessman, very influential, but not the public works kind of influence. All behind the scenes. He seems to know everyone who matters and they all know him. I believe he owns a string of shops and pubs and a club. Are you worried about David? Did you want to talk to his father about him?\" \n\n\"No, actually Dave has been really good and very attentive. Its just that at the last Parents Evening no one was there for him, and I just wondered.\" \n\n\"If there's nothing amiss, I shouldn't make any waves if I were you. Oh, and by the way, don't take this the wrong way, but you seem to have softened the way you present yourself in school. It suits you very well, makes you seem more approachable. I hope you're not offended?\" \n\n\"Offended? No, of course not. Your comments are welcome. Its good to hear the opinion of an experienced man. So yes, I've been trying a different approach to my appearance with some guidance from someone. I think its making it easier for me to build a relationship with my students, but one in which obedience is demanded.\" \n\n\"It seems to be working with your Seniors. Well done and keep it up. I would encourage you to continue to develop your style, and the relationship you have with them.\" \n\nFeeling slightly giddy I asked, \"So I should take it further, in the direction its going. Continuing to work on the obedience, the safe environment in which self expression is encouraged, and the exhibiting of assets and best points?\" \n\n\"I wouldn't have put it that way myself, but yes. And feel free to express yourself in your clothing. I like the shorter skirts and the jacket off.\" \n\nI detected a slight uneasiness in him as he said this, perhaps worried that he might have overstepped the mark. \n\nStanding I turned a little to my left and right, looking down at my legs, and asked, \n\n\"You don't think the skirt is too short? That I have the legs to carry it off?\" \n\n\"Definitely not too short, and the legs are great,\" he replied carefully, as if testing boundaries. \n\n\"That's good to know,\" I grinned at him, innocently I hoped. \"So I could get away with an even shorter skirt?\" \n\nHe laughed, \"probably not next week while we're being inspected, but yes, a little shorter. I'd like to see more of your legs,\" and I knew how big a risk he was taking by saying that. \n\n\"I think we can manage that,\" I replied smiling into his eyes. \n\nJust then the bell sounded. \n\n\"Time to get back to it,\" he announced, standing, and we filed out of his office, me in front, him behind. I hoped he was checking out my bum. \n\nAfter lunch I had a free session then it was that time again. I was keyed up and almost twitching in anticipation, my excitement only tempered by knowing that at some point Mr Cosgrove was going to walk in. \n\nI realised I'd spent the whole day waiting for this. \n\nMy stockings were again the dark lace top hold ups, and today's skirt was a fairly thin yellow cotton, again hugging to my hips then flared. Once again I wore a thong, today a black lace one that probably showed through the thin yellow cotton. With no bra on, I'd compromised and over the white cotton figure hugging v neck t-shirt wore a pale green lambs wool button front sweater, open, so that I could pull it over my breasts when Mr Cosgrove was in the room, and open it either side of them when he wasn't. \n\nBecause I didn't know when the Deputy Head would join us, I waited for the class sitting at my teaching desk, sweater open but carefully covering my breasts. As the bell sounded I looked up and very soon the first of my class came in through the door, looking excitedly towards me, and then frowning in what I took to be disappointment at an expectation denied. \n\nDave came in with the last three and didn't even look at me, but took his usual seat at the back, finally glancing over to me, his face impassive. \n\nI knew that I owed them an explanation. \n\n\"Right, well good afternoon class. Today Mr Cosgrove will be joining us again for some or all of our lesson, so I've had to make some changes to accommodate that. Please turn to the last couple of pages of your notes so that we're ready for him.\"  ",
        "They did as I asked, but the mood was a little flat, and while I was wondering how to recapture the flair that had so impressed Mr Cosgrove, in he came, a firm but quiet knock on the door announcing his arrival. \n\n\"Don't mind me, I'm just observing,\" he announced and took a seat near the back but a few desks to the right of Dave, a notepad and pen in front of him. \n\n\"So, any questions from our last session?\" I asked brightly, and got silence in return. \"Hm, ok, so er, what was the main idea conveyed in the last chapter of our text ... Alicia?\" I asked the slim dark haired girl in the middle of the front row. \n\nShe took a breath, sat up straighter in her seat, and began hesitantly, but encouraged by a few supportive comments from around her soon gave a pretty good account, which was picked up by Sandra, the curvy blond sitting to her right. The baton then passed naturally to the red headed Sarah who looked across Alicia to challenge the assertions of the other two girls. \n\nI smiled at them, delighted, and asked, \"well boys? Are you going to leave it to the girls or do you have anything to add?\" \n\nBrian, from behind Sandra, picked it up and soon they were all chipping in, showing a suitable depth of understanding and interest, and even the dark haired Peter and John joined in, though they were usually quiet in front of the others. I wasn't sure if it was because they were both skinny where Dave looked like the rugby player that he was, while Brian was a school middle distance runner. \n\nAfter a few minutes I summarised the discussion so far and started to go through the last of the new material from the back page of the handout. As I talked I felt that they deserved a reward for looking so good for me, so under the guise of wandering the room to be amongst them and spend a moment at each desk I strolled across towards Mr Cosgrove as I talked, looking each student in the eye while making the points one by one, then turned to come back the other way. \n\nNow that my back was to the Deputy Head, I casually peeled aside the soft green sweater so that my breasts were now covered only by the one layer of the thin cotton t shirt. I could feel my nipples pucker as I did it, and my tummy again did nice things as I attempted to expose myself to my class with the Deputy Head in the room. It was heady stuff, and every one of them stared at my tits. I managed to end up near Dave at the back, but turned away from Mr Cosgrove enough to allow all my boys and girls a good long look. \n\nFinally wrapping up my summary I covered my chest again and returned to the front of the class. \n\n\"So if you'd like to make some notes on that, let's say for five minutes, then we'll move on? I hope you were all able to see the main points,\" I told them, sitting at my desk while they busied themselves adding to my written notes with words of their own. \n\nMr Cosgrove came over and leaned his hands on my desk, a position that gave him an exceedingly good view down my top. I didn't think he'd be able to tell that I wasn't wearing a bra. \n\n\"That was fine, Miss Kay. Perhaps after you dismiss them you could come to my study for a few minutes to go over my observations? But don't worry, I'm very happy with how it went.\" Smiling, he made for the door, turning to say to the class, \"Well done everyone. Carry on like that next week.\" And then he was gone. \n\nA collective sigh rose spontaneously from almost everyone, and a few grins broke out. \n\n\"Miss, I thought he had you busted a couple a times there!\" quipped Brian, and Sandra added, \"and that walk through with your sweater open!\" \n\nI laughed and grinned, and opened the sweater again, rising from behind my desk to perch my bum against it facing them all. I was again rewarded with seven pairs of eyes examining my thinly clad tits. \n\n\"So Miss Kay, that was an interesting way of getting round the dilemma of having Mr C in our lesson.\" He smiled, and the others turned sideways to watch him and also keep me in sight. They sensed and interesting exchange about to happen, as indeed did I. \n\n\"Thank you Dave,\" I replied. \n\n\"What were your instructions for this lesson?\" he asked. \n\nI knew that he knew. That he wouldn't have forgotten a single detail. But I was having fun, and decided to push him a little, to provoke a reaction. Leaving out the mention of mid thigh skirt, hold up stockings and thong, I answered, \n\n\"T shirt or sweater top but no bra all day.\" \n\n\"Yes. And what have you worn?\" \n\n\"A t shirt top and sweater, Dave.\" \n\n\"Did I say a t shirt AND sweater, or t shirt OR sweater?\" \n\n\"Um, you said OR.\" \n\n\"Did you obey completely and fully, like you promised the Deputy Head?\" \n\n\"I didn't wear a bra?\" I added, wanting to gain at least some credit for obedience. \n\n\"Did you obey completely and fully?\" There was no 'Miss Kay' now. \n\n\"No Dave, I didn't.\" \n\n\"Does that make you a 'good girl'? Not doing as you were ordered?\" \n\n\"No Dave, it doesn't. Sorry.\" My face was lowered and my voice sounded chided, but I was loving this. I thought everyone in the class must have noticed how he said I'd been ordered. And also how my reply accepted the orders. It made my insides tingle with excitement. \n\n\"So actually you're a naughty girl, aren't you?\" \n\n\"Yes Dave, I'm a naughty girl.\" Fuck, this felt good. \n\n\"And what happens to naughty girls?\" Uh-oh. \n\n\"They get punished?\" I asked, raising my eyes, and even I could hear a note of worry in my answer. \n\nThere was a moment's silence. \n\n\"So which is it? T shirt, or sweater?\" \n\n\"T shirt,\" I replied quickly. \n\nAgain silence. They all looked at me. Dave looked at me. He said nothing. He started to drum his fingers on his desk. \n\nJolted into action, I pulled the sweater off my shoulders and down my arms, dropping it on the desk behind me. \n\n\"Put your hands on your head.\" \n\nI did as I was told. \n\n\"Walk slowly through the room past everyone's desk. Take your time.\" \n\nI took a pace from my desk when Dave said, \"Stop!\" \n\nI hesitated, hands still on my head. \n\n\"What are you wearing under your skirt?\" \n\n\"A black lace thong.\" \n\n\"Why?\" \n\n\"Because you told me to yesterday.\" \n\n\"I told you to the day before, to be worn yesterday. I didn't tell you to wear it today. Why did you wear it?\" \n\n\"Because I wanted to. Because I liked wearing one yesterday.\" \n\n\"Is it because you enjoyed showing it yesterday?\" \n\n\"Yes, Dave.\" \n\n\"Tuck the back of your skirt up into your waistband to expose your bum, then put your hands on your head and walk the room.\" \n\nI quickly did what he wanted, and hands on head began my own little walk of shame, each of my students smiling or grinning but looking mostly at the protruding nipples proudly poking my thin white top, and presumably at my almost naked bum once I passed them. \n\nWhen I got to Dave's desk he stopped me again. \n\n\"Did I give you permission to wear the thong?\" \n\n\"No Dave, you didn't.\" \n\n\"Take it off.\" \n\nThere was a gasp. \n\nDropping my hands to my sides I slid the black lace thong over my hips and down my thighs, stepping carefully out of it. Dave held out his hand and I dropped the warm, damp scrap of garment into his open palm. \n\n\"Go back to your desk and kneel in front of it facing us, hands on your head.\" \n\nAgain I did as I was told, walking away from them, giving them another great view of my bare bum. \n\n\"Do you wish to carry on with our deal, or do you want out?\" \n\nHow could I back out now? I'd already paid so much to keep my side of the deal, and now Dave was offering to let me cancel the arrangement just when I needed them to pay up? I knew he was manipulating me, but I really didn't have much of a choice. \n\n\"Carry on the deal, Dave.\" \n\n\"I did tell you that disobedience would be punished. But first, your orders for next week. During Inspection you may wear anything of your own choosing from the waist up. Below, you will continue with the hold up stockings and short skirt, but no briefs. At any time next week. You will not wear any panties or knickers or bikini bottoms; nothing. If your period is due you may use tampons. Understood?\" \n\n\"Yes Dave, no knickers at all next week.\" \n\n\"Now, lift your top above your tits, to prove that you're not wearing a bra.\" \n\nSo help me I did. Willingly. Stupidly. Hungrily. \n\nI bared my tits to the whole class. \n\n\"Hands on your head.\" \n\nThere was silence. Total silence. Like a collective holding of breath. \n\nI could feel the blood rushing through my veins, the cool air on my skin, on my tummy, bare bum, on my tits. My nipples were puckered to hard points and I needed to squeeze my thighs together. \n\n\"Fuck!\" came a quiet murmur, I think it was Sandra, away to my left. I looked up at their stunned faces. \n\n\"Fuck!\" repeated a deeper voice, Brian behind her. \n\n\"Yes, FUCK!\" agreed a third voice, and also to my left I knew that was Alicia. \n\n\"Oh yes! FUCK!\" added John to my right. \n\n\"Ha ha, Fuck is right! And you losers are behind the front row. We girls get the best view!\" Sarah taunted John from her seat in front of him. \n\n\"I knew she had a peachy arse, but FUCK! Those TITS!\" Peter was almost drewling, having a great view from almost in front of me, just behind Alicia. \n\nDave \n\nFair hair, Rugby player \n\nBrian Peter John \n\nslim dark hair, runner Skinny dark hair Skinny dark hair \n\nSandra Alicia Sarah \n\ncurvy blond Slim brunet Red head \n\nMiss Andrea Kay \n\nAnd that's how we finished the lesson. They stared, commented, chatted, and I knelt there in front of them. \n\nWhen the bell went, they left, happy and grinning and staring at me and my bare boobs, but Dave stayed long enough to get my phone from my bag and copy down my number. \"I'll message you tonight,\" he said, patting me on the head. \"Good girl.\" \n\nAs he left, I got up, straightened my clothing, put the sweater back on and headed for Mr Cosgrove. \n\nSATURDAY \n\nI met Dave in the car park to the Velvet Club as arranged. Parking up, I saw no other cars, just a pretty looking motorcycle with L plates and guessed he'd arrived on that. \n\nClimbing out of my car I was glad that I'd gone for the casual Saturday morning look, in clean jeans, sandals, and yellow round neck t shirt. I had a medium sized shoulder bag in brown leather at my right hip and wore the strap over my left shoulder so that it separated and emphasised my c-cup breasts, while the padded white t-shirt bra ensured that I didn't look tarty. \n\nI saw Dave waiting at a black service door and walked over. \n\n\"Hi,\" I greeted. \n\n\"Hello Miss Kay,\" he replied, a warm smile playing on his lips. The door was unlocked and he lead the way. \"Shall we go in?\" \n\nI nodded and followed him along a plain corridor painted an off-white colour, passing a number of closed doors on both sides. \n\n\"These are store rooms for the bar stock and kitchens,\" he told me over his right shoulder while leading me deeper into the building. \n\n\"The performers' dressing rooms,\" he added as we stepped into two large connected rooms equipped with mirrors, lights, clothes rails, seats and dressing tables and all sorts of stage paraphernalia. \n\nThen it was along a wide passageway past another couple of doors, \"Offices,\" Dave said, and into the actual club. \n\nHere we stopped and I gazed around the large room laid bare in daytime working flourescent lighting. It looked so business like, with little atmosphere right now, but I could easily imagine how it would feel in its proper setting. At the moment a couple of girls dressed in cleaning tabards over jeans and t shirts were vacuuming the plush dark carpet and polishing furniture. \n\n\"We have different types of sitting area as you can see. Small tables with chairs, higher tables with stools, bar stools, and standing areas. Those raised stages are for the performers. Usually topless girls on those two, guys dancing on that one over there, and then the cage for special acts. Sometimes audience members dancing, sometimes special guest acts, novelties, always unannounced, a surprise to the clubbers, no promise of how good it will be or the content. But with the noise of the music from over there,\" and here he pointed away to our left, to a DJ stand, \"the acts are visual only.\" \n\n\"Its very impressive, Dave,\" I commented, \"it's a wonder you get any homework done!\" \n\n\"Ha ha, I'm not actually allowed in here when we're open, its 21 and over, but yes I can go anywhere the other side of this door. I've been helping Dad out since I was fourteen. But he's very strict. He says a good education is like a free pass to life. Only a fool throws it away. Homework always gets done.\" \n\nAs we turned to go back towards the offices I cast a last look over my shoulder, at the Cage, curious thoughts already creeping into my mind. \n\n\"Hey Dad!\" \n\n\"Hi Son,\" I heard the exchange and turned to look where I was going. Dave was hugging and older version of himself, and as they moved apart I could see where the son got it from. Where Dave had an aura, an indefinable quality, the mature version had it in full measure. I could almost feel the power radiating from this man. \n\nI couldn't help myself, I had to lower my eyes as he scrutinised me. \n\n\"Dad, this is my English teacher, Miss Kay.\" \n\n\"I'm pleased to meet you, Miss Kay.\" The voice was deeper than Dave's with a resonance, and I risked a glance up at his face. He was smiling, such a charming smile, and I found myself grinning back. \n\n\"Pleased to meet you too, Sir.\" \n\n\"My, but she's a pretty one, David. And a natural?\" \n\n\"Yes, Dad, a natural submissive and exhibitionist.\" I looked over at Dave, surprised and shocked at his words. Not that his description was wrong, but shocked to hear him say it, and so confidently, that he should have discerned my weaknesses so easily. \n\nI found myself blushing yet again, my face lowered. \n\n\"What a lovely reaction! She really is cute. Is she your pet?\" \n\nI do so love it when men talk about me like this. \n\n\"Well, Miss Kay? Are you my pet?\" \n\nAgain I didn't try to fight it. I just went with how I was feeling. How they were making me feel. \n\n\"Yes, Dave, I am your pet.\" I raised my eyes to his as I said it, again throwing out a challenge. \n\nHe met my gaze with his charming smile. \n\n\"Good girl. But not yet, Miss Kay. If you want to be my pet you have to ask me if I will accept you, and I'm not sure I want a pet right now. Anyway, its no light thing. You shouldn't choose it on the spur of the moment. Take some time to think about it. If you want it, you may ask me again, but not today.\" \n\nDave's dad nodded his approval of his son's handling of the situation, gave me an appraising look, and went into what must have been his office, leaving the door open. \n\nDave made a gesture to me and I followed, Dave behind me. \n\n\"So what brings you here, Miss Kay?\" asked Mr Jordan as he reclined in the comfortable looking black leather office chair behind his imposing wooden desk. \n\n\"Um, I noticed that you didn't attend the Parents Evening for Dave and wanted to catch up with you, and also I was curious about this place and your son offered to show me around?\" I ground to a halt. Something about the look on Mr Jordan's face suggested I was talking too much. \n\n\"Sit down.\" He gestured to the two chairs in front of us across the desk from him. \"Let's catch up now.\" \n\nI sat in what looked very like a dining chair, and Dave closed the door before doing the same on my left. \n\n\"Dave has been an attentive student,\" I began, then again faltered at a look from Mr Jordan, who interrupted me with, \n\n\"So David, how's class going?\" I blushed, realising that instead of me reporting on Dave's progress, he was going to report on mine. \n\n\"She's a good teacher, Dad. Her notes for our present assignment are easy reading and seem to have impressed Mr Cosgrove, you know, the Deputy Head? And everyone in class thinks she has great legs and nice tits.\" \n\n\"I'm sure the legs are easy to appreciate, but how do you know she has great tits, David?\" \n\n\"I got her to show us. It wasn't difficult. Like I said, she's a natural submissive and exhibitionist,\" and Dave went on to explain to his dad our Inspection deal. \n\nMr Jordan looked thoughtful. \"But you think she's a good teacher?\" he asked. \n\n\"Oh yeah, Dad. We should all get good grades with her, I reckon.\" \n\n\"Then we must protect her job. I don't intend to see her get fired.\" I listened to their exchange as if I was an outsider, as if it wasn't me they were discussing. Then Mr Jordan fixed me with that look. \n\n\"Miss Kay, take off your top.\" Shit! There was no deal here, no quid-pro-quo. It was an order. \n\nAnd yes, I obeyed. First I put my bag down on the floor beside the chair after lifting the strap over my head, then gripping the hem with both hands I lifted the yellow t shirt up and off, dropping it on the bag. I sat there facing Mr Jordan in just a padded t shirt bra above the waist, hands in my lap. \n\n\"Now you may tell me how David is doing in your class, Miss Kay.\" \n\nIt was very weird, trying to be professional and give a parent feedback while wearing just a bra on top, but as I talked I pretended I was in a bikini and we just happened to meet at a swimming pool. \n\nAs I paused for breath he added, \"Take off your bra.\" \n\nOh fuck! If you're going to do it, make it good, I thought, so I continued talking and while describing Dave's strengths I undid my bra and let it fall in my lap before dropping it on top of my t shirt as if I were putting down a notebook. It felt so erotic, so wrong, so inappropriate. My nipples were tightened to points and my tummy was flipping. I wanted more. \n\nMr Jordan listened carefully, eyes scanning my breasts every so often before returning to my eyes which he studied knowingly. When I finished talking, he put his desk phone on speaker and punched three numbers. \n\n\"Deborah? Be a sweetheart and get me the number of the Head of David's school?\" He terminated the call. \"I'm going to tell the Head what a great job you're doing, Miss Kay.\" \n\nJust then Mr Jordan's mobile phone buzzed, and consulting it he dialled the desk phone but didn't connect. \n\n\"How did you get the Head's number? Its not listed?\" I asked, but he gave me look as if to say, \"You can't be serious.\" \n\n\"Miss Kay, come here and kneel down.\" He gestured to his side of the desk. While I got up and walked round naked from the waist up and shooting an enquiring look at Dave, he continued, \"You're going to suck my cock while I talk to your Head Teacher, understand?\" \n\nI just nodded and sank to my knees between his thighs. He had very strong thighs. I heard him connect the call on speaker again, and then it was ringing. I quickly undid Mr Jordan's belt and the band of his trousers and pulled down the zip as quietly as I could just as the phone was answered. I recognised the voice. \n\nWhile they engaged in opening pleasantries I fished out the large soft member from his shorts and laid it on my tongue, looking up at Mr Jordan and meeting his eyes. Then I closed my mouth around it and moved my tongue against it as it firmed and grew in length. The penis had been almost as long as my hand when I placed it on my tongue, light tan in colour with very few veins showing, fat as a tube of toothpaste with a beautifully shaped head, but now it was probably half as wide again, and at least twice as long and rigid like a velvet covered rod but so alive. \n\nI started to move my head forward and back a few inches at a time, enjoying the cock's warmth and texture, its feel and smell, and noticed Dave sitting on the edge of the desk to my left, watching me. \n\n\"Your Miss Kay came to see me, wanting to let me know how things are going in my David's class,\" \n\n\"And is everything ok, Mr Jordan?\" \n\n\"Quite satisfying at the moment. I can see what David enjoys about her classes. She has an exquisite way of getting her tongue round things.\" Mr Jordan stood up slowly with my lips wrapped round his fully erect penis, my mouth stretched wide to accommodate him. ",
        "\"That's good to know, Mr Jordan, thank you.\" He started to pump his hips slowly, fucking my face while Dave watched. \n\n\"I wanted you to know that I appreciate what she's showing my son, and expect her to continue to be his teacher until his examinations. You will arrange that?\" \n\n\"Yes, if that's what you want,\" my Head teacher replied, clearly wary of upsetting Mr Jordan. \n\n\"And after that, I will continue to take an interest in her and I would like it known.\" He paused. \"So what will your instructions be to Miss Kay?\" \n\n\"Why, to keep on with what she's doing, and to keep you satisfied.\" \n\n\"That sounds perfect, thank you.\" And Mr Jordan rang off. \n\n\"Ring Mr Cosgrove, Dad?\" suggested Dave. \n\n\"Deborah? The Deputy Head's number now please?\" All the while pushing in and out of my mouth. \n\nBy the time we all heard Mr Cosgrove pick up I was cradling Mr Jordan's heavy balls in my right hand and slowly pumping the shaft of his manhood with my left. He was letting me do all the work now and sank back into his chair with his knees wide. I moved my palms to his thighs and sank my mouth down onto his erection then back up, tongue caressing the soft flesh just short of the enormous swollen bulb of his cock head, again listening to the parent of one of my pupils discussing me now with my Deputy Head. I looked up into Mr Jordan's eyes, wanting him to know how much I was enjoying this. \n\nA movement to my left caught my eye and glancing that way I could see that David was masturbating. His hand was steadily sliding up and down a cock that had to be the equal of the his Dad's that was in my mouth. \n\nHolding Mr Jordan's cock in my right hand and keeping my mouth on him, I reached over with my left and spread the pre-cum from David's wanking round the boy's glans, then took over his stroking. David moved closer so that the tip of his dick was almost touching my left cheek. I stopped bobbing my face on his Dad's cock but held the fat end in my mouth, working him with my tongue and right hand, my left jerking Dave who now pressed the drewling end against my cheek. \n\n\"Yes Daniel,\" I heard Mr Jordan say, \"your Miss Kay is quite exceptional. David told me how much his class enjoy having her, how much she's showing them, but until I met her today I didn't fully get just how talented she is.\" \n\n\"Ha ha yes, they did respond very well while I was observing, I was impressed myself. And of course it doesn't hurt that she's nice to look at. Have you seen her legs? She's only just started to dress less severely in school, taken to wearing shorter skirts and softer tops, and the result is great.\" \n\n\"Is that your doing, Daniel?\" Mr Jordan looked up at Dave, knowing it was his instructions not the Deputy Head's. \n\n\"Oh no, she just started last week. Maybe she just got a burst of self confidence. When she was in my office I could swear she was mildly flirting with me, even asked if I thought she could get away with shorter skirts!\" \n\n\"I do hope you encouraged her, Daniel.\" \n\n\"Well of course, but not until after our Inspection this week. Can you imagine giving her a daily skirt inspection, scrutinising how much leg she's showing?\" Mr Cosgrove sounded like he was getting lost in his imagination. Dave just grinned at me and his Dad. If only the Deputy Head knew! \n\nMr Jordan was saying, \"Having now met her, I can tell that she's a sub. If you told her to come to your office each morning for you to inspect what she's wearing she won't object or make a complaint.\" He looked me in the eye and raised an eyebrow. Mouth filled with his cock I nodded my obedience. \n\n\"You sound very sure of that?\" there was uncertainty in Mr Cosgrove's voice. \n\n\"It's my business to read girls and understand their sexuality and limits. If you're not confident because of the professional risks, take it slow. But you'll find her happily compliant. One thing though, I don't want her career put at risk. She's under my protection now, for what she's doing for my son.\" \n\n\"Understood. But you think it'll be ok for me to have a VERY close look at what she's wearing, every morning?\" \n\n\"Yes, but don't try to tell her WHAT to wear. Ok Daniel, got to go ... I've a feeling something's about to cum up. Bye.\" He rang off. \n\nI thought my mouth was about to be filled but it wasn't Mr Jordan who was about to cum. \n\nDave was getting almost frantic in my left hand and looking in his face I could see that he'd been desperately holding back. \n\nPulling his cock from my hand he reached across his body with his left and grabbed a fistful of my hair, and pumped his engorged shaft with his right, his glans heavy on top of my head just above my hairline. \n\nWhile I held the tip of his Dad's cock in my mouth, Dave pumped spurt after spurt of hot semen onto my head. \n\nIt sat there a moment then slid in a big lump down my face past my left eye to my chin, landing as a dollop on my left breast before sliding further onto my jeans thigh. And still he kept pumping, more and more, now moving his dick to the other side of my hair before oozing the last few gobs of cum onto my forehead between my eyes, and onto my left cheek avoiding where his Dad's equally huge tip fucked my mouth. \n\nI could almost feel myself cumming, but was interrupted by a sudden tensing of Mr Jordan and a foretaste of semen splashing onto my tongue, followed by a huge gout of sperm spraying into my mouth. Opening my mouth as wide as I could and tilting my head back I felt two strong hands gripping me roughly by the hair and while Dave's flow petered out his Dad's just sprayed and sprayed hot thick and slimy, covering my face where Dave hadn't. \n\nMy left hand was clamped firmly between my thighs while my right held Mr Jordan's left bum cheek, so hard and hot and muscled beneath my fingers. \n\nFinally they were both empty and Mr Jordan wiped his cock head clean on my hair, Dave copying him on my left side. \n\n\"Wow!\" was all I could say, still kneeling topless in front of them, my hair and face slathered in semen which had also dripped onto my tits and jean clad thighs. \n\nLooking up at Mr Jordan as he took his seat again, all done up, I muttered a \"thank you, Sir\" and glanced over to his son who was also discreetly put away. It was just me who was a half naked mess. \n\n\"That was quite satisfactory,\" replied Mr Jordan, but in a tone that suggested high praise. \"David will take you to the washroom to clean up. If you have a request to make of me, now is a good time; I'll consider it.\" \n\nSo I made a little request, receiving a nod in reply. \n\nLuckily there was no one else around, and Dave took me to the washroom attached to the performers dressing rooms. He stayed, and I could see him in the mirror watching me while I fished my phone from my bag and took a few mirror selfies, topless with face and hair glazed in thick white semen. Putting the phone on the counter I used damp paper towels to wipe my face, tits and belly. Not knowing what to do with the spunk in my hair, I left it for the moment, instead scraping the semen off my jeans with my fingernails before wiping the damp cloth clean. \n\n\"You look incredibly sexy covered in cum, and you look incredibly sexy cleaning up.\" \n\nIt was a statement, nothing more. \"Thank you, Dave.\" \n\n\"What made you say you were my pet?\" \n\n\"I suppose I got caught up in the excitement, the eroticism,\" I replied, sliding my bra up my arms. \n\n\"No! Don't get dressed yet. I'm still enjoying looking at you. You really do have very nice tits.\" \n\nI smiled at his reflection in the mirror and stood a little straighter, pulling my shoulders back. \n\n\"I want to see you naked.\" \n\nI smiled again at Dave's reflection and leaned forward, my hands on the counter. I wanted to hear him say it more directly, to make it an order. Looking in his eyes I knew he understood my needs. I waited patiently. \n\nTilting his head slightly to the left as if considering me, Dave waited, too. \n\n\"Undo your jeans, Miss Kay.\" Dave picked up my phone. \n\n\"Yes Sir,\" and still facing the mirror above the basin I undid the button, my fingers pressing against my pussy as they drew the zipper down. Dave appeared to be filming me. \n\n\"Take your jeans off, Miss Kay.\" \n\nStepping back and out of the sandals I leaned forward, bending at the hips, and peeled the denim down my thighs and below my knees then stood up, lifting my legs to step out of the jeans before kicking them away to my left. I didn't think Dave would approve of my sensible cream coloured bikini cut cotton briefs, but his orders for no knickers didn't apply until Monday. \n\n\"Take your knickers off for me, Miss Kay.\" \n\n\"Yes sir, I'll take my knickers off for you David Jordan, your teacher Miss Kay will get naked on your orders, David Jordan.\" \n\nFuck it felt good to say that and I could feel the excitement boiling inside me. \n\nSmiling again at his reflection I slid my hands down my hips inside my briefs and pulled them to my knees, letting them drop to the floor. I knew Dave could see my naked bum quite clearly being only a few steps away, but the mirror was too short to let him see my neatly trimmed shaped dark bush. I could hardly wait to show him. \n\n\"Will you get naked any time I order it, Miss Kay?\" he asked, possibly surprised at my eagerness. \n\n\"Yes, David Jordan. We know your fathers orders and I trust you both. I promise to strip naked on your orders any time you say, David Jordan.\" I couldn't wait any longer, and turned to face him. \n\n\"Nice. Very nice.\" \n\nDave looked my body over, slowly, calmly, appraising. \"You'd be a great soft porn pin-up, Miss Kay,\" panning the phone slowly from head to toe then back. \n\nI just grinned. If only he knew that I'd already done that as a teenager of about his present age. \n\n\"I'm going to fuck you. Do you consent, Miss Kay?\" \n\n\"Yes, David Jordan, I consent to you fucking me.\" I wondered what it would feel like to have that massive beautiful cock inside me. \n\nIn answer, Dave put down the phone and stepped up to me, grabbing my right knee in his left hand and raising my leg so high my thigh was against my ribs, while undoing himself with his right. A couple of pumps and he was already hard enough, and without ceremony thrust his swollen manhood straight into my hot wet willing cunt. \n\n\"Oh fuck!\" I muttered, wrapping my arms round his neck, responding to his hard strokes moving my hips in time, inviting his huge length deeper. He filled me so beautifully, stimulating my insides, and I felt his strong right hand grab my boob roughly, squeezing the breast then the nipple before twisting it. I gasped in pleasure and he moved to squeeze my throat and the pleasure intensified as I held my breath against his grip. \n\nI have no idea how long he kept fucking me. I lost count of my own mini orgasms sweeping through me, tightening the walls of my vagina against the massive intruder, but eventually he stiffened, and with a grunt unleashed his young hot seed deep inside me until I could feel it spilling out onto my thighs. He spurted over and over, pumping thick cum deep inside, every thrust of his huge cock squeezing waves of his sperm from my overflowing pussy and down my wet thighs. \n\nWhen he was empty he pulled out, and without instructions I dropped to my knees and licked and sucked his gorgeous member clean, wiping it dry with my hair. \n\nDave stepped back. \"Thank you, Miss Kay, You can leave as soon as you're ready.\" And with a quick grin he was gone. \n\nTo be continued ..."
    ],
    "authorname": "AndreaSubbie",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism",
        "teacher",
        "student"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/andi-and-the-unruly-class-ch-01"
}