{
    "title": "Pinch Hitter Ch. 01",
    "pages": [
        "This is a work of erotic fiction. \n\nAll characters in the story are over the age of 18. \n\n~~~~\n\n\nMy fascination with shemales had cost me my first marriage. I guess if I were to be honest with myself I would have to admit that the marriage was doomed to fail anyway. Barbara was as close to being asexual as a person could get, and in addition she was bitchy and selfish. It was not a combination that lent itself to a happy, successful union. \n\nMy desire to be taken by a 'well endowed woman' soon outweighed my ability to suppress it. When I brought up the subject of her pegging me she went through the roof. Shortly thereafter she found my stash of shemale DVDs and threw them all around the bedroom (and through a closed window), called me a \"fucking freak\", packed a bag and left. When I came home from work the following Monday, all of her stuff was gone. I was served with divorce papers by the end of the week. We were officially divorced six months later and I never saw her again.\n\nA couple of years later I met Sharon. Sharon had recently extricated herself from an abusive relationship. I guess I was her rebound guy, but we had a connection, a chemistry, and we both knew it right away. We found out a few weeks after we met that she was pregnant. (Yes, we made love on our first date). Our daughter Krista was born months later.\n\nSharon was completely different than Barbara had been. She was all about 'us', and all about having a happy marriage. She was always willing to do whatever it took to make me happy, and I in turn did the same. Because of our willingness to please the other, our marriage blossomed.\n\nSharon never denied me anything I desired from her sexually, and I wanted a lot! Three years my senior, she had a beautiful head of wavy, shoulder length auburn hair, big green eyes, and a classic hour glass figure. Don't get me wrong, she wasn't a \"Barbie\" by any stretch of the imagination. Like most of us she had a little extra weight here and there, but she wore it well. Her face seemed to be chiseled without being harsh. Sharon had full, plump lips that were always in a smile, and loved to be pressed to mine. \n\nBut it was her confidence in herself and her comfort with her own appearance that I found to be the most sexually appealing. She was a very sexy woman, and I was blessed to have her as my wife.\n\nOne night while Sharon was riding me cowgirl she placed her face close to mine and whispered \"I know.\"\n\nConfused, I looked at her and asked \"Know what?\" \n\n\"I know about your fantasy.\" Sharon continued to slide her greasy pussy up and down the length of my cock. She kissed my ears and neck while pressing her tits into my chest.\n\nSeveral moments passed in silence before Sharon stopped fucking me and said \"I know you want to be fucked in the ass by a shemale.\"\n\nI froze. My mouth was suddenly dry, my erection started to wilt, and I thought for sure this marriage would meet the same fate as the last.\n\nSharon was quick to detect my fear, but she never stopped sliding her pussy up and down my cock. \"It's okay baby\" she soothed. \"Don't stop what we're doing here. Keep fucking me with your beautiful cock.\"\n\nI was relieved, temporarily at least. I continued to stuff my cock into Sharon's pussy until we had both cum.\n\nAs we held each other in our post coital glow, I asked \"How did you find out?\"\n\n\"You didn't clear your browser history\" she said without a hint of anger in her voice, her eyes fixed on mine.\n\nI closed my eyes in self disgust. I NEVER forgot to clear my browser history.\n\n\"I'm sorry honey. I know you're disappointed in me. I'll stop, I promise.\"\n\n\"Oh baby, I'm only disappointed that you didn't tell me about your need. I would have helped you out\" she purred while dragging an index finger through my chest hair and circling a nipple with a painted nail.\n\n\"Really. You would have helped me out.\" I stated sarcastically. \"How? Do you know a shemale?\" I asked, trying to break the tension with a little levity.\n\n\"No silly! You just want to be fucked by a girl with a cock, right?\"\n\n\"Basically, yes\" I answered.\n\n\"I can do that for you. Baby, I would LOVE to do that for you!\" she answered enthusiastically as her left hand descended between my legs, past my cock and balls and began massaging my asshole.\n\nMy eyes got wide at her words. \"You would do that? For me?\" I asked incredulously.\n\n\"Of course I would Dave. You're my husband and I love you. It wouldn't be exactly the same as being fucked by a real cock, but I think I could be an adequate substitute. A \"pinch hitter\" if you will. I want to make you happy, and if I can make you happy by helping to fulfill your fetish, then I don't see a problem.\"\n\nI kissed her deeply. We had been married for several years at that point and I knew she was a wonderful woman, but I never expected she would understand my submissive side. I had difficulty comprehending her acceptance.\n\nThe issue was resolved just like that.\n\nThe following Friday I came home from work as usual. Sharon had dinner ready as she always did. We ate at the table with our seven year old daughter Krista just as usual. Sharon and I read short stories to our little girl before it was time to put her to bed.\n\nSharon took Krista upstairs while I read in the living room. When Sharon came downstairs she straddled me in my recliner and kissed me while grinding her crotch against mine, something she routinely did because it made both of us happy.\n\n\"I love our family Dave. And I love you so much\" she said before tongue kissing me madly. \"Be upstairs in five minutes.\" She was practically panting.\n\nSharon dismounted and went upstairs to our room. When I opened the door five minutes later, Sharon stood at the foot of the bed, naked, her face made up more than usual (tastefully, yet somehow still a little slutty) and with what I surmised to be an eight inch strap on dildo protruding from her groin. Her hand slowly caressed its length.\n\nI stared in total silence.\n\n\"You like?\" she finally asked.\n\nDumbfounded, all I could provide was a mute nod of my head.\n\n\"Good!\" she smiled, continuing to stroke her cock with one hand while she lazily circled a nipple on her C cup breast with the other. \"Get in the shower and clean up, then get that ass into bed because tonight, it's MINE!\" she exclaimed in an exaggerated growl. \n\nI did as I was told. When I came back into the bedroom, Sharon was on her back on the bed still stroking her girl cock. \"I can see why guys love having one of these. It feels so sexy in my hand, and I'm getting wet just by thinking about fucking you with it.\"\n\nAs my own seven and a half inch penis achieved an erect state I told her \"It looks really good on you.\"\n\n\"I'm glad you approve! Now, get over here and show me how much you like it.\" \n\nI knelt between her legs and prepared to take her cock in my mouth. \"Sharon, thank you for understanding, I...\"\n\n\"Shush, shush, shush.\" Her fingers played with my short hair as she peered lovingly into my eyes. \"I'm not Sharon, baby.\" She cooed. \"Sharon doesn't have a cock. I'm your shemale lover. What would you like to call me?\" She asked, seriously getting in to our role-play.\n\nI took a close look at all of her features from her hair to her breast size, from her eye color to the size of her cock, from her cheek bones to the color of her nail polish. I quickly analyzed all of those observations and decided I would call her Mia.\n\n\"Mia\" I answered.\n\n\"Yes. Mia.\" she stated matter of factly. \"I think you have a folder called 'Mia', don't you honey?\"\n\n\"Yes\" I embarrassingly answered. I had sorted my pics and videos into folders bearing the name of the featured girl, in this case it was Mia Isabella.\n\n\"Is she one of your favorite's, babe?\"\n\n\"Yes\" I confessed again.\n\n\"What makes her so special baby?\"\n\n\"She reminds me of you. You have the same color eyes, similar hairstyles, high cheek bones. I think she has a bigger cock though.\"\n\nThat caused my wife to smile.\n\n\"Well, what are you waiting for? You have a cock to suck.\"\n\nI didn't need to be told twice and had her strap on in my mouth in no time. This was so much better than just sucking a dildo that I held in my hand. There was a person attached to this one, and she stroked my hair and cooed her praise as I did my best to take her all in. Mia's thighs rubbed my arms while her calves caressed my back\n\n\"This is sooo HOT! Oh baby you look so sexy sucking my cock\"\n\nI could smell her arousal emanating from her hairless pink folds just below her faux scrotum. I extended my hand to penetrate her pussy with a finger or two. Just as I made contact with her labia, Sharon said \"Mia doesn't have a pussy baby.\"\n\nI was initially disappointed, but quickly realized that Mia did have an asshole! My fingers slid down her perineum, which was already coated with her natural lubrication, to her asshole. I began stroking her bud before working a finger inside.\n\n\"That's it baby. Finger my ass! Ohhh that's so good!\"\n\nI wriggled my finger in her bottom and sucked her cock until I couldn't take it any longer. Pre-cum was pouring from my cock and my jaw was getting sore.\n\n\"I need you Mia. I need to feel you inside me!\" I desperately whimpered as I made my way up her beautiful body until my cock rubbed hers and our lips met. \n\nMia grabbed a bottle of lube off the nightstand, handed it to me and said \"Get us both ready, baby.\" I lubed her cock up first than applied a generous portion to my ass. Without another word I straddled Mia's hips, gripped her cock with my right hand, and guided it to my waiting, eager hole. I lowered myself on to that rubber phallus until it was buried all the way inside my quivering rectum.\n\n\"OH MY GOD MIA!\" I cried as I fell on top of her. The feeling of having my wife inside me was gloriously fulfilling. I began rocking my hips and Mia began thrusting into me. My cock was leaking lubricant between us. I opened my eyes to see my wife gazing back at me, a huge smile plastered on her face.\n\n\"Baby, you're so fucking sexy the way you take my cock. You're a little cock loving slut, aren't you? Hmm? \n\n\"I am Mia! I'm a slut for your cock honey! God you feel so good inside of me. Wrap your hand around my cock while I ride you!\"\n\nMia wrapped her feminine fist around my diamond hard penis, and stroked while I rode her for all I was worth.\n\nWe kissed mouths, necks, ears, and shoulders the whole time Mia pounded away at my swampy ass. I frequently whispered to her how much I loved her and how good she felt. Her eyes in return twinkled and she never stopped smiling knowing how much pleasure she was giving me.\n\nBoth of us were sweating profusely, each using muscles that we didn't usually use. \n\nI could feel my orgasm rising up deep inside of me, and I was crushed that it was going to be over so soon. As I neared the point of no return, I tongue kissed Mia deeply before telling her I was going to cum.\n\n\"Don't hold back baby. Let it go! Cum for me!\" she encouraged. \n\nThat's just what I did. Mia was still holding my cock, and I emptied a gusher of cum over her soft belly all the way up to the crevasse between her tits. I spurted, and spurted, and spurted before collapsing on top of her and raping her mouth with mine.\n\n\"Mia, Mia, that was so good\" I muttered.\n\n\"I'm glad you liked it Dave. I wasn't sure you'd go through with it baby. Some men like the fantasy but can't handle the real thing when they meet a woman like me.\"\n\n\"I'm so glad you came over tonight to fuck me Mia. Thank you so much.\"\n\n\"Ohh, baby, I loved fucking you. You're a wonderful lover\" she encouraged.\n\nWith her cock still buried deep in my tunnel, I looked deep into her piercing green eyes and asked \"Will I ever see you again?\"\n\nMy wife knew what I was getting at. \"Count on it baby\" she answered.\n\n~~~~\n\nThat's how it all started. Her offer to participate in my fetish and willingness to fulfill my fantasies opened countless doors of sexual pleasure. We found I loved giving and she loved receiving anilingus. Sharon found she liked having her ass fingered and fucked, even when she wasn't Mia. We found we both enjoyed it when Sharon (or Mia) wore hosiery. Mia, when she was in a particularly naughty mood, would sometimes make me wear panties. \n\nAnd for 13 years, like clockwork, Mia made an appearance every Friday night.\n\nThat is until just over five months ago when my beautiful wife was killed by a drunk driver at 7:30 in the morning on a Wednesday leaving me a widower at 42.\n\nKrista and I were devastated. Both of us with the help of the other were able to get through the difficult days leading up to the funeral. We said our final goodbyes to her graveside and held each other as we wept, mourning our mutual loss.\n\nAfter we buried Sharon I dropped Krista off at the house and drove to the funeral of the man who had killed my wife. I sought out and approached his widow. She was a pretty dish water blonde in her mid-twenties with three snot nosed urchins clinging to her dress. \"My name is David Jacobs.\" I spoke to her in a commanding voice. \"Your husband killed my wife, my soul mate.\"\n\nI paused to prevent the seething anger I felt for her husband from spilling over onto this woman. \"But you have my deepest condolences.\" I walked away.\n\n~~~~\n\nEven though Sharon was gone, Mia still showed up almost every Friday night. Well, her cock did anyway. I was now forced to hold the dildo and stroke my own cock. It wasn't nearly as good as when Sharon did it, but it helped keep that memory of her alive.\n\nOn this Friday night, I was on my back bucking my ass against my dildo while I stroked my erection. I was lost in the pleasure I was feeling and my memories of Sharon. As I had done many times of the course of the previous thirteen years, I talked dirty to Mia as she had her way with me. \n\n\"Fuck me Mia.\"\n\n\"Make me your slut.\"\n\n\"You feel so good inside me baby. You're gonna make me cum Mia. Oh Mia! Mia! Mia!\" I breathed excitedly.\n\nThat's when I noticed the sliver of light falling on the bedroom floor from the hallway. The light seemed to flicker, like something was moving. Was someone was in the hall watching? Listening?\n\nI was too far gone to stop. My cock erupted and my semen splashed in successive arching volleys onto my chest and belly. When I opened my eyes, the light in the hall was off.\n\nAt that moment I remembered that Krista had invited Lindsey, one of her teammates, to spend the night. Krista and Lindsey were car-pooling to their community college to catch the bus for a volleyball tournament in the morning.\n\nWhich one of them had been in the hallway? What if Krista's friend had just seen me? What if she thought I was a sick pervert? \n\nI walked to the master bath, cleaned myself up, and crawled back to bed for a night of fitful sleep. My mind was racing in fear of what may have happened. This wasn't the first time Lindsey had spent a Friday night at our home. Had she been at the door? Was it Krista? How many times had this anonymous voyeur watched me act out my fantasy in the past five months?\n\nIn the morning I woke and made coffee for me and the girls. Krista and Lindsey came downstairs in their warm-up uniforms. Krista is five feet ten inches of pure athlete. She ran, did yoga, and lifted weights regularly which kept her body lean and tone. Krista's brown hair was pulled back in a tight pony tail, \"scrunchies\" holding the tail in place every couple of inches from the base of her head to the middle of her back. Her brown eyes were filled with competitive fire and flawless bronze skin positively glowed in anticipation of today's competition. At five-six, Lindsey is a good four inches shorter than Krista and somewhat more \"stocky\" (athletic may be a better term). She is a big breasted girl with thick, straight blonde hair that was always pulled back in a bushy pony tail and big blue eyes. The duo joined me for a cup of coffee and small talk.\n\n\"Morning honey\" I said with a chirp. \"You too Krista\" I deadpanned as they strode into the kitchen.\n\n\"Da-aad!\" Krista whined. \"You're awful!\" before giving me a peck on the cheek.\n\n\"Good morning Mr. Jacobs! Quit being such a poop Krista. Your dad is hilarious. He always makes me laugh.\"\n\nThis was good news. Maybe I had just imagined that someone was in the hall last night.\n\nWe talked about their chances at today's tournament as we sipped coffee from our mugs. \n\nWhen Lindsey and Krista finished their coffees they gathered their things and began to leave. \n\n\"Bye dad! We have to get going Linds\" Krista said. \"I'll be in the car, don't make me wait!\"\n\n\"I won't. I forgot my bag upstairs, I'll be right out.\"\n\n\"Have a great game! Kick some ass!\" I shouted as Krista left.\n\nAs the door clicked behind Krista, Lindsay rose to presumably go upstairs and get her bag before she abruptly turned toward me and wrapped her arms around my neck, pressing her young, firm body to mine. As she looked up into my eyes, a wicked grin came across her face.\n\n\"So...\" she paused. \"Who's Mia?\" she asked teasingly.\n\nI was busted, and scrambled for a response.\n\n\"I don't know what you're talking about Lindsey\" I answered unconvincingly.\n\nLindsey looked into my eyes for a couple of seconds before pulling my head down to hers. She slowly moved her mouth to my ear, her smooth, delicate cheek gently gliding against the stubble of mine. She whispered \"Don't worry Mr. Jacobs, your secret is safe with me.\" She kissed my cheek and ran her fingers through my hair before peering into my eyes and with a devilish grin added \"For now.\"\n\nKrista honked the horn causing Lindsey to grab her bag (which she had not left upstairs) before giving me a knowing wink and heading out the door.\n\n~~~~\n\nIt was Friday night, and again Lindsey was staying with Krista and me. The three of us had a nice dinner together. The girls went to Krista's room to study. I stayed up and watched a little TV before heading up to my room at about 11:30. The lights were out in Krista's room as I strode past. \n\nOnce in the sanctuary of my bedroom, I got my toy out of the nightstand and went to the bathroom to take a quick shower and to prepare myself for Mia's weekly appearance.\n\nI returned to my darkened bedroom and climbed onto the bed. I positioned myself on my back, multiple pillows under my neck and back allowing me to recline comfortably.\n\nI reached for the bottle of lube on the nightstand when I thought I caught movement in my peripheral vision. \n\n\"Krista? Lindsey?\" I asked. Garnering no response I resumed my preparations for Mia's imminent invasion.\n\nJust as I had finished applying the lubricating gel to Mia's cock, I flinched when I felt the bed shift as someone climbed on. It took a few moments, but eventually I was able to make out Lindsey's form in the darkness.\n\nWhen my eyes had adjusted, I could see that the young woman was naked. Her full, firm breasts were capped by very dark areola from which sprouted thick, rubbery, excited nipples.\n\n\"Lindsey honey, what are you doing here?\" I whispered.\n\nLindsey took from me the dildo I was holding and said \"Mia can't make it this week... so she asked me to come instead\" her hand slowly stroking my thigh, the distance between her hand and my cock decreasing with each pass.\n\n\"Mr. Jacobs, last Friday night wasn't the first time I'd watched you and Mia get together, but it was the first time I forgot to turn the hall light off\" she confessed, her hand now firmly grasping and stroking my erection. Her voice now full of lust, she further admitted \"I simply couldn't just watch any longer.\"\n\n\"But Lindsey... sweetheart...\" I protested, \"...you don't know what you're getting into here.\"\n\n\"I think I do Mr. Jacobs. I did some of research this week, and I think I figured out who Mia is.\" Her eyes conveyed her sorrow and her lust and her desire as they burrowed into mine. ",
        "My eyes were welling up.\n\n\"Mrs. Jacobs used to become Mia for you, didn't she?\" she asked with incredible tenderness.\n\nI nodded in the affirmative, a tear staining my cheek.\n\n\"You and Mrs. Jacobs must have really loved each other to share that kind of intimacy.\"\n\nLindsey's tongue flicked my cockhead, causing me to shudder. \n\n\"We did\" I managed to croak through my restricting throat. I missed Sharon so.\n\n\"Well Mr. Jacobs, I think you're a great guy, and I'd like it very much if you would let me take care of you. My name is Sarina, and I'm a special girl... like Mia.\" She took my hand in hers and placed it on the dildo sprouting from her pubis. \"See?\" Her warm, soft hand was still on mine as she encouraged me to touch her cock. \"Will you let me help you Mr. Jacobs?\" she asked in the sexiest purr a man could imagine.\n\nSarina is another of my very favorite shemales, a very feminine woman with big breasts and wide, luscious hips. Lindsey had done her research well. She had figured out who Mia was and how she bore a resemblance to my beloved Sharon. In the process, she had discovered she most closely resembled Sarina Valentina.\n\nI caressed Sarina's lovely face with my fingertips, deeply moved by her offer. \"Sarina, sweetheart, you don't have to do this.\"\n\n\"I want to Mr. Jacobs. I get so turned on when I watch you that I have to go back to Krista's bathroom and jill myself off thinking about you before I can sleep!\" and with that she swooped down and took my cock into her mouth. She sucked and moaned on my member while she cupped my balls with one hand while her other guided me in stroking her strap on. I very quickly surrendered to this young vixen's loving seduction.\n\n\"Are you ready for me to fuck you Mr. Jacobs?\" she asked wantonly.\n\n\"Oh Sarina, I am so ready for you. But please, don't be so formal.\"\n\nSarina smiled victoriously.\n\n\"Sugar, you won't regret this. I'm probably not as good as Mia, but I AM enthusiastic!\" Her smile was a mile wide now, and her eyes were on fire with anticipation.\n\nI lie back on the bed, spread my legs, presenting a wordless invitation for Sarina to take me. Sarina pushed my legs back and told me to hold them. Much to my surprise, she then lowered her head and rimmed me for all she was worth. For a girl of only 21, she seemed to know her way around a man's ass. She licked, slurped, poked and prodded my backdoor with her tongue until I was well lubricated. \n\nThen Sarina positioned herself on her knees between my legs and began feeding her mounted dildo into my waiting ass. Of course, this was old hat for me, and Sarina faced little resistance from my sphincter. When I felt her harness press against my ass, she lifted my legs and pushed them toward my chest to tilt my hips up toward her giving her a better angle to penetrate me.\n\nAnd then she was fucking me. We didn't make love. No, no, no. Sarina fucked me like a woman possessed. Her generous tits jiggled and shook on her chest as she drove her cock into me hard, deep and often, which was exactly what I needed.\n\nSarina hammered my ass hard for several long minutes before commanding me to \"Jerk off while I fuck your sweet ass, sugar!\" \n\nI wrapped my hand around my cock and began stroking in time with her thrusts. Having a woman attached to the cock fucking me was so much better that trying to do it by hand.\n\n\"I love the way you're fucking me Sarina. Ream me. Fuck me hard! So good! So good!\" I babbled.\n\n\"Sugar, you feel so good around my cock. Your ass is so tight. I'm gonna cum just from fucking you!\"\n\nSoon Sarina was wailing as a powerful orgasm sped through her. She fucked me for several more minutes.\n\n\"God damn it! This is so fucking hot! I hope you're gonna cum soon sugar... because I'm going to... and I want to share it with you!\" she panted. Sarina kept on pounding into me, her thighs slapping against my ass.\n\n\"I'm so ready to cum for you Sarina. Tell me when baby!\"\n\n\"Now! Cum now!\"\n\nI stroked myself with fervor. Soon my seed erupted from my cock and landed everywhere on my torso. Sarina shuddered and wailed as she was again rocked by a powerful orgasm.\n\nWhen she recovered a little from her massive cum, Sarina unceremoniously pulled her cock out of my clutching ass and fell on top of me, writhing her body and smearing my cum all over her tits. She plunged her tongue into my mouth and tried to taste my tonsils. Separating she moaned \"Jesus Christ sugar, you may be the best fuck I have ever had!\"\n\nSarina inched up my body and offered one of her sperm coated tits to my mouth. I eagerly licked it clean. I then cleaned her other breast too, making sure both of her fleshy globes and her rubbery sensitive nipples were spotless.\n\n\"You are a DIRTY little boy, aren't you sugar? My, my! I never would have suspected you to be such a little slut!\"\n\n\"I am what I am Sarina. Beautiful girls like you and Mia just bring it out of me.\"\n\nSarina kissed me again before climbing off the bed. Once firmly on the floor she unstrapped her harness and stepped out of it.\n\n\"Do you think I'll be able to see Sarina again?\" I asked.\n\n\"Sarina will definitely be back for some more of that ass!\" Lindsey kissed me lovingly, adding \"And I have it on good authority that Sarina would love to have your beautiful cock in her ass too.\"\n\nLindsey paused before again kissing me affectionately on my mouth. She looked into my eyes and said \"Mr. Jacobs, I probably can't be here every time you need a good fucking, but I know someone who may be willing to help out when I can't be here. Her name is Mariana. I'll talk to her for you\" \n\n\"Thanks Lindsey. Hey, one question before you go. Where did learn to fuck a guy like you just did?\"\n\n\"That's the first time I've ever fucked a guy's ass\" she confessed before leaning over and kissing me deeply and passionately, her tongue probing the depths of my mouth.\n\nLindsey separated her mouth from mine. Her eyes were on fire with wicked lust. She gave my cock a final stroke before telling me \"But I've had lots of practice fucking Krista.\""
    ],
    "authorname": "npanxx",
    "tags": [
        "older man",
        "strap on",
        "strapon",
        "pegging",
        "friend",
        "fantasy",
        "fetish"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/pinch-hitter-ch-01"
}