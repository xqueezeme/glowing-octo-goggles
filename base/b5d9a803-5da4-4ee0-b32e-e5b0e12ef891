{
    "title": "Queen Yavara Ch. 01",
    "pages": [
        "Editor's note: this story contains scenes of non-consensual or reluctant sex.\n\n*****\n\nPart One: Metamorphosis\n\nPrologue\n\nYavara sat upon a black throne. She closed her eyes and savored the discordant symphony of wails and moans, the drone punctuated by the clanking of chains and the cracking of whips. Exhaling contentedly, she opened her eyes. Below her laid a spectacle of depravity, churning masses of flesh oscillating to some unheard cadence, their glistening forms bathed in the crimson torchlight. The prisoners' eyes were wide with horror, as what was being done to them was horrible, but comingled with that horror was a terrible ecstasy. Oh, but they tried to deny it, as high-elves held dignity over all things, but even they, the noblest of races, could not conceal their fall from grace. And what a fall it was, for they'd spent their lives so very high in the world, assured in their perch of superiority over all living things. \n\nYavara sighed. Was there anything as beautiful as watching the angelic succumb to the worst of violations? To see the look in their eyes when they realized that they not only enjoyed the abhorrent things being done to them, but they loved them. She often found that the noblest were prone to the deepest of depravities. She would know that firsthand. They would resist, oh they would, but they would all break eventually. They could not deny themselves, after all. Then Yavara would take off their shackles, and she would not fear their escape, nor their retribution. For the creatures that emerged from Yavara's dungeon were not the frightened alabaster beauties that had been dragged into it. No, their metamorphosis was complete, and the expressions they gave her were not of terror, but of understanding, and desire. Of hunger. But not yet. No, these poor souls still had to be broken, and the breaking -the fall-, was truly the most alluring part of the process. \n\nYavara smiled from the corner of her mouth as she savored the sight. Her hair was as black as night, her skin was bronze, her face was structured with high cheekbones and full lips, and her expressive eyes were adorned with blazing orange irises. She wore a thin black corset that ended before her navel, and started just above her areolas, giving the appearance that her large breasts might burst from their constraints at any moment. Her thighs were thick and bare, and her modesty was barely kept by a thin black leather thong that disappeared between her shapely cheeks, the trunks of which ended thigh-high into leather boots. She pushed a strand of hair behind her pointed ear, and adjusted the crown that adorned her head. She was the Dark Queen, monarch of Alkandra, the realm of beasts. When Yavara was younger, her complexion was much different; she had hair so blonde it almost appeared white, skin as pale as porcelain, and eyes like the ocean. She was a high-elf once, a royal daughter of the very people she now forced into perverse subservience. But that was before she was taken by the orc, before he had his way with her beneath the canopy of the Great Forest. Only the creatures of the woods heard her shrieks of terror and pain, and only they witnessed as the shrieks of pain turned to cries of pleasure. Only they witnessed her metamorphosis, her... fall. Yavara's fingers began to explore herself as she remembered the moment fondly.\n\nChapter One\n\nYAVARA\n\nI was on route to Castle Thorum, the cool fall wind gently blowing my dress against me, the dry leaves crunching beneath my sandals as I walked down the dirt road. I adjusted the bow that was slung across my shoulder, and pulled a bottle from my satchel. I made my way to a nearby stream to quench my thirst, and soak my aching feet. The stream was still and clear, the afternoon sun shining off it in such a way that the water acted as a perfect mirror. I took a moment to admire my reflection. \n\nMy straight blonde hair was pulled up in a ponytail, revealing two pointed ears on the sides of my head. My high cheekbones, full lips, pointed nose and big blue eyes had gotten the attention of many potential suitors in the past, though what distinguished me from my female peers was my body. My lanky teenage frame used to be a point of embarrassment for me, but my mother always told me I would grow into it. Her encouraging words proved to be prophetic, for as my late puberty bloomed within me, my lanky body transformed into the striking form of a woman. The sun beaming on my white dress gave it a translucent appearance, and I could see the pink points of my nipples clearly from the centers of my robust breasts. My bosom was pressed tightly against the fabric of my dress, which narrowed as it ran down my muscular torso before widening at my hips. I narcissistically turned my body to get a look at my best asset. The fabric of my dress creased at the peak of my backside, giving off the hint of posterior cleavage as the dress flowed down and around my thick, perfectly formed cheeks. \n\nYou self-absorbed bitch. I thought to myself, smiling. I dipped the bottle in the stream, sending ripples from the point of contact. My distorted reflection stared back at me, my features shimmering ethereally in the near-dusk sunlight. A ripple moved across the reflection of my eye, and for a brief moment my blue irises appeared orange before changing back to blue with the next ripple. The auburn cast of the sun was undoubtedly the cause, and the anomaly was forgotten with the relief of washing my parched throat. \n\nI continued down the path to Castle Thorum, making haste for a campsite before light failed me. It was unusual for a princess of the Highlands to venture alone, but I had proven myself more than capable at dealing with threats. The Noble Court objected to my plans of a solo venture, but my father came to my aid. \"Yavara is the most skilled bowman the kingdom has ever seen! I have witnessed her take down a platoon of orcs single handedly, which is more than any of your sons can say. She's young; give her a chance to explore the world alone before the burdens of age confine her.\"\n\nDespite his defense of my choices, Father was curious about why I would not take a traveling companion. I told him that I wanted to test myself -and that was true-, but the real reason I wouldn't take a squire, was because I did not expect one to remain loyal to me. My father jealously guarded his daughters, and being his second born, my only real value to the monarchy was my virginity; I certainly didn't need one of Father's lackies sprinting back to Bentius the moment I laid with a handsome blacksmith, or a rugged stable boy. Leveria had the luxury of inheriting power, but I would have to marry it. Of course, it wasn't my power I was consolidating with marriage, but Father's, and in time, Leveria's. I shuddered to think of the day I would have to call my elder sister, \"Your Highness,\" for Leveria would make sure I did. I never understood her animosity toward me. Yes, Father doted on me as the son he never had, but in the end, I would still be married-off to some lordling with soft hands. My future was not my own, and that's why I was taking this journey. This was one last breath of freedom before the shackles of marriage confined me, one chance to find the passion of my youth before it was sold for political favors. Oh, I could prick my finger on my wedding night and leave the evidence of my maidenhood on the bedsheets, but it would have been long spent by then. \n\nI fantasized about my ideal lover while the sun sank behind the Spearhead Mountains. He would be strong, tall, maybe human; good heaven knows Father would die if I laid with a human! Perhaps one of the nomadic dawn-elves, or maybe even a dwarf, if I crossed height from my requirement list. Anything but a high-elf. How could I live a full life without tasting its variety? Such prudes were my people about purity and blood-lines. \n\nI relinquished my pack with a sigh, wiping the sweat from my brow and assessing the campsite. To the west, the Great Forest stretched endlessly, a sea of foliage that turned from coniferous to the perpetual autumn of the Maples. The beasts that resided there marked their territory by geology or fauna, and if I remembered correctly, the Maples were mostly occupied by factious orc tribes. None would be daring enough to venture this close to the Highland border; not like those tribes of the Pines and the Tundra. Still, I kept my keen ears open, and my keener eyes more so. \n\nI was staking my tent when I heard a crack in the woods. My head bolted upright, old instincts telling me that such a sound was not simply the ambiance of the forest. My honed reflexes took control, and I silently dashed behind the cover of a fallen tree, and drew my bow. I raised my head from cover just enough to peer into the darkness, and notch an arrow. Another crack, this time closer. I shifted my footing and looked for the source of the sound. Nothing. Silence. The moon was obstructed by the clouds, blanketing the world from its spotlight. Another crack, this one was only a few yards away. The clouds parted, revealing my target. I smiled to myself. \n\nFool!\n\nThe arrow met its mark in the darkness, followed by the satisfying shriek of a mortal shot. The orc dropped, the thud echoing throughout the forest. I notched another arrow and approached my kill. The arrow was deep in the orc's neck, black blood flowing from his nose and mouth. His eyes writhed frantically in their sockets before staring vacantly into the night sky. Then he was silent. It was far from the first time I'd killed, and I was long-since numb to the guilt of it. Truth be told, I never did feel the guilt. High-elf babes were taught that beasts are unfeeling, unthinking brutes, and not worthy of elven mercy, but I knew better. They were intelligent and sentient, and that's what made killing them such a thrill. What that said about my state-of-mind, I didn't know. I wasn't a psychopath, for I cared deeply for those close to me. Elena most of all. \n\nI examined the body before me, my mind elsewhere. Elena was my best friend since childhood, my confidant and coconspirator during my cutthroat preteens, and my rock of solace during my uncertain adolescence. If there was anyone I would have taken with me on this journey, it would've been her. Elena, who had willingly taken the ultimate vows of the rangers, forgoing the life of comfortable aristocracy she'd been born to. It tore my heart out when she told me, and it enraged her noble mother, but Elena was resolved. It was nearly two years ago to the day when she swore her oath, and I lost my best friend to these woods. I wondered if she thought of me from time to time as she patrolled. I wondered if she was thinking of me this very night. \n\nOne less for you, Elena. I thought as I pulled the Nadi haft from the orc's neck. Elena killed with terrifying proficiency, but she never took joy in it. I guessed that made her the perfect ranger, who played diplomat as much as soldier with the tribes of the Great Forest. Diplomacy. I thought with contempt. Backstabbing and intrigue were Leveria's proclivities, while I sought to see the face of my problems. It made it incredibly easy for her to manipulate me. \n\nI heard distant yelling, and the squeal of a blown whistle. I grinned to myself. Maybe it was a good thing Leveria was born first; diplomacy was fucking boring. Time to hunt. \n\nI silently packed my gear and slipped into the forest, following the sounds of the boisterous band. It wasn't long before I was upon them, and set myself to finding a vantage point. I climbed a large tree, my dexterous limbs carrying me silently into the canopy, where I perched against the trunk, my body black against the black maple bark. There were ten of them, all heavily muscled, with the tallest one standing over eight feet high, and the smallest one just under seven. These were no Maple orcs. These were northern beasts, almost big enough to be small trolls. I'd never seen of their like before, and my heart quickened at the challenge. \n\n\"I fucking hate Gorg! Do you think he's out fucking a pig somewhere?\" Said the smallest one. \n\n\"That's no way to talk about your mother.\" Another chortled. \n\n\"He's probably got his foot stuck in another one of your bear traps. Fucking moron would forget to breathe if his lungs didn't do it for him.\"\n\n\"Silence!\" Said the largest of the pack. The orcs stopped just below me. I breathed slowly, notching an arrow from my perch and aiming it at the large one's skull. I focused on my heart rate, slowing it down, feeling my flesh sing alive as I straddled the branch. I felt a tingling between my legs, a primal reaction to the preeminence of death. Eat, sleep, fuck, kill; instincts comingled in times of stress, but I'd be a liar to say I didn't savor it. I rubbed myself against the stiff bark, biting my lip, steadying the carnal energy, savoring the perfect moment before the kill. The orc's head suddenly shot upright, ruining my shot. His nostrils flared, his grim mask turning into a wild smile. \n\n\"Elf.\". \n\nShit\n\nI let the arrow loose. It whistled through the air before stopping abruptly between the thumb and finger of the big orc, inches from his eye. I didn't have time to gawk at the reaction. I loosed three more arrows, this time striking out at the lesser foes. I was greeted with the sound of three gurgled shrieks. I notched another arrow and let it fly, this time through the skull of the smallest orc before jumping to the branch of a nearby tree. \n\nThe orcs were in complete disarray, thrusting their spears wildly and shooting blindly into the canopy. The big orc launched his spear inches from my head before I jumped to the cover of another branch. I disappeared into the blackness of the canopy, climbing gingerly to avoid moving the branches. I waited in the hollow of the trunk, watching as the beasts hacked through the underbrush. One of them ventured too far from the rest, and I put an arrow through his heart. He fell silently to the forest floor, his body disappearing into the thicket. Two of the orcs were standing a bit too close to me for comfort. I notched two arrows and loosed the string. The Nadi hafts forked through the air and met their marks, prompting a duet of screams. \n\nThe big orc's head whipped around, his bulging eyes finding me in the dark. He launched another spear that would have blown through my head had I not ducked at the last second. I jumped to another branch as two crossbow bolts whistled past my ear, ducked beneath the cover of the canopy, and raced up a trunk, breaching the ceiling of leaves. I stopped when I heard their confused yells, and once again focused on slowing my heartrate, waiting for the perfect moment between beats to fire. A gust of wind caused the tree to sway, and I risked a little movement to center myself. The branch I was perched on cracked under my weight, and I leapt to another just as it gave out beneath my feet. \n\n\"There!\" Roared the big orc as he gestured to me, now plainly silhouetted against the moonlight. He launched another spear at me as I danced to another branch. Two orcs began to climb my tree at an alarming rate, forcing me to divert my aim from the large orc. I put an arrow in each of their eyes, then stared down my final target. The big orc stood below me, gazing up defiantly with his arms outstretched. I notched two arrows this time, aiming above and below. He saw, but he didn't move. Well, that was fine with me. An arrogant orc is a dead orc, and if he wanted his balls shot off, then I- the branch beneath me gave way with a deafening crack. My stomach lurched, my breath choked, and I desperately grasped for something to catch my fall as I tumbled into darkness. \n\nI awoke to the blurred sight of a camp fire, the sounds of crackling wood and the smell of cooking meat. My hands were bound tightly behind my back, and my legs were bound together at the thighs, shins and ankles. A large foot thumped down inches from my face, and the big orc squatted to meet my gaze. \n\n\"Hello, she-elf. I am Brock, leader of the Terdini tribe.\" Brock spoke with a deep, graveled tenor. The Terdini's reputation was not exaggerated. Brocks muscles bulged from every part of his body, corded with striations and enhanced with veins, his frame twice the width of an elf male. His hair hung in thick dreads from his scalp, his nose was wide and pierced at the septum, and his irises were completely black, blending in with his pupils. Two large canine teeth protruded from his jaw and rested across his upper lip, completing his ferocious portrait. I stared blankly at the orc, trying my best to mask my terror. I kept my lips sealed and acknowledged him with a nod. \n\n\"It is rude to not introduce yourself, even to your enemies, she-elf. I have told you who I am, now you will tell me who you are.\" The massive orc twirled the arrow he snatched from the air between his thumb and forefinger. \"This arrow is made from the wood of a Nadi tree. Only highborn elves get to use such weapons. I threw it in the flames, but it did not burn. I tried to break it, but it would not yield. But if I throw you in the flames, she-elf, you will burn. And if I try to break you, you will snap. Now talk.\"\n\nI didn't doubt his sincerity, but the fact that I wasn't on a spit, screaming as my flesh roasted meant I was being given a chance. He wanted something from me. I willed moisture back into my mouth, and summoned all the bravery I had. Orcs respected strength, and killed weakness. I'd already demonstrated much of the former, but even a hint of the latter might be my end. \n\n\"I am Princess Yavara Tiadoa, daughter of King Clartias Tiadoa, ruler of the Highlands.\" I said, managing to tilt my chin imperiously. \n\nBrock looked at me with a bemused expression for a moment, then burst into laughter. \"The balls on you! Most of my captives tell me they're related to some lord or merchant -you know, to make it believable-, but you go straight to the fucking top!\"\n\nBrock roared with laughter at my supposed audacity, but I regarded him calmly, waiting for him to settle down. When Brock's laughter subsided, I looked him levelly in the eyes and spoke in a matter-of-fact voice. \n\n\"Brock, chieftain of the Terdini tribe, you will find my royal seal and letters of correspondence with my father in my satchel. Now I know you can't read but-\"\n\n\"I can read, she-elf.\" Brock cut me off before he rummaged through my satchel. He pulled out a few letters with his massive hands, and held them close to his face. In times of great stress, emotions run rampant, and I was struck with the odd desire to burst into laughter at the sight of this enormous orc adjusting the distance of the paper from his eyes like a near-sighted cleric. Thankfully, I suppressed the urge, and instead observed Brock clinically. There was an intelligence to him that I had never seen before in an orc, and a small hope began to grow within me that I could reason with him. \n\nBrock's eyebrows raised with astonishment as the evidence of my identity became overwhelming. He put the letters down and looked me over, his eyes running across my body before staring daggers into my eyes. \n\n\"It's very fortunate that you have these letters, Princess Yavara. I don't think you would like to know what I had planned for you after you slaughtered my men.\" Brock rubbed his chin, pondering his situation. \"I assume your father would pay a high price for you, maybe the highest ransom in the kingdom. And I suppose he would prefer you remain intact. Are you a virgin?\"\n\nI winced at the implication of his question, trying to ignore the way Brock's gaze drifted south. I swallowed the fear that built in me, and scoured my mind for useful words. The irony that I would have to rely on diplomacy to save me wasn't lost in the moment. I didn't doubt Leveria would've had Brock chaffering her to the nearest inn on a fucking palanquin were she in my place. \"I am a virgin, Brock Terdini, and as the second-born daughter of the Highlands, my virginity is my only real asset to my father. Elven marriages demand a virgin bride, and kingdoms are forged and strengthened through marriage. My father is a loving man, but he will pay you nothing if you return me a defiled woman.\"",
        "\"He doesn't sound like a loving man.\"\n\n\"He's a pragmatist.\"\n\n\"You mean an asshole.\" Brock barked, \"And what a sad future he has set up for you. Highborn blood, but not to be a queen. A life of feasts and pageantry, but not one of power. Sounds boring, Yavara. A warrior like you, resigned to sucking off some lord and pumping out little elflings. I don't think you want that; highborn ladies don't usually run through the forest shooting at orcs.\"\n\nBrock's demeanor changed rapidly, his calm eyes grew wide, and a greedy grin crept across his face. Before I could react, Brock's hand shot out and grabbed my face, his sweaty palm pressed against my nose and mouth, filling my sinuses with his stench, killing my breath. Terror gripped me as assuredly as his hand did, and its paralysis betrayed me as Brock lifted me to my knees. \n\n\"No, highborn ladies don't do that at all, but I guess you aren't like them, are you?\" Brock's voice was thick in my ear, cutting through the drumming in my temples, \"No, you're a wild one. You want to get bloody with the beasts and stare death in the eye. I like that. Now, I've had my share of lowborn elves, but I've never tasted royalty before.\" \n\nI screamed against Brock's muffling hand, and he chuckled. His other hand grabbed my bodice, and tore off my dress. My scream rose. The rags slipped down to my waist, exposing my breasts to the cold night, the nipples taut and prickled. I felt his breath against my chest, hot air caressing my vulnerable node. I went deathly still, prey instincts taking over. His lips wrapped around me, his teeth bit gently, and he sucked from my breast, pulling the porcelain globe from my chest in a greedy slurp. I tried to fight him then, squirming and thrashing like a fish in my binds, and his hand was the hook I dangled from, holding my head up, forcing me to arch my back and press my breasts to his consuming mouth. I could feel his tongue circling my nipple, his rough lips pulling at the dark flesh surrounding it. His other hand squeezed tightly upon my free breast, deforming it with his fingers until they were lost in my succulence. The he released me, and before I could find relief, I felt his callused hand slide down my stomach. No-no-no-no-no!\n\nBrock's thick fingers forced their way between my legs, easily dividing the rigid press of my thighs. I gasped as two of his fingers found my outer lips, my body stilling with the shock of it. Such an intimate place, never before touched by another. The violation struck me to the core. I strained beneath his stinking hand to scream something, anything that would make this stop, but his grip remained air-tight. He forked his fingers to spread my lips open, and plunged his thick middle digit inside me. The pain cut through me like a knife, hot and jagged, sending a scream through me that breached the muting palm. \n\nBrock laughed. \"Don't be so dramatic, Yavara. It's just a finger, your father can at least compromise on that! Here, taste yourself.\"\n\nBrock withdrew his violating finger, squished my lips open, and forced me to taste the blood of my chastity. With his finger secured in my mouth and pressing onto my evading tongue, he used his free hand to continue plundering my virginity. Two of his fingers kneaded my inner flesh, the others spreading me open, and the thumb toying with my hood until my clit was compelled forth. He teased the sensitive bead with surprising gentleness, each pass of his finger causing it to engorge more. A hot feeling began to stir in my nethers, a feeling accompanied by a flush of wetness that saturated my loin cloth. Then came an ache, a deep emptiness within me that yearned for... I wouldn't dare think it. I'd been so lost in my terror that I'd forgotten my elven pride, and Brock had breached my defenses without resistance. My body began to betray me. My bound body ceased its thrashing, and began to sway in a languorous dance, my hips shifting with a sensuality I did not know I possessed. My tongue no longer avoided Brock's finger, but licked it curiously, and my jaw no longer locked, but relaxed to bring suction about him, drawing my lips sensually. I did not know why my instincts compelled me do these things. \n\n\"Oh my, look at this.\" Brock sneered, \"A highborn she-elf seduced by a disgusting orc. I wonder what your father would think about his precious prim daughter turning into a vulgar slut with just the motion of my hand.\" \n\nNo, Yavara, fight it! You must fight it! I urged myself, cutting through the noise of my fear and arousal. \n\nBut it feels so good. Why should I resist it? I should just give in to it, let the orc have his way with me. Who knows what he'll do? A voice from within preached my carnal desires to me. The voice had the tenor of my own, but rang through my head with a foreign seductive undertone. It was not the voice of someone else, it was my own, but it was... different. \n\nWho are you?!\n\nI'm you, Yavara. I'm the part of us that's been sleeping this whole time. I've been waiting the eighteen years you've been on this planet to have a voice in this head of ours, and now that I have my chance, I'm never going away. My god, do those fingers feel good! The way they move inside me... maybe he'll take my virginity? I've been saving it for so long...\n\nNO! I bit down hard on Brock's finger, tasting the foulness of his blood as it poured from his knuckle. Brock grunted, wrenched his finger out, and struck me so hard that I spun in the air before landing face down in the dirt. \n\n\"Oh, you fucked up. I was going to have my little bit of fun and then ransom you back to your father. Now Yavara, I am going to hurt you.\"\n\nBrock tore the binds off my legs and lifted me from the ground, his thick hands pushing on my shoulders. He seated himself on the grass and pulled me on top of him, facing away. I felt a hard, throbbing sensation building between my thighs, and looked down. I couldn't suppress the gasp. His cock was as long and thick as my forearm, growing more rigid by the second, and pulsing with life. A froth of milky lust dribbled from its apex, and ran down its impossible length. \n\nSweet fuck, look at THAT! Remember when we spied on Sir Jamian at the bathhouse, and thought he was the pinnacle of masculinity? He an appetizer. This... THIS is the main course, and I'm drooling from two sets of lips. Oh, give-it-to-me, give-it-to-me, give-it-to-\n\nAre you fucking crazy?! That will tear us in half!\n\nGod, I hope so. \n\n\"Please Brock, my father will do anything to get me back, but if you take my virginity, he will pay you nothing!\" I whimpered between sobs. \n\n\"Your father's more wrapped up in your cunt than my finger was, but don't worry, Princess, I'm not taking your virginity tonight.\"\n\nBrock's fully engorged cock moved back and forth between my lips, deforming the slick flesh with his tantalizing heat. It radiated into the center of my sex, promising to sate the aching desire born there. My heart was thundering against my breast, but I was no longer sure if it was from fear or excitement. My newfound duality raged within me, but I managed to keep my faculties. \n\n\"You're-you're not?\" I asked hopefully, though my new voice broached the question with profound disappointment. \n\n\"No Yavara,\" Brock grinned cruelly, \"I'm taking something else.\"\n\nAnd with that, Brock violently pulled my legs up, locked my knees under his elbows, and spread me, my heels swaying beside my pointed ears. My protest was cut short when he pushed his hands on the back of my head, forcing me to look down at what he was about to do to me. The head of his cock slid through my blushing folds, down the tender swath beneath it, then rested against the puckered center of my anus. \n\nOh, FUCK YES! \n\nOh, GOD NO!\n\n\"Brock, stop!\" I shrieked. Brock answered me with a raspy growl, and pushed harder. I babbled desperately, my voice high and pleading, saying anything that would save me. I felt my rim dilating, the sensitive resistance opening and expanding, the pressure mounting, the center of me uncoiling. Tears welled in my eyes, panic rose in my chest, I begged with a bare soul for mercy. He pushed, and pushed, and pushed! My pelvic floor indented with the pressure, my taint turned to ribbon of tension. I squirmed with dancing hips to get away, awash in terror. He pushed, and pushed, and pushed. He broke through. Pain. Pain like I'd never known before, firing up my spine, running traffic through my synapses. I screamed in equal parts agony and horror, watching with disbelieving eyes as he entered my exit. I could feel every bump and vein passing through my breached sphincter, every inch he forced deeper. My rim was stretched to a gaping circle, but it was nothing compared to the pain of my center. His tip opened me without pause, breaking through my virgin resistances. It sent ferocious shocks into my colon, compelling me to clench and grip him even tighter, only causing greater agony. \n\nThere was a pronounced pressure in my gut from my insides being forced upward, my tender body yielding from within to make way for his invasion, surrendering so easily. My cheeks finally squished onto his lap, his balls pushing against my frothing sex, still secreting its betrayed arousal. My scream sputtered from me, my lungs yielding only a breathless gasp. My eyes were wide and trembling, tears were streaking down my cheeks, their salt meeting my gaping lips. Brock lifted me up, and my clinging sphincter stretched from my body as he withdrew, my pelvic floor creating a tent about his pole. He retreated to the head, letting my insides settle into their former places before he drove back in, even deeper than before. My back wrenched into an arch, my body bending to escape the pain, but my head still forced downward, filling my vision with my ruin. It burned into my mind, seeing my body like this. This form that I'd known all my life, no longer my own, used and desecrated by another while I watched helplessly. My temple ravaged, my sanctity raped, and it was just the beginning. \n\n\"Goddamn, you're tight!\" Brock growled, \"Yavara, I don't think your father has enough money to make me give this up.\" He breathed against my ear, \"I think I'll keep you as my slave. Does that sound good to you, my little anal princess?!\" \n\nHis words were lost in my mind, my conscious self only focused on the feeling of him. Brock began to fuck me even harder, his thrusts accelerating, each one more violent than the last. Deeper and deeper he went, piercing tender places I'd never felt before, his balls violently slapping my drenched cunt. My breasts jiggled from my chest, hitting my face with every thrust, my nipples so erect they hurt. I could feel Brock's cock indenting my vaginal floor from the wrong side, scouring the virgin nerves there. I could see the indentation of him pushing beneath my flesh as he forced my guts into me. I watched in fascinated horror, a string of drool descending from my gaping lips to pool on my crotch. \n\n\"I'm going to do this to you every night.\" Brock's voice was husky in my ear, \"I'm going to keep you in a cage like a dog, and only let you out when I need something to bury my cock into! In a week, you'll be ruined and loose, and then I'll let my men have you!\" \n\nEvery pass of his member rubbed against my womanly division, driving and driving until a sensation began to simmer forth. It seeped into the defiled waste of my rectum, mingling with the relentless piston that ratcheted into my filthy nethers. Something strange was happening. The pain was still there, but the pain wasn't causing me to suffer anymore; the pain was changing. It was as though my body was adapting to the punishment, lowering my internal resistance, allowing the orc's intrusion. My sphincter unclenched and relaxed, accepting the penetration- no... welcoming it. My feminine nectar flowed freely from my blushing folds, running down my taint and greasing my defilement. My shrieks of agony subsided, turning to cries punctuated by a gasp each time he sheathed himself with me. Then, I was moaning. \n\nThere's no way I can be enjoying this.\n\nOh my god this cock is so fucking good! Fuck me harder Brock! Rape my little asshole!\n\nSomething is happening within me... am I aroused by this? This incredible pain and humiliation? \n\nI'm nothing but an anal whore! Use me Brock, I'll be your anal princess!\n\nI clenched my teeth against the feeling, against the felicitous burning in my contracting rectum, against the mounting pressure that turned my body to jelly. It was no use. His invasion was brutally repetitive, each breach only delivering more pleasure. Pleasure I could not control. My moans turned into ardent cries, my voice high and exultant, riddled with shame and ecstasy. The pain was still there, but the pain was no longer something to shy from, but something to savor. The line between pain and pleasure blurred, the receptors of each entwining, their duet singing through my ruined shithole with every ferocious pump of his hips. Oh, how he drove into me, how he pressed against every surface of my stretched insides, how he grinded against tender flesh, rewarding the vile nerves therein. Brock started driving into me even faster, pounding so hard it felt like my tailbone would break, but I didn't care.\n\n\"Well, well, what a little anal slut you are!\" Brock growled, \"Do you like this thick cock tearing into your royal asshole?\"\n\nHis degrading words somehow turned me on even more, but I didn't respond. Somewhere in me there was still a shred of elven dignity that defied him. No, I will not give in. \n\nBrock's methodical motions ceased. He lifted me up and withdrew his cock from my asshole, my exhausted anus stretching with it before retreating inside of me. Brock released my legs and gently let me down. I nearly collapsed in exhaustion before I supported myself on his thighs, my body trembling with need.\n\nOh please put it back in!\n\n\"Well Yavara, your punishment is over. I'll send a message to your father in the morning. I have no doubt he will pay a high price to get you back.\"\n\nI sat on top of Brock, his hard cock resting between my asscheeks, throbbing and wet with my anal juices. He looked at me inquisitively, his head tilted to one side, a knowing smile stretched across his lips. \n\nJust tell him I want it.\n\nNo.\n\nNobody in the kingdom will ever know about this. I can do what I want out here. Isn't that why I came out here in the first place?\n\nIt did feel good...\n\nUnbearably good. The best feeling in the world!\n\nOh god, I want it so bad!\n\nI just need to shred that last piece of elven pride. No one will ever know.\n\nNo one will ever know...\n\nI started to grind my ass up and down the length of him, savoring the feeling as the shaft slid between my cheeks, pulsating against my soaked pussy and swollen asshole. My motions were uncharacteristically sinuous, born from a life of athleticism, but also from some lechery of which I had no experience. They were the instincts of my other self, the part of me slowly taking control. I always had been adventurous and bold, seeking out the extremes in life, and this was the greatest extreme I'd ever known. And the sweetest. Through my fever of desire, I had a moment of clarity where I watched myself become a slut. In that moment, I had the wherewithal to decide to stay Princess Yavara Tiadoa, or become this new woman, this whore, this slave of hedonism. I chose the latter without a second thought. I looked back at Brock with the sluttiest expression I could muster, my eyes pleading, my lip pouting. \n\n\"P-p-p-put it back in.\" I stuttered quietly, unable to give voice to the words. \n\nBrock grinned from ear to ear. \"Beg me to.\"\n\nI undulated desperately along his thick cock, feeling my puffy exit sing with delight every time he grazed it. A shot of pre-cum splattered onto my lower back, its molten texture burning a felicitous path down my crack. I moaned with need, the feeling of emptiness becoming unbearable. It was disturbingly easy for me to abandon dignity in the face of this craving. Pride and dignity meant nothing to such vile pleasures. \n\n\"Please Brock!\" I gasped, looking over my shoulder, \"Please put your cock in my slutty asshole!\"\n\nBrock cut the restraints I had around my wrists. I grabbed his cock with both hands and began to place it to my sphincter, but Brock grabbed my arm and stopped me.\n\n\"What?! But I-\"\n\n\"I'm not going in dry again, you stupid slut. Make it wet for me.\" Brock ordered. \n\nI grinned at the orc's degrading words, \"Does the mighty orc chieftain want me to suck his cock?\" \n\nBrock ran a hand through my platinum hair and smiled back. \"Bow to me, Princess.\"\n\nI turned over and laid between Brock's legs, gently holding his cock in my hands, staring worshipfully along its glistening length. The miasma of my abused anus filled my nostrils, and yet, my mouth watered. \n\nGood god, what is wrong with me?\n\nJust suck it, you stupid whore.\n\nI brought the head to my mouth and began to lick down the length of the shaft. It was as disgusting as it was delicious, and the idea that I would stoop to such lows somehow only made it more decadent. I lathered him with my tongue until I reached his balls, then took one of his heavy nuts into my mouth, sucking gently. I lingered there for a while, sucking each and licking the space between them, enjoying the hormone-rich musk that filled my sinuses, and the soft flesh that leaked his salty flavor upon my tongue. I withdrew his testicle from my mouth and held both in my hand, gently massaging them as I licked his shaft from the base to the head in one stroke, my eyes subservient and adoring when they met his at the peak. My heart thundered as I parted my lips about his apex. I opened my mouth so wide that my jaw began to ache, and brought as much of him as I could into me. Oh, how good it felt to have him inside me once more! My other mouth drooled down my trembling thighs, its hunger a deep ache of desire. I expressed my gratitude and need with my wriggling tongue and bobbing head, my eyes locked with his above the seal of my lips. I was dismayed to see an expression of disappointment cross his face. \n\n\"I thought that you'd have at least given head before.\" Brock grumbled, taking my head in his massive hands, \"Here, let me teach you.\"\n\nBrock pushed the back of my head forward, forcing his thick cock down my throat until his balls pressed against my chin. I gagged and choked, my esophagus clinging tightly to his shaft, reflux burning in my chest. I panicked for a moment as I thought I was going to puke, but I regained control of my gag reflex at the last second. Brock moaned with pleasure, his head tilting back, his dreads cascading down his shoulders. I smiled tearfully around my consumption, a sense of immeasurable pride swelling with me. As agony turned to pleasure, I ventured forward, taking him deeper and deeper down my throat. Spit leaked from my lips and oozed down my chin, hanging in strings before my bulging gullet. Back and forth, back and forth I took him, my throat stretching to accommodate him, my resistances relaxing, squeezing him with gentle warmth. Oh, how it turned me on to feel him pressing inside my neck, to taste him with every surface of my soft mouth. My thighs were saturated and quivering, moans humming from my sealed lips. What a whore I had become. God, it felt so right.\n\nWithout any warning, Brock drove my face against his groin, the sweet stink of his loins wafting into my nose, his cock pulsing delectably. A gout of thick cum gushed down my throat, the delicious flavor permeating through my mouth as it filled my clenching belly. A sudden feeling surged within me, so intense that I collapsed upon the ground, my mouth evacuated to yield breathless sobs, my body shaking in pleasure. I grinded my thighs together and thrashed on the grass like a beast, and Brock showered me with his lust, marking me as the filthy bitch I was. I savored the molten lust spattering my pristine flesh, a compatible sensation to the torrent that racked me within. When the feeling subsided, I looked up at Brock's grinning face, my expression a portrait of slutty desire. I wasn't satisfied yet, and neither was he. ",
        "I crawled on all fours to him, my eyes fixated on his bulging erection, shining with my spit. He laid down on the grass and beckoned me forward. I climbed up his legs and squatted atop him, positioning the head of his hard cock to my gaping sphincter. I looked into his eyes, smiling deviously as I slowly took him in, biting my lip and savoring every inch he had to give. When I felt his balls pressing against my tailbone, I rose, then came down quicker than before, my asshole now fully trained for his cock. I worked my way up and down the orc's shaft, my hands resting on his chest while I stared into his eyes, moans of pleasure escaping my lips as his girth stretched me. Oh, the pain and pleasure, mingling deep within my bowels, a deplorable concoction for a deplorable whore such as I, an anal slut who willingly rode the beast who raped her. I shuddered with each drive, with each acceptance of my own violation, my own rape. I looked into Brock's black eyes, and wondered in that moment of intimate self-defilement if I loved him. Such a brute, such a savage to show me so violently the pleasures of womanhood. Could I ever be satisfied by anything less than him? Could a fair-haired boy of my own kin ever give me such vile delights? I touched Brock's face with loving fingers, staring passionately into his eyes. \n\n\"Rape me, you fucking animal.\" I whispered on his lips. Brock grinned, grabbed my hips, and spun me around. He stood up with his cock half way inside me before pushing me to my hands and knees. Then he thrusted harder than ever before, forcing an involuntary scream from my mouth, then another, then another, each one more desperate than the last, each one born of the heinous pleasure wrought from my pummeled insides. Brock drew back his hand and sent a ferocious slap across my ass. I let out a squeal as my cheek rippled from the strike, sending a sweet sting deep into me. I purred and arched my back, enjoying the residual bit of pain from the blow, my eyes looking lustfully back at the orc.\n\n\"Oh, you little masochist.\" Brock growled as he wrapped a strong hand around my throat, squeezing so tightly I could barely breathe. I loved it. \n\nOh god, abuse me more!\n\nBrock fucked me so hard my body lurched forward with each thrust; soft fat rippling, hair flailing, toned muscles clenching beneath silky flesh, which reddened and glistened with exertion. He took his free hand and stuck four fingers into my dripping pussy. It pushed me over. My eyes rolled back, my tongue hung loose from my mouth, my mind lost focus in the heat of it. The feeling was rising within me again, burning into my depths, winding a cord of tension between my holes. I could barely breathe, but with each powerful thrust I managed to squeak out a constricted scream. \n\n\"What are you Yavara?!\" Brock roared as I felt the orgasm taking me.\n\nGod, I love to be degraded.\n\nTell him! Tell him what you are!\n\n\"I'm nothing but a filthy anal whore!\" I cried through delighted gasps. \n\n\"That's right you fucking slut! I'll have you sleeping in the kennels like the bitch you are!\"\n\n\"Oh god! I'm just fuck-meat! Turn this little slut inside-out!\"\n\nBrock lifted me off the ground by my neck and crotch, my cunt clenching around his fingers as it dribbled fluid down his knuckles. Vicious contractions rocked my body, precluding a pressure that grew, and grew, and grew. Oh god, it wouldn't stop! I convulsed violently, tears streaming down my cheeks, my breath like fire, panting like a bitch. I shrieked to the night sky as the orc's cock throbbed and pulsated, the spasms intensifying until it erupted. Hot cum flowed through my insides, filling my ruined sheath, radiating its delectable heat deep into my bowels. The pressure within me drove me to mania, a mindless beast that writhed in the winds of ecstasy, higher, higher, higher! It exploded, sending bolts of hot pleasure arcing through my body, consuming my being in the throes of it. Spasms jolted through me as the feeling extended from my center to the tips of my fingers and toes, causing the digits to curl in tension. I gasped like a floundering fish until I finally collapsed on the ground, Brock's half-hard cock pulling out of me, turning my battered sphincter into a prolapsed bud of fried nerves. My body trembled as the orgasm subsided, and I took a moment to savor the feeling of Brock's seed leaking from my gaping ass, and running down my legs. I laid on the ground in exhaustion, dopamine warmly soaking my mind, my body rewarded me for fulfilling its desires. \n\nWell done, Yavara. My seductive voice whispered in my mind. I found the last bit of strength I had to turn on my back, and gaze upon the beast that so thoroughly satisfied me. Brock gazed back into my eyes with a perplexed expression. His demeanor changed from confusion to awe, and he dropped to a knee before me.\n\nI chuckled and placed a hand atop his head. \"Brock, there's hardly a need to stand on ceremony now.\"\n\nBrock looked up at me, his eyes glazed over. \"My queen.\"\n\nI stared back in confusion. Was this a joke? Brock retreated to a nearby tent. Holy hell, was my asshole really that good? I heard the sound of tools and weapons being moved violently as the orc rummaged through his belongings. Brock returned to me with some trinket in his hand. He presented me with a golden mirror, something he most definitely took from the corpse of an unlucky caravanner. I looked into the glass, and gasped.\n\nStaring back at me were two blazing orange eyes. My pale skin still shown in the moonlight, but a streak of black hair now cut through the blonde from the crown of my head, down my left temple and to the tip. \n\nBrock looked at me, beaming with admiration. \"You have returned.\""
    ],
    "authorname": "White_Walls",
    "tags": [
        "ass to mouth",
        "corruption",
        "elf",
        "mind break",
        "non-consensual",
        "teen",
        "orc",
        "nonhuman",
        "non-con",
        "noncon"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/queen-yavara-ch-01"
}