{
    "title": "The Runesmith Chronicles Ch. 25 - Final",
    "pages": [
        "Welcome back everyone to the last chapter of The Runesmith Chronicles: Oni and the Farmer!\n\nI'm still having a hard time wrapping my head around the fact that I have written a book... gotta say, it feels pretty damn good. I should start posting chapters for book two in a few weeks as I'm still working on outlining and planning right now. Just want to say thank you all for coming along on this wild ride with me!\n\nFor those of you reading The Runesmith Chronicles for the first time I recommend going back and starting at Chapter one. Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters.\n\nKeep an eye out for updates to my profile in the next couple of weeks I am currently going back over Ch 1-12 and doing some reworking. Better continuity with later chapters, sentence structure, etc. I plan on posting the edits all at once instead of by chapter.\n\nAs always votes and feedback are greatly appreciated!\n\nEnjoy!\n\nBlu\n\n------\n\nEdited by: Old Fart\n\n------\n\nIkuno, Perra, and a slightly pregnant looking Aradelle all stared off to the west expectantly, each one almost vibrating with excitement. Kal smiled at the women, hardly able to blame them. It had been only a couple of days ago that he had made a mad dash, with Gerda's help, to the northern side of the mountain range then ran full tilt off to the east, towards Bea's nest. Arriving a short while later at what looked like a gigantic off-white cocoon laid over on its side and stretched between two large oak trees.\n\nKal had assumed at first that she had an arachne construct it for her and was surprised to find that the silk her home was built with had come from Bea. While showing him the tiny spot just below her tailbone where her silk was produced, she explained that butterfly girls were backwards from their smaller cousins and were unable to make silk until just before they became an adult. Kal reasoned that giving the ability to an adult butterfly girl, rather than a human-like baby who is unable to take care of itself, must have made more sense to the monster girl's creator when he was designing them.\n\nSeeing the yellowish-white silk cocoon outside, Kal hadn't expected the inside to have smooth clay walls and floor. Upon closer inspection Kal noticed that the clay was pressed into the silk of the cocoon, holding it in place along with giving her a means of displaying the variety of trinkets Bea had collected over the years. The clay only went partway up the sides of the cocoon, leaving bare silk for the ceiling. When the sun shone down through the trees and struck the top of her home it made the gossamer material glow on the inside, giving Bea a light source besides that filtering in from the entrance.\n\nBea's nest was sparse aside from her knick-knacks in the walls. Since she went out and collected her food daily and didn't wear clothing, she had no need for storage or a place to prepare meals. This left her only requiring a bed which was placed at the very back of her home. Kal quickly discovered that a bed made entirely of silk was extraordinarily comfortable.\n\nHe also learned during one of his visits that there was a magical component to Bea's dust. After a vigorous bout of lovemaking, they both dozed off only for Kal to be awakened by getting smacked in the face with one of Bea's wings. Sitting bolt upright, and covered in the dust from her wings, he waited for the telltale erection and swelling in his scrotum. When the expected reaction never came he excitedly collected some of the dust directly from a very satisfied Bea into a vial. He then dipped a finger in and touched it to his tongue, no reaction. Kal then pushed some magic into the dust, much as he would one of Ikuno's potions, and tested the dust once again. Luckily for him, Bea was more than willing to help him with the discomforts of her natural aphrodisiac for the next half hour.\n\nAfter the end of his rush to her house a few days ago Kal had found Bea on her knees in front of her egg as it rocked back and forth, held in place by Bea's silk, as she encouragingly called out to her daughter. Kal was honestly alarmed. He had helped with a couple of deliveries back in Telsin by this point and knew that a newborn should not have the kind of strength needed to rock the egg in such a manner. Once it finally split along one of the eight ridges, Bea pounced on it like a cat on a mouse, frantically stripping away the rest of the shell before gently lifting her daughter to her breast for her first meal. Kal was shocked by the size of his newest little girl. Despite only two months inside Bea and a month in her egg, the young butterfly girl was closer in size to a human eight-month-old.\n\nNow it was time for his newest daughter to meet the rest of the family, except Gerda and Bas. Bas lived too far away to make it in time and Gerda couldn't be convinced to be away from the safety of solid stone for their little get-together. However, she was as close as she could comfortably get, even if it was nearly a hundred paces straight down.\n\nThere was a collective gasp from the girls as Bea came flitting over the treetops holding a small bundle wrapped in a blanket of gold-tinted white silk. She landed in front of Kal and after a quick kiss handed their daughter to him. \"She just ate so she might be a little sleepy,\" said Bea.\n\nTurning around, he smiled at the women. \"I'd like to introduce you to mine and Bea's daughter, Adalena.\"\n\n\"Named by her father,\" interrupted Bea with a huge grin.\n\nKal smiled at her before turning back to the others, \"Since Aradelle told me that Bea and her smaller cousins are often the first ones she sees after winter I did some studying and came up with Adalena. Ada -- first. Lena -- butterfly.\"\n\n\"Good job, Kal,\" Perra deadpanned, \"now gimmie,\" she said holding out her hands and largely ignoring Kal.\n\nKal shook his head and clicked his tongue at the girl, \"Aradelle first, she has something for Bea,\" he said nodding at the alarune's slightly swollen belly.\n\n\"Sorry Perra,\" said Bea, \"butterfly girls don't leave their eggs once laid. I haven't eaten for a month except for what Kal has given me.\" Kal blushed bright red as he handed the little bundle over to Aradelle. 'Dell only held her for a few seconds before a couple of her vines came up and made a cradle beneath Adalena then carried her over the side of her bulb so all of the girls could gush over the baby. Kal noted that Ikuno magically dulled her claws before touching the tiny butterfly girl.\n\nTrue to Bea's description Adalena looked very much like a human baby that had a slight tint to her skin that made it look like she was constantly in shadow. Two light orange streaks started at the top of her head and ran down her back though at the moment they could just barely be seen through her sparse hair. Bea had also been correct about Adalena being sleepy after having her belly filled, even with all the commotion she didn't open her eyes until Perra ran her finger across the little girl's cheek.\n\nPerra gasped, \"Kal! She has your eyes!\"\n\nBea had come up beside Kal and was resting her head on his shoulder radiating pride as the girls fawned over her daughter. At Perra's comment, she lifted her head and smiled. \"She won't get these until she spins her cocoon and comes out as a butterfly,\" she said tapping her face beside her eye.\n\nAfter a couple of minutes, Aradelle passed off Adalena to Perra and beckoned the new mother over.\n\n\"Oh, thank goodness,\" he heard the butterfly girl whisper as she kissed Kal on the cheek and walked over to the alarune's side. Kal was well aware of how Bea usually got nectar and was mildly thankful when instead of presenting her sex to the butterfly, Aradelle leaned over and kissed her. Such activities would have seemed hardly appropriate with Perra and Ikuno making a fuss over Adalena right next to them. A few seconds later, as the kiss went on, Kal noticed Bea's throat moving as though she was drinking. A quick flash of disgust ran through his head as he thought of a baby bird being fed but he quickly pushed it away with the knowledge that the body of 'Dell's avatar didn't work like that. It also helped that he had been the one to ask Aradelle to store up some nectar at Bea's request. This saved her from visiting other alarunes to replenish herself now that Adalena was born.\n\nBea's bodice clicked and moved to the side as her stomach expanded from what Aradelle was feeding her. A few seconds later they broke the kiss and Bea leaned her forehead against 'Dell's. \"Thank you so much,\" she said, then looked down at her body. \"Dammit, I just got my boobs small enough to close that last time she ate.\"\n\nThere was a general chuckle of amusement until a sound like grinding rocks came from behind Kal.\n\n\"Can... I... hold... her?\" came Gerda's voice in the halting monotone of the translation spell.\n\n\"Gah!\" cried out Perra her hand diving for the belt pouch that held her earpiece. Kal's hand did the same but instead of putting it on he went over to where Bea was cringing from the sound of the golem's voice.\n\nOnce the initial shock of Gerda's appearance had worn off Perra quickly ran over and wrapped the golem in a hug. \"Gerda! I'm so happy you came up!\" Kal followed with his own hug and kiss for the golem for which he got a new earpiece in return, she had made a couple of extras for Bea and Aradelle when she decided to show herself.\n\nA moment later Bea walked over and put her arms around the golem, \"I'm so happy to finally meet you. Of course, you can hold Adalena. Though you might have to wrestle Ikuno for the privilege.\"\n\n\"Hey now! I'm not that bad!\" said the oni indignantly. \"No wrestling while holding the baby but it will cost you a hug,\" she said shifting Adalena to one side and holding out the other arm.\n\nGerda held up a finger asking the Oni to wait while she went over and presented the other earpiece to Aradelle.\n\nThe alarune smiled, \"Thank you, Gerda, but I don't need that. I hear through vibrations in my vines and I'm guessing that since some of my vines are underground it's acting like one of those earpieces.\" She glided forward and wrapped her arms around the golem, \"Like Bea, I'm very happy to finally meet you and I want you to know that there are few places safer for you on the surface than right here. Feel free to relax a little.\"\n\nGerda took a deep breath, which seemed odd to Kal since she didn't need to breathe, and nodded in understanding. Smiling, and looking about as relaxed as Kal had ever seen her on the surface, she made her way over to Ikuno, \"A hug for a baby? Seems kind of unfair.\"\n\nIkuno raised an eyebrow, \"A hug and a kiss?\"\n\n\"Do I get to choose where you kiss me?\" the golem said with a smirk.\n\nPerra gasped at Gerda's comment while Kal covered his mouth in an attempt to keep from laughing at the look on the oni's face. This was surely a sign of Bas's influence on the younger golem.\n\nUnfortunately for Gerda, she was still new at this kind of banter and quickly realized it when Ikuno's face went from shocked to predatory. \"Anywhere you want, and I won't stop until you tell me to,\" said Ikuno, eyeing up the rock girl like a fresh piece of meat. \"Hell, if I like it enough I might not stop even if you do.\"\n\nKal figured it was time for a rescue as Gerda blushed furiously and her mouth worked to form a response, but no sound came out. \"Let's stick with a hug and a kiss on the cheek for now,\" he said. \"You two can figure out any other kissing games when there aren't any children around.\"\n\nGerda looked over at Kal and blushed again, fully realizing that he was saving her. Nodding at Kal she gave the oni a hug and a chaste kiss on the cheek before Ikuno handed over Adalena with a warning to be careful of her strength, the predatory look from moments ago was nowhere to be seen.\n\nSadly, Adalena was not a fan of the golem's voice and immediately began fussing even though Gerda hadn't said anything since taking her. Bea approached with the intention of rescuing the golem for a second time but Gerda held up a finger, \"Wait, Bas showed me something,\" she tried to whisper but to no avail, the little butterfly girl just became more agitated.\n\nGerda closed her eyes for a moment and two rows of extremely thin plates grew out of her back, the largest about the size of Kal's head and getting smaller as they went along. A strange hum began coming from the thin sheets of rock before some of them died away while others started to vibrate in sequence. The tones quickly found a rhythm and soon a calming melody was coming from the plates.\n\nThere was something frustratingly familiar about the tune but Kal wasn't able to place it, from the look on Perra's face she was having the same issue.\n\n\"It's a lullaby, you two,\" said Ikuno, reading the looks on their faces. \"Popular probably a hundred and fift...\"\n\n\"Shhh...\" shushed Aradelle as she laid on one of her petals. \"If this is how she sings, it's beautiful. The history lesson can wait.\"\n\nThe most important member of Gerda's audience seemed to approve as she looked up in wonder at the golem. Gradually, Adalena's eyelids started to droop and drifted closed over the next few minutes.\n\nAs the music came to an end and the plates sunk into Gerda's back, Bea stepped up and took her sleeping daughter from the golem, \"Aradelle was right, that was beautiful Gerda. Thank you.\"\n\nGerda just nodded instead of speaking, tears running down her face from the intense happiness she was feeling at that moment.\n\nWhile things are on a high note,\" Ikuno said quietly, snickering at her own pun and giving meaningful looks to Kal and Perra. \"There's another reason we are all here.\"\n\nPerra took a couple of deep breaths to steady her nerves before looking at Kal.\n\n\"Are you sure you want this?\" asked Kal. \"It's your last chance to back out.\"\n\nShe knew he was trying to be gallant, but he couldn't have picked a worse thing to say as images of Ikuno nearly in tears on the front steps of the farmhouse flashed through her head. Steadying herself she nodded.\n\nStanding in front of Aradelle, Kal and Perra faced each other and held hands. Gerda and Bea, with Adalena, stood just behind Kal while Ikuno got to her feet and took up a similar position behind Perra. The young woman was trying valiantly to control her breathing, somehow this seemed far scarier than the thought of losing her virginity had been. Then again, she and Kal hadn't had an audience either.\n\n\"Remember what I told you?\" Ikuno asked her. Perra nodded, not trusting her voice at that moment.\n\nPerra collected all of her thoughts about Kal, from the annoying yet endearing things he did to all of the ways he seemed to prove over and over that he was just trying to be a good person. On top of all this was her desire to be his, fully understanding that he would likely never be hers alone. Doing as Ikuno had instructed she imagined herself pulling energy out of the small crystal in the pendant and mixing it with those feelings. Her body and mind both seemed to tingle as she truly touched magic for the first time. After wearing the jewel for so long, the sensation felt curiously familiar.\n\nA look of shock appeared on Kal's face as she pushed her magically infused thoughts and desires into the air between them. Perra smiled and nearly lost her concentration, a part of her was just as surprised. Ikuno had talked her through how this could possibly work, but even the oni was unsure of success since she was using the power of her necklace instead of her own.\n\nKal looked into her eyes, \"I accept.\"\n\nPerra wasn't sure exactly how to explain the difference between now and a few minutes ago aside from their connection felt far deeper than it had with just the pendant. Any doubts about how Kal felt about her vanished as she saw herself for the first time through his eyes. As she adjusted to hearing someone else in her mind, she began to feel the thoughts of the other girls filtering through, something that had never happened before with the necklace alone. Taking a moment to focus on each of the women she was able to see how much Kal cared for them.\n\n\"Nosey, aren't you?\" he asked, smiling.\n\nPerra's head snapped up from where she had been looking at the ground in concentration.\n\nBehind her, Ikuno frowned, \"She shouldn't be able to dig very deep through the bond like that.\"\n\n\"I don't think it's through the bond. I think it's through this,\" said Kal, releasing her hand and running a finger over the pendant. \"They feel different, I think the bond is giving her the map and she's using the moonstone to follow it.\"\n\n\"I'm sorry. I didn't mean...\" Perra stammered.\n\nKal smiled, \"Don't worry about it. We weren't expecting this to work the first time, yet here we are. Let's just be happy about that, shall we?\"\n\nPerra finally looked around and saw Gerda and Bea grinning from ear to ear while Aradelle bounced around happily within her flower acting like she was clapping while her hands never actually touched. The alarune's antics confused her for a moment until she remembered that Adalena was still sleeping.\n\nLarge blue arms wrapped around her from behind, \"Welcome.\"\n\n------\n\nAfter some time sitting around and chatting Bea announced that it was about time for Adalena's next meal and made her way home after dragging a promise of coming to see her soon out of Kal. Perra blushed bright red as she caught an image of Adalena sleeping followed by touching Kal's tongue with a tiny bit of dust, then Bea looking pregnant, licking her lips, and feeling satisfied. Checking on the other girls she could tell that they were all feeling rather amorous. The young woman wondered for a moment how on earth Kal didn't walk around hard all the time with the constant thoughts of sex running through the girl's minds. A very strong thought suddenly came from Ikuno of having her tongue buried firmly in a woman's orgasming sex then looking up to see Perra's face in the throes of ecstasy.\n\nThe girl quickly pulled her thoughts back.\n\n\"You're going too deep, dear,\" Ikuno's tone wasn't chastising despite that being exactly what Perra had expected. \"Kal can go as deep as you just did, even deeper with Bea and I, to my knowledge he never has, out of respect for our privacy.\"\n\n\"Sorry, it's just so easy to get lost in everyone else's feelings. However, in my defense, Bea was broadcasting pretty strongly.\"\n\n\"Fair enough. To be honest, I felt that one a little bit too,\" said the oni rubbing a hand over her stomach.\n\nGerda was the next to leave. After taking a moment to find a spot without many of Aradelle's roots or underground vines she peeled back a bit of the topsoil and stepped into the hole she had made waving goodbye as she slowly sank into the earth. When she had disappeared, two of Aradelle's vines emerged and put the chunk of soil back, patting it into place before vanishing beneath the ground again.\n\nThe day was getting late when Kal and Perra finally left. Ikuno stayed behind saying she wanted to spend some alone time with Aradelle but to leave out her bedroll when they got back to the shack.\n\nKal called Ria and had her retrieve everyone's sleeping mats, then promptly got attacked by Perra as soon as they had something besides dirt to put their backs on. The monster girls' almost constant thoughts of sex had the young human in a state that bordered on desperation.\n\nSince no one had remembered to dismiss her, Ria made her body fade as much as possible and enjoyed the show the young lovers were putting on with a hand buried between her legs.\n\n------\n\n\"You'd better watch yourself Lady Perra, a few more performances like that and Tanner will be calling on you to take Kal's spot on the council,\" said Lady Nina as they left the blacksmith's shop. Since there was no town hall, each of the council members hosted meetings in their house or had the option of renting a room at the inn, out of their own pocket of course. This time it had been the blacksmith's turn to host and Perra felt like she was covered in a layer of sweat, soot, and steel. She briefly wondered if Bonn would be up for a ride out to Ikuno's to use her fancy bathhouse.",
        "\"It's not like I suggested anything amazing. With harvest time on the horizon, it just seemed to make sense to take the crops from a few fields and set them aside, instead of having everyone weigh their crops then take out the King's portion.\"\n\n\"You'd be correct, it's not amazing. In fact, it has been suggested many times before. What's amazing is that you managed to convince the rest of the council to go along with it. Too many of them still see this town as little more than a trading post. That's one of the first times I've seen them acting in the interests of the town as a whole,\" said the older woman.\n\n\"I still wish Kal hadn't run off just before this meeting, this is the second in a row,\" grumbled Perra.\n\n\"I've already apologized for that, Perra. In truth, I can't thank Kal, Ikuno and Ghoss enough for going with Jurien this time. Until now, he's had to hire mercenaries to guard him when he goes to that blasted swamp.\"\n\n\"What exactly are they going for? Kal mentioned that it was some kind of mushroom, but he couldn't remember what you told him.\"\n\n\"Queen's Crown tree fungus and Ghost Fern fiddleheads are the big things Jurien is looking for. The fungus is what makes my salves keep for so long without going bad and boiled Ghost Fern fiddleheads make the base for some of our higher end poultices. However, there's a mess of potion ingredients to be found out there as well as some spell components, which is why Kal and Ikuno went if I'm not mistaken,\" explained Nina as they arrived at her and Jurien's shop. \"Ugh, I hate going to the Smith's for these meetings, I'm going to start heating up some water for a bath.\"\n\nPerra stopped Nina from closing the door to the shop behind her, getting a raised eyebrow from the apothecary's wife. She then had a quick conversation with Kal and Ikuno, which was difficult with how far away they were. After getting their approval she smiled up at Lady Nina \"How would you like to enjoy one of the benefits of having a mage as a friend? I know the perfect place we can go to get cleaned up.\"\n\n------\n\nAs Kal and Ikuno were sorting and cataloging their bounty from their trip with Jurien, Ria decided to tell him of a special ink that could tie her to him in a way she could never be lost.\n\n\"If you will be traveling to larger cities then there will be pickpockets and cutpurses to think about. If you make this ink then all you need to do is put your mark on me,\" the sprite explained. \"Once I have your mark the only way I can become someone else's property is if you were to die. More importantly, if I am stolen or lost I will try to return to you twice a day. However, each attempt takes a lot out of me and though I will be able to return to you, I won't be able to take out or accept anything for the next few hours.\"\n\nKal nodded in understanding, \"What if a second person were to also put their mark on you? If I were to die, would you end up going back to the other person?\" he asked.\n\nRia seemed momentarily confused, \"Honestly, Kal, I don't know the answer to that. Most of my previous masters have been so hung up on protecting their property that I don't think it occurred to them to designate an heir. All we can do is try once you have made the ink.\"\n\nKal and Ikuno took down her list of ingredients and immediately began planning a trip to get those that could only be found far away.\n\n------\n\n\"I had the strangest meeting with the Master Tanner today,\" said Kal as he hung his travel cloak next to the door.\n\n\"Hm?\" Perra was engrossed in the book she was reading. Kal's mother had been insistent she learn, and lately the young woman had started to get the feeling that reading well was about to become a very important part of her life. As such, she was trying to brush up on her reading skills from Ikuno's more mundane selection of books.\n\n\"He asked me if I had any trips coming up that I would be out of town. I told him when I planned to go hunting for the ingredients Ria needs for her ink and I'll be damned if he didn't schedule the meeting for the day after I was going to leave. You wouldn't know anything about that. Would you?\"\n\nPerra groaned and leaned back in the chair, covering her face with the book. Apparently, Nina had been correct.\n\n------\n\nOnce Ria's ingredients were gathered and Kal had made the ink, they tested it by putting Kal's mark, then Perra's on the sprite's bag. A tiny speck of light floated back to Kal's hand and turned into Ria's leather pouch a few minutes after Ikuno 'stole' Ria. They now knew that Perra's mark had not overridden Kal's and had to just hope that the second mark worked the way Kal was assuming. Unfortunately, the only way for them to truly test Kal's idea was for him to die and nobody was willing to go that far.\n\n------\n\nThe summer months passed and dipped into fall. Kal continued to learn spells as quickly as possible. Although most of them weren't very powerful, many of them were useful in some way. Ikuno recommended things like a spell that opened locks which Kal, at first, dismissed as something only a thief would need until she reminded him that magic users weren't very popular in some cities where the church held a great deal of sway. The idea of being locked up in manacles convinced him the oni might have a point.\n\nHis leather mask received an upgrade in the form of the water breathing rune from the book. This was quickly followed by a darkvision rune when he discovered he could barely see underwater. Unfortunately, darkvision only helped with the light level and not the distortion or the fact that he had to keep his eyes open underwater for long periods of time. This led him to develop a rune that created a clear shield over his eyes that filled with air and allowed him to see fairly well as long as the water wasn't overly murky.\n\nThis small adaptation to his mask led to another revelation about the flight rune. The new addition created similar shield but over his entire face that deflected wind and allowed him to see without squinting against the oncoming air. Ikuno was hardly surprised when Kal insisted upon going to see Felli in order to test it.\n\nWith more time available to him, Kal's combat skills increased right along with the number of broken bones inflicted by Ikuno. The oni was holding back less and less as his skills improved and there was still the occasional mistake that led to him waking up with his head on her lap. Thankfully, he was fairly protected against serious injury by his runes and most of the time got away with mild fractures and bruises.\n\n------\n\nAs the weather turned colder and the leaves began to change it was once again time to say goodbye for the winter, not just for Aradelle this time but for Bea and Adalena as well. Bea explained that she and her daughter would hibernate over winter together in a chrysalis she would construct after sealing her home. Both of them had put on significant weight over the last month since they wouldn't be eating again until spring. The butterfly girl was decidedly unhappy. Not with how her body looked since it was necessary, but because the extra weight was making it very hard to fly. Adalena had grown significantly in size during the summer months but slowed down as things got cooler, trading growing up for growing out. As they prepared for hibernation the normally happy little girl seemed to be having a hard time staying awake for more than a few minutes.\n\nKal said goodbye to Aradelle, Perra and Ikuno, then walked back to Bea's house with her, carrying a sleeping Adalena most of the way. Bea struggled to get up into her house, cursing the necessity for her extra heft. Once there, she and Kal shared a short tearful goodbye before his handing over their daughter and leaving her to begin making their winter cocoon.\n\nAfterward, he returned to the other three women back in the clearing. Aradelle was in her flame-sprite fall colors once again as teary hugs were passed around for the second time that day. A few minutes later the alarune waved goodbye before curling up into a ball and descending into her bulb as she shed her petals and the hard outer leaves folded up for the last time until spring. Kal was more than a little disconcerted by how Aradelle's mind became completely still over the bond after months of her constant presence. Two days later Bea's thoughts also went quiet as she completed her chrysalis and went to sleep for the winter.\n\n------\n\nKal sat back in his chair and rubbed his eyes, the day was growing late and he still hadn't come to a decision on which rune should go in the free space next to the shield rune. He looked over at the vambrace laying off to one side of the table in Ikuno's library. Kal had been so excited to learn and use it for the first time after seeing Sir Balthus save his hot-headed friend. The mage's brow furrowed as he remembered the intricate tattooed runes that had covered nearly all of the knight's forearm arm and wondered how he had not noticed that they were really nothing at all like what was on his bracer.\n\n\"Ikuno?\" he said getting the oni's attention. She was sitting in bed enjoying her second favorite pastime, reading as she sipped sak\u00e9 from a small ceramic cup. As usual, she was totally nude, partly in hopes of enticing Kal into some fun, her first favorite pastime, and also because she knew how much he enjoyed looking at her body.\n\nShe looked up from her book.\n\n\"How is it that Sir Balthus had glowing runes all over his arm for his shield yet I am able to do the same thing with a sigil and a couple of rings?\"\n\n\"He just used a different type of rune, if you could see through the skin and muscles on my arm you would find that those runes look very different from yours as well. Elvish, Orcish, Dwarven even the desert nomads and the island witch doctors, who most likely did Sir Balthus's arm, all have different looking runes that accomplish the same tasks.\"\n\n\"That doesn't make any sense, the rune directs the magic as to what it's supposed to do. A rune here should look the same as one on the other side of the world.\"\n\n\"Yet, obviously, from mine and Balthus's shield runes, that's not the case. Perhaps a good way to look at it is just that there are multiple paths to get to the same result. Some are more direct, like your shield and mine, while others meander and enjoy the view, as with Sir Balthus's arm,\" said Ikuno.\n\n\"Ugh, what you are saying kind of makes sense but I'm still having a hard time wrapping my head around it.\" Kal rubbed his temples, \"This is giving me a headache.\"\n\n\"Then quit thinking about it for the night and come to bed.\" Ikuno got up and placed her sak\u00e9 bottle and cup on the shelves next to the stove before crawling under the covers, lifting one side up in invitation for the young wizard.\n\nKal smiled and closed the book in front of him before turning off the magical lamp and making his way towards the bed. Ikuno was right, it was getting late already and they could continue this discussion tomorrow.\n\n------\n\nIkuno glared into the gray clouds billowing around her, her face etched in a mask of dismay. She had believed herself to be immune from being pulled into the astral realm since she recast the anchoring spell every few days. It was overkill since the spell's instructions stated once a week would be sufficient, even so, she wasn't willing to take chances. Regardless of her efforts, her attacker had found a way around her protection and she once again stood on the dried cracked earth, surrounded by clouds that obscured the sun, or whatever it was that kept this small pocket of the astral plane dimly lit.\n\nLarge green glowing eyes appeared just beyond the edge of the clouds, casting about for a moment before falling onto the oni's blue form.\n\nSteadying herself under the eerie necromantic glow, Ikuno resisted the urge to summon her club and escape. She wanted answers.\n\n\"Show yourself, mage,\" the oni growled, \"I would at least like to know the identity of my enemy.\"\n\nThe eyes widened momentarily at Ikuno's words. \"I see you've managed to keep your wits about you,\" a voice boomed from the clouds. \"A pity, really. I enjoyed watching you snarl and snap like some feral bitch, it suited you.\"\n\n\"Sorry to disappoint,\" replied the oni with a sardonic smile. The memory of her last time being dragged into the astral plane and how this man had somehow repressed her memories, turning her into little more than a wild animal, still weighed on her. Since then, she'd lived with a slight fear that this magic user or his friend could do the same outside of the astral plane and put those she cared about in danger. \"As I said, I'd like to know who it is that seems to want me dead. I've had little to do with necromancers over the years and know of none who I may have upset. That is, of course, it is you that has the issue with me and not the mage who created this pocket realm.\"\n\n\"You think I needed help bringing you here?\" the voice asked.\n\n\"Every apprentice wizard knows that opposing affinities don't work together. A necromancer having mastery over the astral is farfetched at best,\" Ikuno's jaw tightened. As the words left her mouth she was immediately reminded of Kal's haste rune, in which he managed to make air and earth affinity runes work together. Kal was a bit of a prodigy in that respect and helped by his special vision, she doubted that a normal mage could accomplish the same without decades of practice. Even so, Kal proved that it could be done, which threw into question just how powerful this wizard might be.\n\nThe voice laughed, \"Mastery over astral magics? Not hardly, though I have had to learn quickly thanks to you. Sadly, I'd call myself a passable necromancer at best. The beast your plant girl killed has been the pinnacle of my abilities in that arena. To be honest, I'm glad that dog didn't kill you Ikuno, what I have planned will be much more satisfying, poetic even.\"\n\nIkuno's eyes narrowed, \"Who are you and what quarrel do you have with me?\" There was a disturbing familiarity in the manner the voice was speaking.\n\n\"Still haven't figured it out? Now I am disappointed. After all the time we spent together, and you can't even recognize me.\" The eyes closed, disappearing into the clouds. Moments later a faint shadow of a human could be seen walking through the mists. Ikuno gasped as the mage stepped into view.\n\nMeticulously crafted from fine silk and costing hundreds of gold coins just for the workmanship, his robes with their climbing flame patterns were immediately recognizable. However, that wasn't what caused Ikuno's sharp intake of breath. The face beneath the man's white hair would have looked more appropriate on a corpse, as did his hands extending from the arms of his robes. Leathery skin was drawn tight against bones that didn't appear to have enough muscle attached to move them. His face seemed to be locked into a gruesome smile and his lips barely moved as he laughed at her reaction. The only place she could see any emotion was in the sunken eyes that glowed green with necromantic power.\n\n\"Gods, Azrin, what have you done?\" Ikuno whispered.\n\n\"You seem... unimpressed, with your creation.\"\n\n\"My creation? How on earth is this...\"\n\n\"This is all your doing!\" screamed Azrin, his entire body erupting in sickly green flames. \"You took my sister from me!\" Nearly as quickly as his momentary fury, the flames died away leaving the man unscathed. He held out a hand and conjured a single ball of the green flame, \"Look at this Ikuno, all of the beautiful oranges and reds, gone. All I am left with is this disgusting green, had I known this was part of the price of immortality I may not have paid it. You were right, you know, all those times you told me that you were my second lover and that fire was my first.\"\n\n\"How dare you blame this on me, Azrin!\" Ikuno snarled. The pyromancer's eyes snapped to the oni. \"Your sister attacked me! I never wished for her death, I even gave her the chance to stop so I wouldn't have to kill her! Perhaps if you hadn't been so busy getting lost in your flames and spent some time putting your cock into her instead of me, we wouldn't be here!\"\n\nIkuno could hear a hint of madness in his voice as Azrin laughed. \"As expected, 'It was all Midora's fault. It was all Azrin's fault.' I didn't actually expect you to take the blame, after all, you ran away like a coward after you killed her.\"\n\n\"What?\"\n\n\"You know we recorded everything that happened in that arena. I watched it over and over listening to her say how much she loved me and that she would happily give her body to me.\" Flames licked along Azrin's robes giving him an outline of green fire. \"Then some giant blue bitch sliced her in FUCKING HALF!\"\n\nIkuno studied the man's eyes as he spoke. The transition from pure adoration when speaking of his sister to unfettered hatred directed at Ikuno was disturbingly sudden. It appeared that grief over his sister had broken the pyromancer's mind, letting him make up a new version of reality that was easier to deal with than admitting Midora had tried to murder his lover in a fit of jealousy.\n\nUnderstanding that reasoning with him was futile, Ikuno changed tactics, \"I had it on very good authority that you were dead, and by all rights, you should have passed away many years ago. What have you done to yourself in this misbegotten quest for revenge?\"\n\nAzrin held up one of his hands inspecting the way the tendons showed through the stretched skin, \"The pinnacle of magic, immortality. Wasn't that how it all began? Searching for the Philosopher's Stone to make the Elixir of Life? I thought becoming immortal would be beautiful. Look at this, little more than a corpse powered by magic.\n\n\"After you ran off I stayed at my hold for a few years. Finally, I could take no more of allowing my sister's murderer to still breathe and decided to hunt you down, so mine and Midora's souls could finally rest. For decades I searched for you, hiring diviners who would point me in the right direction but never arriving in time to catch you. I began to realize that the trails were getting colder, you were slipping out of my reach.\n\n\"I was drowning my sorrows at a tavern and thinking of returning to my hold when a necromancer by the name of Loran approached me. He needed my help with a very important project that required him to learn astral magic. I remembered how you shied away from astral spells when we were together and it occurred to me that an attack from the astral plane may be the best way to get at you.\n\n\"We traveled together for a time, I learned some astral magic and taught what I could to the necromancer. As a fire mage, I was tied to neither of the affinities and thought I might also learn a little bit of necromancy since he was willing to teach me. However, astral spells appeared to be the quicker way to avenge my sister, so I decided to leave dealing with the dead to those who enjoyed it. It seemed as though you had the correct idea in not specializing Ikuno, teaching the man seemed nearly impossible at first. Eventually, he began to get a grasp on dreamwalking to the point he could study on his own while we went about collecting all of the components he needed for this grand spell he was going to cast.\n\n\"We started making our way back to his keep, which he had built on the edge of an ancient battlefield. The place reeked of death and decay from the zombie and skeleton soldiers he had raised to be his home's guardians. I assisted him with making the potion for his spell, although he refused to let me know what the potion was for. He also had a secret project that he worked on alone and would get angry every time I asked him about it.\n\n\"Unfortunately for him, he had the outside of his keep warded against divination and astral projection but didn't think to put up any wards between rooms. Using my meager dreamwalking skills I spied on him and discovered what all of this work was for. Immortality.",
        "\"He was going to trap his soul in a giant emerald that had been soaked in necromantic power for years. That would go into an ornate box covered with runes and placed into a shrine just above the largest flawless magic crystal I'd ever seen. All he needed to do was drink the potion which would both kill and preserve his body as well as move his soul to the emerald. Then through a mixture of necromancy to move his old body and astral magic that would allow him to move his mind back into the corpse he would be reanimated as a lich.\"\n\nIkuno shook her head, \"No, Azrin, tell me this is some kind of joke, that there is some other way you are still alive.\" Ria had said that he had died, according to his story she would have been telling the truth.\n\nAzrin opened his mouth and hollow sounding maniacal laughter poured out. \"Of course it's not a joke. Using magic extends a human's life, but not forever. By this time, my hair had turned gray and each morning I could feel the chill of death coming closer. I had given up on you, but this revelation gave me new life, new purpose. Once again, I could hunt down my dear sister's killer but this time without the weight of the passing years to hinder me.\n\n\"I waited until the day before Loran planned to carry out the ritual. Though he still hadn't told me what he was going to do, he promised that I would be handsomely rewarded afterward. Even offering me my own kingdom if I decided I wanted it. By this point I had watched and listened to him practicing many times while dreamwalking and knew the ritual nearly as well as he did.\n\n\"It's amazing how easy it is to incinerate someone when they've no clue you are about to kill them. After Loran was dead, I found the potion and performed the ritual, going through the motions and saying the words without really understanding what I was doing. I had no idea that becoming immortal required near mastery of necromantic and astral magic. I paid for that mistake dearly, spending years as little more than a ghost trying to learn enough about necromancy to move my carcass. Once I could animate my corpse I used the necromancer's library to learn what I needed to know, even that took years of my time to master in that pathetic spirit form. Nearly two decades went by from the time I drank the potion to when I finally rejoined my body.\"\n\nIkuno choked back a laugh, \"So you killed yourself only to become the most pathetic lich this world has ever seen.\" She clapped her hands in a slow, mocking applause, \"Congratulations.\"\n\nAzrin's seethed for a moment but managed to control his anger, \"Perhaps, but now I have all the time I could ever need to become insanely powerful.\"\n\n\"You seem to be managing the insane part pretty well,\" the oni quipped then immediately regretted it. She was looking for information and comments like that weren't going to help. Ikuno guessed that the last few decades had been very solitary for Azrin and that was why he was being so forthcoming with her now. There was a chance she could play on that weakness, \"So you just became a lich and figured out how to get back into your body. What then?\"\n\nAzrin's face went from anger at her derision to an internal battle between lashing out at the oni and continuing his story. Ikuno had to hide her smile as the lich's expression calmed and he began speaking again. \"From there, my hunt began. Again, I was set back by my single-minded pursuit of pyromancy. Hiring diviners was no longer an option with this body, most of them attacked me on sight, a couple even killed themselves as soon as they saw me.\" The corners of Azrin's mouth attempted to form something that looked like a smile. \"I guess that they were true to their craft and knew what would happen to those who failed to find you. Finally, one of them, an old sage, directed me back to my and Midora's keep, telling me that what I required to find you would be there. Amazingly, he was right, it almost made me feel bad for reducing him and most of his forest to ash.\n\nHe held up two fingers as if holding something tiny between them, \"A single white hair tucked into one of the corners of my very own headboard. Decades old, but still enough for a spectral wolf to seek you out. Against the suggestions of Loran's grimoires, I rode along with the wolf. If it found you and killed you, I wanted to see it.\"\n\n\"Instead, it ran into Aradelle, who was well aware of how to deal with such a monster,\" said Ikuno with a smirk.\n\n\"True, but its death, much as it hurt me, gave me an idea of where to search. Your wards against divination have proven to be annoyingly effective.\"\n\n\"I like my privacy.\"\n\n\"I'd noticed. Oddly, when I attempted scrying for you, I kept being led to your little boy toy. Yet there were times he would just wink out of existence as I watched him, usually in the same area. Eventually, I came to realize that these absences were when he was with you.\"\n\nIkuno frowned. Until that moment she hadn't considered that the part of her lifeforce within Kal might lead one of her enemies to him. \"The boy is a dalliance with a nice cock, little more. Your issue is with me, we can leave any others out of our quarrel.\"\n\n\"Lying bitch,\" Azrin said, laughing at the oni. \"I don't fully understand what it is that ties you to him, but I can tell that it is strong. Far too strong to be some mere 'dalliance.'\"\n\nIkuno shrugged, \"Your concern is with me and not him. In that respect, nothing has really changed. How was it that you finally found me?\"\n\n\"At first I thought I had made a mistake. I formed this pocket on the astral plane and thought I had pulled you into it but when I came to check, it was empty. The next time you were here waiting for me, however, you had never mentioned your club while we were together and I was unfamiliar with its abilities. After much research, I figured out how it is tied to you and summoned from the spirit realm, as well as how it allowed you to escape. Interrupting a natural summons such as your iron club was going to be extremely difficult, so I took an easier route. I locked away your intelligence, so you wouldn't even know you could summon your weapon. That's what should have happened this time as well, but perhaps I expected too much. In hindsight I should have figured your intellect would be too strong for such a spell, after all, it was one of the things that I found so attractive about you.\"\n\n\"And here I thought you just liked my tits,\" Ikuno was trying hard keep the worry that was creeping into her mind from reaching her voice.\n\n\"I did, sadly I have little use for pleasures of the flesh anymore. Had I been properly prepared and able to move my body as soon as the transformation was complete there are a number of ways to keep the flesh supple and soft, however, once it turns to this,\" Azrin held up a leathery hand, \"there is little to be done.\"\n\n\"After I escaped from you the last time I took precautions to prevent this from happening,\" said Ikuno as she waved a hand indicating their surroundings. \"I must say I'm impressed you managed to break the spell.\"\n\nAzrin lips curled into a smile, \"Oh but I didn't, Ikuno. You simply let your anchor spell lapse.\"\n\nIkuno's eyes narrowed, she remembered lifting the covers and calling Kal to bed, she then recast the anchoring spell... and was suddenly back lying in bed holding the covers once again. \"You altered my memory,\" she growled.\n\n\"Just enough to think that you had cast your spell these last couple of times,\" he was still wearing his creepy smile of amusement, \"and now you're mine.\"\n\nIkuno's eyes widened as she felt a strange absence. Like a soft breeze that isn't noticed until it stops, Ikuno felt her connection with the spirit world suddenly blocked. Holding out her hand, she tried to summon her club, snarling in frustration moments later as her weapon refused to appear and she remained in Azrin's astral pocket.\n\n\"To be fair, I could have done that from the start,\" said Azrin. Ikuno looked up from her empty hand, her fangs still bared. \"I doubt we could have had such an enjoyable conversation had I done so. People are far more likely to chat if they think they have a guaranteed escape.\"\n\n------\n\nKal was woken up by a low growling noise coming from behind him. He summoned a light and looked back to see the oni lying next to him with her fangs bared.\n\n\"Ikuno?\"\n\n------\n\nThe lich made a motion towards the clouds behind him and moments later the ground shook with heavy footsteps that made the shards of cracked earth dance around Ikuno's feet. The largest minotaur Ikuno had ever seen stepped from the fog and bellowed in rage at the sight of the oni.\n\n\"I've no desire to attempt fighting you one-on-one,\" said Azrin, the hint of madness returning to his voice. \"My friend here will take care of beating you to a pulp. Remember Ikuno, what happens here also happens in the real world. If you die here, you die there as well.\"\n\nThe lich's cackling laughter was drowned out by the bellowing charge of the minotaur. A fist nearly the size of her head came swinging down only to be batted away by the oni, she was nearly thrown off balance with how easy it was to deflect the beast's arm. Quickly getting her feet beneath her she reached out and raked her claws down the minotaur's chest, the bloodless wounds healing almost instantly.\n\n------\n\nKal looked down in shock at the eight deep gouges running from his collarbone nearly to his waist. On instinct, he activated his healing rune on his back and was pouring enough power into it to light up the room behind him. The wounds were healing quickly but not before the bedclothes were stained red.\n\nKal tried to throw himself backwards out of the bed but a blue hand closed on his shoulder. Claws sharp enough to gouge stone cut deeply into his flesh, drawing a scream from the mage. As his hands came up in a futile attempt to dislodge Ikuno's fingers, Kal looked at the oni's face and his heart sank, even after his shriek of pain, her eyes remained closed. Knowing that he could never hope to defend himself against her as he was, he looked back over his shoulder and willed the vambrace with his strength rune towards him.\n\n------\n\nThe minotaur was looking back at Azrin, both hands weakly trying to pull her claws out of its shoulder.\n\n\"Your champion seems a bit distracted, Azrin,\" Ikuno jeered. \"He's also the weakest minotaur I've ever heard of,\" her claws sunk a bit deeper drawing a bellow from the bovine-headed monster. Looking over at Azrin she saw that he seemed a bit distracted as well, staring off into the gray clouds just off to the side of the combatants.\n\nThe lich smiled as his eyes focused on her again, \"Not to worry, he'll be getting stronger in a moment.\"\n\nEven as he spoke the minotaur began pulling Ikuno's fingers from its shoulder. With a growl the oni began raking at the beast's chest with her free hand, watching in frustration as the wounds quickly closed. The creature attempted to back away again but Ikuno sunk her claws deeply into its side, holding it in place as the beast howled in pain.\n\n------\n\nKal was running low. Healing the damage Ikuno was inflicting while maintaining the strength rune at such a high level was draining him quickly. His hands were locked on Ikuno's wrists keeping her from hurting him even more, but that was only a temporary solution. Her strength was natural while he would eventually run out of magic. Knowing that she wouldn't let him escape meant that he couldn't get to any crystals, and gods help him if he had to continue this ordeal without magical help. There was only one source of energy close enough, he just had to hope he could hold out long enough for the oni to wake up.\n\n------\n\nFar faster than she expected a beast of this size to move, the minotaur let go of her wrist and grabbed one of her horns. Her claws immediately dug deeply into his side before she pulled them forward, leaving deep furrows in flesh and bone.\n\nIkuno's eyes flicked to Azrin and saw him once again staring off into the clouds beside them laughing maniacally. Her attention returned to the minotaur as she felt him begin to draw magic from her horn. The oni grinned, if he was stealing her magic to fuel his regeneration then all she needed to do was wait him out. Once they both ran dry he wouldn't be able to heal himself and she would still have her claws.\n\nThat idea was cut short by Azrin's laughter. If the minotaur burned through all of her magic she would have none left to protect herself from the lich. She tried jerking her head out of the minotaur's grasp, but his grip proved to be too strong. Her hand came up and shredded the muscles on the beast's arm allowing her to pull away. Again, with unnatural speed, the creature's other hand let go of her wrist and grabbed her other horn, drawing large amounts of magic from her as it healed its damaged arm while attempting to protect itself from her claws.\n\nGrowling with annoyance Ikuno raked her claws over every piece of flesh she could reach, the minotaur bellowing in pain as it gave up trying to defend itself and held on tight to her horns with each hand. As her opponent howled in agony she was momentarily distracted by Azrin howling with laughter. She finally felt the minotaur start to weaken, likely because she was nearly empty of magic, and brought a foot up, kicking the beast away.\n\nThe oni looked up at the lich to see a disturbing display of happiness on his face.\n\n\"I was going to kill you, but when I found out about your little wannabe-mage lover I decided that something more appropriate was in order. Now both of us will spend our immortality without someone we loved. Only you will have the knowledge that your lover died by your own hand,\" Azrin threw his head back in screeching laughter as Ikuno felt her connection to the spirit realm restored.\n\nShe looked down at the minotaur in horror, its wounds still closing but much more slowly now. \"Gods, no,\" she whispered as energy swirled around her hand. Azrin's ecstatic laughter followed her as the club appeared in her hand and she vanished from the astral plane.\n\n------\n\nIkuno sat bolt upright in bed, \"Kal?! KAL?!\" she felt wetness on her hands and held them up in the dim light of Kal's glowing orb to see they were soaked in blood. Looking down her body and at the bed told much the same story. Facing away from her and lying in a heap on the furs in the center of the room was Kal's body, the healing rune on his back flickering and fading as he ran out of the energy to sustain it.\n\nVaulting out of bed and landing next to the young mage she rolled him onto his back, gasping at the ripped and shredded state of his chest and abdomen. As she summoned a magic circle in each hand to continue healing him, the light from the spells drew his attention.\n\n\"You're awake,\" he said with a pained smile as he labored for breath, \"thought I might have lost you.\" Kal's eyes glazed over while staring up at the oni's tear-streaked face. In that same moment her healing spells sputtered and died, Kal had drained all of her magic trying to heal himself.\n\n\"Ria!\" Ikuno screamed, knowing that she only had seconds before she lost him for good.\n\n\"How can I help y...\" the sprite's words changed into a scream at the sight before her. \"Goddess! What happened!\"\n\n\"Nevermind that! I need those large crystals to keep healing him!\"\n\nMotes of light flew out and landed next to the kneeling oni. Ria positioned the crystals so they would lean against her legs when they materialized.\n\nLooking around and seeing the bed and floor soaked in red the sprite flitted over to Ikuno, who was already frantically using the crystal's power to finish healing Kal's body. \"Ikuno,\" she said quietly, \"you can't save someone who's lost this much blood, even I know that.\"\n\nThe oni sobbed at the avatar's words, \"I know, but I did this and I'm going to fix it. A life for a life.\" Ikuno reached deep inside herself for the first time since making the potion for Merantha. Ria watched as wispy white tendrils appeared from the center of Ikuno's chest and ran up her arms. When they touched the healing spells the magic circles became blindingly bright, making both Ikuno and Ria close their eyes from the glare.\n\n\"Wouldn't mind a bolt of lightning about now,\" the oni smirked.\n\nMoments later she heard Kal take a gurgling breath, without halting the healing spells she used her knees to roll him onto one side, letting him empty out the fluid that had collected in his lungs. After coughing a few times and leaving a red puddle next to where his head lay, Kal's breathing fell into a steady rhythm.\n\nIkuno felt the tug from her faraway shrine and knew that she had gone too far. Instead of stopping, she continued to pour her lifeforce into the healing spells. No matter the cost, she would make things right again.\n\n------\n\nKal awoke with a start, \"Ikuno!\" he yelled while scrambling to his feet, only to slip and fall back to the floor on the red-stained furs. As he pushed himself up he heard a quiet sobbing coming from over by the bed. His eyes widened from the sheer amount of blood in his vision, covering not just the furs but his arms and body as well. Looking over he saw Ikuno sitting up against the side of the bed, smiling. Next to her was Ria's ghostly form and the source of the crying.\n\nInstead of trusting his legs Kal quickly crawled over to the oni, shoving emptied magic crystals out of the way in his haste. \"Ikuno! Are you okay?!\" he asked in a panic, seeing that she was covered in red nearly as much as he was.\n\n\"No,\" she said still smiling, \"but I will be in a couple of years.\"\n\n\"What?!\"\n\nShe directed his attention to the small glowing ball of light she was holding in her hand. As he watched wisps of white streamed off of it towards the east.\n\n\"No, please Ikuno. No,\" he begged her. From his experience healing Master Ellis, he recognized it as what remained of her lifeforce.\n\n\"I nearly killed you, Kal. I had to make it right and it was the only way to save you.\"\n\n\"But... what happened?\"\n\n\"Ria will tell you, I don't have enough time left and I explained everything to her while you were asleep.\" Ikuno touched her head with two fingers, a small mote of light seeming to attach itself to them. She then brought the fingers up to Kal's forehead and when she touched him his mind was filled with an image of a small roadside shrine with statues and symbols he didn't understand carved into an assortment of stones. \"It will take me two years to recover from this,\" she said with a sad smile, \"It's a long journey to my shrine. You will need to finish that flight rune if you want to make it there in time to meet me when I can form a body again.\"\n\nKal opened his mouth to speak but Ikuno pressed a finger to his lips. \"Tell Perra and Aradelle I love them. Let them know I'm sorry I couldn't be there to tell them in person. Remember this isn't 'goodbye forever', just 'goodbye for now.' I love you, Kal.\" As the final wisps of light floated away from her hand Ikuno's body faded into nothingness.\n\n\"I love you too, Ikuno.\"\n\n------\n\nKal stood next to the shack just east of Aradelle's clearing, staff in hand and once again wearing his black cloak with the red designs along the trim. Winter had been hard without Ikuno and he had been champing at the bit to get on the road after she disappeared. Though she sympathized with Kal, Perra had been insistent that he wait until Bea, Adalena, and Aradelle woke up in the spring so he could tell her what happened in person. As an added incentive, Perra also told him her decision. With him leaving in the spring and the possibility of him not coming back, she wanted to have his child growing inside her before he left.\n\nLady Nina confirmed Perra was expecting just before the winter solstice and the young woman had been positively glowing ever since.\n\nGoodbyes were hard, especially with Kal knowing Perra was carrying his son or daughter. However, she flatly refused to hear any arguments for him staying. \"I miss Ikuno too,\" she'd said firmly before he let the issue drop. Gerda and Bea were sad that he was leaving but understood that this was something he needed to do. Just as with Bea and Aradelle, Ikuno and Gerda had gotten closer over summer and the golem was desperately missing her friend. It seemed to help Gerda's mood when he assigned her as caretaker of Ikuno's house while he was away. ",
        "At Perra's suggestion, he said his farewells to the rest of the girls and camped out the few days before Aradelle emerged. Bea woke up on the day he arrived at the little shack, allowing them a chance at some alone time before he left. Adalena wouldn't wake until the much slimmer Bea was fed well enough to take care of her daughter as well.\n\nAradelle was distraught at the news about Ikuno and bordered on hysterical when he explained that he was leaving as well. With one of her lovers gone and the other leaving, Kal spent a very chilly early spring night consoling the alarune. By morning she'd gotten her spirit back and was trying to get promises from him to bring back Azrin's head on a pike when he returned with Ikuno.\n\nNow he stood on the old road that ran past Aradelle's clearing. Looking to the south he could see the mountain range. Just beyond that was nearly everything he had ever known and experienced in his twenty years.\n\n\"Ria,\" he called.\n\nThe sprite appeared next to her bag then flitted up to sit on his shoulder. \"Yes, Master Kal?\"\n\n\"I could use some company,\" he said.\n\nRia just smiled as Kal took his staff firmly in hand and with a deep, steadying breath, turned and began walking north."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "magic",
        "monster girl",
        "monstergirl",
        "trc",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-runesmith-chronicles-ch-25-final"
}