{
    "title": "From Friendship Comes Love Pt. 02",
    "pages": [
        "Authors Note.\n\nHere's part 2 of the story. Thanks to all that liked the first part and I hope you like this part just as much, if not more.\n\nThanks to all that sent the emails, it's appreciated.\n\nThe third and last part is written, and I'm just going over that one and should sent it in by the end of the week.\n\nI hope you enjoy this as much as I did writing it.\n\n65rebel\n\n*****\n\nSimone's mom was waiting on her husband to come home and she decided to give him one of his favorite beers before she told him. Then she laughed to herself, that's the same thing I did when I told him about Simone wanting to be a girl. What the hell, if it works why mess with it. \n\nSimone's dad pulled up into the driveway. He was in a good mood, he had found all the parts he was looking for to finish the project he was working on. He walked into the house and said loudly, \"Hey babe, I'm home.\" \n\nShe walked out into the living room, kissed him hello and asked, \"Find everything you needed?\"\n\n\"Sure did,\" He replied, \"I was kind of surprised they had everything, but they did.\" \"How's your morning been?\n\n\"Pretty good.\" She replied. \"Simone called to see how we were and to talk about next weekend when we go to see her. She also had something to ask about it and wanted to make sure we were okay with it.\"\n\nHe smiled asking her, \"And what was that?\"\n\n\"Well.\" She said walking in to the kitchen as he followed her. She handed him a beer and continued, \"She asked if we would want to go to a car and bike show/ swap-meet with her and her boyfriend.\" \n\nShe leaned against the kitchen island a with folded arms waiting for him to say something.\n\nHe had just took a long drink and he swallowed to clear his throat and said, \"Sure, why not,\" He said, \"A car and bike show with her and her boyfriend sounds ...\" \n\nHe suddenly looked at her, looked at the beer, then looked back at her again, \"Wait, what boyfriend?\" \n\n\"You know,\" He said lifting the beer, \"Just once can you give me a beer without shocking me?\"\n\nShe laughed because she knew he was joking, then asked him, \"It works don't it?\"\n\nHe took a long drink and grabbed her hand an pulled her to him. He kissed her, then guided her into the living room. They sat on the couch and he said, \"OK, I've had half of this, now how about telling me what's going on.\"\n\n\"Well, let's see.\" She started, \"His name is Jason and he's the guy she's been working with for most of the past year.\" \n\nHe interrupted her, \"Hon, before you go on, ah... does he know about her background?\"\n\nShe nodded yes and continued, \"Apparently he found out by accident one day when they were working on job and he walked in on her while she was changing and saw her half naked.\" She laughed and went on, \"According to Simone, he turned beet-red and almost ran out the room. At first, she thought he was upset, seeing what he saw, but they sat down and talked about it later. She found out that he was upset because he had embarrassed her walking in like that, not that he had a problem with her.\" \n\n\"Simone informed me that she told him the whole story, including when she dressed up to prove to us she was serious.\" She sat there for a second, then continued saying, \"You know, I think that's the first person she ever told that too.\"\n\n\"Anyhow, after that, they became very close friends. They were always working together, living out of each other's pockets.\" She looked at him, reached out and patted him on the cheek, \"Sound familiar?\" she asked.\n\n\"Yeah, now that you mention it.\" He laughed. \"That was sort of the same way we got together.\"\n\nShe grinned at him with the same evil little grin Simone used and said, \"And look how good it worked out for us.\"\n\nHe took another drink from his beer and asked her, \"Did she tell you anything else about him?\" \n\n\"Yes she did, he's ex-Navy, he was in 8 years and when he got out he went to work for their company and while working there got his degree.\" Then she then proceeded to give him more of the details that Simone told her.\n\n\"And how long have they been going out?\" He asked.\n\n\"She didn't say exactly, but I get the feeling it hasn't been long.\" She answered. Then she told him of the incident with Jason's ex and what he said to her when she started in on Simone because she was at his house when she showed up.\n\n\"Is that when they finally started dating?\" He asked.\n\nShe paused for a minute trying to decide on how to continue. She decided that she would tell him just the way Simone had told her.\n\nShe shook her head no and continued, \"That came some weeks later.\" She looked at him and said, \"Simone told me about it and it wasn't a pretty story, thought it did end up in a good way.\"\n\nHe looked at her and said, \"Look babe, we've never kept anything from each other, so please don't start now, just tell me what happened.\"\n\nShe proceeded to tell him the story and she could see how mad he was getting. Then she told him exactly what Simone told her, \"She was scared out her mind and not knowing what else to do, she called Jason. He apparently broke all speed records to get to her before something happened and he got there just as this drunk was going to hit her after calling every name in the book. Simone said that Jason grabbed his hand as he swung back to hit her and spun him around saying' \"Hey, asshole, why don't you try that on me?\" And then proceeded to throw him away from her and he put himself between her and the drunk.\"\n\n\"The drunk got up,\" She continued, \"and came at Jason.\" \"But Simone told me that Jason had been taught martial arts by a friend of his, a SEAL, from his time in the Navy and he grabbed the guy's arm, bent it up behind his back and pounded him into the wall of the building a few times. The guy called Simone some more nasty names while Jason had a hold of him and he slammed him against the wall another time or two and told him to apologize to her.\"\n\nShe looked at her husband and could see both relief and anger on his face as he listen. \"Finally after the third time telling him to apologize to her, he told him that if he didn't, he was going to rip out his arm and beat him with the bloody end. Simone said that the bouncer from the place, who's also friend of Jason's, came out just then and told the drunk he better do as he was told, because Jason meant what he said.\" \n\nShe laughed, \"Then he told Jason if he was going to \"break this one\" please hide the body because the paperwork's a bitch and he walked back inside.\"\n\n\"From what Simone told me, she guesses that the drunk finally got it through his head and he apologized.\"\n\n\"Then she told me that Jason came over to her after that, took her in his arms holding her close to him till she calmed down, then said to her, \"It's over now, your safe.\" \"Don't worry, I'll never let anyone hurt you.\" \n\n\"He took her back to his house and she stayed there that night because she didn't want to be alone after all that happened. Once she had cleaned up, she came back out and they talked about what had happened. She told him about some girls like her that were beat up badly in similar situations, including her friend and how It's something that happens more often than most people realize.\"\n\n\"Then from what she told me, he took hold of her hand and told her, \"I know it does, I've read about it myself.\" \"I have never understood why people have to such assholes to other people just cause they're different.\"\n\nSo she told him, \"Well, I just wanted to say thank you again. You say it was no big deal, but it was to me.\" And he answered back to her without thinking about it with, \"It's okay Simone, it's just one of those things you do when you love someone.\"\n\n\"She was stunned when she heard that, mainly because she had already started falling for him before that night but never said anything to him because she thought he wasn't interested in her other than being a friend.\"\n\n\"But they talked and he told her that he felt he was falling in love with her the night he tossed his ex-girlfriend out of the house.\"\n\n\"Oh, and before you ask, yes, I think it's real, and not just because he saved her. I listened to all she had to say about everything and I do believe our daughter is head over heels in love with him and the feeling is mutual on his side. \"\n\n\"But, I really think you should talk to Simone about it.\" She told him. \"Because I think you're in for a big surprise.\"\n\nHe got a confused look and asked, \"Surprise, how so?\"\n\n\"Well, up until today, she always seemed, oh I don't know, timid maybe? You know how she could be. But when I was talking to her before she told me all this, she was very assertive and positive, like she knew she had what she wanted. She laid all the facts out when she told me the story. I could just hear the wonder and love in her voice when she told about all this and about how she and Jason were supposed to be together.\"\n\nHer husband sat back, sighed, then said, \"Well, I guess we'll find out in a few days, I certainly hope she's right, all I ever wanted for her was to be happy. He sounds like a great guy, but I'll decide that after I talked to him.\"\n\nShe laughed out loud and looked at him saying, \"Oh, and I had a request from Simone, she asked me to talk to you to make sure you go easy on him. According to Simone, for some reason, he won't tell her why, it seems that he's afraid of you and that you'll tell him she can't be with him.\"\n\nHe smiled at her and said, \"Good, I don't care if they love me, as long as they fear me.\"\n\nShe laughed at him and said, \"Oh yeah, mister tough guy.\" She grinned at him, \"That was something else Simone said, She thinks that maybe Jason is a long lost cousin of yours because your both so much alike.\" \n\nHe grinned at her and asked, \"Oh, really, how so?\"\n\nShe laughed again and told him, \"She said that both of you are \"smart assed\" and you both would rather make a joke of something than get mad.\"\n\nHe laughed with her and replied, \"You say that likes it a bad thing.\" He then grabbed her and kissed her soundly.\n\nHe held her for a minute and asked grinning, \"Tell me, did she say how long it took her to convince him to meet and go with us?\"\n\nShe looked at him saying, \"You know, that's funny, I asked her the same question and she told me it was his idea. He said he was looking forward to meeting us.\"\n\nHe looked at her with raised eyebrows and said, \"Okay, now I really want to meet him. Though he sounds a little too good to be true.\"\n\nShe shook her head no, then said, \"No, I don't think so, if you had heard the story straight from her, I think you would believe it too. That's why I said you should talk to her an get the story from her directly. I really think what the two of them have is real and that they have something most people only dream about.\"\n\nHe could see her eyes were wet with tears as she remembered what she was told and what she had heard from Simone. Then she continued saying to him, \"Look babe, we love each other very deeply also and I know we wouldn't be happy unless we were together. But not to the extreme that Simone and Jason have seem to have for each other.\"\n\nHe looked at her and reached up to wipe the tear he saw rolling down her cheek. He kissed her and said, \"I guess I'll have to believe you then.\" He grinned at her and continued, \"You don't normally get this girly and mushy, your normally very level headed.\"\n\nShe looked at him and said, \"Smart-ass\"\n\nHe laughed, let go of her and threw his arms wide saying, \"As advertised\" \"Or so I've been told.\"\n\nHe then look at her for a minute and asked, \"Look, do you think you could give me another beer? It seems like the only time you give me one is when there's something momentous going on or about to happen.\" \n\nShe walked into the kitchen and left him standing there. As he waited, he heard two pops and hisses of her opening a couple of bottles, then she walked out and handed him one.\n\nHe sucked down part of it and sighed, \"Oh that's good and no drama, no problems.\" \n\n\"Why did you do that?\" He asked her. \"Because I asked or is there something else?\"\n\nShe grinned an evil grin at him and said, \"Just cause I love you,\" Then she reached out and patted his butt and continued, \"And because you have such a cute ass.\"\n\nHe laughed at her saying, \"Yours ain't too bad either baby.\"\n\nShe leered at him with the same look Simone always got and said, \"Why don't we go upstairs and compare them and see.\" She kissed him saying \"Winner gets a prize.\"\n\nOn Saturday, Simone was up and waiting for her parents. Her mom had said early and she knew what early meant to her dad. She was slightly nervous wondering just what would happen when they met Jason. I really hoped they get along she thought, as she made a pot of coffee.\n\nJust as the coffee was done she heard the doorbell ring and she hurried to the door. It was her parents and she opened the door greeting both. \"Morning Mom, Dad,\" and she gave them both a hug and a kiss on the cheek. \n\n\"Great timing,\" She continued, \"The coffee just finished. Come on in.\"\n\nHer dad set a box on the table saying, \"Good, I really need some.\" He pointed to the box and said, \"And we even brought some cinnamon rolls and sticky buns, since I know you have a weakness for them.\" \"There was a little bakery on the way here.\"\n\nSimone laughed asking, \"Was it that little hole in the wall one by the strip mall?\" \n\n\"Yes,\" He answered, \"What's so funny.?\"\n\n\"Oh, not much,\" She smiled saying, \"It's just that's the same one Jason always stops at and for the same reason. Let me just pop them in the oven to warm them up.\"\n\n\"Ok,\" He replied. \"While we're waiting, I think you and I should talk.\" He saw the worried look on her face when he said that and smiled saying, \"First off, get the scared look off your face, there's no need for it. Your mom has already told me everything you told her and you know I'll always support your decisions.\"\n\n\"Or at least you should by now.\" He laughed. \"It's just that she told me I should hear parts of it directly from you, instead of second hand from her.\"\n\nHe turned to his wife and asked, \"Hon, do you think you could wait in the living room while we talk alone? It won't take long.\"\n\nShe got up and kissed him saying, \"Sure babe, not a problem.\" She got a cup of coffee and she went into the other room.\n\nThey both got a cup of coffee and sat down at the table. He took a sip and said, \"Man, that's good coffee, what kind is it?\" \n\nShe smiled replying, \"It's a Italian Roast blend that...\"\n\nHe laughed and interrupted her finishing her sentence, \"Jason told you about and he drinks.\"\n\nShe giggled and said, \"Ah, Yeah. He always brings it on the long jobs we go on because hotel coffee is so lousy most of the time. I've got a couple of extra bags of it if you want them, I can always get more. I can also give a link to their web site and can order it online if you want.\"\n\n\"Thanks baby.\" He said, \"That sounds good to me. Now, let's talk.\"\n\nThey sat there talking for a bit and he asked her different questions about her and Jason. From everything he heard and from the look on her face we she talked about him more or less convinced him that they were truly in love with each other and that Jason was as good to and for her as he was told by wife.\n\nHe told her that and was surprised by the relieved look on face and in her voice. Then he decided that he wanted to hear the story of the night he came to her rescue directly from her.\n\n\"Honey,\" He started, \"I'd like to hear the story about that night when he helped you, if it doesn't upset you too much that is.\"\n\nShe looked at him, took his hand and said smiling, \"It's alright dad, I'll tell you about it.\"\n\nShe explained to him just what happen and how. Then said to him, \"Dad, I was so scared that I didn't know what to do, all that went through my mind is what happened to that friend of mine when she got into the same situation.\"\n\nShe took a deep breath and continued, \"The only thing I could think at the time was to call Jason to come and get me before something bad happened. The first thing he told me was to calm down so I can think straight, then see If could find the bouncer. He's a friend of Jason's. Then he told me he'd be right there.\"\n\nHer father listen to this thinking to himself, \"Smart guy\" and then his mind flashed to what she had said about her friend. He remembered when she had told them about that and he was always worried that something like would happen to her.\n\n\"Well,\" She continued with the story, \"Jason apparently broke every speed record and limit to get there as fast as he could. Luckily, it's not that far from his place.\" She took a deep breath and said, \"But as I was waiting for him, the guy came out and he looked and acted very drunk.\" \n\n\"I had started backing up and then heard a car screeching to a stop and I saw Jason jump out and start to run over to me.\"\n\n\"As he was running over to me, the drunken asshole started cursing at me again and calling me names that I won't repeat. Then, just as Jason came up to us, the drunk swung back like he was going to hit me.\" \n\n\"I drew back some more and the next thing I know, Jason grabbed the guy and spun him around saying' \"Hey, asshole, why don't you try that on me?\" Then he threw him away from me and put himself between me and the guy.\"\n\n\"The guy looked at Jason and slurred drunkenly, \"Who are you?\" \"You the faggots boyfriend?\" \n\n\"Then he looked at me and yelled, \"Well freak? Is he?\"\n\nSimone took a drink of the coffee and her father saw her hands shaking a bit. So when she put it down he took her hand and said, \"Honey, you don't have to finish if you don't want to.\"\n\nSimone shook her head and said, \"No, that's alright, I'm fine. I'm just about done anyhow.\"\n\nShe took another deep breath, looked at her dad with a amazed look on her face and said, \"Dad, you just won't believe what happened next, I was there and I'm still amazed myself, but it was like something out of an action movie. The guy had come at Jason and the next thing I know, Jason has his arm bent up behind his back, then starts pounding this drunk against the wall.\"\n\n\"What I found out later,\" She continued, \"Was that a friend of Jason's from his Navy days, a SEAL, taught him all this martial arts stuff to protect himself.\" \"As Jason had ahold of the guy, I watched him grind his thumb into a pressure point that made the guy scream and collapse in pain.\" \n\n\"Jason told the guy to apologize to me, then the drunk got mouthy with him, cursing him out. Then when he didn't, Jason pressed the point again and pulled up his arm farther and said to him again to apologize to me or he was going to rip his arm off and beat him with it.\"\n\n\"Jason's bouncer friend had just come out when Jason was telling him for the third time, when he laughed and said to Jason, \"Try not to break this one, OK?\" \"But if you have to, please hide the body because he hated paperwork.\" Jason looked up at him and laughed saying \"OK, No problem. Then he bounced the guy off the wall once more and yelled this time, \"Apologize to her, NOW. \n\nThe guy groaned and said, \"I'm sorry.\" But apparently Jason wasn't satisfied yet, so he told him to say it louder so I could hear it.\" \"He said it louder and then he let the guy loose and he dropped to the ground in a heap.\"\n\nHer father just sat here in amazement as she related all this to him. She was right, it did sound just like an action movie. He then asked her, \"What happened after that?\"\n\n\"Well, Jason walked over to me and took me in his arms holding me close to him. As I was still shaking he said to me, \"It's over now, your safe.\" He stroked my head while he was holding me trying to calm me down and then said to me, \"Don't worry, I'll never let anyone hurt you.\" \n\nHer dad was stunned at the emotion she had put into the last part as she told him, and he asked her, \"Is that when he told you how he felt about you?\"",
        "\"No, that was later,\" She continued, \"I had asked him if I could stay at his place that night because I didn't want be alone. He agreed, and we went back to his place.\" \n\n\"Once there, he gave me some clothes to change into and I got cleaned up. While I was doing that, he was getting us some wine and snacks and we were going to just relax and watch a movie.\"\n\n\"Well,\" She said, \"To more or less finish the story up, we were sitting there watching the movie and we were all kind of relaxed, finally, and I thanked him again for coming to my rescue.\"\n\n\"He was sorta focused on the movie and very relaxed, when he told me, \"It's okay, Simone, it's just one of those things you do when you love someone.\"\n\nI was stunned by what he said, I couldn't believe it, so I held him by his chin and turned him towards me and asked him, \"You love me?\" \"You mean you really love me?\"\n\n\"He looked at me for a bit, then took me in his arms and said, \"Yes Simone, I love you, I really do. I love you so much it scares me a little. I thought I did after that other day, but I didn't know what to do or say to you. I wasn't sure how you take it. But tonight, when I saw that guy come after you, something in me snapped and I knew I had to protect you no matter what because I did love you more than I've ever felt about anyone before.\"\n\nShe looked at her dad and with tears in her eyes said to him, \"Then he hugged me tightly and said, \"I want to have you in my life, no, I need you in my life now and always. I realized tonight I didn't know what I do if you were gone.\"\n\nSimone picked up her coffee and looked into the cup. Seeing that it was almost empty, she stood and went to fill it. She looked at her dad and asked him, \"Would you like some more, dad?\"\n\nHe said yes and she filled his cup, then sat back down continuing, \"Well, to make a slightly long story short, we've been together since then.\"\n\nHer dad look at her critically for a moment, then asked her hesitantly, \"And he doesn't have a problem with your,\" He paused for a second more and waved his hand saying, \"Plumbing, for lack of better term to use in polite company.\"\n\nShe looked at him and giggled, then said, \"Yes, dad, he's fine with my \"Plumbing\".\n\nShe laughed as her father reddened and she said to him, \"Dad, there's no reason to be embarrassed.\" \n\nHe looked at her and laughed saying, \"I'm only embarrassed, because your my daughter. I don't think I'd be embarrassed if I was talking to someone else, not that is something that normally comes up in casual conversation.\"\n\n\"I just have one more question, then I'll stop. And you don't have to answer if you don't want to, you're a grown woman and your entitled to your privacy.\" \"Have you and him,\" Now he blushed full on turning beet-red, \"Had sex yet?\" \n\n\"I'm not trying to pry,\" He continued quickly, \"But that is an important part of any relationship and he might be comfortable with how you are, but not actually doing anything together.\"\n\nNow it was her turn to go beet-red, but she answered him, \"Ah, yes we have. And yes he was fine with it.\" She looked at him and said, \"So don't worry, we don't seem to have any problems in that area.\"\n\nGlad that this part of the conversation was over, he stood up and faced her. He smiled at her and he opened his arms wide. With a happy little cry, Simone was in his arms and he was hugging her. As he hugged her he told her, \"Simone, I love you, and I'm very happy that you've found someone to love this much and he you.\" He leaned back a bit and took her chin to tilt her head up to look at her. Then with tears in his eyes, he kissed her forehead.\n\nShe looked at him marveling at the tears in his eyes and hugged him again and said simply, \"Thank you daddy.\"\n\n\"I'm also glad,\" He continued, \"That he was there to protect you when I couldn't be, your still my daughter and it's my job.\" He wiped his eyes an continued, \"I'm always so afraid for you, hoping and praying that something like that doesn't happen to you.\"\n\nShe smiled at him and said, \"Dad, I'm a grown woman now, when are you going to realize that?\"\n\nHe smiled back and replied, \"When you get older than me. Sorry it's the rules. My daughter, my rules, I make them up. Deal with it.\"\n\nThey were both laughing when her mom walk back into the room. She looked at them and asked her husband, \"Well, hon, believe me now, that you've heard the whole story?\"\n\nHe nodded yes and said, \"I think she made a good choice, but I'll know for sure after I talk to him.\"\n\nHe saw the look on Simone's face and said, \"Don't worry, I trust your judgement.\" \n\n\"And also,\" He continued, \"I've been warned by your mother, not to be, ah... how did you two put it... Oh, yes a smart ass.\" \"I'm not promising anything, but I'll try. Did you ever find out why he was so nervous about talking to me?\"\n\nSimone nodded yes and replied, \"Yes I did, it took a while but I finally coaxed it out of him. He had a bad experience with the father of a girl he was seeing when he was young and before he went in the Navy. He didn't like Jason for some reason and forbid them to see each other. But she still wanted them to be together, but Jason told her no, he wasn't going to come between her and her father.\"\n\n\"Then he told me that he was so afraid that he would lose me, like he did her, after finally finding me after all these years and it scared the living hell out him, but he didn't know how to stop it from happening.\" She smiled at her dad, \"You would have to know him like I do to understand that. He's one of those types that absolutely hates not being able to figure something out. It drives him slightly crazy.\" She smiled again asking, \"Sound familiar?\"\n\n\"Well, yeah, I guess I do.\" He looked at his wife and she was grinning at him, \"I can certainly understand that.\" She had just described him to a tee. \n\n\"Simone, you don't know this,\" He continued, \"But I had a similar problem with your grandfather, not as drastic thank God, but he never thought I was good enough for your mother. But, we finally convinced him and all's well that ends well.\" \n\nHe reached over and took her hand saying, \"So don't worry, you two aren't going to have that problem. He sounds like a very nice guy from all you and your mother told me.\"\n\n\"Thank you daddy.\" She replied. The she turned to her mom and told her thanks also.\n\n\"I need another coffee.\" He said, \"And those sticky buns are calling my name, let's eat.\" Simone got the rolls and buns out of the oven, then poured them all more coffee.\n\nWhile they were eating, her dad asked her, \"Oh, I don't know if your mom mentioned it, but do you think Sir Lancelot or is it Jason Statham, would mind if we pick him up and I drive? I'm looking for some parts and if I can find them, I can just put them in the back of the SUV. That and we can talk before we go.\"\n\nShe giggled as she told him, \"Well, he's a little bit of both, at least to me, but he doesn't have a horse and he has hair. But I doubt he'll mind. Just let me call him and check.\" She picked up her phone and called him. When he answered the phone and she heard his voice a thrill went through her. She missed him badly, even though she had just seen him last night.\n\n\"Hi, hon, it's me.\" She said, \"My parents are here and my dad wanted to know if you'd have any problem with us picking you up, instead of you driving. He's looking for some parts and he thought it would be easier if had his SUV with him if he found them.\" \n\nJason agreed saying, \"Sure, makes sense to me, what time you coming over?\"\n\n\"Should be long,\" She replied, \"We're just having coffee right now and should be done soon. Say, maybe a \u00bd hour, 45 minutes.\" \"It's a little early, but my dad wants to talk to you before we go.\"\n\n\"Okay,\" He replied a little nervously, \"I'll be ready, see you in a bit. I love you.\"\n\n\"I love you too,\" She replied, \"And I miss you.\" \n\nShe hung up the phone and turned to her dad, \"No problem, he's looking forward to talking to you.\"\n\nHer dad snorted out with a laugh, \"Oh, yeah, I bet.\"\n\nShe laughed and said, \"Well. He sounded a little nervous.\"\n\nHe laughed and told her, \"Don't worry I promised I'd be good.\"\n\nNow it was his wife's turn to snorted out with a laugh, \"Oh, yeah, I bet. C'mon you two, finish your coffee and then let's go get prince charming.\"\n\nJason was wandering around the house making sure everything was neat and tidy. He really wanted to make a good first impression on Simone's parents. To cite the old clich\u00e9, he was as \"Nervous as a hooker in a church.\"\n\nHe had stopped later on in the week and picked up the engagement ring she liked and he hoped he got the right size. The clerk had said it was no problem if it wasn't, they could get another size or size that one. He was planning on asking her after they got back from the show and more importantly after he talked to her dad and got his permission. A little old fashioned he thought, but he also thought it was the right thing to do and that it would go a long way on her parents feelings towards him.\n\nHe had just walked back into the kitchen again and heard a someone pull up into the driveway. \"Simone and her parents are here.\" He said to himself. \"Calm down, don't be nervous, be cool,\" He kept repeating to himself.\n\nThey were coming up the walkway with Simone leading as he opened the door to greet them. Simone gave him a big hug and kiss and said, \"Jason, I'd like you to meet my parents, Mike and Linda.\" \n\n\"Mom, Dad this is Jason. \n\nJason shook hands with both them saying, \"It's a pleasure to finally meet you, Simone has told me a lot about you both. Please sit down.\" \"Can I get anyone anything?\" He asked.\n\nThey declined and they went into the living room to sit down. They talked a little while making small talk and then Mike said, \"Jason, Simone tells me your into motorcycles and you're in the process of building one. What kind is it?\"\n\nJason was happy he finally had something he could talk about, coherently, and he replied, \"Yes sir, I am. I'm building up a Harley Panhead Bobber.\" \"It's about 3/4 of the way done, I've been doing the work as I can find the parts I want.\" Then he chuckled a little and added, \"Or afford.\"\n\nMike laughed with him saying, \"I can certainly relate to that. I know Simone has told you I'm into cars, I'm redoing a 70 \u00bd Camaro myself.\"\n\nJason nodded saying, \"Now that's a nice car, I've always loved the body style, though I wouldn't turn down a 68 or 69.\" \n\nSimone and her mom looked at each other and said silently, \"Men.\"\n\nLinda turned to Simone, \"Why don't you show me around the place.\" She turned to Jason and said, \"And you can take my husband down to see your bike before he drools all over your carpet. I believe he wants to have a private word with you anyway without the women-folk around.\"\n\nJason stood quickly and a little nervously, so much so that he banged into the coffee table, knocking things over. \"Crap.\" He said, then blushed and looked at them and said, \"Excuse me, sir, the bikes in the garage, if you'd follow me.\"\n\nMike stood up and came over to him and placed a hand on his shoulder saying, \"Relax son, I've been made to promise and threatened with serious hurt if I give you too hard of time. C'mon Lancelot, let's go look at your bike.\"\n\nAs they walked passed Simone, Jason bent over and gave her a quick kiss and whispered into her ear, \"Thanks.\"\n\nShe stroked his cheek and smiled at him and said, \"Go, I'll just show mom around.\"\n\nJason and her dad made their way to the garage and he snapped on the lights as they entered. The bike was sitting in the middle of the garage almost completed, but Mike could see it still had a way to go yet. It looked like a very professional job to him and told Jason that. \n\nJason smiled and told him thanks, \"I've still haven't decided on a couple of things yet and of course I'm still wondering about paint, but I figured I wait till it was all together before I decided on that. I really don't want the old standby, satin black, I think it needs another color.\"\n\nMike agreed with him saying, \"Yeah, I feel the same way myself. You spend all the time and money doing it up just right and you really don't want it looking like everyone else's.\"\n\nThere was a couple of lawn chairs in the garage and Mike said to him, \"Let's sit and talk a bit.\"\n\nJason sat down and asked him \"What would you like to know sir?\"\n\n\"First off,\" Mike said, \"My name is Mike, not sir.\" He gave a short laughed and said. \"I'm sure, being ex-Navy, that you've heard the saying, \"Don't call me Sir, I work for a living.\"\n\nJason laughed, then said, \"Yes sir... Uh, I mean Mike. Force of habit I guess.\"\n\nMike smiled at him trying to put him at ease, \"Look, I've already heard the story about how you and Simone met and started going out. But I just had a couple of questions I wanted to ask you.\"\n\n\"I understand that Simone told you the whole story about how she ended up like she is. Did she tell you everything?\" He asked.\n\nJason nodded his head saying, \"I think so. When we had finished talking about it, she told me that I was the first one she ever told the whole story to. He paused for a minute, then continued, \"I was really gratified, ah, no, honored, that she liked and trusted me enough to relate everything to me. After all, we were just friends at the time and we really hadn't known each other that long.\"\n\n\"Well, it sounds like she told you everything, did she say why she did?\" Mike asked.\n\nJason nodded yes, \"She told me she wanted to do it because we had become close friends and she thought I was freaked out when I accidentally saw her undressed, she thought I wouldn't want to work with her and or still be friends because she was transgendered.\"\n\nHe stood up and went over to the fridge he had in the garage and got a bottle of water out asking Mike if wanted also. Mike nodded yes and Jason handed him a bottle, then sat back down again after talking a long drink.\n\n\"But,\" He continued, \"I wasn't upset about the way she was. To tell the truth, I was just really stunned that she was transgendered.\" \n\nHe shook his head, \"I could have never believed that someone who looked and acted like she did, could have been born a boy. I explained this to her and that was when she decided to tell me the whole story.\"\n\nMike nodded his understanding with a lop-sided grin, \"I can certainly relate to that, when Linda and I talked about it and she called Simone to come down, the first thing I heard was a soft feminine voice saying, \"Daddy? I turned to look and I believe the first thoughts and words out of my mouth seeing a girl, no, a daughter in front of me was, \"Holy Fuck.\" I really just couldn't believe it either. Seeing her like that convinced me she was right more than all the explanations.\"\n\nMike took a drink of his water and continued, \"Linda and Simone related all the rest of what happened till you got together. I've got one more question for you, but first I want to thank you for helping her that night at the bar. Her mom and I have always been worried about something like that happening. She told you about what happen to a friend of hers?\"\n\nJason nodded yes and Mike continued, \"So, when she left home for collage and afterwards, it's was always in my mind and that it's my job to protect her, but how can I if I'm not there.\"\n\nJason stood up and looked at him. He could see that Simone's dad had a skim of tears in his eyes and said to him without any forethought, \"Mike, I know it's your job to protect her and always will be, you're her dad, but would it be all right with you if I took care of that when you're not around?\"\n\nMike sat there stunned for a second then with a few tears rolling down his cheeks stood up also and grabbed Jason in a rough hug and said, \"Yes son, you can, and thank you.\"\n\nThey sat back down and Mike continued, \"As to the last question, which I've already asked Simone, and I'll tell you the same thing I told her, if you don't want to answer if you don't have to, it's no big deal. She told me that you two are having sex.\" \n\nSeeing Jason turn red he said quickly. \"No details,\" He laughed, \"Just that you are.\" \"Did you or do you have a problem with that? I know she decided she was never going to have the reassignment surgery because of the risks and I agree with her.\"\n\nJason, still beet-red, said, \"Yes sir, er... Mike, we are, and no, I didn't have a problem with it or the mechanics of it.\" \n\nHe took a drink of water, then continued, \"And for the life of me, I couldn't give you a reason why I didn't. Maybe it's because I love her and she means so much to me. Maybe it's because I've never felt that a person's gender is defined by a piece of flesh and muscle. I've always thought that what a person had up here,\" he touched head, \"and here,\" touching his heart, \"is what defines someone.\"\n\nHe took a long drink of water and continued, \"That night after the scene at the pub and later when I finally told her how I felt about her, she asked me with tears in her eyes, \"Do you really mean you love me, really love me?\"\n\nI stood up and took her in my arms saying to her, \"Yes Simone, I love you, I really do. I love you so much it scares me.\"\n\n\"I had thought I did,\" He added, \"After the incident with my ex, but I didn't know what to do or say to her. I wasn't sure how she would take it. But then after that night when I saw that guy come after her, something in me snapped and I knew I had to protect her no matter what because I did love her more than I've ever felt about anyone before.\"\n\n\"So, I hugged her to me tightly and told her, \"I want to have you in my life, no, I need you in my life now and always. I realized I didn't know what I do if she were gone from my life.\"\n\nHe took another drink and emptied the bottle, took a breath and continued, \"After I told her I loved her, she stood up in front of me. She looked at me for a second, then proceeded to strip, first taking off her top, then the shorts. Then she stood there and she was more beautiful than any other woman I've ever known.\"\n\n\"She looked at me and said, \"Jason, look at me, this is who and what I am. If you do love me, you'll have to take me just like this. I hope you can, because I feel the same way about you, I fell in love with you from almost this first time we meet. But I didn't know if you would be with a girl like me.\"\n\nJason turned beet-red again and said, \"To make a long story short, I told her I could and then proceeded to prove it to her.\"\n\nJason fidgeted a little and said to him, \"Mike, I hope this answers your question, because it is a little embarrassing to me.\" \"After all, you're her father and this isn't really something I would have discussed with anyone, let alone the girl's father.\"\n\nMike laughed. \"Embarrassing to you? Think about how it is to me. No, I'm fine, the only reason I asked was, like I told Simone, that really is an important part of any relationship and I just wanted to make sure everything was all right.\"\n\nJason relaxed, glad that it was over. So he thought it was his turn, \"Mike I do have a question, a favor to ask of you.\"\n\n\"Sure son, what is it?\" He asked.\n\nJason stood and asked him, \"Sir I would like your permission and your blessing to ask Simone to marry me.\"\n\nHe added quickly, \"I know this seems to be a little fast, but as I imagine you've been told by Simone, we've only been together a short time, officially. Unofficially, we've been together almost a year between work and other times we've been together outside of work. We know each other better than people that have actually been dating. I wouldn't be asking this unless I was 100% sure on how much I love your daughter.\"\n\nMike stood also, he had a feeling that this was what he was going to ask even before Jason did. \n\nSo he said to Jason with a smile, \"Yes son, you have both from me. I'll talk to my wife, but I sort of doubt she'd have any qualms about it.\" He took Jason's hand and then hugged him saying, \"Welcome to the family.\"",
        "Jason with a sigh of relief, said, \"Thank you Mike, now all I have to do is ask Simone and see if she'll say yes.\"\n\nMike snorted out a laugh. \"Yeah, right, like she's going to say no. I think I can pretty much promise she'll say yes. I've never seen or heard her this happy then when she talks about you two.\"\n\nThen a thought crossed his mind and he asked Jason, \"Not to throw damper on this, but are you going to be able to marry her, legally that is.\"\n\nJason shrugged, then slightly nodded his head. \"I think so, at least by what I've researched we should be able to. I've got one more thing to check, but that's minor. But, if something happens where we can't, as far as I'm concerned we'll still be married in our minds.\"\n\n\"Good.\" Mike said, \"When we're planning on asking her?\"\n\nJason grinned at him and said, \"Well, I was sort of thinking of today after the show. We can come back here and have dinner, I was thinking about doing up Italian sausage and peppers on the grill. Then I'd ask her after dinner.\"\n\n\"Sounds like a plan to me.\" Mike said. \"One thing, when we go back into the house, don't get upset when I first talk to Simone.\" He laughed, \"As I've been told, by both my wife and daughter, they consider us both \"Smart-asses.\" \n\nHe grinned at Jason, \"And I'd sorta like to prove them right, since I refuse to grow up.\"\n\nJason laughed, \"Fine by me, but a little advice, never give your wife the permission to whack you upside the head if act grown-up, I made that mistake with Simone and she seems to take great joy in doing it.\"\n\nThey both had a good laugh together and proceeded back into the house. They stopped just before going in and Mike turned to Jason and said, \"Ok, now get the silly grin off your face, that is if you can, and follow my lead.\"\n\nThey went into the house and saw Linda and Simone sitting at the kitchen table. Simone looked up as she heard them come in, she was a little taken aback because her dad had a frown on his face and Jason looked at little down. She gave Jason a questioning look that he knew so well and he just shrugged his shoulders a bit. The she stood and looked at her dad.\n\nHer dad walked over to her and laid both hands on her shoulders and squeezed them saying sternly, \"Simone, If you ever and I mean ever,\" He could see a look of despair on her face, then pulled her into a bear hug saying, \"Ever let this one go, I'll disown you.\" He pulled back to smile at her and kiss her forehead.\n\nShe gulped and looked over at Jason who had a big dopey grin on his face, he shrugged and said to her, \"He likes me.\"\n\nSimone looked at her mom and both of the said at the same time, \"Smart-Asses.\"\n\nAnd both Jason and Mike said together, \"As advertised.\"\n\nSimone ran over to Jason and started kissing him and hugged him. Jason whispered in her ear, \"I love you.\"\n\nMike and Linda stood there side by side with their arms around each other and they were smiling also. Mike tuned to Linda and said \"I love you too.\" Linda, with tears in her eyes, just smiled and hugged him.\n\nThey left the house and went to the show. It didn't take long to get there and they started to walk around. Jason and Simone walked along like they were floating on air, hand in hand. Mike and Linda were a little bit behind them when Linda asked him, \"So was everything I told you true?'\" \n\n\"Oh course it was.\" He responded, \"What? Did you think I didn't believe you?\"\n\n\"No,\" She responded back, \"I just wanted to make sure everything was okay.\"\n\nHe grinned at her, \"Everything is fine, I just had some things I wanted to talk about with him, just to get it straight in my mind. He really is a great guy, and look at how happy they are.\" \n\nThe he laughed, \"And I guaranty, that Simone will be even happier later on, and probably you also.\" he added. \n\nShe grinned at him, \"What do you mean by that?\"\n\n\"Oh,\" He said, \"Just that you get to buy a new dress. You'll need it for the wedding. He's going to pop the question when we get back.\" \n\n\"What?\" She asked happily, \"When did this happen?\"\n\n\"When we finished talking, he asked me if he could ask a question. I said \"sure\", and then he asked for my permission and blessing to ask Simone to marry him.\" \"I said yes, welcomed him to the family, but said I had to make sure you were alright with it.\" \n\nHe smiled, at her and asked, \"You are all right with it aren't you?\"\n\nShe swatted him on the ass and said, \"God you suck so bad, Of course I'm okay with it. I think it's wonderful.\" \n\nThen she got a look of concern on her face and asked, \"Do you think they'll be able to get married, legally I mean?\"\n\nHe shrugged and told her, \"I asked Jason the same question, he told me that he researched it and it seems that they can. He said he had one more thing to find out, but it shouldn't be a problem. Then he told me that even if ended up that they couldn't for some reason, they still be married in they're minds.\"\n\n\"Good.\" She replied, \"I really do think they belong to with each other. Look at them, you'd think there was no one else around but them.\" \n\n\"Of course there isn't, don't you remember how we were in the beginning.\" He said putting his arm around her and pulling her close saying, \"I do, and I don't think we're that far from it still.\" He smiled at her, \"I still love you, and still more than anything else.\"\n\nHe turned his head and kissed her in and whispering in it, \"And you still have the cutest ass around.\" He then kissed her again.\n\nLinda redden, then smiled at him saying, \"Smooth-talker, I think your just trying to talk me out of my pants.\" \n\n\"Yep.\" He answered grinning.\n\nShe patted his cheek and said, \"Calm down big boy, you'll have your chance later.\" Then they walked along for a while holding hands like the kids were.\n\nSimone stopped and looked back for her parents. She saw them holding hands grinning and laughing about something. She turned to Jason and said \"Look.\" He turned and saw what she was looking at and smiled back at her saying. \"Hey, they're still in love, just like us.\"\n\n\"I know,\" She grinned back at him, \"It's just nice to see.\"\n\nAs they waited for Mike and Linda to catch up, Simone told Jason she was going to use the bathroom and she would be right back. Her parents came up just as she walked in, then Linda came up to Jason and hugged him saying, \"Congratulations, Mike told me what you asked him, welcome to the family. I'm very happy for you two.\"\n\nJason smiled saying thanks. Then asked her, \"Did Mike tell you I'll be asking her tonight after dinner?'\n\n\"Yes,\" She answered, \"And I can't wait to see the look on her face when you ask her and she accepts.\"\n\nJason smiled at her, \"That's if she says yes, she still might say no.\"\n\nLinda snorted out a laugh, \"Right, like that's got a chance of happening. Face it son, consider yourself married, it's all over but the shouting.\"\n\nJason looked slightly worried as he said, \"I hope your right.\"\n\nLinda looked at him for a second, then reached out and smacked him on the back of his head.\n\nJason looked stunned, but Linda just laughed saying \"Simone told me about the deal you two have. Since she's not here, I thought it was my duty to handle it for her.\"\n\nJason started laughing, then so did Linda. Jason looked at Mike and said, \"See what I mean? Never give them that kind of permission.\"\n\nMike laughed, \"Gotcha, I can see where it could be trouble.\"\n\nSimone walked out of the bathroom to see her three favorite people in the world laughing together. And It made her very happy.\n\nHaving spent most of the afternoon at the show with both Jason and Mike picking up a few things, they decided to head back to Jason's house.\n\nOnce back at his place, Jason got the grill going while Simone sliced up the sausage, peppers, and onions, then saut\u00e9ed the peppers and onions like Jason showed her. Her mom was surprised that Simone was doing this as she was never that much of a cook, except for simple things. She mentioned it to her and Simone said to her, \"Well, no I wasn't for a while, but Jason showed me how to do this and a bunch of other things, He's sorta an amateur gourmet chef\"\n\n\"Of course,\" She laughed, \"He won't admit it, be he's really very good. I asked him how he got into cooking and he said to me, \"I got tired of eating out and there was a bunch of food I missed from when I was younger.\" \"That was when I had him start teaching me, for the same reason.\"\n\nHer mom nodded her agreement and replied. \"I think everyone that goes out on their own comes to that conclusion.\" She laughed, \"When I started dating your father, I was lucky if didn't burn the water.\"\n\nLinda helped Simone get the rest of stuff ready and since it was so nice out they were just going to eat out on the patio. They carried the food out on a couple of covered trays and set them on the patio table. \n\nMeanwhile, Jason was talking with Mike about this and that, nothing earth shaking, just cars, bikes, work. When they started talking about work, Jason laughed and said to Mike, \"You, know, I've been meaning to thank Linda and you. Simone told me she was homeschooled for the most part of her schooling until she reached college. She is one of the most natural engineers I've ever met.\" \n\nMike looked surprised, but pleased about the complement. Then replied, \"We kind of made her lean in that direction when we saw how quickly she picked it up, and of course she was always out in the garage with me working on whatever project I was doing.\" \n\nHe looked thoughtful for a minute, then said, \"You know, I think that was the hardest part for me when she started transitioning to female. Linda got to do all the \"Girly\" stuff with her, but I thought at first that she wasn't going to want to do any of the things we did together when she was a boy.\" \n\nHe laughed, \"But that only lasted a couple of weeks, then one day she asked me why we weren't doing anything to the car.\" \"I was surprised and told her I thought she wouldn't want to do that kind of thing anymore.\" \n\n\"She looked at me all serious and told me, \"Daddy, I still want to do things with you. What's the matter? You think girls can't work on mechanical things.\" I looked at her stunned for a minute and then grabbed her up in a hug and kissed her saying, \"My mistake Princess. It will never happen again, I don't know what came over me.\"\n\nShe put her nose in the air and said, \"That's all right daddy, just don't let it happen again.\" And then she strutted away like the Queen of all the mechanics.\"\n\nThey both laughed about that, Mike remembering and me because I've seen that superior look on her also when she's explaining something on the job to the people we were doing it for, who didn't think she would know it.\n\nAs the grill was ready, he started cooking the sausage and said to him, \"Oh yes, I know that look well. I love it when she pulls that on some condescending butthead on the jobs.\" \n\n\"Our boss loves her and I think he would do anything he could to keep her around if she decided to leave for another place.\" Jason laughed, \"She told him that if he broke up our team and had me start on another, she would leave and take me with her.\"\n\nHe laughed again. \"Mike, she said that to him with that superior look with no trace of humor in her voice. I'm standing there stunned myself, then our boss says to her, \"Simone, I'm not ever breaking up your team.\" \"He gave her a short laugh, then said, \"As a matter of fact, I've been told that if I ever did, by more than one of the companies we do business with, that they'd take their business elsewhere.\" \n\n\"Then he got a thoughtful look on his face and said to her, \"Also since that's the case, I think both of you are due for a promotion and raise, since you've brought in so much money for the company.\"\n\nMike laughed along with Jason, then got a little serious saying to him, \"Well, she has always been a little strong willed, but a little timid when dealing with others. I'm glad she's sticking up for herself.\"\n\nSimone and Linda had just came outside and put down the rest of the trays on the table. They both walked over to Jason and Mike. Simone but an arm around Jason's waist and leaned in to kiss him asking, \"The sausage almost done hon?\" \n\nJason smiled and kissed her back, saying, \"Just about, a couple more minutes maybe.\"\n\n\"Ok,\" She answered, \"I'll go in and get the rolls, be right back.\" She kissed him again and went back inside. \n\nAs soon as she had went back in the house, Linda asked him smiling, \"When are you going to ask her? I want to make sure I can get a couple of pictures.\"\n\n\"I figured right after we eat and just before we have dessert.\" He told her grinning. \"I've got the ring in my pocket.\"\n\n\"Good,\" She replied, \"I can't wait to see the look on her face.\"\n\nSimone walked out the door with a basket full of rolls and set them down on the table. Then asked them, \"What would everyone like to drink?\"\n\nThey all told her they're preferences and Jason checked the temp on the sausages to make sure they were done, then piled them in a bowl and set it on the table. Everyone sat down and got what they wanted to eat and for the next 15 minutes or so, no one said a word as they ate. \n\nFinally Mike said, \"Ok, that's enough, anymore and I'll explode.\" \n\n\"Jason,\" He continued, \"That was great, I can't remember when I've had better, thanks.\"\n\n\"Aren't they good?\" Jason asked. \"We get them from a little market I found that makes all kinds of sausage's and meats. There's a little town not far from here that has kinds of small shops, bars and restaurant's. We try to stop over every few weeks to go shopping.\"\n\n\"That the same place Simone was telling us about that she got the coffee?\" He asked.\n\nJason nodded yes, \"Yeah, it is good coffee isn't it? Simone told me how much you enjoyed it.\"\n\nThey sat for a little while digesting dinner and making small talk, then Jason got to his feet and said to them, \"I'll be back in a minute, since this is a special occasion, I've had a bottle of champagne chilling that I got just in case I wasn't told that, \"I was idiot and that I should stay away from Simone till the world ends.\" \n\nThey all laughed and Simone asked if he needed any help. He told her no and then went into the house. He grabbed the champagne and four flutes then put them on a tray. Then he took the ring out of the box and put it in his top pocket and carried everything outside.\n\nHe set the tray on the table, opened the bottle and pour them all a glass. He passed two to Linda and Mike, then poured two more for him and Simone. He set his glass down and picked up Simone's and carried it over to her. His hand was shaking as he held the glass and when he got to her, he took her hand in his and brought it to his lips and kissed it. \n\nThen he handed her the glass and said to her, \"Simone, I love you, I love you more than life itself.\" He could see a skim of tears in her eyes as she smiled at him. Then he continued, \"Thank you for being with me and thank you for your help convincing your mom and dad that I worthy to be with you.\"\n\nShe leaned forward and kissed him saying, \"I love you too and you had a hand in convincing them you know.\"\n\nHe smiled at her and said, \"Well, there's just one more thing I need you to do for me today if you could.\"\n\n\"Sure honey,\" She answered smiling at him \"What's that?\"\n\nJason smiled back at her, reached into his top pocket and held out the ring to her saying,\" I need you to be my wife. I love you more than anything or anyone in the universe. Do you think you can do that for me? I've asked your dad and he said he was okay with it as long as you were.\"\n\nSimone just sat in her chair stunned not being able to say a word as she looked at him. Then the tears were rolling down her cheeks as she stood still holding his hand, the she leaped into Jason's arms wrapping her own around him next sobbing out, \"YES, YES, YES,\" each one followed by a kiss. \n\nThere were tears in his eyes also as she agreed to marry him and he could hear Linda and Mike clapping. He looked at them and saw Linda had her phone out taking pictures of all of this with tears running down her cheeks also. Mike just sat there, but his eyes were wet with tears also seeing how happy his daughter was.\n\nJason unwrapped her arms from around his neck, took her hand and slipped the ring on her finger. Simone watch him do this and once it was on her hand she looked at it saying, \"Oh Jason, it's beautiful.\" She looked at it again and said, \"This is the ring we saw at the mall isn't it?\"\n\nJason nodded and told her, \"When I saw how much you liked it, that's when I decided I was going to ask you to marry me and I picked it up.\"\n\nShe hugged him again crying, saying \"I love you.\" Over and over again.\n\nLinda and Mike came over to them and then hugged both of them telling them how happy they were for them.\n\nJason sat down, picked up his glass and downed it in one gulp. He could not ever remember being this happy in his life. Mike looked at him and said, \"I guess you found out how to make her speechless, at least for a bit, I never thought I'd see that.\" He laughed, \"Maybe you ought to write a book.\"\n\nJason laughed, then told him, \"Maybe your right, I'll have to add to the other thing I figured out.\" He looked at Simone and grinned at her. She blushed remembering what he said about tits and compliments, then started laughing also.\n\nMike looked confused and asked, \"And what was that?\"\n\nNow it was Jason's turn to redden and then said, \"Ah... Maybe once we've known each other longer I'll explain it.\"\n\nLinda smiled and said, \"OK, now when do you think you'd want to get married?\"\n\nSimone waked over to Jason and sat in his lap, leaning her head a on his shoulder and said to her mother, \"Not too sure yet, I'm still a little stunned and taken by surprise by all this. My sneaky future husband and I need to talk about it.\"\n\nJason nodded saying, \"We also got a job coming up in a couple of weeks and Simone still has a couple of months or so on her lease. So, I guess we'll just have to do the math and figure it out, but, I don't see any problems with maybe,\" he looked at Simone and said, \"in like 2 or 3 months or so.\" \n\nSimone nodded her agreement, \"We'll have to check in work, but that sounds about right to me.\"\n\nThen Jason added, \"We also have to check if we can get some vacation time off so we can go on our honeymoon too.\"\n\nSimone hugged him, then asked in that little girl voice, \"Where you taking me?\" She sing-songed, then laughed.\n\nJason looked at her grinning and tweaked her cheek saying, \"Where ever my darling little girl wants.\"\n\nThen he continued, \"Seriously, where ever you want as long as we got the time. Hell, I've got enough airline and hotel points for us to go around the world, twice.\" He hugged her and said, \"So you decide, anywhere you want.\"\n\nShe looked stunned for a second then said, \"I knew you had a lot of points, but I didn't know you had that much.\"\n\nHe laughed at her and said, \"How do you think I get us upgraded to first class all the time?\"\n\nHe grinned and continued, \"My good looks can get me a lot of things, but better seats and flights?\"\n\nShe shook her head saying, \"I never really thought about it.\"\n\n\"Gee,\" She grinned, \"Your already proving to be an asset as a future husband.\" \n\nHe sat there holding her for a second and said, \"Well then my future wife, how's about coming into the kitchen with me and helping me get dessert?\"\n\nShe kissed him again, looked at her mom and said with a sigh in her voice, \"See that mom, he's already trying to make me get into the kitchen.\" \n\nLinda laughed, \"Ah, my poor baby, so abused.\"\n\n\"Oh, Ok, I guess so.\" Simone said with a sigh, then kissed Jason on the ear whispering to him, \"But only if you go in first so I can watch your cute butt.\" Then she stood with her arms crossed smiling, waiting on him.\n\nJason grinned, stood and started walking into the kitchen through the patio door and as he walked through, he looked over his shoulder and leered at her. ",
        "Simone watch him swing his butt as he walked then saw him leer at her over his shoulder. She looked at her parents and said quickly, \"Ah..., be right back.\" Turned, and almost ran through the door after him.\n\nBoth Mike and Linda looked at each then laughed at the kids antics. Then Linda said to him, \"Remember when we were like that?\"\n\nMike leered at her and said, \"Sure do baby, and you still ain't bad yourself, you still got it.\"\n\nShe grinned at him, then came over and sat in his lap looking into his eyes said, \"And you still have a cute ass also.\" Then she wrapped her arms around his neck and proceeded to kiss him.\n\nMike thought to himself, \"Man, don't she just still have it.\" as he felt his cock harden against her as she ground her ass on his cock.\n\nAs Simone caught up with Jason, she hugged him from behind wrapping her arms around him, palms flat over his chest. She could feel her cock harden as she held him to her and then started rubbing his nipples with her fingers and dry humping his ass.\n\nJason turned around in her arms and planted a kiss on her. Then he felt his cock harden also as both hers and his rubbed together.\n\nHe broke the kiss and still holding her said, \"Honey this is fun, but I've got to get the dessert and we both need to calm down a bit before we go back outside. I really don't think we want to stand there in front of your parents sporting hard-ons.\"\n\nShe leered at him and reached down between them to stroke his cock, \"Spoiled sport.\"\n\nHe laughed, then went to get the pie he made and had Simone get the coffee. They walked back outside and saw Linda sitting in Mikes lap kissing him. \n\nSimone was stunned for a second, then grinned saying, \"Yuck.\" \"Mom, Dad, not in front of the kids.\" \n\nThey separated and look slightly embarrassed, then stood up to walk over to the table. As they stood, Simone noticed that the front of her father's pants were slightly tented. She laughed to herself remembering what Jason had said in the kitchen.\n\nThey sat and had the pie and coffee, then talked for a little while longer. Then Mike said, \"Look Simone, I have an idea. Why don't you give me the keys to your place, mom and me will stay there tonight. I figure that you can stay here tonight since the two of you have some discussing and celebrating to do. Then we'll stop on the way here and pick up some more of those cinnamon buns and sticky rolls for breakfast. Then we can just head back.\"\n\nSimone nodded saying, \"That's a good idea dad, and don't forget to get the coffee in my cabinet to take home with you. I think there's like three or so still in there, just leave me one as I can get more next week. Let me go get my keys, I'll be right back.\"\n\nShe came back out and gave them to her dad, then wagged her finger at him saying, \"And no all-night parties young man.\" Then she giggled and hugged her dad saying in that little girl voice she uses to get her way, \"I love you daddy.\"\n\nHe looked at Linda and Jason, shrugged and said \"What can you do?\" \n\nJason smirked saying, \"Well I guess we could always spank her.\"\n\nSimone looked over her shoulder at him leeringly said, \"Ohh...Promise?\"\n\nJason stood there turning red and Simone laughed at him, \"Go ahead, want to play some more?\"\n\nThey all started laughing, then Linda and Mike said goodbye and headed over to Simone's apartment.\n\nJason stood there with Simone at his side with her arm wrapped around him with her hand in his back pocket lightly squeezing his butt. They watched them pull away and headed back inside. No sooner than they had made it in and closed the door, Simone jump at him wrapping her arms around his neck and her legs around his waist. Jason quickly grabbed her by the ass so she wouldn't fall and Simone started kissing him.\n\n\"I love you so much!!\" She told him excitedly. \"I was so surprised when you asked me, for a minute I didn't know what to say or do.\"\n\nJason grinned and kissed her back saying, \"Good, that's kind of what I was going for.\" \n\nSimone giggled and asked him, \"Did you really ask my father for permission? That wasn't a joke?\"\n\nHe nodded yes and told her, \"Yes I did, and no it wasn't a joke, I just thought it was the right thing to do.\" He kissed her again saying, \"C'mon, let's go in the living room and talk a bit.\" \n\nShe dropped down and took his hand as he led into the other room. They sat on the couch, and he asked her, \"Is the time frame we talked about really okay with you? I mean we can wait a little longer if you want, I know we're sort of rushing things a little.\"\n\nShe reached out and stroke his cheek and said, \"No Jay, that's fine by me. After all, we were talking about moving in together then anyhow, so I don't see it making much difference.\"\n\nThen she got a slight worried look on her face and asked him, \"Are you sure we can get married?\" \n\n\"Yes, I'm sure, I checked it all out.\" He answered. \"The only problem I think we might have depends on how you want to get married. I don't know if we could get married in an established church, it would more than likely be easier to be married by the justice of the peace. Now that doesn't really bother me at all, it's more up to you.\" \n\n\"Oh I'm sure we could find one that would do it, if we look around and I can ask some of my friends.\" She replied. \"But I don't have a problem doing at the court house.\" \n\nShe smiled at him, \"All that matters to me is that you asked and we are going to be husband and wife. You don't know how happy you've made me.\"\n\n\"I was afraid you might say no,\" He replied. \"Your parents both laughed at me when I told them that.\" \n\nHe grinned at her and continued, \"I believe thier exact words where, \"Yeah, right, as if she'd say no.\"\n\nSimone laughed, reached out and patted his cheek, then said, \"Your lucky I love you, I really should smack you upside the head for thinking that.\" \n\n\"Yeah, yeah, I know,\" he said, \"But it's the kind of thing that goes through your mind. You can't help it, nothing in this world is 100% guaranteed.\"\n\n\"Besides, your mother took care of that for you when I told her the same thing.\" He laughed, \"She said you told her about our agreement and she thought it was her duty to help you out.\"\n\nSimone laughed at the thought of her mom smacking him. Then she looked at him and moved over closer to him on the couch. She put her arms around him and kissed him. Looking him straight in the eyes, she said, \"Your wrong you know, I'm 100% guaranteed in love with you and I can 100% guaranteed that I'll be with you forever.\"\n\nHe stood up and then taking her hands helped her out of the couch. He put his arms around her and just held for a while, then whispered in her ear, \"I love you, but your parents said we need to celebrate. Why don't we do that?\" He asked with a leer in his voice.\n\nSimone kissed him and said grinning, \"Race you.\" As she quickly ran towards the bed room. Jason was after her like a shot and grabbed her up in his arms just before getting there and put her over his shoulder. As they reached the bedroom, he switched her position so he was cradling her in his arms, then laid her on the bed.\n\nSimone laid there on the bed posing for him with lust in her eyes. She began massaging her breast's all the while keeping her eyes on him. Then she reached down and slowly started stroking her cock through her shorts. As she did this, she could see that it was having an effect on him, the bulge in pants kept growing with every stroke she made. Then she slowly unbuttoned her shorts and started sliding the zipper down little bit by little bit. When she had it all the way down, she stroked her cock through her panties with one finger making it grow larger now that it wasn't held in check by her shorts. As the head of her cock poked up past the waistband, she reached down with the other hand and massaged her balls and a big drop of pre-cum oozed from the tip making her shudder. She took her finger and smeared it over the head and then brought the finger up to her mouth. Looking at Jason with lust in her eyes, she slowly sucked on her finger to taste her pre-cum making a yummy sound as she did.\n\nJason stood at the bottom of the bed watching her put on a show that was guaranteed to give a statue a hard-on. His cock had bent slightly in his pants and he had to reach down to straighten it out. As he did, he could see the look on her face showing how much she was pleased with herself having done that to him and it only made her try even harder to drive him crazy.\n\nSeeing Jason straighten out his cock made Simone even hornier knowing that she was turning him on so much. So she knelt up on the bed and then crossed her arms in front of her and took hold of the bottom of her shirt. The she slowly inched it up until her tits were half exposed, she stopped for a second and quickly pulled the shirt up and over her head. As the bottom of it went over her tits, it made them bounce as they were exposed. She threw the shirt on the floor and massaged her tits and nipples making them grow harder. She smiled at him and asked, \"See anything you like?\" \n\nJason gulped out a yes, nodding. He was so fucking horny for her right now that he couldn't get out a word but only a moan. \n\nSimone then knelt up higher on the bed and inched down her shorts and panties at the same time slowly exposing her cock to him. When she couldn't get them down any farther, she laid back down and slipped them all the way off and threw them to him.\n\nAs she knelt back up, she could see that he had caught them. Then she watched as he held her panties to his nose to smell her. This made her smile and her cock jerk of it's on accord.\n\nShe reached down and grabbed her cock with one hand and her balls with the other and slowly jacked off while massaging her balls. Then she slowly ran her hands up her body and them cupped her tits massaging them again, all the while weaving her body in time to some music in her head. Then she put her hands behind her head and arched he back so that both her tits and cock stuck out more trying to drive him crazy for her.\n\nJason stood there watching her and without realizing he was doing it, he reached down to lightly stroke his cock through his pants. He had a glazed look of lust on his face as he watched his girl perform for him. Simone watched him and noticed the wet spot on his pants just where the head of his cock was. She decided to have pity on him and then on her hands and knees crawled to the end of the bed and being level with his groin, she moved slightly forward to kiss his cock through his pants.\n\nShe then knelt back up and reached for the buttons on his shirt slowly unbuttoning them one at a time. Then she slowly peeled his shirt off and threw it across the room. He stood there bare chested as she slowly wet one finger by sucking on it, then she started making slow circles with it around one of his nipples watching it go erect and hard, she then re-wet her finger and did the same to his other one.\n\nHe reached out for her but she slowly leaned back grinning that evil little grin she got when she was up to something and slowly shook her head saying to him, \"Not yet baby, I'm not even close to being finished yet. If you're a good boy and do what your told,\" She paused to slowly lick her lips with the tip of her tongue, \"I'll have a nice present for you.\"\n\nHe lowered his hands and stood there trembling with the want of her, but did as he was told. Then he watched as she slowly slid to the end of the bed and sat on the edge. She wrapped her arms around him holding his ass with both hands then tongued his naval and then she slowly stood, her tongue licking him on the way up. She stroked his back with her hands as she stood, dragging her nipples up his chest. He shook as he felt her hard nipples slide up his chest as she stood erect, she kissed him pushing her tongue between his lips to meet his. They stood that way for a moment then she broke the kiss and reached down to drag a finger up from his balls to the tip of his cock. She lowered her other hand and unbuckle his belt and unbuttoned his pants. She slowly lowered his zipper and as she was doing that, Jason but his hands on her shoulders to support himself. His legs were weak and shaky as she got his zipper all the way down. She looked into his eyes and squeezed his cock through his underwear then asked him in that little girl voice she uses, \"Oh, did I do that? Is this big, hard cock all mine?\"\n\nJason gasped out barely able to talk, \"Yes Simone, you did that, just like you have since that first day you kissed me.\" He shivered as she stroked him again, \"And it will always be only yours.\"\n\n\"Oh, your such a good boy.\" She said kissing his cock through his underwear. She then knelt down on the floor in front of him and slowly worked his pants down to his ankles, then slowly started peeling his underwear down exposing his cock inch by inch. As soon as the head came in view, she ran her tongue over and around it to lick off the pre-cum slicked all over it. She then exposed more of it stopping to kiss it until it was totally exposed to her. She stopped and took the head in mouth to suck and lick on it, then slowly bobbed all the way down till she had the whole length in her mouth.\n\nShe came off his cock and grinned at him with lust in her eyes asking, \"Do you like that baby? Do you like my mouth wrapped around your cock?\"\n\nJason nodded yes, trying to say something to her, but as before, all that came out was moan. She giggled and drew his underwear down and them lifted first one leg out, then the other.\n\nShe slowly stood making sure her tits were in constant contact with him until she was standing erect, then put her arms around his neck and kissed him burying her tongue in his mouth once again. As she did this, she slowly ground her pre-cum coated hard cock against his and this made both of them shudder.\n\nShe broke the kiss and told him to get on the bed. Jason obeyed and watched her as she crawled up on the bed to lay next to him. Then leering at him said, \"Now I want you to hold on to the head board with both hands while I have my fun. Oh, and baby, if you let go, I stop.\" \n\nBy now, Jason was so crazy for her and not wanting her to stop anything she was, or planning to do. He would do anything she wanted as he was maddened with the want of her. So he nodded his agreement and reached back to grab the head board.\n\nShe slowly rolled over on top of him molding her body to his and started kissing and licking her way down his body. \n\nHe didn't know what felt better, her lips, her tongue, her hard nipples carving furrows in his chest, or any combination. As she finally reached his crotch, she gently took is ball sack in one hand and wrapped the other around the base of his cock. She reached out her tongue and washed the head of his cock with it, then took it part way into her mouth and started sucking on the head as her tongue swished around it. She looked up and could see he was still holding on, his head was bent back in pleasure and he was moaning softly as she sucked him.\n\nShe slowly slid her mouth down till it met her fist and then just as slowly rose up until the tip was still in her mouth, then quickly slid back down again. She continued doing this, then started massaging his balls at the same time. She knew this was going to drive him right up the wall, he loved it when she sucked him and massage his balls at the same time and she also knew just how fast this could make him cum. As she slid up again she could see him let loose of the headboard so he could reach down to put his hand on the back of her head like he normally did. \n\nShe stopped and said to him, \"Your being a bad boy, don't let go, remember what I told you.\" She grinned evilly, \"This is your only warning.\" \n\nShe watched him quickly reach back up to grab the headboard, \"Yes baby,\" He gasped out, \"I won't let go, please, please don't stop, oh Gods it feels so good.\"\n\n\"Good boy,\" She replied. Then she took him back in her mouth and proceeded to start sucking him again. She alternated between sucking his cock slow and fast, then stopped and asked him, \"Are you ready to cum for me baby?\" \"I want you drained out before we make love so you can last and last.\"\n\nJason groaned and told her, \"Yes, honey, please make me cum, whatever you want, just please don't stop anymore.\"\n\nShe grinned at him and then proceeded to give him the best blowjob of his life. She sucked him into her mouth and wrapped her thumb and forefinger around his cock to jack him off at the same time. His cock and balls were soaking wet now with her saliva, so she wet her finger and started playing with his asshole. She circled it and inserted just the tip, as she felt him push down on her finger to get her to put it in him, then she asked him with lust in her voice, \"You like when I do that don't you?\" \"You want me to finger fuck you like a slut, don't you?\"\n\n\"Yes, Simone.\" He moaned, \"Please finger fuck my ass like a slut, your slut.\"\n\n\"Well then.\" She grinned, \"Since you asked so nicely and admitted your my slut, I think I can arrange that.\"\n\nShe lowered her head again to take his cock in her mouth and started sucking him again. As she did, she played with his ass, fingering it deeper and deeper each time she pushed it into him until it was all the way in and she could feel his prostrate on the tip of her finger. She started sucking him for real now, she wanted him to cum and as she sucked she started finger fucking his ass in time with her sucking. \n\nJason groaned as he felt her finger massage his prostate, she was driving him crazy and he knew he wasn't going to last long as he felt the pressure build in his balls and his cock swell. She pushed her finger all the way and pressed firmly on his prostate, massaging it. He started cuming barely able to get the words out to let her know. He could feel the cum burn up the length of cock to spurt out in her mouth.\n\nSimone could feel his cock swell In her mouth and knew he was going to cum before she heard him gasp that he was. She pulled back so that just the head was in her mouth and let his cum fill her up. As she sucked, she continued finger fucking him, every time she buried her finger in him he'd shoot again. Finally, she felt him collapse back on the bed and she took her mouth off him and slowly sliding her hand up, milked out the last of his cum wiping it on her face and lips as she kissed his cock.\n\nShe slowly worked her way back up his body, her cock leaving a trail of her own pre-cum on his body. She slid back up on him, took his head in her hands and kissed him, sharing his cum with him. Their tongues wrestled as they kissed and she told him, \"See what happens when you're a good little slut?\" \n\nJason grinned tiredly at her nodding his head yes, then kissed her again. The he told her, \"And I love being your slut, and I always will.\"\n\nThey laid side by side, kissing and gently stroking and telling each other how much they loved each other. Once Jason got his breath back and his heart rate down so he didn't think he was going to have a heart attack, he started kissing her around her neck and ears, he knew how much she loved this and he could feel her shiver each time he kissed her. The he flipped her over on her back putting his weight on her and held her arms down with his hands so she couldn't move. Smiling down at her said, \"Well now, I guess it's my turn, paybacks a bitch.\"\n\nStill grinning and holding her, he started kissing and licking his way down to her breasts, first sucking in one nipple, them moving over to the other. As he sucked on them, he also used his tongue and once he had one wet, he stopped sucking to blow softly on it. He watch it harden and grow even more and heard her moan out his name, then he moved to the other one and did the same. All this time he still had hold of her arms, as he moved down to her stomach he slid her arms down along her sides so he could still hold them. After spending some time licking her navel, he slowly started kissing his way down to her cock which was now fully hard as a rock. He licked and kissed all around it but never quite touching it. ",
        "He leered up at her from between her legs and said to her, \"What say we find out just how big of a slut you are for me.\" Then he laughed as she moaned again and he took her whole cock down in one gulp. He felt her try to rear up, but with him holding her arms and laying on her legs, she couldn't move but a little, he slowly started bobbing up and down on her cock, using his tongue on the underside of it as he was coming up to her head. He could taste her pre-cum as he sucked and he loved the taste of it. She was oozing so much of it, he almost thought she had started to cum, the next time he came up he released her cock from his lips and softly blew across the head. He watched her cock jerk as he did, then he moved down to her balls running his tongue over them taking first one, than the other in his mouth to suck on.\n\nHe looked up at her once again and asked, \"So, are you my slut now?\"\n\nSimone nodded her head and gasped out, \"Yes, baby, I sure am.\" Please don't tease me anymore, I need to cum so bad.\" \n\nHe licked her cock like a piece of candy then replied, \"Well, since you agree that you are my slut too, I guess I can do that. And since you were so truthful, I guess I can let you move now.\" He let go of her arms and started sucking her and massaging her balls at the same time. \n\nThe minute Jason had let go of her arms, she reached down with both hands and held the back of his head controlling how fast or slow she wanted him to go. Jason stopped sucking her a second and wet his finger then went back to sucking on her cock as he slowly started playing with her asshole. He first just put in the tip of his finger, then slowly went deeper and deeper until he had his finger buried in her ass. He started bobbing his head faster on her cock and finger fucking her ass in time with his sucking. He started feeling her cock swell and balls pull up so he knew she was very close to blowing her load in his mouth.\n\nSimone was in heaven, the man she loved was sucking her like there was no tomorrow and his finger in her ass was driving her crazy. As she felt his finger caress her prostate she arched her back and pulled his head closer to get more of her cock in his mouth. She was so close to cumming, she could feel it in her balls. She was moaning out his name, telling him how much she love his mouth on her cock, then suddenly, with no warning, she started cumming. She yelled out on the top of her voice to Jason that she was his slut and pulled his head down on her cock burying it as far she could.\n\nJason felt her arch her back and then felt her hands like a vise on his head as she pulled his him down on her cock. As she told him she was cumming, she shot a massive load down his throat. As he felt this, he pushed his finger all the way in and pressed on her prostate and she shot another load of cum, then another. He suddenly felt her go limp as she dropped back on the bed. \n\nHe pulled his finger slowly out and grabbed hold of her balls to massage out all the cum she had and then he slowly slid his thumb up the underside of her cock to milk out the last of it into his mouth. \n\nHe licked her cock one last time then slid up to lay beside her and kissed her. She could taste her cum as she kissed him, not believing how much she shot off. They slowly petted each other and kissed until she had calmed down. Then Jason said grinning, \"Well, I guess you are my slut. And that's good, because I like slutty girls.\"\n\nShe smiled at him and replied tiredly, \"Yes baby, I am your slut and your my slut. And as long as I'm the only slut you're going to pay attention to, I'll be as slutty as you want.\"\n\nHe smiled, \"I really don't think that's anything you'll ever have to worry about.\" He told her. \"Hell, I spent all this time looking for you, why would I want to try to find another now that I've got you?\"\n\nThen he laughed saying, \"That and your all I can handle.\"\n\nShe wrapped her arms around him with her body molded to his. He didn't want her to move, he loved the feel of her naked body against his. They laid that way for a while, then Simone looked at him saying, \"Honey, I'm dying of thirst, could you get us the rest of the wine while I make a trip to the little girls room.\" She grinned that evil smile at him and said, \"I need to get ready for what I have planned for you next.\" Then she bent down to kiss him. \n\n\"Sure babe.\" He replied, \"Not a problem.\" Then he grinned back at her asking. \"And just what have you got planned next?\" \n\nSimone grinned back at him and sing-songed, \"I'm not tellin.\" \n\nShe kissed him again and grinned as she squeezed his cock and pointed to the kitchen saying, \"Wine slut boy, I'm thirsty.\"\n\n\"Yes ma'am.\" He said bowing, \"I'll be right back with your wine princess.\"\n\n\"Very good,\" She told him, \"Go, now, I don't want to have to wait forever.\" She made a shooing motion with her hand.\n\nJason laughed at that and went to go get the rest of the wine while she went into the bathroom. She cleaned up, then check herself in the mirror. Satisfied on what she saw, she headed back out to the bedroom.\n\nJason was sitting on the edge of the bed holding a silver tray with the half empty wine bottle and two glasses of wine. He smile as she came out and said to her, \"You wine princess, just the way you like it.\"\n\nSimone giggled and with her nose in the air said to him. \"Very good and they say good help is hard to fine.\" She looked down at his crotch and noticed that he had a semi-hardon. She licked her lips and grinned at him continuing, \"And it's good to see the help is found hard.\"\n\nJason grinned back at her, \"Well, you know how it is, it all depends on the incentive that the help has.\" He leered at her, \"And you have plenty of incentives.\"\n\nHe handed her a glass and put the tray on the dresser grabbing his. He laid down next to her, his back against the headboard and took a sip of the wine. He watched her drink about half the glass down then smiled at her asking, \"And just what does my future wife have in her evil little mind?\"\n\nSimone felt a thrill go through her every time he called her his wife, she looked at him over the rim of her glass and replied, \"Curiosity killed the cat you know, you'll just have to wait a bit.\" \n\nShe looked at him and drank some more wine, then watched him take a drink of his. She reached out and took his glass and put it on the night stand. \"OK, you've waited enough.\" She said quickly.\n\nShe pushed him back down on the bed, took another drink her wine finishing it and placed the glass next to his.\n\nShe turned around until she was facing his feet and took hold of his cock. With her mouth still slightly full of the wine she just drank, she took his cock in her mouth. She could feel him jump a bit as the cold wine touched his cock and then he laid back to watch what she was going to do next.\n\nAs he watched her suck him and since her cock was so close, he reached out to start slowly jacking her off. She groaned as she felt his warm hand wrap around her cock. She slowly started to run her lips and tongue up and down his cock, she was more trying to excite him, than make him cum. She wanted him to cum, but not in her mouth, she wanted his load in her ass this time.\n\nJason was slowly jacking her cock while she blew him and he was enjoying just having her lips wrapped around his cock. Then he got an evil grin on his face and moved closer to her till he was close enough to take her in his mouth. He could only reach the head, but that was enough. He felt her groan and jump as he took her cock head in and started sucking and licking it. After a while, he took hold of her ankle and gently had her bring over him until she was in a 69 position with her on top of him. He gently stroked her hips and thighs as he lightly sucked on her, then he ran his hands up and he spread her ass cheeks to bare her cute little pucker.\n\nHe reached out his tongue and slowly and wetly ran his tongue from her balls and over her taint until he reached her asshole and slowly licked around it and started to tongue fuck her ass.\n\nSimone had jumped when Jason started to suck her and when she felt him move her leg over she knew what he had in mind, mostly. She loved when he sucked her and just loved to feel his lips wrapped around her cock. Then she felt him start licking her balls and then when he started licking her ass, she was in heaven. Or so she thought until he started to tongue fuck her ass.\n\nShe shuddered as she felt his tongue penetrate her, a shudder that started at her toes and went all the way up to her head. She could feel him really getting into it and she was having a hard time concentrating on what she was doing. \n\nShe didn't want to come yet so she gently pulled away from him and turned around till she was laying on him again. She smiled and kissed him, \"Not that I wasn't enjoying that,\" She kissed him again, \"But I've got something else in mind for you to put there.\"\n\n\"I think I can handle that,\" He said grinning at her and as he went to turn her over, she put a finger on his lips and said, \"Not that way, you just lay back for now. I'll tell you what to do.\"\n\nJason grinned to himself, wondering where this more aggressive part of her was coming from. But he wasn't going to complain, he was enjoying himself. So he laid back and let her do what she wanted.\n\nSimone reach over to the nightstand where they kept the lube they liked to use. Once she had it, she squeezed a dollop on her fingers and worked it into her ass, slowly fingering herself to spread the lube. The she squeezed more out and slowly stroked Jason's cock to lube it. She wiped her hands off and straddled him. His cock was laying in her ass crack so she put both hands on his chest and the leaned down to kiss him. She leaned back up and raised her ass higher so she could lower herself on his cock. Then she reached back and under her to hold his cock to steady it and then slowly lowered herself down on it. There was a slight resistance to get his cock head in her hole, but once she got in in, she was able to lower herself steadily and slowly down the length of his cock. \n\nJason felt her ass slide down his cock, so hot and tight, until he was totally buried in her. As she sat down on him, she leaned forward to kiss him and say, \"I love you baby. And I really love your nice hard cock in my ass.\" \n\nShe started to grind her ass on him, moving back and forth and then moving around in a circle on him. He laid his head back and groaned as she started to work her ass on his cock. Then she put her hands back on his chest and started play with his nipples making them erect and hard. She rose up, sliding her ass up his cock until he was almost out of her and slowly sat back down on him again. She did this a few more times then smiled to herself and started to raise up fast and then go back down again slow. She watched him shudder and groan every time she did it, then she started going up slow and then down faster.\n\nJason was going crazy with all that she was doing to him, he didn't know what she was going to do next. All he knew was that if she kept that up, he wasn't going to last much longer even though he had just cum. To make it last longer he finally reached out and grabbed hold her hips to try to control her a little, but she was having none of it. She let him think he was doing something to control her, but he really wasn't. She reached down and took hold of his hand and then laid it on her cock, wrapping it around her and then guided him in stoking her off. \n\nOnce he was jacking her off, she decided that she really needed him to shoot in her, she didn't want to wait anymore, and she started to really work her ass up and down him. She knew it was driving him crazy just from the look of ecstasy on his face. She felt him push up into her every time she buried him in her ass when she came down and she knew he was very, very close. \n\nJason was groaning out her name, telling her how fantastic and beautiful she was. He saw her get that evil grin she gets and watched her reach back behind her and felt her take his balls in her hand. She lightly stroked his balls then sped up riding him and as she felt his cock swell in her ass, she slammed her ass down on his cock and massaged his balls firmly. She saw his back arch as he yelled out her name grabbing a hold of her hips and told her he was cumming.\n\nAs Jason felt her ass slam down on him and her hand massaging his balls he started to cum with no warning. One minute he was just enjoying the feel of it, then the next he felt his head explode as he started cumming. He thought he wasn't going to stop as she squeezed and rubbed his balls, then clamped her ass on his cock.\n\nSimone felt the force of his orgasm as he shot his cum deep in her, she could feel his cum fill her up. It was making her want to cum right now and as she slowly ground her ass on him, she reached down and started to jack off. She watch as Jason panted and fell back on the bed. She sat up and began to jack herself in earnest. Jason opened his eyes, and watched her jack off until he saw her stiffen and lean back as she yelled out that she was cumming also. The first spurt landed on his chest and the next one made it to his face. He was stunned at first, then he reached for her and pulled her off his cock. He quickly pulled her up till she was straddling his chest and a third spurt of cum hit his face also as he took her cock in his mouth. \n\nSimone was beyond control right now, and as she felt him wrap his lips around her, she reached forward and grabbed the headboard and began to fuck his mouth. As she was almost finished cumming, she didn't have much left, but he sucked out what she did have left, running his thumb up the bottom of her cock and sucking on the head to get the last drop.\n\nJason was stunned at first when she started face fucking him, but quickly got over it and started to enjoy this new side of her.\n\nSimone finally stopped cumming and leaned her head down panting while she still held onto the headboard. Her breath slowed and she looked down seeing Jason for the first time still holding her and licking her cock head. Then it dawned on her where she was she was and what she had done. She put a hand to her mouth as she saw the mess she had made on his face. She couldn't believe what she had done to him. She reached for the towel she had used and wiped her cum off his face, he looked like the proverbially glazed donut. She threw the towel away and started kissing him and apologizing to him, \"Oh Jason, I'm so sorry. I don't know what came over me, I didn't hurt you did I?\"\n\nJason gave her a lopsided grin and said, \"That's alright Simone. I can't tell what came over you, but I sure can tell what came all over me.\" He reached up and wiped some of her cum off near his eye that she missed. \"But, that's alright,\" He stuck his cum coated finger in his mouth and said, \"Umm, It didn't really bother me as long as you enjoyed yourself.\"\n\nSimone got an embarrassed look on her face as she watched him lick her cum off his finger, then she giggled, then she started laughing. Now that she knew he wasn't upset with her, she sort of found the whole thing funny.\n\nJason looked at her as she started laughing and then he started himself. He reached up and drew her to him covering her face with kisses, telling her how much he loved her. They laid like that a for a few minutes, just stroking, petting and kissing each other. Then they decide it might not be a bad idea to jump into the shower. So they went in and cleaned up and had some more fun washing each other. \n\nOnce finished, they went out to the living room and opened another bottle of wine and relaxed while they watched TV and talked of what was to come. They made some plans to talk to her apartment manager and to tell their boss so they could start some of the paperwork for benefits and such when they went back to work next week. Finally, they went to bed and fell asleep holding each other. \n\nThe next morning they got up and waited for her parents to show up. When they got there, Jason already had the coffee made so he took the box of cinnamon rolls and sticky buns from Linda to warm up. As she handed it to him she said, \"There's some glazed donuts in there also if you want some. They looked so good we got some to take home.\"\n\nSimone barked out a laugh and Jason got a bit red in the face. Linda looked at her daughter, and asked, \"What's so funny about glazed donuts?\"\n\nSimone redden also but couldn't stop laughing. Finally she said, \"Oh, nothing Mom, just something funny that happened last night.\" \n\n\"Right honey?\" She asked Jason. \n\nLinda looked confused and Mike smirked a bit, thinking he knew what the answer might be, but decided not to say anything and give Jason a break. From the look on his face, Jason wasn't upset about it, just embarrassed.\n\n\"Uh...Oh, Yeah, Funny. Just let me get these into the oven.\" He said to the room in general and quickly turned around so they couldn't see his face.\n\nThey sat and talked about the wedding some more. Well, Simone and Linda did, Jason and Mike sat there agreeing with them. They knew it was more up to the two women then them.\n\nAfter a while Linda and Mike decide it was time for them to go. They hugged the kids and told them again how happy they were for them and welcomed Jason again to the family.\n\nJason and Simone stood there with their arms around each other as they watched her parents back out the driveway and start down the street. They kissed each other and hand in hand went back into their house.\n\nThe next day they drove into work together and once there, waited for their boss to get in. Once he showed up, they waited for him to get settled in and went to see him. Jason knocked on the door frame and asked, \"Morning boss, got a minute?\" \n\nHe smiled as he saw the best team he had ever had in all the years of doing this work and said, \"Sure, what's up? No problems I hope.\"\n\nJason shook his head no saying, \"No, no problems everything is set up for the next job, it should go like clockwork.\" Then Jason deciding to joke with him a bit, said, \"But, we do have an idea that will save some money on this and any future trips we do.\" \n\nHe reached for his coffee, took a drink and asked Jason, \" And what would that be?\"\n\n\"Well, we figured we could save some money by sharing a room.\" Jason replied with a straight face. Then he laughed as he saw he look on his bosses face and continued, \"We're getting married.\"\n\nHe looked at Simone and Jason, then stood up and then hugged them both saying, \"Well it's about damn time, I figured that you two were never going to figure it out.\"\n\nSimone and Jason both looked at him a little shocked and gave him a questioning look.\n\nHe looked at them both again and said, \"Oh for Pete's sake, anyone with half a brain and one eye could see how you two acted around each other. None of us could believe it took you so long to figure it out that you should be with each other.\" \n\nJason and Simone looked at each other embarrassed, but happy. Simone asked, \"Everyone knows?\" \n\nTheir boss nodded his head and said, \"Yes, everyone.\" Then he grinned saying, \"I have to look and see who won the pool.\"\n\nThey got a strangled look on their faces when he said this and stammered out, \"Pool?\"\n\nTheir boss laughed and said, \"No, I'm only joking. But you know it might not have a bad idea at that.\"\n\n\"So, when do you guys plan on tying the knot?\" He asked sitting down.\n\n\"Well, we still have to talk to Simone's apartment manager to see if see can get out of her lease a little early, but we were thinking sometime after the next install. We don't have anything for a while after that, so that should give us enough time a to have the wedding and take a week or two off for our honeymoon.\" Jason told him.\n\nHe nodded his concurrence on that time frame and said to them, \"That will work out great, I think we get along without you two for a couple or three weeks.\" ",
        "He smiled and continued, \"Also, I was going to wait to tell you this,\" He looked through some papers on his desk, \"But this seems a better time to do it. Congratulations, I got both of your promotions through.\" He handed them the paper work.\n\nJason and Simone looked at the papers, then looked at him. Finally Simone said to him, \"Thank you very much Frank, we thought you were joking around when you told us this a few weeks back.\"\n\n\"Well,\" He continued, \"I was joking around a bit, but the more I thought about it, the more it seemed like a good idea.\" He smiled at them both, \"You both deserve it. I meant what I said when we talked, I've been told by numerous companies that they would take their business else ware if you two left.\" \n\nHe came over and shook both their hands and said, \"Go on now, I've got real business to take care of.\" \n\nThey walked out of his office and went back to their desks to finish up the details of the next trip. Throughout the day various co-workers and friends came up to them to congratulate them on their upcoming wedding. They had thought that no one had known about them, despite what Frank had told them, but that thought was destroyed by all the times they heard the phrase, \"It's about time.\"\n\nThey finished up and headed home, deciding that today would be a good day for seeing Simone's apartment manager. With all the good luck they had been having, they hoped it would extend to her place and getting out of it early.\n\nThey pulled up to the manager's office and walked in. They asked the secretary if he was in and if they could talk to him. She nodded and said, \"I think so, but let me double check to make sure he's not busy, hold on a second.\" \n\nShe got up and knocked on his door and walked in. She came out and said he would see them. They walked into his office and told him hello. He stood smiling and shook Simone's hand and asked her if there was anything he could help her with.\n\nSimone smiled at him with the smile she used to get her way. It was one of those smiles that was sure to melt someone's heart. She said to him, \"We just had a question about something that came up and we wanted to check on it.\" He nodded and motioned her to continue.\n\n\"Well, first off,\" She continued, \"We're getting married in a about 5 weeks or so and I know I still have some time left on my lease, maybe another 8 weeks. But, we were wondering if there was any way I could get out of that last month or so, since I would be moving in with Jason here.\"\n\nThe manger nodded his head smiling and said, \"Congratulations on your upcoming marriage. Just let me look at the file and see what we can do.\" \n\nHe opened up couple of files on his computer to check on everything, nodded, then opened a couple more, then he made a couple of notes. He closed down the files and looked up at them. He said, \"Your time frame was right, but I think we can handle this easily since you're getting married and you have so little time left on your lease. Also, I've had a request for an apartment like you have, they are in demand you know, for someone that's relocating to the area.\" \n\nHe smiled at them and continued, \"So, I can let you out of it early since you're getting married, I've got someone that needs it, and since you've been such a good tenant. I just hope this next one is as good as you've been.\"\n\nSimone thanked him telling him how grateful she was, then she asked, \"So, when can I officially move out?\"\n\n\"Let's see.\" He said and looked at the calendar. \"Why don't we say 3 weeks from now, your already paid up till then. Will that be enough time for you to move out?\" he asked.\n\nSimone checked her calendar on her phone and smiled saying, \"That should be perfect, I really don't have all that much to move and then we'll be out on a job right after that.\"\n\nHe smiled, \"Okay then, that's what we'll do, just give me a couple of days to get the paperwork drawn up and then were done.\"\n\nHe stood and shook her hand congratulating them again on their upcoming wedding. Then he said, \"I'll give you a call when the paperwork is ready, it won't take long.\"\n\nJason and Simone walked outside and then hugged each other. \"Let's stop at my place so I can get some stuff and I can also pack up the rest of my clothes, I really don't have all that much. We can also plan out what and how to move what's there.\"\n\nJason nodded his agreement and they drove over to her apartment. They went inside and Simone got a couple of beers, opened them and handed one to Jason saying, \"It will only take me a few minutes to pack my bags.\" \n\n\"Okay, do you need any help?\" He asked.\n\nSimone shook her head saying, \"No, I don't think so, maybe once I've got them packed, depending on how heavy they are. Why don't you look around and see how many boxes and types we'll need for some of the stuff while I pack.\"\n\nJason agreed and started to walk around while Simone went into her bedroom and quickly put her two suitcases on her bed and started grabbing clothes out her closet and dresser. Jason took a drink of his beer and looked around surveying her apartment. She was right, he said to himself as he opened some of the kitchen cabinets looking at the sparsity of dishes and other kitchen stuff she had, it's not going to take much here. He started looking around the living room and hall closet for what was there. The he heard Simone calling him from her bedroom, so he walked back to it and saw the two suitcases and that she had filled some pillow cases with various clothing items also.\n\nSimone pointed out the two suit cases and asked him if he could grab them while she got the pillow cases. He agreed and walked over to pick them up. They went out to the SUV and put them in and then walked back into the apartment. Jason turned to her, \"You were right honey, you really don't have much. I think all we'll need to do is rent one of those small moving trucks and it should fit everything in one trip. That is if you're going to take everything that's here. We can take everything you want and put it in the spare room at the house, I really don't have much in there or you could just get rid of it or donate it to one of those charities if there's anything you don't want.\" \n\nShe nodded her agreement saying, \"That's a real good idea, the living room stuff and the little bit of bedroom things should fit in there, it's a fairly big room, and this stuff is newer.\"\n\nJason agreed with her and then asked, \"What about the kitchen stuff?\" Simone shook her head and answered, \"All that stuff is cheap junk really, you know I don't cook all that much so I had gotten the cheap stuff just to have something if I needed it.\" She laughed, \"I don't think I paid over 100 bucks for everything in there, If you think we could use any of it, Ok, but otherwise I'd rather just put that on the donate list.\"\n\nJason nodded and said, \"OK, that sounds like a plan, let me look up who to call and then we can do that. Do you have anything else in the bedroom?\"\n\n\"Yes,\" She replied, \"Not a lot, maybe the two suitcases once I empty them out, and the linen, towels and other stuff like that. Maybe one more trip tomorrow on the way home after work?\"\n\nJason said that sounded good to him and they headed back to the house to empty out what she had and to have dinner.\n\nThe next week went by quickly as they moved out the rest of her stuff the next weekend and donated what was left to a local church that did a lot of good work with needy families in the area. Between moving her out and into the house and finalizing everything for the job they were doing next, the time just flew by.\n\nThey arrived at the facility they were upgrading late Monday afternoon. They wanted to stop by to touch base to make sure everything was ready to start the next day. They found that all the parts, tools and the rest of the equipment had been delivered and the company was looking forward to the install.\n\nThey meet with the management and discussed the process and made sure they didn't have any questions or problems. Due to Simone's pre-workups and all the conversations she had with them, it ended up being more of a get to know you meeting than anything else. Jason was always amazed how good she was setting all this up with the minimum amount of hassle. It was because of her more than anything that the jobs they did together always worked out with very little problems. He wasn't just bragging on her when he told the boss how good she was, she was amazing at it. Granted, he was slightly prejudiced when it came to her, but she was that good. \n\nThey started the job the next day and everything was going as planned. Due to all of Simone's planning everything was going easy with very little problems. There were a couple, but they had planned for problems, so it didn't hold them up. By Friday, they were over half completed, so they decided that they work a half day on Saturday and take Sunday off and do the tourist thing. \n\nSaturday morning, Jason was setting up a pump unit and he was bulling it around to get it in place when he slipped and twisted around pulling a muscle in his back. He should have known better, but sometimes he got into the job and didn't ask for help when he knew he should have. He was lucky that he didn't really hurt himself more than he did. Simone heard something drop and then heard Jason shout, \"Son of a bitch,\" \"Stupid bastard.\" She went quickly over to where he was working and saw him standing there slightly bent over holding his hand to his back.\n\nShe rushed over to him and asked, \"What's the matter babe, did you hurt yourself? Are you alright?\"\n\nJason nodded to her saying, \"I pulled a muscle in my back because I was stupid.\" \n\nHe muttered under his breath, \"You would think after doing this so many times, I'd know better, but noooo..., Do I listen to myself? No, I don't, I feel like an idiot.\"\n\nShe but her arm around him and said to him grinning, \"You're not an idiot, you do have stupid attacks sometimes, like now, but your no idiot.\" \"Look, we're just about done today anyhow, so let's call it a day and come back on Monday.\" \n\nShe grinned at him and continued, \"And if your real good, I think I could be convinced to take care of that for you and make you feel all better.\"\n\nHe grinned back at her and said, \"That sounds good to me, let's go.\"\n\nThey packed up their tools, well to be honest, Simone did most of the work, Jason stood there bent over like some 90 year old man grumbling to himself. They went back to the hotel, got cleaned up and went to dinner. They stopped on the way back and picked up some wine, then went back to their room. They opened the bottle and turned on the TV to relax a bit.\n\nAfter finishing half the wine, Simone went into the bathroom and got some towels and spread them over the bed. Holding up a bottle of baby oil she used to take her makeup off, she grinned and said to him, \"Strip.\" Then pointed to the bed and continued, \"And then lay down on the bed so I can work on you.\"\n\nJason drank off the wine in his glass and replied to her, \"Yes Ma'am, whatever you say. I'm here to please.\" \n\nShe laughed at him while she watched him try to get undressed, but he was having a hard time of it. She decided to take pity on him and came over and helped him strip his clothes off. As she helped him pull off his shirt, she reached down and kissed and sucked on his nipples. Then she unbuttoned his pants and let them drop around his ankles. She grinned as she saw the bulge in his underwear and lightly stroked his cock through the material. He grinned, then winced as he straightened up. \n\nSimone shook her head smiling at him and told him to sit down on the bed. Once sitting down she pulled off his pants and stripped off his underwear. She kissed his cock-head, and he groaned as he reached for her, but she pushed him down on the bed saying, \"None of that now, lay down so I can get to your back. You'll be no good to me if your all stiff.\" \n\nThen she laughed evilly, \"Well, at least your back all stiff is no good to me.\"\n\nShe stood up and as he watched her, she started slipping off her clothes so she wouldn't get oil all over them or at least that she was telling herself, but in reality she wanted to feel his skin next to hers.\n\n\"Turn over now, your back first, then we'll see how that works, then I'll decide if you can handle me doing the front.\" She told him grinning.\n\nShe got on the bed and felt around his back asking him where it was worse. Jason said to her, \"It's on the right side, between my ribs and hip.\"\n\nShe felt gently around the area he told her and she could feel the muscle all hard and tight. \"It don't seem that bad Jay, the muscle is tight, but I think I can loosen it up.\" \"But, I think I'll start at the bottom and work up, the more relaxed you are, the easier it will be loosen up the hurt part.\" \"You did take some ibuprofen didn't you?\" She asked.\n\nJason answered her with, \"My grunt candy? Yes, about an hour ago after we ate.\"\n\n\"Grunt Candy?\" She laughed asking, \"Why do you call it that?\".\n\nJason chuckled answering her, \"Navy, Marine Corp. term, It's what we always called it. They gave it to us to use for anything we used to do to ourselves.\" He laughed again and said, \"I think they thought it could cure cancer if we took enough of it.\"\n\nShe laughed along with him, \"Well just try to relax and let me work on this.\" \n\nShe poured a bit of oil into her hand and rubbed them together and then started in on his calf doing firm long strokes up and down. Then she worked up to his thigh to his ass cheek. She poured more oil and started doing the same on his other leg. The she started across the top of his ass, watching how he moved when she got to the spot he had pointed out to her. She started just using her fingers, massaging him gently so it loosened him up but not hurt him. She kept this up for a while longer till she felt the muscle start to loosen. She then heard him moan in pleasure as he felt her hands work the muscle and she knew she had got the right spot. \n\nNow that she had the muscle loosened up, she started to do the rest of his back more firmly. She worked her hands up and down his back from his shoulders to his ass cheeks. She spent a little more time on his ass just because it was so cute, massaging over and in between his cheeks and teasing his pucker when she did. The she went back up to his shoulders and neck working all around till she heard him moan in pleasure as she massaged him. \n\n\"Oh God Simone, that feels so good. You've got all night to stop that.\"\n\nShe giggled asking him, \"Oh really, all night? You just lay there and let me finish up\"\n\n\"Anything you say.\" He groaned. \"Just where did you learn to do this?\"\n\nSimone giggled a little again and told him, \"From a good friend of mine, she was a masseuse and she taught me how to do it. She told me it would come in handy if I wanted help someone out.\" \"Or if I just wanted them to get to a point where they would do anything I asked.\" \n\nHe moaned out, \"She was right, please let me know her name and address, I want to send her a thank you gift for teaching you.\"\n\nShe grinned and lightly slapped his butt saying, \"Be good now, or I'll get jealous and stop.\"\n\n\"Yes dear\" he said.\n\nShe pour more oil in her hand and started making long, firm, slow strokes up and down his back. She was now straddling him with her cock firmly lodged between his ass cheeks as she moved up and down his back massaging him. Her cock would slide up and down his ass crack from all the oil she used, making her very hard and erect. She shuddered herself every time she moved as her cock rubbed between his ass cheeks.\n\nShe slid down as her hands moved from his neck to his lower back and as she slid her hands back up once more, she felt her cock slip into Jason's ass and before she could stop, she was almost balls-deep in him. Due to him being so relaxed, the wine and all the oil, there had been no resistance at all.\n\nShe stopped and said to him, \"Oh Jason, I'm so sorry, I didn't mean to, I just slipped into you as I moved back up from all the oil.\" \n\n\"Are you alright?\" She asked. She started to back out of him as she asked and then stopped as Jason said to her, \"Please honey don't be upset, just don't move yet, it's alright.\"\n\nJason had felt her cock slipping up and down his butt crack as she massaged him and didn't think anything of it, it did feel good. He had never minded a women playing with his ass and really never minded when one would finger fuck him. He liked it. As he laid there just feeling so relaxed, he suddenly felt Simone's cock enter him and go all the way in. It stunned him momentarily, but then he said to himself, \"Hey, that feels good.\" He found that he didn't really mind it, mainly because of who's cock it was. Also, both of them were so well lubed up already and her cock wasn't all that big, it just slipped right in. \n\n\"Are you sure you're alright Jay?\" She asked again.\n\n\"Yes honey, I'm fine.\" He answered. \"It actually feels quite good. Look, since your already in, go ahead and enjoy yourself if you want to. Just go slow as my back is still a little sore.\"\n\nShe couldn't believe she was hearing him tell her to fuck him, so she asked him, \"Are you sure baby? I'll stop if you want me too.\" \"I know we've never talked about this.\"\n\n\"No Simone,\" He answered her, \"Go ahead if you want to. Like I said, your already in there and it does feel good. I really don't mind. I figured we would get to this one day anyhow.\"\n\nShe couldn't believe she was hearing this, she had never topped someone. But she found it excited her and felt her cock grow just a little bit harder as he told her to go ahead. She reached down and took hold of his hips to pull him up some, and slowly pulled back till she was almost out and then slowly pushed back in to let him get used to it. She kept doing this, going a bit faster each time she went in and out of him. She felt him shudder each time she went all the way in and she knew from her own experience that she was hitting his prostate when she did. The last time she buried her cock in him, she felt him push back at her to get her cock farther in him and he groaned loudly.\n\nJason felt her take his hips in her hands and slowly pull her cock out and then push back in. He could feel her speed up as she fucked him and every time she pushed in, he could feel the head of her cock hit that magic spot and his cock spasmed as she did. His cock head felt wet and he knew he was soaked in pre-cum. He felt her speed up a little and was really enjoying the feeling of her cock going in and out of him. Then he felt her bury her cock deep in him and he shuddered and involuntarily pushed back against her trying to get her cock deeper in him, groaning as he felt her bottom out in him. He knew if she kept this up, she was going to make him cum. \n\nHe moaned out her name and begged her to keep fucking him, \"Please Simone, fuck me. Oh damn, it feels so good, I never imagined it could feel this damn good.\" \n\n\"You're going to make me cum, please cum with me, I want to feel you shoot your load in my ass.\" He begged her.\n\nSimone started fucking him a little harder and faster as she heard him beg her. She could feel her cock swell in his ass and felt the tingle in her balls and knew she was seconds away from cuming. She moaned out his name, \"Jason, baby, I'm so close, your ass is going to make me pop.\"\n\nAs Jason heard her say this, Simone buried her cock balls-deep in him and he felt her cock swell and heard her say to him, \"Jason, Oh God baby I'm cuming.\" \n\nHe felt his cum start to boil up from his balls and burning through his cock as Simone buried her cock in him. He had never felt like this before. Then he felt the cum spew out of his cock, as he told her he was cuming also. He felt her pump in and out of him, each time spurting a rope of her cum into him. Every time she shot, he felt himself shoot also. He was pushing back at her each time she pushed into him, his whole body was shaking. He still couldn't believe how good this felt.",
        "Simone buried herself in his ass and collapsed on top of him exhausted. Her body was shaking with her orgasm and with emotion as she savored what they had just done together.\n\nJason felt her collapse on top of him, her cock still buried in his ass and her erect nipples burning holes in his back. He couldn't believe what they had just did, but he knew he didn't want it be the last time. It felt just to good not to want her to do it again.\n\nSimone felt her cock soften and she slowly pulled her cock all the way out. She felt him shudder as she pulled out and flopped on the bed next to him. He rolled on his side and took her in his arms, kissed her and told her, \"That was fantastic. I never realized it could be so good.\" \n\n\"Is that how it is for you when I make love to you?\" He asked. \"I felt like I was going to cum every time you buried your cock in me.\" He kissed her again.\n\nShe kissed him back and holding him she said, \"Yeah baby, it's like that for me to when you do me. Thank you for letting me do it, not many guys would, especially how it happened. I know it's not something we ever talked about.\"\n\nJason looked at her with love and a bit of lust in his eyes, and told her, \"It took me by surprise when you did slip into me. But, it just felt so good at that moment, all I wanted was for you to do me.\" \n\n\"I hope you liked it, because I'll be highly disappointed if you don't make love to me like that again.\" He kissed her, then said continuing, \"I really loved having your cock in my ass.\"\n\nShe hugged him and replied, \"If it makes you happy, and I know I loved it, I'll do it anytime you want. I can't remember ever cumming that hard before.\"\n\nThe laid there just holding each other, stroking whatever they could reach. Jason suddenly stopped, then looked at her and then said, \"Guess what, may back don't hurt anymore.\"\n\nSimone looked at him, then started laughing, then he started laughing also. Once he stopped he said, \"I don't know if this will became a cure for a strained back, but I'm more than willing to have you do it again if my back still hurts later.\"\n\nThen he noticed how much of a mess he made when he orgasmed and felt some of Simone's cum between his ass cheeks and said to her, \"I think we should take a shower, we've made a bit of a mess.\" Simone laughed and got up, taking his hand to help him out of bed. The stood there holding each other they could feel both of their cum soaked cocks sliding against each other hardening as the rubbed together.\n\n\"Come on stud,\" She said, \"Let's get cleaned up.\" They got into the shower and washed each other under the running water, rubbing their bodies together. He stood behind her and soaped up her back an then wrapped his arms around her and started rubbing his soapy hands in circles around her tits, teasing her nipples between his fingers as he rubbed. She leaned her head back on his shoulder and looked at him saying, with a little humor in her voice, \"Ah, Jason, I think they're clean now.\" \n\nJason grinned at her and replied, \"Well, I love you and I don't want you to go out with dirty breasts you know. What kind of husband would I be If I let that happen.\"\n\nShe laughed at him saying, \"Oh, well, since you put it that way.\" She leered at him and continued, \"But there may be other dirty parts you know. A good husband would make sure they were all clean too, you know.\"\n\n\"As you wish,\" He laughed, \"Never let it be said I'd be negligent in my husbandly duties.\"\n\nHe then started making bigger circles with his hands, moving them lower and lower. When he reached her cock, he encircled it with one hand and began to soap up her balls with the other. As he played with her cock and balls, his slid his cock up and down her butt crack. He leaned down and kissed her on the neck and tsked a couple of times and said to her, \"Oh, look honey I found another couple of parts that need cleaning.\" \"I don't see how you missed them, maybe I should take over washing them from now on.\" \n\nShe groaned a bit as he stroked her soapy cock, grinding her ass against him. Maybe... Your...Right...\" She gasped out, \"We surely wouldn't want that.\"\n\n\"Ok Simone, anything you say.\" He replied happily. \n\nHe started to stroke her a little faster now, then stopped massaging her balls and he reached between her cheeks to rub her asshole with his middle finger. Then as he started to dip his finger in her he said, \"Yep, found another dirty spot here, can't have that.\" Then he started to push his finger in her going deeper with each push. As he got his finger all the way in he stroked her faster. As he did this, he kissed and licked her neck just were it joined her shoulder.\n\n\"Oh, baby,\" She gasped, \"That feels so good. I glad you take you duties so seriously.\"\n\nThe \"seriously\" came out in a slightly higher pitch as he started to rub her prostate . She started raising and lowering her ass as he finger fucked her, her soapy flank was rubbing against his cock making him shudder a bit as she did.\n\nAs she raised and lowered her ass, not only was she making him finger fuck her ass faster, but it was also making him stroke her cock faster. Suddenly she cried out, \"Oh, Fuck Jay, I'm cumming again.\"\n\nHe felt her stiffen and then watched as she shot her load over the shower wall. He continued to stroke her cock making her shoot two more times, then he held so she wouldn't fall as he felt her legs give way. The he turned her around and kissed her soundly as the water cascaded down on them, then held her close until she stopped shaking.\n\nShe finally stopped shaking and then she reached up to kiss him. Smiling languorously at him said, \"I'm such a lucky woman to have a future husband that takes care of me so well.\" She kissed him again and continued, \"Not everyone would make sure their partner was clean like that.\"\n\n\"Oh, you're very welcome.\" He replied. \"I'd be more than happy to do that anytime you want.\"\n\nShe licked his lips with the tip of her tongue, then kissed him burying her tongue in his mouth to wrestle with his. She broke the kiss and grinned evilly at him and said, \"Now, I think it's my turn to make sure your just as clean.\"\n\nShe rubbed the soap between her hands working up a lather and started to make slow circles and stroking his chest. She worked down his chest till she came to his cock and lightly holding it, started to slowly stroke him from the base to the tip, twisting her hand as she got to the tip.\n\nThen an idea flashed across her mind. Grinning, she squatted down and wrapped her breasts around his cock. She wasn't all that big chested, but she had enough to bury his cock in her cleavage as she pressed them together trapping his cock between them.\n\nJason looked down as he felt something warm and soft wrap around his cock. Then he grinned as he watched her move her tits up and down his cock. \n\nShe looked up at him and returned the grin he had and said, \"Look, I found a couple of new sponge's to use to help me clean you up.\"\n\nHe leaned his hands against the shower wall to hold him up as his legs grew weak. He groaned and said, \"I really like those sponges.\" He gasped and continued, \"They've got to be the nicest I've ever seen.\"\n\nShe grinned back at him and moved her tits up and down his cock faster. Then she had another idea as she watched what she was doing. She noticed that the head of his dick protruded from her tits as she pushed them down, so she bent her head down the next time and found that she could just reach it with her tongue. \n\nShe grinned evilly and told him, \"I found another part that still needs washing.\" And as she pushed her tits down, she reached out her tongue and lapped at his head.\n\nJason jumped as he felt her tongue on him, and groaned out her name. \"Oh God Simone, that feels so good.\" \"I'm...Glad...You ...found... a better way.\" He started to tit fuck her as he got more excited.\n\nHe felt the cum surging up his cock and moaned to her, \"Oh fuck baby, I'm cumming.\"\n\nShe watched his cum spurt out of his cock and felt it strike her face. She let go of her tits and took him in her mouth. Ignoring the soapy taste, she sucked on his cock to get all his cum.\n\nJason leaned against the shower wall as his legs failed so that he almost fell as he felt her lips wrap around his cock head and felt her suck the cum out of him.\n\nHe finally stopped cumming and he reached down to pull her up to him. He kissed her, tasting his own cum as he did. Then he held her close as the water showered down between them.\n\n\"Simone, I love you so much.\" He said as he kissed her. \"I can't wait till were married for real.\"\n\n\"I want to be with you forever, I have never felt this way about anyone or anything before.\" \"There's not one thing I can find that I don't love about you, from the top of your head to the soles of your feet.\" \n\nHe kissed her again lovingly and continued, \"You are the best lover in the world and I'm glad you're going to be mine.\" He looked at her, \"I want to be with you always and forever.\" He pulled her to him and hugged her tightly.\n\nShe pulled back gently and looking at him, she saw the tears of joy in his eyes and knew that he meant every word he said and that she felt the same way about him and told him so.\n\nThe rest of the trip was uneventful and they had finished on time. When they got back to work at the end week, they were greeted by their boss and he congratulated them on another job well done. He asked them to come to his office once they got caught up and finished all the paperwork that went the trip.\n\nThey went to their cubes and finished up the claims for their trip and since Simone had already finished up the report on the install the last night there, she just went over it so she could turn in the draft. Having finally got caught up with everything, they grabbed some coffee and went over to their bosses office. He asked them to come in and they discussed the install for anything that wasn't covered by the reports Simone posted every few days.\n\nHaving finished all that he asked them if they had set an actual date for the wedding and if they knew when they were going to take vacation time for their honeymoon. Jason, nodded and said, \"We figured we'd take a week or so to set everything up, but I think that we'll being shooting for two weeks from now.\" \n\n\"We're still discussing the honeymoon. We're not too sure just where we want to go.\" He smiled at Simone, then turned back to Frank and continued, \"I'm kind of thinking one of those south sea island places, you know Tahiti or maybe Bora Bora where you get your own place on the beach. But Simone is thinking maybe France or something in that area. We'll figure it out, and I'll make sure we give you enough notice, but it'll more than likely be for the two weeks after the wedding.\"\n\nFrank smiled at them, these two were sort of like the kids he never had and he was very happy for them. He finally said, \"It's not a problem, just let me know when you can, you both deserve a vacation after the way this year has gone with all the trips.\"\n\nJason and Simone both smiled, then Jason asked him, \"You do plan on coming to the wedding aren't you?\" \n\nFrank smiled and replied, \"Are you kidding? I wouldn't miss it for the world.\"\n\nJason smiled at that and said, \"Okay, that's great, I wouldn't know what to do if my best man didn't show up.\"\n\nFrank gaped at them, and said, \"What do you mean?\"\n\nBoth Jason and Simone laughed at his reaction and Jason asked told him, \"Well, who else was I going to ask? Don't you remember what you told Simone on the first day? \"Jason hates people.\" Besides her, you're the only one I really like around here.\" \n\n\"So, do you accept?\" Jason asked him.\n\nFrank looked at them stunned for a minute, then replied, \"Of course I will, how could I turn that down.\" He looked at Jason for a moment, then shook his head saying, \"But have I ever told you what a smart ass you are?\"\n\nSimone busted out laughing when Frank called Jason a smart ass and she turned to Jason to lightly elbow him in the side, saying, \"See? I told you you're were. Now we really have proof.\"\n\nThey finished up rest of the day playing catch-up with emails, voice mails, the final paperwork and reports for the job they just did. So they headed for home to work on the plan for the wedding and do a final walk around of her apartment as this was her last weekend there. They had moved everything, so now it was just making sure everything was okay and closing out everything with the manager.\n\nOnce home Jason got her a glass of wine and a beer for himself, then sat down in the living room. He picked up the list of things left to do to move her out and in to the house and saw that it wasn't much. A few boxes to bring over to be donated and then finding a place for the final pieces of furniture she was keeping. The had decided that some of her stuff was better than what he had and so they planned on keeping that and donating Jason's instead. His pieces weren't in bad shape, just a bit dated. After that, they would have everything all done and Simone totally moved in.\n\nThe plans for the wedding were fairly simple, they weren't having a big thing, just some close friends and family. They planned to do the wedding and reception at their place since it was so nice this time of year and they had the room. They'd were going to have a hot and cold buffet, with various desserts. Some of the stuff Jason would make and some would come from a local place that provides catering for this type of parties. A friend of Jason had used them and they were pretty good, so he thought that would take some of the pressure off him and Simone.\n\nSimone was happy with what they had come up with as she didn't want something big and complicated. Just the fact that she was marrying the love of her life made her happy. Her mom and dad would be coming, some friends of hers and Jason's, and some people from work. \n\nJason had lost his parents some years ago and all he really had left were some distant cousins that had sent their congratulations, but were not going to able to attend. He seem okay with it and she hoped so, but she did wish he had some family that could attend.\n\nShe also had planned a surprise for him, knowing how much he loved the old Bogart and Bacall movies. She had wrote to Ms. Bacall a few weeks ago explaining how much Jason loved her movies, especially \"To Have and Have Not\" and had told her that they were getting married, so she wanted to surprise him with an autographed picture of her if at all possible. She thought it was a long shot, but she figured what the heck, it only took a little while to write the letter and you never know what could happen. As everything had been going so great for them, she figured it was worth it to try.\n\nMuch to her surprise, when they had returned from the job there was a note in her mail box to stop at the post office to pick up a package that couldn't be delivered to her apartment. She had went to the post office to pick it up and when she opened it, she was stunned to find an autographed and personalize photo of Ms. Bacall from the movie. She had wished Jason and her a happy wedding day and long, happy marriage. She had also included a very nice letter and an even more to her surprise, an autographed picture of Humphrey Bogart. She had explained that she had serval left over from the day and she thought they would appreciate it also.\n\nSimone had decided that she would write her a nice letter thanking her for her gifts and letter. She was simply amazed that the actress would do something like this for people she had never even meet. Jason would be ecstatic over these gifts and she was still trying to decide when to give them to him. She also had another surprise for him, she had downloaded a picture of the dress that Lauren Bacall had worn at the end of the film and had a dress made that looked similar to it. Her mom knew a seamstress back home and she had asked her mom to see if she would have enough time to make it before the wedding. Her mom had checked and she had said that she could. Simone could not believe their luck with everything that had happened since that night that Jason had saved her. It was like the universe was going out its way to make everything perfect for them. \n\nFor entertainment, she had contacted a DJ that they knew from one of the bars they occasionally went to and he agreed to do the music for the reception. She had asked him if he could play \"Key Largo\" by Bertie Higgins for their first dance together and he told her that was no problem, he often played that at receptions or anniversary parties.\n\nAll in all, everything was going smooth. The only problem, well not a problem really, was that they still hadn't found a place they both wanted to go for their honeymoon. Jason wasn't particular where they went, as long as they were together. He had been all over the world between the Navy and doing jobs for the company, so there really wasn't one place he wanted to go, he had told her wherever she wanted to go was fine by him. She still needed to think about it, the biggest problem was that there were so many places to go and they could go anywhere they wanted, basically for free, Jason had so many hotel and airline points that it wasn't going cost them anything but for spending money once they got there.\n\nThe next two weeks went by fairly fast for them as they finished up some things at work and went shopping for various things for the wedding. Jason had started some things for the food and placed all the orders with the caterer. The also had a bit of luck that one of Simone's friends knew someone that would marry them so they were going to have the wedding ceremony in the backyard instead of the courthouse. \n\nThen two days before the wedding, Simone's parents came to town and got a hotel near them since she didn't have her apartment anymore. In keeping with tradition, Simone would stay with them the night before since it was bad luck to see the bride before the wedding. It also gave Simone a chance to surprise Jason with her dress.\n\nOn Friday morning, Simone decided to give Jason the gift she had got for him from Lauren Bacall. They was sitting in the living room with her parents going over the last minute details to make sure they hadn't forgotten anything when Simone excused herself to get her present to him. She walked back into the living room and sat the present on the table. She had had the pictures installed in a double frame and wrapped everything up it some gold wrapping paper. \n\n\"Jason,\" She started, \"I was going to wait to give this to you later, but I wanted to give this to you while there wasn't a whole lot of people around.\" She smiled and handed him the gift which she had attached the letter to so he could read it before he opened it.\n\nJason smiled at her saying, \"You didn't have to do that, just being able to marry you is enough for me.\"\n\nShe smiled and leaned over to kiss him, then said, \"Well, this is a special gift. But you need to read the letter first.\"\n\nSimone sat on the floor by him and watched as he picked up the letter and looked at the outside of it. He couldn't place the handwriting, so he opened the letter and started reading it. Simone watched as his eyes grew large and his mouth dropped. He looked at her and stammered out, \"Honey,\" He asked. \"Is this is real? I mean really real? It's not a joke?\"\n\nSimone looked at him with a grin a mile wide and said to him, \"Jason, I'd never joke about something like this. It's \"really real,\" I assure you.\" \n\nSimone's mom and dad were sitting on the couch looking at the kids with some confusion. Simone hadn't mention this to them either. Her dad asked them, \"Who's the letter from?\"\n\nSimone gestured to Jason, who looked at them and said with disbelief in his voice, \"It's a letter from Lauren Bacall to Simone and myself, wishing us a happy wedding day and congratulating us.\"",
        "Her mom and dad were stunned on what they were just told and then Jason looked at Simone and asked, \"How?\"\n\nSimone smile lovingly at him and said, \"I'll tell you in a minute, open the gift first.\"\n\nJason placed the letter carefully on the coffee table and slowly unwrapped the package. As much as he was stunned about the letter, you couldn't describe the disbelief on his face as he saw the framed pictures. He looked at Simone with tears in his eyes and asked \"How did you do all this?\"\n\nShe smiled at him and said, \"Well, I was trying to think of the perfect gift to give you, besides me that is.\" She laughed. \"I thought to myself after we watched the movie and you said again how much you liked it and that I looked and sounded like her, that I would take a shot and write her a letter telling her how big of a fan you were and that I was looking for the perfect gift for you for our wedding. When we got back from the last trip, there was a package for me at the post office.\" \n\n\"I was just as shocked when I learned she had not only sent her picture, but also the one she had of Humphry Bogart that she thought you appreciate.\" \n\nShe laid her hand on his knee and he covered it with his, then she continued, \"I was really surprised about the letter. I did write her back thanking her for everything also.\" \n\nJason stood and took hold of her hands to lift her up to him. He took her in his arms, and told her, \"You are the best women in the world, you know that?\" \"No one has ever went out their way to do something like this for me. I love you so much.\" \n\nThen he turned to Linda and Mike saying to them, \"And thank you also, without you two, I would never have the beautiful, wonderful woman in my life.\"\n\nBoth Linda and Mike blushed with the compliment and the next thing you know they were all in the middle of a group hug.\n\nLater that day, Simone kissed Jason goodbye, whispering in his ear how much she'd miss making love to him that night. But in less than one day, they would have an entire lifetime of it.\n\n\"I love you Jason,\" She said hugging him. \n\nJason hugged her back and told her that he loved her too. He told her parents goodbye and that he would see them tomorrow.\n\nNeither Jason nor Simone slept well that night. Both of them had gotten so used to being together that it didn't feel right being alone. But, they finally got to sleep and the next morning rolled around and they got ready for the wedding. \n\nSome of their friends stopped over early to give Jason a hand finishing setting up for the wedding that couldn't be set up yesterday. And when noon came, everything was ready.\n\nAll the people that were invited had showed up and Frank, who had been asked to be Jason's best man, waited out front as Simone and her parents arrived. Jason was waiting where they going to have the ceremony performed waiting to see his bride. The DJ played some appropriate music softly as Frank gave him the high sign that the bride and family were ready. Frank came up to stand beside Jason and he noticed that Jason looked so nervous that he thought he was going to pass out.\n\nLinda and Mike were both leading Simone up to him, one on either side. They reached him and first Linda, then Mike hugged Jason, then Mike placed Simone's hand in his. Then he stood to the side of him as Jason saw his bride for the first time close up. Jason's eye's went wide as he saw her, she was wearing a perfect copy of the dress that Lauren Bacall had worn at the end of the movie, accept hers was white. He stood there staring at her, tears in his eyes and his mouth open. He reached for her and took her hand in his, both of them were shaking with emotion and nervousness.\n\nMike reached over and put his hand on Jason's shoulder, then leaned in to whisper so that only they could hear, asked, \"Were you ever stung by a dead bee?\"\n\nJason and Simone laughed at the line from the movie, the nervousness was over and they waited for the ceremony to begin just staring into each other's eyes.\n\nThe ceremony started and they exchanged their vows, promising to love and be together forever. Then, before they knew it, they were man and wife. \n\nThey turned to the crowd of friends and family for the first time as man and wife. The clapping seemed to go on forever. Linda came up to them tears running down her face as she hugged first Simone, then she hugged Jason kissing him and welcoming him to the family. Mike was next as he hugged Simone and said something to her that only she good hear. Tears started to run down both of their faces as he kissed her. Then he turned to Jason and took his hand in his, then pulled him in for a hug. He looked at Jason and said, \"Now you can officially look after her when I'm not around. I could not have picked a better man for her than you Jason. Since I've gotten to know you, I've also gotten a son back. Never forget that.\"\n\nJason looked at him, the tears were running down his face as he heard Mike's words to him. Then he smiled saying, \"Thank you Dad, I'll never forget.\"\n\nTears ran down Mikes face when Jason called him dad and he hugged him again. The he took Jason's hand and put it back into Simone's. He looked at her and said jokingly to her, \"Remember what I first told you when I met him Simone, If you ever and I mean ever let this one go, I'll disown you.\"\n\nSimone looked at him, then at Jason and said, \"Don't worry dad, he's stuck with me and I'm never leaving him. It would be like giving up half my soul.\"\n\nJason looked at her smiling and said, \"You know, you keep saying I'm stuck with you. How can you be \"Stuck\" with someone that you want to be with.\"\n\n\"I love you now.\" He continued seriously, \" And I'll love you a thousand years from now.\" \"Even when we finally die, we will find each other again, so your never getting rid of me.\"\n\nSimone hugged him, then kissed him again and again. Then she smiled at him and said. \"I love you and I wish this could go on farther, but we have guests that are waiting on us.\" \n\nThen she smiled that evil grin he knew so well and said so only he could hear, \"Oh but just wait till I get you alone later hubby, when I finish with you neither of us are going to be able to walk for a week.\" She kissed him once more, her tongue darting between his lips to play with his. She broke the kiss and grabbed his hand to lead him to the party.\n\nAs they walked hand in hand back to the party, a cheer went up as they neared the crowd of their friends and family. Frank handed them flutes of Champaign and then held his up while smiling at them then said, \"Here's to Jason and Simone, may they be happy their entire life together as happy as they are today. May they always love each other as much as they do today. And may their marriage last for the next 100 years.\" \"Salute.\" \n\nThey entire crowd drank and they all started clapping for them. Then one person started, then another, then the whole crowd was chanting, \"Dance, Dance.\"\n\nJason took Simone's hand and lead her to where they had a dance area set up. When they got there, the DJ announced, \"Here's something special for the happy couples first dance.\" \n\nThey next thing Jason knew, Simone pulled him close and said, \"I love you\" as the song \"Key Largo\" started playing. \n\nWith tears in both of their eyes, they started to dance. He pulled her closer and said, \"Thank you for that baby, I love you so much.\"\n\nPart way through the song, other couples joined them, but they were totally oblivious to them as they were wrapped up in their joy and love for each other. \n\nThey were startled when the song stopped and everyone started clapping for them. He took Simone's hand in his and turned to the crowd and said to the crowd of people, \"Thank you all for coming to join us in this wonderful day, please enjoy yourselves.\"\n\nJason and Simone walked over to the table and sat down, Mike came over and topped off they're glasses. He raised his and said to them, \"Kids, I hope you'll always be as happy as you are today.\" \n\nSimone, with tears and love in her eyes, stood up and gave her dad a hug saying to him, \"Thanks dad, we love you, and thanks for making this day possible for accepting me for what I am. Without that, this never could have happened, I love you and mom so much.\"\n\nMike hugged her and then kissed her on the forehead replying, \"How could I not accept it? You obviously made the right decision, look how beautiful you turned out.\" \n\nHe laughed and whispered to her, \"Luckily for you, you took after your mother and not me, could you just imagine me with tits?\"\n\nShe looked at him stunned for a second and bust out laughing not knowing how to reply. Finally, she was able to get some words out and said, \"See, what did we tell you, smart ass.\"\n\nMike laughed along with her and said, \"Well, everybody's got be good at something. Now if you don't mind, I'm going to get your mother and ask her to dance.\"\n\nShe sat back down at the table and took a long drink of her wine and Jason asked what was so funny?\n\nShe leaned in close to him as he was taking another drink himself and said, \"Dad told me I was beautiful and said, \"Luckily for you, you took after your mother and not me, could you just imagine me with tits?\"\n\nJason choked slightly on his wine trying to swallow and laugh at the same time and doing neither very well. When he finally was able to talk, he said to her \"I really love your dad you know that? Both of them actually, I've never met anyone more loving and excepting as they are.\"\n\nSimone nodded, and replied, \"That's what I told him that made him say what he did.\"\n\n\"Thank you for saying yes when I asked to marry me.\" He said to her, \"Words can't explain just how much I love you and need you.\"\n\nSimone grinned at him and said, \"I love you baby, I still can't believe this happened.\" She kissed him and said in his ear, \"And just you wait until I get you alone later hubby. You can show me how much you appreciate it.\"\n\nJason hugged her back saying, \"Just be careful what you wish for, you just may get it.\"\n\nShe smiled at saying, \"Oh baby, I most certainly hope so.\" They then walked back hand in hand to the party.\n\nThey spent the rest of the afternoon with their friends eating, drinking, and dancing. The party started to break up around five until the only ones that were left were her mom and dad.\n\nThey sat at the table for a while talking until Mike asked them if had decided yet where they were going on their honeymoon. \n\nJason finished off his beer, \"Yeah, actually we did. We leave on Tuesday for Tahiti, we've got reservations at one of those places that rent out the bungalows on the water.\" \n\n\"Simone originally wanted to go to Paris, but we finally decided we wanted something warm and sandy.\" \"We figured we could go to Paris on vacation later, since with all the points I have for the airlines and hotels, we can go there anytime we want. All we'll need is spending money.\"\n\nJason laughed, \"However when we go there it might end up costing us more unless I can keep Simone out of the shops.\"\n\nSimone laughed at him, \"Well, isn't that what you do when you go to Paris? Shop and eat and then shop some more.\"\n\nHe leaned over and kissed her, \"Well, I guess I can eat while you shop then.\"\n\nMike and Linda stood, \"Well, I hope you have a good time and take plenty of pictures. That was one of the places Linda and I always said we wanted to go to. If she sees all the pictures, maybe I can convince her.\"\n\n\"Call us when you get back.\" He reached over and hugged and kissed Simone, then pulled Jason in for a hug also.\n\nLinda came up to Jason and hugged him and kissed on the cheek. Then she said in his ear, \"Welcome again to the family son, I'm so happy for the both of you. You are the best thing that ever happen to her and I'm glad to have you for a son in-law.\n\nJason kissed her back and with tears in eyes said, \"And thank you again for all you did to make this day possible for us. I can't tell you how nice it is to have a family again to share with. I love both you guys.\"\n\nLinda had tears in her eyes after hearing this and hugged him again. She turned to Simone and hugged her also saying, \"Your fathers wrong you know. If you ever let this one go, we'll not only disown you, we'll adopt him.\"\n\nShe kissed Simone again then she and Mike headed out to their car with Jason and Simone going with them to see them off. As they pulled away, Jason and Simone waved to them and headed into the house hand in hand to spend their first night as husband and wife."
    ],
    "authorname": "65rebel",
    "tags": [
        "transgender",
        "tranny",
        "transsexual",
        "trans",
        "love",
        "romance",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/from-friendship-comes-love-pt-02"
}