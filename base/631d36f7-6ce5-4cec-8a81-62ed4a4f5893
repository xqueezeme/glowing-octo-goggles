{
    "title": "Do Miracles Happen? Ch. 04",
    "pages": [
        "Even though the children were tired, it took a while to get them settled. For the past two weeks they'd been traveling and staying in strange places. My apartment was one, in the long list of different beds. The street sounds, ticking clock, and voices from outside were a few of the strange sounds they were hearing. Claire eventually got Andrew calmed down while I read a story to Aaron and Amy. It was 10:30 before we quietly closed the bedroom door and relaxed at the kitchen table.\n\nI was brewing some coffee when she asked, \"So what happens now?\"\n\nSetting the two steaming cups on the table and pulling out the creamer and sugar, \"A larger apartment would be nice.\" I smiled.\n\nShe was silent, and then spoke. \"How can I help?\"\n\n\"Take care of the children and the apartment for now. Let's wait a few days, see how things set up. In the morning I'll talk to the apartment manager and see about upgrading to a two bedroom unit. I want a colleague to look at Andrew's heart.\"\n\n\"Bob, what about money? It's going to cost a bundle.\" Claire hold's her cup between her hands, blowing on it, cooling it down.\n\n\"I've a little bit put back into savings. Let's play it by ear and see how things go. If things become too tight, maybe you could apply for welfare, but we'll cross that bridge if necessary.\" Taking a sip, I nearly scald my mouth. \"Ouch. That's hot.\"\n\nShe grinned. \"Maybe I should do some of the cooking around here?\"\n\n\"Don't rub it in. I've done alright batching it.\" Turning serious, \"Bear with me, I haven't lived with anyone for quite a while; last time was in Med school.\"\n\n\"Will the kids be a problem?\"\n\n\"Claire, I love your kids. I need to change gears and I'm looking forward to it, I really am.\"\n\nSmiling, \"They like you, Bob.\"\n\nThe coffee was cool enough and I began to drink. We were silent, lost in our thoughts, I glance up and see her watching. \"Just to let you know, I can get cranky.\"\n\n\"Join the club.\" She laughed.\n\nA 'quiet' settled over us; she looked awkward, and I felt awkward. Pressure had been applied by Gene and Sara to 'match' us. The children were the biggest reason and, I believed neither of us, could, or would, argue the importance of that point. The question I was asking, 'were she and I well-suited', and only time would tell. In the meantime, it created a tension between us, and living together applied additional strain. Carrying this scenario further, what would happen if we decided it wasn't in our interests to stay together; I wouldn't be able to dump them.\n\n\"Need your coffee warmed up?\" I asked.\n\nShe shook her head. Our eyes caught for a moment, we knew the topic needed broached.\n\n\"Time to talk?\"\n\n\"Um hum.\"\n\nTaking a deep breath, I voiced my thoughts, she listened. \"I'm feeling pressure for us to develop a relationship; I'm not against it, just don't like the pressure. The children should come 'first' and that's the thrust of my current actions. In the future, what would happen if we decided to go our own ways? Should that occur, we don't want anything, which would obligate the other.\"\n\nHer smile showed a twinkle in her eyes, \"So you don't like me, huh?\"\n\n\"Nope, I don't.\" I said with a cheesy grin, teasing her.\n\nWith a sober look, \"That pretty well sums up my feelings, too. Thanks for being open.\" She pauses, \"Bob, what can I do? I feel you're doing everything for us and I want to contribute to this arrangement?\"\n\n\"You will, I assure you, you will.\"\n\nOur coffee's gone. \"You want any more?\" I ask.\n\n\"No. It's bed time. Andrew will be awake early.\" She picked up our mugs and put them in the sink, running water to rinse them out.\n\nThe main lights were turned off about 15 minutes later, leaving a small night light on in the bathroom. She slept in my bed and the children close by. I was on the lumpy couch, not the best, but serviceable.\n\nThe next sound I hear is Andrew crying. A check of my watch reads 6:35, time to 'rise and shine'. Claire is in the bathroom, I quickly change into some clean clothes and head to the kitchen. Not much in the way of food. Mentally I mark down to do grocery shopping after talking to the apartment manager. I locate a loaf of bread, couple eggs, some boxed cereal, and a can of frozen orange juice. Putting the coffee on to perk, I mix the OJ, and pull down the cereal. Have to eat it dry; because there's no milk. Bummer. \n\nClaire walks in, carrying Andrew, looks around and comments, \"Not much here, is there?\"\n\nI shrugged my shoulders, \"Plan on a visit to the super market.\"\n\nShe busies herself, while I visit the 'little room' to wash up and shave. I'm finishing up as Aaron sticks his sleepy head out of the bedroom. \"Come on 'big guy'\"\n\nHe ambles over and I help him do his 'duty', before we walk to the kitchen.\n\nThe smell of fresh toast fills the air and I helped him sit in a chair. Claire had located a jar of jam and I spread some on a slice of toast, giving it to Aaron, he munches away contentedly. Amy, now awake and holding her doll, climbs sleepily into another chair.\n\nBreakfast is soon over and Claire cleans up the table and marches the kids to the bedroom to get dressed. When the clock chimes 8 o'clock, I'm out the door and moving towards the front office. It takes 2 minutes and I greet the manager warmly.\n\n\"Morning, Bill, how's the wife? Did she get over the flu?\"\n\n\"She's made a good recovery. Still a bit weak, but she's on the mend. The doctor's kept her on antibiotics to keep down a chance for re-infection. Otherwise, she's fine.  When did you get back from your vacation?  I kept an eye on the place while you were gone.\"\n\n\"Got back late last evening about 9:00 pm. Which brings me to my request. Do you have a two bedroom apartment? I'd like to upgrade.\"\n\nHe was sifting through his book, looking, \"What do you need the upgrade for? None of my business, just curious.\"\n\n\"I've some friends staying with me for a while. Their youngest has a heart problem and I want him examined by a friend of mine. They'll likely be staying for several months, depending on the diagnosis.\" \n\n\"How many friends?\"\n\n\"Four; three are children.\"\n\nHe's flipping the pages, and then shakes his head. \"No, I don't. They're all rented out. I've got another single, but it's in the other complex, over there. Or, here's a three bedroom. It's at the end of your hallway and on the other side.\"\n\n\"I can't afford a second single, or a three bedroom. My savings will be stretched thin.\"\n\nHe scratches his head. \"If I had a place, how soon could you move?\"\n\nThinking a moment, \"Today, I suppose. That's a rush, but it could be done. Why?\"\n\n\"Well, there was a young couple in here yesterday. They're getting married day after tomorrow and want a single apartment. They don't want just any place, they were adamant it be close to some friends of theirs. I didn't have anything at the time, but your current place would fit what they want.\"\n\n\"And?\" I ask.\n\n\"You can have the 'three bedroom' for $20 over the price of a 'two bedroom', provided you can be out of your place by the end of today. I'd have to repaint and clean it for this new couple.\"\n\n\"$10 over, and you have a deal.\" I figure he wouldn't be able to rent the three bedroom place for at least two months, so this would be to his benefit.\n\nHe pushed his glasses up on his nose, grinned, and pulled some forms from a drawer. \"Do I get a free physical?\" He teased.\n\n\"If I were your Personal Physician.\" I joked back. I quickly filled out the forms and handed them back for his approval.\n\n\"I will need an extra month's rent in advance. Can't get around that, it's the owner's policy. Your current security deposit will transfer over; there's no charge for that.\"\n\nHanding him my credit card, he runs it through his machine and hands the card back, along with the receipt.\n\n\"Here's the key. I'll get the electricity and gas turned on. You'll have to see about your phone, though. I will need the key for your current place by tonight.\"\n\n\"Is there anyone who can help move my heavy furniture?\"\n\n\"Try 3B. There's some college fellows who may help for a few bucks.\" \n\n\"Thanks Bill.\" I say, heading out his door. \"You'll have my key by 5 pm.\"\n\nThat was a stroke of luck and it wasn't 9 am yet. Hurriedly I'm back in the apartment and am greeted by Aaron and Amy. Claire comes out of the bedroom holding Andrew. \n\n\"I got us a larger apartment, three bedrooms, and it's just down the hall. We have to be out of here by the end of the day.\"\n\n\"You certainly move fast, don't you.\"\n\nTogether we walked down the hall and looked at the new place. It was large and would easily accommodate us; in fact I didn't have enough furniture to fill it. This was okay, it provided space for the children to play. \n\nReturning, I placed a call to the phone company, and since we would be in the same building, they'd have a technician make the change-over today. I called a local furniture shop and ordered three beds to be delivered that afternoon. \n\nClaire started moving individual items, I visited 3B and two men agreed to help move the larger items. By 11 am, all the furniture was moved, the closets cleaned out and only the kitchen items remained. I paid the two fellows, thanking them for their help. Claire was boxing the dishes and silverware while I swept out the rooms. Aaron and Amy were making silly noises, listening to the sounds echo and reverberate through the apartment.\n\nIt was one o'clock when the door was closed for the last time, and locked. The kids were fussy and tired. We'd given them a jelly sandwich earlier but they were still hungry. I dropped the keys off and we made a bee-line to McDonalds. This was followed with a trip to the super-market where I paid for two heaping grocery carts of food, household and personal items.\n\nBack at our new 'digs', Claire put the children down for a late afternoon nap while I unload the bags of groceries and stow them in the cupboards. The last of the baby food is placed on the shelf when I feel a hand on my arm, turning; Claire is there, her arms around me and her head on my shoulder. I envelop her, my hands holding her head and running through her hair.\n\n\"Thank you.\" I hear her whisper.\n\nNeither of us moves, savoring the moment; the contact is sweet and comforting.\n\nAfter a while, she pulls back and I look into her eyes. \"That could be come addictive.\" I reply.\n\n\"That's the idea. I haven't been held like that in a long time; I've missed the closeness.\"\n\n\"With him?\" I ask.\n\n\"No. I don't miss him.\" Her smile didn't fade, but the softness in her eyes disappeared.\n\nWe were interrupted by a knock at the door, it was the phone technician. The change-over had been made, he wanted to test the phone which took all of two minutes, and then he was gone.\n\nA short while later, the phone rang, and we were informed the beds would be delivered shortly. The truck arrived and the men set one in my room and leaving the other two unassembled because the children were still sleeping.\n\nAfter they left, I placed a call, dialing the number and received a recording. Hanging up, I dialed a second number; Mark picked up on the 4th ring.\n\n\"Mark, this is Bob Woodward.\" Pause. \"Don't give me that, you wouldn't know which end of a scalpel to use either.\" Pause. \"What do you mean, what have I been doing? I work for a living, not like some of you specialists at the hospital.\" Long pause. \"Yeah, right. I've seen you chase those nurses down the hallway. You always pick out the pretty ones.\" Laughing. \"I know, I know. Greet your wife for me. Will you?\"\n\n\"Mark, I need to ask you a favor, a big one. I'm going to need some strings pulled at the hospital too.\" Pause. \"If you can do this for me, I'll owe you big time.\"\n\n\"I have a friend with a small child, under a year. This boy has a hole between the Ventricles and the Tricuspid valve is malformed. I'd like a full work-up ASAP. Here's the kicker, no charges.\" Pause. \"Don't give me that crap. You've done this before. Remember the Bartley case a year ago?\" Pause. \"Your memory's slipping.\" Long pause. \"Use your seniority on the 'board'. Surely there's something you can do?\" Pause. \"Get Greer involved. He'll help out. I'll put a good word in for you.\" Pause. \"Ha Ha. Come on, you can do this.\" Pause.\n\n\"Thanks, Mark. When can you do it? The sooner the better.\" Pause. \"That's marvelous. We'll be there. See you then.\" Pause. \"White knight? My armor rusted long time ago.\" Pause. \"Okay, Tomorrow then. Bye.\"\n\nTurning to Claire, \"You heard?\"\n\n\"Um hum. What did he say?\" Her voice was shaking.\n\n\"He'll see Andrew tomorrow afternoon. He's doing this as a favor and he's the best heart specialist in the area.\"\n\nShe backed up and sat in a chair, her face in her hands, and cried. I was puzzled, until I lifted her chin and saw the smile on her face. She was crying for joy, she was happy. I pulled her to her feet and put my arms around her. She mumbled something in my shirt, which I didn't hear.\n\n\"What did you say?\"\n\n\"God's Angles are busy this time of year. Sometimes He uses regular people.\" She was smiling brightly, having repeating the words I'd told her several days ago.\n\nI brush the tears from her cheeks and kiss her gently. This time there are no interruptions, we sat in the 'stuffed' chair, with her in my lap, her arms around my neck and mine encircle her. Mostly we hold each other, occasionally we kiss; it's a time of softness and tenderness. Time gets away and Amy poked her head from the doorway, then ran to her mom's lap. She was included with us, squirming around.\n\n\"Sounds like supper time.\" Claire spoke, hearing Andrew cry out.\n\nAll three were soon up and we spent the evening cooking, then eating supper, and playing with toys. The late naps made for a late night; we crawled into our beds near midnight.\n\nI let them sleep, in the morning and slipped quietly out of the apartment, driving to work, I wanted to talk to my boss. The sky was clear, wind brisk, and the temperature hovering near 25 F. Traffic was heavy, but this morning I was in no hurry. Before Christmas, the pressure from work had been tremendous and the ten days vacation had relieved that burden.\n\nThe parking lot is nearly full but I find a space at the far end, in a few moments I'm inside, greeting one and all. Everyone wanted to know how my vacation went and where I'd gone. I've been the facilities 'eligible bachelor' since I started here and when word leaks that I've taken a family under my care, the 'gossip mill' will be in full swing. Guess they'll know soon enough, I'd be sharing everything with Sue, and she'll ensure others are told.\n\nA quick rap on Sue's door and I hear her voice, bidding me to enter.\n\n\"Hi, Bob. Good to see you. You really look rested. Did you have a nice trip?\"\n\n\"Morning Sue. California was nice, and it was good to visit with Gene and his family. The time was very relaxing.\"\n\n\"That's good. You're back early, you're not scheduled to work till day after tomorrow.\"\n\nShe was fishing, wanting to know my reasons to talk, but not directly asking.\n\nI took a deep breath, \"I've taken on some additional responsibility since we last talked.\"\n\n\"You found a girlfriend while you were gone?\" she teased.\n\n\"No,\" I say, pausing to drawing it out. \"I've acquired a family.\"\n\n\"You're joking?\" She didn't believe me.\n\n\"No, I'm not joking.\"\n\nShe looked at me with a questioning look. \"Who are they?\"\n\nI quickly give an overview of how we'd met, the trip to California, the medical problem, the appointment with Mark and my intention to get Andrew help.\n\n\"That's why I need to talk to you. Can you help me with my schedule? I may need some time off to assist Claire and Andrew.\"\n\n\"I'm sure we can work something out. Once you find out what's needed, we can adjust the schedule. Please keep me informed, especially after Mark's examination.\"\n\nWe talked a while longer and I gave additional details, Sue listened.\n\n\"You know how this'll look? You, the most eligible bachelor, now have a family.\" She laughed.\n\n\"Yeah, I know. Can't help it; rumors will spread.\" Joking with her, \"As soon as I leave, you'll be telling everyone, won't you?\"\n\n\"Now Bob, would 'I' do that?\" She said in mock innocence.\n\nAll joking aside, we confirmed I'd return to work on the day after tomorrow. Finishing our conversation, I slipped out and headed home.  Questions about the future flashed through my mind, and I didn't have answers. 'Was I taking on too much, too soon? What about Andrew, what would happen to him? Could I financially support them?' I needed to check on my bank account.\n\nAndrew was crawling across the floor towards Amy as I entered the door. Aaron had a book, thumbing the pages. I stepped into my room to examine my bank statement to see where I stood. Claire was in the midst of putting things away. My clothes had been nicely hung, boxes of personal items unpacked and placed on the wall, bookcase, and shelves.\n\nI strode to my dresser and opened the drawer where I keep my checks and other papers. They weren't there; must be in the other drawer. I opened it and found nothing akin to financial information, only socks and underwear. Normally, I'm meticulous with my bank records, yet they weren't here; so where were they?\n\n\"What are you looking for?\"\n\n\"My financial papers. They were right here.\"\n\n\"Oh, I put them in this cupboard. Your dresser is for your clothes \u2026\"\n\nI'm ticked, and in one step, stand before the cupboard, opening the drawer. Everything is tidy, but the checks are not in order, the bank statements are out of sequence, I can't find the binder with my work sheets, and my investment portfolio is \u2026 where is it?\n\n\"CLAIRE, what have you done?\" I say with a raised tone.\n\n\"I'm trying to organize everything.\" She says defensively.\n\n\"Well, DON'T TOUCH my financial stuff.\" I yell.\n\n\"I WAS JUST TRYING TO HELP.\" She shouts back at me.\n\n\"IT TOOK A WEEK TO ORGANIZE IT.\" Raising my voice more.\n\n\"DON'T SHOUT AT ME. I didn't do anything wrong\"\n\nAnger was in my voice, disgust was in my mood, my arms were tense, my stomach tight. I interlocked my fingers, placed them on my head and turned to walk out of the room. With two steps I was at the door, but stopped in mid stride. There were three tiny pairs of eyes watching me. Andrew was crawling towards a plastic toy, his head was turned looking at me. Aaron still had the book in his lap but his mouth was open and his eyes wide. Amy was not two steps from me, clutching her doll, and backing hurriedly as I'd been moving towards her. \n\nIn a flash, those financial papers meant nothing, they no longer had significance. The important things were, the three children watching, and the woman behind me. My hands were lowered, two deep breaths were taken, and I turned to face Claire. Her face was flushed, fists clenched and her eyes defiant.\n\n\"Claire?\" I say softly.\n\nThe intensity of her look fades, and I raised my hands, palms outwards, fingers spread. \"I'm sorry.\" I add.\n\nHer fingers unclenched and her color returns to normal, but she waits, it's still my move.\n\n\"I had no call to yell at you like that. Forgive me, I'm sorry.\"\n\nShe doesn't move except to fold her arms for a moment, and then dropped them to her sides again.\n\n\"I warned you, I get cranky.\" \n\nThe corners of her mouth turned up as she remembered our talk from the other night. Her eyes have softened and I catch a sparkle in them again.\n\n\"I'm so very sorry.\" I say again. \"I'm tense, tight. I \u2026\"\n\nIn a flash she's in my arms. \"Bob, I shouldn't have touched your things without asking. I was only trying to help.\"\n\n\"I know you were. It's not your fault. It's mine.\"\n\nWe stood there with our arms around each other, and then we felt two sets of hands pulling on us. Aaron and Amy are standing, holding to my trousers and Claire's skirt. Andrew is busy crawling towards us, as fast as he could. I bent down to pick up the two older ones, Claire scooped up Andrew and together we hug each other.",
        "They'd witnessed the two grownups in their lives have a fight. It was more important that they see us 'making up'; if we'd any differences, these had to be patched so the kids could feel secure. "
    ],
    "authorname": "Rabbitrunner91",
    "tags": [
        "eligible bachelor",
        "current place",
        "aaron amy",
        "personal items",
        "apartment manager",
        "day tomorrow",
        "long pause",
        "head turned",
        "andrew",
        "claire"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/do-miracles-happen-ch-04"
}