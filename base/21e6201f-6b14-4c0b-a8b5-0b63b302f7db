{
    "title": "Seaside with Two Sisters",
    "pages": [
        "Watching two naked young women splashing with delightful abandon in the moonlit waves was just what I needed to restore my worn-out soul. \n\nThey were too far to see in detail from my perch high on the bluff overlooking the beach. Only during the moments when the moon peeked from behind the thin clouds could I make out more of them.\n\nBoth had lovely figures: fit, with wide hips and average breasts. Their laughter was an uplifting symphony of delight, though muted by distance and the onshore breeze as they attacked the rolling surf.\n\nBy coincidence, I was naked too. \n\nI don't know why I'd stripped off. After a full day driving to the island, then having to find my campsite in the dark then fumbling around setting up the stupid tent in the car's headlights, I was pissed off and full of reckless energy. \n\nThe midnight breeze was warm, the beach was just on the other side of the hill, and no one was around, so why the hell not? I stripped off, grabbed my stash, and picked my way through the beach grass to a bare spot of sand on the dune bluff. The sand was cool on my bare ass. I sparked up a joint and took in the nearly full moon and the low waves breaking on the beach below.\n\nThe two girls showed up minutes later, laughing and talking as they strolled across the sand, their words masked by the wind and surf.\n\nAt first, they stood together, halfway between the bluff and the waves, talking quietly. Hidden by the dark and the beach grass, they didn't notice me watching from the bluff.\n\nOne said something and the other exclaimed in protest. They talked more then the first girl threw up her hands, stripped off her sun dress and ran naked to the water's edge. She beckoned to her friend, then waded deeper and dove under a crashing wave, reappearing waist-deep, wiping water from her eyes, her skin slick in the moonlight.\n\nThe other girl stood on the sand with arms wrapped around herself, looking around nervously. \n\nAfter many minutes of encouragement by her friend in the water, she took a final careful look around, then stripped off her shorts and shirt and joined her friend. She squealed when the cool surf first splashed her. The other girl grabbed her arm and pulled her further into the waves.\n\nI finished my joint and sat admiring the scene of carefree beauty. The pair splashed and shouted, jumping each time a wave rolled past or ducking under as one raced over them. The girls steadied each other as each wave hit or helped the other up when one got swept over.\n\nThey seemed to be around my age\u2014early or mid-twenties. I wanted to trot down the hill and join them, to splash naked in the cool surf, but I knew better.\n\nEventually, the cool water must have got to them. The pair emerged and strode to their clothes, wrapping arms around themselves. With no towels, they struggled pulling their clothes on over wet skin. \n\nThey talked a little longer, then hugged. The girl in the shorts and t-shirt went back along the beach the way they had come, leaving the other behind.\n\nThe fun was over. I pulled out another joint to fortify me for the trip back to my tent, crouching to shield the lighter from the breeze. When I looked up, the girl in the sundress had walked nearly to the bottom of the bluff, where the path led straight to me.\n\nIf I stood to run back to my camp site, she would surely see me in all my naked-ass glory. So, I crouched low, hoping she would stay down on the beach. But she started picking her way up the narrow sandy path directly to where I sat.\n\nBefore she got too close, I called out. \n\n\"Hey, miss? I don't want to scare you, but there's someone up here.\"\n\nShe froze and looked up. I sat up and waved an arm.\n\nPeering up quizzically, she called, \"Is it just you up there?\"\n\n\"Yup.\"\n\n\"Were you spying on us?\"\n\n\"Uh, no miss. Not on purpose. I was sitting here watching the waves way before you and your friend showed up.\"\n\nShe nodded. \"Is that you smoking that weed?\"\n\nI shouldn't have been surprised. The smell of weed carries like nothing else.\n\n\"Yup,\" I said. \"That's me.\"\n\n\"Mind if I take a hit?\"\n\nI grinned. \"Uh, sure. But...\"\n\nBefore I could finish, she marched up the path towards me. I could see more of her now: a pretty girl-next-door face, her hair a mess of loose brown curls falling just to her shoulders. Modest breasts filled out the top of her dress.\n\nThere was no time and nothing for me to cover up with, so I clamped the joint between my lips and covered my crotch with my hands.\n\nShe stopped. \"The fuck? You're naked? You've been watching us and jerking off, haven't you?\"\n\nI explained how I had just arrived after hours of driving and felt like doing something a little wild. After all, it was long past midnight and no one else was around, at least until her and her friend showed up. And lovely as they were, I was too tired and too stoned to jerk off.\n\nApproaching, she eyed me critically, then nodded to herself. Tucking her dress under her ass, she sat cross-legged on the sandy path, just out of reach.\n\nShe leaned over and plucked the joint from my lips. \n\n\"I can relate,\" she said. \"My sister and I have been doing nothing but work. We were too tired to sleep, and it was too hot. We came here to let out some steam.\"\n\nShe took a long drag, then she threw her head back to exhale.\n\nI said, \"That was your sister with you? You work here?\"\n\nShe handed back the joint. \"We waitress over at the lobster suppers. Did it last summer, too. Pays for almost the whole year of college in the fall.\"\n\nI told her I'd heard tourists came from everywhere for the beaches, the summer theater, and the lobster suppers. Busloads visited them all summer. I didn't know they were so profitable.\n\n\"Oh, yeah,\" she said. \"We all get a cut from the tour bus companies. And rich tourists bring their entire families or treat their business buddies. We smile, show some cleavage and if you ignore the occasional pat on the ass, most tip really well.\"\n\n\"Never ate lobster,\" I said. \"So where do you stay? Gotta be expensive in a resort town like this.\"\n\n\"We rent a site for the season here in the campground. Our dad leaves our pop-up trailer here at the start of summer.\"\n\n\"That's smart,\" I said, taking back the joint. \"I worked construction after high school. Pay was okay, but it's hard work.\"\n\nShe looked me up and down. \"Is that why you're so fit? Or do you work out?\"\n\nI laughed. \"My grandparents run a farm. Guess how I spent my summers growing up? And I've been working in a tractor factory. Both are plenty good for staying in shape. Also hard work.\"\n\n\"Yeah? Serving tourists is no picnic either,\" she said. \"And this time of year, it's non stop.\"\n\nShe looked out over the ocean and breathed in the salt air.\n\n\"Mmm. It's pretty when the sea is like this.\"\n\n\"It's incredible,\" I said. \"This is the first time I've ever seen the ocean.\"\n\n\"Seriously?\"\n\n\"I grew up out West. We've got mountains, some big rivers, a few big lakes, but nothing like this.\"\n\n\"So why'd you come here?\"\n\n\"One of my buddies grew up here. He never stops going on about it. I really needed a change of scenery, so I said fuck it, borrowed some camping gear and drove twelve hours to get here.\"\n\n\"We only have a four-hour drive,\" she said. \"My family came here every summer when we were growing up. Lots of good memories. But it's different when you work here. It's just work, sleep eat, and repeat. This is only the second time this summer we got to go for a swim.\"\n\n\"Naked?\"\n\nShe grinned. \"Was that a treat for you? I'll skinny-dip any chance I get. It feels sooo good. And no one seemed to be around, so why the hell not?\"\n\n\"It looked like your sister took some convincing.\"\n\n\"Yeah. She's the cautious one. Always a little shy. Speaking of which...\"\n\nShe reached for the joint, watching with amusement as I handed it to her while keeping one hand covering my crotch.\n\n\"...it looks like you're a little shy too.\"\n\n\"Uh, well, it seemed polite to cover up. Didn't want to seem like any more of a creep, you know? I've never been caught naked before.\"\n\n\"No?\" she laughed. \"I have. And I've seen a dick before, too. So, relax. You saw us, after all.\" \n\n\"Yeah, from way up here. Not up close and personal.\"\n\nTaking a long drag of the joint, she gave me an expectant look. Reluctantly, I moved my hand away.\n\nShe looked briefly and gave an appreciative nod. \"There. Isn't that better, cowboy?\"\n\n\"Uh, guess so.\"\n\nGrinning, she sucked back the last of the joint. \n\n\"That was good stuff. Did you get it at the cannabis store?\"\n\n\"Fuck no. Those places are expensive. I brought it with me.\"\n\nShe wagged a finger. \"Ooo, naughty. You know, it's only legal here if you buy it here from the official stores.\"\n\nI smiled. \"Gonna turn me in? Report me as a nudist drug smuggling peeping tom?\"\n\nShe laughed. \"Not if you share. My stash ran out two weeks ago. The closest official store is way back in city and we don't have a car.\"\n\n\"Well, I do,\" I said. \"I plan to drive into the city in a day or two. I'll bring you back something good.\"\n\n\"Well, aren't you sweet?\" she said. She got to her feet, brushing off her dress. \"Do that and maybe I'll find some way to thank you.\"\n\nShe grinned, looking me up and down again, then started picking her way down the path to the beach.\n\nScrambling to stand, I shouted, \"Hey, wait! What's your name? Where do I find you?\"\n\nShe called over her shoulder. \"Emma. Meet me here tomorrow. Midnight.\" \n\nWithout looking back, she waved an arm and started walking down the beach.\n\nI yelled, \"I'm Blake,\" but I couldn't tell if she heard or not.\n\n~~~~\n\nThat night I couldn't stop thinking of the girl, Emma. How open she had been, sharing a joint with a complete stranger, especially one she'd caught naked. \n\nIn the morning I explored the resort town, though calling it a town was a bit much: it was just a long strip of road packed with attractions, motels, tourist shops, and restaurants. \n\nEverything was family friendly without a single bar or nightclub. All of it was sandwiched between rolling farmland on one side and the endless ocean on the other.\n\nThe beach was almost as endless. White sand stretched as far as you could see. Walking on the sand was exhausting, so I strolled barefoot on the damp packed sand by the water. Tiny birds pecked the sand as each wave receded, then scurried away each time one came in.\n\nBikini-clad women passed, and throngs of families huddled under beach umbrellas and built sandcastles. Tiny white fishing boats puttered around on the wide ocean.\n\nThe surf was mild, so later I went for a swim and discovered salt water tastes terrible and jellyfish stings hurt like hell.\n\nFar down the road, I found the famous lobster suppers, the parking lot crammed with tour buses, motorhomes, and family SUVs. Curious, I stepped inside. \n\nIt reminded me of the big steak houses back home: one huge dining hall partitioned in sections of individual tables by low walls. But instead of decor being cowboy junk, everywhere was garish maritime kitsch: lobster traps, ships wheels, fishing nets, model boats and red plastic lobsters.\n\nA group of sweaty older men barged past, crowding out the door. The last guy turned to snarl something foul at the cute but exasperated girl behind the reservation counter and gave her the finger.\n\nWith a sympathetic look, I asked, \"Was it something you said?\"\n\n\"Only that we couldn't change their reservation for two to a reservation for seven golf buddies at the last minute. Apparently, that makes me an ugly bitch and worse than the antichrist.\"\n\nI laughed. \"You look all right to me.\"\n\nShe smiled and did a little curtsy, casting me a flirty look. \"Why, thank you, sir. So do you. Do you have a reservation?\"\n\n\"Oh, I just came in to look.\"\n\n\"Well,\" she said sweetly, \"we happen to have a table just open up. Want it?\"\n\n\"I dunno. I've never had lobster. What if I don't like it?\n\n\"Not a problem. You can have steak. Or scallops. Or lobster and either one on the side.\" \n\nThey sat me at the far end of the hall, by picture windows overlooking fishing boats tied to the wharf. The paper placemats had printed instructions on how to open and eat a lobster. It seemed like a lot of effort just to eat a big sea insect. I opted for pre-shelled lobster with a small steak on the side.\n\nI ate while scanning the room for Emma. Then I spied her far on the other side, looking harried, being pulled in all directions at once. I waved, trying to catch her eye, but the place was hopping, and the servers were scrambling to cater to the crowd. \n\nOne time she saw me waving, but there was a crash as a table with restless kids knocked a plate of food to the floor. She scrambled to deal with the mess.\n\nWhen I finished, I couldn't see her. I wanted to hang around, but the place was so noisy and busy I needed to leave.\n\n~~~~\n\nAt midnight, I sat on the bluff watching the ocean, this time dressed in shorts and a T-shirt.\n\nBy 12:40 I was about to give up, then nearly jumped out of my skin when a hand touched my shoulder from behind.\n\n\"Sorry I'm late,\" Emma said. She wore a tighter-fitting sundress this time. She sat close on the sand. \n\n\"Mia\u2014that's my sister\u2014didn't want me to come. She freaked out when I told her about last night. She's sure you're an ax murderer or a drug fiend.\"\n\nI lit up the joint I'd been holding on to and took a drag.\n\n\"Maybe I'm both,\" I said, handing it to her.\n\nEmma chuckled. \"Naw. I'm a pretty good judge of people.\"\n\n\"I went to the lobster supper for dinner,\" I said.\n\n\"Yeah? You were lucky to get a table. I didn't see you.\"\n\n\"I saw you. But you were being pulled six directions at once. Is the place always that busy?\"\n\nShe nodded. \"Always. Told you it was no picnic. Wait... who was the host? The greeter? Was it a tiny redhead?\"\n\n\"Yep.\"\n\n\"Did she flirt?\"\n\n\"A little.\"\n\nEmma made a face. \"That was Erin. The little slut. She hits on everyone. Anyway, next time, throw a bun at me or something. I'll comp you a free bowl of chowder. Did you like the lobster?\"\n\n\"Not a lot. The steak was better.\"\n\n\"Spoken like a true Westerner. You know we sell almost as much steak as lobster?\"\n\n\"Well, cows are tastier. And a damn sight prettier.\"\n\nEmma grinned. \"There's a joke: 'The first person to ever eat a lobster must have been pretty damn hungry.'\"\n\nI laughed. \"So, which do you like?\"\n\n\"Neither. I'm vegetarian. I don't eat anything that has a face, pretty or ugly.\"\n\n\"Wow,\" I said. \"Don't tell anyone that if you go out West. Vegetarians aren't too welcome. So, I guess that makes you a vegetarian pot smoking nudist.\"\n\nShe laughed and shoved her shoulder against mine. \n\n\"You bet,\" she said. \"And proud of it. Want to know what I'm studying at college?\"\n\n\"Ecology,\" I guessed.\n\n\"Close. Environmental science.\"\n\n\"Great. So, you're a vegetarian pot smoking nudist tree hugger. Then you definitely do not want to venture out West.\"\n\nWe laughed, watching the ocean and sharing the joint. When it was done, Emma stood and stretched.\n\n\"Time for a swim,\" she said.\n\n\"You mean...\"\n\nShe pulled me to my feet. \"Yup. Get your clothes off, cowboy.\"\n\nWe ran down to the water's edge, stripped, and waded into the nippy water until we were waist deep.\n\nThe moon was bright enough to get a look at her. Her breasts were pleasant handfuls, beautifully shaped, with tiny nipples erect in the breeze. She had wide hips, giving her a bottom-heavy look.\n\nEmma was playful, splashing and trying to dunk me under. She was beautiful, smiling and splashing waist deep, naked in the moonlight. She swept my feet out from under me, and I went under. When I surfaced, wiping the stinging salt water from my eyes, Emma stood just out of reach, laughing and teasing.\n\nI caught her, lifted her over my head as she wriggled and squealed, then threw her into an approaching wave. I got concerned when she didn't surface immediately. I yelled with fright when something grabbed both my ankles under the water and yanked me off balance. Emma, again.\n\nSoon we were tired and cold. We ran back to our clothes. It was impossible to pull them on over our wet skin, so we bundled them up and found a driftwood log to sit on near the base of the sand dune bluff.\n\nThe warm ocean breeze dried us quickly, but Emma made no move to get dressed. Neither did I. We sat side-by-side watching the waves and stars.\n\nA welcome sense of peace settled over me. Back home, we only had oceans of grass. Or corn. Or wheat. Seeing all that water was strange, but somehow comforting.\n\nEmma nudged me. \"So what's your story, cowboy? What did drive so far to escape?\"\n\n\"Just needed a change, that's all. The factory I worked at shut down. Then my girlfriend left me for someone else.\"\n\n\"Ah, there we go\u2014the truth! Were you together long?\"\n\n\"Three years.\"\n\n\"Ouch. Let me guess\u2014the guy she left you for doesn't deserve her, right?\"\n\nI sighed. \"No. He does. He's my best friend. Was my best friend. They'd been fucking behind my back for a year. Then when I didn't have money anymore, she made it permanent.\"\n\n\"Well, that's shitty.\" She chuckled. \"Sounds like a country song, you know? One of those 'My truck died and my dog left me' ones.\"\n\n\"Guess it does. My truck did die, too. Now I'm stuck driving a twelve-year-old subcompact with a rusted out floor.\"\n\nEmma laughed. \"If you played the guitar, you could be the next country-western star. The songs are all either about their woes or their women.\"\n\n\"One and the same for me. Though I gotta say, right now things are looking up.\" I turned to Emma and smiled.\n\nShe met my gaze and smiled back.\n\n\"You know,\" she said, \"Too bad you didn't like the lobster. They say it tastes like pussy.\"\n\nShe grinned like a kid who just told their first dirty joke.\n\n\"Oh, do they?\" I said. \"Don't see how. Every pussy tastes different.\"\n\n\"An expert, are you?\"\n\n\"Naw. Though, I've never had any complaints. Been a while, though.\"\n\nEmma hesitated, scanning me, then leaned forward to meet my lips.\n\nHer lips were sweet and as soft as the breast she guided my hand to. We kissed, hands roaming over each other as the ocean breeze caressed us both.\n\nWhen finally we separated, I couldn't stop smiling. \n\nEmma picked up her sun dress, shook it and spread it out on the sand behind the log. She stood, then lay back on it, inviting me to join her.\n\n\"We could go back to my tent, you know.\"\n\nShe just shook her head.\n\nWe kissed and caressed each other, our need growing. I had never met anyone like her, and never before been so comfortable with someone so quickly.\n\nShe sighed happily and held me to her when I slid lower to take a breast into my mouth. I massaged and teased her other breast, then caressed her tummy, her thighs, then finally touched her center.\n\nEmma pushed her up her hips to meet my fingertips and widened her legs. She was already slick and ready. With the pads of my fingers, I teased all around her mound and delicate lips, briefly brushing the hood of her clit then avoiding contact.\n\nShe stroked my cock and spread the leaking pre-come over the sensitive head. \n\nHer eyes were wild with need as she urged me onto her, guiding my dick towards her opening.\n\n\"Fuck me, Blake,\" she whispered. \"Fuck me, cowboy.\"\n\n\"Not just yet. I wanna check something.\" \n\nEmma giggled when I escaped her grasp and slid lower, planting kisses along the way: between her breasts, over her tummy, then to just above her womanly triangle of trimmed fur. Her skin tasted of ocean salt. \n\nMoving lower still, I parted her legs. Her clit was peaking from under its hood, so I gave it a tiny lick of my tongue.\n\n\"Oooo,\" Emma moaned, and spread her legs wider. \n\nSettling in, I began exploring every part of her with fingers, lips and tongue while Emma pushed her hips to meet my face, gasping and groaning as I caressed and rubbed every part of her tender folds. ",
        "Carefully, I introduced first one, then two fingers into her warm, slick tunnel while teasing around her clit. Emma cried out and bucked, grabbing my head, trying to force my face into her. \n\nI held on as she writhed, playing, rubbing and teasing, building her excitement. \n\nNever had I been with someone so animated and was thankful for the darkness and sound of the surf masking her cries and groans. \n\nWhen it seemed right, I took her tiny nub between my lips and suckled gently while twisting and probing my fingers inside.\n\nEmma mashed my face into her, then came with a gurgling groan.\n\nI lifted up to watch, still massaging her gently. She was beyond beautiful: her eyes were screwed shut, back arched, head thrown back, one hand gripping my head, the other flung out to claw and grasp the sand, her skin glowing under the moon.\n\nBefore Emma completely recovered, I slid up, careful to get any sand off my dick, then nudged the tip at her entrance. Her pussy seemed to be pulling me inside.\n\nStill panting from orgasm, Emma grabbed my hips and urged me into her.\n\nI pushed and retreated, pushed and retreated, inching deeper each time. Emma's mouth was open, and her eyes were locked with mine as we joined. Finally, when I was buried fully within her, she locked her legs around me and pulled me into a kiss.\n\nIt wasn't one of those frantic first-time fucks. We started into a sensuous, slow summertime mating, neither of us in any hurry for it to end.\n\nThe warmth of Emma's body beneath me and the heat of her snug clasping passage contrasted with the cool night air. Each time I entered her, she sighed and moaned and met each thrust, angling her hips seeking the best angle, the deepest penetration.\n\nSoon I was losing control and from Emma's increasing energy, it seemed she was getting close too. She ground against me each time I bottomed out, clinging with arms and legs as I took her.\n\nSuddenly, she gasped, and her passage began rhythmically clutching at me. I pushed into her once more as deep as possible and tumbled over the edge.\n\nIt seemed to last forever: Emma locked onto me, riding out another orgasm as I pulsed inside her, filling her eager body with jet after jet of come.\n\nFinally, all strength left me, and I collapsed, sliding to one side so as not to crush her. Emma hugged me to her as I recovered.\n\nShe was smiling when I opened my eyes.\n\n\"Someone should write a song about that,\" she said, stroking my head.\n\n\"I don't think any song could capture it. That was incredible. You're incredible, Emma. And you taste way better than lobster.\"\n\n\"Oh, gee. Thanks. I try to maintain a crustacean-free flavor down there.\" \n\nI laughed.\n\nShe kissed me. \"You can taste me any time you want. Don't even have to ask. No one's ever made me come like that.\"\n\nWe lay beside each other, gently caressing, until Emma said, \"I want to do it again. But my shift starts at two and I know my sister is still awake worrying about me.\"\n\nWe made plans to meet the next day, but earlier. We dressed, then she walked back along the beach. I went back to my tent, drained, but happier than I'd been in a long time.\n\n~~~~\n\nThe camp sites like mine next to the beach were on open ground. With the ocean breeze blocked by the rising lip of the sand dune bluff, my tent became unbearably hot by the time I woke around nine.\n\nEmma was all I could think about. I didn't want to wait until that evening to see her again, so after a quick breakfast, I grabbed the campground map and set out on foot to find her trailer.\n\nAll the other campsites were sheltered in among the pine forest far from the beach. I walked the looping dirt roads past sites with everything from pup tents to bus-sized motorhomes. The sites were close, but separated by alders or pines, each with a regulation picnic table and firepit.\n\nPop-up tent trailers were everywhere, most with small kids playing or at least a car parked in front.\n\nFinally, I spotted an older tent trailer with no car. Judging from the pine needles accumulated on the roof and how deep the wheels were sunk in the soil, it looked like it had been parked for months. \n\nCautiously, I crept up to see if anyone was home.\n\nThe inside flap of the screen window beside the door was half-unzipped. I stood on the step and stretched up to peer inside. On one of the fold-out bunk ends, Emma was sleeping on her side, facing me. She was naked except for a light sheet pulled over her rump. No one else was inside.\n\nShe looked angelic. Images of our midnight mating on the beach came back, getting me aroused. There was time for a quicky before she had to leave for work. And she did say I could taste her anytime.\n\nI hesitated. Should I surprise her? She was bold and outgoing, so I figured she'd like it. Quietly, I opened the door and padded inside. Though shaded by trees, the trailer was was already roasting inside. A light sheen of sweat coated Emma's skin.\n\nShedding my clothes, I slid onto the bunk beside her and ran a hand down the soft skin of her back.\n\nHer eyes blinked open, then widened in surprise. When she let out a yelp, I put my hand over her mouth.\n\n\"Shh,\" I said. \"You'll scare your neighbors.\"\n\nEmma's eyes darted from me to around the trailer.\n\n\"It's okay. Your sister isn't here. Surprised I found you?\"\n\nWhen I uncovered her mouth, she said, \"B-Blake?\"\n\n\"Shh. I couldn't stop thinking about you, Emma. I came to take you up on your offer.\"\n\nPushing her back, I quickly slid down between her legs. Her pussy looked even lovelier in the dappled shade of the tent trailer than it had in the moonlight.\n\nShe fumbled, trying to push my head away. \"Wait! I'm not... you can't... oh, fuuuck!\"\n\nI dove the flat of my tongue between her folds, lapping, savoring her taste while skirting her clit with my thumb. Her hips lifted instinctively, pushing into me.\n\n\"Ohmygod, ohmygod,\" Emma breathed, her head falling back on the bunk. \"Please... oh, please just...\"\n\nWith one hand I reached to massage a boob and tease the hardening nipple while worshiping her pussy with lips, tongue, and my other hand.\n\nEmma responded instantly, gasping and moaning, though quieter than the previous night. Campers on adjacent sites would hear us if we weren't careful.\n\nI never thought my oral skills were anything great, but Emma's responses made me feel like a champion. She panted, working her arms and legs against the sheets, twisting her hips, then lay still, giving into the sensations, making sweet little mewling sounds interspersed with sighs and groans.\n\nWe didn't have much time, so I worked her harder than before, sliding fingers into her, curling them inside, fucking them in and out while lapping and pressing all around her mons. I followed by attacking her sensitive little clit then purposely avoiding it.\n\nLike before, Emma grabbed my head with one hand, trying to force my face into her while clawing and flailing blindly with the other.\n\nSoon, she seemed to be close, so I introduced a third finger into her tight passage then sucked and pressed directly on her clit.\n\n\"Oh my gaahh!\" Emma cried, lifting her hips off the bunk. Then she flopped back boneless while inside her warm passage contracted, flooding generous wetness over my fingers.\n\nStroking her gently, I lifted up to watch the spectacle of her orgasm. \n\nThe trailer door opened. Emma stepped inside. \n\nIt was like having a stroke, or an out-of-body experience. Emma at the door had a towel draped around her neck, a toiletry bag in her hand. Her curly hair was damp. \n\nHer mouth fell open and her eyes flared. \"What the fuck are you doing to Mia?\"\n\nShe ran forward, wrapped an arm around my neck and yanked me off the bunk onto the trailer floor. Before I could react, she had my arm twisted painfully behind me, pinning me to the floor.\n\n\"Mia!\" she screamed, \"Are you okay? Did he hurt you?\"\n\nThe girl on the bunk sat up, disheveled and fazed. She had trouble finding words. \n\n\"It's... it's okay, Emma. I'm okay. It's my fault. I... he...\"\n\nShe petered off in confusion and flailing hands then fell back onto the bunk and groaned. \n\n~~~~\n\n\"How the hell could I know you're twins? You never said!\"\n\nThe three of us were sitting at the picnic table outside, the twin sisters sitting opposite me. Mia and I had dressed. She looked as embarrassed and confused as me.\n\n\"I thought I did. But even if I missed that detail, it doesn't give you the right to walk into our trailer and stick your face in a girl's twat.\"\n\nMia touched Emma's hand. \"no, it's my fault. I'm the one who didn't stop him.\"\n\n\"You were too shocked.\"\n\nMia studied the table and shrugged. \"Yes. True. I was shocked at first. Then I realized who he was. Who he had to be. And after what you said about what you guys did last night and how great it was, I...\"\n\nEmma said, \"You just let him do it? A complete stranger? What the fuck, Mia?\" \n\nMia slumped further. \"No. Not exactly. I tried to say something. Then... oh, it was so good. And it was so, so, bad. You know... your boyfriend doing that to me like he did to you. Thinking I was you. Fuck. I don't know, Emma.\"\n\nEmma studied her sister. I didn't dare say a word. I felt like a rapist and wanted to crawl away and die.\n\n\"I can't believe you're not even angry,\" Emma said to Mia. She glared at me. \"Because I'm absolutely fucking furious!\"\n\n\"Emma,\" I said, \"I'm not a pig. Honest. I've never, ever done anything without full consent. We get too much of that shit back home. My first girlfriend, she... well, never mind. If for a second I didn't think it was you...\"\n\nEmma shot me a withering look, but Mia flashed a shy smile then leaned to Emma's ear.\n\n\"He made me come,\" she whispered, a little too loudly.\n\n\"What?\" Emma pulled back, looking at her sister. \"No way.\"\n\n\"I did,\" Mia said. \"Hard. Oh my god, Emma, it was good. I'm still like jelly inside.\"\n\n~~~~\n\nEmma ordered me off their campsite, and I slunk back to my tent. The morning had gone from a surprise I thought Emma would love to a disaster that might land me in jail.\n\nI decided to drive to the city, an hour away. Even from the highway the island was quaint rolling hills covered by farmland and off near the horizon, the endless ocean loomed.\n\nThe city was known for a play that had been running for 20 years. It was sold out, so I wandered around, bought groceries and ice for the cooler, some booze, firewood and then visited the overpriced official cannabis store.\n\n~~~~\n\nIt was dusk when I pulled into my camp site. One of the girls was waiting at my picnic table. \n\n\"Emma?\" I said.\n\n\"Oh, so I guess you can tell us apart.\"\n\nSitting across from her, I slid the canister of weed to her.\n\n\"Like I promised,\" I said. \"The store said it was the best bud they had. A real monster.\"\n\nShe looked inside. \"Holy shit. This is a ton of weed. Feeling guilty about something?\"\n\n\"Of course I'm feeling guilty. I ate out your sister thinking it was you.\"\n\n\"You also made her come.\"\n\n\"Well, good. Doesn't change anything.\"\n\n\"She doesn't come.\"\n\nI blinked. \"Sure she does. She did. Or she's one hell of an actress.\"\n\nEmma shook her head. \"She's been able to make herself come maybe once. And never, ever with someone else.\"\n\n\"Uh...\"\n\n\"Do you know any twins?\"\n\nI thought about it. \"No. At least not what do they call it... identical twins, like you.\"\n\n\"Well, we have a bond, you know? Way closer than most sisters. Mia is my best friend, my confidant. My partner in crime. I go to her when I need anything, and she comes to me.\"\n\n\"Sure,\" I said. \"I've heard that. So\u2014\"\n\nEmma held up a hand. \"So, we look the same, but we're not the same. She's smarter, for one. And she's always been shy, cautious, overly polite. I've always been outgoing, jumping into things without looking. And I always get the guys. She doesn't.\"\n\n\"Oookay. Are you telling me Mia's a virgin?\"\n\nEmma sat back. \"Oh, she's had boyfriends. The sweetest guys you can imagine. And she enjoys sex. Lots. But she doesn't come. Not everyone does, you know. Even by herself it just never happens. Lord knows we've tried. She says it happened once, but I think it was a mini-come, or she's kidding herself. So, this morning when you... when she came? It's kind of a big deal for us.\"\n\n\"I didn't do anything special. I just\u2014\"\n\n\"Whatever you did, it worked. And like she said, that you thought Mia was me and the surprise and naughtiness of it all helped put her over the top.\"\n\nI digested that for a moment.\n\n\"So, you're not going to press charges?\"\n\nEmma laughed. \"We want to see if you can do it again. Tonight.\"\n\nI pondered that for a long while.\n\n\"No,\" I said.\n\nEmma blinked then leaned forward.\n\n\"Didn't you hear me? Come back to our trailer. I'll go for a walk or whatever. Do your magic with Mia again and make her come.\" She grinned. \"Then after, if you wouldn't mind, fuck my brains out, okay?\"\n\n\"No. It's not okay. Emma, I loved being with you last night. Because I like you. A lot. You're like no one I've ever known. And we've really hit it off, haven't we?\" \n\n\"Oh, yeah. So\u2014\"\n\n\"So, you said it yourself... you and Mia look the same, but you're not the same. Mia's your sister and she seems really sweet, but I don't know her. I'm not some... some... orgasm vending machine. Some guys will fuck anyone any chance they get, but I don't.\"\n\nEmma stared in surprise.\n\n\"Would... would you do it as a favor for me? Mia really likes you. She's so excited you made her come.\"\n\n\"She doesn't know me, except maybe for what you've told her. I'd never ask a woman to do anything sexual as a favor. You think it's okay to ask something like that from me?\"\n\nEmma pursed her lips and sighed. She was quiet for a long while.\n\n\"Okay,\" she said in a falling tone. \"I get what you're saying. Sorry. We thought you'd want to. We're just really excited about what happened, that maybe a few more times would... help her. Break her out of her shell. So maybe she could come as easily as I do.\"\n\nEmma stood, taking a breath and forcing a smile. \n\n\"You know what? Forget it. You're right. Stupid idea. I guess this fucks things up between us now.\"\n\nIt hurt to see her troubled expression. I stood and put my arms around her.\n\n\"It doesn't change how special you are, Emma. It doesn't change me wanting to be with you.\"\n\nShe smiled up at me. \n\n\"So... have you eaten yet?\" she said. \"I didn't eat dinner.\"\n\n\"Help me get the stuff out of the car. We can start a fire and grill something.\"\n\n\"I'm vegetarian, remember?\"\n\nEmma laughed when I showed her the groceries: veggie cutlets, veggie burgers, fresh corn, and certified organic apple pie.\n\n\"Turning over a new leaf?\" she said.\n\n\"Thought I'd give it a try. I know people can't keep on eating cows\u2014or lobsters\u2014forever. My family might disown me if they ever found out I bought this, though.\"\n\n~~~~\n\n\"I never knew you could cook corn on a campfire. We always boil it.\"\n\nEmma was finishing her second cob. I pulled out my last piece and unwrapped the foil.\n\n\"Back home there's corn far as the eye can see. We have ten billion ways to cook it, pop it, turn it into fuel, turn it into ham...\"\n\n\"What? Into ham?\"\n\n\"Pig feed.\"\n\nShe made a face. \"Poor little oinkers. They're smarter than dogs, you know.\"\n\n\"Well, when it comes to escaping their pen they sure are.\"\n\nEmma looked at my tent, one of those nylon dome things from a big box store. Despite staking and tying it down, it wobbled precariously in the ocean breeze.\n\n\"So glad we have a tent trailer,\" she said. \"I hate sleeping on the ground.\"\n\n\"It's not so bad. I got one of those queen-sized air beds. Almost as high as a real bed. But then I didn't bring a pump so had to blow the damn thing up with my mouth. Took over an hour and I nearly passed out.\"\n\nEmma laughed and was about to say something when we noticed someone standing just at the edge of the firelight: Mia, twirling a finger in her hair, looking uncertain.\n\nEmma went to her. \"What's wrong?\"\n\n\"You were supposed to be back by now.\"\n\n\"Oh, shit. Sorry, Mia. But you knew I was here.\"\n\nThe sisters exchanged whispered words for a long while, then Emma took Mia's hand and pulled her closer to the fire. Mia stood stiff and awkward.\n\n\"Hi,\" I said. \"What can I get you? Roasted corn on the cob? Veggie burger? Beer?\"\n\n\"I ate. Look, I don't want to interrupt.\"\n\nEmma nudged her. Mia scowled at her sister then said, \"Well, maybe a beer.\"\n\nThe temperature had dropped the moment the sun set. We sat clustered around the fire, watching the flames.\n\nThe silence dragged on. I cleared my throat and said, \"Mia, I owe you a huge apology. I'm so sorry for this morning.\"\n\nShe looked straight at me. \"I'm not. Not at all. Emma told me you don't want to... you know... do it again. And you're right. It was the height of hubris to assume you'd be okay with that, so I'm sorry for that.\"\n\n\"Uh, hubris?\"\n\n\"You know. Excessive pride. Arrogance.\"\n\n\"Hmm. Emma said you were the smart one.\"\n\n\"And she's right.\" She glanced at her sister and smirked.\n\nEmma stuck out her tongue.\n\n\"But,\" Mia continued, \"if you ever change your mind, I'll be waiting with open legs.\"\n\n\"Holy fuck, Mia!\" Emma gasped.\n\nI chuckled. \"She also said you were the shy one.\"\n\nMia twirled another finger in her hair. \"Well, no point being shy with a guy who's had his tongue up my cooter.\"\n\nEmma sputtered, trying to form words.\n\nI laughed. \"It was my fingers in your cooter. My tongue was busy elsewhere.\"\n\n\"Well, whatever you were doing down there, it was pure magic.\"\n\nShe wet her lips, fixing me with a hungry stare.\n\n\"Oookay,\" I said, standing, \"I think I'm ready for that apple pie now. Who wants some?\"\n\n~~~~\n\nEmma wanted to try the weed, so we rolled a few joints of the stuff.\n\nAfter a couple of hits, Emma said, \"They call this a monster? More like a mouse.\"\n\nShe offered it to Mia. She stared as if it was sprayed with ebola. \n\nEmma assured her it was from the cannabis store and unadulterated. Mia took a drag.\n\nWe only had the picnic table to sit on, so we dragged it close to the fire. We sat on the bench, backs to the tabletop, me sandwiched between the sisters.\n\nChatting and sharing a joint, we warmed ourselves as the night air cooled. Mia was quiet, letting her sister carry the conversation, then she slowly relaxed.\n\nWhen I asked about college, Mia said she was entering third year of a data science degree. She explained what that was, but it all seemed very abstract.\n\nBoth sisters had endless stories of working at the restaurant. Emma had me laughing with tales of rude and entitled customers, incidents of abrupt projectile vomiting, and a five-person fistfight that ended with wiping out the salad bar.\n\n\"It's not all bad,\" said Mia. \"We have huge family birthdays and get-togethers. People fly in from all over the world. And how many proposals have we seen, Emma? Six? Seven?\"\n\n\"Including the guy who stuck the ring inside a biscuit then forgot which one it was? The girl nearly choked to death.\"\n\nMia chuckled. \"Then there was that missing toddler. Everyone stopped to search everywhere. He was napping in the pile of stuffed lobsters in the gift shop.\"\n\nBeing twins, Emma and Mia tried to work sections in the dining room the furthest apart, but they were constantly mistaken for one another. Servers had to wear the same uniform, so Mia always wore her hair up, Emma wore hers down. They wore different makeup, different earrings, but still they were confused by customers and even managers and staff.\n\n\"After this summer,\" Mia said, \"we are never, ever, working together again on anything.\"\n\nEmma glanced at her sister. \"Well, maybe on one more thing.\"\n\n~~~~\n\nBy midnight, the three of us were mildly buzzed, chatting, and laughing like old friends. The adjacent campsites went dark as one by one each family got their kids settled, put out their fires and went to bed. ",
        "The stars were brilliant pinpoints of light with the Milky Way arcing from horizon to horizon. Having nowhere to go and nothing to do but relax and enjoy, the weight of my recent personal disasters lifted away. \n\nEmma sat leaning against my side, hand stroking my leg. Her eyes were alive with mischief and lust, mirroring my own feelings. Our desire for each other had been simmering all evening.\n\nI hoped Mia would soon leave us alone, but she seemed comfortable. The weed, mild as it was, seemed to have relaxed her. She was rattling off more stories about the restaurant, the island, college, and human existence in general.\n\n\"I mean, why are we here if not to love each other, take care of each other and learn about the wonders of the universe? It's all in the numbers, you know. Newton was the first to really get it. Too bad he died a virgin. If I'd been around back then I'd have... oh, wow, man. Look at the moon!\"\n\nEmma and I chortled.\n\n\"Is this Mia's first time smoking dope?\" I said.\n\nEmma grinned. \"Oh, no. She gets all animated and philosophical when she drinks, too.\"\n\nThen we noticed Mia was looking back towards the ocean.\n\nBehind the tent, the full moon was rising above the lip of the bluff, huge and brilliant orange.\n\nWe walked to the edge to see the whole thing. Glowing and split by wisps of cloud, the moon painted a fiery path towards us across the calm ocean.\n\nEmma and I stood side-by-side with arms around each other's waist. Mia appeared at my other side. She looked uncertain again, so I wrapped an arm around her too. She melted against me, slinking her arm around my back.\n\nThe magic of the view was surpassed by the magic of having Emma and Mia to share it with.\n\nOnly a light breeze was blowing from the ocean. Gentle waves lapped the beach below.\n\n\"Anyone want to go for a swim?\" I said.\n\nWhen I looked at Emma, I caught something wordless passing between her and Mia.\n\nEmma gathered us into a three-way group hug.\n\n\"Not me,\" she said with a coy smile.\n\n\"Yeah, maybe later,\" said Mia. She rocked from one foot to the other looking up with huge pleading eyes.\n\nWe stood looking at each other, then Emma gently guided my head towards her sister until our lips almost touched. Mia wet her lips, her breath quickening, then pulled me into a hungry kiss.\n\nHer lips were so soft and tasted faintly of strawberry lip balm. Mia cautiously pressed the tip of her tongue past my lips, and I responded by pressing mine into hers. With Emma watching, it was intensely intimate. My simmering lust went to full boil.\n\nWe separated. I looked from Mia to Emma and back. Emma glanced purposefully at the tent. \n\nMy objections evaporated.\n\n\"We'd be more comfortable in your trailer,\" I said.\n\nEmma beamed. She grabbed Mia's hand and mine.\n\n\"We don't want to wait,\" she said, pulling us to the door of the tent.\n\nEmma said, \"Take off her clothes.\"\n\nMia gasped, drawing an arm to her chest. She flashed her sister an incredulous look then darted her eyes to the other camp sites. I looked around too: we were the only ones awake.\n\nMia lowered her arm, faced me and bit her lip, giving a tiny nod. \n\nI drew her t-shirt over her arms and off then undid the front clasp of her bra and removed that too. \n\nShe stood naked from the waist up, her eyes on mine, huge and trusting.\n\nMia's shorts and underwear were next. I crouched to slide them down her long legs, bringing me face-level with her beautiful pussy\u2014for the second time that day. \n\nI stood to take in the entrancing sight of her naked body lit by the moon and flickers from the fire: her lovely breasts, her womanly hips with an enticing gap between her thighs. \n\nMia breathed excitedly, but stood with hands at her sides, letting me admire her.\n\nFrom behind, Emma asked, \"You want to strip him, or should I?\"\n\nMia raked me with her eyes. \"You, Em. You do it.\"\n\nWithout hesitation, Emma yanked off my shirt and shorts. She gave my ass an affectionate pat. Mia stared at my rising cock pulsing slightly in time with my thudding heart.\n\nInside, Emma stripped, and we lay on the air bed with me between them. Emma kissed me passionately then pushed me to face her sister.\n\nMia immediately pulled me close and met my lips. She glided her hands all over me as I did the same to her. She found my hard cock and stroked and squeezed while jamming her tongue into my mouth. She was so excited I wondered if she would come the moment I touched between her legs.\n\nI separated and bent to nuzzle her neck while stroking and massaging one soft boob. Mia sighed and lay back, still grasping my dick, stroking idly.\n\nMia's hips rose and churned. I bent and took a breast into my mouth and trailed fingertips down along her tummy and across her sparse triangle of fur. She parted her legs in welcome and I lightly stroked up along the sides of her pussy.\n\n\"Ooo,\" she breathed. \"That's nice. More. Please? \"\n\nLaying half across her, I switched to suckle her other breast then ran fingertips over her inner thighs, down her legs then up, swiping the back of my hand lightly over her mons.\n\nMia held my head to her breast with one hand and tried to force my hand back between her legs. At first, I resisted, then started touching her more and more directly as she moaned and writhed.\n\nShe groaned when I introduced first one finger then a second inside her. She was wet, but not yet ready. I curled my fingers up, seeking her g-spot. Mia moaned and bucked when I pressed and massaged the right location.\n\nBehind, Emma began kissing my neck and shoulders then raked my ass with her nails. \"I think she's ready,\" she whispered.\n\nI thought so too. Sliding down, I kissed down Mia's tummy and got between her widely spread thighs.\n\nUnlike that morning, we weren't in any rush, so I took my time teasing, licking, rubbing and exploring every wonderful part of her. Above, Mia was panting steadily, groaning and sighing, head thrown back and to the side.\n\nWith one hand she was pleasuring one of her boobs while guiding my head with the other. Using every technique I knew, I built her passions right to the edge then backed off, pressing a palm firmly against her mound until she calmed, then started her up that hill again.\n\nA warm mouth engulfed the head of my cock. Emma had moved to kneel on the floor of the tent. She pumped my dick while swirling her tongue around the tip, an impish gleam in her eye.\n\nMia regained my attention my mashing my face into her and I resumed my quest. Trying to ignore the incredible sensations of her sister skillfully stroking and sucking my cock, I worked to bring Mia to the edge once more. Her little cries and gasps were like music. \n\nFinally, I worked my fingers back and forth inside her while lapping and carefully sucking her engorged clit. Mia inhaled one raspy breath, arched her back and froze.\n\nEmma lifted her mouth from my dick to watch her sister. I grounded Mia again with my palm against her and watched the breathtaking beauty of her being swept away. Mia's eyes were closed, her eyebrows raised, and mouth wide in an expression of pure angelic bliss.\n\nI looked down and shared a smile with Emma. She scooted up to lay beside Mia, brushing strands of hair from her forehead.\n\nSliding up to Mia's other side, I kissed her cheek. Her eyes blinked open, and she looked from me to Emma.\n\n\"You okay?\" Emma asked.\n\n\"Oh, god, Em. That was even better.\"\n\nMia brushed my cheek. Then reached down to grasp my cock again. Her chest was still rising and falling.\n\nShe looked at Emma. Again, something unspoken passed between them.\n\nEmma nodded then reached across to touch my arm. \n\n\"Fuck her,\" she whispered.\n\nI was rock hard and beyond ready, but I thought Mia was off limits.\n\n\"Are... are you sure that's okay?\"\n\nMia gazed at me with smokey, needful eyes, looking even hungrier than before. \n\n\"Only if you want to,\" she said.\n\nThe thought of burying myself in that sweet girl, maybe even bringing her to another orgasm, had my heart racing.\n\n\"Oh, Mia,\" I said, \"Yes. I really, really want to.\"\n\nShe growled and pulled me onto her, spreading her legs while I got into position.\n\nMy cock found her entrance on its own. She wrapped her arms around me and I pushed inside her in one slow, exhilarating motion.\n\nMia stared, wide-eyed, moving her hips with tiny motions, feeling me speared so deep inside. I moved too, eager to get even deeper, overcome by the sensations. \n\n\"Fuck me,\" she whispered. \"Fuck me hard.\"\n\nSlowly I withdrew, feeling her passage grasping my shaft, reluctant to release me. When again I was poised just at her entrance, I teased her nudging just in and out. Mia groaned and wrapped her legs around me, desperate to draw me in. She gave a guttural grunt when I pushed in hard, stuffing her full in one merciless stroke.\n\nWe began to fuck. Mia grunted each time I impaled her, then urged me to do it again, harder. Soon I was pounding into her, my nuts slapping her ass, lost in raw animal need to mate, to drive deep into her then fill her with come. Mia took it gleefully, meeting each stroke, groaning, grunting, urging me on.\n\n\"Mia,\" I groaned, \"gonna come.\"\n\n\"Wait,\" she said, then rolled us over. She began riding me like a demon, her hands planted on my chest, impaling herself, rutting and sliding, boobs bouncing. \n\nI held her hips, fighting the urge to come. Sweet Mia became a wildcat, sliding and grinding, keeping my cock stuffed deep inside her. I grabbed her boobs, massaging them and sliding thumbs over her nipples, marvelling how she was using me for her pleasure.\n\nShe worked away for a long while and I knew I couldn't last. At last, Mia stopped, head up, eyes glazed then wriggled, her mouth wide. Then inside she began pulsing and gripping all around my shaft.\n\nMia let out an explosive breath and dropped her head between her shoulders. I exploded into her, losing my grip on her boobs as my muscles went slack, flooding her with everything I had.\n\nAfter, we lay facing each other, caressing. The tent air was heavy with the smell of sex.\n\nMia had one leg over me. She looked between us at the gobs of come leaking from her.\n\n\"You're the first,\" she said, and smiled.\n\n\"What? You weren't a virgin.\"\n\n\"No. You're the first to come in me. I've always used condoms.\"\n\n\"But... you're protected, right? Birth control?\"\n\n\"Well, of course.\"\n\n\"Told you she was cautious,\" Emma said.\n\nI turned. Emma was laying on the air bed behind me, head resting on one arm. I'd forgotten she was there, having focused entirely on Mia.\n\n\"You watched?\"\n\nEmma shrugged. \"I sort of participated. Couldn't watch you two without taking care of myself, too.\" She kissed me. \"But I'm hoping for a little more. Think you'll get some energy back later?\"\n\n\"I dunno. Mia is pretty fierce.\" I laid my head down. \"I'm a little worn out.\"\n\nEmma smiled at her sister and nestled against my side. Mia did the same.\n\n\"Mind if we sleep here for a while?\" Emma asked.\n\nI didn't mind at all.\n\n~~~~\n\nSometime during the night, I woke, hard and horny, spooned behind Emma. She woke when I slipped my dick into the gap between her legs from behind.\n\n\"Mmmm,\" she said, pulling my hand to her breast. \"You got your energy back. But we'll wake Mia. She gets grumpy without enough sleep.\"\n\n\"Then come with me.\"\n\nEmma giggled when I quietly unzipped the tent door and led us, still naked, outside. After zipping it back up, I took her hand and led her to the sandy path at the top of the bluff. It was pre-dawn\u2014the sky had just barely begun to lighten.\n\nWe looked over the ocean then I pulled her into an embrace, and we kissed.\n\nEmma pulled back. \"Thank you for doing that with Mia.\"\n\n\"Only too happy to help a woman in need,\" I said. \"Is she vegetarian too?\"\n\n\"No, just me. Why?\"\n\nShe tastes a little like lobster. For some reason, now I really like it.\"\n\nEmma stared, then covered her mouth to stifle a laugh. She swatted me.\n\nWe embraced again, kissing and running hands over each other. She stroked me and I felt her getting wet. \n\n\"I want you,\" she said. \"Now.\"\n\nShe looked around. \"But there's nothing to lie on. One grain of sand in the wrong place and it gets really unpleasant.\"\n\nI stepped behind her, turning her to face the ocean beyond. \"Kneel down.\"\n\nI helped her to her to her knees then pushed between her shoulders.\n\n\"Head down, ass up,\" I said.\n\nShe turned and smiled, then went on all fours.\n\nWiggling her broad ass, she said, \"Okay, farmboy... should I oink, bark or moo?\" \n\nI laughed. \"You are so nasty.\"\n\nEmma grinned.\n\nI kneeled behind her and ran a hand over her puffy lips. Positioning at her opening, I nudged. Emma pushed back a little. Slowly her wetness grew, and I slipped a little deeper inside her with each push. Finally, we were fully joined. \n\nI withdrew, then impaled her with one measured stroke.\n\n\"Guh!\" Emma huffed, going down onto her elbows.\n\n\"How about you just grunt?\" I said.\n\nShe peered back with lidded eyes. \"Now who's nasty\"\n\nGrabbing her hips, I started taking her. Emma gasped and moaned, pushing back to meet each thrust, twisting and angling herself for the best angle. as I fucked her with careful deep strokes. Then she reached between us to strum and tease her clit.\n\nI loved the sight of Emma's upturned ass in that submissive position\u00ad\u00ad\u2014completely exposed and vulnerable.\n\nWe were quickly losing the cover of night as dawn broke in earnest. Though partially hidden by the tall beach grass, soon we'd be easily seen from the beach.\n\nFortunately, we were reaching our limit. Emma met my thrusts with an increasingly irregular rhythm as she frigged her clit. I bent over her and nipped her shoulders while grabbing one bobbing breast, squeezing then teasing her nipple.\n\nI tried to hold out, but then sailed past the point of no return. Straightening up, I grabbed Emma's hips and jammed into her, unloading deep. Within moments, Emma cried out as orgasm overtook her too.\n\nEmma was still squeezing around my dick, and I was still throbbing within her when we noticed a jogger running along the wet sand of the beach. We collapsed onto the sand, hoping to be out of view.\n\nEmma rolled over, still catching her breath. We shared a smile and laughed.\n\n~~~~\n\n\"You know, you never said when you had to go home.\"\n\nEmma bit into her bread and peanut butter. It was the only vegetarian breakfast I could offer while Mia and I had scrambled eggs and bacon.\n\n\"Before my severance pay runs out, I guess. But this is the last day I have this campsite. I have to clear off by 2 PM.\"\n\nThe sisters looked at each other, again exchanging some wordless communication.\n\n\"The bunks in our trailer are queen-size,\" Mia said. \"Lots of room, if you'd like to join us.\"\n\n\"I'd like that,\" I said. \"Er, am I going to be in the middle of some kind of sibling rivalry?\"\n\n\"You've seen us,\" said Emma. \"We share very well. Oh, and for reference, I sleep on the right-side bunk, Mia sleeps on the left.\"\n\n\"Exactly. So where would I sleep?\"\n\nThe girls exchanged a look.\n\nTo Emma, Mia said, \"Should we take turns, or flip a coin every night?\""
    ],
    "authorname": "SyleusSnow",
    "tags": [
        "sisters",
        "beach",
        "camping",
        "nudity",
        "cunnilingus",
        "female orgasm",
        "creampie",
        "threesome",
        "outdoors",
        "summer"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/seaside-with-two-sisters"
}