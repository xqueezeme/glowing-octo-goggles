{
    "title": "The Case of Dixie's Christmas",
    "pages": [
        "I heard the phone through the cobwebs of too little sleep, the late night cheeseburgers and more than a fair amount of scotch.  By the second ring, I had nimbly thrown myself on the floor and was attempting to stand.  On the third ring, I forced my eyes open and started the run to my office.  \n\nThis was not unusual for me.  I live in an apartment behind my office but there's only one phone.  That phone sits on my desk.  A private investigator gets most of his work by phone, so I had to answer it.  Grabbing the doorframe on the way through slowed my speed a little.  I only stubbed my big toe on the leg of the desk instead of breaking it.  I was hopping around on one leg and swearing when the phone rang again.  The insane giggling stopped my lunge at the desk.\n\n\"Jase, honey, now it's not that I don't like seeing you in your jockey shorts.  Really, I do, but what if there'd been a client here?  You really oughta look before you stagger in like that.  And all that swearing.  Tsk tsk.\"\n\nMelody was sitting in the desk chair with a cell phone in her hand.  Her whole body was shaking in mirth, and with Melody's body, there's a whole lot of nice things to shake.  I usually remember that she gets to my office before I get up, but the holidays had kind of messed up my brain.  I mean, how would you feel if you had to spend twelve hours a day dressed in an elf suit?  I can tell you how you'd feel.  You'd feel like washing down a couple cheeseburgers with about a quart of scotch while trying to understand why people ever reproduce.  You'd swear all humans younger than twenty should be kept in restraints at home.  You'd want to be with people who don't run you down in their quest for the latest big-breasted, alien, she-bitch heroine video game cartridge that just went on sale.  That's how you'd feel, all right.  \n\nWell, that's how I felt last night anyway. I was gonna feel that way for one more day.  Then it would be Christmas Eve, and everything would get back to what passes for normal in my life.\n\nMy voice croaked around the fuzzy carpet on my tongue.  \"I heard the phone.\"\n\n\"Oh, that was just me.  I was trying out our new answering machine.  Remember, I told you about it at Barney's last night?\"\n\nThe small, quiet bar was a faint blur on the pages of my mind.  I'd stopped in for dinner at seven and didn't remember when I left.  I didn't really remember much after about ten.\n\n\"Yeah, sure.  I remember.  What time is it?\"\n\n\"It's, uh... seven-thirty.  Grady's won't open until nine, so you have some time yet.  Now, go get yourself a shower and some clothes.  There's coffee in the pot.\"\n\nEven in my disabled state I hadn't missed Melody's luscious cleavage when she leaned over to see the desk clock.  I'd met Melody on the stairway to my second story office/apartment a few months ago.  She'd sort of moved in for a couple of days, and then decided she'd be a good addition to my staff.  Up until then, my staff consisted of me, and I didn't think I could afford an assistant.  Melody proved me wrong by doing some phone work that paid off pretty well.  Since then, she'd taken care of the office stuff while I did the fieldwork.  It was because of her that I was working at Grady's.  I was part of the extra security the department store put on between Thanksgiving and Christmas.  \n\nAt eight-fifty, I casually sauntered past the cosmetic counter.  Well, at least I was as casual as I could be in those tights, pointy-toed, green satin slippers and floppy hat.  Other than that, I felt pretty good.  In about a half hour, things were going to start downhill.  I knew from experience that the tights would soon have a strangle-hold on my balls, and that my feet were going to hurt like hell.  Evidently, elves don't need arch supports, but I'd found that walking on marble floors for twelve hours in glorified bathroom slippers makes flat feet an understatement.\n\nThe crowd outside the entrance was getting larger.  This was going to be the worst day yet.  There was one shopping day left before Christmas Eve, and that meant most of the housewives in town had the pre-heaters on their running shoes, a fist full of credit cards, and were preparing to do battle over the last merchandise on the shelves.  To make matters worse, Grady's had started marking down some of the seasonal stuff.  I swear, if Grady's had put starting blocks at the entrance, I would have seen nothing but faces and butts waiting for the door to open.  At precisely nine, the manager walked to the door, carefully stood to one side to avoid being trampled, and turned the key in the lock.  \n\nA sea of ski jackets and faux fur swept through the door.  The look on each face was the same.  The mouth was set in a thin, flat line of determination and the eyes swept back and forth like radar antennae.  The wave flowed into the three aisles that went through the store. \n\nUntil that moment, I had never thought of shopping as a contact sport.  Grady's had marked down all the Christmas decorations to half price.  Women were grabbing boxes of lights and colored glass balls as fast as they could reach.  \n\nI made the observation that the taller women had a definite advantage in this game.  They could reach farther and higher.  Then I saw their weak spot.  One little old grandmother was trying to reach a particular box of crystal icicles, but she was being edged away from the display by the nicely-shaped, jean-clad ass of a woman about a foot taller.  The little old lady stuck out her elbow and jabbed the offender in the side.  The taller woman turned and looked down on Granny with fire in her eyes.  Granny apologized profusely, but I noticed that as she was speaking, she was also positioning herself closer to the display.  All was quickly put to right, and Granny got her box of icicles.\n\nIn half an hour, the Christmas decoration display was a stripped carcass.  The only items left were several ornaments shaped like dinosaurs, and three boxes of lights that spilled green wires and colored bulbs from their ripped-open ends.  Things were quieting down in the rest of the store too.  The feeding frenzy had changed to a strategy of seek and find.\n\nThe rules in winter store security are simple \u2013 count the items going in and out of dressing rooms \u2013 that's year around, actually - and watch the shoppers with long coats.  It's a simple matter, especially for women, to take three things into the dressing room and come out with two.  The third is safely hidden underneath the clothing they wore in.  The store record at Grady's is held by a thirty-year-old housewife who was apprehended wearing eight bras, twelve pairs of panties, six pairs of panty hose, three knit tops, and four sweaters.  The security cameras had faithfully recorded the five trips to the dressing room it took her to get all that on.\n\nThe long coats are particularly useful for shoplifters.  They can have inside pockets that will hold fairly large items.  The bulk of the coat hides the bulge made by the stolen merchandise.  The rule is, always watch the long coats for suspicious bulges.  The rule doesn't work very well for people of generous proportions.  It's difficult to tell a naturally occurring bulge from a stolen pair jeans.  One must watch the suspect carefully.  Jeans don't jiggle.\n\nAbout noon, I witnessed the first method.  A young mother with a small boy hanging onto her purse strap went into the dressing room with four blouses and two bras.  In about ten minutes she came back out with the blouses, but I didn't see the bras.  She went to the rack and replaced the garments, and started for the door.  I cut her off.\n\n\"Um, Ma'am, could you please come with me?\"\n\nI'd expected to see fear in her eyes.  Instead, I saw rage.\n\n\"Why in Hell would I want to do that?\"\n\n\"I work for store security.  I saw you go in the dressing room with several items, but I didn't' see you bring them all out.\"\n\n\"Oh.\"  She smiled a really big, really fake, smile.  \"Well, I must have left some of 'em in there then.\"\n\n\"I'm sure you did.  Just come with me and I'll have somebody check.  If they're in there, you can leave.\"\n\n\"Look, Mr..., Mr. Elf, I gotta get Butchy here home for his nap.  I haven't got time to go sit somewhere while you look in that fucking dressing room.\"\n\nShe turned to leave, and I caught her arm.\n\n\"I'm sorry, Ma'am, but you'll have to come with me.   I don't want to make a scene, but \u2013\"\n\n\"Mommy, what's Santa's elf want?\"\n\nShe looked down at the little boy and smiled.\n\n\"Butchy, this man is being mean to Mommy.\"\n\nButchy looked at me with murder in his little blue eyes.  \n\n\"You leave my Mommy alone!\"\n\nIt was amazing just how much power the little guy got into that punch. The tights had neatly packaged my most sensitive parts into one compact bundle and Butchy's small fist caught that bundle dead center. An intense pain shot through my groin and lower back, and took all the strength out of my legs.  I had the urgent need to curl up in a fetal position.  In the ten or so seconds it took for me to regain the ability to breathe and see, Butchy and his mother had disappeared.  I decided it would be best not to go after her.  Running through Grady's dressed in an elf suit with both hands on my crotch would not be professional.  Besides, I couldn't even walk, much less run.\n\nAt seven that night, I turned in my elf suit and took my bruised balls to Barney's.  It had been a rewarding, if somewhat painful, Christmas.  I'd made enough money that I could take it easy over the holidays.  \n\nJoyce was wearing one of those headbands with felt antlers when she came to take my order.  \n\n\"How's my favorite detective tonight?\"\n\n\"Pretty good, now. I don't have to dress up like an elf any more, and my crotch is feeling better.\"\n\n\"Oh, those green pantyhose got to you again, did they?  I told you to get a different size.  They'll ride right up on you if they're not the right size.\"\n\n\"They are called tights... and no they didn't ride up on me again.  Well, they did, but that's not why it hurts.  Some little kid punched me there, and I hope he grows with a face full of zits.\"\n\nJoyce has a laugh that consumes her body.  It's loud, full, and everything quakes with the effort.  She was quaking right now, from the antlers, to the generous breasts that peeked from her bright red sweater, to her pear-shaped butt.  God, that woman can laugh. After about a minute, she slowed down enough to yell at Sheryl, her waitress and live-in lesbian lover.\n\n\"Hey, Sherry.  A little kid beat Jase up.  He needs some ice for his family jewels.\"\n\n\"Damn, Joyce.  You don't have to tell the whole world.  I'm not going to sit here with a bag of ice in my lap anyway.\"\n\n\"Suit yourself, but you better be well by tomorrow night.  It's our Christmas party, remember?  Now, what can I get you?\"\n\nI ordered two cheeseburgers to go with the scotch Joyce had brought, and listened to her giggle all the way back to the grill.  The world was getting straight again.  The world was always straight at Barney's.  All I had to do was slip onto the duct-taped seat at my favorite booth, breath in the fifty-odd years of cigar and cigarette odors, take a sip or two of really old scotch, and everything was OK again.\n\nJoyce's Christmas party was always a nice affair.  It would be just a few of her regulars \u2013 me, Carla and Melody, and a couple others with no other place to go on Christmas eve - and of course, Joyce and Sheryl.  There would be drinks on the house, a few appetizer trays from the local discount grocery, and presents around the little imitation Christmas tree that sat on one end of the bar.  It was my kind of Christmas Eve \u2013 a little tacky but really relaxed.  Sometime during the night, I'd catch Carla and Melody under the mistletoe back by the restrooms.  If I was lucky, I'd catch Joyce and Sheryl too.  If I was really lucky, they'd humor me and give me a kiss.\n\nAt about one, I decided to call it a night.  The stress of the week at Grady's had just about wiped me out.  All I wanted to do was crawl into bed and sleep until noon the next day.  I paid Joyce and started home.\n\nIt didn't take long to walk the two blocks, but I was so tired it seemed long.  The beat-up pickup parked in front of my steps didn't even catch my attention.  I'd just turned into the stairway when I heard the man's voice.\n\n\"Hey man, it's about damn time you got home.  I been waitin' on ya fer an hour.\"\n\nI recognized him from a picture I'd seen in a biker bar. A few months ago, I'd tracked down one Melvin Tibbideau in my search for the daughter of a Baptist preacher.  Reverend Downwoody was worried sick about his little princess.  She'd run off and married Melvin, and poor Daddy hadn't seen her since.  I found her by finding Melvin, and gave her father the address.  I didn't know what happened after that, but I was pretty sure Melvin wasn't the preacher's idea of a perfect husband.  Melvin weighs in at about three hundred pounds, has a tattoo of a snake on his forehead, and doesn't care much for gainful employment.  He'd rather ride his old Harley and screw Jennifer.  I'm not much of a bike guy, but I understood about Jennifer.\n\n\"Now, wait a minute, Melvin.  All I did was find a guy's daughter.  I had nothing to do with whatever happened after that.\"\n\n\"Shit, man, I know that.  I'm not pissed off.  Jenny's dad's OK now anyway.  He don't like me much, but he can't do nothin' 'bout it.  Jenny and me, we's legal with a license and everything.\n\n\"OK, so why are you parked outside my office?\n\n\"We went down to the bar tonight, and this old woman was wandrin' 'round in the parking lot, half froze to death.  She come up to the truck when we's getting' out and said would we take her home.  Well, where she said she lived couldn't be, 'cause they's only rich folks live out there.  I think the old gal's 'bout a quart low.  Jenny thought you'd be able to find out who she belongs to.\"\n\n\"Why didn't you call the police?  That's what they're for.\"\n\n\"Don't like cops much.  They'd prob'ly just stick her in jail 'til somebody turned up to claim 'er.  It's a bitch sittin' in jail over Christmas.\"\n\nSomehow, I figured Melvin was speaking from experience.\n\n\"OK, bring her up to my office and I'll see what I can do.\"\n\nThe little woman in Melvin's motorcycle jacket had probably been quite a looker in her younger days.  She wouldn't have been half-bad now, if her silver hair hadn't been a mess and if she'd had some clothes.  All she wore was a flannel nightgown and a pair of house slippers.  I figured I'd start with the basics, and work from there.\n\n\"Ma'am, what's your name?\n\n'I'm not going to tell you, young man.  If I do, you'll just send me back.\"\n\nThe woman smiled, and Melvin threw up his hands.  \"See what I mean.  That's all we could git out of 'er too.\"\n\n\"OK, Melvin.  I understand.  Now, Ma'am, where is it I would be sending you?\"\n\n\"I'm not going to tell you that either.  Just take me home or let me be on my way.\"\n\n\"And where is home?  You have to tell me that, or I can't take you there.\"\n\n \"You won't believe me.  They wouldn't believe me at Collingswood either.\"\n\n\"Well, give me a try.  What's your address.\"\n\n\"Number one, Englebrook Road...See.  I said you wouldn't believe me.\"\n\nWell, Melvin was probably right about her.  Englebrook Road was so exclusive you had to own at least two limousines to live there. The name \"Collingswood\" rang a bell, though.  The Collingswood Community was a nursing home about a mile from Melvin's biker bar.  The old girl must be pretty tough to have walked that far wearing just a nightgown.  The temperature outside was well below freezing.\n\n\"I believe you.  You're going to need to get warmed up and get some better clothes before I take you outside, though.  Let's have some coffee and I'll see if I don't have a sweatshirt and some pants you can wear.\"\n\nI left her in the apartment kitchen drinking coffee with Melvin and went to find some clothes.  While I was in the bedroom, I called information on my cell phone, and then placed a call to Collingswood.  She'd slipped out as the visitors were leaving at eight, and they'd been looking for her since.  They promised to send someone to pick her up.\n\nShe looked almost as bad in my old jeans and faded sweatshirt.  The jeans were pretty baggy on her small frame, and the sweatshirt could have held three of her.  \n\n\"This is the best you could do?  I've seen bag ladies dressed better.  If Ling brought me this to wear, I'd ship him back to China.\"\n\n\"Sorry.  I live here by myself.  This is what I wear everyday.\"\n\n\"I guess it's true.  There is no accounting for taste.\"\n\nJust then, there was a knock on my office door.  When I opened it, a man about forty-five gave me his cultivated meet-the-public smile and stuck out his hand.\n\n\"I'm Doctor Winston... from Collingswood?  I hear you have one of our residents?\"\n\nWhen she saw him, her mouth gaped open. She slumped down in the chair and started to cry.  Winston walked over and put his hand on her shoulder.\n\n\"Now, now, Dixie.  There's no reason for that.  Let's get you back to your room where you'll be warm and safe.\"\n\nShe stopped crying and looked up at him.  There was fire in her eyes.\n\n\"Don't you mean, back where you can give me some more of your little pills to keep me quiet?\"\n\nWinston smiled and smiled knowingly at me.\n\n\"Those pills are for your heart, Dixie.  They might make you a little sleepy, but they're good for you.  Now, come along like a good girl.\"\n\n\"I'm not a girl, and I won't go with you.\"\n\n\"Then I'll just have to call Harold up from the car.\"  Winston held out his hand.\n\nDixie stood up from the chair as if to go with him, but ran to me and threw her arms around my neck.\n\n\"My name is Dixie Montgomery\", she whispered in my ear.  \"I do live where I told you, I don't know why, but my son put me in Collingswood.  I heard Melvin say you're a detective.  Check out my story and please, please help me.  I can pay anything you ask.  Just call my lawyer, Harry Cauldwell.  He'll tell you.\"\n\n\"My, my.  Dixie seems quite attached to you, Mr. Conford.  Perhaps she'd enjoy a visit someday, if you have the time.\"  His voice became firmer, a little too firm, I thought. \"Dixie, it's time to go.\"\n\nWhen I closed the office door, Melvin stood up to leave.\n\n\"Shit, they's takin' her to jail ain't they.\"\n\n\"Collingswood isn't a jail, Melvin.  It's a nursing home.  They just take care of people who can't take care of themselves.\"\n\n\"Sounds like a jail to me if ya can't leave when ya want.  Well,  I gotta get back to the bar.  Jenny's gonna dance on the tables fer us an' I don't wanna miss it.  Wanna come?\"\n\nI politely declined, although since I'd seen Jenny, the thought was inviting.  She was pretty well endowed and during the week, she danced at one of the local strip bars.  I had a feeling the bikers would have a ball.  I was also pretty sure they wouldn't like a private detective horning in on their fun.\n\nIt was almost noon when I hauled my ass out of bed.  It was strange to not have any thing to do.  I tried to watch TV, but all the programs were kid's stuff with cartoon Santas and reindeer and talking snowmen.  That reminded me too much of Grady's.  Besides, I kept thinking about the little woman in the nightgown, and what she'd said to me.\n\nMelody and I walked over to Barney's at eight, and Carla got there a little after.  Joyce doesn't like jukeboxes, so there's none in the bar, but she'd brought her portable and music played softly in the background.  If I hadn't been thinking about Dixie, the women would have made me drool.  Melody had on a purple dress that fit like a second skin and left little to the imagination.  The black stockings with little green ivy leaves and the black heels were frosting on the cake.  Carla's outfit was a beautiful black dress cut low in the front and lower in the back.  Her shoes had those big clunky heels that for some reason really turn me on.  The black net stockings just made her long legs that more seductive.  Even Joyce and Sheryl had dressed up.  They both had on pant suits that did more than hint at their very sensuous bodies.",
        "I guess I wasn't being very good company.  Melody asked what was wrong.  I was telling her when Carla returned from refilling her drink.  Her mouth fell open when she heard me say \"Dixie Montgomery\".\n\n\"You had Dixie Montgomery in your office?  Are you certain it was her?\"\n\n\"Well, I guess it was.  That's what she said her name was anyway.  She said she lived on Englebrook Road.  You know her?\"\n\n\"I know of her.  What in God's name was she doing in your office at two in the morning?\"\n\nI related the story and asked Carla if my Dixie could be the same woman she knew.\n\n\"I said I knew of her, not that I knew her.  She's one of the most powerful women in Nashville, if not the most.  I don't know what she'd be doing in a nursing home.\"\n\n\"So she is well off, just like she said?\"\n\nCarla chuckled.\n\n\"No, Jase.  I'm well off.  Dixie is... well, two years ago, I chaired a committee to raise money for a children's charity in Nashville.  Dixie came to the dinner and dropped a check for a hundred thousand in the basket.  I doubt she even thought much about it.  She owns about half of the office buildings in downtown Nashville and a bunch more in Atlanta and Memphis.  Her husband was big in real estate and did very well.  When he died, Dixie took over his interests.  She turned a nice set of income properties into a financial empire.\"\n\n\"Does she have a son?\"\n\n\"I remember hearing something about a son.  She had him late, and he'd be about thirty-five, now, I think.  The way I heard the story, he's not much.  She's been supporting him most of his adult life.\"\n\nThe party broke up about one. Melody had left earlier.  She was driving to Knoxville to visit her sister and wouldn't be back until the day after Christmas.  Carla put on her coat and came over to say good-bye. I knew Joyce and Sheryl still had to exchange their personal gifts, so I walked Carla to her car.   She leaned back against the door and pulled me against her. \n\n\"Jase, honey, if I didn't have to go see mother tomorrow, I'd drag you all the way to your apartment and rape you.  Just get some rest, OK?  I think you're going to need it when I get back.\"\n\nShe kissed me softly, then parted her lips and devoured my mouth.  Kissing Carla is almost as good as making love to any other woman.  She gave me a hug, wished me a Merry Christmas, and then drove off.   The walk home seemed a lot longer than two blocks.\n\n\nI had nothing to do on Christmas day except watch TV and relax.  The problem was, I couldn't relax.  Detectives love puzzles, and once they find one, they can't rest until they've solved it.  Dixie's story was such a puzzle, and it wouldn't let me go.  I finally sat down at my desk and started writing out everything I knew, just as I would for any case.  There wasn't really very much to write other than what she'd told me.  All I had were questions.  Did her son really put her in Collingswood against her will, or was Dixie like many other older people, and had lost touch with reality?  If she had truly lost the ability to care for herself, why didn't she have a private nurse?  Surely, with her money, she could afford one.  \n\nI hadn't liked Dr. Winston's voice, either.   He'd been just a little too commanding for somebody who cared about Dixie.  Maybe that's how he talked to all his patients, but I still didn't think it sounded right.  \n\nAfter lunch, I decided I'd go talk to Dixie again.  Maybe she'd tell me more.  At least she might enjoy the visit.\n\nThe little blonde desk nurse was all smiles when I explained who I was and asked to see Dixie.\n\n\"I'm sure it would make her happy to see you again.  Dr. Winston said she seemed to like you a lot.  She's in room 135, just down that hall.  Don't be worried if she seems a little out of it.  Sometimes Dixie has trouble sleeping so Dr. Winston prescribed some medication.\"\n\n\"I see, and thank you for the information.  By the way, is Dr. Winston in?  I'd like to ask him if there's anything else I can do for her.\"\n\n\"No.  He's gone for the holidays.  I can page him if you'd like.\"\n\n\"That's alright.  I'd hate to take him away from his family just for that.\"\n\nDixie seemed a pretty groggy, but she did recognize me.\n\n\"Oh, it's you, Melvin's friend.  You're the one who called them, aren't you?  Are you happy with yourself, young man?\"\n\n\"Actually, no.  I've been thinking about last night, and some things just don't sit right.\"\n\nDixie instantly changed from groggy to bright-eyed and alert.\n\n\"Thank God somebody finally listened to me.  Have you come to get me out of here?\"\n\n\"No, not yet anyway.  But I wanted to talk to you some more about what happened.  I don't think you belong here either, but if I'm going to help you, I have to know what's going on.\n\n\"Go ask Vicki.  I'm sure she's behind it all.  John wouldn't do this to me.  He's a pretty poor excuse for a man, but I'm his mother and he'd never hurt me.\"\n\n\"Who's Vicki?\"\n\n\"She's my son's wife.  He met her in Atlanta two years ago, and she talked him into marrying her.\"\n\n\"So what does Vicki have to gain by keeping you here?\"\n\n\"The only thing Vicki's interested in is my money.  I give John an allowance, but it's never enough for her.  She's always complaining to him about needing more.  I figure she's tired of waiting for me to die.\"\n\n\"OK, so she's after your money.  Who handles your finances?  Surely they'll keep her from getting anything.  I'll go talk to them.\"\n\n\"Harry, Harry Cauldwell, the attorney I told you about.  He'll try, but there's one thing I've learned about business.  It's the smartest accountant with the smartest lawyer that wins, not the ones who are trying to do the right thing.\"\n\n\"Well, anything else you can tell me?\n\n\"Dr. Winston's in on it somehow, I'm sure.  I have a physical every six months.  Have had for the last twenty years.\"  She giggled.  \"It's the only way I can get a man to touch me anymore.  Anyway, my last one was just a week before Vicki brought Winston to the house.  Doc Mitchell said I'm healthy as a horse.  Winston wouldn't call Doc Mitchell.  He just had his two goons hold me down while he gave me a shot.  I woke up in here.  Winston's got the staff convinced I'm nutty as a fruitcake so they won't believe anything I tell them.  The phone doesn't work, and since I got out once, he's got them watching me pretty close.\"\n\n\"Anything else you can think of?\"\n\n\"You might talk to Ling.  He was there, that day, but I don't know if he saw anything.  Just please find a way to get me out of here.  I have to take about every other pill and act like I'm drugged or they'll get suspicious.  If they manage to get two in me, you'll have to carry me out.\"  Dixie gave me a sly wink.  \"I think I'd like that, but I'm pretty sure they'd notice.\"\n\nOn the way back to my office, I went over my conversation with Dixie.  She seemed as lucid as about anybody, and there was nothing wrong with her logic.  Money is the usual cause of most family problems with which I get involved.  Sex is right there in a close second place, but money is definitely the frontrunner.  \n\nI'd just sat back down at my desk when there was a knock on the door.  The woman who stepped into my office was a stunning blonde who introduced herself as Vicky Montgomery.  The smooth accent of southern aristocracy dripped off every word.\n\n\"I'm sorry to bother you on Christmas Day, Mr. Conford, but I simply just had to thank you.  If you hadn't found her, Mother might still be wandering around out there.  In this cold, she probably wouldn't have lasted through the night.  She's so frail, you know, and she forgets where she is.  That's why John insisted we put her at Collingswood.  We love her so much we couldn't bear to see her living by herself anymore.\"\n\n\n\n\"Well, actually, I just called the nursing home to tell them she was here, but thanks anyway.  Glad I could help.\" \n\nHonest to God, I couldn't help myself.  I guess I'm just naturally suspicious and Vicki was just a little to thankful.. \n\n\"By the way, who's Ling?\"\n\nI thought the hint of a wrinkle crossed her brow.\n\n\"He was Mother's driver.  Why do you ask?  Did she say something about him?\"\n\n\"No, I gave her a shirt and a pair of pants to wear.  She just said if Ling gave her clothes like that, she'd ship him back to China.\"\n\n\"Well, he belongs in jail, if you ask me, and if I could prove what I think, he'd be there.  He talked Mother into buying him a car.  God knows what else he's talked her into.  A week before we put Mother in Collingswood, she told me Ling had started giving her massages.  I think the man was probably molesting her, too.  She's a dear old soul, but she's lost most of her sense.  I doubt she'd even know what was happening.\"\n\n\"Did you ever tell the police about that?\"\n\n\"No.  Mother would have never said anything against him, and obviously, he wouldn't do anything to her when John or I were there.  There was no way to prove it.  We just fired him.\"\n\n\"The police can do tests that \u2013 \"\n\nVicki's nostrils flared and a little of that polished accent went away.  \"I would never, never put Mother through that embarrassment.  She hates going to doctors anyway.  She'd die if she knew they were checking her for that.\"  Vicki took a deep breath, and the smile and accent returned.  \"Mother will be comfortable at Collingswood, and that Chinaman can't get to her there.\"\n\n\"I've heard Collingswood is a nice place.  Even if nothing was going on, it's probably best that Dixie's there.  Last night, she seemed a little... I don't know, like she really didn't know what was going on.  She couldn't even tell me her name.\"\n\n\"Mother forgets things like that.  That's another reason we put her in Collingswood.  We were afraid she'd wander away from the house and hurt herself.\"\n\nVicki stood up and smoothed the skirt over her tight little ass.  She reached in her purse and handed me a small card with her address and phone number.\n\n\"Well, I'll not bother you any more.  Just thank you ever so much for taking care of Mother last night.  John and I feel that we should compensate you for your trouble. If you'll just send a statement with your customary fee, we'll be more than happy to pay it.\"\n\nI closed the door behind her and sat back down at my desk.  A lot of things bothered me about Vicki.  She'd tried to impress on me that Dixie was some fragile old woman with one foot in the grave.  The little woman who'd thrown herself on me to beg for help was anything but weak.  Dixie had nearly knocked me down.  She'd also walked a long distance in the cold with almost no protection, and I had to believe there was a lot of fight left in the old gal.  At the nursing home, she seemed a little stiff, maybe, but not feeble.  I sometimes woke up stiff from less than she'd been through.\n\nVicki had also stressed that Dixie had trouble remembering things.  I've been around a few people with that sort of condition, and Dixie didn't fit the type.  She'd rattled off her name, address, and the name of her lawyer without missing a beat.  Everything she'd told me at the nursing home was a logical fit to what happened.  I didn't think Dixie was having any mental problems.\n\nWhen I'd mentioned Ling, it seemed to bother Vicki.  I'd have to find him somehow. Maybe he did know something, like Dixie said.  All in all, this thing was starting to smell.  The fact that Vicki had tried to pay me didn't help.  It was like she was trying to buy me off so I wouldn't get my nose into it any further.\n\nMelody came back the next morning and I filled her in on what had happened.  It took us all that day and part of the next to find Ling.  Melody actually found him.  She figured he'd try to find another job and called a friend of hers at the unemployment office.  Ling had registered a couple weeks ago and was now cooking at a Chinese restaurant on Sixth. \n\nLing was a lot of help, although he didn't tell me all that much.  Dixie had found Ling on a trip to Hong Kong.  He was the desk clerk in her hotel, and had told Dixie he wanted to come to the States someday.  She thought his English accent was nice, helped him get a visa, and then gave him a job.  For the purpose of the green card application, he'd been employed as her driver, but basically, he ran her household.  He ordered all the groceries, cooked for her, did the laundry, and watched over the grounds keepers. \n\nEverything had been just peachy until the day Vicki showed up with a doctor and two male nurses from Collingswood.  Ling thought the doctor's name was Winston.  Vicki gave Ling five hundred dollars and told him he would no longer be needed and was to leave immediately.  He didn't see what happened after that.  Ling had tried to call Dixie several times, but all he got was her answering machine.  I asked Ling about the massages, and he nodded his head.  \n\n\"Mrs. Montgomery had become very interested in homeopathic medicine of late, and I learned a great deal of that from my father.  He runs a Chinese pharmacy in Hong Kong.  I just mixed a few herbs with some oil and rubbed it into her back.  It seemed to help, so she asked me to keep doing it.\"\n\nI had to ask him.  I was pretty sure he'd lie if Vicki's suspicion was true, but I've gotten pretty good at detecting liars.  It takes one to know one, as the saying goes.\n\n\"Dixie's daughter in law thinks you might have gone a little further than just a back rub.\"\n\n\"I should expect something like that from Vicki.  Well, the answer is no.  I don't expect you to believe this, but I love that old woman almost as much as I love my own mother.  She brought me to the United States and she treats me with the same respect she gives her son.  I would have to be completely balmy to make a mess of that, don't you think?\"\n\nThat night, I called the number Ling gave me, and wasn't surprised to hear Vicki's voice explaining that Dixie was away on vacation and that all calls should be placed to her business manager's office.  I called that number and heard Vicki tell me to call back between the hours of eight and five, Monday through Friday.\n\nThe next morning, I phoned the offices of Dickerson, Blakley, and  Cauldwell, and asked to speak to Harry.  The voice was the calm, resonate baritone you'd expect from one of the highest priced lawyers in Nashville.\n\n\"Yes, Mr. Conford, we represent Dixie Montgomery.  What would be your interest in her affairs?  If you're seeking a charity donation, you'll have to contact her directly.\"\n\n\"It's not about money, or at least I'm not looking for any.  I met her the other night, and frankly, I'm worried about her.  I really hate to discuss this on the phone.  Would you have some time this morning?\"\n\nHarry's voice moved up a pitch or two, and he spoke quickly.\n\n\"You've seen Dixie?  Where?\"\n\n\"In my office on Christmas Eve.  Now, can I come talk with you or not.\"\n\n\"In an hour.  I'll tell the receptionist to send you up.\"\n\nHarry was worried too. He'd been trying to find her for a week.  John and Vicki had presented him with a document assigning power of attorney to John and had informed Harry that all Dixie's business transactions were to go through them.  He said the signature on the document looked like Dixie's, and a Dr. Winston had signed as witness.  Harry was bothered that the signature was barely legible.  It had smelled to him, too, so he'd questioned John and Vicki. \n\n\"Vicki was the only one talking, and she had a reasonably good story.  According to her, Dixie decided to go to Tibet to see the Lost City, and signed the power of attorney so John could take care of her affairs until she came back.  Now, Dixie's perfectly capable of deciding on a trip to Tibet at the last moment, but we already handle all her affairs.  There was no logical reason for her to sign control over to her son.  He's an idiot and she knows it.  I can probably keep them at bay until after the holidays, but they could win this thing if I can't find Dixie.\"\n\n\"She's in The Collingswood Community, but I don't think she wants or needs to be there.  I went to visit her.  They're trying to keep her sedated, but she's been faking it when they give her the pills.  She thinks Dr. Winston is in on it too, and I'm inclined to agree.  As soon as he comes back from the holidays, he'll find out she's not really drugged.  The only way she'll get out then is if somebody goes over and gets her out.\"\n\nHarry shook his head.\n\n\"If what Ling told you is true, the only people who could do that would be John or Vicki.\"\n\n\"Well, they're not likely to let her walk out of there.  If they can keep her quiet long enough, they'll get control of everything she owns.\"\n\nHarry sighed.\n\n\"Then it'll take a mile of red tape and about six months.  With that much money involved, they'll be able to produce two doctors who'll swear Dixie's senile for every one of mine who testifies she isn't.  If I read Vicki right, she'll do whatever's needed to get to the money.  On the other hand...\n\nHarry cleared his throat.\n\n\"You seem genuinely interested in Dixie's welfare.  If you were to ask me if it is legal to help someone escape from a nursing home, I'd have to tell you the courts take a dim view of that sort of conduct.  Unless the patient is being held against her will \u2013 assuming, of course, she is, in reality, of sound mind and good health - it could be viewed as kidnapping.  The person who helped her would probably be arrested.\n\n\"I'm certain if Dixie wanted to leave that place, she would find some way to ask a disinterested party - say some private investigator she just happened to meet \u2013 to assist in getting her out.  If that same investigator believed her to be of sound mind, and had some evidence of her forced detention, perhaps a statement from her and her driver, it would be a simple matter to defend him in the event charges were filed.  The only other thing an attorney would need is to have Dixie, fit and alert, on the witness stand for a few minutes. Now, mind you, this firm could never officially suggest that sort of conduct, nor would we ever admit to doing so if said investigator were apprehended.\"\n\nHarry grinned.\n\n\"But, I'd sure as hell love defending the guy who gets Dixie out.  I think Vicki's a money-hungry bitch, and John's about as pussy-whipped as they come.  The kid always was a no-good. Been sponging off his mother all his life.  You'd think an allowance of a hundred thousand a year would be enough, but she keeps writing him checks every month for more.  It's no wonder she wrote him out of her will except to continue his allowance.\"\n\nWell, I could pretty much deduce the rest.  Vicki had figured out how to beat Dixie's will.  With power of attorney, they could sell any or all of Dixie's holdings.  All they had to do was keep her quiet to maintain the guise that she was mentally incompetent.  My bet was that Dr. Winston was in for a slice in exchange for a diagnosis of mental incompetency and a few prescriptions.  Sure, the money would still be in Dixie's name, but I figured they had a way to fix that little problem as well.  When there's a lot of money on the table, any slick accountant can spin the wheel and make the cash turn up where he wants. As long as everybody in the scam gets their cut, nobody complains.\n\nI figured I could trust Harry.  He seemed to have Dixie's interest foremost in his mind.  Of course, the handsome retainer his firm was probably getting would have something to do with that, but I thought Harry was genuinely concerned.  He'd told me what I was about to do probably wasn't illegal as long as my impression of Dixie had been right.  I hoped he'd be true to his word and get me out of the jam I was going to get myself in.  \n\nNursing homes are designed to keep their patients inside the facility, but to also make it easy for visitors to enter and exit.  Nobody wants to feel like they put dear old Grandma in prison just because she can't remember where she lives.  All that would be required was a little shoplifting in reverse, and a diversion of some sort.  I knew a very diverting young woman who'd probably jump at the chance.",
        "Visiting hours ended at eight, so we met in the parking lot at Collingswood at seven-thirty.  I wanted to take Dixie out in the group of visitors who waited until the last possible second before leaving.  Jennifer was excited, just as I thought she'd be.  Melvin was excited too, but that was because of the way Jennifer was dressed.  I'd asked her to wear something sexy, but she was damn near illegal.  The tight top was cut almost to her nipples, and she wasn't wearing a bra.  I could see the outline of her nipple rings through the stretchy fabric.  They looked like they had little Christmas trees dangling from the hoops.  It was in keeping with the season, I guess. \n\nHer little short skirt showed her ass cheeks if she bent over even a little.  I about died when she got out of Melvin's pickup.  She wasn't wearing any panties.  There was just smooth tanned skin all the way from her spike heels to the little silver ring that glittered between her thighs.  If that didn't divert the male nurses who watched the exit, they were either gay or dead.\n\nMy heavy coat concealed the dress and light trenchcoat I'd borrowed from Jennifer, and each pocket held one shoe.  I hoped Dixie could walk in high heels.  The flowers in the white box I carried hid the long brown wig I'd borrowed from Melody.\n\nThe nurse waved me to Dixie's room.  Dixie was pretty alert, and her eyes flashed when I told her the plan.  \n\n\"Good thing I stuck that pill under my upper plate tonight.  They made me open my mouth to check.  Let me have the clothes so I can get dressed.\"  I handed her the dress and shoes.\n\nAt five to eight we were ready.  Dixie looked a lot better.  The clothes and wig changed her appearance enough I didn't think the staff would recognize her immediately.  I only needed a couple minutes.\n\nThe PA system announced that visiting hours were over, so Dixie and I left the room.  I went ahead and stopped with the crowd at the door.  Only a few seconds later, Dixie tugged at my sleeve.  I moved slightly back and put her in front of me.  She was effectively hidden in the group who'd stopped to see what was going on at the desk.\n\nJennifer was playing her part well.  She'd taken off her coat and was leaning against the nurse's desk.  The view of Jennifer's breasts piled on the desk top wasn't doing much for the cute little nurse.  She just looked disgusted.  The male nurse at the door was almost drooling.  Jennifer let her back sag just a little and two tight little butt cheeks peeked out from under the skirt.  The second male nurse edged over for a better view and walked straight into one of the round columns that supported the ceiling.  He stood up rubbing his head with his mouth hanging open.  Something was starting to push out the front of his scrubs.\n\nI edged us deeper into the crowd as the nurse politely told Jennifer that she'd have to come back tomorrow.  Most of the people in front had seen all they cared to, and the mass of visitors began to file through the door.  Out of the corner of my eye, I saw Jennifer turn in a huff, thrust out her breasts and walk to the back of the crowd.  The male nurse at the door never took his eyes off her.  We went past him and tried to look like normal visitors as we walked to the minivan.  Once inside, I started breathing again, and we waited until Jennifer got into Melvin's truck.  It was a relief when I pulled out onto the street and headed for Barney's.  Joyce and Sheryl had agreed to let her stay there until we got all this sorted out.\n\n\"Young man, I know I should be thankful, but you have the worst taste in clothes of any man I've ever met.  What hooker did you chase down to get these?\"\n\n\"Sorry, I borrowed them from Jennifer.  Oh, that's the girl who was at the desk when we left.  She's about your size, so I thought they'd probably fit.\"\n\n\"The fit's not too bad through the waist and hips.  The bust looks like I'm wearing a tent.  Are those boobs really hers, or did she buy some surgeon a new boat?  The dress is really short, too.  Without this coat, I'd be freezing my ass off.  With all that and these spike heels, I feel like a stripper.\"\n\nI glance over at Dixie and saw her huge smile.  She was enjoying herself.\n\n\"Now how would a woman like you know how a stripper feels?\"\n\n\"Oh, that's how I met my husband.  I was dancing in a club in Chicago right after the war.  William was rather taken with me, if I might say so.  He tipped the stage manager five dollars and came back to my dressing room.  We got married a couple months later.\"  Dixie chuckled.  \"Boy, was his family ever pissed.\"\n\nI got Dixie inside Barney's just as Melvin and Jennifer were parking.  Carla was already there with a suitcase.  She took Dixie by the hand, and led her up the stairs to Joyce and Sheryl's apartment.  Melody followed with her industrial-size case of cosmetics.  When Jennifer and Melvin came in, I just pointed up the stairs.  Jennifer went up, and Melvin and I went to the bar.  \n\nMelvin was on his third beer and I was nursing my second scotch when they came back down.  If I hadn't brought Dixie there myself, I wouldn't have believed it was the same woman.  Her hair was fixed and the dress she'd chosen was tasteful, but still sexy.  I could imagine her fifty years ago, and it was easy to see why William Montgomery had brought her back to Nashville.\n\nDixie walked over to Melvin and me with the grace of the dancer she'd once been.  She looked at Melvin for a second, then reached up and gave him a big hug.\n\n\"Melvin, you're a big man with an even bigger heart.  Thank you for taking care of me that night.  I was nearly frozen.\"\n\nShe stood on her tiptoes and kissed him on the cheek.  Melvin turned the oddest shade of pink.\n\n\"And you, Mr..., you know, I never did catch your name.\"\n\n\"Just call me Jase.\"\n\n\"Well Jase, I don't know why you did what you did, but I thank you too.  I think Vicki would have kept me in there forever if you hadn't helped me escape.\"  Dixie flashed me a grin and a wink.  \"It was kind of exciting too.\"\n\nI got the same hug and kiss as Melvin. \n\n\"Well, Dixie, we've still got some more to do to get you out of this for good.  First, we have to call Harry and tell him you're OK.\"\n\nI drove Dixie over to Harry's office the next morning.  He was really happy to see her, but after a friendly hug, his courtroom demeanor returned and he got down to business.\n\n\"We thought we'd lost you.   Now tell me what happened.\"\n\nDixie went through her story, and Harry took notes.  When she finished, he ran his finger over the page, and smiled.  \"I'm going to call the D.A. and see what he thinks about all this.\"\n\nThe phone call went on for about five minutes.\n\n\"Well, without trying very hard, Dwight can find a handful of criminal charges against Vicki, John, and Dr. Winston.  There are probably some more.  He'll know better after he talks to you and Ling.  Oh, Jase, he doesn't see any reason to charge you with anything.  He does want to get your statement, though.\"\n\n\"Do we have to charge my son?\"\n\n\"Well, Dixie, he's as guilty as the others.  He didn't try to stop any of this.\"\n\n\"I know my son.  He doesn't have the gumption to think all this up.  It was all that witch he's married to.\"\n\n\"I'll give all this to one of our criminal guys.  Since John didn't directly participate, maybe he can negotiate a plea.  It'll do him some good, Dixie.  He'll have to stand on his own two feet for a change.\"\n\nBy late afternoon, Dr. Winston and John had been arrested.  Vicki was no where to be found.  According to the nursing home, they'd called her at nine the night before to notify her that Dixie was missing. She told John she was going to Collingswood to find out what had happened.  That was the last anybody had seen of her.  I had a feeling she didn't really want to be found.\n\nI took Dixie to the Chinese restaurant to reclaim Ling.  He jabbered something at the other cook, ripped off his apron, and left with us. When I pulled away from the huge house on Englebrook, both he and Dixie were grinning from ear to ear and waving goodbye.\n\nThe next two days were boring as hell.  I had no cases.  Melody had gotten me the job at Grady's just so I wouldn't have to work over the holidays.  She wanted me to rest.  By New Year's eve, I had rested so much I was going crazy. \n\nNew Year's Eve at Barney's isn't the power-drinking, dance-til-you-drop affair the country-western bars stage, and it isn't the polished dinner at eight, and foxtrot 'til midnight the best hotels arrange.  There are usually few drinkers at the bar.  They've all stayed home to watch the big ball drop in New York, or paid upwards of a hundred a person for a few shrimp and a small bottle of champagne at the witching hour.\n\nI knew Carla would be there, and I was looking forward to that.  Melody would be there, too.  She spent all day getting ready.  When I went next door to pick her up, I had to whistle.  She was dressed in a dark green satin sheath that molded itself to her everywhere.  Her breasts rolled easily in some sort of trick bra.  I wanted to bury my head in her cleavage until I turned blue.  About seven, we walked over for dinner.\n\nJoyce was decked out in shiny black pants, a black, strapless, corset thing of he same material, and glistening, black patent heels.  She saw me staring and slowly turned all the way around before she walked over to my table.\n\n\"Well, whatcha think.\"\n\n\"Joyce, you look so great you make me wish I was a woman.\"\n\nShe laughed.\n\n\"Since it's from you, I'll consider that a compliment.  Just wait'll you see Sheryl.  She'll be down in a minute or two.  Gotta New Year's Eve special on tonight.  Two deep-fried chicken breasts with potato puffs.  Sheryl calls it \"Tits and Ass\" 'cause if you line up two of the potato puffs just right, they look like a butt.  I'll have Sandy get one started for you if you'd like.\"\n\n\"Joyce, I'd have your tits and ass anytime.  Oh, and a scotch please.  You got any Glenmorrow left.\"\n\n\"Yep, had two more quarts delivered today, just for my favorite detective.  As for my tits and ass, dream on, Honey.  You don't have the right equipment.\"\n\nShe smiled at Melody.\n\n\"Now, if you're interested, I could talk to Sherry.  She likes you.\"\n\nMelody giggled.  \n\n\"I'll have tits and ass, too, and a glass of white wine.  Oh, and I'm interested, but I don't want to come between you and Sheryl.\"\n\n\"Honey, if we do it right, we'll all come together.  Let me know if you change your mind.  I'll go give Sandy your orders.  It'll be about twenty minutes.\"\n\nCarla joined us a few minutes later.  Her entrance reminded me of the first time I'd seen her.  She almost floated to the table on her stylish silver heels.  The dress she wore was also sliver, well... a little of it was silver.  Shiny, diagonal, silver strips covered her sexy parts.  The rest was flesh-colored mesh that hugged her like stretchwrap.  Joyce whistled when she came over.\n\n\"Damn Carla, don't go outside in that or you'll get arrested.  Oh, I get to play the cop.  I think you need to be patted down, maybe even strip-searched.\n\n\"I'm planning on it, but I know a detective who does it much better than any cop.\"  She grinned wickedly.  \"Of course, a female cop would be a new experience for me.  I might enjoy it.\"\n\nJoyce snickered and repeated her spiel about tonight's special.\n\n\"Already got both and don't need more, especially not more ass.  Does sound pretty good, though.  You have any honey-mustard for the chicken?\"\n\nJoyce walked off to deliver the order to Sandy.  Carla giggled.\n\n\"You know, I'll bet Joyce is a handful.  One of these days, I might just have to find out.\"\n\n\"Oh, thinking of joining the women's club, are we?\"\n\n\"Jase, darling, just wait until you take me to your apartment tonight.  I'm gonna show you everything I've been thinking about since Christmas Eve.  You'll want to sleep for - \"\n\nIt's a good thing she stopped talking, because I'd stopped listening.  Sheryl had just walked into the bar.  You have to understand that Sheryl is a jeans, sweatshirt, and soft-shoe gal.  It wouldn't surprise me if she even slept like that.  This was a different Sheryl.  \n\nHer long, blonde hair hung in soft waves over her bare shoulders. The simple black dress fit her curves like it was painted on, and had I known the artist I would have shaken his hand.  The hem stopped about eight inches from her knee, and revealed a pair of shapely, slender legs clad in black stockings.  I could just see the lace tops peeking out beneath the dress and the effect was incredibly erotic.  She, too, wore black heels, and although she seemed a little unsteady in them, they finished the look of complete sensuality.\n\nI knew I was staring and I didn't care.  So was everybody else.  Sheryl looked embarrassed when she walked over to say hello.\n\n\"What's wrong, Jase.  Haven't you ever seen a woman before?\"\n\n\"Well, yeah, but damn, Sheryl.  I've never seen you like this before.  You're absolutely gorgeous.\"\n\n\"Thanks.  That's what Joyce said too, but I wasn't sure.  I just felt like dressing up tonight for some reason.  I'm glad you appreciate it.  It won't do you any good, but I'm still glad.\"\n\nCarla, Melody, and I had finished our dinner, pronounced it delicious, and were sitting and listening to the music coming from Joyce's portable CD player.  I felt Carla's knee against mine.  It had been too long since she'd spent the night.  I was usually a wreck for a couple days afterward, but it was always worth it.\n\nThe door opened and a huge man in a black suit walked in, looked around suspiciously, and then stood to the side.  The only reason I knew it was Melvin was the snake tattooed on his forehead.  I waved and he grinned back.  Just then, a small, beautiful, silver-haired woman walked through the door.  It was Dixie.  The rhinestones that covered her gold dress glittered back the blue and red light from the beer signs over the bar.  With sensuous grace, she walked to Sheryl and hugged her.\n\n\"See, Sheryl, I told you you'd be pretty.  You really ought to get something besides those old jeans.  You have a great figure and you need to show it off once in a while.\"\n\nDixie waved for all of us to come up.\n\n\"Is this a private party, or can anyone join in?\"\n\nJoyce said it for all of us.\n\n\"Dixie, of course you're welcome, but you're hardly just anybody.\"\n\n\"That's nonsense.  I'm not really any different than you.  I remembered that this week.  I found a group of people who didn't know much about me, but still cared enough to risk helping me.  I won't ever be able to thank you enough, but I thought I should at least let you know I appreciate you all very much.  Ling, would you give me their gifts?\"\n\nThere were five envelopes.  Joyce opened hers and sat down hard on a bar stool.  She didn't say anything.  She just motioned for Sheryl to open hers.  Sheryl landed harder than Joyce did.  \"Two weeks in Greece?\", was all she could say.\n\n\"There's a little island off the coast you two might like to visit while you're there.  It has an interesting history I think you'll enjoy.  I went there myself once and sampled the culture.\"  Dixie giggled.  \"I found it rather refreshing.\"\n\nMy hand was shaking as I opened the envelope.  Two weeks on the French Riviera!  Carla held her airline ticket next to mine.  We had adjoining seats in first class.\n\n\"Before you two go, I'll give you directions to a little beach I know.  The owner is a personal friend of mine.  You'll not be disturbed.\"\n\nMelody shrieked.  \"Rome.  I'm going to a spa in Rome.\"\n\nIt got quiet and stayed that way until Dixie piped up, \"Is this a New Year's Eve party or a wake.  Turn up the music and lets dance.\"\n\nThe little woman's stamina was amazing.  By twelve, my feet were about done in, but Dixie was still going strong.  So was Melody, but in a different way.  She'd introduced herself to Ling and asked him to dance.  They'd been together the whole night.  When Joyce put in a CD of slow R&B, Melody pulled Ling against her.  They kind of stood in one place and rocked back and forth. When the song ended, he looked up at her.  She bent over and kissed him.\n\nDixie sat down beside me and took a sip of her bourbon.\n\n\"Well, looks like Ling's gonna get lucky tonight.  Hope Melody doesn't suffocate him with those big jugs.  He'd be hard to replace.  The way Carla's dressed, it's a safe bet you're going to do a little horizontal mambo yourself.\"  Dixie grinned.  \"If I was a few years younger, I'd join you.\"  She kissed me on the cheek.\n\nThe party broke up about one.  Melody got in the front seat of Dixie's Town Car with Ling, and I walked Carla to my apartment with my arm around her waist.  She snuggled contentedly against my shoulder.\n\n\"Dixie is quite a woman, isn't she?\"\n\n\"Yes, she is.  Melvin say's she's thinking of going to the big bike rally at Sturgis with them this year.\"\n\n\"No.  Dixie rides a motorcycle?  Uh, Jase, you suppose she'll go topless like some of the women do there?\"\n\n\"Melvin found an old Harley in her garage.  It belonged to her husband, but I guess she rode it as much as he did.  Melvin'll be riding the new one she told him to order.  He's a little disappointed that they can't ride all the way, but Dixie says her butt isn't padded enough to ride that far.  Ling will drive them up in a motorhome with the bikes on a trailer.  As for topless, after seeing her dance tonight, it wouldn't surprise me a bit.\"\n\n\"I'm glad she has a bodyguard now.  A bodyguard would have stopped all this from happening. I doubt many people would mess with Melvin.\"\n\n\"Nope.  Just looking at him would scare them off.  He's tickled to death about his job.  All he has to do is live in a mansion and make sure nothing happens to her.   He and Jennifer will get to go all over the place for nothing.  Oh, by the way, Jennifer says Dixie is helping her with her dancing.  Hard to believe that sweet little old lady started out as a stripper, isn't it?\"\n\nI locked the office door and took off my coat.  Carla had already disappeared into the apartment.  A long, shapely leg peeked out from the bedroom doorframe.  A hand appeared.  The hand crooked an index finger at me.  I followed.  When I walked into the bedroom, a naked Carla wrapped her arms around my neck and kissed me.  Her nipples were rock hard and bored into my chest.  I felt her straddle my thigh and begin rubbing herself on my leg.  Just about the time I thought my cock would rip through my pants, she let me go.\n\n\"Jase, remember what I said, back at Barney's?\"\n\n\"About showing me everything you'd been thinking about.\"\n\n\"That's right.\"  She started unbuttoning my shirt.  \"I've been all alone for a whole week, and all I could do was lay in bed at night and dream.  Did you rest like I asked you to?\"\n\nShe was purring like kitten.  I had a fair idea of what was coming.  It was probably going to kill me, but at least I'd die happy. Carla had finished with my belt and was pulling down my zipper.\n\n\"I rested two whole days.  I'm so rested and relaxed I can hardly move.\"\n\nHer soft hands wrapped around my cock and squeezed gently.\n\n\"This doesn't feel relaxed.  It feels all nice and hard.\"\n\n\"It won't be for long if you keep doing that.\"\n\n\"Oh yes it will.\"  She giggled.  \"Vee haf vays uf keepink you zis vay.\"\n\nMy slacks fell around my ankles at the same time Carla dropped to her knees.  She hooked her fingers in the waistband of my shorts and pulled them down.  My cock hung up at first, and then bobbed free.  Carla caught it between her lips.\n\nFor a second, I thought of asking her what she'd dreamed.  I forgot about that, and about everything else, when she pushed me deep into her throat and swallowed.  The shock wave had just about subsided when I felt a slight vibration.  Carla was humming.  The humming got louder.  I didn't recognize the tune, but then I couldn't hear very well at the time.  There was this pounding in my ears.  I hoped it was my heartbeat.  It was either that, or there was an artillery battalion  right outside my bedroom.",
        "The only nerves that were really working were the ones in the head of my cock.  A few others exploded to life after she raked her fingernails over my ass and fondled my balls.  It was about then I started to shake and Carla started to giggle.\n\n\"Like that, do you?  OK, I'll do it again.\"\n\nCarla lied.  She did it over and over.  I lost count after five. \n\n\"God, Carla, stop before I lose it.\"\n\n\"Well..., OK... if you say so... this time.  Take off your shoes and lay down.\"\n\nI'd no sooner hit the mattress than she straddled my chest.\n\n\"I have a little kitty that's missed you so much.  Give the kitty a kiss like a good detective.\"\n\nI didn't need encouragement for that.  Carla's long slender lips were only inches from my mouth.  She didn't even give me time to raise my head.  She just put her hands on the headboard and slipped her legs over my shoulders.  Those lips pressed against my face just as my tongue slipped between them.\n\nI'd experienced Carla like this once before.  It was the first time she visited my apartment. All I could do was hang on for the ride.  I slipped my tongue over the ripples of her inner lips and she groaned.  Carla has very sensitive lips.  She groaned again when I captured one in my mouth and gently pulled.  I rolled it around on my tongue.  Carla shuddered.\n\n\"Damn, Jase, it's been too long.  Just don't quit, Honey.  Oh, God, don't quit.\n\nHer nipples were warm and taut when I touched them with my fingertips.  I circled them with a gentle touch and felt their dark circles pucker into wrinkles and tiny bumps.  Just then, my tongue found her clit and licked slowly beside it.  Carla pushed herself into my face and cried out.  I licked the same place and tugged gently on her nipples.  She jerked and threw her head back.  She was close, and she needed this one to take the edge off her passion.  \n\nHer clit had swollen and I tickled it with my tongue.  Carla moaned and her body began to tense.  I tickled her clit again, and then rasped my tongue over the very tip.  She was rocking into my face so I rapidly licked up and down her lips and made sure to hit her little pearl with every stroke.  When I rolled both nipples between my fingertips and then pulled, Carla exploded in a climax that left my face wet.  As soon as she stopped shaking, she rolled to my side and started to giggle.\n\n\"I see you haven't forgotten how.\"\n\n\"It's like riding a bicycle.  You never really forget.\"\n\n\"Ummm.  I'm so glad you remembered.\"  Carla stroked a fingertip down the center of my chest.  \"You don't, uh... happen to remember anything else, do you?\"\n\nCarla's finger traced a circle around my belly button and moved lower.  She giggled again.\n\n\"It's still nice and hard.  You must be remembering something.\"\n\nI cupped her breast, and rubbed my thumb over her nipple.  Carla shuddered and I chuckled. \n\n\"I think it's all coming back to me.\"\n\nMy hand gently caressed down her side, past the seductive dip of her waist, and over her belly.  I slipped a finger through her warm, wet, swollen lips and rubbed the little soft pad just inside her entrance.\n\nHer voice was deep, soft, and breathy.\n\n\"You remember everything, don't you.\"\n\nCarla shut her eyes and pulled me to her mouth.  Her kiss was softer now.  The urgent need she'd felt had been eased by the first orgasm.  The next would be slow and sensuous, as slow and sensuous as her lips and tongue were right then.\n\nI broke the kiss, and move to kneel between her open thighs.  They were silky soft when they brushed my sides. I rested my weight on my elbows and kissed her again.  Her breasts were soft mounds swollen tight with the heat of passion, and I gently massaged them as Carla made love to my lips with her tongue.\n\nMy cock rested in the top of the cleft of her sex, and shortly, Carla began to rub herself against it.  She was being greedy.  I moved away from her and sucked her right nipple into my mouth.  I was going to tease her until she was ready to scream.\n\nI bit gently on the long, stiff nipple and heard Carla gasp.  Her arms wrapped around my back and her nails lightly raked me.  I licked the little indentation at the tip and pinched again.  Those nails dug deeper.  I knew I'd have red marks from my shoulders to my ass before the night was over.  The other nipple got the same soft pinch and firm lick and I felt her nails again.\n\nGently, I pulled myself upright.  Carla lay in front of me, her thighs open and her sex parted and pink.  I caressed the satin inside of her thigh all the way to her damp, pouting lips.  Carla spread her thighs wider.  My hands slipped up and over her belly, around her hips, and I used my own nails to stroke back up to her knees.  I slid a hand down each of her inner thighs again, and separated her outer lips at the end of the caress.  My thumb rubbed just above her clit.  The other caressed the ripples of her swollen inner lips.  Carla rolled her head to the side and moaned.\n\nI leaned over and kissed a little circle around the indentation of her belly button and then kissed my way down to her satin slit.  Carla grabbed the back of my head and tried to force me lower.  She stopped when I slipped two fingers inside her, curled them up, and found the little peach I knew was there.  Within the first few firm strokes, Carla released my head to cup her own breasts, and arched off the bed.\n\nShe had a nipple in each hand, and was lifting her breasts from her chest.  She used her fingers to roll the nipples.  I used my thumb to massage her clit as my fingers worked that little pad of flesh.  I thought Carla would throw us both off the bed.\n\n\"Jase. For God's sake,  Fuck me before I go crazy.\"\n\nShe was so wet and so wild I pushed all the way inside her with the first thrust.  I tried to control the depth and speed of my strokes, but Carla wouldn't let me.  Her hips were rocking quickly over my length and bending my cock down with each stroke.  When she did that, the sensitive spot just under the head rubbed against something and the feeling was incredible.  I gave up and matched her speed.\n\nCarla released her nipples, wrapped her arms around my back, and pulled me down against her.  I felt the soft pressure of her breasts against my chest as she wrapped her legs over my back.  Carla was almost swinging beneath my body.  Her thighs were spread by the position to the extent that my balls slapped against her butt each time I pushed into her.\n\nThe sounds of panting and the slap of flesh against flesh filled the room.  When I looked at Carla's face, I saw the half-closed eyes and slightly parted lips of animal lust.  I kissed those lips and pushed my tongue inside to find hers.  Her mouth was warm and wet and had a sensuous stickiness that sent a thrill all the way to my cock.\n\nI slipped my hand between us and felt for Carla's little clit.  She liked little rubbing circles and cried out when my finger traced the first lap.  Her body banged into me and she started to quiver.  Damn, I love it when she does that.  That little tingling sensation drives me right over the edge.  I just had to hold on until she went too.  That made the sensations all the more exquisite.\n\nI knew it wouldn't be long.  I quickened my little circles and sucked her tongue between my lips.  Carla's muffled cry exploded across my cheek and I felt her nails again. Just a few more little circles around her button set her off.  She ripped her face away from mine and cried out.  Her legs gripped me as she pushed herself back into my thrusts.  I started over the edge when she gasped and cried out again.  After that, all I remember is trying to keep up with her lunging hips and the sensation of the spurts from my cock.\n\nSlowly Carla stopped thrusting herself over me.  I felt her relax and start to stroke my back.  She pulled me down on top of her and held me there for a few minutes.\n\n\"I love feeling you on top of me, Jase.\"\n\n\"I'm not too heavy?\"\n\n\"No.  It's like you're covering me to keep me safe.\"\n\nI felt her hands slip down and cup my ass.  The nails dug in slightly as she squeezed.  I thrust my softening cock back insider her when I jumped.\n\n\"See, I told you I had my ways.\"\n\n\"Well, after that, it's not going to stand up for a while.  We might as well get some slee-\"\n\nCarla had just reached around and cupped my balls.\n\n\"I don't think so, not after I've waited a whole week.\"\n\nShe pushed me off her and grabbed my cock as soon as I was on my back.\n\n\"I'm not letting this guy go until he's done his job a few more times.\"\n\n\"A few more times?  Carla \u2013 \"\n\nNo matter how hard I try, I can't be logical with my cock in Carla's mouth.  It's damn frustrating.  Well, it's not exactly frustrating.  It's just that sometimes I wish she'd stop and listen to reason.  After all, I'm only human.  Carla expects me to be like that fucking mechanical rabbit on the battery commercials and keep going forever.  She's an expert at seeing that I do.  It usually works for the first four times or so.  Well..., OK... for the first two.  After that it takes a little longer.  By morning, I'd be shriveled up like a peanut. \n\nI looked down into her sparkling eyes.  They were smiling back at me as she bobbed her head up and down.  No doubt about it, I thought.  This was going to be a holiday to remember.  No, I wasn't only thinking about the gorgeous woman who'd just wrapped her breasts around my cock.  It was more than that.  We'd put the bad guys in jail, I'd made some new friends, and... \n\nOh shit, her eyes were all dewy again and she was crawling on top of me.  I felt her reach between us and lift my cock.  It wasn't all that hard yet, but somehow, she managed to stuff it in there.  Carla sat up and started to work her hips in a circle.  Where the Hell had she learned to do that?\n\nAs I felt myself getting stiff again, I took comfort in the fact that Carla was human, too, and she'd have to sleep sometime.  Until then, I'd just do my best to hold up my end... or was it... hold up her end, or...oh, Hell, you know what I mean.\n\n* * * * *\n\nThanks for reading this work.  Please vote to indicate how much you enjoyed it, and send feedback if you can spare the time.  Your votes and feedback are the only way I will know how much you enjoyed my effort, and furnish the only means to improve my writing. \n\nThis is the fourth in the adventures of Jase Conford, a Nashville, Tennessee private investigator.  His other stories are also published on this site. \n\nThanks again, \nRonde. "
    ],
    "authorname": "ronde",
    "tags": [
        "joyce sheryl",
        "vicki john",
        "blouses bras",
        "sound mind",
        "woman who'd",
        "tongue carla",
        "store security",
        "put mother",
        "woman foot",
        "she'd enjoy"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-case-of-dixies-christmas"
}