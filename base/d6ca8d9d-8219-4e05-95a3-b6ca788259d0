{
    "title": "My Secret Service Ch. 05",
    "pages": [
        "Missy's question hung in the air. \n\nMy first reaction was to panic. Had anyone else heard her? \n\nWe were in a room crowded with people drinking Jim's booze and eating his food, and they were chattering like people who were having a good time on someone else's dime. A quick glance around didn't reveal anyone paying attention to me, though I'm sure there were eyes on the tall blonde with the enormous rack in the tight black dress. \n\nMy next reaction was to lie.\n\n\"I don't know what you are talking about,\" I said, trying to sound authoritative.\n\nMissy looked at me for a moment. I could tell she didn't believe me.\n\n\"Listen, this isn't going to work out very well if you lie to me,\" she said. \n\nAs I opened my mouth to double down on my lie, someone called Missy's name from across the room. She lifted her hand and waved an acknowledgement, causing her boobs \u2014 which were in my face \u2014 to heave. I couldn't help but stare.\n\nHer attention snapped back to me.\n\n\"We'll talk later. You need to decide right now if you are going to continue to lie to me or not.\"\n\nAnd with that, she was gone.\n\nA few minutes later, Jim approached me as I stood on the edge of the crowd. \n\n\"I'm going to walk over toward my wife,\" he said. \"When I get there, call my phone.\"\n\nI did as instructed, stepping into a corner of the room to make my call.\n\n\"Les, buddy, what's going on?\" Jim said when he answered.\n\n\"Umm. This is Will. You told me to call.\"\n\n\"Hang on Les, I can't hear you. Let me step outside.\"\n\nI could see Jim walk through a set of doors and exit the room.\n\n\"Will, I want you to wait 5 minutes, then go out the doors opposite of where I went out,\" Jim said. \"follow that hallway and make a left at the junction. There's s storage room about halfway down that second hallway.\"\n\nI hung up the phone and tried to estimate the five minutes.\n\nWhen I reached the storage room, it was unlocked. I let myself in, to find Jim sitting in one of the venue's extra chairs, his pants around his ankles.\n\nHe was stroking his cock, which was already wet with precum.\n\n\"We don't have much time, so I started without you,\" he said. \n\n\"That's OK,\" I said as I watched him. \n\n\"So, are you wearing panties tonight?\" he asked. \"I didn't call to request them because I didn't know if we would get a chance to play.\"\n\nI unzipped my pants to reveal a white lace thong. \n\n\"You little slut,\" he said, a big smile breaking across his face. \n\nI left my pants undone as I dropped to my knees between his. My dick was stiffening, and I could feel the precum starting to leak onto the lace.\n\nAs my knees hit the floor, Missy's words flashed through my mind. But I pushed them away. What good would it do to worry about it now, with this big, hard dick in my face?\n\nI pushed Jim's hand away and replaced it with my own. This wasn't going to be a blowjob as much as it was a handjob with my lips around the head of his cock. He wanted to come and I wanted to eat his cum.\n\nJim groaned as I pumped his dick. \n\n\"Oh, yeah. That's it. Make me shoot.\"\n\nI moaned around his cock.\n\n\"Tell me you want it,\" he said. \"Tell me you came here tonight to suck my dick.\"\n\nI moaned again. I knew he was close and I wasn't taking my mouth off his hard dick.\n\nJim's shaft swelled and I heard his breath catch in his throat. His hand found the back of my head and pushed me down on his shaft until my lips touched my fist at the base of his cock. \n\n\"Yeeeeeeeaaaaaaaaaahhhhhhhh,\" he moaned quietly as his filled my mouth with his seed. I swallowed, a small shiver running through my body as his thick cum slid down my throat.\n\nJim quickly recovered, and I backed up to give him room. He stood and tucked his still slick cock away and zipped up. \n\n\"Wait here a few minutes and then go back in the way you came. And, if I haven't told you, thanks for coming tonight.\"\n\n\"No, thank you for coming tonight,\" I said.\n\nAfter he slipped out of the room, I contemplated jerking off right there. I could still taste him in my mouth and our \"quickie\" had me ramped up. But just as I started to touch my dick through my panties, a member of the wait staff walked by on the other side of the door. I didn't hear him until he yelled at a colleague down the hall and it startled me, breaking the mood.\n\nI did as Jim had instructed and rejoined the part just as he was wrapping up a toast to everyone that had made his business grow. Jen stood on one side of him, while Missy was on the other. \n\nI grabbed a glass of champaign from a waiter and joined in, replacing the taste of Jim's load with the bubbly. \n\nNot long after, as the party started to wind down, I found myself sitting at a table with Jen and Missy. They were giggling when I walked up and they invited me to sit down. We talked, mostly gossip about the others at the party, as the crowd began to dwindle. \n\n\"Will, do me a favor and walk Missy to her car, will you?\" Jen asked. \"I know this is a good neighborhood, but it just doesn't feel right sending a beautiful woman in a tight dress off by herself into the night.\"\n\nOf course, I agreed.\n\nThere were two unopened bottles of wine on the table and Jen insisted we take them.\n\nI followed Missy outside, managing to pay attention to where I was going almost as much as I watched her wide ass sway in that tight dress.\n\nOutside, Missy took my arm and I escorted her the half-block to the garage where we'd both parked. Her car was on the second level, mine on the third.\n\nWhen we reached her car, Missy unlocked it and turned to me.\n\n\"I'm ready to have that talk, if you are willing to stop lying to me,\" she said. \n\nI didn't know what to say, so I just nodded.\n\n\"Good, how about now? My apartment isn't far from here.\"\n\nI agreed, and she gave me directions before slipping into her car and driving off. I walked up to the next level and followed her driving directions.\n\nBut could I follow her other commands? We were about to find out.\n\n* * * * *\n\nMissy was waiting just inside the lobby of her building, a two-story former factory on the edge of downtown that had been converted to apartments. She let me in and we made our way up to her second-floor unit. Again, I tried not to concentrate on her ass, now inches from my face, as we climbed the stairs.\n\nOnce inside her loft, she stopped and turned to me.\n\n\"Let me get into something more comfortable and I'll meet you in the living room,\" she said. \"Why don't you open this wine? There's an opener in the drawer left of the fridge and glasses are in the cabinet above. Also, will you unzip me?\n\nShe turned around and lifted her hair away from her neck. My hand shook a little as I grabbed the zipper and pulled it down, revealing the back of a black lace bra.\n\nI opened the wine, poured two glasses, and sat on the couch. All the while, the questions that had been running through my mind most of the night continued to spin through my mind.\n\nHow did she know. How much did she know? What did she want? Was this blackmail, against me or Jim? How was I going to get out of this?\n\nAs I stewed, I didn't the bedroom door open and Missy's bare feet pad across the wood floor. I jumped a little as she came up beside me. \n\n\"Don't worry, Will, I don't bite,\" she said with a smile. \"Well, not hard.\"\n\nShe'd slipped on a short while terry cloth robe that barely came to her mid-thigh. She took one of the glasses and tucked herself onto the other end of the couch.\n\n\"Listen, I don't want you to worry,\" she said. \"Your secret is safe with me. I like you. I just want you to be honest with me.\"\n\n\"OK.\"\n\n\"So instead of telling me how long you've been sucking my bosses' dick, why don't you tell me how you got started?\"\n\nSo I did. I started to tell her about the night in the hot tub, but she stopped me.\n\n\"So you saw Jen naked? Ohmygod, does she look as good as naked as I imagine?\"\n\nI nodded. \n\n\"Hey, pal, don't look at me like that,\" Missy said. \"You aren't the only one that plays for both teams.\"\n\nI must have had a funny look on my face, because Missy started to giggle, which got me started. Soon we were both laughing like we'd just heard the funniest thing in the entire world.\n\nAs Missy steered the conversation back to my cocksucking, I suddenly felt more relaxed than I had in ages. Something told me to trust her, to tell her everything and not hold back.\n\nSo I did. About my college roommate. About telling Jim and him asking me to blow him. About how Jen didn't know and how we found ways to be alone.\n\n\"So, you do suck his dick in his office!\" she said. \"I knew it!\"\n\nMissy was squirming a little as she sat, causing the hem of her robe to ride up on her smooth thigh. When she leaned over to refill her wine glass, I got a peek at her tits, hanging free underneath. My dick twitched at the sight.\n\n\"I wonder what Jen would say if she found out?\" Missy asked.\n\n\"I don't think she has much room to talk,\" I replied.\n\n\"What do you mean? Is she having an affair?\"\n\n\"Sort of.\"\n\nMissy cocked her head and gave me a quizzical look.\n\n\"Tell me.\"\n\nI took a deep breath. In for a penny, in for a pound, I thought.\n\n\"I service her, too.\"\n\nMissy's jaw fell open. If she had any inkling, she was a hell of an actor.\n\n\"Shut. The. Hell. Up. You do not.\"\n\n\"Hand to God.\" \n\n\"Well I definitely have to hear this,\" she said.\n\nI told her about Jen's desire for more oral attention, especially after sex with Jim. She hung on every word as I described how Jim had nearly caught us recently and some of our other liaisons.\n\n\"And they don't touch you or anything?\" \n\nI shook my head no.\n\n\"Well, that doesn't seem fair.\"\n\nI shrugged.\n\n\"I get what I need out of it,\" I said.\n\n\"I have just one more question,\" Missy said. \"Do you eat pussy that isn't full of cum?\"\n\n\"I do.\"\n\nMissy stood, undid the belt on her robe and let it fall to the floor. All she was wearing underneath was a tiny black mesh G-string that was matted to her smooth skin. Her breasts hung slightly \u2014 but not as much as you might expect for real tits of that size \u2014 with smallish light pink areola and stiff nipples. I had never seen a more beautiful, sexy woman in my life.\n\nShe took my hand and led me to the bedroom. \n\nShe turned to kiss me and my hands found her hips and the thin material of her panty strings. As we kissed, I felt her trying to slip them off.\n\nI pulled back.\n\n\"Let me take care of that,\" I said.\n\nShe positioned herself on the bed and climbed in, too, still wearing my clothes. \n\nI left a trail of kisses up her thighs before kissing her pussy through the thin material. She was wet and open and I could taste her through the mesh. \n\nShe moaned as I kissed her and I could tell that she was done with the foreplay.\n\nI pushed her panties to the side and let my tongue push into her wet folds. She sighed with contentment as the tip slipped up her channel and brushed across her clitoris.\n\n\"Ahhhhhhh, yes,\" she moaned.\n\nI worked her clit briefly, before letting my tongue explore her hole. As I pushed inside her, she grabbed the back of my head and pulled me tight, my nose pressing against her button.\n\n\"That's it,\" she said.\n\nWe found a rhythm and I assumed she would ride it to an orgasm. Put after just a few minutes, she pushed me away.\n\n\"I changed my mind,\" she said. \"I want your dick.\"\n\nI jumped up and began shedding my clothes. Just as I dropped my pants, I remembered what was underneath.\n\n\"Are you wearing PANTIES?\" she said. \"What's that about?\"\n\nSo I told her, about Jen's panties and Jim and how he liked me in them when I sucked his dick. As I talked, Jen pulled me onto the bed, so that I was on my knees between her open legs.\n\nShe reached up and gently ran her fingernails over my panty-covered erection.\n\n\"So did he tell you to wear them tonight?\"\n\nI shook my head.\n\n\"Truth is, I like them. Clearly, I like having secrets that are all but out in plain sight,\" I said. \n\nShe pulled the material down, hooking it under my balls and pulled me to her. As my cock slipped inside her tight, wet pussy, I thought I might come on the spot.\n\n\"Holy shit,\" I exclaimed.\n\n\"I hope this is a worth substitute for my bosses' dick in your mouth,\" she said.\n\nI had to concentrate not to blow my load as I answered.\n\n\"I got his dick. In a storage room, after we both slipped away from the party.\"\n\nMissy pushed me away and my cock popped out of her heavenly pussy.\n\n\"You dirty little slut! I can't believe it!\"\n\nI thought I might be trouble.\n\n\"I'm sorry. I was going to tell you, but, one thing led to another...\"\n\n\"Shut up and fuck me.\"\n\nI wish I could say that I pounded the hell of Missy's tight pussy that night, but that would be a lie. I managed to hold on just long enough for her orgasm to start before I came harder than I'd ever come before. I think she enjoyed it, God knows I did.\n\nAfter we'd caught our breath, Missy pushed my head toward her crotch.\n\n\"Clean me. Please.\"\n\nI obliged, licking the combination of her juices and my come from her pussy. After she was clean, I sucked her clit between my lips and worked it until she came again, grinding her pubic bone against my face.\n\nAs I came up from air, I tried to wipe away the sticky mess from my face, but Missy didn't let me. She pulled me in for a kiss, pushing her tongue into my mouth.\n\nWhen we broke the kiss, she grinned.\n\n\"Damn, we do taste good.\"\n\nIt wasn't long before the combination of the wine, the emotions and the sex took it's toll. I drifted off to sleep, my face in Missy's beautiful breasts.\n\n* * * *\n\nWhen I awoke in the morning, Missy was gone. \n\nThere was a note on top of my clothes beside the bed.\n\n\"Will, thanks for the hottest night I've had in forever.\n\n\"P.S. Please don't tell anyone you were here. I'll explain later.\"\n\nI got dressed and let myself out, making sure to lock the door behind me.\"\n\nAs I drove home, I could feel this goofy grin spreading across my face.\n\nI'd sucked my bosses' cock not 150 feet from a roomful of people that knew us both and then confessed all my sex secrets to the most beautiful woman I'd ever met, before she took me to bed. \n\nHow could my life get any better? Or any more complicated? \n\nIf my sex life with my neighbors had been a high-wire act before, what the hell was it now?\n\nI knew I couldn't wait to find out."
    ],
    "authorname": "HConway",
    "tags": [
        "bisexual male",
        "blowjob",
        "panty play",
        "gay sex",
        "oral sex",
        "bbw",
        "creampie eating",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-secret-service-ch-05"
}