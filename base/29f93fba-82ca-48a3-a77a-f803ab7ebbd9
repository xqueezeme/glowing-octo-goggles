{
    "title": "Carly's WMAF Fantasy Pt. 20",
    "pages": [
        "I can't believe I've done 20 chapters of this story and still have so much more to go. Thanks again for the words of encouragement. The comments (both public and private) are super encouraging and I love the ideas (even the ones I don't incorporate). I don't know if there's another 20 to go but we'll see. \n\n*****\n\nI woke up the next day to a short text message pinging on my phone.\n\nLouise: I had a wonderful time last night. It wasn't what I expected. Thanks.\n\nI smiled to myself, grateful that we'd hit it off. It was weird texting back as I had that sort of excited nervousness you get when you're in the early days of a relationship. I hadn't felt that feeling in a long time. Not since Sasha, I guess. Things had happened too quickly with Carly and Kyrsten and I hadn't even been aware of the escalation in my feelings. It was different with Louise.\n\nMe: It was wonderful for me as well. Can I see you again? Maybe Tonight?<br>Louise: Mr. S. So eager! Don't you have plenty of female company?<br>Me: I'm one or two short ;)<br>Louise: Tonight it is. But remember... I'm a good girl \ud83d\ude18\ud83d\ude0f\ud83d\ude07\ud83d\ude07\ud83d\ude07\ud83d\ude08\n\nWhen I set my phone down, I glanced over at my sleeping fiance. Her long black hair cascaded down her naked back as she lay sprawled across my bed. She was softly snoring on her stomach and I stroked my fingers down her spine, tracing the ridge with a gentle stroke. She sputtered something groggily in her sleep, but otherwise didn't move as I stood to get dressed. \n\nI wrote her a short note with some instructions and left for work. \n\nJust as the day before, Victoria was completely professional at the office. She'd dressed much more appropriately, wearing a tight, form fitting but full-coverage dress that was both breathtaking and oddly conservative. The material was soft and thick but I could just barely make out the outlines of the garter belt she was wearing underneath. Lunch arrived quickly and I ordered a salad for Victoria and I. It wasn't uncommon for us to have working lunches but this one had an air of sexual tension to it that was almost tangible.\n\n\"Did you enjoy yesterday?\" I asked, watching the beautiful, curvy brunette as she daintily ate her meal. \n\n\"Yes, Sir. Very much,\" she said with a twinkle in her eye.\n\n\"Did you think that your first time would be like that?\"\n\n\"I... No... I didn't. And, truthfully, I'd have been appalled if you'd told me that was how my first time would be when I was in high school.\"\n\n\"I realized I don't really know much about you, Victoria. You're 25, right?\"\n\n\"Yes, Sir. I was born in South Carolina but my Dad was military and we moved around quite a bit. Ended up at Norfolk for awhile before Dad got a teaching job in Annapolis. I did my four years in the Navy but I knew it wasn't for me.\"\n\n\"You were in the Navy?\"\n\n\"Yes, Sir. Is that surprising? Did you not remember that from my resume?\"\n\n\"I guess I was too busy trying not to mentally undress you.\"\n\nShe laughed but then frowned, \"I know that's not true. You barely noticed me until recently.\"\n\n\"Sorry... I had a girlfriend at the time,\" I said.\n\n\"Yeah, you definitely can't go hitting on cute girls when you have a girlfriend,\" she said mischievously. \n\nWe laughed, \"I don't know. Until Carly, I really didn't look at women so...\"\n\n\"Lecherously?\" she asked with a smile.\n\n\"How about... aggressively,\" I said. I put my hand on her knee and slid her dress up, revealing the garter belt underneath. And also showing a smooth, shaved, unobstructed cunt glistening with moisture. \n\n\"I like aggressive, Mr. S,\" she said. I kissed her softly, tasting the sweet lips that tenderly reciprocated. Compared to the soul shattering kisses that Carly laid on me, or the eager, not so subtle promises that Louise's lips and tongue had made the night before, this was so different. This kiss promised devotion and submission. Nothing more. Nothing less. She surrendered herself into me with a sigh. \n\nAs I pulled away, she didn't complain and whine. Victoria simply smoothed her skirt and said, \"Thank you. When will we be able to meet up after work again? I really would like to but I'm not pressing. I know you are very busy... uhmm... juggling.\"\n\n\"I've got a commitment tonight. I'm taking Carly's little sister to get a tattoo. And then a date with her roommate.\"\n\nShe laughed again, \"OOoh... what kind of tattoo?\"\n\nI paused. It wasn't exactly the kind of tattoo you told people about. But I'd already decided that I was going to embrace honesty in my relationships. When things were as complicated as I'd managed to make them, further adding complexity with layers of falsehood just felt like a bad idea. \"It's a tattoo to mark her submission.\"\n\n\"You're sleeping with your fiance's sister?\" I nodded and she asked, \"Got a bit of yellow fever, Mr. S?\"\n\n\"What? No... it's just...\" I noticed she was smirking at me and I relaxed, \"They both manage to push my buttons.\"\n\n\"By being submissive?\"\n\n\"Yes, actually.\"\n\n\"And getting tattoos? You find that sexy?\"\n\n\"On some girls...\" I said with caution.\n\n\"What about me? If you saw a tattoo on me, what would you think?\"\n\nI paused, \"I've already seen that you don't have one.\"\n\n\"What would you think though? What if you saw a good, Christian girl like me with a tattoo right here?\" she said and she traced a line from the outside of her breast down to the top of her hips. I tried to imagine it.\n\n\"What would it be of?\"\n\n\"My favorite bible verse,\" she said, \"Song of Solomon seven, ten. 'I belong to my love and his desire is for me.' \"\n\n\"I think I'd like that?\"\n\n\"Is that better or worse than my second favorite verse on the small of my back?\"\n\nI laughed, \"What would that be?\" \n\n\"My beloved thrusts his hand through the hole and my bowels are moved for him,\" she said with an absolutely wicked smile.\n\n\"That can't be real,\" I said incredulously.\n\n\"Song of Solomon five, four,\" she said holding up her fingers in the \"Scout's Honor\" sign. \"So which is hotter, Mr. S?\"\n\n\"Uhh... both... I don't know... they're both... uhmm... yeah,\" I said, feeling the heat in the room. What was with the girls leaving me flustered today?\n\n\"Hrmm... I'll think about it. Can I come tonight and make a decision later?\"\n\n\"Wait... you want to get a tattoo tonight? That's a little quick, Victoria,\" I cautioned. Despite knowing her for several years, I couldn't help but feel like the little warning klaxon at the back of my mind was firing off.\n\n\"I'm sure it feels like that to you but I've been thinking about this my whole life and I've been thinking about you for the last two years. I know all that I need to know. Besides, it's not like I'm getting something like, 'Jay's Sex Slave' or something.\"\n\nShe was surprisingly close with what I had planned for Sherry. But she was right. A tattoo like she described wasn't actually that big a deal in the abstract. She wasn't getting my face on her back or anything. Just a verse from the most popular book on Earth. I nodded and she grinned.\n\n\"Thank you, Mr. S. You'll love it. I'm sure,\" she whispered huskily. \n\n\"I think I need a little relief, Victoria. Get under my desk,\" I said and she eagerly obeyed. Her technique wasn't flawless like several of my other girls but that was to be expected. What she lacked in inexperience she attempted to make up for in enthusiasm and attention to detail. I watched her study me, taking the shaft into her mouth slowly and carefully. Listening to my breathing and testing my reaction. \"Good girl,\" I told her and she cooed softly, emboldened by the encouragement. I snapped a quick picture of her and texted it to Carly.\n\nMe: You were right about Victoria.<br>Carly: Your cock looks so big in her tiny little mouth, Master.\n\nHer reply came so quickly that I was sure she was watching or reading something on her phone when I texted. Curiosity evaporated from my mind, however, as Victoria sunk down on my cock again, pushing into the back of her throat. She sputtered and coughed, pulling off my cock with a small frown of disappointment. \"It takes time to learn to deep throat. You'll get there,\" I said encouragingly. She nodded and wiped the spit from her face, smearing her lipstick slightly before resuming her task. Inspiration struck me and I gestured for her to continue while I picked up my phone. \"Daphne? Hey. Can you come down here for a minute please?\"\n\nDave's assistant and my personal office fuck toy sauntered in a few minutes later. She was dressed to kill with a tight, short black dress that was very close to a sexy cocktail dress. She always dressed that way at the office. She figured out exactly where the line was and made sure to stand directly on it... sometimes even metaphorically leaning over. That was what she was doing today. She walked in and paused for a moment, seeing the young woman sucking my cock under my glass topped desk. She couldn't recognize Victoria from that position and it amused me to watch her try to figure out who it was.\n\n\"Yes, Sir?\" she asked, hands behind her back and tits poking out. \"What can I do for you?\"\n\n\"Let's have a race. If you cum before I do, I'll give you Friday off. If you cum after I do, you owe me a favor.\"\n\n\"What kind of favor?\" she asked, already pulling up her dress and displaying her smooth, exposed cunt. \n\n\"Don't worry... you'll like it. But it'll be an all weekend kind of favor and you'll be very tired afterwards.\"\n\nShe nodded and smiled before flopping down on the chair and draping a leg over the edge. For the next couple minutes, not much was said and only the heavy breathing in the room broke the silence. Victoria, inspired by the challenge, really started working hard, sliding her tongue over my cock. Daphne was even more motivated and worked hard herself, stroking her clit and pinching her nipple through her dress lightly.\n\nDespite Victoria's inexperience, the lewdness of Daphne's actions was a hell of a visual stimulant. When Daphne dipped her finger into her gaping cunt and moaned softly, it sent me over the edge and I erupted into Victoria's hungry, inexperienced mouth. To her credit, she didn't sputter this time, having readied herself. She sucked the cum out of my cock like it was her favorite dessert, murmuring happily as she caused me to nearly black out from sensory overload.\n\n\"You can stop, Daphne. You lost,\" I said firmly. Daphne looked incredulously at me then hung her head submissively. The blonde remained a bit of an enigma to me. Defiant, ambitious and generally domineering. And yet somehow, with me, she was so obedient. She didn't eat and breathe submission like Carly. It didn't define her like Victoria. But it was still there. Under the surface. \"Good girl, Daphne,\" I told her as she straightened her dress and smoothed the slightly rumpled front around her breasts. \"You can cum tonight if you'd like. Now back to work with you. I'll let you know when I'm going to collect on that favor,\" I said. She gave Victoria one last curious look before departing without another word. The thought that she'd spend the rest of the day aroused and frustrated was very enticing all by itself.\n\nI helped Victoria up. She still had a little cum on her lips which she daintily wiped off and slurped up happily. \"That was surprisingly good, Mr. S. Best I've ever had... although I haven't had many.\" \n\nI laughed, \"How many men have you tasted the cum of you silly little slut?\" I asked her, cupping her chin in my hand.\n\n\"Just one, Sir. Liam Davies. He was a cute exchange student who came over my senior year that I gave a hand job too.\"\n\n\"You've never sucked a cock before? At all?\"\n\nShe shook her head and I continued, \"Well that was pretty great for a first time. You should be proud.\" She stood up straighter and smiled happily. \"Now go get your face cleaned up. I can't have my secretary looking like a used whore out there, can I?\"\n\n\"No, Sir. Thank you, Sir. I enjoyed that.\"\n\n\"You enjoyed being watched while you serviced me? While you sucked my cock like a greedy slut?\" I asked and she nodded, shuddering slightly. \"Good. I'll be sure to let you show off your talent to my other women as you improve.\"\n\n\"Thank you, Mr. S. I knew I could count on you,\" she said and scampered off, presumably to the restroom to fix her ruined lipstick. \n\nAfter work, I escorted Victoria down to a cab and over to Goddard Hall. She was quiet, alternating between picking at her clothes and looking out the window. \"You okay?\" I asked softly. \n\nShe looked at me and smiled a tight smile before tucking her hair behind her ear. \"Just in my head,\" she said.\n\n\"About meeting the girls?\"\n\n\"Yeah... and, you know, getting into a pretty weird lifestyle.\"\n\n\"Was that lunchtime encounter too much?\"\n\nShe put her soft hand on mine, \"No... No, definitely not. That was hot, Sir. It's just... I wonder about the dynamic with the girls. You have to be spread pretty thin and I see you so much more than the rest of them. Will they be jealous? Angry? Territorial?\" \n\n\"The girls aren't like that,\" I said, trying to reassure her.\n\n\"Girls can be pretty catty and bitchy, in my experience, Mr. S.\"\n\n\"Some girls can. Especially Sherry that you'll meet today. But we've found a good equilibrium and I'm sure you'll find how you fit in.\"\n\nShe nodded uncertainly and looked back out the window. I stroked her back and she shivered, \"You sure about getting a tattoo. It wasn't my intention...\" \n\n\"Definitely, Sir. I love the idea and thought about doing it before.\"\n\n\"Good,\" I said. We went upstairs, drawing stares as usual. When I knocked on the door, it swung open to reveal Starla and Louise standing there in their tight little yoga shorts and sports bras. While the two were built completely differently, I wasn't sure, in that moment, which one I wanted more. Starla's huge tits strained at the bra that was fighting valiantly to hold back their weight. Louise, on the other hand, had the nice, tight, athletic body that made you wonder what she was like in bed. I realized, not for the first time, that I was definitely going to fuck her. And soon.\n\n\"Hey, Mr. S,\" Louise said.\n\n\"Hello girls. You both look very lovely. You heading out to tease boys or coming back from it?\" I asked as I stepped inside. Starla had her eyes cast down, unable to meet my gaze.\n\n\"We're headed out now. It's leg day so we'll have ALL the boys watching today,\" Louise said with a big grin. What a delicious little cock tease she was! I watched as the two girls walked out, both shaking their asses with the knowledge that my eyes were glued to those beautiful buttocks. \n\n\"You certainly do have a way with women, Sir. They're very pretty,\" Victoria said. I glanced at her, noting her deadpan \"secretary\" voice. She caught my eye and silently answered my question with a not so subtle lick of her lips. \"VERY pretty,\" she repeated with much more emotion. I grabbed her hand and pulled her to me, giving her a thorough kiss.\n\n\"She's not the only pretty one. Plus Carly's sister is smokin hot too.\" I smirked at her and gave her a little smack on her ass causing her to jump and yelp. \n\nThe bedroom door opened and Sherry walked out, unaware of our presence. She was wrapped in a short towel, apparently having just gotten out of the shower. She was drying off her hair and humming some terrible k-pop song when Victoria cleared her throat. Sherry must have jumped halfway to the ceiling and screamed. When she saw me grinning at her, she calmed down, \"You scared me, Master. I was just getting...\" she rambled but I cut her off with a raise of my hand.\n\n\"Drop the towel you dumb cunt,\" I said harshly. The change in her was instantaneous. Where she'd been normal and casual a moment before, now she was in submissive slut mode. She paused for the briefest of moments, questing eyes flicking over to Victoria before shrugging the towel off. Her body was just as hot as I remembered, smooth skin and big, firm tits made her ridiculous hourglass proportions the third hottest thing about her. She stood there, slightly shaking from the cool air on her still damp skin. Her long hard nipples stood out proudly making the shining dumbbell piercing all the more prominent. \"You're getting the rest of your decorations tonight, slut.\"\n\n\"Yes, Master,\" she said with utter servitude.\n\n\"Did you have plans tonight?\"\n\n\"Hideo was taking me to dinner, Master,\" she said.\n\n\"Hrmm... On your knees,\" I told her and she dropped swiftly down and looked up at me.\n\n\"How long has it been since you've had an orgasm?\"\n\n\"Weeks, Master,\" she said. The utter despair in her voice made my cock ache. I fished it out and shoved it down her throat, listening to Victoria's gasp of surprise as the small Asian girl took the full length down her throat easily.\n\n\"Sherry is the most pathetic of my sluts, Victoria. Pretty much the lowest of the low as far as I'm concerned.\"\n\n\"Did she mean Hideo from the office, Mr. S?\"\n\n\"Oh... yeah... I hooked them up awhile ago. But she's not allowed to do anything with him without permission. And I haven't given it,\" I yanked Sherry off my cock and snapped at her, \"Have you kept your holes empty for me, bitch?\"\n\n\"Of course, Master. Hideo doesn't even ask anymore. He knows I'm not for him.\"\n\n\"Good girl,\" I said and slammed her back down on my cock causing her to hum in content satisfaction. I took my phone out and snapped a couple of pictures before texting them to Hideo.\n\nMe: I'm taking Sherry out tonight. She'll need some comfort when I'm done with her so you can wait here tonight for her.\n\nI didn't wait for a response, instead roughly fucking Sherry's accomodating throat brutally. Victoria had reached up under her dress and was teasing herself gently as she watched. \"You like watching, baby?\" I asked. She nodded as I kept pounding the kneeling slut at my feet. \"My work wife watching me fuck my fiance's little sister?\" She nodded again, dipping her fingers into her leaking cunt before strumming her clit rapidly. \"Don't cum, slut,\" I warned her and she nodded. We continued to stare into each other's eyes as I took my pleasure from Sherry's willing mouth. She knew she was an object to me in that moment. We all knew and, I think, we all were getting off on it. \n\nAs I felt my orgasm approach, I realized that age old conundrum was creeping up on me. Where to cum. I decided to see if I could bring Victoria into it.\n\n\"Where should I cum, baby?\" I asked her. Sherry couldn't tell who I was talking to and murmured something on my cock which just made me gag her more viciously.\n\n\"In her mouth, Sir?\"\n\nI shook my head, \"She's not good enough to earn my cum in her mouth. Think worse.\"\n\n\"On her tits, Sir?\" she said stroking her clit faster.\n\n\"Worse,\" I said.\n\n\"... On... her face... sir?\" she said in a whisper.\n\n\"That's an excellent idea. But what should she do after I paint her slutty yellow face with all this cum?\"\n\n\"She shouldn't wash it, Sir...\" \n\n\"Why?\"\n\nHer fingers danced across her clit faster, \"She's a slut, Sir. A cheap slut,\" she said.\n\n\"Aren't you a slut, Victoria?\"\n\nHer eyes grew wide, \"Yes.\" Her voice was quiet but her arousal could not have been more evident.\n\n\"So then I should cum on your face, don't you think?\"\n\nShe gasped but immediately dropped to her knees on Sherry's right side. \"Yes, Sir. Please paint my slut face with your cum. Make me pretty for you. I'll wear it proudly so everyone knows what I am, Mr. S.\"\n\n\"Good girl,\" I said and I pulled my cock out. The first rope of cum sprayed over Sherry's wet hair before I quickly re-aimed it and coated Victoria's face. She reveled in it as blast after blast covered her. \"Cum for me, slut,\" I told her.\n\n\"Yessss,\" she said and shot off, cumming hard and collapsing on the floor. Sherry sat on her heels, watching the wanton display of my new toy. Her fingers were resting on her thighs, twitching in arousal. The white strand of cum was obvious as it sat on her silky black hair. I shoved my cock back down Sherry's throat twice just to make sure all the cum was out before zipping up. ",
        "\"Go put on a short little dress my lovely cumdump. Let's go make you pretty for me, too.\"\n\nSherry stood, trembling, \"Yes, Master.\"\n\nI paused and then asked as the short Asian girl padded away, \"Tell me now, Sherry. How bad do you want it to be?\"\n\nShe paused before looking back at me, \"Truthfully, Master?\"\n\nI nodded.\n\n\"80% of me wants to be able to take off my clothes and show everyone my piercings and humiliating, degrading, dehumanizing, racist tattoos that my Master got for me.\"\n\n\"And the rest of you?\n\n\"The rest of me wants to not have to take off my clothes to show people.\"\n\nI laughed, \"Dumb cunt.\"\n\nShe nodded, \"Yes, Master. I was bred to be your holes not to be able to think, Master.\"\n\nAs she scampered off, I helped Victoria to stand up. Her legs were shaky from her orgasm and her face was covered in my cum. I had been pretty turned on but hadn't expected quite this amount of volume. \"You can wipe your face if you want, slut,\" I told her.\n\nShe pulled out her compact and looked at herself before snapping it shut. \"I think I'd like to wear it out to the car, Master. Would that be okay?\"\n\n\"Of course. That's impressively slutty of you.\"\n\n\"Thank you, Sir. Or am I supposed to call you, Master?\"\n\n\"I actually kind of like, Mr. S. You and Louise are the only people that call me that and I sort of like it.\"\n\n\"Yes, Sir, Mr. S. Anything for you.\" Her grin was still obscured by the drying cum but she didn't care. Sherry walked out just then wearing a short, white dress that was incredibly thin. So thin, in fact that it was obvious she was still aroused. She'd left three buttons unbuttoned which made her cleavage all the more obvious. Around her neck she wore a contrasting black studded leather collar and her hair was up in a pony tail though she'd very carefully made sure that the stripe of my cum was still prominently visible.\n\nOkay ladies, let's go. The girls got lots of good looks and drooling stares from all the college kids as we walked out. We'd become pretty famous in the dorm at this point and I enjoyed the jealous looks we got. Just as we were walking through the lobby, Hideo came in. \"Hideo!\" Sherry squealed with genuine happiness. She ran up to him and gave him a huge kiss before pulling away. \"Master is taking me to finish making me pretty. I hope you love what he does to me. Will you be here tonight when I get back?\"\n\nHideo nodded, staring at the stripe of cum in his slutty girlfriend's hair. \"Yes, Sherry. Anything for you.\"\n\n\"You're such dear, Hideo,\" Sherry said. It was a weird tone, I noted. Condescension but also warmth. Like you might talk to a beloved family pet. \n\nI ushered the girls outside and hailed a cab. After we climbed in, Victoria started cleaning herself up.\n\n\"Did you enjoy that?\" I asked.\n\n\"Walking through a dorm room full of college kids with my boss's cum coating my face?\"\n\n\"Yeah.\"\n\n\"I'm absolutely soaked, Mr. S. Did you like it?\"\n\n\"Of course,\" I said as I slid my finger up each of the girls dresses to feel two very wet cunts.\n\n\"You liked making me show everyone what I am? You liked treating me that way?\"\n\n\"Like how?\" I asked, stroking them both faster.\n\n\"Like a cheap slut... no... not a slut... an object just for your pleasure... So humiliating... so degrading...\" she whispered. She wasn't really even talking to me anymore, just rambling. \n\n\"Exactly. You like that?\"\n\n\"Yessss,\" she said as I strummed her cunt. \n\n\"We all do, Master. You have no idea how much it turns us all on to be treated like... fuck... that's good... like fucking objects. I always have this fear that you're going to use me and throw me away but I also know you won't... fuck... and then you do this... fuck... I want to cum so bad, Master. Please don't make me,\" she pleaded.\n\nI withdrew my fingers and then offered them up to the other girl. Both of them eagerly slurped the other's juices off, cooing as they did. \"You sluts are very intoxicating.\" I looked up and the cabbie was simply staring. I'd given a lot of shows to NYC cabbies lately but this was above and beyond. Oh well.\n\nWe rode to my buddy's tattoo parlor. The same one that Sherry had first been pierced in. Now she was going to get the job finished. I'd been torn over how far to take things but her continued submissiveness and encouragement had shown me that, if there was a line for her, it was pretty fucking far away.\n\nWe walked in and my buddy came up to me and shook my hand, \"My man! How are you?\" As always, Danny was a study in contrast. Khaki's and a polo shirt weren't the typical apparel of a tattoo artist. Add on top of that that he had not a single tattoo or piercing of his own and you'd be forgiven for assuming he worked as a consultant at my company. But Danny was an artist. He did tattoos because he loved the challenge of making something awesome. I kind of felt bad that I was going to use him for just some words and piercings.\n\n\"Pretty good, Brother. You ready to do this?\" I asked.\n\n\"Is she ready?\" he said looking at Shery. Something in his tone must have scared her a little because she shivered slightly. It made her tits jiggle noticeably.\n\n\"Tell him, slut,\" I said. My friend arched an eyebrow but said nothing.\n\n\"I'm eager for all the things that my Master wants. Thank you.\"\n\n\"You've got to tell me your secret some time, man\"\n\n\"No secret. Just clean living,\" I smiled.\n\n\"Bullshit. Okay...\" he turned from me and took Sherry's hand.\n\n\"Oh... Danny... this one too this time. This is Victoria, my secretary.\"\n\n\"Let's go!... DEFINITELY need to tell me your secret. What do you want?\" he directed the question to her.\n\nVictoria pulled out a sheet of paper and handed it to him. He cocked an eyebrow at her, \"Two? These are kind of long, too. Where do you want these?\"\n\n\"Uhmm... the first one... uhmm... on the small of my back. And I thought maybe the second one could go... uhmm...\" she glanced at me then leaned forward and whispered something to Danny. He nodded and she winked back at me, \"I want that one to be a bit of a surprise, Mr. S. If that's okay.\"\n\nI nodded, \"Sure. Oh... and Danny... feel free to use the chink if it'll earn me a discount. But Victoria's mine.\"\n\nVictoria beamed and Sherry stared at me with wide eyes. Danny grinned big and nodded. I'd prepped him for this and what Sherry was like so he wasn't surprised. Sherry didn't know that, however. To her, I'd just casually traded free use of her body for a couple hundred bucks. \n\n--\n\nVictoria ended up getting finished first. Not surprising given the relatively short amount of work she had done. I couldn't tell what exactly it was, but I could just barely make out the word, \"desire\" on the curve of her breast. I waited until the shop cleared out a bit before looking at her and saying, \"Show me.\"\n\nShe unbuttoned the two buttons at the top of her dress and pulled the fabric down, baring her tit boldly to me. I watched her eyes as she did, meeting her gaze as she sat there. Exposed. I made her wait just a little bit longer, looking to see if she really was the submissive creature she seemed to be. She never waivered. I, however, couldn't wait long and looked down.\n\nI am filled by my beloved and all his desire is fulfilled by me SS 7:10\n\nThe words were tattooed in a spiral around her right breast. The letters were gothic and intricate as they spiraled closer and closer to her nipple without ever touching. It was beautiful. \"Very lovely,\" I told her and gave her a kiss.\n\n\"I took some literary license with the words. Not too much on this one though.\"\n\n\"I'm not your pastor,\" I said. She didn't need to defend herself or her weird kink to me.\n\n\"I know, Mr. S. The other one is a little more... extreme, though.\" Her smile was both wicked and scared. \n\n\"Show me that one then,\" I said. She smiled and let her shirt fall back into place before turning around and lifting up her shirt and pulling her skirt down slightly. On the small of her back, I could make out the words:\n\n\"My lover reaches for my holes and my arousal overpowers me. SS 5:4\"\n\nThis time the letters were written in a more typical cursive. The letters swirled and the whole text dipped down into the cleft of her ass right where the word 'holes' was. It gave the strong impression of an arrow pointing right towards her ass.\n\n\"Very good choices. I think they mark you well.\"\n\nShe shuddered as she fixed her clothes then nodded. \"Thank you, Mr. S. I feel so wicked but so righteous at the same time.\"\n\nI laughed and kissed her. We talked a little more, I explained a little more about the life I was currently leading, explaining the different girls. She seemed really intrigued by the racial angle in particular. It was something that Carly had warned her about but she hadn't seen until today and wasn't sure how she felt.\n\n\"I'd be worried if you loved it. Honestly, it's a kink I didn't even know I had until Carly brought it out in me.\"\n\n\"I think Carly's been really good for you, Sir.\"\n\n\"I do too... wait... why do you say that?\"\n\n\"Well... you're much better with the staff now. More relaxed.\"\n\nI frowned, \"Was I that much of an ass before?\"\n\n\"No... No... definitely not. You were just... intense. Always wound tight. And when your ex and you broke up you got pretty short at times. I know you were having a tough time.\"\n\n\"I'm sorry... I shouldn't let my personal life affect work.\"\n\n\"I think that ship sailed when you fooled around with Daphne and I at the office, Mr. S,\" she whispered seductively in my ear. I nodded but before I could say anything else, Sherry walked up.\n\nShe was exhausted. You could see it in her eyes. She had a tongue stud along with another pierced nipple and I knew that she'd gotten a piercing on her clit as well. She walked gingerly, careful of the discomfort. On top of that, she had three new tattoos under her clothes along with one on her thigh that was peaking out below her dress. All that was visible was the word \"I'm\" but I knew right above that, leading right to her cunt were the words, \"a cheap slut.\"\n\n\"What did you do to earn those, slut?\" I asked.\n\n\"He took my ass, Master. And then he charged $100 for each employee that wanted something.\"\n\n\"How many cocks have you just had?\"\n\n\"Four, Master. And one delicious pussy,\" her hands were trembling. Her arousal was obvious. I knew they must have done all that before the clit ring was put in but now she was standing there, ridiculously horny with the clit ring teasing her. \n\nDanny handed me the money and I handed it right back. \"That more than covers us, right?\"\n\n\"You know it, brother. She's a fine piece all right.\"\n\nDanny gave us the care instructions and we headed out. When we got in the car, I reached directly into Sherry's dress and pulled out her right tit. The one that had been pierced for almost three months now. I ran my finger across it, touching it directly for the first time. She jerked, shocked by the sensation and moaned. I noticed both the cabbie and Victoria were staring at us and I gave it just a tiny little pinch which caused her to buck even more. \n\n\"Are you happy right now?\"\n\n\"Yesssss, Master,\" she whispered.\n\n\"Do you want more? Did you like being humiliated and used as a plaything?\"\n\n\"Fuck yesss... Master. Used for the pleasure of a group of white men... that's what I deserve.\"\n\n\"Good. I'm glad. You're such a fun bimbo to exploit and break.\" My fingers were dancing around the nipple, teasing the barbell with tiny, gentle little tweaks. Her whole body was twitching by the time we arrived at the dorm. When we went upstairs, we stepped off the elevator. As usual, there were a ton of people in the hallway. All of them turned to see what antics we'd be up to today. The guys, especially, were watching. Hoping that they'd see something interesting. \n\n\"Strip,\" I said. Sherry gasped and so did several girls in the hallway. The guys, however, didn't make a sound. Their eyes just bugged out as they watched Sherry take her dress off quickly, letting it drop to the floor. Victoria knelt down demurely to pick it up and Sherry started walking. I took a moment to admire Danny's handiwork. She had two tattoos on her shoulder blades, one was in Chinese and, if you could read it, it said, \"White Owned Holes.\" The other was a yin-yang symbol but instead of black and white it was yellow and white.\n\nThe piece de resistance, however, was the last tattoo. The tramp stamp that said, \"Master's Cock Socket.\"\n\nThere were snickers and gasps. Most of the people knew we were that kinky couple down the hall. I'm not sure anyone realized just HOW kinky. Or the fact that the last word you should describe any of this was \"couple\". Sherry walked proudly down the hall, shaking her ass for all the world to see. A couple other Asian girls whispered, perhaps noting the Chinese tattoo. I noticed down the hall, the hot Indian girl from the other day. I gave her a playful wink which made her blush cutely but otherwise continued to stare at the debauched sight in front of her. We followed Sherry into her dorm room, Victoria holding my hand and trailing behind me. When we got to the door, Sherry was standing there literally panting.\n\n\"I'm so fucking horny, Master. My cunt juice is dripping down my legs and everyone saw it,\" her words were just a little off from the new tongue stud. Danny had said it would be a few days until she could talk normally.\n\n\"You're fucking pathetic,\" I said with a smile. \"I wonder what your Mom and Dad would say if they saw you like this.\" Carly and I had never told Sherry about their parents. Which gave me the perfect thing to torment her with. \n\n\"Please, Master. My parents can't know what I'm like. They'd be so disappointed in me.\"\n\nAs I started to respond, I noticed Hideo sitting quietly in the corner, hands folded in his lap. His eyes were riveted to Sherry and his mouth hung agape, stunned to silence by her appearance. \"What do you think, Hideo? Should her parents be told what their daughter has become?\"\n\n\"I suppose that's up to you, Mr. Simpson. Obviously she'd prefer not but I don't think it's her choice.\"\n\n\"You're very right. I'll have to discuss with Carly. Obviously, you'll have to decide with Hideo whether his family learns the truth about his girlfriend.\"\n\nSherry hung her head in shame, her whole body blushing and shaking with arousal. \"Yes, Master.\"\n\n\"Hideo looks like he likes what he sees.\"\n\nNow it was Hideo's turn to look embarrassed. \"I'm not sure, Sir.\"\n\n\"Oh? Is it because she's now permanently marked and it'll be obvious who her real owner is now?\"\n\nHideo whispered, \"Yessir.\"\n\n\"As I told you, Hideo. Anytime you think you can take her from me, you're welcome to try. I just think you'll lose in that exchange,\" I said as I looked at the young man while grabbing Sherry and pulling her to me. \"You'll have to be very careful with her for awhile. Take good care of her and I might allow her to give you a hand job, understood?\"\n\nHideo nodded, still staring at Sherry. The poor kid was completely in love with Sherry and it was obvious to everyone who spent five minutes with them. For her part, I knew Sherry had become fond of Hideo but viewed him more as a brother than a prospective lover. He simply lacked the assertiveness that she needed... let alone her particular white boy fetish. \n\n\"On the other hand...\" I said as I leaned her forward on the kitchen counter. She didn't turn around and simply watched Hideo as I kicked her legs apart. \"She does have one hole I can use still.\"\n\nI stripped out of my own clothes and stepped in behind her. Gingerly, I reached into her cunt and lubed up my cock before positioning it at the tight entrance to her ass. \"Beg,\" I snarled in her ear.\n\n\"Please, Master. Fuck my only useful hole. Fuck my ass. Make my boyfriend watch you rape my best, tightest hole.\" I rewarded her slipping my cock into her ass and she squeezed back before wailing, \"Fuck my hole with your glorious white cock that this tiny dicked Asian boy will never have!\" \n\n\"Where's my cock, Hideo?\"\n\nThe boy was still staring, watching as his girlfriend was violated in the most intimate way, \"In Sherry's ass, Sir.\"\n\n\"That's right. And Victoria... do you think she deserves this?\" I asked my secretary as I continued to slowly fuck Sherry's ass. Her grunts filled the apartment and were leaving everyone aroused.\n\n\"She definitely doesn't deserve it,\" said a new voice behind me. I turned around and Starla and Louise were standing there watching along with two rubbernecking college boys trying to be subtle. The door swung shut leaving the two sweaty girls watching and the boys, no doubt, horny and frustrated on the other side. Louise was standing with a hand on her hip and continued, \"Sherry always gets so much more than she deserves. And you won't even put out for Starla and I.\"\n\nI glanced at Starla who couldn't form words. Louise still didn't know about Starla. Sherry didn't know either. As far as they knew, Starla and I had just been going on dates like Louise. Little did any of them know about Starla's kinks that were, perhaps, the most perverse and extreme of all of the members of my harem.\n\nAs I thought about all of this, I kept bottoming out in Sherry's ass as she moaned lewdly.\n\n\"If Sherry doesn't deserve to be ass fucked in front of her boyfriend, what do you think she does deserve?\"\n\n\"She deserves to make slow, romantic love to her boyfriend, Mr. S,\" Louise said. \n\nIn another situation, with another girl, those words would have sounded like a defense of Sherry. But Sherry understood them very differently. \"NOOooo...,\" she wailed. \"Please don't ever stop using my ass, Master. Don't send me off to a life of tiny dicked Hideo making love to me. Please, Master. Please. I'll do anything.\"\n\nI laughed at the pathetic words, \"You hear that, Hideo?\" I said as I slid deeply into her. I was conscious of her new piercings and trying to take care and be gentle lest I damage one of my favorite toys. \"She views making love to you as a punishment. She understands that my use of her holes is what she wants, needs and deserves.\"\n\n\"Yess... yess...,\" she said as she pinched at her old piercing. \n\n\"What do you think, Starla? I bet you wish this was you, don't you?\"\n\nAll heads swiveled to Starla who stuttered and stammered, \"What? No... I would never let you do that to me,\" she said but the words lacked conviction and Louise elbowed her in the side.\n\n\"I would,\" Louise and Victoria said at the same time and then laughed together.\n\n\"Go get changed while I finish with this dumb cumdump, Louise. That way I can take you out tonight with a clear head.\"\n\n\"Mmm... yessir. Mr. S. I just hope it's not too clear a head... you know.\"\n\nI laughed before turning my attention back to Sherry who was still standing there taking my cock. I grabbed Louise beside me and kissed her while I continued sliding in and out of Sherry's backdoor. The whole scene was so sexually charged, I didn't last long before I filled up my sex slave with a groan. She collapsed onto the counter, spent and dripping while I wordlessly pulled out. \n\nAfter we got cleaned up, I was getting dressed while Sherry snuggled on the couch with Hideo, still naked and bedraggled. Starla tried to pretend to talk to them but kept looking at my cock out of the corner of her eye. I knew what she was thinking. She knew I knew. I was going to have to find a chance soon to fuck her again soon. My mind meandered to the thought of enlisting Victoria or Carly to help.\n\nMy wandering mind quickly snapped back to the present when Louise walked out. She looked absolutely stunning in a long black dress. The thin fabric hung loosely from her body, clinging to her skin as if it had been magically vacuum packed onto her. Her nipples poked out from her braless breasts and, if she was wearing underwear, it was impossible to see any lines. Everyone in the room was watching her, even Hideo who normally only had eyes for Sherry.",
        "Sherry punched him hard. \"Ouch,\" he said. \"Jay's looking too.\"\n\n\"My Master can look at all the hot white sluts he wants. He deserves them all. But you only get to look at me like that, understand?\"\n\n\"Yes, dear,\" the irony of her demand not lost on any of us. I stood up and took Louise's hand. \"You look very nice,\" I said, struggling for words.\n\nShe flashed me her beautiful smile and bit her lip, \"You were all dressed up in your suit. I just thought jeans and a t-shirt might not be appropriate.\"\n\n\"Yeah... but you said not to impress you tonight,\" I told her, putting my hand on the small of her back and guiding her to the door.\n\n\"Oh... should I change?\"\n\n\"No... well... can I make a quick phone call and maybe impress you just a little bit? I'd hate to waste that dress at McDonald's and a movie.\"\n\nShe smiled and then laughed her melodic laugh. \"Sure, stud. But date number three better be fast food and a movie, understand? I want at least one generic date with you.\"\n\n\"Deal. Gimme a second.\"\n\nI quickly stepped out into the hallway to make a couple calls. I wasn't sure what strings I could pull on such short notice but figured I never asked for favors from the partners so I was owed a couple. It took me calling all three but I finally got what I needed. Walking back in, I grabbed Louise and pulled her to me, \"I hope you're worth it,\" I said with a playful grin.\n\n\"Oh, I am, Mr. S,\" she said sexily. \n\n\"Good. Victoria, I want you to stay here and make sure Hideo gets all the instructions for taking care of Sherry. Maybe get to know Sherry and Starla better. They're both great girls, I think you'll find. Even if one of them is truly pitiful.\"\n\nStarla and Sherry both blushed, both thinking I was referring to them in their own way. Which I was. Victoria nodded and Louise and I headed out.\n\n--\n\nI got in the cab and told the cabbie, \"226 West 46th Street.\"\n\nHe looked at me with a quick glance, taking in the suit and my date's dress before asking, \"You already got tickets, Mister?\"\n\n\"Yeah... we're good.\"\n\n\"Okay big spender. Richard Rodgers Theater next stop.\"\n\n\"Richard Rod... no way! No fucking way!\" Louise yelled, understanding dawning on her. \"You're fucking taking me to Hamilton?\"\n\nI nodded and grinned. \"My boss has some pull and I never ask for favors. So she hooked me up.\"\n\n\"Your boss can get Hamilton tickets on...\" she glanced at her watch, \"An hour's notice?\"\n\n\"She's a minority owner of the Nederlander Organization. They own the theatre. Truthfully, I was just hoping for tickets to something cool. This was a bit above and beyond for her,\" I said. My phone buzzed as the tickets came in and I looked at the email. \"Oh... way above and beyond, actually.\"\n\nLouise looked at the email, \"Does private seating mean what I think it means?\"\n\n\"I think so... I think we're sitting in the owners' seats. Yeah.\"\n\n\"Shit,\" she whispered then gave me a huge kiss.\n\nThe cabbie laughed, \"You're definitely getting lucky tonight, young man,\" he said as we pulled up to a light.\n\n\"Nahh... my fiance doesn't want me to sleep with her yet,\" I said and Louise and I laughed at the man's stuttering attempt at a response.\n\nWhen we arrived, we walked in, both a little star struck. I truly hadn't expected my boss to come through like this. I'd called asking for Waitress tickets. Instead she'd delivered me tickets that I could probably scalp for five grand or more. We got stopped twice on the way to the seats as people made sure to confirm we were there legitimately. But eventually we got to our seats which were, legitimately, amazing. We were on the left side of the stage essentially hovering over the whole production. There were no better seats in the house. We had near complete privacy too. \n\nThe musical was everything people said it was and more. If you haven't seen it, go see it. The cast is amazing, the music amazing. It's hilarious and poignant and it never hurts for your date to see you tear up a little which the ending will definitely do. Louise and I kissed and made out a little but otherwise, I think, we were both so enraptured by the musical that our individual sexual tension melted away. \n\n\"That was unbelievable. Thank you,\" she said as we walked out.\n\n\"As much as I'd like to take credit, it really was dumb luck. Normally these tickets are given away to friends of the owners but none of them had claimed them for tonight's show so they were fair game.\"\n\n\"You're too modest. Sometimes it's just who you know, Jay,\" she said and leaned in to give me a soft, sweet kiss.\n\n\"That's the first time you've called me that.\"\n\n\"Is that okay?\" she asked sweetly.\n\nI nodded, \"I do like Mr. S a lot though. It's so playful and cute.\"\n\n\"Ohh... do you like it when I call you, Mr. S?\" she whispered into my ear and I murmured my agreement. \"Is that why you make your secretary call you that?\"\n\n\"Uhh... she's always called me that. But she's very submissive when she says it. Respectful.\"\n\n\"Are you saying I'm not respectful?\" Louise said, pouting cutely.\n\n\"No... you're far more playful. More coy. Teasing. I like that too.\"\n\n\"MMmm... good...,\"\n\nWe left the theatre, holding hands and headed out. \"What now? The night's too young to be finished.\"\n\nShe looked at me, \"It's your date, Mr. S. I'm just the eye candy here.\"\n\nI kissed her again, \"You're a lot more than eye candy, Louise. Please don't forget that.\"\n\n\"How could I? I keep trying to get you to treat me like eye candy and you keep being all respectful and shit. Maybe I'm like Sherry and don't want that,\" she said. Her tone was just a little sharp. She was mostly joking. But mostly joking also meant slightly serious.\n\n\"Good. I hope you're a little like Sherry... at least in bed. But I don't think that's who you are out of bed and it's not who I want you to be. You're better than that, Louise.\"\n\nShe kissed me again, needful and desperate. \"Take me back to your place,\" she whispered.\n\n\"I'm not fucking you, Louise.\"\n\n\"Who said, I'd let you,\" she said with a smirk.\n\n\"You did... literally last night. You said you'd let me!\" I said with a laugh. \n\n\"That was last night. Girl's can change their mind. Besides, I'm a good girl and good girls don't fuck on the second date.\"\n\n\"More of a third date kind of thing?\"\n\n\"You wish, stud,\" she said. I couldn't help but notice she didn't deny my statement.\n\n\"Okay... let's go back to my place but you keep your hands to yourself, deal?\"\n\n\"Fine... fine.. You don't even drink so I can't get you drunk and take advantage of you though. No fun!\" she complained happily.\n\nWe again eschewed a cab ride, instead enjoying the crisp night air and the relatively short walk back to my building. Nights like this were why I loved the City. Nearly midnight and you'd never know based on the traffic and people. Night time was just a less sunny bit of the day as far as many New Yorkers were concerned. \n\nI went through the normal routine with the doorman, getting the now customary fist bump for bringing yet another new girl home. He probably assumed I was the world's biggest player which, I guess, wasn't that far from true though I still didn't think of myself that way. \n\n\"So why'd you want me to bring you back here?\" I asked as we boarded the elevator. \n\n\"Because I wanted to do this all night,\" she said and suddenly she slammed me into the wall. All 5 feet 3 inches of her pressed against me as she tilted her head up to kiss me. Our tongues danced together as she moaned into my mouth. Her leg ground up against my hard cock as her hips bucked against my leg. We didn't break apart for the entire minute or so it took for the elevator to get to my floor. And when the door finally opened, both of us came apart slowly, panting for air and overcome with arousal. \n\n\"Wow,\" I managed. If it was true that the kiss could tell you all you needed to know about someone then I knew exactly what Louise wanted.\n\n\"Yeah... Definitely wanted to do that... plus this message from Carly, you know.\"\n\nHer matter of fact tone and my foggy-with-arousal-mind didn't connect the words at first.\n\n\"Wait... what?\"\n\n\"Yeah... seems like Carly has a surprise for you, Mr. S,\" she said and she showed me the message from Carly.\n\nCarly: Tell Master I'm prepping some relief for the blue balls you've given him. LOL \ud83d\ude0b\ud83d\ude08\ud83d\ude19\n\nThe message was followed by a picture of Carly holding a razor with her head pressed up against another woman's freshly shaved pussy. Only a hint of wispy red hair was visible and Carly's tongue was sticking out, just barely grazing the smooth, shiny skin.\n\n\"Looks like you've got a busy night, stud. Can I watch?\"\n\nOh my."
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "cuckquean",
        "dominant male",
        "facial",
        "humiliation",
        "piercings",
        "secretary",
        "seduction",
        "submissive female",
        "tattoos"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/carlys-wmaf-fantasy-pt-20"
}