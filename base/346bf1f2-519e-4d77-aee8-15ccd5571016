{
    "title": "Graduation Ch. 01",
    "pages": [
        "NOTE: This is a 23K+ word story that doesn't start heating up until halfway through. I respect the value of a quick stroke story, which is why I'm warning you to keep looking if that's what you're after. If you're down for a long read with a hot payoff, though, then pour yourself a glass of your favorite little something-something and pull up a seat.\n\nThis story has been updated to correct typos, add some small scenes, better flow into potential future chapters. Check the comments for a changelog. Yes, this erotic novella has a fucking changelog. Kids, if you're lucky enough to have an editor, tell him/her how much he/she is loved every day.\n\nAs you'd expect, all characters involved in sexual activity are at least 18 years of age.\n\n* * * * *\n\nAs the name implied, Silver Spoons was used to catering to a clientele old enough to be called \"clientele.\" Years of serving people who looked 35, 45, 55 left them rusty on the art of spotting a fake ID, which suited the teenagers of Westbrook Heights just fine. At first it was just one or two seniors rolling the dice on their new cards. Afterwards, they carefully passed the tip on to other seniors and select junior-aged friends that could pass for 21, people that wouldn't spin so far out of control that it would encourage Management to revise their ID-checking policies.\n\nIt shocked a few Westbrook High students to learn that Caleb Bradstreet was one of those people; they expected the scene of a high school team's tailback to involve kegs and backyard bonfires, not an old man's bar on a Thursday night. But History had always been his weakest subject, and after two weeks of studying non-stop for a final that he just cleared that afternoon, Caleb needed a beer and some ambiance.\n\nHe sat at the bar and drank slow, relishing what little there was to relish of his Bud Light. He thought about endings: Thought about how weird it felt to know he had taken his last-ever high school test. Thought about his impending graduation on Sunday afternoon, and the blowout that was happening Saturday night after next. Thought about the signatures he still wanted in his yearbook. Thought about the teachers he never wanted to see again (like Mrs. Warner, the sadistic bitch who knocked him down to a B- for holding his pencil incorrectly). And he thought about the teachers he really wished he could take with him to college, like\u2014\n\n\"Caleb.\" The bartender, Drew, was making a point of keeping his voice down, motioning Caleb to look behind him, \"You know that chick? Seems like she knows you.\"\n\nCaleb turned around and almost dropped his beer.\n\nMiss Piper stared back at him, wearing that orange dress he loved so much, the one that fit her upper body like a glove and had its neckline cut just low enough for him to know that his cock would fit comfortably between her tits. She was bug-eyed behind her round, frameless glasses; her jaw was slack, a glass of dark liquid frozen in her hand.\n\nWhat the fuck was she doing here? Did she hear about this place and decide to troll for underage drinkers? Why was that her business, days away from graduation?\n\nFuck!\n\nCaleb knew none of those questions mattered; either way, he was screwed. Caught off guard, he could only raise his beer in a slow, befuddled toast to Miss Piper, and wait for her assuredly absurd, possibly violent response. Not that she wasn't a collected individual, but how can your reaction to running into your under-the-drinking-age student at a bar be anything other than \"What the FUCK?\"\n\nWell, Miss Piper's reaction was absurd, all right: She returned Caleb's toast with equal speed and befuddlement, then literally looked the other way.\n\nHuh.\n\nCaleb turned back to try and embrace his relief, if only he could stop asking himself why she wasn't dragging him out of this bar by his ear.\n\n* * * * *\n\nPerhaps years, or maybe even months down the road, Penny was going to look at the latest in the steady stream of engagement announcements or baby photos from her old classmates on Facebook, she was going to decide that she was she was tired of being on her own, and she would find a veterinarian who liked rock climbing and fine wine and had access to a trust fund and a ranch up in the country. And after they got married at a beautiful destination wedding in Venice, he would let her keep her awesome name.\n\n\"Penny Piper\" was a name fit for the plucky sidekicks she idolized in her youth. It had a musical way of rolling off the tongue, and it suggested someone intelligent, caring, and -- in certain situations -- innocently sexy, all qualities she aspired to in her adult life. Befitting of the first two qualities, Penny had been teaching for seven years now, working at the same high school she graduated from. The job left her with little opportunity to affirm the third quality; she contented herself with pornography and a semi-occasional Tinder hookup, but they were practically interchangeable with visits to the spa. Few regrets, but fewer connections.\n\nThen September happened.\n\nThe outfit certainly had something to do with how things changed. She never liked wearing her belted sunset orange dress to school; she preferred blouses and jeans to minimize her top hourglass figure, maybe an occasional pencil skirt. But her laundry backlog had snuck up on her, leaving the dress as the most appropriate thing she could have worn that day. It wasn't scandalous, but it was cut just low enough and fit her bust well enough for people to recognize that she had won the genetic lottery. It wouldn't be the end of the world for the guys in her class to know that she had big boobs, but it wasn't the way Penny liked to present herself -- especially on her first day. She dreaded the day-long fight to keep everyone's gaze pointed upward, preemptively resenting herself for allowing her students to see her as a kind of sex object because she couldn't be bothered to do her damn laundry.\n\nHe was the first, arriving at least a full minute before the bulk of her first period class filed inside. Early-comers tended to be bookish types like herself, having few friends to slow them down on the way to class. \"Miss Piper?\" he asked from the door, drawing her bespectacled brown eyes to his bare, shocking blues.\n\nWith his clean face, sharp blonde hair, and game-for-everything grin, Caleb Bradstreet did not look like the bookish type. It was a hot day, and the loose, light clothes that Caleb wore did him favor after favor. He had a lean yet sturdy frame, with arms and legs that looked like they were precision-sculpted by lasers in the same hot dude laboratory that blessed the earth with Channing Tatum. (Okay, he wasn't as developed as those guys, but for a high school senior, he was pretty cut.)\n\nShe remembered introducing herself. She remembered Caleb taking a seat at the front row, just across from her desk, which ended up being where he'd always try to sit for the rest of the school year. And she remembered thinking that she probably would have written him off if it wasn't for that damn dress, because all throughout the period she could feel his eyes searching her. She always got looks whenever she was in that dress, but his particular gaze had a specific heat signature associated with it, melting her insides and sending the runoff down her thighs.\n\nPenny had never thought of a student like that before. There were a few guys she taught over the years whom she wouldn't have kicked out of bed if they were older. However, they weren't older, nor were they really \"guys\" to her. To say that her sense of duty as a teacher always won out over her respect for a healthy male body implied that there was even a struggle to begin with.\n\nMaybe all her frustrations with dating were finally catching up to her. Maybe some repressed part of her psyche that wished she was Prom Queen material broke free and stormed her control center, taking hostages and making demands. Penny was far from homely and not quite plain, but aside from the regular gym visits that kept her in shape, she always put more effort into what was in front of her than herself. Even in her orange dress, even on her occasional dates -- hell, hookups -- she never felt noticed, at least not beyond \"Gee, that looks like a fun amount of boob on her chest.\"\n\nNot only did Caleb Bradstreet notice her, though, he stared at her like she was perpetually walking out of the pool in Fast Times at Ridgemont High, and it threw Penny into quicksand. Early on, while she was passing out her syllabus, Penny got a closer look at Caleb's thick, sturdy arms. She instantly conjured an image of those arms molding themselves into her naked, supple waist. His powerful legs supported her while she thrashed upon his upright 6' frame, her dirty blonde hair flying wild, her glasses barely holding onto her ears. For a moment she felt lightheaded while the image seared itself onto her occipital cortex.\n\nThat first class was a 45 minute battle to not stammer through her introductory lecture. The memory of the rest of her day was an incomprehensible blur of light and color. She was pretty sure she got through it without blurting out anything inappropriate, but her next clear memory was of stripping off her clothes on her way to her shower and pulling off its detachable head.\n\nShe didn't even close the bathroom door; all the better to imagine Caleb making a surprise appearance, bending her over until her hands were splayed against the tile, impaling her on his thick rod and plunging into her sopping warmth over and over, holding on to her thick, shapely breasts like he was dangling off a cliff, faster and faster, gathering her in his arms, drowning her in the tangle of his muscle, his scent, the water, until she seized, shuddered, and slid down the tub, puddling into a twitching heap of flesh.\n\nThe shower head slipped from Penny's fingers. A darkness that not even the ceaseless drone of water-on-ceramic could penetrate overwhelmed her for what felt like minutes. When she did wake, her legs were cement and her head was cloudy from all sorts of negative thoughts. Am I a pervert? Am I going to act differently around him? If I do, will that put off all the other students in my class?\n\nHow the hell am I going to make it through the year?\n\n* * * * *\n\nHow the hell am I gonna get out of this?\n\nCaleb couldn't even touch his beer while his mind ran the worst case scenario on a M\u00f6bius strip assembled from frayed nerves and sweat. For some reason, the police must have suspected Silver Spoons to be an underage drinking haven, and planted Miss Piper to help them bust it open. How and why they would approach her out of all the other teachers, or why they would use an easily-recognized teacher to catch their own students drinking didn't matter. What mattered was that she was instructed not to make any moves on their behalf; just observe and report, and let the cops handle it. It made no sense, but maybe it did and he didn't realize it.\n\n\"Hey, you wanna hear a joke?\"\n\nOf course, the morning he's due to graduate, that's when the cops would knock on his door with a warrant, hauling him into a cop car in front of Mom and Becca. Of course Miss Piper would visit to tell him about the disappointment he turned out to be.\n\n\"What fucks like a tiger and blinks?\"\n\n\"I don't know, what?\"\n\nGranted, that was stupid, but...uh, nothing, it was stupid, full stop. Of course he wasn't taking a perp walk for underage drinking. And Miss Piper wasn't an idiot, she had to assume that a guy like him could easily get a fake ID and was no stranger to alcohol. But certainly, this bar would be shut down, and he'd go down in history as the guy who blew it for the future junior and senior classes of Westbrook Heights. He might as well throw in a perp walk on top of that.\n\n\"You tell me.\"\n\n\"Oh, I get it. You're blinking a lot, and that's supposed to moist my nethers or something.\"\n\nThe words coming from Miss Piper's table finally seemed to register with Caleb. She wasn't having whatever that dude was selling; that subtle sharpening of her otherwise fragile, airy voice always signaled that a class clown was about to get cut the fuck down if he wasn't careful. For a brief moment, he considered how good Miss Piper was at commanding authority when the situation called for it. In her class, if you were disrespectful and you got off with a mere visit to Vice Principal Sturgeon, you were lucky.\n\n\"Can you blame a guy for trying? Lemme buy you a drink. My apology for the bad joke.\"\n\nThe noxious smugness in his voice reached Caleb before the content of his words did. Caleb's first instinct was to turn quickly with his whole body, but his smarter angels won out and he settled for an over the shoulder glance, as subtle as he could manage. The dude could've looked like Chris Evans and he'd still be an asshole, but the fact that he looked like a younger version of the bald white dude from House made him angrier. That he actually looked annoyed with Miss Piper, like it was her fault that she didn't recognize the panty-melting comic genius of some random douche walking up unannounced to tell her how hard he could fuck, made him flat-out pissed.\n\nYet he convinced himself to hang back, because he knew Miss Piper. Miss Piper was awesome. Miss Piper didn't need him.\n\nDid she?\n\n* * * * *\n\nEvery year she taught at Westbrook Heights High, the thing Penny felt most proud of was handing out copies of The Light in the Forest without throwing up in her mouth a little.\n\nBen Jacobi, who ran the English department, was crazy about having that book in the curriculum, possibly because it had a young protagonist and was thus somehow more relatable to young people than Steinbeck. The Grapes of Wrath could be a bear to teach, to be sure, but all The Light in the Forest had to offer was a cast of annoying characters developed through dry, plodding prose to a depressing and maybe-possibly-slightly racist endgame. When she first read it in high school, she wondered if she'd grow to appreciate it, and seven years of teaching it at the start of every spring semester answered that question with fierce prejudice.\n\nThis year, finally, one good thing came out of the toilet paper that Conrad Richter wiped his ass with: Caleb had not been doing any of the assigned reading, which gave Penny a reason to offer him extra help.\n\nIt wasn't all lust. It wasn't even mostly lust. Truth be told, most of her concerns from the beginning of the year turned out to be unfounded. She certainly called on him more often than she otherwise might have -- and she may or may not have added the orange dress that got her noticed into the permanent rotation -- but despite Caleb turning out to be a bright, funny, positive voice in the classroom, each of his answers chipped away at his beefcake mystique and helped Penny see him more as the student she was responsible for.\n\nThat mystique was shattered completely during the MacBeth unit, when Caleb preemptively asked for extra help since he always bombed Shakespeare units in previous English classes. Caleb had warned her that he was hopeless, but she didn't think he was so bad; he just needed some personal guidance to grasp the finer points of Shakespearian dialogue. Still, that was enough to remind Penny that she was responsible for part of his development into an educated adult.\n\nOn the other hand, Caleb was an absolute joy to spend time with in those sessions. When he didn't get it, he was patient and self-deprecating, even if he was clearly frustrated. When it clicked into place, he could spitball from what he just figured out and come up with insights on his own that would impress the hell out of Penny. Most importantly, Caleb got an obvious kick out of the multiple voices Penny would do for scenes with more than two people. She never really left behind her inner high school drama geek, so this was her favorite part of doing extra help for Shakespeare units. Some of the other students she helped thought it was corny; now that she felt validated by Caleb, those students could go to Hell.\n\nOf course, it also didn't help that Penny got to sit up close to Caleb and admire his tight football-player body, bulging the skin of his arms in all the right places. Nor did it help that their proximity and isolation made it easier to sense him stealing heat-vision glances at her chest. Still, despite the obvious mutual attraction, there came a point where Penny realized that she had gone two weeks without thinking of Caleb in the shower, and that it was about to be another night.\n\nHer sense of duty was still, in some form, intact. It was the best sleep she had gotten in years.\n\nNow it looked like Caleb needed her help again, but the only thing that concerned her was that in the case of MacBeth, he had come to her unprompted. After five classes on The Light in the Forest where Caleb could only stammer through some bullshit answer whenever he was called on, he still wouldn't ask for help. She doubted there was anything going on at home; they only covered the book two days out of every week, and Caleb had no trouble with homework on those other days. She just didn't understand why he was so quick to ask for help with MacBeth but not this.\n\n\"So,\" Penny asked after all the other students filed out. She didn't have a second period class to worry about, just the responsibility to get Caleb to his next class as soon as possible. \"The Light in the Forest. What's going on with that?\"\n\n\"It's, uh,\" Caleb stammered, \"It's just really hard to get through, is all.\"\n\nPenny nodded. \"Let me ask you something, Caleb,\" she said. \"Where do you stand with your football team? Are you the MVP, just another cog in the machine, the black sheep, what? I'm going somewhere with this, promise.\"\n\nCaleb laughed; of course he did. He had a great laugh, too. He never struck Penny as someone oblivious or charmed, but he somehow escaped the plague of disaffected teenagership all the same. Not even she was that lucky growing up. \"Well, the season's over,\" he explained, \"but I'd say Jeff -- he's QB1 -- he'd be the MVP. Our friend Chris, who's a wide receiver, he'd probably be next in line. I'm the tailback; I run the ball or take short passes when the usual receivers are covered. Since our offense tends to favor the passing game, I don't get the ball that much. But I get enough respect, and the team knows they can count on me when it's time to change things up.\" Penny nodded. \"Too much, Miss Piper?\"\n\n\"No no, it was very educational,\" Penny laughed. \"Here's what I'm getting at, and I'm gonna tell you a little insider's secret about teaching here.\" Caleb nodded; he tilted his body forward just a bit, locked his eyes -- those beautiful blue eyes -- on hers. She loved that Caleb made such a point to listen to her droning. \"It's like this: the secret to a great class is the class itself. If a student likes being with his classmates, they don't dread the class as much. And if those classmates participate in the class, and they're smart and they're engaging, the rest are more willing to absorb anything I have to teach them. You see where I'm going with this?\"\n\n\"I think so.\"\n\n\"On your football team, you're maybe one or two shades off the top, but in here, you're my MVP.\"\n\n\"A B student is your MVP? That's really sad, Miss Piper.\"\n\n\"I'm gonna pretend you weren't just being a wiseguy for a second. You might not have the best grades in the class, Caleb, but you're what makes the class worth coming to. If you can't step up, that makes everybody less interested, and it makes my job that much harder. So what I want to know is, what'll it take to get you back on track?\"\n\nThe late bell rang. Caleb didn't seem concerned, \"It's a little whiny,\" he sighed. \"Are you sure you want to hear it?\"",
        "\"Whine away.\" Penny knew exactly what was coming.\n\n\"All right, for real? I frigging hate this book.\"\n\nYep. Penny had to make an active effort to not nod in solidarity. \"Okay, watch the language, Caleb.\"\n\n\"Sorry,\" he continued. \"Look, I try to read it, I swear. But I'm at the point where I'll read a page, and it's like I either have to stop reading or shoot myself.\" Caleb threw up his hand, as if he expected her to cut in at this point. \"I know that's not an excuse, and I'm sorry. It's just, how do you get help with something like that? Do you have a brainwashing machine or something down in Guidance?\"\n\n\"Well...\" It was just one word, but Penny thought she was doing a good job of staying diplomatic so far. The truth was, she would've hugged him right there if she could have. Aside from her mutual dislike of the book, she always hated feeling intellectually inferior just because she didn't like something that was deemed important by other, supposedly greater people. One of her long-standing discomforts with being a teacher was perpetuating that cycle. Yeah, the overwhelming majority of her students didn't like reading through The Grapes of Wrath or The Catcher in the Rye, but at least she could help them understand what made them part of The Canon. A few even came away with a respect for the material they never thought they could have. By comparison, what the hell was The Light in the Forest?\n\nWhat could she do, though? Tell him 'You're right, the book sucks, I'm sorry we're putting you through it'? She had Caleb's respect, sure, but that made it more important to not validate his frustration with it. She didn't want him to think it was okay to skip out on assigned work just because he didn't like it.\n\nPenny had an idea. It was dangerous, but she thought Caleb could survive it academically if she could rule out any laziness on his part. Most of the kids who came to her complaining about a book usually wouldn't say much more than \"It's just stupid,\" or \"dumb,\" or \"boring,\" and she knew to give those kids a verbal pat on the head, tell them to suck it up, and invite them to come back when they could have an actual conversation about the assigned reading. So, \"Let's start with what you don't like about the book.\"\n\n\"True Son,\" said Caleb, almost before Penny could finish her sentence. \"Which is weird because he gets the ultimate sympathy card, right? Abducted as a kid, assimilated into a Native culture that taught him to hate the white man, then forced to go back to the white men? That would mess anyone up.\"\n\n\"But you're not sympathetic to that. Why?\"\n\n\"Because all I can think about is what an ungrateful douche he is! True Son managed to take all that goodwill and piss it away shitting on his Dad\u2014\"\n\n\"Caleb, language!\"\n\nCaleb cringed. \"Sorry,\" he said. He regrouped and continued. \"Look, I could probably roll with it if I had any reason to give aaaa...\"\n\nPenny gave Caleb her best stink-eye, daring him to finish the word.\n\n\"...to care...about what was happening. If there was any...like, interesting thematic stuff, I don't know if I'm saying it right.\"\n\n\"We probably wouldn't call it 'thematic stuff,' but I understand what you mean. Go on.\"\n\n\"Well, what's the point that this guy's trying to make? That white men were jerks to the natives? This book actually makes me care less about how terrible white people are, which I guess is kind of impressive enough to make it worth studying, I don't know.\"\n\nNow Penny allowed herself to nod. There was, of course, a lot more to the book; even she had to admit that. But she couldn't say he didn't try, which unfortunately left her out of options.\n\nSave for the nuclear one, at least.\n\nPenny took a pen out of her Fat Pony mug and started writing out a hall pass on a pad of paper. \"Well,\" she said, \"I can't say you don't understand the book so far. But, as you recognize, you're not actually required to like the books you read and write about. It just makes it easier to read them and write about them.\"\n\n\"I understand.\"\n\n\"Good. So you understand that short of signing you up for Alt Study, there's nothing I can do. What room are you going to?\"\n\n\"303. What's 'Alt Study'?\"\n\nPenny tore off the sheet of paper as theatrically as she could. \"You don't want Alt Study,\" she warned.\n\n\"Well, I don't know what Alt Study is, so how would you know I don't want it?\"\n\n\"Alt Study is shorthand for Individual Alternative Study Plan. It tends to be reserved for people with hang-ups over certain materials; moral objections to dissecting frogs, the occasional religious exemption, you know.\" She leaned in, giving him a conspiratorial look and maybe the faintest view down her blouse. \"My take on it is very different. We're talking AP-caliber work; I'd be careful before you tell me you're interested.\"\n\n\"Well...\" Caleb's eyes took the briefest glance into Penny's cleavage before forcing his eyes back up to her. \"...what exactly would I have to do?\"\n\n\"Normally, you'd have to stay after school twice a week, which normally wouldn't be too much of a problem, except I imagine you're still involved with athletics, as well as some other clubs to beef up your college resume, right?\"\n\n\"Yeah.\"\n\n\"So you might have to come in on Saturdays for a two-hour English lab. There go any Friday night blowouts with the boys.\"\n\nThis was often the most discouraging part of making an Alt Study pitch: If someone took to it, that created a whole load of extra work for no extra pay, which is why she only offered it to students she really liked and could truly benefit from it. In this case, the mark was Caleb. The worst that could happen was that she'd have to babysit his tight ass on Saturdays for free while discussing her favorite book in the world -- a book he might not be excited about, but something she thought he could handle with her help, should he really try to take it on. He couldn't possibly be more comfortable with that than she would be.\n\n\"Come in here?\" Caleb asked.\n\n\"Well, we'd probably do it at a local Starbucks or something, which doesn't seem that bad, I admit. However, all that is before I tell you what book you'll be reading.\"\n\n\"And what book would that be?\"\n\nPenny shook her head. Normally, everything would be set up and agreed upon between the teacher, his or her student, and the student's parents before Alt Study commenced. With the blessing of administration, however, Penny did things just a little differently.\n\n\"So right now, you have The Light in the Forest. A known quantity. Short, easy, dull as ditchwater. You can keep at it and tough it out, OR...you can pick door number two. You don't know what's behind door number two. Could be Hustler magazine. Could be The Necronomicon. But if you pick door number two, you're in it for the full ride. You lose the known quantity and you have to accept whatever's behind that door. You understand? There's no going back.\"\n\nEvery student Penny ever offered this choice to would take pause at this point, whether they chose to stick with what they were reading or opted for Door Number Two. About three out of every four folded.\n\nCaleb only needed two seconds to say \"Door number two,\" with a determined rumble in his voice that made Penny's heart flutter.\n\n\"Well, okay then.\" Penny wrote out one more hall pass. \"When's your study hall period again?\"\n\n\"6.\"\n\n\"Perfect,\" said Penny, tearing off the second hall pass and giving it to Caleb. \"Meet me at the library. I'll give you the book and we'll go over the first chapter together.\"\n\n\"Cool, Miss Piper. Thanks a lot.\" Caleb gave Penny a little salute, turned on his heels, and walked away. On his way out, Penny couldn't help but notice that he was wearing his tight jeans today; she wished he'd wear them every day.\n\nBut once he left, she laughed to herself. What she was about to do to this poor kid was deeply beneficial and superficially evil.\n\nFirst, Penny used her free period to call Caleb's mother Amelia. Amelia was almost always available to talk, but her time was precious, so Penny laid out the situation as quickly as she could and explained the plan to get her son back on track. Amelia understood the pitfalls of Penny's idea but loved it anyway; she promised to keep an eye on Caleb and report back if he seemed overwhelmed by the workload.\n\nArmed with Amelia's blessing, Penny went straight for the library. There was a little knot of fear forming under her lungs, tightened by the knowledge of her book being freely available for checkout. Considering the book, she wanted to write it off as an irrational knot, but all the same, it refused to let up until she found it: top shelf, just past the second door, dusty as ever. For somebody she allegedly liked so much, she sure was excited about seeing his spirit break before her eyes.\n\nCaleb arrived at the library minutes after the 6th period bell rang, just as Penny had selected a table and placed a little scarf over the book like it was the signature story of that week's Iron English Student. On his way over, he acknowledged a group of girls -- cheerleaders most likely, they had that vibe -- who dipped their heads just slightly to get a good look at the goods Penny noticed for herself earlier. She had to smile; it was heartening to know that some high school girls didn't have terrible taste in boys.\n\n\"So,\" Penny explained, \"this book, which was written in the 19th century, is about twice as long as The Light in the Forest. That means in order to finish before the end of the quarter, you'll have to do a lot of reading at home, and our individual sessions might have to run long in order to cover everything you need to know. This might be the most intellectually intense six weeks of your life.\" Penny's hand hovered over the scarf, preparing to lift it. \"Last chance to turn back,\" she said. \"No judgements.\"\n\nCaleb shook his head. \"Let's just get this over with.\"\n\nPenny pulled the scarf, and got exactly the reaction she was excited for once Caleb realized he was going to have to power through Pride &amp; Prejudice by the end of the quarter.\n\n\"Man, the book that inspired that stupid-looking zombie movie?\"\n\n\"I think you'll find that knowledge of the book makes the stupid-looking zombie movie better, actually.\" Penny steepled her fingers and grinned her best evil grin because by now Caleb had to know it was all in good fun. What Caleb probably didn't know -- what his mother would surely tell him if things got too stressful over the weekend -- was that Penny was almost counting on him to give up and beg to go back to The Light in the Forest like all the other students eventually did, and although she planned to make a big production out of it, she would be more than happy to acquiesce. After all, nothing was official yet.\n\n\"What do you say, Caleb? Think you can handle it?\"\n\n\"I think I'm in trouble,\" said Caleb. \"But I just had to know what could be harder to read than the...uh, thing I was reading before.\" Caleb picked up the book, flipped through it, and his eyes seemed to light up a little bit. \"Then again,\" he realized, \"if you could guide me through Shakespeare, anything can happen, right?\"\n\nThat earnest, game-for-everything grin, the one that melted her pussy whenever she thought of it, was back again. Penny had learned to prepare for it since she first saw it, but just for a second she wished she was one of those cheerleaders that Caleb nodded at earlier.\n\n\"We only have 40 minutes,\" said Penny, cracking open the book. \"Let's dive right into Chapter 1.\" She slid the book over to Caleb. \"Read out loud for me.\"\n\nCaleb leaned into the pages. \"'It is a truth universally acknowledged,\" he read, \"that a single man in possession of a good fortune, must be in want of a...\" He couldn't complete the sentence without sniggering. \"...of a wife.'\"\n\nPenny cocked her head. \"Why's that funny to you?\"\n\n\"It's not supposed to be?\" He sounded worried even though he was still chuckling over the line. \"I mean, she's pretty much nailing how guys operate even today; no matter what we do, no matter how good we are, it's never enough unless we're...look, there's no clean way to say this: unless we're pulling down trim.\"\n\n\"Come on, Caleb, you couldn't say 'pick up women?'\"\n\n\"No, because we don't talk about them like they're people -- not in the locker rooms, anyway. It's 'trim,' 'pussy,' 'piece of...ass,' you know? That's what matters to us more than anything off the field. Obviously that's not exactly how things worked in 19-whatever, but when she says that a man with all this money must want 'a wife' and not a woman and calls it 'a truth universally acknowledged,' well, it seems like she's making fun of the whole concept from the jump.\"\n\nThat, as they say, is when shit got real.\n\n\"She's sly about it, but she's still doing it. There's a term for that, I think, I wish I could remember it.\"\n\nPenny would eventually tell Caleb that the term he was looking for was \"satire,\" and that the book was, more specifically, a comedy of manners. At the moment, however, she was too busy shaking her head, jaw practically on the table.\n\n\"That bad?\" Caleb asked.\n\n\"Yeah,\" said Penny. \"If a book was written in the 19th century, that means it was written in 18-whatever, not 19-whatever. Other than that...the only reason I'm not slow-clapping you right now is because we're in a library. That's an incredibly astute observation.\"\n\n\"Thanks!\" Caleb turned shy in that way one only could when he felt really proud of himself.\n\n\"Keep going; I think you'll find the rest pretty funny too.\"\n\n* * * * *\n\n\"Hey, you wanna hear a joke?\"\n\nNo she fucking didn't. Penny had come in to Silver Spoons because the bar was in walking distance of her apartment and she needed to get sloshed after a day of cascading failures that somehow managed to continue into her third Bacardi and Coke.\n\n\"What fucks like a tiger and blinks a lot?\"\n\nWell, he wasn't waiting for permission. He was a stringy, balding man with a voice of glass and a tan line around his ring finger. Penny wanted to say that he was cannonballing himself back into the dating pool, but that would imply that he made everyone around him wet.\n\n\"I don't know, what?\" she asked, because she might as well have.\n\nHe leaned in and broke into sort of mild epileptic fit. \"You tell me,\" he tried to purr.\n\n\"Oh, I get it,\" she said with the sharp twang of her last string breaking. \"You're blinking a lot, and that's supposed to moist my nethers or something.\"\n\n\"Can you blame a guy for trying?\" he asked, stupidly. \"Lemme buy you a drink. My apology for the bad joke.\"\n\n\"Don't apologize for the joke, apologize for your existence, you mealy-mouthed little trash fire.\" She was normally a little more careful about how she turned down guys, but it was that kind of day. Let him follow her home. Let him shoot her in the face if he was that kind of asshole. Fuck it, she was done.\n\n\"Whoa! Look, I'm trying to be nice! You're hot! Take the compliment already!\"\n\n\"If you actually knew what a compliment was, your wife might not laugh at your dick as often.\"\n\n\"You fucking whore!\"\n\n\"Yo, Lizzie, this guy bothering you?\"\n\nOh, great. And now the underage drinker she chose to ignore because he did moisten her nethers was coming to back her up. So on top of everything that happened today, now there was a slightly better chance that somebody could see them together, report it to the school, and get her fired.\n\nShe had to give Caleb credit, though; the fake name was an interesting play.\n\n\"I'm fine, Darcy,\" she said, thinking on her feet. \"He was just about to leave.\"\n\n\"Who the hell names their son Darcy?\"\n\n\"Look, guy.\" There was a surprising Tesh-like smoothness in Caleb's voice. \"I like this bar. I really don't want to get banned from it. Do all of us a favor and walk away.\"\n\nCaleb had half a foot and a hundred pounds clean on the schmuck. He didn't have to think about it too much, which might have been part of the problem.\n\nFft! A fat, translucent blob of saliva pelted Penny on the cheek, and before Caleb could process it, the schmuck was already stomping off to whatever pore of the bar he oozed out of. Caleb made it two steps after him before Penny grabbed his wrist.\n\n\"Let it go.\" She spoke in a flat tone, because if she allowed herself to feel anything at that moment, she'd be screaming at Caleb to put that motherfucker in the ICU. \"If the cops get called, you're going to jail.\"\n\nCaleb seemed to have a hard time caring.\n\n\"You drove him away, and he knows you're looking out for me so he won't come back later. That's all that matters. Don't be a guy about it.\"\n\nCaleb needed a deep breath, but he eventually turned away. He grabbed a napkin from the holder on Penny's table and wiped the disgusting loogie off her face.\n\n\"Thanks, I guess.\"\n\n\"Of course.\"\n\n\"Sorry if I seem ungrateful, I just\u2014\"\n\n\"Yeah, I'm kinda wondering if I just walked into a trap too.\" Before Caleb sat down with his beer, Penny took a minute to soak in his look: he was wearing those tight jeans she loved so much, as well as a short-sleeved button down with the top two buttons popped open, giving her a tantalizing glimpse of his smooth, chiseled chest. \"What are you doing here, Miss Piper?\"\n\n\"Short version? This bar's in walking distance of my apartment.\"\n\n\"What's the long version?\"\n\nSo Penny told him. About the pothole she hit on her way to school that snapped her car's front-right axle in two. The hour she had to wait for a tow truck. The test she was supposed to proctor that she missed. The $700 estimate for replacing the axle. The taxi that took forever to get to her because the stupid cabbie thought she was at a DIFFERENT repair shop on the other side of town. Telling all this to her grandmother, the woman who raised her and inspired her to be a teacher, and having her first question be if the cabbie was a Mexican because \"they always mess up things like that.\" And then she told him about the literal turd on top of this metaphorical shit sundae of a day: The bird that crapped on her just before she got in the door of her apartment.\n\n\"Good God!\"\n\n\"Yeah. I never felt like I had to get drunk before. I didn't even drink that much in college. Whenever I was down, I read Jane Austen novels and listened to Stephen Sondheim musicals. Now...\" She took a big pull of her rum and coke, more to accentuate how fucked up she was over the situation than out of any pressing desire to do so. \"Slick P&amp;P reference, by the way.\"\n\n\"Thanks. I just didn't want him to know your name.\" Caleb finished his beer. \"Having said that...c'mon. 'Darcy'? Really?\"\n\nPenny laughed. \"I'm sorry! It was the best I could think of on the fly!\"\n\n\"I know it's part of the joke and all, but do I look like a guy from, like, Stuffington, New England? Am I wearing an aquamarine sweater vest, insisting that first cousins are legal?\"\n\nPenny choked, momentarily breaking down into a jiggling pile of barely contained laughter and snorts. \"Jesus, you've got an imagination!\"\n\n\"Don't be too impressed. Most of that came from a video game I played a few years back.\"\n\n\"Ah. Well, video games haven't rotted your brain yet.\" Penny, aware of her unorthodox-at-best surroundings, leaned toward Caleb and dropped her voice a few octaves. \"I submitted your grades yesterday: A- for the class, 92 on your final. Way to go.\"\n\n\"Wow.\" Caleb looked genuinely shocked. \"Uh, thanks.\"\n\nPenny smiled and shook her head. \"I didn't do it. That was all you, tiger.\" Off that word, Caleb grimaced. That would've made Penny regret its use if she wasn't already grimacing herself. \"Ugh, why did I say that?\"\n\n\"It would've been cool on any other day.\"\n\n\"Seriously, I can't thank you enough for being my hero back there. Even though you really shouldn't be here, I'm glad you were.\"",
        "Caleb's face seemed to turn; different from his earlier blanch, like a bad memory had suddenly overcome him.\n\nPenny's mood soured in kind. \"God, I really don't know how to shut up and be grateful.\"\n\n\"No no, it's okay\u2014\"\n\n\"I mean, I know you! You're not gonna binge drink and wrap your car around a six year old boy! But there's a reason why this is the law, and I don't want to...you know.\" Penny couldn't bring herself to say 'You have a fake I.D. and I'm letting you get away with it even though I shouldn't,' lest she say it too loud in her excitement-slash-heart-crushing panic.\n\n\"That's really...\" Caleb's head was buried in his hands, his thumbs rubbing his sinuses. \"You know what? You're right; I shouldn't be here, and I don't wanna get you in trouble.\" He stood up. \"Can we go somewhere else and talk for a little while?\"\n\nPenny relaxed a little at this suggestion. \"You're okay to drive?\"\n\n\"I mean, I should be in about an hour, but we really don't have to drive, do we?\"\n\n* * * * *\n\nPenny blamed the day for not remembering. Just a short walk from Silver Spoons was a Barnes and Noble megastore with a Starbucks inside -- their Barnes and Noble. With Caleb taking to Pride and Prejudice against all odds, he and Penny needed a de facto classroom for an hour or two every Saturday to discuss the week's reading and go over assignments. The B&amp;N was quiet, comfortable, had good coffee, and provided just enough distraction through its DVD/Blu-Ray section whenever they needed a break. (It was during one of these side jaunts that inspired Caleb to espouse the virtues of the Marvel Cinematic Universe, buying her a copy of Thor to get her back on track. \"Call it a 'thank you' gift,\" he said. Months later she was lined up for Civil War dressed as Captain America, and that Monday Caleb came in ten minutes early for a way-too-spirited argument about the Sokovia Accords.)\n\nSo whatever weighed on Caleb's mind, it seemed right that they talk about it at their usual table over coffee -- iced, half-caff caramel macchiato for him, hot and black for her, if only so she could feel more sober. \"My treat,\" Penny said, digging into her purse.\n\n\"You sure? You're the one who had the bad day. All I did was take a tough final.\"\n\n\"My day's already better,\" she said.\n\nThe usual table was tucked away at the corner of the bookstore caf\u00e9, a quiet little two-seater nook that barely got any traffic during a busy Saturday afternoon, much less an hour from closing on Thursday. Once they sat down, Penny took a long sip of her beverage, as much of it as she could stand, so that the bitter taste could pull open her eyes and the heat could loosen up her chest, and let out a satisfied sigh after she swallowed. \"So,\" she asked, \"what's going on?\"\n\nCaleb played with his straw, stirring his drink around for a few seconds. \"Okay, well, we agree that the guy who was talking to you earlier was a total jerk, right?\"\n\n\"Yeah.\"\n\n\"But if he never talked to you, he never would have gotten anywhere anyway, right?\"\n\n\"Right...\" Penny couldn't see where he was going. \"But so what? The way he behaves, it's not like he deserves to go home with anybody.\"\n\n\"Exactly,\" said Caleb. \"But...okay, I guess what I'm saying is, if I see a stranger, I like the way she looks, and I wanna, uh, get to know her better, what's the right way to behave?\"\n\nPenny wasn't quite sure he heard that correctly. \"For you?\"\n\nCaleb gave her a tentative nod.\n\n\"I...I think you could just introduce yourself, honestly. I mean, I'm assuming we're talking about a, uh, casual relationship, right?\"\n\n\"Yeah.\"\n\n\"Okay, so yeah, you just go up, compliment her, politely introduce yourself, and ask if she wants some company. If she does, see where it goes from there; find out her interests, maybe ask her to dance. If not, just wish her a good night and cut bait. You're always better off finding someone else who's actually interested in you, rather than wearing a person down.\" Penny leaned in for emphasis. \"And just FYI? I promise you, there's always going to be someone else.\"\n\nCaleb nodded, understanding, appreciative as ever.\n\nFor Sober Penny, that probably would have been enough. Drunk Penny, however, was sure Caleb could read the utter confusion in her voice, and immediately moved to explain herself. \"I mean, I'm surprised you'd even ask me that,\" she said, \"because let's be honest, you could walk into a room and blind girls would throw themselves at you.\"\n\nCaleb chuckled. \"Most of the ones who have are, like, aggressive, you know? I like chicks who know what they want, but...\"\n\n\"There's 'I'm into you,' and then there's 'You're into me, you just don't know it.'\"\n\n\"Kinda, yeah, but they also just pile it on. This one girl in my study hall passed me a note once that -- look, I don't know how to censor it without losing the insanity. It said 'I'll let you choke me while you shove your cock up my ass.'\"\n\nPenny's jaw dropped; she could've sworn she felt her eyeballs bulge against her polycarbonate lenses.\n\n\"Yeah! I mean that's not hot, that's freaking weird, you know? And that's like an isolated incident, but I get a similar vibe from everyone else that tries to get with me, like...\" Caleb scrunched his eyes shut, another thing he did when his vocabulary was failing him. \"It's like they're just in it to say they had sex with me, and not because they actually like me. I don't know why that's so uncomfortable when it's every guy's dream to have women beating down their door, but here we are I guess.\"\n\nTo Penny, it almost sounded like...\n\n...like...\n\n...No. No way. That can't be...should I ask? I'm gonna ask. God help me.\n\n\"Can I ask you something?\" Penny looked around before leaning in. \"You don't have to answer if you don't want to, it might be a little personal,\" she explained.\n\n\"Please,\" said Caleb, \"How much more personal can this get?\"\n\nAgain Penny went for the low voice. \"You asked me how to pick up girls, you mention that you're not into the girls who usually go after you...but surely there was someone that, you know...?\"\n\nCaleb shook his head.\n\nPenny dropped her voice even lower, to a near whisper: \"Had sex with you?\"\n\n\"That's what I'm saying. I'm still a virgin.\"\n\nPenny didn't know what answer she was expecting, but she was thankful not to have a mouth full of hot liquid at that point.\n\n\"Yeah, I know.\" Caleb was responding to the face she must have been making. \"Can't you tell from the promise ring or my unhealthy obsession with Dungeons and Dragons?\"\n\n\"I'm so sorry! I honestly didn't expect to hear that!\"\n\n\"No no, it's cool. Actually, I tried to lose it. At a pool party last summer, there was this girl...actually, this might be TMI, I don't wanna\u2014\"\n\n\"If you feel like you have to tell it, I'm listening.\"\n\n\"Okay...so the team hooked me up with this chick. She was a cheerleader who had just graduated, and she was just...\" In the absence of words that could do her justice, Caleb settled for a groan and a grand hand gesture. \"Gorgeous. Tall, blonde, flawless skin...perfect...\" Caleb used his hands to mime a fantastic set of tits; Penny nodded her understanding. \"But yeah, the team knows I'm gawking at her, they know she's down, so they explain the situation and she goes ahead and makes the first move. We get to an open bedroom, fool around, strip, again, just, ugh...and then the worst thing happens.\"\n\n\"Too, uh, fast?\"\n\nCaleb's laugh was bitter. \"I wish. I could've spun that as a compliment. No, nothing happened.\" Caleb gestured downwards. \"Down there.\"\n\nPenny cringed in sympathy.\n\n\"Yeah, no matter what she did. Spent five minutes trying to get something going, then she called me a fag and left.\"\n\nIt was too easy to picture the gossipy cunts that tortured her in high school in the same position, and Penny had to stop herself from slamming her fist on the table. She settled for a roll of her eyes, a shake of her head, and the words \"Fucking bitch,\" muttered with the sort of malice that normally had to be screamed out. When she saw Caleb's eyes bug out and his eyebrows jump, she realized that -- not counting her excoriation of the dickhead at Silver Spoons -- it was the first time she ever openly swore in front of Caleb.\n\n\"Um...language?\" he tried to chide while getting over his shock.\n\n\"Sorry,\" she said. \"Sore subject.\"\n\nCaleb nodded. \"Well, to be fair,\" Caleb asked, \"what would you think if a guy you were with couldn't get it up for you?\"\n\n\"What I would think isn't the point,\" she almost shouted, \"I sure as hell wouldn't call him the f-word.\" She took a beat to make sure her next couple of sentences were spoken at an appropriate volume, but she made no such attempt to control her offended gaze or her frank language. \"Also, as fucked up as I think it is to have such a large group of people rooting for someone to get laid? I'd try not humiliate him in front of his friends.\"\n\nCaleb didn't respond immediately.\n\n\"And I'm sorry for cursing again,\" she quickly added, just in case.\n\nSoon after, a gentle, appreciative smile crossed Caleb's face, and his hand seemed to tighten a bit like he was squeezing an invisible stress ball. \"Well, luckily, we're all tight on the squad,\" he said, \"so the blowback was good natured. But I did seriously wonder if I was gay for a little bit.\"\n\nPenny already knew he wasn't. \"So how'd you figure it out?\"\n\n\"Aside from the fact that I was still watching straight porn?\" Caleb scratched his eyebrow. \"I, uh, met a girl I ended up being attracted to. Like, way more than the pool party girl.\"\n\n\"Really?\" Penny arched her eyebrows, remembering the burn of his gaze during that first day of class.\n\n\"Yeah. She wasn't available, and that sucked, but she kinda helped me figure out what went wrong last summer. See, as hot as Pool Party Girl was, everything about her felt off once we started talking. I mean it's not like I'm waiting for true love or anything, but...\"\n\n\"You'd rather lose your virginity to someone who probably won't call you a homophobic slur at the first sign of trouble.\"\n\n\"I guess, yeah.\"\n\nSpecifically, she thought, you'd rather lose your virginity to me.\n\nIn the span of two seconds, an argument within herself flared up and resolved. Of course there was the usual, correct voice screaming \"Nope! You can't do it!\" There was also a second voice whispering exciting words about enthusiasm and stamina, asking her how many of her previous partners ever looked at her like she belonged on the cover of Penthouse. She recalled a latent interest in erotic modeling in college, something she filed away because it could obviously fuck with her career, and anyway, she didn't think she was pretty enough back then. Caleb was trustworthy, though; maybe he would like to see her give it a try...\n\nAnd maybe you're not the girl Caleb's talking about, dummy. It was a third voice, one that was easier to listen to because it hadn't spent the last few months judging her attraction to Caleb. The only thing you know for sure is that right now your favorite student is having conflicting feelings about his lack of a sex life. Be the mentor you're supposed to be and talk to him.\n\n\"Well,\" said Penny, \"the good news is, you're in a really good position for college. Most high school guys are used to hooking up with...let's say 'undiscerning women.' Those women still exist in college, but most others are looking for substance, and that usually leads to a rude awakening for the ones who are used to having their pick. You're entering the college social scene with no expectations and...if not an idea of what you want, certainly knowing what you don't want\u2014\"\n\n\"Actually, I know what I want,\" Caleb said. \"I'm just worried that kind of person won't be into me.\"\n\n\"Okay, so what do you want?\"\n\nCaleb sighed, looking around, playing with his straw. He always did this when he had an answer or an observation on the tip of his tongue and couldn't quite figure out how to phrase it. But that same troubled look from the bar hung heavier on his face now, and Penny wondered if he was about to confess something very personal and life-affirming.\n\n\"Okay, please don't take this the wrong way,\" he finally began.\n\nPenny leaned in closer. Part of it was offering the same courtesy he always offered her when she spoke at length. Mostly, though, she was pretty sure she knew what she was coming and she was excited to hear it.\n\n\"But -- god, I can't believe I'm folding after twenty seconds. That girl I met that I was attracted to? That was you, Miss Piper.\"\n\nThe grin that crossed Penny's face could have stretched to the self-help section. She had to stop herself from clapping her hands.\n\n\"I'm not making a pass,\" he was quick to qualify, \"I'm not trying to make you uncomfortable.\"\n\n\"Caleb.\"\n\n\"I mean don't get me wrong, I think you're hot as hell, but I know it's out of the question, so I don't want you to think you have to give me a big let-down speech.\"\n\n\"Caleb.\"\n\n\"But if I could meet somebody who's hot in a down to earth way, like you are...which totally sounds more backhanded than I meant\u2014\"\n\n\"Caleb.\" Penny reached out and took Caleb's hand, stopping him mid-stream. \"First of all, I know you're attracted to me, you haven't exactly been subtle about it.\"\n\nCaleb almost looked surprised for a second, but then he seemed to remember something, and he admitted, \"Yeah, I guess I haven't.\"\n\n\"Look at me, though: I'm not uncomfortable, I'm flattered. How could I not be?\"\n\n\"You, uh...\" Caleb was clearly off balance, caught somewhere between a thrill and a scare. \"You realize we're still talking 'casual,' right? I just admitted that I kinda wanna...fuck you.\"\n\n\"No, now you've admitted that you kinda wanna fuck me,\" she giggled, much to Caleb's embarrassment. She gently pulled his hand closer to the center of the table. \"Caleb, relax, it's...okay, inappropriate, but it's not unnatural.\"\n\n\"Yeah, but...\" Caleb sighed, that guilty look in his eyes still present. \"Look, the thing is, I'm not talking about soft, tender sex. I mean, I like you a lot. You're the best teacher I've ever had, I just have so much respect and admiration for you. And somehow, all of that is tied up with wanting to throw you onto a bed and...and pound the shit out of you, all right? The way that fuckin' cock from the bar wishes he could.\"\n\nPenny crossed her legs. Tightly.\n\n\"And I feel like an asshole, because I'm not sure you do that to someone you respect. And obviously there's no way you think of me like that\u2014\"\n\nShe bit her lip. Hard.\n\n\"\u2014but that doesn't bother me so much. I mean, it's not like this is love. Any time I try to picture marriage and kids and shit, it feels...off.\"\n\nShe nodded her head, too busy trying to look like she wasn't crossing her legs and biting her lip to do much more.\n\n\"Really, I just hate that I can't just appreciate you for how awesome you've been to me. And now that I'm telling you all this, I really hate that you'll probably never talk to me again without thinking, 'Oh, that's the creep who took all that extra help to try and get in my pants.'\"\n\nPenny blinked. She uncrossed her legs. Let go of her lip.\n\n* * * * *\n\nShe remembered the heat of his gaze from the first day of class.\n\nShe remembered that gaze through much of the first half of the year, up through the Shakespeare unit where he asked for extra help.\n\nHowever, his gaze eventually had a diminishing effect on her. She figured she was just getting used to the idea of Caleb as a student rather than a piece of ass to jill off over in the shower; she probably was. Thinking back, though, Penny started to recognize a gradual, subtle shift in Caleb's attitude throughout that unit. When he approached her for extra help, he was as kind as he always was, but there was a cocksure aloofness to him -- a sense that he was positioning himself, even if he wasn't sure to what end. Working through MacBeth together, all that seemed to gradually fall away; he became a little more open, a little more attentive, a little more eager to put work in.\n\nIt wasn't that his gaze wasn't working on Penny as well anymore, it's that it was getting cut with genuine admiration. Admiration, and eventually something else.\n\nSomething Penny recognized in his eyes right now.\n\n* * * * *\n\nCaleb sighed. \"Anyway, that's been on my chest for six months. Maybe I should've gone with decaf.\"\n\n\"Caleb,\" asked Penny, \"is this why I had to come to you about The Light in the Forest? Because you were ashamed of having a crush on me?\"\n\nCaleb shrugged. \"'Crush' is a weird way to describe it, but...kinda, yeah.\"\n\nPenny smiled a warm smile, took Caleb's hands back into her own, and said, \"Oh sweetie. I'd hug you, but I don't want you to worry about popping a boner.\"\n\nCaleb chuckled and shook his head; whatever invisible weight dragged him down for most of the night finally seemed to slough off his shoulders.\n\n\"Look,\" she explained, \"your desire to 'pound the shit out of me' doesn't mean you don't respect me. Respect is earned on a way more rational plane than sexual attraction; if our hormones had anything to do with rational thought, I wouldn't be attracted to you at all. It's what you consciously do about that attraction that measures the respect you have for that person. Blackmail, manipulation, rape; that's what real disrespect looks like. You understand?\"\n\n\"Yeah, but wait\u2014\"\n\n\"Also? Nothing about what you're going through is odd or shameful. You only hit puberty, what, six, maybe eight years ago? There are people older than me who are just starting to get the hang of how to deal with lust. If anything, the fact that you recognize that this\u2014\" Penny painted the air between her and Caleb with her hand. \"\u2014isn't romantic love? That puts you way ahead of the curve.\"\n\n\"I guess that makes sense,\" said Caleb. \"But, uh, did you just admit that you were into me?\"\n\nBeing shorthanded on brain cells, Penny needed a few moments to frantically comb back over her words, a moment longer than Caleb would give her.\n\n\"You said, if our hormones had anything to do with rational thought, you wouldn't be attracted to me.\"\n\n\"No I didn't,\" Penny stammered, klaxons going off in her head.\n\nCaleb leaned in; daring her, clearly unsure if he really wanted to.\n\n\"Shit,\" Penny groaned into her hands, after realizing how weird it would look if she ran for the door. \"Did I?\"\n\nCaleb just nodded, expression unchanging. Penny shook her head, quietly resolving to never drink rum again.\n\n\"Okay, screw it. You were honest with me, I'll be honest with you.\" She drew a deep breath, mining as much courage as she could from the oxygen. \"You talked about throwing me onto a bed earlier,\" she said. \"Well, if we weren't teacher and student? If I was just some girl you saw at a party, and you went up to me and acted like your sweet self, looking at me the way you've been looking at me for the past 9 months? I promise you, we wouldn't have made it to a bed.\"\n\nCaleb had absolutely no reaction for a good thirty seconds.\n\nThere was a split-second moment where it looked like he was about to react with something like shock, but then he went blank again.\n\nEventually he settled on something Penny had to agree was perfectly rational: He threw his head back, clasped his hands over his mouth, and closed the muscles in his throat in a valiant attempt to suppress his laughter. \"Oh my God,\" he choked out, \"what is happening?\"\n\n\"If you figure it out, let me know.\" Penny was half mortified, half thankful to be free of the burden of her own shameful secret. \"I'm kind of surprised YOU didn't notice.\"\n\nCaleb's gaze returned to Penny, his expression peaceful yet unstable as he tried to figure out for himself: \"Jesus. So what happens now?\"",
        "\"Nothing happens. You're my student. I can't have sex with you, I'm already in a grey...a dark-grey area by wanting to have sex with you.\"\n\n\"Yeah, and I get that, but I'm not your student anymore,\" said Caleb. \"I'm graduating in three days, you turned in my grades, you don't hold any power over me.\"\n\n\"It doesn't work like that.\"\n\n\"Why doesn't it?\"\n\n\"Because it...\" Penny stopped herself. She looked down and took a breath at throttled speed, while holding a pausing finger up. \"It just doesn't,\" she said before she looked back up. \"I'm sorry, I didn't mean to snap.\"\n\n\"No, no,\" Caleb shook his head, the guilt returning full-force. \"I get it. Actually, I'm sorry that I turned into 'that guy' for a second.\"\n\nPenny gave Caleb a sigh and a smile. \"Don't kick yourself. You got excited, I shut you down, you backed off and apologized. That's what respect looks like.\"\n\n* * * * *\n\nFor the next five minutes, all they could think to do was finish their drinks to a soundtrack of muted folk music and the chatter of the few passing customers left before deciding it was time to leave.\n\nIt was a warm, thick night in Westbrook Heights; everything just seemed to move slower. Walks that normally took ten minutes took closer to fifteen and felt more like twenty. Sharing such a walk with someone you're fated to have eternally unresolved sexual tension with goes from \"awkward\" to \"fundamentally uncomfortable.\" During that languid journey to Miss Piper's apartment, Caleb recalled the \"How Am I Feeling Today\" poster that always caught his eye whenever he visited his guidance counselor, and tried to remember if it had anything on there that described whatever the hell was going through his mind for the last fifteen minutes.\n\nHe was relieved, that was for sure. He was definitely excited that Miss Piper felt the same way about him, certainly disappointed in her inability or hesitation to act on those feelings. \"Frustrated\" felt like it should have been a better word; the hand-holding, the confession, the dress, it all swirled around Caleb's dick and made his jeans a bit tighter. Frustration, however, seemed to imply an anger that somehow eluded him. In fact, all he seemed to care about was Miss Piper's empty hand, and whether taking it back in his own would let her know he was really, truly okay with how things were, or if it would just make an already awkward situation worse.\n\nBy the time they passed Silver Spoons, Caleb decided to go for it, and was relieved to feel Miss Piper's hand grasp back and to see her smile at him, however shaky that smile may have been. They continued that way for the last five minutes of the walk, up to the small apartment complex where Miss Piper lived.\n\n\"26,\" she pointed, \"Right side, second floor.\" Westbrook Commons was a pair of long brick two story buildings that faced each other across a modest parking lot, with a smaller administrative building at its end. Caleb continued to escort her, hand in hand, until they were up the stairs and in front of her door. It was there that he finally let go; turning away proved to be more difficult.\n\n\"So, yeah,\" Caleb said.\n\n\"Yeah,\" Miss Piper repeated, laughing.\n\n\"Well, I'm glad I ran into you tonight,\" he said, \"even though it took a really shitty day to make it happen.\"\n\n\"And that it ended up getting weird at the end there?\"\n\n\"That too.\"\n\nMiss Piper placed her hand on the door and looked up. Her body swayed a bit; maybe from the alcohol, maybe from the indecision. A porch light mounted in the overhang draped her in soft amber that, combined with the sweat that the heat had drawn to the surface of her skin, gave her a sexy, ethereal glow.\n\n\"Here's the thing,\" she sighed. \"Even though I'm no longer teaching you in a classroom, I'm still your teacher. You know what I'm saying? That's our relationship, it's locked in. You've been compelled to follow my lead for nine months. If I made a move on you, how do we know you wouldn't feel compelled to...you know?\"\n\nOn reflex, Caleb opened his mouth to answer, but stopped himself before any words came out. He looked Miss Piper over and briefly considered the frustration in her face. It was definitely frustration, something about her look screamed \"anger.\" But was she angry at him, or just at herself?\n\n\"Do you really want me to answer that?\" he asked.\n\nHer mouth squirmed; literally chewing on her answer. \"Yeah,\" she finally said. \"Humor me.\"\n\nCaleb took a deep breath. He wanted to go back in time and laugh in his own face for thinking the bookstore confession was opening a door. This felt real, final. Whatever happened after this, there couldn't possibly be any way back.\n\n\"Well,\" he began, \"it's a dumb question. Of course I'm 'compelled.' You're fucking gorgeous.\" Caleb paused for another quick breath, during which he thought he could see Miss Piper blush and ever-so-slightly shrink. \"In the nine months I've been 'following your lead,' I went from 'Gee, it'd be swell to see her naked' to 'Oh my God I wish she could be my first.' Now that it seems like I got a chance at that -- ridiculously small as it is -- I'm absolutely compelled.\"\n\n\"But that's part of the problem.\"\n\n\"Yeah, well, that's the other thing: If you're talking about rape or abuse? I'm 18. And I don't feel pressured, or groomed, or what-the-fuck-ever. I feel like a grown-ass man trying to talk his hot teacher into bed. If anything, I'm worried that I'm pressuring you right now, because even though I shouldn't care, even though I don't have the right to feel this way given how many women I keep turning down...I really, really do not like being a virgin.\"\n\nIf Miss Piper did blush, it had faded, replaced with strange, studious eyes and a wan smile that could have meant anything from \"I'm going to FUCK him\" to \"What a strange, silly boy.\"\n\nThen she was closing the distance between them with short, confident steps, holding those eyes on him as she grasped his shoulders, leaned in...\n\n...and kissed him on the cheek.\n\n\"Good night, Caleb.\"\n\nThe door shut behind her.\n\nCaleb allowed himself a single hot second to quietly curse his fortune before he took a hard breath out and drew in an acceptance of the situation.\n\nHe started the walk back to his car at Silver Spoons, telling himself it was okay, that this was how it was meant to be, and the thing he wanted probably would've backfired in epic fashion. His phone buzzed, probably with a text from Mom wondering if he was okay, but he ignored it to contemplate the idea that he was drunk on a fantasy of sex and that the reality was likely to be different and awkward and yeah, he liked Miss Piper a lot, and he trusted her enough to think that if he came too fast or handled her too rough or cried in the middle of it (he only heard that was a thing; he doubted it could happen to him but what the fuck did he know?), she'd be all right and she'd help him through it. She was right as ever, though; college was going to open up a whole new world to him. His first time might be with someone he could pursue an actual relationship with; it wasn't something he needed, but it certainly wouldn't be so bad.\n\nHis phone buzzed again, five steps from his car, and he pulled it out to assure Mom that he was okay, no, fine, no, great, really, and on his way home.\n\nThat was the plan, anyway. Then he saw the texts weren't from his mother.\n\n&gt;Don't leave yet.\n\n&gt;If you're already on the road, go back to Silver Spoons and stay in your car.\n\nBefore Caleb could ask himself what was happening, a new text from Miss Piper came through:\n\n&gt;Also, call your mother. Let her know you might stay at a friend's house tonight.\n\n\"Oh my fucking God.\" It had to be said out loud. Caleb got in his car and locked the door.\n\nHis first call wasn't to Mom; it was to Chris, his wide receiver friend. He told him that he met a girl over at Silver Spoons and he needed an alibi. Chris excitedly agreed to back up any story he told about a drunken Call of Duty session with the boys. \"But look, man, in case something happens,\" he asked, \"who is this chick?\"\n\n\"Dude, chill the fuck out, she's not gonna murder me!\"\n\n\"Yeah, maybe not, that shit happens more to women than men.\" Chris was obsessed with true crime stories and assumed that everyone, man and woman, was an ill-advised hookup away from being disappeared. \"But you don't know, man! You think that dude Jodi Arias was banging thought she was crazy? I mean, when do you think he figured it out, after the tenth stab wound or the twenty-second?\"\n\n\"Fine\u2014\"\n\n\"Maybe it was when she slit his throat. He definitely knew the score when she walked away from his bleeding ass then came back with a gun\u2014\"\n\n\"ALL RIGHT, dude, I get it! Drew, from Silver Spoons? The bartender? He knows what she looks like. But you cannot go probing on this. She's got a reputation to protect, and the last thing I want is the fucking Westbrook Heights Bro Force ruining her life because they're proud of me for finally getting laid. Copy?\"\n\n\"All right, man, I hear you.\" Caleb could trust that he did. The team was going to hear that he traded in his V-Card, of course; no getting around that. However, Caleb could also trust that if Chris ever somehow figured out that he was sleeping with a teacher, he'd keep it to himself.\n\nWith that taken care of, he texted Mom with his cover story, then he texted Miss Piper to let her know he was all set.\n\n&gt;Good.\n\n&gt;I'm going to give you a pop quiz.\n\n&gt;10 questions. 30 secs. to answer each question to discourage cheating.\n\n&gt;Just to make it interesting, let's say you need an 80 to pass.\n\nWell, holy shit, thought Caleb. Miss Piper was playing the teacher thing to the hilt; to what end, he wasn't sure.\n\n&gt;Let's start with vocab.\n\n&gt;Q1: Which of these words best describes \"lecherous; erotic\"?\n\n&gt;A: Opulent\n\n&gt;B: Salacious\n\n&gt;C: Trite\n\n&gt;D: Candid\n\nThis one was easy; it was on his final. Caleb texted back \"B.\"\n\nThirty seconds later, a picture arrived. It was the belt of Miss Piper's dress, lying on a plush-looking grey carpet.\n\n&gt;Correct.\n\nThe stakes were making themselves clear. Caleb sucked in a big gulp of air, compensating after forgetting how to breathe for a moment.\n\n&gt;Here's a good one:\n\n&gt;Q2: Which of these best describes \"cunning or craftiness\"?\n\n&gt;A: Jingoism\n\n&gt;B: Benevolence\n\n&gt;C: Contrition\n\n&gt;D: Guile\n\nAnother one from the final, but the coincidence was funny. Caleb texted back \"A.\"\n\n&gt;Incorrect.\n\n\"Oh, shit,\" he said out loud.\n\n&gt;You may have noticed: The vocab questions are from your final.\n\n&gt;The first question was one you got right.\n\n&gt;The rest are questions you got wrong.\n\n&gt;Think about these carefully before you answer. You don't want to miss any more.\n\n\"You're a diabolical genius,\" Caleb texted back.\n\n&gt;No I'm not.\n\n&gt;I'm just your hot teacher. ;)\n\n&gt;Q3: \"Vulnerable\"?\n\n&gt;A: Benign\n\n&gt;B: Susceptible\n\n&gt;C: Contumacious\n\n&gt;D: Jocular\n\nCaleb remembered this one. He went with \"benign\" on the final because he heard the phrase \"benign tumor\" thrown around a lot and assumed that had something to do with it. \"Susceptible\" was his next best guess, and he felt confident in it, so he texted back \"B.\"\n\nWithin 15 seconds, another picture landed on his phone: the back of Miss Piper's dress, unzipped to the waist, showing off the back strap of her bra and the faintest swell of what was promising to be a rounded behind.\n\nThis game was so fucking on; hopefully literally. Caleb was determined to wrap this up by question 9 because the load boiling in his balls wouldn't have it any other way.\n\nQuestion 4 was about \"melancholy; a longing for.\" Caleb didn't remember this question from the final, but he went with \"wistful\" and was rewarded with a shot of Miss Piper's pretty feet; one bare, one with her low-heeled pump half-on, as if in the process of being kicked off. The fifth question was about \"concerned with the sense of taste.\" That question he remembered, but none of the other answers looked right; he decided to roll the dice on C, \"gustatory,\" and hope the other questions weren't too hard. To his delight, he got an upskirt shot that revealed a wet circle on the gusset of Miss Piper's panties.\n\nAnd then, nothing.\n\nNothing for long enough to worry that Miss Piper was freaking out or stuck or something, and then longer after that.\n\nHis phone finally buzzed, but it was his mother wishing him a good time, assuring him he earned it. If she only knew.\n\nHe flipped back to Miss Piper's window and started to type something, but quickly got another message.\n\n&gt;Sorry for the holdup.\n\n&gt;Just so you know, if I make you uncomfortable AT ANY POINT, don't be afraid to stop me. I want this, but only if you want it too.\n\nCaleb smiled, and texted back \"Don't worry. Couldn't be more psyched.\"\n\nFor a moment he worried that he might fall for...well, Penny. Maybe a part of him had. But if he loved her for anything besides how much she obviously cared for him, he loved her for giving him the confidence to believe he could meet someone even better for him, and his greatest hope was that she could meet someone even better for her.\n\nAnd with that, his own concern for her kicked in. Quickly, before she could resume her pop quiz, he added \"Just so you know, nobody else will ever see these pictures. Not my parents, not my teammates, not my best friends, no one. You could cut my balls off and I still wouldn't release them.\"\n\nIt took another eternity for her to respond. It suddenly occurred to him that this danger never occurred to her, and putting the idea in her head was likely to slam the brakes on the whole thing. But before he could panic, she finally texted back:\n\n&gt;Thank you. Don't worry, I wouldn't do this if I didn't trust you.\n\n&gt;(And wasn't willing to face the consequences.)\n\n&gt;Anyway, you're just stalling because it's time for you to answer some lit questions.\n\n&gt;There's no multiple choice, so I'll give you two minutes to answer each one.\n\nThe love Caleb was scared of, as he understood it, involved feelings of possession and wanting to be possessed. Whatever Caleb's feelings, they didn't involve wanting to possess Penny as his own. All he wanted to do right now was fuck the holy shit out of Miss Piper.\n\nFour more right answers, he thought to himself. Let's do this.\n\nHis phone buzzed again.\n\n&gt;Q6: What does the title \"The Grapes of Wrath\" refer to?\n\nEasy; it was Miss Piper's most memorable lecture. \"A call to a higher power to right the wrongs done to farmers by the corporate class.\"\n\nThe brief period of moral panic had softened Caleb up a bit, but the next picture -- delivered nigh-reflexively -- flooded his cock once more. Miss Piper's bra dangled from her fingers, close enough to the label to identify her as a 32DD. I got her topless. I got Miss Piper topless. Holy shitting fuck my English teacher is topless.\n\n&gt;Q7: Give me an example of dramatic irony in MacBeth.\n\nShit, shit, shit. Dramatic irony, that was when the audience or reader knew something the characters didn't. So when did he know a crucial piece of information before MacBeth did?\n\nWait. Did it have to be before MacBeth knew?\n\n\"Duncan trusting MacBeth,\" Caleb texted, \"even though we know MacBeth plans to kill him.\"\n\nCaleb was wrong: Miss Piper wasn't topless just yet. But the shot of her with bare shoulders, holding her dress to her breasts, angled down into a far deeper look at her cleavage than he was used to while she looked up at the camera, was the next best thing. To top it off, the picture had caught her licking her soft, glistening upper lip.\n\nAnd she continued to wear her glasses, which Caleb adored. They gave her sexiness an innocent, amateurish edge that set her apart from so many other women.\n\n&gt;Q8: What is the significance of the red hunter's hat that Holden Caulfield wears in The Catcher in the Rye?\n\nIt was the worst time to forget the names of Holden's siblings. With the clock working against him, he did the best he could and prayed for mercy. \"He wants to stay connected to his sister and dead brother, who both have red hair,\" he typed out.\n\nHe waited. The usual thirty seconds seemed to pass like five minutes, and he tried desperately to take his mind off the throbbing erection he was so desperate to stroke away.\n\nFinally his phone buzzed. He picked it up:\n\n&gt;I need more for full credit.\n\n\"SHIT!\"\n\n&gt;What's the symbolic importance of the red cap?\n\n&gt;One minute left.\n\nCaleb frantically tapped his fingers to his thumbs, racking his brain for the right lecture, the right homework assignment, the one that was going to bring it home. With 15 seconds on the clock, the word \"INNOCENCE\" suddenly popped into his brain, and he typed it in and sent it.\n\nAnd then he had another thought.\n\n\"Do I get extra credit for recognizing the irony of asking this question?\"\n\nAs the seconds began to pass slowly once more, Caleb wondered if Miss Piper would get the joke about holding onto innocence during a test seemingly designed to measure his right to give his to her. Did he elaborate enough? Should he have explained the joke like a loser?\n\nHis phone buzzed.\n\n&gt;You tell me.\n\nThe picture that followed seconds later almost made him cream him jeans.\n\nThe dress was finally gone. The shot was of Miss Piper in profile, her hand stuffed in her panties, pushed halfway down, revealing the gentle slope of her ass. Her head was thrown back, pushing out a naked pair of magnificent teardrop breasts topped by pale cherry nipples. Her mouth was frozen in the throes of an intense gasp, and Caleb figured he had to have the same look on his face.\n\nBefore he could pour over all the details of the shot, the 9th question arrived, and Caleb was determined to make it the last.\n\n&gt;Q9: In Pride and Prejudice, Mr. Darcy is attracted to Elizabeth's \"fine eyes.\" What does this say about Darcy and Elizabeth?\n\nFucking hell, she wants me to answer THAT in two minutes? The thought only occupied Caleb's head for a moment before he decided that he wasn't going to get this one by fretting. His thumbs blurred over the phone, punching in terse words about Elizabeth's dark brown eyes being symbolic of the prejudice that blinds her, and how even though that prejudice frustrated Darcy's attempts to get to know her better, that same prejudice -- that same complexity -- is what keeps drawing his eye.\n\nThirty seconds went by.\n\nA minute went by.\n\nHe wondered if his answer was too simplistic. He had hoped that Miss Piper would cut him some slack.\n\nNinety seconds went by.\n\nFinally, his phone buzzed. He was almost afraid to pick it up.\n\nBut he was glad he did when he saw the new picture of Miss Piper, fully nude in a full-length mirror that showed her from her absolutely perfect rear, looking over her shoulder. In one hand she held her cell phone. The other crooked its finger toward the mirror in a \"come hither\" motion.\n\nCaleb didn't need to be told twice. Suddenly he was bolting up the steps of the right-most Westbrook Commons building and turning the knob to 26.\n\nIt was locked.\n\nHe turned the knob again, accepting that he had been driven insane. He knocked.\n\nHis phone buzzed.\n\n&gt;Uh uh uh.\n\n&gt;All you did was pass.\n\n&gt;The best rewards are for the overachievers...",
        "Caleb groaned, pacing past the curtain dressed window with his hard, angry dick pointing the way forward. From his brief glimpses inside he could see the silhouette of Miss Piper's head and not much else, which only served to make his dick harder and angrier.\n\n&gt;Just one last question.\n\n&gt;Get it right and you can come inside.\n\nHe had felt less pressure in playoff games that were being decided in OT. Reflexively, he smacked his head, a common psyche-up move he did whenever he paced before taking the field, and quietly dared Miss Piper to hit him with her best shot.\n\n&gt;Q10: In The Light in the Forest, what is True Son's real name?\n\n* * * * *\n\n\"YOU EVIL BITCH.\"\n\nPenny, clad in a short silk robe the color of hot blood, sitting on her cream-colored couch across from the TV, laughed out loud at Caleb's misfortune. Bless his heart, he tried not to be too loud, or sound too mean, but after the relentless tease of the last 15 minutes -- including the five minutes where she stopped to ask herself, for the millionth time, what the fuck she was doing -- she couldn't possibly blame him for being pissed.\n\nOf course, she was still going to have to enforce the rules of the game; what was the fun otherwise? But it wouldn't hurt to give Caleb a little reminder.\n\n\"What's the matter?\" she tapped out. \"Don't you have a smartphone? With access to Wikipedia?\" She added, \"Tick tock...\"\n\nSo it became a race instead of a test of educational mettle. It wasn't like her last question was fair; she just couldn't resist the chance to fuck with Caleb one more time. And if he couldn't get it, well, she wouldn't get laid tonight, but it would certainly give her a chance to tutor Caleb one last time.\n\nThen again, who was she kidding. Caleb had 30 seconds to respond and she REALLY wanted to fuck him tonight. But she had faith that her phone was going to buzz with the right answer in the next 25 seconds, and she was going to throw open the door and enjoy the naughtiest, nastiest experience of her life with the hottest, sweetest student -- no, MAN, who happened to be a student -- she had ever known.\n\n15 seconds. She told herself to relax.\n\n10 seconds. It was going to happen.\n\n5.\n\n4.\n\n3.\n\n2\u2014The phone buzzed and Penny jumped on it:\n\n&gt;JOHN BUTLER.\n\nPenny was through teasing. She rose up from the couch, strode to the door, and threw it open.\n\nPart of her expected, even wanted Caleb to attack her, to jump on top of her and penetrate her on the spot. But when she opened the door, Caleb could only gawk. She was sure the attack would come later -- his eyes sure were sizing her up for it, but the beat was appreciated.\n\n\"I'm sorry I'm not naked,\" she said. \"But I thought about it, and I realized that I didn't want to deny you the chance to undress your first girl.\"\n\nCaleb still did nothing. Moreover, Penny had never seen the look of fear he currently had in his eyes. For a moment, she considered stopping and asking if he was all right, but she could sense that he wanted to be here; he just didn't know how. So Penny took him gently by the hand, and shut the door without locking it. She smiled at him, stroked his face -- a trainer letting her prize stud know that everything was going to be all right -- and kissed him on the mouth.\n\nCaleb had heard the phrase \"heart skipped a beat\" before, but once he made contact with Miss Piper's lips he felt a syncopated seizure in his chest, belly, and groin and saw the world flash white before his eyes. When he recovered, he felt Miss Piper's tongue probing his lips, and he quickly opened them, entering her mouth in a panic with his own stiff tongue. She giggled through their kiss, and he knew he must be doing it wrong, but the blood was rushing through his heart at record speed and as long as she didn't want to stop, neither did he.\n\nWhen they finally parted, she put a hand on his shoulder, another on his cheek. \"That was pretty good,\" she assured him, ever the teacher. \"You just have to learn to relax your tongue, let it slide into me. Give it another try.\"\n\nThis kiss was fuller and more passionate; his tongue had softened considerably, his probing wasn't quite as jerky, and -- though she never pointed this out -- his mouth didn't open quite as wide.\n\nTentative hands went from stroking her face, down to the sides of her tits, each pass giving her a warm tingle in her ribs. In time, the same hands found their way to the sash of her robe and pulled it apart, prompting Penny to step backwards into the living room. She let the robe hang open, exposing him to the inner slopes of her breasts, her firm navel, and the thin sand-colored triangle of her bush.\n\n\"You always were a quick study,\" she said. \"It can only help you here.\" She brushed the ends of her robe, resisting the urge to throw it off, and added \"Care to finish the job?\"\n\nCaleb took small steps, held back by his fears, pushed forward by the unbridled lust that raged visibly behind his eyes. Inches from Penny, he stared into her eyes, and she did her best to stare back with comfort and encouragement. Finally, Caleb grasped the edges of her robe, pushed it away to reveal her breasts, further away to reveal her shoulders, and further still until it was a pool of fabric behind her feet.\n\nCaleb stepped back to admire all of her, drinking her in like a living miracle. \"Oh my God,\" he whispered, his first words since entering the apartment, the best words he could have said. She kissed him once more -- by the third time he had gotten the hang of it, to the point where he could send a jolt through her body every time he swished his tongue in the right way -- and guided him into a seat on her couch.\n\nShe relished every button she popped on his shirt, licking her way down his hairless chest and stomach, savoring the mild taste of his skin and the strong masculine scent coming from below. With the last button undone, Penny pulled back and opened him up. God, he's cut! His pecs were large and well-defined, topped by stiff, rosy nipples. His abs weren't as tight, but they were toned enough to leave subtle lines that drew her attention downward to his pelvis, to the mystery hiding under those tight jeans.\n\nPenny leaned back in, kissed Caleb's mouth, his cheek, his ear, and slipped her hand over the stiff bulge trapped in his jeans. \"So far, so good,\" she grinned.\n\nCaleb chuckled.\n\n\"Can I take it out?\"\n\nCaleb nodded, fear flooding back into his eyes, and she kissed him again, soothing into his ear while she undid his belt buckle. She slid down, popped the top button of his jeans, undid the zipper, and pulled his dark boxer shorts down over his virginal hardness.\n\nIt was beautiful; rigid, angry, but pliable and clean with a nice gentle curve and a thick, bulbous head. His balls were round and shaved, his hair trimmed down to a neat bed, and his tip glistened with excitement. \"It's better than I imagined,\" she said, looking up at him with narrowed, satisfied eyes. \"I'm surprised you know how to shave down there!\"\n\n\"The bush starts to get real uncomfortable when you do a lot of running,\" he said. \"But it's a good size for you?\"\n\n\"It's a great size.\"\n\n\"You don't think it's too small?\"\n\nHe was clearly nervous, and she needed a moment to blink the confusion out of her eyes. \"Excuse me?\" Penny looked back down at his cock and carefully wrapped her hand around it. It covered almost the entire shaft; her thumb reached just past her fingertips. She DID imagine it'd be bigger, but...Really? \"This is fine, sweetie. Did that bitch make fun of your size too?\"\n\n\"No, just a little too much porn, I guess. And also not keeping my eyes forward in the showers.\"\n\n\"I bet your teammates love that.\"\n\n\"I've been asked on a few dates.\"\n\nPenny hated that she was losing momentum on the seduction, but...Oh fuck me, she thought to herself when she realized that the same sense of duty that allegedly took the edge off her attraction to Caleb while he was a student was now forcing her to press the issue. \"Look,\" she said, \"I'm not getting a ruler, but I'm guessing you're a little over six inches long, five inches around, which is well in the average range.\"\n\n\"Yeah, the lower end of average,\" Caleb shrugged.\n\nHe didn't seem that disappointed or down on himself, but Penny decided she needed to put a stop to this shit right away. \"Oh, you fucking guy,\" she growled. \"Kick your sneakers off. Now.\" While Caleb rushed to comply, Penny pulled off his shirt and flung it to the other end of the room. Once Penny heard the other shoe drop, she returned to her knees and pulled the socks off his feet, the jeans and boxers off his legs. They got bundled and tossed in the same general direction as his shirt.\n\nPenny stood up, stood over him, looked over his now naked body while she grabbed his slightly softened prick, looked into his eyes while she stroked it back to life. \"One out of every ten women consider size to be the most important aspect of a penis. The rest of us know that penises are so much more fun than that.\"\n\nWith that, Penny sank back down to her knees, soaking in the thick musk of his crotch. Continuing her soft strokes of his shaft, she took thick licks of his scrotum, slathering one ball then the other with a gracefully naughty tongue.\n\n\"Holy...\" whispered Caleb, his throat locking up and his mind wiping out before he could finish his thought..\n\nHolding the base steady around her index and thumb, Penny took a deep breath and dove onto his length, inhaling as much of him as she could. He groaned, lurched forward, and Penny pushed him back with her right hand, registering the beat of his jackhammering heart. She bobbed up and down on him, swirling him around her tongue, savoring the sticky, surprisingly sweet taste of his precum. She could do this all day, but judging by Caleb's breathing and heart rate, she didn't want to push her luck.\n\nShe pulled herself off and continued to stroke him, placing her face next to his throbbing erection. \"I love this cock,\" she said, looking up into his squirming eyes. \"I love using my tongue to play with the loose skin around the shaft and push down on the head. And I love not having a lot of hair to get in my way.\" She stood back up, directing Caleb to lie on the couch.\n\n\"But more than that?\" she said. \"I love everything this cock is attached to.\"\n\nShe climbed on top of him, straddling his knees, continuing to beat him off with her right hand.\n\n\"Look at you,\" she said, every vowel soaked in steam. \"Look at your strong, virile body. Look at your powerful legs...\" With her left hand, Penny stroked up each thigh, pulling an extra groan out of him when she brushed up against his sack.\n\n\"Look at your tight stomach...\" She bent down, tracing the thin outlines of his abs with her tongue.\n\n\"Look at your sculpted arms...\" Again with her left hand, she smoothed out his arms, squeezing his muscles, running her fingers over the sinews.\n\n\"Look at these thick pecs...\" She licked up his sternum, around each pec. \"So well-defined...sensitive too, I bet.\" With her left hand holding down his thick shoulder, Penny began to jerk Caleb off even faster while fluttering her tongue across his right nipple and dragging her sopping pussy back and forth against his thigh. What a sight it must have been for Caleb; she could tell from the look on his face that he was fighting to hold back his cum, even closing his eyes in some valiant attempt to push the image of what she was doing out of his head.\n\nThis wouldn't do; Penny wanted his pipes clear for later. Continuing to beat him off, Penny slid upwards until she hovered over his face.\n\n\"Look at this cute face,\" she said, stroking his cheek. \"Scrunched up tight because you're trying to save your load for later. It'd look so much cuter if your eyes were open.\"\n\nCaleb opened his eyes to his English teacher, straddled across his body, her perfect tits jiggling back and forth as she worked his sloppy prick in her hand. His mouth fell ajar. His breathing went ragged.\n\n\"That's it, Caleb.\" Her face was familiar -- stern, but encouraging. \"Let it all out. It'll be okay; we've got all night.\"\n\nCaleb gasped and tossed his head back. With her free thumb, Penny tilted his chin down until the crystal blue of his wide-open eyes met her sharp, brown, bespectacled ones once more.\n\nShe said, \"Show me what this cute face looks like when I make this beautiful cock cum.\"\n\n\"Oh fucking shit, Miss Piper!\"\n\n\"Lannnnguaaaaaaaaaaage...\"\n\nMy God, did he show her! He cried out, his face expanding, his pupils shrinking. She felt him jerk under her body and twitch in her hand before his first rope of sperm shot forth and spattered across his belly. His eyes never left hers, and while each new shot brought a new groan and a new variation of his excited, awestruck face, her expression never changed save for a grin that ever-so-slowly widened through his eruption. When it was over, she leaned in and sucked one more kiss out of him. Then another one, because he had become such a good kisser. \"Any size queen who'd pass up that much fun,\" she said, giving Caleb just one more kiss, \"is a fucking idiot.\"\n\nCaleb beamed at her, as best as a tired, post-orgasmic eighteen-year-old could. \"Should we get a towel?\" he asked. \"Not that I'm ordering you or anything, it's just...\"\n\nPenny looked down. Caleb was covered; white magma had drenched his stomach and chest in sticky streaks that glistened like the runoff of an ice cream cone. She looked back up to Caleb: \"Is that really what you want me to do, Caleb?\"\n\n\"What do you mean, Miss Piper?\"\n\n\"I mean...\" Penny dragged her pointer finger in a circle around his belly button, over the ridges of his abs, through the thick globs of his satisfaction. She raised the finger to her outstretched tongue and cleaned it off, savoring the gooey consistency and the subtle sweetness of his flavor. \"...is that really what you want me to do?\"\n\nCaleb's head exploded for probably the 20th time that night. \"You're into that?\" he asked.\n\n\"I'm into you,\" she answered. She lowered herself down to his torso to clean up his mess, starting from the stomach and lovingly lapping up the length of each line. \"Actually, you happen to taste really good.\"\n\n\"Really?\"\n\n\"Yeah, I don't normally like the taste of cum, but...\" In the span of a heartbeat, a thought occurred to Penny, and she swiped her finger through the last untouched line of white. \"You wanna taste?\" she asked, raising it just close enough to not seem insistent.\n\n\"No thanks.\" Penny barely finished speaking before Caleb snapped out his answer, which is about what she expected.\n\n\"Aw!\" She quickly slipped the finger into her mouth and cleaned it off. \"Where's your sense of adventure?\" she teased. \"Are you so insecure in your sexuality that you won't taste your own healthy fluids?\"\n\n\"Um, yeah?\"\n\nLike everything else about him in the moment, Caleb's deadpan was perfect. When Penny finished laughing, she said, \"Well, I guess kissing you is out, what with all this cum on my breath. That's too bad.\"\n\n\"Fuck,\" he said. \"I'm gonna look like an asshole if I don't kiss you, am I?\"\n\n\"Welcome to sex, Caleb.\"\n\nCaleb sighed in a sort of half-mock resignation, then motioned up. Once she was facing him again, he pulled her in for another kiss -- taking point this time, lovingly caressing the crevasses of her palate with his tongue. She moaned under the attention, relishing the inexperience that showed through his immediacy. She had felt desired before, but never like this; never to the level where her partner was so respectful yet so excited and barely in control of himself. She could even feel his cock start to swell up again against her belly; what was this?\n\nPenny gently pushed Caleb away from her mouth. \"Get up,\" she said. \"It's time for you to return the favor.\"\n\n\"Oh, shit, of course,\" Caleb said, following her to the plush armchair caddy-corner from the sofa.\n\n\"Wait,\" Penny said, sinking into the armchair. \"First I want you to push the coffee table out of the way. Lemme see you use those muscles a bit.\"\n\nCaleb grinned, kneeled down to the table, and pushed it out of the living room and in front of the door. It wasn't a tough job -- the table was on wheels -- but it gave Penny a nice look at her prized pupil's thick football-player shoulders and firm, round ass at work.\n\n\"Stay on your knees when you can,\" she said. \"A lot of women are gonna drop to their knees for you; it's important you appreciate what that's like.\"\n\n\"Sure thing, Miss Piper.\" While he crawled over to her, Penny took a moment to appreciate how sexy it felt to be called \"Miss Piper\" in this context. It felt strange to remember that she didn't mind other men laying her down and pumping into her; like any good sidekick, she had always felt more comfortable following her partner's lead. However, there was something even hotter about having this powerful, strapping young man wrapping himself around her finger, willing to do anything she asked.\n\nWell, almost anything. \"Can I play with your boobs a little before I go down on you?\"\n\nPenny had to laugh. \"Sure! Why not?\"\n\nHis enthusiastic kisses and squeezes were more fun than arousing. If any other guy was doing the same thing, her mind would probably drift to current bills and future lesson plans, but it was hard not to share Caleb's thrill over being somewhere he spent the better part of a year dreaming of. \"You really love these things, don't you?\"\n\nCaleb pulled himself away from her nipple and looked up to her. \"Honestly, I wish I was this great, sensitive lover who saw your entire body as a work of art and strived to treat it that way, but these are just fucking wonderful.\"\n\nAgain she laughed. The whole situation, frankly, was as ridiculous to her as it was amazing and exciting. She said, \"Foreplay doesn't have to be that ostentatious, you know.\" She pulled him up. \"Here. Kiss me again,\" she said, and just as he started leaning in, she added, \"and when you're ready, kiss a trail to my breasts.\"\n\nCaleb went in, slipping his tongue into her mouth, dancing across her palate while she brushed the inside of his cheeks. When the broke, Caleb kissed her chin...then her neck, and was on top of her breasts again within five seconds.\n\n\"Better,\" she laughed, pulling him back up, \"but not quite there.\"\n\n\"Sorry, Miss Piper,\" he said.\n\n\"Caleb,\" she smiled. \"I'm being worshipped by the hot, naked, hardbody student I've been lusting after all year. Do I look like you have anything to be sorry for?\"\n\n\"Point taken.\"\n\n\"Try it again,\" she encouraged. \"This time, take the scenic route, and don't be afraid to linger somewhere a bit. I already know where you're going, but try to make me wonder how you plan to get there.\"\n\n\"All right.\"\n\nSo they kissed again. This time, when they parted, Caleb kissed down the side of Penny's neck and across her left shoulder, and already her heart started beating a little faster.\n\n\"That's it, Caleb, just like that.\"\n\nHe lingered for a bit. \"You happen to have really nice shoulders.\"\n\n\"Are they 'really nice,' or are they gorgeous?\"\n\nCaleb thought about it while savoring another square inch of her skin. \"They're gorgeous,\" he eventually said.\n\n\"What makes them so gorgeous, Caleb?\"\n\n\"I dunno\u2014\"\n\n\"Don't say you don't know, just think about it and answer. No qualifiers, no second-guessing. The difference between 'You're sexy' and 'I think you're kinda sexy I guess' is huge and important.\"\n\n\"Got it.\" He left a few more wet kisses on her skin, and then said \"It's smooth. And just the way it curves into your neck is hot as hell.\"\n\n\"Oh?\" She coquettishly tilted her head to the right, stretching out the left side of her neck. \"Like this?\"\n\nCaleb immediately backtracked one, two kisses before gently swiping up the exposed skin with his tongue.",
        "She squealed, then giggled while he kissed his way back down. \"There you go, you're getting it! Keep playing like that!\" But he was already at the top of her breast, and she figured that was the end of it, which was okay because the old familiar tingles were starting to push upwards against the skin of her chest, desperate to feel the touch of the young man on top of her, and Caleb was about answer the caaaaaa...\n\n\"AAAAOOOohhh,\" she gasped when Caleb veered left, tonguing the crevasse where the side of her breast met her arm. \"Oh YEAH, Caleb! Such a great tease!\" She could feel him smile against her skin while he lifted her arm up to move into her side, brushing the thin line where her ribcage swelled into her breast with his tongue. \"You really are a quick study!\"\n\n\"Yeah,\" he said between licks. \"It's totally that. I certainly didn't change my mind. At the last second. Because I thought I was going too fast.\"\n\n\"It's adorable how you think that makes a difference,\" she said. She cradled his head while he gently worked the arc around her ample titflesh. Her breaths were getting shorter and shorter. The tingles in her chest had blossomed into dull aches. And Penny could swear her heart was beating so hard she jiggled with each pump.\n\n\"Now try using your hands,\" she suggested, and naturally they went right back to her chest, kneading the fat and rolling her pebble-like nipples in their palms. This time, though, she was ready for them, letting out a sharp moan with his first squeeze, a smaller one with his second, the constant massage turning her short breaths audible.\n\n\"Ahh...see how responsive?\" she sighed between her gasps for air. Now he was pinching her nipples, strumming them with his fingers. \"Much more responsive...when you put...put the work in...more fun this way...don't you agree?\"\n\nHe looked up again and nodded, proud, his own breath growing short. Then he moved his hands under her breasts, hoisting each one between his thumb and forefinger, and pushed his head back onto her nipple, drawing louder gasps from her with each flick of his tongue.\n\n\"Bite it,\" she seethed. \"If you're gentle...you can bite it\u2014AAAAOH!\"\n\nHe was gentle; he pulled away with her pale cherry nub resting comfortably between his teeth, and it drove her crazy. He did it a few more times before repeating with the other nipple, leaving her a panting, sopping mess.\n\n\"Move your hands around!\" The order came rougher than usual, but he followed it anyway, letting his hands roam down her sides and into her thighs, overloading her mind with multiple points of feedback. His thumbs traced her pelvic outline, his fingers crossed into her bush, then drifted downwards between her flooded lips.\n\n\"OH FUCK YEAH CALEB, feel how wet you make me!\" In turn, she could feel how hard she made him; his turgid, burning flesh was pressed against her thigh. \"Such a good fucking student!\" she cried out, encouraging more strokes between her slippery lips, stoking her fire even further, bringing her so close to the edge but unable to bring herself over.\n\n\"Oh God, Caleb,\" she cried, \"I need your mouth on me. I need your mouth on me right now!\" He left her right breast, kissed the valley between her breasts, kissed below her breasts\u2014\n\n\"Now's not the time for that shit!\" In her pre-coital delirium, she shoved Caleb's head downwards until he was on his knees, facing her drenched, swollen center. For a split second she worried she had hurt or scared him, but his laughter put her at ease as his horizontal smile met her vertical one.\n\n\"GAH!\" She threw her head back as Caleb's tongue pushed itself up her honeyed hole, opening herself up for an image to push itself into her mind: a queen, sitting upon her armchair throne, legs spread to be serviced by her young, loyal, muscular slave, on the promise of a special reward for a job well done. \"You're so close,\" she moaned, pushing his head deeper into her center, her hips shuddering under the pressure, \"so close, UUUUHHHHHHHHH lickmelickmelickmelickmelickmeeeeeeee!\"\n\nHer vision went dark and the sound dropped out until all she could register were her distant, muted roars and the head her hips twitched and ground against. The beige of her ceiling soon came into view, and she could feel and hear herself panting, then trembling, and then Caleb asking if she was okay, which became clearer after his head peered into view.\n\n\"Give me a minute,\" she said. \"Try not to let this go to your head...but that was the second-biggest orgasm I've ever been given.\"\n\n\"It probably would go to my head if I wasn't wondering what the hell your biggest orgasm looked like.\"\n\nPenny chuckled. \"There was a guy I dated a couple of years ago. He had such a knack for oral I honestly wouldn't be surprised if he turned out to be an alien, or a ghost, or the ghost of an alien. Seriously, expecting any other lover to measure up to him would be borderline domestic abuse.\"\n\n\"C'mon, Miss Piper,\" he grinned, \"you know I'm taking that as a challenge.\"\n\n\"Oh, I know, I'm just saying you don't have to. You're already a hell of a lot cuter than he was. In fact, why aren't you inside me?\"\n\nBefore Caleb could say anything Penny pushed him down to the carpet with her foot, rose from her armchair, and sank back down over Caleb, straddling his pelvis. She straightened her back, showing Caleb the full majesty of the stacked body that would grant him his experience. Looking down, she drank in the strength, the potency, the nervous excitement of her conquest below, and she licked her lips and began to slip back and forth over his length.\n\n\"You ready to finally lose it?\" she asked.\n\n\"Oh yeah.\"\n\n\"You suuuuuure?\"\n\nHe vigorously nodded.\n\n\"You sure you want to give it to your hot, horny teacher?\"\n\n\"FUCK, I'm sure!\"\n\n\"You sure you don't want to save it for someone special?\"\n\nCaleb said nothing. Confusion and concern began to seep across his face. Thinking back to this moment, Penny had to marvel at how quickly she stopped grinding once she thought something was wrong. Given every intense fantasy she had about Caleb, she never thought she'd have this much self control, or for that matter, situational awareness.\n\n\"Caleb?\" she asked. \"Are you okay? Do you want me to stop?\"\n\n\"NO! Nonononono!\"\n\nThinking back to THIS moment, Penny had to laugh at how relieved she was to hear him say that. It was the next moment, however, that always made her cry a little.\n\n\"I just...you realize you're special to me, right?\"\n\nShe blinked. \"It was just a tease, Caleb,\" she said. \"I didn't mean to make you uncomfortable, I'm sorry.\"\n\n\"No, it's okay, I get it, it's just...fuck, I don't wanna kill the mood.\"\n\nShe lowered her body to be closer to his, careful not to give the impression that she was calling this off on account of feelings.\n\n\"It's just...I never thought I had anything more to offer than being strong and sorta good at football. My teachers always wrote me off as a dumb jock, my friends are all kinda dumb jocks, and I just got used to the idea of being a dumb jock. Then you came along, and suddenly I get Shakespeare, and I'm a huge Pride and Prejudice fanboy, and there's this whole world I didn't think I was good enough for that's suddenly open to me because of you. I'm a better, happier person because of you. And you're kind of a good friend, too, almost as good as any of my teammates. And you're fucking sexy as hell. How could you not be special?\"\n\nPenny took his head in her hands, bent down, and kissed him passionately. What else could she do after hearing all that?\n\nAside, of course, from reaching behind her, taking Caleb in her hands, and guiding him into his very first sheath.\n\nHe moaned onto her tongue and into her mouth when he entered her, and she moaned in turn feeling his penetrating length bulge against her sensitive, slippery walls. She raised her head for a better view of Caleb's blissful, beautiful face and asked, \"Does that feel good?\"\n\n\"Fuck! You're so tight, Miss Piper!\"\n\n\"Yeah,\" she said, \"I think the mood is doing just fine, Caleb.\" She kissed him again, not yet moving, wanting to give him a chance to get used to her. \"Just so you know, you're special to me too.\" She kissed him once more for effect. \"Some people would say that I just made you a man, but you've always been more of a man than many of the men I've known in my life. You make me feel beautiful, and safe, and even if your lust for me fades, I know you'll always care in some way.\"\n\n\"Thanks, Miss Piper,\" he said. \"I will.\"\n\n\"I'm sure.\" She pushed herself up, her hands pressed firmly upon his pecs. Her kind, honest eyes sharpened with lust and mischief. \"Now, I don't mind being sentimental, but I've been wanting this thing for nine months, and now that I have it, it's killing me not to bounce on it. Are you ready?\"\n\nCaleb nodded. \"Do it. Fuck me.\"\n\nSo that's what she did; slow at first, leaning over Caleb with her hands pinning his chest, locking her eyes on his face, watching it sigh and contort with each stroke. She offered her own moans to encourage him further, not that she was pretending to love his stiff cock plunging into her snug, sensitive depths. His tip kept poking at some nerve within that flooded her with heat and passion, encouraging her to speed up, bottoming herself out a little harder each time. She was bouncing hard enough, tilted down enough, that her glasses started to slip off her head, so Caleb reached up and pushed them back into place.\n\nPenny giggled. \"You like me with the glasses on?\"\n\n\"You'd still be hot with the glasses off, but you drive me fucking crazy with the glasses on.\"\n\n\"So, you have a little nerd fetish, huh?\"\n\n\"All the other football players shove them into lockers. You know how I like to be different.\"\n\n\"Mmm, maybe I should tell you about my Settlers of Catan strategy.\"\n\n\"Oh, you definitely should.\"\n\nPenny stopped humping Caleb, holding all of him inside her. She began to lightly grind her hips back and forth. \"Well, most players like to play the wood/brick game so they can go for Longest Road, but while they fight over that, they don't notice that I'm building up my ore, wheat, and sheep resources.\"\n\n\"Oh, you're bad.\" Caleb clearly had no idea what she was talking about.\n\n\"They're fucking around with roads,\" she said, dropping her voice to an aggressive whisper, undulating upon his prick, relishing the way it pushed into her walls, \"meanwhile I'm building cities, bolstering my army.\"\n\n\"Yeah -- hrk! -- bolster that shit!\" Caleb was close to breaking.\n\n\"And by the time they realize what's happening,\" she whispered in his ear, \"it's too late.\" She pushed herself back up, pushed her chest out, threw her head back. \"I've got MONOPOLIES!\" she proclaimed, pumping down on him with each emphasized word. \"They have to get their resources from ME! And nobody's gonna DARE rob me when I've got SO. MANY. UNTURNED. DEV CARDS at my disposal!\"\n\nIt was all Caleb could stand with a straight face; he shattered into a laughing fit that quickly spread to Penny, who had to slow down to catch her breath.\n\nShe kept finding it interesting how Caleb had brought out her inner freak without really trying or even intending to. She wasn't even that much more experienced than he was, and yet with him, she had fashioned herself into some kind of dominating porn queen. She tied her best guess to her curiosity about erotic modeling so long ago; she passed it up partly because she didn't feel secure or desirable, but now that she did, she felt a sudden sense of freedom and a need to show herself off, a need which she now sated by leaning back to give Caleb a view of his youthful cock getting squeezed in and out of his teacher's pink slit.\n\n\"Aw, fuck!\" he groaned, around the same time as Penny yelped \"Shit yeah!\" The change of angle was pumping Caleb closer to her g-spot; suddenly she was upping the pace, buzzing and sweating and pounding down on Caleb like she was hammering a stubborn nail, driving out of her a staccato aria of pleasure: \"Ah ah ah ah ah ah ah!\" She was getting closer and closer to the edge, and just needed one more different image to put her over.\n\n\"Oh shit, I think I'm gonna cum!\" Caleb, unfortunately, was a different story.\n\nKnowing she couldn't ask him to hold it without possibly slapping him, Penny hopped off. \"Wait,\" she cried out, \"not yet! Not yet! Uh, picture your mom naked!\"\n\n\"WHY THE FUCK WOULD YOU SAY THAT NOW?\"\n\n\"I DON'T KNOW, I'M SORRY, I PANICKED!\"\n\nOn the bright side, it worked; Caleb's cock twitched, but nothing came out. He caught his breath, calmed down, and proceeded to ignore his place. \"God dammit. I'm sorry, but you better have some nasty shit in mind to scrub that horror outtaaaaah myyy Gooooddd that'll do it.\"\n\nHe was looking at his once-softening cock disappearing into the valley between Miss Piper's tits, looking into her smug, playful eyes and naughty smile. He felt the soft flesh surrounding him, felt the beat of her heart through her chest. He thrusted upwards; there was a little too much friction for a good titfuck, but the brief glimpse of his head poking through her cleavage served him well.\n\nPenny, for her part, never did anything like this before because she didn't see the point; that was obviously a mistake. It didn't hit any of her sensitive spots directly, but there was something empowering and nurturing about holding someone's throbbing manhood within the channel of her breasts. As usual, seeing Caleb react to it made it all the more erotic and fun. Part of her wished she could stroke him off like this -- perhaps with a little more lube -- but Caleb was just about ready to pop and there was something she absolutely had to try before that happened.\n\n\"How much can you carry?\" she asked him, her breasts still wrapped around his cock.\n\n\"What do you mean?\"\n\n\"First day of school, I had this fantasy of you fucking me while you carried me. You're standing, my legs are around your waist, my arms are around your neck.\"\n\n\"Oh, we're absolutely trying that. Stand up.\"\n\nThey stood. Caleb took a few seconds to size up Penny, looking a little unsure but no less determined. On his nod, Penny came in, kissed him, and wrapped her arms around his neck. Then, on the count of three, Penny jumped up, wrapping her legs around Caleb, which sent them tumbling backwards against the wall and forced Penny back on her feet.\n\nThey collided, grunted, and he laughed off the quasi-failure, but Penny shook her head and decided, \"Shit, that's not gonna work.\"\n\n\"No, wait, maybe if I lift differently\u2014\"\n\n\"Caleb, I'm not gonna get much out of this if I'm worried that you'll throw your back out.\"\n\n\"What if I pinned you against the wall?\"\n\n\"It would take the weight off you, but it would only be a little less uncomfortable, ALTHOUGH...\" A sudden brainstorm renewed the light in her eyes, the plucky sidekick part of herself coming to the rescue. \"Bedroom. Let's go.\"\n\n* * * * *\n\nPenny tended to write up packets and letters in the office nook within her living room, grade papers and pay bills in her kitchen. So she conceived the bedroom to be different from the rest of the apartment; a sort of sanctum within her home where she could escape to sleep or read or just be by herself for a little while. It occurred to Penny, as she approached the door, that Caleb was only going to be the third guy she ever bought inside, and for a fleeting moment she worried what that said about her feelings for him, and what those feelings said about herself. Then she remembered the necessity of bringing him in, and she was able to rationalize most of those fears away. (The more stubborn fears reminded her that she just used the word \"rationalize,\" but in a few seconds she'd be too busy riding dick to pay them any mind.)\n\nThe bedroom was more classically furnished, opting for fine dark Victorian-style wood over the bright modern Swedish motif of the rest of the apartment. The centerpiece was a king-sized sleigh bed draped in a pillowy cream-colored duvet; Caleb was in visible awe. \"This bed looks awesome,\" he exclaimed.\n\n\"Thanks,\" said Penny, \"but I told you: we're not gonna make it to the bed.\" She directed him to a small walk-in closet, its sliding door already open. Near the top of its surprisingly deep frame, a pull-up bar was mounted.\n\nCaleb snapped his fingers and pointed to the bar. \"I think I know where you're going with this.\" He walked ahead of Penny and turned on the closet light.\n\nPenny got that bar for days where she couldn't make it to her gym and promptly ignored it. Every day when she got dressed it would hang there, taunting her, reminding her of the forty bucks she could've spent on the H\u00e4agen-Dazs stand at the mall. After tonight, though, there wouldn't be any more regrets.\n\nPenny walked up to Caleb and grasped the pull-up bar above her. She lifted herself with her biceps, just enough to bring her feet off the ground, and Caleb did the rest by supporting her ass and legs. When their crotches were level, Caleb guided himself back into Penny; she closed her eyes, relished the sensation of his entry, and let out a long moan in celebration.\n\nHer eyes fluttered open, she ground on his cock, and she shouted, \"Fuck me, Caleb!\" And that's what he did, one hand on her back, the other on her hip, \"Uh uh uh uh uh,\" plowing into her with sturdy legs and a relentless piston, nibbling on her outstretched tits, \"Ah fuck yeah lick 'em Caleb lick 'em up,\" his hands moved through her hair, over her scalp, pulling her head back so he could lick up the sweat collecting on her neck and across her collarbone, \"Aiiiieeee Goooooood fuuuhuhhhuhhhuhh FUCK!\"\n\nHe was everywhere, consuming her, fucking her, straining the threads further and further and further, until they snapped and she screamed and she shouted gibberish between her cursing and her remarkable velvet box squeezed Caleb, drenching his feet and milking his perfect staff. He sealed his eyes and thought of Mrs. Warner telling him how to hold his pencil and somehow resisted the urge to flood her and create more problems, but then he felt the full weight of Miss Piper bear down on his hips and opened his eyes to find that she had lost her grip on the pull-up bar. Caleb quickly moved his hands to her back and caught her before she dropped to the ground, and for a few moments that felt like minutes she felt suspended in the air while she was cumming on this magical previously-unspoiled dick and she shouted again, prompting Caleb to pull out before she could tighten up, and he vowed to always carry condoms in his wallet from now on.\n\nCaleb, barely able to catch his breath, guided Miss Piper to the plush carpet on the ground. Her arms splayed up and out in triumph, her disheveled hair fanned out around her head, her chest shined with sweat and heaved up and down, and her pussy glistened with the oils of her release. \"You're no virgin,\" she panted. \"I call such bullshit on you being a virgin. Virgins don't make women cum like I just fucking did.\"\n\n\"Well, I'm a quick study,\" he grinned.\n\n\"And you do have a great teacher, I guess,\" she grinned back, unable to move much more than that.\n\n\"Hey, Miss Piper, can I, uh... Look, I meant everything I said to you, but there's something I really want to do to you and I'm afraid you might\u2014\"\n\n\"Just say it, Caleb. You filled my fantasy, right?\"\n\n\"Can I, uh...can I cum on you?\"\n\nThanks to her lack of energy, it was easier than it normally would have been to suppress her relief and excitement. \"Oh, is that your game?\" she dreamily admonished. \"You want to jack off onto me, mark me as your property? Make your prissy little nerd teacher filthy and unclean so she might know her place?\"\n\n\"When you put it that way, it sounds\u2014\"\n\n\"Fucking hot,\" she finished. \"Do it.\"\n\nCaleb beamed, his cock twitched. \"Okay! Stay just like that!\" He waved a hand over her splayed, stretched, sweaty form. While his left hand held him up and over her body, his right hand guided himself back into her pussy. She was sore from the orgasms, a bit chafed from the rough-ish sex as well, but she didn't mind; after all he gave to her, she could bear it for five more minutes so he could have the finish he always dreamed of.",
        "And there was no way he would last longer than five minutes. Given everything she thought to say to him, she'd be surprised if he lasted one.\n\n\"You always had a lot of spunk as a student, Caleb,\" she purred while he drove into her. \"A little too much. You should let some of it out.\" He laughed, pumping into her harder. \"What do you call that, Caleb?\"\n\n\"Is this part of a game I have to play before I'm allowed to cum or something? Because I can't really concentrate on anything else right now.\"\n\n\"Fair enough. It's called a 'double entendre.' Except it might be a little more than that. I've seen your spunk, Caleb. It's nice and thick and white, and it tastes so good. It's the spunk you'd expect from the kind of strong, generous, eager young man that inspires the phrase. I can't wait for you to decorate me with it.\"\n\n\"Holy shit, Miss Piper.\"\n\n\"I love that you call me that,\" she said. \"You've seen me naked, gotten naked in front of me, been in two of my three main orifices, made me cum like a freight train twice, and now your cock's about to spit a fat, sticky load of cream onto me, yet you still call me 'Miss Piper.' It makes me so hot.\"\n\n\"Oh my God, it makes me hot, too.\" Her arms remained splayed out, but her hair was growing more disheveled and her tits were bouncing up and down, further pressurizing his load.\n\n\"Mmm, Miss Piper wants your cum. She wants your mess all over her tits and her stomach. She wants to rub it in and glisten with your special sheen.\"\n\n\"Oh fuck!\" He was slamming into her now, hurting her so good.\n\n\"Are you ready to apply yourself to me, Caleb?\"\n\n\"Fuck yeah!\" He pulled out and started stroking from above her belly button.\n\n\"Yeah, Caleb! All over me!\"\n\nPenny gasped out loud, stretching her face out in a scandalized expression when the first scalding stream landed between her breasts. It was an unforgettable image that drove Caleb forward as he spent across her tits, up her neck, over her belly, dripping down onto her mound. She moaned and laughed with each shot that landed on her, and when it was over her entire torso shined with strands and drops of his youthful release. She sighed, content, licking her lips. Her arms were still above her and her hair was still spread out, and she was looking at him with those impressed, grateful eyes through those fucking glasses, and to Caleb she looked sticky and used and happy and so goddamn sexy that his sense of self-control could only throw up its hands in surrender.\n\nHe lurched forward, hands landing on her tits, squeezing them together to create a tunnel for his still-angry cock to explore.\n\nPenny's eyes bugged open, feeling him slide back between the tits he had anointed with his arousal just moments earlier. She tilted her head up and laughed in shock, \"Oh my GOD!\" she giggled. \"You can't get enough of me, can you?\" Caleb couldn't respond; the wild look in his eyes and the harsh, painful grunts that accompanied his crazed humping told her everything she needed to know. \"You got a little more in you? I never had a student give me a pearl necklace at the end of the year before! I can't wait to see how it looks on me!\"\n\nCaleb looked down at her, groaning, howling, beyond control.\n\n\"Fuck my titties, Caleb! Fuck my big, soft, cum-drenched nerd titties with your beautiful jock cock! Let it all out on me you fucking sexy bastard, I don't want you to hold back a single drop, fuck me fuck me FUCK ME FUCK ME AAH!\"\n\nA fat wad of cum had hit Penny on the right lens of her glasses after arcing above her chin. It trailed up her forehead and into her hair. Caleb roared and fired another shot across her mouth. The rest dribbled onto her neck and chin while he continued to cry and moan in glorious pain.\n\nCaleb collapsed next to Penny, wheezing, his face still contorted. Penny rolled over, and Caleb cried \"PLEASE DON'T\" because he thought she was going to suck his raw member. Instead she smiled, crawled up his sweaty, broken body, and laid back down next to him, her hand coming to rest over his pounding heart.\n\n\"You get an A,\" she cooed.\n\nCaleb could only smile back. He wiped the cum line off her lips, let her suck it off his thumb. Then he leaned in for a kiss.\n\n\"You don't have to,\" she said.\n\n\"It's sex, of course I have to,\" he replied, just before parting her lips with his tongue.\n\nWhen they broke it off for air, she said \"A-plus.\"\n\nShe got up after a few minutes to turn on the AC and get them both some Gatorade. His cum was now cold and gelatinous upon her skin, but she liked how it felt only a little less. They showered after rehydrating, and washing each other was fun, but there was no more penetrative sex that night. They ended up falling asleep on the bed after some gentle caressing and exploration under the covers.\n\n* * * * *\n\nMiss Piper,\n\nIf I'm not here, don't freak out. I ran to the CVS down the street to get you some Pedialyte. It'll help with the hangover you might have.\n\n-K\n\nPenny smiled at the note, left for her next to her clock. Caleb was special all right; not a lot of 18-year-old football dudes who would sleep with someone and worry that their lover might feel abandoned. The note was unnecessary; she smelled bacon in the air and heard the sizzle of a frying pan from her kitchen. If that wasn't Caleb, she had bigger problems than \"my 18-year-old student-turned-lover banged me senseless and threw me away.\"\n\nShe walked into the kitchen, sans glasses, wearing her robe from last night. Caleb was in last night's outfit, whipping something around in one of her pans, taking it on and off the stove. \"All that AND you make breakfast,\" she mused.\n\n\"Hey! Good morning, Miss Piper!\" Caleb was trying to be cool, but Penny could tell that he was buzzing with serotonin. \"Glad you didn't wake up to an empty apartment. Stopped by the gourmet grocery next to CVS to pick up a few things.\" The toaster oven buzzed. \"Pedialyte's in the fridge, by the way. Plastic bottle, red liquid. Down as much as you can in one shot.\"\n\nPenny darted right to the fridge and got the bottle out, twisting off the cap and sucking the bottle dry. It immediately sanded off the edge of her headache. \"Wow. Thanks.\"\n\n\"Sure thing.\"\n\nPenny grabbed some orange juice from the fridge. She brought the carton and two glasses to the table while Caleb grabbed two slices of sourdough bread from the toaster, dropping each one on a plate.\n\n\"Okay so, you are, if only for the next two days, a senior in high school,\" said Penny. \"I know you're large and you contain multitudes and all, but how the hell are you already into gourmet cooking?\"\n\n\"I'm into regular cooking,\" he clarified, plating the scrambled eggs he was stirring up in the pot. \"I just got Gordon Ramsay's scrambled egg recipe from the internet because I figured I either owed you the world's biggest thank you or the world's biggest apology. And a few of his ingredients I could only get at a gourmet store.\" He delivered to Penny a plate of creamy scrambled eggs served on top of toasted sourdough bread with a side of crisp bacon. \"Cr\u00e8me fra\u00eeche, fresh chives, sourdough bread. He also suggested cherry tomatoes and mushrooms but I'm not that classy.\"\n\n\"Back up. Why would you owe me an apology?\"\n\n\"Well, Miss Piper,\" Caleb swallowed, \"it's not like you seemed super drunk, but you were drinking all the same...\" Penny's face perked up in acknowledgement. \"...so I was worried\u2014\"\n\nPenny cut him off. \"Caleb, relax,\" she smiled, \"I remember exactly what happened last night.\" She reached out, stroking his hands in appreciation. \"You were amazing.\"\n\nHe let out a big sigh of relief. \"Thanks,\" he said. \"You were perfect too.\"\n\n\"I'm just glad I could make your first time special,\" she said. \"I'd be lying if I said I didn't have a lot of anxieties over how things are going to unfold because of it, but I don't have a lot of regrets.\" She pointed to her food. \"This looks delicious, by the way. Thank you so much!\"\n\n\"Least I could do, Miss...can I just call you Penny now? Now that I know that you're cool with last night, 'Miss Piper' feels\u2014\"\n\n\"\u2014feels VERY weird in this context,\" she laughed.\n\n\"Yeah, it was hot last night, but the moment's totally passed.\" Penny and Caleb dug into Caleb's terrific \"Thank You\" breakfast, and continued to talk.\n\n\"I think I have those same anxieties as you.\" said Caleb. \"I don't wanna be that guy who thinks that something like last night is more than what it actually was. I mean, it was amazing, and I feel really close to you, but I know the score here. And I don't want to scare you by saying it's love when it's probably just sex.\"\n\n\"Or saying it's just sex when it might be love.\"\n\n\"Exactly.\"\n\n\"Maybe last night can't be categorized as easily as that. Which is scary, even before we start talking about what would happen if anyone found out.\"\n\n\"I think that scares me more than anything,\" said Caleb.\n\n\"It scares me too. I don't know what else I'd do if I wasn't a teacher. But I also can't be sure I'm even fit to be a teacher anymore. I don't know if this is just a fluke or the start of a dangerous fetish. And if I just write you off by saying 'it was never meant to be, good luck,' what'll that do to you?\"\n\n\"Maybe less than you think,\" assured Caleb. \"Like I said, I know the score\u2014\"\n\n\"Can you really say that you wouldn't be a little hurt, though? Not just disappointed, hurt.\"\n\nCaleb paused and thought under the guise of chewing his food, and ultimately shook his head.\n\n\"We both know the score, Caleb. Whatever this is, it's too complicated to end well, but it's too strong to not see through. I think there's something to be learned about ourselves and each other from this, and I think we owe it to ourselves to figure it out.\"\n\n\"Maybe it's not that complicated, though,\" said Caleb. \"We're friends who hooked up over a drunken night, it was great, but it just can't keep going because of, well, where we are. In life. What if we go through all that pain...Penny, what if you get fired, just to learn something we already knew?\"\n\nPenny nodded. \"That's a good point,\" she said. Her tone was empathetic, matter-of-fact. \"I don't think I want to just leave it at that, but I also don't want to drag you somewhere you don't want to go. If that's the case and you don't want to explore this, I'll find a way to make peace with that.\"\n\nWith that, Penny finished off her last bite of Caleb's breakfast. \"This was delicious,\" she said, \"thanks again.\"\n\n\"No problem. Glad you liked it.\"\n\nShe stood up. \"I think I need another shower,\" she said. \"Don't worry about the mess, I can clean up later. If you want to leave, that's fine, but you're welcome to watch TV, check out some of my books, or whatever you want to do. If you're still here after I get dressed, maybe we can talk some more.\" She tried not to sound like she preferred one thing over another; of course Penny wanted Caleb to stay, but if Caleb wasn't 100% comfortable here, Penny didn't want him to feel obliged.\n\n\"Yeah, sure, Penny,\" Caleb said, understanding and clearly deep in thought, and with that, she left the table.\n\nPenny briefly flirted with the idea of dropping her robe on her way to the bathroom, which sat in the hallway between the kitchen and the bedroom. She decided that would be unfair to Caleb, but she couldn't resist leaving the bathroom door open, just like in her other fantasy about him.\n\nShe dropped her robe, ran the water, and stepped into the stream.\n\nAnd then she did nothing. She asked herself why she was doing nothing, why it made more sense to just stand there and wait for Caleb to come to her...IF Caleb would come to her.\n\nSo she tied up her hair and began to scrub her body; she took extra care around her breasts and vulva, not wanting to work herself up in case Caleb stuck around and drummed up a serious conversation\u2014\n\n\"Yeah, I couldn't leave that mess for you.\" The shower door slid open, and Penny beamed at the gorgeous sight of naked, smiling Caleb, his cock risen to salute Penny's beauty.\n\nPenny leaned in and made out with him under the hot water, stroking his erection with a soapy hand. \"God I'm glad you're in here with me.\"\n\n\"C'mon, Miss Piper,\" he said. \"I'm eighteen, and you took my virginity last night. Pain or not, what did you think was gonna happen?\"\n\nShe laughed, and then gasped out loud after Caleb shoved two of his fingers up her slick cunt. \"Besides,\" he growled, staring into Penny's smoky, challenging eyes, \"I'm pretty sure I still owe you the biggest orgasm of your life.\" "
    ],
    "authorname": "member9458",
    "tags": [
        "teacher",
        "student",
        "older woman",
        "younger man",
        "nerd",
        "jock",
        "virgin male",
        "big tits",
        "high school",
        "cumshot"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/graduation-4"
}