{
    "title": "It's All The Ex's Fault Ch. 11",
    "pages": [
        "AUTHOR'S NOTE: It's all the Ex's fault\n\nIt was intentionally written without names.... Almost.\n\nLEGALESE: Don't read this if you are underage, if it is illegal in your area, if it is offensive to you, or if you cannot distinguish fiction from reality. This is a work of fiction. All characters are 18 years of age or older.\n\nCopyright (c) 2013 by Acup\n\n\n\nI went to bed with a woman in each arm, I awoke to a completely different situation.\n\nMy girl was still beside me, but leaning in for a kiss. But the blond it seems had other ideas.\n\nAs my girl was kissing me, I felt a nice soft pair of lips taking me in...gotta love morning wood! When she let me up I looked down to see the blond smiling and flicking the tip of her tongue to lick the tip of my cock. \n\n\"Morning dear....\" She gave me another quick kiss and nodded to the blond. \"Isn't this a nice way to wake up?\" she kissed me again as the blond got up on hands and knees to take me in. I could feel my cock bumping up against the back of her mouth.\n\n\"Don't you just love waking up to your cock being sucked in?\" the blond was taking me in as deep as she could, maybe even a bit into her throat. \"Watching those delicious tits and nipples dangling and jiggling with every stroke.\" She reached down and cupped the tit above my belly.\n\n\"Looking over at her pussy starting to glisten with her delicious nectar in the morning sun,\" she ran her hand down the blonds ass and ran a finger between those moist lips she was just describing, getting a nice moan around my cock. \"That nice tight pussy you were fucking while she was eating me last night.\"\n\nThe blond was picking up her pace and started playing with my balls at the same time. \"Mmmmmm, she's sucking you down and playing with you. She must really want you to cum in her mouth. She wants her mouth filled like you filled her tight pussy...\" the blond was really moaning around me now.\n\n\"But the thing is.... When you fill her mouth.....\" She was cupping her own tit and rolling the nipple between her fingers, \"She's not going to swallow it...\" I looked at her. \"She's going to keep it in her mouth and share it with me...\"\n\n\"OH SHIIIIIII....\" I lost it... the blond kept me going, stroking me and playing with my balls. I was pumping everything I had into her, little dribbles escaping out the corner of her mouth. When she had me drained she turned to my girl and me, opening her mouth to show us she was full of my cum, a little more even dribbled down her chin.\n\nShe crawled up to us, and my girl licked my dribbles from her chin, then looked at me smiling before she locked lips with the blond. They were sharing my cum over my chest and moaning into each others mouth. If I hadn't just unloaded into that same mouth seconds before I would have been rock hard and shooting all over them! What a way to start the day!\n\nAfter everybody making the morning bathroom runs, and the girls throwing on thongs and a hotel robe each, we headed down for the competition. We were half way down in the elevator when it dawned on me, the other bed hadn't been used.... our black girl never made it back last night.\n\nThat thought was short lived when we came around the corner to the convention area. Seems most of the girls had the same idea with the robe, looked more like a bath robe convention than a body builder convention....lol\n\nWe did all our paperwork and headed back stage. She wasn't kidding when she said three times the size! The first thing I noticed was it didn't seem to be segregated by class, there was a mix of all types all over. Most were still dressed a bit, but almost to a woman everyone with a robe let them gape open or took them off!\n\n\"Good thing you just blew your load in her... or you'd be loosing it in your shorts about now...\" She was grinning at me, then gave me a quick kiss and walked off with an exaggerated wiggle and a white thong between her cheeks.\n\nSince she was one of the last to register, she also got one of the last booths near the back.... I'm going to have to tell her to be one of the last next time! Yea it was a ways from the stage, but it was right next to one of the sets of showers and around the corner from a set of bathrooms and one of the raised mirrored practice areas!\n\nThe first hour was everybody straggling in and making the rounds. I was left to 'guard' the booth as it were while my girl and the blond went off to find friends, tossing their thongs at me as they left. I unpacked the camera bag and fired both of them up to make sure everything worked.\n\nThe petite brunette across the walkway smiled and cupped her tits when I took the camera out, so I took some pictures of her. Man the zoom was nice! I got some extreme close up of her nipples hardening... and I mean filling the WHOLE frame with just one nipple! And panning down to her shaved pussy seeing a glint of moisture... I put the camera down and gave her a thumbs up, which got me some tweaked nipples before she turned away.\n\nI turned to look across the room, and saw my girl and her girlfriend about halfway across the hall. What the hell, I had the camera, so I raised it up and zoomed in. Man I wish I could read lips. They were having a bit of a heated conversation again, my girl waiving arms, the girlfriend standing with hers crossed under her little bumps on her pecs, and the rest of the crew sitting back smiling. If it wasn't for the conversation, I would have chuckled at the girlfriends little tits on those mounds of muscle. Reminds me of a double dip ice cream cone where they ran short of ice cream on the second scoop!\n\nWhat ever it was, she would tell me when she was ready. But, I got out some of her 'what ever that stuff is' drink, and laid out a few of her bikini's while watching a parade of naked women scooting back and forth from the bathrooms. I had to chuckle seeing the signs on the wall. The men's room had been relabeled for the women and a piece of tape put over the women's symbol on the family restroom in the middle. God it sooooo terrible being out numbered like this!\n\nI was getting her oil out when she came up behind me and wrapped her arms around my belly and kissing my neck. \"Hey... find some people you know?\"\n\n\"A few...\" she was a bit tense.\n\nI turned around, still in her arms, cupped her chin with one hand and her ass with the other making her grin. \"That mean we can still knock 'em dead?\"\n\nShe bit her lip, grinned, and nodded before giving me a nice kiss while I continued to grope her ass getting a few whistles from across the isle. She just turned and stuck her tongue out.\n\nSince we had the booth to ourselves, I pulled the other table from the far side, threw a towel up on it, and held up the bottle of oil with a raised eyebrow.\n\n\"HELL YES!\" she hopped up on the table and looked over her shoulder at me, then laid down and closed her eyes. I put some oil in my hands to warm it, then started in on her shoulders and neck.\n\n\"ohhh yessss....\"\n\nI was working her shoulders and neck, down to her middle back a bit while watching her ass clench and release. Looking between her slightly spread legs and her shaved lips while I worked her lower back, getting some gentle moans when I worked her middle back, and again when I got up to her neck and the base of her skull.\n\nWhat ever happened with the girl friend had really tensed her up, but she was finally starting to relax a bit. I leaned over close to her, \"You're the most beautiful sensuous woman here, and if I didn't think it would get us kicked out I'd roll you over and ravish your clit right now...\"\n\n\"Oh you're just plain ornery!\"\n\n\"No worse than you two this morning, maybe for lunch I'll let one of you ride my cock and the other can ride my tongue...\" I said as I slipped a finger between her cheeks and lightly drug it over her rosebud.\n\nShe hissed about the same time a bell sounded. She rolled off the table and groaned getting up, seems the bell was something like the five minute warning. Several of the ladies were scurrying around getting back to their booths, tits and ass bouncing all the way. The lady across the isle was getting into some serious oiling, looking straight at me while she was oiling her tits and pussy, making sure to show me some pink as she did. My girl wasn't in quite the hurry, and our little blond came back about the same time the brunette left for the stage.\n\nThe blond oiled up, then handed me the bottle and turned her back grinning, seems she was expecting me to do her. My girl winked and smiled, so what the hell. I did her legs and butt, taking several liberties between her legs to her pussy lips, and around her sides to her tits when I did her back. She tried to wiggle her oiled back into me, but I gave it a light slap making her squeak.\n\nWatching the two of them put their bikinis on and get them situated just so was enough to get me firm again, making her smile. I crooked my finger at her getting her to walk closer, then kissed her belly just above her bottom. \"Knock 'em dead time!\" I gave her ass a light slap as well when she turned to go get in line.\n\nI grabbed both cameras and the tripod and headed out front.... Damn.... These women out here had clothes on, how dare they!\n\nI set the tripod and video camera up as the first few women were making their way across and striking a few poses before walking across the other side. I zoomed the video camera in and let it run while I walked around getting some nice shots of some of the hotter women. Lots of nipples poking through bikini top and some NICE camel toe!\n\nIt was quite a mix, some were very feminine, their muscle just barely coming to light when they flexed. With others it lurked there under the skin, showing a bit as they walked and then popping when they posed. Most of them it was there, and just became hard muscle when they flexed.\n\nThen there were the few like my girl, the best of them in my opinion. They looked like just a girl next door until they flexed, then the muscle popped without being just skin covered muscle, still being feminine. But then I may have been a bit biased about it.....NAAAAAAAA!\n\nI saw our black girl come across the stage, so she was still with the living, barely. She looked like she had rushed to get up on stage, and her oiling was a bit 'splotchy' some parts nice and shiny, and others almost flaky dry. And her bikini top looked ALL wrong. Don't think this was going to be one of her better days.\n\nA few girls later the little blond came out, and she was hitting all her marks, looking hot and grinning from ear to ear, I was snapping away catching some nice shots of her. I stood back a bit waiting for my girl to come on stage when I got a tap on the shoulder.\n\nI turned to find my factory rep and a young girl in tow, both in tank tops and jeans. The young one obviously braless and not needing one, barely a AA. The rep in a nice thin lace bra under a thin top, her nipples standing out nicely.\n\nI managed to make my way up to her face and found her grinning. \"Sorry, couldn't help myself.\"\n\nThe young girl beside her piped up, \"I have the same problem when I see her like that too.\"\n\nI looked back and forth between the two of them until they both started laughing, \"She has that same reaction from most people,\" the rep said. She introduced her friend about the time my girl was coming out. I put a finger up and grabbed the camera, getting some nice shots of her walking across the stage like she owned the place.\n\nShe saw me down there shooting pictures and smiled even more and hammed it up nicely, really showing off. Flexing and flaunting a bit, really enjoying herself. I blew her a kiss as she walked off, then took our two guests to the registration table and got them companion bands for the blond and the black girl, then escorted them back stage.\n\nEven knowing it was something they knew was coming, and had probably seen in one fashion or another, they still faltered a bit walking in on several hundred naked or topless women. \"And think what it was like for me...\" I said leading them back to our booth.\n\nThey were still looking around when we got to our booth, and the rep was a bit stunned to see my girl topless and stripping her thong off. This same woman dressed to the hilt the other day was standing there naked and oiled.\n\n\"Hey, you made it...\" she said tossing me a towel and turning her back to me. \"What do you think so far?\"\n\nI managed to put the cameras down and began wiping her back, ass, and legs while she did her front.\n\nThe rep and her friend were still overwhelmed a bit, making her snicker. \"Not quite what you expected?\" the girls all looked at each other for a second, then burst out laughing. Then it was girl hug time with lots of groping. The blond showed up shortly, and we watched women lathering up and showering while my girl explained a bit on how the competition worked.\n\nI leaned closer to my girl, \"Hey babe, check out the rack on the blond...\" nodding to the showers.\n\nThe rep and her friend stopped cold, expecting me to be knocked on my ass.\n\n\"Oh yea, those look like they'd be some all day suckers for sure...\" then gave me a quick peck and went back to explaining the competition. I happened to glance down at a blinking light, and realized the video camera was still recording pointed at the showers.... This will be good to watch later!\n\nThe rep and her friend were coming out of their catatonic state when a woman came by letting the girls know they made it to the next round. Shortly the rush to the showers started, catching the attention of our new friends. My girl nodded to the throng of women, \"They didn't make the cut, time to shower and head out.\"\n\nOur black girl came walking down the isle... with some huge gold rings in her nipples! Now not thick mind you, but at least an inch and a half in diameter if not larger! I looked up at her from her nipples, \"Damn girl, that's one thing that's not going to stay in Reno!\"\n\nMy girl looked at them shaking her head, \"So you finally did it...\"\n\n\"Yea, been thinking about it again, and just decided to do it.\" she hefted her tits and wiggled them a bit, but grimaced when she got a bit enthusiastic about it. \"They still hurt a bit, but not bad...\"\n\nThere was another group coming down the isle, so she waived and scurried off to the showers while she could.\n\nWe chatted a bit more, then the bell rang again. The girls hopped up and started oiling up....each other! I shook my head, and then got up behind the blond, and nodded to the rep. \"Would you do the other side?\"\n\nShe gulped a bit, then reached out for the bottle and stood behind my girl, who winked at me with a HUGE grin. The girls were chatting like they were at some social event instead of standing there naked being oiled down. My girl even groaned a bit when she got her ass oiled while the blond was doing her tits, or rather they were doing each others tits.\n\nWe finished oiling them up, and I got a nice kiss from the blond. My girl turned to kiss the rep, but then hesitated for a second before giving her a quick peck on the cheek. She wiped a bit of the excess oil from her tits before slipping a fresh bikini on and they scurried of toward the stage. This time I stayed behind with our guests.\n\n\"Is she always that......\" the rep started to ask, but hesitating.\n\n\"Friendly?\" I responded. The rep just smiled. \"Not sure. I've known her for a while, but we only recently got close.\" She raised an eyebrow at that. \"It's both a long and short story, but one for another time.\" we chatted a bit more, both of us watching the women showering. I managed to get up and get something to drink and shut the video camera off without being too obvious. Then picked it up and put a fresh memory card in and sat it back down.\n\nThe girls came back a few minutes later all grins, and stripped off while chatting. Not quite the shock as the last time. but it did seem my girl and the blond were playing to our guests when they were wiping down. Making sure to SPREAD and wipe their pussies, turning sideways before wiping and jiggling their tits, followed by sitting down kicked back with legs slightly spread.\n\nA few ladies were starting to make their way to the showers, so I turned the camera on when I put the towels down, and turned to find the blond crawling up on the table. \"Come on mister, time to put those hands ALL over me.\" I started to grab the oil when she turned on her side kicking her knee up flashing her spreading pussy at me. \"Uh uh, I've been running around her naked all morning. The least you can do is loose the shirt...\"\n\nI looked at my girl, but was not getting any help there. So I shrugged and stripped off my t-shirt. The girls high fived, and a couple from across the isle whistled. Not sure what at since I am by NO means any kind of body builder, but what the hell.\n\nSince she was being ornery, I dribbled the oil directly on her back instead of into my hand making her squeak and jump. She settled down when I began spreading it around and across her ass. The girls resumed their chat while I just enjoyed playing with the woman on my table. A few of the girls from across and down the isle wandered our way, most naked except for a few thongs. A couple of them enjoying my rubbing the blond down enough to let their nipples do the talking.\n\nOne of the show people made the rounds, and most of the girls around us made the cut. Those that didn't got hugs and condolences. We were also told we would be breaking for lunch and be back in a little over an hour.\n\nMy girl came over beside me while I was groping... I mean massaging... the blonds' ass. \"Honey...\" she said as she was rubbing her tits up and down my side like a cat in heat. \"I want to get something from the food cart..... and I didn't have any pockets to put my money in this morning...\" she gave me a SLOPPY kiss getting a round of laughter from our remaining crowd.\n\n\"My clip is in my pocket.\" She reached in my pocket... and began groping my cock very openly. \"That's not my money clip...\"\n\n\"Nooooo.... But it sure is loaded.\" She gave me another quick squeeze before pulling the clip out, kissed me, and headed around the corner, much to the enjoyment of our little hen party.\n\nI went to the other side of the blond so I could watch the showers while I groped her, when all of a sudden things got quiet behind me. I turned to look over my shoulder to see 'the girlfriend' and two of her butch companions standing there topless with their clits trying to escape their thongs.\n\nI looked at her for a second, then just said 'hi' and went back to groping... I mean massaging .... the blond.\n\n\"You need to quit screwing with her...\" the girlfriend finally managed to spit out.\n\nI didn't even turn to acknowledge her. \"I have no idea what you mean.\" Slipping a finger down between the blonds ass and stroking her pussy lips getting a hiss from her.\n\n\"Like hell you don't. She's not keeping her workout regimen. She's gained four pounds instead of loosing them.\"\n\nI moved around the other side of the blond so I could carry on and continue groping, \"OH MY GOD.... FOUR WHOLE POUNDS!\" I said VERY exaggerated. A couple of the ladies behind them had to cover their mouths to keep from laughing.\n\n\"You're damn right FOUR WHOLE POUNDS! Two more and she wouldn't have made her classification...... she's too good for the likes of you.\" things got a bit quiet around us.\n\nNow I was getting a bit perturbed... OK, just plain pissed. \"Look lady,\" I said with a bit of a snively tone, \"I see her a few times a week. And unlike what I saw earlier today, I'm not trying to MAKE her do anything. I'm not trying to BULLY her into anything.\" I paused to take a breath, and she started to speak but I put a finger up to stop her. From the look on her face it was something she was definitely NOT used to.\n\n\"She is one of the most loving intelligent women I know.\"\n\nThe girlfriend jumped in, \"You just love her in those frilly dresses!\"",
        "So THAT'S where the 'frilly' question came from. \"Damn straight I do! And out of them too!\" that got some grins and snickers from the crowd gathering around us. \"But I didn't MAKE her wear them... I ASKED her to wear them. Can you say the same?\"\n\nThe girlfriend didn't respond right away, so I continued. \"And the one she brought with her makes her look like a high dollar fashion model. And you're right, she is too good for me....by a LONG shot.\" That got a grin from the girlfriend and a gasp from a few ladies. \"But that doesn't mean I love her any less.\" More gasps... \"I love the way she smiles, and even that bright red hair that SOMEONE seems to have convinced her to cover up. But mostly I love her for just being around me.\"\n\nThe girlfriend didn't seem to want to interject, just stand there and grin, and I was on a roll! \"But what ever she decides to do, whether it be you, me, or some Joe from down the street, it will be HER decision to make. I'll do my best to swing the vote in my direction, but I... WILL....NOT....FORCE....HER....TO DO....AAANNNNYYYYTHING....she doesn't WANT to do.\"\n\nThe girlfriend just smiled a sly smile, \"Good luck with that...\" then turned to head back to what ever cubby hole she crawled out of, her little clan following like good little soldiers behind her.\n\nI grabbed a towel and wiped the blonds back side down for excess oil, then gave her a light slap. \"Time for my break.\" I leaned back against the table and took a swig from my Pepsi while she hopped off the table, our little gathering still a bit quiet after my encounter with the girlfriend.\n\nMy girl came around the corner just as I was putting my pop down carrying a tray of smoothies for the ladies and two hot dogs for me. She handed out the smoothies and then me my two hot dogs. Once I had a hot dog in each hand she took the liberty of putting my change back in my pocket... and groping me again! \"Yep! Still loaded...\" she gave me a quick peck and then started sucking on her straw like she wanted to suck on something else.\n\nI just groaned and plopped down in the chair. The ladies chuckled and the hen fest began again, but my girl kept looking over at me every so often with a twinkle in her eye.\n\nWe were about half finished with our lunch when one of the organizers came over. \"We've had a complaint about your hair.\"\n\n\"What about it?\" she asked back.\n\n\"You know the rules, not drastic highlighting or tinting.\"\n\n\"Yea?....\"\n\n\"The red...\"\n\nI bet one of the girlfriends clan made a complaint just to cause problems....\n\nShe hesitated a second, \"Um... it's my natural color. I just haven't had a chance to dye the roots lately.\" She flashed her landing strip at the official, and a few of the ladies around us about spit out their drinks.\n\n\"Oh.... Um... well you can finish out the day, but pick a color for tomorrow...\" then turned to scurry back to the front. Evidentially it wasn't quite the response she was expecting. The ladies finally finished their drinks and began wandering back towards their booths, and the reps companion had to leave, so it was just the four of us.\n\nIt was a bit of an awkward silence for a bit, then she jumped up and laid back on the table. \"I haven't had my other massage yet!\"\n\nI smiled down at her and gave her a quick kiss before picking up the oil. I put her foot up on my chest, and that just 'happened' to lift and spread her thighs giving me a NICE look at her shaved pussy. I oiled my hands and began with her calf, working my way down to her thigh, just looking her in the eye and smiling all the time while the girls carried on their conversation. Even if she did falter a bit when I lightly stroked her shaved lips. I finished one leg, and started the other, which she lifted to my chest without my prompting.\n\nWhen I put her leg down and began working her hips and belly, running my fingers on either side of her landing strip she had to close her eyes and pause for a second. But when I made my way up to those luscious tits and began massaging just below, and then getting a good 'handle' on both of them, working and massaging and flattening and pulling, she stopped talking completely.\n\nI'm not sure who was enjoying it more, her being massaged, or my doing it. The look of pleasure on her face was almost intoxicating. I began taking it slow and sensuous on her tits, feeling her nipples stand up hard in my palms. I kept on hand flat on her tit as I leaned over above her face, putting most of my weight on that tit. The ladies around us seemed to be enjoying watching me manhandle her, but none more than the rep. Her nipples were doing their best to rip through her bra and top!\n\nI kissed the tip of her nose as my other hand slid down her belly toward her slit. \"You are the most beautiful woman in the world.\" I whispered to her as I slid my finger onto to her clit and pressed firmly. She hissed and trembled under me while I slowly but firmly ran my finger over her clit from side to side. I released my finger and her eyes flashed open, then she wrapped her hands around my head and pulled me in for a nice deep kiss.\n\nShe finally let me go with a big grin, and then a little round of applause from our crowd. She blushed, I licked the tip of my finger, and she blushed even more. Almost made her red roots disappear! It was interesting to see several of the ladies with their hands in their crotches, and the rep with her fingers in the leg of her shorts before she realized where I was looking and pulled them out quickly and looked away, her bare pussy still slightly exposed with her shorts askew!\n\nI took a quick sip of my Pepsi, the headed for the bathroom, \"I'll be back in a minute..\" I barely made it in the door when it opened behind me. I was about to say something when I saw my girl turn and lock the door.\n\n\"I'm not done with you yet mister.\" She bent over and grabbed the sink, sticking her ass towards me and looking over her shoulder. \"I need that cock in me...\"\n\nI let my already unzipped shorts fall to the floor and stepped out of them and into her waiting pussy. \"OH YESSS.\" We said almost in unison. I grabbed her hips, and within about four or five strokes I was filling her waiting pussy. My first shot in her set her off again and she was clamping and milking me while I was fucking her like our first time. Pure animal fucking! The slap of her ass every time I drove into her, her tits shifting as much as they could with every stroke.\n\nShe collapsed on the sink, and I fell back on the stool. All I could do was smile at her dribbling pussy in front of me and chuckle. She looked over her shoulder....barely. \"Need that a bit did you?\"\n\nI chuckled a bit more, \"Only every time I see you.\" I did manage to stand up, but while I was turning around she plopped down on the stool to relieve herself, then leaned forward to lick me clean before standing up.\n\n\"All yours dear.\" as she staggered to the sink. I managed to stay standing enough to pee, I turned to find her holding my shorts out to me. I put them on, taking the opportunity of leaning over to lick her nipples, before we made our exit..... to a loud round of applause and whistles. She turned into my shoulder, I just grinned and did a flourish with my arm while trying to take a bow with her hiding against me. \"Maybe we should give them an encore performance?\" I whispered to her.\n\nShe came up, gasped, then gave me a slap and grin as the warning bell went off. Our audience began moving away as she scurried to the booth, the rep giving me a grin and a thumbs up.\n\nSince she was still oiled a bit from her massage, it was just a quick once over and she was ready. The white bikini she picked looked fabulous against her tan, and her red landing strip was barely visible in the right light.\n\n\"You two look good together...\" the rep said.\n\n\"She looks delicious, I just look good when she's next to me.\" I gave her a quick peck on the cheek.\n\nThe rep looked at my girl, \"Does he have a twin with magic hands like those somewhere?\"\n\n\"Nope, he's an only child, so take advantage of those hands while you can...\" she turned to take a drink of her 'whatever' drink.\n\nI thought the rep was going to have a heart attack. \"HUH!.... you mean....\" She was looking back and forth between me and my girl.\n\nMy girl stepped closer to the rep, but spoke loud enough for all four of us to hear. \"Honey, you gotta watch out for those hands though. If her get a thumb in your ass you're a goner... \" The reps mouth dropped open staring at my girl. \"But one condition though. You gotta stay naked until I get back so I can get a look at these beauties!\" she gave the rep a quick kiss on the lips and groped a tit before walking off to the line for the stage.\n\nThe rep turned to me, \"Is she serious?\"\n\nI smiled, picked up the bottle of oil, and waived to the table smiling.\n\nShe reached for the hem of her top, then looked at me, \"Turn around.\"\n\nI shrugged and turned around, of course with the practice area behind us it was more a matter of distance than not seeing anything. Nice bod, and she looked shaved. Decent set of tits, all in all pretty close to my girl but not all the hard muscle.\n\nI watched her get on the table and tuck her tits under her a bit before calling 'OK'.\n\nI turned around and admired the beauty laying before me. \"NICE! Looks good enough to eat...\" I think I saw a blush creeping up around her neck. I put some oil in my hands and began on her lower back. Of course I enjoyed the look down between her thighs at her shave lips. She was trim enough to have a nice keyhole at her crotch letting her moist lips shine for me.\n\nAfter feeling her finally relax a bit I went down to her claves and started in, she was moaning at the massage as I worked my way up her legs, keeping a hand inside her thighs and spreading her legs a bit in the process. She even moaned a but when I ran my thumb up the crack of her ass. I didn't push it, just let her enjoy herself.\n\nI kept working up her back and then to her neck, getting a good share of little moans and groans along the way. \"OK....time to flip over.\" She started turning over, and was starting to lay back when she realized she was naked, bringing a hand and arm across her chest.\n\nI looked her in the eye with a smile, \"Too late, already got a good look....\" She gasped and blushed. \"Why would you want to hide those beauties anyway?\" I pushed my hand up under hers...without much resistance...and cupped her hard nipples in my palm and gave them a squeeze.\n\n\"OH THAT'S NOT FAIR......\" and kicked her head back groaning.\n\nThen there was another set of hands from the other side. \"Oh they are better than I thought...\" she ran her hands around the one I wasn't playing with and rolled her nipple between her fingers. While leaning over and giving me a nice kiss.\n\nThe rep was almost on overload with two sets of hands on her. I ran a finger down her belly to her slit and then lifted my hands off her, my girl lifting hers about the same time. She exhaled like she had been holding her breath for an hour and melted to the table.\n\nI led my girl around the table and reached behind her to undo her bikini, \"So how did you do?\"\n\n\"Not sure, it was good, but I've got some stiff competition with these girls.\" she wrapped her arms around me and gave me a nice kiss back. We sat back on the chair watching the reps tits rise and fall with her breath. She turned to me, \"Almost makes you want to lean over and suck on those beauties...\"\n\nThe rep rolled her head toward us and raised a finger.....then let it drop to the table. We just laughed at her. My girl finally got up and helped her to a chair, pressed tit to tit they were almost a mirror of each other except for the hair, one blond, one brunette with red roots....lol\n\nMy girl gave her a quick kiss, and got one back before sitting her down. The brunette from across the isle and our blond came back from the stage, stripping tops as they walked. The brunette was listening, and eyeing the table from across the isle while she slid her bottoms off.\n\nShe was wandering around her now almost empty booth, her booth mate disqualified just before lunch. I smiled and waived her over.\n\nShe scooted over with a grin, then looked down at my girl, \"You don't mind?\"\n\nMy girl had barely waived her hand when the brunette hopped up on the table....on her back! My girl grinned and shook her head, but kept on chatting with the blond and our now naked rep, although the rep was doing her best to keep her legs closed.\n\nI put her foot up on my chest like I did before, but she let her knees spread giving me a nice look at her pussy dribbling down her ass. I worked her calves and down to her thighs, and since most of the booths around us were now empty, let a finger slip down between her wet lips, watching her nipples stand up hard and crinkled when I did.\n\nWhen I worked her other leg, she kept the first up and spread, making her pussy gape a bit more. While the hand on the outside worked her thigh, the hand on the inside was lightly stroking her clit. I was going to lick her juices from my finger, but my girl beat me to it, taking them in her mouth while looking ME in the eye. I kept working her body, up her hips and belly to her now heaving chest. When I began working her firm tits and rolling her nipples she was doing her best not to moan too loud.\n\nSince she wasn't succeeding the blond leaned over and started kissing her, then she arched her back up and started to orgasm...of course my girl slipping her finger over her clit had NOTHING to do with it.... we gave her a nice long orgasm before letting her flop back down on the table.\n\nIt was getting close to time for the last round of the day when the brunette managed to roll off the table to head back across the isle. \"Man I wish I had a date like you for the banquette tonight....\"\n\nMy girl looked at her as she walked across, \"What banquet?\"\n\nThe brunette was starting to oil down, \"The anniversary banquet tonight... it's the twentieth anniversary for this competition... you are going aren't you?\"\n\n\"I haven't decided yet...\" my girl said a bit quietly. I looked at her, and she shrugged her shoulders like she had no clue what the brunette was talking about. The brunette headed for the stage, and my girl snagged one of the other contestants waking down the isle, and in a round about way discovered that there was indeed a fancy banquet tonight in the main ball room for any one that made it past the last cut today.\n\nMy girl was slipping her bottom on, when I had an idea. I grabbed the edge of the table cloth and snagged a string unraveling from the edge. I waked up to her with a grin, and stopped her from putting her bikini top on. I kissed a nipple, then tied the string on her nipple with a bow before lifting her top back up. \"For good luck...\" she gave me a quick kiss and scurried off to the stage all gins.\n\nI sat back with the rep, looking her over. \"So is this anything like what you expected?\"\n\nShe cupped her bare tits, leaving her nipples to pop out from between her fingers, \"Not even close...\" I held her top out for her, she hesitated a second, then uncovered her chest to slide the top on. I stooped down to get her shorts, then held them open for her to step into. I slid them up her legs, pausing just before pulling them up all the way to kiss the top of her mound.\n\nShe looked down at me as she pulled them up the last bit letting the seam slid between her wet lips showing me some nice camel toe and snapped them in front of me. I stroked her mound from outside, and then slid back on my chair. \"And neither are you...\" she said.\n\n\"What do you mean?\" I asked.\n\n\"All these women... and you only look at her...\"\n\nI smiled at her, \"I look at all of them....what guy wouldn't?\"\n\nShe shook her head, \"You see them, but you only look at her.\"\n\nI just shrugged, \"Same thing.\"\n\nShe was shaking her head at me when the girls came back. They were nervous, but glad to be finished for the day. I looked at her jiggling as she fast walked back to us, \"So?\"\n\n\"I think so....\"\n\n\"Well either way we're done for the day. Hit the shower woman...\"\n\nShe threw her bottoms at me, \"Only if you're doing my back...\"\n\nI looked around, and we were pretty much alone on this corner of the floor, so what the hell. The girls were already naked, and the blond and brunette across the isle were already headed that way, so I grabbed a towel and we headed over to the shower, taking the ones on the other side out of view of the rest of the floor.\n\nShe started lathering up, and since I didn't have anything with me, I had to use her fu fu body wash, but since we were doing each other I couldn't complain. She did my hair, then I got to run my fingers through hers. Feeling her hair in my fingers while she leaned back into me, wiggling her ass against me firm cock. Feeling her muscled back in my chest. We rinsed and cuddled under the water for a few minutes.\n\nWhen we shut the water off, there was a little round of applause from a few of the girls on either side of us. I took a slight bow, and then turned to dry her off, pulling her close for a few quick kisses along the way. She is so beautiful it's hard to keep my hands off her.\n\nWe were all sitting around in our robes when the lady from the competition made her way around. She faltered a bit when she realized I was a guy sitting around in a robe with wet hair, wonder what she would have thought about that being the only thing I had on? She passed out the good and bad news. My girl made the cut, the blond and brunette didn't.\n\nI pulled her close for a nice kiss, \"So I guess we have a banquet to attend.\"\n\n\"But I didn't bring a fancy dress....and I still have to dye my hair. And I have no idea where I can even get some hair dye around here...\" she was a little exasperated.\n\nThe rep popped up, \"I know just where we can get some hair dye, and I have a few dresses that might fit.\" She turned to me and the blond, \"You go get him presentable and we'll meet him at the banquet.\"\n\nWe gathered stuff up and headed out, me and the blond upstairs, her and the rep out to her car.\n\nWe made it back up to the room without too much fondling and groping, but I did slip my hand in her robe and cup a tit while she ground her ass into my cock in the elevator. The two teenagers coming down the hall as we went to the room seemed to really appreciate her leaving her robe gaping open. Her tiny thong showing, and her tits almost showing as well. I thought they were going to feint when she dropped her robe and made the last few steps to the room leaving her in her thong...not that you could really see it from behind!\n\nSeems she was a bit wound up. as soon as the door closed she dropped to her knees and began doing her best to inhale my cock. Now the first few strokes while I was merely firm she actually managed to get a bit into her throat, but that only succeeded to make me rock hard. \n\n\"Now that's what I'm talking about!\" she exclaimed as she came off with a loud pop. I was then very unceremoniously pulled to the bed by my hard cock, pushed back on the bed, and mounted. \"OH FUCK YESSSSSSS.\" She bottomed out on me, my rock hard cock pressing hard against her cervix.\n\nShe only settled there for a second and then she was off to the races. Riding me like a bucking bronco, her little B cups doing their best to try and bounce off her chest while she leaned forward over my chest. \n\nI was getting close when she started cumming around my cock soaking my balls and starting to make a puddle on the bed between my cheeks. I was just about ready to pop when she fell forward on my chest. I just wrapped my arms around her and started hammering her pussy from underneath. Feeling her hard nipples in my chest.\n\n\"OH yessss, fill my pussy....fuck meeee.... \" She buried her head in my shoulder as I began pumping load after load into her. \"YYYEEEEEEEEESSSSSSSSS!\" I pumped as long as I could, but just collapsed with her still on top of me.",
        "We laid there for a few minutes to catch our breath, my cock starting to soften inside her. \"Can you reach your camera?\" she panted.\n\nI looked around, I could see the handle over beside the bed. \"If we roll over.\" I managed to roll over and stay inside her....barely.\n\n\"I want every dirty nasty slutty picture of this you can think of...\" she said from below me.\n\nThe video camera was on top, so this was going to be good. I turned it on and focused on her face, panning slowly down her sweaty body, taking my time on her tits and nipples before making it to her cock filled pussy.\n\nI zoomed in on the base of my cock just outside her DARK lips, \"Oh look at the mess that horny little pussy made. Foaming at the lips, drooling around that cock it swallowed up.\"\n\nI began slowly pulling out, \"OH and it doesn't want to let go, trying to keep that cock buried in it.\" my cock was coming out covered in our cum. \"Oh yea, filled to overflowing. It's going to be a river of cum flowing out of your pussy when I pull out.\"\n\nWhen I pulled out her pussy stayed gaped open a bit, and then the cum started to flow. \"Oh there it cums, big globs of cum starting to run out of you...\" I leaned down for a better look. \"Catch it with your fingers...\" she reached down and caught quite a bit between her fingers. \"Now close your legs and lick your fingers clean.\"\n\nShe closed her legs, but instead of licking her fingers right away, she held them over her mouth and let our cum dribble from the into her mouth first before actually taking them in her lips to clean them off. Opening her mouth to show me her wrapping her tongue around them to clean them off.\n\nI stood up beside the bed and offered her my firm and coated cock, to which she smiled and then took quite some pleasure in cleaning off. \"That was wonderful!\" she exclaimed when she flopped back on the bed.\n\n\"We're not quite done yet.\" She looked up at me with a quizzical look. \"Keep your legs together and stand up beside the bed.\" She got up and I kneeled down in front of her. \"Now lift your leg up on the bed, spread your sloppy pussy, and let that cum run down your leg...\"\n\nHer eyes flashed open and she grinned from ear to ear, then she did exactly as I asked. Spreading her pussy wide enough I could almost see inside her if the lighting was better. She hadn't even started spreading when it began flowing down her thigh. \"Do you have any idea how hot and slutty that looks? Looking up at you pulling your pussy open to let our cum drain down your leg. Your pussy lips dark red and your hard nipples and shit eating grin in the back ground looking down at me looking up into your spread pussy?\"\n\nHer eyes rolled back as she closed them. \"Oh that was a good load in you, it's still dribbling out of you and it's half way down your thigh.... Her legs were trembling a bit. \"You've got yourself spread so nice and wide for me, I bet if I blew into your pussy you'd feel it all the way up on your g-spot...\" she whimpered a bit and bit her lips, but kept herself spread.\n\nI leaned in close and breathed softly up into her spread pussy. \"AAAHHHHH!\" she fell back onto the bed groaning and quivering. I put a finger on her clit making her screech and start cumming again. Nothing major, but a nice little extra.\n\n\"I bet if my girl was here she'd be wiping and eating that cum from your thigh.\" She grinned, and then brought her fingers down to her thigh and ran her fingers back and forth through the dribble, then brought them back up to her lips to lick them off, still grinning and never opening her eyes.\n\nI put the camera away and went to run my shower. Even though I had one earlier down on the convention floor, I need and other and had to wash the fu fu from my hair. I was about half finished when the blond joined me, we just smiled at each other, doing each others back, but not anything sexual.\n\nI finished and dried off, then handed her her towel before taking one of the others to do her hair a bit.\n\nShe took another one to do mine, \"She really is lucky to have you...\"\n\nI pulled her hands from my head, \"Other way around... I'm lucky to have her in my life.\"\n\nShe looked at me for a few seconds, then cocked her head to one side with a little smile, \"You really do love her...\"\n\n\"Huh?\"\n\nShe got a bit more serious, \"Like you said earlier telling her girlfriend off...\"\n\nI thought back remembering, and then smiled, making her grin again. \"Well I hadn't really thought about it, but yea... I guess I do. I hadn't realized I said it out loud... but it doesn't sound too bad does it?\"\n\nShe ruffled my hair with her fingers, \"...not bad at all.\" We managed to dry off without too much more difficulty, and sat back down at the table near the patio door sip[ping cold drinks, neither of us wanting to get dressed. \"So we've got a few hours to kill before the banquet....\" I said looking down at her lovely little B cups.\n\nShe looked down and my firming cock, \"Normally I'd say let's jump in bed for some wild sex, but we've already done that.\" She said with a big grin.\n\n\"So tell me a little about your self, since I'm sure they've already told you quite a bit about me...\"\n\n\"Well I'm assuming they told you I'm in law school?,\" I nodded. \"I've got two semesters to go yet. I work nights in a warehouse driving forklift.\" I must have looked surprised at that, because it made her smile and laugh. \"You not going to be one of those male chauvinists are you?\"\n\nI smiled back at her, \"No, I was just thinking what a shame it is to cover such a delicious figure...' I stammered out quickly.\n\nShe laughed at that, \"Nice recovery... and they guys aren't quite as strict on the dress code there for some reason...\" she said cupping her tits.\n\n\"Oh I wonder why?\" I said grinning and looking straight at them.\n\n\"I've been known to leave and extra button or two undone.\"\n\n\"And I'm sure they appreciate every chance they get to get a glimpse of you...\"\n\nShe kicked her head back laughing, and I raised an eyebrow at her, \"That sounds like an interesting story that needs to be told.\"\n\nShe settled down enough to be able to speak again. \"You remember that two week heat wave we had this summer?\" I nodded, that was about the same time I was groping a flat chested girl in the new arcade under construction.\n\n\"Well even on the night shift it was pretty hot in the warehouse, so after about the fourth night the supervisor made an 'executive' decision. Since there wasn't anybody but us in the building, we could take our shirts off to cool down.\"\n\nI smiled, \"And he forgot he had a woman in the crew?\"\n\n\"Oh he remembered, but he didn't know it had been almost two weeks since I had gotten laid and I was horny and frustrated.\"\n\n\"You didn't?\"\n\n\"HELL YES I DID!\" I shook my head. \"I had a NICE little lacy bra on, and for as much as I was sweating it was pretty much transparent when I peeled my shirt off.\"\n\n\"And?\"\n\n\"And all the guys just stared at my chest.\"\n\n\"What did you do?\"\n\n\"Oh my pussy was aching by that point with a dozen guys staring at my tits, my nipples were hard enough to cut glass. I thrust my chest out as best I could and told them, 'It's no different than your girlfriends and wives... and if you have a boyfriend instead I don't want to hear about it.\"\n\n\"Oh shit...\"\n\n\"There was a few seconds of silence, then one of the guys from the back piped up with 'well I guess she told you...' I grabbed my clip board and hopped back on the forklift and went back to work.\"\n\nIt was all I could do to keep from rolling on the floor. I managed to stay in my chair. \"Did you have any more problems that night?\"\n\n\"Nope, it was nice driving around with the breeze on my chest. The first hour or so my bra was still wet enough to make a cool breeze if I got up to full speed on and end to end run. The best part was this shy high school guy.\"\n\n\"Why?\"\n\n\"He'd blush every time I caught him looking at me.\"\n\n\"What did you do....\"\n\n\"I waited until lunch break, and hung back a bit so all the guys were in there when I walked in... to the air conditioning.\" I raised my eyes at that. \"OH YEA! So I walked in and the room went silent, with most of the guys trying not to look at my nipples standing out.\"\n\nI stopped at the end of the tables and looked at them, almost laughing at the little looks. \"All right guys, let's get this over with.' Some of them looked at my face, but glancing down when they thought I wasn't looking. \"You aren't thinking or saying anything I haven't heard before.\" I cupped my tits and jiggled them at the guys, the high school kid about choked on his drink.\"\n\nMy cock was starting to get hard with this story. \"So there I am standing at the head of the tables cupping my own tits. 'So first off they are 34B's, they are a nice handful,' I jiggled them again, 'and I'm told they are a nice mouthful as well.'\n\n\"I bet the high school kids was about to try and slide under the table?\n\n\"Oh no, he was three chairs away and all eyes on my nipples! I kept going with them, 'if I had a problem with you guys looking at me I wouldn't have taken my shirt off,' several of the older guys smiled and nodded as I continued. 'So listen up, NOBODY will get in any kind of trouble for looking at and commenting on my figure tonight, or any other night for that matter. In fact I consider it a complement that you want to look and comment, and you are all witness to my saying that.' I tweaked my nipples as I said that just to emphasize what I said.\"\n\n\"What happened?\"\n\n\"It was silent for a bit, then one of the older guys, one of my buddies, spoke up, 'Honey, if I wasn't married and twenty years younger I'd do you in a heart beat.' I cupped my tits hard and did a little groan and they all laughed. The rest of the night they all took the time to look and comment, and it was all compliments.\"\n\n\"No more problems?'\n\n\"Nope, the supervisor came over later in the evening, and made a comment about my saying I didn't mind not really holding up in court if I tried to do something to them.\"\n\n\"What did you tell him?\"\n\n\"I took his pad from his pocket and wrote a case number on it, he looked at it and asked what it was. I told him it was a case number and go look it up. Since I gave them permission they could make the most nastiest crudest comments about me from now to eternity and there was nothing I could do about it. He looked at me like I was full of it until I told him I was a law student.\"\n\n\"So you spent the rest of the night driving around in your lace bra?\"\n\n\"Yup, did it again a few nights later when the guys were all complaining about how hot it was out there. I knew they just wanted to see me in my bra again, so I did them one better. I ducked around behind a crate and took my bra off under my shirt.\"\n\n\"DAMN!\"\n\n\"The supervisor was scolding them for just wanting to see me running around in my bra and looked at me. I just shrugged and nodded.\"\n\n\"Well if she goes first it's OK.\" He said.\n\n\"What did you do? As if I didn't know.\"\n\n\"Just what you think, I told them there was only one problem, I hadn't worn a bra that night. I pulled my shirt off, tossed it on my forklift, and hopped on doing my best to make my tits jiggle as much as possible before driving off to a round of applause.\"\n\n\"Oh you just want to show off...\"\n\n\"Em Hm, and knowing all those aching cocks are just from looking at my tits made me wet all night. I had to make several trips to the ladies room to relieve myself that night.\"\n\nShe slid down off her chair between my legs and wrapped her hand around my now very hard cock, \"Just like this one is probably aching right now.\" She leaned forward and ran her tongue around the head once or twice, then hopped up and ran to the bathroom. I assumed to use it, but she reappeared with my razor and a damp towel.\n\nShe walked over and straddled me, guided my cock into her tight wet pussy and settled in, wiggling until she had me right where she wanted me in her. It felt like she was trying to push me through her cervix. \"Now let's get you shaved up properly.\"\n\nShe wiped my face down, and SLOWLY ran the razor over what little stubble I had while clenching her pussy around my cock. After a swipe up my neck, \"You enjoying yourself?\" I asked.\n\n\"Mmmmmm Hmmmmm...\"\n\nI reached around and cupped her ass while she squirmed and shaved me. Since it was a disposable, and she was shaving more for fun than anything it made it interesting. She was fine until I got near her rosebud, then clenched up. \"I'm not going to hurt you...\"\n\nShe relaxed a bit, but not much, \"Sorry.... I....\"\n\nI took the razor from her hand and kissed the end of her nose. \"But you had a bad experience...\" she looked at me but didn't say anything, just barely nodded. \"Old boyfriend?\"\n\n\"No.... it was.......earlier....\"\n\nI wasn't going to ask any more. \"Well, where you've got me trapped, it's not like I'm going to be able to do more than play with my finger is it?\"\n\nShe clenched down on my cock, still rock hard in me with a bit of a smile starting to come back. \"...guess not...\"\n\n\"And your ass is so lovely I have trouble containing my urge to caress and play with it.\"\n\nShe started to blush at that. \"And I'll stop any time you say so, I just want to run my fingers over you and play with you....OK?\"\n\nShe leaned forward, planting her nipples in my chest and her head beside mine before whispering in my ear, \"....ok....\"\n\nI slid my hands down her ass and began squeezing and playing, feeling her relax against me. I reached under us and cupped her ass right at her thighs and began lifting her up and down a bit, just tiny little strokes, before letting her settle down on me completely again, finally relaxed.\n\nI left one hand down there and brought the other up to her tit, bringing her away enough to kiss while groping her tit, then sliding my had still under her to the bit of skin separating her pussy from her ass, stroking her slowly and tenderly. She actually moaned a bit with that, so I kept it up.\n\nI kept kissing her and squeezing and playing with her tit and nipple as I lengthened my strokes, getting to where I was stroking her entire rosebud with each stroke back to her pussy, picking up some lubricant from her pussy with every stroke. After a few more strokes I was concentrating more on her rosebud and less on her pussy, with no sign of a problem.\n\nI stopped with my finger massaging her rosebud, \"Not so bad after all....\" I said breaking the kiss.\n\nShe tensed for a second realizing where my finger was, but I kept circling with out penetrating and she relaxed again. \"... it's....ok.....\"\n\nI pulled my finger from her rosebud and brought my hand up to her other tit and cupped it to bring it to my mouth, but the phone rang before I could take it in.\n\nYou could feel and hear the suction as she pulled off me, making her giggle as she scooted over to the phone. Seems my girl needed a few things and wanted her to run them downstairs. What ever it was, it must have been good from the expression on the blonds face.\n\nShe slipped her tank top and skirt on and gathered a few things from my girls bag and headed downstairs. She came back up all flustered, and stripped just inside the door then sucked me hard again before impaling herself on me. \"Now where were we?\"\n\nShe wrapped her arms around my neck drawing me in for a nice kiss while I reached for a nice grip low on her ass...with no flinching! I pulled back away from her, looking her in the eyes, \"We have one less body in here tonight...\"\n\nShe looked at me confused, so I handed her the note I found on the other bed after she left. Our black girl left this afternoon, catching a ride with someone else heading back. \"Mmmmm that means we don't have to share as much....\" She was really getting into grinding me deep in her pussy.\n\n\"I take it that's a good thing...\"\n\nShe was panting a bit while gyrating on me, more moving me around in her pussy than out right fucking. \"Uh huh....\" She managed to get out. She had rolled her hips forward enough to press her clit into me while still working her pussy as I felt my cock go even deeper into her.\n\n\"Are you going to cum....\"\n\n\"Uh......huh.....\" she gasped out.\n\n\"And then you're going to clean that hard cock your playing with....\"\n\n\"Uhhhhhh....\"\n\n\"And then you're going to sit on my face and watch me clean your dripping pussy.....\"\n\n\n\n\"OH SHHHIIIIII.....\" She started clamping and convulsing around my cock, and I reached up and tweaked her nipples to keep her going a bit, then letting her collapse against me. I picked her up still impaled on my cock, making her groan as she settled in even deeper. I felt her squeezing the head of my cock buried deep in her before I laid us back on the bed.\n\nShe laid there a bit, before pulling off me, her pussy not wanting to let the head of my cock go, and her groaning when it did. She kept her legs together while she turned around and began cleaning my cock. Cradling it and slowly licking me, making sure every bit was clean.\n\nShe regained her strength enough to sit up and straddle my face, and kicked her head back as I cupped her ass and spread her pussy with my thumbs. I looked up at her, \"No, watch me, see my tongue as you feel it circle your clit,\" I took the tip of my tongue and went round and around her clit as she watched. While she was watching my pinkie was playing with her rosebud ever so gently. \"This would be easier with a mirrored headboard.\"\n\nShe smiled at that, \"Watch my tongue disappear into your pussy being spread wide with my thumbs.\" I gave her lips a bit of a tug with my thumbs, getting a bit of a hiss as I planted my face in her pussy and slowly lapped and worked her pussy while also working her rosebud, feeling it relax enough that I could have put a finger tip inside her.\n\nI let her slide back after I had eaten her pussy a while and enjoyed her rosebud a bit, but left my hands under her ass and my pinkie in place. \"All the while playing with your beautiful ass.\" and gave my pinkie a little wiggle.\n\nShe clenched for a second, then relaxed shaking a finger at me and squeezing her cheeks around my trapped finger, \"You're a sneaky little sucker...\" she hopped up leaving my hands on my chest and then leaned down to kiss my lips still wet with her juices.\n\n\"We need to get you ready.\"\n\n\"The doors don't open until six, and the buffet line doesn't start until seven...\"\n\n\"I know, but she said you were to get there right as the doors opened and get a table right up front. She wanted you to take two extra jackets to stake out two chairs so you could mingle without loosing your seats....\"\n\n\"Sounds like she has something planned...\" I looked at her like I was hoping to get an idea of what it was.\n\n\"She said your rep friend had a terrific dress and she also had a surprise for you, and no she didn't tell me what it was. She also said she might not make it until about six thirty.\"\n\nShe scooted off to the bathroom, and came back with a warm wash cloth to wipe my still hard cock. \"I haven't done that in quite a while....\"\n\nI looked down at her gently wiping me down, \"Done what?\"\n\n\"Worked a guy through my cervix...\" my cock jumped in her hand at the thought of that. \"You like that do you?....\" before giving the tip of my cock a kiss.\n\n\"Not something I've done before that I know of... it sure was different.\" I said cupping her chin at my waist.\n\n\"But something you'll try again?\" she said just before running her tongue up the bottom of my cock like an ice cream cone again.\n\n\"Do I get to play with your ass again?\"\n\n\"As long as you're buried in my pussy....\" she said before taking me as deep in her mouth as she could.\n\n\"Mmmmmm... I can live with that.\"\n\nShe pulled off me, smiled, and licked me like an ice cream cone.....again!\n\nShe began setting out my stuff, slacks and shirt and the white dinner jacket, making a production of putting my boxers back in the suitcase. She made sure I was properly positioned in my slacks before letting me out the door. \"And bring me back something to nibble on from the banquet!\"",
        "I was about fifteen minutes early, but the doors were already open, just the hotel staff setting up. I put two jackets at one of the center tables near the buffet line and dance floor, got two water glasses and filled them half way to sit on front of them, then went wandering around the hotel.\n\nThere wasn't much going on at that time of day, so it was pure wandering until I saw the girlfriend and her crew. There was a group of business types between us watching them walk down the hallway, so they didn't see me, but they were hard to miss, but NOT in a good way. They definitely looked better in their jeans and boots. Here's three muscle bound butch types with their hair spiked out.... in sleeveless tops and above the knee skirts?\n\nNow the tops and skirts didn't look bad, but all the muscle sticking out of them looked more like it was a collage football initiation prank than a ladies banquet! I couldn't help my self and followed them in. Most of the tables near the dance floor were occupied, and they spied the table I had staked out. They were approaching it and I was about ten steps behind them when one of her crew began to pick up my jacket and reach for my water glass.\n\n\"I don't think my jacket will fit you...\"\n\nThey turned to me, standing there in my white dinner jacket, looking me up and down with a bit of a sneer. \"OH.... Uh.... We thought some of the staff left theirs behind...\"\n\n\"Not a problem, enjoy your evening...\" and stood there watching them. They hesitated for a second like I was going to walk away, before they got the hint and headed back to some of the unoccupied tables further back. I got some fresh glasses of water and headed back to the table.\n\nI was setting the glasses down when things got a bit quieter, I looked toward the door, and saw a gorgeous redheaded model walking in in a white dress. I sat the glasses down and then it hit me. I turned back to see my girl walking toward me.\n\nI had to sit back against the table to keep from falling on the floor.... A million words would not do justice to the vision I saw before me. She stopped and did a slow turn to let me take it all in. \"Surprise...\" she said with a smile.\n\nI took her hands in mine and raised them a bit to look her over again, \"More like I've died and gone to heaven....\"\n\nIt was a floor length but backless gown, side less was almost a better description. The back was cut low enough that I could almost see the cleft of her cheeks. The sides cut far enough forward I could DEFINITELY see the swell of her magnificent chest. The deep V in front held together by a slim gold chain and went almost all the way to her belly button. The dress barely above her nipples and held up by a thin band going from the very outside of the cut of the top up and tied behind her neck in a lovely bow, the tails hanging delicately down her back. The skirt, while floor length, had long slits up the front of each leg, letting a white lace stocking top and a bit of thigh flash with every step.\n\nTop that with wavy red hair framing her delicate face with the barest of makeup except for matching red lipstick, and my red crystal necklace sitting at the top of her cleavage... perfect. \"There are no words to describe how wonderful you look...\"\n\nI brought her hands forward to kiss them, then pulled her close to give her the softest kiss I could.\n\n\"I'm glad you like it...\"\n\n\"What's not to like...\" I ran my hand under her chin and up her cheek. Then looked up at her hair, running my fingers through her waves of red, then looking back down in her eyes with a raised eyebrow.\n\n\"I've been a bottle brunette for so long, and the complaint today got under my skin. So I just said what the hell.\"\n\nI took her hands in mine again, kissing them. \"Well even if it's only for the night... thank you.\"\n\nI held her close, and she grinned back at me grinding her mound into my hard cock. \"I expect you to show me LOTS of appreciation later....\"\n\nBy now she had gathered a bit of a crowd, all her friends were amazed at her new look, and ALL of them were complementary. I sat back and watched her come alive amongst them.\n\nThe only one I felt sorry for was her girlfriend, most likely a new ex-girlfriend. She had done her best to try and mold my girl into what she thought she should be. I hadn't set out to cause problems, just bring a beautiful woman out of her shell. But I would imagine there was going to be plenty of stories about how I ruined her.\n\nI got her attention long enough to let her know I was running up to the room to get the camera. I came back with it, staying back a bit and snapping pictures of her with several of her friends, laughing and having a good time. I did manage to separate her long enough to make our way through the buffet line. \"Glad we came tonight?\" I asked.\n\n\"This is the most fun I've had out in years.\"\n\n\"You know you're the most beautiful woman in the room...\"\n\n\"Nooooo....\"\n\n\"Look in the mirror behind stage. Every man in here is looking at you wishing they were me. The women either want you just as bad as the men or are jealous of your beauty.\"\n\nShe was looking, but not believing. \"I'm not that....\"\n\nI took her chin in my hand. \"Yes you are...\" and gave her a quick kiss before offering her my arm to walk back to the table. We had barely sat down when her gaggle of friends were around us again. \n\nThe best part of it was that even though I wasn't really in on the conversation, they all acted like we were together. She had a hand on my leg or holding my hand while we sat there and munched while she chatted. Of course I had to put my hand on her stocking covered thigh, and even on her bare thigh when ever I could.\n\nI saw the DJ starting to get organized, so I excused my self for a bathroom run, and swung by his stand on the way back, making arrangements for a pair of songs to start the evening. Something on the order of a slower ballroom dancing type of song not too long, and a real nice slow cuddling type of song, the longest he had. He looked at me, and then over at my girl at the table, and smiled, \"Sure thing man...\"\n\nI made my way back over, grabbing the last two pieces of cake left on the buffet. She shook her finger at me when I brought them back, the other girls giggling at her. I ate most of the first piece, and held a small bite out to her. She took it, and I gave her a quick kiss before having another bite myself.\n\nThe lady across the table looked at us, \"The only thing missing is the veil...\"\n\nIt took me a second to realize what she had said, but the wide eyed expression on her face helped. I just smiled and gave her a nice long slow kiss, with lots of oh's and ah's from the other girls. I had almost finished the cake, and offered her the last piece. She took it from me, but instead of eating it herself, she fed it to me, then kissed my nose like I had hers. All I could do was smile and eat.\n\nShortly after that the DJ started a medium speed soft song. She was flabbergasted I asked her to dance. I wasn't that good, and thank god the DJ knew what I meant by slow ballroom dance. I put a hand on her bare side and led her slowly around the dance floor, showing this woman off. We were the only ones on the dance floor....\n\nI held her for a second when the song ended, looking at her beauty in the sparkly reflections from the mirror ball. She was about ready to go sit down when the slow song started. I pulled her close, and she melted into my arms, her head cradled on my shoulder. About half way through the dance she lifted her head enough to whisper in my ear. \"As soon as you get the chance, I want you to take my jeweled plug from your jacket pocket and slide it in my ass.\"\n\nShe clung even closer, grinding her mound into me I the darkness. \"And be ready to bend me over, flip my dress up, and fuck me silly when we get upstairs...\" then laid her head back on my shoulder.\n\nI held her even closer and kissed the back of her neck. The song was getting toward the end, and I maneuvered us toward the buffet end of the dance floor that was pretty much in darkness, away from the few couples that had joined us.\n\nAs the song ended I took her face in my hands with us turned sideways to the tables. With the hand out of sight I took the plug from my pocket and reached in the leg sit of her dress, sliding the tip through her lips to wet it, then around to her ass. I gave it a bit of a push, and she moaned into me as it slid home in her ass.\n\nShe was rather enjoying the plug in her ass, leaning against me for support and looking a bit flushed. She did at least sit down gently this time instead of flopping down like she did on the bed last night. The girls razzed her a bit at getting all flustered with me on the dance floor. She just turned sideways against me and pulled my arm snug under her tits, pushing them up nicely and giving me the sight of the edge of her areola to enjoy.\n\nWe cuddled and talked with the girls for a bit, and some of them were starting to wander away when she began yawning.\n\n\"Well ladies, as much fun as this even has been, I believe my girl is a little tuckered out.... And we have a competition to win tomorrow.\" They all thought that was rather funny.\n\nThe trip down the hall and upstairs was a bit better than the other night, but she was still quivering with the plug jiggling in her ass the whole way. I had to support her down the hall, and when I got the door open she staggered into the room and crawled up on the corner of the bed with her ass high in the air, the blond looking on from the other bed.\n\n\"NOW FUCK ME!!!!\" she yelled before she put her face in the bed.\n\nI walked up behind her, running my hand over her ass covered in the thin dress making her groan. I ran my hands down her legs and around to the slits she was kneeling through, then gathered the dress slowly, exposing her stocking covered thighs before bunching it up and flipping it over her back, chuckling at the towel with a large wet spot on it that had been pinned to the inside of her dress.\n\nThere were some guttural noises coming from her buried in the comforter when I ran my finger between her dripping pussy and bumped her plug filled ass. When I gripped her ass and spread her pussy with my thumbs she rotated her hips up as far as she could like a cat in heat, \"Fuck meeee.\" I heard through the comforter.\n\nI pulled my thumbs back and licked the tips before taking my jacket off and letting my slacks drop to the floor. She was trembling when I grabbed her ass again, and began a small orgasm as I slid deep into her. She was doing her best to clamp down on my cock, but little bumps of the plug in her ass messed with her concentration enough to let me have my way with her.\n\nI was slowly sliding in and out of her pussy, feeling her wet lips against my balls when I sank in deep. I was starting to get a rhythm going, and bumping her plug as I did. She was clamping harder and harder on my cock, and I was doing my best to hold off. But then I saw the blond laying on the other bed with her legs spread and her fingers dancing on her clit.\n\nI leaned forward and drove into her, bumping her plug with every stroke, making her scream out and collapse under me while I kept driving into her, pumping load after load into her while watching the blond orgasm on the other bed. I kept going for as long as I could, finally laying there with my cock buried in her pussy.\n\nI was going to lay there for a bit, when the blond rolled me over and handed me a towel, then rolled my girl the other direction, flipped her dress up, and dived into her dribbling pussy, a healthy mix of our cum flowing from her. Spreading her lips and feasting on it, groaning at enjoying the feast before her, while my girl was whimpering with every little bit she licking from her.\n\nI rolled back over next to her to watch her face while the blond enjoyed her dripping pussy, seeing her twitch and gasp when the blond hit just the right spots. I couldn't help myself and reached into her dress to cup her tit and roll her nipple between my fingers and cover her mouth with mine.\n\nEvidentially it was a bit of an overload for her. She arched her back up into my hand and began a slow tremble, which we did our best to keep going. When we did let her loose, she dropped back to the bed like a rag doll, barely breathing.\n\nWe lay there a bit, the blonds head on my girls slick thigh and my hand still in her dress, looking at each other over her still dressed body smiling.\n\nI pulled my hand from my girls dress, dragging it over her nipple making her groan, and slid it down over her dress to her bare mound, then sliding a finger in her cleft to her clit making her twitch a little. I looked down at the blond, \"Well you did say to bring you back something to nibble on didn't you?\"\n\nThe blond gasped and then about rolled off the bed laughing. We were still laughing when my girl started to come around. \"Very funny you two...I'm not sure I can even stand....\"\n\nWe each took a leg and got her stockings off, with smiles and groans from her, before we stood her up and I got behind her. I slid an arm inside her dress under her tits and released the bow behind her neck, letting her dress pool around her ankles.\n\nI turned her to the big mirror looking at her naked body, the red crystal in her cleavage, and her red curly hair. \"Even naked you're the most beautiful woman in the world.\" and kissed the side of her neck.\n\nThe blond was standing beside us with her hands on her hips, \"And what am I? Chopped liver?....\"\n\nI smiled and held an arm out for her to come to us, when I pulled her in close I whispered to the two of them, \"No, just a very close second...\" and gave her a kiss too. I turned back to my girl, \"You able to walk, or do I need to help you into the shower?\"\n\nShe looked at the blond with a grin, \"No, but you can do our backs...\" they headed for the bathroom, the blond leading the way, and my girl doing the best she could. She barely made it inside the bathroom door and bent over the counter before I realized why she was having a bit of trouble walking. there in the middle of that gorgeous ass was the red crystal in the middle of her plug.\n\nAny other time I would have teased her a bit in removing it, but she was still on overload from having it in all evening, so I just slowly slid it out, still getting a gasp when it popped out. She crawled in the shower wit the blond while I cleaned the plug and put it on a towel to dry.\n\nI was going to get in right away, but had to stop and watch them through the glass. Holding and rubbing, slipping and sliding over each other. Hands on tits and ass, belly and neck, pulling the other toward them to rub and play with what ever body part they had a hold of. I got in when they were sandwiched to each other, tit to tit, pussy to pussy in a serious lip lock. Taking the scrunchie from the blonds hand I did my girls back, then nudged them still locked together to turn and do the blond.\n\nThey stayed locked together until I took the hand held and began rinsing them off. They separated enough to let me rinse them, then my girl took the wand from me to rinse her own hair. Don't ask me why, but I was expecting the red to wash out back to her brunette....and it didn't!\n\nAll I could do was stand there and stare at her. She saw me staring, \"What?\"\n\n\"You're hair....\"\n\nShe froze and looked at me, \"You don't like it?\"\n\n\"It's not that... I just thought it was for tonight....and that you'd be....\" I reached out to run my fingers through it.\n\nNow she was smiling again, \"Nope...you're going to have to live with it for a while...\" I just pulled her to me and held her like my life depended on it....until she ran the wand over us making me sputter. \"Told you it was a surprise!\" she said grinning.\n\n\"Come on you two,\" I heard from the bedroom. I hadn't even noticed the blond getting out of the shower. \"We have an early start tomorrow.\"\n\nI shut the water off and we toweled each other dry, with me coming back to her hair several times. The blond was holding the covers back for us, and I got to be a bodybuilder sandwich again. Curled up with her in my arms and the blond snuggled in behind me, looking at her face and red hair in the moonlight as we went to sleep."
    ],
    "authorname": "acup",
    "tags": [
        "body builder",
        "lesbian",
        "flashing",
        "oral",
        "exhibition",
        "redhead"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/its-all-the-exs-fault-ch-11"
}