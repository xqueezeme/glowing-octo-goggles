{
    "title": "Friends Become Lovers: Alice & Shane",
    "pages": [
        "Alice pulled in to the familiar driveway and turned off the ignition. She slumped her head on the steering wheel and let out an audible groan. The drive home had taken her 18 hours, not including the two stops she'd taken to have a short sleep reclined in the driver's seat. \n\nShe unbuckled her belt, grabbed the duffel bag off the passenger seat, opened her door and stepped out in to a fresh Oregonian breeze. She was so pleased to be home. \n\nShe walked up the few steps to the familiar door and wrapped her hand around the familiar knob. Twisting gently and pushing she opened the door to her childhood home. Her father had lived here for 35 years; The house a gift from her father to her mother on their wedding day.\n\nSlipping her Converse shoes off at the door, and placing her bag next to them, she quietly closed the door behind her and padded silently through the hallway. She turned right at the first door and entered the lounge room. Her dad had his back to her and he was watching the late news. Another report about the 45th president started playing and her father switched the tv off, sighing.\n\nThe tv darkened and she could see herself in the tv screen reflection, and so could he. Her beloved dad turned in his favourite chair and smiled brightly at her.\n\n\"Alice! You snuck up on me. Welcome home!\" He rose from his chair, walked around it and pulled her in to a warm embrace. He kissed her temple and pulled back, holding her shoulders. \"I wasn't expecting you for another few hours, sweetheart.\"\n\n\"I made good time, Dad.\"\n\n\"You sure did. You hungry? I cooked.\" \n\nAlice scoffed, mocking him warmly. \"You? Cooked?\" \n\n\"Okay, so I ordered Chinese. What's the difference?\" \n\n\"There is a huge difference, Dad. Glad to see you're still eating well.\"\n\n\"Well, if the Chinese can live to 100 eating this stuff, then so can I,\" her father said with a wink. He pulled her in to another hug. \"It's so great to have you home.\"\n\nAlice smiled in to his shoulder. \"It's good to be home.\"\n\nHe released her from his embrace and gestured in the direction of the car outside. \n\n\"You have much stuff to bring in?\" He asked.\n\n\"A couple of boxes. I can get them, though.\"\n\n\"Let your old man lend a hand, okay? You just go on up to your room.\"\n\n\"Thanks, Dad,\" she replied. She watched him walk down the hallway and out the front door. She followed behind, picked up the duffel she'd dropped at the entrance, then turned and headed up the staircase to the second floor.\n\nHer room was just how she'd left it. Literally. She noted the layer of dust on the dresser and suspected her carpet had not seen a vacuum since the day she had left almost one year ago. Her dad was not a great housekeeper, but he was a great man. Her mother had left him for a wealthier man when Alice was seven years old. Alice's dad was left with four children to raise alone, the youngest of which was only three years old. Alice and her three brothers had stayed with their father as their primary custodial parent, their mother agreeing to bi-weekly visits. This pleased Alice very much; She had always been closer to her father.\n\nIt had, at times, been hard for Alice to grow up without a steady female role model. Her mother had struggled with guilt and, with her new husband's money, had tried to buy back their love. Alice and her brother's were more like their father in the way that they valued experiences and memories more than physical items. Whether they had all been born with this trait, or if it had been ingrained in them through their father, Alice was not sure. But she was so thankful for it. Because of it, it had allowed her to roam and travel freely without being tied to possessions.\n\nAlice's father entered the room carrying two boxes, one stacked on the other. \n\n\"Is this everything?\" he asked. He placed them on the floor at the foot of her bed.\n\n\"That's all of it, yes.\" These two boxes held all of Alice's worldly possessions. One contained clothing, the other books. In her duffel she had one change of clothing and her technology; Lap top, cellphone, chargers and noise cancelling headphones. \n\n\"Do you want me to fix you a plate of food?\" her dad asked as he stepped towards the door to go.\n\n\"No thanks, Dad. I think I'll just unpack and call it a night.\" Alice glanced at her watch; 11:41pm.\n\n\"Sounds good to me. I'll head to bed, too. Good night, sweetheart.\"\n\n\"Good night, Dad.\"\n\n-\n\nAlice spent the next two weeks adjusting to life back home. She wasn't sure how long she'd be back for this time; The previous year she'd spent in Colorado as a snowboard instructor during the cold months, and had picked up casual jobs in the warmer months. Her English degree was going to waste but she didn't care. She had one life to live and she wasn't going to waste it being tied to a 9-5 job. She was sure she'd be back on the road soon; It was just a matter of time. She needed to save up a little more cash to tide her over until she decided on her next big adventure. Her dad wouldn't accept any money as rent, but she at least wanted to contribute towards groceries and household expenses while she was there. She was 27 years old now, not a teenager riding on her father's good graces.\n\nAlice had exhausted most avenues in the search for a casual job. It was summer, so most part time positions were filled by high school students. Alice flopped on her bed and let out an exasperated sigh. Reaching across her bed blindly she felt around for her cellphone. She unlocked it and opened up Facebook. She scrolled through her newsfeed; Memes, engagement announcements, baby photos, Buzzfeed quizzes, the usual. Then she stopped scrolling and read,\n\nShane Merryweather\n\nPosted 54mins ago\n\nPutting my feelers out there to ask if anyone can help out a friend. Need someone to come over for a few hours each day to help me post op. Usual household duties required, I can provide light entertainment, refreshments, and monetary compensation.\n\nThat sounds like something I can do, Alice thought to herself. She opened up Messenger and composed a message.\n\nHi Shane, long time no talk. Saw your post and would love to help out. I'm home for a while and have free time. Alice Ackerman.\n\nShane was online and she saw the three dots pop up, signaling that he was replying. A message came through.\n\nHi Alice! It has been ages. Really nice to hear from you. Have had a few responses but most people can only come in the evenings, whereas I need help through the day. Can pay $10 hourly. That work for you? Shane.\n\nAlice read the message and nodded to herself. Sounds ideal.\n\nPerfect, Shane. Just let me know when I can start.\n\nShane's reply came swiftly again.\n\nMom is here with me for another two days. Can you start on Friday?\n\nAlice replied immediately.\n\nFriday works fine. Message me your address, cellphone number and what time you'd like me to come by.\n\nAlice stood up and adjusted the legs of her shorts which had ridden up. She walked over to her childhood book shelf and pulled out a ring binder. She carried it back to her bed and sat down. Her phone pinged; Shane's details coming through. She ignored her phone and opened the binder. Flicking through the clear pages of school certificates, sports team photos and school report cards, she stopped when she came to her sixth grade class photo. She placed her index finger on the cheery faces and scanned across to find her own. There sat eleven year old Alice; Crooked teeth, long dark ringleted hair. Every single year in school she was placed in the same position for class photos. \n\nAlice had always been the smallest student. Now, as a fully grown adult, she was only 5'1\". She had matured earlier than the other girls her age and had finished growing by the time she was thirteen. Her friends had quickly overtaken her and stood many inches taller than her now. Alice didn't mind being smaller. She sometimes joked that she was vertically challenged. Other times she called herself \"fun sized\" in reference to a fun sized candy bar: You don't often need a full sized candy bar, just a small hit of sugar is enough. And that's what Alice was; A small hit.\n\nAlice pressed on with her index finger and stopped at the row above eleven year old Alice. Staring back at her was eleven year old Shane Merryweather. He did not have a wide grin on his face like the other boys. He had a small smile across his lips, his cheeks were round and sweet. His long blonde hair hung straight down, almost at his chin.\n\nAlice rested her head back on the head board of her bed. She cast her mind back to Shane in middle school and her stomach flip-flopped. He was shy. He was really very shy, and Alice had loved that about him. The other boys had been loud and rough-and-tumble. Alice, having been raised by her solo father and with three brothers, had been very much a tom-boy through her early school years so was used to schoolboy antics. Because of this, Alice had spent most days playing alongside Shane and his friends. They had been her friends. Her best friends. With them she didn't need to worry about cattiness, talk of make up- which Alice knew nothing about- having to wear the latest fashion or hairstyles. During recess she'd kick the soccer ball around the pitch with them, and she'd sit with them at lunch. But all that had changed when Alice was sent to an all girls' school in 8th grade. Alice still resented it slightly.\n\nHer friends, her male friends, had all gone on to junior high together, whereas Alice had had to start over with friendships. She had showed up to class, completed her work, graduated on time and then got the hell out of there. She'd not seen Shane, or her other male friends, since the end of 7th grade. She'd joined Facebook in 2008 and had reconnected with a few of them through there, but had not been in contact with them aside from the odd 'Like' or Comment here and there.\n\nNow, Alice grabbed her cellphone and swipped across the screen to read Shane's message. She saved his details as a new contact on her phone and opened Facebook once more. Typing his name in to the search bar she pulled up his profile page. His profile photo was a beautiful shot of a canyon. Clicking to view more photos she swiped through until she found one of him. She checked the date on it; Six months ago. Gone was his long, straight blonde hair. Gone was his round cheeks. Staring back at her was a man with messy, short cropped fair hair and a short beard. She, of course, expected no less, but it was hard to imagine your childhood friend as anything other than a child. She recognised his gentle brown eyes, though. There he is, she thought.\n\n-\n\nOn Friday, at the pre arranged time, Alice pulled in to the driveway of the home of Shane Merryweather. She had dressed comfortably enough to allow herself ease to bend and move while doing chores. She wore a navy and white striped tshirt, black straight legged jeans which hugged her petite curves, and her trusty Converse. Her dark, shoulder length hair was pulled in to a loose, messy knot on top of her head. As per usual, her entire beauty routine had been a warm wash cloth and water. She didn't bother with make up ever, even for formal events.\n\nAlice walked up the path and knocked three times on the front door. She then opened the door and let herself inside, knowing that Shane would be resting. She closed the door behind her and removed her shoes. Barefoot, she padded quietly in to the house. \n\n\"Hello?\" she called, \"It's Alice.\"\n\n\"Alice, in here,\" she heard in reply. She turned left at the voice and entered the lounge room.\n\nAcross the room was Shane, partially reclined in a lay-z-boy chair. His plastered leg was propped up on the foot rest. \n\n\"Shane,\" she said with a smile, crossing the room. \"Wow, it has been so long.\" She sat on the edge of the coffee table next to his chair and faced him. She drew in a long breath as she took in his face. He was familiar yet he was a stranger. \n\n\"Alice,\" he extended one arm out and pulled her in to a hug. \"God, look at you!\" he said as he released her. \"How long has it been?\"\n\n\"About 15 years!\" she replied with a laugh. \n\n\"15 years. Wow. Holy smokes. How are you? You've barely changed.\"\n\n\"Oh, please!\" Alice laughed, sitting back down on the edge of the table. \"I'm at least an inch taller, I have more style, and I no longer have vampire teeth,\" she said, giving him a wide man-made grin. Shane laughed. \n\n\"No, seriously,\" he said with a smile, \"You look great. You look happy.\"\n\n\"Well, thank you. And I am. How are you? What have you done to yourself?\" she asked, motioning towards the thick cast that covered his leg from thigh to toes.\n\n\"Car accident,\" he replied soberly. \"Drunk driver. I made it out alive, he didn't.\"\n\n\"Oh, Shane. I'm so sorry to hear that.\"\n\n\"I'm just so glad to be here, to be honest. And I could be so much worse off right now. All my other injuries have healed well, it's just my leg that has been an ongoing issue. I'm supposed to be on bed rest for another month.\"\n\n\"Well, that's what I'm here for, right? So you can rest.\"\n\n\"Haha, right! And to keep me company. My mom is great and all but it'll be nice to have someone of the same generation to chat with.\" Alice laughed. \n\n\"I totally understand,\" she said with a smile. \"Let me get a few jobs under way and then we'll chat some more.\" Shane nodded his approval.\n\nAlice wanted to stay and catch up with her old friend but she would've been naive to think she could get paid just to chat. She started in the laundry and put a load of washing on, then moved through to the kitchen to wash the few dishes in the sink. She popped her head through the lounge door way and peeked in on Shane. He was watching a football replay.\n\nAlice moved through to Shane's bedroom. She pulled open the blinds and let in the gorgeous midday light. She stripped the sheets off the bed and bundled them in to a ball. \n\n\"Linen cupboard?\" she called out.\n\n\"In the hall\" came a reply.\n\nShe pulled out a fresh set of sheets and pillowcases and remade the bed. She set the covers back so Shane could easily climb straight in to bed later tonight. Alice found these tasks simple and easy. Having been the only female in a male dominated household growing up a lot of the household upkeep had fallen on her. Her father had worked so much in order to keep her and her brothers clothed, fed and housed, that Alice had become the Mother Hen. And it naturally flowed out of her in these situations, too. She liked feeling helpful and needed.\n\nAlice walked back in to the lounge and Shane looked up from the television and smiled at her. \n\n\"Have you eaten?\" she asked.\n\n\"Not since breakfast,\" he replied.\n\n\"Let me put something together, then,\" she said, wandering off to the kitchen. She opened the fridge and found it well stocked. Shane's mom must've gone shopping before she'd left, she thought to herself.\n\n-\n\n\"Oh, wow. Alice. Thank you so much.\" Shane turned off the tv and pulled himself up a little straighter as Alice entered the room carrying a hot omelete with toast. She placed the plate down on the coffee table and took Shane's arm, helping to sit him up. She placed the plate on his lap and handed him the cutlery. She went back to the kitchen and returned with a tall glass of orange juice, and placed it on the coffee table next to his chair.\n\n\"This is really great, Alice. Thank you.\"\n\n\"No problem at all,\" she replied with a smile as she sat down on the couch across from him. She watched him devour the food in record time. \n\n\"That was amazing. Compliments to the chef.\"\n\nAlice laughed, stood, and took the plate and cutlery away. She washed them, and the frying pan, in the kitchen and returned to the lounge. \n\n\"Sit, please,\" Shane said, motioning towards the couch. Alice sat down, curling her legs up underneath her. \"I'm so thankful you're here,\" he began, shifting in his seat to face her better. \"It's really nice to connect with you again.\" His brown eyes were warm and friendly. His small, crooked smile was just as sweet now as it was so many years ago. \n\nAlice couldn't help but feel comfortable around him.\n\n\"I feel the same. We were such good friends, way back when, and I've missed you\", Alice said, a blush warming her cheeks, \"and the guys,\" she continued quickly. \"Are you still in touch with them?\" Alice asked.\n\n\"On and off, yeah,\" Shane said, \"A couple of us meet up once a month or so to watch a game on tv or down a few drinks at a bar.\"\n\n\"Sounds fun,\" Alice replied with a smile.\n\n\"You should come next time. They'd love to see you.\"\n\n\"They would? How would you know?\" she joked with him.\n\n\"Oh, you know... The topic sways to you on occasion,\" Shane said, a blush rising up his neck.\n\n\"It does?!\" Alice asked, surprised. \"What about me?\"\n\n\"Oh, nothing really. Just that we miss you!\"\n\n\"Okay, cool. Well, count me in next time, then,\" Alice said with a grin. \n\n\"There's a game on next week, and since I'm practically incapacitated the guys will likely come here to watch it.\"\n\n\"That's perfect, since I know where you live,\" Alice chuckled and gave a small wink. The washing machine started to chime a merry tune, signalling that the load was finished.\n\n\"I'll sort that,\" Alice said, getting up from the couch.\n\n-\n\nThe next few days went by quickly. Alice spent the middle portion of each day with Shane, helping him around his house, helping him to recover. Each morning she dedicated to herself, often running 5 miles before breakfast. When she was out pounding the pavement she felt carefree and had time to embrace the beauty of her surroundings.\n\nThere really was nowhere better than home. Each evening she spent time with her dad, and her brothers when they came by. A few nights per week she cooked; Her dad insisted she not but she knew that he was only trying to save her any hassle. As soon as she set the home cooked meals on the table and saw the smile on her father's face she knew it was what he needed.\n\nGame night came around fast and Alice felt nervous about the impending childhood reunion. Her reunion with Shane had gone fine, but that was because Alice was better one-on-one. She struggled in large groups. She tried to remind herself that these were her old buddies. It would all be fine. She dressed appropriately for the occasion; A blue fitted long sleeve tshirt, denim shorts and Converse clad feet. She let her hair dry naturally after her shower, and she left her wavy hair fall untethered at her shoulders. She had told her dad not to wait up tonight, as she wasn't sure how long the game would run for. He'd be watching it, too, though, from the comfort of his favourite chair.\n\nAlice stopped by the liquor store on the way to Shane's house and bought a six pack of bottled beer. She would be driving home, so she'd limit herself to only two drinks. The guys could have the rest.\n\nAlice pulled up outside Shane's house. She had been here earlier in the day, as usual, and had done an extra careful tidy up and preparation for tonight. She'd laid out bowls and unopened bags of crisps and peanuts for Shane to put out later. There were two cars in the driveway already. She parked on the street and walked over the berm to the front door.\n\nLetting herself inside she slipped off her shoes and padded through to the lounge. She spotted Shane in his chair and two large male heads above the back of the couch. Shane's eyes darted up when he spotted Alice walk in and he grinned widely. The two heads turned in succession, showing the smiling faces of Hayden and Brad. \n\n\"Alice!!\" they sang out in unison. They both darted up off the couch and came towards her. \n\n\"Hi guys,\" Alice replied shyly. Hayden grabbed Alice around the waist and lifted her in to the air, swinging her around once.\n\n\"Still our little Alice,\" he said, planting her squarely on the floor. \n\n\"Wish I could say the same about you two,\" she replied, poking Brad in the stomach and touselling Hayden's hair. Both were men, now, of course. Bearded, tattooed men.",
        "\"Hi, Shane,\" Alice said with a smile, acknowleging the host.\n\n\"Hi, Alice. Make yourself at home,\" he called from his confinement. \n\n\"Looks like you already are, Alice,\" Brad said jokingly. \"I've never seen this place so spotless. Hope Shane's picked up a lesson here or there.\"\n\n\"Hey,\" Shane said in mock anger, \"I'll have you know I'm housebroken and can dial for a pizza. What else does a grown man need to know?\" Hayden and Brad laughed and went back to their spots on the couch.\n\nThe pre game footage had ended and kick off was about to start. Brad cracked open a fresh beer. \n\n\"We've made room for you here, Alice,\" Hayden said, motioning towards the couch. \n\n\"The rose between two thorns,\" Shane said with a smile, acknowleging her seat in between the two large men. Alice sat in the center spot, placed her beers on the floor at her feet and pulled one out, opening it with her teeth.\n\n\"Woahhhhhhh!\" the three men cried in unison. \n\n\"You don't grow up with three brothers and not learn something,\" she said with a laugh, tipping her head back and downing a mouthful of the cool hoppy liquid.\n\n\"Damn, girl! I knew you've been one of us all along,\" Hayden said, wrapping his arm around her shoulders. Alice laughed and wriggled free.\n\n-\n\nThe first two quarters passed before they knew it. Alice phoned in a pizza order which would take an hour for delivery. No one minded as they had no where else to be. Alice was attentive to Shane, aware that he was somewhat out of the fun, confined to his chair. She caught him watching her a few times and each time she'd look his way and their eyes met he'd smile his small smile and lower his head, fingering his beer bottle. She replenished his beer when he ran out and set up his own snack station on the small table next to him.\n\nWhen the pizza was eventually delivered she paid the driver; \"Add it to my wages, Boss,\" she joked to Shane; and carried the boxes through to the lounge. Hayden and Brad had downed a lot of alcohol by this point and some greasy pizza was exactly what they needed. Setting two pizzas on the table, Hayden and Brad dived straight in, barely waiting for the box lids to be opened. \n\n\"Jesus,\" Alice exclaimed, jumping back. \"I almost lost an arm.\"\n\n\"Sorry, Al,\" Brad grinned at her through pizza sauce.\n\n\"Share this one with me?\" Alice asked Shane, offering the last pizza in his direction. \n\n\"Please,\" Shane said with a smile. \n\n\"You still like pepperoni with pineapple?\" she asked, lifting the lid to show him exactly that. Shane laughed loudly, a bewildered expression on his face. \n\n\"You remembered?\"\n\n\"Of course I remembered,\" Alice said smugly, settling on the cushioned arm of his chair.\n\n\"Thank you,\" Shane said.\n\n\"Don't mention it,\" Alice replied, lifting a slice of pizza out of the box.\n\n\"No,\" Shane said gently, honesty pouring from his face. \"Thank you.\" Alice could see what he meant. She placed her small porcelain hand on his large, strong one.\n\n\"It's my pleasure,\" she replied. \"What are friends for, right?\"\n\n-\n\nAlice watched Brad and Hayden stumble over the front lawn and dive in to the waiting taxi. It was late now, the game had been over for some time and she had just been able to convince them to go home. She had stuck to her two drink rule and had kept an eye on Shane throughout the night. He'd only consumed four bottles of beer, which was plenty when combined with his pain medication. He'd seemed exhausted after the game had ended and she wanted him to rest.\n\n\"Okay, party animal,\" Alice said jokingly, reentering the lounge after seeing off the others. \"Let's get you to bed.\" She kneeled by Shane's chair and slowly and gently lowered the leg rest. Shane scooted forward in the chair as it lowered so that his foot touched the ground carefully. He reached down the side of the chair for his crutches. Alice and Shane had done this same act over the week since she'd started helping him, and now they worked together like a well oiled machine.\n\n\"Damn. Where did Brad put my crutches?\" he asked himself. A few hours earlier Alice and Shane had laughed at the antics of the other two as they fought as brave knights with crutch-swords.\n\n\"Here, let me help you,\" Alice said, offering Shane her hands. Shane took the tiny limbs gently in his hands. Alice pulled as hard as she could and Shane pushed upwards on his good foot, knowing her tiny 100lb body couldn't possibly propel his 6'2\", 200lb mass without some help. Alice came around to his right side and inserted her shoulder against his rib.\n\nUsing her as a crutch they hobbled and weaved towards Shane's bedroom. Alice's left arm was wrapped around Shane's waist and she could feel the tension and movement of his firm stomach muscles as they worked together to get him down the hallway. Alice helped him across to his bed and held his hands as he sat with a sigh.\n\nStanding between his outstretched legs, Alice watched the top of his head as he relaxed, turning his head this way and that, stretching out his neck muscles. Their hands still clasped, Shane looked up at Alice, their eyes meeting. This time he didn't look away, and neither did she. Alice placed her hands gently on Shane's shoulders. Her left hand then came up to embrace Shane's right cheek and she caressed his stubble with her thumb. Shane's large hands instinctively came to rest gently on her waist, his fingers and thumbs encircling her almost entirely. She pulled his head in to her chest and laid her cheek against his hair. His arms wrapped around her and pushed the hem of her shirt up so that his hands could rest against her warm skin.\n\nThey both breathed deely, eyes closed, totally at peace. They stayed like that for what seemed like forever, simply holding each other. It was innocent and unforced. Alice felt a burning in her chest; She felt like she'd come full circle from that awkward child who was just \"one of the guys\", to a beautiful, needed woman. The firm arms encircling her only drove that point home even further.\n\nFinally, Alice pulled back. Shane loosened his grip and placed his hands on her hips once more.\n\n\"You should really get some rest,\" she said quietly.\n\n\"This is restful for me,\" he replied coyly.\n\n\"I'll help you get in to bed,\" Alice said, moving to pull back the bed covers. Shane pulled his tshirt off in one swift motion revealing his smooth stomach and a smattering of dark hairs over his firm chest. Alice couldn't help but look. He left on his grey sweatshorts.\n\nUsing his strong arms he pulled himself back further on to the bed. Alice assisted in helping to lift his casted leg up on to the bed. She smoothed the comforter down over him once his head was on his pillow. Shane took her hand,\n\n\"Please don't go,\" he asked, innocence and fondness in his eyes. Alice hesitated. \n\n\"I'm going to tidy the house a little,\" she stalled. She gently removed her hand from his and left the room.\n\nWalking in to the lounge, she collected all the empty bottles and placed them in the recycling basket in the kitchen. She cleared away the crisp packets and took a damp cloth to the surfaces in the lounge covered in salt, pizza and beer rings. Once she was done she stood in the kitchen, looking out the window above the sink. Her reflection stared back at her.\n\nThe decision to stay here with Shane couldn't be made lightly. It wasn't in her plan. All she needed was to make extra cash and then she'd be on to her next big adventure. But she was already in too deep. This wasn't some new guy she'd just met. She had known Shane for more than half her life, even if she'd only just reconnected with him recently. She hadn't realised it before but she actually skipped out of bed each morning, eager to run and think. And her thoughts always led to Shane, his house, and what tasks she could do for him each day. Whenever she arrived his wide smile always warmed her insides more than any comfort food could. He was her comfort.\n\nShe walked back in to the lounge and lifted her cellphone from the table. Typing deftly, she sent off a text message.\n\nHi Dad, staying out tonight. Will be home in the morning. Love you.\n\n-\n\nAlice padded silently back to the open door of Shane's bedroom. The muted light showed Shane on his bed, lying on his back with one bent arm over his eyes. Stepping in to the room she walked to his dresser and removed a tshirt that she had washed, dried, folded and put away only the day before. With her back turned to Shane she removed her shirt and bra, slipped on his tshirt, then shimmied out of her shorts. She loosely folded the discarded clothes and placed them on top of his dresser.\n\nTurning back to Shane she saw that he'd removed his arm from his face and was now watching her.\n\n\"Hope you don't mind,\" she smiled, gesturing to the tshirt she'd donned.\n\n\"Not at all,\" he replied quietly, \"It looks much better on you than it does on me.\" He sighed. \"I thought you'd be on your way home now.\"\n\n\"I decided that a sleep over with my childhood friend was a better way to spend my night,\" she said with a grin, walking around the bed and climbing in beside him.\n\nThe soft mattress caused her to roll in towards him. He moved his arm up and behind her and pulled her in closer to him. She turned in towards him and laid her head on his shoulder. Nestled in to him she felt so safe and warm. He pressed a kiss to her hair, leaving his head turned with his lips on her.\n\n\"This is nice,\" he whispered.\n\n\"It really is,\" she replied sleepily, placing her left hand on his chest.\n\nShe fell in to a peaceful sleep.\n\nShe opened her tired eyes slowly and was greeted by darkness. It was still night. Shane slept quietly next to her. She waited for her eyes to adjust to the light and then observed his profile. Straight nose, broad eyebrow ridge, lashes that any woman would kill for. His lips were parted slightly above his strong bearded jaw.\n\nAlice reached up and ran her index finger achingly lightly across his lower lip. He didn't stir. She traced her finger down his chin and ran her fingers through his short, wirey beard. Her nails scratched lightly at the hair. Shane groaned lightly and turned his head towards her. Alice froze. Shane's eyes fluttered open. \n\n\"Hey,\" he said groggily, seeing she was awake. \"You okay?\"\n\n\"Yes,\" Alice whispered, embarrassed to have been caught. She started to remove her hand from where it rested but Shane's right hand came up and caught her wrist gently. He brought her fingers to his mouth and kissed the pads of her fingertips.\n\nAlice sighed happily. He pulled her arm lightly, effortlessly half drapping her over his chest. His index finger went under her chin, lifting her face to his, and he kissed her. Alice's hands instinctively went in to his hair, and she tightened her fingers in his locks and tugged gently. She deepened their kiss as their tongues intertwined. Shane's hands moved to the hem of her substitute nightgown, lifting it so that her back was exposed.\n\nHe ran his hands over her silky smooth skin and, wrapping his arms around her, easily lifted her so she was lying directly on him. Her legs straddled his waist as they continued their kiss.\n\n\"Is this okay?\" Shane asked, pausing.\n\n\"Yes, this is okay,\" Alice replied, pressing her lips to his once more. The fact that he cared enough to ask turned Alice on more.\n\nShane ran his hands up her waist, his thumbs grazing the sides of her breasts. Alice let out a groan. He dragged his nails down her spine, sending shivvers of pleasure through her. She ran a hand down his check, over his neck and collarbone to his chest. She felt the bump of his erect nipple on her palm. She grazed her thumb over it. Shane wrapped one arm around her and pulled her in tight to him, pressing their chests together.\n\nTheir lips parted and they looked at each other, pools of lust in their eyes. Alice took his nipple in her thumb and index finger and twisted firmly. Shane's head lolled back, eyes closed, mouth open. He groaned loudly. She released his nipple, flicked it twice, and then twisted it again. His hands dropped to her ass and he grabbed handfuls of soft flesh, squeezing it. Taking her by her waist he slid her down his torso slightly and ground his hard shaft against her mound. Her excitement, mixed with his pre cum made the fabric between their groins wet with desire.\n\nShe sat up, her ass straddling his cock, and lifted her tshirt up and over her head. Shane gently took her perfect teardrop shaped breasts in his hands, \"Thank you, Jesus,\" he mumbled to himself. Moving up his body she lowered herself over his face, dangling a large erect nipple. His lips parted eagerly and he sucked the nipple and surrounding breast deeply in to his wet mouth. \n\n\"Ohhhhhh,\" Alice moaned, bracing herself on his strong shoulders.\n\nShane's hands roamed over her satin flesh. He smoothed his hands down over her panty clad ass. One hand held her to him, the other continued their exploration, over her ass to rest on the material covering her wet hole. He tapped lightly at the warm, damp spot on the fabric. His index finger traced over the elastic stitching on the inside of her thigh. Slipping his finger underneath it he paused and looked in to Alice's eyes. She nodded her consent.\n\nHe pulled back the stretchy fabric with ease and his hand continue on its mission. His slid one finger, then two in to her dripping orifice. Alice moaned loudly, dropping her head on to his shoulder. She lay on him, all 100lbs of her, as he fucked her waxed, smooth pussy with his fingers. His ring finger and pinky moved deftly over her clitoris, causing her to moan and groan in ecstacy. Her fingers gripped his shoulders, nails digging in to flesh.\n\nAs her breathing quickened, so did his strong digits, as he pounded her sopping cunt until she cried out in pleasure and pain. Her muscles clenched around his fingers, her cum dripping on to his stomach. He held her tightly to him as his fingers slowed, as her breathing slowed, as she regained her composure. \n\n\"You are so fucking beautiful,\" he whispered in her ear.\n\n\"I'll bet you say that to every girl you make scream like that,\" Alice said half jokingly, looking up in to his eyes.\n\n\"Not true,\" he said, taking her words at face value. \"I've dreamed of doing that to you for the past ten years.\"\n\n\"Shane,\" Alice said, lost for words.\n\nShe reached up and stroked her hand across his cheek. \n\nAlice raised herself up off Shane and stood between his open legs. She slid the drenched panties down her slim, toned legs and kicked them across the room. \n\n\"Damn, I like this view,\" Shane said, putting his hands behind his head and grinning from ear to ear. \n\n\"I can stay up here if you like,\" Alice teased, rolling her nipples between thumb and forefinger.\n\n\"No, get down here, woman!\" he laughed, pulling her behind her knees. She dropped to her knees on the bed and laughed, too. She climbed over him and sat Japanese style between his legs.\n\nTaking the waistband of his shorts in her hands she pulled them down over his hips. His cock sprung out from it's confines, large and formidable. It rested against Shane's abdomen, grazing his belly button. Alice eyed up his gorgeous cock and subconsciously bit her lower lip in anticipation. She wriggled backwards and eased his shorts down his legs, being especially careful over his thigh high cast. Alice stood at the foot of the bed and removed the shorts from Shane's feet, dropping them to the ground.\n\nShe looked up the bed at the incredibly sexy naked man before her. He had one arm bent up to rest his head on and he was looking at her with equal desire. \n\n\"When did you become so sexy?\" she asked, climbing back on to the bed and slinking up the mattress to him on her hands and knees like a feline. \n\n\"I was born this way,\" he said cheekily.\n\n\"No, you weren't,\" Alice said honestly. She straddled his waist once more and placed her hands either side of his head. \"Remember, I knew you as a scrawny kid. You were not sexy then. Cute, yes. Sexy? Not so much.\"\n\n\"You didn't want to kiss me under the bleachers?\" he asked with a wink.\n\n\"Oh, I did. Yes,\" Alice admitted freely.\n\n\"You did?\" Shane replied, shocked and genuinely curious.\n\n\"I did,\" Alice whispered, lowering her mouth to his ear and taking his earlobe between her teeth. Shane let out a groan of appreciation.\n\n\"So you mean this could've happened-\" he started.\n\n\"Years ago,\" Alice finished.\n\nTaking her face in his hands he pressed their lips together, a symbol of their friendship turning from childhood friends to lovers. The urgency of their kiss increased until they were panting and laughing. Alice pushed herself up from him and moved her way down his body under her pussy rested on his shaft. Moving slowly she rubbed herself over him, lubricating and caressing him.\n\nShane's hands rested on Alice's thighs; He pushed and pulled her up and down him, helping her in her movements. Alice reached behind her and took hold of his cock, his immense girth making it impossible for her to close her fingers around him. She blindly rubbed her thumb over the head, spreading the pre cum that seeped out of the eye. She tilted her hips back and brought her opening to rest on the tip of his penis. \n\n\"I'm sorry I can't help with this. I wouldn't usually be so laid back in this situation. I fucking hate this cast,\" Shane said, acknowleging his lack of ability to move around.\n\n\"Shhhh,\" Alice said gently. \"It's okay. Let me take care of you.\"\n\nShe pushed her hips back until she was penetrated by Shane's hard, throbbing cock. The feeling of being stretched so wide made her gasp. She pushed further until he was so deep in her that he was massaging her cervix. They both let out a groan, enjoying the sensation of being joined for the first time. She started to move slowly, her extreme wetness making it a smooth, slick ride. She raised her arms up and ran her fingers through her hair, loving the sensation of riding on top of this gorgeous man.\n\nShane's hands came up and grasped her hips. Alice bent her knees and placed her feet flat on the bed. She started to move faster, her strong, toned thighs allowing her to bounce above him easily. Shane's large hands gripping her helped to propel her up and down over him, faster and faster, their hearts racing, her fluids spreading between them, down over Shane's tight balls and through his pubic hair. Alice watched the flex and strain of Shane's arms as they bounced her tiny body over him. His eyes were open, watching her pink cunt swallow his cock with every descent.\n\nAlice dropped a hand to her pussy. She rubbed around and over her clitoris with expert ability, giving Shane an incredible show to watch. \n\n\"Ohhh, you look incredible,\" he groaned, propelling her over his cock even faster. He watched her gorgeous breasts bounce in unison with their pounding, her nipples as sharp and erect as tacks. Alice removed her hand from her pussy and reached up to his mouth, pushing her fingers between his parted lips. He sucked on her juices, groaning at the delicious taste of her.\n\n\"I'm not going to laste much longer, babe,\" he said, screwing his eyes shut, trying to delay the inevitable.\n\n\"Open your eyes,\" Alice urged. Shane obeyed. \"Look at me. Keep your eyes on me. Cum in me.\" Alice's bouncing didn't relent, she pushed down harder and deeper, pounding his cock with everything she had. \n\n\"Ohhhhhhh,\" Shane groaned, so close to the edge.\n\n\"Cum in me, Shane,\" she whispered. Hearing her say his name tipped him over the edge and he convulsed, shooting hot, thick cum inside her, coating her cervix and dripping canal with his seed. He roared, an animalistic sound of pleasure.\n\nAlice rode him; She rode the orgasm out of him. She did not let up until his body relaxed and his arms flopped on to the bed, totally spent. Only then did she gently ease herself off him. She lay on top of him, chest to chest, his arms wrapped around her tightly and they fell in to an easy and untroubled sleep.",
        "-\n\nWarmth. Sensation. Legs twitching. Nerves on edge. Groaning. Moaning.\n\nAlice's eyes flickered open. It was early dawn. Light had started to creep through the blinds behind her. Lying on her right side, she was tucked tightly against Shane. Her left leg lay draped over him, her pussy hard up against his thigh. She could feel the lingering affects of stimulation. Had she been grinding him in her sleep?\n\nEmbarrassed, Alice tried to roll away but Shane's arm, which was holding her tightly to him, just tightened further. She took a chance and looked up slowly. He was gazing down at her, smiling smugly. \n\n\"Hi,\" he whispered. \"How are you feeling?\"\n\n\"I feel great,\" she whispered back. \"How are you feeling?\"\n\n\"I'm feeling great, also. And a little bit wet.\"\n\n\"Wet?\" she asked, confused. Shane motioned towards his thigh. Her pussy was soaked and dripping.\n\nAlice groaned. She dipped her head towards his chest in embarrassment. \n\n\"Feeling horny?\" Shane asked with a wink. Alice groaned at her vaginal indisretion. \"Don't be ashamed,\" he chuckled. \"Everyone gets morning wood.\" He reached with both hands to pull Alice over him once more. \"I shall recify that problem right now. I need you to sit on my face,\" he instructed her very matter-of-factly.\n\nAlice felt a shock of pleasure through her clitoris at those words. She giggled at his directness and climbed up off the bed and over him. She lowered herself towards his mouth, holding the thick wooden bedhead for balance. Shane grinned and licked his lips as her pussy came towards him. \n\n\"Mmmm, breakfast,\" he said cheekily as he place his lips on her. Alice laughed, relaxed and happy.\n\nHer laughter quickly turned to mews of pleasure. Shane sucked and licked enthusiastically around and over her lips. Her wetness he took in and then spread back over her with his tongue. He purposely avoided her clit, which was throbbing with desire. Alice ungrasped the bedhead and put both hands in Shane's hair, grabbing handfuls of his tresses she tugged gently at the thick dirty blonde strands.\n\nShane's hands on Alice's hips tilted her slightly and he plunged his tongue in to her asshole, lapping at it, probing it. He raised a hand up to her lower back and slipped a solitary finger in to her tight, puckered, wet rear hole. Alice gasped, the air escaping her lungs quickly. The sensation was intense and foreign, weird and so, so deliciously good.\n\nHer pussy secreted a wave of cum at this new feeling of ecstacy, which Shane consumed eagerly. He groaned happily at the taste of her. She tightened her grip in his hair and bucked on his face. His tongue flicked over her clit quickly as his finger in her ass slipped in and out slowly. The differing sensations was blowing Alice's mind. She couldn't focus, her nerves were on edge all over her body. He nipples were firm and erect, goosebumps spread across her skin.\n\nShe heard her voice crying out, incoherent groans of delight. Shane's lips tightened over her clit and he began to suck. His finger pressed deep inside her ass and Alice cried out, her body betraying her as she tipped over the edge of control and experienced the most intense, heart stopping orgasm she'd ever had.\n\nAs her cries of desire rang out, Shane's mouth was unrelenting, sucking, probing, licking, as he swallowed and absorbed her orgasm. As she sagged over top of him, utterly spent, legs shaking, Shane removed his finger, took her by her hips and gently rolled her over him to rest on the bed beside him. She was curled in the foetal position, shuddering, but smiling. Shane looked at her; Her cheeks flushed pink, her dark hair unruly, her naked breasts round and perfect. His heart swelled. He took her in his arms and held her as the high passed. Pulling the blanket back over her he told her to rest. She fell back in to an easy sleep, curled in his arms.\n\n-\n\nA few days passed. Shane and Alice continued with their routine. Alice helped Shane around the house, and Shane recovered more each day. They hadn't fucked since that night and the sexual tension between them was palpable. Shane was starting to become slightly more agile with his awkward cast, even going so far as making his way around the house crutch free.\n\nThat afternoon Alice was standing in the kitchen at the sink, washing up from lunch. She heard Shane's cast thumping on the floor. She didn't bother to turn around, knowing he'd call out if he needed help, and she continued on with her task. The thumping got louder until the floor shook under her.\n\nShe felt Shane's hands on her hips, his hard, thick rod pressed against her lower back. Her hands stilled in the soapy water. That day was particularly hot, and Alice had on a loose sundress. Shane reached down and placed his hands on the outside of her knees. He dragged his hands up her smooth, tanned legs, gathering the skirt as he went. \"You are looking particularly sexy today, Alice,\" he whispered in her ear. \"Though, I'm not sure this dress is work appropriate. I'll have to ask you to remove it immediately.\" He nibbled at her earlobe and pressed his tongue inside her ear. Alice groaned loudly and pushed her butt back towards him.\n\nShe pushed herself slightly away from the counter and raised her arms in the air. Shane lifted the dress up and over her head in one swift movement. Underneath the dress Alice was wearing a black lace bralette and black Brazilian bikini briefs. Alice placed her hands in the sink once more and went back to washing up. \"I like your work ethic, Miss Ackerman. You're entitled to a 15 minute break, if you'd like to take it now.\" Shane took hold of Alice's round, perky ass and squeezed. He groaned at the feel of her.\n\nHe deftly unclipped her bralette and slid it down her arms. Alice flicked it off on to the floor. Shane reached down in to the sink and took a handful of bubbles, wiping them slowly over her right breast, coating her nipple. \"I've missed you,\" he whispered, pressing his lips to her neck. Alice turned slowly to face him. He could see the deep pools of lust burning in her eyes.\n\nShane took Alice by her waist and easily lifted her in to the air. He sat her on the edge of the counter. Alice now sat slightly taller than him. She gripped the counter to balance herself and opened her legs to him. He stepped forward and pressed himself against her. Their mouths met in a rush, open and eager. Their tongues swam against each other's, pressing and prodding, invading.\n\nAlice held fast to the counter, Shane placed one hand on Alice's back to steady her. He ran the thumb of his other hand down over her navel, over the waistband of her underwear, to the valley between her lips. The fabric was already soaked in anticipation. Shane pulled the fabric aside and slid his thumb deep inside her pussy. They groaned in unison, Alice's head tipping back in ecstacy as Shane's mouth went to her neck.\n\nHe bit down gently, scraping his teeth against her jugular vein. His thumb pulsed in and out of her, strong and thick. Alice reached down to the waist of Shane's shorts and pulled the elastic back, freeing his throbbing cock. She opened her legs wider and, tugging on his member, pulled his hips towards her. She wanted, needed, him inside her.\n\nShane removed his drenched thumb and took hold of his cock. He aimed the bulbous head at her soaked, open cunt and pressed forward. She threw her head back, eyes closed, mouth open and silent as he entered her. He pushed deeply until his balls were hard up against the countertop. \"Put your arms around my neck,\" he instructed. Alice obeyed.\n\nShane cupped his hands under Alice's ass and lifted her effortlessly in to the air. She was, to him, as light as a feather. He stood his ground, as best he could with his injured leg, and began to pound her dripping, aching pussy. Alice felt tiny and secure in Shane's arms as she bounced on his cock three feet off the ground. The slapping of their bodies as they collided in lust and the shuddering of breath from Alice were the only sounds they could hear.\n\nAlice pulled her arms tightly around Shane's neck, bringing his head down towards hers. She tilted her chin upwards and caught his mouth with her own, pressing their lips together in desperation. \"Alice,\" he whispered. \"Oh, Alice.\" Shane grunted as he neared the edge of his impending orgasm. With this gorgeous woman on his cock he struggled to last long at all.\n\nHis hands still holding firmly to Alice's ass, he ran an index finger around the edge of her lips, then took Alice by surprise as he pressed it deep inside her tight, firm asshole. Alice's eyes darted open, a look of shock and lustful fire in her eyes. She moaned and groaned at the sensation of having both holes filled. Her heart began to race and her toes started to curl.\n\nAs her breathing quickened, so did Shane's finger in her rear orifice. Shane started to grunt louder, Alice's moans turned in to a wail, as they came together. Alice's muscles clenched down hard on Shane's cock and finger as thick jets of cum erupted from his pulsating member, spraying Alice's insides with semen.\n\nShane leaned forward and placed Alice gently on the edge of the counter once more. They remained together, Shane moving agonisingly slowly in and out of Alice, milking the last of his seed, their orgasms spent, her forehead resting on his warm chest.\n\n\"I could stay like this forever,\" she muttered, smiling to herself.\n\nShane sighed contentedly, \"Forever wouldn't be long enough.\" He placed his finger under her chin and raised her face to his. They looked at each other longingly, lovingly.\n\nAlice's heart started to pound. She felt a stirring deep within her gut. A fire being lit. Judging by the expression on Shane's face, he felt it too. His cock, now soft and satiated, slipped out of her as he leaned down and kissed her gently, sweetly, like a first kiss.\n\n-\n\nAlice drove down Shane's street. An entire month had gone by since she had first arrived at his house. Three weeks had flown by since they had started fucking. Alice's days had been spent cleaning, fucking, cooking, kissing, and helping out in any way that Shane had needed. Shane's strength had returned and he was eager to get to his appointment today with his surgeon. Today he would have his cast removed.\n\nShane was waiting outside the front door. He hobbled to the car as Alice pulled in to the driveway. The rear passenger door was open before Alice had even put the car in to park. Bracing himself on the frame of the car, Shane lowered himself in to the seat. He scooted backwards so that he could sit horizontally across the back row. His long casted leg meant he couldn't ride shotgun.\n\nAlice closed the door behind him and climbed back in to the car. \n\n\"Good morning, beautiful,\" Shane said happily. He had a mega watt smile across his face. \n\n\"A very good morning to you,\" she said with a grin. \"Today's the day, huh!\" She slapped the car in to reverse and backed out of the driveway. Shane chatted happily all the way to the hospital. Once there, Alice parked up and helped Shane from the car.\n\nInside the hospital, Alice sat and waited in the visitors area while Shane was in with the doctor. When his name had been called he'd leaned over and kissed Alice hard on the mouth. His fingers had found their way in to her hair and he'd stroked her neck tenderly. \"I'll be right back,\" he'd promised with his crooked half smile.\n\nNow Alice sat quietly, eager to see Shane stride out cast-free. After 30 minutes, Shane appeared from behind the door. His cast was gone, but so was his smile. His leg was in a thick brace. He was back on crutches. As he approached her she could see his cheeks were flushed; From Anger? From crying? Alice wasn't sure. \n\n\"Let's go,\" he said in her direction. Alice gathered her things and hurried after him. She caught up to him just as he exited the glass doors of the hospital. \n\n\"Shane, what happened? Are you okay?\" she asked, coming up beside him.\n\n\"Please take me home,\" he said solemnly.\n\n-\n\nAlice opened the front door for Shane and watched him as he swung himself inside on his crutches. She closed the door behind them and slipped off her shoes. She could hear the clip-clip-clip of the crutches and followed the sound to the kitchen.\n\nShane had his head in the fridge and he was rummaging around. He emerged holding a beer. He hobbled over to the drawer and retrieved the bottle top opener. He fumbled it and dropped it on the floor. He tried to bend down to pick it up but his new brace was bulky and cumbersome. \n\n\"Fuuuuuuuck!\" he yelled at the floor, at himself, at nothing in particular. \n\n\"I'll get it,\" Alice said gently, reaching for the tool.\n\n\"No, Alice. I'll get it myself,\" he insisted, bending down further. He stumbled and lost his balance, falling and landing on his good knee. He rolled to his side and sat on the floor, his back against the same cabinet below the sink that they'd fucked against not long ago.\n\nHis head in his hands, Shane started to cry. Alice's heart shattered in to a million tiny pieces. She went to him and knelt next to him. \n\n\"Shane, talk to me. Please. Please tell me what happened at the hospital.\" \n\nShane pulled Alice on to his lap. He buried his face in her shoulder and cried silently. Alice wrapped her arms around him and held him.\n\n\"The operation didn't work,\" he mumbled in to her. \"I need another one. I'll be having another operation in two weeks.\"\n\n\"I'm so sorry, Shane. We'll get through this together,\" she replied, soothing him, holding him. \n\n\"No, Alice,\" he said, his head darting up from her shoulder. \"We can't. This isn't what I wanted.\"\n\n\"I know this isn't what you wanted. In an ideal world the operation would've worked. Hell, in an ideal world you wouldn't have had an accident,\" she said, trying to apease him.\n\n\"That's not what I mean, Alice,\" Shane said, looking her straight in the eye, his tears still streaking his face. \"You being here, it has been great. It has been amazing. But you can't get me through this next one.\"\n\n\"Sure I can,\" Alice said, confused and taken aback.\n\n\"No, you can't. My recovery could take many more months. I can't expect you to stick around here waiting for me to get better. This wasn't in your plan.\"\n\n\"You weren't in my plan at all, Shane! But plans change.\" Alice felt panic rising in her chest.\n\n\"Your plan was to save money then head out on the road again. Not stick around here, helping an invalid.\"\n\n\"But I want to help, Shane.\"\n\n\"I don't want your help, Alice.\"\n\nAlice stood up, removing herself from Shane's reach. She felt dizzy all of a sudden. She reached behind her and gripped the countertop. The same spot she'd held so tightly to as he'd fucked her brains out.\n\n\"What are you saying, Shane?\" Alice pressed. She looked down at him still sitting on the floor. \"Is this over?\" she asked, gesturing from him to her. \"Are we done?\"\n\n\"Alice...\"\n\n\"Are we done, Shane? Tell me! Are we fucking done?\" Alice didn't notice the tears falling on her cheeks. The look of utter devastation on Shane's face answered her question. \n\n\"I'm sorry, Alice. I can't do this to you,\" he said quietly.\n\n\"You were gladly doing it to me regularly over these past weeks, Shane. I didn't see you complaining about my presence here when I was bent over the sink with your cock in me.\" Alice was crying now.\n\n\"I can't be your burden to bear, Alice!\" Shane sobbed. \"I can't expect you to help me through this. I don't want you to help me through this. You deserve more.\"\n\nAlice shook her head, utterly bewildered by what was unfolding. She took a deep breath and let's it out slowly. \n\n\"I thought what we felt, what we've done, meant more to you than some macho idea of thinking you know what a woman needs or wants,\" she said calmly, \"Because it meant everything to me. But you didn't think to ask my opinion before coming to your conclusion.\" She turned on her heel and strode out of the kitchen, grabbed her shoes at the front door and walked barefoot to her car.\n\n-\n\nAlice's summer passed quickly. She had taken a waitressing job at a cafe working long hours. Her heart wasn't in her work and she had drifted through each day blindly. Once her bank balance reached a certain level she quit abruptly, boxed up her belongings at home and hit the road once more.\n\nHer dad was sad to see her leave, as always, but he had seen the change in her after Shane and he knew that solitude, adventure and the open road was where she would find her peace. He knew it, but Alice was no longer convinced. She wasn't sure about anything anymore.\n\nWhen she was with Shane, she had seen a future for the first time in her life. The stirrings she had felt, those that had resembled love and contentment, had bore a hole in her that remained there still. Too bad she hadn't heard from him since the day of the hospital. She had refused to bend to him and break the silence. He had told her he didn't want her, so she gave him the distance that he'd asked for.\n\nAlice found work back in Colorado. The company she had worked for the previous winter found an opening for her for the pre season set up and she had slotted back in to life on the mountain as if she'd never left. But she had left. And she'd left her heart back in Oregon.\n\n-\n\nSix months had passed when she received a phone call from one of her brothers; Her dad had had a fall at work. \n\n\"He's okay, Al, but he has a few broken bones. He'll be in the hospital for another 3 or 4 days.\"\n\nHer brothers all had families and full time jobs to think of. They couldn't take time away to care for their father. The ski season was wrapping up and Alice knew where she needed to be. \n\n\"I'll be there in a few days, bro,\" she replied. She hung up the phone and started packing her boxes.\n\nHer boss was understanding. He had expedited her wages and sent her on her way with a promise of a job the next winter. Alice checked her tyres, topped up the gas and oil and started her journey less than six hours after the initial phone call.\n\nLess than two days later she pulled in to the familiar driveway.\n\nShe stiffly climbed out of her car and stretched out her back with a groan. She walked up the few steps to the familiar door and wrapped her hand around the familiar knob. Placing her key in the lock, she twisted gently and pushed open the door to her childhood home.\n\nInside, she slipped off her shoes at the door. All was as it had been when she had left. Alice wasn't sure whether that was a good thing or a bad thing. She took her cellphone from her pocket and sent off a quick group message to her brothers to let them know she had arrived. She then placed a quick call to her dad.\n\n\"Hi Dad, it's me,\"\n\n\"Alice, sweetheart. Your brothers told me you were on your way home. You arrived safely?\"\n\n\"Yes, Dad. I'm home now. More importantly, though, how are you? Should I come up to the hospital right away?\"\n\n\"No, no. I'm okay. It's almost dinner time and visiting hours are over shortly. Come tomorrow, okay?\"\n\n\"Okay, Dad.\"\n\n\"Oh, Alice. I've got a tradesman coming tomorrow morning to start on the ramp since I'll be wheelchair bound for a short time. They shouldn't need any help, but just be there in case they've got questions, okay?\"\n\n\"Okay, Dad. I'll see you tomorrow. Need me to bring anything?\"\n\n\"I'd kill for a real coffee.\"\n\n\"Consider it done. Love you, Dad. See you tomorrow.\"\n\nAlice hung up and placed a memo in her cellphone's calendar regarding the tradesman. After her long drive she'd likely need the alarm reminder to shake her awake in the morning. She walked quietly to the kitchen, made a quick dinner of toast and tea, and decided to have an early night.\n\nHer mind was in overdrive; Her father's accident, having to leave her job abruptly, two days of driving, and now being back in the place she didn't want to be. She needed to relax. She decided on a hot shower then straight to bed.",
        "In the bathroom, Alice stripped out of her clothes and stepped in to the shower. She turned the faucet and a quick burst of cold water rushed out at her from the shower head. She stepped awkwardly in place, shivering, as she waited for the water to warm up. Gradually the water temperature rose and she dipped her head back under the firm water pressure.\n\nHer brunette locks hung down past her shoulders now and she smoothed it back over her scalp with her hands. She reached for the shampoo and squirted some on to her palm. She rubbed her hands together and worked up a lather.\n\nAlice washed her hair slowly and calmly, then rinsed the shampoo out. The bubbles from the lather had worked their way down over her body. She smoothed her hands down over her breasts and stomach. Her fingertips grazed over her pubic hair, trimmed and neat, which she had grown out since she was last in this house. Her taut stomach quivered at the feeling; She couldn't remember the last time she had given herself a release. With the house quiet now she thought that perhaps this was the perfect time.\n\nShe reached up for the detachable shower head. She sat on the floor of the shower, spread her legs, and started to rub her clit. Alice sprayed the jet of water over her breasts, focussing on her puffy pink nipples. The water massaged each nipple with tiny flicks, arousing and spiking the nerves in the skin. Her nipples were sharp and erect in seconds.\n\nShe moved the shower head down to her pussy as she continued to rub herself. She pressed one finger inside her hole and drilled it in and out a few times to stimulate some lubrication. She didn't need much to get her going after all this time, and her finger was covered in juices almost instantly. Alice moved her hand down, under her leg and rubbed her wet finger over her tight puckered asshole. Shane had awoken this pleasure spot for her and she needed to use it now to get herself off.\n\nPressing the shower head to her clitoris, the water pulsated over the sensitive nub. Alice made slow, circular motions over her pussy with the water, taunting and teasing the entire area. She pressed her finger deep in to her ass, up to the second knuckle, and wiggled it inside her deepest, darkest passage. She let out a groan of pleasure.\n\nAlice felt the pressure starting to build within her abdomen. She quickly removed her finger from her ass and turned the dial on the shower head from open stream to pulsating massage. She focussed the water directly on her rock hard, throbbing clit and continued to assault her ass with her finger.\n\nWithout stopping to think, she inserted a second finger in to her ass. She moaned out loud at the sensation of being stretched. Her tight asshole refused to relax so she forced her fingers on their journey. The extra battle of her body fighting her made the pleasure even more intense. No pain no gain, she told herself. Her eyes squeezed tightly, she continued to force her fingers in and out of her tight sphincter as the warm water from the shower head nailed her bulging clit. She pounded her ass harder and faster as the tension built.\n\nHer orgasm came suddently and swiftly, washing over her completely. The muscles contracting in her ass forced her fingers out and her pussy jumped and tensed painfully. She cried out, a loud, low moan. The water continued to shoot over her pussy, the skin and nerves sensitive to every droplet of water. Her orgasm was long, her body slumping with every passing second. Her orgasm finally subsided and Alice opened her eyes. Dark spots danced in front of her eyes, steam all around her. She took a moment to compose herself before climbing up off the shower floor.\n\n-\n\nAlice awoke with the birds the following morning. Glancing out the window she saw a low settled mist over the yard. It was a fresh Spring morning. She was eager to start her day, to visit her dad at the hospital, and assess what her role in his recovery would be.\n\nIt was still early, so she decided to head out on a run before the tradesman showed up. All going well she could be done with her run, showered and dressed by the time he arrived. She quickly changed in to her active wear; Sports bra, long sleeved t-shirt, tiny lycra shorts, sports watch, Nike running shoes; Then she tied her hair up on top of her head in a high ponytail and headed out the door.\n\nBreathing in the fresh air of home was invigorating. Her pace was great, and she felt comfortable and light on her feet. She ran a 6 mile loop through the quiet streets on the outskirts of town before turning down her lane and heading for home. Glancing at her watch she was making fantastic time. Her post orgasm sleep-of-the-dead last night had obviously been enough to energise her. She smiled at the memory of the delicious bliss from the detachable shower head.\n\nNearing her house she saw a truck parked in the driveway. Slowing down to a jog she checked her watch and stopped the timer. He's very early, she thought to herself. She checked the mailbox as she arrived at the property boundary and walked up the driveway.\n\nA man was half hanging over the tray of the truck, rummaging through tools, a tool belt slung around his hips. Alice stood five feet behind him and cocked her head to the side, admiring the tight, jean clad ass bent over in front of her. \n\n\"Good morning,\" she said, amused. \"You've come to start the ramp?\"\n\nThe man stood up and turned towards her. He looked down shyly, a small half smile on his face. Alice's heart jumped. She took a few steps back. Shane looked up in to her eyes.\n\n\"Hi, Alice,\" he said gently. Alice took a laboured breath in. She was shocked to see him in front of her. \n\n\"Sh-Shane,\" she stuttered. \n\n\"I'm sorry I'm so early. I've got a busy week, so I wanted to get started on this,\" he began. \"I was hoping I wouldn't wake you.\"\n\n\"Obviously you didn't,\" Alice said, gesturing to herself. \n\n\"You look fantastic,\" he said, almost to himself.\n\nHis chocolate brown eyes drifted down from her face; Cheeks flushed pink; Over her chest and torso, to her slim legs. His eyes lingered on her shoes. He was uncomfortable, shy, Alice could see that.\n\n\"You're looking well,\" she offered. \"Healthy.\"\n\nShane looked up at her again. \"I am,\" he said. \"I was cleared to work about one month ago. So here I am,\" and he gestured to his truck.\n\n\"Funny that there are so many tradesmen in this town yet here you are,\" Alice said, raising her eyebrows in mock surprise. She'd have to have a word with her father.\n\nShane laughed, his white, straight teeth gleaming. Alice's heart involuntarily skipped a beat. \"Your father was adamant that I do the job,\" he replied. \"My boss tried to send someone else but your dad wouldn't have it.\"\n\n\"That sounds like Dad,\" Alice said shrugging slightly. She looked over Shane; Green plaid flannel shirt rolled to the elbows, blue jeans, tool belt on the hips, steel capped boots. His hair was shorter now; A buzz cut. His beard was the same, and his eyes stood out more than ever. Alice felt an ache deep in her abdomen.\n\n\"How is your leg?\" she asked, genuinely interested.\n\n\"Really good,\" he replied, flexing it at the knee. \"Sometimes stiff after a long day, but I can do almost everything now, so I'm pleased. I still go to physiotherapy. That seems to help.\"\n\nAlice looked up at his kind, warm, familiar face; The five feet between them may as well have been five inches. Her insides danced a dangerous dance. Alice didn't like it.\n\n\"I'm really happy for you, Shane,\" she began, then passive agressively added, \"I'm glad you got the help you needed and wanted.\"\n\n\"Alice-\" Shane began, but Alice cut him off.\n\n\"I'm heading in. I'm sure you'll be fine to sort this out without any questions,\" she gestured towards the stairs.\n\nShe turned to leave before he could reply. She knew he would be watching her walk away, so she made sure to swing her hips a little seductively; Just a small reminder of what he'd had and lost. At the front door she bent at the waist and reached low to remove her shoes, her lyrca clad ass on full display. Then she opened the door and went inside without a backwards glance.\n\n-\n\nAlice was fresh, clean and dressed after a long, hot shower. She had been angry to find a damp spot in her shorts when she'd stripped out of her running gear. How could he get to me like that, she had thought. He didn't even touch me. Her pussy had been begging her for another release but Alice had washed herself quickly, steering clear of her clitoris for fear of arousal, and then had stood under the water flow for what had seemed like an eternity.\n\nNow, dressed in tight blue jeans, a white low neck tshirt, open navy plaid shirt and her Converse, Alice was ready to head out to see her father. She had left her hair down to air dry, and had subconsciously checked her appearance a final time before heading out the front door.\n\nShe stepped outside and saw Shane crouched down by the bottom step, measuring a plank of wood. Around the bottom step were tools and supplies. She approached the steps and Shane looked up. He groaned a low groan at the sight of her and stood up. With her standing three steps up they were the same height. \n\n\"I need to get through, please,\" Alice said solemnly.\n\n\"Here, I'll help you,\" Shane replied, offering his hand.\n\n\"No, it's fine,\" Alice argued, coming down two steps. She looked around at the best way to go about getting around all the equipment.\n\n\"Allow me,\" Shane said, and before Alice could argue Shane had taken her by the waist, lifted her effortlessly and placed her gently on the path next to him.\n\nHe kept his huge, warm hands on her, and all thoughts of anger escaped Alice's mind. She looked up in to his face, a pained expression in her eyes. She was fighting back tears and Shane could see it.\n\n\"Al,\" he whispered. He lifted a hand to stroke her face. Alice turned away and removed herself from his touch.\n\n\"I have to go see my dad,\" she said, walking to her car.\n\n-\n\nAlice had stopped for two take out coffees on the way to the hospital. She had arrived right at the start of visiting hours. Breakfast was being cleared away. \n\n\"Dad,\" she said warmly, smiling, and bent down to give her father a kiss on the cheek. She handed him a coffee.\n\n\"Alice. Thank you,\" he said, lifting his cup in a salute. \"So good to see you, sweetheart.\"\n\nAlice perched on the leather chair next to his hospital bed. \"How are you, Dad?\" she asked.\n\n\"I'm okay, I'm okay,\" he said reassuringly. \n\n\"What's the damage?\" she asked and took a sip of the hot liquid.\n\n\"Broken ankle, dislocated hip. Cuts and bruises. Nothing that won't heal in time,\" he said honestly.\n\n\"Oh, Dad,\" Alice said sadly. Tears sprung in to her eyes again.\n\n\"Oh, honey. It's okay. I'll be okay.\"\n\n\"I know you will. It's just hard seeing you here, is all.\"\n\n\"I know. They're taking good care of me, though. And I'll be home in a couple of days. Did the tradesman come by?\"\n\n\"You mean, did Shane come by?\" Alice asked, looking up at her father with a sulky look on her face.\n\n\"Shane? Oh, they sent Shane did they?\" he said innocently. \n\n\"Dad, you requested Shane. I know all about it.\"\n\n\"Damn. You caught me out. So you saw him, then?\" her father asked with interest.\n\n\"Dad, why? You know I don't want to see him. Hell, he doesn't want to see me. Why force us together like that?\"\n\nHer father shook his head and sighed. \"Ohhhh, Alice. You can be so stubborn. Of course he wants to see you.\"\n\n\"Last summer he made himself very clear that he didn't need my help to recover, Dad. And he's back to full health now, so it just goes to show that he was right.\"\n\n\"Alice,\" her father scolded. Alice was surprised by the tone of his voice. \"You haven't seen him these past few months. He has had setback after setback. He is a man! He sent you away because he didn't want you to see him at his lowest point. He has been suffering, Alice. Physically and mentally. After his last surgery he tried recouping at home but he couldn't, or wouldn't. He went in to a special facility. He's done well, Alice. He's come out the other side. Please don't drag this out any further.\"\n\n\"He hurt me, Dad,\" Alice said, a solitary tear sliding down her cheek.\n\n\"I know he did, sweetheart,\" her dad said, taking her hand in his. \"And it breaks my heart to see you upset. But I can guarantee he has suffered more.\"\n\nAlice wiped her cheek with the back of her hand. Her beloved dad, so wise. She sniffed and shuffled uncomfortably in her seat. She knew he was right.\n\n\"Let's talk about you now, Dad,\" Alice suggested, attempting to change the conversation. Her dad laughed, \"There's not much to discuss. I'm a silly old man who pushed himself too far on the job.\"\n\n\"You won't be able to sleep upstairs, Dad. I'll move your things in to the downstairs guest room.\"\n\n\"Okay, love. Go and do that now. The nurses will be around shortly to give me my sponge bath,\" he chuckled and gave her a wink.\n\n\"TMI, Dad. I'll call you later.\" Alice stood and gave her father another kiss on the cheek. Then she turned and walked out.\n\n-\n\nAlice pulled in to the driveway next to Shane's truck. Shane was bent over a saw horse, cutting planks with a circular saw. He had his earmuffs on and his saw was making a hell of a racket. She stood nearby and waited, hands over her ears, until he finished cutting so she could walk by.\n\nFinally he finished and slipped his earmuffs off to rest around his neck. Alice edged her way past him and headed for the stairs.\n\n\"Alice,\" he said eagerly when he saw her, \"How is your dad?\" Alice stood on the lowest step and turned to face Shane.\n\n\"He's okay. Thank you for asking. He'll be home in a few days. How long will this take?\" Alice gestured towards the pile of sawn planks on the ground.\n\n\"Uh, I'll be done by this afternoon. It's a pretty simple construction.\" Shane ran his hand over his buzz cropped hair.\n\nAlice watched his flannel covered bicep flex and relax. Her stomach flip flopped.\n\n\"Okay,\" she said finally. \"Let me know if you need anything.\" Alice headed inside the house, closed the door behind her, and let out an audible sigh.\n\nAt lunch time she could still hear Shane banging away on the tools. She hadn't stopped thinking about what her dad had said and decided to offer Shane an olive branch of sorts. She made a stack of grilled cheese and a pot of coffee, and carried it to the front porch.\n\nShane looked up from his position at the foot of the stairs, a nail resting between his lips. \n\n\"Lunch?\" she offered coyly.\n\n\"Sounds great!\" Shane chimed, a grin spreading across his face. They sat side by side on the top step. The mist had cleared by mid morning and a cheery sun was warming the air.\n\nAlice grabbed a sandwich from the pile and took a delicious cheesy bite. \n\n\"It's coming together,\" she said, pointing her chin at the angled frame that was being constructed on the lawn. Shane nodded, silently chewing a mouthful of grilled cheese. His elbows were resting on his knees. \n\n\"Did you know I'd be here?\" Alice asked quietly, looking down at her toes. Shane turned his head to look at her. \n\n\"I had hoped you would be.\"\n\nAlice felt him watching her. Eventually he turned back towards his lunch. Alice released a breath that she didn't even realise she'd been holding.\n\nAlice tried to think of something fitting to say but all she could manage was \"How's your mom?\" \n\n\"I don't want to talk about my mom, Al. I want to talk about us.\" Alice turned to face Shane and came eye to eye with two deep pools of chocolate staring back at her. \"I need to talk with you about us,\" he urged.\n\n\"Shane,\" Alice whispered. \"I... I... \" she wasn't sure how to proceed. \"My dad said a few things to me. A few things about your recovery,\" she explained. \"It was hard on you.\"\n\n\"I fucked up, Alice. I fucked up.\" Shane dipped his head and sighed. \"I should never have told you that I didn't need you. I regretted it as soon as I'd said it. But I couldn't have you waste your time caring for me when I wasn't sure if I'd even recover. I wanted you to go on living.\"\n\nAlice placed her hand on Shane's forearm and felt the muscles and tendons flex under her palm.\n\n\"Why didn't you call me, Shane?\" Alice's voice broke when she said his name. He reached across and pressed his palm to her cheek.\n\nHe took a quivering breath. \"I wanted to, so badly. But I couldn't. Call it macho, stupidity, whatever. I was embarrassed. But most of all, I didn't want to interfere in your world. You're breathtaking, Alice,\" his thumb gently caressed her smooth cheek. \"I figured you'd be hunkered down with a snowboarding instructor on top of a mountain.\" \n\nAlice laughed, just a giggle at first. Then she laughed loudly. And then she couldn't stop laughing. Shane looked at her with a quizzical, warm expression. \n\n\"What's so funny?\" he asked, laughing with her.\n\n\"You couldn't have been more wrong. Hunkered down with a snowboarding instructor on... where?\"\n\n\"On top of a mountain,\" Shane laughed.\n\n\"On top of a mountain! God, honestly. When I wasn't on the snow I was hunkered down alone in my twin bunk bed, in a room I shared with three other women. I mourned over you, Shane. No snowboarding instructor would have wanted me with my sullen face and bad moods.\"\n\n\"Sullen face,\" Shane repeated, his eyes drinking her in.\n\nHe cupped her chin in his hand and pressed his thumb to her full lower lip, stroking it lightly. \"This sullen face is all I've seen in my dreams since last summer.\" \n\n\"Good dreams?\" Alice whispered.\n\n\"Amazing dreams,\" he confirmed. He released her lip and reached up and wiped his thumb across a tear which had fallen on Alice's cheek. Alice pressed her face in to his hand and closed her eyes. She felt at peace for the first time in a long time.\n\nSuddenly, her reverie was broken by the jingle of an incoming call. \n\n\"Sorry, babe,\" Shane said gently, releasing her face and pulling his phone from his back pocket. He checked the screen. \"It's my boss.\" Alice nodded and stood up. She left Shane to his phone call and retreated inside the house.\n\nShe wandered up the stairs to her bedroom and flopped on top of her bed. A few minutes later her cell phone pinged; A new text message.\n\nShane Merryweather\n\nReceived today at 1:07pm\n\nI could've sat there looking at your face all afternoon. Unfortunately, my boss expects me to finish this job. Can we talk once I'm done?\n\nAlice sent off a reply text.\n\nYes. Come find me once you're finished.\n\nAlice slipped out of her jeans and pulled on a pair of tight blue Daisy Duke shorts. She grabbed a book from her shelf and padded downstairs and out the back door. The sun was high in the sky and there was a warm breeze blowing across the yard. Alice chose a sunny spot on the deck, lay down on her stomach and opened her book.\n\n-\n\nTiny pricks of static electricity. Nerves on end. A cool breeze. Alice opened her eyes. She must have fallen asleep. Her book lay closed next to her face. Alice felt a tickle running up the back of her calf and thought for a moment that an ant was crawling on her. She turned to swat it and saw Shane crouched next to her, his fingertips on her skin. He saw she was awake.\n\n\"You're so beautiful when you're sleeping,\" he said, moving to lie next to her. \n\nThe sun had moved across the yard and was casting long shadows over the lawn. It must be almost 5pm, Alice judged. \n\n\"All done out front?\" Alice asked, rolling on to her side and propping her head up on her hand. \n\nShane nodded. \"All done.\"\n\nThe breeze blew gently between them. Alice's hair whipped around her face. Shane reached out and tucked a strand of hair behind her ear. His fingers lingered, tracing along her jaw line.\n\n\"I'm so sorry, Alice. For everything.\"\n\n\"You broke my heart, Shane,\" Alice finally admitted. Shane took a shuddered breath. His eyes searched her face, coming to rest on her mouth. Alice saw the sadness and regret in his eyes. \"But I can understand why you did what you did.\"",
        "His eyes darted to catch hers. \n\n\"I couldn't have you see me that way. I was broken, emotionally more than anything. I wanted to be a complete man for you, Alice. I want to be that man for you.\"\n\nAlice paused. She turned and sat up. Shane followed suit. Without saying anything she stood up and offered her hand to him. He rose up and took her hand.\n\nShe led him in to the house and up the stairs, padding softly across the carpet to her bedroom. Inside the room she turned to him, his hand still held by hers. Shane looked around; This was Alice's childhood bedroom. He saw her sports trophies from elementary school, her ribbons and awards on a small pinboard. He saw photos tacked to the walls. One photo in particular caught his eye and he cocked his head. He walked over to it for a closer look. \n\n\"This is us,\" he said quietly. The photo showed Alice and Shane, aged 11, sitting cross legged next to each other on the bleachers. Shane couldn't remember the photo being taken.\n\nSuddenly he felt Alice's tiny arms encircle his waist. He turned and she was standing directly in front of him, her small face looking up at his. Her hands rested on the small of his back. He cupped her face in his hands, bent down and kissed her. Her kissed her deeply and passionately. Alice's hands moved up to rest on his chest. She fingered the soft flannel under her fingertips.\n\nCarefully, Shane started to walk forward, still kissing Alice. Alice stepped backwards until her legs met with the bedframe. Shane pushed her lightly and she fell backwards on to the bed. She gave a small laugh and scooted her body up the bed. Shane lifted his shirt up and over his head, revealing his toned, taut stomach, and solid chest with the smattering of hair that she loved so much. Alice moaned in appreciation. The view alone was worth waiting for.\n\n\"I need you to know something, Alice,\" Shane said, moving to kneel on the bed and placing his hands on either side of her. \"That fucking cast of mine didn't allow me to move how I like to. You took charge then because you had to. But now that I'm not incapacitated like that, I'll be taking charge.\" Alice felt her pussy throb at his words. \"And I hope you'll submit to me here in the bedroom only. Outside the bedroom, I still expect you to be your little spitfire self.\" Alice rubbed her hands over Shane's chest. \"Okay?\" he urged.\n\n\"Okay,\" she whispered, a cheeky smile on her lips. She knew she would be in good hands.\n\n\"Right now, more than anything,\" he said, \"I want my cock buried so deep inside you that you'll be feeling it a week from now.\" Alice groaned. Her pussy was dripping and she hadn't even been touched yet. \"Being with you again, like this, is all I've dreamed about since last summer.\" He pressed his mouth to her warm throat and said through gritted teeth, \"God, Alice, seeing you this morning in your tight running clothes, all sweaty and pink, I just about came on the spot. You are divine.\" Shane was lying next to Alice with his leg draped across her, effectively pinning her down. He pressed kisses up her throat to her earlobe. She squirmed beneath him, his beard tickling her neck.\n\nShane rose up on his arms and looked her in the eye. She saw kindness, longing, desire, and pain spilling from his deep chocolate eyes. \"I'm never going to let you get away from me again, Alice,\" he said earnestly. \"Please forgive me for the unkind things I said to you. You are what I need. You're all that I need.\"\n\nAlice smiled sadly. \"In my heart I forgave you the moment I saw you today, but my head just didn't realise it. I want to be with you, Shane, through the good and bad.\" \n\nShane pressed his lips to hers with passion and fire. Their mouths parted, and the kiss deepened, wet and forceful.\n\nAfter a moment, Shane gently pulled his head back and slid off the bed. He leaned over her and unbuttoned her shorts, sliding them down her satiny legs, swiftly followed by her lace thong. Alice wiggled further up the bed and placed her head on the pillows. Shane kneeled on the bed and parted her legs, then leaned down and pressed his nose and mouth in to the wet folds of her pussy. He breathed in audibly, lavishing her scent. \"Ohhhh, yes,\" he murmured to himself. Alice tossed her head back, eyes closed, her mouth parted in a small O shape.\n\nShane lapped at her cunt, savouring the flavor, scent, and feeling of her. Alice contained the moans and groans that threatened to escaped her, for fear of coming too soon. It wasn't until Shane pressed one wet finger in to her pussy, and another in to her asshole, that she completely lost it. She gasped, air filling her lungs, and took hold of Shane's head. With his fresh buzz cut she could no longer take his hair in her hands, but she held tight to him as she bucked her mound against his face.\n\nShe felt him smile against her, \"You like that, huh, baby?\" A deep gutteral groan was all that Alice could emit in reply. Shane's fingers began to jackhammer her, his tongue picked up speed against her clit, and when he pressed a second finger in to her ass Alice cried out in pleasure and pain as a huge wave of orgasm rippled through her.\n\nWith his free hand, Shane held tight to her waist as his mouth rode her bucking pelvis. When he felt her coming down from her high he slowly removed his mouth and fingers, and wiped the juice from his face with the back of his hand. Alice lay motionless on the bed, an arm thrown across her face. Shane stepped off the bed and removed his pants and underwear.\n\nClimbing back on to the bed next to her, he took her in his strong arms and held her. He could feel her body shuddering and twitching from the orgasm, and her heart racing in her chest. When he heard her breathing slow to a more regular pace, he reached up and gently removed her arm from her face. Alice opened her eyes and looked at him shyly. \"I definitely forgive you now,\" she whispered, a grin spreading across her lips.\n\nHis face still glistened with the remnants of her juices, and she pulled him to her and kissed him, tasting herself on his lips. Shane pulled his mouth away and pressed his forehead against hers. \n\n\"Can I fuck you, Alice?\" he asked boldly.\n\n\"I'd be disappointed if you didn't,\" she replied. She sat up, removed her shirts, and unclasped her bra. The large nipples on her teardrop breasts stood erect as soon as the cool air touched them. Shane's head instinctively dipped and he took a peak in his mouth. He rolled his tongue around and over her nipple, and massaged the soft breast around it with his hand.\n\n\"Have I told you how perfect your breasts are?\" he asked, coming up for air. \"They're like two heavy raindrops during a Spring rain shower.\" Alice, caressing his stubbled cheek, smiled at his ability to always know exactly what to say. Placing a hand on her hip, he rolled her over on to her stomach. He draped a leg across the back of her thighs and smoothed his hand across her round, naked ass. \n\n\"I'm going to fuck you now,\" he whispered in her ear. The words sent shivers of pleasure coarsing through her, igniting sparks in her clitoris. \"If there's anything I do that you don't want, or enjoy, just tell me to stop.\" Alice's ears pricked up at this, her curiosity piqued. What does he have in mind, she wondered, nervous but thoroughly excited.\n\nHe moved over her and straddled her legs, kneeling on the bed. He took her by the hips and lifted her ass in the air so that she was kneeling ass up, face down. He looked down at her glistening slit and puckered asshole. He gave her a light slap on her left ass cheek, and she groaned. He slapped the same spot a little harder, and she groaned louder, as a drop of juice dripped from her pussy on to the comforter. \"You like a little pain with your pleasure?\" Shane questioned her.\n\nAlice smiled, remembering her moment in the shower last night. \"Mmmm, yes, I do,\" she replied.\n\nHe bent down and licked from her wet cunt up to her tight back passage, spreading her heavy secretion. He positioned his throbbing cock at her dripping pussy and pushed, sliding straight in without a fight. She was so ready for him, and he was buried in her up to his balls in one swift movement. He released a slow hiss of air from between his teeth. He heard her sigh, and he watched her hands ball up in the comforter, her body tense up at the initial insertion, then relax as she adjusted to him.\n\n\"This is what I've been dreaming of,\" Shane said, his voice deep and full of lust. \"Almost every night since I was last with you I've jacked off while thinking of you in this exact position- on the end of my cock.\" He slid out of her, then pushed himself back in to the hilt once more. The thought of Shane pleasuring himself whilst thinking of her made Alice wetter still. She pressed back against him and rolled her hips around tantilisingly, urging him on.\n\nTaking hold of her hips for propulsion, Shane started to assault her wet cunt. Over and over again he withdrew his cock and then forced it back in deeply, continuously pounding against her cervix. Alice groaned at every thrust and held tighter to the comforter. With her peachy ass high in the air, teasing him, he slapped her right cheek leaving an instant pink mark.\n\nReaching down between them, Shane gathered up some of Alice's juices on his fingers and used it to lube up her tight asshole. Placing the pad of his thumb against her closed sphincter, he pressed firmly. Alice moaned and involutarily tensed up. \n\n\"Relax, babe. Just breathe,\" he whispered to her, caressing her ass cheek with his free hand, urging her to give way to him. Alice took a deep breath in and released it slowly, and, as she did, his thumb entered her. He pressed it all the way in to the last knuckle and held it there. Alice mumbled incoherently at the pleasure of it.\n\nHe rode her pussy a while longer while her ass adjusted to having his thumb in it. Looking down at her willing and wet ass and cunt, Shane groaned in pleasure. Could this girl be any more perfect? he wondered. \n\nShane leaned down and whispered in Alice's ear, \"Is this a virgin ass?\"\n\n\"A virgin ass?\" Alice asked, confused, unable to concentrate on much more than the throbbing in her pussy and clit.\n\n\"Have you ever had anyone in your ass?\" Shane clarified.\n\n\"Only your fingers,\" Alice groaned, \"and mine.\"\n\nHer eyes were closed and she was bouncing lightly against him. Shane ran his free hand over his hair. \"She really is perfect,\" he thought. \n\n\"I want your ass, Alice. Can I be your first?\" Shane asked tenderly.\n\n\"You can be my first and only,\" Alice whispered back. \"Who else would I ever need after you?\"\n\nShane withdrew his thumb, and his cock, and rolled Alice on to her back. Shocked at the sudden change of sensation Alice started to complain, but Shane pressed his mouth to hers, silencing her. Breaking for air, they looked in each other's eyes, unspoken emotion flowing between them.\n\nShane rolled Alice on to her side, facing away from him. He crossed her top leg over her lower leg to rest on the bed so that her pussy and asshole were exposed. He ran his fingers up and down her sopping slit, then up and over her ass. Pressing his mouth to her neck he bit her gently. She reached up and wrapped her arm around to caress the back of his head. Shane focus his attention on her ass.\n\nHe pressed his long index finger against the puckered hole and pressed, his finger sliding in slowly. He inserted and withdrew his finger a few times before including his middle finger. With two fingers in her ass she was opened wider than she'd ever been before. Alice breathed steadily, willing and eager to continue. Shane removed his fingers and swept them across her pussy, scooping up more lube. He returned to her ass and wiped the juices around and inside her hole. \n\n\"Just tell me to stop at any point if I hurt you,\" he whispered gently in her ear.\n\nHe inserted two fingers back in to her ass and pulsed them in and out for a moment before slipping in a third finger. Alice breathed deeply and let out an audible sigh.\n\n\"Keep going,\" she urged him. \"Don't stop.\"\n\nWith his free hand, Shane wiped his fingers over Alice's pussy and proceeded to lather the tip of his thick, erect cock with her lube. He placed his hand on her shoulder and gently rolled her on to her stomach.\n\nMoving on to his knees, straddling her, he positioned himself at her ass, and as he withdrew his fingers he pressed his throbbing, bulbous head against the partially open asshole. Pressing gently, he felt the first ring of her ass give way and squeeze tightly around him. Pushing onwards he rocked gently, urging himself slowly in to her ass. Reaching around to her pussy for more lube, he wiped it over his shaft. \n\n\"Are you okay?\" he asked her gently.\n\nOhhhhhh, my God,\" came her reply. Her eyes were squeezed tightly shut, and she was breathing rapidly. \"It hurts, but in a good way.\"\n\n\"Do you want me to keep going?\" Shane asked, concerned and enamoured all at once.\n\n\"Yes. Ohhhh, yes,\" she replied with a groan.\n\nShane pressed himself in deeper, letting out a deep groan of pleasure as her tight, untouched ass squeezed his thick shaft. Alice buried her face in her pillow and let out a long moan. He kept pressing forward gently until he was buried completely in her. \n\n\"I'm in, baby,\" he whispered to her, bringing his mouth next to her ear. \"I'll stay like this for a moment while you get used to me in there.\"\n\nShane was true to his word. He waited patiently while Alice relaxed around him. Her hips started to circle gently, testing the feeling and girth of him in her taboo hole.\n\n\"Mmmmmmm,\" she groaned eventually. \"You feel amazing in there.\"\n\n\"You are amazing,\" Shane replied, leaning down to graze his teeth along her naked shoulder. \"Do you want me to keep going?\" he asked.\n\n\"Yes, slowly,\" she replied nervously.\n\nShane obeyed, withdrawing ever so slightly at first. Her asshole was wet with her natural secretions, and he slid smoothly within her. Minute by minute he picked up speed, eventually moving in and out of her at a solid pace.\n\nAlice's ass had relaxed and adapted to the foreign invader, and she was groaning at the incredible pleasures she was feeling. Shane took Alice by the hips and pulled her up in to a kneeling position. With her on all fours, he could get deeper inside her. She responded by pushing herself back on to him with fervour. Through Shane, Alice had uncovered this new part of herself, and she was loving every minute of it.\n\n\"Fuck, Shane, you feel incredible,\" she sighed, leaning her upper body down on to the bed, with her ass up in the air. \n\nLaying his large, bulky mass over her back, he held himself up with one arm and reached around to her clit with the other. As he flicked her most sensitive nub she began to cry out, mumbling and screaming incoherent sounds of agony and pleasure. As a huge orgasm struck her, her pulsating asshole tightened around Shane's thick, slippery cock as he plunged it in and out of her. \n\n\"Ohhhh, ohhhhh,\" he moaned, \"I'm coming, too, babe,\" he said, picking up speed in her tight sphincter, ramming her with everything he had.\n\nHis hot seed shot out and coated her insides, spurting deep inside her ass. Their cries meshed together in to one sound, and they fell to the bed panting and groaning. Shane slowly slipped from her ass, and Alice gave a yelp of surprise. They lay together, their breathing slowly regulating, and watched each other's faces. Semen seeped from Alice's ass on to the comforter; A new, exciting sensation. She fingered her hole gently, rubbing Shane's seed around the ring of her asshole. As they watched each other they knew that this was just the beginning of their lifetime together."
    ],
    "authorname": "JugheadJane",
    "tags": [
        "friends",
        "anal",
        "oral",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/friends-become-lovers-alice-and-shane"
}