{
    "title": "Ambiramus Ch. 05",
    "pages": [
        "A/N -- Hello. Thanks for all the comments and feedback so far. Just to reply to slight criticism from the last chapter, while the overarching theme of this story will be the romance between Mark and Cindy, there are going to be chapters where I've let my imagination run wild and the main two characters will enjoy themselves. I'm aware some people won't like that and that's fine, can't please everyone. Just thought I'd let you know now.\n\nThis is a 'normal' or 'romantic' chapter, if you will.\n\n*****\n\n\"Nervous?\" she asked, driving us to her mother's house.\n\n\"No. Why would I be?\"\n\n\"Well, meeting the parents and family is always a big deal in a relationship. I'm nervous about meeting yours.\"\n\n\"I understand, but my parents, brother and sister know all about you, Cindy. Except for one thing, which is something we'll tell them together.\"\n\nShe kept hold of my hand the rest of the way to her old house. It was your typical house in the suburbs, the place where she'd grown up her entire life. Walking hand in hand towards the front door, it opened before we could even knock on it. Her mother grinned, taking Cindy in her arms, giving her daughter one hell of a bear hug. \"So good to see you again, gorgeous.\"\n\n\"Hello, Mum,\" Cindy whispered. I left them to hug each other before they let each other go. \"Mum, this is Mark. Mark, this is my mother, Laura.\"\n\nI was expecting a friendly handshake. Instead, I was dragged in by a woman standing no more than five-five and wrapped in a bear hug, just like her daughter. Her mother was blonde, though I was left thinking the colour was from a bottle, with the same pair of blue eyes as her daughter. I didn't check her out otherwise, but Cindy told me her mother was nearly fifty. \"I finally meet the man who has put that smile on my daughter's face! It's lovely to meet you!\"\n\n\"Well, it's nice to meet you too, Laura,\" I replied, hugging her back.\n\nGiving her a big squeeze, she laughed. \"Oooh, he's a strong one too, Cindy.\"\n\n\"Can certainly throw me around when doing certain things, Mum.\"\n\nLaura let me go and playfully slapped Cindy's arm. \"Behave yourself. Come in, come in. Your sister's in the backyard.\"\n\nFollowing Laura and Cindy through the house, we walked through a sliding door out onto some wooden decking, an in-ground pool taking up most of the backyard otherwise. Her sister was sat at a picnic table by herself, standing and giving Cindy a hug before I was introduced. \"This is my older sister, Stephanie,\" Cindy said. Stephanie was almost a replica of Cindy, actually looking between the two in silence for a few seconds, before Stephanie gave me a hug.\n\n\"Nice to finally meet you, Mark. Cindy talks about you all the time.\"\n\n\"Good things, I hope?\"\n\nStephanie stepped back. \"Well, Mum and I were going to interrogate you about everything, but we've realised that would be pointless. It's easy to see how much you two love each other.\"\n\nLunch was a simple affair, something I preferred as it meant her mother could relax and join in with the conversation. Though there were many questions aimed at me regarding my employment, family, history, nothing I didn't expect, I was able to ask many of my own questions, particularly when it came to Cindy and her transition. That's when we ended up back inside, her mother grabbing a photo album that charted her progress.\n\n\"I knew Cindy was a girl from... a very young age. But it was Stephanie who figured out first, probably before Cindy herself. We bought Cindy her first dress of her own at ten, but she was already wearing Steph's old clothes before that. I'm sure that would horrify plenty of people who don't understand, but she was my little girl and I wasn't going to deny her what she was already thinking and feeling.\"\n\n\"I assume it made things difficult at places like school?\"\n\n\"Of course. She had to remain registered as a boy while at primary school, but after therapy, child psychologists and even going to court, by the time she started high school, she was accepted as a girl. Changed her name and everything.\"\n\n\"Why Cindy?\" I asked her, \"I'll admit, that has been on my mind.\"\n\nShe cuddled into me. \"Cinderella. I obviously couldn't call myself that, so I went with Cindy. I knew I wanted my Prince Charming. I've now got him too.\"\n\n\"What was high school like?\" I wondered.\n\n\"Sucked most of the time,\" Cindy muttered.\n\nStephanie took her hand as Laura added. \"It was difficult. She was transitioning and kids at that age simply don't understand. Of course, many still considered her a boy, so she was called plenty of derogatory names. I can almost understand the attitude of boys. They're still growing up themselves and it's not something they'd see nor understand. The school did their best but... there's only so much even they could do to support. Some of the girls, though, they were marvellous. She was taken under their wing by quite a few. Cindy was always small anyway, so she fit in with them. They would swap dresses and clothing, make-up tips, even underwear, all the things young women do when growing up.\" Laura flicked through the photos and you could see Cindy growing older and more confident in her appearance.\n\nThen it stopped at a photo which looked like prom. Cindy wore a gorgeous red gown, surrounded by half a dozen other girls. \"This was their Year Twelve Graduation Party. Cindy and her friends stole the show. She's cut her hair since, but she'd spent nearly two years growing it by then.\"\n\n\"Looks fantastic!\" That earned a kiss on the cheek. Laura then flicked to a photo of Cindy standing in the back garden. She was eighteen and... utterly gorgeous. I mean just beautiful. \"Wow,\" I whispered.\n\n\"My daughter blossomed,\" Laura said softly, \"Such a shame about her father.\"\n\n\"She's mentioned he's... not accepted her.\"\n\nStephanie scowled. Laura shook her head. \"He's an idiot. He thought it was just a phase, despite the fact Cindy took hormones and was living full-time as a girl while she was at high school. Insisted on calling her by her 'dead name'. It upset her all the time. Led to some furious arguments between me and my husband. 'I have a son and daughter, not two daughters', he insisted, 'Even if he undergoes surgery, he's a he.' When she was sixteen, they were arguing and he called her a faggot and told her to go hang. I kicked him out immediately. Cindy was in constant therapy for a year because of it.\"\n\nCindy cuddled into me tighter and I heard the small sob. \"Sorry, sweetheart,\" I whispered, hugging her tightly to me, little surprise she ended up straddling my lap, wanting nothing more than a cuddle at that moment. I glanced to see Stephanie and Laura both looking on approvingly. \"I love her more than anything,\" I said, \"And god forbid anyone hurt her.\"\n\nThey shared a glance. \"I like him,\" they said in unison.\n\n\"Mark, Cindy attended university but she's obviously had surgery that is expensive. Has she told you how she made the money?\"\n\n\"I haven't told him yet,\" Cindy whispered.\n\n\"Is it any of my business?\" I asked, \"I mean, it's before we met. The only thing that might be off-putting would be... er...\"\n\n\"No, nothing like that,\" Cindy said, feeling her sit up. She took a deep breath. \"Ever seen cam girls online?\"\n\n\"Not really but I know what they are. You were a cam girl?\"\n\n\"For three years, from eighteen to twenty.\"\n\nI glanced at mother and sister, both of them nodding. \"We knew,\" Laura said, \"I approved, as long as she was safe and kept her anonymity. It was a good way for her to make money so she could get the things she wanted done.\"\n\n\"I actually watched her once,\" Stephanie admitted, \"She put on some very sexy shows.\"\n\nCindy giggled, blushing brightly. \"I never showed my full face, Mark. I wore something that covered my mouth and nose, but they could see my eyes and the rest of my body. I never performed with anyone else, it was just me all the time. I... masturbated, of course, sometimes using toys. But I made so much money, Mark. Guys would pay so much to see me cum. I wasn't really interested in dirty talk, and certainly wasn't interested in watching them jerk off, but... you do what you need to. But all that work meant I could afford my boob job, had my nose done, and other rough edges around my face and body. I mean, I was already rather feminine anyway but I wanted certain masculine features softened or eliminated entirely.\"\n\nI took a minute or so to go over what she just told me. \"Keep any of your old shows?\"\n\nShe almost starting crying again. \"You really don't mind?\"\n\n\"It was before you met me. You kept your identity to yourself, so at least we won't have random strangers staring at you thinking 'Do I know her from somewhere?' I'd find that a little awkward. You were not having sex on camera. I'm honestly not sure how I'd actually feel about that.\"\n\n\"I never did that,\" she whispered, \"Mark, before you, I rarely had sex with men. The only time I ever felt safe, and even moderately loved, was during those few times I fooled around with my girlfriends. My friends from school were not interested. I was a girl, not a boy. I'm not particularly interested in women anyway. I'm a woman who loves men.\"\n\nI kissed her cheek. \"Well, another viewpoint is to look at the internet nowadays. Thousands upon thousands of women, whether genetic or trans, are making money through all sort of phone apps and websites.\" I ran my hands up her body and to her face. \"And it helped you make money so you could become the woman you wanted.\"\n\n\"Marry him, Cindy. Marry. Him!\" Stephanie exclaimed, laughing away.\n\n\"How are you always this understanding?\" Cindy wondered, cuddling into me, \"I wish I met you so long ago.\"\n\n\"Done enough reading to know your life could be difficult enough as it is. I can just imagine all those guys watching you, complimenting you, hoping to be with you, yet here you are, sitting on my lap. I have no right to sit here being jealous.\" I took a deep breath. \"Any of your shows end up online?\"\n\n\"Yeah, there's not a lot I can do about it, but I've checked from time to time. No-one recognises me. I made sure there was nothing on the bed that would lead to me being identified.\"\n\n\"What about the rest of the family?\" I wondered.\n\n\"Well, her father's parents are both dead. They were alive when transitioning. They were more open-minded than her father. Uncle is the same as her father. Narrow-minded dickhead, so he's obviously not part our lives either. My side of the family, her grandmother dotes on her something fierce, loves the fact she has two granddaughters. Before he died, my father was exactly the same. He didn't quite understand, but all he cared about was the fact his granddaughter was happy. My brother and sister are the same. It's a relatively new thing for everyone but they accept Cindy for who she is. Her cousins don't really remember Cindy as anything other than who she is now.\"\n\n\"When did she last see him?\" I wondered.\n\n\"Her father?\" Laura asked to my nod. \"When she was eighteen. Showed up to speak to her. It didn't go well.\"\n\n\"I don't want to see him again,\" Cindy murmured into my chest, \"He'll never accept me for who I am.\"\n\n\"Have you divorced him?\" I asked Laura.\n\n\"Of course. I wasn't going to remain married to a bigoted arsehole. Stephanie doesn't have a relationship with him either.\"\n\n\"What he said to my sister that night, Mark,\" Stephanie added, \"Mum wasn't the only one yelling at him. All I remember after that is walking into my sister's room to find her beyond distraught. She ended up in hospital because of it. I've spoken to him maybe three times since then. He called me, hoping to talk. I told him, until the moment he grovels in apology to his other daughter, and makes great strides in showing true sorrow for how he treated Cindy for years, then he's gone from having two daughters to none. Last time I spoke to him was... five years ago, I think.\"\n\n\"Sounds like nothing of value was lost, in all honesty,\" I admitted freely.\n\nThat earned laughter from all three women. \"Our lives are certainly better he's no longer in it,\" Laura said.\n\nIt wasn't a surprise that we ended up staying for dinner too, enjoying solitary conversations with both mother and sister. The former seemed to just love me immediately. Stephanie and I sat outside, and I did find myself interrogated for a few minutes, just the protective older sibling sort of thing. Within ten minutes, I was being hugged tightly, the older sister almost passing the baton. \"Look after her for us,\" she whispered, \"She's strong, so strong, but she's also fragile.\"\n\n\"I'll make sure we come visit often. And once she's met my family, we'll have to do the whole meeting of the families thing.\"\n\n\"They have any idea she's trans?\"\n\n\"No. That's up to her to tell them. My family are rather open-minded about things, so I don't see a problem. If there is, I cut whoever the problem is out of my life. Cindy is my life, along with my kids.\"\n\n\"Can we meet your kids soon?\"\n\n\"I'll bring Natalie over next time we visit, organise it so it's my weekend. Greg is fifteen. Very much his own little man nowadays, but I'll sure I can manage to convince him for at least one weekend.\" Heading back inside, I had to ask, \"You single?\"\n\n\"I had a shit marriage,\" she replied, grabbing me a beer from the fridge, one for herself, plus wine for Laura and Cindy, \"He wasn't an abusive piece of shit, nor did he cheat. He was a worthless drunk.\" She looked at the booze. \"See, I can now enjoy a beer and not worry you three are going to turn into complete dickheads. Once he started, he didn't know when to stop. There's only so many times you can endure it before enough is enough. I told him to dry out or I leave. He chose the booze. I left, came home. Been here three years. Mum likes my company.\"\n\nCindy and I did leave after dinner, hearing words in my ear that were incredibly suggestive. Fairly sure mother and sister heard as she wasn't exactly quiet. Her mother hugged me tightly as I was leaving. \"Look after her for me. Love her for us all,\" she asked softly, \"She's needed a good man in her life for so long now.\"\n\n\"I love her to bits, Laura. Trust me, she's in safe hands.\"\n\n\"Good. Hope to see you both again soon.\"\n\nCindy was in a great mood during our drive home, leaning over to kiss me every time we stopped at a red light. As soon as we pulled out up outside our apartment complex, she dragged me upstairs and we only just made it to the bedroom by the time we were naked and lube was being applied where necessary. She pushed me back onto the bed and practically leapt on me, my cock sliding inside her, wasting no time bouncing up and down on me.\n\n\"Mum already loves you,\" she moaned, \"Fairly sure my sister would love you to fuck her.\"\n\nDespite her riding me, I couldn't help laugh. \"So I made an impression?\"\n\nShe met my eyes and smiled. \"The exact impression I knew you'd make, Mark.\" She stopped and leaned forward. \"I should go see them more often.\"\n\n\"We should, you mean.\"\n\nResuming her movements, I wasn't surprised when cum erupted from her cock rather quickly, coating my chest as always. Sensing her relief, she kept riding me until I left a load in her too, sliding off me so she could snuggle into my side. \"So your parents this weekend?\"\n\n\"Yep. Natalie hasn't seen them in a while, so two birds, one stone.\" Gently squeezing her, I added, \"They're going to love you, sweetheart.\"\n\n\"I hope so,\" she whispered. Noticing we were falling asleep, I managed to drag us both into the bathroom for a quick shower before we did return to bed and drift off together.\n\n\"You were right about one thing, mate,\" Mike said at lunch the next day, \"Not about anything between me and Chris. I don't think it'll work. We're mates, not lovers. And neither of us want to do anything to jeopardise the friendship.\"\n\nI nodded as I tucked into the pasta Cindy had made me for lunch. \"But you're thinking about something.\"\n\nHe nodded. \"I think I let what happened with Richard get to me way too much. I mean, you were left reeling by what Megan did for almost the same length of time. But while you've now clearly moved on, I haven't.\"\n\n\"Mate, I understand. Megan cheated on me with one guy, and I discovered it quickly enough that I was only left pissed off, not completely embarrassed to be taken for a complete fool. He had the wool pulled over your eyes and was fucking anyone from here to Manly. No wonder your trust in anyone is broken.\"\n\nHe sighed. \"That's the thing. I loved that fucking arsehole. We'd bought the house, I thought we were settling down together, building a life. Then I'm told he's sticking his dick in any man that just shows a hint of an interest. I'm just glad my STD check came back clear.\" He bit into his sandwich, gathering his thoughts. \"I guess I haven't really been helping myself though, right? Sleeping with god knows how many young men since then. It's been fun, but it's not very fulfilling.\"\n\n\"Maybe you just need to take a break, reassess your priorities.\"\n\n\"Mark, that was the first Saturday night I slept alone in... months. But it was actually nice. I woke up and didn't have to worry about the awkward morning after. And half the time, they're barely out of high school. Old enough to fuck, but... It's fun fucking them, but we have nothing in common otherwise.\"\n\n\"So maybe you should find someone more age appropriate.\" He gave me a look. \"Yes, I know Cindy is twenty-five, but she has a degree, a full-time job, owns her apartment, pays her bills, and is a functioning, responsible adult. And now that I'm living with her, we'll share responsibilities.\"\n\n\"Though she's going to cook for you, it seems.\"\n\n\"She insists that she's going to look after her man.\" I paused before admitting, \"I'm already looking at places we might be able to buy. A townhouse or something, with a backyard.\"\n\n\"Shit, so it's ultra-serious?\"\n\n\"Mike, I already know I want to marry her. I obviously won't be proposing for some time yet, but... she just makes life worth living.\"\n\nHe chewed on his sandwich again. \"That's what I want, mate. A bloke that just makes life better.\"\n\n\"He's out there, mate. Don't give up yet, but maybe change how you search. Though I'm not saying stop going out. Have you fun, but maybe change where you're looking or something.\" I shrugged. \"I don't really know, considering I did meet Cindy in the same place. She just happened to fall into my lap.\"\n\n\"So you had a threesome?\"\n\n\"Yeah.\"\n\n\"How was it?\"\n\n\"Fun.\" I closed the lid of the box I was eating out of, my stomach now full. \"Cindy and I have talked about certain things. I'd like to share, but you know I don't like to go into details about our sex life. I actually don't think she'd mind, but it's never been something I do. Though Megan would have had a shit-fit if she found out. Cindy? I don't think she'd mind.\"\n\n\"So you bottomed for Cass?\" I gave him a look which made him chuckle. \"Far out, never thought you'd do that.\"\n\n\"Honestly, it's quite enjoyable. But I'm still not attracted to men. Cass and Cindy are women.\"\n\n\"Never had you picked as such a liberal, Mark.\"\n\n\"I don't think being a 'liberal' has anything to do with it. It's about being a human being and viewing Cindy, Cass and anyone else as a human being. It's about having empathy and understanding. Don't forget, I stood by your side when you campaigned for equal rights as a gay man because you should have the right to adopt children, get married and do all the other bullshit heterosexual people can do. Want to get married and be miserable like the rest of us? More power to you!\"\n\n\"Is Cindy that involved with it all? You know, trans issues and whatnot?\"\n\n\"She just wants to live her life in peace. And I'll do my best to ensure that's what she has. If that means I'm by her side, facing down a picket line of bigoted fuckwits, so be it.\"\n\nHe grinned. \"You really love her, don't you?\"",
        "\"As I said, I want to marry her, settle down, live out our lives together. And I know she's already thinking about that too.\"\n\nOn Wednesday, I did take Cindy back to my apartment complex as there was one thing I had to show her that I hadn't shared with her just yet. I surprised her by not taking her upstairs but around to the garages that some of the apartments did have access to. Escorting her to the door, I opened it up, switching on the light. There was only a box of tools and a workbench, a few boxes of crap that I'd probably end up throwing out...\n\nAnd a Kawasaki Ninja ZX-10R, painted in the traditional colours of green and black.\n\nCindy walked around it a couple of times before smiling at me. \"I didn't know you rode.\"\n\n\"I haven't taken it out for a while now. Not since we met, anyway. I bought it brand new around three months after my divorce was finalised. I used to ride all the time when I was younger, owned an older version of the same bike, but Megan hated me riding, so once Natalie was born, I gave it up after a 'discussion'. I was always a safe rider. Natalie has been on the back a couple of times since I bought it. She's usually yelling at me 'Go faster, daddy, go faster!' Swear that child wants me to lose my licence.\"\n\n\"I have a garage at my place if you want to move it.\"\n\n\"I was wondering if you'd like to go for a ride one weekend. Maybe weekend after this one? Natalie is obviously coming over, and we're going to see my family, so we won't have the chance.\"\n\nHer face lit up. \"I'd love to.\"\n\n\"I have a spare helmet but not leathers. We can go buy you a pair. I'd rather you wear leathers, just in case the worst does happen.\"\n\nShe pressed her body into mine. \"And where would you take me?\" she asked softly.\n\n\"Somewhere down south I know quite well. Very private. Because, I'll be blunt, I'd love to fuck you outdoors. Bend you over and just...\"\n\nCouldn't finish my sentence as she grabbed my head, dragging me down to kiss her. She ended up pressed against the wall, turning her around, lifting her skirt and teasing her with my covered erection. \"Fuck,\" she moaned softly.\n\n\"I'm going to fuck you senseless, stroking your cock until you just cum everywhere,\" I growled into her ear, \"Before I fill your arse more than once while we're there.\"\n\nI would have fucked her then and there. We were both keen, but we agreed to never fuck without lube. It was the only downside of having anal sex, it did take a little preparation, and I hated the idea of hurting her or causing her tremendous discomfort. She felt the same way about me, we'd always take care of the other. Turning her around, lifting her hands above her head and holding them there, she gave me a look as I kissed her again, reaching under her skirt and gently grasping her cock. \"You're a tease,\" she whimpered.\n\nMeeting her eyes, I smiled at her. \"I know...\"\n\n\"Going to make me cum?\"\n\n\"Not yet. I'm going to turn you on, then make you cum when we get home.\" She groaned in frustration... then she smirked. \"I'm going to cum so hard when we get home.\"\n\n\"I'll suck your cock so I swallow it all.\"\n\n\"You're a good boyfriend, Mark.\"\n\nKissing her softly, I enjoyed the whimpers she made as I teased her until I knew she was getting close. Then I pulled away, her brow already sweaty, cheeks flushed. I tucked her cock away before taking her hand, turning off the light and closing the garage door before leading her back to the car. She dragged me inside once we were back at her place, leading me to the bedroom. Sitting on the edge of the bed, I slid down to my knees, lifted her skirt, lowered her panties, swallowing her cock.\n\nShe exploded within a couple of minutes, swallowing some of her load, keeping the rest so we could share it. We stripped off quickly after that, Cindy getting onto her knees as I quickly lubed her up, then lubed up my cock, carefully sliding it inside her. To say we then spent the rest of the night fucking like rabbits wouldn't be far wrong. She ended up flat on her stomach at one stage, almost whimpering in tears, begging me to just fuck her as hard as I could. Naturally, I worried about hurting her, but she insisted, so I did what she wanted.\n\nCouldn't remember climaxing harder, though due to all the fantastic sex I was now having, many of my orgasms now just rolled into one. Cindy loved it when I relaxed above her. \"I feel so safe and loved at moments like this,\" she whispered. I'd nuzzle into neck, kiss her cheek, anything to make her laugh and giggle.\n\nI didn't tell Cindy I was taking a half-day on Friday. I drove to work and basically sat in my office drinking coffee all morning, going over some paperwork, but basically passing time until I could leave. Driving into the city as soon as I could leave, I managed to find a parking spot in one of those multi-story car parks.\n\nThe florist I'd had send Cindy flowers a few weeks back was in between the car park and the office. I was amused when the lady behind the counter seemed to remember my order. Not wanting the same bouquet, she was able to suggest something better. \"You love her?\" she asked.\n\n\"Yeah,\" I replied. Fairly sure I blushed too, \"It's still rather new. Even worried it's quick, but when the heart knows.\"\n\n\"I've got something perfect for new lovers.\"\n\nShe wasn't wrong. The bouquet was colourful, fragrant, utterly gorgeous, and worth every dollar spent. Thanking her profusely, I strolled to the building where I knew Cindy worked. I hadn't gone sneaking about, I just asked where her building was. That's how I'd managed to send flowers originally.\n\nSigning in at reception to grab a visitor's pass, the company she worked for had offices across the top ten floors, asked to visit the receptionist at the bottom floor of the offices they owned before moving on. Turning up with a bouquet of flowers gained attention from the lady behind the desk. \"Who are you here to see?\"\n\n\"Cindy Williams?\"\n\n\"Go up three floors. Turn left out of the elevator and you'll find her eventually. Definitely going to make her day with those.\" Before I turned to leave, she asked, \"Are you Mark?\"\n\n\"I am.\"\n\n\"The girls haven't seen Cindy so happy the entire time she'd worked here. Now I see why.\"\n\n\"She means the world to me.\"\n\nRiding the elevator up three floors, I turned left and was stopped by a woman within seconds. \"Who are you looking for, honey?\" she asked.\n\n\"Cindy Williams.\"\n\nShe pointed further along. \"Just down there on the left.\"\n\nCindy was busy typing away at her keyboard. She'd told me what she did, though was always far more interested in hearing stories about my days at the shop than the days she spent watching numbers on her computer screen. She did wear glasses while at work, and I admitted to finding her even sexier wearing them. Only at certain times...\n\n\"Delivery for Miss Williams,\" I stated.\n\nShe turned, saw me, squealed, then burst into tears within about two seconds. Glancing around, I noticed heads popping up to see what was going on as I handed her the bouquet, though that ended up on her desk as she was far more interested in giving me a cuddle. \"Sorry for crying,\" she murmured into my chest, \"I love them.\"\n\n\"Good tears,\" I replied softly, \"Are you available for lunch?\"\n\n\"I am now!\" she exclaimed, giving me one hell of a kiss. Probably not entirely office appropriate but I don't think she cared in the moment.\n\nAsking me to wait, she hurried off, return with a jar of water that she could put the flowers in. A small crowd of women formed, so it was no surprise I was introduced. Cindy had talked about me endlessly so I had a small fan club. Cindy draped herself over me as we discussed what we'd do for lunch. Then her manager walked out, seemed to know who I was, and told Cindy to go home.\n\n\"What?\" she asked, \"But... what about...\"\n\n\"You seriously turning down a half day?\" one of her colleagues asked.\n\n\"You finished that report, Cindy. Anything else can be done on Monday. You're free to go,\" her manager added.\n\nCindy grabbed her handbag, the flowers, then took my hand, squeezing it rather tightly. \"Bye, girls. See you on Monday!\"\n\n\"Try to make it home before you have sex!\" one of them called as she dragged me back towards the elevator.\n\n\"Want to fuck me in the bathroom here?\" Cindy growled at me, \"I need you right now, Mark.\"\n\n\"Um...\" She gave me a look. \"Got any lube?\"\n\n\"I always carry lube. I do jerk off most days at lunchtime. I'm so damned horny nowadays thanks to you.\"\n\nWe ended up in a bathroom stall in the female bathroom, Cindy bending forward against the toilet, her skirt lifted up, her panties around her ankles, as I fucked her from behind. Her hair was in a ponytail, and she was loving the fact I was pulling on that too. I lifted her back so she rested against me so I could stroke her cock at the same time. \"Oh my god,\" she whimpered, lifting her head so I could kiss her at the same time, \"You'd better fill my arse, Mark.\"\n\n\"Long as you just cum everywhere in a few minutes.\"\n\nWe were not alone and the fact we were fucking would have been heard. I didn't give a shit. Cindy wasn't even trying to be quiet, begging me to fuck her harder and faster. She eventually came first, thankfully lifting the toilet seat, pushing her forward so she could at least aim in there. She moaned so loudly, feeling her arse clench me tightly, that set off my own orgasm, using one of the sides of the stall to keep me upright as it was one hell of an orgasm.\n\nCleaning up with some toilet paper, she turned and I kissed her softly, caressing her cheek as she gazed up at me. \"Glad I made your day, sweetheart. Hungry for food now?\"\n\n\"I am, though we're heading straight home afterwards so you can spend the rest of the day fucking me while I look at my very pretty flowers.\"\n\nPulling out my phone, I faked opening it up before saying, \"Step one, buy Cindy flowers for guaranteed sexy times from now on.\"\n\nGiving me a look, she burst into giggles as I hugged her tightly. \"I promise you one thing, Cindy. It will always be like this. Your smile is infectious and your laughter is music to my ears.\"\n\nCindy didn't need wallet busting wining and dining, happy to enjoy a simple meal at a nearby pub. Sure, it was still pricier than anything further west, but considering we were sitting near the harbour, views of the north shore, the bridge and the opera house on display, I certainly wasn't going to complain. Though we could have spent more time walking about, she was eager to get home, so we walked back to where our cars were parked, no surprise we were in the same car park.\n\n\"Straight home then pick up Natalie later?\"\n\n\"What time are you picking her up?\"\n\n\"Half-six I reckon.\"\n\nShe glanced at her watch. \"Enough time for at least two more loads in my butt.\"\n\nI laughed. I couldn't help it. \"You're incorrigible, Miss Williams.\"\n\n\"Because I love you, Mister Pritchard. I'll see you at home.\"\n\nWe managed not to break the speed limit the entire time. Cindy was a safer driver than I was, freely admitting to having a heavier foot than her, so staying behind her was the sensible option. Fucking in the bathroom at her work had taken the edge off our appetites for each other, following her into the apartment, where she found a vase for her flowers first before dragging me to the bedroom.\n\nUndressing her slowly, Cindy doing the same to me at the same time, we ended up snuggling under the blankets for a little while, a lot of making out, but while we were both incredibly hard, I was happy just cuddling with her. She pressed her body into mine, asking me to hold her as tightly as possible. \"Never let me go,\" she whispered.\n\n\"Never,\" I whispered back.\n\nWe did end up making love a little later, but it was so slow and tender, and it took so long for both of us to orgasm, that we had to get up, shower quickly and head back to my car so we could go pick up Natalie. Both of us definitely looked flustered arriving at my old house, Megan opening the door and laughing at us. \"Fun afternoon?\" she asked.\n\nI couldn't help smile. Cindy blushed, cuddling into me. \"We might have got a little distracted,\" I admitted. At least Megan found the funny side to it, which surprised me slightly\n\nShe smiled knowingly, probably remembering times distant past that we'd shared. \"It's fine, you're not late. Come on in. Natalie is in her room as always. Want a coffee?\"\n\n\"I'd love one,\" I replied, Cindy adding she'd like one too.\n\nNatalie was excited to see her father as always, though even at ten years old, was surprised her father and new girlfriend were going to sit down for coffee with his ex-wife. She joined us in the living room as Megan brought a mug for Cindy and I, then a juice for Natalie and a coffee for herself. For the first time that I could remember, Megan and I talked for at least a couple of hours without a single disagreement. In fact, it was the first time I could remember that we laughed together. She certainly seemed to be in a good mood for some reason.\n\nLeaving later, so we could get Natalie back to our place to shower and go to bed, Megan asked to speak to Cindy again for a couple of minutes. Natalie was in the back seat ready to go when she walked towards the car, taking a seat and remaining mostly quiet on the way back to her place. Natalie had a shower before she went to bed, letting us know how much she loved us as always, before I turned out the light.\n\nSitting next to Cindy on the couch, she turned to me. \"Mark, how do you feel about your ex-wife?\"\n\n\"Better than I did a few months back. It's nice we can talk without arguing nowadays.\"\n\nThe deep breath took my undivided attention. \"She still loves you, Mark. You divorced her. She didn't want to divorce, of course. You fell out of love with her because of what she did. Despite what she did, she never actually stopped loving you. And those feelings haven't disappeared, even when you hated and despised her.\"\n\n\"Is that what she told you just now?\"\n\n\"She obviously can't or won't tell you. She knew I'd tell you.\"\n\n\"If she thinks anything...\"\n\n\"You're with me, Mark. She knows that. She's putting a brave face on things, but she's still devastated. When you were single after the divorce, she had hope that maybe you could reconcile in the end. Give it time, you might find it in your heart to forgive her and perhaps try again.\"\n\nScratching my head, I was just left confused. \"So what does she want?\"\n\n\"Nothing at all. But... Mark, I think it's obvious she's hurting. She's realising just how badly she fucked up. Seeing you with me, seeing you so happy, it's just a constant reminder of what she did, and of what she'd lost. To say she's feeling regret is an understatement. She knows what she did was her fault entirely.\" Cindy took my hand in hers. \"She needs to hear you forgive her, Mark. Can you do that for me? You have me now. You can let all those feelings go.\"\n\n\"You like her, don't you?\"\n\n\"I see enough to see why you married her in the first place. She made a dreadful decision, but should she continue to be punished for it? You did what you needed to do by divorcing her. You've now moved on with me. Maybe... maybe forgiving will be taking the high road. Maybe it'll give her the peace she needs to move on too.\"\n\n\"Will she tell me why she did it, at least?\" Cindy nodded. Sighing, I ran a hand down my face. \"Let me think about it. Truth be told, I am in a better place because of you, Cindy. Hell, I can't remember the last time I spent a couple of hours with Megan and didn't spend half the time wanting to kill her. Figuratively speaking, of course.\"\n\nShe stood up, offering her hand. \"Follow me, handsome. I have plans for you tonight.\"\n\nI had a feeling what might be on her mind. She'd been a fantastic mood since I'd shown up at her office with flowers. Soon the door to our bedroom shut, we were both rather eager to get naked, though I did wonder what was on her mind. When a certain grin formed I had learned to understand, I raised an eyebrow. \"You have plans for my arse, don't you, Miss Williams?\"\n\nStepping closer, she rested her hands on my chest. \"I really want to fuck you, Mark,\" she whispered, \"Would you like that?\"\n\n\"I'll blow you first, then you'll last longer fucking me.\"\n\n\"Want me to...\"\n\n\"Nope, it'll be my pleasure. Fuck me hard enough so I'll cum later.\"\n\nDropping to my knees surprised her. I usually blew her while she was lying down, or at least sat on the edge of bed. Rare that I blew her while she was still standing up. Then I turned her around and buried my face in her arse first. I loved eating her arse. She had to cover her mouth to cover her moans as I enjoyed teasing her rosebud.\n\nTurning her back around, I easily swallowed her cock, used to taking her entire length by now, making sure I fondled her balls at the same time. Reaching around with my right hand, I continued to tease her arse. Sensory overload for my lover, no surprise she grabbed my head and started to thrust. \"Oh god,\" she moaned softly.\n\nI could suck her cock every day for the rest of my life. Not sure what it was about her except she always smelled wonderful, I loved the taste of her cum, even her cock itself was nice to taste, I enjoyed the feeling her hardness in my mouth, and the simple fact I made her orgasm made me feel good. When she started to thrust even harder, it was the first time she'd really taken control while blowing her. My finger ended up inside her arse, which turned her on even more. \"Another one,\" she murmured.\n\nDoing that did the job as she must have cum within a minute. No chance of me sharing that time, I swallowed ever single drop of cum that erupted in my mouth, ensuring she heard my rather audible gulps. Fuck, I had no idea cum could taste so nice.\n\nLicking up and down her cock, I took her balls in my mouth for a couple of minutes as she calmed down, taking her cock in my mouth again, feeling her shudder. Taking her cock away, she bent me over onto the bed, getting me into position as I felt her get behind me, spreading my cheeks, her tongue finding its way to my arse.\n\nJesus, she had me moaning like a bitch within a couple of minutes. Cindy wasn't dominant, but she was completely turned on and seemed intent on sending me to heaven that evening. Resting my head on the mattress, I just completely submitted to whatever she wanted to do to me. When I felt her tongue actually slide inside me, the noise that escaped me had us both laughing. \"Fucking hell, Cindy,\" I muttered.\n\n\"I'm so turned on, Mark.\"\n\nGlancing back, I immediately turned around as, despite being as horny as she was, her cheeks were as wet as I'd even seen them. Holding her tight to my chest, we hugged for a few minutes. \"Can't wait for you to just pound me nice and hard, sweetheart.\"\n\nShe giggled first. \"I've been turned on since you arrived in my office. You do too much for me, Mark.\"\n\n\"Hush. I do everything for you because I want to. I love you so much I just need to find ways to express it. Now, are you ready to fuck me?\"\n\n\"God yes.\"\n\nTurning back and rest against the bed, I felt the application of lube, Cindy sliding two fingers into me straight away. She made me laugh as I knew exactly what she was aiming for. \"Fuck!\" I groaned loudly.\n\nShushing me, she giggled. \"You'll wake your daughter!\"\n\n\"She knows we have sex. She's not stupid.\"\n\n\"True, but I'm not sure she understands that your girlfriend fucks her daddy sometimes.\"\n\nFeeling her slide a third finger into me had me begging for her cock within a couple of minutes. We both chuckled again as, while I always enjoyed Cindy fucking me, I seemed to be a little desperate for it that evening. I told her I was horny and knew what she wanted, happy to have her slide her cock into me and enjoy herself.\n\nIn the position I was, it was natural for Cindy to lean forward, placing her forearms next to mine, turning my head so I could kiss her, feeling her cock run along the crack of my arse. I pushed back more than once, eager to feel her slide inside me. \"Please,\" I almost begged.",
        "\"I love it when you're so eager, Mark.\"\n\n\"I love feeling your cock inside me, Cindy.\"\n\n\"I love you,\" she whispered into my ear, \"I love you so much.\"\n\nThen she slid her cock inside me. I groaned so loudly, I'm fairly sure I woke Natalie up. She wouldn't leave her room though, or so I hoped. As soon as Cindy had buried herself, she left her cock inside me without moving for a couple of minutes, before she started to slowly thrust. \"Oh god, fuck me, Cindy,\" I moaned softly.\n\nI loved feeling her hot breath against my neck and ear. Grabbing my hands, she held them tightly as she quickly built up a good tempo. My cock was a steel bar, and I knew I was going to cum hard just from how she was fucking me, feeling her slowly change the angle, aiming for that special place deep inside me. When her cock started to hit, as there was no missing the feeling, she had me whimpering for release. The first time that I even felt my eyes get moist when being fucked.\n\n\"Please...\"\n\n\"I'll make you cum, baby. Don't worry,\" she whispered into my ear.\n\nThat's when she really started to drive her cock into me, earning more than one grunt. Fucking me even harder at the same time, I was soon making noises I didn't know were possible. Her fingers were looped between mine, handing my hands ever so tightly, the slap our skin meeting echoing around the bedroom. It was the first time Cindy had fucked me in such a manner.\n\nIt was fantastic.\n\n\"Oh god,\" I moaned, \"Keep going.\"\n\n\"Are you close, baby?\"\n\n\"I don't know. I think I'm leaking like crazy.\"\n\nThat's when she let go of my right hand and reached around to start stroking my cock. That had me whimpering again as I felt incredibly sensitive. She stroked me for all of a minute before I had the best orgasm of my life. That's how it felt at the time, anyway. It was so good; I think I may have even sobbed for a few seconds. It was enough that Cindy left her cock buried inside as she pressed her body into mine. \"That's a thank you for the flowers,\" she whispered into my ear, \"I love you so much.\"\n\n\"Love you too, sweetheart,\" I murmured. I'm surprised I could say anything. I felt like mush.\n\nMoving her hands to my shoulders, she spent five minutes fucking me senseless. Having enjoyed an orgasm, I just let her use me for her own enjoyment. When I felt her cock throb and unload inside me, I almost sighed with relief, Cindy resting on top of me again, though she continued to move her hips until her cock softened enough that it slipped out of me entirely.\n\nLifting herself up, I managed to stand up and turned towards her. She was bathed in sweat, her entire body taking on a glow. Cheeks were flushed. The fire in her eyes was something else entirely. She wasn't done with me yet. Pulling her close, I kissed her deeply as my hand found its way to her cock. \"I don't think I've ridden you before,\" I said, \"Plus, there's a lot of cum on your floor right now.\"\n\n\"We'll mop it up tomorrow.\"\n\nThe advantage of hardwood floors, I guess. She had rugs everywhere, but none near her bed. I now understood why. Ending up on her bed, I might have been on top of her but we were both waiting for her to get nice and hard again. So I thought I'd do something that caused momentary surprise, kissing down her body and taking her cock in my mouth. \"Oh wow,\" she whispered, \"Mark, that's just been...\"\n\n\"Cindy, you've done it for me before.\"\n\n\"I know but...\"\n\n\"I want you hard so I can ride you. Call me impatient.\"\n\nTook her a little longer to get nice and hard again, but it was a good excuse just to suck her cock again. I think she was finding all the physical attention rather overwhelming, so I kissed back up her body before I was at her eye level again. \"Make love to me,\" she whispered, \"I need you, Mark.\"\n\nI knew what she meant, lubing my cock before getting her ready. She was easier to get ready than myself, so after five minutes, I gently slid my cock inside her. \"This what you want?\" I asked.\n\n\"This is what I always want, Mark.\"\n\nI rolled us so she was riding my cock, the position I knew she really loved. Missionary was great. Doggy was fun when we just wanted a quick, hard fuck. But we both loved it when she rode my cock. It didn't take long until she was stroking her cock while bouncing on my cock, and I knew she probably wasn't going to last long before she erupted again. She was as turned on as I've ever seen her. Grabbing her hips, I made her squeal as I started to pump up into her, fucking her as hard as she'd fucked me earlier.\n\n\"Oh my fucking god!\" she cried, \"I don't want to work anymore, Mark. I just want you to spend all day fucking me.\"\n\n\"Fine with me,\" I grunted as I pulled her forward. Grabbing her arse, I fucked her harder still.\n\n\"Please don't stop. Please don't ever stop,\" she whimpered.\n\n\"I won't, sweetheart. My cock is yours forever.\"\n\nShe was still managing to stroke herself. No surprise she came all over me rather quickly. She kissed me hard, begging me to cum in her too. I warned her I didn't feel an impending orgasm, so she rolled off me and onto her knees. Despite cum dripping down my chest, I positioned myself behind her, sliding back inside her and, after leaning forward over her, rammed my cock into her.\n\nThe next whimper she released had me stop immediately as I thought I hurt her. \"Keep going,\" she moaned.\n\nRemembering what she loved, I sat back on my knees and had her sit on me against. Grasping her cock, I rammed into her as I stroked her cock. I think she was almost delirious, simply resting back against me. Looking down, she was smiling but I could see the emotion in her eyes. \"I want to be your wife,\" she whispered.\n\n\"I know, sweetheart.\"\n\n\"Then you can spend all day fucking your wife.\"\n\nDespite the fact I was still fucking her, I managed to laugh. \"Will we fuck our entire wedding day?\"\n\n\"I'll be nice and hard during the ceremony itself. Maybe you could fuck me just before our vows so I feel your cum leaking down my legs?\"\n\nRolling her forward, I went with her so I was resting on my forearms, grabbing her hands like she'd grabbed mine earlier. Driving my cock into her earned a few moans, and I felt myself getting closer and closer to orgasm. Whispering into her ear I was close, I felt her purposely squeeze my cock buried inside it.\n\nJob done, I came hard. And nearly passed out on top of her.\n\nWith it enough to roll over onto my back, we breathed in silence for a few minutes before I turned my head to face her. \"You okay, sweetheart?\"\n\n\"My emotions are all over the place, Mark,\" she admitted softly, \"Because I've never felt like this before.\"\n\nI pulled her close so she snuggled into me. \"There's nothing wrong with any of the emotions you're feeling. I'm glad I help make you feel everything you are. Long as they're all good feelings. I'd hate to think I hurt you, or make you angry, though I'm sure I'll do the latter eventually.\"\n\nLooking down and noticing we were both covered in cum, we agreed that a bath was probably for the best. We both winced lowering ourselves down into the hot water a few minutes later, laughing at each other as it was probably the hardest we'd fucked each other up to that point. Totally worth it, but fucking that hard did come with a price tag attached.\n\n\"I meant it, you know,\" she said a few minutes later, having relaxed in comfortable silence.\n\n\"Cindy, you think I'm not already thinking about it?\"\n\n\"It's not too fast?\"\n\n\"I'm sure many would say it is, but if that's how we feel, who cares what anyone else thinks?\"\n\n\"Well, I'll wait for your proposal then. Whether it's next week, month or year, I won't mind. But you'd have to do something monumentally stupid to make me angry.\"\n\n\"Trust me, I'm probably capable of doing that.\"\n\nShe glanced back and saw my face, breaking into a fit of giggles as I cuddled her. The next day was rather sedate in comparison. Cindy cooked breakfast for the three of us, Natalie and I helped out where we could. The weather turned awful, nothing but wind and rain, turning very cool by the middle of the day. A good excuse to huddle under a blanket and watch movies all day. Cindy had a copy of nearly every Disney DVD in existence, so the two girls had great fun watching movies all day.\n\nI'll be completely honest. I didn't mind for a second. It made my daughter happy, and it was another thing for her to bond over with Cindy. I kept them filled up with snacks and drinks. More than one bowl of popcorn. Cindy sipped at wine, a couple of sodas for Natalie. I hung around but Natalie knew such movies didn't interest me, and I'd get shushed more than once if I made jokes about the plot or characters. \"Stop being silly, daddy!\" was something she exclaimed more than once, though it was always with a giggle.\n\nI made my daughter laugh. That would always be a win. Hell, sometimes she was laughing so hard, I had to leave the room just to dry my eyes. It was sometimes torture to only have her with me two nights out of fourteen.\n\nOrdering in takeaway for dinner, we did sit around the table for that, at least. Natalie was excited about going to see my parents the next day. It had been a little while since she'd seen her grandparents, and the excitement increased when she learned my sister and brother would also be there, which meant her cousins would be present.\n\n\"Is Greg coming?\" she asked.\n\n\"I mentioned it but didn't seem interested. I'll stop at your mother's tomorrow and see if he wants to come.\"\n\nDespite being inside all day, barely moving at times, Natalie was still fast asleep on the couch by early evening. I always enjoyed carrying my little girl to bed. There'd be a time it would happen the last time, I just wouldn't know it. Cindy helped me as I placed her under the blankets. She woke up enough to cuddle both of us. As soon as we were back in the living room, Cindy hugged me tightly. \"Okay, I can't not have your little girl in my life, Mark,\" she said, \"So, that's it, you'd better not fuck this up, or I'll... do something drastic.\"\n\nWe woke early the next morning, chilling out until mid-morning, where we all dressed and headed downstairs to my car. I think Natalie could sense Cindy's nerves with every passing kilometre as she eventually said, \"It's okay, Cindy. Everyone is really nice. Grandad and Grandma will love you.\"\n\nMy ten-year old daughter had a mature head on her shoulders at times.\n\nParking outside the house I'd once grown up in, Natalie skipped towards the front door, knocking loudly. I could feel how nervous Cindy was, her hand gripping mine tightly. My father answered the door, immediately scooping up my daughter and tickling her as he noticed me approach with Cindy. He figured out who she was rather quickly, introducing himself and asking us to follow him inside.\n\n\"My father's name is Gary,\" I said, \"Mum is Sophie. Brother is James. Sister is Jane. Partners, nieces and nephews will be introduced, or happily introduce themselves.\"\n\nMum was pleased to see me as always, giving me a hug, before I introduced Cindy to my parents. Dad hugged her immediately, Mum a little cooler. I expected that. She had adored Megan, but since she'd broken my heart, I knew she was always going to be a little suspicious. Not saying Mum wasn't friendly, she was, but... you know how mothers can be sometimes.\n\nThe rest of the family was outside, James with his wife, Rebecca, Jane with her husband, Will. Introductions were made again, my brother joking that I was a cradle snatcher as Cindy was obviously younger than me by a few years. Dad made sure I had a beer in hand rather quickly, Cindy a glass of wine, Natalie already off playing with her cousins, so she'd be fine for the rest of the day.\n\nDad, James, Will and I hovered around the barbecue once the old man fired it up, sipping at our beer, chatting shit as always. I kept an eye on Cindy, who was already deep in conversation with my mother, sister-in law and sister. My sister seemed to love her already, and despite the cool greeting, Mum was warming to her quickly too.\n\n\"So... this is serious?\" my father finally asked.\n\n\"Pretty much moved in with her already.\"\n\n\"Where'd you meet?\" James asked.\n\n\"A pub nearer the city. She actually approached me. Said I was handsome but looked lonely. It was my first real night out since the divorce. Stars must have aligned that night.\"\n\n\"Well, it's been over a year since your divorce. Guess it was time to move on, right?\" Dad stated.\n\n\"True. I was too busy wallowing in self-pity.\"\n\nThe adults sat at the large table as we ate lunch, the children at a smaller table. Cindy sat close to me, her hand resting on my thigh, almost being overly affectionate at times. I didn't mind whatsoever as we were not full on snogging in front of the parents, but I knew it was her way of dealing with the nerves. Once lunch was finished and we were tucking into dessert, Cindy cleared her throat.\n\n\"I've loved meeting all of you, but before we all get comfortable with each other, I feel I have something to tell. Mark loves me for who I am and I can only hope that, as we get serious with each other, that you will at least accept me for who I am too.\" She shuffled closer, so I wrapped an arm around her waist, feeling her hand grip mine tightly. \"Mark and I met in a club in the city. You know Mike and Chris, his friends?\" Everyone around the table nodded. They'd known them almost as long as I had. \"I'm a woman but I wasn't born a woman. I'm transgender.\"\n\nThere was silence for a few seconds before my brother simply said, \"Cool!\" He leaned across the table and bumped my shoulder with his fist, giving me a nod of approval.\n\n\"You've got to give me hair tips,\" my sister added, \"I just love your hair. It's so vibrant!\"\n\nMy father cleared his throat and extended a hand. Cindy offered hers in return. \"Welcome to the family, Cindy. Mark, you mess this up, and I'll have your balls. It's obvious to everyone around this table how much this little lady loves you already.\"\n\nI looked at Mum, who smiled at us. \"So when's he going to pop the question because it's obvious to everyone here, right?\" she asked.\n\nCindy turned and buried her head into my shoulder, silently sobbing. I rubbed her back, my sister caressing her shoulder at the same time. \"Her own father...\" I said. I didn't need to add anything else. Three words was more than enough for them to understand what it meant to her. Hell, it nearly got me going. I loved my family, and I knew it was never going to be an issue.\n\n\"Does Megan know?\" my father wondered.\n\n\"She does. To my surprise, they get on rather well. It's good. Our relationship is a little better too.\"\n\nWe had to leave by mid-afternoon to take Natalie home. Cindy found herself hugged by everyone. My mother's embrace upon leaving was beautiful to see, treating her like a daughter already. My father did the same thing, almost demanding that I bring her around more often. I suggested we get the two families together sooner rather than later. Natalie understood what we'd done, exclaiming to everyone how much she loved Cindy and that she'd be her second mummy soon enough. I had to pretty much drag Cindy and Natalie to my car, otherwise I'd turn into a blubbering wreck.\n\nPulling up outside my old house, Natalie got out and headed towards the front door. I turned to Cindy, meeting her eyes. \"Best day of my life was meeting you, Mark Pritchard. Every day since then is proving to be the equal best.\"\n\n\"I can only hope I can make every day going forward just as good then, if not even better.\"\n\nMegan greeted us with a smile, which was still something I was getting used to. Asking us if we wanted to stay for dinner was still a surprise, but Cindy and I accepted it. Gave us an excuse to spend more time with Natalie, Greg arriving home a couple of hours later, joining us at the dinner table as Megan worked away in the kitchen.\n\nCindy and I stayed around long enough to put Natalie to bed, while Greg disappeared to go play his video games. Sitting in the living room with Megan, she shared a bottle of wine with Cindy while I sipped at a beer, aware I had to drive.\n\n\"Cindy, can I ask a question?\"\n\n\"Sure.\"\n\n\"How do you rate him in bed?\"\n\nI almost spat my beer everywhere. \"He's fantastic.\"\n\nMegan smiled, almost wistfully. \"It was never the bedroom I had an issue.\"\n\n\"Then why did you cheat?\" I asked. It was harsh. It had to be. Megan obviously got upset, so I moved across the couch, patting the empty space between Cindy and I. I think she appreciated that, sitting down as Cindy caressed her shoulder. \"Megan, I'm past hating you. I'm past being bitter. Things are better now, but that the one question I still have. I wasn't a perfect husband, I made mistakes, but I must have done something...\"\n\n\"You did nothing wrong,\" Megan whispered, wiping her cheeks, \"I was bored. You had your job that you've excelled at all your life, our kids, your life in general. I was part of it but... I felt I wasn't at the same time. The sex was always amazing, our relationship was good, you did your best to make me feel special, but... I don't know, I felt like something was missing. Having an affair was exciting, illicit... It was just for me. I didn't even really like him, to be honest. Was the sex worth it? Not really, it was only worth it because it felt so naughty. I felt... alive, Mark. For the first time in years, I felt like someone other than a wife, worker drone, mother. I know that makes me sound horrible. I was horrible. I should have talked to you, suggested counselling, something... anything to make it better between us.\" She met my eyes. \"But I never stopped loving you. I thought I could stop eventually, but it was just the excitement that kept me going. Then you found out, and I saw what it did to you, to us...\" She looked at Cindy. \"I look at what you two share now and just feel empty. This is what we used to have. Mark kept putting in effort until it just didn't seem to work. No wonder he grew disheartened. A marriage takes two people, takes constant work, but I didn't help at all.\"\n\n\"We all make mistakes, Megan,\" Cindy stated.\n\n\"I didn't make a mistake, Cindy. An affair is much more than just a mistake.\" She turned back towards me, taking my hands in hers. \"Please forgive me, Mark. I'm begging you. I know there's nothing...\"\n\nI kissed her forehead. \"I forgive you, Megan. I think I did long ago.\" She broke like a dam as she collapsed against me. Cindy smiled at me as she hugged her from behind. Despite the fact she sobbed against me, I felt good, like a weight was lifted from my chest. I now had a better understanding, which made me feel at least a little better. That would always weight heavily in the background, but I could forgive and eventually forget.\n\n\"She's changed you,\" Megan finally whispered, \"For the better, I might add. I'm sorry, Mark. I'm so, so sorry.\"\n\n\"What's done is done, Megan. But... I'm willing to work on our new relationship. Meet me halfway, and we'll get there. You might be my ex-wife but there's no reason why we can't be friends.\"\n\n\"I'll be your friend too,\" Cindy added sweetly. Megan turned and hugged her just as tightly.\n\nMegan eventually sat back, wiping her cheeks. \"Jesus, I haven't cried like that in a while.\"\n\n\"Feel better?\" Cindy asked.\n\n\"Confession of my sins. You were a great husband and father, Mark. I'm the one that threw our marriage away.\"\n\nWe talked about inconsequential shit for another half an hour or so before we needed to leave as it was back to work the next morning. Megan and Cindy shared a warm hug before the ex-wife hugged me. I was getting used to that again. The affection had slowly died during our marriage. \"Just so you know, Mark, I approve of her,\" she said softly, \"Got yourself one hell of a woman there.\"\n\n\"I know.\"\n\n\"Did she tell you?\"\n\n\"Of course.\"\n\n\"I'm sure the feelings will fade eventually.\"",
        "\"You're the mother of our children, Megan. We'll always have that connection. Therefore, even after everything, I will always feel love for you. It just won't be the same love we once shared.\"\n\n\"Take your girlfriend home and make love to her.\"\n\n\"Yes, ma'am.\"\n\nLetting her go, she smiled at me. A slightly sad smile, but I think the night was cathartic for us both. I now knew a reason, while she'd confessed the reason why. She took responsibility, but despite what she'd said, I knew I'd made mistakes of my own. Sliding behind the wheel, Cindy took my hand once I started up the car and drove us home.\n\n\"I hope she finds happiness,\" she said.\n\n\"So do I.\"\n\nShe leaned over and kissed my cheek. \"Once we're home, we're getting naked and you're making love to me.\"\n\nI might have been firmer on the accelerator upon hearing that idea."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "transgender",
        "romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/ambiramus-ch-05"
}