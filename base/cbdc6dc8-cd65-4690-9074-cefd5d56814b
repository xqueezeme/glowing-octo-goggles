{
    "title": "The Infinite Bk. 03 Ch. 06",
    "pages": [
        "Vibrant and Faded\n\nCOWARD\n\nIt was painted on Noah's door in large letters.\n\n\"You can't just let this stand,\" said Alexis, standing in the doorway to Noah's room and fuming.\n\n\"I can, and you wouldn't believe how easy it is,\" said Noah, sitting at his desk and writing in a notebook. \"If anything, I think it's a bit funny. Whoever did it went out of their way to use yellow paint. That, I can appreciate.\"\n\n\"How are you unaffected by this?!\"\n\n\"Because I literally am unaffected by it. Is it my job to clean the door? Does that paint somehow rob it of its functionality? Someone vandalizing academy property isn't my problem. There is no reason for me to care.\"\n\n\"So you're fine with this label being stuck on you? You're fine with everyone calling you a coward?\"\n\n\"I'm not going to spontaneously get sick or hurt because of the nasty opinions swirling in those idiots' heads. I don't care what they call me or what they think, as long as they do so quietly. If I just let them have the last word, they'll shut up.\"\n\nAlexis sighed and closed the door, then sat on the bed. \"Are you coming to lunch or not?\"\n\n\"Funny, you never followed me to the library like this.\"\n\n\"Back when you just studied in the library, you never skipped lunch. I get that you enjoy your privacy and your research, but don't start forgetting to eat. Besides, now that we're neighbors, I can finally get a look at what you're doing. What are you doing anyway?\"\n\n\"Studying magic, as always.\"\n\n\"Magic that I never see you perform. In fact, I've only ever seen you use magic once, and I didn't actually see it.\"\n\n\"You've been getting rather curious about that as of late. I told you before, I have not been sneaking into the women's baths.\"\n\n\"I know that, but--\"\n\n\"Or maybe I have. Maybe I was lying before to give you a false sense of security. Then again, there is always the possibility that I'm just saying all this now to mess with you and make you paranoid.\"\n\n\"Ugh, enough already. Seriously though, when we first met, you told me you were going to Colbrand to try and understand your magic, but you've never said anything about it after that.\"\n\n\"You never asked.\"\n\n\"Well I'm asking now. Have you even talked to anyone about this?\"\n\n\"Not yet. First, I want to pursue every avenue I can on my own. The fewer people who know about my magic, the better, you included. Any information I reveal is information that can be used against me.\"\n\n\"I guess it's easy not to care what people think when you have no faith in them. What about me? Have I not earned your trust? I promise I won't tell anyone.\"\n\n\"It's not about faith or trust; it's a matter of probability. You may have no intention of betraying me at the moment, but ten years from now, maybe you're captured and tortured for information, and they use mind control magic or a truth potion to get you to spill my secrets. Maybe twenty years from now, I end up doing something that makes you so angry that you want my head on a pike, and you use what you know about me to hunt me down and exact your revenge. Or maybe a week from now, I find out you can't hold your liquor, and you end up blabbing. As long as I don't tell you, I don't have to worry about those things happening.\"\n\n\"So all this time, you've been waiting for me to betray you?\"\n\n\"Don't take it personally. I wait for everyone to betray me. I don't expect people to literally stab me in the back when I meet them, but that liquor thing comes from experience. The better I know you, the more I tell you. Isn't that how all friendships work? Besides, people who make promises and blanket statements underestimate the power of the future. They don't realize how the smallest things can have the biggest influences in their lives. They underestimate how much their feelings and beliefs can change over time.\"\n\n\"Well I'm curious, so at least let me see you disappear.\"\n\n\"There is literally nothing to see.\"\n\n\"Don't play semantics. I already know you can disappear, so you might as well tell me some things about that.\"\n\nHe exhaled through his nose and closed his book. \"Fair enough.\" Alexis watched him brush the hair out of his eyes, and the next instant, he was gone. She automatically jumped to her feet, compelled by primal instincts, as though fearing the phenomenon was contagious and that she'd get pulled into oblivion.\n\n\"Noah?\" she asked nervously.\n\n\"Yeah, I'm still here, sitting at my desk.\"\n\nShe stared at the empty space, looking for any kind of sign of his presence. \"That is incredible. How... what's it like?\"\n\n\"Let's talk outside. Just pretend you're alone, and I'll follow you.\"\n\n\"Uh... ok.\" She nervously approached the door, never taking her eyes off the seemingly empty chair. She put her hand on the doorknob but didn't turn it, still searching for any sign of movement.\n\n\"Any day now,\" Noah said behind her, once more making her jump in shock. By some miracle, she stopped the frightful yelp shooting up her throat.\n\n\"Don't do that!\"\n\n\"Well open the damn door already. Let's go.\"\n\nShe steadied her breathing and opened the door, and after stepping into the hall, it closed on its own behind her.\n\n\"Noah?\"\n\n\"Yes, I'm still here. Come on, you were worried about me missing lunch, remember?\"\n\nShe walked through the corridor with instinct itching in the back of her head like a bug bite. She wanted to spin her head around and scan everything to search for Noah, but she maintained her composure. She went down the stairs, and even then, heard no other footsteps but her own. Not a single board creaked, and she couldn't help but wonder if Noah was still walking with her.\n\nAs she walked, she passed by other cadets, and the looks they gave her were complicated. She had no intention of serving any faction and cared not for noble society. In the months since enrollment, she had bested all those around her and become one of the top cadets. To the upper nobles, she was an unusable asset that only made them look bad, and to the rest of the cadets, she was a talented rich girl they could never touch, with a serious personality that many found off-putting. She and Noah fit into the same social circle, though that association had further lowered her social standing, as well as created plenty of rumors. She didn't mind the rumors, as they helped keep her sexuality a secret.\n\nIt was when she stepped outside, and they were once more alone, that she dared speak. \"Do you do this all the time? Just disappear with your magic so that people can't even see you in the halls?\"\n\nHe reappeared beside her. \"You disapprove?\"\n\nThey began walking across the campus in the brisk autumn air. \"It's just... kind of sad. I know you don't care what people think about you, but you really put this kind of effort into avoiding everyone?\"\n\n\"I didn't come to this academy to make friends. I came here for answers.\"\n\n\"I guess this really is just a means to an end. When our time here is over, you aren't going to join the knighthood, are you? You're just going to slip away once you get what you want.\"\n\n\"I need information, and I want to experience everything this world has to offer, neither of which I can do as a pawn for Uther. You said before that you wished to forge your own destiny. You can either do that by taking orders and fighting a never-ending war over land, or coming with me to see what lies over the horizon.\"\n\nAlexis stopped walking, and Noah turned and looked back. \"You're serious?\"\n\n\"I am. Come with me. Be a free agent. It's rare for me to find someone I can rely on and fight side-by-side with.\"\n\nShe opened her mouth several times, but nothing came out. Finally, she spoke. \"I can't. I can't be the person you want me to be.\"\n\n\"Then just be you. I wouldn't be your friend if you were anything else.\" He turned away before he could see her smile. \"Come on, I'm starving.\"\n\nShe caught up to him, and they resumed walking. \"So what does it feel like when you disappear?\"\n\n\"I become invisible, not disappear. My mana wraps around me and hides me perfectly, even my footprints. I have yet to encounter anyone able to detect my presence, even gold-ranked knights. I can still move and do everything as usual, so it's great for a fight, but I prefer not to use it unless I'm planning to kill my enemy. I don't want them running off and revealing my abilities to others. The problem is that I have yet to find any leads on what this magic is. I can't even find the runes.\"\n\n\"Huh, that is strange. No wonder you're so focused on finding answers.\"\n\nThey arrived at the mess hall, bustling with cadets. With the advent of dueling, the room's far wall had been turned into a scoreboard. All the cadets' names were listed with tallies marking wins and losses. Under Noah's name, rather than simply leaving his score blank, 'COWARD' had been written. The rules were also laid out so that incidents like Seraph crushing Alexis wouldn't happen again. The proxy clause hadn't been added, but Seraph was forbidden from challenging Noah again. On the other hand, everyone else could.\n\n\"Cadet Noah, I challenge you to a duel!\" Lunch was potato soup, but an annoying fly had decided to land in it.\n\n\"Are you serious?\" Noah asked.\n\n\"You heard me, and you can't have your servant girl stand up for you this time.\" Brown hair with a scar on his face; Henryk Schtern was one of Galvin and Seraph's friends.\n\nAlexis rose to her feet, eyes filled with rage. \"What did you just call me? After Noah is done, I'll break whatever's left. I challenge you.\"\n\n\"Fine, I'll be at the field,\" Noah said. \"Now do you mind? I'm trying to eat.\"\n\nHenryk left, and Alexis was able to settle down.\n\n\"So, do you want me to beat him extra hard, or would you like time to play with your food?\" Noah asked.\n\n\"Just leave some fight in him, so I don't look bad when I beat everything else out,\" she replied.\n\nIt had begun to snow by the time lunch was over, but the cold was a blessing in Noah's next class. It was spear training, and they were striking at stationary targets to practice their aim. To hone their strength, a more rigorous method had to be used. The spears in the cadet's hands were chained to battering rams, being pulled back every time the target was hit. Stones were used to increase the weight and difficulty of the exercise, and the rams would strike against boulders meant to rob them of their momentum.\n\nWhile their breath fogged in front of them, all the cadets were sweating from the exertion. When they first began this practice after enrollment day, blisters, cuts, and friction burns were common injuries, and after months of daily training with various weapons, every cadet had developed tough calluses on their hands.\n\nThere was no time to rest after the class. Being late to his duel would bring trouble. He went out to the dueling field, where combating youths turned green grass into fighting rings of frozen mud with their stomping feet. Despite the temperatures dropping, there was always an audience. Many simply loved to watch for entertainment, while others hoped to gain information on future opponents, and of course, there were the gamblers.\n\nOnly those who were challenged and won would receive money, so the wealth exchanged was very little. Money was scarce for cadets, especially those living in the barracks, but just like in prison, there was always something to gamble with, and the preferred currency was gonlief cigarettes. While the Knight's Sheath had always been one of the most popular bars and brothels in Colbrand, Daniel's music had exploded its clientele, and his cigarettes were loved by customers. Now other establishments were making their own, and cadets were snatching them up on the weekends.\n\nOf course, the academy tried to ban smoking, but in between classes, Noah would see groups of friends hanging out behind buildings in a cloud of smoke and running away whenever they saw a teacher approaching. As expected, the nobles were trying to turn it into a status symbol and were using runecrafting to make self-lighting cigarettes and searching for any other pleasant herbs and plants they could add.\n\n\"I'm actually surprised you came out!\" said Henryk as he approached.\n\n\"Who's presiding over the duel?\" Noah asked, ignoring the insult.\n\n\"That will be me,\" said Sir Kiev behind him. \"What is the challenger payment?\"\n\n\"The usual, a silver coin.\"\n\n\"All right, let's make this quick,\" Noah said as he took his position in one of the rings, his hand resting on his sword. As Henryk entered, a crowd of cadets began to gather. Noah's reputation was poor, but everyone still remembered stories of his fight with Lady Zodiac, and many were curious to see if they were true. Among them was Galvin, smarmy as always, and keeping Sophia chained to his side.\n\n\"Duelists ready!\" Kiev announced. Noah and Henryk faced each other and drew their weapons, a sword vs. a shield. \"Fight!\"\n\n\"Come at me, you spineless commoner!\" Henryk dared with his shield raised.\n\n\"Wow, you really are Galvin's friend. Tell me, did he order you to fight me, or did you actually have the balls to... to...\" Noah trailed off, looking over Henryk's shoulder. \"Holy shit, what is that? Shit! SHIT!\"\n\nNoah began to panic, and Henryk, bless his heart, turned his head and looked, but to his credit, he didn't look all the way before realizing his mistake. Still, it was a gullibility that would not go unpunished. While others were still looking at the empty sky in confusion, Henryk whipped his head back, just in time to see the soles of Noah's boots as he kicked him in the face with both feet at the same time. For those who didn't see the kick, the sound of the blow connecting was gruesome and loud enough to tell them what had happened, and while Noah managed to stick the landing, Henryk collapsed like a puppet with its strings cut.\n\nThe general reaction was sour, but the silence was robbed by Foley, laughing so hard that he could barely breathe. \"That was the greatest thing I've ever seen!\"\n\n\"Cadet Noah, that is unacceptable!\" Sir Kiev shouted.\n\n\"It's not against the rules, I checked. Besides, spear training left me with sore shoulders.\"\n\n\"Pain is not an excuse to lie and cheat! That is behavior unbecoming of a knight!\"\n\n\"Shouldn't you be more worried about the cadet who not only fell for the oldest trick in the book but was knocked out in a single blow? All the chivalry in the world won't mean much if this is the quality of knights we can expect in the future. Henryk, back me up here.\" There was no response from the cadet, lying on the ground like roadkill with both his nose and several teeth busted. It was taking the work of two dedicated healers just to try and wake him up. \"Oh, that's right, he's out cold. It's my win.\" He looked around. \"Anyone else? No? Thought so.\" He walked over to a disapproving Alexis. \"Sorry, I didn't think he'd go down so easily.\"\n\n\"I agree with Kiev; that was a cheap shot,\" she said.\n\n\"Right, like I'm going to waste my A-material on Henryk-fucking-Schtern.\"\n\nNearby, Galvin elbowed his friend Mark in the ribs, prompting him to step forward. \"I challenge you!\"\n\n\"Really? You're serious about this? All right, next in line, step forward.\"\n\nNoah returned to the ring to face Mark, likewise armed with a sword.\n\n\"I'll tolerate no trickery in this match!\" Kiev warned.\n\n\"Sir, with all due respect, if that were to work a second time, my conduct would really be the least of your concerns.\"\n\n\"Be silent. Now, both cadets ready! Fight!\"\n\nMark charged while drawing his sword, not wanting to give Noah the room for another heavy attack. Noah drew his own blade and withstood the coming barrage without taking a single step back. Mark attacked from every angle, trying to find a gap in Noah's defense, but he blocked and parried every swing. While Mark may have been training under Lady Zodiac, his skills couldn't even be compared to hers, and Noah soon lashed out to exploit an opening. A pinpoint stab to the flat side of Mark's sword snapped it just an inch past the guard. Noah then struck him in the back of the head with the pommel of his own sword, knocking him out. The match was over in less than a minute.\n\n\"Cadet Noah is the winner!\" Kiev announced.\n\nThere was no cheering or applause, but Noah's skill had begun to mend his tarnished reputation. He sheathed his sword and turned to Galvin.\n\n\"You got something you want to say to me?\"\n\n\"Excuse me?\" Galvin sarcastically replied.\n\n\"Using them to gauge my strength was the correct move, but I'm sick of the foreplay. If you want to challenge me, just do it already.\"\n\n\"Well you've stolen my thunder, so fine. I challenge you to a duel. What do you want your challenger payment to be?\"\n\nNoah glanced at Sophia, her crimson hair gleaming in the setting sun and her beautiful face darkened by despair. \"If I win, I get your fianc\u00e9e tonight.\"\n\nIt was like all the air had been drained from the world as everyone struggled with the possibility that they had not just misheard him. Sophia's face went pale while Galvin stared with bulging eyes full of bloodlust. Likewise, Noah could feel the intensity of Alexis's fury like the heat of a bonfire on his back.\n\n\"Excuse me?\" Galvin once more asked, this time with a twitch.\n\n\"You heard me. If I win, she becomes my plaything for the evening, to do whatever I want with. Don't worry, you can have her back when I'm done with her. And Sir Kiev, according to the rules, the academy will not interfere with a challenger's payment as long as whatever is wagered personally belongs to the challenger and is present on academy grounds. Galvin treats her like property and puts a lot of effort into making sure everyone around him knows it, well now he's going to lose her like property. So, Prince? What say you?\"\n\n\"Cadet Noah,\" Sir Kiev growled.\n\n\"Fine,\" said Galvin. \"I'm going to make you suffer for your arrogance and bathe in your tears.\"\n\n\"Good luck with that,\" Noah replied, further irking Galvin.\n\n\"Enough. The duel will take place tomorrow. I suggest the two of you take time to rethink this,\" said Kiev.\n\n\"Perfect, tomorrow it is.\"\n\nRather than going back to Alexis, Noah turned and left the field, but he knew she was following him like an angry wasp. Only when they were inside and no one was around did she confront him with a narrowly-dodged punch.\n\n\"You son of a bitch!\" she shouted while hurling another.\n\n\"Just calm down for a second!\" Noah said as he avoided her feral attacks.\n\n\"No! I thought you had at least some kindness and integrity, but you're just another perverse bastard!\" When her punches didn't land, she drew her sword and came at him with the intent to kill. Noah narrowly dodged the crazed slash, grabbed her wrists, then slammed her against the nearby stone wall.\n\n\"Listen to me! I'm not actually going to do anything to her.\"\n\n\"Bullshit!\" she hissed while now attempting to kick him in the groin.\n\n\"I mean it! I said that because I thought it would scare him off and fuck with his head. Didn't you see the look on his face? Come on, you really think a control freak like him would even consider the risk of gambling with his fianc\u00e9e? He agreed to it in the spur of the moment, but he's just going to show up tomorrow with an excuse about how fighting me is beneath him, or it's dishonorable to wager a woman. He's a coward who just wants to save face.\"\n\nAlexis just barely managed to contain her rage. \"You're not allowed to use my cousin as a piece for your mind games! You're risking her safety and her honor by underestimating how spiteful he can be!\"\n\n\"Even if he does decide to duel, I'll beat the shit out of him, and he'll welch on the bet. The commandant may even nullify my win to prevent a scandal, but it won't matter. The damage will be done.\"\n\n\"What about the damage to her? Do you have any idea what this will do to her and her family?\"\n\n\"It'll give her the upper hand. This is an academy duel, so I don't have the authority to officially break up an arranged marriage, but I do have the means to sabotage it. Once I win, no matter what Galvin does, his reputation will be so trashed that he'll have no right to marry her. I don't even have to touch her, he'll be the cucked prince as soon as the match is over, and she'll gain a new selection of marriage candidates once news of this becomes widespread.\"",
        "\"But if she shows up at your door...\"\n\n\"Remember that healing trick I showed the two of you in the infirmary? Sending holy energy into the brain? I'm curious as to how it affects dreams. If used continuously, I bet it would give me the best night's sleep I've ever had. Afterward, if the truth doesn't cut it, she's free to tell people any story she wants, and I'll go with it. She can say I was asleep when she arrived, say I finished as soon as she touched my hand, whatever foible at my expense will make her look good. Imagine, forced to settle her abusive fianc\u00e9's debts, but as luck would have it, she walks away untouched with all the sympathy and credit and none of the shame.\"\n\n\"You expect me to believe you're doing this for her benefit?\"\n\n\"Like I said before, I don't care what other people think of me, but sometimes I'll try to help them, so I don't forget what it's like. Altruism is like a muscle that'll weaken if it isn't used. Listen, you cannot tell her about any of this. If she knows it's fake, it'll alter her behavior. This will only work if Galvin believes it's real.\"\n\n\"How can I trust you?\" Rather than answering, he let go of her and stepped back, holding his arms out to his sides. She stared at him, gripping her sword with trembling hands as tears budded under her eyes. \"If you hurt her, I will never forgive you,\" she whispered. She then sheathed her sword and stormed off.\n\nNoah didn't see Alexis at dinner, breakfast the following morning, or even lunch. He knew his gambit had left her trust in him frayed, and she would wait to see how things worked out before reconsidering their friendship. She wasn't the only one avoiding him. To the rest of the cadets, he was scum, and even the teachers were openly shooting him dirty looks. At one point, Lady Zodiac confronted him, and he gave her the same explanation he gave Alexis, with the same cold reply.\n\nFinally, the time came. After his second class was over, Noah made his way to the field for the duel. A large crowd had gathered, everyone wanting to see how the match would turn out. Would there be a definitive winner? Or would it turn into a big mess and be nullified like the proxy match? Alexis was among the crowd, a simmering cauldron of fury, much like Seraph, burning with jealousy. Beside her was Sophia, looking like she was going to throw up. Galvin was in the ring, looking more than a little unbalanced. His smirk was gone, and his eyes were full of bloodlust. Rather than a sword, he was armed with a grimoire. Sir Kiev seemed more stern than usual.\n\n\"Have either of you reconsidered?\" he asked.\n\n\"If he wants to fight me, he knows the price,\" Noah said.\n\n\"Your hubris is going to make it all the more satisfying to crush you,\" the prince replied.\n\n\"All right, I want a good, clean match. When I say it's over, you stop. Are we clear?\"\n\n\"Actually, I would prefer you not intervene. I don't want my fun to be interrupted. We're done when I say we're done,\" said Galvin.\n\n\"That's not how this works,\" Kiev growled.\n\n\"If I may say so, I would prefer that as well,\" said Noah.\n\n\"We're not changing the rules of the duel! I am not going to let you two go out of control!\"\n\n\"A compromise then?\" Noah pointed into the crowd. \"Let Sophia decide when one of us has gone too far.\"\n\n\"Keep her name out of your filthy commoner mouth!\" Galvin shouted.\n\nKiev gave a loud huff. \"I'm willing to extend your leash a bit, but don't push me. Now, both duelists ready!\" Noah and Galvin assumed their stances. \"Fight!\"\n\nNoah couldn't deny Galvin's speed. He opened his grimoire and slammed his hand on the ground, creating a magic circle of blue runes. \"Quicksand Creation!\" The ring shook beneath Noah's feet as the ground was saturated with churning water. The earth liquified, and both Noah and Galvin sank up to their knees in heavy mud.\n\n\"Ha! I got you, you son of a bitch!\" Galvin cackled.\n\n\"Huh, you really did. I imagine you were preparing this spell last night? Well done,\" Noah said as he tried to pull his feet free. \"Then again, you're stuck as well.\"\n\n\"That's fine with me since I don't need to move around, because unlike you, I can actually use magic! Watch, Mud Punch!\"\n\nHe once more touched the ground, and this time, a lump of mud, the size of a fist, was launched towards Noah. The first came too fast for Noah to dodge and winged his shoulder, leaving his arm numb and nearly breaking his collarbone in the process. A second one was launched, and Noah managed to counter it with his sword. However, he simply ended up slicing through it, and the two halves still hit him in the chest, albeit with reduced force.\n\n\"See, I've been watching you in Elyot's class, and I have never seen you cast a single spell. You may be good with a sword, but when it comes to magic, you're utterly helpless! All you can do is stand there while I crush you!\"\n\nNoah brushed some of the mud off his shirt and rubbed his shoulder. \"Those blows really pack a wallop. Yeah, I'm definitely going to be sore tomorrow.\"\n\nHis cavalier attitude cracked Galvin's mad grin. \"We'll see how calm you are after I've broken a few--\"\n\n\"Flashbang.\"\n\nGalvin and the spectators were rendered blind and deaf, shocked by a flash of light and feeling like their ears had been boxed.\n\n\"...t r...ing..u h..r...\" Unable to understand what Noah was saying, Galvin yelled and slapped himself until his senses came back under his control. \"As I was saying, that ringing you hear is your ears dying. Every time it happens, you permanently lose a little more of your hearing. Well, holy energy can probably fix it, but it's still going to hurt.\" Finally, Galvin could see. Noah's arm was extended, and he was holding a card towards Galvin, on which a magic circle had been drawn.\n\n\"Let's see how many shots it takes for your hearing to disappear completely, shall we?\"\n\n\"You son of a--\"\n\n\"Flashbang.\"\n\nGalvin just barely caught a glimpse of it, the sphere of light shooting from the card. It hit him in the face before he could react, and though he felt no physical strike or burn, it unleashed a blinding light that burned his corneas and a teeth-rattling thunderclap. He was stunned and in pain, struggling to stay on his feet.\n\nAs its name implied, Flashbang was a spell designed to act like a stun grenade. Derived from a basic lightning spell that would hit the target with an energy orb, Noah had reworked the magic formula for use as an illusion, boosting the light and sound produced at the cost of physical damage. Against enemies, it was like an arc welder going off right in front of their eyes and a gunshot beside their ears.\n\n\"Flashbang.\"\n\nBefore Galvin could even recover, he was hit by a third orb, leaving him struggling to stand. Noah wrenched one foot free from the muddy ground and began his approach. Galvin, unable to see or hear, tried to retaliate with another Mud Punch, only to be hit with a fourth flashbang. He was in utter agony and so disoriented he could barely stand. It took all of his strength and coordination just to cover his ears and keep his eyes screwed shut.\n\nNow close enough, Noah grabbed Galvin by the collar. He opened his eyes, seeing Noah only as a blur. His mind was scrambled as if by a horrific drug, and he tried to brace himself for another flashbang, only to be struck by Noah's fist. It was the first of a painful barrage. Noah punched him with brutal force, rapid speed, and perfect accuracy, each blow drawing blood and disfiguring flesh and bone. Gripping Galvin's shirt, Noah wouldn't even let him fall and instead kept him propped up so he could continue beating him. Such savagery, but his face and breathing were perfectly calm. As gore began to splatter on the viewers, all those unable to watch the beating turned to Sophia, silently begging her to put an end to it, but she said nothing.\n\n\"Stop!\" Seraph shouted as he jumped into the ring and grabbed Noah's arm, beating Kiev by a single second.\n\nGalvin had been beaten into an unrecognizable pulp, so Noah dropped him into the mud and turned to Seraph. \"Strange, isn't it? To witness brutality instead of being the one to dish it out? You should learn from this experience, both of you.\"\n\n\"I'll fucking kill you!\"\n\n\"That's enough!\" Kiev yelled as he separated them. \"The match has been decided, and Cadet Noah is the winner. Any retaliation will earn expulsion! Am I understood?\"\n\n\"Yes sir,\" Seraph grudgingly answered.\n\n\"Cadet Noah, if you have nothing better to do, I suggest you leave.\"\n\n\"Yes sir.\" Noah bowed his head and left the field.\n\nAs he walked back to the academy, he examined the card he had used in the duel, now crumbling to ash after excessive use. He had been hoping to avoid using magic in these duels, wanting to save the surprise for more critical battles in the future, but as a field test, he couldn't have asked for better results. All this time, his magic had just been a means of concealment and deception. Now, his illusions had been weaponized, and the results spoke for themselves.\n\n----------\n\nThe women's bath gossip focused on one topic: the prince's loss. Those who had witnessed it complained about the ringing of their ears, the blinding flashes, and the savage beating Noah delivered with one bloody punch after another. Of course, there was another aspect to the story, one spoken of only in whispers. Sophia was washing in the corner in anticipation of the night to come. Her movements were sluggish, and her eyes were dim, not even feeling the warmth of the water.\n\nAlexis was beside her, trying to ignore the women looking at Sophia and their hushed mutterings. She had resisted telling Sophia about Noah's plan, but she desperately wished to, if only to ease her lover's dread.\n\n\"Sophia, you don't have to do this.\" It was all she could think to say.\n\n\"Yes,\" she murmured, \"I do.\"\n\n----------\n\nA knock at the door drew Noah's eyes from the book he was reading, a noise he honestly thought he wouldn't hear that night. \"Cadet Noah?\" A soft voice. He opened the door to Sophia, standing in the hallway. In place of her uniform or white vestments, she was garbed in a silk robe. She pulled back the hood, revealing eyes both fearful and determined. She brought the scent of soap and perfume to the room; such sweetness appreciated in these dorms.\n\n\"Sophia, come in.\" She entered and drifted towards the candle burning on his bedside table. \"I must admit, I didn't think Galvin would have it in him to actually send you. To think that someone like him would be a man of his word.\"\n\nShe stood with her back to him, clutching herself. \"He didn't send me. As soon as he was healed, he forbade my even speaking to you. I came here of my own free will.\" Her words, the way she said them, with equal parts courage and fear, he was snagged on them like a fish on a hook, pulled by a line of curiosity. He decided to tug back.\n\n\"So you chose to come here? To offer your body to a stranger, to be used like a slave girl to settle your fianc\u00e9's debt? Either you are truly devoted to your relationship, or it's the opposite. You're not doing this for him, or anyone else for that matter, are you? You came here because you want this.\"\n\nShe turned to him, struggling to maintain the blank face she was so used to wearing. \"I'll never get another chance like this, to wound him so deeply. I'm willing to be known to be the defiled wife, settling her husband's debts with her body, if it means he is known as the pathetic husband whose wife was taken by the man he challenged to a duel. I'll bear this shame if it means I can drag him down with me, for him to know I'd prefer this twisted freedom to his imprisonment. I won't let him be my first, and no amount of money or power can give him a second chance.\"\n\n\"You mean he never...\"\n\n\"No, he enjoyed the anticipation, savoring my dread. He would drag me to brothels and make me watch as he'd have his way with the girls, beating them and laughing while he did it. He made sure I knew what he planned to do to me on our wedding night so that I could... look forward to it.\"\n\n\"To be honest, it was never my plan to do anything to you. It was a bluff to mess with his head, and it still can be. You can leave here untouched and tell whatever story you wish. Think carefully.\"\n\n\"I can't take the risk, letting this chance go. Believe me, I've spent a lot of time thinking this over. If I have an affair with someone, it will annul the engagement, but my family will suffer for it. However, the fact that you won me in a duel means that if I go through with this, I can break the engagement, and Galvin will bear the disgrace. And even if, somehow, I still have to marry him, he'll know I never was, and never will be his. I will always be.... yours.\"\n\nShe slowly opened her robe, revealing the thin negligee, covering underwear of noble's lace. Daily training sculpted her body into an athletic figure, but she had all the right curves. Every inch of her was a feast for the eyes. Her tone changed, losing the bitter sharpness.\n\n\"Besides, after seeing you today, my feelings for you are anything but negative. I'm both grateful and impressed, so it wouldn't be so wrong for me to also feel a little... drawn, would it?\"\n\nShe had been choosing her words all evening, how she would say them, basking in fantasies of finally speaking the truth to someone. Now freed, her words left behind a vacuum within her, filling with new emotions. She felt a fledgling attraction to a man who was all but a stranger to her, and a hesitant but hopeful curiosity of what would come next.\n\nNoah's smile eased her, and he took her hand. \"No, it wouldn't be wrong at all. If this is what you want, then I'll make this night worthy of those feelings.\"\n\nHe approached her and lifted her chin. He memorized her face, every detail from her fluttering breath to her gentle eyes. Impressed by her courage, he wished to reward her, if only in remembering her in the distant future. Her lips parted and met his. So soft a brush, so faint, but it cleansed so much of her anxiety and relaxed her. A second kiss, sending the warmth or exhilaration through Sophia as he pulled her closer. He could feel her trembling, shivering as if the hand he used to caress her cheek was as cold as ice. He continued to caress her lips with his own, feeling her tension fade away as if running off her skin like water.\n\n\"I have an idea,\" he whispered in her ear. \"Let me give you a massage.\"\n\n\"A massage?\"\n\n\"It'll help you relax and let us get to know each other a little better.\" He pushed the robe off her shoulders and hooked his finger on her negligee. \"You won't need any of this.\" He kissed her neck, relishing the warmth and softness of her skin, dabbed so lightly with the scent of flowers. It was pointless for him to try and remember all of the women in his past, but even if Sophie was the millionth, she tasted no less sweet than the first. \"Lie down on your stomach. Make yourself comfortable.\"\n\nHe stepped away from her, letting her discard the thin gown and move to his bed. She hid under the covers and removed the last few lacey garments as he pulled a small bottle out of his bedside table. It was the elven olive oil the girls at the Knight's Sheath often used when entertaining clients, appreciated both for its taste and slipperiness. Grabbing some for himself was a wise choice. Lying in his bed, blanket up to her chin, Sophia looked like she could have fallen asleep, but her heart was racing, and she was restless with anticipation.\n\nHe sat beside her and brushed a lock of hair out of her face. \"Feel free to stop me whenever you want. I won't force you to do or experience anything.\" Hearing those kind words, she didn't trust her voice and just nodded with a soft hum. Noah began rolling the edge of the blanket, exposing her back inch by inch. He heard her hold her breath as if he was instead ripping off a bandage. He stopped at her waist and ran his fingertips across his back. \"You truly are beautiful.\" He then leaned down and kissed her shoulder.\n\nThe first line of oil was drizzled across her skin, making her shiver. It was cold, much like the room, but soon the window would fog from frantic breaths and evaporating sweat. Noah began his routine, moving his hands back and forth across this blank canvas. He was gentle at first, letting her get accustomed to a man's touch as he spread the oil. He explored her back, finding every rib, vertebrae, muscle, and pressure point.\n\nSophia's tension eased, her breathing now steady. Noah's hands, they no longer felt like the hands of a mere stranger. They offered her comfort, warmth, and relief. His moves were not rough or unpracticed, nor were they gentle or hesitant. The force he applied was increasing and sinking deep into her body. It was as though her voice was being squeezed out of her chest by his pressing fingers, the soft moans and whimpers slipping free before she could stop them.\n\nShe often thought of speaking up, asking him to be gentler when it got too much, but before she could say anything, his powerful hands would reach a knot in her muscles or a sore spot, and her voice would instead take the form of an unladylike grunt. The life of a knight in training accrued a lot of aches and pains, and all the pressure he applied was to release even greater pressure within her. He was forceful, audacious, but only because he knew exactly what he was doing, giving her what she wanted before she even knew she wanted it. Just the work he did on her neck made her feel like jelly.\n\nAfter finishing her upper back, he gently pulled her right arm behind her as if to put her in handcuffs. It stretched her muscles and enhanced the feel of his press. He messaged her palm, kissed her fingers, and then moved his strokes along her forceps and biceps. Her breath, deep and slow from the bliss, then reverted to an anxious pant. His hand had slipped under her so that he could massage the front of her shoulder. His fingers were almost right on top of her breast, never reaching her nipple but kneading her soft flesh.\n\nShe felt it in his movements, the familiarity he was gaining with her body. Had the space between them really closed so quickly? It was a thought that scared her, but pleasure erased that fear. She awaited him to truly grasp her like a trophy, to feel his fingers sink into the softness of her breasts, but his hand, lapping at her like the sea, receded. Disappointment replaced anticipation, but her comfort zone had been expanded. He repeated the process with her left arm, and all she felt was pleasure.\n\nHe moved the blanket down to her knees, exposing her peachy derriere. Once more, she shivered in nervousness, but Noah's touch had instilled excitement in her. He resumed massaging her back, now going lower and giving her hips the attention they deserved. He caressed her sides, soft enough almost to tickle her, but with enough pressure to give her kidneys and other organs a yogic workout.\n\nThe blanket was fully pulled away, and Noah moved to the end of the bed. He caressed Sophia's skinny white feet and lathered them in oil. The smaller area let him apply more force and get better leverage, with the mere pressing of his thumbs forcing her into submission. Before, Sophia had simply hummed in bliss and shivered from his touch, but massaging her arches made her whole body rigid, with her voice projecting both pleasure and pain. He didn't ease up, rubbing deep into the tissue with a force that was as cruel as it was sensual.\n\nThen lips replaced fingers, and she looked back to confirm the sensation of Noah kissing her toes. He made eye contact but didn't stop, and gave each digit the pampering it deserved. It was not a lewd act to fulfill a fetish, but an expression of sensual worship. This effort, it was all for her. She lowered her head so that he wouldn't see her smile, but moments later, that smile disappeared. This time, she didn't dare look back. What she felt touching her feet, it wasn't fingers or lips.",
        "Now it was Noah with an unseen smile. His member, erect and oiled, was rubbing against her feet like a sponge. Perhaps it was shock, but Sophia did not pull away, and instead continued to let Noah toy with her body how he wished. There was no way she couldn't feel him, no way she couldn't know what it was, but, if anything, it calmed her. It was her first contact with a male organ, but it felt so far away, as if she wasn't touching it at all. She realized it was because she wasn't seeing it, wasn't touching it with her hands.\n\nHer feelings were on full display to Noah, from how she breathed to her tremors of excitement. He had chosen this means of introduction precisely because it would be easier for her, and it was working. Such intimate contact, she had gotten accustomed to it and was now starting to enjoy it. He slid his member between her feet and coaxed her into wiggling her toes against his jewels. She giggled from his teasing and invoked a similar small chuckle in him as she began to reciprocate. She started playing with it, now giddy instead of nervous and wanting to return some of the pleasure he had given her. She was quick to figure out how to rub and handle it, becoming bolder and more dexterous with experience.\n\nShe almost didn't realize it had happened, at first thinking it was more oil, but then feeling the heat. \"Did you just...\"\n\n\"Yeah. It's called an orgasm. How does it feel to give one?\"\n\nShe laughed, finally free of all of her tension. \"I can't believe it really works that way.\"\n\n\"Well don't start thinking the night is done. I haven't even finished giving you your massage.\"\n\nHe rubbed deep into her legs, rolling his hands and working her calves as if to reshape them, unraveling the tense muscle and producing a fluttering gasp from Sophia. He reached her thighs, and she held her breath. His hands were so close, and she was fully exposed to him. He retained his professionalism, giving her muscles the attention they needed. If he told her to stand up, she wasn't sure she'd be able to. All of the strength in her legs was draining away, second by second, leaving only pleasure.\n\nMore oil was applied, and finally, Noah's hands found her ass. Embarrassment flooded her as he toyed with her supple flesh. Such lewd, intimate touching, fast and bold. He was still massaging her, still injecting relief into her muscles. The way he squeezed and played with her glutes; the sliding, gripping, mashing, and jiggling he did to her soft cheeks, he was revealing his intentions, letting her know the amusement he took in playing with her body. He spread them, exposing her, and though Sophia wanted to beg him not to stare, she said nothing. She was his reward for defeating Galvin and had willingly offered herself to him for his pleasure. She felt ashamed from the sensation of his hands and eyes on her chaste body, moving without restriction, but she had accepted her role as his prize, and deep down, wondered and even craved what happened next.\n\nHis hand slid between her soft thighs and found her womanhood. He ran his fingers along the creases on either side of her labia majora, plumping them, taking his time to enjoy everything their softness had to offer. Sophia's breathing had become ragged, her body and mind flushed with conflicting sensations. To be touched this way by a stranger, when she had been too shy to even touch herself, made her want to retreat and wrap herself up so that she could never be touched this way again. Despite her fear, it felt so good that she didn't want him to stop.\n\nHis fingers moved closer together, now sliding back and forth along her minora. So soft, like flower petals, and so sensitive, even the gentlest touch caused her to melt when implemented with Noah's skill. Without even noticing, she spread her legs and raised her ass like she was in heat, all to give him better access.\n\nThe slickness of the oil blurred the distinction between sensation and form as Noah took his time to stimulate every nerve ending. He was drawing out every step, savoring her softness, all while building up her anticipation. He slid his thumb around between her lips, not penetrating her, but simply continuing to explore her flesh. To so intimately know a woman, touch her without restriction, and be free to indulge his curiosity and inquisitiveness, it was freedom of the highest privilege. It was not taken for granted, as everything he did was for their mutual pleasure.\n\nHis thumb entered her, producing a blissful whimper from Sophia like the coo of a dove. She felt him inside her, continuing to explore. Despite her inexperience, the tightness was minimal, and she was wet as a ripe plum. Noah's massage had successfully removed all of the tension from her body, preparing her to receive him, but he still had more to do before taking her. He moved his thumb around inside her, stroking her front wall near her G-spot. Once more, Sophia's voice was slipping free, invoked by a pleasure that could not be bound by silence. Her whole body was reacting to his exploration, and she was raising her ass even higher, letting him run his lips and tongue across her cheeks.\n\n\"Ready for me to do the front?\" Noah asked.\n\nShe didn't trust her voice and simply rolled onto her back. She flashed him a nervous but tender smile as she felt his gaze skate across her naked body. He dribbled some oil on her stomach and began to rub it in. In nature, the belly was every animal's weakness, and all of her survival instincts told her to stop him and to cover herself, but she managed to restrain them and let Noah's hands slide across her. Like before, the massage was not just for her muscles, but for her organs. Her stomach, liver, kidneys, and everything else within her abdomen were getting a thorough rubdown and experiencing the same rejuvenation.\n\nFinally, his hands, slick with oil, found her breasts, and she tensed up for a moment, only to immediately relax and entrust herself to him. Even now, his movements were precise, almost surgical, her pectoral muscles receiving the benefit of Noah's skill. There was no shortage of sensuality, playfulness. Sophia sensed Noah's amusement and fulfillment in his access to her womanly shelf. The way he played with her nipples was masterful, making her squirm and whimper in happiness.\n\nAs his hand slid back down her belly, she eagerly spread her legs for him. Like before, he ran his fingers along her creases, all to make her lips purse and tease her. She felt like her womanhood was being sculpted, like clay on a potter's wheel. He wiggled his finger against the entrance, just the lightest tickle, a mere tease, but the change in her breathing and the sounds she made gave away her enjoyment.\n\nHe then directed his attention to her clitoris, erect from his touch and now begging to be toyed with. That single touch made her grab his wrist like a striking snake. Whether it was trust, pleasure, or affection, she immediately released him so that he could continue. Rotating, stroking, tickling, Noah pulled out all of the stops to pleasure her, turning her clitoris into a sexual lightning rod. She turned her head from side to side and arched her back, releasing a persistent whine.\n\nWhile he diddled her with his fingers, he kissed her all over, tasting every inch of her softness and licking the oil off her naked body. He tongued her navel and kissed her belly, ran his lips across her ribs, and sucked on her breasts, pulling on her nipples with his lips and making her whimper in ecstasy. Noah took her hand and put it on her pussy, guiding her fingers to mimic his movements.\n\n\"Don't stop, no matter what.\"\n\nShe understood his intent and took it from there. It was her first time playing with herself, something considered sinful in her faith, but she chased the sensations Noah gave her like a drug. Since she was busy, Noah stood up and got undressed. Sophia stared at him, pupils dilated from pleasure. They gazed at each other's naked bodies, each liking what they saw.\n\n\"Sit up for a moment.\"\n\nShe obliged, sitting up on the bed so that Noah could get behind her. She leaned against him, her back against his chest. The feeling of so much bare skin touching, sweat and oil mixing between them, the heat of two bodies joining into a sexual bonfire; just a day ago, the experience would have made Sophia faint, but at the moment, she was happier than she had ever been.\n\nShe continued playing with herself with renewed vigor while Noah once more played with her breasts. He was less gentle than before, tweaking her nipples in different ways to gauge her reaction. At the same time, he kissed her neck and nibbled on her ears, trying to give her as much pleasure as possible. Despite his efforts, he sensed Sophia doing everything she could to suppress her voice. He decided to push her. He returned his hand to between her legs, overlapping her hand. While she continued to play with her clit, he slipped his fingers inside her, penetrating her.\n\n\"My, you're so wet. It feels like my fingers are slipping into a hot bath,\" he whispered in her ear.\n\nShe began to squirm, and when he found her G-spot, it took all of her strength to remain silent. Until now, she hadn't been all that worried, but that was because the voice wasn't leaving her room. If she got any louder, all the other cadets in the dorm would hear her. It was approaching, her first climax.\n\n\"Sophia,\" he whispered, \"you don't have to stifle yourself. Make whatever sounds you want.\"\n\n\"I... I... can't.\" She had been open to everything thus far, focusing on the pleasure, but only because she dared not think of what would come next, what the following day would be like. Gossip, ridicule, judgment.\n\n\"The whole academy already knows you're here, and they can guess what's going on. Trying to keep quiet will just weigh down the moment. Let it out. Make every woman glare at you in envy and jealousy tomorrow. Let all the men know you came here willingly, that you made the choice to pursue your own happiness without shame. How often do any of them get to feel as good as you do now? Lord it over them. Put yourself above them, out of their reach, so that they may gaze up at you like a goddess.\"\n\nThe movements of his fingers became more forceful, attacking her G-spot rather than simply probing it. These sensations, their power, they scared Sophia, making her feel like the ground was coming out from under her feet. She felt it; something inside her would break if this went on. She desperately wished to tell him to stop, but she feared what would come out of her mouth if she opened it. The lewd, shameful things she would say, how she'd beg him to keep going.\n\nIt happened, Sophia cumming for the first time in her life. Noah had to wrap his arm around her to keep her still, but her voice slipped free, passing through the walls as if they weren't even there. Beneath her operatic moans, he heard the magical squelching sound, telling him he had struck oil. Rather than backing off, he went even harder, finger-blasting her beyond a simple orgasm and setting off a fountain between her legs.\n\nWhen finally he stopped, she fell limp and began to cry. Bella had a similar reaction when he made her squirt, but there wasn't the hysterical giggle mixed in this time. Instead, she seemed truly hurt. Perhaps he had gone too far.\n\n\"Sophia, what's wrong?\"\n\n\"I'm sorry! I'm so, so sorry! I made such a mess! Please, I didn't mean for it to happen! It just--\"\n\nNoah's laughter calmed her. \"Relax, you didn't soil the bed or anything like that. What just happened was entirely different from what you think happened.\"\n\n\"R-really?\" she murmured as he kissed her neck and ear.\n\n\"Yes. What you just felt was an orgasm, or rather, \"cumming\". Congratulations! When they are particularly strong like that, women can ejaculate similar to men. Think of it as liquid arousal. It doesn't always happen that way, but I take pride in my work.\"\n\nShe wiped away her tears and sniffed several times as she settled. He held her close, offering her all the comfort in the world while the flame of her courage was slowly rekindled. \"Cumming, you said? Can... can you make it happen again?\"\n\n\"That's the spirit.\"\n\nHe turned her around, laid her on her back, and then spread her legs. Before she could ask him what he was going to do, he dove, going down on her as though dying of thirst. Her moans were instantaneous, erasing any chance of protest. She writhed and arched her back as Noah played her pussy like a harmonica. He slurped up her nectar, nibbled on her labia, and bullied her clitoris with his tongue.\n\n\"Oh yes! Oh God, Noah! Yes!\" Sophia hollered as she ran her fingers through his hair.\n\nHe continuously altered his intensity and technique, never letting her get accustomed. One minute, he'd be so gentle, letting his tongue tickle her inner folds like he was licking sprinkles off an ice cream cone, one by one. The next minute, he'd lift her legs into the air and gorge on her pussy like a toothless horse eating an apple. He made her climax repeatedly through his efforts, and she even squirted a second time.\n\nA loud banging interrupted the moment. \"Sophia! Get out here, you whore!\" It was Galvin, trying to force open the locked door.\n\nNoah sat up and wiped the feminine dew from his lips. \"Pain in the ass,\" he muttered as the banging continued. He looked at Sophia, seeing all of the happiness and relief that had accumulated draining from her like blood. He leaned down and gave her a tender kiss. \"I'll just be a moment.\"\n\nNoah didn't bother getting dressed; he just strolled over to the door and opened it to the mad-eyed and feral Galvin. \"You!\" he shrieked with a dagger in hand. Before he could finish that thought, Noah kicked him square in the chest, knocking him off his feet and pushing all the breath from his lungs. He slumped down to the floor, and Noah kicked him again, this time in the face, smashing the back of his head against the corridor wall with enough force to leave a bloodstain. He then dragged the unconscious Galvin by the ankle and threw him down the nearby stairs.\n\nNoah returned to his room, having retained his erection throughout the whole process. Sophia was sitting on his bed, wrapped in his blanket. \"Is he gone?\"\n\n\"He won't be bothering us again.\" He then cupped her cheek and kissed her. \"It's just you and me now.\"\n\nShe returned the kiss and pulled him back onto the bed. He lay atop her, Sophia gazing at him with flushed cheeks and eyes full of light, her chest heaving from her fluttering breaths. There was still some fear and nervousness, but it was painted over by a sweet smile. He brushed back a lock of her scarlet hair.\n\n\"I'm sure you know what comes next, right?\"\n\nShe placed her hands on his cheeks. \"I do, and I'm ready. Just please, be gentle.\"\n\nNoah chuckled. \"Yeah, right, we'll see how long you keep that attitude.\"\n\nThey kissed, both with their lips and their palms as he held her hand. Their fingers interlaced, the same with their bodies as Noah penetrated her. The sheets were stained red, but his earlier efforts prepared Sophia, so she felt only bliss as he began his strokes. Just as requested, he was gentle with how he moved, a steady rhythm that made her back undulate and her toes curl. When his lips weren't joined with hers, he was running them along her neck while she held onto him for dear life, never wanting to let him go.\n\nWhen he sensed she was ready, Noah raised the rhythm a bit, plunging deeper and faster while still keeping it in the gentle range. Rather than moving in simple linear thrusts, he used his cock to draw letters inside her, writing out the alphabet with his hips to invoke one orgasm after another. Uppercase, lowercase, and cursive; every swirl, stroke, and dot would make her moan and claw at his back like a wild animal.\n\n\"Sophia, I'm going to cum,\" he said.\n\nShe didn't respond, just pressed his head to her chest as though trying to smother him. He gave a soft grunt as he ejaculated, filling her with his seed, and he felt her shiver in his embrace. They released each other, and Noah rolled off to the side, leaving Sophia gasping for air.\n\n\"So, that's sex,\" she murmured with a smile.\n\n\"That's only the first chapter of the book of sex, and it's a pretty big damn book, but yes, that's sex.\"\n\nShe rolled over on top of him, kissing his chest and licking off the olive oil like he had done to her. \"I think I like it.\"\n\n\"I had a feeling you would.\"\n\n\"I've never felt like this before. It's like I'm filled with energy. Can we do it again?\"\n\n\"As many times as you want. I hit all of your pressure points during that massage to boost your vitality. The night has just started.\"\n\n\"Then, can you do me a favor?\"\n\n\"Anything.\"\n\nShe moved closer and kissed him. \"This time, don't be gentle.\"\n\n\"I told you so.\"\n\nHe once more got on top of her, but rather than holding her hand, he pinned down her wrists and voraciously sucked on her breasts, while his thrusts, deep and powerful, bombarded her womanhood with a rapid-fire barrage. Her legs were spread wide, her feet high in the air, matching the pitch of her voice as he took her. What she considered intense just minutes ago had now been obliterated, like a snowman devoured by an avalanche. Time passed, and Sophia kept expecting him to pause to catch his breath, or for his strength to give out. He gave her no reprieve as he inflicted his lust upon her, to her amazement, fear, and ecstasy. Nothing he did hurt her, at least, hurt her in a way she didn't enjoy.\n\nNoah eventually sat up and turned Sophia on her side, their bodies perpendicular to each other. He held her leg and used it to pull her against him with every thrust, introducing her to the sensation of ripples moving through her flesh. His slams, their intensity made her breasts jiggle, and with his speed, they continuously shook like the raging sea. She gripped the sheets as if trying to drag herself away. She didn't know what kind of expression she was wearing, unaware of the look of manic intoxication on her face. Tears, sweat, saliva, her face was so wet, it was like it was melting. Compared to her, Noah was stoic as always, looking like he was going for a light jog.\n\n\"Ah! You're going to break me!\" she moaned as he brought her to climax.\n\n\"Don't worry, I'm not going to break you, just ruin you.\"\n\nHe pulled out of her and put her on all fours, though it took all of her strength just to hold herself up. She couldn't even catch her breath before he grabbed her hips and sent his battering ram smashing through her castle gates. There was nothing gentle about how he fucked her. He was precise as always, none of his actions rough or clumsy, but that focused force was enough to make Sophia feel like she was going to pass out. She tried to stay upright as long as she could, despite her limbs feeling like jelly. She soon lowered herself onto her elbows while her ass clapped against Noah's lap. The ripples moving through her body, it was as if they were throwing her heart out of rhythm. It didn't take long for her to be face-down on the bed with her butt in the air, letting Noah have his way with her and relishing every second.\n\n\"You're not falling asleep on me, are you?\" Noah asked.\n\nHe grabbed her wrists and pulled her arms back, lifting her off the bed. \"Oh Noah! It feels so good!\" she cried out as he continued fucking her like a ragdoll. He pulled her up against him, his lips finding hers and their tongues forming a double helix. He didn't ease up, his hips slamming against her while his fingers coiled around her soft throat and massaged her veins. His other hand was busy between her legs, playing with her clit. \"I'm cumming! I'm cumming!\" He fucked her through the climax, making her shriek in shameless euphoria as her arousal dampened the sheets.\n\nThey went at it for hours, Noah taking Sophia like a mad beast. There were no mattress springs to creak, but the bedframe rocked and banged like a dryer with a brick inside, and their voices moved far beyond the confines of that room. Throughout the entire building, all the cadets, these upper-class noble sons and daughters, spent the night staring at their ceilings, listening to the moaning, grunting, and swearing.",
        "The men with experience, be it in a lover's bed or a room in a brothel, now listened to Sophia's cries of euphoria and thought back to their past partners. Oh, how tepid and fake their moans sounded in comparison. The longer it went on, the more their confidence withered. Yet despite their shame, listening invoked a physiological reaction that had to be dealt with. As Noah pleasured Sophia, the cadets took matters into their own hands in silent humiliation. As soon as they were finished, they'd try to fall asleep, but still, the moans kept them awake and compounded their shame.\n\nSimilarly, the women with experience remembered their own escapades and couldn't help but feel cheated. Rather than shame, they seethed with envy towards Sophia. They tried to picture what was going on in Noah's room, what he was doing to invoke those noises from her. Like the men, they would masturbate to try and ease their tension, imagining themselves in Sophia's place. Many young women were tempted to leave their rooms, and a couple came close to knocking on Noah's door in the hopes of joining in, only to chicken out and return to their beds for a sleepless night.\n\nIt was well after midnight when Noah and Sophia finally stopped to take a break. Noah was sitting against the wall with Sophia resting her head on his lap, all smiles as he stroked her hair. It was so hot and humid in the room that their sweat refused to evaporate.\n\n\"This has been the greatest night of my life,\" Sophia murmured. \"Hours ago, you were just an acquaintance, a stranger, but after you say the things to you say, make me feel the things I feel, what can I possibly do but love you?\"\n\n\"That's not love; that's just really good sex. Trust me, I've had enough of both to know the difference,\" he said, making her laugh.\n\n\"I mean it, though. I don't ever want this night to end, this moment. I don't ever want to walk out that door. I don't want to go back to that world.\"\n\nNoah took a deep breath. That day when he saw her in the infirmary, bathed in the summer sun, he had desired her the same way she now desired him. However, if she stayed with him, it would not end well. In order to help her, he couldn't give her what she wanted. She deserved someone who truly loved her in all the ways he no longer could.\n\n\"It won't be the same world. Things have changed, and you now have room to breathe and make new choices, but you don't have to think about those right now. All you have to do is enjoy the moment. Focus on the present and bask in all your feelings. The confusion, the excitement, the newness, the intensity. Hold on to these sensations and cast all other thoughts aside. Soon, the dust will settle, and everything will be different, but until the sun comes up, there's nothing but you, me, and this room.\"\n\nSophia began to tremble, overwhelmed with guilt. \"After everything we've done, who would take me? Who would accept me?\"\n\n\"Someone who loves you. They are out there, and you'll find them. I'm not the person you are fated to be with. In another world and in another life, I could have been, but I have my own path, and you have yours. I am simply a catalyst to help get you moving. I'm a happy memory for you to carry until you find someone who will make you even happier. Do you know someone like that? Is there someone you love?\"\n\n\"Yes,\" she said softly.\n\n\"Then go to them, and if they love you, they'll accept you.\"\n\n\"I don't know if I can face her after this.\"\n\n\"Her?\" He felt Sophia tense up as if she had been flash-frozen. \"Wait, do you mean Alexis?\"\n\nShe sat up, staring at him with eyes full of terror and embarrassment. \"Please,\" she said, on the verge of tears, \"please...\" She couldn't speak the rest, as she was cut off by Noah's laughter. It had been a long time since he laughed this hard, all to Sophia's confusion and eventual annoyance. \"Just because you don't approve of two women doesn't mean you can laugh at us.\"\n\n\"It's not that,\" Noah said as he settled himself. He looked at her with a smile. \"You noble types really do like to keep it in the family, don't you?\"\n\nHer sour look twisted into a smile and an ungraceful snort set off a laughing fit for the two of them. For Sophia, that laughter was like releasing a breath she had been holding for years, though that happiness soon faded.\n\n\"I'm sorry about this. I always see you together, and I'm sure you have strong feelings for her. I suppose I like both men and women, but she's not the same way. I'm afraid it would never have worked between you, but she does cherish your friendship.\"\n\n\"It's ok. When I started spending time with Alexis, I decided that whatever would happen would happen, and I'd mirror whatever feelings she had for me. If anything, this just makes her more interesting to have around. Besides, she and I work well together. I know I can rely on her when things go wrong.\"\n\nSophia blushed and smiled, then put her hand over her heart. \"I feel the same way.\"\n\n\"Listen, she's my friend, so you are as well. I'll support the two of you and your relationship. After tonight, Galvin's hold on you will be next to nonexistent. You don't have to be around him. Stick to Alexis from now on, and I'll watch over you both.\"\n\nHearing his words, Sophia pounced on Noah and hugged him tightly. \"Thank you, Noah,\" she said while crying tears of happiness. \"Thank you for everything.\"\n\nHe patted her back. \"You are welcome.\" He then gave a bitter chuckle. \"Oh, Alexis is going to fucking kill me tomorrow.\"\n\n----------\n\nIt was a cold, windy morning, dark and overcast, but the horn had sounded, signaling it was time for laps. No one in the upper-caste dorms was quick to rise, not after a night of almost no sleep. They all wanted to stay in bed and get the rest they had been robbed of, as well as avoid the bitter chill. However, the punishment for skipping laps was severe. They all slouched and stumbled through the dorm lounge, no one in the mood to talk. Then, there was Sophia.\n\nShe should have been more tired than any of them, but her smile was as bright and warm as the noon sun. She adoringly clung to Noah's arm as he escorted her to the entrance, past the mentally-frayed cadets who had been forced to listen to their evening fun into the wee hours of the morning. The ratio of anger to jealousy was about even. Galvin was gone, no one knew where, and Noah didn't see Alexis among the crowd.\n\n\"Come on, I'll walk you back to your dorm. You certainly can't run morning laps dressed like that.\" The cloak she was wearing was warm, but underneath, she only had her neglig\u00e9e and underwear.\n\n\"Forget laps; let's just go back up to your room,\" she said as she rubbed her head against his shoulder like a cat.\n\n\"Don't worry, I'll see you at breakfast. You know where Alexis and I sit.\"\n\nAs they walked across the frosty academy grounds, Sophia squeezed his hand. \"Do you really think she'll forgive me?\"\n\n\"I'm more worried about her forgiving me. I should probably talk to her first.\"\n\n\"I just... now I feel so guilty.\"\n\n\"That's the \"morning after\" effect, and what we're doing right now is call the \"walk of shame\". Don't worry, it happens to everyone. You have nothing to feel guilty about. You took ahold of your own life, made your own choices. I'm sure Alexis is far from happy right now, but you did what you had to so you could break free of Galvin and survive. Now the two of you can focus on your future.\"\n\n\"I love her.\"\n\n\"I know you do, and you want to spend your life with her, don't you? If it takes her a year to forgive you, that's one year deducted from fifty years of happiness. It'll work out.\"\n\nAfter leaving Sophia at her dorm, Noah went to the field with the rest of the cadets to run laps. After the previous night, he didn't have much energy, so he simply used his clone to do it. By now, there was no point in hiding his physical abilities, so he had it run at maximum speed, surpassing almost every other cadet and leaving them in the dust. He still had to run double laps due to the Seraph incident, but he got them done quickly. The problem was that he didn't see Alexis in the crowd. Normally she would be at the forefront, but she was missing.\n\nHe finally found her, not with his eyes, but his ears. Chopping wood, breaking glass, and grunts of frustration; she was in the sword-training field, hacking away at one of the training logs. He approached, and though she was aware of him, she refused to acknowledge him. He went with it and stood by, watching her swing her sword over and over again. It didn't take long for him to notice that her hands were bleeding. How long had she been out there?\n\nCrack!\n\nAlexis's sword broke against the wood, but she didn't retrieve it. She stood where she was, shoulders heaving as she sucked in air, with her breath fogging in front of her. Finally, she released an anguished scream and fell to her knees. The sky was brightening, and snow was beginning to fall.\n\nNoah approached her and put his hand on her shoulder. \"Alexis...\"\n\nShe smacked it away. \"You promised! You promised me you wouldn't touch her!\"\n\n\"She was insistent. She wanted her freedom, and this was the only way she could do it, to make sure Galvin couldn't take her.\"\n\n\"It was supposed to be me! I was supposed to be the one to save her! I was supposed to be her hero, not you!\"\n\n\"She saved herself. My only intent was to give her the opportunity to do so. In my defense, you only told me that you were cousins, not lovers. If I had known...\"\n\nTears began to roll down her cheeks and fall like the snow around them. \"Ignorance isn't the same as innocence. Do you know what it was like, listening to the two of you? Hearing you deflower and corrupt the only person I've ever loved? Hearing her moan and say those things and knowing... that I could never make her as happy as you did?\"\n\n\"I made her happy for one night, but you two can make each other happy for the rest of your lives. I played my part, and I'm stepping aside so you can play yours, so you can have the future with her that you always wanted.\"\n\n\"You really think it's that easy? You think I can just forget everything you two did? At least when she was with Galvin, I knew that I was the only one in her heart. How can I be with her when I know she'll always be thinking of you? It doesn't matter what your intent was; you left your mark. You don't want her? Well you're stuck with her, and I can never get her back or undo what you did.\"\n\n\"I told Sophia that I would support the two of you and your relationship, that I would be your friend and oppose those who criticized you.\"\n\n\"Friends?\" Alexis got to her feet. \"We're not friends. I don't think we ever were, and the more I learn about you, the more I wonder why I thought we could be. You lie, you cheat, and you have no sense of shame or honor. You're everything I hate. How could we ever be friends?\"\n\n\"If that's how you feel, I can accept that, but don't take it out on Sophia. Don't give up on her.\"\n\n\"Just stop. You're not my friend, just the man who stole the woman I love. Go away and leave me alone. It's how I've always been and always will be.\" Alexis turned around and began to walk away.\n\nNoah took a deep breath. At that moment, he could have told a million lies, spoken any line like a skilled thespian, and made her believe it, shedding crocodile tears so easily that all her rage would have vanished, but he knew he wasn't supposed to, that he didn't want to. He felt it, the truth on his tongue, that tightness in his chest. He wanted to speak the words normally saved as a deathbed confession or left in a suicide note. Even if he couldn't tell her everything, he wanted to tell her something, and for once, he wanted it to be true.\n\n\"I was married once.\" Those words echoed through the cold air, and Alexis stopped, held still by the lingering hope that she could live in a world where she didn't have to hate him. \"I was married, a long, long time ago, longer than you could imagine.\" She was confused and skeptical, but she looked him in the eyes. \"I'm not the young man you think me to be. I'm far older, so old that I've lost count of the years. I have no home, no family, only fading memories and a desolate future.\"\n\n\"Even if I was willing to believe you...\"\n\n\"Centuries ago, I was in love with a beautiful woman with crimson hair. And I... was happy, happier than I had ever been, happier than I probably ever will be again. She wasn't my first wife or my last, but she meant more to me than any other.\"\n\n\"What was her name?\"\n\nNoah paused, feeling his voice trembling against his control after so long and his eyes stinging in the cold, dampened by emotion he no longer thought he could feel. \"I can't remember.\" Alexis didn't know how to respond, her mind swept clean and her breath frozen in place. She could feel the truth in his words, the realness of the pain in his voice. \"I can't remember her name. I can't remember her face. I can barely remember the life we lived together. All I do remember was that I was happy, and I don't even know why anymore. I just keep telling myself that I was, in the hope that I can be again.\n\nI lost her to time, just like I've lost everyone and everything else. Ever since then, whenever I see a woman with that crimson hair, I pursue her, hoping I can be happy like I was all those years ago, hoping I can remember what it's like. It's been so long, I don't even know if I do it by choice, but that wasn't my intent with Sophia. My goal was only to help her break free of Galvin, and when she showed up at my door, I had no intention of laying a hand on her. Yet deep down, maybe I still hoped that for one night, I could remember that happiness. What happened with Sophia, I wouldn't have done that to you if I had known, and I'm sorry.\n\nListen to me. The passionate, honest love that you feel down in your heart of hearts, to be bound to your soul mate until your dying breath, I'm incapable of feeling that, but you aren't. I can't give it to Sophia, but you can. She loves you just as much as you love her and wants to be with you forever. Me? I'm simply a memory, one that will dim and fade as you give her a million more. I'm meant to be forgotten, but you aren't. Take it from me, someone who has lost what you're walking away from; you don't know how long a lifetime alone is, and you don't want to know.\" He held out his hand to her. \"Now, please, come and eat breakfast with us.\"\n\nThe final snowflakes landed softly around them, and the clouds opened up and let the morning sun shine. Alexis took his hand.\n\nPlease comment! Tell me your thoughts!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "isekai",
        "fantasy",
        "action",
        "friendship",
        "rough patch"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-infinite-bk-03-ch-06"
}