{
    "title": "Chinese Girl Adrift in Bangkok Ch. 05",
    "pages": [
        "Chapter 5\n\nWhat would an onlooker see? An auction, OMG a slave market? Three small Asian girls parading, taking turns on a small stage in Mr Somchai's office, where I had danced alone last night, dancing in identical skimpy bikini's, dancing for men's pleasure, for men in dark suits. Two with dark complexions, one with paler skin, occasionally casting nervous glances towards their audience.\n\nThe men are sitting on the sofas where I sucked Mr Sin only yesterday, beside the desk on which I had been fucked so mercilessly. The men are studying the dancers, fully aware that all of us girls who work in the club are whores. They are assessing the earning power of the whores, how much guys will pay for their small tight pussies. They are making bids for them. They will take the girls away... to Cambodia, Myanmar... who knows where, beyond the reach of their families, their friends, their old lives? I can guess what is in their minds. Thankfully I am not one of them...\n\nAs I had followed the other two girls out of the kitchen towards Mr Somchai's office, towards the auction that would change my life irretrievably, feeling in equal measures a pounding excitement and a mounting dread and leaving a trail of drips from my pussy, we bumped into Mamasan, holding the wrist of the third girl. She just tutted when she saw me, sent the missing girl after the others and told me instead to serve drinks to Mr Somchai and the visitors, then followed the girls towards Somchai's office.\n\nThey had already given their orders, so I waited behind the counter while their drinks were prepared. Mai approached me on her way to the stage. She gave me a hug.\n\n'I was worry. I thought that Mamasan Two will sell you.' She whispered into my ear.\n\n'OMG, yes. I was really scared.' I replied, starting to calm down a bit.\n\nI watched as Mai trotted up the steps onto the stage joining several other girls as they started to dance. I watched them for a while dancing, intrigued to see them just as the audience had watched me.\n\nMy mind wandered. I thought of my friend Siobhan who was a dancer with a famous contemporary dance company in London. I had sometimes watched her performing from the wings. As I am fond of dancing, and sometimes told her I wished I could have become a dancer... if only I had been taller, she sometimes taught me dance moves, but little could I have imagined in those days that I would indeed become a dancer, albeit in a very lowly form of the art... as a gogo girl, a striptease girl... a prostitute.\n\nMy thoughts stayed happily back to London. If I were back home at this moment, I guessed it would be evening. I would be sitting watching TV with my husband sipping white wine. I would probably be thinking of calling in tomorrow at our local Waitrose supermarket for groceries after work. I would be planning activities for the weekend, arranging a dinner party for some work colleagues of Robert... OMG! Please, not Clive and Jay! Perhaps visiting Siobhan in Islington where she had a lovely apartment. Heading down Bond Street with the girls?\n\nOh God, it was all so normal... all my friends back there doing the same things, perhaps thinking of me now, just as I am thinking of them. But I can picture them all now, Siobhan maybe doing a workout, Mandy and Szu Wei, also single probably discussing hot guys from work, Alex, Emmy and Mariko with young families making school arrangements, coffee mornings... our comfortable lives.\n\nThey must be picturing me in just the same familiar places, doing the same things we always do, not in their wildest dreams picturing me... Me!... in skimpy bikini, whoring in a brothel... Me?!... the beautiful, clever, elegant and admired Dr Ying, performing stripteases, kneeling under tables sucking strangers cocks and gulping their sperm, displayed, touched, used and fucked so many times, the debased slut I had become. I was jolted from this reverie by a call from the girl behind the bar. That world seemed almost dreamlike now... a different universe. This is my new reality. I am a cheap whore in a brothel, get used to it girl.\n\nI was passed a tray with the drinks for Mr Somchai's party. I made my way along the back corridor to his office, knocking before I went in.\n\nAs I entered I noticed the girls were standing beside the small stage. One of them was standing on it now, gyrating to the music. Then she stripped off her bikini and continued dancing nude. I was identically dressed to the girls at the stage as I walked over to the sofas where the men were sitting with Mr Somchai and Mamasan. I handed out the drinks. I noticed that there were actually three guys in suits and one in police uniform. I had expected Mr Sin to be there, but he wasn't one of the party.\n\nAs I finished serving them, one of the suited guys grasped my wrist and pulled me onto the sofa. Bikini-clad, my small barely covered body was squeezed between him and the policeman who I quickly gathered was a senior Bangkok police officer and clearly on familiar terms with Mr Somchai. I wondered if I would find an opportunity to quietly ask for his assistance in escaping this place. A glass was raised to my lips and I drank it all down before spluttering... whiskey! My head was soon swimming slightly.\n\nI watched enthralled as the girls on stage were appraised and assessed, with an awful fascination, knowing that if Mamasan hadn't come back at that moment it would have been me now back on that stage. The very thought made me shiver in liquid excitement. Once I had been bid for, it would have been too late to reverse. It would have been a matter of saving face, so important here. I would be on my way to a new life. My body was tingling with excitement, my eyes glued to the stage,\n\nI shuffled trying to get comfortable almost submerged between these large men. Seeing this I was hoisted up onto the lap of the guy who had first grabbed me. Laughing, the police officer next to him took hold of my legs and swung them up onto his lap precipitating me sideways and next moment I found myself lying horizontally across the laps of three guys.\n\nVery soon I could feel hands beginning to explore my body. One hand was inside my bra toying with my nipple, causing little electric shocks to jolt my body.\n\n'Oh Sir,' I mock-protested, then giggled and pouted my ruby lips. A finger was presented to my mouth and I sucked on it enthusiastically.\n\nMy legs were separated and another hand slipped inside my panties. I felt fingers inching down over my smoothly shaved mons, seeking my moist sex. Oh God, I shuddered with desire. I wriggled, adjusting my position, moving my legs apart inviting the exploring fingers to enter me. I lifted my pelvis, offering my opening to the probing fingers, making little sounds, begging for them to touch me. I moaned as a finger reached my honeyed centre and dipped inside.\n\n'Kitty, you are juicy little plum.' The senior police officer said, his fore finger deep in my overflowing pussy, while his thumb brushed over my clitoris. 'I guess you are illegal?'\n\nI looked up at him in sudden panic, at the same time that I squirmed in his lap, shivering at his touch. He laughed at the effect his words and fingers had.\n\n'Don't worry, don't worry! Just see you are good girl, then no need to worry. We all friends here. We look after you.'\n\n'Little slut.' Someone else said, and there was more laughter when I nodded in agreement.\n\nMy bikini top was already untied and was rapidly slipping off. I felt another hand pulling on my thong. It was slipped down over my ass while I lifted my legs to aid in its complete removal. I wanted to be naked in their hands, and very quickly I was. I was so being looked after.\n\nYes, I was a complete slut, as they could so clearly see. It was obvious to them that I was a wanton whore who they didn't need to treat with the normal respect and care they would show to a woman, that my body was simply a plaything for the indulgence of male pleasure, a receptacle for whatever they chose to give me. And from the way my naked\n\nbody was writhing, the way I was moaning incoherently, as multiple hands held and squeezed me, roamed over and delved into me, it was obvious to them that I also knew and accepted this.\n\nI realized then that I had little chance of assistance from the Police, my suspicions about Mr Somchai's links to the police were confirmed. I felt very small and alone. I had no choice but to accept the attentions of these men who controlled me totally.\n\nMy arms were stretched out beyond my head, other hands grasped my thighs. I was held, splayed open; I couldn't move even if I wanted to, which I really didn't, as more fingers entered my dripping slit. Oh God I was wet. My secretions spread over my upper thighs, trickled between my legs, smeared over my lower belly. God, I thought... I must be making a mess of their suits, not that I really cared!\n\nThe music continued its loud incessant beat. Beer was sipped intermittently; the naked girl spread open in their laps, me, squirmed in the grip of so many hands; the girls danced, bids were made, money promised. Fingers slid into my wetness, how many? Whose? I didn't know, or care. People moved around me, mouths fastened to my hard nipples, licking, sucking. I wriggled and twitched, hooked on the fingers, my whole body tingling with warmth. Voices were raised excitedly, laughter rang in my ears, and my body shook in spasms, as I came hard and wet, moaning and bucking against the fingers deep inside me.\n\nOh God, how had I got into this? How could I escape, did I even want to? Had my whole life, my privileged existence, my hard work, my studies always been leading to this moment? What would my family, husband, friends say if they could see my naked body writhing, pale and nude against the dark suits, moaning lasciviously in the arms of this group of strangers?\n\nWould they help me? Would my husband? Would he even think I was worth helping when he saw the debauched whore I had become? Was this my destiny... the whole trajectory of my life reaching fruition here, in these piercing rapturous sensations possessing my body? I didn't know, I had no control at all over what was happening to me... I simply revelled in a blissful feeling of utter submission.\n\nAs I moved on these laps I became aware of bulges forming in their trousers. My hands released, I sought out the bulges, feeling them, caressing them. The hands gripping me worked in unison and I was flipped over, like the tiny sex doll I was, to lie face down in their laps. I fumbled with a zipper feverishly and freed a long thin cock that sprang to attention in my face. I took it into my mouth immediately, setting to work with my hand and tongue.\n\nI was delirious, the combined effects of the whiskey, the music, the fingers playing with me incessantly. My body was shiny with perspiration... OK, sweat! A flat hand landed with a thwack on my succulent ass. I crawled back onto my knees to reach the police officers cock which I began to suck too. The guy closest to my feet was playing with my ass, sliding his hand wetly between my thighs, sliding in and out of my pussy, pressing on my ass hole intermittently.\n\nI could feel him manoeuvring behind me, and next moment while I suckled on one cock and wanked a second, I could feel a third smearing itself against my smooth ass cheeks. Whoever it belonged to was butting it up against my pussy, pressing on my labia. I was sopping and feeling the cock at my entrance, I bucked backwards, pushing my labia apart, to enclose his cockhead, pushing backwards against my tightness until I swallowed his glans completely, tightly, wetly in my warm liquid channel.\n\n'Oh God, Oh fuck.' I moaned loudly.\n\nThe owner of the cock groaned in pleasure and clapped his hands down on my ass with a loud smack. This was followed quickly by my squeak muffled by the cock stuffed into my mouth. His thick hands grasped my slender waist and he began thrusting his cock into me, jerking me forwards onto the cock in my mouth which rammed down my throat. I gagged and lifted my head, panting, and turned to look back at the stage. With the guy behind pounding into me from behind I gazed at the girls on the little stage. They looked back as they danced, seemingly fascinated by the scene of unbridled lust taking place on the couch. I was so lubricated I couldn't even tell if the cock skewering me was wearing a condom.\n\n'Unhg!... Unhh!... Ungh!...Uh!...Uh!... Nnnnng!' I uttered in time with my pounding.\n\nI was incapable of words by now, sometimes wincing in pain, sometimes wincing in piercing pleasure, the sounds I was making depending on whether a cock was in my mouth and which cock because they had shifted around. I was now floating in a plane of shocking, lewd pleasure, punctuated by brief pain, until I could contain myself no more...\n\nSuddenly my mouth opened, and I tried to cry out, but nothing came. My head arched back in silent, ecstatic abandon, tensing my muscles, squeezing on the cock as I was consumed by a shuddering orgasm. I collapsed down on the couch, falling away from the cock.\n\nIn a moment it was reinserted into me as I lay flat down on the couch. I was dimly aware this was a different larger dick, whose, I had no idea. I just lay and accepted it as this thick new cock gored my limp, defenceless body. I moaned softly to myself in my delirium gradually coming back to full consciousness. I was aware of being lifted until I was sitting on the lap of my not-unwelcome assailant, still impaled on his rod. I faced towards the stage as he fucked me, as he pushed his turgid penis up into me. I was vaguely aware of men coming into the room and others leaving.\n\nAnother penis was presented to my face and I grasped it firmly, rolling the foreskin back to reveal his moist cockhead. Faster and harder I rolled the foreskin repeatedly over his glans, wanking him vigorously while my pussy in turn was opened, distended, fucked. I was bounced up and down on the cock impaling me, while my head bobbed back and forwards on the cock in my mouth.\n\nEventually, in unison, the owners of these two cocks, enjoying opposite ends of my body groaned in pleasure. My mouth filled with ejaculate while I could feel spurts of cum filling the condom deep inside me. I was lifted off the cock in my pussy and placed back on the couch. Almost immediately I was pushed back onto the sofa, and given another sip of whisky then dragged like an inert sex-doll to the end. My legs were separated and I could feel another penis presenting itself to my pussy. I breathed in sharply as I was penetrated yet again.\n\nI was in a daze, faces loomed before me, I recognized Mr Somchai, and the senior policeman and Mamasan and her deputy at different points. I was entered again and again, clinging to male bodies as they fucked me. I remembered sitting astride someone, I think it was the policeman, riding his cock, pushing it deeply inside me as my body undulated against him, bending forwards and kissing him deeply, sucking on his tongue. Eventually the blurred images dissolved into blackness.\n\nDid I fall asleep or faint? I opened my eyes and found myself lying on the floor beside the couch. Men were standing with their backs to me. I realized the auction was over. I raised myself so that I was sitting with my back against the sofa.\n\nMy body glistened wetly with semen and sweat. I smelled of sex. Raising my hand to my face, I found sperm on my cheeks and I could taste it still pooling in my mouth. I licked cum from around my lips and pushed more dollops of the gloop from my chin towards my mouth where I could swipe it up with my tongue and gulp it down. I felt the last of the cum slide down my oesophagus The men stood up talking to each other, shaking hands, no longer interested in the naked girl behind them, looking up at them. She had served her purpose. The senior policeman at least turned and bent down to pat me on the head, then walked to the door with Mamasan. The three girls were being led away too. I didn't see them again.\n\nI stood up shakily looking around unsuccessfully on the sofas for my bikini. I supposed the guys had taken it as a memento. At that moment Mamasan Two came back in, regarding me coldly.\n\n'Kitty, you are mess. Go shower now. Quick!'\n\nI did as I was told. In the bathroom, I regarded myself in the mirror. My hair really was a mess, matted in places with cum, my makeup was smeared, more bruises had appeared on my body. My pussy, my whole pelvis felt as though it had been worked over. I shivered as I looked, gazing in wonder at what I had become. I showered taking my time, washing my hair carefully then dried myself to glowing, then wrapped myself in a towel and went back downstairs. Mamasan Two saw me coming down and beckoned me into the changing room.\n\n'Mamasan say you wear now.' It was James' new red micro minidress.\n\n'Oh, I can get underwear?' I asked hopefully.\n\n'Stupid girl, you been lucky already,' was all she said.\n\nResigned, I stepped into the dress, wriggling as I pulled it up. She handed me a makeup bag and another pair of heels. I looked at myself in the mirror. The material was thin, and I felt it was pretty clear that I wasn't wearing panties, but maybe only if you looked closely? Since it was deeply cut at the back, my ass was barely covered, and clearly I wasn't wearing a bra. It ended over my upper thighs just below my pussy. I would have to be careful it didn't ride up. Since my boobs were firm and upright, my modest cleavage was apparent, but not too prominent without a bra. But my nipples created two just discernible bulges.\n\nI put on the stilettos, which looked cheap and plasticky. I leaned towards the mirror applying makeup. I put on a new film of glossy red lipstick and then pulled my hair over one shoulder. Stepping back, I flounced from side to side studying my slim body barely concealed by the short backless dress, my shapely legs actually well set off by my heels. God, I look like a slut. But, I felt, half pleased, at least I looked a cute and sexy pint-sized Asian slut.\n\nI had seen girls looking just like me in hotel lobbies here in Asia, in China, in Hong Kong. It was pretty obvious they were hookers same as me. I followed Mamasan Two to the bar, but stopped when I saw Mamasan with Mr Somchai and Mr Sin. Mamasan saw me and beckoned me over. The men were talking in Thai and English.\n\n'Ah Kitty.' Mamasan smiled, putting her arm around my shoulder possessively. 'I got your things now, in my office, was a dress and your bag. Come and get tomorrow when you get back.'\n\nI wasn't sure what to say. I really wanted them back. But now leaving the bar, even if it was with Mr Sin rather than James, here was a possible chance to get away completely.\n\nThe two men looked at me appreciatively. I looked briefly up at Mr Somchai, feeling myself colouring, looked at this man who had possessed me completely, used my body so totally last night. Then I looked fearfully at Mr Sin. He was larger than Mr Somchai, with an air of wealth and power, dressed in a well-cut navy Thai-silk suit, and Gucci horse bit loafers on his feet. A golden Rolex gleamed on his wrist. The two men towered over the slim Chinese whore facing them.\n\n'It is honour for you to be bar fine by Mr Sin, Kitty,' Somchai assured me.\n\n'Thank you Sir,' I flashed a quick look back at Mr Sin, then looked back down at my feet.\n\nThe two friends shook hands, while Mamasan pushed a small, black plastic clutch into my hand. I looked briefly inside seeing packets of condoms and lube. She handed me a small plastic card-sized pouch which she opened holding up to me. Business cards for the club... OMG my business cards! There was my face clearly pictured, my measurements, my availability for full service, the clubs address and phone number.\n\n'Oh no, thank you, please Mamasan I don't want.' I protested.\n",
        "I was shocked to see myself on the cards, and again felt a rising sense of panic. I tried to push her hand and the cards away, but she gave me a severe look, thrust the box into my hand and closed my fingers over it. Reluctantly I put the cards in my clutch.\n\nMr Sin didn't seem to want to speak English, although I had heard him speaking fairly fluently, and didn't attempt to speak further to me. He took my arm possessively and led me firmly to the door of the club. It felt strange. I had spent the best part of three nights working in this place as a whore. Now I was about to cross that threshold once again, cross the portal that had led me down into my life of prostitution. I didn't feel like the same woman who had entered a few long nights before.\n\nAs we left the club, for the first time in several days I felt the warm balmy air of Bangkok on my skin. When I arrived here a few days ago, I had seen bargirls with guys, or waiting for passing trade. Now here I was walking down the street in skimpy backless red dress and fuck-me heels. I felt quite exposed with no underwear and was anxious to avoid bending over. I thought of running away, but dressed like this, I wasn't sure what response I would get from the police. We passed some windows where I could see my reflection. I saw a slim girl in very short backless dress, long slender legs, stiletto heels, smooth black hair over one shoulder.\n\nI never wear dresses like this. I always felt that a longer dress followed my pleasing contours much better. My favourite dress back home is a Herve Leger bandage dress that I feel accentuates my curves, ending at lower thigh level. A dress like my current one lacks any elegance, mystery, beauty... it just screams sex. I noticed people, many tourists, looking at me as we walked. From their looks it was obvious they knew exactly what I was... a hooker with a client.\n\nMr Sin stopped a taxi and we climbed in. I wasn't paying much attention as he spoke to the driver and we moved off. I looked at Mr Sin, but he paid me no attention whatever. He was engrossed in his phone. Maybe I was just being paranoid about him.\n\nEmerging from the narrow back streets we hit Sukhumvit Road. I looked out noticing the surroundings becoming more familiar. I realised we would be passing the Marriott Hotel in a minute. It was almost 11.30pm and I wondered if many people would be coming and going. Then I saw it, the tower rising above the surrounding buildings. I was surprised as we turned off the main road, and then... oh no! I don't believe it... We were turning in to the Marriott! He's staying at my hotel.\n\nThe taxi rolled to a stop. A doorman stepped forward and opened the door on Mr Sin's side. He got out. I sat for a moment really not wanting to move.\n\n'Miss?' The doorman looked at me. I stretched my legs out, my heels touching the ground and I stood up awkwardly, pulling down my dress. I hoped he hadn't caught a glimpse of my pussy.\n\nOMG I prayed I wouldn't see anyone I knew. My pulse was racing. Could I get away from him and get to my room? But I didn't have my room key. We walked towards the door, Mr Sin leading. The security guard and another doorman looked up, and stared at me sharply. I was aware the doorman who had opened my door was also staring after me, at my bare, braless back and ass. Oh fuck, I felt myself colouring again and to my dismay, my nipples were hardening, producing little bulges in my dress. Together with the smoothness of my ass it was pretty clear I wasn't wearing underwear.\n\nMr Sin had passed through the door already. The security guard approached me saying something in Thai. It didn't sound polite. I stopped, looking at him with a worried expression on my face. The second doorman now came forward looking disdainfully at me. He said something to me, then quickly took my small clutch from my hand, opening the zip. He held it open for the security man, revealing it to be full of condoms and a tube of lube. He took out a condom packet holding it up to my face.\n\nThen he opened the card box and took out some cards, handing one to the other guy. They looked at my picture on the cards, then back at me with a mixture of disapproval and disgust, saying something about this being the Marriott and not a place for a girl like me, but still pocketing my cards. A group of Western people passed us looking to see what was happening. I looked down, not wanting to see if I recognized them. I felt like dying. At that moment Mr Sin evidently realized that I wasn't with him. He came back out and walked over. The doorman immediately stood to attention\n\n'Oh, Mr Sin, I'm sorry I didn't see you Sir.' His tone had changed completely. Clearly Mr Sin was a regular guest here and well known to the staff.\n\n'This my employee.' He said firmly, but in broken English. He was clearly used to being obeyed. The two hotel men looked at each other and at me doubtfully. It was obvious to everyone that I was a whore.\n\n'Yes?' Mr Sin looked at them... there was a slightly ominous tone in his voice.\n\nThe doormen didn't want to get into an argument with a wealthy regular hotel guest. They stepped back handing me back my open clutch. In my distress, it slipped from my fingers, landing at my feet just as a spry elderly English couple approached the entrance. The clutch spun on the marble discharging condoms and cards while I froze. The helpful English lady smiled at me not really taking in my attire, while I saw her husband's jaw drop as he caught my eye. His wife had bent down, before the security man could assist, kindly reaching out to help collect what she expected would be my normal possessions.\n\n'Ohhh!' She uttered as she realised she was holding a tube of lubricant and picking up condoms, as she read my business card. Crouching at my feet, she raised her eyes, looking up under my micro dress and I saw her eyes widen as she saw my newly shaved pussy lips. She stood up quickly, holding the clutch out to me at arm's length looking in discomfort at the speechless whore in front of her.\n\n'Here you are child,' she said trying to force a smile. I made a wai sign, bowing to her and taking the clutch. They hurriedly walked into the hotel talking excitedly to eachother. I clearly caught the word, prostitute. Mr Sin then took my arm and led me into the grand lobby.\n\nProminently placed between the check-in desk and the lift lobby was the help desk for the conference, with its large promotional banners. Fortunately it was unmanned at this time. Mr Sin left me here while he went over to speak to one of the receptionists. I had checked in for the conference here when I arrived at the hotel.\n\nWhen I stood on this very spot four days ago with my friends from UK, I had been excited to be here in Bangkok and still felt a bit nervous about my approaching presentation. I was an ordinary married woman, a doctor... respectable... conservative. I simply couldn't have conceived that this could happen to me, that I would be standing here dressed like this, a cheap slut without underwear, who had been bar-fined from the brothel where I had been working for the last three nights.\n\nOMG, my nipples were jutting through my dresses thin fabric, my pussy was wet, I was dripping, I could feel my juices trickling down my inner thigh. I was aware of the concierge casting disapproving looks from me to Mr Sin. Then I saw the elderly couple walking to the lifts. They looked at me, then looked away quickly, fortunately their lift came quickly. I saw Mr Sin waving me over to the lifts. I started walking to the lobby, when I was aware of two figures coming out of the nearly deserted bar.\n\n'Ying?' A voice called out to me questioningly.\n\n'Shit! Ying!!?' The other voice spluttered in amazement.\n\n'Oh Hi... Sorry I got to go,' I said without thinking, momentarily meeting their gaze before looking away quickly.\n\nThey were two British colleagues from Birmingham and Nottingham. I looked straight ahead and walked past them to the lifts, my face burning, while they gawped at me with open mouths. I just looked a complete slut, and they quite clearly couldn't believe their eyes. I could feel them looking at my naked back and swaying ass as I joined Mr Sin at the lifts. I was relieved that the lift door opened immediately. Mr Sin put his arm round my waist leading me into the lift.\n\nI turned round to see my two acquaintances approaching, still staring at the sluttish vision before them. I prayed for the lift to close before they got to us, which it did. Mr Sin pressed the button for the 10<sup>th</sup> floor. My own room was on the 12<sup>th</sup> floor. If only I could get there I would be safe, but how? I was again wondering what to do... Mr Sin was standing beside me holding my arm and I certainly didn't want to get into a fight. I would probably be ejected from the hotel before I could give some kind of explanation.\n\nThe door opened at level 3 and a group of people came in. We stepped sideways, the lift now being quite crowded. I recognised some of them from the conference. I looked fixedly ahead, feeling more eyes on me. One guy was standing right in front of me, looking intently down at my face. My nipples were very prominent through my dress and brushed against him.\n\nThe lift was having a go-slow and the door kept opening and closing. It didn't seem overloaded. There were two guys behind me on my other side from Mr Sin. I was aware of them sniggering, and they clearly knew I was a whore.\n\nSuddenly I felt a hand on my dress on my ass, I didn't move. This seemed to be taken as an invitation to explore further. I felt the fingers move down below the hem of my dress onto my upper thigh. I remained immobile breathing heavily. The fingers moved up, under my dress onto my ass cheeks. I darted a sideways look, and the guy next to me winked at me. He was definitely from the conference and I prayed he didn't recognise me. His fingers moved between my legs touching my bare pussy. I remained frozen, immobile, feeling myself tensing up. His finger tip touched my wetness, and then began plopping in and out of my slit.\n\nThe lift started moving again. I was trying to restrain myself, putting my hand to my mouth and biting on my finger. I was starting to squirm slightly against his hand, feeling his whole finger now inside me. My juices were flowing freely. Oh god, I wanted to cum. I was desperate. Level 7... level 8... doors open... fuck... hold on girl.... Finger moving in my pussy... OMG... door closing... I can't hold it much longer... level 9... I cleared my throat trying to suppress a moan, level 10... thank God. Mr Sin stepped forward and I followed, the guy pulling his finger out of my pussy, and flipping up my dress to give the remaining occupants of the lift a view of my bare ass. I looked back as I left, smiling sheepishly at them.\n\nWe walked along the thickly carpeted corridor stopping outside Room 1014. My own room was two levels above, Room 1210. So close. We went in. OMG, at last, subdued lighting, quiet, cool, comfort... it was my familiar world. Looking in the mirror though, seeing the small Chinese slut I had become, I suddenly felt out of place. Oh fuck! Did I really now feel more at home in the brothel?\n\nMr Sin went into the bathroom while I sat on the bed. This made me feel a bit awkward. In the brothel I had adjusted to their world, and in a way, I didn't feel like myself. Now I was back in my normal affluent world, The room was similar to mine. I knew what was coming now. Mr Sin returned and walked over to the window, surveying the city of night below him, and the tower block opposite. I could see some rooms illuminated, people moving around.\n\nHe spoke on his phone, periodically looking over at me. I had the impression that he was speaking about me although I wasn't certain. At length he put the phone down. Turning and beckoning to me. I went to him. He towered over me.\n\nHe took hold of my dress and lifted over my head. I stood naked before him in front of the window. He looked me as though he were appraising a prize animal. I looked down at my feet while his scrutiny continued, my arms hanging limply by my side, as his hands roved over my body, feeling, squeezing, kneading, testing.\n\n'You got passport? ID?' He asked. I shook my head. Why did he want to know that? Was he planning to take me somewhere I wondered?\n\nHolding me away from him he delivered a sharp slap to my ass, observing the firmness of my buttocks and causing me to squeal.\n\n'OK, it no problem.'\n\nHe felt the flatness of my stomach, and his fingers slid down into my thigh gap, and flicked over my pussy. I was already primed from the lift, and he slid two fingers into my wet slit. I shivered at his touch, like the slut I was.\n\n'Mr Somchai says you like to see Phnom Penh, like to work in Cambodia.' It was a matter of fact statement, but I was stunned.\n\nHis fingers were moving in and out of me and he could feel me contracting against him. I felt faint. I was breathing heavily. A feeling of unwanted pleasure was building inside me. His hand was wet, my thighs were wet. I struggled to remain upright. I slumped against him as he caught me, holding me firmly.,\n\n'You like... yes?' Was he asking if I liked what he was doing to me, or if I was looking forward to my future as a hooker in Cambodia?\n\n'Uh huh, Ohhh!' I moaned, not really thinking, just wanting a cock inside me.\n\nHe lifted me as he would a child and put me on the king size bed. He undressed unhurriedly as I lay with my legs spread, wet pussy gaping. I watched him. Naked now he got himself a drink from the minibar, Johnny Walker Black Label I noticed.\n\nHe came over naked and sat on the edge of the bed. At that moment his phone rang. He swung his legs up onto the bed and lay back resting on the plump pillows, seemingly oblivious to my presence. I guessed he was speaking in Khmer.\n\nI crawled over to him, sprawling over his legs. I took his soft cock in my hand and studied it, palpating its length gently, then squeezing more firmly. I placed its tip to my lips, kissing and licking the opening, then sucking his cockhead into my mouth. I could feel it stirring as I played my tongue over the underside of the glans. I withdrew my lips from his dick with a slurp and crawled round, lifting my leg over his chest to sit astride, with my back to him. Then I lay forwards, presenting my ass and pussy to his face, in a sluttish attempt to distract his attention from his call, hoping he would lick me.\n\nI returned to his dick sucking the head back into my mouth, while I wanked his shaft with a firm grasp. He was stiff now, quite similar in size to Mr Somchai I noted. At least I was more used to larger cocks by now. As I sucked him, I pushed my ass and dripping pussy back into his face. It was hard for him to continue talking and he turned his head to the side holding the phone away from me. I smeared my wet pussy against his cheek and chin. I was surprised as he switched into speaking English.\n\n'Ah sorry, it's just a whore I got here, Yes, take a look,' and he held the phone's camera up to my pussy. '...Yes that's true, she is, a real slut... Yes, we are coming back tomorrow. I got to leave here, got important business in Battambang... OK, OK, bye for now.' He put the phone on the bedside table.\n\nI was sliding my lips up and down his cock, each time it reached the back of my throat, trying not to retch. I pressed my tongue against him rubbing it against the underside of his glans, and sucking gently as I pulled back. He was rock hard now I was pleased to see. I withdrew my lips to his tip and wanked him hard against my open mouth.\n\nOMG why didn't he touch me, I was desperate to cum. I pushed my pussy into his face longing to feel his tongue. All I got was a slap. He pushed me unceremoniously to one side, I suppose he knew his whores well, guessed how my pussy had been used, so I could hardly blame him if 69 wasn't on the cards.\n\nHe lay back again, and this time facing him I climbed over and straddled his hips. Looking into his eyes I leant forwards and kissed him, I raised myself and reached between my legs taking hold of his cock. I manoeuvred it to my introitus smearing it up and down between my wet labia, over my swollen clitoris, ready, oh so ready, to be penetrated.\n\nOh god I wanted cock inside me, any cock, I really didn't care, I was desperate, like a proverbial bitch on heat. I was ready for him. Now! ...Now!... But he held me, stopped me from sinking down on him. I whined struggling to free myself. I knew it was a pathetic sight, totally humiliating, but I no longer cared. I was a desperate whore and yes, shameful to admit I was begging my pimp to push his cock up my cunt. I struggled and twisted trying ineffectually to push down on his ram rod cock while he held me with an amused expression on his face.\n\n'Ohhh, no! Why? Whyeee? Fuck me! Fuck me!... Please fuck me!' I whined at him in desperation.\n\nHe nodded at my clutch and I realized he wanted a condom. I leaned over fumbling with the zip and retrieved a packet. I tore it open as quickly as I could and then in what could only be described as desperation, grabbed his cock and rolled it down his hardness, hand over hand. As soon as it was on, holding the base of his jutting penis, I placed my entrance right over him, and impaled myself deeply, painfully. I cried out at the exquisite pain as I plunged up and down, joyously on his longed-for cock, running my hands through my hair, lifting and scrunching it. I knew I looked a sluttish mess but didn't care.\n\nI whimpered non-stop at the delicious sensations as my stretched pussy slid with moist friction, clasping tightly his turgid shaft. My cries were accompanied by his grunting as I bounced up and down, thrusting myself against him. He grasped my slender waist firmly, sliding his hands up my sweaty body to my boobs. I didn't care who was fucking me, I just wanted a man, any man in me. It was utterly humiliating, it was glorious, I knew truly I was a whore.\n\nHe lifted me from him, his cock gradually emerging from my vagina, and tossed me back onto the bed like a ragdoll, like the little Chinese slut I was. He loomed over me and jerking my knees apart he placed himself at my entrance. He drove into me violently, mercilessly. He fucked me roughly, painfully as a shameless girl like me deserved to be fucked. I was pounded back into the bed again and again, my breath driven from me. Oh God I wanted this. As waves of pleasure rose ever higher, and I knew I was close... oh yes! Please, please...Yes!. Roughly he took me, and I revelled in the sheer lust I saw in his face. Open mouthed I gazed up at his contorted face, unable to speak coherently as our glistening sweaty bodies were locked together.\n\n'Oh...Uh!... God, Oh, Unnhh! Uhh! Unnnh, Uh! Oh fuck! Unhh!' Was all the speech centres of my addled brain could muster as faster and harder he drove into me.\n\nI screamed out at last in exquisite liquid agony, overwhelmed by a blinding wave of ecstasy that surged through my body, I shuddered repeatedly, squeezing his cock within me, causing him to groan in pleasure, but he didn't come. The reverberating wavelets of pleasure gradually waned leaving me limp and disoriented now as he withdrew from me.\n\nKneeling on the bed he grasped my ragdoll body and pulled me over so that I was bent over the edge of the bed, with my thighs hanging down and my feet on the floor. He got to his feet and moving behind me pushed me forwards so that my elbows were resting on the bed. My head drooped forwards resting on the bed. He moved apart my legs and I felt his hand on my ass. His fingers again entered my sopping pussy, then withdrew.\n\nBut immediately I felt the wet fingers hovering against my asshole, and then pushing into me. The finger that penetrated me was quite painful. Removing it, he reached for the lube, and I felt the gel cold on my hole. He reinserted his finger, one then two, more easily this time working the lube into me. I could feel it as he moved them about testing, stretching. It was less uncomfortable now. My whole body was tingling, alive, glowing... I was awash with elation from my last orgasm.",
        "Then suddenly I felt the larger mass of his bare cock, smothered in lube, pressing at my sphincter. I really didn't want this. I was an anal virgin and I didn't want to lose it to this powerful scary man. I was scared.\n\n'No please... not that! Please...Sir.' But I knew my wishes were irrelevant.\n\n'Whore! Your pussy, your ass, your body... you accept!' Was his response, accompanied by a vicious, open hand burning slap. I cried out in utter submission, a tiny naked Chinese girl completely at the mercy of this powerful man.\n\nBut there was no mercy. The pressure increased. I grimaced against the bed, my muscles tightening. But resistance was futile, and my sphincter surrendered to the inevitable, relaxing slightly as his cock began its entry.\n\nIt was a strange sensation, the pain concentrated at the opening due to this unaccustomed stretching. Again, as he pushed beyond my sphincter the pain eased. I thought of the feeling of relief, and actual pleasure, as my sphincter relaxes when my bowels open! I wondered how other women felt. I certainly had never asked my London friends whether they had anal sex.\n\nOnce he was buried to the hilt in my ass, at least I wasn't feeling pain. Maybe it was something I would have to learn to enjoy? In fact there was a satisfying sensation of being filled. He was thrusting into my ass now, jerking me against the bed, my swollen pussy also pressing on the sheets, while his hands moved from my boobs to my waist. I clenched my fists, clutching the bed sheets. |\n\nHis belly was pressing down on my back, our sweat mingling. Yes sweat, not the ladylike perspiration I dabbed from my forehead, on a hot Summers day at an open air concert at Kenwood House on Hampstead Heath; no, this was frank whorish sweat. I felt tiny under him as he grunted out his lust on my little Chinese whore body. I was utterly possessed, controlled, dominated as he slammed into me again and again.\n\nWhack! His hand landed again on my ass. Whack! I shrieked, my ass cheek stinging. Whack! Again, and several more times I could feel red wheals forming on my buttocks.\n\n'Unh! Nuunngh!, Uhh!,..Unngh!...' came from my mouth. 'Ouch!' As his palm met my smarting skin once more.\n\nHow was it possible? Me! Intelligent and beautiful, desired, unattainable... married! Me! A cheap prostitute from a back street brothel getting sodomized in a hotel room ... And yet, somehow, I was beginning to enjoy this feeling aided by my pussy being rubbed against the bed edge. I was helpless under his weight... was this the joy of submission I wondered? I felt used, humiliated, a strangers cock stuck up my anus; I was conflicted, glowing, buzzing, tears streamed down my cheeks at the horror of what was being done to me and the elation of the feelings it was evoking in me. Oh God, I shouldn't, but I could feel myself getting close to orgasm once again.\n\nI started pushing my ass back against his delving penis, willing him to fuck me harder. Can you believe this girl? I was utterly without shame now. Yes, I was a complete cum slut. He was panting and grunting with exertion now, and I was moaning loudly as I was jerked forwards by his body slapping against my ass. His penis jack-hammered into my rectum, the shock waves pulsing through my whole pelvis.\n\nEventually he drew back, his cock exiting my anus with a wet plop. I was panting too, my body heaving from the exertion, both physical and emotional. He re-entered me, easily this time and I welcomed his cock as he gripped my waist firmly. Again and again I was jerked into the bed until I could hold back no longer. I clutched the bedclothes in my fists, pressing my head down onto the sheets, screwing my eyes tight shut and gasping in guilty delight as I came again, crying out loud in an overwhelming surge of sordid pleasure.\n\nThe pounding didn't let up and his grunting soon approached a crescendo until I felt his spasms, his body juddering, butting against me, and his hot cum spurting into my anus. Several more times he jerked into me, then flopped right down on top of me, crushing the breath from me. I was sobbing barely audibly into the sheets while his groans of pleasure gradually subsided and we lay, both utterly spent. Eventually he rolled away from me, his cock emerging from my anus with a sloppy pop. I could feel his cum dribbling out of me. I was exhausted, panting, sobbing quietly, tears streaming, a used sodomized slut.\n\nHe lay beside me pulling me to him, spooning my small, exploited body, his arm draped over me. Very soon he was asleep. I lay there held beside him held, still breathing heavily, my body still glowing all over. I lay in his arms, not my husband's arms, thinking, contemplating.\n\nHow had I allowed myself to become a plaything for these men, how had they come to dominate me so completely? I knew they could do, had done, anything they liked to me. Things I had never dreamed of only days before I had been fucked in all my holes, used for pleasure again and again. And yet it was all so simple here. My life of luxury back home already seemed so distant, My husband? Did I love him? I was fond of him for sure and we had a good life together. My family and friends who loved and respected me; how had I let them all down? And yet why didn't I feel more remorse?\n\nI knew I was in grave danger, of my life changing irretrievably. Mr Sin planned to take me to Cambodia. If I got there, there would be no escape for me. I would never see my husband and family again. My career as a doctor would be gone. I would be a person who disappeared in Bangkok. I supposed there would be a furore on TV, in the press about a missing British doctor. It would be assumed I was murdered I imagined. It happens. I don't think anyone would even think to search in the brothels of Bangkok, and even less in Cambodia.\n\nI would have no money, no friends. My life, my future would be as a whore in a cheap brothel, a street hooker? Oh God, I could feel a tingling warmth between my legs as I contemplated my future. I guessed that in the morning Mr Sin would drive me to the border with Cambodia. I knew I wouldn't be able to resist him. If I didn't get away tonight I was lost. I must try and stay awake, think of a plan. I was so tired, If I fell asleep now, I might not wake up until morning and it would be too late.\n\nGet up girl. He is sleeping beside you. Now is your chance to escape. He won't hear. Oh my God, a simple life, my pussy at the service of any man who wants me. My body owned. Who knows how many times I will be bought and sold over the coming years. I am going to be trafficked once and for always into a life of prostitution. I have already commenced in this life. I am a cheap whore, is it already too late? No surely not? I feel so weary, my eyelids weighing down, I'll just close my eyes for a moment... My eyes drifting closed... my consciousness slips away... sleep envelops me."
    ],
    "authorname": "zoeleong",
    "tags": [
        "asian",
        "chinese",
        "asian whore",
        "chinese whore",
        "prostitute",
        "brothel",
        "bangkok",
        "pregnancy risk"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/chinese-girl-adrift-in-bangkok-ch-05"
}