{
    "title": "How to Make Her Scream for You",
    "pages": [
        "Written for all men who wish their wives/partners would have more sex with them, and for all women who wish the men in their lives knew how to really please them. \n\n*\n\nFrustration...it's a bitch...it can be good, really good, or very, very bad. The idea is to make the sexual frustration great for her, so that when the time comes, she is so wild for you, the sex is mind blowing for both of you. This can happen every time, if you know what to do, and how to approach her the right way. \n\nThere are THREE KEYS to mind blowing sex.\n\n1.) Knowing Your Partner's Needs\n\n2.) Planning: Take Your Time\n\n3.) Tease Her: Make Her Wild\n\nNo matter how tempted you are, and I know you are, DON'T skip down to number three. Take a few minutes and learn something other women will probably never tell you, but ALL of them wish you knew. \n\n1.) KNOW YOUR PARTNERS NEEDS: You HAVE to know what she likes and doesn't like, not just sexually, but emotionally as well. If she is frustrated emotionally, you aren't gonna get anywhere with her. Meet her emotional needs first. If she is not feeling loved, or appreciated, if you have troubles in your relationship, then take the time to fix it. THEN focus on the sexual needs. (Usually bad sex is what creates the core of relationship problems.) \n\nNot every woman is the same, and not every woman will reach orgasm the same way. Some never will because their partner is too impatient, or her EMOTIONAL needs aren't being met. If your too embarrassed, or impatient to ask why she isn't enjoying it, (if she isn't climaxing, she isn't enjoying it) she will be very reluctant to have sex with you. If your wife/partner consistently refuses your advances, makes excuses, rolls her eyes, snorts, laughs, and won't give you any...YOUR most likely the source of the problem. WHY? An emotionally and sexually satisfied woman will not refuse her man sex, at least for long. She will hunger for it, like a cat in heat. \n\nIf you can't answer these questions, don't be so quick to call her frigid. When a man really knows what his woman wants, and actually takes the time to give it to her, she will almost NEVER refuse him intimacy. She won't WANT to refuse you. In fact, once you master the three keys, she may be the one begging you for sex. THE QUESTIONS:\n\ni. What are her sexualfantasies?\n\nii. What gets her in the mood?\n\niii. What turns her off?\n\niv. Is she stressed, depressed or angry? \n\nv. Is she feeling loved by you?\n\nvi. Is she feeling desirable to you?\n\nvii. How does she like to be touched?\n\nviii. How does she hate to be touched?\n\nix. How does she like to touch herself? \n\nx. How does she WISH you would touch her?\n\nxi. What makes her feel more relaxed?\n\nxii. What makes her feel uncomfortable?\n\nxiii. What makes her hot for YOU?\n\nxiv. What makes her hesitant to initiate sex?\n\nxv. What makes her hesitant to tell you want she likes?\n\nAsk her these questions first: \n\nxvi. What kind of relationship do we have now?\n\nxvii. What kind of relationship do you want?\n\nxviii. What would it take to move our relationship to a \"10\" today, next week, next month? \n\nxix. What can I do for you today to make your day better? Ask every day. At first she may say \"nothing\" If she does, do something spontaneous anyway, like pick her a flower, fold the laundry, rub her feet, let her pick the movie, brush her hair for her, put the kids to bed for her, run an errand, make breakfast in bed, give her an extra long kiss goodbye, and a wink, dedicate a song to her, clean the kitchen for her, write her a love letter, rub her shoulders, plan a picnic, send flowers to her work, just because, ...there are a million little things a woman would love for you to do for her, non sexual things you can do...pick one and just do it without being asked. \n\nxx. Find out her Love Languages (Read The Five Love Languages, by Gary Chapman) Even if SHE doesn't know them, you will be able to recognize them. Make sure your filling her tank with the right gas...(you'll have to read the book)\n\nIf you don't know the answers to these questions, it's most likely the main reason you dont have the sex life you want. It's your job to find out. She WANTS you to know the answers to these questions, and probably doesn't know how to bring it up without risking you shutting her down, because women know most men HATE talking about the relationship. I think it's because most men don't know HOW. Men, dare to be different and actually talk about your relationship and how to improve your sex life. Use the questions as a guide. \n\nShe might think you've lost your mind because such a thing is so foreign to you, and it's the LAST thing she ever thought you would say. Feel free to print this out and show it to her, I don't mind. \n\nPick a time when the two of you are not busy, and NOT trying to be romantic. Shock her speechless and tell her your going to dedicate the next (however many days) making the relationship better, not just sexually. Make sure to take this seriously, be open, be honest, and make sure she knows all YOUR answers to these questions too. You'll get a MUCH better sexual response from her once you address her emotional needs. \n\nTHE HEART OF A WOMAN (From the book Captivating, by Staci Eldridge)\n\nAt our core, women are just more emotional than men. Learn to deal with it. We CAN'T change that, because we are designed that way. For a woman to feel most fulfilled, romantic and loved, she must have three basic emotional desires of her heart met: \n\n1. Every woman wants to be romanced\u2014and not just when your trying to seduce her into bed. We all have a desire to have a great relationship, and we recognize one when we see one. We recognize a bad one too. We KNOW when we are really, truly loved, and when we are not. If your not really in love with her, she knows it, trust me. \n\n2. Every woman wants to have a beauty to unviel. We want to know you find us enticing, attractive, lovely, radiant, sexy. There is a reason little girls like to twirl around in princess dresses and like hearing she is beautiful. Face it, you want to be the prince who comes to beauty's rescue. \n\n3. Every woman wants to know she is irreplaceable to you. Just how every man wants a battle to fight, and a grand adventure to go on, the lady in your life wants to know that she has a place in that adventure, by your side. She wants to know that you need her, (even if you don't think you do.) FYI, you need her too.\n\nThis first step is vital to a great sexual relationship with any woman. If you skip it, you'll be doomed to, at worst, very little bad sex; to, at best, mediocre sex, for the rest of your life. Ok, now for the good stuff you've been waiting for. \n\n2.) PLANNING: TAKE YOUR TIME\n\nThis is important, because women are like crock pots, men are like microwaves. It just takes us longer to heat up. Or, if you like, women are like diesel engines...once we get revved up, we can go for miles (hours). You're the mechanic. Some women like to be taken by surprise and ravished, but most of us need a lot more time to REALLY get into it. A woman's sexuality is like a plant. It needs to be tended to, taken care of, watered regularly. Being that you're the one with the hose, you're the gardener. It's up to you to water her plant, or it will wilt and die. (I'm talking foreplay here boys, not just intercourse.) \n\nWhen a woman's emotional needs are being met and she feels loved and secure in the relationship, she will bloom sexually as well. (ie: you have more, hotter sex). This is where asking all those questions pays off. Some women never really bloom because the man in her life is too selfish to meet her needs\u2014and has no freaking clue what he's missing! \n\nPay attention to her answers, and do your best to provide her with what she says she needs. Even if you don't get it all right at first, she will appreciate the effort you put into being romantic, and the more comfortable she will become sharing her sexual side with you. \n\nFor a woman, a fantastic night of great sex actually begins that morning. A woman actually requires several dozen non sexual touches a day. Basically, we like to be touched, but not alwasys sexually. Holding hands, hugging, a caress, can be enough to make us feel the first twinges of desire for you. If your not the one doing ALL the touching, she is likely to find someone who will. Here is an example: \n\nTake the time to romance her all day. Set the alarm at least an hour earlier if you can and just spend time kissing. Tell her what it is that attracts you to her, all the reasons you love her. Tell her how much you are looking forward to the night. Bring her breakfast in bed. Take a shower together...tease her a bit, but don't finish...no matter how much you both want to. The goal is to build up to the night time action. Take the time to kiss her at the door...until you can't wait to come home at night, and she can't wait to have you home. \n\nDuring breaks and on lunch, call her or text her...say something sexy that will make you both wish you were home right then. Arrange for her to get flowers sent to the house before you get home, or leave love notes where she will find them after you leave for work...in her car, in her purse, on the bathroom mirror, in the desk. Whatever.\n\nWhen you get home, unplug the phone, answering machine, disconnect the doorbell, cart the kids off to a sitter, or grandmas, or send them to a friends house for a sleepover, get dressed up, and take her out to dinner, it doesn't have to be expensive. Or make a meal at home. Cooking together can be very erotic...especially if its done naked. (Don't cook with hot grease if you go naked.) Feed each other...really talk to each other, not about kids, school, work, bills, health problems, the respective parents...nothing that will kill the mood. Be romantic, be silly, be seductive. Take your time and enjoy the meal. \n\nLater, take turns giving each other a massage...with warm, not hot, oils (even olive oil) tease each other...caress...discover every inch of her skin, find her non obvious erroneous zones, (collarbone, neck, ears, inner arm, feet, back of knees, her butt, her back, her sides)...its different for every woman, and she may not even know all of them. Help her discover all of them. Make her bloom. Patience is the key here. \n\nNo matter how impatient you feel, take a deep breath...do multiplication tables, count to 20, whatever works, and keep going. Focusing on her pleasure will pay off for you in the end when she calls you the best lover she's ever had, no matter what size you are. (It really doesn't matter to most women, especially if your focusing on foreplay. If your insecure about it, don't be. Trust me...if you tease her enough, she won't be thinking about that, and neither should you.) \n\nCaress her, kiss her, lick her...everywhere but her breasts and her clit. This teasing will drive her nuts. You may have to keep her hands off of you. Be prepared to tie her (use soft materials, use a square knot.) down so she can't hurry things up. Don't stop teasing her until she's begging. This process could take hours, if you're that patient. \n\n3.) MAKE HER WILD: Ok, now that you've sufficiently romanced, wined, dined, tickled, teased and tormented her, turn up the heat on her crock pot. Focus on her breasts for at least an hour...see if you can make her climax just by teasing them. Most women can, if they are aroused enough. Make it your goal of the night to see how many orgasms she can have. Don't be afraid to take directions, and let her know you WANT her to tell you what she likes. No matter how tempted you are, don't speed things up...keep teasing and her...go slow, no matter what she says. \n\nFind her clit, or let her show put your hand there, tease her with your mouth, lips, tongue, fingers, feathers, toys...be very gentle, and ask her to direct you...don't be shy...the better she feels, the better she will make you feel later. Don't use your teeth unless she asks you to. (Imagine how it would feel if she bit down on you) It doesn't feel good for us either. Make her cum a minimum of 3-5 times before you continue. At some point, she will probably become overly sensitive...back off a little and let her cool down some. Continued stimulation would be similar to her biting down on your balls right as your trying to come. It hurts, and not it a good way. A multi-orgasmic woman can have several climaxes one right after the other...you'll know your successful if she is moaning loudly, begging, calling your name, screaming, thrashing, biting, hissing, swearing, clawing, pulling your hair, begging you to stop but holding you to her, bucking, tossing her head, whimpering, crying, trembling, rolls her eyes in the back of her head and gets as stiff as a board, squirts, grunts, groans, claws the sheets, and finally, screams at the top of her lungs. \n\nOnly then do you finally enter her. Even then, don't just pound away at her, find a rhythm. She will be a wildcat...because you actually took the time to please her the way she always imagined someone would. \n\nNot every encounter has to be as detailed as this one, or as planned out, but the same amount of effort should be there, no matter how creative you get. Any man that takes the time to make a woman experience the best sex of her life, will never again be wishing he had more sex. She will never want to deny you sex, but you have to be willing to wait to get her to that point. Once she has, she will bloom sexually, and pursue sex with you probably several times a week, if not every day, twice a day, and you'll have moved well beyond mediocre sex. You won't be the one begging for sex, anymore, and she will begin seducing you, so long as you make sure to tell her what you like. You will never have to worry about her finding another man, so long as you keep in tune (you're the mechanic remember?) with her emotional and sexual needs, and once she blooms sexually and becomes a tiger in bed, you won't want to find woman either. \n\nPS...Every woman WANTS to be a tiger for the man she loves...he just has to help her to bloom first. "
    ],
    "authorname": "LilliannaMorgan",
    "tags": [
        "hot sex",
        "seduction",
        "wives",
        "foreplay",
        "husbands",
        "oral sex",
        "lovers",
        "desire",
        "romance",
        "making love"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-make-her-scream-for-you"
}