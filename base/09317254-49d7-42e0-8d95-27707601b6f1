{
    "title": "First Contact: Into the Arena",
    "pages": [
        "Chapter 2, Rider, and the crew of the Phoenix begin their journey to Trellis, finding the warrior society of Diraki in their way. Unintentionally offending a local chieftain, Rider fights for her crew. Not as much sex as the first installment, but I think you'll like what is here. A few good fights, too.\n\nAs always, please let me know what you think, your comments are why I write.\n\nThe creature across from me was Diraki, he had to be a good thirty centimeters taller than me and outweighed me by at least forty to fifty kilos, all of it muscle. His fur, a beautiful burnt umber, danced in the light breeze. The lavishly decorated horns on the sides of his head curled in a massive arc, making two full circles before ending in sharp points capped with decorative metal coverings; even for a Diraki, he was impressive.\n\nOlan crossed one hoof in front of the other, holding the talif lightly in his right hand, spinning the battle staff slowly as we circled the arena, gauging each other as opponents, both trying to identify the strengths and weaknesses of a challenger we had never faced before. He reminded me of a Satyr from ancient Greek mythology.\n\nI was tossing my talif, a wooden staff about one hundred centimeters long with one end shaped into a 'U,' from hand to hand, spinning it in lazy circles, trying to get a feel for the weight and agility of the weapon as I matched Olan's pace around the ring. I had used a quarterstaff before, and this was not too different.\n\nThis was a fight for dominance, not to the death, but serious bodily injury was not uncommon. It was a version of the combat the Diraki used to resolve challenges for positions on the Tribunal and ultimately for Kilar, the leader of the clan tribunal.\n\nIn keeping with tradition, Olan and I were both completely naked, that meant a little more to me since I didn't have twenty centimeter long fur covering my body, but not enough to cause me to lose my focus. I could still see his ample package between his legs, and if my limited experience with alien species told me anything, it was that it was probably as good a point of attack here as it was on earth, if it came to that. His fur also provided plenty of hand holds and his horns, while extremely dangerous, also probably meant he was a little top-heavy.\n\nThe purpose of the challenge today was to determine the fate of my entire crew; should I dominate Olan, we would be freed, if Olan dominated me, we would be sold into slavery. We moved around the circle in silence, the only noise was the crowd of Diraki watching from the seats around the arena, they were expecting a quick victory, their barbs and jeers directed exclusively at me. While I was hoping for the same thing, I was going to do everything I could to ensure it was not the one they wanted.\n\nDirak, as the locals called it, was about a third of the way to the gate Drell had been launched through. It had taken us three jumps to get here, being careful to keep them small, since none of us knew exactly what was out here. While Jazz and Drell had connected the dots and we knew where we were going, the Earth data was not what the Trellians would have considered navigation quality and we had no idea what was really in our way, so baby steps.\n\nOnce we were away from Earth, Drell opened up a little more on some things he had intentionally kept secret; he explained the dynamics of his family and gave us an idea of what we were walking into, thanking Granger for stocking the armory in the process. His uncle Curish, had held a grudge since Drell's father had taken the throne, believing it should have been his. Drell's grandfather had been very specific in his instructions and it had only made matters worse. There was speculation that Curish had played a part in the accident that had caused Drell's parent's death, but nothing could be proved. It was certain that he had sent Drell into exile through the gate; it was not going to be a happy reunion when we got there.\n\nHe also let us in on a little physics lesson. Space is full of waves, things like light and gravity, all impacting the fabric of space time. When you get into FTL, a lot of the equations change, and you can do some interesting things, for example, at about 2.0 FTL, it is possible to tune the frequency of your FTL engine to create resonant frequencies, much like harmonics in music when a chord is perfectly in tune. The effect of this is, it is then possible to latch onto one of those frequencies. If you choose the right one, you can increase your effective speed almost exponentially, and effectively jump massive distances through space seemingly instantaneously.\n\nThe gates Drell had mentioned were nothing more than huge FTL tuning forks, The Phoenix's top speed of 2.5 FTL, made it possible for us to do the same thing, as long as we took our time and didn't try to go too far in one jump, even in FTL, going through a star of or a planet would seriously ruin your day. We had covered to 4 lightyears to Alpha Centauri in as many hours.\n\nThe second jump was just as impressive but the third had been a challenge to tune and the same 4 lightyears had taken four days, Our plan was to use our next stop to analyze the engines and see what had caused the degradation. We had spent two months at the ship yard in San Francisco for a technical exchange; Drell had given the engineers there the schematics for the biomass replicator on the ship and done a deep dive into the theory and function of FTL drives with a group of physicists in exchange for some upgrades to The Phoenix.\n\nWe now had a photon cannon mounted on a swivel below the ship and twin rail guns on the bow. Adding in the time we spent surveying the star systems we had targeted for the first two jumps. Counting the two months in San Francisco, we had been on the ship for over six months, had become a very tight team, and had discovered serious options for Earth's expansion out of their solar system. My confidence in my piloting skills was close to matching what Drell was convinced I could do, Granger knew the ship as well as Drell did, and Jazz had mastered the nav and communications systems, both were becoming fluent in Galactic Standard in the process as well as picking up a lot of Old Trellian; most of which was not suited for mixed company.\n\nDrell also took it upon himself to expand our knowledge of Trellian culture; I believe what really happened is he finally saw Granger completely hard. Trellians don't have a concept of sexuality, there is no straight, or gay, or lesbian, or bi-sexual; sharing pleasure is just something you do with someone you like, or think are hot, or well, is hung like Granger.\n\nWhile humans had become much more liberal in their views on sex over time, there were a few taboos that draw surprise when mentioned.\n\n\"Granger,\" Drell's face took a serious tone. I had experienced his directness when it came to asking for sex, but Jazz and Granger had not, \"I noticed yesterday when you were with Jazz how large you are, I believe I would enjoy having you inside me, if you're agreeable.\"\n\nGranger dropped his coffee, the look on his face was priceless, his eyes darting back and forth between me and Drell and Jazz, Drell had inadvertently hit on one of those taboos and it had surprised the hell out of Granger.\n\nDrell's expression changed to confusion, \"Case, was that improper?\"\n\nI was trying not to laugh, \"Humans have become very open about sex but there are some things that our society still has issues with. For some reason, while we readily accept two women together, a lot of people have reservations about two men. I think you just caught Granger off guard, is all. To be honest, I was a little surprised myself.\"\n\n\"He's just,\" Drell blushed, \"well, so big, and I am the only one who has not enjoyed his...,\" he didn't finish the thought, but we all knew what he meant. You could have cut the awkwardness in the room with a knife.\n\n\"Sounds fair to me,\" Jazz chimed in doubling over in laughter as Granger tried to maintain his composure, \"but that would mean I would be the only one that had not been with Drell.\"\n\nHer joke slowly became reality as furtive glances flew around the table, we were all very aware of where this was going, all just waiting for someone to object; no one did.\n\nJazz smiled a huge smile, \"perhaps we should all just share,\" she opened a bottle of pheromones, dabbing her neck and wrist, wrapping her arms around me, kissing my neck and caressing my breast as she handed me the bottle. I looked at Drell as the pheromones filled my head, he smiled, and I dabbed my neck and wrist, sliding the bottle across the table to Granger.\n\nDrell grabbed it, \"he won't need them.\"\n\n\"Well, fuck me,\" Granger blushed bright red when he realized what he had said.\n\nI turned in Jazz's arms and kissed her.\n\nClothes flew everywhere, Jazz pinned me to the floor, dangling her breasts in front of my face as she ground her thigh into my crotch. I arched my neck, taking one nipple into my mouth, sucking hard, eliciting a moan for my efforts as I slid my hands down her side and grabbed her ass.\n\nShe took her time exploring my body, refusing to let me take any kind of dominant role. Her tender lips kissed and caressed my neck and shoulders, her tongue danced across my nipples before she sucked them, one and then the other, deep into her mouth while her hands explored my stomach and outer thighs. By the time she had left a gentle trail of kisses across my abdomen and her mouth had found my treasure, I had had one orgasm, when she sucked my clit hard and shoved two fingers inside me, I screamed in rapture as the second ripped through my body.\n\nJazz smiled at me as she slowly crawled up my body, burying her tongue in my mouth, sharing my own warm juices with me, I knew the taste on her lips, but it was subtly different sharing it with Jazz than it had been with Drell.\n\nWe collapsed together, both looking over as Granger moaned loudly, it hadn't taken long for him to get comfortable with Drell, Drell's pheromones had that effect, and I had an idea that Granger had secretly wanted to find out how powerful they were first hand.\n\nGranger moaned again as Drell slid him all the way down his throat, I was pretty sure no one had ever done that for Granger before, and when Drell rose up and lowered himself onto Grangers cock, he exploded almost immediately. Drell laughed a loud laugh, nestling himself on top of Grangers softening erection, I could tell from the look on Drell's face, he wasn't finished with Granger yet.\n\nThat gave me time to return the attention Jazz had given me, I had been with a few women before, but the sense of trust I had with Jazz, the closeness, made this time different, I made it my goal to make her beg me to stop, to elicit the same response I had gotten the first day of training when she had been the one to step forward and challenge me and I had forced her to say 'yield.'\n\nJazz was already soaked, her juices rich and powerful, amplified by the pheromones, I dove into her valley, sucking and kissing, licking, and caressing her womanhood with everything I had. Her back arched and she let out a soft cry, I stopped for a moment to enjoy the look on her sweat covered face. Once again, I went to work, I felt the tension begin to build as her body tensed below me, I refused to relent as the tremors and spasms coursed through her body, driving her higher, pushing her from one orgasm to the next.\n\nHer legs crossed behind me, pressing against my back as her hands found my hair, \"my god Case,\" she screamed as her body exploded once again. Jazz started laughing as I kept going,\" fuck, fuck, fuck, ok, I yield\" I finally relented, and she collapsed. Once again, our lips found each other, and we shared passionate, sloppy juice covered kisses.\n\nWe lay together for a few moments before I heard her giggle, \"I want that,\" she was admiring Drell's cock as it bounced up and down over Grangers stomach, Granger was oblivious to anything but his own pleasure. Jazz crawled over to Granger, kissed him passionately and slid back into Drell, guiding him inside her, I just watched as my lover and my two closest friends melded into a carnal masterpiece.\n\nDrell smiled at me, putting his hand out, beckoning me to join them. I walked over and let him guide me in front of him as his mouth found my still wet center, how he had the control to focus on all three of us was beyond me.\n\nJazz was first, Drell followed, exploding inside her, then Granger; Jazz and Granger collapsed into each other's kisses as Drell slowly laid back, pulling me down on top of him, pulling himself from Jazz and releasing Granger from his ass. My orgasm was close behind; I was helpless against his lips and tongue, the orgasm ripped through my body and I melted into Drell's arms. The four of us nestled together on the floor, sweat and sex and pheromones filled the air, but we were all too spent to care.\n\nWe lay there for a long time before Jazz and Granger got up and headed for the shower, Drell climbed on top of me, I opened myself to him eagerly, knowing that this was for just the two of us, him reclaiming what was his, I pulled his face to mine kissing him deeply, enjoying the significance of what we did as much as the orgasm it produced.\n\nOnce again, the smell of Drell's pheromones had changed, the sweet apricot aroma was richer, fuller more complex,\" Drell, what did you do,\" I gazed into his eyes?\n\n\"I marked you as mine,\" he leaned down and kissed me, \"Now, no matter what happens, you and I will be together.\"\n\n\"Don't you think you should have asked me before doing something like that,\" I wasn't really complaining and would have readily said yes, but I wanted to see him squirm a little? His face turned that beautiful rose shade of purple I had seen the first time he had gotten embarrassed.\n\n\"I thought we had an agreement,\" there was a confused look on his face?\n\n\"But then we had an orgy with Jazz and Granger; you shared your attentions with them,\" I couldn't do it, I laughed. His face turned a deeper shade of the rose purple. He explained a little more in the shower as we cleaned up.\n\nTrellians had very complex reproductive organs, the males produced three different ejaculates, one was for casual sex, they had a seemingly unending supply of this, it had the sweet scent of apricots I knew so well and is what Jazz got and what I had gotten before. The second was richer and more complex, it was for claiming a mate and that is what Drell had just shared with me and would be what he shared with me going forward. The third was for children, with Trellian women, it is what caused the cervix to open allowing the male's seed to impregnate the female. I found myself wondering if I would ever get to smell that one or it would even be possible.\n\nDrell also explained that there were many different types of sex with context playing a very large role in the activity. What we had done with Jazz and Granger was fun, it was pure enjoyment with no bonds other than our friendship; as special as it had been, it was nothing more than that. I ran the Old Trellian through my brain as I got dressed, realizing that they had almost as many words for sex as Earth Eskimos had for snow. Go figure.\n\nThe soft hum of the engines and the power core kept me company as I sat in the pilot's seat watching the galaxy fly by, as I had told Granger than night so long ago, this never got old. My mind raced with thoughts of what we had left behind and what would lay ahead, the idea of being Drell's mate was never far from my thoughts. Of all things, \"would his mother have approved,\" was what bothered me most.\n\nI smelled Drell before I heard him,\" tell me about your mother,\" I asked without looking as he slid into the seat to my right?\n\n\"She was strong and brave and very wise, like you,\" he started, \"my father was the king, but she was his chief counsel; he never made a decision without consulting her first. She had a way of seeing things that few others did; always the big picture, never bothering with petty things, always thinking about what was best for the people, never herself.\"\n\nWe sat in silence for a long time, \"she would have liked you, if that is what you're wondering.\"\n\nI smiled, \"I'm afraid you would have scared my mother to death,\" I reached for his hand and laughed.\n\n\"So, being your mate, what exactly does that mean? You're going to be king and I'm not Trellian.\"\n\n\"I honestly don't know. It has never happened before, so I guess we'll find out together. To be honest, it is one of the reasons I am glad Granger insisted on filling the armory; as much as I hope it won't, it could get ugly.\"\n\n\"Great, I fall of a cliff on-top of an alien, commit treason by helping him steal a bunch of stuff from my government only to help him get away, fly half way across the galaxy in his ship, fall in love with him, become his mate and possibly start a civil war in the process. It's a good thing the sex is so good,\" I laughed.\n\n\"You humans have the strangest sense of humor,\" he laughed with me.\n\nThe com alarm brought us both back to our senses, we were arriving at our next stop. There were communication signals; we had found a populated system. Jazz and Granger had heard it too and were at their stations before I had a chance to yell.\n\n\"We should probably drop out of FTL here, boss,\" it was Jazz, \"any closer and they might detect us when we do, and I'd like to know what we're getting into before we meet our new friends.\"\n\n\"Cannon and rail guns charged, just in case, sarge,\" Granger's voice drifted over my shoulder.\n\nI looked at Drell and he nodded, I flipped a few switches, overriding the nav computer and the blur of lights slowly came into focus, \"what do you see, Jazz?\"\n\n\"Binary sun, just like we expected. Six planets and I'm getting com traffic from three and four, as well as the asteroid belt. Almost like back home,\" she joked.\"\n\n\"Let the computer listen in, I want the languages in the database before we make contact.\"\n\n\"I'm only hearing one, so it shouldn't take long.\"\n\nWe sat in the darkness wondering what we were going to find. Jazz put the comm traffic on speaker, isolating one or two very active channels, we all sat and listened as the words slowly started to make sense in our translators.\n\n\"Trellians have a protocol for first contact, or do we land in an isolated hole until someone jumps off a cliff on top of us,\" everybody laughed?\n\n\"Well, you're three steps ahead of me, but for now, we just listen until we have an idea of what we're facing. Once we are certain we won't be eaten, we ask if we can stop by,\" he smiled at me.\n\nIt was amazing what we learned just by listening, they called their planet DIrak and themselves Diraki, the computer identified eight distinct dialects of their language, probably nationalities or clans.\n\n\"Check this out,\" Jazz seemed excited, \"I found some video,\" the view screen in front of us came to life. It was an arena, two large Satyr looking beasts faced off with what looked like a cross between a quarterstaff and a sling shot. The larger one had large circular horns like a North American Big Horn Sheep and was obviously male. The smaller had small spikes for horns and nothing between its legs; probably female. We watched as they sparred, the smaller of the two seeming to have the advantage over the larger until he delivered a brutal strike with his staff, knocking his opponent to the ground, placing the forked end of the staff around her neck, shouting \"I claim you,\" and brutally taking her. When they got up, the crowd cheered and he picked her up, carrying her out of the arena. Three more such contests followed, from the audio, we had just witnessed four Diraki weddings.\n\nNext, the announcer went into a rather long description of transgressions that one of their chieftains was claiming against another clan; that was one question answered, this was a tribal society. Two massive rams, for lack of a better term, walked into the arena; this would be a fight for the honor of the two clans. Nothing like what we had just seen, these were two trained warriors, they went at each other, dancing around looking for an advantage, striking with incredible force, countering each other's strikes; it was a brutal dance.",
        "The one with the deep burnt umber fur, finally dislodged his opponents talif, that was the name of the staff they were fighting with, delivering a brutal blow to his opponents' midsection, dropping him to his knees. With a wide circular strike, he knocked him flat, before pinning him to the ground by his neck. Moving behind him, he drove his cock into his ass, fucking him from behind, there was no \"I claim you,\" this time.\n\nThe defeated warrior lay there in the dirt, not moving as three males in robes walked into the arena, he got to his knees, bowing to the one in the center who took out a blade of some type and severed his horns from his head. The other two dragged him from the arena.\n\nThe victor picked up his victims talif and his horns and left through the same entrance he had entered.\n\n\"Whoever that is, remind me not to piss him off,\" Granger let out a nervous laugh.\n\nThe sound of metal on metal rang through the ship,\" Dammit,\" Jazz screamed. We had been so engrossed in the fight; we had failed to notice the two ships closing in on our flank. They had attached four grapples to our ship, possibly magnetic; I tested the engines, we were not going anywhere they didn't want us to go. Drell engaged the magnetic field around the ship reversing its polarity, still no go.\n\nDrell told Jazz what to send, something along the lines of 'we come in peace, please don't blow us out of space,' and she broadcast it in all eight dialects. I had Granger keep the weapons charged just in case.\n\n\"Do not resist,\" was the answer.\n\n\"Do you think a show of force of some kind is a good idea,\" I looked at Drell, \"maybe let them think we didn't fight on purpose?\"\n\n\"I don't know about that, but they're dragging us right into that small asteroid, we probably should do something about that,\" it was Granger.\n\n\"I got this one,\" I said as I targeted the asteroid with the rail guns from my seat, Granger had claimed the weapons from his station as soon as we tested them, but I had wanted to shoot something since we left Earth. It amazed me the lack of recoil from the rail guns, the asteroid exploded into a million pieces.\n\n\"Do not resist,\" came the message again.\n\n\"Then don't drag my fucking ship through your garbage,\" I let the computer figure out the translation.\n\nOur captors altered course around the asteroid field in front of us.\n\nThey were taking us to their home planet. Jazz ran an analysis of the atmosphere and it was a little higher in oxygen content than Earth, which would be good for us. We suited up in EVA's without the helmets and, against Drell's suggestion, with side arms. These guys had responded to force and I was not going to come across as weak.\n\nOur landing was a lot softer than I had expected, I shut down most of the ships systems and we gathered at the airlock, waiting for the knock we knew was coming. I went first, followed by Drell, and then Jazz and Granger.\n\nThere were four Diraki waiting for us, all male but none as impressive as the one we had seen in the arena, I was guessing these were young males, possibly equivalent to the privates I had commanded back on Mars. One had decorated horns; I was guessing he was a corporal.\n\n\"Females,\" the one with the decorated horns shouted, pushing past me and Drell, \"I claim this one,\" he grabbed Jazz by the arm.\n\nShe grabbed his hand and twisted, taking him to his knees, \"not available, hotshot,\" she put her foot in his chest and pushed him on his ass.\n\nThe other three jumped into action, between Granger and me, they soon joined their friend on the ground.\n\nI knew young males like these four from high school and basic training, spoiled rotten with no sense of accountability, I guess entitlement was not exclusive to Earth.\n\n\"Let's try this again, shall we,\" I reached out to the one with the decorated horns offering to help him up?\n\nHe slapped my hand away and shouted, we were soon surrounded by at least fifteen larger males armed with more than talifs, the one with the burnt umber fur from the arena stepped forward.\n\n\"Well, shit,\" I looked at Drell.\n\n\"I am Olan, you are to follow me,\" it was not a request. I led the way with Drell behind me and Jazz and Granger pulling up the rear, just like we had planned. The twenty-armed escorts and four pissed off teenagers, was something we had not counted on.\n\nI wasn't sure if Olan was a name or a title, the translator said it as 'champion.'\n\n\"Is that your name or your title,\" I asked in Diraki, my affinity for the language surprised even me.\n\n\"Both,\" he stopped and looked at me, \"how do you know our words,\" the look on his face said he was as puzzled as I was? His emphasis on our, indicated he was referring to their clan dialect, not the Diraki common language.\n\nI glanced at Drell and he was possibly more confused than me.\n\n\"I learn fast,\" I smiled. He nodded and turned around; we continued our walk. I found it strange that there was no one out on the streets.\n\nOur destination was the center of the city, A large circular building with eight smaller circular buildings surrounding it, each with a different banner flying outside a large pair of double doors. Except for the banners, the exteriors of the outer buildings were identical.\n\nTwo of our escorts opened the large doors and let the rest of us inside, the remaining escorts lined the walls of the room. I recognized the man in the big chair immediately, he had cut off the horns of the looser in the tribal bout with Olan. Olan walked over and stood behind him, whispering something in his ear. The young ram we had first met, ran up to the man in the chair and started blabbering to the older male, something about us assaulting him and damaging his honor.\n\nThe older male listened patiently and then motioned for the younger male to sit next to him,\" I am Pasit, chief of the mountain clan, my Olan says you understand our words,\" he began.\n\n\"Yes, I seem to,\" I replied.\n\nHe nodded, motioning me forward, \"Who are you and why are you here,\" simple and straightforward, I could handle that?\n\n\"I am Rider, from a planet called Earth. This is Drell of Trellis, and these are Jazz and Granger, also from Earth. We mean no ill will,\" I smiled.\n\n\"Then why did you assault my son; it is a grave offence to assault one of the eight families?\"\n\n\"He tried to 'claim' one of my crew. She is already claimed by another.\"\n\n\"Then it should have been settled in the arena, unfortunately, it is now a very grave matter as the honor of my house has been challenged.\"\n\n\"I apologize, but we do not know your customs.\"\n\n\"That is no excuse. Is this Drell your champion?\"\n\n\"No, I am my own champion.\"\n\nPasit turned to Olan and talked quietly for a few minutes, \"this is what will happen. You will fight my Olan in the arena. Should you triumph, you and your crew will go free. If not, my son will claim your Jazz and I shall claim you and your ship, your Drell and Granger will work in my mines,\" he slammed the base of his talif on the floor, \"it is decided.\"\n\nWe were led to the arena; tribal honor fights were scheduled almost immediately. I would face Olan first thing in the morning. Our room was comfortable but not overdone. Our servant was Duros, the ram that had lost to Olan, when I talked to him in his dialect, his face brightened a bit and I was able to get a little information about tomorrows fight, it would not be to the death; only prisoners challenging their conviction fought to the death, winners went free.\n\nHe explained the wedding bouts, mostly for show but the better the female did, the better her life would be with her new mate, every once in a while, a female would win and the poor male she married would never hear the end of it. Nobody ever challenged his claim on his mate though.\n\nOlan was the champion for the mountain clan, minerals, and lumber, it was one of the most powerful clans on the planet. Olan had been the champion for five years and had never been defeated. Duros was the champion of the plain's clan. We had heard the long list of grievances for which he had to fight for his clan's honor. They had lost some land and thirty females to the mountain clan, he had lost his horns and had to serve in the arena as a male without a clan.\n\nWhen I ran out of questions, Duros left us alone and I crawled into Drell's arms to try and get some sleep, the morning would be here soon enough and I was going to need every ounce of energy I could find to face what was coming with it.\n\nThere was a disrobing ceremony, Olan and I actually undressed each other, the softness of his fur reminded me of a fox coat I had once tried on back on Earth, and then the choice of weapons, I chose a talif about the same length as the quarterstaffs we trained with back on Mars.\n\nThe announcer read out our offence, it sounded far worse than putting a bratty teenager in his place, and Olan and I entered the arena through different entrances.\n\nOlan's first attack was tentative, I parried and answered with one of my own, the talif was incredibly well balanced. We continued circling, the attacks growing less and less tentative, mine coming only in response to Olan's, I wanted him overconfident and had no idea if it was working.\n\nFinally, a flurry of ferocious attacks; I countered most of them but found myself flat on my ass twice. This was not going to be easy; I might even have a cracked rib. He moved in to pin me, claiming victory, but I rolled toward him, thrusting my talif up under his chin, knocking him off balance, sweeping his hooves and putting him on his ass. The move gave me enough time to scramble to my feet and regain my stance. He was already back on his feet, smiling and nodding. I motioned for him to try again. He started to circle. I tried to remember his fight with Duros, trying to analyze what I had seen, looking for patterns.\n\nHis next flurry of attacks was just as ferocious, but I countered them all, striking him on the ass as I slipped to the side and tried to get behind him. He spun, almost catching me with a fierce jab with the end of his talif. I barely managed to jump out of the way.\n\nHe cocked his head looking at me strangely,\" you fight well, for a female,\" he chided.\n\n\"You too,\" I returned the barb. He laughed and charged a third time, I dropped to the ground rolling into his charging hooves tripping him as he passed over me. He shouted something that didn't quite translate in to galactic standard as he hit the ground, but I got the gist; my entire lineage had been put in question. Olan had dropped his talif, I used mine to toss it back to him and motioned for him to try again as he climbed to his feet. His eyes changed, the focus was gone, his easy victory in question, he was pissed, and I had a chance.\n\nGauging my distance to the wall behind me, I picked my spot for my last stand, Olan was bigger, stronger, and faster than me, if I was going to win, I had to hit him with something bigger than this stick, I just hoped it worked.\n\n\"Come on poppy flower,\" I chided, choosing my words carefully, I had just called him the Diraki version of girly boy or a sissy; using his own dialect made it even worse. He growled, lowered his head, and charged, I waited until the last minute, dropping to my back and catching him in the stomach with my feet, I rolled back onto my shoulders and pushed with every ounce of strength I could muster. I heard him hit the wall; the crowd went silent except for those whose seats had just collapsed. Springing to my feet, I walked over to him and placed the 'U' of my talif around his neck as he clambered to free himself from the wreckage; I had won. Olan dropped his talif and acknowledged my victory.\n\nPasit entered the arena with the same two males I had seen when he destroyed Duros, I looked at Olan and he closed his eyes, those beautiful horns and that bastard was going to cut them off because his son was a jack ass. I would never be able to explain why I did what I did next, staring at Pasit as he walked across the arena, I stepped over Olan's body, lowering myself on top of him I cried, \"I claim you,\" and took him inside me, riding him until he filled me with his seed. Pasit just stopped and watched in disbelief.\n\nHis juices running down my legs, I offered Olan my hand, he grabbed my forearm and climbed to his feet, claiming his talif on the way. Falling in behind me, we walked past Pasit and out of the arena, if I understood their tradition, he was my Olan now.\n\nWhile Pasit's clan chief chambers had properly indicated his status, the tribunal chamber was overwhelming, Clan banners hung around the room, tribunal guards in lavish regalia stood along the walls, each at least as impressive as Olan, some more so. The tribunal sat around a massive circular table, open in the center for any who came before them to plead their case. Nine very impressive males, decorated horns, luscious fur covering their bodies, colorful robes draping their shoulders, sat around the table; they were the chiefs of the eight clans. The Kilar sat opposite the opening, his chair significantly higher than the clan chiefs, his horns and robes were the most elaborate in the room, his name was Anat. Pasit sat three to his right.\n\nThey took four hours to deliberate on Pasit's challenge to the outcome of the battle, listening to all accounts of what had happened since we had shown up, bathed and dressed in my EVA, I gave my side of the story. They finally decided that as unusual as it was, I had claimed Olan in accordance with tradition.\n\nWith that resolved, I approached Anat, \"We will need to stay for a few days to make repairs to our ship, but I am concerned about others challenging my crew and having a repeat of this morning's events,\" I smiled.\n\nHe looked at the chiefs around the room, there was no dissention and there would be no challenges. Pasit abstained from the vote and stormed away from the table.\n\nWhat had been so formal a few minutes ago, turned into a social mixer, someone produced a cask of Diraki ale, passing around large mugs of the frothy amber liquid, one sip and I knew I needed to be careful, I had proved I could fight, but up against their ale, I was a lightweight.\n\nPasit stood to the side glaring at me as the other chieftains surrounded me and my crew, bombarding us with questions and answering ours without reservation. As I mingled, I noticed that Olan was never more than a few steps behind me, it was both comforting and disconcerting at the same time.\n\nWhen he sensed I had had too much, Olan helped me make my apologies and made sure we all got back to our ship, he stood outside the door while Drell and I took a much needed nap; the loud moans and the smell of apricot didn't seem to faze him in the least. He did his duty, nothing more, nothing less. Something was bothering Olan, but I didn't know him well enough to pick up on what it was.\n\nWe were well into day three of trying to figure out what was wrong with the FTL drive, I had left Drell and Granger to it and headed into town with my stoic shadow, to see if Anat had any engineers that might be able to offer a different perspective on the problem, and to see if I could pick up a small cask of Diraki ale to either celebrate our success or drown our failure in finding the problem, in the back of my mind I wondered how the ale would mix with the sweet smell of apricots.\n\nDaris, the Diraki capitol, was actually a very busy city, people everywhere, most walking with a large number of speeders moving through the crowded streets or flying overhead. Their colorful dress complimenting the myriad of colors in their fur, I even got to where I could recognize the clan markings. The tribunal had closed the city when we had been discovered to allow time to analyze the threat, why they let Pasit send his son to do the introductions, or if he had just taken it on himself, I had no idea. There were one or two minor incidents when members of the mountain clan, chided or even challenged Olan and me; Olan dispatched them without breaking a sweat.\n\n\"Pasit does not forget,\" Olan said softly as the second challenger fell.\n\n\"Then I'm glad you're with me,\" I smiled, trying to get any response from him.\n\n\"I will do my duty,\" he responded with a heavy sigh.\n\nAnat's home was surprisingly humble, spacious enough for him and his family, but modest by any standards, it bustled with life, a boisterous female riding heard on a group of small Diraki playing some game in the front yard while Anat sat on the porch laughing approvingly.\n\nHe stood and waved Olan and me through the gate as if he were expecting us. We joined him on the porch, I sat in the chair he indicated, and Olan stood behind me.\n\n\"You are not used to an Olan, I can tell,\" Anat smiled at me.\n\n\"I've always been able to take care of myself,\" I smiled back. His nod acknowledged that I had claimed my Olan.\n\nPossibly the most beautiful Diraki I had seen walked out onto the porch carrying a tray with two glasses of what I would compare to lemonade, tart and sweet and delicious. Her smile was like the rising of a third sun, her fur bright white with accents of rose pink, her robes of Anat's clan, with her horns just visible through the thick fur.\n\n\"My youngest, Sira,\" Anat pulled her close. I watched her face, the smile was not for her father and definitely not for me, I glanced back at Olan and his whole demeanor had changed.\n\n\"Olan, I think I will be safe here, perhaps there is some way you can be of service to the Kilar or his family while we are his guests,\" he bowed and followed Sira into the house.\n\n\"You are wise for an outsider,\" Anat smiled as he took a sip of his drink.\n\n\"It was pretty obvious,\" I smiled, \"how do I fix it?\"\n\n\"Why would you? Olan is strong and will serve you well, you saved his honor and gave him a future when you claimed him. Sira has many suitors.\"\n\n\"But none she looks at like that, I'll wager,\" I smiled broadly, \"besides, the cost would be too high, and a good leader takes care of her people before herself.\"\n\n\"I wish Pasit had your wisdom,\" Anat laughed.\n\n\"What if...,\" I started. Anat and I talked for hours discussing traditions and their complex, sometimes surprising ramifications, ultimately laying out a plan that would solve many problems for many people, paramount of which were Olan and Sira, and all that needed to happen was for someone to give his daughter a nudge; the rest should just fall into place.\n\nThe next morning, and old grey Diraki showed up at the ship with a small team of younger males. He was Tasik, the inventor of Diraki FTL drives and was just as eager to see what we had as he was to help us get our engine working again. The younger males were here to peruse the stuff we had in our cargo bay, Anat had agreed to purchase some of our surplus so we would have Diraki currency to better enjoy his city; there were strict rules, no weapons and no pheromones, he had heard legends of such things and didn't want his people exposed to such decadence; like claiming your spouse and taking her in front of an audience was mild.\n\nTasik fell in with Drell and Granger like old friends while Jazz and I played vendor to the others, Olan stood guard outside the cargo bay. When they finished shopping, we had an impressive stack of Diraki credits, and they had relieved us of a bunch of stuff we had planned on selling in the ring. Jazz and I found Tasik, Granger and Drell sitting on the floor by the engineering station drinking beer and swapping stories.\n\n\"I'm guessing you guys figured something out,\" I sat down next to Drell?\n\n\"Yeah, dirty gas,\" Granger threw in an old Earth analogy, \"our little backup plan, he pointed to the EVA power supply Jazz and I had attached to the core, \" we could tune the power from the core but not from this little guy. That last jump, we tried to tap into a higher resonant frequency and pushed the core hard enough that it pulled energy from the EVA and we got dissonance. Tasik here found it right away. We didn't even think to look. We installed a switch and it's all good.\"",
        "\"Great, Jazz and I sold a couple of crates of stuff and got a handful of Diraki credits for our trouble, so if you guys want to stay here and drink beer, I think the girls are going shopping,\" I kissed Drell's cheek and headed for the airlock, Granger swatted Jazz on the ass.\n\nThe open market Anat had told me about was amazing, like something from an old movie, there were vendors selling all kinds of things, cloth, hand woven rugs, pottery, fruits and vegetables, even an open air meat market; I had assumed the Diraki were vegan. Jazz, and I both gravitated toward the exotic fabrics. To his dismay, Olan got to carry our bounty, \"But how will I protect you,\" he had protested, I handed him the bolt of cloth anyway.\n\nI knew she would be here and saw her as soon as she saw me, the look in Sira's eyes told me she did not approve of how I was abusing Olan in the least; a warrior such as he should never be delegated to carry a woman's things.\n\nShe moved through the crowd, shoving people out of her way, her entourage following as close behind as they could. I put my hand on Jazz's arm, \"let it play,\" I whispered. Olan didn't say a word.\n\nSira and I were the same height, but her fur and small horns gave her a presence I could never possess,\" How dare you, you , you, you monster,\" her eyes flashed from me to Olan, \"he is a warrior not a pack animal. If you want someone to carry your shopping, use a eunuch, that is what they are for. I will not stand for this any longer,\" she slapped me as hard as she could,\" I challenge you for him, you are not worthy!\"\n\nShe had taken less encouragement that I expected, \"I accept,\" I smiled and rubbed my cheek, \"Come Olan,\" we turned and walked away, I could feel Sira's eyes burning into my back.\n\nWhen we got back to the ship, the same group of young Males were loading casks of something onto a cart under the watchful eye of Tasik, he had accepted a dozen casks of the replicators best impersonation of Guinness Stout in payment for his services, I agreed it was a good trade.\n\nOlan followed me to the replicator, \"I will not fight her,\" the anger in his voice was fighting with his sense of duty.\n\n\"But you will, she has challenged me, and you are my Olan. It is your duty,\" I didn't even look at him. I finished putting samples of the cloth I had purchased through the replicator and left him standing there in his thoughts.\n\nWord of the challenge spread through Daris like a wildfire, the Kilar's daughter challenging the stranger for her Olan; I had seen the same truth in the way they looked at each other that Anat knew was there. Olan fought with himself trying to protect me while at the same time wanting to strangle me for what I was forcing him to do.\n\nThe day came, the arena was packed, screens had been set up outside for the overflow crowd, none had expected I would have Olan fight the young girl; they wanted the cat fight. I watched the undressing ceremony, the conflict on their faces was almost too much to bear, they chose their weapons and I returned to my place on the dais above the arena; Olan would enter from directly below me.\n\nThe announcer read the challenge and introduced Olan and Sira. The crowd roared its disapproval as they entered the arena, half empty drinks, and assorted other projectiles pelted our platform. I leant over the railing, \"Olan,\" he glowered at me, \"protect her honor, as I protected yours,\" It hit him what I had really done.\n\nSira didn't know the truth of what was happening and attacked Olan with a fierceness I recognized; she was fighting for the one she loved. I would have been hard pressed to stand up to her attacks. Olan moved and parried, knocking Sira down a few times only to see her spring back to her feet and renew the attack, her only chance to save him was to dominate him, just as I had done. While she was more than capable with her talif, her inexperience as a fighter showed in her aggressive technique.\n\nThey fought and parried, Olan doing his best to fend off her ferocious attacks without hurting her. When she finally started to show signs of tiring, Olan let through a vicious strike to his ribs, Sira smiled as Olan went to one knee, and then screamed as he swept her hoof and took her down. Rising over her as she scrambled to get clear of him, her hooves sliding in the loose dirt of the arena, Olan placed his talif over her neck, looked up at me, I nodded, he smiled and shouted, \"I claim you,\" and took her violently. The crowd erupted into cheers and applause.\n\nI looked across at Anat, his smile was almost as big as mine. The chiefs sat behind him, Pasit's expression was difficult to describe, whatever he was thinking, fear and a touch of panic were definitely in there.\n\nIt was complicated but according to tradition, a member of the Kilar's family could not serve as another's champion. As Pasit's champion, Olan could only challenge for Sira's hand with Pasit's permission and Pasit would not give it. Since I had forced him to fight her, I had given him implied approval to claim her. By claiming Sira, he had protected her honor, become the Kilar's son in law, and broken his bond to me.\n\nOlan helped his new bride to her feet, the look on her face a mix of surprise and elation. They started to walk out of the arena together, Olan looked up at Anat for his approval and stopped in his tracks when he spied Pasit, kissing Sira and urging her to leave without him. What Pasit feared most and what Anat had wanted was about to happen. No longer bound by his role as a champion, he turned to the chairs of the Chiefs, \"Pasit,\" he roared, \"I challenge you,\" the bottom of his talif struck the ground in a fierce motion, the silence in the arena was deafening!\n\nA challenge for leadership had to be answered immediately, to not respond would be a sign of weakness that would lead to further challenges. It had been a long time since a sitting clan chief had been challenged, it would be a good fight.\n\nPasit had not had time to organize a tournament of champions to replace Olan, so he would be forced to answer the challenge himself. Olan sat down in the arena and waited for Pasit to disrobe and choose his talif.\n\nPasit flaunted the traditions, leaping from the dais of the chiefs into the arena still in his robes and brandishing the sword he had used to claim Duros' horns, the rage in his face evident to everyone. Olan rolled out of his way, barely avoiding a vicious strike by Pasit's sword. Rolling to his feet, he turned to face his chief.\n\nI could see the difference in Olan, it was as if for the first time he could remember, he was fighting for something he believed in, keeping his distance from Pasit's sword, he moved with a style and grace I had never seen, guiding his opponent around the arena like a dog on a leash, dodging and parrying Pasit's attacks waiting patiently for his openings. I was glad I had not faced this Olan. When Pasit would over swing, Olan would strike hard and fast, to the ribs or to the knee or elbow, slowly weakening his opponent, Olan's parries always brought damage.\n\nPasit pressed his attacks trying to get close to Olan, only to be rebuffed or redirected, his frustration grew and Olan's opportunities to strike increased. Pasit slowed and grew more cautious, it was Olan's turn to press, with a violent flurry of strikes, he pummeled Pasit, driving him back almost against the wall. In the same spot where I had claimed him, Olan faltered and Pasit struck, splitting Olan's talif in two. Olan looked dazed as Pasit raised the sword to strike again, pausing as he smiled at Olan; It had been a ruse. In Pasit's brief moment of glory, Olan pinned Pasit's sword arm to the wall with the end of his severed talif in his left hand, striking with his full force with the half in his right; he broke Pasit's arm, dislocating his shoulder.\n\nThe sword dropped to the ground as Pasit clutched his broken arm with his other hand falling to his knees, his eyes filled with disbelief. Olan pinned him to the wall with his talif, smiling as he dropped the straight end of the talif from his right hand and picked up Pasit's sword. Two quick strikes and Pasit's glorious horns lay in front of him.\n\nTaking the horns of your victim was an archaic tradition, the ultimate humiliation for an adult male Diraki, it had fallen out of favor and was only used by Pasit; it had been used for the last time when Olan claimed his clan.\n\nThere would be no need for Olan to take him as he had Duros; the victory and the humiliation were complete, Pasit had lost everything.\n\nSira met Olan halfway across the arena, leaping into his arms, grabbing onto his horns and wrapping her legs around him as she buried her lips in his, Olan dropped to his knees, falling to his back as she claimed him, the crowd erupted in raucous cheers as Sira rode him with all of her passion, the white and rose pink of her fur blending with the deep burnt umber of his; there was nothing violent about what they shared at all.\n\nOlan stood naked in the center of the circular table as if pleading his case, he bowed as Sira placed a single strip of cloth across his shoulder in the colors of the mountain clan before kneeling in front of him showing her devotion. He lifted her to her feet and kissed her sweetly accepting her pledge to help him in the task he had undertaken, Sira stepped to his side. Family first.\n\nOlan bowed as each of the seven chiefs approached in turn, draping a similar piece of cloth over Olan's shoulders until he was fully covered in the colors of all the clans, signifying his role on the tribunal as serving all the people and wrapping him in the strength of all Diraki. Olan knelt as Anat presented him with a talif, decorated in the colors of the mountain clan, signifying his responsibility to protect the interests of his own clan, he then waited patiently as, one at a time, each of the other chiefs moved to their seats.\n\nWhen all seven were in place, Anat helped Olan to his feet and led him to his seat at the table before moving to his own; Anat being last signified his duty to serve the other chiefs, not rule over them. I learned that the height of the Kilar's seat was not indicative of his power but as a reminder of his responsibility to watch over all the clans. Only when all nine of them were in place did they sit, in one motion, a sign of their unity of purpose.\n\nThe ceremony was simple and powerful, I felt tears welling behind my eyes as I looked around the table; it hit me just how out of place Pasit had been in this room. Anat raised his talif and struck the floor, the room erupted in applause for the new tribunal.\n\nThe party that followed was epic, even by Marine standards. We had brough casks of Guinness and Anat had provided plenty of Diraki ale, musicians had appeared out of somewhere and the tribunal chamber erupted into a happy chaos. My crew and I lost ourselves in the festivities. Sira grabbed me and hugged me, apologizing profusely for slapping me. I explained that her father and I had set her up, \"Father,\" she screamed, turning away, and disappearing into the crowd. I laughed and grabbed another beer.\n\nGranger and Jazz were dancing to the music and Drell was lost in conversation with Tasik, I found Olan and congratulated him.\n\n\" I hear you and Anat have been busy,\" he smiled at me.\n\n\"So, are you complaining,\" I returned the smile?\n\nHe shook his head, \"How did you know?\"\n\n\"Are you serious, do you not see how Sira lights up when she sees you?\"\n\nHe laughed.\n\n\"And Anat told me about what Pasit did to your family when your father died, it was the only way to put it all right. What happens to Pasit, anyway?\"\n\n\"He will have a choice, to either serve in the arena as Duros does, or to go into exile.\"\n\n\"Great, someone like him on the loose out there. I'm not sure I like the sound of that.\"\n\n\"It is our way,\" the tone of his voice told me he didn't like it either. His face lit up and I knew Sira was on her way. I disappeared back into the crowd, making my way over to Drell and Tasik, sliding my arm through Drell's and just listening as they chatted like schoolboys, only about physics instead of girls.\n\nGranger and Jazz found us and dragged us out onto the dancefloor, I had no idea how long we lasted and had no idea where I was when I woke up. The room was full of bodies, most naked. I saw Anat and his wife Anaya, curled up in the center of the room, surrounded by other couples and several singles; this was their family. A few of the couples had awoken early and were actively having sex. Olan and Sira where nowhere in sight.\n\nDrell tried to pull me back down next to him, but I had a feeling something wasn't right. I found Granger, but couldn't find Jazz, \"Granger, Granger wake up, where's Jazz? Dammit, Granger, wake up! Where's Jazz?\"\n\nHis eyes shot open as he sat up, looking frantically around the room,\" she should be right here.\"\n\nThe commotion started to wake others, Anat came over with a look of concern on his face.\n\n\"Jazz is missing,\" my eyes pleaded with him.\n\nHe barked a command and the males in the room got up, Olan came in from another room; evidently newlyweds did get a little privacy. Small groups were organized with Granger and Drell assigned to help. I was not allowed, mostly because Anat could see how upset I was, but also because what might need to be done was work for the men, another Diraki tradition.\n\nAnaya wrapped me in her arms, her light blue fur felt good against my skin, my eyes filled with tears, I had no idea what I would do without Jazz, right now, I was no warrior but if something had happened to Jazz, I would find my vengeance.\n\nThe other women busied themselves making breakfast while Anaya just held me and rocked me like one of her grandchildren.\n\nA few hours later, Anat and the men came back, Granger and Drell were not with them. I stood to face Anat,\" We found her not far from the tribunal, Granger and Drell took her back to your ship, I sent a few with them. She has been beaten pretty badly, but there was one Diraki next to her, his neck was broken, he was one of the ones with Pasit's son.\"\n\nI thanked him and ran to the door as fast as I could, Olan was waiting for me with a Diraki speeder, I climbed in and we were at my ship before I knew it. Drell and Granger were with Jazz in the med bay, she looked like shit, but she would live. I knew firsthand that the med bay would do its job.\n\nSuddenly I laughed, Granger looked at me like I was crazy, Drell just looked confused, \"Galactic Conquest.\"\n\n\"Oh shit,\" Granger laughed with me.\n\nIt started to dawn on Drell, \"Her character is bigger than Olan, and very male,\" I told him, and he smiled. I had to tell Olan the whole story, even he thought it was funny.\n\n\"What's so funny,\" it was Jazz?\n\n'Galactic Conquest,\" Granger snickered.\n\n\"Ouch, no fair,\" Jazz tried to laugh.\n\n\"Who did this,\" I took her hand?\n\n\"Pasit and his son, even drunk I got one of them,\" she smiled.\n\nWe let her rest and Olan sent a message to Anat, letting him know it was Pasit; no one was surprised. Pasit had disappeared with his son and a couple of his friends, a ship from one of the mines was missing, he had chosen exile.\n\nOlan took to his new duties as chief of the mountain clan as if he had been born to the job, he had had five years of watching Pasit to learn everything he should not do and took those lessons to heart. His tournament of champions lasted three days and by the time Olan's cousin Jeral claimed the position, there was no doubt that challenges to the Mountain Clan would be fiercely met.\n\nIt took a couple of days due to the nature of some of the injuries she had endured, but Jazz was fine; if any of us ever found Pasit, he would not be, she had been 'claimed' by five different Diraki.\n\nBy the time we finally left Dirak, we had built a strong friendship with Olan and Anat and the mountain clan which had officially adopted all four of us. Drell promised to help the tribunal establish trade relations with the Trellians once he had his throne. I promised to do the same when I got back to Earth.\n\nGranger watched the core closely as I started to accelerate toward FTL, \"Boss, we got company, coming out of the yellow sun,\" Jazz shouted.\n\n\"I see them,\" I adjusted the polarization of the view screen just in time to hear Pasit's voice cursing me over the com followed by a dozen small impacts hitting the hull of The Phoenix.\n\n\" I guess Pasit doesn't want to play nice, and it looks like he got help,\" I turned toward the two ships and continued to accelerate, \"Drell? Granger?\"\n\n\"Ready when you are, Sarge,\" there was an eagerness in Granger's voice.\n\n\"Charging the hull, captain,\" Drell had just promoted me on the spot.\n\n\"Jazz, what are they throwing at us?\"\n\n\"Some kind of small energy charges, no real damage, our armors pretty tight and with the magnetic charge, we could take a lot more,\" she paused, \"not suggesting we test it, just saying...\"\n\nPasit fired again his wing man following suit, I didn't like the sound of things hitting my ship. I dove under Pasit, splitting the two ships, rolled and came up above and behind the wingman, \"Granger, shot's yours, make it count,\" The sound of the photon cannon was followed immediately by two shots each from the rail guns, large holes appeared in the hull of the ship. We flew through the debris field as it came apart in front of us.\n\nPasit had turned hard, coming at us from our port side, his guns splattering across our hull.\n\nGranger saw him and fired the photon cannon, barely missing. Pasit screamed past followed by another shot from our cannon.\n\nI banked hard pulling behind Pasit, he was making a break for it, I accelerated, \"Granger, if he goes FTL, we've lost him,\" I shouted.\n\nAs soon as the words had left my mouth, the rail guns came to life, two shots missing, two more ripping into Pasit's engines and two more tearing holes in his hull. A third shot by the photon canon and his ship broke apart.\n\n\"I've got a signal,\" it was Jazz. We searched the wreckage for over an hour before we found the life capsule, finally maneuvering it into our cargo hold, it was Urit, Pasit's son. Everyone else on board the two ships had been killed.\n\n\"Let Olan know we're coming,\" I said softly, \"and why.\" Jazz sent the message.\n\nNo one said a word as we returned to Dirak, the victory had been swift and decisive; Granger, Jazz, and I were soldiers, it was what we were trained to do, but it had been so unnecessary.\n\nAnat and Olan were waiting for us when we landed, Anat representing the tribunal and Olan our clan, \"What would you have us do with him,\" it was Anat that asked?\n\nI looked at Urit, still proud but understanding he was beaten, \"he's just a boy,\" I could see Urit bristle when I said the words, while it was true, he did not want pity, especially from me.\n\nI looked into Olan's eyes,\" I offer him to my chief as tribute. He will serve you well or I shall take his horns myself when I return,\" I shoved him toward Olan. Urit glared at me but nodded his understanding that I had given him a chance, he just had to earn it.\n\nThe damage to The Phoenix was minimal, she had done well in her first combat and we were all in agreement that we would prefer it to be her last. Drell assured us that the weapons the Diraki had thrown at us were what we could expect once we got through the gate and as long as we didn't go toe to toe with a battlecruiser, we should be able to hold our own. The rail guns would be a big surprise for anyone we faced.\n\nJazz plotted our course, and I took us to FTL, accelerating to 2.0, Granger tuned the core, and I made the jump, admiring the now familiar view. Smiling and engaging the autopilot, I slipped from my seat and into Drell's lap, leaning my head against his shoulder as he wrapped me in his arms, the rich complex scent of apricot filling my senses; another thing that would never get old.",
        "--- To be Continued..."
    ],
    "authorname": "ShelbyDawn57",
    "tags": [
        "sci-fi",
        "science fiction",
        "warrior",
        "alien",
        "battle",
        "creature"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/first-contact-into-the-arena"
}