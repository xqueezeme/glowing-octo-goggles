{
    "title": "Mirror, Mirror",
    "pages": [
        "\"Oh man, I can't believe this.\" I ran my fingers through my hair and waited as the campus housing secretary behind the counter pounded the keys on her computer.\n\n\"Sorry, there's nothing,\" she sat back and tilted her head to one side making her look like the bland office drone that she was. The blue cat-eye glasses on the chain around her neck gave her that 'I'm only here because they wouldn't hire me at the DMV' look. \n\nSympathy didn't exactly pour off her. I wanted to hate her, but she wasn't the cause of the problem, only the messenger.\n\n\"Look, you guys are the ones who lost my housing request that I put in, as requested by you, last spring. I tapped my finger on the date on my receipt; you have to do something. Off campus housing is full. Anything I could get now would be thirty miles away.\"\n\nShe pounded away for a couple of minutes, then gave me a quick smile. \"The old psychology building is slated for renovation into student housing next summer. The suitable rooms have already been rented out. There's one left. The good news is that it's available, the bad news is that it has a one way mirror in it, and there's no outside window. You have complete privacy as long as you don't open the drapes over the mirror. I'll rent it to you for half price because of the inconvenience. Is that acceptable?\"\n\nI wanted to leap the counter and kiss her pasty face, but there had to be a Student Housing Office rule against it.\n\n\"I'll take it.\"\n\nA week later I strode up the sidewalk toting my steamer trunk. The building had the sad grandeur of an aged Victorian mansion that had been renovated at least a half dozen times in its hundred year existence. The wooden stair creaked as I climbed to the second floor holding onto the massive oak banister. My room sat across from the ornate bathroom. I liked that. \n\nExcept for a lingering old house aroma, the house gave off a warm, friendly vibe. My room was spacious despite lacking an exterior window. I had hoped for a garret. As I writer, I needed a window to stare out as I contemplated the state of the world. But then I would have to smoke cigarettes to complete the stereotype and clack away on a portable Smith-Carona typewriter. On second thought, a nice room on the second floor where I could tap away on a lap top with pristine lungs sounded pretty good.\n\nThe curtained window on the long wall of the room dominated everything else. I drew the heavy gray drapes back and saw nothing but the back side of heavy gray drapes on the other side of the pane. The window stretched from my knees to over my head, and had to be at least ten feet wide. I imagined psychology classes crowding around the window to view experiments in process. \n\nSmack in the center of the window I could make out a piece of paper taped to the glass.\n\nIt said: WHAT ARE YOU TRYING TO SEE, PERV?\n\nThere were several ways to respond, I chose humor.\n\nI grabbed a piece of note book paper and a laundry marker.\n\nI scrawled: NOT A PERV YET. MY CASE IS PENDING. MY NAME IS DAVE.\n\nI closed the drapes and unpacked. It didn't take long. Four pairs of pants, a dozen shirts, plus socks and underwear doesn't take long to put away. I was living the dream as a grad student. After that I explored the first floor, found the stairs to the laundry room in the basement, the kitchen, and the mailboxes. I could live here. This place was an island of calm in a sea of change.\n\nI took dinner that evening at a 'burrito big as your head' restaurant a couple blocks away. When I returned home, I tugged the drapes open to see if there was a message.\n\nSORRY, MY SIGN WASN'T AS FUNNY AS I THOUGHT IT WAS.\n\nI cupped my hands around my eyes and peered into a small gap in the drapes on the other side of the glass. I detected the flicker of a TV. The chances were good that someone was in the room.\n\nThe nearest thing I could find was a piece of paper off my printer.\n\nI printed: I'M A NICE GUY. I'VE HAD ALL MY SHOTS AND DON'T BITE.\n\nI taped it to the pane, rapped on the window, and did not pull the drapes. Instead I left the room in darkness and waited.\n\nIt didn't take long. The drapes on the other side parted and the sign on the other side disappeared to be replaced by: TURN ON LIGHTS. I WANT TO SEE YOU AND YOUR ROOM.\n\nWith a flick of my finger, I illuminated the room. I could see a woman with her hands cupped around her eyes trying to discern my room. After I scrambled to my feet, I bowed with a flourish realizing the best I could do was paint a grin on my face and wait for the next scrawled message.\n\nARE YOU A MONK?\n\nI shook my head, and raised my hands in the universal 'why are you asking' gesture.\n\nYOUR ROOM IS SO PLAIN.\n\nThe message I taped to the window said: I HAVE NO TASTE\n\nI heard muffled laughter.\n\nI yanked the paper off the mirror to write another message and took a bit of the film that made it a one way mirror. I picked at the ragged edge of the film with my fingernail, and then used my pocket knife to grab a long strand of it and peel back the entire sheet.\n\nAn attractive woman appeared in front of me as I peeled the film off. Things were definitely looking better.\n\n\"Wow,\" I mouthed.\n\nShe repaid me with a smile. \n\nShe was tall. I'm over six feet and we nearly looked at each other eye to eye. She was a little bit on the chunky side, but I'm not a specimen either with or without my receding hair line so why would I complain? She had that perfect oval face with apple cheeks and long auburn hair that cascaded over her shoulders. She wore short shorts and a tank top because the house was warmer than it needed to be.\n\nI grabbed a marker and a sheet of paper.\n\nWHAT'S YOUR NAME?\n\nShe wandered off and came back a moment later to hold up: LISA\n\nBefore I could write anything else, she looked off to the door then scrawled: BOYFRIEND.\n\nShe closed the drapes and I closed mine.\n\nI crawled beneath the covers that night and spent hours trying to fall asleep in my new setting. Every time I drifted even close to sleep a pop, or a rustle, or a creak awoke me. The following morning I would have sworn that I had gotten no sleep at all although I wasn't nearly as exhausted as I thought I would be if that was indeed the case. \n\nAt the bathroom, I discovered that there were three other male roomers beside myself competing for one bathroom. With one sink, one toilet and one shower between us we quickly decided on an open door policy. If you needed take a leak in the morning it was okay even if the sink and the shower were in use.\n\nMike, an engineering student from down the hall, padded in to shower as I shaved at the sink.\n\n\"I know there's rooms for women in this building, but I never see them.\" I threw that out for something to say.\n\nMike nodded as he slipped off his robe and adjusted the water in the shower. \"They have a separate entrance at the back of the building. I think the only point where you can cross from their side to ours is through the kitchen.\"\n\n\"I guess that was to insure observers and subjects never saw each other when this was a psychology lab.\" He never heard me as he stepped into the shower and pulled the drapes.\n\nMy classes went smoothly. When you're a grad student in journalism you resign yourself to writing. No surprise there. My editing seminar assignment was to spend a semester as an editor of the campus newspaper. I got a little money for the long hours and credits for that class which was nice. The heavy class was my creative writing seminar. That class would keep me chained to my laptop until the wee hours of the morning for most of the semester.\n\nAfter my ramen noodle dinner I settled down to pound out a slice of life story between a garbage collector and a socialite for my 'social synergy' assignment. Along about eight in the evening, Lisa rapped on the window. \n\nI opened the drapes to find Lisa standing there with a sign in her hand showing her phone number. Because it was so warm on the second floor, she was wearing a tank top and short shorts again, and looked good. The tank top showed a little cleavage, and those legs looked longer every time I saw them. \n\nI entered her number and sent her a message: You look lovely tonight.\n\nShe mugged astonishment while looking down at her clothes then typed: Now I know for a fact that you're blind.\n\nI typed: You're a rose among dandelions, a bluebird amid starlings.\n\nWhen she read it she looked up at me, shook her head and typed: What are you, a poet or a bullshit major?\n\nI chuckled as I wrote: Worse, I'm a journalist.\n\nShe looked up with a smile then wrote: I'm a mathematician and I find very little rigor in your comparisons.\n\nI quickly punched in: Then I probably shouldn't tell you that your visit is the highlight of my evening?\n\nShe rolled her eyes and shook her head: I have a boyfriend.\n\nI grinned and shot back: Not looking for a girlfriend. I'm too poor to afford one, but flirting never hurt anyone. If it makes you uncomfortable, I will stop.\n\nShe gave me a sidelong look, and punched in: Keep going, I kind of like it.\n\nThen she sent: What are you working on tonight?\n\nI pointed at my laptop and typed: A short story that will never get published about a rich lady and a garbage collector who are trapped in an elevator and forced to communicate with each other.\n\nShe thought for a moment: Still sounds better than exploring polygon properties in n-dimensional space.\n\nI shot back: If you turn up missing, what dimension should I direct the police to?\n\nHer response: Ha ha ha.\n\nWe texted a little longer than shut the curtains so we could both get back to what we were doing.\n\nI dragged myself back to the keyboard and I stared for a long time at the absolute garbage I had written, realized I had nothing to say, and deleted all ten pages. Instead I began a fresh story about a journalist and a mathematician who could only communicate through a window by text. The story flew off my fingers onto the screen and an hour later I finished a darn good story if I do say so.\n\nI hate slice of life stories where the author spends an hour of your time and nothing happens to any of the characters. It's like a bus that picks you up, drives you around the city for and hour, and drops you off where you started. So when my characters parted, the journalist went away understanding that without emotion, life is not worth living, and the mathematician learned that even in a hard world there are good people. It was a little saccharine, but schmaltz sells stories. Also, I do not care what the current trends in literary fiction are. When I read that stuff I want to start cutting myself.\n\nTwo weeks passed and the green trees of August faded into the chrome yellow trees of September. I talked with Lisa for a few minutes every night, and found myself attracted to her. She was smart, witty and laughed at my jokes. \n\nHer boyfriend was a dick, however. She was too classy to diss him, but she made comments that hinted he was a controlling bastard. One time she had bruises on her arm that looked like it was from someone grabbing her arm too hard. She refused to tell me how she got them. I never snooped, but I would hear shouting from time to time when he came over. I know I'm supposed to hate the boyfriend of the girl I've fallen for, but this slime ball made it so easy. \n\nShe got in the habit of seeking me out after the asshole had gone. It was as if she needed a dose of how girl/guy relations should be. His name was Darryl, and she and I were both happier without Darryl around.\n\nThe chrome yellow trees of September had begun shedding their leaves onto the wet sidewalks of October when I took the paper I had gotten back from my creative writing seminar and taped each of the pages to the window in the proper order, then I closed my drapes and waited for the text. It came an hour later.\n\nYou wrote about us? She texted.\n\nI opened the drapes and grinned like an idiot. Then I texted: It's going to be published in the campus literary magazine.\n\nShe texted a heart and a hug emogi and then wrote: You described me much prettier than what I am.\n\nI shook my head and pointed at her while texting: I spent no time on the sweetness of your disposition or how the world was brighter with you in it. Gritty realism sells.\n\nShe texted: I have several girlfriends who could use a guy like you. Let me fix you up.\n\nI shook my head and typed: No money, no prospects.\n\nShe frowned at me and typed: You're such a dope. You don't need money to make a girl feel wonderful. You have to be sensitive and gentle.\n\nI texted back: I'm too busy right now, but I may take you up on that later.\n\nI didn't tell her that she already had my heart. Stuff like that can ruin a budding relationship. Now that I think about it, I was a hopeless romantic during that period, and perfectly happy to live a life of unrequited love as long as I could write sad stories.\n\nThings changed a week later. I was hunched over my word processor when I heard shouting through the window. You had to be screaming pretty loud to get sound through it. Then I heard a hard thump against the window.\n\nI drew the drapes back to see Lisa laying on the floor with the curtain spread about her. She had been slapped or pushed into the window and she had slid to the floor dragging the drapes with her. Underwear clad Darryl loomed over her with his shoulders hunched and his hands doubled into fists.\n\nI rapped on the window to get the rat bastard's attention then I pointed at my phone and signaled 9, 1,1. He got the message. He glared at me, gave me the finger and snarled something at Lisa before dressing and storming out of the room.\n\nLisa lay amid the curtains in her panties and nothing else. A little blood seeped from the corner of her mouth. \n\nI texted her: Are you all right?\n\nShe got up and grabbed her phone off her desk, looked up at me and texted: I'm okay. Sorry you had to see that.\n\nDo I need to call the police? I wrote next.\n\nShe shook her head and dabbed at the blood on her lip before punching into her phone : Please don't. I'm not hurt, just embarrassed.\n\nI typed: You can spend the night here if you need a place where he can't find you.\n\nShe walked over to the door and threw the dead bolt. She texted: I'm okay, the door is sturdy and has a good lock.\n\nShe looked down frowned at her near nudity. She used her arm to cover her breasts,but gave up so she could text: I have a girlfriend I can call. In the meantime, I need to get dressed. Thank you for being there.\n\nI texted back: Call me if you need me.\n\nAt that point, she seemed more embarrassed than anything else, so I closed the drapes since she couldn't close hers.\n\nSeveral times throughout the night I woke up and peeped through the curtains to make sure she was all right. I could make out her shape on her bed. She was safe, that was all I cared about.\n\nThe next evening after I got in I got a text: Did you watch me in my sleep last night?\n\nI texted back: I did a couple of times to make sure you were okay.\n\nI walked to the window and pulled the drapes open. It was no surprise that she was standing there waiting for me.\n\nHer next text said: That creeps me out a little.\n\nI shrugged. \"I won't do it anymore. I worried about you last night. My intentions were pure.\n\nShe shook her head. \"Still you saw me almost naked last night. You have the advantage on me. I demand parity.\n\nI laughed: You want to see me naked?\n\nShe nodded: Seems fair.\n\nWhat about boyfriend? I texted.\n\nDarryl's gone. I filled out a complaint with the campus police this morning. If he approaches me, I can have him arrested,\n\nWhen a beautiful lady asks you to disrobe, you disrobe. Mama didn't raise a fool. I slid out of my jeans and unbuttoned my shirt. I shucked off my tee shirt and stood there in my tighty-whities. I bowed and did a slow turn.\n\nHer message: Very nice, but you've seen my breasts, and I haven't seen any of your naughty bits.\n\nI shot back: Let's play doctor. I'll show you mine when you show me yours.\n\nShe laughed, and it brightened my day to see that smile linger on her face. The trauma from last night had receded. \n\nShe was busy texting again: We have another problem. I can no longer close my drapes until they are repaired.\n\nI replied: I'll keep mine closed unless you say to open them.\n\nShe typed back: That doesn't keep you from peeping.\n\nI replied: Paper over the window?\n\nShe shook her head and typed: Here's the problem. I enjoy living with you sort of.\n\nI typed: I enjoy having you around too.\n\nShe bit her lower lip as if she was trying to decide something, then she typed: You could keep your drapes open all the time.\n\nI nodded and wrote: I wouldn't mind, but I do sleep in the nude. There may be a some semi-unintentional flashing.\n\nShe smirked at me: I sleep in the nude too. I don't mind the flashing as long as it's semi-unintentional.\n\nI stayed in my underwear for the rest of the evening sitting at the lap top trying to write. She wore an oversize tee shirt and I think a pair of panties, but no bra. I had enough images to fill my fantasies for quite a while. Her breasts fascinated me. They swayed and bounced in an entrancing way as she moved about. I wanted a pair I could play with. \n\nThe problem was Lisa would glance at me from time to time. My soft, undefined body and slight pot belly filled me with self-loathing by comparison. In the morning, I got up early and went for a run. Later that afternoon, I stopped by the gym to begin a weight training program, but discovered a judo club instead. I had trained in high school and knew there was nothing that would get you in better shape.\n\nAs the cloudy skies of November cloaked the campus, Lisa and I grew comfortable with each other. Lisa lounged in her panties when she was done with classes and I did pretty much the same since no matter how many times maintenance fiddled with the vents and thermostats, they couldn't get the temperature right.\n\nMy judo class proved to be better than I anticipated. My sensei was a tiny Japanese woman who practiced what she called, 'old man's judo' which specialized in foot sweeps and hip throws. They should have called it 'sneaky judo'. Every time I sparred against her, I ended up flat on the mat. A conversation ensued about how I got there. Her moves were subtle and devastating.\n\nIn the evening if I got back first I got to watch Lisa disrobe at the end of the day. She seemed to enjoy it as much as I did since there were times when she waited until I got home before she began. Her perfect breasts were full and only sagged a little when she peeled off her bra. I spent hours imagining how they would feel squashed against my chest. I spent additional hours dwelling on her hips, too. I imagined grabbing them and pulling her to my face.\n\nOur relationship changed again when I slid an autographed copy of my published story under her door. Later that evening, she rapped on the window showing me that she had received my gift. She had a gift too. She spun slowly displaying a very brief thong. Then she texted: I've never had a story about published. I am deeply flattered. Do you like my thong? I bought it for you.\n\nI mimed wiping drool from my mouth before texting my approval. \n\nAfter that, she wore thongs most evening. Just before Thanksgiving holiday, she showed off what looked like a microkini bottom. The front was a triangle of flimsy fabric perhaps three inches long and about two inches wide across the top. From the back she looked absolutely naked.\n\nShe typed: A little something to remember me by over the break.\n\nShe was gone four days. When she returned, I couldn't tell who was happier. She left a trail of clothing across the room on her way to our window.\n\nWas it a little strange to have a girlfriend that I never touched? It was. When I suggested a date from time to time she changed the subject. I had to settle for a lovely, nearly nude woman parading around in front of me most evenings. Given a choice between that and my former life as a grad school hermit, I chose Lisa in all her glory.",
        "They fixed Lisa's curtains the week before Christmas break.\n\nWhen the workmen left, I texted: You can close your drapes now, want to go back to the old way?\n\nDread washed through me as I awaited her response. I was happy the way things were.\n\nShe shook her head and texted: This way is better. I like your companionship.\n\nI offered yet again: We could always meet face to face sometime.\n\nShe bit her lip then texted: I know it's weird on my part, but I like the fact that there's a physical barrier between us. I'm having trust issues with men in general since my bastard boyfriend refuses to go away. This is nice. I have your presence, but I'm safe. Does that make sense?\n\nI texted back: I would never harm you Lisa, I'm not wired that way.\n\nShe nodded to me, and held her hand against the window. I held mine up next to hers. Then she stepped back and texted: I know I'm being weird, give me a little space and let me get my head straight. I see my boyfriend two or three times a week. Everytime I do, it brings back the old feelings. I think he is stalking me.\n\nI texted: Have you talked to the police?\n\nShe nodded and wrote: They can't do much as long as he doesn't touch me or confront me.\n\nI wanted to change the subject so I stroked my chin and eyed her up and down, then texted: You are looking especially tasty lately. Have you lost weight?\n\nShe grinned at me and pirouetted before texting: Down about ten pounds. You're the first one to notice. I think I lost it in my chest.\n\nShe looked down at her lovely breasts and frowned. \n\nI texted: It came off your hips and thighs. Your butt doesn't jiggle when you walk anymore. Don't lose too much, I adore those lovely hips. I can't wait to caress them and maybe cover your perky buns with tiny little bites.\n\nShe wiggled those hips and I fell in love again. She held up her thumb then texted: You'll go far in journalism. You know exactly what to say.\n\nShe motioned for me to turn around.\n\nWhen I did she texted: You're looking spiffy yourself.\n\nI bowed then texted: It's your fault. I looked so bad for you in my underwear that I decided to take up running again and joined a judo club.\n\nI flexed for her.\n\nShe gave the thumbs up before texting: We're obviously good for each other.\n\nChristmas came and I spent several weeks alone. Lisa occupied my thoughts most of the day every day. It got worse at night when I had to admit to myself that Lisa was central to my life. When she was gone, I had no life. She arrived the Sunday after New Year's and my mood brightened.\n\nEnjoy your holiday? I texted.\n\nIt was okay, she texted back. It was nice to see my family, but Darryl dropped by and I told my Dad what happened. Dad threw him out of the house and told him that he would be shot on sight if he came back. How was your Christmas?\n\nQuiet, I texted. I wrote and graded finals for my professor. It was nice to sit and drink a coffee without worrying about all the things I needed to do.\n\nI watched her peel off her coat, blouse, skirt, bra, shoes and leggings. She reached up and rustled her fingers through her hair before picking up her phone: It feels so good to be able to strip down and relax.\n\nThe text broke the spell that her striptease had cast. I followed her lead and slid my clothes off.\n\nShe wore the tiniest thong I had ever seen. I texted: Is that thong for my viewing pleasure?\n\nShe looked appreciative and texted: I've been thinking about getting back here all break. I'm happier here than at home. It's time we went a little further.\n\nShe slid out of her thong and stood before me naked.\n\nWow, I mouthed.\n\nI dropped my shorts and stood before her too.\n\nShe pulled up a chair and sat facing me. I did the same.\n\nShe texted: I thought about you all Christmas. I had dreams about you stroking my naked body. How can you occupy my thoughts so much and I don't even know the sound of your voice?\n\nI went mad on my keyboard: I have the same problem. You monopolize my waking thoughts. I've memorized the gentle curve of your jaw. I know how you bite your lower lip when you're deep in thought. I love the way you tuck your hair behind your ear when it falls forward across your face.\n\nI watched her read it. She placed both hands over her heart and sent a kiss my way. She texted: What do we do now?\n\nI texted: We masterbate together.\n\nShe read my text then bit her lower lip. That was replaced by a smile.\n\nShe texted: So what do we do?\n\nI stroked my dick letting it come erect. The beauty in front of me made it no problem at all.\n\nIt's so large. She texted.\n\nI shrugged and texted: I never thought about it. I don't think I'm any bigger than anyone else.\n\nI'm not sure that would fit in me. She shot back.\n\nI'm pretty sure that it wouldn't be a problem.\n\nShe smirked at me. Lot's of lovers?\n\nI grinned and typed: A couple, nothing serious. You? \n\nShe feigned embarrassment. Virgin. Is that bad?\n\nI shook my head: If you were in my arms now. I would promise to be gentle and only go as far as you were comfortable.\n\nShe placed both hands over her heart and kissed in my direction. Her hands drifted to her breasts where she rubbed her nipples until they stood proud of her breasts. She began twisting her nipples and pulling on them far harder that I ever would have. I did the only thing I could I stared as I stroked my dick.\n\nFrom there, her hands drifted lower to her mons were her fingers stroked through the tiny patch of auburn hair. Her index finger slipped into the crease between her pussy lips and dragged a bit of moisture up to her clit.\n\nShe leaned back in the chair to open her legs further and inserted a couple of fingers on one hand while she stroked her clit with the other. Her head rolled back and she closed her eyes.\n\nThe sight transfixed me. I stopped stroking and watched as pleasure overtook her. She raised her hips off the chair and bridged as she stroked faster and faster. The finger over her clit became a blur.\n\nThe magic happened. She began thrusting her hips wildly as she grimaced. She bridged board straight in the chair then collapsed back into it exhausted and panting.\n\nThat amazing sight alone was almost enough to make me cum. As she recovered, she languidly stroked her breast. Eventually she sat up and I viewed the most beautiful woman I had ever seen. I loved her full ruby red lips and wanted to kiss them. Hell, I wanted to lose myself in the sensation of her naked body touching mine as I explored those soft pillowy lips.\n\nHer breasts looked firmer to me, and the lips of her sex were puffy and incredibly inviting.\n\nShe gave me a radiant smile before texting: Did you orgasm? \n\nI shook my head and grabbed my phone: Too fascinated watching your sensual body in the throes of orgasm. You were fantastic.\n\nShe put her hands over her eyes before texting: I am so embarrassed! I've never done anything like this before. It usually takes much longer to get me going. You watching turns me on.\n\nI smiled and texted: Then I appreciate that you chose me to be your first. You were magnificent and extremely stimulating.\n\nI think my orgasm was so strong because it's been a long time, and there was this cute guy watching me. Does that make me an exhibitionist? She searched my face waiting for my reaction.\n\nIt makes you human. I texted back. Having sex on a park bench in the diag would make you an exhibitionist. \n\nI want to see your orgasm. She texted back.\n\nI slowly stroked my shaft watching Lisa. Her hand dropped lower and began probing between her legs as she watched me. I'm not even sure she was aware of it. Too soon, the contractions began deep in my hips and I began pulsing. The first pulse shot cum onto the floor three feet in front of me. The second pulse landed between my legs, and the last three landed on my hand.\n\nI got up to get a tissue. When I returned, my phone pinged.\n\nWow. Is there always so much, and does it always shoot that far?\n\nIt varies by how long its been between orgasms and how turned on I am. It's been a while for me, and woman, you really turn me on.\n\nShe read the text then looked up with her hand fanning her face.\n\nI want to hold you in my arms right now. I sent the message her way.\n\nShe thought for a moment then texted. I want that too, but I worry that I'd freeze up the moment you touched me. I think I'm getting better. I did pleasure myself in front of you. I never did that in front dumb ass Darryl.\n\nWe pleasured ourselves in front of each other a couple times a week after that. She came back after semester break with a vibrator that added pleasure to her sessions and a good deal of enjoyment to my viewing.\n\nThings changed once again with the start of the new semester. I taught a couple remedial composition classes. The classes were easy to teach, but grading the papers was a living hell. I'm pretty tolerant of people's writing mistakes, but how do you get into college without knowing the difference between 'there' and 'their'? On top of that, I began my thesis research and at the behest of my advisor (read that command) I sat on two of the worst departmental committees that required lots of work but generated no respect or visibility.\n\nThe money from teaching the classes was nice, and I used it to buy some clothes suitable for teaching in. The downside was that my twelve hour days became sixteen hour days.\n\nMy time with Lisa continued in pretty much the same way. We spent what little time I had to myself in each other's company. The problem was, she was happy with the way things were and my dissatisfaction continued to grow. Thing's came to a head at the start of April. I had been designated as the English Department's representative at the May ball. It's a local tradition for graduating seniors not unlike prom for high school kids.\n\nI had to rent formal wear and show up with a fresh haircut and wearing deodorant. Since it was a plus one invitation, I asked Lisa.\n\nShe shook her head and texted: Dating terrifies me. \n\nI don't have to pick you up. The soiree is in the ballroom on the second floor of the union, you can arrive when you're ready, and you can leave anytime you wish and unescorted if you choose. \n\nI tried to make our first date as easy as I could. We would only see each other with hundreds of people around us. I couldn't think of a safer venue for a date than that.\n\nShe read the text then took a long time before she looked up and shook her head.\n\nI massaged my temples before I typed into the phone: Lisa our relationship has stalled. I've known you for six months and have put no demands on you. It's not unreasonable that I ask you to meet me with no barrier between us. I had hoped that we could at least hold hands at the dance and perhaps I could sneak a kiss while we were dancing, but if that is too forward for you then maybe we should draw the curtain on this relationship.\n\nI grabbed the pull cord and did exactly that. My phone pinged so much for the next hour that I turned it off.\n\nThe next morning I got up feeling incredibly alone. I wanted so badly to see Lisa moving about her room getting ready for classes, but somehow managed to keep my hand off the pull cord for the curtain.\n\nI spent the day with a hollow sensation in my chest as if my heart had been pulled out me. In a way, I guess it had. I found a reason to stay late at the gym where I practiced my throws at the judo club until I was physically exhausted and didn't return to my room until after ten.\n\nShe would be getting ready for bed about then. Her fresh face would almost shine with her make up off, that was the way I liked her best. She would wave to me before she turned off the lamp beside her bed. I performed my half of the ritual and waved back as I turned off my light.\n\nSleep didn't come easy that night. Half of the time, I decided that I had done what I needed to do. My demands were reasonable. If she could not meet them, then I probably should break off the relationship. It might even be best for her too. She needed to confront her distrust of men. Maybe I was standing in the way. When she graduated, she would be working with, for, and directing men.\n\nThe other half of the night, my brain shouted, \"Idiot, you've pushed away a beautiful woman who happily spent her evenings naked for you. Lonely guys like you usually pay for that privilege on the internet.\"\n\nThe next day wasn't much better. I either took cold comfort from knowing that I had done the right thing, or I castigated myself for being such an idiot. Those thoughts often came seconds apart. Either way, I faced a life as bland as chewing on a rubber band and as lonely as an iPhone user at an Android convention.\n\nWhen I ran out of things to do, I slogged home through a spring thunderstorm, and stripped out of my soaking clothes when I got to my room. As I toweled my hair and body dry there came a rap on my door.\n\n\"Who's there?\" I shouted, but got no answer. When I looked through the peephole, I saw no one. When I opened the door a crack to peer out, Lisa shouldered her way in.\n\n\"You've got a lot of nerve cutting me off like that. I depend-\"\n\nI grabbed her by the shoulders and kissed her. There was no thought involved. The object of my desire stood before me, and I did what I had wanted to do for months. Her initial resistance melted away and she kissed back. Then she opened her eyes like she remembered the reason why she was there and stiff armed me.\n\n\"I'm mad at you,\" she grumbled pushing away from me.\n\n\"Later,\" I pulled her back into my arms and kissed her again. \"We can argue later.\"\n\nHer arms encircled my neck as I slid my hands beneath her jacket grasping the soft curve of her hips for the first time. It was so much more sensual than I thought it would be.\n\n\"We're not going to make love.\" She had her eyes closed and looked pretty comfortable in my embrace.\n\n\"I agree, we're not going to make love,\" I murmured as I pulled off her jacket.\n\nShe ran her hands over my chest and shoulders. \"Why are you in your underwear if you're so cold?\"\n\n\"I just got in from the rain. You need to warm me up.\" I slid my hands beneath the t-shirt she was wearing.\n\nShe slapped my hands away and glared at me. \"That is the exact reason why I don't want to go out with men. You're all too grabby.\"\n\nShe stepped back and pulled off the shirt herself exposing her amazing breasts cradled gently in a lilac colored lightweight bra.\n\n\"Now you can warm up by hugging me.\"\n\nI pulled her to me crushing those beautiful breasts against my chest. I found her lips again and this time slipped my tongue into her mouth. She moaned, and rubbed her breasts back and forth across my chest.\n\nWhen she pulled back this time she wore the muzzy look of a woman enjoying my kisses.\n\n\"We need to talk-\"\n\nShe lost her train of thought when I kissed her neck sending goosebumps down her arm. She shivered.\n\n\"Listen, I-\"\n\nMy next kiss landed on her shoulder.\n\n\"We've got important issues-\"\n\nI kissed the top of her breast.\n\nShe gently grabbed my face and tipped it up so I had to look into her eyes.\n\n\"You're not going to let me talk, are you?\"\n\nI popped the front clasp on her bra and took her nipple into my mouth sucking on it lightly while I inhaled the musky intoxicating scent of her body.\n\nShe gasped and pushed me away.\n\n\"I should leave, you're-\n\nI took the other nipple in my mouth, and sucked it a little harder remembering how she mauled her breasts when she masterbated. \n\n\"You should leave,\" I echoed.\n\nShe nodded, and for a moment, I feared she might. I dropped my hands and stepped back. If we proceeded any further, it would be with her consent.\n\n\"This is moving too fast.\" She said in a small voice. \"You have no right to stand there so sexy.\n\nShe stroked my chest, then her finger tips dropped down to my abdomen and slid inside my underwear.\n\n\"Oh, my,\" was all she said as she stroked my very erect dick.\n\nI stood back and slid off my underwear, and sat on the bed patting on the spot where I wanted her to sit.\n\n\"I'm still cold.\" I hugged myself.\n\nShe stood, torn between her body's desire, and her mind's need to set things straight. I hoped her body would win this fight. \n\n\"If I stay, we're going to make love,\" she stated it as fact without accusation.\n\nI nodded.\n\n\"I want to kiss down your body exploring every delicate curve along the way. I want to drag slow, wet kisses across your clit until you beg for release, and then I want to make sweet love to you until you are so exhausted that you can only cuddle beside me with a satisfied grin on your beautiful face.\"\n\nShe stepped closer to me.\n\n\"We have issues we need to discuss.\"\n\n\"All I can think of right now is how much I want you here beside me. There will be time to talk about our issues later. We're going to have years to talk about our issues. Tonight, I need you here beside me.\"\n\nShe tilted her head and peered at me. \"Did you say what I think you said?\"\n\nI nodded, \"We'll talk about that later, too.\" \n\nShe dropped her bra then slipped out of her shorts and panties in one swift motion and sat on the bed beside me.\n\nI leaned back and invited her to join me in laying on the bed. As I kissed her, I stroked her breast before following the curve of her waist with my hand up onto the side of her hip. I lay her flat on her back and kissed my way down her luxurious body from shoulder to mons one sensual inch at a time spending additional time on her breasts and her navel. When I slid to the bottom of the bed, I pushed her legs apart. She helped me and I took it as a sign she wanted more. My kisses began at her toes and ran up her leg a leisurely inch at a time until I planted my final kiss on the crease between her legs.\n\nShe moaned with pleasure, then gasped when I slid my tongue into that crease exploring her moistened inner lips. She trembled when my tongue sought out the recesses beyond those inner lips. I began at the bottom of her crease and licked to the top replacing my tongue with a couple of plunging fingers as I devoted my mouth to her clit.\n\nShe grabbed my head with both hands, murmuring, \"Oh my God, that feels so good.\"\n\nI pressed on, licking and sucking that little button of flesh until she clamped my head between her thighs, pulled my head as close to her as she could, and screamed my name. When her orgasm had passed, I lay beside her once again stroking her breasts.\n\nShe kissed me long and slow once she had recovered seeming not to care that my face was covered in her salty, fragrant juices.\n\n\"That was amazing,\" she whispered between kisses, \"but I want you in me.\"\n\nShe reached down and gave my cock a stroke. \"It seems so large, though.\"\n\n\"I'll go slow,\" I kissed her as I centered myself between her legs. She rubbed the head of my cock up and down her slit to gather lubrication.\n\n\"Push slowly,\" she whispered.\n\nI did as ordered and met resistance about halfway in. I backed off, then pushed again and drove right past the resistance. She gave a small gasp.\n\n\"Okay, now don't move while I get used to you.\"\n\nOnce again I did as ordered. Her pelvic muscles messaged my cock as she accommodated me. \n\nShe pulled my face to her and gave me a big kiss. \"Okay, now move slowly,\" her voice took on a husky tone.\n\nI gently pulled out of her and then slid back in at a pace that maximized sensation, when I hit bottom she whispered, \"Yes.\"\n\nAt the urging of her heels on my ass, I built up speed. As I did so. I sensed my balls drawing up into my body so I slowed down again to regain control.\n\n\"What are you doing?\" Lisa asked.\n\n\"I'm about to have my orgasm, and I want to postpone it so you can have yours first.\"\n\nShe giggled. \"I've had three already.\" She kicked me in the ass again. \"Now let's run this program to completion.\"\n\nI drove into her hard as she arched her hips to meet me.\n\n\"I'm about to cum,\" I growled through my orgasm face.",
        "She wrapped her arms and legs around me and held on tight.\n\nI froze and pulsed into her again and again triggering an orgasm in her.\n\nWhen we were done, I kissed her and rolled off onto the bed.\n\nAs I lay there, she stroked my softening cock.\n\n\"You seduced me,\" she gave me a playful hit on my arm.\n\nI shook my head. \"I warned you what would happen if you stayed, and you chose to remain.\"\n\n\"You were very persuasive.\" She whispered.\n\n\"You were an easy sell.\" I kissed her lightly on the lips. \"Besides, you can't tease a guy for over six months and not expect an explosion of passion.\"\n\n\"You teased me, too. Do you know how many nights I wanted to throw a chair through that damn window so I could climb into bed with you?\" She took a bit of slippery dew off the tip of my cock and rubbed it between thumb and finger.\n\nShe stroked my cock. \"Wow. Am I making it hard again?\"\n\n\"A beautiful woman touching me there arouses me.\"\n\nShe pouted. \"Exactly how many beautiful women have touched you there?\"\n\n\"Exactly one, but I generalized.\"\n\nShe stroked my cock. \"You're really hard now. I can think of a really fun place to put it.\"\n\n\"Would you like to try a position that women really like?\"\n\nShe nodded.\n\n\"It's called cowgirl. I lay flat and you straddle my hips with me inserted into you.\"\n\n\"Why do women like it?\" she asked as I scooted into position and she straddled me.\n\n\"You control the depth and the stroke rate while I play with your breasts and clitoris.\"\n\nShe was so moist that she enveloped me easily and then settled onto my hips. She rocked her hips back and forth on me.\n\n\"You're even deeper than you were before. I like this.\"\n\nI reached up and gently twisted her nipples. Her reaction was to clamp around my cock. \n\nShe placed her hands on my chest and rocked back and forth building up the speed of her thrusting.\n\n\"God, this, feels, good,\" she moaned in time with her strokes.\n\nI steadied her with my hands on her hips until she hunched over rigid as her pussy pulsed around my cock. When she was done, she collapsed on top of me.\n\n\"Did you orgasm with me?\"\n\n\"No, I wanted to make sure you had a good time.\"\n\nShe kissed me. \"I want you to have fun, too. What do I need to do?\"\n\n\"We could try doggie position.\"\n\nShe looked down at me. \"What do you want me to do?\"\n\n\"Get down on your hands and knees while I enter you from behind.\"\n\n\"Women like that?\"\n\nI nodded. \"Some do, the man's penis is in a slightly different position activating different nerves. Some don't like it at all.\"\n\nShe got down on her hands and knees. \"I feel so exposed like this.\"\n\nI slid into her easily touching bottom on my first thrust.\n\n\"Oh, this is different. I think I like it,\" she forced her butt back into my groin and gave it a little shake.\n\nI stroked out and into her again pulling her hips to my groin each time. I increased the speed until the sound of our slapping bodies filled the room. The aroma of sex filled the air.\n\n\"Harder,\" she commanded.\n\nI obliged pistoning as fast as I could until I stopped and pumped pulse after pulse into her quivering body. Another orgasm washed over her. We broke and collapsed on the bed panting. \n\n\"Is that all the positions?\" she asked between gasps of air.\n\n\"I need to show you reverse cowgirl, moon over Miami, and the farmer's daughter, but we can do that another time.\" I inhaled a deep breath and slowly exhaled. \"Right now I want to spoon in next to you and cuddle.\"\n\nWhen I cupped her breast, she whispered, \"Nice.\"\n\nThat was the last thing I heard before my soundest sleep in days.\n\nThings changed again after that. We spent our weekends in each other's arms, and we walked out in public. We did the things that lovers do. We spent hours sitting together in coffee shops, grabbed lunch together during the week, and walked hand in hand amid the flowering dogwoods, cherry, and red bud trees blooming around the campus.\n\nThe only fly in the ointment was her asshole former boyfriend who turned up way too often for it to be chance. He was as tall as me, but had at least fifty pounds of muscle more than I did. Lisa confirmed that he was a gym rat who was a decent boyfriend until he began taking steroids.\n\nOne afternoon as he was walking past, he tried to throw a shoulder into me. I was ready, and sidestepped him. When he met no resistance, he stumbled, lost his balance and fell to the sidewalk.\n\nWe kept walking. \n\nLisa looked back at her former boyfriend sprawled on the sidewalk.\n\n\"What did you do to him?\" there was a hint of suspicion in her voice.\n\nI had shown her a few judo moves and she knew what I was capable of.\n\nI smiled. \"I didn't touch him. I wasn't where he expected me to be.\"\n\nShe frowned. \"He's getting worse.\"\n\nI nodded. \"That's the bad news. The good news is that he's targeting me instead of you.\"\n\n\"Why is that good news?\"\n\n\"I grew up in a tough working class neighborhood. You learned how to fight if you wanted to survive. When he comes after me, I'll be ready.\"\n\nIn truth, I wasn't ready. At judo club, I asked sensei for some help.\n\n\"Stay after class,\" she replied.\n\nI bowed, \"Thank you.\"\n\nAfter class, the tiny woman sat me down on the mat. \n\n\"What I'm about to show you are Brazilian jujitsu moves meant to maim. You must never use them in anger or on a fellow club mate.\"\n\nShe demonstrated how to cup ears, the shoulder throw with the palm up, the instep stomp, and the left elbow to the throat from a hands up defensive position.\n\n\"There can be no half measures,\" she instructed, \"you must strike with the intent to disable, and you must be ready for the consequences. If they know you practice judo, they will claim you used unnecessary force.\"\n\nI thanked her and walked home that warm spring evening absolutely ready for anything steroid infused body builder Daryll could try against me.\n\nThings came to a head at the May ball. When I picked up Lisa feeling vaguely uncomfortable in my rented tux, she appeared in a mint green gown that hugged her body in a bewitching way and set her green eyes afire. She held me captive. She was so hauntingly beautiful that I wanted to keep her all to myself. Alas, we had promises to keep and miles to go before we got to pleasure each other. She wore her hair up, and flaunted the most kissable neck I had ever seen. When I nuzzled into her neck as we kissed, she pushed me away.\n\n\"I took hours to get this make up right. Don't smear it.\"\n\nHer confident smile told me that she knew she was hot stuff, and I agreed.\n\n\"I am humbled by your beauty,\" I declared as I took her arm and escorted her to the ball.\n\nIn the ballroom after I had checked Lisa's coat, we hunted up my advisor to find what my duties were for the night. I soon found him talking with a couple of colleagues, I waited until he finished.\n\n\"Dr. Hart, I'd like you to meet my girlfriend, Lisa Clark.\"\n\nDr. Hart smiled and took her hand when she offered. \"I am so pleased to meet you, Lisa. I've noticed that Dave is a lot happier lately. I think I know why now.\"\n\nHe turned to me, \"David, you must bring her to more department functions.\"\n\nHe tapped a woman standing next to him talking to another couple. \"Nico, I'd like you to meet someone.\"\n\nThe diminutive woman turned and smiled.\n\n\"This is my doctoral candidate, Dave Harris and his girlfriend, Lisa Clark.\"\n\nI bowed and said, \"Sensei.\"\n\nLisa said, \"Dr. Wantanabi?\"\n\n\"You make such a lovely couple. Let's dispense with titles for the evening,\" she smiled at each of us, \"please call me Nico for the evening.\n\nDr. Hart looked between the three of us and chuckled, \"I guess you all know each other.\"\n\nMy duties for the evening were simple. Have dinner with my advisor and his wife at the English Department table, then spend the evening dancing with my date. The first assignment was easy. My advisor and his wife were far more interested in Lisa. All I had to do was pass the salt when asked.\n\nWhen my advisor had left the table to find the men's room, sensei (I mean Nico) leaned in. \"Is the guy threatening you and Lisa over there?\" She nodded and I looked in that direction to discover Lisa's boyfriend that would not go away.\n\nI nodded, \"How did you know?\"\n\n\"He keeps glaring at you and Lisa. I'll keep an eye on you this evening.\"\n\nThe feel of Lisa in my arms occupied all my attention until I spotted dumb ass Daryll and a buddy sucking up liquid courage at the punchbowl.\n\nI nodded in the direction of the two. \"Is your former boyfriend a mean drunk by any chance?\"\n\nLisa glanced over then shook her head. \"I know that look. He's about to do something stupid.\"\n\nLisa looking at him must have set him off, because he stormed at us with his buddy swinging wide to attack me from the blind side.\n\nI shoved Lisa behind me, and raised my hands, \"We don't want any trouble here.\"\n\nHe stepped forward pushing me in the chest. \n\n\"Fight me, asshole!\" he bellowed.\n\nI took a step back with my hands still raised. \"I don't want to fight you.\"\n\nHe pushed me again, \"I'm going to rip off you head and shit down your neck!\"\n\nI stepped back a second time.\n\nHe shoved me again. Suddenly the place was quiet as the band and everyone else watched the developing ruckus.\n\nI retreated one last time, and when he stepped forward to pursue me, I swept his foot and he landed head first on the wooden dance floor.\n\nA foot sweep done correctly is a subtle thing. I knew no one would see the flick of my foot in the dim light of the dance floor.\n\nIn judo when you sweep a leg you must have a hold on the lapels of your opponent's gi and guide him safely to the ground. I now understood why. It sounded like a watermelon had hit the floor when Daryll headed in.\n\nI turned and looked for the goon circling behind me. What I saw instead was sensei laying on the floor with a drink spilled over her, and the goon grimacing on the floor holding his knee.\n\nI ran over and helped sensei up. \"Are you okay?\"\n\nShe smiled at me. \"Never better. When the police come, I will tell them that he pushed me out of the way,\" she pointed to the moaning moron on the floor, \" and I think he tripped over my feet as I fell down. I poured the drink on me to make it look like an accident. Tell the police you only met me tonight.\"\n\nDr. Hart took her back to the table so she could sit down while a couple nursing school staff attended to Daryll and his whimpering buddy.\n\nIt got busy after that. Two ambulances arrived and carted off my opponents.\n\nI respected the campus policeman who arrived to investigate. His gut told him that something fishy had happened. It wasn't right that two brutes lay on the floor while I remained standing.\n\nHe asked for my information and I gave it to him. I would come back clean when he called my name in.\n\n\"Now tell me what happened.\"\n\nI related the incident omitting only the foot sweep. Instead, I attributed my opponent's fall to him being very drunk.\n\nHe wasn't satisfied. \"Are you some kind of kung fu blackbelt?\"\n\nI shook my head. \"I don't know the first thing about kung fu,\" I answered truthfully.\n\nHe still looked unhappy.\n\n\"All I did was hold up my hands and try to back away. You can ask anyone here if you don't believe me.\"\n\nHe nodded. \"That's exactly what I'm going to do. Now tell me what happened to the guy who tried to circle around you.\"\n\n\"I don't know. When I looked around, he was laying on the floor and so was that lady sitting in the chair over there.\" I pointed out sensei.\n\nThe cop questioned Lisa next. She supported my story and also mentioned that she had reported her ex boyfriend for harassing her. Lisa gave the cop her ex boyfriend's name, and it came back that he had over fifty unpaid parking tickets, and another drunk and disorderly complaint. \n\nSensei handled the questioning masterfully putting on the best fragile, little old lady performance I have ever seen. She claimed in a thick Japanese accent I had never heard before that her back hurt and she needed to see her chiropractor in the morning. She also gushed all over the officer telling him how she respected the vital job that he did and that we were all safer because of him.\n\nThe police officer left convinced that he had identified the bad guys and would inform them in their hospital beds. Lisa and I went to her room and did unmentionable things to each other until the wee hours of the morning. Three weeks later, the semester ended. Lisa and I bid a fond farewell to the old psychology building and moved into married housing after a friend of mine who happened to be a graphic artist manufactured a marriage license for us that looked damned authentic.\n\nWe married for real a year later. After that, we went underground and acted like upstanding citizens. We even had a couple of kids to improved our cover. Lisa works for an insurance company in the risk assessment department and I teach journalism at my alma mater. Guess who makes all the money.\n\nWhen I mention our wild old days, Lisa blanches and looks around to see who's listening. Then later that evening, our love making has a little bit of the old spark."
    ],
    "authorname": "Vaguewriter",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/mirror-mirror-15"
}