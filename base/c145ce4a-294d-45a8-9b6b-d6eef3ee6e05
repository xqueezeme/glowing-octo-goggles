{
    "title": "My Only Talent Ch. 08",
    "pages": [
        "Chapter 08\n\nAn Unexpected Simplification\n\nI sat transfixed and watched the video (entitled 'Crimson and Cream' on the site, which for the AGs was a surprisingly clever slap at the University of Oklahoma) a second time, and then a third, my thoughts racing through a zillion questions. How soon until the next video? What was on the next video? What exactly had we done in the window and when? How many people had seen it so far? What other sites had picked it up? Was it on YouTube? Where was it stored? Where was it backed up? Was it illegal to post it or not? I only knew one thing for sure: I was literally the fucking idiot that made it possible in the first place!\n\nI called Oiler, my go to guy for engineering and technology. He looked at the site and quickly put two and two together and since he had just met Lara, he understood my urgency. He thought for a second, and then said \"Come by here at 8 tonight. I need you to meet with a couple of my guys and find out how far you are willing to go to squelch this thing. In the meantime, we will find out as much as we can about the site and how well secured it is, and how much attention it has attracted already. We'll give you an update when we see you. I am also going to call Esmeralda Estigoy, because I think she has a bone to pick with the AGs and she can help. See you at 8!\" and he rang off. \n\nMy second call was to Asa Weltschmerz. I got his voice mail and asked him to call me about Lara. Calling him would probably mean 'fessing up to Lara's dad sooner rather than later, but he also had some pull and could maybe help me. He returned the call in ten minutes, at 8 minutes before the hour I noticed, and I gave him a brief summary. He was silent for several seconds while my thoughts raced. \"Well, this is unfortunate. If this were the only footage, I see no problem. But the address could be a problem, and the further footage could be a disaster. The good news is that it won't bother Lara much; it might even turn her on. The bad news is that her father woould be peripatetic. What is your plan?\"\n\nI told him about my 'super hacker' connection, and the meeting later tonight. He said he would talk to an attorney and he would ask about the legalities and email me with an update. He was also going to call an MIS expert at Lara's dad's company that he could count on to stay quiet and work behind the scenes. I promised him an update after tonight's meeting.\n\nI tried going back to homework, but I couldn't even keep my eyes on the page. I went back to the web and researched the AGs, improper photography, and desert islands to maroon myself on. I ate dinner mechanically just for something to do, and when I got back to the room, Kevin wanted to talk.\n\n\"You know most of what I know about the AGs already, but there are two things that might help. First, the AGs have made a lot of enemies, so we need to reach out to find help where we can, but without drawing attention to the video. Second, the AGs have just settled a big lawsuit from the family of a pledge that fell while doing one of their drinking and puking games. He broke his neck and was partially paralyzed, and they had to pay out big time, so their alums and sponsors are on the edge of pulling the plug on the ESU chapter anyway. We just need to push them over the edge!\"\n\n\"What are you thinking?\"\n\n\"Well, my father is one of the most despised plaintiff's lawyers on the east coast, and he would like to build up his reputation here on the 'third coast\". So if we could find some other potential plaintiffs on the web page, and send a demand letter, maybe they would pull the plug right away. Can I tell him about this so he can research to find plaintiffs?\n\nI thought about it. \"I am afraid there is too much potential for publicizing this thing and adding to the number of people who find the web page. But if we do identify somebody with a case, he gets first shot at them, Okay?\n\n\"That works. I also want my frat president to introduce you the president of the Bi Phi's.\"\n\nI had heard a lot about the 'Bi Phi's' but didn't know how much of it was true. The were formally the Phi Phi Omegas, and their 'official' nickname was the Phi Phi's, but some people called them 'Bi Phi's' because of the rumors that a girl had to be bisexual to get in. One of the guys on my floor told us that each pledge had to eat the pussies of every girl in the sorority and make them come before they could become full members, but come to think of it, he was an AG pledge.\n\nKevin called the ZZZ president, and he remembered me and the great dates he had since he met me, so he called the president of the sorority. He explained that his mother was a Phi Phi alum, and she was definitely not bisexual, but since she married a Jewish guy and had only sons, she didn't have a daughter but still kept up with the sorority, so his family knew lots of the girls. He owed me, so he said he had to go over with me and introduce me to the Phi Phi president in person. He then made a brief phone call and said \"let's go!\"\n\nWe walked over to the ZZZ house to meet the president, and then as we walked to the Phi Phi house, he gave us some more background on them. \"The Phi Phi's are unusual, and I guess that's why people talk about them so much. If they were just a little more eccentric they would not even be in the Greek system. There are no Home Economics or Elementary Ed majors; they are all in Fine Arts, or Theatre, or Political Science, or Linguistics or Physics. They are plenty smart. They are too straight to be hippies, but they are not white bread enough to be in Kappa Kappa Gamma, or slutty enough to be in ZTA. My grandfather called them 'Bohemians' but said they were all hot. The really hot independent girls that like UDP parties, for example, if they were forced to join a sorority, would probably pledge Phi Phi. \n\nWe walked up the steps and rang the doorbell, and it was answered by a pretty hot house mother in her forties, who took us to formal parlor that could have been decorated in 1870. The Phi Phi president was attractive, with black hair, bright green eyes that were shining with intelligence and purpose, and a compact but compelling figure. She was introduced as Millicent Hathaway, and she was dressed in a very elegant blouse, skirt, and sweater not unlike what I had seen Peggy wearing when I first met her. I was surprised to find that Millicent was sending Suzie for me, the ZZZ prez, and Kevin, all clearly and purely and equally! She made small talk for a moment and then the ZZZ prez said I had a problem with the AG's and wanted to ask for her help. Millicent smiled and said conspiratorially \"the enemy of my enemy is my friend, eh?\"\n\nShe said she needed to talk to me alone and said goodbye to the Kevin and the prez. \"Tell me your story.\"\n\nI asked her if she had seen the \"Coed Cooze Cam\" page on the AG web site, and she made a face. \"Yes. Unfortunately we have had some Phi Phi's on that page in the past.\"\n\n\"Well, I managed to get a lovely young lady featured on that site, through no fault of her own, and now I need to fix it before she finds out or it gets more widespread attention. I need to somehow erase that footage, and any other stuff they have, before they publish her address and post any more videos or information.\"\n\n\"I have not seen the video. Can you describe it for me?\"\n\n\"It was taken from the AG house with a telephoto lens focused on the window of a high rise apartment building, and it shows a blonde woman in a red leather outfit fellating me. My face is outside of the frame, and hers is obscured and at an angle. She cannot be indentified from that video, but might be from some later footage. It was my idea to put her in that window. I did not know about the AGs or their web page, but I should have realized there was that kind of risk in general.\"\n\n\"Why did you put her in the window in the first place?\"\n\nI sighed. I might was well tell her the truth. \"She is my sub and I am an inexperienced master. I needed to humiliate her to get her excited, and putting her in the window accomplished that. But I should have realized the risk.\"\n\nMillicent looked up and stared at me curiously. Her Suzie signal morphed and growled at me, but then she suppressed it just like Nora did! \"What do you do now to achieve the same result without the public exposure?\"\n\n\"I brought in another female to watch.\"\n\nShe sent another strong and raspy Suzie spike that was almost immediately squelched. \"And how did that work out?\"\n\n\"Well, a gentleman should only say that they are both wonderful young ladies and I am privileged to have met them.\" I could not help that a little bit of a 'shit eating grin' appeared on my face.\n\n\"Is your sub well taken care of now?\" she asked with a bit of a challenge in her voice.\n\n\"Yes.\" I looked at her directly and tried to send a strong Suzie ping of Lara squirting.\n\nHer eyes grew wide and a strong and unquenched set of Suzie signal pulses filled my consciousness and repeated steadily. It was almost hypnotizing. I told her about my meeting at 8 with some hackers that may be able to help, and she offered to attend and help develop a plan. When I told her it was at the UDP port she smiled. \"I will see you there.\"\n\nI texted Oiler, and he said come over now and have dinner with them so we could plan. He introduced me to short but very muscular guy with thick glasses and an old style 'mullet' haircut. His clothes said 'super nerd' even without a pocket protector being visible. But his eyes were bright and active. Oiler introduced him as 'The Cisco Kid' so named for both his taste in music on old vinyl records and his total command of routers and switches. Esmeralda Estigoy was there, with a big guy that looked a lot like her, and must be her older brother. He had on a pair of jeans and a khaki uniform shirt with the logo of the largest local cable and ISP franchisee, and the name 'Eddie' in script. \n\nEsmeralda said \"One of my best friends from high school ended up on that web page. She was so embarrassed she attempted suicide. She survived, but dropped out of school. I am here to help take those degenerate mouth breather AGs down, hard! My brother Eddie was her friend too, and he is one of the senior techs for the company you see on his shirt, and he just might be able to help!\" \n\nThe Cisco Kid laughed. \"You are a master of understatement and cute too!\" and Esmeralda smiled at him. \n\nOiler sort of took over running the meeting. \"Cisco, tell us what you found out about the site.\"\n\nCisco was suddenly all business. \"It's externally hosted on a cheap and very popular host with several well known vulnerabilities. The video is displayed using the same flash server that many porn sites use, and they keep it updated and it is almost impossible to download the video directly from the site. Frame grab is easier. We have not seen the video on any other site. So far most of the hits on that video are local and it has not drawn any more traffic than the site has had in the past few months. We did a war drive and they have a WPA protected wifi network that almost everything in the house uses. There is also an old wired Ethernet with an NAT firewall, but the 'sysadmin' is just a frat rat and not a real pro or hacker; he is lazy and he usually keeps his desktop logged in on both the wired and wireless networks, and keeps a USB cord in the router all the time, and has not reset the router's factory password since he figures he has complete physical control.\"\n\nEddie laughed. \"It figures that a creepy site like that would have a dork as a webmaster! And if I may interject, after Esmie called me, I took the liberty of dropping by the service cabinet in the alley behind the AG house and setting up a little linux box sniffer, installing a keyboard logger on the sysadmin's desktop, and creating mirror sites for his desktop and their servers. He pulled out his laptop and showed Cisco where the mirror sites were and how to log in. They gave each other a high five. \n\nCisco continued. \"The site is low traffic and is not covered by the wayback machine or any other time machines I could find. And I don't think the web host company realizes this sub-page is on the main frat site, as they have a strict ban on hosting improper photography stuff. The AG network uses a commercial appliance backup, but it only writes to the offsite weekly. There isn't much chance of hacking the offsite backup server, or the web host. I think our best chance is to replace the video files on the local server with dummy files of the same size, and then let the normal backup process write over the backups on the remote server. We could do a DOS attack or DNS spoof, but it might attract more attention to the site in the long run, so it's no good unless we have destroyed the file first.\"\n\nGretchen and a couple of the other UDP guys showed up with food for us from the frat's kitchen and we all chowed down while the meeting continued. I was not following everything, but it seemed like the AG network was pretty porous. The key issues seemed to be if we should wait a week for the normal backup to overwrite the file with Lara on it, or should we try to force a backup and thus an overwrite sooner but maybe call attention to the file. They also seemed to conclude that to be really sure we had covered all the bases, we needed to get into the AG house and plant a little Linux box directly into their wired network that could transfer files via a separate wireless link to the mirror sites, and do a scan on all the member's computers.\n\nMillicent of the Phi Phi's arrived, and accompanying her was a tall and thin young woman. She was nice looking, with dark skin and a slight epicanthic fold to her eyes, but with surprisingly light brown hair and a trim figure and amazingly active light brown eyes that portrayed massive intelligence. I made as many introductions as I could and then Millicent introduced the young lady as Mei Ling Johnson, a computer science student, Phi Phi member, and a hacker of some repute known in the underground as 'xuxiadiamond'. Cisco's head snapped up like someone had hit him with the business end of a cattle prod. \n\nBut he kept his concentration, and summarized what had been covered so far as succinctly and completely as I would have thought possible, without even altering his moonstruck stare at Mei Ling. For her part, she was obviously absorbing everything he was saying, and also sending a moderate but steadily increasing Suzie signal for him.\n\nOiler took over smoothly and assigned the obvious follow ups on inventorying the servers and examining all the files, and making a summary and recommendation on waiting on the regular backup cycle. The he threw the floor open on ideas for getting inside the house and plugging into their network. Some discussion followed, and we were all asked to think about connections we might have and report back to Oiler. As the meeting broke up, Cisco sought out Mei Ling and introduced himself by his hacker name 'drinkingport'. Her eyes widened in recognition and her Suzie signal amped up by several notches. Suddenly those two were in their own little world. \n\nMillicent took me by the arm and asked how much I knew about Cisco. I referred her to Oiler, told her that I trusted Oiler completely, and said she must have noticed that Mei Ling had it bad for Cisco. Millicent laughed and said \"Mei Ling has never 'had it bad' for any guy. They all chase her but none of them have been smart enough to not bore her to death in the first few minutes. I just noticed that Cisco has it bad for Mei Ling, and was going to figure out how to let him down easy!\"\n\nI laughed. \"Mei Ling is very interested in him.\" I concentrated on her Suzie, and it was nearing the top of the 'chase me' scale and trending toward 'fuck me tonight' territory. \"In fact, I bet they end up in bed sooner rather than later!\"\n\nMillicent snorted and looked down her nose at me! \"Would you care to actually make a wager, young man?\"\n\n\"Perhaps I would. What are the stakes and can you pay off when you lose?\"\n\nShe was spitting mad at that comment, but suddenly she was once again sending a nice little Suzie signal for me. Nothing like Mei Ling was sending for Cisco, but very promising, nevertheless. \n\n\"If nothing happens between them by the end of the semester, you will spend an entire weekend as my sub, doing whatever I desire and whatever pleases me.\"\n\n\"And you will not interfere or try to drive them apart?\"\n\n\"Of course not. Just to be complete, although it will not happen, what it is the payoff if I lose?\" She looked haughty but hot.\n\n\"You will spend a weekend in complete submission to me and two women.\" Her Suzie spiked and flamed! I continued. \"Actually you win either way. If you win the bet you get what you think you want. If I win the bet you get what you really need!\" I laughed, and offered her my hand to shake. \"Is it a bet?\"\n\nShe took my hand, and said. \"I am looking forward to whipping you into shape!\" With her touch I was plugged into her Suzie now, and I didn't even need to ping. Her signal was strongly modulated with her being strapped down, being ravaged and coming like crazy! \n\nI took her hand up to my lips and kissed it. Her eyes went wide. \"I am looking forward to making you really satisfied and totally happy for the first time in your life.\" I hoped my faith in reading Mei Ling's Suzie signals was justified, or I might have to take Mrs. Douglass' advice about submission: try it once and see if you like it. Mrs. Douglas did and definitely did not like it.\n\nWhen I got home, I sent Asa Weltschmerz an update on the meeting. He emailed back that we had talked to a lawyer and even though we might have a case, filing it would most likely ensure more publicity and more traffic to the site. If we just pressured AG to take it down, the video might circulate underground and end up on other sites or message boards, and we needed to try to find a way to erase that puppy completely. I decided to wait until Friday to talk to Suzanne about all this. I worked at my homework, taking three times as long as normal to do it about half as well as normal. I finally went to sleep. \n\nThursday was routine, until I got some updates from Oiler: they found some very interesting stuff on the internal servers via the wireless network, and wanted me to drop by UDP tonight after dinner to talk about a plan. There was a pool party at AG this Saturday and maybe we could slip some women in as attendees, but the AGs had a reputation for pawing and stripping unescorted girls at their pool parties, and maybe worse. Cisco and Mei Ling were trying to map the locations of the Ethernet ports to see if there were any easily accessible ones near the pool. \n\nI walked over to UDP after supper, and Oiler took me up to his laptop in his room. \"I haven't showed these to anyone yet. They are practically radioactive!\" I wondered what the hell he could mean as a video began to run. It showed an old kids plastic 'slip and slide' toy like we used to use in the yard in the hot Texas summers, and panned up to show six young guys looking kind of sheepish as they looked at the slip and slide. An order came from off camera 'Pledges, Strip!' and the six young guys took off their clothes. Then about 40 other guys, presumably the AG full members, stood all along the length of the slip and slide, like they were going to watch the pledges slide. \n\n\"What's the big deal?\" I said. He laughed and pointed to the screen.\n\nThe 40 older guys zipped down their zippers, took out their cocks, and began to masturbate frantically! I could not believe my eyes. It did not take long for them all to ejaculate on the slide, and although the volume was not great the slide was probably now even slipperier than water would make it. The off screen voice commanded 'Pledges Slide!' and they ran and launched themselves, face down, onto the slide. This was a two camera shoot, and the second camera showed the pledges at the end of their slide, with the sticky stuff all over their chests and faces! If the were not judged to be sufficiently sticky, they had to go back and slide again. Once they were judged to be well coated, they crawled on all fours past the line of members (so to speak) and each delivered a hard swat from a pledge paddle on each buttock. ",
        "I was stunned. \"That's the grossest thing I have ever seen. Why video it? Who is the audience?\"\n\nOiler laughed. \"It is disturbing, isn't it? Apparently this is a long standing AGs tradition going back long before video cameras. Some of the older files appear to be 16mm films that have been transferred to video. And according to the server logs, every year these things are put on a password protected page on the site so the alums can look at them.\" He was right, this was radioactive. AG alums included several US Congressman, lots of state officeholders, judges, mayors, and a few news anchors and weathermen. An evil plan began to form in my mind.\n\nOiler continued. \"I also found the other footage of Lara.\" He clicked on an icon and the video began. It was shot from the same angle, but the day was cloudy and there was much less glare on the window panes. A blonde girl was on the table in the windows, and an unrecognizable guy (me) grabbed her by the hair, flipped her over on her back, and quite vigorously began thrusting into her mouth. The girl's face was clear for only an instant, but a freeze frame night yield a recognizable head shot, so to speak. As the video ended, another text crawl called out the address of Lara's building. We had to stop this thing before it was posted on the web. \n\nI told Oiler and Cisco my plan. Cisco giggled like a little kid. \"Oh, I like that!\" He said he would get together with Eddie, Esmie, and (as his eyes got a dreamy and faraway look) Mei Ling to game out the best way to do it. But he looked less enthusiastic when he said \"We have to get our device plugged into their network to be sure we got all the copies. We can't be sure from only the ISP side of their router and via wireless like we have now.\" It looks like 'social engineering' was the important final step, and it was up to me to make it happen. \n\nI kept working through things in my head all through Friday morning, and during my first three miles on the track. By the time Suzanne showed up, I knew what we had to do, but I still didn't know how to get it done. Maybe explaining things to Suzanne would help me think it through. I gave her the brief summary and she stopped me when I mentioned the AGs.\n\n\"The fucking Alpha Gamma's!\" She was livid. \"Do you remember me telling you about the toga party I had to leave because my date was too drunk to stand? That was a fucking Alpha Gamma pledge that I was stupid enough to date when I was a freshman! Those sorry pieces of shit just keep surprising me with how completely degenerate they are!\"\n\nI resumed my summary, ending with the need to physically plant a device in the AG house, with the best opportunity being at the Saturday pool party this weekend. Every time I looked over at her, her eyes were flashing and she was flexing her arms and enthusiastically choking imaginary necks with both hands. Suddenly she stopped me. \"Get me the device and I guarantee I can get it in place on Saturday!\" I pressed her for more information, and she hedged, and then said \"The freshman I dated is now President of the AGs. It looks like he is going to take him six years to get a degree. He is still obsessed with me. If I call and ask him for an invite to the pool party, I will get it. I will take my soccer gang, and they will keep the AG's distracted while I plant your little box.\"\n\n\"What about your physical security? The AG's have a reputation for manhandling, stripping, and or assaulting girls who go to their pool parties!\" \n\nShe laughed. \"The girls I am planning to take can handle about 4 AG's each, MMA style. If you want to add someone to my crew, bring 'em on. But I don't want Lara anywhere near the AG's that Saturday, in fact, I would like both of you to be out of town.\" \n\n\"Lara will be. She is meeting some friend of hers in San Antonio for an all day shopping trip. I am also planning a day trip out of town on Saturday.\" \n\nWhen we finished our run, I gave Suzanne contact info for Oiler, Mei Ling, and Cisco, and she said she would talk to them right away. Then her eyes flashed again. \"And not one word to Lara about this! If we do our jobs right, she will never have to know about all this. I'll see you at Lara's place later for our sewing circle.\" She smiled, but her eyes were troubled.\n\nI didn't even feel like thinking about lunch. I showered and sat through my classes in a fog. Lara texted me and said to come by about 7, and to eat supper first, because she would be sewing, not cooking. I called Oiler, and he was fired up, saying that Suzanne had solved the \"social engineering' problem, and he was confident we could get things done now. I sent an email update to Asa Weltschmerz, saying that I had a plan that I thought would eliminate all copies of the videos and bring down the website for good, and it should be done this weekend. At dinner I tried to make up for missing lunch, and walked over to Lara's place feeling good physically, but still worried about fixing the AG problem.\n\nLara answered the door and let me in. Suzanne was standing up on a step stool, covered with paper sewing patterns held together with what seemed like a million little silver pins, and covered with chalk marks, too. Lara was taking notes in a spiral notebook, and they both seemed giggly and excited. Suzanne may have been forcing it a little bit, but Lara seemed genuinely giddy. \"When do I get to see these costumes?\" I asked. \n\n\"Not until Halloween. Otherwise it's bad luck for the contest.\" Lara giggled again.\n\n\"Well I do have one major requirement. Lara's costume cannot be red!\" \n\nLara started to protest, but Suzanne looked surprised and then piped up. \"Actually, Lara, that's probably a good idea. I would like to wear red, and you take the white, and we will let Dr. Evil here wear black!\" Suzanne winked at me, and I winked back.\n\nI literally twiddled my thumbs for a while and they finished their measurements on Suzanne. Then Lara stepped up on and Suzanne began covering and pinning her into another set of patterns. It took forever. Both girls teased me every time I fidgeted or walked around. \"Got ants in your pants there Animal?\"\n\n\"I hope you have more than ants once we are finished measuring you.\"\n\n\"You better behave or you will get stuck!\"\n\nSoon they finished with Lara and I got up on the step stool. Another set of paper patterns came out and soon I was festooned with paper and pins too. They were both pawing me and pinching me and enjoying themselves far too much for my comfort. It took forever, but finally they said they were ready to do 'mock ups' for final fitting on Sunday, and started to put their sewing stuff away. \n\nThen Suzanne got a very naughty look on her face and announced \"Lara and I have devised a little game to challenge your talents, Animal. You just stand there and watch for a minute, but first you need to get naked so we can gauge your reactions to the game.\" I figured being naked with these two was always a good idea, and I stripped quickly, full of anticipation. \n\nThe two girls stood close together and began kissing each other, like one of those 'I kissed a girl' videos that were all over the internet a while back. It had an immediate effect on me. They smiled, and then Lara took off her blouse and Suzanne began to caress her breasts through her bra and kissed her even more enthusiastically. I was now at full attention. After a few more minutes of really enthusiastic kissing, Suzanne took off Lara's blouse and proceeded to kiss and gently bite her nipples like she really meant it, and I got even harder. Soon the all the underwear came off and they stood kissing each other deeply with their hands cupping each other's asses. It was very hot. \n\nSuzanne put a fancy digital kitchen timer on the table, setting it to go off every three minutes. \"We are going to get into a fun position with each other, and you may kiss or penetrate whatever orifices are available until the timer rings again. Then we will get into another position, and you have another three minutes. We will continue the game until you come!\"\n\nWithout even waiting for a response, Lara grabbed Suzanne and pulled her into the bed, with Lara on the bottom and Suzanne on top, and they swiftly moved into a 69 position. Suzanne's amazing ass swam into my view. Ever the gentleman, I used my tongue for a few seconds to lube her a bit, and then joyfully slipped my erection into her lovely rectum. She hummed happily, but her mouth was glued to Lara's pussy. The timer dinged way too soon for me. Both girls laughed and then rolled over 180 degrees, with their mouths still on each other's snatches. I tried to adapt, slipping into Lara's beautiful backside with as little delay as possible. It was wonderful.\n\nThe timer dinged again. The girls laughed and then rolled over again. Suzanne said \"repeating positions is not allowed!\" and I decided to plow into Suzanne's wonderful wet pussy. This had the added benefit of freeing up Lara's tongue to alternate between my cock and Suzanne's clit. I liked this game. The timer dinged, and they rolled again, and I lost no time entering Lara, and Suzanne lost no time in putting her tongue to work. I wasn't even close to coming yet, but I was certainly having a good time. \n\nOne more ding and things changed again. Lara on the floor, with Suzanne on her face, and soon my cock was in Suzanne's mouth. Lara must have been doing good things to her, because Suzanne was sucking me frantically. Another timer ding and then Suzanne rolled onto her side. I decided to take the initiative and entered her pussy from behind, and Lara reacted quickly and began tonguing her clit fervently. Suzanne came twice before the timer sounded. \n\nThe timer dinged again, and Suzanne climbed back up on the bed with Lara on top of her and almost attacked Lara's clit, leaving her lovely ass up in the air. Suzanne said \"Game over. Let's just make her come!\" So we did. I tuned into Lara's Suzie signal and tried to synchronize my motions with it to bring her off. Suzanne was crazily enthusiastic with her tongue work, and Lara popped and squirted. I was in the zone, and so was Suzanne and Lara had two more big shuddering orgasms, and then she screamed and I shot in her and shook and we both squeezed her and kissed her and just cuddled for about 30 minutes. Then I realized that Lara had gotten excited, and super excited, and had come like a frantic little bunny rabbit, with no spanking, whipping, humiliation, or fear! My plan was working. I was ecstatic. \n\nSuzanne had figured it out too. \"Oh Lara, you came so beautifully for us! I love the way you taste when you come hard like that. And no spanking or whipping at all. You are so hot!\"\n\nLara balled like a baby, apparently getting her full endorphin rush. \"You guys are so good to me and it was so wild and exciting that I didn't need to get spanked! But y'all can spank me anytime you want, and I still want it sometimes.\" We were all sweaty and the air conditioning was blowing cold, so we wrapped up and cuddled together and I managed to get both their heads on my chest and all was right with the world. Did my 'project spank Lara' really accomplish its goals, or did I just get lucky? I pondered that all the way back to the dorm.\n\nSaturday morning my alarm went off at 3:30 AM. I took a shower with tingling nipples and a happy cock, brushed my teeth and put on some outdoor type clothes. Peggy's 'jeep' turned out to be a tricked out 'Pimp My Ride' style Range Rover with classical music on a super sound system. She had our destination already programmed into the navigation system and a picnic basket in the back seat. There was another, smaller basket in between the seats and as I looked at it, she said \"Breakfast!\" Inside there were a couple of homemade 'egg Mac Muffins' with real Canadian bacon, Colby Cheese, and handmade Hollandaise sauce, and two plastic cups with snap on lids filled with fresh squeezed orange juice. It was delicious. \n\nAs we merged into the Interstate, she activated two radar detectors and a trunking police scanner and hit the trip counters on the navigation system. She smoothly accelerated to about 85 and weaved her way through the big semis on the road with practiced ease. I looked at the display and realized she had programmed the smart route that avoided most of the interstate and most of the traffic, such as it was this time of morning. We covered the 30 miles to the first turn off quickly, made our way quickly through a mid-sized town at posted speeds, and once we cleared the city limits she turned on some massive aftermarket high beams and we zoomed straight south at 90. In about 40 minutes we turned off eastbound into a two lane state road that usually only carried combines and pickups during the day. The super high beams came back on, and the speedometer zoomed to 100 on the nose. I could feel the air suspension hunkering down to hug the road. She set the cruise control and then said \"How much birding have you actually done?\"\n\n\"Not much, but I have driven my grandmother all over the state. She is the one that arranged the use of this place for us. And I would like to make our bird watching a little more interesting with a game!\"\n\nHer Suzie signal fired up and flamed hotly. She liked games, and she liked me. \"What did you have in mind?\" she smiled.\n\n\"I call it strip birding. Each time either one of us logs a new species, we both have to remove one item of clothing. And jewelry does not count, a pair of shoes counts as one item, and a pair of stockings counts as one item, too.\"\n\nHer Suzie went off like a radar detector at a speed trap. \"But almost anything you find will be a new one for you!\" she giggled.\n\n\"Is that a problem? I thought that would be a real plus, and I am confident that we will find several new ones for you too.\" Her Suzie flamed and spit like meat on a rotisserie. \n\n\"Let me ask you a question.\" She said. \"What happens if we have already fully disrobed, and then we find a new species?\"\n\nLove those smart girls. \"I love the way you say 'fully disrobed'. That's when a special rule kicks in. Whoever spots the new species first gets to make a request of the other player, and that request may not be refused!\" Her Suzie signal filled the car, with very pleasant and clear tones. She giggled again, and got out some binoculars for us. \n\nSuddenly we were nearing our destination, and it was still some time until dawn. I gave her the gate code and we went over the cattle guard and closed it behind us. It had been some time since I had been here, but I remembered the spot they called 'sunrise lake', near one of the three artificial lakes created on the ranch specifically to be attractive to birds when they spotted them from the air. We reached it and Peggy parked and shut off the Rover, running the windows down first. I took her hand and kissed it. Her Suzie signal was modulated with all those wonderful images again. I showed her the app that my grandmother had suggested and that I had downloaded to my smart phone. I had logged several species that I saw around campus last week. Soon it began to get pink towards the east, and some birds started to chirp. As the sun rose and it became light, we saw dozens of birds on the water. She gasped and logged five new species for her in the first five minutes. They were all new for me, too. Something startled the birds and many took flight, and she spotted two more at that point. Most of the birds were off and flying now, and when she finished typing into her phone, I smiled at her and said \"I count seven.\" \n\nI took off my shoes. \"One.\" Then my socks. \"Two.\" Then my shirt. \"Three.\" Then my belt. \"Four.\" Then my pants. \"Five.\" Then my underpants. \"Six.\" I smiled. \"Nothing left. What is your request?\"\n\nShe smiled. Her Suzie took on a life of its own. It filled my mind. If those modulated images were her request, it was going to take a long time to fulfill them. It was my duty. She didn't count each piece of clothing off; she just stripped, tossing things into the back seat.\n\nIf Suzanne's wonderful breasts were like big grapefruit with small strawberries on top, and Lara's were like honeydew melons with jumbo pencil erasers on top, then Peggy's were like small watermelons with baby peaches on top. The nipples were even a little bit fuzzy like peaches. There were erect and wrinkly with little goose bumps all over them. They moved when I told her how much I liked them. They crinkled when I blew on them. They vibrated when I licked them. I lost myself in them completely. Her Suzie was giving me raucous feedback and she got close to an orgasm. She was a big girl, and she was maybe carrying 25 extra pounds, but she was carrying them on a fine chassis. I resumed my efforts, sealing my lips to her nipples again and gently using my fingers to roam between her legs. I slowly advanced, teasing her by keeping her Suzie on a slow and steady climb, and suddenly she threw her head back and came with a grunt, shaking her head from side to side. \n\nHer Suzie gapped and when it restarted I started back in on her. I escalated carefully by pulling and tugging gently on her labia and when she came for the second time, her Suzie signal was so resoundingly strong that it almost became part of my spinal reflexes. The signal was so sweet and so wonderful that I just wanted to hear it pop again and again. The back seat was full of gear with clothes on top of it, so we stitched seats. I put her in the passenger seat, and used the electric controls to run it all the way back and tilt the seat back almost all the way. The Range Rovers had plenty of leg room for the front seat passengers, so there was plenty of room for my legs as I knelt between hers. She reached up and grabbed the straps above the seats and then her arms were above her head so her breasts were held up and posed perfectly. But they were just for show, because all the go was going on between her long legs. She pulled herself up on the straps, spread her knees apart as far as the Range Rover's interior would allow, and I began to gently tease her with my lips and tongue. \n\nBeautiful juices began to flow, and even more beautiful Suzie signals began to play. She had the same reflex that Mrs. Douglass had; to squeeze her legs together when she came, and she trapped my head between those thunder thighs and there was no escape, not that I wanted to. I didn't even need her Suzie to tell me when to start in on her again. I just waited for her thighs to relax. Her taste continued to improve each time she came, and soon it far exceeded my fondest memories of Melanie and displaced them completely. Four big ones later she was having trouble breathing, so I took a break and swung over to the driver's seat and just watched her breathing. Those massive breasts heaved and swayed like two big boats on a churning sea, and her wonderful smell dominated the interior even though the windows were all open. She finally looked over at me with a red face and embarrassed smile and I smiled back like the big dummy I was feeling like. \"Is there a cabin or something here where we could be inside?\" she asked. \n\nI started the car and drove to the main house. When we got there, I pulled on my pants and retrieved the key, opened the front door, keyed in the alarm code, and then opened the garage door and drove the Rover inside, closing it behind us. I led Peggy to one of the guest rooms, threw her on the bed, shed my shorts, and climbed on top of her. I kissed her a few times, and then entered her without any further preparation. She was hot, wet, and very tight. She felt wonderful. I was totally plugged into her Suzie and hearing every nuance. I tuned for maximum stimulation and she bit my shoulder as she came again. I had reached the Zen zone; hot, hard, and able to delay my orgasm forever. I listened carefully and put a little more weight on her, which she very much liked, and suddenly she came again. I kissed her tenderly and she just about sucked my tongue out of my mouth. I pounded her even harder, and she like it even more. Her big, tall and well padded frame could apparently take everything I could dish out, so I went for maximum penetration, and she came again. Her Suzie signal was clear, perfect and signaling true ecstasy. Then it took on a fuzzy tone and I caught a new image. Well, her wish was my command. I whispered in her ear \"I am going to finish off in your mouth, and you better swallow it all!\" I did, she did, and her Suzie reached new heights. She wanted more! I needed to rest. She did swallow everything in a wonderful fashion, facilitating me kissing her languidly for a long time. She sent the loudest contentment signal I had ever experienced. I was pretty happy, too.",
        "We cuddled and tried to regain normal breathing patterns again, kissing about every 60 seconds. It was totally blissful for me. I maneuvered her into my favorite rest and repose position, with her head on my chest near my nipples. I know we slept for a while, perhaps making up for the early start this morning. She awoke and began to kiss my nipples, which had the usual result. She took me in her mouth and got me completely hard in seconds and desperate to be inside her soon thereafter. I had to take a crack, so to speak, at her from behind. I spun her over on all fours, and used my hands pretty roughly to spread her cheeks, and her Suzie flamed in direct proportion to how rough I was treating her backside. I flied that away for further reference and entered her pussy as deeply as I could. She gasped and pushed back against me, seemingly hoping for a little more. I began spanking her with each thrust, and she came almost immediately, with a miniscule gap in her Suzie before it waxed again. I shifted my knees to be a little closer to her, reached up and pulled her hair, and fucked her as hard as I could, slamming myself against her ass with each stroke. Her Suzie was signing little trills with each slam, and soon she came again. I pulled my knees up and put them just outside hers, effectively getting up on top of her to get deeper penetration. I put my entire weight and my entire effort into pounding her just as hard as humanely possible, and getting just as far inside her as I could. She began to relax her legs a little bit to get me further inside, and then she dropped her knees and laid flat on the bed while I continued to pound into her. With her pinned to the bed by my weight, I grabbed her hair again and pulled her head back around to look at her face, with bore a fierce grin as she smiled through gritted teeth. She came in almost seizure like fashion, and then her Suzie signal smacked me and I came almost involuntarily. I came so hard I almost blacked out, possibly the most violent and mind altering orgasm I had even had. \n\nI just relaxed and put all my weight on her, and she bore it easily and actually seemed comforted by it. I began to kiss the back of her ears and her neck. My thighs pressed all along the back of her legs and buttocks, spreading out my weight evenly across a large area. I kissed her shoulders thoroughly, and she still had not moved except to breathe. I shifted my knees outside of her legs, and used my arms to support much of my weight, and began to kiss her lower back and the top of her ass. Her contentment Suzie morphed to rising excitement, and her modulation told me she had deduced my destination. In fact, her images provide a little roadmap and script for our play. \n\nPeggy said \"Will you excuse me for a few minutes? I need to get something out of my jeep and then use the bathroom.\" I showed her how to get to the garage and she retrieved a little overnight bag and then went into the bathroom. I knew Peggy wasn't a boy scout, but I was very glad she was prepared. \n\nShe returned in about twenty minutes, looking flushed and sending serious Suzie. She carefully got back in exactly the same position as before she left and looked fetchingly over her shoulder at me. Yessum, I will, I thought. I began kissing her big beautiful butt again and sending her big pings of me doing just about everything that could be done to her ass. She wiggled and giggled and Suzied, and I devoted myself to her backside. I kissed her ass, I bit it gently, I licked it like a cow licks a salt lick. She cooed. I used my hands to spread her checks and got my first peek at her little rosebud, and got even more excited than Citizen Kane. I whistled an overacted wolf whistle and her Suzie echoed the note. I blew on it gently and chuckled as it twitched and puckered. \n\nI wondered if Peggy would appreciate the verbal approach. \"Peggy, your beautiful ass is a work of art and your little rosebud is like a precious flower.\" I blew on it again, but had not yet actually touched it. It looked like it was sending Morse code. I gently tongued all around it, but not dipping into the lovely valley yet. Her Suzie pulsed, keeping beat with her motions. I licked from bottom to top, lingering only for an instant on her lovely little opening and heard her draw in a deep breath and then sigh. I tongued back and forth, covering the entire territory from her pussy to her anus, and loving it all. Then I just covered the opening with my tongue and pushed with the flat surface, not trying to slip inside her. Her Suzie flamed and sent images of me plunging my tongue into her. I teased her, pushing the flat, and then rolling my tongue up and touching her opening but not penetrating. I whispered \"Peggy, I am afraid I am not going to be able to resist it!\" and then I plunged my tongue into her and wiggled it for all it was worth. She spread her legs and pushed her ass up further toward me, and I knew for sure she was my kind of girl. I slipped two fingers into her very wet pussy, and gently moved them toward her G spot as my tongue continued to enthusiastically probe her butt. \n\nShe began to moan and drip even more, and I used my other hand to squeeze her butt cheeks a little further apart. I began to plunge my tongue in and out, and touched her G spot, and she came, sending a wonderful Suzie signal and oozing some more wonderful stuff onto my fingers. I pushed my tongue as far into her as I could, and her Suzie said she was ready for the next step. I put my knees on either side of her legs, and used both hands to grab her butt and spread her cheeks apart. She made a funny little noise and then I pushed my cock up against her entrance and listened for Suzie to say 'yes'. It not only said yes, it said 'hell yes and what are you waiting for?' so I pushed ahead and felt that wonderful pressure I had been craving. I felt a little push and then I slipped past the opening, into a very tight and very hot little wonderland. Peggy began to moan and growl a little bit. I pushed forward slowly and steadily, feeling her stretch and adjust around me. Soon I was almost all the way in, and I just shoved myself the rest of the way. She let out a little scream, and I pulled out and started slowly back in. She reached back with both hands and grabbed the outsides of my thighs. At first she was gently pushing against me to slow and limit my penetration, but after a few more strokes she reached for the back of my legs and began urging me deeper. Perfect. I surrendered to Suzie, tuned into what she liked, and did my best to deliver for her. \n\nShe wanted more, and I tried to go deeper, and she liked it. She wanted faster, I tried faster, and she had her first anal orgasm. I could feel her pussy snapping and dripping, and I was a happy fellow. She did not want me to stop, and I was in the zone, so I kept on keeping on. She liked it. I got rough, and she liked it rough. I pounded her and she took it all. She was close to another big orgasm, and I tried to time mine to hers. Her Suzie was growling and reaching a peak, so I let loose and the feeling of me shooting in her ass triggered her orgasm, too. She shook, I shook, and we were both very happy. We moved into a 'spoons' kind of position and snuggled up and slept some more, blissfully unaware of what was taking place back near campus.\n\nSuzanne's skin had literally crawled Friday when she had called James 'Little Jimmy' Craig, her first freshman frat rat date, and now the exalted president of Alpha Gamma. Jimmy's dad, James Craig, was a former high school and college football hero who had been a complete bust in the NFL and now alternated between doing TV color commentary for college football and running very unsuccessfully for political office. It was a close contest as to whether the father or the son had the biggest ego, and the biggest swelled head. She told him she had been thinking about him, but not exactly what she had been thinking, as that might have constituted a terroristic threat. She told him some of her young soccer girls wanted to come to a 'real fraternity party' and he graciously offered invitations to them all, provided that they wore skimpy bathing suits, and agree to be in the video they were making at the party to promote membership in the fraternity to next year's incoming freshmen. Suzanne asked if the girls could film with their phones so they could prove to their friends they had been to a real frat party, and he said yes. \n\nSuzanne deliberately arrived early, and Little Jimmy took that as a sure sign of her desire to finally sleep with him. He offered the group a tour of the frat house, which they graciously accepted. Suzanne had been suspicious when Mei Ling insisted on going, but two things convinced her to agree to it. First Mei Ling was carrying a second and redundant 'device' for the AG network, and she was much more qualified that Suzanne to install it properly. Second, Suzanne's toughest protector, Big Liz, spend three minutes with Mei Ling and advised that Mei Ling could tie her in knots without breaking a sweat. Big Liz was very impressed with her martial arts training which meant Suzanne was completely blown away. She was also impressed with some of the other girl's devotion to providing the distraction that Mei Ling and Suzanne needed. Marilyn Jackson, who was at the same time one of the best looking and certainly the shyest of the girls, stepped up big time. There were three AG upperclassmen playing cards near the pool, and Marilyn challenged them to a game of strip poker. They drew a big and very interested gallery hoping to see Marilyn lose quickly. Marilyn was a cool customer, and she was staying calm, as the prospect of seeing any of these three guys naked did nothing for her. She was a natural at statistics, and she could usually read tells, too. And she was slow rolling these guys big time. \n\nJimmy offered to give Suzanne a 'private tour' and luckily Mei Ling joined her. When Jimmy tried to maneuver Suzanne into his room, she winked at Mei Ling and went in and closed the door behind her. Mei Ling found a CAT-5 jack hidden in a hall closet and plugged in quickly. She then banged on Jimmy's door and yelled \"I need to use your bathroom!\" Jimmy was not making any headway with Suzanne, so he sheepishly opened the door and Mei Ling quickly used the bathroom. As the tour continued, Mei Ling turned on the charm and feigned great interest in the frat's 'server room' and Jimmy said that their systems guy was doing a 'river float' all day today and was not around. Mei Ling batted her eyes and Jimmy used the master key to let her in, and while Jimmy did his best to impress her with his truly meager computer knowledge, Suzanne found another outlet nearby but not within the locked room, and plugged in before Jimmy or anyone else noticed. \n\nOutside in the 'war drive' van, Cisco and Eddie celebrated as both devices signaled via their fast UWB links that they were on the network and ready for action. They kicked off several carefully prepared command scripts and waited expectantly until they could give the girls the 'get out of Dodge' signal. They watched intently as files moved and were replaced. They had both been up all night preparing the 'payloads' that were about to delivered to the AG website and servers. They were moving all the files to the sysadmin's desktop first, re-rendering them on his video editor, and them uploading them to the website. Anyone tracing them, even the best computer forensics guys, could only conclude that they had originated at that PC and were uploaded by the sysadmin using his password and ID. \n\nMarilyn had worn a special 'trikini' bathing suit, and as one of the frat rats actually filled an inside straight, she took off the right half of her top and exposed one breast. She managed to drag out the argument over whether or not that counted as one article of clothing for a long time. She pushed it until she finally threatened to quit the game, and the frat rats reluctantly gave in. Big Liz, who was standing guard, admired Marilyn's 'pluck' and also began to wish she would lose the other side of that top. Big Liz was not normally attracted to other girls, but she might make have to make an exception for shy and lovely little Marilyn. Several more hands went by with no big bets and no clothing loss, but then one of the AGs went all in on a full house, and Marilyn had a higher full house. Marilyn took her time ribbing him about his naked and erect state, and an even bigger crowd gathered for the game. \n\nForty miles to the south of the AG pool party, the AG sysadmin was marveling at his good fortune. While he floated down the river in an alcohol induced fog, he was approached by two very attractive young women who said they were floating on the river for the first time and they were afraid of getting lost. He offered to be their experienced guide, and then they miraculously confessed that they had forgot to bring sun screen and asked to use his. He offered to help them put it on and they giggled and undid their straps so he could rub it on their backs. He was thinking that this might be a great Saturday for him. He did not recognize their Phi Phi jewelry. \n\nOne hundred miles even further south, two enthusiastic bird watchers were waking up from a nap. Peggy was gently using her second finger to rub my nipples and talking in a sexy, little girl lost kind of voice. \"Robby, I know that you are a good guy, but I know that sometimes good guys have nasty urges!\" \n\nHer Suzie signal was sending excitement and exhilaration, but no one needed to be able to read Suzie signals to know what was on her mind. \"I think you are going to spank me, and spank me pretty hard. I think so. Yes.\" She smiled in sort of a resigned way. \"And that will make my big ass get all red and warm, won't it? Don't you think? Red and warm?\"\n\nI realized that she was imitating the cartoon character Betty Boop, who was enjoying a bit of a retro revival on campus, and being shown as a short during almost all the 'cheap movie nights' in the campus auditoriums. Betty Boop was kind of sexy.\n\n\"And then you will try to make it better by kissing it, won't you Robby? Kissing my big warm ass? I know you will! And that will make me feel all open and receptive, won't it Robby? Open for you? She smiled in a pouty little girl way that was making me hard, and her voice got lower and softer and that made me harder still. \"And then you will take that big nasty hard cock and put it in my ass, won't you Robby? I know you will. My ass.\"\n\nI know I could. She didn't need Suzie signals to tell me what she wanted. \n\n\"And you will have your way with my ass, won't you? Pushing that thing all the way inside me! That is so nasty!\"\n\nI couldn't argue with that. It sounded like a great plan to me. \n\n\"And then you will take that dirty nasty thing out of my big hot ass and make me take it my sweet little mouth, won't you Robby. You will make me suck it and swallow your hot come, won't you Robby? And don't try to deny it, because I know you will make me do it! Because of your urges!\"\n\nIf I didn't have them before, I sure enough did now!\n\nShe licked my nipples. I was now in an absolutely crazy state. \"And then, because you are really a good guy, you will eat my pussy to make me feel better, won't you Robby? My pussy.\" I began to kiss her tenderly. I could not refuse a lady. I had to do my duty.\n\nIn the alley outside the AG house in the parked van, Eddie and Cisco double checked everything, and then ran each other through their checklists one more time to be sure that they were done with all the file replacements. They decided to kick off a backup request via the network appliance, a few hours early but not unusual for a weekend. They watched the traffic from the backup appliance out to the internet, and when it subsided, they signaled Mei Ling and Suzanne, sending them a text with a loud and unusual sound that appeared to come from the cable company reminding them that their bills were due. Suzanne asked Little Jimmy to see his room again, and he got his hopes up again, while Mei Ling retrieved the device she had planted. While Mei Ling was gone, Suzanne explained conspiratorially to Jimmy that she a Mei Ling were a 'little kinky' and asked if he would be their playmate. Jimmy's imagination ran wild, and he quickly agreed to get Suzanne several of his silk neckties and strip for her. He had saved up some 'E\" for just this sort of occasion, and took two tabs, offering Suzanne another. She declined, and then tied his arms and legs to the bed frame, and told him to get ready for a 'whole new experience'. Mei Ling returned, and Suzanne slipped out and retrieved the other device. When she got back to the room, Mei Ling was speaking seductively to Jimmy, waiting for the ecstasy to kick in. \n\nMei Ling asked Jimmy to tell her his 'deepest fantasies' and she would make them come true. She began to rub his chest and he got flushed all over. Suzanne fired up her camera, focusing in on Jimmy and keeping Mei Ling out of the frame. The ecstasy kicked in big time, and Jimmy gushed about how wonderful Alpha Gamma was and how close he felt to his brother AGs. Mei Ling played therapist and encourage him to go on, and he talked about how the 'slide' changed his life. Mei Ling and Suzanne had no idea what that meant, so they asked him to elaborate. He said he never felt so alive and such closeness, and even though it was wonderful, he wanted more and more and even wished he was a pledge again. Suddenly he got a full erection and began to sing the AG devotion song at the top of his lungs. Suzanne filmed until he started the second verse, panned over to a picture of little Jimmy and his father (autographed by both) on the wall, and then when Jimmy started to sing still another verse, she shut the camera down. They made their way back out to the pool and signaled Marilyn and Big Liz that they were finished. Marilyn told both of the AGs that she had to go, but actually gave both of them a kiss and thanked them for playing with her. The entire group of soccer girls formed up and walked out the side door into the alley, getting into the van with Eddie and Cisco.\n\nMei Ling was so relieved that their 'mission' was over that she lost her usual detached cool gave Cisco a big kiss as soon as she got into the van. She was still a little surprised at her own ardor when Cisco returned it with a fervor she had never before experienced. Mei Ling and Suzanne give up their network devices and the guys powered them down and stowed them away. Then while Cisco drove away, Eddie logged into a Yahoo message group, of all places, and left an innocuous message about rock climbing, with the codeword they had all agreed to that signaled that the mission had been a success. They went back to the UDP house to view the new web page on the big plasma.\n\nDown by the river, the float was going swimmingly and the AG webmaster and sysadmin was counting his blessings and figuring that if things went his way he could end up sleeping with both these lovely girls tonight. He was on his way to their hotel room, in their car, to accept their challenge of some sort of drinking game that involved tequila shots and removing articles of clothing. He wasn't totally clear on the rules, or exactly where he was, or what time it was, but it was all good!\n\nI wasn't sure what time it was, either, but the sun was just about to go down, and I already had. Peggy had one of the sweetest most wonderful and edible pussies on earth, and I had spent a long time catering to it after pounding her wonderful ass and shooting in her 'sweet little mouth'. She had come at least 5 times, and we were both in a state of bliss. Somehow I remembered the pool party, and grabbed my phone. Peggy slumbered undisturbed. I used Safari to log into the Yahoo group and recognized the code for a successful mission. I cheered out loud and pulled out my laptop to look at the AG website.",
        "Peggy awoke. \"What's going on?\"\n\n\"I just need to look at a website for a moment.\" I waited for the ranch's satellite internet link to come up, and then the main AG site filled the screen. \n\nPeggy startled. \"The Alpha fucking Gammas! If you are a member we are definitely finished!\"\n\nI laughed. \"No chance of that! If I were ever to join a frat it would probably be UDP. But a friend told me to take look at a page on their site!\" \n\nI looked for the tab for the \"Coed Cooze Cam\" and found it relabeled as \"Campus Creep Cam\" and when I clicked the same old page layout came up but with a whole new set of thumbnail photos to click on. The 'Crimson and Cream' video with Lara in her red outfit was gone, and the thumbnail was replaced with what looked like a picture of James Craig, the football guy, and another younger guy. There was a yet another thumbnail at the top of the page labeled \"Alpha Gamma's Latest Pledge Class\" and when I clicked on it I saw the 'radioactive' video that Cisco had shown me earlier. \n\n\"Holy Shit!\" Peggy exclaimed. \"That's disgusting. What was that?\"\n\nThe caption below it video said 'The latest Alpha Gamma pledge class upholds a long standing and seminal tradition and slides into history, joining with active members and all the previous pledge classes in the annual induction ritual.'\n\nEvery thumbnail I clicked on showed another year's 'slide' in disgusting clarity. Peggy was aghast. \"Is that really what I think it is?\"\n\n\"I am afraid so. It apparently had been one of their rituals for many years.\" \n\nI realized that Cisco had carried through with my idea in spades, and replaced the thumbnails with the most recognizable AG alum in each video. Lara and all the other 'coed' videos were nowhere to be found. Down at the bottom was a larger, higher quality thumbnail labeled 'AG President Jimmy Craig'. When I clicked it we saw a super high quality HD video that was new to me. A young guy was tied to a bed on one side of the frame, and next to him the video of him sliding and coming up covered with goo was on the other. Then as a blackout circle appeared over his crotch, his loud and off key voice quivered with genuine emotion as he sang the Alpha Gamma song of devotion, obviously highly intoxicated. \n\nPeggy drew in a sharp breath. She grabbed her phone and hit a speed dial number. \"Jesse, call me back forthwith! You are not going to believe which candidate and his son just showed up in some incredibly embarrassing videos on the web!\" \n\nAt the UDP house, they played the videos over and over, and the small audience screamed their approval and uproarious laughter each time they ran. Mei Ling and Cisco waltzed around the floor to the Alpha Gamma devotion song each time the video was repeated, and Suzanne danced with Eddie, Oiler, and a couple of the other UDPs.\n\nDown at the ranch, Peggy's phone rang and I only heard her side of the conversation. \"No YouTube yet, but it won't be long. If I were you I would just film the screen and capture each of those video's before they wake up and take them off. Cousin, as the youngest and most ambitious political beat reporter in the Houston TV market, shouldn't you be getting James Craig on the phone for his 'reaction'? Yes, you are welcome. Let me know what you find out!\"\n\nWhile she was talking I called Asa Weltschmerz and said \"Things are going great!' and he said thanks and rang off. Then I called Kevin and gave him a heads up and told him to give his father the same advice that Peggy had about capturing the videos.\n\nAfter ducking a call and listening to the message from Channel 13 EyeWitless News, James Craig tried to figure out what video and what website the reporter was asking about. He called Little Jimmy and got only voicemail. He did a query on his name and video, limiting the hits to the last 24 hours, and up popped a link to the Alpha Gamma website. He clicked. He fainted.\n\nMillicent Hathaway watched Mei Ling dance with The Cisco Kid and knew that Robbie Roberts had been correct. If those two had not already slept with each other, they certainly would tonight. Millicent texted a recent Phi Phi graduate that was doing an internship as a video producer at TMZ in California, thinking this little scoop might just get her some face time on camera. Millicent realized she had to deal with the fact that she had a bet to pay off on. She found herself shaking a little bit, and could not stop from wondering which two women Mr. Roberts had meant? But right now she realized that she needed to go upstairs and change her wet panties. It had certainly been an interesting Saturday. \n\nSuzanne leaned back and watched Mei Ling and Cisco dance, and wondered what was making Millicent Hathaway so dewy eyed. Suzanne missed Robbie already, and she was looking forward to enjoying Sunday sewing and Robbie and Lara without that feeling of impending doom. She was going to really let her hair down with those two tomorrow. It was going to be the hottest sewing circle ever held. "
    ],
    "authorname": "conanthe",
    "tags": [
        "anal",
        "pool party",
        "anilingus",
        "birding",
        "big butt",
        "fellatio",
        "bbw",
        "homoerotic ritual",
        "oral",
        "fraternity"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-08"
}