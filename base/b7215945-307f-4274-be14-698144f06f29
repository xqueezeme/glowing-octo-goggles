{
    "title": "When We Were Married Ch. 04A",
    "pages": [
        "THO' HELL BAR THE DOOR\n\nAuthor's note: And apology. I've made a few mistakes in this story, despite trying to keep an involved story straight. First and most grievous is that I put the wrong age in for Bill and Debbie's daughter, Kelly. She was 17, not 16, at the start of the story. If and when I re-post I'll correct that. She's 17 and Bill and Debbie have been married for 17 years. It's possible. I've tried to keep away from glitches like that because I want the story to work and I don't want readers constantly wondering if what they've been told is correct. I think that's the major glitch. Another glitch is that Debbie is an Associate, not Assistant Professor at UNF. There are two levels, but Associate is the highest and closest to regular professor, and Associates do have job protections that Assistants usually don't. Finally, most embarrassing, is that murder trials do indeed require 12 jurors, not six as I mentioned in the second chapter. I have no excuse for that one. I've covered murder trials and I should have thought about that. I hope eagle-eyed readers will keep me honest and I'll do my best to keep the story consistent.\n\nDQS1\n\nTuesday, July 19, 2005 \u2013 12:10 a.m. \n\nMy name is William Maitland and until 10 minutes ago the only pussy that I'd had intimate knowledge of in the last 20 years belonged to a blonde goddess named Debbie. She had been and was but would not much longer be my wife. \n\nCurrently I was up to my balls in the delicious brunette vagina of a French dream named Aline, plunging in as rhythmically as one of those wells you see in stock shots of the California oil fields.\n\nMy mouth was full of soft French titty capped with a thick, eraser nipple that I was also rhythmically sucking on while the earlier mentioned Aline was doing her best to both tear my ears off while the aforementioned pussy was clutching at my cock with muscle control that was, quite frankly, amazing and unbelievable.\n\nWe were in my suite in the French cruise ship Bonne Chance, and never has any vessel been more aptly named because my luck had indeed changed since I set foot on its deck.\n\nI would feel completely on top of the world if I were not fucking the wife of a man who I would consider a friend and colleague except that if I spent any time thinking about that fact I'd go back to feeling shitty and guilt-ridden and I just didn't want to go back there right at that point.\n\nShe pulled on my ears harder and gasped, \"fuck me harder...\"\n\n\"I'm doing my best,\" I managed to gasp. \"...I'm out of practice...\n\n\"You couldn't tell it by me, ch\u00e9ri....oh.... Mon Dieuuuuuuuuuuuu.\"\n\n\"Aline.....Aline...I'm going to...to...you want me to pull out?\"\n\nShe rose up to seize my lower lip in her teeth and bit so hard she drew blood.\n\n\"You pull out and I will kill you, I swear to God....\"\n\nAt that point I began to spurt, again and again and again. It had been a long, long, long time....\n\nHer pussy tightened and relaxed and tightened. It felt exactly like she was milking me. And I started coming again. I didn't even know that was possible. I finally stopped. I think I'd passed my kidneys. My cock was so hard it hurt.\n\nI held myself up above her and watched her face. She had shut her eyes tight as if in pain but now her face relaxed and the grip she had on my hips with her legs relaxed and they finally slid down to the bed. She opened her eyes and smiled up at me. \n\n\"How long...\"\n\n\"How long what?\"\n\n\"How long did you say it had been...since you had sex?\"\n\n\"I didn't say, but four months more or less.\"\n\n\"No wonder...you know you....inundated me....we need to change these sheets. I'm lying in a puddle....\"\n\n\"Sorry....\"\n\nShe pulled me down for another deep kiss and ended it by licking the blood off my lower lip.\n\n\"Don't be, cheri...my God, that felt so good.\"\n\n\"Did you...should we have...are you...\"\n\n\"I am safe...and so are you....no worries, Bill.....\"\n\nI fell to lie beside her, my cock slipping out of the warm center of her as I did so. God she had felt good.\n\nShe reached out and touched my rampant dick. A look of wonder appeared on her face. She pressed her fingers around it and squeezed. Somehow I was still hard as a rock.\n\n\"Are you sure you're not really 18?\"\n\n\"I don't understand it either.\"\n\n\"I do, cheri. You just want to fuck me very very much, don't you.\"\n\n\"Who wouldn't.\"\n\nShe slid her face down my belly. I still had a slight paunch but not much of one. And for the first time in years, I wasn't embarrassed to have a woman see me naked. She held it in both hands and licked the tip, still dripping and covered with both our juices.\n\n\"You don't have to do that Aline, Let me clean up.\"\n\nShe took it in her mouth and deep throated the entire length. Despite Debbie's psychological warfare on me, I knew I wasn't that small, just not in Doug's league. And still Aline swallowed me without the least hint of trouble. I wondered just how big Philippe was.\n\n\"You do that very well, I must say. I thought you said....\"\n\nShe took it out of her mouth with a long, messy slurp and looked at me grinning, \"It has been six months..but it's like...as you say...riding a bicycle..you never forget how...\"\n\nThen she went to work with a vengeance. It took her another 10 minutes but eventually I just jammed her head down with both hands and jerked my hips as I erupted again. She didn't resist but just swallowed and swallowed and then licked me clean again.\n\nI lay back feeling like I really was a hundred. She rested her head on my chest.\n\n\"You want to....you know...use the bathroom?\"\n\nShe looked up into my eyes and I realized for the first time the color of her eyes...they were the color of the sea, a deep blue green.\n\nI had to tell myself again...\"you will not fall for this married woman.\"\n\nShe licked her lips.\n\n\"Why...I love the way you taste, Bill.\"\n\nHow was I NOT going to fall in love with her.\n\nAnd while I was thinking about that, or something else, we fell asleep in that big red bed, entangled in each other's arms. We never changed the sheets and it was the best sleep I'd had in four months. Maybe a lot longer...\n\n ######################################\n\nTuesday, July 19, 2005 \u2013 8 a.m.\n\n\n\n\"Hi, Debbie. You got a few minutes before you have to leave for work?\"\n\n\"Yeah, mom.\"\n\n\"I just wanted to talk to you for a minute.\"\n\n\"Okay. How is Kelly?\"\n\n\"She's a 17-year-old almost 18-year-old.. You remember what that was like?\"\n\n\"Unfortunately. Has \u2013 she talked about why she bailed?\"\n\n\"Just that her mother \u2013 I quote \u2013 is a miserable jealous bitch who couldn't keep her own husband and now wants to grab all the hot guys for herself. I gather you two had a falling out?\"\n\n\"We had a difference of opinion. She thinks she's 25 and I think she's an 17-year-old with the maturity of a nine-year-old.'\n\n\"That's all you want to say about it? She won't tell me what happened.\"\n\n\"Someday when you're 85 and in a nursing home, I might. Not till then.\"\n\n\"Does it have anything to do with Doug?\"\n\n\"No.\"\n\n\"You wouldn't lie to your mother?\"\n\n\"Have I ever?\"\n\n\"Oh, please!\"\n\n\"I know, silly of me. I forgot you knew me when. I'm not going to tell you, but you'll be happy to know that Doug and I are through.\"\n\n \"No. Are you serious?\"\n\n \"Yes, mother. I know this will make your day. We are officially through. I told him to pick up any of his things he had here, he's not coming back and I'm not seeing him.\"\n\n\"Well at least that proves that prayer works.\"\n\n\"Very funny. Doug wasn't a bad guy...it's just that things...weren't going to work out. But he was a good friend.\"\n\n\"With benefits.\"\n\n \"He was a friend.\"\n\n \"That's your story and you're sticking to it. At least this clears the way for you to start working on things between you and Bill.\"\n\n \"Mom, when are you going to get it through your head. We are going to be divorced in a month. There is no ' working on things.' Things are over.\"\n\n \"He still loves you.\"\n\n \"Sure, that's why he won't talk to me. I've tried and all he does is hang up on me or tell me to get out of his office. If that's loving me, I wouldn't want to see what hating was like.\"\n\n \"That doesn't mean he doesn't love you. Just that he's angry with you. You hurt him, baby, God you hurt him bad.\"\n\n \"I know. But it's not just him not wanting to get back. I don't want it mother.\"\n\n \"You're lying.\"\n\n \"Where have you been the last 10 years, Mom. You know what it's been like.\"\n\n \"You've got problems. Who doesn't. The reason you couldn't get back together with him is that there was something in the way \u2013 Doug. Doug's gone.\"\n\n \"It's not that simple, or easy. In the first place, I don't want that marriage back the way it was. I don't \u2013 I don't....love him. Not like I used to.\"\n\n\"You forget I've known you for nearly 40 years. You can lie to anyone else, but I know you better.\"\n\n\"Anyway, Mom, it isn't going to happen.\"\n\n\"Why not? I'm not saying it would be easy. But couples have come back from worse breaks. If you want your marriage back.\"\n\n\"It can't, mom. Just let it go. Bill won't ever consider us back together again.\"\n\n\"How-\"\n\n\"I just know. In a month we'll be divorced.\"\n\n#########################     \n\nTuesday, July 19, 2005 \u2013 8 a.m.\n\nIs there any better way in this world to awake than with an inhumanly beautiful brunette impaled on your cock and riding it like a cowgirl on a bucking bronc. I decided after about two seconds that, no, there wasn't. Maybe, despite my sins and failures as a man, somebody up there \u2013 if there was somebody up there- liked me. \n\nShe bounced up and down and then did a hula hoop motion, rotating around and around on my cock. I was entranced and amazed. How in the hell was I doing this. I must have said it out loud.\n\nShe stopped bouncing and squeezed me again with that amazing pussy. God. Words could not do that justice.\n\nShe bent forward to kiss me and I tasted mint on her breath and on the lipstick she had reapplied. She had obviously gotten up in the middle of the night and tended to matters. I hated to think what my breath smelled like. She didn't seem to mind.\n\n\"You said....it was four months....you could not get hard....\"\n\n\"Not even a little bit....\"\n\nShe leaned forward and I held her hips in my hands to steady her as she kissed me lightly.\n\n\"You watched pornography?\"\n\n\"un huh...\"\n\n\"Well, Bill, did anything you see feel better than my hot, tight pussy squeezing your big, haaaaardd cock....well?\"\n\nI felt a twitch and she did something that stopped the explosion that was about to erupt.\n\nI just shook my head and she smiled as she said, \"You just needed a real woman in your bed....\"\n\n\"Yeah,\" I said, thrusting up.\n\nShe laughed.\n\n\"Buck as hard as you want, my stallion, you're not throwing me.\"\n\n\"Is that a challenge?\"\n\nI answered with actions and not words and damned if she wasn't able to ride me until I squirted three hard times while that unbelievable pussy did its best to squeeze my dick off and she screamed until I jammed my tongue down her throat.\n\nLaying beside me I asked her, \"Did you climax?\"\n\n\"What do you think, Stallion? If this room wasn't soundproofed, we'd have security in here right now .\"\n\nAfter awhile I rolled over and said, \"I'm going to brush my teeth and take a quick shower.\"\n\nThe water was running when she slipped in behind me and dropped to her knees. Looking up at me as the water ran down her face, she grabbed my limp cock and started sucking again. With the water pasting her thick black hair to her face, if it was humanly possible I would have gotten hard again and fucked her face but the flesh just wasn't willing. I didn't think I had a milliliter of precious bodily fluids left in me.\n\nAfter a few minutes she reluctantly let it go with one last lick and stood up beside me.\n\n\"He doesn't want to play. You are a meanie.\"\n\n\"I'm going to need transfusions if he comes out again any time soon.\"\n\nShe grinned and opened her legs, running two fingers inside her and coming out with an oily liquid that ran off with the shower water.\n\n\"I'd be glad to help you....you have made me so, so wet.....\"\n\nI hadn't done it that often, but regardless of the fact that I had just come inside her I went to my knees and started nuzzling and then groping inside her with my tongue. If I thought about it, it would be fairly disgusting. I'd eaten myself out of a Debbie a few times, but I never liked it. But there was no way in hell I wasn't going to eat this vision's pussy until she came all over my face. You can do anything if you don't think about what you're doing.\n\nShe came so hard I thought she was going to strangle under the shower and then she slid down on her butt to lay beside me under the pounding water. \n\nI licked the water off the side of that face and said, \"I still think I'm going to wake up alone in my bed any minute. This can't be real.\"\n\nShe rolled to bury her face in my shoulder. Thank God that most cruise ships seem to have unlimited hot water. Otherwise we'd be freezing by now.\n\n\"You know I wanted you to come after me, don't you?\"\n\n\"What was the secret sign I was supposed to pick up on? I missed it. I almost didn't come, except I couldn't help myself. You've placed a spell on me.\"\n\n She ran one long red fingernail down my chest, almost hard enough to leave a line behind it.\n\n \"A woman wants a man to pursue her, to win her. She wants to know that a man wants her enough to challenge any obstacle. When they told me you were at the Lounge I acted angry, but inside I started to get wet. And when they told me you wouldn't leave...I knew I was right.\"\n\n\"About what?\"\n\n'You are the kind of man who cannot be stopped when he knows what he wants. And you wanted me, whether you were willing to admit it or not. I really wasn't surprised. There's an old expression....it means, roughly translated, a man who cannot be stopped.\"\n\nI just gave her a curious look.\n\nShe leaned over to nibble on my ear and whispered, \"You are the kind of man who would come for me, 'tho' Hell bar the door.' Hell itself could not frighten you off. \"\n\n\"But what if I hadn't shown?\"\n\n\"I would have been devastated.\"\n\nShe gave me a long lingering kiss before pushing herself to her feet.\n\nLooking down at me and extending her hand down to me, she said, \"I see what your wife must have seen so many years ago. I can see why she fell in love with you.\"\n\nAs I reached out to turn off the water I couldn't help asking her, \"You're not doing that, are you?\"\n\n\"Does that frighten you so much? A man who would stand against a mob, frightened of one woman?\"\n\n\"You're married, Aline. And you told me you loved Philippe. Was that the truth?\"\n\nShe hugged me and I thought it might be so I couldn't read her eyes.\n\n\"I told you, Bill, you don't know anything me...or my marriage. I know it bothers you....because you're the kind of man you are. But I'll answer your questions. In a little bit.\"\n\nWe dried each other off, which led to more playing and eventually we wound up back on the bed, after changing the sheets. I hadn't this much sex, this much continuous sex, since...probably the last cruise Debbie and I had took to Hawaii ten years before. As I thought about her and Doug I still felt the anger rising and the pain, but somehow it wasn't as bad.\n\nWas life ever anything but high school replayed over and over. She had a new boyfriend and I had had nobody. Now I had this beautiful woman in my bed. I had my own girlfriend and I wasn't such a loser anymore. So damned high school.\n\nShe lay back in a pose reminiscent of a famous French picture I can't remember the name of. She lay on her side with her back to me, the womanly curves in full view as well as exposing the luscious slit between those long legs.\n\n\"You like? I have been told that my ass is my most attractive feature?\"\n\n\"You've got a fantastic ass, Aline. No doubt about it. But...\"\n\nI rolled her over and lay down beside her, sucking on one luscious nipple.\n\n\"You've also got fantastic breasts and a mouth that should be in the Louvre.\"\n\nShe pushed my head away. \n\n\"But my breasts are so small, compared to...\"\n\n\"Your tits are fantastic.\"\n\n\"Hers are so much bigger than mine. I googled her after I learned about you and found a picture of her. She is huge. Am I a disappointment?\"\n\n\"She has big tits, but size isn't everything. Yours are perfect for your size. They're soft and suckable and your nipples are much bigger than hers. They are truly 'Grand Tetons.' If I had any juice left, you'd know how much I like them.\"\n\nI went back to suckling and she ran her hands over the stubble that had begun to sprout on my skull.\n\n\"I would know you were a lawyer even if I didn't know it, you silver-tongued devil. Philippe once said that not all liars are lawyers, but all lawyers are liars.\"\n\nI raised my head from those luscious breasts and leaned back on one elbow.\n\n\"Tell me about you and Philippe. I want to know, Aline, no matter what.\"\n\n\"I met Philippe at a party in Paris, as I told you. It was as you Americans say, love at first sight. He is a gorgeous man and I knew he had many women when we married. I believe he gave up that life when we first married. But...I had already started my career when I met Philippe. I was 27 when I met him. That was ten years ago. Three years after we married I had our son, Andr\u00e9.\"\n\n\"You have a son? Where is he?\"\n\n\"He attends school in Paris. He lives with Philippe.\"\n\n\"How long...\"\n\n\"Three months, sometimes four months a year. I miss him always. I try to be with him while he is out of school as much as I can. When I am with him, he is my life. We do everything. And I try to make up with Philippe for the time we are apart...\"\n\nShe pushed me away and rolled to her side, her back to me.\n\n\"I wish you had waited to ask me. I don't even need to see your face to know what you are thinking. What kind of mother can leave her husband and son for most of the year to wait on strangers on what is nothing more than a floating hotel? Do you see a monster when you look at me now, Bill? Do you want me to get my clothes and leave?\"\n\nI put my hand on her bare shoulder. I could feel her shiver.\n\n\"Another man would simply fuck me and not even think of this. But I already know enough about you to know you can't do that. Do I disgust you?\"\n\nI rolled her back toward me. Tears glistened in those beautiful blue-green eyes.\n\n\"No. I just don't understand.\"\n\n\"When I met Philippe I had already worked five years on the Bonne Chance. I had a career. I had a life. After we...knew...that we could not leave each other...we talked about this. I checked other cruise lines, other travel lines. I even received a leave of absence for three months and worked another cruise line. But...\"\n\nShe looked at me as if willing me to understand.\n\n\"I know many people would not understand my decision. But you have stood with me at night on the decks, watched the sea during a storm, watched lighting roll in the sky, seen the waves roll by on a calm night. Every night is different. I thought about leaving this life when Philippe and I married. But....I love it. I love the sea, I love my job, I love the people I meet, I love the fact that we roam the world. No other ship is like this. We have the entire world. \n\n\"How can I leave this?\n\n\"We talked after six months and we decided....Philippe could not leave his work. His is an important job and the day will come when he is an important man in the French government. He loves his work, but it is a step on the path to real power. I could not ask him to give that up. And I made him understand that while my job will never bring those benefits...it is equally important to me.\n\n\"So, we would live apart for part of the year, sometimes six months, sometimes nine, but we loved each other to much to say goodbye to each other. Couples do manage to maintain a marriage while living apart, even in your country.",
        "\"And then.... Andr\u00e9 came along.\"\n\nShe buried her face in my naked chest and kissed both nipples.\n\n\"I took a year off. The cruise line liked me and said they would save my job that long. With leave and the year, I was with Andr\u00e9 until he was almost a year old. I thought I would die, but I left him with Philippe and a governess. I knew I couldn't take him with me.\n\n\"There were a hundred times when I almost went to the captain and told him that I had to quit. But I didn't. And with each day that went by, I was able to live with my decision more easily. Not easily, Bill, just more easily. There is not a day that goes by that I do not think of him.\n\n\"He is nearly seven now. And I am mama who flies in with presents and kisses three months a year. I know I love him. I know he loves me. I hope he will love me when he grows to be a man and realizes that I missed most of his young life. But Philippe is a wonderful father. He is raising him to be a good man.\"\n\n\"I don't hate you, Aline. I just...\"\n\n \"I know I should quit, but...\"\n\n \"The way I should have quit long ago and maybe kept my wife and family....but I couldn't. I understand, Aline. Believe me, if there's anybody on this earth that knows what you're talking about, it's me.\"\n\nShe held me tightly.\n\n\"Do you believe in kindred souls, Bill? I still cannot believe that in a matter of days I have...these feelings for you. First you intrigued me, then you aroused me and then you broke my will with that damned Fleur-de-lis. You know, if I live to be 90, I will never part with it. And if we never see each other again, I will always think of you when I hold it.\"\n\n\"Then it was the best $7,000 American I ever spent. It would have been worth it for one night.\"\n\nI laughed as I felt her tense. I knew she knew I was joking, but....\n\n\"You know that's why I was so angered with you that night. I am not a prostitute. Never have been. But so many rich and powerful men just automatically assume if you are attractive and on a cruise ship like this, you can be bought.\"\n\n\"You wouldn't be here now if you thought I was trying to buy you.\"\n\nShe bit my nipple gently and then a little harder.\n\n\"You couldn't afford me, William Maitland, if you were to try to buy me.\"\n\nI teased her, \"so how expensive would a night with you be?\"\n\nShe bit the nipple harder, then kissed it to make it feel better.\n\n\"I have been offered $20,000 cash, condominiums, diamond necklaces worth at least 20,000 euros. One man, a very old and wealthy Arab, offered to buy me my own island. A small one, mind you, less than an acre in the Caribbean, but he said it had running water, a small power station and a port where yachts could dock. All he wanted was my body for a month.\"\n\n \"Do you have a private island?\"\n\nShe nipped me so hard I yelped. Then she started licking it until the pain went away.\n\n\"You bastard. You'd better be joking. No, I did not accept his offer.\"\n\nI pulled her lips to me and we made out for awhile. If I could have gotten hard I would have been inside her again. Had I been this horny when I was 18? Finally we stopped for awhile to resume breathing. I closed my eyes and when I opened them again Aline was sitting beside me on the bed. She was dressed and again wore the Fleur-de-lis pin over her breast.\n\n\"I have to go now, for a few hours, Bill. I have someone covering for me, but I am still a working member of the crew.\"\n\n\"Okay. But first...why are you here? With me. In my bed?\"\n\n\"Because I am very stupid.\"\n\n\"Why?\"\n\n\"Not the sex. When we realized we would be apart so much, we made the decision \u2013 we never talked about it but we both knew \u2013 that I would never ask him about his life in Paris and he would never ask me about mine on Bonne Chance. I know he has women. He tries to be discrete, and he is careful, but he is a man of....large appetites.\"\n\nI held her face in my hands and asked a question that I didn't want to ask. I didn't have the right to ask it. But I had to know.\n\n\"And....your appetites?\"\n\nShe looked me straight in the eye.\n\n\"I have been with three men, other than my husband, in the last five years. Geraldo was a 26-year-old Spaniard whose families owns mines in Spain and South America. He cruised with us for three straight months, wooing me with wine and gifts and laughter. He made me laugh. He was like a puppy, eager to please, so pathetically transparent that he wanted my body. Finally, I could not say no any longer.\"\n\nShe looked me straight in the eye and said, \"He was a wonderful lover. Handsome and \u2013 large \u2013 and he concentrated on my pleasure before his own. I enjoyed our time together, but I never felt guilty because it was purely sex with him. I gave him nothing that I had promised to Philippe. Finally his family made him come home. He has contacted me a few times since then, but he knew we would not be together again.\n\n\"The second was Niccolo. He was a 63-year-old Italian furrier from Rome. He sailed with us three years ago. Twice. He was an intelligent, charming and handsome older man. His wife had died of cancer a year before and he just...looked so lost. I did not plan to...be with him, but he touched my heart. When he came back the second time, I went to him the first night on board.\n\n\"And you are the third.\"\n\nShe looked away and said carefully, \"Do you think I am a slut?\"\n\n\"No, not under those circumstances. I know...I can see where Philippe would have women and anyone can become lonely separated from their husband for months, or years. But why did you say that being with me was stupid?\"\n\nShe reached out to cup my face in one small hand.\n\n\"Because Geraldo was a boy who wanted sex and Niccolo was a sad older man who needed healing for a broken heart. I never felt anything \u2013 serious \u2013 for either one. Nothing could ever have happened with either one. They would never be a threat to Philippe \u2013 or what we had.\n\n\"You...are dangerous. I told you I felt a spark the first moment I looked at you and you looked back. I have been....unsteady...I have lost my footing since that moment. I love my husband...and you obviously still love your wife...but when I am with you....This cannot be happening. We have only known each other a little more than four days. You cannot...feel...these kinds of emotions in such a short time...\"\n\n\"And you were going to stop anything from happening last night. Until I made that grand romantic gesture. Do you wish I hadn't gone into Marsh Harbour?\"\n\nShe kissed me hard before releasing me.\n\n\"No. I will never regret last night. Someday this life will be over and Philippe and I will be a normal married couple with a grown son and hopefully grandchildren. Probably in Paris. Philippe will be a powerful man rising in the government and I will attend events and parties with him. And people will look at us and say we are the model of a happy couple.\n\n\"And I will love and honor my husband. But I will never forget you, or the hours we have spent together. And I will wear your Fleur-de-lis pin. If anyone asks, I will tell them it was a gift from a dear friend. And Philippe will never ask me exactly how you came to give it to me.\"\n\n####################        \n\nTuesday, July 19, 2005 \u2013 11 a.m.\n\nThe Price of Betrayal  \n\nThe last class of the morning was trooping out grumbling about their reading assignments and project homework as usual when Miriam Bender showed up at the door to her classroom The secretary to President Myers was standing in the doorway. As usual she appeared to be looking down her nose at Debbie without actually doing so. She was just another flat-chested bitch.\n\n\"President Myers would like to see you, now, if you don't mind.\"\n\nDebbie just stared at her for a moment. He had to know she didn't have another class until 2 p.m. because of the summer schedule. So this was something planned and not spur of the moment. She had a sinking feeling she knew what it was.\n\nBender knocked on the ornate decorated wooden door to his office, opened it and stuck her head inside. A moment later she motioned to Debbie to enter.\n\nMyers was standing behind his desk, his back to her, finishing a conversation on the telephone. He hung the phone up and motioned to her to sit in one of the chairs in front of his desk, which probably cost more than she made in a year. The chairs were low enough that she was looking up at him. \n\nNegotiating 101. Always put your opponent at a lower level forcing him or her to look up. It was a little thing, but in negotiating, little things made a difference. \n\n\"Thank you for coming by, Professor Maitland.\"\n\n\"It's never a problem coming to see you, President Myers.\"\n\nHe was an old man, but she said it with just enough of an intonation and intimation and she took a deep breath that she knew he got the message. Vibes the kids called it. He was an old man and she wasn't being blatant, but the man/woman sexual chemistry was always working. If he could play the power hand, she could play the sex/big titty hand she had been dealt.\n\nYou used what you had, as she'd always taught her students. She had worked for the powerful local Hunt Bank in Jacksonville before she had decided to go for her professorship. It put her behind most other professors in terms of age and advancement. She would always be older than anyone she was going up against for promotions or advancement. But....\n\nShe knew how the real world worked. Many, if not most, of the professors came straight out of academia. They had never worked a day in their life in the real world. And the stuff they taught the bright eyed, ignorant, completely clueless 18 or20 or even 25-year-olds also came straight out of books.\n\nThey didn't teach how to deal with managers who made \"friendliness\" a factor in evaluations, how to deal with managers that stole your ideas and passed them off as their own. They had no idea of how to play up your appearance if you were male or the size of your tits if you were female to get extra attention without being labeled a slut or boy toy. They had no idea how to flirt without looking like you were flirting.\n\nThey had no idea of the fine line between being business hot and slutty, of how important a mate's appearance and behavior was to your advancement. It wasn't fair, but those above you judged you on your better half as much as on your own capabilities. They had no idea how to work parties or weekend get-togethers with superiors.\n\nShe had always done what she could to work in some of the practical knowledge she had gained working for the Hunts to her students while giving them the academic side, doing her own research and writing, raising two children and trying to keep a marriage going single-handedly. She knew she'd fallen behind on the research and papers, and that just gave the assholes another club to use on her.\n\nMyers did a quick once-over of her face and body. He was old, but he wasn't' dead.\n\n\"I appreciate that, Professor Maitland. I wish...this were to be a more...pleasant conversation.\"\n\nHer heart did a flip-flop.\n\n\"I've talked to Department Head Rutledge about the staff meeting yesterday.\"\n\n\"I know I was late, but there was a personal crisis at home.\"\n\n\"It's not just that your tardiness caused problems in finishing and scheduling future classes, but Professor Rutledge says this fits a pattern of....sloppiness....on your part. It seems that your teaching activities have suffered because of...personal considerations.\"\n\n\"President Myers, I have been...my personal life has been somewhat in turmoil recently. You know why. But I've kept up my teaching assignments, my students have received their grades on time, I'm working on a paper right now that should be ready within a month's time.\"\n\nHe looked at her with an expression she couldn't read.\n\n\"I'm sorry, Professor, but there have been too many complaints and there are people within your department that feel strongly I should ask you to consider seeking employment elsewhere.\"\n\n\"I could fight that.\"\n\n\"You could. But why? If the decision is made that you should go, you have enough practical experience in the business world to know that it will happen. And while you might fight it, the damage done to your reputation would be so severe that it would ultimately be better for you to make a clean break.\"\n\n She would not cry. But this on top of Kelly leaving, Doug gone, the divorce looming...why the hell did things always get worse. They had gotten worse since her decision to leave Bill. But it was the right decision.\n\n \"Why?\"\n\nHe looked down at his desk for a moment and when he looked back at her she saw a combination of anger and pity.\n\n\"I should not tell you this, and if you say anything, I will say you are lying and if it's your word against mine, you know who people will believe. That will destroy your credibility in future job search efforts. So what I say stays in this office. But, I do want you to know why you are losing your position.\"\n\nHe stared at her breasts for a moment, then said, \"I knew a woman like you once. Oh, not as beautiful as you, but she was beautiful. I married her and we had what I thought were five years of a good marriage. Until the day I walked in on her in bed with her tennis instructor. It is so much of a clich\u00e9 that I still cringe when I talk about it. And she cried that she still loved me and it had been a mistake on her part because I was working much too hard to make a life for us that she had said she wanted.\n\n\"I was young and foolish and I loved her. I took her back. And I believe she was faithful to me. But it didn't matter. We were divorced in a year.\"\n\nHe stared into her eyes and she wondered if he even saw her when he looked at her. Or did he see somebody else?\n\n\"You see, when something is broken, something as fragile and intangible as trust and faith, it can't be made whole. We should have divorced when I first discovered her infidelity, I suppose. If we had made a clean break, taken time apart and met again, we could have forged a new marriage. A new relationship, I guess. But I didn't. And I could never regain the trust and faith I had in her once.\n\n\"After we divorced, I waited three years and remarried. Too soon probably. My second wife was also a beautiful woman. And I could never bring myself to trust her. My suspicion poisoned our marriage and that failure is my part.\n\n\"Five years later I met my current wife. We have been married for 29 years and we have a son who is now completing his post-doctoral work at Harvard. My wife has been a good wife to me. And I love her. And to this day, I do not trust her as I should.\"\n\nHe glared at her and she knew now he was seeing her and not ghosts of his past.\n\n\"My life has been poisoned by my first wife's betrayal. I have never been the man I was before I walked in on her that day. Such a simple thing, and yet it haunts me to this day. I still think of her sometimes. And I know that deep down, very deep down, I still love her. She is the woman I should have grown old with. But she threw it all away.\"\n\nThe glare turned to a cold smile.\n\n\"I have tried not to keep tabs on her, to want to know how her life has gone. But people talk, and I see things. She has been married four times. And three of those times her husbands have cheated on her. She has no children. She has had a drinking problem, although I believe she has it under control. She lives alone now.\n\n\"I wish I could say that I pity her, but in all honesty, her pain has brought me comfort. There is a price to betrayal. Judas Iscariot, the first great betrayer, hung himself. He had the decency to do the right thing in the end.\n\n\"You, Professor Maitland, betrayed a man who obviously loved you. I saw it in him that night. He will never be the same man he was. He may come back and build a new life, but something will have been lost.\n\n\"That is why, Professor Maitland, I will be terminating your relationship with this university.\"\n\nThere were many things she could have said, but nothing that would have mattered. She got up to leave.\n\n\"Professor Maitland. I know this has been a shock and life will be...difficult..for you with everything else that is going on. Let me suggest that you contact Johnny August, the Jacksonville Public Defender. I can only tell you that there is a great deal of turmoil in that office and I know that from contacts I have, someone with your experience and reputation in corporate organization and operations, might find some interest there. It's strictly up to you.\"\n\n She walked out without looking back and started to think when her brain started functioning again what she would do. As she left Myers' office she realized she had never felt so alone in her life.\n\n########################        \n\nTuesday, July 19, 2005 \u2013 11:30 a.m.\n\nI sat on a deck chair on Deck Quatre and watched the excursion ships chugging back and forth through the somewhat choppy waves toward the small spit of land that had been developed into a cruise ship play ground with a snack hut, changing hut, surfboard rental and a few other tourist amenities in the middle of nowhere.\n\nIn only two days and nights we'd be back in Jacksonville. And already the thoughts of what were waiting for me were beginning to occupy my mind. \n\nThe \"killer granny\" trial transferred up from Orlando would probably come up in a month or two, which was tomorrow in Attorney Time. The last of the three child-killing drug-dealing thug brothers would be up in another few weeks. \n\nA brutal and evil man who had beaten his wife to death with a tire iron would go to trial and probably walk away a free man unless I managed to pull legal rabbit out of a hat.\n\nAnd the black cop who had shot to death the white husband of the cop's white girlfriend, as well as the husband's two white brothers, was the big thundercloud hanging over everything else. The white girlfriend hadn't bothered to divorce her husband before moving in with the cop. \n\nIn a perfect world, his race and the girlfriend's race and the race of the three dead men wouldn't matter. But the last time I'd looked, we didn't live in a perfect world.\n\nI had slowly come to the conclusion of what I do would do about the cop, but the dead men were going to be just as dead if I put off the decision for a few more months. There is no statue of limitations on murder, fortunately. Because this one might really spell the end of my time at the State Attorney's Office. I just hadn't figured out a way to do what was right, without committing professional suicide.\n\nI was thinking about these and other matters and sipping slowly on a snifter of Tequila Crude, pouring salt on the back of my hand, sliding a little of the Tequila down my throat and then biting into a wedge of lemon and enjoying the exquisitely sour rush.\n\n\"I see you are a man who knows how to drink Tequila.\"\n\nI looked up. A tall brunette with large breasts, lips redder than rubies and eyes with ornately designed eyebrows stood at the rail looking down at me. I wondered if I might be putting out male pheromones.\n\n\"The product of a misspent youth, I'm afraid.\"\n\nShe sat in a chair beside me and offered me her hand. I took it and shook it. Sitting down she looked as good as she had standing.\n\n\"I am Danielle Vall\u00e9e. I am one of the ship's Assistant Cruise Directors.\"\n\n\"Glad to meet you. I've already met one of your counterparts.\"\n\n\"I know, Aline. She had mentioned you and I've seen her with you.\"\n\n\"She is a very sweet lady and she has done an outstanding job of making the cruise an excellent one.\"\n\nShe smiled and said, \"I'm sure. Screaming was reported from your room. Screaming which sounded suspiciously like Aline. And when she made her appearance today, she tried but could not keep the smile off her face.\"\n\n\"I'm sure she smiles frequently.\"\n\n\"No, she does not. And everyone knows why. That's why I wanted to thank you.\"\n\n\"For...?\"\n\n\"For bringing a little happiness to a woman who deserves more. She is a good woman, a good crew mate, and a good friend.\"",
        "She stood up and walked away without another word.\n\nI sat there and thought about ordering another one. I was still thinking about it when a slight redheaded man sat beside me as I finished the Tequila Crude. He was out of uniform so it took me a second to recognize him.\n\n\"Father Dunleavy. And a fine mornin' to ya,\" I said in my best fake Irish brogue.\n\nHe just smiled and said, \"Keep your day job, Mr. Maitland. What is that splendid concoction you're finishing there?\"\n\nI told him and he flagged down a waiter and ordered one for himself and another for me.\n\n\"It's early to be drinking, Mr. Maitland, but in the words of that great American song, 'It's 5 o'clock somewhere'!\"\n\nWe talked about generalities, world politics, the possibility of more tribal conflicts in Rwanda and whether Tequila Crudes or Bloody Mary's were the true uncrowned great drink of the western world.\n\n\"You can't talk about Russia, because they don't know anything but Vodka there, or Italy because it's wine this and wine that,\" he said smiling.\n\nWe drank for a while and then he said, \"You know that she is greatly conflicted about the attraction she feels for you?\"\n\n\"Is that what she talked about with you?\"\n\n\"Among other things. I gave her what advice I could, but I couldn't give her any answers.\"\n\n\"I would think as a Catholic Priest the answer would be pretty obvious. She's married. She shouldn't be going to bed with anybody but her husband.\"\n\n\"Most people would say that, and probably 99 percent of the time that rule would be sufficient. But...do you know her situation, that of her and her husband?\"\n\n\"Not only that, but I know her husband. I would have called him a friend until I went to bed with his wife. I assume you know that because everybody seems to know everything on this ship. Since I am cuckolding him, I'm not sure how I'd characterize our relationship.\"\n\n\"That is only a word.\"\n\n\"But words, as a famous American conservative political commentator says, mean something. I tend to agree. Call it anything you want, I pursued and bedded a married woman who I think loves her husband. I did the same thing to him that a son-of-a-bitch did to me when he destroyed my marriage. I can't say I regret what I did, but I'm not proud of it.\"\n\nDunleavy took a lick of salt, a bite of lemon and a splash of Tequila, then said, \"It is a shame that God is not as wise as we are. You know the truth of the matter but I'm not sure that God is as sure as you are.\"\n\n\"What is there to be unsure of, father. I'm an attorney. I deal with facts, with laws, with standards. There is no doubt she's married, no doubt married people should be faithful to their spouses, and no doubt she wasn't. Where is the uncertainty?\" \n\n\"There are no absolute equations to govern the human heart. There are no certainties. There are God's rules for us follow, but he knows and we know that we will not always follow them. Sometimes we can't.\n\n\"Aline told me that you said you pride yourself on being an upright man, on doing the right thing. From what I heard last night, I believe you are a good man. And I believe you try to do the right thing. But don't abuse yourself because you did something you think is wrong. No matter how good you are, only God ALWAYS does the right thing, and even he can be moved by pity and love.\"\n\n\"Are you sure you're a Catholic priest. I always thought clergymen would be more \u2013 certain \u2013of the rules.\"\n\nHe set his empty glass down beside his deck chair and reached into his pants pocket to pull out a slim wallet. He pulled out two laminated photos. One showed a pretty redheaded young woman, in the dress of an earlier generation. She had curly hair, dimples and a sweet smile. A true Colleen. I felt certain my father would have recognized and been attracted to her by the Irish quality of her smile.\n\nThe second photo was of a slender young man, probably in his 30s, standing at a podium and receiving what looked like a plaque. He looked a lot like Father Dunleavy.\n\n\"I entered the priesthood a little later than most. I was 25. And engaged to be engaged. In Ireland even back in the 80s, things moved a little differently. This is a photo of Brianne O'Collins, the girl I had planned to marry since I was seven years old and she was six. \n\n\"But, in my 20s I began to feel the call. I fought it as long as I could, but in the end, I knew I had no choice. God wanted me in the priesthood and I could not bring a wife along.\n\n\"It broke her heart, as I knew it would. After I entered, she refused to talk to me, to receive me calls. My letters came back unanswered. \n\n\"Two years after I entered I went to her home and her father and three brothers, all big bruisers, convinced me with their fists that Brianne wanted no more of me and had, in fact, decided to marry another man.\n\n\"It wasn't until a year later that I learned that she had taken her own life earlier that summer. Pills. They buried her in our hometown. I visited her graveside. On her tombstone they had written, 'Returned to the Angels.' \n\n\"I collapsed at her side and the only reason I did not take my own life is because I knew it would be the ultimate sin. Sometimes I think I made the wrong decision. Our faith teaches us that suicide is the one unforgivable sin, and thus she must be in Hell now.\n\n\"It was only years later that I learned she had had a son seven months after I entered the priesthood. The family kept his existence secret but it got out. \n\n\"When I found out I called, sent letters, hired private investigators, used the resources of the Vatican, but her parents and brothers, the whole clan, kept the wall up. They are powerful and wealthy, and they did not fear even the Vatican. He grew up without my ever seeing him in the flesh.\n\n\"A friend saw this picture in an Irish paper when he received a plaque for some business achievement. He went into his family business and apparently was very successful. When I saw this picture, I sent him a letter telling him who I was and asking if I could meet him. I figured as an adult, I could reach him without his family getting in the way.\n\n\"Three weeks later I received a brief reply. 'I've lived 25 years without you in my life. You never saw fit to be part of my life. I see no reason to change that'.\"\n\nHe looked at both pictures for a moment, then returned them to his wallet.\n\n\"I thought about pursuing it, but then....He was right. He has lived his entire life without me in it. It was her family that kept us apart. But....I made the decision to abandon his mother. And I believe she must have loved me enough to be unwilling to use her pregnancy as a tool to stop me from going into the priesthood.\n\n\"I had given up any right to be a part of his life, and perhaps that is the way God willed it.\"\n\nHe looked up at me and perhaps it was the sea air that made his eyes gleam.\n\n\"So, you see, Mr. Maitland, I have no answers for you, or Aline. Or anyone else. I do God's will as I see it, but when it comes to matters of the heart...\"\n\nHe got up.\n\n\"All I can tell you is that you seem to make her happy. Does she make you happy?\"\n\nI thought about his question. Are crack addicts happy when they are deep in a drug addled dream world? Are drug dealers happy when they've made a big score? Was Doug happy the night he took my wife and fucked her senseless, when she undoubtedly squealed out how much she loved his big cock?\n\nWas happiness the only thing that mattered in this life?\n\nThen she was standing beside me in the brilliant sunlight. Black hair, blue and gold uniform and a brilliant gold and diamond Fleur-de-lis pin catching the light and throwing it back.\n\nShe didn't look back at me as she said, \"I have a few hours free, Mr. Maitland. Can you think of something we might do to pass the time?\"\n\n\"I have a few ideas.\"\n\nShe started walking away, saying, \"If we meet at your room, you'll have to fill me in \u2013 literally , of course.\"\n\nAs I watched that fantastic ass twitching away from me I knew I was lost. Sometimes I think free will is an illusion. I got up and walked in the direction she had taken.\n\n############################       \n\nTuesday, July 19, 2005 \u2013 12:30 p.m.\n\nShe lifted her head up from the papers she was reading as she heard the knock on her office door and saw Mark Trenton poking his head in her office door. He smiled at her and said, \"Hi, Deb. Could you head over to my office. Rutledge wanted you to take a look at an article in the Journal. Thought it might apply to some of our classes.\"\n\n\"Can I get a rain check, Mark, I'm really jammed. I've got a class coming in a half hour and I still have a little bit of prep to finish.\"\n\nShe didn't that her head wanted to spin like a top, she felt sick to her stomach and she wanted nothing more than to drive to her parents' house, put her head in her mother's lap and cry like a baby.\n\n\"C'mon, won't take but a few minutes. Look, I'll spring for coffee at Starbucks afterwards. You know you love their cinnamon Cappuccinos. My treat.\"\n\nThat didn't make her heart beat faster, but there was no point in being rude. He wasn't a bad guy, just married to a mousy little bitch that obviously didn't do anything for him in bed which led to his hanging around her like a horny puppydog too much of the time. But, shit, she needed all the friends she could find right now. \n\n\"OK, big guy, lead the way.\"\n\nShe followed him to his office and he gestured to a newspaper lying on his desk. \n\n\"Have a seat and read it. Shouldn't be but a few minutes.\"\n\nShe sat down and started reading and noticed he closed the door to his office. Secretaries gossiped and he definitely didn't want any reports getting back to her about the office sex symbol being in HIS office. \n\nBesides, he was harmless. He was one of the men who would rub his dick up against her when he got her dancing at a university party, but he acted like he'd run like a scared rabbit if she ever reached down and grabbed it. Not that she ever would.\n\nHe was standing behind her as she kept reading and trying to figure what the hell he thought she might be able to get out of this article when she felt his hand circle her breast and squeeze. The first thought that entered her mind was that she had to try to stomp on his instep and kick him in the balls because he had obviously lost his mind.\n\nHe squeezed again and bent down to kiss her on the side of the face. Jesus Christ! He had just licked her face with his tongue. She pushed the chair back until he hit the bookcase behind his desk hard and yelped. She managed to twist the chair around to face him and realized she hand her hands out with the fingernails poised like claws to rip his face.\n\n\"What is the matter with you, Mark? Have you lost your mind? What are you doing?\"\n\nHe hesitated and she saw that he was frightened, then something seemed to stiffen his spine and he reached out to grab her by the wrists.\n\nHe bent in to kiss her and forced her head back against the chair and did his best to force his tongue between her teeth?\n\nShe finally thought, fuck it, the day has been too bad so far to put up with this bullshit. She opened her teeth, let him dart his tongue in and then bit down as hard as she could. He would have screamed but she had his tongue in a firm grip. She tasted blood and debated biting his damned tongue off, but that would create more trouble than she could handle.\n\nFinally she let him go and he fell backwards. She bent down beside him as he scrambled away and took his hand and put it on her breast and squeezed her hand down over his. She smiled at him and said, \"If you wanted a feel, Mark, why didn't you just ask? Why act like an asshole? Do you want to feel my titty?\"\n\nHis face was a kaleidoscope of shifting emotions but lust won out and he squeezed hard enough to make her yelp. He took her hand and placed it on his cock, which was growing harder by the second. She almost sneered. He was no jolly green giant. Bill was bigger. But she just rubbed and squeezed until he got as hard as she figured he was going to get. Then she stepped away and came down on it with her knee as hard as she could.\n\nHe would have screamed except she placed her hand over his mouth and when he tried to gasp for air, she knelt down again and put pressure on it with her knee.\n\n\"You say one fucking sound and I will turn that pathetic dick and balls to a paste, you fucker. You understand me?\"\n\nHe tried to wriggle away but when she put her weight down he stopped and gasped again.\n\n\"Okay, okay, don't do anything stupid. I'm sorry.\"\n\n\"What is going on, Mark? You've never been this stupid before. You realize I could have you arrested for rape?\"\n\n\"Rape you?\" He actually sneered. \"Who'd believe you could be raped by anybody?\"\n\nShe wanted to scratch his eyes out but restrained herself.\n\n\"You know I am thinking seriously of ripping your tongue out and pulling your dick off with it, you piece of shit.\"\n\n\"Why? Because I made a pass at you? Shit, you've rubbed my dick before at dances, just like you have a dozen other guys I know. Everybody knows you're a slut just waiting for the right guy. I almost won the pool. I had you down for fucking Doug Baker three months after you met him. You held out longer than I expected.\"\n\n\"So I'm a slut because you assholes couldn't keep from rubbing your little weinies all over me in public places and I didn't want to raise a fuss?\"\n\n\"Oh, give me a break, Debbie. Everybody knows what you are. You loved having guys rubbing their dicks on you and feeling up those big boobs. Any decent woman would have slapped my face when I practically fucked you on the dance floor, but not you. You enjoyed it. You know what you are? They had a name for it once. You're just a fucking cock tease.\"\n\nJust for once she wished she were a man so she could beat the shit out of him.\n\n\"Alright, you're a delusional asshole. But why here, why today?\"\n\n\"Because Doug has been dragging around looking like his best friend died for the last two days. We all figured something happened between you guys. Which means you're fair game. I figured, why the hell not. And why not? You're almost not married. If you're not with Doug, you gotta be getting action from somebody. Why not me?\"\n\nShe backed away from him, not sure whether she wanted to laugh or kick him again.\n\n\"Why not you, Mark? Why wouldn't I fuck you? Well, lets total up the reasons, shall we? You're a slimy little toad for one. You've got a dinky little dick for another. That's two. You make me physically sick. That's number three. If I let you into my pussy, I have a feeling you're the kind of selfish asshole that would squirt before I came the first time. That's number four. Because to you I'm just a pair of tits and a pussy. You don't give a damn about me. That's number five.\n\nShe stood up and backed away from him carefully.\n\n\"I've seen that mousy little wife of yours and felt sorry for her because of the way she looked. Now I'm sorry for her because your sorry ass and that pitiful excuse for a dick is all she has to look forward to in the bedroom. Unless..she's smart enough to be getting some strange.\"\n\nShe made it to the door while he was trying to get to his feet and calling her a bitch.\n\nShe was turning and heading for her office when she bounced off somebody. She lost her balance and was going down when a strong male arm caught her arm first and then her waist and kept her from falling. Inadvertently, maybe, he wound up with one large breast cradled in one hand. He pulled away as if she were on fire.\n\nA face with a broad forehead, dark brown eyes and full lips stared at her from a foot away and said, \"I'm sorry, Miss. But at the speed you were going, I couldn't get out of your way.\"\n\nHe glanced at her face and then his eyes dropped down to her chest.\n\nEverything came together. Doug and Kelly. Bill. Myers cutting her off at the knees. Kelly leaving her alone in the house. That asshole Trenton. The whole fucking male part of the human race.\n\n\"Asshole. You didn't get enough of a feel when you grabbed me just then. Why are all men such asshole bastards. Take a good look and get the hell away from me. Pervert!\"\n\nThere were people walking around them and naturally everyone stopped to look at the two of them, The man flushed a deep red, acted as if he wanted to say something, then just shook his head and turned and walked away.\n\nTwo seconds later she realized she was the asshole, but he was gone and she still had to prepare for that class. To hell with it. To hell with men. To hell with sex. To hell with sex with men. Maybe she should just have been a lesbian. God knows, they couldn't be harder to live with than men.\n\n######################################      \n\nTuesday, July 19, 2005 \u2013 4 p.m.\n\nThe last student of the last class of the day had finally slouched out. Because no one was around, she dropped her head to the lectern she had stood behind for most of the classes. The classes were large enough that the classes were basically lectures which she delivered standing behind the lectern. \n\nIf she had had a cot in her office she would have thought about just dropping onto it and trying to forget this day had ever happened. Make that this week. Make that the last four months. Make it the last five years.\n\nBut BJ would be coming home around 8 p.m. from a friend's house. It would only be the two of them. And she wanted to be there when he got home. \n\nShe knew she was being overemotional. Kelly would eventually come back. Teenage rebellions didn't last forever. Doug was gone, but she'd meet somebody else. Jesus Christ, of that she had no doubt. As long as it wasn't a slimeball like Trenton.\n\nBill was gone, but he'd been gone a long time. As she thought about him she felt a stab of regret and at the same time a moment of rage. If he had been in front of her...She rubbed her forehead. It almost felt like a migraine.\n\nGranted he was an asshole. Granted he had thrown their marriage away. Granted he had done his best to ruin her career and her life because she wanted a life of her own. \n\nBut still...those flashes of rage and anger... they almost scared her. They had had too many years, he had given her too many orgasms, they had been happy for a long time. Why were there those flashes of rage, of hatred even. She shouldn't hate him, even now. And she knew she didn't, because there were other moments...\n\nOh hell. She'd have to call her gynecologist and have her hormones tested. There was too much crap in her life to be going crazy at the same time. Maybe she just needed some hormones, or tranquilizers.\n\nAs she was walked out she couldn't help hearing two secretaries in the common office section of the business department where six secretaries shared common quarters.\n\n\"...I know what you mean. I saw him over in the restaurant with the head of English. They're making a big deal out of him, but, damn, he is hot. That hair and those eyes....you could drown in them...\n\n\"yeah, he's hot...in a tweedy sort of way..\"\n\n\"yeah, very cultured...but I wonder what he'd look like out of those tweeds. He's not super built, but it looks like what he has is nice..looks like he has a nice tight ass...for an older guy...\"\n\n\"damn...girl you are a cradle robber....you're calling him older..he can't be much more than 40- 45\"\n\n\"to you that's young..to me he's older...but I wouldn't kick him out of bed anyway....\"\n\nShe walked over to the two secretaries who were unaware she'd been eavesdropping. She could almost read their minds. None of the women working here had any great love for her. That was partly her fault, but damn they were a bunch of envious bitches. \n\nShe smiled at them and tried to be just another woman working in the building.\n\n\"Hi, you wouldn't be talking to a guy about six foot tall, dark brown eyes? We nearly knocked each over near 1 o'clock outside Professor Trenton's office. I've never seen him around here? That sound like your guy? Who is he?\"",
        "They exchanged a glance and Debbie didn't need telepathy to read their minds. Finally the older one, looking like she was sucking on a lemon, said, \"That's Clint...Clint Abbott.\"\n\n \"Who is he? A new professor?\"\n\n \"I guess you must not have gotten the latest newsletter. He's a visiting Professor, honorary. He's teaching a creative writing section over in Humanities. He's a writer. Pretty well known. I haven't read any of his stuff, but people who have tell me he's pretty good. If you like that kind of stuff. He's not real...literary...if you know what I mean.\"\n\nShe thought about it. She had felt bad about the way she'd treated him all afternoon. It wasn't his fault he just happened to be there when she needed to unload on someone. But still...\n\nFinding out that he had a temporary office in the Humanities building she walked the five minutes to it. By the time she got there she was sweating and her hair, which she'd had up, was escaping in straggles. Her face was shiny and she knew there was sweat stains under her armpits and she had a moment of panic. \n\nBut, hell, she wasn't officially in the man-hunting race yet. She didn't have to worry about looking good.\n\nShe knocked on the door that read, Professor Clinton Abbott. \n\n\"Come in.\"\n\nShe opened the door and as he looked up his face froze.\n\n\"Should I duck?\"\n\n\"I'm sorry. I just came to apologize. I was completely out of line. I don't blame you for not wanting to talk to me, but my only defense is that you were in the wrong place at the right time. I wasn't angry at you \u2013 just at men in general.\"\n\nHe relaxed. He stared at her breasts for a minute, but she'd have wondered if he was gay if he didn't. Then he gave her the once over that always followed the breast inspection and his eyes returned to her face.\n\n\"Why do I have a hard time thinking that any guy would ever give you problems?\"\n\n\"Appearances can be deceiving. You don't look like an author.\"\n\nHe gave her a small smile.\n\n\"What do authors look like?\"\n\n\"Kind of pasty, usually with thick glasses...wimpy looking.\"\n\nHe shook his head.\n\n\"Such stereotypes. You know what they say about attractive blondes. Stereotypes are stereotypes.\"\n\n\"Stereotypes are true, if you listen to the rumors around here. Blondes are dumb and sex crazed.\"\n\n\"Somehow I find that hard to believe, in your case. Since I've been here I've picked up enough to know that you're a \u2013 what \u2013 Associate Professor in the Business Department of a four-year state university and to be here you have to have been published. Not exactly what you'd expect of an airhead.\"\n\n\"Thank you.\"\n\n\"For what?\"\n\n\"It's been a really, really bad day and those are the first really kind words I've heard today. By the way, I'm Debbie Mait- Debbie Bascomb.\"\n\n\"You're welcome. Could I ask you something?\"\n\n\"Sure.\"\n\n\"Could I take you out for a cup of coffee? My last class is over and I guess yours is too. There is a Starbucks close to here that I've discovered. They're all carbon copies, but this one has some personality.\"\n\n\"It wouldn't do your reputation any good to be seen hanging around me. I'm divorcing and I have \u2013 had \u2013 a boyfriend and most people think I'm just a cheating slut who'll go after anything with a Y chromosome. Or a penis, either way.\"\n\nHe grinned.\n\n\"Husband and boyfriend and a slut at the same time. How could I resist?\"\n\n\"Bastard.\"\n\nHe stood up and she saw that he was a little taller than her. Six foot. Slender and not an athlete. He looked like a sloucher. He wasn't muscular like Doug. Older. There was a faint frosting of gray at his temples she hadn't noticed before. \n\nShe forced herself to keep her eyes off his groin. Not this time. This was just a nice guy and she had way more man problems than she could handle right now.\n\n\"Seriously. I'm in no shape to do anything \u2013 even harmless flirting. If you're interested in more....\"\n\nHe stepped around his desk and grabbed a briefcase.\n\n\"I'm a writer, Professor Bascomb. A human sponge. People are my business. You sound like an interesting person. Who knows, I might put you into my next book. Make you immortal.\"\n\nHe grinned at her as he gestured for her to precede him out the door.\n\n\"I'm not blind, by the way, or dead. You have to know how you affect men so I hope you don't mind if I ogle you a little bit. But this is purely a little social outing. A coffee. Nothing more.\"\n\nShe hated it, but she found herself tingling a little bit where she didn't want to tingle. Having a vagina was such a bitch at times.\n\n##############################         \n\n\n\nTuesday, July 19, 2005 \u2013 4 p.m.\n\nShe lay in a puddle of my semen. I probably wouldn't be able to come up with a teaspoonful over the next month, but it had been worth it. She rubbed her asshole and winced.\n\n\"Damn, that was worth it, but I will be walking funny for a week. I did tell you that my ass was my best feature. You obviously agree.\"\n\nI kissed the aforementioned ass and bit it gently. She giggled, an incredibly sexy sound from such a sophisticated looking female.\n\n \"I would say the proof is all over you, pretty lady.\"\n\nShe rolled to me and kissed me again. I was getting addicted to those kisses.\n\n\"I love this, but I have to get back for a few hours. We can have a private dinner tonight, if you'd like.\"\n\n\"I'd like.\"\n\nShe showered and dressed while I lay sprawled on the big red bed. \n\nShe had almost made it to the door when I asked her, \"How do you do this, Aline?\"\n\nShe didn't even look back at me.\n\n\"What?\"\n\n\"When you see Philippe again. How does the woman you are now become his loving wife again? I know people do it all the time, but I've never been able to figure out how? I never did this, but if I had, I know she would have taken one look at me and known.\"\n\nShe walked back and sat on the bed beside me.\n\n\"Because Philippe knows. He's always known. Just as I know without his saying a word to me what he's done. You can live with it if you know it going in. I know you don't understand, but it works for us.\"\n\nShe grabbed my shoulder and pulled me toward her.\n\n\"Remember what I said. Don't think about it. There is no Philippe. There is no Debbie. Our lives back there don't exist. We are Aline and Bill, and we live in this moment. The moment will end, but everything ends. I want nothing in the world at this moment but to be with you. Can't you accept that?\"\n\n\"I guess I have to, Aline. I know this is way too fucking serious, but I wish I had met you first. I still love her and I love my kids, but right now, in this moment, I wish I had met you somehow 20 years ago.\"\n\nShe kissed me hard. She was crying.\n\n\"Please don't do this. For me.\"\n\nWhen she pulled back I said, \"Alright. For right now there is no Philippe. And no Debbie. No life for either of us to go back to.\"\n\nBut when she left I knew I was lying.\n\n#############################         \n\nTuesday, July 19, 2005 \u2013 4:30 p.m.\n\n\"That's a...sad story. But marriages end. All the time in this country. It used to be that people stayed together for a lifetime and put up with whatever crap they had to put up with. Today, we expect to get more from marriage and if we're not getting it, we look for a better marriage.\"\n\nShe sipped her cappuccino, so dry there was only a hint of coffee, just the way she liked it.\n\n\"It wasn't the ending. It was the way it ended. I hurt his pride. I know it killed him to see me with Doug that way, even though we weren't having an affair. God, I wish he hadn't caught us there and \u2013 got the idea we were intimate.\"\n\nClint sipped his cappuccino and licked the white foam off his lips.\n\n\"That hurt, but that wasn't what hurt him to the soul, Debbie. Men can accept, can live with physical infidelity. A lot of times they can take back a woman that's been with another man. Especially if they don't actually see the sex. \n\n\"When you see it, it's a lot harder to get by. But, when a woman you love tells you that she doesn't love you any more...that's the kiss of death.\"\n\nShe shook her head and looked down at the table.\n\n\"I can't believe I just told you all of this about my life. You're a virtual stranger. How do you do that?\"\n\n\"I told you, I'm a writer. I'm good at getting people's stories.\"\n\nShe sipped at her drink, taking in more steamed milk than coffee.\n\n\"So, Mr. Story Teller, what is your story?\"\n\n\"Not fair to turn the tables on your host.\"\n\n\"I showed you mine....now show me yours.\"\n\nHe stirred his drink with a straw, sipped and stared out the parking lot at busy Beach Boulevard. Rush hour traffic was beginning either back to Jacksonville or to the Jacksonville Beaches at the other end of the highway.\n\n\"I was a reporter about 20 years ago, working for a small newspaper in Palatka, about fifty miles south of here. I was writing the first novel that would let me break away from newspapers and spend my full-time writing. And I was married to a Most Beautiful Lady. \n\n\"That's why I understand and sympathize with your story. Elise was so beautiful it hurt to look at her. She'd grown up beautiful and every man who saw her wanted her.\n\n \"I wound up marrying her, oddly enough, because I was good with words. A literate, educated man can woo a woman. Words can work magic. And I wasn't too hard on the eyes back then. But...\"\n\n\"Isn't there always a 'but'?\"\n\n\"Yes. A man can't hold a woman that beautiful. There were always too many guys after her. I suspected her of affairs, even caught her in a few, but I kept forgiving her and taking her back. \n\n\"One of the last lovers was a professional football player, ex-pro actually because he couldn't resist betting on his own games and snorting stuff up his nose that he shouldn't have. But he still had money from his pro career and he wangled a job at Palatka High School as a coach.\n\n \"The last night I ever saw her I purposefully came home early from work and caught her getting ready to go out with him. I tried to stop her and he beat me unconscious. \n\n \"The last words I ever heard from her were that I was a disappointment...not big enough, in height or penis size, not rich and not able to match her boyfriend in bed. She told me she was going to file for divorce the next week.\"\n\nHe continued stirring his coffee.\n\n\"That's rough. I wasn't that bad. How long have you been divorced?\"\n\n\"Widowed. They were crossing the St. Johns River to East Palatka when the car he was driving veered into the path of an oil tanker trucker. He was drinking or high or maybe just messing with her. Both vehicles went up. The explosion could be heard for miles around.\"\n\n\"There wasn't enough left to identify the bodies, but the accident occurred only twenty minutes after they left me and they found a wallet with her ID a half mile away on the river bank where the force of the explosion had sent it.\"\n\n\"I'm sorry.\"\n\n\"I hated her guts afterward, of course. She'd torn my heart out. But, over time, that hatred dissipated. I realized that it was her beauty, and the reaction men had to it, that had crippled her emotionally. I think she got to the point that the only affection she could accept was for her physical beauty. I loved her for who she was and I think that simply made her contemptuous of me.\"\n\nHe finished his drink and sat silently for a minute.\n\n\"That's probably the reason why I was intrigued by you. You're another very beautiful woman, but has it brought you happiness?\"\n\n\"Can't you see how happy I am, how well my life is going?\"\n\nHe reached out and grabbed her hand in his.\n\n\"I know it seems pretty bad right now, but you're tough. I can read that in you. And you're gorgeous, which while it might cause problems, is a double-edged sword. I think you can use it. \n\n\"People do pick themselves up and go on. When I came to and they told me what had happened to my wife, I was shattered. But I put my head down, wrote my first novel, got out of Palatka and never looked back.\"\n\nHe picked up the briefcase and unsnapped it. He pulled a paperback out and took a pen out of his shirt pocket. He wrote in the inside front page and pushed it over to her. \n\nThe cover showed a cowboy sitting astride a horse facing a river. A dark-haired woman stood on the other side of the river. \n\n\"It was my first novel and my first success. 'Ride On By.' They made a decent little movie out of it that got me independent. It's a western, but you might like it. It might take your mind off things. Read it and let me know sometime what you think of it. Here, here's my cell phone number.\"\n\nDriving home from one of the worst days of her life, she realized she felt better. She didn't know why, but talking with Clint Abbott had raised her spirits. Even though she didn't care for westerns, she knew she'd read it.\n\n#############################  \n\n Tuesday, July 19, 2005 \u2013 7 p.m.\n\nAline and I sat at a table by ourselves. The restaurant was almost full, but we had a table for six to ourselves. I was going to have to do some serious working out after this cruise because the lack of appetite that had afflicted me for three and a half months had vanished on this trip. I didn't know if it was the cruise, the sea air, French cuisine or Aline. Probably the latter.\n\nJust sitting beside her at that table, crisp linen and the smell of white wine and French dishes mixing with her perfume made me feel young. I hadn't felt this young in a long, long time. \n\nI felt like I was on a date again and even though I had had this woman's body in almost every way a man could have a woman, there was still a newness to it, and a suspense as to what would happen at the end of the date.\n\nIt had been a lifetime since I'd known that feeling. It was the difference between dating and being married. No matter how much in love you were, when you were married that suspense was not there. \n\nThe suspense \u2013 the not knowing \u2013 was what made meeting a new woman special. I had thought I never wanted to experience that feeling again. \n\nShe leaned over next to me and forked a thin slice of Charolais beef in a mustard sauce and held it out to me. I opened and let her feed me. A drop of mustard sauce escaped and she caught in on her finger and I licked it off.\n\nI refused to remember the way Debbie had fed Doug at the UNF fete. But I couldn't help it.\n\nIt took us about an hour to finish. I had worked out an hour earlier in the day and I would have tonight, but I doubted I'd have the time to visit the gym tonight. \n\n\"I have a few errands to run, mon cher, but I will try to be back in the room in an hour or two. I will miss you.\"\n\nShe didn't kiss me because even here people could see us, but she put a finger to my lips. It was a lover's gesture.\n\nWhen she left I sat at the table sipping at a cup of French coffee. I'd always known that French coffee is strong, not as bitter as Cuban but strong. In Paris, Philippe had a barmaid demonstrate how coffee is brewed in a cafeti\u00e8re or French press. \n\nIt took me a month back in the U.S. before American coffee stopped tasting like water with a coffee flavoring. French coffee is coffee with balls.\n\nCaptain Martel sat down beside me and said, \"You are an admirer of French coffee. Most Americans take some time to develop a taste for it. Aline said you had visited Paris?\"\n\n\"I am an admirer of many things French, Captain.\"\n\nHe smiled, \"Aline is a lovely woman.\"\n\nI just nodded.\n\n\"I am happy that you two are friends. Anyone can see that you are...a lonely man...and Aline....\"\n\n \"I don't think she could ever have been lonely, Captain. You have a lot of beautiful women on this ship, but she's in a class by herself.\"\n\n \"She is a beautiful woman, but life on this ship with all the people coming and going can be lonely. You know that she has smiled more in the last two days than I can remember.\"\n\n \"It doesn't bother you that she's a married woman, and fairly open about ...us.\"\n\n The captain looked at me and smiled. \n\n \"That's the reason we French and many others think of you Americans, despite your wealth and power, as being childlike, na\u00efve. It's the difference in our world views, I think, our religious views. You come from a Protestant world view \u2013 you are either saved or lost, evil or good.\n\n \"We come from the Catholic world view. The Catholic church believes we are all fallible, creatures of God but also creatures of flesh, constantly striving and constantly failing.\"\n\n He grabbed the bottle of white wine that still was a third full and poured two fingers into an empty snifter. He took a good sip.\n\n \"Men and women, Mr. Maitland, are going to find each other; are going to make love to each other. It's as simple as hunger, as thirst. It's an appetite. It can happen when couples are separated by distance, or it can happen when you're living under the same roof. People do have affairs, fall in love with other people. It has always been thus.\"\n\n He set his glass on the table.\n\n \"I have been married for 38 years. I love my wife and our four children dearly, but I have lived at sea our entire married life. I was a sailor when I met her. We have spent far more time apart than we have together. I treasure our time together.\n\n \"But, I know she has not been faithful...in a physical sense. She has been discreet. I have had suspicions but I have never known who she has been with. Our children may suspect, but they don't know and don't ask. She has never embarrassed me. Our children look like me and they carry...certain traits which make me certain they are mine.\n\n\"But even if they weren't, they are the children of my heart.\"\n\nHe shrugged. \n\n\"For my part, I am a man and I have appetites. I have to be careful because of my position, but I haven't been a monk, and I don't expect any more of my crew than I expect of myself.\"\n\nHe looked at me again.\n\n\"I don't know if that horrifies or disgusts you, but it is the truth. I think of myself as a good man. In every important way I have been true to my wife. I have been careful never to endanger her health. I cherish her and when the time comes I hope to be buried beside her...but...\"\n\nI could only shake my head.\n\n\"I understand what you're saying, but you're right. We come from two different worlds.\"\n\n#################### \n\n  \n\nTuesday, July 19, 2005 \u2013 8 p.m.\n\n She was finishing grading essays when she heard the front door open and a car pulling out of the driveway.\n\n \"BJ?\"\n\n \"It's me, Mom.\"\n\n \"Have you eaten? I have a half a lasagna in the microwave.\"\n\n\"Nah, I had a pizza at Bobby's.\"\n\n \"Where is Bobby? I have enough for both of you.\"\n\n \"He's out of here.\"\n\n \"He usually comes in to say hello.\"\n\n BJ stepped into the den.\n\n \"He wanted to, but I told him you were probably too busy.\"\n\n\"Why?\"\n\n\"He makes me feel creepy, sometimes, mom. The way he stares at you.\"\n\n\"BJ, it's just the age. All your friends stare, but they do that with any moms or your teachers, don't they?\"\n\n \"No like they do....anyway, I had something I wanted to talk to you about.\"\n\n\"Oh?\" \n\nThere was something in the tone of his voice that made warning tingles go off.\n\n\"What?\"\n\n \"I \u2013 uh....I...don't get mad about this, okay?\"\n\n\"Mad about what?\"\n\n\"I called Grandma Maitland yesterday. I want to go spend the rest of the summer with her and Grandpa Charles.\"\n\n\" But...what about your summer classes...why?\"\n\n\"That summer class is a waste mom. I don't even think I'm going to do well enough to get credits. And I can make up everything in the Fall. Anyway, I've met this girl online. She's 15 and she lives in Orlando. \n\n\"Grandma Maitland said she'd chauffeur me around on dates. I won't get in any trouble, I promise. Grandma said she's chaperone me.\"\n\nShe put the papers down and motioned to him. He came over and sat on the couch beside her. She took his hands in hers.\n\n\"BJ, if this is about Doug...I broke up with him. We're through. He won't be back here. I promise.\"\n\nHe wouldn't meet her eyes.",
        "\"It's not that mom. It's...everything....it's dad and the divorce and Doug and...it's just been a real bad summer. I just want to get away for awhile. It's just for a month.\"\n\n She was determined not to cry.\n\n \"Oh..okay. You've got to promise not to be a burden for your grandmother and grandfather. And don't get into any trouble. You know what I mean.\"\n\n \"Yeah....I know.\"\n\n She found herself hugging him and fighting the urge to cry. It was only for a month.\n\n\"Grandma is driving up here tomorrow. She'll be here about three.\"\n\n\"No, tell her to be here at 6. I want to say goodbye to you.\"\n\n\"Awe mom...\"\n\n\"I'm going to say goodbye to you. Say yes or don't go.\"\n\n \"I'll call her.\"\n\n When he had gone to his room she sat back on the couch and tried to grade papers. It was impossible. If she was fired tomorrow, she couldn't look at another one.\n\n She tried to turn on the television and watch something, but 30 minutes later she had no idea what she'd been watching.\n\n She picked the paperback Clint Abbott had given her. Anything, if it took her mind off her train wreck of a life.\n\n At 2 a.m. she found herself punching a number into the phone by her bed.\n\n \"Hello?\"\n\n \"I guess you don't get a lot of calls at 2 a.m. from fans.\"\n\n \"All the time, actually. Usually not from weeping fans.\"\n\n She wiped her eyes.\n\n \"I might be a little drunk. Did I wake you up? How did you answer on the first ring?\"\n\n\"I'm a night owl. I get by on four or five hours of sleep. They say as you get older you need less sleep. And why are you crying?\"\n\n \"I could say it was that book of yours, but I don't want you to get a swelled head. I'm just in a blue mood.\"\n\n\"Admit it, it was the book.\"\n\n\"Alright, you beat it out of me. Why the hell didn't he go back across the Rio Grande to get her. Her husband was dead and he had been an asshole. He cheated on her all over the place. He didn't deserve a faithful wife. The gunfighter loved her. Why did he leave her alone in that big house?\"\n\n\"It made a better ending. I'd rather have readers crying than saying, 'awwwww'.\"\n\nThen: \"Besides, it's open ended. There's nothing to say he didn't go back to get her. That's what makes a good novel. You don't know what happens after 'the end'. And besides, if it was real, it all happened a century ago. They'd both be dead now.\"\n\nShe took another sip of Goldschl\u00e4ger and said, \"How could a cynic like you write a book like this?\"\n\n\"What can I say, I'm talented.\"\n\n\"Thank you.\"\n\n\"Well, you're welcome. For what?\"\n\n\"For letting me get out of my skin, even for a few hours. Anyway, good night.\"\n\nSomehow she was able to sleep.\n\n##########################        \n\nTuesday, July 19, 2005 \u2013 11 p.m.\n\n I held one of the two most beautiful women I had known in my arms and listened to her breathe. It was the easy, rhythmic breathing of sleep. I couldn't sleep.\n\n It was wrong. I was wrong. I didn't want it to end. But as I'd read somewhere, tomorrow always comes. Tomorrow would come and then tomorrow and the best week of my life in a long time would end.\n\n I felt the way I had the night my father walked out the door. Terrified and helpless.\n\n###############################  \n\nWednesday, July 20, 2005 \u2013 6 p.m.\n\n\"Elinor, you're looking well.\"\n\nThe short slender woman looked up at Debbie without smiling.\n\n\"Thank you. Is Bill Jr. ready? We're going to have to drive straight through to get back home before early morning. I wish we'd been able to pick him up as we originally planned.\"\n\n\"I'm sorry, but I wanted to say goodbye. I'm going to miss him.\"\n\n\"Too bad you don't miss other important things. You're willing to let other things go. I guess this will just give you more time for....your personal life.\"\n\nDebbie reached out and almost touched the older woman, but the glare she received stopped her.\n\n\"I'm sorry, Elinor. All you've heard is Bill's version of things and I know...I must look pretty bad in it. But...there are two sides to every story.\"\n\nElinor Maitland Goldman just stared.\n\n\" He risked his life to save you nearly 20 years ago. I told him at the time that he was a fool. A pretty face and a great body didn't make for a good wife. I told him...\"\n\nShe looked around and made sure that BJ was nowhere around.\n\n\" I told him then that you were a slut, Debbie Maitland. No decent woman would have let herself get in the situation you were in. But he let you seduce him and I held my peace all these years. You gave him two good children. I'll give you that.\n\n\"But I always knew you'd break his heart. And you did. But I think you finally went too far. Bringing in your 'friend' and having sex with him in what used to be Bill's bed \u2013 I hope that finally ended things. He's hurting, Debbie, but he'll find someone else. Someone worthy of him. And you can \u2013 resume your old lifestyle.\"\n\n\"I'm not going to fight with you, Elinor, not where BJ might hear. Bill's your son, and I don't blame you for taking his part. I'll let it go at that.\"\n\nBJ came out with Elinor's husband, a big, stoop-shouldered, gray-haired man. They carried three suitcases. While Charles carried them out to their car, Debbie grabbed BJ and hugged him tight despite his squirming.\n\n\"I want you to call me.\"\n\n\"I will, Mom. Jeez, you act like I'm moving to Siberia. It's only a couple of hours away.\"\n\nHe walked out and Elinor lingered for just a moment. She didn't have to say anything. She just smiled a slight, triumphant smile, then turned and walked out the door.\n\nFor a long time after the car pulled away she just sat in the den. It was almost as if the room rang with sounds from the past. She could hear Bill asking her if she wanted something to drink, to rub her neck, or telling her some funny story from the world of the law. \n\nShe could hear Kelly's stereo or hear her telling her friends what a hunk so and so was. BJ would be popping his head in the door telling her there was absolutely nothing to eat in the house.\n\nThe phantom sounds died away. It was so silent she wanted to scream. She remembered the nightmare. It wasn't true, but....Bill was gone. And Kelly was gone. And BJ was gone. And Doug was gone. And Clarice was under the ground.....\n\n############################      \n\nWednesday, July 20, 2005 \u2013 11:55 p.m.\n\n\"Hi.\"\n\n\"Oh, hi, Debbie. Read any more of my books?\"\n\n\"No, Clint.\"\n\n\"I just thought...you sound down...like you've been crying.\"\n\n\"A little bit.\"\n\n\"To what do I owe the pleasure of this call?\"\n\n\"You said you were a night owl. Could I interest you in a drink, or coffee, or something?\"\n\n\"You want to go out at this time of night on a school night?\"  \n\n\"No, I thought you might come to...my place. I can give you directions.\"\n\n\"Um....\"\n\n\"I have coffee, soft drinks, alcohol...anything you might be interested in. Is there anything I could offer you that you might be interested in? I mean...anything...\"\n\n\"Debbie...\"\n\n\"Clint, we're grown ups. I don't want to be coy. I want you to come to me. I.....my daughter moved out on me, my son left for a month to be with his grandparents and get away from me, my husband who I'm divorcing is at sea, and I kicked the man I've been sleeping with out of my bed because I didn't think my underage daughter could keep her hands off him....\n\n\"I am so lonely I want to scream and I don't want to go to a bar and pick up some stranger and bring him home to fuck. I'm not that much a slut \u2013yet \u2013 no matter what anyone thinks...I like you...I think I do....We don't even have to do \u2013 do anything \u2013 if you don't want to...I just want someone to hold me...someone to be here...\"\n\n\"I'm sorry, Debbie. It's tempting, but no.\"\n\n\"I'm sorry too. I must sound so damned pathetic.\"\n\n\"No. I'm not blind and I'm not dead below the waist, but it would be a pity fuck or a \u2013 I'm lonely \u2013 fuck. I have a little pride. When you're out of your mind crazy for my body, I'll be over there, but not tonight.\"\n\n \"Just my fucking luck. I wind up with two saints. Saint Bill who cares about the world more than my pussy and Saint Clint who is too good for a pity fuck. What are men coming to?\"\n\n\"I'm not a saint, Debbie. Actually...I'm kind of engaged right now. There's a lady in my bed. I caught this call out in the kitchen. I was getting...something to get our energy back up....we're both of tired right now...she's not you, but I'm not going to kick her out of bed. A gentleman doesn't do that.\"\n\n\"Oh God, just shoot me. Or maybe I'll do the job myself. I can't believe I'm begging a stranger to fuck me and he's got another woman in bed.\"\n\n\"Debbie, listen to me. I know you won't believe me now, but you need this. You've never really been alone. But your kids are going to be gone soon no matter what. And Bill will be gone and if you don't have a steady you'll be hitting the bars to avoid sleeping alone and then you really will be a slut...in reality as well as perception. I don't think you want that.\n\n\"You need learn how to live alone, whether Doug or Bill or somebody else comes along later....\"\n\n\"What made you so smart?\"\n\n\"I lived through it. You'll never be as alone as you are right now...but you can make it....\"\n\n#########################   \n\nThursday, July 21, 2005 \u2013 8 a.m.\n\n I woke to a still ship. The constant motion of the ship pushing through ocean tides had ceased. There was a tiny sway as the ship sat in its harbor, but we were home. The warm body in my arms purred and rolled to bury her head in my chest. My cock was so wiped out I don't think I could even remember what a hardon was. But I knew. After this past weekend I knew what great sex was like again. Not married sex. Great sex.\n\n\"So we are here?\"\n\n\"Seems so. Do you need to be anywhere?\"\n\n\"Non.\"\n\nShe slid down until her mouth was even with my cock and she gulped at it like a hungry early bird after my worm. She licked and sucked with determination, but he was down for the count.\n\n\"Merde!\"\n\n\"I agree. But you killed him.\"\n\n\"He died a good death...in the service of the greater good.\"\n\n\"And the greater good was....?\"\n\n \"What else? Making me cum and cum and cum.....etc.\"\n\n \"He died a happy death.....\"\n\n She brought her head up laughing and tried to tickle my tonsils again. We rolled around a couple of times and finally came to rest with her pinning me down.\n\n\"I don't think I will let you go. I will keep you a prisoner here in this room. Smuggle in food and drink and occasional pussy to keep you happy for the next few months.\"\n\n\"Would that you could, Aline. Would that you could.\"\n\nShe sighed and then rolled over to lie next to me.\n\n\"I am not sorry. And I have no regrets.\"\n\nI cupped her face in my left hand and ran the fingers of my right hand across those luscious lips.\n\n\"I have regrets, more than a few, mon cher, but I'm not sorry. For even one second of what we had.\"\n\n\"Will I ever see you again?\"\n\n\"Only in dreams. Or you might see my picture on some web site if I get in the news again.\"\n\n\"You could pull rank, get someone else to cover for you, and sail with us next time. It will only be a week. Take a months vacation and sail with us until we leave for our next port of call.\"\n\nI pulled away from her and sat on the side of the bed.\n\n\"No. I couldn't. If I could do that, take time off for someone important in my life, I wouldn't have needed this trip and I never would have met you. There are things I need to do.\"\n\nShe reached out and ran her hand down from my shoulder to my hand.\n\n\"Would you have come, even if you could have gotten away?\"\n\nI captured her hand in mine and squeezed.\n\n\"No. I wouldn't come back. And I won't. If I did let myself, if I let myself be on the same ship with you, the same thing would happen.\"\n\n\"And that would be so terrible?\"\n\n\"Not for you, Aline. You are comfortable with your life. I....I'm not...and I can't be. I....I won't use the 'L' word, but you know I have feelings for you. And I can't have those feelings for a married woman...who loves her husband and has a son waiting for her. \n\n \"I have to live with myself, Aline. I have to be able to look in the mirror and like the person looking back at me.\"\n\nHer eyes were bright.\n\n\"I will think of you, William Maitland, and often. Will you think of me when you return to your office and your life as the Angel of Death?\"\n\n\"Only every day.\"\n\n I got up and took a quick shower, then changed into the outfit I'd selected, putting my cell phone in my pocket. I'd had it turned off the entire trip. As soon as I stepped off the Bonne Chance, I'd turn it back on. And real life would resume.  \n\n I had one suitcase and it was packed and ready. I had already filled out the manifest with only the gifts I'd gotten for BJ and Kelly listed. But it would probably still take a couple of hours to get off the ship.\n\nI looked over at the bed. She lay naked and exquisite, pink and white against the ruby bed of the sheets. \n\n\"You're not going to get dressed and see me off? You're going to sleep in?\"\n\nShe looked at the ceiling.\n\n\"No. I will not watch as you leave the Bonne Chance. We'll say goodbye here. And I won't report to duty until we get ready to start preparing the ship for the next cruise.\"\n\nI put the suitcase next to the door and sat back down on the bed. I kissed the curve under her shoulder as it ran down to those exquisite breasts, and then gave her a last kiss on the lips.\n\n\"It has been my great pleasure to have known you, in every sense of the word, Ms. des-Jardins.\"\n\n \"Likewise, Mr. Maitland.\"\n\nI stood up to go but I couldn't leave. I sat down one last time.\n\n\"Aline, it's not for me to tell you how to live your life. Just...be careful. I know you love this life, but what is it worth if you lose your husband and son to it? Will this life be enough if it's just you? I...would hate to see you make the mistake I did. It's too late for me. It's not too late for you.\"\n\nI got up, picked up my suitcase and walked out the door. I didn't look back. I had no photographs, nothing of her to bring back with me. But it really didn't matter.\n\n Her face was engrained in my memory. Pictures can be lost or destroyed, Nothing could touch the memories in my mind.\n\nI made my way to Deck Quatre which was where disembarking passengers were already starting to mill around, I saw Dan Jenkins and Caroline. He waved at me and as I approached he came over to shake my hand.\n\n \"It was a pleasure taking this cruise with you, Mr. Maitland. You ever need life or homeowner's insurance, give me a call,\" he said, slipping me a business card.\n\n\"I'll be sure to. You take care of your new wife. They don't come along every day,\"\n\nAs I got closer to the checkout booths where bored customs officers were asking passengers what they were bringing back, I realized Father Dunleavy was immediately ahead of me. He had a one suitcase smaller than mine.\n\n\"Father,\" I called to him and he looked back at me.\n\n\"Mr. Maitland, we keep running into each other. Are you ready to resume your life?\"\n\n'Not really, but I'll have to. Where are you headed?\"\n\n\"No rest for the weary. The Vatican has asked me to lead a delegation to Rwanda to try to head off a resurgence in the Hutu-Tutsi conflicts. It's been simmering underground for a few years, but there are fears it's about to re-awaken. I'm heading for the Jacksonville Airport to pick up a ride that will take me to France and from there to Africa.\"\n\nI shook his hand.\n\n\"Well, be careful. I hope you're as successful this time as last.\"\n\n\"That's out of my hands. It's God's will. But thank you for your kind words. I will pray for you in all areas of life.\"\n\n \"I don't do it much, but I'll pray for you, Father.\"\n\nHe turned back to the line and was called forward. I wondered if I'd ever see him again, other than newscasts.\n\nAn hour and half later I was walking down the gangplank to the soil of Jacksonville Florida. I took a breath of hot, humid July air. It felt as if I was walking out of a dream back into my life.\n\nAs I'd promised myself, the first thing I did was turn on my cell. It rang immediately,\n\nI hit the talk button. No rest for the overworked. I wondered what crisis awaited.\n\n\"Hi, Dad?\"\n\n\"Hey, BJ....what's happening?\"\n\n#"
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "cheating",
        "romance",
        "courtroom action",
        "crime"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-04a"
}