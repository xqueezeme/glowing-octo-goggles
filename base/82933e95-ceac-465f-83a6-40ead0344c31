{
    "title": "Expanding My Horizons Ch. 02",
    "pages": [
        "Our sex life seemed to progress after that first night with our fantasy box, as did our entire relationship. Michael and I just seemed closer. We shared more, he opened up, I felt a lot more emotion coming from him and of course we were both eager to pull another fantasy out and see what was next.\n\nAbout a week later I brought out the box and said we should pick another one tonight, this time letting him reach in and grab one out. I could see by the handwriting it was one of mine and as he flipped it around I saw it was a simple blowjob. I excused myself to the bathroom to freshen up and change and while in there I decided that while my fantasy may be simple I could probably spice it up for him at least a little bit.\n\nI slipped on a little black nighty and the same tiny black panties I had slipped over his cock a week earlier during our first night of fantasies. I stepped into the bedroom and as he started to compliment me I put my hand over his mouth and pushed him back on the bed. I whispered in his ear \"this is my fantasy, and you will do as you're told.\" I kissed my way down his body, my hands softly sliding down to his quickly hardening cock and then removed his clothes so he was completely naked on the bed. \n\nI lightly teased his cock with my fingers, lightly over the tip and all the way down around his heavy base. I licked and kissed all around him, letting him feel my warm breath. I slowly, slowly, slowly took inch by inch into my mouth, barely touching him. He groaned in response and started to grab the back of my head. I sat up and warned him that if he tried to force me again I would stop. \n\nI continued my teasing, giving him the slowest blowjob possible. He was literally beginning to shake from the amount of teasing he was enduring. His cock pulsed every time my lips wrapped tightly around him. I could feel how bad he needed to cum, but I wasn't done yet.\n\nI slide up next to him, continuing to lightly tease his cock with my fingers. I whispered again in his ear...\n\n\"Did you notice what panties I am wearing tonight sweetheart? Do you remember just last week when you had to wear these little panties over your cock? Do you remember why? Why did you have to wear my panties sweetheart?\"\n\nHe groaned. He pulsed. His cock strained against my fingers, his whole body arched as he listened to me speak softly to him. \"Why? Why did you have to wear them?\"\n\nHe finally, breathlessly, responded with \"because I have not given you the best sex you've ever had.\" Fuck this was really turning me on. You have no idea until you have a man this far under your control how hot it makes you. If you've never tried it you owe yourself the pleasure.\n\n\"That's right, because you couldn't quite match up. But remember honey, that was your fantasy. You were the one that wrote down that I should make you wear my panties. You must have wanted to wear them. You must have known you weren't the biggest and best I've ever had. You wanted to hear all about it and have to wear my panties didn't you?\"\n\nThe entire time I was talking his body was nearing release. I could sense what my words were doing to him, the amount of pleasure pulsing through his entire body right down into his cock I held in my hand. He groaned again, panted, and finally whimpered \"yes.\"\n\nI was so hot at this point I had to cum. I told him to be a good boy and lick me while I continued to give him his blowjob. I slid on top of his body and lowered my pussy right down on his eagerly waiting tongue while I leaned down and continued to lightly tease his cock with my fingers and soft lips. He licked me right through the panties he had worn the week before for a few minutes until he pulled them to the side and dove his tongue right inside my eager pussy. I came, hard. I came hard twice. I kept touching him between orgasms but I couldn't really concentrate with the orgasms surging through my body.\n\nI moved back down and began to whisper in his ear once again. \"Thank you honey, that was wonderful. Now I suppose it's time to finish your blowjob. But first, I think you need to tell me a little more about your other fantasies. Tell me three things you wish I would do right now and I'll let you cum. I'll take you in my soft lips and suck your cock just how you like until your cum splashes against the back of my throat. Just tell me baby, just three little things and you can cum.\"\n\nHe was silent for a minute. I continued to tease his hard cock. He finally began...\n\n\"Baby... I... I need to cum so bad. Ok, I'll tell you, but please still love me. Fuck, I need to cum. Ok, ok... I wish... I'd like you to... well I'd like to do whatever you find hot. I want you to control me. I want to do whatever you want, whenever you want.\"\n\nI smiled, knowing my fingers and lips were getting to him, that he was about to break. \"Tell me, be specific, and maybe it will happen.\"\n\n\"Baby... ok... I wish you would make me do things like last week. I wish you would make me wear your panties... because, well because, I don't quite measure up. I wish you would only let me cum if I agree to do things... like...\" He groaned, and almost came. I had to stop a minute to let him calm down. \"Like... only let me cum if you make me lick it up after.\" I was shocked! He wanted me to feed him his own cum? \"Baby... and... well, you don't always have to let me cum. You can decide if and when I get to cum, and if I deserve it. If I please you. If I do the things you want, then you can let me cum.\"\n\nI continued to tease him for a minute and finally responded. \"Thank you honey for sharing some of you fantasies, and since you told me three of them I'll let you cum just like I said I would. However, now that I know some of the things you want I think I'll make this a little more interesting.\" I reached over to the nightstand and picked up a quarter. \"Heads you get to cum hard in my mouth right now and I'm going to slide up and kiss you after. Tails I'm going to slip these panties over your cock again and let you finish in my mouth but you'll wear the panties the rest of the night.\"\n\nI tossed the coin in the air... heads. \"Ahh, look at that baby. Hope you're ready to cum hard for me, because I'm ready to give it back to you.\" With that I took him deep down my throat, wrapped my lips hard around him and started sucking his cock just the way he likes. I knew he wouldn't last long but just as I could feel him start to get to the edge I pulled away and reminded him \"now remember, you wanted this, get ready to try some of that cum.\" As soon as my lips formed around his cock again he started cumming, and cumming hard, harder than I had ever felt him before. Pulse after pulse hit the back of my throat. I began to giggle remembering what was next.\n\nAs I felt him start to go soft in my warm mouth I started to slide up his body. He turned his head to the side, he started to jerk away, and I just grabbed his head and gave him a huge french kiss. My tongue pushing his cum back into his mouth, twirling around, making out like we were teenagers. He finally started to eagerly accept what was happening and after a few seconds I finally heard him swallow part of his own cum that I had slid back into his mouth.\n\nI was so hot I again mounted his face and he brought me to another orgasm in just seconds. Then another one immediately after and I collapsed. \n\nI don't know what the next fantasy is that we'll pull out of the box but I can't wait!"
    ],
    "authorname": "readmysecrets",
    "tags": [
        "fantasy",
        "forced",
        "game",
        "humiliation",
        "snowball",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/expanding-my-horizons-ch-02"
}