{
    "title": "The Devil Comes Out at Night Pt. 07",
    "pages": [
        "A big thank you to my editor for helping me learn more and more about the wide world of grammar.\n\n*****\n\nEvery time I go to the mall I stop in at my favorite store, Silkie's, and I look at their lingerie and their bikinis. I often buy one or two things, especially if they're from the sale rack. One thing I've been keeping my eye out for is an animal print bikini. I don't want leopard print because Jeana has one of those, but I know how much my Donald loves seeing her in it so I've been looking for some other type of wild animal to adorn the sexy parts of me.\n\nThe other day I hit the jackpot. Zebra! It's probably not a bikini most fifty-two-year-old women would wear, but I think it's unbelievably sexy. It's cut perfectly for me on top and a little cheekier than what I usually wear on the bottom, but I think it works because my diet and exercise are working wonders on my lower half. It's a fabulous little bikini, pure blacks and pure whites, and it's made of thin synthetic fur that's just like a zebra's hide. My first fur bikini! I love it!\n\nI decided to hide it from Donald until our usual Saturday date with Jeana and Bob on the boat, but I couldn't wait to wear it so I put it on for my backyard exercises a few days after I bought it. My next door neighbor was out in his backyard sweeping his patio when I walked outside. I rolled out my exercise mat on the grass and I waved.\n\n\"Oh, hi Martin,\" I said.\n\n\"I think you're singlehandedly keeping the bikini store in business,\" he said, smiling.\n\n\"Oh, do you like this one?\" I asked, looking down at the sexy way it cradled the busty top of me. \"I kind of love it.\"\n\n\"Yeah, it's...really nice. They all look like they're made for you.\"\n\n\"Oh, thanks.\" I wandered over closer, and he walked toward me. We met at the low hedgerow that separated our yards. \"How are you and Ellen? Is she still volunteering at the library most days?\"\n\n\"She is, yes. She was home the other day, though, and saw you out exercising.\"\n\nThe way he said it made me worry. My whole body tingled and blushed with embarrassment. Was she home, I wondered, on the day when I'd lost myself in that quick, face-down masturbation? Good Lord almighty, I thought to myself. This is bad!\n\nI tried to stay calm. \"Really? What day was that?\"\n\n\"Oh, a couple times I guess. She mentioned your bikinis. I tried to...explain it to her, but...she wasn't too happy with me.\"\n\n\"Oh no!\" I said, relieved that it seemed like she hadn't seen the masturbation. But I knew Martin had seen it, and it was my first time speaking to him since then. My tingly blush didn't go away.\n\n\"No, it's no big deal,\" he said.\n\n\"So, what did you tell her?\" I asked. The tingle was fueling the hormones that make me flirt; I felt my tummy pull in a little and my chest arch out. It was subtle, but happening nonetheless, seemingly out of my control.\n\n\"Oh, I just told her that you and Don spend weekends on a boat with your friends, and you've been getting double duty out of your bikinis for your exercise. She wondered why I knew so much, and she wondered if your boat friends are the same ones who...well...the folks we've seen visiting.\"\n\n\"Oh,\" I said, taken aback by the two plus two that was being added up. Could Martin and Ellen hear us at night? Was our new swinger lifestyle leaking through the cracks? Good Lord, had Martin and Ellen heard me fucking Bob? \"Yes,\" I said. \"That's them. Bob and Jeana are their names. They're church friends. They keep their boat on Odaya Lake.\"\n\n\"You know, I thought I remembered you saying they were church friends. I mentioned that to Ellen and she said no, they couldn't be.\"\n\n\"Really?\" I said, feeling the worry again. \"Why would she say that?\"\n\n\"Oh. I'm not...really sure,\" he said, sounding flustered. \"I...uh...I wouldn't ask her about it if I was you. She gets fussy sometimes about things that are none of her business. We'll try not to be nosy neighbors. You folks are certainly good ones. Neighbors, I mean.\"\n\n\"That's nice of you to say, Martin. We like you guys, too. Neighbors are like a crap shoot, aren't they. You might get a perfect one or you might get a fifty-something who tries to look young a bikini.\"\n\n\"Or you might get both,\" Martin said, smiling just enough to often his eyes in a beautiful way.\n\nI smiled softly, too. \"You know,\" I said, \"I get sort of in a zone when I exercise, and I lose track of things. If I ever...make you uncomfortable...I guess what I'm trying to say is if you'd like to have your backyard back to just the birds and the squirrels, don't be afraid to say so. I can exercise inside just as easily. For some reason I think sweating in the sun helps with my weight loss. Have you noticed I'm down fourteen pounds?\"\n\n\"You look...fabulous, Margaret. Yes, definitely, the hot sun helps; I think I read something about that. I'd keep doing it if I was you. And that zone you get into...that's...good, too. But maybe...if you see Ellen's car in the driveway...\"\n\n\"Oh, sure!\" I said, feeling as tingly and flirty as a teenager. \"Well, I guess I'll get at it.\" I looked down at my deeply tanned, zebra-clad body again. \"The first time doing my moves in a new bikini is always a little risky. These things are all made in China these days.\"\n\n\"Yup,\" Martin said, taking advantage of my subtle invitation to look me over. \n\nGoosebumps flared on every inch of me and I smiled shyly and walked back to my mat. I went right to my hands and knees, arching my back lower than a church secretary should. I extended a leg straight out behind me and held it still, until the muscles protested, and then I lifted it and lowered it, over and over, working the glute muscles in my ass. Martin was there, discreetly watching, slowly and quietly sweeping his patio. I wondered what his preferred view would be \u2014 the side of me, as I was most days, so he can see the curve of my ass and gravity working on my tits, or maybe the front view, of my hanging cleavage, wobbling fore and aft and side to side as I work my moves? I was pretty sure the back view would get a lot of men's votes, and I made a mental note to roll out my mat that way another day, after checking to make sure Ellen's car isn't in the driveway.\n\n\u2014\n\nI think the neighbors can hear us when Bob and Jeana are here.\n\nThat's what I should have said to Donald when I spoke to him on the phone that day, or when he got home from work that evening, but I didn't say it. I made no mention of it, or of my flirty conversation with Martin, and I also said nothing about my almost daily exercise in my bikini with him watching. I was increasingly reckless with my sexuality, and I guess I didn't want anyone to call me on it.\n\nIt made little sense. Martin's wife Ellen is a nice woman, but if she decided to start telling people about swinging sex at my house it wouldn't be good; not for me, or for Donald, or even for Bob and Jeana and Cynthia. Under the right circumstance we could all go down in a ball of flames.\n\nAnd yet I persisted. I masturbated again in the backyard a few days later, face down, like before, but with my exercise mat rolled out so as to give Martin a view of the feet and legs and ass end of me, legs that were spread a bit to let him see the movement of my fingers under the thin crotch gusset of my yellow bikini bottom, a gusset moistened to near transparency by my sweat and my arousal. The orgasm was potent, overpowering my will for silence, forcing stuttering moans out of me. My back arched deep, the way Jeana's does, and my ass was thrust into an upward position, entirely fuckable. I licked the pussy taste from my fingers as I lay there stunned and breathless; I'm not sure if Martin saw the finger licking, but I think he did, and I think I was glad of it.\n\nIt had started simply enough, with that small decision to orient my mat sideways that day. I justified it in my mind by telling myself it would even up my suntan, but I knew full well I'd get a thrill out of doing down-on-all-fours leg lifts \u2014the kind that look like a dog peeing on a fire hydrant \u2014 with Martin looking square at the ass end of me. I'll blame it on feeling good about myself; my ass and my thighs really do look pretty good these days, at least when compared to last winter when I was hitting the donuts pretty heavily after church.\n\nI've come to realize I'm an exhibitionist. A voyeur, too, I suppose, but it's being seen that does something drug-like to me. It's a subtle drug, but a completely addicting one. Brain chemicals are fascinating things. Sex and exercise both seem to trigger the feelings, maybe because they're very similar activities. It's no wonder I can't keep my fingers away from my clit after a satisfying workout, but does it have to happen in my backyard? Martin must think I'm mental.\n\nActually, I'll blame it on Bob. He's the one who opened my Pandora's box, that fateful night in that cabin in the Adirondacks, seducing me into my bathing suit, and then out of it in front of him and two other nice men. It was the night I was born. Margaret, the exhibitionist. She didn't exist before that night, as far as I know.\n\nAnd now...good Lord, now...masturbating in broad daylight in my backyard, with a nice, older male neighbor watching from not far away, close enough hear me gasp and moan. Most people would call it a serious problem, but not me. I feel free of the shackles of convention. I think fifty years of Christian doctrine was enough for this old gal.\n\n\u2014\n\nDonald suggested inviting Bob and Jeana and Cynthia to a backyard barbecue at our house. He said it seemed odd that Cynthia hadn't been over to see where we live, and he was right. Bob and Jeana had been over quite a few times, and I didn't want Cynthia to feel left out. Of course I knew the barbecue and the cocktails would lead to swinging sex, possibly upstairs and down, and of course I made no mention to Donald of my suspicion of our thin walls and listening neighbors. After all, Martin had never come right out and said anything.\n\n\"Sure, lets do it,\" I said. \"You wanna do ribs on the grill? They'd love them I think.\"\n\n\"Yeah, that sounds good. It's been a while since we've had them.\"\n\nI called Jeana the next morning, and I texted Cynthia at the bookstore. They were both happy about the idea. Cynthia called me on her lunch hour, asking about the possibility of bringing Ryan along with her; after meeting him on the boat she'd had a couple of dates with him and they were hitting it off nicely.\n\n\"Of course. Bring him along,\" I said.\n\n\"You wouldn't mind? I didn't know what kind of a party it was going to be.\"\n\n\"Oh,\" I said, thinking about the big sex party that was sure to break out at my house. \"Well, I...hadn't thought about it. So far we were just thinking food and drinks, but you know us, we all just sort of play it by ear these days.\"\n\n\"Okay,\" she said. \"I'd love to have you guys get to know him better.\"\n\n\"It's a date, then,\" I said. \"It looks like Saturday is the only evening when we're all free. Donald and I are going to skip the boat; his ribs take forever to cook. I think Jeana and Bob are still going to be at the lake if you want to go.\"\n\n\"No, I don't want to be all tired when we get to your house. The hot sun always wipes me out.\"\n\n\"Yeah, I know,\" I said. \"Okay, see you Saturday. Seven o'clock.\"\n\nCynthia called me again that evening. She and Ryan were at Ty's motorcycle shop and Ryan had mentioned the barbecue. Cynthia asked me if Ty and Nikki could come Saturday night.\n\n\"Oh,\" I said to her. \"Hang on a minute, let me run it by Donald.\"\n\nI put the phone up against my shoulder to muffle it. \"Cynth's wondering if Ty and Nikki can come Saturday. They sorta already know about it. That's a big group; will we have enough food?\" \n\nWhat I should have said was 'That's a big orgy; do you think we should? What will the neighbors think?' But I didn't say that.\n\n\"You don't understand men very well if you think I'd possibly say no to having Nikki in my bedroom,\" Donald said.\n\n\"Oh, you're just assuming that?\" I said, smirking at my sweet, happy looking husband. \"You've gotten awfully sure of yourself lately, mister.\"\n\nI unmuffled the phone and put it back to my ear. \"The more the merrier,\" I said to Cynthia. \"I'm surprised they don't have plans on a Saturday night.\"\n\n\"They were going to go to that Swingtime club, but they looked happy about maybe seeing you guys again.\"\n\n\"Really? Huh.\"\n\nSo that was that. It seemed that my house \u2014 the one with the Christian memorabilia scattered around, the picture of Jesus on the wall in my bedroom, and the oversized Bible on a desk with the notepad next to it for study \u2014 was quite possibly going to be the scene of a sex orgy with a group of tattooed bikers. It should have shocked me and given me pause, but instead all I thought about was what clothes I'd wear.\n\n\u2014\n\nFriday at Bob and Jeana's house was very mellow and subdued. Our relationship with them had taken on the feel of a fourway marriage, with our get-togethers quieting down, sometimes watching a movie on the television, sharing an interesting article in a magazine, talking about work, and mothers and fathers, and nieces and nephews.\n\nThat's how it was on Friday; a lovely quiet evening, watching Sharon Stone look so middle-age sexy in a new romantic comedy. Toward the end of it I quietly opened Bob's pants. My mouth was drooling wet. It was the slowest, quietest blowjob I've ever given, and I think it was one of the best. As the movie was ending Jeana mounted Donald reverse cowgirl style, so they could both see the TV. He was still dressed, with his pants pushed down a little; she was naked from the waist down and fully clothed from the waist up. It was a beautifully quiet, slow fuck, and she looked gorgeous in the dim light. Just watching her breathy orgasm made my toes curl.\n\n\u2014\n\nDonald and I spent the day Saturday getting ready for guests. I straightened up the house and made some summery side dishes \u2014 tomato and cucumber salad, my mother's potato salad, and cornbread from a recipe I got from Anne Williams at church the summer before, after a pot-luck supper. \n\nDonald tended his big Weber charcoal grill, adding briquets once in a while, keeping track of the slow, smoky cooking of his spareribs. It took hours to get the meat to the point where it was tender and nearly falling off the bone. \n\nAt one point in the late afternoon I looked out the window and saw him talking to our neighbor Martin. My heart beat faster. I wondered if Martin would mention my backyard bikini exploits; Donald knew I exercised outdoors once in a while, but I'm sure he assumed I wore sweatpants and a t-shirt, the way I do when we use the workout gear in our spare bedroom.\n\nMy mind drifted back to party prep mode and I forgot about Martin until Donald said something, right before the guests arrived, that stopped me in my tracks...\n\n\"Oh, I invited Martin to come over for a bite to eat. His wife Ellen's away for the weekend at some sort of library conference.\"\n\n\"You did?\" I said, probably sounding much too surprised. \"Do you think you should have? Aren't we...,\" my voice quieted to an excited whisper, \"...having an orgy?\"\n\nDonald smiled a little and chuckled. \"I don't know. Are we? I'm sure no one will say anything while he's here.\"\n\n\"You're sure? How can you be? We barely know our new friends. Nikki's so young; you know how young people are, they don't always think about what they say before they say it.\"\n\n\"They go to a swinger's club with lots of older folks,\" Donald said. \"I'm sure they know all about being discreet about things. And anyway, I spent a half an hour talking to Martin about my ribs. It wouldn't be very neighborly if I didn't invite him to try them, would it?\"\n\n\"No. Yeah, I get it. I'll just be...nervous, that's all.\" Once again I wanted to tell Donald that I was pretty sure Martin had heard us having sex with Bob and Jeana, and once again I didn't say anything. I don't know why I couldn't bring myself to be totally honest. Maybe I was ashamed at the way things were escalating, or maybe I'm just dumber than I think I am. Or maybe the Devil had a gag in my mouth, one of those rubber ball gags that strap on around the back of your head, like you see in the dirty dirty porn. \"I just hope...everyone's careful.\"\n\n\"I doubt if we're going to be talking about blowjobs and fucking right off the bat,\" Donald said. \"We're all civilized people, we can have a normal conversation with a seventy-year-old neighbor.\"\n\n\"He's not that old!\" I said. \"He's sixty-five. He retired early.\"\n\n\"Oh. You've been chatting with him?\"\n\nMy mind flashed to masturbating out on the lawn with Martin watching. My whole body tingled and blushed pink, and I'm afraid my face might have been beet red. \"Yeah, we talk. He's out working in the yard a lot on my days off. He's really very nice.\"\n\n\"Oh, I know,\" Donald said. \"Couldn't be nicer.\"\n\n\u2014\n\nJust before seven o'clock a faint roar caught my ear, a roar very similar to the one Ty's boat made on the lake that first day we met him and his friends. But this time it was motorcycles, serious ones, with gleaming chrome and fat tires and monster motors that shook the ground. It sounded like an entire gang of them but it was just two, Ty's and Ryan's, each with a sexy girl onboard, spread legged and assy, looking perilously perched right above ridiculously wide back tires.\n\nNikki was the first to hop off and show herself to all the neighbors who were certainly looking out their windows. She wore a midriff baring black tank top with nothing under it, because she's the kind of girl who probably never smothers her perfect tits with a bra, even at a funeral. A thick black leather belt was looped through the waist of faded bluejeans that looked classic, like a favorite old pair of Levi's; tight ones that clung to her petite curves like a second skin. I was surprised to see stylish little high heeled boots on her feet, instead of, oh, I don't know, big clunky biker boot's, I guess. Her Medusa's-snakes hair looked just as wild as it did on the boat, matted a little on top from the almost useless looking little helmet that she took off. She left it on the seat of the bike and she stretched out her back and her shoulders with a tit thrust that was more than a little eye catching.\n\nCynthia was the next one to step off, taking off her own little helmet and shaking out her streaky blonde hair. She was in bluejeans, too, and I think they're the very same tight stretchy ones she wore to that work day at church; the ones that, when she was on her hands and knees, taught me much about the phrase 'camel toe'.\n\nWhen she was shaking out her hair, fingering it into place, I wondered if she was braless under her white t-shirt. It would have been a bold move, being as busty as she is, but it turned out she was wearing a minimalist bra, a stretchy one that gave her a natural shape and a wonderfully sexy bounce.\n\nTy and Ryan were dressed in the classics, too. Blue jeans and black t-shirts. Ty's shirt had his bike shop logo on it and Ryan's was a well-worn old treasure from a long-ago blues festival. They both fit snugly, showing off muscular chests and arms. It was a look that just wouldn't work on Donald or Bob, but Ty and Ryan looked born to it, with their flowing swept back hair and their bad boy swagger.\n\nThey were all making their way up our front walkway when Bob and Jeana's car pulled into the driveway right behind the bikes. The timing of their arrival added to my nervousness about Martin because the reunion took place where the whole neighborhood could see it, and of course Donald and I had been drawn out the door into the middle of it. Full-body hugs \u2014 the kind really good friends give \u2014 lots of lovely smiles and even a few kisses and casual ass grabs were freely happening. Bob already had a lump in his pants. I was glad when we finally made our way indoors.",
        "Drinks were made, beer bottles were opened, and we all spilled out onto our back patio where the grill was still smoking and the ribs were almost ready to eat. Martin walked over and I suddenly realized I'd forgotten to tell our guests he'd be joining us for drinks and dinner. I felt a rush of fear that nearly paralyzed me.\n\nDonald made the introductions and I pulled Jeana aside and quietly told her of my concern about inappropriate conversation. She said she'd help spread the word as best she could, and told me not to worry.\n\nMartin, it turned out, was a motorcycle enthusiast, so the conversation flowed easily and happily. In his youth he'd owned Triumphs and Nortons, British bikes from the 60s and 70s that needed much tinkering to keep running smoothly. He'd even rebuilt the motor of one of them, long ago. It was fascinating and wonderful to see him bond with Ty, the old guard and the young, forever in the fraternity of the biker brigade.\n\nIt also came to light, after his second beer, that Martin was quite the flirt. Nikki and Cynthia played right along. I had fun watching his eyes when he didn't know I was looking at him. He's a gentleman and would never stare, but oh my goodness, he was constantly sneaking looks at the braless treasures in Nikki's little black tank top, and at Cynthia's big bouncers every time she giggled or laughed. I'm pretty sure both the girls knew, and both enjoyed the attention. He had his eyes on Jeana quite a bit, too, and on me, if I can say so without seeming immodest. Jeana certainly deserved the attention, dressed as she was in a low-cut cotton summer dress that hung on the thinnest of spaghetti straps. It was cut even lower on the sides, giving her curvy side boobs a nice airing out. When we were in the kitchen together she flipped the hem of the little dress up to show me she didn't have a stitch on underneath it.\n\n\"You're ready for anything,\" I said when I saw it.\n\n\"I am,\" she said. \"Too bad Martin can't stay for later; he's adorable.\"\n\n\"He is, and I'm afraid I'm an awful tease toward him,\" I admitted. \"Don't tell Donald, but...for the last few weeks I've been doing my morning workouts in the backyard...wearing my bikinis.\"\n\n\"Ha!\" Jeana chuckled. \"You dog! Has Martin seen you?\"\n\n\"Oh yeah. He's seen plenty. More than I want to admit.\"\n\n\"Oh my God!\" Jeana said, still chuckling. \"You love it, don't you! I probably would, too, if I had a cute neighbor.\"\n\nI felt bad when I gently encouraged Martin to leave after dinner. There was an understanding of things that showed in his handsome eyes and it gave me a tingle, like he knew exactly what our friends were there for. I had an urge to take him aside and try and explain, but excited embarrassment on my face was all I could manage. It was awkward, but strangely sexy, and Martin was a complete gentleman, as usual. Ty invited him to stop by the bike shop any time and Martin said he would. The girls said their flirting goodbyes and he wandered across the lawn, stepped over the low hedgerow, and he was gone.\n\nIt was a beautiful warm evening out on the patio, but soon we all migrated inside. Jeana and Cynthia were already rinsing dishes in the kitchen when I went inside with Ty. I watched his eyes take in the details of all our doo-dads and this-and-thats in the living room, including a few Christian items and the big Bible on the desk in the corner.\n\n\"You guys are churchgoers, huh?\" he said. \"Ryan said somethin' about it, that Cynthia's into that. It's all cool, I'm just a curious kind of guy I guess.\"\n\n\"Curious?\" I said. \"Didn't you go to church when you were a kid?\"\n\n\"No, my mom and dad weren't into that. My grandma is. She sings in a choir.\"\n\n\"Oh, nice,\" I said. \"So what are you curious about, Ty? I'd be happy to answer your questions.\"\n\n\"So what's the deal with, like, Protestant, and Jewish, and...is Catholic different, too? Isn't it all just about believing in God?\"\n\n\"They're all different, but yes, a belief in God is at the root of all of them. We're members of the Christian Church. That's where we all met. It's more rooted in the teachings of Jesus Christ; more...fundamentalist, if you know what that is.\"\n\nTy nodded. \"Are you guys the 'born again' kind of Christians? That's like...intense, right?\"\n\n\"I guess you could say that,\" I said, smiling. \"We don't really use the term 'born again' anymore, but you're right, that's us.\"\n\n\"Cool,\" Ty said. \"Yeah, it's all good, right? I think it's kinda hot. Maybe I shouldn't say that.\"\n\n\"What's hot?\" I asked, smiling. \"Us doing the swinger thing, you mean?\"\n\n\"Yeah. You and Jeana are married and big into church and stuff. And Cynthia, I can see how she could be kinda churchy. It's kinda wild. You guys are awesome.\"\n\n\"Ha!\" I chuckled. \"I'm not sure our pastor would agree.\"\n\nJeana looked surprised when she entered the room and heard us talking. \"What are you two talking about? Church?\"\n\n\"Ty was curious. I guess my house gave it away. That and Cynthia.\"\n\n\"Oh. Well, it's no secret, right?\" she said. \"Even church secretaries need to have fun now and then.\"\n\n\"Oh, wow. You guys are secretaries? That's even hotter.\"\n\n\"Just me, Ty,\" I said, smirking at his enthusiasm. \"But lets keep it a secret, okay? Don't tell all your friends.\"\n\n\"Oh, for sure,\" he said. \"I'm good with secrets.\"\n\n\u2014\n\nThe experience of watching my husband and three other couples enter my bedroom and start undressing and playing with each other's aroused bodies is something I'm sure I'll never forget. All of my speculation about whether we were hosting an orgy was confirmed. Our friends, new and old, had just assumed that was the plan I guess, and the hedonism flowed like water out of a newly opened spigot.\n\nIn the heat of the moment I'd forgotten the bedroom window was open. If I'm being honest, I think I planned to forget it, quickly closing the curtains after my housecleaning earlier in the day, hiding its openness from view. It was one of those things that you do when you're halfway mindless; there's a glimmer of mindful intent, but it's fuzzy, lost in a blur that's similar to intoxication. It's like driving drunk, something I haven't done since I was a teenager; you turn corners and pull away from stop signs without thinking, or even knowing that you've done it. And yet you do, and you have. Known you've done it, I mean.\n\nAs you might have guessed, the open window is one that faces Martin and Ellen's house. I've never been in their upstairs, but I think our bedroom faces one of their unused bedrooms, a guest room maybe. The eat-in part of their kitchen is down below, on the ground floor; Ellen has a cute little glass-top table in there, with some iron chairs around it. She calls it her \"ice cream table.\" There's windows facing us down there, too.\n\nInside my closed-curtained room, my marital bed had become the Devil's playground. It was awfully small for the eight of us \u2014 we could have broken off into smaller groups in different parts of the house \u2014 but we all seemed to want to be together. My little bedroom was alive, teeming with horny, naked humanity, and the bed was the epicenter. It had been quickly stripped of its blankets by Jeana and me, its dark gray fitted sheet thankfully clean but far from crisp. It didn't matter, because soon it was spotted and stained, like a dirty whorehouse bed, some of it from wet pussies and drooling mouths and some of it slipperier splatters of semen that had lost its warmth when it soaked into the cotton. \n\nI remember having the side of my face against a wet spot, with my ass up in Ryan's strong hands, his thumb tickling my asshole as he fucked me as deeply as he could from behind. I'll freely admit I'm a total slut for doggy style; there's nothing more thrilling than the feel of a man's hands urging me into that most wonderful of positions, and the feel of a hard cock sinking into my pussy that way. If I had to guess I'd say my love of it is rooted in two things: the taboo nature of it in the deeply Christian world I grew up in, and the fact that I always thought my ass was a little too big and not at all desirable, at least as compared to magazine girls and beautiful actresses. That's all back in the past, of course, before my awakening as a sexual woman, but those formative years are, well, they're formative, you know? So now, to know a man wants me that way, and can see me that way, with the deepest underneath of me spread open wide for his lusty gaze and his hard cock, it's soul-satisfyingly thrilling, every time. \n\nOne of the fascinating things about being a swinger is learning about the habits and desires of others, especially the women. Maybe it's simply the men's desires that make doggy style so prevalent in a dirty orgy situation, but there was a time early on in the evening's proceedings when all four of us gals were taking cocks from behind, so I'm pretty sure all three of my new girlfriends love it as much as I do. It was a beautiful, memorable moment: Nikki on her knees with her hands high on the headboard and her back deeply arched, with my Donald behind her exquisite little ass; Jeana and me nearly side by side on hands and knees, with our two biker boys fucking us; and Cynthia face down on the gray sheet with her widespread legs hanging off the bed, toes on the floor, her big, beautiful pussy taking all that Bob could give her.\n\nThinking back on that moment, and how thrillingly vocal we all were, I can't help but wonder about Martin. When did he catch on and start listening, and how did he do it? Did he sit at Ellen's ice cream table, maybe with a beer or a cocktail, with his window as wide open as ours was? Or maybe he was upstairs in their spare bedroom, sitting next to the window in the dark. Was his cock hard? Was it out of his pants, in his hand? I wonder if he's circumcised. I'm guessing he probably isn't.\n\nI suppose it doesn't matter how he did his listening; he most certainly got an earful. The summer night was so quiet he probably heard everything, even the quieter talk, but the wild, unhinged orgasms and the begging fuck me's and the breathless oh my god's had to be unmistakable. I've become a loud lover over the past year, and Jeana and Cynthia are right there with me. Nikki's a shrieky little fucker, too. I blame the boat, the privacy of our little cove at the lake, and the way the hot summer days absorb our blissful screams. We'd gotten used to it, and once you let it out it's hard to hold it in, especially with the intensity of an orgy all around you.\n\nIt was about halfway through the evenings devilishness when I remembered the open window. I was on my back, with two beautiful men ravishing my pussy and my breasts. Bob was eating me and tongue tickling my clit in his unmistakably wondrous way, and Ty was nibbling on my big nipples, telling me yet again how much he loves my tits. In my state of mindless bliss my head turned onto its side and there it was: the closed curtains, barely moving from the wisp of a summer night breeze. Martin! It was as if his own heavy breathing was making the curtains move. The sounds of the orgy swelled in my ears and my mind went to the orgasms that had already happened; the beautiful screams, the cries of love. They'd been feminine and masculine, both, and from the outside, in the dark of the quiet night, they must have sounded as wild as wild can be. I wondered how far the sound had traveled \u2014 there are other neighbors \u2014 and I pictured them looking out their windows at the motorcycles parked in my driveway and...I had an orgasm. A big, beautiful one that made me wail. I'd officially lost control of my formerly sensible life, and I didn't care. Not even a bit.\n\nIt went on that way. Carefree. I've learned to love that word, and what it stands for. I licked all my men's balls that night, thoroughly, and inhaled the essence of them. Smooth ones and soft ones and tight ones and lower hanging ones. It's one of my favorite slut moves these days, getting a man's hard cock thoroughly wet with my mouth and then jerking it off with my tight fist while my mouth plays happily with his balls, toying with the perfect balance between pleasure and pain. I get lots of attaboys for it, lots of, \"Oh Margaret! Holy shit!\" I love to keep it up until they cum, and I milk every drop of their slippery stuff from them with my loving hand. I loved doing Ty that way that night, with Jeana riding his face with her cum-slickened cream-pie pussy. He groaned so sweetly when he came. It gave me goosebumps.\n\nHe's a very sexy young man. Ever since meeting him I've become a tattoo lover, looking for ink on every man I see. Ty wears them best, though, so much so that I can't imagine him without them. He's almost more ink than not, and Jeana and I are both crazy about the look now. My mother would slap me if she knew, I'm sure.\n\nEarlier in the evening, downstairs when we were eating ribs with Martin, Cynthia told us that she was going to get her first tattoo and that Ryan would be there with her for moral support. Martin told of some friends who were drafted into the Vietnam War, and the various tattoos they all had. He didn't have any himself, and he said he was getting used to the idea of women and girls having them. Nikki showed him some of her hidden ones, pulling her little shirt up so high the bottom of her bare breasts showed. She held it there, much to Martin's apparent delight, while he took in all the fine details of the amazing work of art that seemed to cradle those firm but tender young breasts. After he'd had a good close-up look and she'd told him all about it, she turned her back to him and lifted her shirt all the way to the top of her shoulders. He got some nice glimpses of her side boob, I'm sure, when she twisted a little and turned her head to tell him all about the inky work done back there.\n\nRyan has some nice tattoos, some of them works in progress, but it's Ty who truly takes the aesthetic to its logical end. With his bad boy looks and his pushed-back hair that falls into his eyes when he fucks, the tattoos finish the job, rendering sex-hungry church women defenseless. I hadn't heard any of us say no to him.\n\n\"Cynth, you like it in the ass?\" Ty asked, late in the night. We'd all slowed down and she was relaxed, in doggy position on her knees, with her head down and her ass up, and he was languidly eating her big pussy from behind. \"Your ass is so fuckin' amazing; I'm totally into it if you wanna. Is there any lube around?\" \n\nCynthia tried to hide her wide-eyed surprise but it was easily seen. \"You guys...like that? I've never done it.\"\n\n\"Ryan should be first. You into it?\"\n\nMuch to my surprise, Cynthia nodded. Her eyes looked a little wild; lusty and animal. Donald opened the bedside drawer and took out a small bottle of lube. It was nearly full, I'd only used just a few small smears on the head of a dildo once or twice; and no, if you're wondering, it didn't go in my ass. \n\nThe next few minutes were a blur. Cynthia stayed right where she was, on her knees in the middle of my bed, with her shoulders down on the dirty sheet. There was a squirt of lube, a slippery polishing of hard cock, another squirt right on her asshole, and then...Ryan's penetration, slow. There was sound coming out of Cynthia's mouth I hadn't heard before. There was fucking, not deep at first and then deeper. There was surprise in her eyes, and louder yelps and shrieks, and she had a big orgasm, loud and uncontrolled. Ryan withdrew with a satisfied, breathy moan, and then Ty was in, his cock lubed and slippery too. Cynthia's body was spasming. Beautifully. Her mouth was open and her throat was leaking desperately sexy screams of gibberish.\n\nTy held her there, in the realm of gibberish, his body all muscle and breathless energy, breathless from the feel of the inside of Cynthia's most forbidden opening, an opening he fucked long and hard. When he was done he pulled out. \"Look at that,\" he said. \"Look at how open it is. Bob, see if you'll fit in there.\"\n\n\"Oh my God,\" I said, my eyes wide and disbelieving. What was happening was finally sinking in to my spinning mind. Anal sex! Bob's huge cock! In Cynthia Marley's ass! In my own bedroom! Cynthia was looking over her shoulder at Bob, her nodding head and her wild eyes giving him permission. I looked at Jeana and she had the same look on her face that I had on mine. I could read her thoughts, and they were the same as the ones in my head: Is this really happening? \n\nWhen Bob was halfway inside Cynthia his whole body was tensed and he looked like he might explode. \"You gotta be fuckin' kiddin' me!\" he gasped, looking down at his cock, watching it sinking deeper into the big, beautiful ass of the most bookish member of our church's congregation. He sounded almost childish, disbelieving, when he huffed out an \"Oh my God!\" He looked stunned as he worked his way deeper, and when he bottomed out, his enormous cock balls-deep inside her ass, he came. His eyes rolled and I could almost feel the pulses of his cum flooding Cynthia's insides, mixing with Ryan's and Ty's. Every muscle in Bob's body was tensed, showing us exactly what was happening, every mind-melting squirt of it. Cynthia was spasming again, her dark hole filled to the hilt with Bob's massive meat, the hard heat of him ever so deep, somewhere brand new in her gut. Her mouth gurgled and drooled. They were sounds and sights similar to death, but she was fully alive, orgasming, as he was, the two of them lost in the intensity of something extraordinary.\n\n\"I've never seen such a big cock in an ass before,\" Nikki said. \"Bobby, you'll do me too, right?\"\n\nBob's body was starting to fuck Cynthia's forbidden opening, a slow in-and-out, lubricated by all the cum inside her. He couldn't speak, couldn't answer Nikki's question. His hands roamed on the smooth roundness of Cynthia's ass, an ass I'm sure he'd dreamt of since he first met her, years ago on a Sunday morning, him with his Sunday church smile and her in a frumpy dress that only hinted at the sexy curve of her amazing ass. Knowing Bob as I do now, I'm sure he conjured up exactly what was under that dress. And now years had gone by, and his far-fetched fantastical dream had come true.\n\n\u2014\n\nI'd forgotten about the open window again, until morning. Sunday morning. Church day. I wouldn't have a chance to talk to Martin, just the two of us, until my exercise session on Tuesday, one of my days off.\n\nWalking into the Church's sanctuary for Sunday Service with all the congregants there felt very odd to me. I don't know if Donald felt it. It was a sort of otherworldliness, as if my formerly 'normal' life as a conservative lady of the church was somehow the strange half of my two lives, and the 'gonna-have-an-orgy-with-the-bikers' part of my life was now the new normal. It was as big a turnabout as can be imagined, one that most certainly must have been coordinated by both God and the Devil.\n\nWhen we met up with Bob and Jeana they had similar looks on their faces to the way I felt, and when Cynthia walked in, saying hello to some of the older folks as she made her way toward us, I could see it on her face, too.\n\nNone of the five of us touched each other \u2014 no hugs or handshakes or cheek kisses. It wasn't because we didn't want to, it was because we all thought our naked Saturday night was written all over our faces. All I could think about was Cynthia's anal virginity being obliterated as a happy naked audience watched in awe. As I stood there in the sanctuary in my Sunday dress my mind was stuck on a loop \u2014 a vision of Bob's big beautiful cock disappearing inside Cynthia's forbidden opening, her spasming body orgasming from nothing more than the fullness of it, and the thought of it, and the spectacle of it.\n\n\"Anybody else having trouble focusing this morning?\" I asked.\n\n\"I wasn't going to come,\" Cynthia said.",
        "You came so many times, I wanted to tell her. So very many times.\n\nIt was later in the morning, in the Fellowship Hall, with coffee in our hands and paper plates of donuts in our laps, when we three girls were finally able to talk a little. We were on a couch, against a far wall, away from the milling crowd.\n\n\"Donald's ribs were so good!\" Jeana said. \"Bob and I enjoyed meeting your neighbor.\"\n\n\"He's really nice,\" Cynthia said.\n\n\"He loved you two, and Nikki; I could tell,\" I said.\n\n\"So thanks a lot, Cynthia,\" Jeana said kiddingly. \"Now Bob wants to come home through the back door.\"\n\nI nearly spit out my coffee, and Cynthia looked mortified. She was speechless, her face showing her shock at such a thing being discussed at church.\n\n\"Are you going to open it for him?\" I said, with smiling surprise.\n\n\"I'm thinkin' about it,\" Jeana said. \"It's one of those things I'm...kind of curious about. Are you?\"\n\nI nodded. \"I never thought about it much, but yeah, our little book worm here...I guess it's true what they say. Ya gotta watch out for the quiet types.\"\n\n\"Ty's the one!\" Cynthia said, quietly pleading her case. \"I've never seen either of you guys say no to him. Why are you picking on me?\"\n\nJeana put her smiling mouth near Cynthia's ear and spoke just loud enough to be heard by her two best friends. \"Because my handsome husband put his big cock in your ass, and you loved it.\"\n\nCynthia's eyes showed fear and lust in equal measure. She fumbled with her donut and had to brush some the sugar off her lap. \"It wasn't just me,\" she said, continuing her rebuttal. \"Nikki too.\"\n\n\"And wasn't that something,\" I said. \"Goood Llloorrd.\"\n\nCynthia whispered, \"Does mine...look like hers?\"\n\n\"Maybe we should change the subject,\" I said.\n\n\"Margaret's a cock tease,\" Jeana said, holding the conversation firmly in the 'inappropriate for church' category. \"She does her exercises out in the backyard, in her bikini, with Martin watching.\"\n\nCynthia's eyes widened. \"Really? How do you know he's watching?\"\n\n\"Because he's always working in the yard,\" I said, \"clipping the hedge or something.\"\n\n\"Isn't he retired? Doesn't his wife see you?\"\n\n\"She volunteers at the library, so she's not home on weekdays,\" Jeana said. \"It's all very naughty. You said you sunbathe out in your yard, right?\"\n\n\"I used to,\" Cynthia said. \"But now, with our Saturdays on the boat, I don't really need any more sun.\"\n\n\"There's houses around, though, right? Maybe you should do your workouts outside, like Margaret does. I'm sure the neighborhood men would love it.\"\n\n\"The house out back put in an above ground pool with a deck this year,\" Cynthia said. \"The mother and father are okay looking, but the kids use it, mostly. There's a boy, probably a senior in high school. His friends are there sometimes.\"\n\n\"Ooo! You've been watching, haven't you!\" Jeana said.\n\n\"Maybe,\" Cynthia said, smirking.\n\n\"You should definitely exercise outside, like Margaret does. Make sure you give them some hands and knees stuff with your ass facing them. If they jump in the water you'll know you gave them boners.\"\n\n\"Okay, church, remember?\" I said. \"I hope nobody can read lips in here.\"\n\n\u2014\n\nTuesday was another sticky day, with humidity that made it feel more like Florida than Upstate New York. It was definitely a bikini kind of day for my exercise session, and I was feeling even sexier knowing that Martin would probably be outside talking to me. I was certain the Saturday night orgy in my bedroom would be on his mind.\n\nI had my coffee in the living room after Donald left for work. Why, you ask? I wanted to see Martin's wife Ellen leave for her volunteer job at the library. I was peeking out the window, hoping not to be seen. It was all part of the 'secret life' that had grown in me ever since the Devil planted his seed on that fateful night in the Adirondacks. I wasn't proud of my sneaking around, and I'm still not, but I blame society for being out of whack, not me. Sex is the most pleasurable thing in the world. I'm of the mind that it should be celebrated, not reined in and forbidden. But, we live in the society we live in, so all I can do is be myself. I sipped my coffee and watched as Ellen backed out of her driveway and drove away.\n\nI dug through my bikini drawer and wished I had something new to show off in, but Martin had already seen them all. Mix and match, I thought to myself; maybe a yellow bottom and a zebra top. The newest blue one is the most daring in some ways, especially the unlined bottom that gives more than a hint of the contours of my pussy lips. It's made of cotton and it soaks up moisture and isn't shy about showing it. I put it on and remembered that the top isn't my favorite; it just doesn't work with my body type. It forces my tits too close together and makes them look awkward, almost like I've had a boob job.\n\nAn idea suddenly hit me. I left the blue bottoms on, took off the top, and put on a too-small sleeveless white undershirt; it's a tank top with an openable four-button placket at the top of the front. It's a shirt that had shrunk over the years and was thin from age. It was a 'wow' moment, seeing myself in the mirror dressed that way. I'm much too busty to go braless, and much too nipply, but I'll be damned if the tits Ty loves aren't holding up well. Literally, I mean. I'm so happy with my firmness at my age. My breasts are still remarkably youthful, and stand up proud. A little too proud, maybe, for the church world, but just right for the Devil's.\n\n\"Damn, girl!\" I said to the mirror. \"Are you really doing this?\"\n\nThe woman looking back at me was a Hooter's girl. All four buttons open for maximum cleavage. It was the nuclear option. I don't think Hooter's girls are allowed to go braless, and I could see why. Tits galore!\n\nWalking out to the backyard gave me goosebumps. I felt like my whole body was a pair of tits, and my nipples showed their happiness. I heard Martin's back patio door when I was rolling out my exercise mat; he was becoming as bold as I was, out for a look-see, not missing a minute. \n\n\"Oh, hi Martin,\" I said, feeling a flush of heat from a heady mix of excitement and embarrassment.\n\n\"I enjoyed meeting your friends,\" he said, smiling softly, holding a mug of coffee in his hand.\n\nHe walked toward the low hedgerow between us so I walked over to have our usual chat. Without the straps of a bikini top to act as shock absorbers my breasts moved in a most astonishing way. 'Wobbles' might be the best descriptor. And my nips...good Lord almighty they were out there, the round ridge of my big areolas perfectly defined, and the nipples themselves as big and hard as a piece of candy. The shrunken shirt was short enough to show all of the sexy blue bikini bottom and a little bare belly to boot. The feeling I had as I stood there was very similar to being naked, and I could tell Martin was happy with my choice of exercise wear. I'd seen his eyes twinkle before, but that morning they seemed to have an inner light.\n\n\"They enjoyed meeting you, too. Did you like Donald's ribs?\"\n\n\"Oh, yeah,\" he said. \"Best I've ever had.\"\n\nMy goosebumps were sticking around because Martin was sneaking glimpses of my body each time he sipped his coffee, which was often. I wondered what he thought of me. I'm guessing 'total slut', but of course in my Devil twisted mind that's a compliment, and my we're-not-softening-while-he's-around nipples gave away the pleasure that our mutual mind reading was giving me.\n\n\"So how did you folks all meet?\" he asked. \"I know you said Bob and Jeana are church friends...\"\n\n\"Yes, we've known them for years,\" I said, \"but...well...this summer we...sort of got to be better friends. I heard Bob telling you about their boat.\"\n\n\"Yes, it sounds wonderful. I miss the days of wooden boats. When I was a kid that's all there was. Ty's boat sounds like fun, too. Have you been on it?\"\n\n\"No, I haven't. Yes, it's really something. You can hear it from miles away.\"\n\n\"Kind of like those bikes they ride. That woke up the neighborhood.\"\n\n\"Oh, no! Really? I guess it was kind of...late, when they left. Did it really wake you, and everybody, do you think?\"\n\n\"No, I was awake. I can't speak for the rest of the neighborhood. There's too many quiet people around here.\"\n\n\"You were awake? \" I asked, my breasts suddenly tingling. \"What kept you up? A good book?\"\n\n\"Oh, it just seemed like a good night to stay up,\" he said. \"It probably sounds funny, but when Ellen's away I revert to teenaged behavior. I break out the tequila and...well...fantasize about being younger, I guess.\"\n\n\"Yeah, I've done that. Actually, this summer I feel like I shed about twenty years of my age. Can you tell?\" I asked, glancing down at my titty self. \"I feel like I'm thirty again, but...maybe I'm delusional.\"\n\nMartin shook his head. \"There's a whole lot of thirty-year-olds who don't look as good as you, Margaret. Your friend Jeana has that ageless quality, too.\"\n\n\"She's a few years younger, but yeah, she's beautiful, isn't she? If Donald and Bob both die I think I'll ask her to marry me,\" I said, smiling.\n\nMartin looked happily intrigued, and his eyes twinkled. \"Are you...into that?\" he said.\n\n\"Oh,\" I said, my nipples suddenly back to full strength. \"Yeah, but...don't tell anyone. Men are my favorite, but...\"\n\n\"I wouldn't tell a soul,\" Martin said. \"You know, I've had a lot of neighbors over the years, but...you're the most delightful.\"\n\n\"Oh, you're sweet. I like you best, too,\" I said, smirking. \"Tequila, huh? After those beers you had with us? How were those teenaged fantasies? Good?\"\n\n\"They were pretty great. Dirty old men like me can conjure up some wonderful things.\"\n\n\"Ooo, I like that smile,\" I said, flirting close to the danger zone. \"I guess I'll just have to speculate. Well, I better get to my workout. I lost another pound last week.\"\n\n\"Good for you! I admire people who stick to their guns.\"\n\n\"Do you have yard work this morning?\" I asked. \"Hedge clipping?\" I'm pretty sure Martin knew it was an invitation to watch me.\n\n\"Oh, yeah, I probably should get back at that. Ellen likes a neat yard.\"\n\n\"Best to get it done before noon; they're saying it's going be another hot day. I'm going to spend the afternoon in the air-conditioning; I've got some laundry to do. When did Ellen get back from her conference?\"\n\n\"Sunday evening. I slept late Sunday morning. First time in a long time.\"\n\n\"Oh. Up really late, huh?\" I said, smirking. \"Did Ellen notice the tequila bottle's half empty?\"\n\n\"No, she wouldn't approve of the way I entertained myself.\"\n\n\"I would have loved to have slept late Sunday morning,\" I said, \"but I've got to be ready at the church office in case anything goes wrong. Not to mention casting out my sins. It seems like a constant ebb and flow lately, embracing them and then casting them out. Sometimes I think the sins are winning.\"\n\n\"I'm glad to see you're not too upset about it.\"\n\n\"I'm not,\" I said, smiling softly at the sweet dirty old man who lived next door.\n\nI let our smiles end the conversation and I turned and walked back to my exercise mat, letting my ass sashay the way it seemed to want to. The mat was lined up with Martin's view of me, so he had an ass view or a front view, depending on my moves. My workout felt marvelous, the way it sometimes does, especially after weeks of muscle toning and effort. I felt fit, and alive, and I absolutely loved having Martin's eyes on me. I decided not to masturbate even though I wanted to. It seemed over the top. My little outfit was plenty that day; breasts hanging full and loose, nearly tumbling out of my little shirt; and the gusset of the blue bikini bottom was darker blue with wetness by the time I'd finished my leg and glute exercises, with my ass toward Martin, of course. The snip snip snip of his hedge clippers was almost as soothing as music.\n\nThat afternoon I washed the casual summer dress and lacy lingerie that I'd worn Saturday night when Martin was with us. I washed the dirty bed sheet, too, and I hung it all out on the line in the backyard. I know Martin saw it all because he was out in the yard off and on during the heat of the day. It was all still fluttering in the hot breeze when Ellen got home from the library.\n\n\u2014\n\nI did some cleaning in the bedroom before Donald got home from work. My dildo, fondly known as Mr. Dicky, had gotten used a bit during the party on Saturday night, so I washed it in the bathroom sink and dried it and put it back in its place in the bedside drawer. The bottle of lube was there; I couldn't resist opening it and taking a sniff of it to refresh my sense memory.\n\nThe curtains were open to brighten the room while I cleaned, and I found myself standing by the window looking at a sight that gave me a tingle even though I'd sort of expected it: Martin and Ellen's upstairs window, the one directly across from ours, one I've never seen open before, was open at the hottest time of the day, when everything else was sealed up tight and air-conditioned. Martin had obviously forgotten it, and Ellen didn't have a clue that it was open.\n\n\"Good Lord!\" I said, whispering to myself, as if I was surprised.\n\nI guess I was surprised, surprised at myself for being such a slut. It wasn't the first time that the revelation had hit me, of course, but a week of teasing Martin and masturbating in the yard had upped the stakes. It was officially official: the Devil wasn't letting go, and I was embracing his dark, dirty ways. \n\nDonald arrived home from work and startled me as I was standing there.\n\n\"Spying on the neighbors?\" he said, smiling as he took off his necktie.\n\n\"Oh! You sneak! Do you sneak up on all your women?\"\n\n\"I might, if I ever get the chance.\"\n\n\"Three girlfriends,\" I said, smiling a little and shaking my head. \"A wife and three girlfriends. You're aware of that, right?\"\n\n\"Only one is my soulmate,\" he said, embracing me tightly from behind. \"Seriously though, are you spying on Martin? Do you have a thing for him?\n\n\"No!\" I said, probably much to forcefully. \"Why would you say that?\"\n\n\"You guys seemed a little flirty when he came over to eat with the gang. It's no big deal. I get it.\"\n\n\"You get it? Why? Are you flirting with Ellen?\"\n\n\"Ha!\" Donald laughed. \"No! She has zero sex appeal. Is that an awful thing to say? They're an odd couple; you said they're both about sixty-five, right? She looks and acts like she's seventy-five and he looks and acts like he's fifty-five.\"\n\n\"I know,\" I said, melting into my sweet husband's embrace. \"How was work?\"\n\n\"Good. I talked to a woman at the Swingtime Social Club on my lunch hour today. She sounds really nice. She asked me a few questions, but she said, thanks to Ty and Nikki's 'glowing' recommendation, we have a free pass to come in and check it out, anytime we want.\"\n\n\"You're kidding!\" I said, twirling out of Donald's arms so I could look at him. \"It's as easy as that?\"\n\n\"Yeah. I was a little surprised, too. It's just one time, though; after that we'd have to pay for a full membership.\"\n\n\"Good Lord! Are we...doing it?\"\n\n\"I'm a guy, so, it gets my thumbs up. But I'll do whatever you want.\"\n\n\"Oh no, you're not leaving this up to me. This calls for a joint decision. The last thing I want is somebody finding out about this and asking whose idea it was and you saying, well, my slutty wife decided it. No sir. If you say we're going, we're going.\" \n\n\"For real? We're doing this?\"\n\n\"If you fuck me right now, then yes, I'll vote yes,\" I said. \"We'll go to a dirty sex club and we'll let strangers fuck us. I've been so horny lately. Am I okay? Am I going a little insane?\"\n\n\"I'm totally in love with my insane wife. More in love with you than ever.\"\n\n\"Take your pants off. And don't close the curtains. I want Ellen to see us. I want to encourage her. I think Martin would appreciate it.\"\n\n\"Did he say something?\" Donald said, as he took off his pants. \"Was it Nikki that got to him? Oh, shit, you don't think he heard us, do you?\"\n\nHe scrambled out of his boxer shorts. The wrinkled tails of his white dress shirt almost covered his mostly hard cock. I went to my knees and scooped the hot flesh into my hand and took the tip of it in my mouth, bathing the sensitive underside of the quickly hardening shaft with my wet tongue. \"I left the window open Saturday night,\" I said. \"Ellen wasn't home, remember? He heard all of it. He drank tequila and listened to us.\" I mouthed the length of my husband's beautiful cock and played with his balls. \"He heard all us girls cum, so many times.\"\n\n\"Oh, Jesus!\" Donald whimpered. He wasn't mad. He was shocked and thrilled, like I was. \"You really are insane,\" he said. \"God I love you.\"\n\nFifteen minutes later he was on his back on the bed, his head and shoulders propped up by the pillows, and I was on him reverse cowgirl style with the front of me down against his legs. My mind was beautifully dizzy after a nice orgasm, but Donald hand't cum yet; he was still hard deep inside me, and his fingers were tickling my asshole. \n\n\"Oh-h-ho, that feels...crazy good,\" I said, breathless. \"Do you like that part of me?\"\n\n\"Mmm hmm,\" Donald said. \"It's every bit as beautiful and sexy as the rest of you.\"\n\n\"You're saying all the right things today,\" I said. \"Have you been practicing your seduction?\"\n\n\"I wish I could get my tongue there, with my cock inside you.\"\n\n\"Have you done that? With the girls?\"\n\n\"No,\" he said. \"I haven't been brave enough to get my mouth that close to a guy's cock.\"\n\n\"God!\" I huffed. \"You ass tickle like a master! I've never been so sensitive there before. Did you see how Cynthia orgasmed from nothing but anal? That was...wild.\"\n\n\"Yeah, I may have seen it,\" he said, kiddingly. \"I may have stared at the whole thing with my mouth open in amazement.\"\n\n\"Can you reach the drawer?\" I asked, breathless and horny as all get-out. \"Maybe you could...use some of that lube on Mr. Dicky and...just give me an inch of him.\"\n\n\"Wow. The love of my life is once again surprising. Do you still want me in you?\"\n\n\"I do. Maybe just...stay still, until I get used to it.\"\n\n\"Your ass looks stunning this way, babe. When you're spread wide like this it's just...delicious.\"\n\nI could feel him reaching for and opening the drawer, and I could hear him readying Mr. Dicky. Donald's cock felt even bigger and harder inside me than before; not moving, just...beautiful. And then I felt his finger, slippery with lube, smearing across my asshole. \n\n\"Oh-ho, Jeeze! It's already good and you haven't even...\"\n\nThe feel of Mr. Dicky pressing against my little hole shut me up. And then, with an odd feeling of pressure, he was in, just like that. \"Wow, that's...interesting,\" I said. My hips were trying to fuck it, ever so slightly, without my brain telling them to. \"Oh, God!...I may like this...\"\n\nI felt Donald's hips moving under me, his cock deep in my pussy, barely fucking.\n\n\"That's an inch,\" he said, rotating the tip of Mr. Dicky inside my ass. \"Want some more?\"\n\n\"Yes,\" I whispered breathlessly. \"More.\"\n\nAnd so, I had my first anal penetration, and my first double penetration, and my first anal orgasm, all at the same time. Mr. Dicky and Donald were both deep inside me when the rushing heat washed over me and took away reality. They were both fucking me, moving beautifully, and I lost it with a mighty groan. The side of my face was against Donald's leg. I felt comfortable and loved, more than ever. The Devil swept in and lifted me into his arms, and I flew with him to his warm darkness."
    ],
    "authorname": "riverboy",
    "tags": [
        "first time anal",
        "anal",
        "big ass",
        "orgy",
        "tattoo",
        "biker",
        "motorcycle",
        "neighbor",
        "excercise",
        "church"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-devil-comes-out-at-night-pt-07"
}