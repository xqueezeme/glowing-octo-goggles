{
    "title": "More than I Deserve",
    "pages": [
        "Hey folks. I hope you all had a great Christmas and New Year. I'm starting the year off with a story that's a little bit softer in tone than usual, but we're gonna do some different things this year. Some of them are designed to involve you guys more in the story making process. Who knows maybe I'll fall flat on my face but it won't be the first time. So be ready. Before I forget, the legendary Barney-R is on vacation for the rest of the month, so let's all pray for his speedy return. SS06\n\n*****\n\nMona\n\nThey say that turning a rectangle or a square into a triangle increases its strength. It took me a long time to understand that. It seems weird to me that having fewer sides makes it better. But I'm an old woman now and with age they say you get wisdom. I don't know if that's really true. I don't know if age has brought me wisdom, but it's certainly brought me strength. Tonight, for the first time in my life I was strong enough to say no to temptation. I actually said no to sex. I looked into the eyes of the man who'd helped me almost ruin my life and said no. As I watch him walking away in the pouring rain on a cold night that I wouldn't send a dog out in, I feel really good about it. I feel like I regained something special. Suddenly, I feel like I have more than I deserve. \n\nMaybe I should start at the beginning, so this will make sense.\n\nIn the beginning there was Bobby and me and we were in love...\n\n* * * * * *\n\nBobby\n\nThe phone call as usual had been bittersweet. The joy and happiness of speaking to my bride, versus the pain of having to tell her that we wouldn't be together for New Year's Eve. \n\nShe loved the diamond bracelet I had sent her for Christmas, but she'd trade it in a second to have me home. It was the same story all over again. We'd gotten married at a very early age; nineteen for her, eighteen for me. \n\nAnd since neither of us had come from rich families, money was hard to come by. As usual with the mind of the engineer I hoped to someday become, I came up with a plan. \n\nThe oil companies were always recruiting people with mechanical aptitude for their oil rigs and bases in far off locations. They paid extremely good money for long term shifts in out of the way places. I'd gotten an interview and had quickly impressed the company's representative with my drive and intuitive grasp of their systems. \n\nI hadn't yet begun to study mechanics, pneumatics, hydraulics or robotics but I had a knack for figuring out what things did and how they did it. Being able to figure out how things worked, where they were broken and whether to try to fix them or simply replace them was something I'd been able to do for most of my life. It was also my passion. As a kid I was always at the local auto repair shop watching the mechanics fix cars. I handed them tools and asked tons of questions. \n\nOnce I reached my teens I began to answer THEIR questions. I had also begun fixing things all over the neighborhood. And I did it for free. Mostly I did it just to learn more about how things worked. \n\nOn my eighteenth birthday, my aunt and uncle, who'd taken me in when my parents died, took me out for dinner. We didn't go to a big fancy restaurant; we went to a small diner in town. The place was nothing special. The food was also not spectacular. In fact the only thing I remember about the place was the waitress. She made an impression on me that would never go away. Apparently, the feeling was mutual, because at the end of the night she gave me a napkin. \n\nI wiped my mouth on it and was about to throw it away, when my uncle, who was far sharper than I was told me to hold onto it. \n\n\"Look at the napkin, Bobby,\" he said. \n\n\"Why?\" I asked. \"It's just a piece of paper.\" \n\n\"It's not the napkin,\" he smirked. \"It's what's written on it.\" \n\n\"What's written on it?\" I asked. His eyes turned skyward and I knew then that I had almost missed something. \n\nI opened the napkin and saw her phone number written there. The look of shock and happiness on my face must've carried across the restaurant because when I looked at her, at another table she was handing, she smiled just as broadly as I had. \n\nI called her the next morning and we've never been apart since. \n\n\"Mona, I love you so much,\" I said into the phone. \"Honey, I wish I could be there with you right now. But this is only temporary. \n\n\"It's just awful being here alone,\" she said. I could almost feel her tears through the phone across the thousands of miles that separated us.\" The deal I'd made with the oil company wasn't that unusual. I worked for a semester and then attended classes the next semester. The oil company paid all of my expenses and my tuition. \n\nWhile it wasn't a perfect solution to my problems, it was a good one. Not only would I get my education paid for without ending up mired in thousands of dollars of debt, but I'd have the inside track on a great job as soon as I graduated. \n\nThat alone was worth it. I'd heard of too many guys who'd spent untold thousands of dollars on a college education, just to graduate and find they not only could they not get a job in their chosen field or anything close to it, they couldn't get a job at all. \n\nThe only thing bad about the arrangement was the fact that it would take me a little bit longer to get my degree. That fact and the separations from Mona that I thought would kill me. But someday we would trade our comfy little apartment in on a beautiful house and fill it with love, wonderful things and a couple of perfect kids. \n\nAnd anything I had to do to get us there would be worth it in the end. \n\n\"Mona it's hard for me too,\" I said. \"I wish I could be there with you too. But keep your eyes on the prize. Someday all of this will be just an almost forgotten memory.\" I hung up the phone vowing to make my words true. \n\n\"Bobby, we're getting out of here,\" said my boss Tom Dunn as I hung up the phone. \"There's a big storm coming in. It's bringing in subzero temps and lots of snow and ice. This temporary pumping station will never survive that. We have to get out of here.\" \n\n\"Huh?\" I said. \"Why can't I stay?\"\n\n\"Your choice, Bud, you can leave on one of the trucks if you want to stay a while, but I'm taking one of the first choppers they send,\" he said. \"Don't worry, we still get paid for the entire stay, we just get home a few weeks earlier. And I know you'll be in school from January until May, but I've already arranged for you to be assigned to my crew for the summer.\" \n\n\"Tom, what happens to the base?\" I asked. \n\n\"They'll pump as much oil out of here as they can,\" he said. \"The oil they pump out of here in a single day will pay for the entire complex. We've kept it pumping for months, Bobby. The company got a lot more than their money's worth out of the place. \n\nThe locals from nearby towns will cannibalize the pipes, all of the building materials and anything we leave behind. It's the circle of life, just like in the Lion King.\" \n\n\"I'm staying,\" I said. He looked at me like I was crazy. \n\n\"Why?\" he asked. \n\n\"Wouldn't it be even more profitable to save this place instead of building one just like it next season?\" I asked. \n\n\"Bobby, once the pipes freeze, there's just no point in staying. It's easier to start out fresh with pipe that won't leak and head off any problems,\" he said. \n\n\"I think I'll hang around for one of the trucks,\" I said. \n\nIt took me a couple of hours and several phone calls to get what I wanted. One of the phone calls surprised me. It was from Tom's boss. \n\n\"Bobby what are you doing?\" he asked me. \"Son, you should be getting out of there not ordering chemicals for some weird concoction.\" \n\nI quickly outlined my plan for him and by the end of the phone call he was doubtful but told me I should go ahead and try it. \n\nMy idea was to sheath the exposed pipe sections in a thick coating of a foam-like polymer that I had learned about in school. It would protect the exposed sections from the storm, but could easily be removed when spring came. At the same time we would pump all of the oil out of the pipes and circulate a very cheap antifreeze solution through the pipes. The circulating pumps would also warm the solution up to a temperature that would prevent any damage to the pipes.\n\nThree days later my life had changed. I'd been flown to the oil company's headquarters in Texas. My entire deal had been changed. From then on I would be attending school full time. It would all be paid for by the old company. As soon as I got my degree I would go to work in a very lucrative position as one of their engineers. \n\nMy expense account had been quadrupled and I was going to be able to buy the house that Mona and I had always dreamed of. Only it would be a lot sooner than we thought. I could hardly wait to walk in and surprise her. My plane would get in just before eleven pm on New Year's Eve. Boy would she be surprised. \n\n* * * * * *\n\nMona\n\n\"I wish I could be there with you, too,\" said Bobby over the phone. As he hung up I slammed the phone down. Tears rolled down my cheeks. \"It's not worth it,\" I said. \n\n\"Well ... I'm glad he isn't here with us,\" said Sam. \"Bobby isn't really bright enough to understand what's going on with us. And he isn't kinky enough to want to join in.\" \n\n\"Two things ...\" I said through clenched teeth. \"Number one ... Bobby is far smarter than you and I combined. You talking about him not being smart just makes YOU seem stupider. You aren't the one in college on an engineering scholarship are you? Maybe Bobby isn't as street smart as you are, or as sneaky but his brains by far outclass you. \n\nNumber two, there is no US. What we have is very short term. I'm using you, the same way you're using me. The only reason you're here instead of a dog or a cat, is that training a dog not to shit on the floor takes time and I hate cats. You are here only because I'm lonely and I need a way to deal with it. \n\nBobby is unavailable to me just like your girlfriend, whatever her name is, is unavailable to you. As soon as he gets home, I won't even look at you.\"\n\n\"Until the next time he goes away,\" he hissed. \"And if you keep up that shitty attitude, I may find someone else to fuck while Dana is away at school. And don't get things twisted. I don't care any more about you than you do about me. All you are to me is pussy. We broke up for a reason, remember?\" \n\n\"Trust me,\" I said. \"I remember. We broke up because you were incapable of keeping it in your pants. It took me a while to figure out that a serious relationship was never in the cards for us.\" \n\n\"So, why am I here now?\" he asked. \"I broke your little heart and moved on, yet it's me you called when you need someone to ring your chimes while your hubby is away.\" \n\n\"I guess I wanted a way to test myself,\" I said. \"I wanted to see if I was strong enough to hold you at arm's length emotionally and not become attached to you. I guess I'm a lot stronger now. You do nothing for me.\" \n\n\"Oh, I did something for you ...\" he laughed. \"I did something for you twice last night. But don't flatter yourself. You don't mean much to me either. Dana is going to be a very rich doctor. And I'm going to be a very well supported husband. As soon as she finishes her residency, I'll knock her up and my future will be assured.\"\n\n\"So you don't love her either?\" I asked in surprise.\n\nHe looked at me as if I was crazy. Then he grabbed my breast and began mauling it. Against myself, I felt my nipple begin to harden. \n\n'I'm so sorry, Bobby,' I thought. But I'm really not strong enough to handle the loneliness. For the next hour he used my body in any way he wanted. He gave me a couple of orgasms and I have to admit that the sex, on the surface was good in a physical sense. Actually, in physical terms he was better than Bobby. The gap between them in that aspect was rapidly closing. Bobby got better every time we were together, but Sam had been my first. He had actually taught me to enjoy sex. He knew what I liked better than anyone else because he had pretty much instilled what I liked in me. There was something about your first lover that you never get over. \n\nSam also had far more experience with sex than Bobby would ever have. But the one thing he didn't have was my heart. That belonged to Robert James Thompson fully and forever. So, while Sam had all of the moves, he could only move my body. Bobby moved my heart. In a contest like that, Sam would come up short every time. \n\n\"Hey, I've got an idea that might be a hoot,\" he smiled as we lay in my bed gasping for breath afterwards. \n\n\"Is little Bobby going to call you on New Year's Eve?\" he asked. \n\n\"Of course,\" I said. \n\n\"Probably just before Midnight, right?\" he asked. \n\n\"Probably,\" I said. \"Why?\" \n\n\"He's almost as unimaginative as Dana,\" he said. \"At least she wants us to have phone sex, but she picked the exact same time. I think we should give them what they want. But while they're imagining being with us we'll be fucking up a storm. It'll be like a big half real-half electronic four way. We'll have online sex with the people we're involved with, while fucking each other's brains out.\" \n\n\"I don't know,\" I said. \"It seems wrong.\"\n\n\"How is it wrong?\" he asked. \"How is it any more wrong than what we just did?\" \n\n\"Oh alright,\" I said. \"I don't want to be alone on New Year's Eve and I can't afford to have anyone see me out partying while Bobby is working his ass off.\" \n\nOver the next few days, I spent a lot of time thinking about it. I visited my family and for the first time I really looked at my parents. I noticed that even after all of the years that they'd been together, there was still something between them. \n\nThey weren't always kissing on each other, but there was a bond between them. It was obvious to anyone who looked at them that they belonged together.\n\nI asked my mother about it and she smiled. \"It's love, Honey,\" she said. \"Your father and I have been together for so long that we've just become a part of each other. Long after the lust fades, we are simply incapable of being without each other. We still make love and we still kiss each other. We do everything that you and Bobby do. It's just that we aren't desperate any more. We're secure enough to know that neither of us is going anywhere without the other. We can argue. We can fight and know that we're still going to be together no matter what. Only death would separate us and even then not for very long.\" \n\nJust the thought of what she'd said brought tears to my eyes. \n\n\"Honey, you and Bobby will get there,\" she said. \"I can see it when he looks at you. You picked a good one this time. Not like that other asshole you fell for. Your father really wanted to bust his ass. But we figured that you needed to go through it on your own. You needed to make your own decisions. And you can feel the difference can't you?\" \n\nI nodded even though I felt guilty. She was right. I could feel Bobby's love for me like it was a tangible force. Even with him halfway across the world from me, I could feel his presence in the room. Bobby was always with me. \n\nI felt really shitty about what I'd been doing. And for the next few days when Sam called me, looking for a piece of ass, I turned him down. But the loneliness defeated me and as New Year's Eve drew nearer, I found myself giving in. But I swore it would be the last time. \n\nIt didn't work out the way we planned though. He came over and brought a couple of bottles of champagne with him. We both realized that we couldn't do things the way we'd done them when we were together. We couldn't get drunk and fuck the night away, it was too risky. We had to at least stay sober until we got off the phone with our significant others. \n\nI gave him a blow job while we waited and I felt bad about it. I realized them that I couldn't do it anymore. Suddenly I realized why it was wrong. I also realized why what he wanted me to do was even more wrong than just having sex with him was. \n\nBobby loved me. Bobby, unlike Sam had built his whole world around us. Running off to screw some other woman wasn't a part of Bobby's way of thinking. I was his everything.\n\nSpending time with me was the highlight of his day. Bobby calling me from halfway around the world meant something. It was special. And I was going to ruin that special moment and betray him by having sex with Sam, while I should be concentrating on my own man and my own relationship.\n\nIt was Sam's way of belittling and making fun of my relationship because HIS relationship meant nothing to him.\n\nAs midnight neared, I felt worse and worse. But while I was locked in my thoughts, Sam got between my legs. It was wrong. I finally realized it. That time I got no enjoyment out of it. I lay there like a rag doll on the verge of tears. \n\nSam humped away at me oblivious to the fact that I wasn't fucking him back. He shot his sperm so deeply inside of me that it brought me out of the stupor I was in. \n\n\"You forgot the condom, stupid,\" I shrieked at him. \"I don't want to pick up whatever diseases the whores you fuck probably have.\" He just laughed at me. \n\n\"You all say the same thing,\" he quipped. It dawned on me then that in his opinion, it's what I was. I was just another one of the whores he fucked. \n\nThe TV was on behind us. Sam opened one of the bottles of champagne and drank some straight from the bottle. His phone rang surprising us both. It was only eleven o'clock. \n\n\"Hey babe,\" he said. He'd made his voice deeper and sexier. He put the phone on speaker and smirked at me. \n\n\"Sammie do you have a computer where you are?\" asked a feminine voice that sounded more than a little drunk. \n\nI watched as he hooked up a Skype channel. A very thin very pretty dark haired girl was giggling while she was being held up by another girl. \n\n\"Honey, I have to get something off of my chest,\" she giggled. Sam watched in horror and the other girl stripped off her top and then pulled her bra down around her waist, exposing her small breasts. There was barely any rise between her rib cage and her breasts but her nipples were huge and aroused. \n\nAs Sam watched the other girl began licking and tweaking those nipples. \n\nThe rest of Dana's conversation was only moans and yelps as the other girl finished stripping her and dove between her legs, licking her pussy like it was the nectar of the gods. \n\n\"You bitch, you didn't tell me that you were a lesbian,\" screamed Sam. \n\n\"I'm not,\" crooned Dana. \"I like boys AND girls. I've been with Carmen longer than I've been with you. My plan was to keep both of you, but ...\" \n\n\"I could learn to live with that,\" said Sam. \"Maybe the three of us could ...\" Even as Sam spoke; it became obvious that Carmine considered Sam to be lower than dog shit. It was obvious to anyone except Sam that is. \n\nAs Sam continued to try to spin scenarios for the three of them, the three of us, the two women he was Skyping with and me hidden behind the computer all knew what was going on. It was all I could do not to laugh. The player himself was being played. \n\n\"Sammie, get your dick out,\" said Dana interrupting Sam's speech. \n\nSam stood up and his rapidly inflating dick bobbed up and down for the camera. \n\n\"Baby, how flexible are you?\" asked a drunken Dana.\n\nSam, sensing something kinky was on the offering locked onto her words. \n\n\"Very,\" he said huskily. \n\n\"That's good baby,\" said a drunken Dana. \"Maybe you can suck your own dick, cause I won't be doing it anymore.\" \n\n\"Huh?\" barked Sam in surprise. \n\n\"We're done asshole,\" spat a suddenly sober and pissed off looking Dana. \"I've heard about all of the shit you've been doing while I'm at school. It wouldn't surprise me if you didn't have some skanky whore there with you right now. So even though I really don't enjoy guys very much, let me leave you with something to remember me by ...\" ",
        "From off camera, Dana reached out her hand and pulled a black guy with the biggest dick I had ever seen into camera range. She tried her hardest to suck that dick but she couldn't get her mouth over the head of it. \n\n\"Too bad, you're not here, Sam,\" she said, mugging for the camera. \"Maybe you could suck it. Or maybe he could fuck both of us instead of just me. Before Sam could react she lay down on a bed and took that huge dick inside of her. After he pumped it back and forth inside of her a few times with her screaming her lungs out, the video feed was cut off. \n\n\"Wow,\" I said. \"That thing was huge. And she sure seemed to be enjoying it.\" Sam was pissed. Even though he'd claimed not to have any motivations other than financial when it can to Dana, his pride was hurt. \n\nI couldn't help thinking that he'd gotten what he deserved. He threw me on the bed then and started fucking me mercilessly. We fucked for more than an hour. I don't even think he came once. I know I didn't. Neither of us really wanted sex. \n\nSam was just trying to prove that he was a man. And I was just trying to make it through until Bobby called me. I had to tell Sam that this was over I couldn't do it anymore. \n\n\"Shit,\" I suddenly screamed. I pushed Sam away from me. \n\n\"What?\" asked Sam.\n\n\"It's after midnight,\" I missed Bobby's call. \n\n\"The phone never rang,\" he said. \"Don't forget there's a time difference ...\" \n\n\"Just get the fuck away from me,\" I said. \"I need to get cleaned up before I answer the phone.\" \n\n\"Why?\" asked Sam. \"Can he tell that you're covered in some other guy's sperm over the phone?\" \n\nSo we waited and we drank and we waited and we drank some more. Finally we fell asleep, but Bobby never called. \n\nWe woke up the next morning feeling really awkward. I noticed that Sam had moved to the sofa in the living room. Us sleeping in the same bed together would have been weird. I felt like shit and it wasn't just the hangover. \n\nSam acted like he couldn't get away from me fast enough. \"I'll uhm ... Call Ya,\" he said. I didn't reply. Maybe something in my sick puppy that's just been kicked routine forced him to stay a few minutes longer. \n\n\"You know it's possible that the phone lines from where he is are down,\" he said. \"And what he does IS kind of dangerous. Anything could have happened. Let's just hope it's some kind of technical glitch and that right now he misses you as much as you miss him.\" I just nodded and a bit of my smile came back. But deep down inside of me, I was sure that Bobby HAD called me and that I'd been so busy fucking Sam that I had missed it. \n\nBut telephones work two ways. So I decided to break my rule. I tried not to call Bobby while he was working. He'd told me a few times that the more we spoke while he was away, the more homesick he became. And I knew that I was in no danger of losing him because there were no women working on the pumping stations. \n\nBobby had told me himself that whenever a woman truck driver or nurse showed up she was mobbed by a bunch of guys who hadn't seen a woman in months. \n\nI called four times and got no answer. The hair stood up on the back of my neck. Suddenly my guilt was even worse. I had visions of explosions and fire and danger all around Bobby. I saw the man I love, fighting for his life while I was flat on my back with my legs in the air and another man between them. I felt sick to my stomach. I threw up everything in my digestive tract and it wasn't the hangover. I was the worst kind of whore imaginable. \n\nBobby was out busting his ass. He was exposed to danger every day and he did it for us and our future. He faced death and I couldn't face a little bit of loneliness. I swore again that I would change. \n\nThe next day I had another idea. I called the man that always sent us the checks to pay for our expenses and for Bobby's tuition. I thought that if there was any kind of news, good or bad, he would know. \n\n\"Mr. Lively, this is Mona Thompson, Bobby Thompson's wife,\" I said to begin the conversation. \"Do you know of anything going on at the base that Bobby is stationed at?\" \n\nHe hesitated for a second before answering. I got the feeling that something was going on. And then he spoke. \"Mona, I don't have any specifics for you right now. But I'll tell you what I know ...\" he said. I braced myself for the news that Bobby had been hurt or worse. \n\n\"A huge winter storm blew into the region,\" he began. \"We decided to abandon the base. That is our protocol in situations like that. We had lots of extra people come in to help remove anything that might be salvageable. For some reason we don't have exit information for several of our guys from the base. Unfortunately Bobby is one of those.\"\n\nI almost passed out. It felt as if an icy hand had grabbed my heart. \n\n\"It could simply be that he got aboard a different truck than the one he was assigned to. He could have gotten on a truck or a chopper and not signed in. He may have gotten out on a carrier that wasn't owned by the company. We've been getting calls from guys who didn't want to wait for one of our carriers and just grabbed a ride with one of the locals fleeing the storm. A couple of them ended up stranded somewhere out in the boonies with no phone service. It took them hours to get in touch with us. Then we had to arrange transport for them to get home. \n\nBobby is pretty smart. I'm sure he's fine and will call in as soon as he can. I promise to let you know as soon as I hear from him. And if he calls you, please do the same.\"\n\nFor the next few hours I just curled up on my bed and cried. I had the worst feeling that I had somehow ruined my life. I could feel Bobby's presence in the house as if he had called or been there. I had all kinds of stupid scenarios running through my head. \n\nI felt like Demi Moore in Ghost. I felt like Bobby or his spirit had tried to contact me, but I had missed it. I had missed my last chance to communicate with the only man I had ever loved because I was too busy fucking a scumbag that I hated. \n\nI would never forgive myself. \n\nAfter a few days of worrying and crying and jumping up every time the phone rang, I went home to my parents. My mother wondered why I had waited so long to come to them. \n\nMy dad made several calls and found out some things that I never knew. The company had launched a thorough and exhaustive search for all of their missing employees. Some had been found when they called in from nearby towns as soon as the storm cleared. Others had made their own way home and had filed reimbursement claims. A couple had been found that were drunk out of their minds in whorehouses in Las Vegas. They were using the fact that their wives hadn't expected them to be home for a few weeks to get some off the books fun. \n\nThe only person who was still unaccounted for was Bobby. My dad also found out something interesting. The company had a huge insurance policy on all of its employees that covered all types of accidents on the job. Bobby's situation meant that until he was declared dead, or a body was found, no benefits would be paid out. There was also the fact that Bobby, for some reason, had decided, against the recommendation of his supervisor to remain on the base for some type of experiment. \n\nBobby had CHOSEN of his own free will to remain. A situation like that might negate the insurance policy. In the case of a missing person, they would have to wait years before declaring him dead. His beneficiaries might not see a dime for more than five years. But the real kicker was that when Bobby and I got married, he had never added me to the policy as his beneficiary. We had never thought about it. \n\nBobby's parents were long gone. His only living relatives were a drunken step brother who lived in another state and his grandmother who lived in a nursing home. Bobby often sent money to pay for extras in her care when we could afford it. \n\nThe insurance policy pre-dated our marriage. The stepbrother and Grandmother were blood relatives. If Bobby WAS gone, I wouldn't get a dime. All I would end up with was the apartment we rented and our few meager possessions. But I wasn't worried about money. I just wanted my husband back. I didn't want his insurance policy; I wanted the future that we had promised each other. \n\nMy cell phone rang and I leaped to answer it. \n\n\"Mona?\" I was so upset that it took me a moment to recognize the male voice. I thought it might have been someone from Bobby's company calling to tell me they'd found him and my nightmare was over. \n\n\"How about tonight?\" asked Sam. I slammed my phone against the wall in frustration. \n\n* * * * * *\n\nBobby\n\nThe first place I went was the campus. A wounded animal always goes to its home ground. The university was my second home. It was the very first day of the year and a weekend. Classes weren't due to start for another two weeks. Registration wouldn't start for a week. All of my classes had been pre-registered so I could work right up until the first day of class. I made more money that way. \n\nMore money; it just seemed so funny and so pointless now. What exactly did I need the money for? Everything I thought I had was an illusion. I felt like I'd been in the audience at a magic show. I watched the magician get chained up and lowered into a box. The box was lowered into a tank of water and the clock was ticking. How long could the guy hold his breath? After a couple of minutes, one of the magician's assistants screamed and ran up on stage with a sledge hammer to try to break him out.  \n\nA couple of guys from the audience ran up on stage to help her save his life. After a few blows with the hammer they manage to shatter the tank and all of the water runs out of it. They frantically take the locks and chains off of the box, hoping against hope that the magician has managed to hold his breath for that long, but they know, everyone in the audience is rapt. None of us can take our eyes away from the spectacle. And even though none of us, especially not the good church going people will admit it, but we all want the same thing. We all want to see them pull a dead magician out of that box.\n\nBut when they open the box, we're all amazed. The box is empty. The magician shows up in the back of the audience, sitting next to an old lady. He's even holding her dog. The mother fucker isn't even wet, let alone dead. \n\nThe audience applauds loudly, we have all been entertained. But deep down inside, deep down in the darkest recesses of our mutual souls, we all have the same thought. We all wanted to see that bastard die. \n\nThe child in me wants to believe that it's magic. The child in me believes in shit like that. He believes in magic and wonderment. He loves experiencing new things and just going with the spectacle of things. But the grown up in me looks at things with the mind of the engineer that I'm becoming. \n\nI look at the magician, sitting there dry and smug. I look at the water. I look at the construction of the tank, the construction of the box and the angle of the box to the stage. I look at the facts and they all lead me to one conclusion. It was just a trick. It was skillfully presented and it played upon the sensibilities of gullible audience members who wanted to see a spectacle. \n\nWe all wanted to believe, but the fact is that motherfucker never really went inside of that tank. \n\nI came home to surprise my wife. I wanted the spectacle. I wanted the magic. I wanted the love. I expected to have her run over to me and put her arms around me. I expected to give her the diamond necklace I had picked up for her on my way in and wonder how we could afford it. Then I could tell her how we had a new deal, much more money and we could go out and start looking for a house of our own, even before I graduated. \n\nBut again, I had been tricked. And where the magicians trick was done in fun and for entertainment alone, Mona's trick, cut me deep. The few seconds that I stood there, watching as some guy I had never seen slammed her like a rag doll, changed me on a fundamental level. \n\nAnd as if Mona had been the magician, I realized that she had simply never been in the tank. I had been fooled again. I had been in love all by myself. If Mona had ever cared for me at all, there was simply no way that she could have done this. \n\nFor a second I allowed myself to think about how long it had been going on. But only for a second. I realized that the length of time that she had been making a fool out of me was irrelevant. \n\nAnger flared and I fleetingly considered running in there and confronting her ... Confronting them. I saw all of the possible outcomes of that scenario in an instant and none of them were good. \n\nI could burst in and beat the living shit out of the guy. In that case I'd end up in jail. I could also end up hurt myself or dead. I could burst in and ask Mona why she did this to me ... to us. But she would only tell me it didn't matter and hat we could work through it. Or she and the guy would simply laugh at me together. \n\nOr ... Maybe she would simply tell me that the time apart had changed her feelings. She was sorry but she no longer wanted to be with me. \n\nI realized all at once that none of it mattered. I needed to move on with my life. Neither violence nor confrontations would make me feel any better. I had often said that Mona was my life. The reality is that she was simply a very important PART of my life. \n\nAnd as with all things, when one part of a system fails, the other parts pick up the slack until that part is repaired or the machine is damaged to the point of a total system failure. \n\nI decided to concentrate on the other aspects of my life. I had a meeting on Monday to talk about expenses and living arrangements. I just needed to get through the weekend. I ended up crashing at the dorm of a friend of mine from one of my classes. He was nerdy enough that he was still in the dorm over the New Year's Day weekend. \n\nI ate enough pizza and played enough Playstation 4 games to be sick of both, but made a friend for life. \n\nThe first thing I did on Monday was to go to see Malcolm Lively. Malcolm was Tom's boss, but he was handling all of the details of my new deal with the company. Malcolm had actually been the one who hired me and he like Tom was kind of a mentor figure for me. \n\nI explained the entire situation to him and he asked me what I wanted to do about it. I gave it a lot of thought and told him that it wasn't the kind of thing I could figure out in a few minutes. I told him that I needed a new place to stay and that a car might be nice. \n\n\"Bobby what do you want to do about your wife?\" he asked. \"Do you want a divorce?\" \n\n\"I don't know what I want,\" I said. \"Maybe I'm a coward. I just don't think I can face her right now.\" \n\n\"So what do I say if she calls?\" he asked. \n\n\"I don't know,\" I said. \"Just don't say anything.\" \n\nAnd that was how it went. For the next few months, I didn't give myself time to even think about Mona. Every time I found myself with time on my hands I studied, or I worked on a project, or I helped out other students. I did any and everything I could think of in an effort to not think of Mona. \n\nI could have gone and spied on her, if I chose to. But I had no desire to be kicked in the teeth again by watching her with her new man. She could have just as easily found me. After all, I was still going to the same school. It just went to show you how hard she must've been looking for me. All she would have had to do would have been to visit the engineering building. \n\nI was always looking in every direction before I went to or came back from class. I parked in the lot behind the building most of the time and went in through the back door. \n\nIt was so much easier having a car of my own. I'd bought a used Mustang from a dealership in town. A few friends of mine from the automotive technology class at our school had used the car as a project and I got to keep all of the modifications they'd done after they got their grade. \n\nWithout having to worry about where my tuition was coming from, a lot of the pressure was off of me. Not having to worry about making or keeping Mona happy, took even more of the stress out of my life. I was free to learn and experiment to my heart's content. \n\nAnd free from distraction, my grades soared even higher. It gave me the ability to apply an almost laser like focus to any and every task I had. The opportunity to replace Mona the way she'd replaced me came up several times. But I couldn't pull the trigger. Something inside of me was still too broken to think about it. \n\nWhen summer came around, I was completely over Mona. I was also free to take any internship the company offered. That was how I ended up in West Virginia. \n\nWhen you think of West Virginia, you think of coal mining. And there is that but there are a lot of other things about the state that are remarkable. The oil company I work for has several businesses there. \n\nThe people of the region are very hard working and the labor costs there are relatively cheap. The oil company took advantage of that started manufacturing all of their own pipes and fittings there. \n\nIt gave me experience with manufacturing systems, production lines, and manufacturing based robots that no amount of class time could replicate. I was there with about a dozen other interns from my company. Several of whom were returning for their second or third summers there. \n\nAfter two days, I realized that the schedule the interns worked, didn't work for me. The idea was to give the interns a taste of the plant and a bit of experience. I spoke to the plant manager and outlined my own schedule for him. He was skeptical at first but agreed to it on a trial basis. \n\nWhat I had done was look at my available time there and divided the summer into twelve one week portions. I would spend a week each, in all twelve departments of the plant. \n\nThree days into my schedule, the coordinator for the interns had begun to complain. I was missing most of the meetings and question and answer sessions that the interns did. The interns also had a group project that they were all doing together and I had yet to sign up to perform a part of it. Participating in the project was a requirement. It showed off the skills we were acquiring and was designed as a gift to the company that was providing us with the opportunity to learn. \n\nThe plant manager was about to step in to defend me, but I handled it on my own. The project was a plate with the company's logo and the year and class number on it. I looked at it and shook my head. I took the rough sketch the intern coordinator had shown me and walked out of his office. I knocked on his door two hours later and placed the plate on his desk. He looked at me like I had two heads. \n\n\"Who made this?\" he asked in surprise. \"This should have taken you guys most of the summer. We were going to present it to Malcolm at the end of the summer picnic.\" \n\n\"I made it,\" I said. \"So can I get back to work?\" \n\n\"I don't understand any of this,\" he said. That was when the plant manager came in and spoke to him. He told him about the interns working four hour shifts and going to meetings. He told him how I was working ten hours a day six days a week along with the real employees. He told him how the interns observed and occasionally brainstormed to try to find the solution to a problem. Then they would compare the solution the interns had come up with to what was actually done. \n\nOn the other hand, I was actually working in the departments I went to. I usually started from the bottom and tried out every job there. I often got the worst possible jobs in every place and spent most of my time with the real employees instead of the interns. \n\nSo the project that would have taken the interns most of the summer had taken me only a couple of hours because I could actually program and operate most of the machines. ",
        "That was the last of my problems with the intern program. A month into the program, I no longer showed up in a shirt and tie or a business shirt. I had taken to wearing work clothes, just like the other workers. It made sense since I was usually covered in oil and dirt by the end of day. \n\nHalfway through the summer, the differences were clear. When one of our production lines went down unexpectedly, almost the entire plant gathered to see what would happen. Several of the engineers got together to figure it out and I was called from across the plant to work on the fix. The other interns were pushed out of the area of focus. As they stood on the sidelines, I was a part of the team that fixed it. \n\nI was the one who discovered that several raw castings had fallen into the conveyor system and damaged the gearing. We powered down the conveyor and several of us, armed with long pry bars and crowbars, pried the castings free. Then we disassembled that section of the conveyor. We surveyed the parts that could be reused, the parts that could be repaired and then reused, and the parts that were too badly mangled and would have to be replaced. \n\nWe estimated that the plant, at least the production arm would be down for a day and a half to two days. Some of the workers in skilled trades would actually be on overtime to repair parts. Others with a great work ethic would be kept on to aid in cleaning up their departments or other areas of the plant. \n\nThe rest would have two days off. Most of the workers didn't mind the time off in the middle of the summer. Most of the interns loved the chance to take two days off just before the midsummer break. \n\nIt was a great time for me. I showed the plant manager some of the castings that we'd pried out of the conveyor. \n\n\"Notice anything about these?\" I asked. He picked them all up and inspected them carefully of the course of a few minutes. \n\n\"Is it a variation on dimension or weight?\" he asked.\n\n\"Neither,\" I said. \"It's random. If you look at the lot numbers each of these came from completely different lots spread out over a long period of time. I think they all fell off of the conveyor at some point in the process and as each fell in, the conveyor slowed marginally. We compensated for that by raising the speed of the conveyor to reach our production rate, but they finally built up to the point where it could no longer function. \n\nFor months we've probably been running the conveyor at a faster rate than we should have just to maintain our production speed. That of course would show up in increased energy costs because running the conveyor at a higher rate uses up more juice. I've identified several places along the conveyor that are the likely points were they fell in. If we put up side rails or barriers in those points we can decrease the chances of this happening again.\"\n\n\"Bobby, do that,\" he said. \"But make that your second project. Right now I need you to keep helping the guys to get the plant back online. Every hour of lost production is costing us a lot of money.\"\n\nWe all pitched in and worked really hard to get the plant back online. And when we'd finished I got to outline my plan for making it less likely to happen again. I passed out my drawings for the guards and side rails for the conveyor system and had no shortage of volunteers who were willing to help make and install them. \n\nAfter the meeting, the coordinator of the intern program came over to me. \"You know, this might be a good project to get the interns involved in,\" he said. \n\n\"I thought of that,\" I told him. \"But by the time their midsummer break is over, I'll have had the pieces made, installed and tested, and be working in a different area of the plant.\" \n\n\"You're not taking the break?\" he asked. \"No one told me that.\" \n\n\"Working here for the summer is a fantastic opportunity,\" I said. \"I can't afford to waste two weeks of it hanging around in bars and doing nothing.\" \n\n\"But you don't even get paid for it,\" he said as I walked away. \n\nAway from the plant, my schedule was equally regimented. I usually had both breakfast and lunch in the cafeteria at the plant. I tended to grab drive-through meals on the way home most nights. I lived in the same dorms as the other interns but rarely saw them.\n\nI was on great terms with most of them, but we seemed to be circling the same planet at different orbital levels.\n\nI even went in on Saturdays. Saturdays were great days for me. There was usually only a skeleton crew there, who were involved with short run production jobs, maintenance schedules for various systems or programming and QC tasks.\n\nSunday was the only day that I didn't go in. Most of the time, I studied. But I also found time to work on my car and handle things that I couldn't get done during the week.\n\nAnd halfway through the summer, I'd finally gotten over Mona enough to do something about our situation.\n\nI spoke to one of the attorneys the oil company kept on a retainer. She was a really nice woman who had me explain the entire situation to her. I think she took pity on me because even over the phone she could tell that I was on the verge of tears.\n\nShe explained the entire process and my options to me. Since Mona and I had been married for less than two years and had almost zero assets at the time of our breakup, the divorce process was more of a formality than anything else.\n\nThere would be no support given either way. We would both simply sign papers and walk away.\n\nOf course nothing ever goes that smoothly. Mona started making demands immediately. She was angry. She wanted to see me. She refused the divorce. She wanted counseling. There were things that we needed to talk about. There were things that I didn't know about that she needed to explain. She demanded a face to face meeting.\n\nShe also had lots of questions. Where had I been? Why hadn't I called her?\n\nMy lawyer was convinced that I should go to a one time meeting with Mona, if only to clear the air.\n\nI explained to her that I simply couldn't do it. It had taken me seven months to get to the point where I could even talk ABOUT Mona without my heart stopping and my stomach churning. I was simply not strong enough to look into the eyes of someone I had loved that dearly who'd betrayed me so badly.\n\nI finally agreed to write Mona a letter. If she signed the papers, she got the letter. If not the divorce would go through any way. There is no law that says you have to stay married to someone. I was just glad that we hadn't been together long enough to gain any assets or have any children.\n\nIn the end Mona signed the papers and got the letter. It was short and sweet. I wrote ten words. There were two short sentences. And both were lies.\n\n\"Mona. I don't love you anymore. I've found someone else.\"\n\nI have no idea why I wrote that. Maybe it was an attempt to save my pride by letting her know that I wasn't pathetic. I could find someone else just as she had. Or maybe it was an attempt to piss her off. At any rate it was what I wrote and like spitting into the wind, it came back to me.\n\nSundays were also the one day of the week that I got an actual sit down meal in a nice restaurant in the small town near the plant. True, I usually had my head buried in a book or a car magazine, but it still counted as down time.\n\nIt was on one of those Sundays that my life changed. I was sitting at a table alone working out several formulas in the text book for a class I would be taking in the fall. I usually bought all of my books and skimmed through the chapters before I took a class. Not only did it make the classes easier, it allowed me to figure out in advance where I would need help.\n\n\"What cha doin' Hon?\" The voice was so melodic she may as well have been singing. Even though I had barely spoken to any women since the day I walked out on my marriage, I looked up.\n\nI had to see the face that went with that voice. Female voices are tricky. Some of the secretaries at the plant had voices that could get you hard over the phone. They sounded like phone sex operators. But often the woman with a voice that could start your motor running had a face that could stop a clock.\n\nAnd this time it was weird. The voice was very melodic but also raspy and scratchy, like she smoked too many cigarettes and drank too much hard liquor. I looked anyway.\n\nThe face that looked back at me caused my pencil to drop from my fingers.\n\nIt was like the face of an angel. It was surrounded by a halo of red curls. Her super bright, blue eyes showed a lot of intelligence and a touch of humor. She seemed like the kind of woman who would never be unhappy for more than a few seconds.  \n\nLike a lot of the women in the region, she seemed not to realize how beautiful she was. \n\n\"Why are ya staring at me like that?\" she asked, the smile never left her face. \n\nI was tongue tied. I had never made talking to women a priority. I'd met Mona and we never really went through all of that awkward relationship stuff. We'd just gravitated towards each other and the next thing you knew we were just always together. \n\nThen we were married and planning a life together. Now I couldn't stand the thought of ever seeing her again. To be honest, I hadn't given being in a relationship again any thought at all. And I had especially not expected to fall for another waitress. It was too much of a coincidence. \n\n\"You're so ... Pretty,\" I blurted out before my mind could take control of my mouth. As soon as I realized what I'd said, we both turned as red as her hair. \n\nAnd in a great display of her brain power, she regained her wits before I did. She started laughing. \"I guess I'd better bring you something to drink,\" she smiled. \"You clearly ain't seeing straight. I've heard that's an early sign of dehydration. I ain't nothin' special. You can throw a rock in any direction and hit ten or twelve hillbilly girls who are prettier than me before it hits the ground.\"\n\n\"I am sooo sorry,\" I said. \"You caught me completely off guard. I just spit out what I was thinking or part of it at least.\" \n\n\"Lem'me guess,\" she smirked. \"The rest of it involved you bending me over a sofa 'er somethin'...\" \n\n\"Of course not,\" I spurted angrily. Her eyes narrowed and her mouth tightened up. \n\n\"Well what was it?\" she spat. \"Believe me, I have five brothers. I've also worked in this diner since I was sixteen. Some a them truckers that come in here ain't afraid to tell ya exactly what they want from ya. So ain't nothing you say gonna surprise me much.\" \n\n\"Just that you're probably the most beautiful woman I've ever seen,\" I said quietly. \n\nShe shifted her weight and put her order pad down on the table and just looked at me. Then her face softened and she broke out on a smile. \n\n\"You're serious ain't cha?\" she laughed. She walked away shaking her head. But she kept coming back; Even after she'd brought my meal. And she had tons of questions. \n\n\"What language is that?\" she asked looking over my shoulder. \n\n\"It's math,\" I laughed. \n\n\"Ain't like no math I ever saw,\" she smirked. \"You got all a them letters and little squiggles in there. What're ya doin' anyway?\" \n\n\"They're stress calculations,\" I said. \n\n\"That's one a the biggest problems in the world today,\" she said. \"People have too much stress!\"\n\nI burst out laughing and I couldn't stop. I must have laughed for three or four minutes. There were tears running down my cheeks when I finally stopped. It was the first time I'd laughed at all in nearly eight months.\n\nHer emotions were mercurial. In a fraction of a second the flames in her eyes were back and her tiny mouth was even tighter than it had been before. \n\n\"Are you laughing at me?\" she hissed. Even that struck me as funny and I started laughing again. She was too tiny to do me very much damage. Her nostrils flared and her tiny fists balled themselves up. \n\nHer long legs tightened and her breasts were thrust forward. \n\n\"I'm sorry,\" I said, waving my hands in abject surrender. \"It's a long sad story that I won't bore you with. But trust me, you made my day. I haven't laughed in so long it seems like forever.\" \n\nShe swung her head forcefully to the side and her long red ponytail swished as it flew over her shoulder from the motion of her head. \n\n\"I get off in fifteen minutes,\" she said angrily. \"I'll have time for your long story then. And if I don't buy it you'd better start running, because my brothers will beat the hell out of you for pissing me off.\"\n\nI finished my meal and paid for it. I left her a healthy tip and headed for the door. \n\n\"I gotta change first,\" she said grabbing my elbow. She refused to let go of me. She dragged me back through the diner. She pulled the clip off of her ponytail and all of that long red hair streamed out. I was hooked. There was no way I could have left if I had wanted to. \n\nAnd when she looked back at me with those huge, guileless blue eyes, all of my anger and rage from what had happened with Mona faded to nothingness. I truly believe that was the moment that I began to live again.\n\nThere are moments in our lives where everything just comes together. It can be the moment when you throw the winning touchdown, or sink that three pointer from the top of the key. It can be winning that debate or playing the perfect guitar riff, but it's always that magic moment that changes your life, forever. \n\nMine came then. \"Are ya staring at me again?\" she laughed. \"Ain't ya in enough trouble?\"\n\n\"I guess to me it's worth the ass kicking,\" I shrugged.\n\n\"God you're stupid,\" she laughed. \"Do ya really think that I would EVER let ANYBODY hurt you?\"\n\nI was floored. I had never been a person who believed in anything resembling love at first sight. I felt a tightening and a burning sensation in my chest. Skeptics among you would probably call it nervousness induced heartburn, or perhaps acid reflux from the meal I had just eaten. But the romantics out there know, like I do what it was. \n\nThe hole in my broken heart had closed in until it was just large enough for her to fit into. \n\nShe turned around treating me to the sight of a slim but mouth watering ass over those long legs. The upper region of her lower extremities had been obscured by her apron until then. I was in awe of the way her inverted heart shaped ass blended into that tiny waist. \n\n\"I've got two questions for ya,\" she said with her back to me. \"Number one ... What's my name?\" \n\n\"Samantha,\" I said. \"Your name tag just says Sam, though.\"\n\nShe turned around and kissed me. \"You got that one wrong, Honey,\" she said. I was dizzied by the kiss and wanted more. At the same time I began to wonder what she'd have given me if I'd gotten it right.\n\n\"Mah name ain't Samantha, Baby,\" she gushed keeping her eyes tightly closed. \"Now, what color are mah eyes?\" \n\n\"They're the brightest shade of cornflower blue I've ever seen. They're huge baby eyes that make you feel like no matter how shitty your life is, that everything is gonna be fine and ...\" \n\nShe interrupted my words by planting her mouth back on mine and this time her wet, strawberry tasting tongue sought mine. My temperature rose quickly and she started laughing. \n\n\"Do you have a hammer in your pocket?\" she laughed. \"Cause the handle is poking mah tummy!\" \n\nI was really embarrassed and jerked my pelvis away from hers. She put her hands on my ass and pulled us back together. \n\n\"So did I get the second question right?\" I asked. My arms were still around her and I felt weird just standing there holding onto a woman that I had only known for a few minutes. \n\n\"Nah ... Ya blew that one too,\" she said. The humor in her eyes and the love in that scratchy voice had me squirming. \n\n\"So why are you hugging me like this if I didn't pass the test?\" I asked. \n\n\"Robby, you have to stop looking at everything like it's a math problem,\" she said. \"Life ain't like math. Sometimes there's more than one right answer. Sometimes life just comes along and knees ya in the balls and fucks up all a yer plans.\" \n\n\"You know my name?\" I asked. \n\n\"Robert James Thompson,\" she said. \"Everybody in town knows your name. The guys in the plant think you're a good guy. They don't have much to say about the rest a your crew though. They call 'em a bunch a whiny little bitches that might someday come in and try ta fuck up the way they do things at the plant without actually knowin' what they do or how they do it.\" \n\n\"Huh?\" I said. \n\n\"They're Engineers,\" she said as if that explained everything. \"Engineers always think they know everything. Every time we get new engineers at the plant, they wanna come in and change everything around. They do it just ta show how God Damned smart they are and that their way is better. It usually isn't and things tend to go back to the way they was over time. But the engineers get their point across anyway.\" \n\n\"What's their point?\" I asked. She rolled those blue eyes like I was the dumbest kid in the class and then kissed me again before answering me. \n\n\"It's like dogs, Robby. There's always a battle for dominance. Engineers have to come in and show that they're in charge. It's just like those assholes ya came here with. They walk inta the plant like they own it and start telling people what they think before they even know what the hell is going on. They ain't even engineers yet, but they already try ta order everyone around. \n\nAnd outside of the plant it's worse. They act like their shit don't stink. They show up in the bars outside of town and act like the people there are supposed ta bow down to them. They go after every girl that ain't nailed down and some a the ones that are. But we got a way a handlin' them. \n\nInside a the plant, all a the guys pretty much ignore them. If they can't ignore them they just tell them that they have ta follow the chain of command. They have to go to their supervisor first and have him tell them ta do it otherwise they can't do it. Or they act like their machine is so loud that they can't hear them. My favorite one is when they tell them that their machine can't do what they want. They tell them that they need a metal stretcher or a fraction welding brake for that ...\" \n\n\"I've never heard of a metal stretcher,\" I said. \"Or a ...\" \n\n\"That's because there ain't no such thing,\" she laughed. \"But a guy who can't admit that he don't know everything can't ask what it is. They just go running around the plant asking where one is. And everybody there knows what's going on and points down to the other end of the plant, while laughing at them behind their back.\" She squeezed me even tighter as she laughed at the thought. \n\n\"And outside a the plant, we pretty much do the same stuff. We charge them fifty percent more for everything they buy and only the sluttiest girls in town have anything to do with them. Let's just say that more than one them guys will end up carrying a case back ta school with 'em. We got some downright skanky whores around here.\"\n\nIt suddenly hit me how stupid I'd been. I realized at once why a woman that looked the way she did wanted to have anything to do with me. I could already feel the crabs and probably fleas working their way through my clothes. \n\n\"Well thanks for the info,\" I said. I dropped my arms and tried to gently move away from her. She wouldn't let go of me. She looked confused. \n\n\"Ah ain't done with you yet,\" she said. \n\n\"Come on you've had your fun,\" I said. \"I get it. You're showing me how stupid you think I am by telling me what you're doing and I'm so dumb that I'm not supposed to realize that you're talking about me.\" \n\nShe looked at me strangely then. \n\n\"Go call your brothers,\" I said. \"After they beat me up I can get tested for STDs at the hospital while they fix me up.\" \n\nShe looked at me again and set her mouth. Then she punched me in the face. Her eyes had flashed that bright blue color again. ",
        "\"It was nice talking to you,\" I said. And turned to leave. \n\n\"It was at first,\" she said, \"it's just too bad that you're too stupid to know what's going on.\" \n\n\"I'm smart enough to know when someone is making fun of me though,\" I spat. \n\n\"Robby, no one is making fun of YOU,\" she said. \"It's the assholes you came here with that we were talkin' about. Then you called me a whore. I ain't a whore. I only been with a handful a guys in my whole life. I got five brothers. They don't let many guys near me. I thought you were somethin' special.\" \n\n\"Why?\" I asked. \"I got both of your questions wrong and you seem to enjoy pointing out how stupid I am.\" \n\n\"That's because you're so God Damned smart,\" she said. \"Who does math while they eat? Who does math when they don't have to? And you need to know that sometimes the answer is more than the answer and sometimes things just are what they are.\" She seemed extremely passionate about what she was saying. \n\n\"You saw mah name tag and you noticed that it said \"Sam,\" she said. \"You assumed that my full name was Samantha but my name is just Sam. My momma promised her brother that she'd name her next kid after him and with five boys in a row, it seemed like a sure bet that I was gonna be a boy too. My uncle Sam died two weeks before I was born and a promise is a promise.\" \n\nShe was getting herself even more worked up. \"What about your eyes?\" I asked. \"I just described them the way I saw them.\" She eased her way closer to me. Then she wrapped her arms back around me and sighed. \n\n\"I love the way you described mah eyes,\" she said. She sighed again and was almost purring. \"Mah brothers and the guys around here prefer light eyes on women,\" she said. \"I guess it's more exotic. All mah life I was told that mah eyes are shit kicker blue.\" I laughed so hard that it caused me to squeeze her. \n\n\"There's that hammer again,\" she giggled. \n\n\"What is shit kicker blue?\" I asked. \n\n\"Around here the best and the smartest guys work in the plant,\" she said. \"The next best guys work for the Sheriff or the town. The next best guys work in the stores or the gas station. Then there's the coal miners and the lowest on the totem pole are the farmers, also known as the shit kickers. They spend all a their time lookin' down at the ground and the plants, so when they do look up they're always amazed at how blue the sky is.\" \n\nI started laughing again and she snuggled even closer to me. \"But that ain't why I asked you that question,\" she said. \"I just wanted ta see if you felt the way about me that I feel about you.\" \n\n\"But how would you know that?\" I asked. \n\n\"Because if you really like me then you'd be staring at mah face,\" she said. \"If you didn't you'd a just been staring at mah titties. And Robby, you love me.\" \n\nIt was the silliest little thing. A name is a huge part of us. My Name is Robert. I have been called Robert, Rob, Bert, and even Just plain BOB. Mona called me Bobby and made me feel like I belonged to her. For the last eight months Bobby had been in a funk. Actually that was putting it mildly. Bobby had been on the verge of a clinical depression that made me withdraw into a shell. \n\nSam calling me Robby made me a new man. Changing one letter of my name made me hers and brought me out of my depression. \n\nWe spent most of that night talking. I told her about my life before meeting her. It was surprising but for the first time, I was able to talk about Mona without pain. It was as if Mona and all of my feelings for her had been put away like my Hotwheels cars. When I was a kid they were the most important things in my life. But I'm a grown up now. I want real cars. \n\n\"So all your life ya only had one girl and the bitch did that to ya?\" she smiled. I just nodded \n\n\"Serves ya right,\" she smiled. \"Ya shoulda waited for ME.\" My raised eyebrow made her laugh. \n\n\"What?\" she laughed. \n\n\"Then shouldn't you have been waiting for me too?\" I asked. \"What about your handful of guys.\" \n\n\"I'm twenny years old,\" she said. \"I've been on five dates in my whole life. One date each with five different guys. That includes tonight with you.\" \n\n\"This was a date?\" I asked. We were lying in soft grass under the summer sky. \n\n\"What'd ya think it was,\" she asked. \"Maybe you ain't been around too much.\" \n\nI rolled over and kissed her it started her to purring again. My hands gently rubbed her sides and she moaned. I moved on top of her and she wrapped her long legs around me. \n\n\"Robby, are ya sure you wanna do this?\" she asked. \n\n\"Very,\" I said. \n\n\"Okay,\" she smiled. \"I do too. I'm really sure.\" she started to unbutton her shirt. But I was curious about the tone in her voice. \n\n\"So weren't you sure the other times?\" I asked. All kinds of thoughts went through my mind. I saw huge mountain men forcing her against her will. And I imagined caveman like brutes dragging her into a barn by that long red hair. \n\nShe stopped unbuttoning and looked at me with those eyes flashing. I swear I could see them glowing in the dark. \"What other times?\" she asked. \n\nWe both sat up and looked at each other. \"You said you'd been with a handful of guys,\" I said. \n\n\"Yeah a handful,\" she said. She held up her hand. All four of her fingers squeezed together and then touched her thumb in an \"O\" shape. \n\n\"Sam, that's a zero,\" I said. \n\n\"Damn, you're good at math,\" she quipped. \n\n\"But a handful is like four or five,\" I said. \n\n\"I told you I'm not a whore,\" she said. \"Don't you know what this means?\" \n\n\"Sam, just to be clear,\" I said. \"What is a whore around here?\" \n\n\"The same as it is everywhere else,\" she said angrily. \"A woman who fucks a guy she ain't married to. Ya got some crazy ideas in the city. That's why I asked you if you was sure. Cause if we do it, we're married. I don't think you would, but if ya tried to run out on me, my brothers would track you down and ...\" \n\nOur mouths pushing together cut her off in mid sentence. \n\n* * * * * *\n\nMona\n\nMy life had been spinning out of control since the day that Bobby left to go to work. Logically, I know that it was necessary for our future. We had discussed it for weeks and I hadn't seen any problems with it. I realized that it wouldn't be a picnic for either one of us. I also realized that being in the arctic and working his ass off under dangerous conditions meant that it would be worse for Bobby. And I knew that while he was going through all of that, he would miss me as much as I missed him. \n\nBut when it actually came down to it, I couldn't handle it. What can I say? I'm a human being. I'm not perfect. I make mistakes and maybe I just love Bobby too much to be separated from him. Maybe I'm weak and succumbed to the loneliness far easier than I ever thought I would. \n\nAnd what I did has absolutely nothing to do with my love for Bobby. It was all about me being a human woman and needing companionship or just the touch of another human being. \n\nBobby was never supposed to find out about it. And to this day he never has. But now in an attempt to get him back I need to tell him that I'm not angry about what he did and that I understand it all too well. \n\nI really believe that the reason Bobby left me is because he was human too. I spent weeks crying over Bobby and believing he was dead only to get divorce papers from him through some skanky lawyer. \n\nI refused to sign the divorce papers. I needed to talk to Bobby. There was so much that I needed to tell him. The lawyer explained to me that Bobby was going through some things and that refusing him the divorce would only make him angrier at me. \n\nI was sure that I could fix things between us, if only I had the chance. The lawyer in his two thousand dollar suit explained to me that Bobby really didn't need me to sign the papers. The only difference it made was time. We literally had nothing and Bobby had given it all to me. Instead of half of nothing, I got all of nothing. \n\nFinally he offered me a letter from Bobby if I signed the papers. Thinking that I couldn't do any better I agreed. I signed the papers to make Bobby happy. The lawyer had already explained that even if I didn't sign them. Bobby would get his divorce. It would just take an extra six months or so. \n\nThe letter from Bobby was very short and it made me cry. I spent several months going over it and looking at it in different ways. Bobby claimed that he had found someone else and that he didn't love me anymore. \n\nI knew it was bullshit. What Bobby was feeling was guilt. I was feeling it too. I think that Bobby was having problems admitting that he had been human and lonely and had sex with another woman and couldn't bring himself to tell me. I wish that I could tell him that I understood it because I had done the same thing. \n\nIf anything my guilt was far worse than his. I had made an even bigger mistake. I had somehow let that asshole Sam get me pregnant. When Bobby came back, I was sure that if we could only sit down together we could work things out. Sure there would be a lot of anger and yelling but we had both done the same thing. It might take us a while but we would eventually get things back on track. We belonged together. \n\nAs the summer stretched on and with it my belly, my life went even further down the tubes. I had to get a job, just so I could keep the apartment. I had given some thought to moving back in with my parents but I loved that little place. Besides, it's where Bobby would look for me once he got his head out of his ass and came home. \n\nAs the months marched on, I started seeing Sam again. Well seeing him wasn't exactly true. I was so lonely that I started saying yes when he asked to come over and fuck me. \n\nThis time things were worse. I couldn't even enjoy the sex. They say that pregnant women are supposed to be horny all the time. I wasn't, I just put up with it to fight the loneliness. \n\nJust before I had my son, I ran into one of Bobby's classmates. I asked him if he'd seen Bobby. \n\n\"I spent half of the summer in West Virginia with him,\" he told me. \"He's miserable, but he doesn't know it.\" \n\n\"What about his new girlfriend?\" I asked. He looked at me like I was crazy. \"What girlfriend?\" He gushed. \n\n\"Look, I'm gonna tell you the truth Mona. You and Bobby breaking up hurt him pretty bad. There was a lot of partying going on there but Bobby didn't do any of it. He worked 6 days a week and studied on Sunday. I never saw him so much as talk to a girl. I had to leave during the midsummer break ... I picked up a disease from one of the uhm ... Places I ate while I was there. But trust me, when I left he was still mooning over you.\" \n\nThat only made me even more confused and even guiltier about everything I had done. And then the bottom dropped out and I hit rock bottom. \n\nSam had lost his job and been thrown out of his apartment. He ended up moving in with me. I had no choice as he put it. I couldn't put the man who kept me from being lonely and my first love out on the street. \n\nMy parents helped me out for a while after I had Joey. Sam also gave me part of his unemployment checks until I could go back to my job at McDonald's.\n\nThe weeks turned into months that slowly became years. Over time I became a bitter woman. My life sucked, I hated my job and I was sure there was something wrong with my kid. \n\nI ate all of the wrong foods and I was beginning to look more like my mom than I did me. For some reason Sam and I were still living together, but it was a pathetic existence at best. We no longer even gave each other the occasional mercy fuck. \n\nHe was a terrible father and an even worse roommate. After his unemployment ran out he had nothing to contribute to the household except for his presence. As shitty a human being as he was, having him around was better than being alone. I didn't even care that he went out every night to find other women to fuck.\n\nThe one thing I had left was my fantasy about how my life was supposed to have been. I still thought about Bobby occasionally and the life we planned to have. I often wondered what had become of the only man I had ever loved. \n\nI didn't have much time to wonder though because my life was a busy one. I worked more than 60 hours a week, every week. I typically worked 12 hours a day from 6am to 6pm and then mercifully short 6 hour shifts on both Saturday and Sunday. \n\nThe thing I hated the most all of the time away from Joey. I didn't like leaving my impressionable son with Sam but I had no other choice. Usually as soon as I got in, Sam went out. By the time he came back in it was usually early in the morning the next day. \n\nOur arguments had become more and more bitter over the years and with Joey in school I began to wonder why I needed Sam. He made it seem like he was the one sacrificing for us. \n\n\"If you want to make a real sacrifice, try getting a job and bringing some money in,\" I spat at him one evening. \n\nI didn't see him for three days. With no childcare arrangements made before hand, I ended up missing two out of the three days at work. It was money that affected us greatly. On one hand we were barely making it as it was and on the other I got lucky. Things didn't go smoothly at work with my absence. That was one of my greatest fears. I was very sure that my boss would notice that they really could run the restaurant without me and reduce my hours. \n\nWhen Sam wandered back in, I was so glad to see him that I didn't say a word. It was over a week before I was confident enough to bring it up. \n\n\"We need each other,\" he said. \"Maybe I'm not bringing any money in, but I'm saving you much more than the beer money you give me. Imagine how bad things would go if I was gone for a week. And watching your kid is not as easy as you think it is.\"\n\nI had priced daycare in our area. I had looked into both stand alone facilities and in-home care, but either would cost nearly half of my take home pay. I was stuck. And as time went on, it began to seem more and more likely that Sam would one day just walk out on us. I had begun drinking myself in the evenings when I got home. \n\nIt started out as just one drink to take the edge off and let me relax after Joey went to sleep. But lately I had been drinking myself to sleep. I always dreamed the same thing. I dreamed that Bobby would show up and we'd get back together. He would take one look at Joey and see the similarities between them. He'd kick Sam's ass and move us into his house that looked exactly like the one we had always dreamed of having. \n\nAfter a few weeks he would tell me that he didn't want me busting my ass every day at McDonald's any more. And even more importantly he'd be busting my ass or at least my pussy every night in our bed. \n\nThat was my dream. And on some nights I could drink enough to make it seem real. Joey was six when it changed and a bright spot shone into the drudgery that I called life. \n\nIt was a Saturday and I was working as usual. Sam had the flu and it was really bad. I had done something that I hated doing but had done a couple of times. I had taken Joey to work with me. For most of the morning, he'd sat quietly in a booth beside the counter coloring and looking at his picture books.\n\nAt about eleven a.m. I took a phone call that really pissed me off. Someone in the restaurant had taken a party reservation that I knew nothing about. From time to time we had people who reserved a section of the restaurant for parties for their kids. I knew nothing about the party. \n\nI checked our reservation book and saw that the party was listed there but that no one had put it on our calendar. \n\nI recognized the handwriting immediately, but I asked the woman on the phone if she knew who had taken her reservation. \n\n\"He said his name was Alvin,\" she said. I got pissed. But in reality there was nothing I could do about it. Alvin was the owner's nephew. I called him at home and reminded him about the party. \n\n\"Mona, I can't do the party,\" he whined. \"I have stuff to do today. Can't you do it for me?\" \n\n\"No, Alvin, I can't,\" I told him. \"Sam is at home sick and I brought Joey to work with me. You booked it. So you work it.\" \n\nTen minutes later, I got another phone call. It was my boss. \"Mona, I got a call from Alvin. He explained the situation and I had to make a hard decision. I know Alvin is my nephew, but he's been trading on that for too long. I backed you up and told him that if he booked the party and didn't let anyone know or ask someone else to work it, he had to work it.\"\n\nI was really happy. My boss really had stepped up for me. \"Unfortunately,\" he continued. \"You know what it's like working with twenty year olds. They don't share the work ethic that old dogs like us have ...\" I was only twenty eight myself, I thought. \n\n\"Alvin has some kind of video game release thingy going on today and apparently it's more important than his job,\" he said. \"He's going to stand in line outside of the Best Buy store in Madison Heights, waiting for the new Balls of Duty game to go on sale in a couple of days. He can't miss that so he quit.\" \n\nI realized then that I was screwed. Alvin would probably be rehired in a week or two and if he ever took over the restaurant for his uncle he would fire me in a heartbeat. I knew what was coming next. \n\n\"Mona, you're going to have to stay and work the party,\" he said softly. \n\n\"I've got it,\" I said sadly. \n\nI hated working parties for kids. Most of the parents, who could afford to reserve a section at a restaurant, spoiled the shit out of their kids. A reserved party was different from just a party. In a regular party, the kids just sat wherever there was seating available. The kids in the party might be at a table next to a bunch of old people. All the parents did was paid for the food. A reserved party was different. The parents basically rented a section of the restaurant. No one else could use that part of the restaurant. \n\nThis seemed to be a relatively large scale event. Our restaurant was one of the older ones with a built in play area. The play area had a ball pit and a huge slide. There were games and a lot of other things for kids to do. And naturally the party was supposed to start at one o' clock, an hour after I was supposed to be done working. \n\nI hated the thought of making my son stay there even longer, just so I could cater to a bunch of spoiled, rich kids. Even worse was the fact that we had a couple of call-ins, so I wouldn't be able to pull anyone off of the line or the registers to help me with the party. I was on my own. \n\nShe pulled up at about twelve fifteen. The boy working the first register stopped talking in mid-sentence as she walked in. I had my back to him and it was his words and his actions that caused me to turn around. \n\nShe had just gotten out of her SUV and was walking towards the door. Both of her arms were full with a huge sheet cake. \n\nI hadn't noticed her. But I heard Mark talking to a customer. \"Welcome to Mc ...Holy Shit!\" he said and then he slid over the counter to run and open the door for her, leaving the customer at the counter wondering what the hell had happened. As soon as he saw her, he went to help her too. \n\nMy first reaction was not a good one. As I looked at her incredibly long red hair and the clothes she was wearing, I knew that I was dealing with one of those entitled Bitches who thought her shit didn't smell unpleasant, like alone stink. \n\nI tried to swallow some of my instant hatred for her under the guise of professionalism. She said, \"Hi,\" to me and genuinely seemed to mean it. She had actually gotten to the restaurant early enough that I could make preparation for the cake and everything else before the guests got there. Usually the parents got there just as the party was supposed to start. She'd even brought her own name tags and place cards. She had also made a list of which foods every child attending wanted to eat. That saved me a lot of time because it meant that I could pre-order a lot of the food. She also asked me to cut the portion size of our orders in half. ",
        "After only a few moments of talking to her, I had to admit that I liked her. It wasn't her fault that she'd been born looking like that. \n\nWhen she returned to her Escalade she brought the two most adorable little girls imaginable with her. When I saw those little girls, I almost cried because they were so sweet. \n\nIt was hard to imagine that the woman standing before me had born not one but two children. She was still as thin as a reed, with long legs, a heart shaped butt and very generous boobs for her frame. \n\nI was floored when she told me that she didn't have two kids, she had three, but the youngest, a two year old was not only too small to run around at a party for five year olds, but had refused to leave her daddy. \n\nThat part ripped my guts out, for some reason. I just stared at her wondering how she got her body to snap back like that after having her kids. She was a few years younger than me, but looked much younger.\n\n\"Yeah, ah know,\" she smiled. \"Ah'm a regular baby machine. But he keeps pumpin' em into me and I keep carryin' em. I think we're gonna try at least one more time for a boy.\"\n\n\"My God,\" I said. \"That must be awful.\" She started laughing and the sound of her laughter and her scratchy voice went all over the restaurant just as the kids for her party started to arrive. \n\n\"It's heaven,\" she said. \"I love my husband more than I love breathing. And I always wanted a house full of kids. I grew up in a tiny house with five brothers. Our house only had one bathroom and two bedrooms. Even after mah parents died there just nevah seemed to be much room.\"\n\nShe smiled. \"Now mah house is probably three times that size but there still ain't room ta swing a dead cat. The difference is that there's a whole lot more love there. There's so much love in that house that it fills it up to the walls. \n\n\"Every time we try ta sit down, there's a little girl huggin' us and sitting between us,\" she smiled. \"Especially Bobbie. That little girl is two years old and already has her daddy wrapped around her little finger.\"\n\nOver the next few moments it became apparent that her daughter was very popular already. There had to be at least fifty kids there already. At first I'd thought that the huge cake would be so big that she'd take some home with her. Suddenly I began to wonder if there would be enough. \n\nThere were kids everywhere. The play area was full. And I had very little time to do anything. I checked the restaurant looking for someone who wasn't busy that I could get to put the drinks on the tables. I really wanted someone to watch the play area too. The kids were small but they still needed to be watched. \n\nThat was when she surprised me. She looked around in the way that only a mother can. She pulled out an iPhone and made a call. \"Holly, I need you in here,\" she said. \"And bring the other cake.\" \n\nThe shiny black paint on her Escalade sparkled as the door opened and a chunky teenage girl got out carrying a second but smaller sheet cake and came into the restaurant. \n\n\"Holly, can ya watch the kids in the play thingy,\" she said. I had wondered how a woman who seemed to be such a good mother could have left her kids in the car when she first brought the cake in. Now I saw that she hadn't. She apparently had her baby sitter with her. Holly took over the play area organizing the kids into teams for games and the party went into full swing. \n\nShe then picked up a tray full of cups and went from table to table placing them. To say I was floored was an understatement. Parents always figured that all they needed to do was pay for a party and their responsibilities ended. \n\nHer help made what would have been a daunting task almost fun. She kept asking me what she could do to help. But if there was one thing she did that afternoon that made an impression on me it was when she went out into the restaurant and came back with my son Joey. \n\nJoey had been taught from birth not to even talk to strangers. But somehow, showing that her charm wasn't only effective on fully grown men, she got him to not only talk to her but to leave his booth with her. \n\n\"Mona,\" she said, reading my name tag. \"Is it okay if this young man comes to the party?\" \n\nThat whole afternoon had been a strange one for me. By then I was having trouble believing that I hadn't wanted to work the party. \n\nMy son was usually kind of shy and reserved. But there was so much going on that he'd noticed and wanted to be a part of it. I was still kind of leery. Joey didn't have many friends and he wasn't a very sociable child.\n\nShe took care of that. She crooked her finger and the birthday girl came right over. \n\n\"Angie, this is Joey,\" she said. \"Introduce him to your friends.\" \n\nThe little girl showed then that the apple didn't fall far from the tree. \"Hi, my name is Angela,\" she said. \"It's my birthday. Thank you for coming to my party.\" \n\nThe little girl seemed to really appreciate Joey wanting to be there. Like her mother, she seemed really genuine and my insulated son even felt it. \n\n\"Sorry, I didn't bring you a present,\" he said. That little girl surprised me even more then. She laughed. The little bitch was laughing at my son. \n\n\"I have plenty of STUFF,\" she said. \"I don't need more presents. But you can never have enough friends. And new friends are the best of all. Come on we're playing games. Do you like games?\" He nodded like his head would fall off. \"Later you can cut your own piece of cake,\" the little charmer told him. \"You can cut the biggest piece in the whole wide world.\"\n\nI felt so bad about my anger and misjudging the little girl that I almost cried. \n\nBy the end of the party, Joey had a lot of new friends and my opinion on spoiled little kids had been rewritten. I also had a new friend. \n\nThe party itself had been very successful. As I watched a lot of exhausted kids including my own son walked away, so exhausted from all of the fun they'd had that they could barely hang onto to the bags of goodies that they'd been given. \n\nI was very surprised when my new friend Sam, introduced me to several parents who wanted parties for their own kids in the upcoming months of the summer. \n\nI was even more surprised when Angela, yawning herself walked over and asked if Joey could go to the zoo the following day with her and her sister. \n\nThe party had been a pleasant event for the kids, but I hadn't expected for anything beyond the party to happen. \n\nBut Angela was adamant. She genuinely wanted my son to accompany them. \"He's smart and he knows a lot of stuff about animals,\" she said. \"He read a lot of books like Daddy does. Please can he come?\" \n\nI needed to get away from those people. They were too damned nice. \n\nI had been so worried about my son, ever fitting in and now that he'd found people he did fit in with, I would be the one to disappoint him because there was no way I had enough money to take him to the zoo with them.\n\n\"Honey, I would love to bring him,\" I said. \"But I'm kind of in charge of this restaurant and I have to work tomorrow.\"\n\n\"But Joey knows stuff about animals,\" she said. \"My mommy just reads the signs that say what the animal is. And most of the time she just talks to my daddy on her phone. Even though she's gonna see him as soon as he gets home from his meeting. Then they're gonna kiss and stuff like they haven't seen each other in years.\" \n\nSam was turning redder by the second. \"Mona, why don't you bring him to work with you again,\" she said. \"The girls and I will come by here at ten o clock and pick him up. It will be our treat in exchange for his knowledge about animals.\" I reluctantly agreed, unable to disappoint the pleading faces and out stuck lips of Angela, her younger sister Kimmie, my own son, Joey and Sam herself. \n\n\"Okay,\" I heard myself say and felt so much better when the frowns on front of me turned to smiles.\n\nI took Joey home and for once had no problems getting him into bed. One day had made a huge difference in my son. He had packed his book bag full of animal books that he couldn't really read, being only six, but I had read them to him so many times that he knew most of what was in them by heart. All he had to do was see a picture and he could pretty much spout what was on the page verbatim. \n\nSam was sitting up on the couch watching our ancient television set when we got home. He coughed a few times and I ignored him. \"Sorry, I couldn't watch the kid today,\" he said. \"I slept all day, but I feel better.\" \n\nI barely paid him any attention. I was too busy wondering about my new friend. Sam was an unusual name for a woman. Especially when it wasn't a nick name or short for something else. \n\nThat night for the first time in a long time, I didn't feel like I needed a drink after work. I even turned my Sam down when he offered to fetch me one. \n\nMy Sam. That was a fucking joke. He had never been mine. Even after all of these years together, we had never gotten married. He wasn't the marriage type and I felt as if I was still married to Bobby. Sam was sucking the life out of me though and someday I was going to have to do something about it. \n\nI mean, even if a miracle did happen and Bobby came back for me, having Sam around wouldn't be a good thing. And it would be just as bad if I met someone else. \n\nSam and I still had our arguments. I think that he thought that he deserved to have me supporting him because in his mind, the two of us having sex had cost him the chance to marry his fianc\u00e9, the doctor. \n\nHe also enjoyed pointing out the fact that as much as I had idolized my husband, Bobby had proven to even more unreliable than Sam was. At least Sam had stuck around. Bobby, he pointed out to me had simply bolted when he got tired of me. \n\n\"Sure, I go out and fuck other women,\" he said. \"But I always come home to you, Mona.\" \n\nI had to give him at least partial credit for that. And he was right. Bobby HAD in fact run out on me. Whether it was for another woman as he claimed, which had proven not to be true ... Or if it was because he simply wanted to be single so he could travel the world solving all kinds of problems for the oil company, Bobby had deserted me. He had abandoned me and betrayed me in the worst way possible. \n\nI know that most women would consider cheating on them to be the worst way possible, but they're wrong. If Bobby had gone after another woman that would be something I could compete against. Bobby loved me too much for any woman to be able to offer him something I couldn't match. \n\nBut it's too God Damned hard to compete against a job and a lifestyle. I really should have seen it coming. Even when we were young, Bobby just loved fixing things. There were days when we spent the entire day at some old lady's house so Bobby could fix her fence or her lawnmower. \n\nAnd when he got the chance to travel to all of those places with the oil company, I should have seen the stars in his eyes. It was the old days all over again. But instead of going all over our neighborhood fixing things, the oil company was sending him all over the God Damned planet. I couldn't compete with that. No woman could. It was too fucking big. \n\nBut just like when we were younger, after everything was fixed or Bobby got tired, he always reached for me when he was ready to settle down and relax. And that was what I was hoping would happen in our lives. Sooner or later Bobby would have seen enough and fixed enough. Sooner or later he would be ready for a home and a family. And when he was we'd have our talk. \n\nWhen Bobby's friend told me that Bobby had lied to me about having another woman, I had breathed a sigh of relief. Knowing Bobby the way I did told me exactly why he had lied. He was trying to piss me off. Of course that made what I had done even worse. I almost wished that he had found another woman. If we had both done it, we'd have been even and getting back together would have been easier. But I knew deep down in my heart that I would see Bobby again. \n\nTo be truthful, Sunday started out boring. It was the same old thing. We sold breakfast until eleven and then switched over. Of course we still sold breakfast items the rest of the day too, but since we needed all of the grill space for the burgers and fries, anyone who ordered breakfast items had to wait for them. \n\nMost of the time, my mind was on Joey. Unbelievably, this was his first time being away from me except for hen he stayed home while I was at work. Even when I took him to visit his grandparents, I was there. \n\nOne of the things that I had forgotten to find out, in my haste, was what time they would be back from the zoo. When I got done working at noon, I still hadn't heard from them. I called Sam. \n\n\"Sam are you guys okay,\" I asked. \"Hey I didn't hear a dial tone. Were you already on your phone?\" \n\n\"Uhm ... Maybe?\" she said. I laughed remembering what her daughter had said about her the day before. \n\n\"How are the kids?\" I asked. \n\n\"I'm sitting at a table while they're watching the seals. Your son is so cute,\" she gushed. \"Every exhibit we go to, Joey whips out a book and then starts spouting animal facts. Half of the parents we run into are listening to him,\" she said. \n\n\"Uhm ... I'm done working for the day. So uhm ...\" I began.\n\n\"Jeezus, Mona, relax,\" she said. \"Let him enjoy himself. I promise to take care of him as if he was one a mah own. That gives you three choices. Number one I'll bring him to the restaurant right now if you want. But you'll have three disappointed little kids on your hands. Number two you can come out here and join us. Or number three... you can go home and have some relaxation time to yourself for a while and I'll bring him home when we're ready to leave.\"\n\n\"Number three please,\" I said. Somehow hearing that scratchy voice with her slightly country accent had calmed down my fears. That and the fact that I could hear Joey in the background talking excitedly about seals and sea lions. There was a joy in my son's voice that I couldn't take away from him. \n\nI went home and did something I rarely found the time to do. I took a long relaxing bath and read my own book while I languished in the tub. \n\n\"What were you doing in there?\" asked Sam. He hadn't shaved yet and was holding a can of beer. As I looked at him, I wondered what I had ever seen in him. Then I remembered that having him was slightly better than being alone, but only by the tiniest of margins. \n\nAs if he could read my thoughts, he quickly spoke up. \"Where's the kid?\" he asked. He never called him by name. It was always \"YOUR kid,\" or when he was worried that I might throw him out, \"THE kid.\"\n\n\"He went to the zoo with our new friends,\" I said. \n\n\"Do we really have enough money for that?\" he asked. I knew that more than anything else he was worried about his allowance. \n\n\"Your money for beer and whores is secure,\" I said. \"Sam is paying for it.\" \n\n\"Who the fuck is Sam?\" he asked. \"Do I know this guy?\" I started laughing. When I considered how pathetic I was, I laughed even more. \n\n\"What's so damned funny?\" he asked angrily. \"Are you replacing me? Because nobody else will put up with your shit for very long you know? No other guy is going to put up with you moping year after fucking year over a guy who left you high and dry for no reason. And your kid is weird. No man is going to want to be around a kid like that. I can get someone else you know. Just like your fucking Bobby did. I can find me another woman. And at least you could have found a guy with a different name. It just makes you even more desperate. You picked a guy with my same name.\" He paused for a second and then smiled. \"If there is a Sam,\" he smirked. \n\nI laughed even harder. \"Of course there's a Sam,\" I laughed. \"It almost sounds like you're jealous. Sam is a woman. She has three kids and she has enough money to easily pay for a trip to the zoo.\" \n\n\"Oh shit,\" he spat. \"I don't want to meet her. She's had three rug rats? Her pussy has to be stretched out so far you could shoot a basketball in there and not touch the sides.\" \n\nI laughed then. \"Don't encourage too many of these trips, Mona,\" he said. \"Sooner or later she's going expect for you to start paying for them too.\" \n\n\"Sam, when you start making the money, you can start telling me how to spend it,\" I said. His hurt look brought joy to my heart.\n\nI went out onto my balcony with a single glass of wine and that book. I sat back in a comfortable chair and enjoyed the sunlight and a small breeze as I relaxed and read my book. I couldn't remember the last time I'd been able to relax and just be. \n\nBefore I knew it three hours had passed and my phone suddenly rang. \n\n\"I think we're in trouble,\" said Sam over the phone. \n\n\"Is Joey alright?\" I asked tersely. My voice was far more shrill than I had intended. \n\n\"Of course he's alright,\" cracked Sam. \"I told you I would treat him like one of mah own. We're on our way up. I'll see ya in a few minutes.\" \n\n\"Don't you need my address?\" I asked. \n\n\"Mona, Joey is six and smart as a whip,\" she said. \"He knows his address. I just punched it into mah GPS and ... Well ... You'll see. Open up the door for us we're down in the lobby.\" \n\nI went over to the door and hit the buzzer to let them come up. A few minutes later I could hear the pitter-patter of six tiny little feet running down our hallway excitedly yelling at each other. \n\nI opened the door to find three heavily breathing little kids, all holding some sort of zoo souvenir. Joey was holding a stuffed monkey, which surprised me because it wasn't something I would have expected him to want. \n\nI looked around and didn't see Sam anywhere. A few moments after the three kids had come into the apartment and sprawled on my aging carpeting, I heard her coming down the hall. \n\nI saw the hair first. She was walking down the hall in tiny white tennis shoes and jeans that seemed to be molded to her sculptured legs. She wore a dark blue T-shirt with a car of some sort on it. I didn't recognize the car itself, but the Mustang emblem on it was familiar. Bobby had always wanted a Mustang.\n\nThen I saw the large flat box in her hands. She looked at me skeptically and came inside. Again she surprised me. Her eyes got huge and she crossed the living room to my balcony. She looked at me with huge eyes and asked, \"Can Ah go out there?\"\n\n\"Of course you can,\" I smiled. She went out and stepped onto the balcony. She sat down in the chair next to mine and actually took a sip of my wine. She gestured for me to join her and opened the pizza box. \n\nAs soon as the lid opened, three little voices screamed, \"Pizza,\" and headed for the box.\n\nAs well mannered as they were I had expected that maybe Sam's girls would be a little bit snooty. I was wrong again. They asked for a slice and when Sam told them it was okay they took them right out of the box and ate them. Joey did as they did, although to my knowledge he'd never had pizza before. \n\n\"I thought you'd be a bit upset about me bringing the competition's food,\" she smirked as I bit into my own slice. \n\n\"Shut up, Sam,\" I laughed. \n\n\"This is awesome,\" she said. \"We're so high up.\" \n\n\"Sam, this is only the fourth floor,\" I laughed. \n\n\"I'm skeered a heights,\" she whispered. We were having a great time just talking. It was something else that I hadn't done in years. The kids were stretched out on the rug looking at one of Joey's books. \n\n\"Why'd he want the monkey?\" I asked. \n\n\"The monkey isn't his,\" she laughed. \"He won it for you at one of the games. He got a book about the zoo and quickly put it in his book bag with all of the other ones. He won me a lion.\"\n\n\"How come you get the lion?\" I laughed.\n\n\"Cuz I was there,\" she smirked. We talked about everything under the sun, including some things that might've offended some people. \"Why aren't you snooty?\" I asked her. ",
        "\"You forgot about the part where I grew up in a tiny house with five brothers didn't ya,\" she laughed. \"When Rob found me, ah was a waitress in a tiny diner with terrible food.\" \n\n\"You were a waitress?\" I laughed. She nodded and took another sip of my wine. \n\n\"And we've been togethah evah since,\" she said. When she said it, I noticed a glow come over her face. \n\n\"So how long did you guys date before you got married?\" I asked. She looked at me and just laughed.\n\n\"We didn't date,\" she said. And she started laughing again. \"From the time he walked into the diner, I knew he was mine. That's one a the things I love so much about your son. He reminds me so much of Rob. You gotta remember this was a coal mining town with one factory in it. I had been hearing about him for a while, but when I first saw him, mah heart just went ta flutterin' and I just knew.\"\n\nIt was the weirdest thing but I could see how she'd had so many kids. Just talking about her husband had her nipples sticking up like two erasers. \n\n\"So, okay you didn't actually date,\" I said taking my own sip of the wine we were sharing. \"Remember the guy I told you about my ex husband, he was so shy that it took him months to even ask me out. I gave him every possible sign that I was interested. I met him in a restaurant too. I gave him my phone number on a napkin. I even followed him around the neighborhood while he fixed things for old people and held his tools. How long was it before he let you know that he liked you.\" \n\n\"I told you, Mona,\" she laughed again. \"We just knew. The first thing he said to me was how pretty he thought I was. I had ta trick him inta staying until ah got done workin' ... Ah told him that ah was upset and my brothers was gonna beat him up.\" \n\n\"And he didn't leave?\" I asked, beginning to laugh myself. \n\n\"Nah, he told me that ah was so pretty, it was worth gettin' a ass beatin' just ta look at me,\" she said.\n\n\"Oh my God,\" I said. \"What happened then?\" \n\n\"We talked for a little while and then he fucked me,\" she said. \"He got my cherry right there on that soft grass.\" I almost went into shock when she said that. \n\n\"Wait a minute ... You had sex with him the first day that you met him?\" I asked. \n\n\"A course ah did,\" she laughed. \"Ah already told Ya, we both knew it from the time we met.\" \n\n\"That's what I like. A woman who knows what she wants and goes after it,\" said a voice behind us. \n\nI turned and saw Sam standing behind us. He was so excited he could barely stand still. His eyes were huge and he was looking at her with unrestrained lust written all over his face. \n\nHe walked over to us and I felt weird. I felt as if I should protect Sam. I knew how charming Sam thought he could be and she probably had never run into anyone as sneaky as he was. \n\n\"Mona, I think the kid is about to fall asleep,\" he said. \"There are two little girls already curled up on the sofa.\"\n\n\"Okay,\" I said. \"Sam, let me put Joey in bed, then I'll help you carry the girls down to your SUV.\"\n\n\"I could help her,\" said Sam. I had never seen him volunteer for anything. \n\n\"We'll do it my way,\" I insisted. \n\n\"Okay,\" he smirked.\n\n\"We were never introduced,\" I heard him say to her as I walked away. I knew I had to hurry, so the sooner I got Joey into his bed, the sooner I could get back. I swear I tried, but I wasn't fast enough. Before I could get Joey laid down on his bed I heard Sam screaming. \n\nI ran back into the living room and saw Sam screaming and writhing on the floor. Meanwhile, Sam was sitting calmly in her chair sipping our wine. I just looked at her. She didn't even crack a smile. \n\n\"She cut me,\" screamed Sam. \"That bitch cut my balls. I want her out of here now.\" \n\n\"Ah warned him,\" said Sam calmly. \"He was lean in' all ovah me. And he was staring at places he shouldn't a been staring at. Ah told him Ah wasn't no whore. And then he put his hand on my shoulder so Ah warned him again.\" \n\n\"I was just trying to be friendly ... You bitch,\" yelled Sam. \n\n\"You was tryin' ta be too friendly,\" said Sam. \"He slid his hand down from mah shoulder and tried ta touch mah titty, so he got what he deserved.\" \n\n\"What did you do?\" I asked. \n\n\"Ah just nicked him a bit ta git him ta back off,\" she smiled. \"Maybe next time he'll keep his hands ta his-self.\" \n\nFaster than I would have believed possible, Sam's hand moved and I heard a click. There was a long slim wicked looking switchblade clutched in her tiny fist. \n\n\"Ah just gave him a warnin' cut,\" she said. \"It wasn't near no veins and I did not touch his balls. Not that I would with a twelve foot diseased pole. It wasn't even a deep cut. He's just a big ole sissy.\" \n\nI couldn't help it, I just started laughing. I picked up Kimmie from the couch, while Sam got Angela.\n\nWe carried the girls down to her SUV. I was astounded by how big the thing was and how shiny. We put her girls in their car seats and I noticed that she had a third car seat between them for Joey. I could tell she'd put it back there for him because it was much too big for her other daughter who was a two year old. Joey didn't have a car seat of his own in my car. Once he grown out of the baby seat I just tightened up one of the seat belts in the back for him. \n\n\"Sorry about your husband,\" she said. \n\n\"We aren't married,\" I laughed. \"Like you said he got what he deserved.\" \n\n\"We were havin' a good time too,\" she spat. \"Next time we'll do it at mah place. But Ah ain't got a balcony.\" \n\nI was still laughing when I got back up to my apartment. Sam had taken off his pants and was holding a rag over his inner thigh to stop the bleeding. \n\n\"She cut me,\" he repeated. \"Why did she cut me?\" He looked at me as if he expected me to answer him. \n\n\"She told you she wasn't no whore,\" I laughed, mimicking her accent and delivery if not the tone of her voice. \n\n\"But it was just some harmless flirting,\" he said. \"It didn't mean anything. I used to do the same thing with you.\" \n\n\"She's from a small town in the mountains of West Virginia, Sam. She thinks any woman who has any kind of sex with a man she's not married to is a whore. And she is fanatical about her husband and her kids. You're lucky, she likes that knife. She told me that she knew how to get blood off of the blade but she wasn't sure that she could get syphilis out of the steel so she didn't go anywhere near your balls,\" I said. \n\n\"That bitch is crazy,\" he said. \n\n\"Sam, tell me the truth,\" I told him. \"Did you really try to grab her breast?\" \n\n\"I couldn't help it,\" he yelled. \"They're not the biggest tits I've ever seen but they're pretty big on that tiny frame of hers. And her nipples were sticking out like little beer cans. She wanted me. But she's playing some weird assed game. That bitch is hot. I couldn't resist her.\" \n\n\"She got hot talking about her husband, Dumbass. She worships the ground the guy walks on. She didn't even know you were there. You're not as God Damned charming as you think you are. I can't believe you tried to pull that shit right here in MY apartment. With MY son in the next room. What the fuck is wrong with you, Sam? Shit, the real question is what the fuck is wrong with me that I put up with it?\" \n\n\"Come on Mona,\" he said. \"You know how the game works. This is how we've always been. You know that I've always had more than just you. She's the weird one. We were fucking back when you were engage to that asshole that dumped you and ran off. We were fucking when I was engaged to that lesbian. We're lucky to have had each other when the losers we were with ran off.\" He walked over to me still holding the rag on his thigh. \n\n\"Mona, I want you to stay away from that miserable cunt,\" he said. \"It's probably all of those hormones in her from having all of those Damned kids.\"\n\n\"Sam, how long has it been since I had a real friend?\" I asked. \"I like her.\" \n\n\"You barely know her,\" he said. \"And listen to me, Mona, I'm telling you this for your own good. Rich women are crazy and that bitch has some money. Did you see that truck she's driving? Did you even notice the shirt?\" \n\n\"What about it?\" I asked.\n\n\"Her shirt said, \"My husband drives a Shelby GT350.\"\n\n\"Big deal,\" I said. \"So he's got a car. In the words of Shania Twain, \"that don't impress me much.\" \n\n\"That's because you're a moron, Mona,\" he spat angrily. \"That car isn't even available yet and he has one. That takes some serious juice.\"\n\n\"Maybe he doesn't have one,\" I said. \"Maybe she just has the shirt.\" \n\n\"Oh he has one,\"he said. \"That's what we were talking about while I ...\" \n\n\"While you tried to cop a feel,\" I hissed.\n\n\"Mona, get over it,\" he said. \"If you had titties like those, I'd be all over you too. Any guy would be. Besides, your little friendship is doomed. I'm just trying to spare you some pain.\" \n\n\"How?\" I asked. \n\n\"If your crazy friend hates whores so much, how is she going to react when she finds out what a whore you are? Think about it. While you were engaged to the man of your dreams you were actively fucking another man who was also engaged to someone else. By her definition that makes you a double secret negative whore at the very least,\" he said.\n\nI ended up having to give him money to take a taxi to the emergency room. The cut in his leg was less than an inch across but it turned out to be pretty deep. It took three stitches to close it up. \n\nThe following weekend Sam and I got together at her house. I almost went into shock as I drove up her driveway. Her house was pretty big and it was also pretty amazing. \n\nI had no idea that she had a pool and a spa on her deck. She also had a swing set and a playhouse for the kids. The thing that floored me was the tree house. \n\nWhen I told her the tree house could be her balcony, her eyes got huge. \"I ain't goin' up in that thing,\" she said. I also got to see her two year old, Bobbie. \n\nShe poured me a generous glass of wine. I was sure that we were going to share it again, but she surprised me again. \n\n\"I'm pretty sure Ah won't be drinkin' for a while,\" she said with a big smile.\n\n\"He deserved it,\" I said. \n\n\"He must,\" she smirked. \"God knows he gets it enough. And he does something to me, cuz all he has to do is kiss me or look at me and I'm flat on my back with my legs spread and my pussy gushin' something fierce.\" \n\n\"Uh, Sam,\" I said. \"I was talking about the stabbing you gave the asshole I live with.\"\n\n\"Oh,\" she said. \"Ah was talking about the stabbing my Robby gave me. After three times, I'm pretty sure I can tell when I'm knocked up.\" \n\nIt was a wonderful afternoon, or at least the first two hours were. Sam went to light the grill to make hot dogs for the kids and steaks for us. I was holding her baby, who even at two showed signs of being just as a Pretty as her two sisters and her mom were. \n\nSuddenly the little girl twisted on my lap. She listened and apparently heard something I couldn't hear. A few seconds later I heard what I thought was some kid in one of those street racing cars. \n\n\"Dada,\" said the little girl. That was when the fence opened and the garage door went up. There was a late model Mustang in the garage and the skeleton of another car probably another Mustang that was up on jacks. \n\nThe car that pulled into the yard and stopped just in front of the big garage didn't look like any Mustang I had ever seen. It did have the little horse on the front, but it was sleeker, wider and sat lower than most of the Mustangs I had seen.  \n\nSam abandoned the as yet unlit grill and melted into the arms of the man who got out of the car. I couldn't see him clearly but she was all over him. If he got that treatment all of the time it was no wonder she was constantly spitting out kids. \n\nAfter a kiss so deep that my own pussy started to hurt she grabbed his hand and started walking towards me. His eyes were better than mine were because before I recognized him he stopped. His mouth that had been smiling and happy drew itself into a very grim, very tight line. \n\nI don't think the world stopped spinning. In fact I'm almost certain that the birds continued to sing. The clouds kept passing by and time didn't slow down or halt. The kids kept playing in the pool. The chorus of little girls yelling, \"Hi Daddy,\" and my own son's energetic greeting of, \"Hi,\" to a man he had never met yet looked eerily comfortable around was evidence of that. \n\nAnd that was it. That one nearly spurious item of minutia roused me from my shock and invoked my anger. \n\nThe comparison was so easy it was almost like going back in time. Joey, my son was so much like Bobby, my Bobby that it was like seeing Bobby as a child or seeing Joey as an adult. Their faces were similar. The shape of their eyes was similar. The only difference was that Joey's eyes were the same brown as mine. But Bobby's gray eyes were a recessive gene. \n\n\"Mona,\" he said angrily.\n\n\"Bobby,\" I spat. \n\n\"You two know each other?\" asked Sam. She showed her true colors in that instant. I had begun thinking of Sam as my long lost sister that I had never been fortunate enough to have. But in that instant, she let me know where her heart lay. She took his hand and inserted herself between us in a clear sign that as she'd told me many times over the scant few days of our acquaintance; no one would EVER hurt her family. \n\nA chill went down my spine as I remembered her switchblade. \"You don't mess with a mountain girl,\" she told me. \n\nHer eyes suddenly softened and she brought him over to the table we sat around. \n\n\"Okay folks, it appears that we all have some talkin' to do,\" she said. \n\n\"I'm not sitting down with her,\" he spat. \"Fuck that. Not in a million years.\" \n\nShe grabbed his arm and wrapped her arm around it. It almost looked like his eyes rolled back in his head at her touch. She was very subtle, but I saw it she had his arm trapped between her own arm and one of those big soft boobs of hers. I swear they were both about to cum just from touching each other. \n\nI suddenly remembered how gentle and loving he was in the bedroom. I also remembered how unselfish he was and how he always made sure I came at least a couple of times before he did. \n\nI also noticed that side by side I was a bit bigger than Sam. Without the knife my weight might give me an advantage. And ... and ... I might ... I couldn't. From the look in their eyes when they looked at each other, he would probably kill anyone who looked at her sideways. \n\nEvery trace of love he had sworn to have for me had been eclipsed like the sun outshines a dollar store flashlight at noon on the hottest day of the year in the middle of the fucking desert. \n\n\"Robby,\" she cooed. \n\nRobby, I thought. Why the fuck hadn't it clicked with me. She had given me all of the information. She told me her husband was an engineer. I guess the devil really was in the details. \n\nI remembered him as Bobby. Growing up no one had ever called him Rob or Robert. He was always just Bobby. And I never thought of him as an engineer. I always thought of him the way he described himself; as a trouble shooter for the oil company. \n\nBesides, there are plenty of Roberts and Robs and Bobbies and Robbie's and Bobs in the world. Shit every time you take a piss outdoor you're splattering the shoes of some guy named Robert or some derivation thereof. \n\nThere are too many coincidences in the world. The asshole I live with is named Sam and so is the woman I've been calling my friend. There is no way that they are the same person. Hell, if I hadn't sent him to the ER a week ago he might have bled to death over night from the stab wound she gave him. \n\nThere are no coincidences in the world. Surely she told him about Mona and he had to know. My Bobby changed one letter of his fucking name and became a completely different man. He even changed his career. He became Robby. \n\n\"Robby,\" she cooed. \"Do you love me?\" \n\nWithout taking his eyes off of me, as if I was a black mamba that had stuck my head above the rim of his toilet, just as he was about to take a shit, he answered her. \n\n\"More than anything on earth,\" he said. \"And I will until the end of time.\" \n\nHe had always told me that he loved me but it had never been anything like that. And even though he was looking at me when he said it, I knew that he meant every world of it. Every iota of the love he had for me was gone. \n\nThey always say that true love lingers. Even when you move on or the one you love dies, a part of you will always love that person. That was the way I felt about him. Even though he had run off on me, I still loved him and I knew that I would until the day I died. \n\nThe career change wasn't earth shattering but I would have given anything to know why my Bobby had become so God Damned shallow. Sure, Sam was prettier than me. But even when we were younger there had been girls who were prettier or built better than me. But Bobby had never paid them any attention. I was missing something. \n\n\"Sam,\" he croaked. His voice broke even as he still continued to stare at me. \"Do you love me?\" \n\n\"You don't even have to ask, Honey,\" she said. She started staring at me too and I got scared. Sam, the asshole had told me that Sam the redheaded goddess who'd stolen my husband was crazy. He had told me that this would not end well. Maybe for the first time he'd been right. That old saying about blind squirrels finding nuts came to mind as she turned those unholy blue eyes of hers on me. \n\n\"Why did you bring her into our house knowing what she did to me?\" he asked.\n\n\"Honey, it is just beginning to dawn on me that MY new best friend Mona and YOUR ex, Mona are the same Damned Mona,\" she said. \"After all she has a Sam and you have a Sam and we are clearly not the same person.\" \n\n\"We all need to sit down and talk about this calmly,\" she said. It was all I could take. \n\n\"What the fuck do you mean what I did to YOU,\" I screamed. \"You were the one. You ran out on me while I was pregnant with YOUR son. Look at him Bobby; he looks just fucking like you. Maybe the reason why you and redhead Barbie over there keep having girls is because you already had a son who's probably your clone.\" \n\nAt that moment, Joey came over. He was wet from being in the pool and shivering even with the summer heat. \n\n\"I have to go to the bathroom,\" he said. I started towards him. \n\n\"I've got it, Mona,\" said Sam. \"Come on Joey.\" She turned and looked at the two of us. \"You two play nice until I get back.\" \n\n\"I hate to admit it, but Sam was right about a lot of things. All of you men are the same. No matter how much a woman loves you, you all go crazy for a pretty face and a pair of big boobs,\" I said angrily. I hoped that he couldn't tell that I was halfway between kicking his ass and kissing his feet and begging him to take me back. \n\nIt couldn't have been my words ... Could it? Suddenly all of the hate drained from his face and with it the strength. He turned and walked away from me. \n\nIt took me a second to figure it out. It was her. With her gone, so too was a lot of his strength. He was reverting to form. Shit, I knew him as well as she did. I knew where he was going. A wounded animal always goes to its home ground. \n\nHe went right into the garage and picked up a wrench. He took off the jacket to his expensive suit, rolled up his sleeves and started working on the car in the jacks. \n\nJust as I had worked up the courage to go to him, she came back. \n\n\"Not a good idea, Mona,\" she said. \"Her voice was soft and full of a host of emotions. Among them regret, sadness, confusion and even a tiny bit of joy. But despite all of those emotions that her voice carried, her body language told me that he was hurting and she would protect him from any and everything, me included. \n\n\"Give him some time, Mona,\" she said. \"Give me a week and we'll talk again. Maybe we'll all be angry and unhappy, but we'll get to the bottom of all of it, I promise.\" ",
        "I nodded. And turned to look at Joey jumping up and down in the pool with what I suddenly realized could be his sisters, or at least his half sisters. \n\n\"Mona, I meant what I said about you being my new best friend,\" she said. \n\n\"I felt it too,\" I told her. Just then we heard the sound of her Robby, who used to be my Bobby trying to start the hulk of an old Mustang that he was rebuilding. It sounded anemic compared to the monster he'd driven in. \n\n\"He still loves to fix things, Huh?\" I asked. She smiled and nodded. Just then I saw Joey get out of the pool and walk Zombie-like towards the garage. I smiled because earlier I had used the expression about apples not falling far from the tree to describe the fact that her girls were just as beautiful as she was, but also just as kind and compassionate and down to earth. I realized as I watched my son being drawn to the sound of that mechanical contraption trying so hard to breathe in that garage that he too had failed to escape the branches of the tree that had given him birth.\n\n\"Mona, do you still trust me?\" she asked. I nodded and truthfully, I meant it. \"Can he stay a little while longer? I promise you two things. I'll bring him home right after dinner. And I'll protect him like he was one of mah own.\" \n\nOn the drive back, I was suddenly glad that I had let Joey stay with Sam and Bobby. I was so emotional that I could barely drive. I almost hit several things and several people during the trip. \n\nI was angry. And I was jealous. I felt cheated. But more than anything I was confused. \n\nI was angry at the world. I was angry at Bobby. I was also angry at Sam. And I was even a little bit pissed at Joey. When I told him that I was going home and Sam would bring him home later he didn't bat an eyelash. \"Okay, bye,\" was all he said. \n\nI was angry at Bobby because I had expected better of him. I had expected him to at least man up and say that he was wrong and ask me to forgive him. Okay, he ran off and left me for a much prettier woman. Maybe it wasn't even a case where she was prettier, maybe it was just that she was there and I was so many hundreds of miles away. Maybe he, like me was just being human and lonely. Maybe if he'd just had the balls to be a man and explain it to me, I wouldn't hate him so fucking much.\n\nAnd Sam, despite all of her swearing that she wasn't whore had acted like one. She had stolen not only my husband, but my life. That beautiful house should have been mine. Her easy and wonderful life should have been mine. Those perfect little girls should have been mine. \n\nAnd the worst thing of all was the realization that after I lost Bobby, I really didn't give a fuck about much. I hadn't been living, I had just been existing. I never bothered to fix myself up because there was simply no reason for me to do it. The people I served at McDonald's didn't care what I looked like. And Sam only wanted to fuck me. It had been years since we'd even done that. \n\nI went straight into my room and cried myself almost to sleep. I was interrupted by Sam. \n\n\"I told you it wouldn't work,\" he said. \"Now you're back here, crying your eyes out.\" \n\n\"Why did he try to lay the blame on me, Sam?\" I asked. \n\n\"Because even though you think the bastard walks on water, he's just another guy,\" he spat. \"He threw your ass over for that hot redhead, like any other guy would have done. And when you confronted him, he did what any other guy would have done. Lie and deny, baby girl, it's in our genes. It's just what we do. Instead of taking the blame himself, he reverses that shit and throws it on you. \n\nAs a matter of fact you tried to do the same thing. Remember when he tried to divorce you? You were actually hoping that he had met someone so you wouldn't have to feel guilty if he ever found out about you fucking me. Everyone wants a way to get even, honey.\" \n\nI was almost ready to believe him until he threw in his last bit. \"Now maybe you can give me some slack about the things I do, Mona. None of us is perfect.\" \n\nSam lived up to her word. She brought Joey home right after dinner. He was still all excited and only wanted to know when he could go back. I had no idea what to tell him. He also wanted me to buy him books about cars and machines. I knew it was starting again. He was becoming the reincarnation of his father. Soon he would be fixing things and some little girl would start to follow him all over everywhere. \n\nA couple of days later Sam called and asked me to come over the following Sunday. Joey and the girls could play and Holly would be there to watch the kids while we talked. She even wanted me to bring Sam along. Of course he refused. \n\nShe showed up an hour later and opened the door to his room. I tried to tell her that he was asleep, but she didn't seem to care. She just went in as I watched she pulled out that knife of hers. She tapped him on his head until he woke up. As he realized that she was sitting next to him he jumped up in surprise. \n\n\"Mona said you won't come over on Sunday,\" she said. \"Is that true?\" \n\n\"Yes, you crazy bitch,\" he screamed. She moved closer to him and ran her knife along his sleeve and up onto his face. \n\n\"Ah'd like it if you was there,\" she said. She trailed the knife up the side of his face. She acted as if she was going to shave him with it and then grabbed a lock of his hair and snipped it off, smiling at him like an AlleyKat with a trapped rat. \n\n\"Okay, I'll be there,\" he said. I really believe that Sam was afraid of her. \n\nOn Saturday I spent money I couldn't afford and got my hair done. I borrowed some makeup from some of the girls at the restaurant and tried to make myself pretty. I didn't dare to wear jeans. Since next to Sam I'd come off looking like an elephant. But I did wear a long tight skirt that emphasized my wide hips and rounded ass. \n\nSam was all legs and tits her heart shaped ass got lost in the shuffle. By working on her weaknesses, I could at least try to fight for my man. \n\n\"Holy fuck!\" said Sam as we pulled up in Sam and Bobby's driveway. \"They live here? Shit, no wonder you wanted to marry the guy.\" \n\n\"I wanted to marry the guy before he had all of this,\" I said.\n\nWe rang the bell and Holly let us in. She hugged Joey and told him the girls were in the back and Robby was in the garage. Holly was wearing a swimsuit with a cover up over it and I noticed Sam gawking at her exposed legs. For a chunky girl she did have decent legs. \n\nSam noticed me watching him and shrugged his shoulders. \"What did you expect?\" he asked.\n\n\"I pretty much expect to see you in jail,\" I said. \"That girl is only seventeen years old, you pervert.\" \n\nAs we made it out to the pool area, Joey saw Sam and ran over to her. \"Auntie Sam,\" he said. He hugged her and it bothered me. In two weeks, Sam and her daughters had turned my son from a shy, reclusive child to a normal healthy little boy who was brimming with confidence and poise. He waved to the girls and went over to speak to them. He told them that he'd be back in a little while but he needed to see the car first. \n\nThe relationship between my Joey and Bobby or Robby as he called himself now was important to me. I liked the fact that the two of them were getting along. \n\nSam went to the garage along with Joey. \"You'd better be careful, Mona,\" said my asshole Sam as we watched my son walking along with the beautiful redhead. She was even more beautiful in her swimsuit. Sam had cursed several times when he saw her. \n\n\"Look at the way they bounce,\" he slurred. \"I swear if she bends forward they'll come out of her top. And Jeezus, I thought you said she didn't have much ass. It's perfect if you ask me. Are you sure she has three kids.\" \n\n\"And she may be pregnant again now,\" I told him. \"That would make four kids and you're still jacking off in your pants watching her walk by.\"\n\n\"Maybe five,\" he said. \"That's what I was warning you about. She has your kid wrapped around her little finger and he's too young to even know what a pussy is.\" \n\nThen it came back to me, Sam was always saying that she would protect Joey like he was her own child. I suddenly got sick to my stomach thinking about it. With their money, and the fact that Bobby, I mean Robby was his biological father and had rights nearly equal to mine, they might be able to get custody. Maybe Sam wanted my son as well as my husband. \n\nI went into the garage after them with Asshole, Sam on my heels. \n\n\"Sheeeeeiiiiiiiiitttttttt!\" he exclaimed suddenly. I thought he was going to spray semen all over the flower beds. I was sure that one of Sam's boobs had broken free.\n\nThen I saw what he was looking at. \"It's an \"R,\" he gushed. \"Mona it's a fucking R.\" \n\n\"I know that stupid,\" I said. \"He calls himself Robby now. It's spelled with an R.\" \n\n\"The car Mona,\" he said in a voice that was akin to worship. \"It's a Shelby GT 350 R. They're only making 500 of those worldwide. They sold all of them before they were even announced.\"\n\n\"Robby, Mona is here,\" said Sam softly. He was cranking some bolts with a ratchet wrench and barely looked up. \n\n\"Robert James Thompson!\" said Sam. He looked up quickly and dropped his wrench on the padded fender rest he had on the car. \n\n\"Hello Mona,\" he said extending a greasy hand to me. Then he noticed Sam the asshole standing next to me. It seemed like it was in slow motion but it was actually far too fast for me to even react to it. \n\nHe saw Sam the asshole and the fingers he had extended to en curled inside of his palm, forming a fist. He drew the fist backwards and drove it straight into Sam the asshole's jaw knocking him completely off of his feet. \n\nI was shocked. I had never seen Bobby hit anyone. Sam the asshole was on the ground too dazed to get up. And while he wasn't unconscious, he wasn't actually knocked out; he was too disoriented to even think about fighting it even trying to defend himself. \n\n\"Wow,\" said my son Joey, looking down at Sam the asshole. \n\n\"Joey, Honey, go get in the pool,\" said Sam.\n\n\"Yes auntie Sam,\" said Joey smiling over his shoulder as he walked away. I was floored. \n\n\"They're all crazy,\" said Sam getting to his feet. \n\nSam and I helped Sam to his feet as Bobby walked inside of the house. \n\nTen minutes later the four of us were all sitting around their beautiful kitchen table. \n\n\"Okay, who wants to start?\" asked Sam. I noticed that she was holding Bobby's hand.\n\n\"Nope, none of that,\" I said.\n\n\"None of what?\" she asked. \n\n\"Let go of him,\" I said. \"He acts completely different around you. I want him to talk to me on his own. I want him to defend his actions without you. He's a grown man who runs around spreading babies all over the place. Let's hear what he has to say.\" \n\n\"Hey, why don't I go first then,\" said Sam the asshole. \"I want to know why you two keep hit ...\" \n\n\"You don't get a turn,\" said the female Sam. \"This is between the two of them. I get a turn because I have important information that neither of them knows. You're only here for two reasons. The first is because I figured my husband would hit you as soon as he saw you. I also figured that you'd have no idea why. The second is because there's something that you REALLY need to know.\"\n\n\"I am involved here,\" he whined. \"No matter how this works, I can't lose. If the two of them get back together, I end up with you. If they don't get back together I still have Mona and that's where I am now. It's a win/win situation for me.\" \n\n\"You don't want me,\" she told him. \"I'd cut your fucking throat before you drew your first breath. I don't want you to have any doubts. I hate your God damned guts. I have no idea why Mona puts up with you ... Okay I think I know, but it really isn't a big enough reason.\" \n\nSam the asshole blanched at her words. I think he became even more afraid of her then. \"And you are absolutely wrong about the situation. There is no chance that those two are getting back together. Robby and I love each other. We have since the first moment we saw each other. Anything that went on before we met ceased to exist the very second that our eyes locked. I'm sorry Mona. I know you think it's wrong but you don't have all of the facts yet.\" Since she seemed to be done talking, I started my pitch. \n\n\"I've already told you that I think of you like the sister I never had but ways wanted. I won't lie to you. I've hoped for years that Bo ... Robby and I would meet and get back together. It's always been my fondest wish. But from the second I saw the two of you together, I knew that was not an option. I also don't understand why he should be angry at me. We were supposed to be spending the rest of our lives together. And he just disappeared. Do you know that I still wear the bracelet you gave me that Christmas? I guess the only thing I really expected was for ... Robby to apologize to me for his actions. Maybe I'd like him to spend some time with his son and since I'm busting my ass for pennies while you two seem to be rolling in the dough, some child support might be nice. I'd also like it if we could find a way to stay friends. I know I'm asking a lot, but it's just me thinking off of the top of my head about what's fair.\"\n\nAs I looked at him, knowing him the way I do, I knew something was wrong. Robby was seething with anger and Sam; she looked at me with something akin to pity on her face. \n\nThis was all wrong. Their reactions were completely ass backwards. Sam the woman who stole my husband right out from under me was the villain here. She should have been angry at me and ready to fight me for Robby. But she sat there, clearly hurting, not for herself but for me. \n\nAnd Robby, he had sworn to love me til death do us part. He was supposed to love me. We were supposed to be together, dammit. Okay he's knocked her up three or four times. Well he'd rung my bell too. Why the fuck was he sitting there seething. It was clear that he hated me with an intensity that made even His wife's loathing of Sam the asshole seem pale in comparison. \n\nThen he did as I had asked. He let go of her hand and I realized that I had made a mistake. As soon as they broke contact, his anger flared. If I'd thought I knew the depths of his anger before, I suddenly realized that he hadn't been drawing strength from Sam; she'd been calming him down.\n\n\"Bitch,\" he spat. Sam quickly grabbed his hand back. He gulped so loudly we could hear it. She stroked his hand and he gulped again as if he'd just tried to swallow a bowling ball. \n\n\"I love you Robby,\" she told him softly. \"No matter what happens here, there is always that.\" He nodded and even Sam the asshole unclenched a little bit. \n\nRobby sat back down then. He looked at me across the table and began speaking. I prayed to God that Sam continued to hold his hand. I'd been sure that the man I still loved had wanted to rip my head off and shit down the hole. \n\n\"Mona,\" he said. His voice cracked as if it was hard for him to even say my name. \"You did get one thing right. We were in love. At least I was. I had so many plans for us. I expected to spend the rest of my life with you. I heard you talking earlier with that ...\" He pointed to Sam the asshole. \n\n\"Everything I did was for us\" he began again. \"Every sacrifice was worth it. I worked lots of extra shifts in Alaska, so I could buy you that bracelet you mentioned. I guess I was supposed to use the extra money for more food or snacks or something. But all I ever thought about was you. I missed you so much Mona. You were the most important thing in my life.\" \n\nI couldn't take seeing the pain in his eyes for another second. And hearing about it ... Just hearing how much he loved me hurt, so I lashed out.\n\n\"Yeah until you met HER,\" I sneered. \"I get it. She's younger, prettier, built better, and she makes you feel all squiggly. This is a really shitty apology.\" \n\n\"This isn't a fucking apology,\" he spat. \"I was simply stating facts. If you're expecting me to apologize, you can blow it out of your ass. I have NOTHING to apologize for. I was trying to be nice to you.\" Sam squeezed his hand and he calmed down. \n\n\"Anyway,\" he continued. \"Imagine loving someone that much. Then imagine that because of a freak storm that no one foresaw, you have the chance to go home and be with that person earlier than you expected ...\" \n\nAlarm bells suddenly went off in my head and the nagging suspicion that something was wrong flared up all over again.\n\n\"I did have an idea, though,\" he said. \"I came up with a way to save the company a lot of money both in our temporary bases and even the semi-permanent ones. They were so happy with the process I developed for saving the pipes that they changed our support agreement and gave me pretty much anything I wanted. I know now that they screwed me. My idea saved them millions and they got me my first Mustang, a used one, got me a little house close to school and paid for my education. It wasn't exactly an equitable deal but I was young, dumb and dying to get back to my Mona. \n\nI thought I was a fucking genius. I was sure that I had the world by the balls. I had bought you a necklace to match the bracelet you were talking about. Yep, I had the world by the balls until I snuck into our crappy little apartment on New Year's Eve and saw you licking that asshole's balls. I just stood there frozen on the spot, while the two of you fucked like two animals. I stayed there long enough that the image was frozen into my brain. And even when I look at you now it's all I see. \n\nYou talked about how I was supposed to love you til death do us part and all of that shit. Apparently it didn't refer to you doing the same. Our wedding vows apparently were one sided. I don't remember agreeing to love you forever while you fucked scumbags in our bed. That's why I hit him. He ruined my fucking life. \n\nYou talked about me owing you an apology. You claim I ran out on you. Well Mona, you ran out on me first. You didn't even have the class to tell me about it. At least once I got my strength back from what YOU did to US, I asked you for a divorce. Sure, I didn't tell you why, because I could barely stomach talking to you. I couldn't even face you to tell you in person. I thought I was the world's biggest loser. I was out there risking life and limb, just for the chance that the two of us might have a better future. Meanwhile you were back here at home and safe. The only thing you risked was picking up an STD. \n\nBesides, I was sure it was some huge joke to you. I could see the two of you laughing at me while you just fucked each other silly. So Mona, if anyone here deserves an apology, it's ME!\" \n\nTears ran down my cheeks and every word he said, every acidic syllable burned me to the quick. \n\n\"As far as I'm concerned, this is the last time we will EVER speak Mona, so let me clarify a few more things for you. I didn't meet Sam until AFTER our divorce. You know her views on WHORES Mona, so even you should be able to figure out that she wouldn't have done anything with me unless you and I were done and I told her the whole story within an hour of meeting her. \n\nSecondly, yeah Mona, my Sam is beautiful. She doesn't see it though. She used to tell me that there were hillbilly girls all over West Virginia who were ten times as pretty as she was. Anyway, Mona, I think that you know me well enough to know that I would never have dumped you for anyone, no matter how pretty. I met Sam when I was at the lowest point in my life emotionally. And I am forever grateful that she took pity on me. \n\nThe last thing I need to clear up is that I really like your son, Mona. Despite his mother being an untrustworthy sl ...\" Sam squeezed his hand again and he stopped.\n\n\"He's a really good, really nice, really smart little boy, Mona. But he isn't my son. \"I left you at the beginning of September, Mona. His birthday is in August. That means that he was conceived in late October or early November, and I was hundreds if not thousands of miles away from you then. I know you're bad at math, but surely you can count to nine.\" ",
        "It was all too much for me. I felt like I was in a small dark room and then the walls just closed in on me. \n\n\"Mona, are ya okay?\" asked Sam. I looked around me. I was in a very soft bed. It was probably one of the guest rooms in their castle. The weird thing was that in this fairy tale it seemed as if the princess, Sam, was taking care of the Wicked Bitch, me. \n\nFor a big assed chunk of my life, a big part of my essence was the knowledge that I had been dumped by the man I loved. I blamed a lot of my problems on the fact that Bobby, I couldn't call the guy Robby to save my ass. \n\nAnyway, a lot of my identity was my deep seated knowledge that he had wronged me. He had wronged me and left me pregnant. And now none of it was true. The only person who had screwed up my life was me. And worse than that, I realized that I owed HIM the apology. And as far as ruining my life went, I had done that on my own. Robby on the other hand had gone on with his life. He'd done everything we had planned to do and more, but he did them with someone else. \n\nI looked into Sam's eyes and saw not hatred, only compassion. But then she could afford to be compassionate. She had it all. Shit I'd had it all. I just pissed it ... Okay fucked it away.\n\n\"Sam, I ...\" I began. \"I was lonely and I just missed him ...\" \n\n\"Mona, you have nothing to explain to me,\" she said. \"Hell, I'm so glad that you did it that I can't thank you enough.\" \n\nI looked at her expecting to see a sign of sarcasm, but there wasn't a trace of it. \n\n\"Look out the window,\" she said. I pulled the curtain back and looked out at their huge yard. I saw four kids jumping in and out of the pool. Joey was clearly showing off for the girls. I would never have expected to see that. \n\n\"Mona, if you hadn't done what you did, my three little angels would never have been born. I'm in your debt. Mona despite everything that's happened, you and I will always be friends for that reason alone,\" she said. \n\n\"I have to apologize to him,\" I said. \"I'm so ashamed.\" \n\n\"Don't bother,\" she said. \"It'll just make him angry all over again.\" \n\n\"I don't care about his math,\" I said. \"Joey is definitely his kid. You and the girls even pointed out how similar they are ... Hey, where's my asshole?\" \n\n\"If I had to guess, I'd say it's between your butt cheeks,\" she laughed. Then she looked at me seriously. \"He left when I showed him this.\" She handed me a sheet of paper. \n\n\"Last week when I took Joey to the bathroom, I cut a lock of his hair. He thought it was a game. I swabbed the inside of Robby's cheek and had a DNA lab run the test. Rob's math is right as usual. He isn't Joey's father. Sam is.\" \n\n\"How do you know Sam is?\" I asked her. \"Once I found out that Rob wasn't I showed up at your house. That was the real reason I cut off some of the asshole's hair. I honestly didn't care if he showed up or not. I just needed a reason to get close to him. If I hadn't gotten the hair, I'd have just stabbed him again and got his blood.\" \n\nShe left me for a few minutes. While I continued to watch the yard out of the window I saw her. She went into the yard and hugged each one of her girls. She hugged Joey too. Then she took a picture of him with her phone. She took pictures of the girls too. She even took one of Bobby. \n\nI was amazed at how easily she drifted in and out of the group. She was back in the room with me a few minutes later. She pulled me into another room and downloaded the pictures she'd just taken into a computer. \n\nShe blew the pictures of Joey and Bobby up until they filled the screen. Then she placed them side by side. \n\nThen I could tell she had an idea. She took a picture her youngest daughter Bobbie and put it up next to her dad's picture.\n\n\"Even though Bobbie is only two and female, look at the shape of her eyes and look at Robby's,\" she said. \"Now compare their noses. See they're the same. Look at the shape of their lips. Get the picture?\" And she was right, all of their daughters had a lot of Bobby's features but they had hers too. \n\nWhen she brought up the picture of Joey, she did the same thing. She went feature by feature and showed me the differences. It was weird if you looked at them from a distance they appeared similar, but the close ups told the story. \n\n\"But why do they look so much alike?\" I asked in tears. \n\n\"You,\" she told me. \"When we first started talking to each other about our lives, I noticed that you talked incessantly about your ex. Of course that was before I knew that your ex was my husband. But I noticed that you really hadn't gotten over him. \n\nSo you did this to Joey. Instead of sports stuff of video games, you filled his room with books. He had no choice so of course he developed a love for books. You sprinkled in a few model cars. And naturally they were Mustangs because, Robby loves Mustangs. And that gave them something else in common. \n\nThe real kicker is that you have his hair cut so he wears it just like Robby's, which gives them a similar look. And to most people's eyes the size difference between them kind of mutes the differences so they're less noticeable. And deep down inside you want him to look like Robby. You figure your guilt over what you did to him is much worse when you throw in the fact that while you were cheating on your husband, you actually let another guy get you pregnant. \n\nHoney, the real problem here, isn't the relationships between us. We're all adults. We all know what happened and how it affected us personally. Between us, I think Robby is the one that really got hurt the most. But even he'll tell you that as bad as it hurt him at the time, he came out of it a lot better off. The real problem I see is that you're been trying so hard to turn Joey into a little Robby clone that you kind of missed what a great kid he really is. \n\nHe loves books, just like Robby does, but he's terrible at the mechanical stuff. And he doesn't have any interest it. On the other hand he is a genuine animal expert, Mona. He could be an awesome biologist or zoologist. Maybe he'll switch to people and become a doctor. Give him some time and some space to figure out what HE, likes Mona. He deserves it and you'll both be happier.\" \n\n\"There are too many things preventing me from being happy already,\" I told her. \"I don't want to add to the list.\" When I thought about it, I began to understand that I had always known that Joey wasn't Bobby's child. I think even Sam the asshole knew it. But I wanted Joey to be Bobby's so badly that I just conveniently let my mind blur the details until the fiction became fact. And Sam never wanted any type of responsibility. He wanted everyone to know that he was not the father and therefore not liable for any type of obligation to us. \n\nThat was why Joey was always MY kid, or sometimes THE kid. As soon as Sam had shown him definite proof that as Maury would say, \"He WAS the father,\" he had disappeared like a bad dream.\n\nLater on, I tried to apologize to Robby. Looking back on it now, I did a pretty shitty job of it. \n\n\"Robby, I'm sorry about what happened between us,\" I said. \"But you have to realize that I was alone and lonely. I didn't want us to be separated for such long periods of time. I think you have to admit that it was at least partially YOUR fault too and ...\" \n\n\"Get your stupid ass the fuck away from me,\" he hissed. \n\n\"Bobby, I was trying to apologize,\" I whined. \n\n\"No,\" he hissed. \"You were making excuses and you were trying to blameshare. But that was not a real apology.\"\n\n\"What do you mean?\" I asked. \n\n\"First off an apology is two things,\" 'he said. \"It's an admission of wrong doing and a sincere request for forgiveness. Often there's an offer of restitution. In your case you said you're sorry for what happened between US. That's utter bullshit. It's not an admission that YOU fucked us up. It's more like we were both equally wrong. YOU cheated Mona, I didn't. I was just stupid enough to fall in love with and marry a cheater. \n\nThen you hit me up with the Earth shattering news that you were lonely. Fuck you Mona. I was lonely too. I could have jumped on a truck and went off to the whorehouses in Anchorage with some of the other guys. But I never did. I missed you too, Mona. I understand loneliness too. You were all I thought about. But I kept it in my pants. \n\nMaybe it's easy to cheat when you're safe and sound at home in an apartment that I was paying for. Mona it is just as easy to cheat when you're far away from home working a lot of double shifts and guys are yelling, \"Let's go get some pussy,\" every fucking weekend. \n\nI was a long way from home in a place I'd never been, working my ass off for both of us. Every free minute I had was spent studying so I'd get better grades and eventually make more money for us. Now tell me if I was lonely too. \n\nMaybe you're right Mona. Maybe we were both lonely. Maybe the only thing wrong is the way we dealt with our loneliness. I thought about you all the time Mona. Did you think about me?\n\nWhile I was freezing my ass off in subzero temperatures, I thought about you. Did you think about me while you were sucking that asshole's dick in our bed? Fuck you, Mona. There's no reason for us to ever speak again. It's all out there now. I have no feelings left for you. I've moved on and moved up.\" \n\nThrough my tears I begged him to wait. \n\n\"Bobby, I know how much you love Sam,\" I said. \"I know we'll never have that again. But I'd like us to try to be friends, okay.\" \n\n\"Are you out of your fucking mind?\" he asked. \"Friends are people you trust or people you can count on. At the very least a friend is someone you can talk to. Why the hell would I want to be friends with you?\" He walked away shaking his head. \n\n* * * * * *\n\nEpilogue\n\nMona\n\nThat should have been the end of my story, but it wasn't. I got home that night to find that Sam had moved out. He'd taken all of his stuff that he could carry and left only a note. \n\nI read it once and threw it away. The content of the letter was worth far less than the paper it was written on. \n\n\"Mona, I'm not ready to become a father. I heard what you said about getting your ex to pay child support. I'm also not ready to have to get a job to support a child I neither asked for nor wanted. You deserve better than me. Perhaps with me gone you'll find it. Thus I give you the gift of my absence. Use it wisely. Never truly yours, Sam.\"\n\nI fell apart. Not because I missed him or anything like that. And he'd said it himself. He wasn't ready to be a father. I didn't think he ever would be. For my son's sake I was glad he was gone. The problem was that I had no one to watch Joey after school.\n\nWith nowhere left to turn, I called Sam and asked her if she could watch Joey after school for me until I found somewhere or someone that I could afford. I hated having to ask her. Our friendship was already hanging by a thread. We still got along like sisters. The problem was that Bobby hated me. And her love for Bobby was at least equal to his hatred for me. Going against his wishes was hard on her. So our friendship ran her through the mill. \n\nBut I asked her. And she said no. \n\n\"But Sam,\" I said. \"I'm begging you.\"\n\n\"And you're doing it for nothing,\" she said. \n\n\"Robby doesn't hate Joey,\" I said. \"He only hates me.\"\n\n\"Quit whining,\" she smiled. \"I told ya I'd treat him like he was mah own. You know I'll watch him. But I'll do it until he doesn't need ta be watched no more.\" \n\nAnd that was how it worked. Sam picked up Joey every day after school until he was well into his teens. I stopped by her place and picked him up when I got off from work. I even dropped him off on the weekends. He often stayed over and went on trips with them as well. They really did treat him like he was a part of the family. \n\nI was a part of the family too for everyone except Bobby. He simply ignored me. He also couldn't stand to be in the same room with me. Sam told me to be patient. But we both knew how stubborn he could be. \n\n\"He only hates ya so much because he loved ya so much,\" Sam always told me. \"I think deep down in that big old heart there's still something left for ya.\" \n\nOver that first summer Sam and Bobby were a great deal of help to me. In turn, I helped them through Sam's fourth and final pregnancy. She had yet another beautiful little girl and if Bobby was disappointed it never showed. Besides, it seemed as if Bobby had already gotten the son he wanted in Joey. \n\nHe took him everywhere. He got him involved in everything. Joey played little league football one year and baseball the next. Bobby didn't encourage him towards any one sport over any others. He wanted Joey to pick things that he thought were fun. \n\n\"Joey, you don't pick a sport,\" he told him. \"The sport picks you.\" \n\nBobby also helped Joey improve his math skills. Once he got to high school his love for animals had gone away. I think it was the bike that did it. One Christmas Bobby and Sam gave all of the kids bikes. Whenever something happened to one of the bikes and Bobby had to fix it, Joey was fascinated by watching him and then began to try to fix them himself. \n\nBikes led to cars and the next thing I knew my son was studying engineering.\n\nOver the years, watching Bobby and Sam together had me really jealous. At some point I started dating again. I really believe that Sam had begun inviting single guys to barbecues at the house for just that reason. \n\nI think I dated for a couple of years before I threw in the towel. There was nothing wrong with the guys, it was me. I could never close the deal. Being around Bobby and Sam had shown me what I was supposed to have. There was also the fact that in a great demonstration of irony. I was unable to have sex with any of them. I tried, but in the back of my mind I'd begun to associate sex with ruining my life. \n\nI think I was forty five the year that Joey married Bobbie. I guess I had always thought that he would have married Angie or Kimmie because they were closer in age. \n\nBobby had started his own engineering consultation company and all three of the older kids were working for him. Angela in Management, Kimmie in marketing and Joey as an engineer. \n\nBobbie had always followed Joey around like she was HIS little sister, while he was trying to impress Angie and Kimmie. Angie was engaged to a doctor and Kimmie had been dedicating her life this far, to school and work. \n\nIn the meantime tomboy Bobbie had grown up to be just as beautiful as her sisters and like her mother before her, she knew what she wanted and went after it. My son never had a chance. \n\nWe're a bit past fifty now and Bobby and Sam are just as much in love as ever. The three of us do lots of things together. Everything, in fact, except for sex. The two of them are still going at it though. \n\nI'm happy for them. We're all grandparents together. Joey and Bobbie seem to be following in Sam and Bobby's footprints, only they're having all boys. There are already three little boys who love their grandmas. \n\nPeople who don't know us think that I'm some sort of third wheel or fifth wheel as it were. But I'm just happy to be here with the people I love. Last night a really ratty looking old man with a horrible cough showed up at the door. \n\nI almost didn't recognize him until he told me who he was. \"I'm ready,\" he said. \"I'm to be a father to my son.\" I laughed so hard I almost peed on myself, which really isn't too difficult for a woman of my age. \n\nSam recognized the asshole immediately. And he freaked out when she told him that she still had her knife.\n\nShe invited him for dinner and he accepted. Bobby pretty much ignored him except for telling him two pieces of information that he needed to know. \n\nThe first was that he was only staying as long as dinner. The second, which made me nearly burst with pride, was that if he hurt me, he'd get his ass busted. \n\nAfter dinner, we sat on the deck behind the house, while Sam and Bobby as usual found time to be together. \n\n\"I'm sorry it took me so long to figure out what I wanted out of life, Mona,\" he said. \n\n\"It takes some people longer,\" I said cheerfully. \"Look at me.\"\n\n\"Well, I know now,\" he said. \n\n\"I'm happy for you,\" I said. \n\n\"Mona, what I want is you,\" he said. \"I want to be a couple like we always should have been. And I want to be a father to my son, finally.\" \n\nI laughed. \"Sam, Joey already had a father,\" I said. \"He had him when he needed him. You know, while he was growing up.\" \n\n\"Yeah Okay,\" he said. \"Bobby's a good guy. But I'm talking about his real father.\" \n\n\"I always get confused about that stuff,\" I said. \"Who's the real father? Is it the guy who was always there for him? The guy who took him to baseball and football games? Is it the guy who taught him how to throw a spiral? Is it the guy who taught him to respect women, or the guy who fucked his mother and then ran out on them? Is it the guy who worried about him when he was sick, encouraged him when he had doubts and punished him when he needed it, or the guy who never seemed to know his fucking name? \n\nSam, Joey is all grown up now. He's a senior partner in Bobby's engineering company. He has a wife and three kids of his own. You're too late for him.\" \n\n\"What about us, Mona,\" he asked. \"It's time for me to settle down. I'm ready. It took me a while, but like I told you in the old days ...I always come home to you.\"\n\nI laughed. \n\n\"Come on Mona,\" he pleaded. \"Aren't you tired of being the odd woman out? You deserve better than that.\" \n\n\"You're homeless aren't you?\" I asked him. \"You're old and all of your bullshit has run dry and you need a place to stay. So you came back to good old Mona. What are you going to do? What's the plan? Are you going to bullshit your way into my panties and try to move into the house with us?\"\n\n\"There's plenty of room in this place Mona,\" he said. \"And they'll let me if you ask them. They love you. Both of them do.\" \n\n\"You once told me in a letter I believe,\" I said. \"That I deserved better than you. You fucked up my chance for a great marriage because I let you. You fucked up my life because I let you. You ran out on both me and your son, because I let you. I think it's time for me to start listening to you.\" \n\n\"So you'll ask them?\" he said.\n\n\"No, I meant I should listen to you when you said that I deserved better than you,\" I told him. \n\n\"But ...\" he began. \n\n\"Right now I finally have what I deserve,\" I said. \"I have a family that loves me. I have kids and grandkids and a lot of people who care about me. I have what I deserve.\"\n\n\"What about love?\" he asked. \n\n\"You don't know what love is,\" I said. \"You're talking about sex because that's all you know. Love is Robby letting me call him Bobby for all of these years even though he claims he hates it and me. Love is Sam and Bobby letting me sit between them when we watch movies so that even if I'm not fully a part of their love it surrounds me and touches me. Love is Sam reminding you that she still carries her knife and she really does. Maybe I don't have sex, but sex with you cost me too much. So I'll settle for love.\"\n\nEven as his mouth dropped open to begin another argument, a clap of thunder so loud that it shook the house split the clouds. \n\nBobby appeared from nowhere with Sam right behind him carrying a tray with three glasses on it. She put it down on the coffee table, smiling at Sam. Then went back in the kitchen and returned with a huge bowl of popcorn with melted cheese and bacon chunks. \n\n\"It's movie night,\" she smiled. \"Robby's in the middle.\" \n\nRobby went to the closet and got the ratty jacket that Sam had been wearing when he showed up. \n\n\"Good seeing you again, Sam,\" he said. \n\n\"You ... You can't send me out there now,\" smiled Sam. \"It's cold as hell and raining cats and dogs. \n\nThe sound of a sharp click came from Sam and Sam the asshole snatched the jacket from Bobby and started on his way out of the house.",
        "\"I thought, he'd never leave,\" said Sam, as the three of us watched him through the window.\n\n\"Are you really going to sit in the middle?\" I asked Bobby. \"Between the two women who love you more than anything in the world.\"\n\n\"I wanted to see what it feels like,\" he said. I went into shock. It was the first time he'd actually spoken to me directly in years. He'd always bought me presents for Christmas or my birthday. He even took care of me when I was sick, but he'd never spoken to me. It was like a gift.\n\n\"So you finally forgave me?\" I asked.\n\n\"Years ago,\" he said. The three of us snuggled under a big old blanket and watched a movie together. We weren't all equal. I love Bobby. I love Sam. Bobby loves me and God knows he loves Sam. It feels good anyway. It feels right. It's more than I deserve.\n\nThe End"
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "romance",
        "mustang"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/more-than-i-deserve"
}