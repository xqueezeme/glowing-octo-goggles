{
    "title": "Secret Smiles and Three Little Words Pt. 28",
    "pages": [
        "Chapter 30 \n\nIt took Alex over an hour just to get Livy off the cold tile of the bathroom. The crying didn't stop but she was able to guide her to guest bedroom and into bed. She tucked her in and kissed her like she was a small child. \n\nAlex got in on the other side and gently stroked the side of her sister's face. The woman was an absolute mess. Her eyes were bloodshot and puffy from her tears. Her face red from all the muscles straining from the physical pain that comes with the utter desolation of pain. \n\n\"I'm so sorry,\" Livy finally was able to say when her voice could be used for something other than the soft wailing her tears brought on. Her voice was rough and scratchy from them. \n\n\"There is absolutely no reason to apologize,\" Alex said firmly. \"I love you, I'm here for you. No matter what your decision is, I will stand by your side and give you whatever you need!\" \n\n\"My decision is...I'm getting a divorce!\" Livy repeated what her final words were in the bathroom. \n\n\"Ok, baby,\" Alex said with as much strength as she could bestow on her sister. \"Then that is what we will do, we will get you a divorce.\" \n\n\"Is it the right decision?\" Livy asked her. \n\n\"I don't know,\" Alex said softly. \"I can't answer for you, only you will be able to tell yourself if it is the right thing to do!\" \n\nShe stroked her sister's face constantly trying to comfort her. There were no words in the English language that would make the pain go away. She wished there were. She would use them all on Livy. \n\n\"I can tell you, you deserve happiness! I can tell you, it won't always be this pain! I can tell you, that I love you! But I can't tell you if this is right or wrong,\" Alex smiled gently putting her hand on her sisters chest. \"Only this can.\" \n\n\"I want happiness,\" Livy whispered. \"I want the fairy tale that I keep telling Nora is true.\" \n\n\"Life is not the fairy tale we see in our shows,\" Alex cautioned. \"There are real life monsters and villains out there, we need to prepare ourselves and her for that as well!\" \n\n\"There are real life knights as well,\" Livy smiled touching Alex's face. \"One is here in this bed, the other is probably with my daughter caring for her, with the same love he showers you with!\" \n\n\"My Gavin is what men should aspire to be,\" Alex smiled with a nod. \"But even he is not perfect. He is only perfect...for me.\" \n\n\"What the hell is that?\" Livy asked her eyes staring at Alex's throat. Alex touched where Livy's eyes were locked. She felt the choker. She had forgotten it was on. She smiled sheepishly. This was her collar, the one she was supposed to wear at parties to show she was owned, but there is no way she could tell her sister that! \n\n\"This is another Christmas gift,\" Alex smiled as she touched it with her sister. \"The man is just going to spoil me rotten!\" \n\nThis caused Livy to laugh with Alex, the final release of the pain for the night. \n\n\"Do you think the stones are real?\" Livy asked her in disbelief. \n\n\"I know my Gavin,\" Alex nodded. \"It's real.\" \n\n\"Holy shit!\" Livy gasped which made Alex laugh as Livy rarely swore. \n\n\"I had the same response,\" Alex giggled. \n\n*** \n\nOnce Livy had finally fallen asleep, exhaustion from her pain filled night finally taking over. Alex watched her sister sleep for a few moments. She felt so sorry for her sister, she wanted to drive to Pennsylvania and beat the shit out of Don, but that wasn't going to happen. \n\nShe then thought the worst of worsts, what if Gavin left her? The thought snuck into her mind and caused as much damage as it could before she was able to push it out. If she thought that was a possibility, then it would poison the relationship. When she first entered this relationship, Gavin told her he would earn her trust. At the time she thought that meant sexually, now looking back, it meant she would have to trust him with everything. \n\nEasing out of bed to not wake her sister, she quietly closed the door to the bedroom and went to the master bedroom where Gavin was. She quietly opened the door hoping Nora was asleep, she found them both asleep. She closed the door and leaned against it for a moment. Looking at Gavin as he held her niece protectively by his side. \n\nA small smile crept across her face as she touched the necklace, she reached back and removed it. Finding the box for it she put it up and looked at it for a few seconds. It was a dream, all of this must be some elaborate, fantastically magical dream. One she hoped she never woke up from. \n\nShe eased into her side of the bed and Gavin opened his eyes, he looked to Nora then back to Alex. Shuffling closer to them she draped her arm over Gavin and he did the same with her forming a bridge of protection over Nora. \n\n\"How is she?\" Gavin whispered. \n\n\"She has decided on the big 'D',\" Alex frowned. \n\n\"Well that is unfortunate, but really, it's the only logical decision,\" Gavin whispered. \"She forgave him once, this is not something that is forgivable in my opinion.\" \n\n\"I agree,\" Alex said with a small tear. Gavin caught it before it fell. \n\n\"Giving you doubts on marriage?\" Gavin asked her. \n\n\"On marriage? Yes. On you? Absolutely not,\" Alex admitted firmly. \n\n\"I love you,\" Gavin told her and the words melted her. \"I only need you.\" \n\n\"What about a little one like this?\" Alex smiled with a nod towards Nora. \n\n\"One or two,\" he smiled. \"As long as we buy a lock for the bedroom door!\" \n\nThis made her giggle in remembrance of the panic she felt that Nora almost caught them in the middle of their sinning. \n\n\"You are so good with her,\" Alex lauded. \n\n\"I want one,\" he smiled. \"Not right away, but soon.\" \n\n\"I want to give you one,\" she smiled. \"Boy or a girl?\" \n\n\"I don't care,\" he said kissing Nora's head as she mumbled in her sleep. \"Healthy, happy, and looks like you, that are my only requirements.\" \n\n\"I want him to look like you,\" Alex countered. \n\n\"Him?\" Gavin smiled. \n\n\"Him,\" she said firmly. She wanted the dream. The full dream. Gavin, her and a son. \n\n*** \n\nAlex woke the next morning but Gavin had changed positions. He was no longer on his side of the bed, he was behind her and Nora was sprawled out on his side. Nearly sideways in the bed. She felt him against her backside and smiled. It brought back the memories of how close she was to pleasing him completely. \n\nShe reached out and stroked Nora's hair softly. \n\n\"You are going to wake her,\" Gavin's warm voice said from behind her. \n\n\"Nothing can make you forget about your problems like looking at an innocent child,\" Alex told him. \n\n\"Agreed,\" Gavin said nuzzling her neck. She rubbed her backside in a tease against his groin. \"Hey now!\" he warned. \n\n\"Sorry Sir,\" she smiled. \"I was just stretching!\" He kissed her from the side. \n\n\"How do we help her?\" Alex asked him. \"Livy is going to need a lot of help.\" \n\n\"With whatever she needs,\" he turned her head with his fingers. \"I want you to listen to me, this is not up for debate, or refusal...if she needs something you take care of it, I don't care the cost.\" \n\n\"Gavin,\" Alex closed her eyes. \"I can't spend your money like that!\" \n\n\"You need to stop thinking of it that way,\" Gavin told her. \"She needs lawyers, she needs a place to live. She needs a do over in life. That won't be easy emotionally, the last thing she needs is to worry about how to pay for it.\" \n\n\"But it's your money,\" Alex argued softly. \n\n\"And I can spend it how I see fit,\" Gavin said firmly. \"I have the means, so take care of her. This is not up for debate, Little One.\" \n\n*** \n\nGavin was pulling a jacket on Nora as she smiled and hopped excitedly. \n\n\"Where are you two going?\" Livy's voice stopped her from hopping. \n\n\"Uncle Gavin is taking me to the Aquarium!\" Nora yelled. \n\n\"He is?\" Livy forced a smile. \n\n\"Chicago has a great aquarium,\" Gavin told her. \"Thought you and Alex could do some retail therapy, maybe a nice lunch.\" \n\n\"You don't have to Gavin!\" Livy gasped. \"You have your work!\" \n\n\"I have taken the day off,\" Gavin told her. \n\n\"A day off?\" Livy asked. \n\nShe was surprised as Alex had mentioned he didn't have off days with the type of physician he was. He only had days he may not work, for him to take an off day would take some sort of miracle. \n\n\"Yeah, it's a first for me,\" Gavin nodded. \"Alex has been hounding me to do some days off.\" \n\n\"C'mon Uncle Gavin!\" Nora pulled. \n\n\"Gotta go,\" Gavin winked. \"The boss said it's time!\" \n\n*** \n\nSitting in the food area of Shedd Aquarium, Gavin realized just how out of shape he was. He could barely keep up with the \"Energizer Bunny\" who seemed to run from tank to tank. The only time he got her to sit down was during the dolphin show they went to, and that was only when she wasn't jumping up and down in front of her seat. \n\nThey were planning their next move, they had seen all of the aquarium and now were debating a trip to the Adler Planetarium or the Field Museum. She was debating in her head after he gave her the choices. \n\n\"Uncle Gavin,\" Nora said after wiping her mouth off with her hand that had him grimacing and touching up her face with a napkin. \n\n\"Yes,\" he smiled with a shake of his head. \n\n\"Are my mom and dad going to get a divorce?\" she asked and he frowned that she would even know to ask the question. \n\n\"Where did you hear that?\" Gavin asked her, concerned that he heard he and Alex last night. \n\n\"I heard Grandma and Aunt Krista talking about it,\" Nora said looking at him. \"What is it?\" \n\n\"Um,\" Gavin stalled as his brain argued with itself whether he should address the question. \n\nHe let out a deep sigh. Perhaps it would be better for him to discuss it with her, that way she got the unclouded truth. Not the truth according to the religious zealots in Pennsylvania. Not the sad truth from Livy who probably couldn't get through it without collapsing in a fit of tears, understandably. \n\n\"A divorce is where a couple who are married, say they don't want to be married anymore. They decide to live separately,\" Gavin explained carefully watching the little girl's response. \n\n\"So they don't live in the same house?\" Nora asked. \n\n\"That's part of it,\" Gavin agreed. \n\n\"My mom and dad don't live together anymore,\" Nora pointed out. \"So they are divorced?\" \n\n\"No,\" Gavin struggled. \"It's more about going to court and telling a judge that you don't want to live together anymore. Then the judge decides who gets what. Who gets the house, the car, any money they have.\" \n\nHe was trying to explain it in a way that she would understand. But how do you explain to a six year old something most adults don't understand. \n\n\"Most of the time,\" Gavin continued. \"Everything gets divided in the middle and everybody gets half.\" \n\n\"What will happen to me?\" Nora asked, the quiver of fear in her voice was impossible to miss. \n\n\"You will stay with your mom, most of the time, then visit your dad too,\" Gavin assured her. \n\n\"Where will we live?\" Nora asked. \n\n\"I don't know,\" Gavin shrugged. \"You and your mommy will have to find someplace new to live, I guess.\" \n\n\"And daddy will live with his new girlfriend?\" Nora asked. \n\nThis felt like a kick in the groin to Gavin, it made his stomach turn. How is this little girl supposed to deal with that knowledge? He suppressed the growl that was dying to get out of him. \n\n\"I don't know what your dad will do,\" Gavin told her. \n\nShe stabbed at her Dipping Dots ice cream with her spoon for a few moments and Gavin hoped she wouldn't ask any more questions. \n\n\"Are they getting a divorce because of me?\" The question crushed his heart before it was fully out of her innocent lips. \n\n\"Look at me,\" Gavin commanded as he moved to kneel on the floor in front of her. \"Listen very carefully to what I'm about to tell you.\" He picked up her hand and put it on his chest. \"Do you know how the police know when you are lying to them?\" She shook her head. \n\n\"They put a machine on you that measures your heartbeat,\" Gavin told her. He continued to hold her tiny hand to her chest. \"Can you feel my heartbeat?\" She nodded with a smile. \n\n\"If you lie, your heartbeat speeds up,\" he told her. \"Your breathing speeds up. Do you understand?\" She nodded. \n\n\"Then know what I'm about to tell you is the truth,\" Gavin said firmly. \"My heart won't let me lie to you, you will be able to tell...your parents getting a divorce has nothing to do with you. It is not your fault, it is theirs. I can't explain it, other than to say, sometimes...people decide they don't love one another anymore. They begin to fight a lot. They stop talking to one another, they stop doing things together.\" \n\n\"When that happens, they get a divorce,\" Gavin said strongly, holding her hand to his chest. \"It never has anything to do with the children they have. You are just caught in the middle. They both love you, very much! But they can't stay together and be happy. So they decide to live apart, be happy and love you.\" \n\n\"This is not your fault,\" Gavin repeated. \"This is your parent's fault. Your mom and dad's. No one else. They made the decisions to get them to this point.\" \n\n\"Do you understand me?\" Gavin asked her. She nodded, her tears hovering on the edge of her eyes. \"Am I lying to you?\" She looked to him and smiled. She shook her head. \"It didn't speed up, did it?\" She shook her head. \"I swear to you, this had nothing to do with you.\" \n\nChapter 31* \n\n\"Oh my gosh!\" Nora gushed as Alex came out of the bedroom. The white dress was flowing from her body like a wedding gown. She wanted to run to her Aunt but Livy stopped her. \n\n\"Not with your grimy hands!\" Livy laughed. \"You will put hand prints on her.\" \n\n\"You look beautiful,\" Nora smiled as she hopped on her knees on the couch. \n\nAlex turned a full turn, she left the back of her dress to them. \n\n\"Too much?\" She asked her sister. \n\n\"I think it is the most drop dead gorgeous dress I have ever seen!\" Livy said with a shake of her head. \n\nAlex looked at the mirrored wall. The white dress was a halter top type. It opened down the front, revealing her belly button. The two sides of the silk dress held together with soft lace. The back was completely open, her skin showing all the way down to about a half inch above her hips. \n\nThe diamond and sapphire choker was already on, she touched it with a smile. Her collar, the one of ownership. Gavin came out in is tuxedo and Livy whistled at him while Nora tried to whistle like her mother. \n\n\"Thank you ladies,\" Gavin bowed at them. He looked to Alex who smiled at him. He scanned her from head to toe and shook his head in disbelief. \n\n\"Uncle Gavin,\" Nora said drawing his eyes from Alex. \"What do you think of Aunt Alex? Isn't she gorgeous?\" \n\n\"I think,\" Gavin began slowly looking back at her. \"That God has put an Angel here to keep me company! And gorgeous doesn't begin to describe her.\" \n\nThis made Nora laugh as she covered her mouth in happiness. \n\n\"Now,\" Alex smiled at them. \"You guys enjoy the New Year.\" Alex said kissing them both while they sat on the couch. \n\n\"Happy New Year,\" Gavin said kissing Nora on the head and then Livy on the cheek. \n\n\"You guys have fun!\" Livy said with a tinge of jealousy. \"See you next year!\" \n\nThe couple laughed over their shoulders as they left the condo. \n\n\"They look like they were going to get married!\" Nora smiled. \n\n\"Oh,\" Livy smiled pulling her daughter on her lap. \"I can't wait to see that dress!\" Referring to the wedding gown. \n\n\"Aunt Alex looked just like a princess with her necklace!\" Nora raved. \n\n\"She did,\" Livy agreed. \n\n\"That must mean Gavin is Prince Charming!\" Nora looked up at her mother. \n\n\"He absolutely is,\" Livy whispered kissing her daughter's nose. \n\n\"Are there any more?\" Nora asked. \n\n\"I'm sure there is!\" Livy assured her. \n\n\"I love you mommy,\" Nora said softly kissing her mother's cheek. \"We will be fine on our own!\" \n\nLivy looked to her. \n\n\"I know you and daddy will get a divorce,\" Nora said softly as her mother began to tear up. \"But I will always love you, and as long as you always love me, we don't need anything else!\" \n\n\"I will love you all the way to my last breath!\" Livy said strongly. \"Together, we will be just fine!\" \n\nNora put a strong hug around her mother's neck and held her as her mother held her tiny body tightly in her arms. \n\n\"Me and you, mommy,\" Nora whispered. \"Me and you!\" \n\n*** \n\nAlex and Gavin arrived at Madelyn's party with smiles on. They had teased each other all the way over. \n\n\"Oh my!' Madelyn raved as soon as she saw her. Alex did a quick turn giving her the full view. \"Shall I get the chair and the whip right now?\" She asked Gavin who furrowed his brow in confusion. \n\n\"You are going to be fighting off the animals with her looking like that!\" Madelyn gushed. \n\n\"Oh,\" Gavin laughed as Alex shook her head with a blush. \n\n\"Now,\" Madelyn smiled looping her arms around both Alex and Gavin. \"I want you on your best behavior tonight!\" \n\nShe said this looking at Gavin. \n\n\"Why would I not be?\" Gavin scoffed. \n\n\"Royce is here,\" Madelyn told him. \n\n\"Why would I care?\" Gavin asked her, his tone said everything as both women looked at him. \n\n\"The last time you two were in my house, you would have killed him,\" Madelyn pointed out. \n\n\"I promise to behave!\" Gavin said with his hand up in a mock swearing in. \n\n\"That's all I'm asking,\" Madelyn told him. \n\nStanding in the doorway to the grand ballroom, Alex looked around and found Kelly who waved. She waved back just as some men called Gavin over. \n\n\"Go on your way for now,\" Gavin said kissing her neck, just under her ear. \"I will go mine, but I don't want you away from me tonight.\" \n\n\"Yes Sir,\" she smiled. \"I won't be long.\" \n\nShe walked over and picked up a glass of champagne as she went. Arriving where Kelly, Lauren and Janna stood. \n\n\"Don't think for one second, that just because we like you, doesn't mean we won't find some room and jack that necklace off you!\" Lauren threatened with a broad smile. \n\n\"No shit!\" Janna laughed shaking her head as she stared at it. \n\nKelly slipped her hand into Alex's and held it. \n\n\"It's absolutely stunning!\" Kelly gushed touching it. \"Between that dress, your body, and that necklace, there isn't a tongue that isn't on the floor, or panties that aren't wet!\" \n\n\"For those of you wearing panties,\" Alex teased, just before taking a sip of champagne, which caused the girls to cackle at her allusion that she wasn't wearing any. \n\n\"How is it going?\" Janna asked her. \n\n\"I want to thank you guys so much!\" Alex said to them. \"You guys really helped me out!\" \n\n\"So the advice we gave you helped?\" Janna asked. \n\n\"Immensely!\" Alex assured her. \n\n\"Hand over the necklace and we will call it even!\" Lauren laughed getting a closer look. \n\n\"Or Gavin for a night!\" Kelly teased. \n\n\"No,\" Alex said to Lauren. \"And hell no!\" Alex laughed to Kelly. \n\n\"Did you see Beth?\" Kelly asked carefully. \n\n\"No! Is she here?\" Alex smiled. Kelly tilted her head and Alex looked to where she was pointing. Alex had to do a double take, it barely looked like her. \n\nGone was the long flowing locks of raven hair that Alex admired so much. Elizabeth had cut her hair very short, and the makeup she normally wore lightly was now much heavier. She had lost the regal look that Alex loved so much. She was very thin still, not gaining any weight back from her flu. \n\nRoyce stood off the side, a leash hooked to her collar as she stood there looking defeated while she looked to the floor. While Royce laughed and joked with the men around him having a grand time it appeared. She talked and joked with no one. Standing alone in a crowded room. \n\n\"What's with the fucking leash?\" Alex growled, thinking of the sheer amount of disrespect that included. She had seen it before, but not on someone like Elizabeth. \n\n\"Some Dom's do that,\" Janna frowned. \"You don't normally see that with an accomplished sub at a party such as this, but it's done.\" ",
        "\"Horrible!\" Alex gasped. She started to walk over, when Janna stopped her by gently taking her arm. The fire flashed through Alex's eyes, but Janna smiled sympathetically. \n\n\"Where are you going?\" Kelly asked her. \n\n\"I'm going over to say hello,\" Alex told them with an anger that said this was not just a 'hello' moment. They looked to one another. \n\n\"Be respectful,\" Lauren cautioned. \n\n\"I will be,\" Alex laughed trying to act casual. \n\n\"She means,\" Janna clarified. \"Ask permission to talk to her.\" \n\n\"Why?\" Alex asked. \n\n\"It could be a punishment,\" Lauren told her. \"The leash, it could be a type of punishment.\" \n\n\"Ok,\" Alex said softly. \n\nThen everything hit her, this was not the time and place to campaign for Elizabeth to rethink her choice in Doms. Not that she wanted Elizabeth back at the condo, not that Gavin would take her back. She knew that this was Madelyn's home. This was a lifestyle of respect. She may not agree with all of it, but she had to respect all the choices of the parties involved as they respected her and Gavin. \n\n\"So I need to ask Royce for permission to talk to her,\" Alex frowned. \n\nThat was not what she wanted to do, talk to the one man who gave her pause in this lifestyle. But this was Elizabeth's choice, a poor one, but it was her choice. She thought back to what Gavin had told her back in Pennsylvania, with her mother and father. If you respected one, you had to show some modicum of respect for the other. So much of what Gavin was telling her was useful in both worlds she lived in. The Vanilla, and the BDSM world. \n\n\"Yes,\" Kelly said carefully. \"You will have to talk to that asshole!\" Alex nodded and patted her hand. \n\nKelly didn't want her to go over, it was evident in her voice. But if she knew Alex better, she knew she had to go over. Even Alex couldn't explain why she had to go over other than loyalty. \n\nWalking up to the group of men, they stopped talking to each other and all eyes fell on her as she approached. Royce turned his eyes to her and gave her a solid once over. His smile twisting in pleasure as she bowed her head respectfully. \n\n\"Excuse me, gentlemen,\" Alex said with her eyes on the floor. \"Master Royce, may I speak with your sub?\" \n\nRoyce smiled as he thought of the things he would like to do to Alex, the list was endless. Alex waited. She could feel his dirty eyes on her, she could feel him undressing her. Feel his eyes as he imagined her in positions she didn't want to think about with him. She didn't want to be within fifty feet of this disgusting scum bag, but she wanted to check on Elizabeth. \n\nThe seconds seemed like minutes as she felt him undress her, not that there was a lot of imagination necessary for the dress she wore, but she wore the dress for one man and one man only. And this one wasn't it, if you could even call him a man. \n\n\"Royce,\" came a firm voice. One of the men he was speaking with drew his eyes from her. \"The young lady has asked you a question, do not disrespect her or her Dom.\" The man said firmly. \n\nAlex recognized him from the other two parties. He was always surrounded by people. Gavin had told her he was a money man. One that had the financial clout to make or break people. Evidently Royce was schmoozing the man. \n\nAlex took a chance and peeked at the man coming to her defense. He seemed perturbed at the way Royce was looking at her. He was definitely more along the line of Gavin's way of thinking than Royce's, and that was respect above all else. \n\n\"Of course you may, Alex,\" Royce smiled at her. He reached over and undid the leash from Elizabeth's collar. \"Don't be too long.\" He said to Elizabeth. She nodded. \n\n\"Thank you, Sir,\" Elizabeth whispered. She started to move away, but stopped when Alex didn't move. \n\n\"Thank you, Sir,\" Alex said with her head down. She then turned to the man that spoke for her on her behalf. \"Thank you, Sir,\" Alex said bowing her head to him. \n\n\"The pleasure was all mine,\" the man bowed his head back at her. \"If I might be so bold, you Dom is a very lucky man!\" \n\n\"You flatter me, Sir,\" Alex smiled politely. \"When I am the lucky one for my Sir! Happy New Year.\" \n\n\"Happy New Year,\" the men in the group replied. \n\nAlex guided Elizabeth away and lost her smile as she pulled Elizabeth to the bar. \n\n\"How are you?\" Alex asked her losing her grace and charm. \n\n\"I'm fine!\" Elizabeth assured her. \"I love that dress! And that necklace is amazing!\" \n\n\"Thank you,\" Alex frowned. She realized Elizabeth was fully into denial mode, switching the subject from her to Alex. \"It was a Christmas gift.\" \n\n\"He never showered me with such luxuries,\" Elizabeth said twisting her lips. Elizabeth touched the necklace with her fingers, her regal smile much more of that of a beauty contestants. There, but not real. Make believe. \n\n\"What is with the leash?\" Alex asked not responding to the statement reading the smile easily. Elizabeth's jealousy coming back up, like at the restaurant with Lena. \n\n\"Oh,\" Elizabeth shrugged. \"It is a punishment.\" \n\n\"For what?\" \n\n\"For not being where I was supposed to be!\" Elizabeth laughed. \"I was grounded and I went out for groceries, when he came over, I was gone and I wasn't supposed to be!\" \n\n\"So he put a leash on you?\" Alex asked. \n\n\"To remind me to stay where I'm supposed to be!\" she winked at Alex. She saw the emphatic roll of Alex's eyes. \"Don't tell me Gavin hasn't punished you in some odd manner!\" \n\n\"He hasn't,\" Alex said firmly. \"And you know better, this is beneath Gavin.\" \n\n\"Oh, I forgot! You're little Miss Perfect!\" Elizabeth drawled her temper bubbling to the surface. \"Miss Alexandria would never do anything wrong!\" \n\n\"I never said I was perfect,\" Alex growled at her. \"I've suffered some consequences.\" \n\n\"Yeah, it looks like it!\" Elizabeth pointed out taking hold of her collar. \n\n\"I can't dictate what I wear for ownership, obviously any more than you can!\" Alex pointed out taking hold of her collar. \"Why are you acting like this?\" \n\n\"Why do you insist on rubbing in the fact that Gavin cares for you more than he did me!\" Elizabeth suddenly raged. It caused those around them to look at them. Alex looked around and realized they were drawing attention. Attention she didn't want. \n\n\"I'm not doing that,\" Alex pointed out softly. \"You are believing that.\" \n\n\"Really?\" Elizabeth growled. \"Driving around in your little Mercedes, with your expensive dresses and expensive jewelry. Getting your friends jobs! Didn't think of the one friend that brought you into this life, did you?\" \n\n\"I didn't know anything about you being out of a job, nor did Gavin,\" Alex defended. \"I didn't even know Gavin was getting Lena that job, I was recovering from pneumonia when Gavin decided to help her!\" \n\n\"Well it's a good thing you have a doctor to take care of you!\" Elizabeth hissed. \n\n\"You chose to leave,\" Alex pointed out, her anger seeping out. \"I didn't force you out!\" \n\n\"Oh, no?\" Elizabeth smiled falsely. \"How could I possibly stay with the way he was looking at you? The way he was bending over for you? Violating his precious absolutes!\" \n\n\"What are you raving about?\" Alex asked her totally confused. Elizabeth shook her head and pouted. Alex shook her head and leaned into her. \n\n\"Just remember,\" Alex told her as she got close. \"The first absolute he violated, he violated for you!\" \n\n\"What?\" Elizabeth growled. \n\n\"He violated his absolute of only one sub, because you brought me in,\" Alex pointed out. \"He didn't even know me, he violated that first absolute, for you.\" Alex shook her head. \"Remember he asked you if this would please you, he didn't ask me anything until you told him that you wanted me to be a part of your lifestyle.\" She watched the recognition wash through Elizabeth's eyes. \n\n\"It was your choice to leave as well,\" Alex said firmly her eyes screaming at Elizabeth with anger. \"Gavin's absolutes dictate that. You ended it. You wanted to get high, instead of being spoiled by a perfect man. You wanted the illusion of power.\" She shook her head as she regained her composure. \n\n\"Happy New Year,\" Alex said sorrowfully. \"I hope it gives you what you want!\" \n\nAlex stormed away and blew past Kelly who tried to stop her, but she shrugged her off. \n\n*** \n\nGavin looked around the room but couldn't see her. He saw Kelly and her two friends that Alex had gone over to, but he didn't see her. He continued to debate with the men in his group keeping an eye out for her. He assumed she had gone to the restroom, or perhaps Madelyn had kidnapped her for one reason or another. \n\nA few minutes passed and he saw Madelyn, but she was not with Alex. He finally began to get concerned they may have been a problem at home and Alex was on the phone. He decided after twenty minutes it had been long enough. His concern meter was on overload. \n\nThe three subs bowed their heads as he approached. \n\n\"Miss Kelly,\" Gavin said drawing her eyes to him by tilting her head up with a finger under her chin. \n\n\"Yes Sir?\" \n\n\"Have you seen Alex lately?\" he asked her. \"The last I saw her she was over here with you three ladies.\" \n\n\"No,\" Kelly frowned. \"Not since she talked to Beth.\" \n\nGavin looked over at his former sub, she was looking at him, but tilted her head down when he looked over at her. \n\n\"She seemed angry after the conversation,\" Kelly admitted. Gavin took a deep breath and let it out slowly. \n\n\"Ok,\" Gavin nodded. \"Thank you.\" He started to walk away then stopped and went back to her. \n\n\"Kelly?\" Gavin started. \"I wanted to thank you for your advice to Alex, I don't know how much of the story you know, but I wanted you to know that I appreciate your guidance to her.\" \n\n\"It was my honor,\" Kelly smiled. \"At first I was worried that you were sending her out to learn something you could have told her yourself, but I guess you have your reasons.\" \n\n\"I do,\" he nodded. \"Sometimes knowledge worked for and attained is better remembered.\" He explained to her. \n\n\"Yes Sir,\" Kelly smiled at him understanding fully now. \"She is pleasing you then?\" \n\n\"She always has,\" Gavin told her. \"The knowledge I wanted her to attain was for her own personal satisfaction, not mine. She was pleasing me before, she has always been pleasing. I just wanted her to find the pleasure I have.\" \n\nGavin began to look around the house for Alex, going into the bustle of the kitchen had them all stopping to look at him. \n\n\"Charles,\" Gavin called out when he saw him. \"Have you seen Alex?\" \n\n\"No, Sir,\" Charles frowned. \n\n\"She is on the back veranda,\" one maid called out to him. \n\n\"Why is she on the veranda?\" Charles barked suddenly. \"A guest on the back veranda in this cold?\" \n\n\"Its fine,\" Gavin said to Charles, it seemed that Alex had endeared herself to more than just him. Then again, anyone who would meet Alex could be easily swayed by the beauty first, then the personality would overwhelm them. It was easy to like Alex. \n\nAlex stood looking up at the moon. The night air was bitter cold, her dress hardly a worthy adversary for the temperature, with its thin material and openness to showing her flesh. Gavin's jacket made it around her shoulders before his scent did.  \n\n\"This is how you wind up with pneumonia,\" Gavin said firmly. \n\n\"I'm sorry,\" Alex whispered. \"I needed some fresh air.\" \n\n\"What's wrong?\" he asked her moving along side of her. \n\n\"Elizabeth,\" she frowned. \n\n\"What about her?\" \n\n\"Did you see her?\" Alex asked him sticking her arms through his sleeves. \n\n\"I did,\" he said not looking at her but his twisted frown told her he didn't approve of her appearance. \n\n\"She doesn't look like herself anymore,\" Alex pointed out. \n\n\"Addiction does that,\" Gavin said, the temperature in his voice rising with his anger. \n\n\"Addiction?\" \n\n\"All too familiar for me,\" Gavin said. \"The drastic appearance changes, the weight loss, the hygiene, all signs of her addiction. She will now, no doubt, be suffering from drastic mood swings, then she will start disappearing...,\" Gavin clamped his mouth shut and shook his head. \n\n\"I'm sorry,\" Alex said rubbing his back. \n\n\"There is a reason they call drugs a controlled substance,\" Gavin told her with a shrug, trying to lose the anger and the bad memories as they flooded his mind. \"People don't realize it has a double meaning. Yes it's monitored, but the darker side knows that the substance controls you.\" \n\n\"Elizabeth will lose herself, little by little, her appearance is the first thing. Drastic weight loss, then she will stop taking care of herself like she used to. Showers, eating, sleeping, all will take a back seat to her new Dom and it's not Royce.\" \n\n\"She will start lying, from the simple things she forgot, to more complex lies as she tries to cover for herself. She will begin to disappear for long periods of time as she won't wait to get home to do her drugs, she will need it so bad she will do it wherever she finds them.\" \n\nGavin walked down the memories of his life with Carla, she did every one of the things, and he found during her treatments, that those who loved them suffered as he suffered. The lies and the struggles. \n\n\"One day she will wake up and she won't ever recognize herself, but by then it will be too late, there will be no coming back,\" Gavin said softly. \"Did you know that heroin addicts relapse between eight and ten times before they get clean. If they ever do that is.\" \n\n\"About half of those who get help, go back within the first two years,\" Gavin continued. \"The really bad number? Only about a third of those who stay sober for a year, will maintain their sobriety. Once you are an addict, you are always one step from being and addict again. It's a constant fight, one you never really win. You fight every day, if you make it to old age and die of natural causes, then you've won. I've not met an addict yet that has found that type of victory.\" \n\n\"I'm so sorry,\" Alex whispered. \n\n\"It's not your fault, you are concerned about her,\" Gavin told her with a soft hand to her face. \n\n\"And you're not?\" Alex asked him. \n\n\"No,\" he frowned, he was concerned Alex may be hurt that he wasn't more concerned. \"I refuse to go down that road with her. I can't...I just can't. Look how long it took for me to recover from Carla...it took years! And you.\" \n\n\"Did I push her out?\" Alex asked him, turning to look at him. \n\n\"Elizabeth chose to leave,\" Gavin said firmly. \"You had nothing to do with it.\" \n\n\"She thinks I pushed her out, because you liked me more than her,\" she informed him. \n\n\"I do like you more than her,\" Gavin shrugged. \"But her choices were to stay with us, or drugs. She chose drugs.\" \n\n\"That's not much help for my conscious,\" Alex pointed out. \"If the drugs weren't an issue, would I have pushed her out?\" \n\nGavin said nothing for the longest of time and it unsettled her. She said nothing as she watched him think. \n\n\"If she wasn't looking for an out to begin with?\" Gavin asked her. \n\n\"What do you mean?\" Alex came back. \n\n\"Keep in mind, I knew she was looking for a way out. She was looking for the opportunity to make her way from being my sub. I had done all I could do for her, she wanted more,\" Gavin said with a shrug. \n\n\"I know now, that the relationship we had wasn't the only thing she wanted more of,\" Gavin said leaning on the railing. \"Seeing her now, well it confirms that it wasn't me that was the problem.\" \n\n\"How could you ever be the problem?\" Ales asked him with a gasp. \n\n\"Again, this relationship is about pushing boundaries,\" Gavin said over his shoulder. \"I thought I had pushed her as far as I could with the sexual sessions, she wanted more pain, more than I was willing to inflict. When she started to become unhappy I thought it was me, so I knew it was a matter of time until she decided to move on.\" \n\n\"Then the night of your art show, I found out it wasn't me. She wanted the drugs,\" Gavin frowned. \n\n\"What do you mean?\" Alex asked him. \n\n\"That night, she told you she had hurt her foot, remember?\" He asked her. She nodded. \n\n\"She hadn't hurt her foot, she had an infected injection site in between her toes,\" Gavin said softly. \n\n\"She had an injection site in between her toes?\" \n\n\"Very common for those trying to hide the fact they are using,\" Gavin nodded. \"A puncture mark in the arm is easily noticeable. So they go to injecting in between their toes, the only problem with that... feet are dirty, so it's easy to get infected.\" \n\n\"The injection site was infected, she needed a strong antibiotic to heal it,\" Gavin finished. \n\n\"At first I thought it was because I had pushed her as far as I could with our sessions,\" Gavin sighed deeply. \"But that was only part of it.\" \n\n\"You're confusing me,\" Alex admitted. \n\n\"There are those that are into the pain,\" Gavin frowned. \"I'm not into it, I know there are some things I am willing to do, and there are a lot of things I'm not willing to do. Causing a great deal of pain isn't something I'm overly interested in.\" \n\n\"Hence the reason you became a doctor,\" Alex pointed out. \n\n\"That's part of it I'm sure,\" Gavin nodded. \"Elizabeth wanted rougher sex, she wanted more pain. It got to the point she only wanted the pain. That happens from time to time. Elizabeth was into the Masochism part of our lifestyle, while I have sadistic tendencies, they have a purpose. She even started arguments just so I would punish her. I had to change the way I punished her just because I knew she was doing it to please herself.\" \n\n\"I don't inflict pain because I enjoy it, I abhor it. I'm not sadistic by nature, I do some things, like mark you. Some may take as sadism, but I don't look at it that way. I know that some pain brings higher sexual gratification which I know sounds conflicting, but it's the fine line I walk.\" \n\n\"So she wanted you to be more sadistic?\" Alex asked him. He nodded with a grimace. \n\n\"Something I couldn't do for her,\" Gavin said with a shrug. \"I have my limits, everybody does, which is why there is some turn over in our lifestyle. Some reach their limits before their partner, then that becomes a problem. They separate and move on to someone else. Royce, as you have witnessed, has no problem in sadism, he's reckless with it. But being more sadistic isn't a bad thing if you have the right sub.\" \n\n\"I'm guessing, Elizabeth is the right sub for him, he is more advanced than she is, in terms of pain, and if he was a half decent Dom he would bring her along slowly until she reached her full potential. To know him like I do...well I hope she is a quick adapter,\" Gavin frowned. \n\n\"Ok,\" Alex nodded. \"So if she wasn't going to be moving on, if you didn't know that. Would I have pushed her out?\" \n\n\"No,\" he said firmly. \"I would have never given you the opportunity to do so.\" \n\n\"What?\" Alex asked tugging on his arm. \n\n\"My absolute would have won out,\" Gavin told her. \"I wouldn't have brought you on, I don't share myself with others any more than I would share my sub with others.\" \n\n\"So I did push her out?\" Alex asked. \n\n\"Absolutely not!\" Gavin growled. \"She wanted out, she brought you into this. I didn't bring you into this. Elizabeth did. She was looking for an out, you presented her with that opportunity. Now, did we take advantage of the situation? Of course we did, did either of us expect it to lead us where we are now?\" He shrugged as he pulled her into his arms. \n\n\"She is on the outside because she did everything in her power to be on the outside,\" Gavin assured her. \"She wanted the drugs, she wanted Royce. She wanted the illusion of power. Well she got what she wanted, now if she is regretting it, that isn't my fault. It most certainly isn't your fault. It is hers, and only hers.\" \n\n\"I guess you're right,\" Alex said snuggling into his chest. \n\n\"You guess?\" Gavin teased. \n\n\"Alright,\" she smiled. \"You are right.\" \n\nAlex felt his hands move up and down her bare back. ",
        "\"Any chance I can get you to come back inside?\" he asked her. \n\n\"Yes,\" she smiled. \"But only if I can stay with you.\" \n\n\"Always,\" he smiled. \n\nGoing back inside, he took her near the fire so she could be warm. Leaving his jacket on her until she was warm. She then gave it back to him. \n\nAs the night wore on closer to midnight, Alex would talk to Kelly and the girls as they came over. Gavin with the guys but they were never more than a few feet from each other. She liked that. \n\nAt the stroke of midnight, they were side by side, counting down with the crowd. The anger from earlier long gone. As the confetti flew in the air and the balloons rained down Gavin took hold of Alex's face and smiled at her. \n\n\"Happy New Year,\" he whispered as he lowered his lips to hers. \n\nKissing her deeply made her knees weak. This wasn't a quick kiss she had gotten from other boyfriends at this time of year. This was a deep kiss of passion, it took several seconds and made her tingle from her toes up. \n\n\"Happy New Year,\" she whispered back after his lips pulled off hers. \n\nAs the New Year song of 'Auld Lang Syne' was sung in the room, Gavin and Alex shook hands and hugged those around them. Madelyn kissed her like a mother would, and thanked her for coming into their lives which made her heart skip a beat. \n\nKelly hooked her arm around her and they sang together. As they sang she looked around the room, Elizabeth stood alone, her leash on her as Royce shook hands with those around them. It was almost as if she was being shunned. \n\nUnlike Alex, no one had put their arm around her. None were kissing her in celebration. She looked over on Alex with a frown of disappointment. Alex felt sorry for her, but Gavin was right. This was her choice, she chose to leave this impossibly fantastic man. Alex benefitted, and she was going to revel in it. \n\nShortly after the song ended, Royce gave her leash a tug and she followed him out of the room. Alex looked to Gavin to see if he had noticed. He frowned in opinion of it, she knew he would not approve and that comforted her. She looked to Kelly who shrugged. \n\n\"Her mistake,\" Kelly smiled as she kissed her cheek. \"Why she stays is what baffles me!\" \n\nAlex knew why. She thought Royce was going to the White House. She was going to be First Lady. She didn't appear to be first of anything as she was leaving. She seemed more like the first dog. She wondered how being an addict would affect her dream of power. \n\n*** \n\nWalking into the bedroom, she stood at the foot of the bed and kissed him while pushing his coat off of him. She tugged the bow tie next and it unfurled easily. She slowly undid the buttons on his shirt, anytime new skin was made available she attacked it with her lips, his neck became a target as she pushed the shirt off of him. \n\nHis t-shirt was next, pulling it over his head. Now is muscular chest was available and she began to nibble on him. His shoulder, then his chest down to his stomach as she dropped to her knees. \n\nPulling on his belt he watched her as she looked up at him, she looked seductive there. Kneeling, the hunger in her eyes evident. Pulling his pants down Alex took him into her mouth before his pants were all the way off. He shook his head at her aggressiveness, she abandoned undressing him as she found what she wanted. He managed to kick the rest of his pants off while she sucked him. \n\nShe stood up and kissed him deeply, her tongue finding the inside of his mouth and probing. He laughed internally at her aggressiveness. He liked it. He wondered just how far she was going to try to go with it. He loved her, he wanted to please her, but his role had limits. \n\nHe undid the clasp on her dress and it fell easily to the floor. With the length of the dress and the open front and back, there was no need for underwear. So now the only thing she wore were her earrings, her bracelet which she refused to take off for any occasion, and her new collar. \n\nHe walked her to her side of the bed, with her taking backward steps as he kissed her. Gently pushing her to the bed he covered her body with his as they made love with their mouths. Each showing the other how desperately they wanted one another. She rolled him over to his back hand held his hands above his head. He smiled as she nipped at his lips. \n\n\"If I may Sir?\" she whispered. \"I feel like being aggressive!\" \n\n\"Trying to Switch on me?\" he smiled. \n\n\"If you let me,\" she smiled back. \n\n\"No,\" he said softly. \"I'm not a sub.\" \n\n\"Ok,\" she said with a broad smile, hiding her disappointment. \"Can I be on top?\" \n\n\"That sounds like fun,\" Gavin told her as he kissed her lips. \n\nShe kissed him hard, their teeth scraping in their passion. She left him as she moved up his body. Soon she was looking down at him as she straddled his head with her knees. He smiled as he lifted his head and began to kiss and suckled her sex as she hovered over him. \n\nShe continued to hold his hands above his head as she intertwined her fingers into his, her hips grinding on his lips as his tongue went into her depths. She lowered herself to ride his face and tongue harder. Soon she was grinding on his face to the point she could feel his nose brush against her clit which caused her to jerk in excitement. \n\nHer orgasm building had her rocking her hips faster, trying to satisfy herself on his face. He let her grind, more or less, just holding his tongue out so she could ride it. Losing himself in her beauty as she fucked his face with her sex. \n\nHer eyes were closed, as she bit her lip in pleasure. Her soft 'yips' coming back pleased him. It meant she wasn't concerned with anything but her pleasure. When her body began to stiffen up due to her orgasm, he attacked her ferociously with his mouth, suckling and driving his tongue into her depths causing her stomach to show its tight muscles as she held herself in her frozen orgasmic bliss. \n\nIt washed from her, and it wasn't until he felt the wetness on his chin and down the side of his cheek did she begin to move again. She slid down his body, her mouth capturing his lips once again. Tasting herself on them. \n\nShe reached between them and took hold of his cock, guiding him into her she gasped as she found his length deep within her. She began to grind on him, her sex stuck to his groin. Not lifting off, but sliding her body on his cock, still managing to get him to massage her from the inside with his shaft. \n\nShe let go of his hands and held his hair as she kissed his lips while she rode him. He brought his hands into play, running his manicured nails down her back causing her relish in the sharpness she felt. He drug them until he reached the globes of her perfect ass. One hand to a cheek and the size of his hand covered most of her small ass. He was able to let his fingers pull them apart and then guide his finger to her anus. \n\nShe bit his lip as his middle finger invaded her. He left his finger there, then began to lift and use her hips to help her drive off of him. Her moans began to fill his ear as she dropped her head to the side of his. She began to tongue his ear and bite the lobe with excitement as another orgasm washed from her. \n\nWhen it subsided she pushed off of his chest, leaving her hands on him as she dug her nails into him. She continued to set the pace with him. Her head back as her throat was pulled tight from its positioning. \n\nHe watched her, her nipples hard in the low light of the bedside lamp. Her cheeks flushed with her hot temperature from her orgasm. The smell of their sex wrapping their bodies with their excitement. \n\nShe pulled his hands from her ass and put them on her breasts as she rode him, his hands began to squeeze her tightly. Leaving white imprints of his fingertips in her excited red flesh. \n\n\"Fuck yes,\" she finally gasped. \"God I love your cock!\" She gasped as she looked down at him from her perch on him. \n\nHer auburn hair which was so neatly done up, now cascading around her face as her passion began to untangle her. Her hair first, then her muscles as her orgasm ripped through her body. Then her eyes began to hunger, to desire him more and more and she began to use his body more and more, for her own satisfaction. \n\nShe ran her hand up from digging into his chest, up to his mouth and put her fingers in and let him suck on them. She then moved from there to his hair and pulled his head up by the fistful. \n\nHe sat up and took her arms and held them behind her back as he pulled her tight to him as she continued to ride him from the sitting position. He let go of her hands and pulled her body to him as he sucked on one nipple, before attacking the other. She pulled on his hair, pulling him tightly to her bosom. \n\n\"Mark me, Sir,\" she whispered in her heat. \"Show me what a good girl I have been!\" \n\nHe wasted no time pulling her soft flesh into his mouth causing her to gasp as he marked her, just to the inside of her breast, right where it connected to the breast bone. He took his time marking her. Suckling and biting her flesh as she rode him. \n\nShe struggled to maintain her breathing as her cum flushed from her, dripping down his balls to gather in the folds of the sheets. Her hands gripping his muscular body tightly as she ground away at him as her gasps of pleasure filled the room. \n\nWhen he finally released her flesh from his mouth she let her eyes flutter open but now there was an irrepressible hunger in them. She pushed him back to the bed so she could have his cock fully in her depths again. \n\nShe began to ride him, hard, like she was in the closing lengths of the Kentucky Derby. Her hands clutching the sheets on either side of his head. Her mouth on the base of his neck as she kissed there. \n\n\"Cum for me Sir,\" she begged into his hot skin. \"I want your cum in me!\" \n\nOver and over she begged for him to fill her with his seed. It was the only thing she knew that would cool her passions. The feel of his cock deep within her bucking tightly within her recesses, coating her. He gripped her back tightly as she rode him hard, her moans of erotic ecstasy filling the room. Becoming louder and louder the harder she rode him. \n\nHe felt her teeth into his neck just as his cock began to erupt in her. \n\n\"Fuck!\" he growled as he filled her with his cum \n\n\"Yes!\" she hissed as she bit him. \"I can feel you!\" \n\nShe continued to ride him until his orgasm finished before collapsing on top of him, her breath heaving as she came down from her zenith. \n\n*** \n\nHe was standing at the mirror the next morning when he noticed it. He tilted his head and looked at it. A small purplish mark on the base of his neck where it met his shoulder. He touched it with his fingers and smiled. \n\n\"I guess I got my own marks last night,\" he shook his head. \"Well, at least it's where I can cover it!\" \n\nWalking out into the kitchen he found Livy already there with coffee. \n\n\"Started the water already, when I heard your shower going,\" she pointed out. \"Did you get any sleep?\" \n\n\"What do you mean?\" Gavin asked her pouring hot water into his travel mug. \n\n\"Well, Nora and I went to sleep about two, you two weren't home until after that, now it's just after six,\" she pointed out. He let out a soft exhale that she wasn't referring to their lovemaking. \n\n\"Well,\" he shrugged. \"It appears somebody had too good a time last night!\" He laughed referring to his early morning phone call for medical assistance. \n\n\"I guess,\" Livy shrugged. \"When are you going to sleep?\" \n\n\"Now you sound like Alex!\" Gavin chuckled. \n\n\"Well, she is right to worry about you,\" Livy defended. \n\nHe reached into his suit jacket and pulled his wallet out. \n\n\"Ok,\" he said firmly. \"You staying here isn't free, it has a cost.\" Livy looked up at him. He handed her business card. \"No arguing with me like your sister does,\" he told her firmly. \"That is the cost.\" \n\n\"What is this?\" she asked him. \n\n\"That is the business card of the best divorce attorney in Chicago,\" Gavin told her taking her hand. \"When you are ready to discuss all the details, he will answer some of the legal questions. He will also put you in touch with the best attorney practicing in your area.\" \n\n\"Gavin I can't afford something like that,\" Livy said with a shake of her head. \n\n\"You let Alex and I worry about cost,\" Gavin said firmly. She started to object. \"Look, if you want to argue with someone, try Alex, she likes arguments. I do not. So if you can win her over to your way of thinking then I will be more receptive.\"  \n\n\"There is no way I can win her over if you are both on the same page with this!\" Livy growled. \n\n\"I know,\" he smiled. \"Look, this guy is just going to answer some of your immediate legal questions, he is an old friend and he is not charging me for it. He is doing it as a favor to me.\" \n\n\"So it's free?\" she asked doubtfully. \n\n\"Yes,\" Gavin shook his head. \"He will be, the other attorney Alex and I will take care of as well, that person won't be, but this guy...like I said he owes me a favor so he will answer your legal questions. Write them down, and when you are ready, make an appointment with him. Okay?\" \n\nShe nodded. What else could she do? She couldn't go against him in his own home. And going against Alex in any argument was a lost cause. She was hoping she could enlist Gavin's help to get her to back off when the argument came of Alex's financial help she had insisted on helping her with. Now it seemed like Alex and Gavin were of the same mind."
    ],
    "authorname": "CJT",
    "tags": [
        "oral",
        "biting",
        "cowgirl",
        "rough"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-28"
}