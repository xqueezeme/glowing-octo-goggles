{
    "title": "Rewriting Singularity Ch. 21",
    "pages": [
        "Author note: Sorry that this took so long to finish. I've had a difficult time with my health (heart attack) and only recently after open-heart surgery feel better. I didn't realize how sick I'd been until now. It's a new lease on life for me. So, I give to you all, the final chapter of Rewriting Singularity.\n\n----------------------\n\nChapter 21 final chapter\n\nThe Gregorys were to arrive around two. Char and Kate spent the morning getting the rooms ready for our new guests. Hec and I shoveled and plowed out last night's new round of snow while Linden and Jorge kept themselves busy doing, well, the usual moaning and groaning. \n\nI don't think they were exercising-- at least not in the traditional sense.\n\nMe? I was getting my fair share of exercise. I read recently that shoveling snow burns 408 calories an hour. Sex burns 274 calories if you do it lying down in a phone booth and 60 more calories if you moan in Latin. And if you have a really small dick, you burn a lot more than if your dick is really big. I guess Hec and I are out of luck in that department. Or maybe good luck. I guess it depends what is most important, burning calories or a super-tight fit.\n\nI'll have to remember that Latin thing. Kate's cooking was starting to put on the pounds-- I don't think eating half a jar of peanut butter with Hec should become a regular part of my diet. \n\nOne thing about the snow here was that it was wetter and heavier than I remembered. I've never shoveled so much damn snow in my life-- it sure does snow one hell of a lot in Wisconsin. I hope their summers make up for it, because, like I told Hec, I wasn't going anywhere. At least I liked cross country skiing and the sound of snow crunching beneath my feet.\n\nI was still shoveling the front steps when Hec finished clearing the end of the driveway and grabbed another shovel to give me a hand. With both our backs at work, we had it cleared off in no time. It was one of those bright, sunny days, and the fresh snow was perfect for packing. I couldn't help myself. I picked up a handful and flung it right at him.\n\nSnowball fight!\n\nSplat! Right in the side of the head. \n\nHec dropped his shovel and retaliated. One, two, three. Damn, he was good. Nailed me each time. We were both laughing and ducking and throwing when the cab pulled up. Hec bent down and picked up his shovel and slung it over his shoulder. The cab slowed, then stopped in front of the steps, and the cab door swung open. Out came a freckle faced little old lady with white, fuzzy earmuffs and an over-sized wool coat. She stood staring at us all covered in snow. The cab driver didn't give us a second look as he got out and opened the trunk to get her suitcase. I shook my head, and the slushy-wet stuff flew around my head in a halo. \n\n\"Heccliffe?\" she said.\n\nThe shovel Hec held dropped to the porch with a clang.\n\n\"Mom?\"\n\nI remembered what Hec had said-- that he didn't know what he'd say to his parents if he ever saw them again. Well, he didn't say a thing-- just threw his arms around her, hugged her tight and sobbed.\n\nGot me crying too. \n\nThe door opened behind me and Kate came out with Char standing behind her. Next thing I knew, they were all in one giant hug, crying and laughing. After a few moments, heads cleared and each stepped back, one by one, Hec last.\n\n\"Want to come inside?\"\n\n\"Yes, son, I'd love to come inside.\"\n\n---------------------------\n\nNeedless to say, the Gregorys never came: it was Ellen who planned to come all along. Linden and Jorge stayed conspicuously hidden away, making me wonder if they knew that she was the one coming not the Gregorys. As the family mingled in the anteroom, I noted how their mother tipped her head to one side as she listened just like Kate, and how her freckles, eyes and slow smile were so much like Hec's. When she laughed, it was like hearing Char.\n\nAfter the initial ruckus, Hec stepped back and watched his sisters interact with his mother. Char swung her mom's suitcase in one arm and held her mother's big wool coat in the other. She was the one who finally asked, \"Where's Dad?\"\n\n\"He passed away last August. A heart attack at age 62,\" she answered, quietly.\n\nThe anteroom grew still. I cried silent tears for Hec-- for the father he'd never get to see or know. \n\nChar solemnly took her mother's bags to the one and only first floor room bedroom. Her reservation was only for one night. Kate asked her would she stay, would she go? Her mother smiled and told Kate this was but a short stay that she hoped would precede many longer ones. \n\n\"I have something for you-- for you all,\" she said, and reached into her patch-work purse and pulled out a letter.\n\nShe handed it to Hec. He stared at it in his hand, the envelope yellow and tattered. \n\n\"Read it after I leave tomorrow,\" she said. \"Then think about what it says. If you want to see me again, you will know how to find me.\"\n\nI, for one, wondered when someone would ask the question we all wanted to know, \"Why? Why did you leave your children?\"\n\nHec's fidgety silence told me that he was thinking the same as I. His demeanor wasn't lost on his mom either. \n\n\"I hope you can find it inside you to forgive,\" she said.\n\n\"Forgiving was never the hard part,\" Hec said. \"It was the wondering.\"\n\n\"I hope the letter answers some of your questions,\" she said. \n\n\"Why can't we read it now? Why can you just tell us?\" Char asked.\n\n\"I know it's selfish of me, but give me this time with you. After reading it, if you never want to see me again, then at least I'll havethistime with you to remember. For now, all I can say is that I'm sorry, so sorry, and that we tried to find you and that we did what we thought we had to do to keep you safe. Maybe it wasn't the right thing to do, but we did it for the right reasons.\" \n\nThey agreed not to read the letter until after she left and to spend this time with her without knowing the contents of the envelope. I didn't know what to think about it all. If it was me, I would have opened up that envelope and read it. But Hec wasn't me. He carefully folded the enveloped in half along the well-worn crease and put it in his pocket and waited for another day.\n\n--------------------------\n\nThey had the time together. They laughed and reminisced. That day I learned about the younger years: about Kate getting five stitches in her knee sliding into home plate during a neighborhood softball game and about Hec breaking his arm hanging like a monkey in the tree. I learned that Hec's first word was cookie, and when he was three he used to ask everyone he met in the supermarket to \"read me a story.\"\n\nThey talked about everything that happened before that day before Christmas when their parents left them, but said not a word about anything after. The present? They gave the usual filler information you might read on one of those copied Christmas letter: accomplishments, illnesses, deaths. When Hec got to me, Hec told her who I was, what I was to him. She never blinked, yet a deep sadness came over her. She hugged Hec tight after he told her, and she whispered something in his ear.\n\nLater that day, we said goodbye to Linden and Jorge. The girls gave them each enough kisses to last them \"until next time,\" Kate said. Linden blushed and Jorge blew kisses back as they left.\n\nThe next morning, we said goodbye to Hec's mom in the falling snow. The Wisconsin wind whipped through my coat and tossed around our hats and scarves. I stood on top of the steps of the bed and breakfast and shivered as I watched the girls wave long after the cab disappeared in the swirling snow. Hec hung his head, kicked a chunk of ice with his boot, then slowly lifted his eyes until they met mine. Amazing how one gentle smile melted me. The top step had drifted over with snow during the short time we stood there, and Hec stepped through it. I brushed the white flakes from his hair, then pulled his hands into my pockets to warm them.\n\n\"You ok, friend?\" I asked.\n\nHis eyes wavered back to his feet, then up again to mine. \"Yeah,\" he sighed, \"I think I'm gonna be ok.\"\n\nKate stepped up behind him. \"How 'bout some hot chocolate?\" she offered.\n\nWe all agreed and went inside. \n\n\"Guess we can read Mom's letter now,\" Char said.\n\n\"Guess we can,\" Hec repeated.\n\n\"I'll make that hot chocolate,\" she said. \"I guess the kitchen is as good a place as any to read it.\"\n\n---------------------\n\nHec reverently opened the envelope. Unfolded the letter and laid it out flat on the table in front of him. I blew into my hot cocoa as Kate and Char pulled up chairs and sat down.\n\n\"April 12, 1997. Dear Katie, Hec, and Charlene,\" he read, \n\nWe so hope that somehow we will find our way to each other and these words will never have to be read by you, our dear, dear children, but if we should not find each other and you do read this, we are living in Saskatchewan in Estevan. Please come to us. Your father and I work at a small store there. You will find us as Ellen and Hal Parents.\n\nYour father risked much to look for you, and we feared that they would find you through him. These people would do anything to get to the money since they have hurt others close to you to find us. They blackmailed your father for many years, but your father said \"enough\" when their greedy fingers reached for the charity funds. \n\nWe want you to know that your father did take the money, not for himself, but to keep the money from those men. They have many connections, and we left you to keep you safe. They threatened your lives as well. They followed. We lost them only through your father's skill and a friend,s kindness. We waited and when you did not come to meet us, your father took a chance and contacted your Great Aunt Abigail. She told us she had heard nothing from you, but the Mafioso goons found her and asked where we were. She understood from what they told her that they did not know where you were. Your father and I wept tears of joy to know wherever you were, you were safe. \n\nWhere is the money? It is gone. Your father laughed when he read in the paper that we'd hidden it away in a Swiss bank, when all he had done was to give a large, anonymous donation to the Salvation Army. Your father said, \"Who would expect that from a Rabbi?\" \n\nYour father was right. There are many things that one does not expect from a rabbi. You father's secret was safe with me all these years but like all secrets, it came to light. He feels shame for his past. It was his own shandeh. I never judged your father. He is a good man. They hounded him for his past. He chose me, and for me, that was enough. He never failed to follow one of God's mitzvot in the years after he married me. \n\nWe can wait here no longer. To stay longer, would allow them to find us. \n\nA brocheh for you, my dear children, \n\nMother\n\nHe folded the letter.\n\n\"What was his shandeh, his shame?\" Kate asked.\n\n\"She told me-- she whispered it in my ear last night,\" Hec said. \n\n\"What?\"\n\n\"Our father loved a man-- before our mother.\" \n\n\"Somehow I think I'd known all along,\" Kate said. \"It all makes sense now.\"\n\n\"They were happy,\" Char said. \"I know they were.\"\n\n\"Of course they were,\" Hec said. \"One thing I've learned about love is that you fall for a person-- who they are, not what they are.\" \n\nThat night when we went up to our room we made more than love. \n\n---------------------\n\n\"What was truly stolen was your innocence. For that, I am sorry.\" \n\nMy eye twitched as his mom spoke: the discussion was heated but welcome for Hec and his sisters. I saw this as part of the process, a way for them to gracefully let go of the past and begin anew. I'd hoped for this to happen. The day Hec picked up the phone and called his mother to invite her back turned all our lives in a new direction. It was like turning into the sun instead of away-- you shade your eyes from the sun but its warmth soothes. \n\nI worried a lot before she came. Mostly for Hec. The rain hadn't stopped once in over two days prior to her April Fools Day arrival, and I began to think that it was some kind of omen-- you know, like in that Damien movie, not that I'm comparing his mom to a antichrist-- but I hated the idea of rain. I couldn't help but wonder: the back mudroom was flooding; the Fox River was spilling over the banks, and Pete was flapping around his cage in a frenzy of unmatched spring fever. Hec said Pete's berserk behavior was just horny energy and that we needed to get him either a Mrs. Pete or a Mr. Pete. He explained that the river and the mudroom always flood and said, \"Stop worrying, Jake.\" His words didn't make me stop worrying, but I did my best to show my sunny-side up. I said to myself-- this has nothing to do with his mother; April showers bring May flowers.ThenI thought about the Flood. Rain, rain, rain. What happened to warm and sunny?\n\nI found out that in the spring the sun was a tease in Wisconsin.\n\nI used to seerealsunshine before I moved here. And by the way-- I'm not aguestanymore-- I'm part of the family, a fixture. I'd moved in-- all my belongings, everything-- even my eight grade science project. Hec and I did all the packing together a month ago. We went back to my old apartment and got it all. I brought back my flat screen and put the \"modern apparition,\" as Kate called it, into the living room. Maybe she doesn't appreciate it, but the guests did. I'd say that \"this\" guest appreciated that big screen the most. A sitcom writer needs to watch the competition. \n\nYard work was out so we watched reruns and first runs. MTV and the Food Network. \n\nWith all the rain I had my doubts about summer, but at least the wet, chilly nights allowed for a roaring fire. We enjoyed that warmth the night before Hec's mom arrived: our sex was hotter than the embers in the fireplace. Hec and I covered every inch of that big bed, rolling and biting and licking. I needed to get it out of my system before mom came to visit. Nothing to dampen the mood like a mother in the house. I always feel guilty doing it with parents around. And she was Hec's mom. Could be mine someday too, you know-- a mother-in-law? Then I could write mother-in-law jokes in sitcoms from experience. Move over Rodney Dangerfield.\n\nBetter check to see if Hec's mom has a good sense of humor first. \n\nBy that evening, the rain had slowed to a drizzle. \n\nMother Nature. Mother of Hec. Mother-in-law. Soon to be in the room down the hall.\n\nKick out the raspberry jams Hec's mother! No more sex for me! At least not with \"mom\" here, but I shouldn't have been so hasty because the next morning when she came, so did the sun.\n\nHere comes the sun. And Hec's smile. Seriously, it was great to see him smile. Better than sunshine. \n\nThe family was together, and I was a part of it. \n\nWe sat in the living room with the sun pouring in the long windows. I crossed my hands behind my head and listened, staring down at the copy of a recent Newsweekmagazine. On the cover, \"Time and Space Revisited: Johann Galle and The Big Bang Theory.\"\n\nJohann the dreamer, Johann the astronomer. InNewsweek.\n\nThe whole world knew the truth. \n\nWe did it. Jorge and Linden helped. First the story appeared in some obscure science journals, then AAAS's magazine. I was surprised whenUSA Today picked up the story. After that, it was all over the media. News at five, internet.NewsweekandTimepicked it up. Even interviewed us.\n\nBut that wasn't why I was so happy aboutthisparticular copy ofNewsweek. No, thisNewsweekhas a special place on the table. On page 37 was a small blurb with a mug shot of Austin Nichols. Underneath, a pull quote with him admitting the real creative genius behind \"his\" sitcom was me. Headmittedhe took credit for my work. He admitted it!\n\nMywork. InNewsweek.\n\nBoth Johann and I redeemed in the same magazine. \n\nThe best part was that part of my life was behind me. I never understood what a real partner was until Hec. \n\nHec and I. That was real.\n\nUpstairs, watching the seasons in Wisconsin, season one of our sitcom, we writeasone. Weareone.\n\nForever.\n\nI looked up from the coffee table and silently thanked the cab driver for bringing me here the day after Thanksgiving. I thanked my lawyer, too. \n\nI still couldn't believe that Austin admitted it all to the press. \n\nJust proved that miraclesdohappen-- with a really good lawyer.\n\n---------------------\n\nHe looked at me over his reading glasses, and I got all hot. I sat on the bed with my laptop between my legs and Hec next to me. I'd like to fuck him silly right now, but our sitcom needed attention. \n\n\"I could take dictation,\" I suggested as I cracked my knuckles.\n\n\"Dick-ta-tion,\" he giggled. \"You can dick-take from me anytime.\"\n\n\"Um, you're being junior high,\" I said, shoving him. \"Besides it's take-dick, not dick-take. No archaic syntax in bed. How many times do I have to tell you that. Besides, we need to get this episode hammered out.\"\n\n\"It can wait.\" He nuzzled my neck.\n\n\"Your mom is down the hall--\" \n\n\"So?\"\n\n\"So? She's yourmother. Wouldn't you feel-- self-conscious? guilty even?\"\n\nPete banged around in his cage. I swear he got turned on watching us. I needed to throw a sheet over his cage.\n\n\"Guilt? Not me! That's a Catholic thing,\" he said. \"Youcan say three Hail Mary's after, then you'll be kosher.\"\n\n\"Catholics aren't kosher,\" I laughed.\n\nI felt my guilt slip-sliding away with his hand slip-sliding up my leg.\n\nI decided I could live with the guiltandbe a kosher Catholic as long as he kept that hand on Mr. Happy.\n\nI set the laptop on the night table, then wrestled him down on the bed. Our legs and arms wrestled for dominance until I distracted Hec with a long, hot kiss. I flipped him under me and pinned his arms above his head. \n\n\"Cheater!\" he cried out.\n\n\"All's fair in love and war.\" I decided that red flannel shirt needed to come off fast. I'd been inspecting those Blue Boy magazines under the bed, and there was a story on how to undress your man with your teeth. I looked at those white, pearly buttons and thought,\"Why not?\"\n\nOff with the top button!\n\n\"What the fuck are you doin?!\"\n\nThe next two I bit off fast and furious; they were about to come off anyway. On the forth button, I realized that chewing thread with your front teeth was hard work. Damn! But I was committed. By the time I was on the last two, I had threads stuck between my teeth like big chunks of old dental floss. The upside was that I had Hec begging. \n\nKnow what's harder than buttons? Zippers. But I managed. Hec kept laughing at me the whole time: first I nipped his dick through his Levis , then I bit down on the tab of the zipper, and tooth-by-tooth I yanked it down. Tell you what,thatwas tricky.Between Hec's groans and giggles I managed to free Mr. Happy's best buddy. \n\n\"Yeah, that will teach you to laugh at the Master of Your Domain,\" I said, winking up at him. Fortunately for me, no underwear between my mouth and that mighty-fine dick of his. I got to use my teeth on the real thing. Nice little nibbles, too. He was moaning and groaning and begging nonstop. I completely forgot all that thread in my teeth. \n\nI worked Hec over good, sucking him hot and hard, my head bobbing up and down faster and faster. He cussed between moans and grabbed my hair with enthusiasm-- didn't take long, and I had him coming in my mouth. Kissed him with the spunk on my lips too. He loved it. His mouth had just started in on me when a knock came at the door.\n\nI groaned. \n\n\"Hec? Are you hurt?\"\n\nI froze. His mother!Shit! \n\n\"No,\" he answered. \"I just stubbed my toe.\"\n\n\"Stubbed my toe?\" I whispered. \"Is that all you can think of? Jeez, that's gay.\"",
        "\"Thingsaren't gay,\" Hec whispered back, nipping Mr. Happy. \"Peopleare.\"\n\nHec flicked out his hot tongue. Mr. Happy jumped for joy.\n\n\"You be careful in there,\" she called out.\n\n\"I will,\" he answered, then kissed Mr. Happy.\n\n\"You better be,\" I hissed at Hec. \"Don't want to damagethe goods.\"\n\n\"The goodies,\" Hec corrected, licking Mr. Happy with Mr. Magic Tongue. \"Damagethe goodies.\" \n\nWe listened for his mom's departure. The cab driver helped in and closed the door.\n\nThen the cab driver turned around. It was him, that same cab driver, the one who dropped me off here, the one who changed my luck. He gave me a wink and a nod. I smiled at him back and waved.\n\n\"Now, where was I?\" Hec asked. \"Oh, yes.\" \n\nThen he took me up to our bed and sucked me off better than a Eureka Boss SmartVac with on-board attachments.\n\n--------------------------\n\nThe next morning our shoes were wet with dew as we walked to the old garden. I smiled up at the clear sky. Only a few fluffy clouds with a light breeze: a perfect day. Our final mission? To reunite the lovers. The sun warmed my face as I watched Hec digging. I'd offered to help, but Hec felt it was important that he do this for Henry. A few feet away, a robin watched us as she perched on a limb of an old oak tree. \n\nHec removed the sod carefully, then dug in the middle of the plot. With each shovel-full, Hec was closer to Henry's heart. In my left hand I held a hefty posthole digger upright, and in my right hand I held Johann's urn against my chest. I'd tied it up in a silk scarf long enough to lower it down onto the casket. \n\nWe'd decided the initial hole only need to be a few feet deep before using the post hole digger. I stood next to Hec's dirt pile and was surprised when the brave little robin flew down and snatched a plump night crawler from the freshly-turned soil at my feet. She cocked her head and looked at me, then flew off. I watched her disappear into the sun.\n\nHec wiped his brow with his shirt sleeve and nodded. The hole was deep enough. He set the shovel aside, and I handed him the posthole digger. Hec stood with legs apart, chopping the ground with the digger's jaws, then he'd take step, rotating around the hole. With each step he pulled out a jaw-full of earth, and he did this until we heard a hollow thump. He'd found Henry.\n\nI knelt and carefully inched Johann down to Henry. When the urn touched the casket, I let the end of the scarf go, and it fluttered down. At last they were together. As I stood and brushed off my jeans, Hec took a shovel-full of earth and dropped it down the hole. Then he handed the shovel to me, and I did the same. We took turns until the ground was mounded up where they both rested. \n\nHec replaced the sod over the grave, fitting the pieces of the grassy puzzle together, and we took turns patting the sod down with the shovel. \n\nWhen done, we stood side-by-side. \n\n\"May you love each other well,\" he whispered. We bowed our heads. I prayed that wherever they were, they were together and happy.\n\nThe weeks passed. Hec's mother stayed, and Hec and I settled into our lives together: We wrote, we loved, we dreamed. One day in early June, we took one of our regular visits to see Henry and Johann. The grass was greener, the sky bluer, and the robin watched us from her nest high up on a bough of the old oak tree. I thought of Walt Whitman's words, \"The smallest sprout shows that there is really no death.\" We stopped in front of the grave, and there bloomed two violets, one pale white and one rich purple, their throats both a blaze of yellow. I reached for Hec's hand and gave it a squeeze. I knew then that they were happy. \n\nWe turned and walked hand-in-hand back to our home. When we stepped inside the door together, I turned to Hec and kissed him. All the ghosts were at rest. Hec's parents and Austin. Johann and Henry. And all the magic? That was still there. \n\nBut it was all our own. "
    ],
    "authorname": "el_wing",
    "tags": [
        "humour",
        "gay sex",
        "supernatural",
        "hauntings"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/rewriting-singularity-ch-21"
}