{
    "title": "Erogenous zones: The Joy of Teasing",
    "pages": [
        "The key goes into the door, the door swings open and you both stumble into the lobby. Neither being able to keep your hands off each other. Hungry kisses are being exchanged while you struggle with getting rid of that jacket, and she slams the door shut with her foot. You tumble into the bedroom and fall onto the fresh linen sheets. You\u2019re both rearing to go. \n\nDepending on the mood you and your partner are in, you can now choose to either: \n\na) rip each other\u2019s clothes off, start banging away and getting the release you both want within 20mins of entering the home. \n\nb) prolong everything by spending time exploring each other\u2019s bodies, and then when neither of you can take it anymore; have steamy breathtaking sex. \n\nNow, if you\u2019re anything like me you\u2019d choose answer b). I personally love exploring my partner\u2019s body. Bodies are to me beautiful and fascinating. They\u2019re like instruments waiting to be tuned in the right way. Like an instrument it\u2019ll respond in different ways depending on the way you play it, and who is playing it. When two musicians play the same piece on the same piano, you can still notice the differences in how the instrument responds. Same goes for your body.\n\nI remember one night with my first boyfriend. We were sitting opposite each other talking, and as usual my fingers automatically caressed his arm. I started to trail my fingers lightly over his whole arm, from the shoulder all the way down to his fingertips. As I could see he was enjoying it, so I continued. I held out his arm and continued to trace my hand along it, exchanging trailing the whole hand, the fingers and nails. I also varied the pressure and took note of where he seemed to be most sensitive. When finding that spot I\u2019d work it for a bit longer, then continue and then back again. At times I would kiss the arm or spot. Now and then I\u2019d blow on the spot lightly, and when he started to really get excited I\u2019d run my tongue over it. \n\nI remember him getting more and more excited, and he began to squirm on the bed. When I ran my nails with much more pressure than before, he suddenly started to moan and gasp loudly. After catching his breath he just looked at me with a perplexed expression, and said he just had an orgasm. I just laughed at him, but he insisted he had one, and that it hadn\u2019t been the regular type. It had been one where he didn\u2019t ejaculate, but had felt it throughout his body. He told me he had never cum that way before, with nobody touching his genitals, and he had only before had that type of orgasm by himself. That\u2019s when I realised how many secrets the human body really hides. \n\nSince that day I\u2019ve loved to explore my partner\u2019s body, from top to toe. \n\nHead\n\nMany women love it when their man plays with their hair. I don\u2019t know exactly why we love it, but damn it feels nice! Run your hands through your partner\u2019s hair. Play with it. It\u2019s not for nothing certain countries praise long hair on women as one of their most feminine and erotic features. A scalp massage will also do wonders for anyone. It\u2019s very relaxing, and combined with washing your partner\u2019s hair it\u2019s even better. Then of course, a little tug while being in the throws of passion always works wonders...\n\nFace\n\nFirst things first; don\u2019t lick your partner\u2019s face like you\u2019re a dog. A friend of mine got into the habit of doing it when he saw me. What can I say? It was wet and not to be a recommended way to show your affection (unless you really are a dog). \n\nDo kiss your partner\u2019s face though. Think romantic featherlight kisses on the forehead, eyelids, nose, cheeks, chin, jawbone and, of course, lips. If you want to feel wonderfully silly, rub your noses together in an Eskimo kiss. A boyfriend of mine used to tickle my nose ridge. He said I made the cutest scrunchy faces when he did that. \n\nEars. I had no idea why people found kissing and licking ears exciting. Not until a friend of mine one day started to nibble my earlobe, and suddenly stuck his tongue into my ear. First reaction: yikes, what is he doing?! Second reaction: wow, do that some more. Many people are extra sensitive right behind the earlobe.\n\nNibbling is good, and if you want to use your tongue, see to it that you don\u2019t shove it in too deep. Oh, and no dribbling please. \n\nKissing. We all love it, and we all want it done differently. I can only say two things really; don\u2019t stick your tongue in too fast and too far, and please don\u2019t slobber all over me. \n\nThroat/Neck\n\nProbably one of the most appreciated erogenous zones apart from the obvious ones. Kiss, lick, nibble, tickle, suck or bite. The choice is all yours. Most people love it when you pay attention to their neck, be it the nape, centre or where the shoulder meets it. Some are so sensitive there, you just have to blow or touch it lightly before they\u2019re all fired up. \n\nShoulders\n\nI love it when I get a shoulder and neck massage. I absolutely adore it. Helps me relax, and the more relaxed I am, the more prone I will be to let my body override my mind. \n\nKissing the collarbone is often appreciated and shouldn\u2019t be forgotten. \n\nArms\n\nAs I mentioned earlier, let your hands caress the arms. One at a time or both at once. Remember, the more you concentrate on one area of the body, the more your senses will focus on what\u2019s happening there. \n\nThe inner arm is usually more sensitive than the rest of the arm. I\u2019ve noticed some are the most sensitive by the elbow joint. For others the it\u2019s below the elbow and down to the hand where it\u2019s most sensitive. Just trail your fingertips along the arm and find out what works for you. Running your tongue slowly along the arm is also very nice. \n\nHands\n\nRun your tongue down my inner arm, stop by the wrist for a few seconds, then continue to lick and kiss my palm, before finally taking my fingers, one by one, into your mouth and gently suck them. Don\u2019t forget a light flick of the tongue on the skin in-between my fingers and knuckles. Do that and I\u2019m sure to be putty in your hands. Hey, if it worked for Johnny Depp in \u201cDon Juan de Marco\u201d, why shouldn\u2019t it work for you?\n\nBreasts/Chest\n\nWomen know men love to play with their breasts. That\u2019s cool, we love it when you do. The general rule though is that, unless she wants it, try not to be too rough. They\u2019re attached to a body, and not every woman is that sensitive in that area. I recall a girl\u2019s night in when the topic of breasts and sensitivity came up. Though majority of the girls said they loved breast play, there were a few who just couldn\u2019t understand the big fuss. Some women just aren\u2019t as sensitive, and no, just because you\u2019re spending half an hour licking and sucking my nipples, it won\u2019t mean I\u2019ll get more sensitive or have a porn orgasm. It\u2019ll just hurt after a while. \n\nI\u2019m not saying that one shouldn\u2019t play with the breast, but if you notice she\u2019s not really into it, or perhaps need to be stimulated more by rhythmic circular movements, rather than having her tits squeezed, then follow her lead. \n\nWhen it comes to men\u2019s chests, well what can I say, but hallelujah for hot summer days when they take their shirts off. Some like \u2018em hairy while others (like me) prefer them smooth. As men\u2019s chests are limited in size, we don\u2019t have the choices they have when playing with our breasts. Still, the normal kissing, licking and caressing always feels nice, doesn\u2019t it guys? \n\nOh Girls, don\u2019t forget to pay some attention to his nipples too. Even if yours may not be sensitive, it doesn\u2019t mean his aren\u2019t. Flicking your tongue and sucking his nipples while giving him a handjob can heighten his arousal. Or pinching themlightly while giving him a blowjob also works. \n\nWaist & Stomach area\n\nI swear the stomach is there for nothing else but to put your mouth to it and blow on it, creating farting sounds, while making your partner laugh and deem you as childish. Oh yeah, it\u2019s great to fall asleep on too. \n\nNow, the waist and sides are perfect places to find spots where your partner will start to squirm. For this purpose I\u2019ve found using my tongue is the best instrument. Trace your tongue along your partners side, stop here and there to flick it around. Sooner or later you\u2019ll find a spot where he/she is more sensitive. For the men I\u2019ve done this too, it seems there are two main spots. One is waist height and halfway to the navel. The other one being just by the hipbone, going down towards the groin. The area between the waist and genitals seem to hold many interesting spots. Some guys have been too ticklish, while others went gaga when I worked their particular spot. \n\nThe navel. I\u2019ve read many who mention that the navel is an erogenous zone to them. This was something totally new to me, and I\u2019m curious now if it\u2019d work on me. Better find myself a man so I can try it out!\n\nGenitals\n\nThere is plenty of information out there how to give great oral sex or handjobs; lubrication, variation, pressure, speed, adding of fingers and a half hour to an hour should make it perfect (and that\u2018s the minimum time!). \n\nI really can\u2019t come up with anything new to add, apart from reminding the females not to forget the balls. Not all men like it, some find it painful even, but many love it of you play with their balls. Hold them in your hand and massage them gently. Licking them feels great (so I\u2019ve heard!), and work yourself from front till back. The small area between the balls and rectum can be very sensitive. \n\nWait, I just remembered something. Guys, when you perform oral on a girl, don\u2019t forget that some girls can\u2019t take too much direct stimulation on the clit. Work around the whole pussy area too, don\u2019t just concentrate on the clit. And use your whole tongue, not just the tip of it. \n\nBack\n\nSigh, am I the only woman who has a thing for shoulder blades? Probably. Anyway, kissing, licking, caressing and massaging are once again fool proof here. Many men and women love it when you kiss/lick down their spine. The end of the spine is often the most sensitive area, so spend some time blowing, kissing and working that hot tongue of yours there. \n\nAss/Arse\n\nNow, who doesn\u2019t like a nicely shaped arse? Didn\u2019t think so. \n\nKneading, massaging motions work great on the arse. Parting the cheeks now and then in the process doesn\u2019t hurt either. Running your nails over his roundness, before grabbing him to help pushing in deeper while you\u2019re getting it on, certainly isn\u2019t a negative thing. Neither is blowing lightly and kissing right above where the crack starts.\n\nSome people like a friendly spanking, a rimming, anal fingering or anal sex. Whatever works for you and your partner, but as with everything else; communicate first and don\u2019t do anything the other person isn\u2019t up to. If you\u2019re interested in anal play, do look up other How To essays that deal with this. They give plenty of advice. \n\nOh yeah, guys if you want to do anal play with her, I think it\u2019s just fair you let her play with you too. Just my opinion. \n\nLegs\n\nThe inner thighs are often very sensitive, and is definitely to include in your top to toe repertoire. The back of the knee is another area definitely worth exploring. Don\u2019t forget to caress the calves and if you partner isn\u2019t too ticklish, play with their feet. Personally I\u2019m far too ticklish for anyone to touch my feet. I\u2019d end up kicking the poor guy instead!\n\nWhen you\u2019ve found your partners hot spots, keep working them until he/she can\u2019t take it anymore. Being a big fan of delaying the main event (don\u2019t you love the power kick it gives seeing your partner squirm and beg?), I usually spend quite some time playing around with these hot spots (naturally focusing extra on the main ones). When I\u2019ve tortured him long enough I start to move in towards his genitals. This basically means running my nails along his inner thighs, closer and closer to his package. Then I normally start with the best teasing bit and caress all around his genitals, while taking in the lovely sight of his rock hard dick. \n\nOk, so he\u2019s damn hard by now and dying for you to touch him directly. Don\u2019t. Take your thumb and middle finger and put them lightly together. Imagine him lying down on the bed. Now run your fingertips from the back of his balls, parting the fingers to follow on each side of the balls, and continue alongside the sides of his shaft trailing the contours. Trail your fingers back the same way you came. First couple of times, try not to touch the shaft, then do it the third time. Perfect start for a handjob. Then later when he\u2019s even hornier, progress to a blowjob. He\u2019ll love you for it.\n\nFor the men, do the same trailing of contours, but along the outer lips. The skin around the pussy is usually very sensitive, as I\u2019m sure you know. Run your fingers up and down along the sides of her outer lips, then when on your way up again, put the fingertips together again and let them go up along her wet inner folds. On the way down go along the sides again, then inner lips. Repeat and then just do whatever feels good for her. When you find something she likes, keep doing it. \n\nIf your partner is doing one thing that feels good, then imagine him/her doing two or three things at the same time! Yep, it\u2019s multi-tasking time. When you know how and where to touch your partner, try to combine as many things as possible. Then just follow the old start-and-stop technique. Get your partner to the edge, then stop what you\u2019re doing and start something new or take a break, then start again. When neither of you can take it anymore, have hot steaming sex. Add to this a bit of vocal accompaniment and you should be having a great time! \n\nI hope you and your partner will have a great time exploring each other\u2019s bodies, and please vote and send me feedback. "
    ],
    "authorname": "Lovepotion69",
    "tags": [
        "partner face",
        "running nails",
        "partner body",
        "top toe",
        "time exploring",
        "trail fingers",
        "exploring bodies",
        "hot spots",
        "love play",
        "erogenous zones"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/erogenous-zones-the-joy-of-teasing"
}