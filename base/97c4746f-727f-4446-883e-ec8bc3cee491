{
    "title": "Aztec Treasure Ch. 71-80",
    "pages": [
        "Chase Nygaard's POV<br >Arrowhead Pack \n\nI stood outside, watching the cars depart and hoping I was doing the right thing.\n\nSpider Monkey's home would be empty before anyone figured out what she had done. Frank had taken the shadow task force away, and they took their server and all their computers along. Teri had set the team's computer network up independently of the Pack server and the \"dirty\" hacking server in Spider Monkey's home office. Nothing would trace back to her.\n\nNor could the Feds confiscate any of the computers Spider Monkey used in her hacking. The computer hard drives got erased, demagnetized, crushed, and sent to the landfill from outside Pack grounds.\n\nNow, I had to protect the people who had done our Pack and our country a great service. Spider Monkey and Vic would not return; they stayed in the DC area, hiding out until we could get them to a safe hideout. I'd sent a warrior to Maine to meet with Alpha Conor Shaw of the Katahdin Pack, asking him to retrieve and shelter the pair until the fall. I was confident the Alpha would do so, and their Pack was so remote that hiding my Betas would be simple.\n\nTeri was Spider Monkey's partner in crime, so she had to go too. It would take longer for her name to come out if it ever did. Rori came up with the solution with people we trust who were here recently. We could send Rick and Teri as security for Lance and Maria, who could disappear onto country highways for a week of riding. Howler agreed to come out and join their ride, letting my Betas drive their truck back home without attracting notice. The pair would stay at their home until I asked them to return.\n\nAs for Maria and Maritza, they had nothing to do with the hacking. Rori and I didn't want them to be here through the lockdowns, searches, and suspicions that were coming. In effect, we were giving the newly mated pair a honeymoon while keeping their family safe. I knew they'd have a blast touring northern Wisconsin and the Upper Peninsula. Hell, I wish I could go!\n\nRori and the twins didn't need the hassle either, so I sent them all to Oxbow Lake.\n\nWhen they were all out of link range, I brought the remaining Pack members in on my mental send. \"Arrowhead Pack, we are going to Condition Yellow for the next few weeks. All those with security responsibilities are to have their weapons staged and ready; those without are to make sure their safe room supplies are ready to go. No one leaves the Pack House vicinity unless in a group of four or more, and all will carry sidearms or rifles. My permission is required to leave Pack grounds.\"\n\nI could feel the wave of disappointment rolling over the Pack; summer was coming fast, and there was so much to do. \"I know this sucks, but the safety of the Pack is more important. There are two threats to our Pack. The first is the Federal Government; some Pack members will come under suspicion soon, and there could be arrest and search warrants associated with them. I've sent those members to safer locations until the Council Chairman can deal with the issue. The FBI and whoever else they send are not our enemies. They are doing their jobs, and I expect you all to be polite and professional in any dealings with them. Keep your weapons down and hidden and disarm if requested. Do not answer questions or provide statements without a lawyer present, and link me with any questions. They won't find anything here, and they can't stay.\"\n\nThe Pack took this part well. \"The second part is the reason for the extra security. The Sinaloa Cartel and rogue elements of the CIA and other agents are having a bad day. Chairman Colletta is providing information to help the President stop the threat, but this will take time. We need to be prepared for retaliation once they learn of what we did. It could take the form of an attack, a bombing, or a kidnapping to force us to give up the ones they want. I sent my family to Oxbow Lake in secret because of this threat.\" The mention of a threat to the children sent a wave of anger through the bonds. \"We faced a similar situation with the Sons of Tezcatlipoca, but the Sinaloa Cartel has resources rivaling a small country. An attack by trained ex-military forces is not out of the question, so we must be alert at all times, prepared to defend ourselves at a moment's notice, and fierce in defense. Keep your senses alert and report anything out of the ordinary to the Security Center. Thank you.\"\n\nI didn't have to wait more than fifteen minutes before it started with a call from the security center. \"Alpha, Beta Tina reports eight FBI vehicles are inbound, driving out of Two Harbors without lights or sirens. Estimated arrival time is ten minutes.\"\n\n\"Thank you.\" I opened the link to the entire Pack. \"The FBI will be arriving in a few minutes. Take your stations and observe, but do not display any weapons. Front gate, verify their identification, then escort the agents to the road between the Pack House and my home.\" I called our Pack Lawyer, Ralph Emerson, and asked him to come out as soon as possible. \"And bring a criminal lawyer along.\" That got his attention; he told me he'd be there within the hour.\n\nIt was faster than I expected to get a Federal response. The column of vehicles ignored me standing there with my hands raised. They passed by my warrior on his ATV and headed right for Spider Monkey's driveway. Armed agents spread out around the big lake home with pistols and rifles drawn. The team leader was Senior Special Agent-in-Charge Lucas Smallwood, who I'd dealt with during the Sons attacks and our outing. I recognized Special Agents Lana Black and Allison Cook as they got out of the second SUV. Everyone else was new.\n\nI saw a breaching team coming up with their battering ram and arrived at the driveway just in time. \"It's OPEN,\" I yelled. \"The patio doors are open as well.\"\n\nThe leader of the entry team tried the door handle, and it swung open. Agents did a dynamic entry, and I could hear the shouts of 'CLEAR' as they went through the house and garage. Finally, the entry team came back outside to report. \"The home is empty, sir.\"\n\n\"Set up security at the entry points. No one who isn't wearing a badge gets in or out.\"\n\nA dozen people in FBI windbreakers headed in, carrying cardboard evidence boxes. \"What's going on here, Agent Smallwood?\"\n\n\"Search warrant and an arrest warrant for Fukuyo Ashol.\"\n\nLucas wasn't pronouncing it right, which is why she'd gone by her road name since college. \"As the lease-holder of that property, I'll need a copy of the search warrant.\" He handed one over; it covered her home and \"any interconnected computer servers or mainframes.\" Good luck with that; when Spider Monkey ordered the teardown, they took everything more sophisticated than the microwave. \"She's not here. What is the arrest warrant for?\"\n\n\"Computer hacking, grand theft, bank fraud, money laundering, and anything else the US Attorney can find. Enough to put her away forever.\" He squinted his eyes as he looked at me. \"She's a wanted felon, Alpha. If you know where she is, you should tell us now.\"\n\n\"I don't know where Spider Monkey is now,\" I told him. \"She and Vic left yesterday morning.\"\n\n\"Uh-huh. If I find out you're hiding Fukuyo or helping in any way, I'll see you charged with aiding and abetting a fugitive. The best thing for everyone is if your people to cooperate fully.\"\n\n\"My people and I will speak to our lawyer, who should be here shortly. I'll be in my office. Ask any of my people for help finding it if you need it.\"\n\n\"Agent Black will accompany you to make sure you don't attempt to contact Fukuyo and warn her.\"\n\nI rolled my eyes and walked off as Lana hurried to catch up to me. \"Sorry about that,\" she told me as I held the Pack House door open for her.\n\n\"He does realize that we saw you guys coming, and we can communicate without talking, right?\"\n\nShe let out a breath. \"Agent Smallwood read the reports, but I don't think he knows what to do with the knowledge. It's something you have to immerse yourself in to understand.\" She was right in that werewolf society was different in fundamental ways. \"I think he's still a little pissed off about your last get-out-of-jail-free card. He's out not just to nail Spider Monkey but everyone associated with your Pack.\"\n\nI opened the door to my office and invited her in. \"What about you?\"\n\n\"I'm a sworn agent, Alpha. If I see a law broken, I'll make the arrest. I figure you're too smart for that to happen today, though.\"\n\nI snickered at that as I went to the cabinet with the built-in fridge. I offered Lana a bottle of Diet Coke and poured a glass of Cooper's Mark Bourbon Cream for myself. \"Are you going to be staying around?\"\n\nShe nodded. \"We're the local office, and the Special Agent in Charge of the Minneapolis office wants a presence here. Special Agent Cook will be here too, and others.\"\n\nI thought about this. Both agents had fit in well and reported out fairly when they were assigned to monitor my Pack. \"How long is Lucas here for?\"\n\n\"Not long enough to hit the pool and settle the question once and for all,\" she said, hiding her laugh behind her Coke.\n\nThe front gate guard interrupted. \"Alpha, Mr. Emerson is here with Mrs. Knight, and the first news truck has shown up.\"\n\n\"Tell Ralph I'm in my office and let him in. Inform the press we will not make any statement, nor will they be allowed on Pack lands.\" I looked over at Agent Black. \"Our lawyer is here, and I'll need my room.\"\n\nShe nodded. \"I'll get a cup of coffee and wait outside.\"\n\nI welcomed both lawyers into my office and sat down at the desk. I had one of my security people come up and scan the office for bugs. I had a good relationship with Agent Black, but that didn't mean I trusted the FBI right now. Erica Knight had assisted us during our time coming out as a Pack, and I trusted her implicitly.\n\nWhen the sweep finished, I laid it out for them; Spider Monkey's hack of the bank, the information we gave to the President, and the pardon agreement we had in our pockets. \"Why not produce the pardon agreement now and cut this whole investigation off?\"\n\n\"Because it may take weeks to find all the people involved in this conspiracy,\" I replied. \"We have to play along until then.\"\n\n\"Are they going to find anything in the search?\"\n\n\"No. Spider Monkey knew that what she was doing in her office was illegal, so she set up her computer network accordingly. She had a dedicated hacking server plus a personal server for other work. She wasn't connected directly to the Pack's mainframe; she did have wifi access, but the computer she accessed with is gone. If they try to take our Pack server, we need you to fight it.\"\n\n\"We need to make them prove it is within the scope of the warrant,\" Erica said.\n\n\"And that time would be now,\" I told them. \"Our Pack's server is adjacent to our security control center, which is in an underground 'bunker' below the Pack House. Our security guard is about to be handcuffed for refusing to allow access.\"\n\n\"We'd better go before they blow the door,\" she said. She would earn her money today.\n\nCh. 72\n\nChairman Colletta Nygaard's POV<br >Naval Station Guantanamo Bay, Cuba\n\nThe one thing we couldn't do with our prisoner, former CIA Station Chief Henry Consuellar, was to bring him into the United States and turn him over to the FBI. Luna only knew how deep this thing went and how soon it might cause trouble for the Pack.\n\nGeneral Curtis and the Attorney General put together a small group of people they had absolute trust in and put them to work. The Attorney General put four US Attorneys and trusted staff members in the group. Knowing the FBI, DEA, CIA, and Customs were all potentially compromised, the investigators came from Homeland Security's Office of the Inspector General, Secret Service, US Marshal Service, Internal Revenue Service, and the Department of Defense Criminal Investigation Service.\n\nFrank and I were waiting at Gitmo when the plane arrived from Mexico City. \"Peter Graves\" and his team, all werewolves from the Donner Pack, were all smiles as they marched the prisoner over to us. Henry Consuellar couldn't figure out what was going on, but he knew enough to know that Gitmo wasn't a good place to end up.\n\nThe Homeland Security agents that flew down with us arrested Henry. When he realized that no one had Mirandized him until now, his face turned white as a sheet. \"What is going on here?\"\n\nFrank had a big smile on his face. \"Some private citizens just handed you over to actual Federal Agents, Henry. You should be more careful who you talk to.\"\n\n\"You can't do this! I have a deal!\"\n\nPeter held up the piece of paper. \"I printed this off the Internet this morning. I'm sure the Feds will appreciate your confession, plus the people you implicated.\" He handed over a voice recorder to the agents to Frank, who put it in his pocket.\n\nFrank let that settle for a few seconds. \"We did place your family in protective custody because you are now the Sinaloa Cartel's number one target. Take him away.\" He was struggling against the agents as they walked him towards the prison. General Graves wanted to keep him there for a few days until they completed the sweep of the conspirators.\n\nFrank and I headed for our plane, which was already warming up. One of the agents would transcribe the confession as we flew to Washington to hand it over to the team. Meanwhile, the Donner Pack warriors would continue to Denver, where a Pack driver would bring them home. It was one more layer of deception to keep suspicion away from the Packs.\n\nI could feel Frank's anger rising through the bond as we listened to the confession on the way home. The sad part was that Henry had zero remorse. In his mind, they were all patriots, doing anything necessary to protect America from threats. Politicians and beancounters controlled the classified budgets. The CIA didn't have time to go begging \"idiots and politicians, which is redundant\" for required money that never came without strings. Daniel French, the late Deputy Director-Covert Operations, set up the Cartel money laundering in exchange for a cut of the profits. It gave them a slush fund with no oversight.\n\nThe account allowed the conspirators another means to supplement their inadequate government pay. When cooperation was needed, they would find like-minded people and bring them in. Offshore accounts grew fat as the drug money rolled in.\n\nI shook my head, knowing Henry didn't realize how bad the data breach was. Every payment coming out of that account would prove the conspiracy he just described. Even if everyone else lawyered up, they would all go down.\n\nYou see, there's a loophole in the Fourth Amendment's protection against unreasonable searches and seizures. If the IRS wanted the Banco Mexico account records, they would need a warrant and the cooperation of a foreign bank. Spider Monkey just hacked into their computers and took it. Since she was not employed or acting as an agent of the government, even though hacking is illegal, it is still admissible. That is why Frank built a barrier between the legal and unlawful portions of the investigation. When Spider Monkey comes forward, she can truthfully say that she hacked the accounts to find out who tried to kill her friends.\n\nThe fact that she was allowed to keep the money and got a pardon later on? It doesn't change the admissibility of the data because she provided the data to Frank before she got her pardon. The hacks into the accounts and the stolen money are all crimes, but the pardons covered them as well. Since she stole the money from a Washington, DC branch, and the bank is in Mexico, no state can touch her. She'll never visit a Mexican beach, though.\n\nWe finished the transcription, encrypted it, then sent it to the Attorney General.\n\nI was exhausted after that, and I sat back with a juice to rest. I turned on the news; the networks didn't know everything going on, but Frank filled in the gaps.\n\nAs we flew, IRS investigators were chasing down every trail in the account records Spider Monkey had provided to them. The veteran investigators knew all the tricks used to hide income, and they were on the conspirators like a duck on a June bug. They froze dozens of accounts the first day, with more coming as they unraveled the web.\n\nMeanwhile, the Federal Prosecutors were cranking out arrest warrants by the stack. Teams of agents swarmed over CIA Headquarters in Langley, the FBI building, and other agencies. Arrests and rumors were all over the news, and at least four people reportedly committed suicide before agents arrived to get them.\n\nThe White House was under intense pressure to make a statement, given the number of arrests and the people involved. It was reminiscent of the scandal following the takedown of the Sons of Tezcatlipoca. In that case, agents in Customs and Border Patrol, the DEA, and local law enforcement helped secure smuggling routes on the West Coast. This wave of arrests was at the highest levels in the agencies.\n\nWe'd landed at Joint Base Andrews and were in the limo to the White House when President Kettering entered the White House Press Room. \"Ladies and gentlemen, fellow Americans, today is a sad day in the history of our country. A wide-ranging investigation into the attack on Air Force One exposed a conspiracy inside the highest levels of government. These men and women sought to operate outside the law and without the oversight of Congress. After the destruction of the CIA black site prison on a Gulf oil rig and the subsequent removal of senior CIA members, their attention turned to me. They sought to stop the investigation into the CIA by removing me from office.\"\n\nShe let that sink in. \"The conspirators planned to lay the blame for my death on a dangerous criminal. The assassination attempt failed only because of the courage of a fighter pilot and the skill of the Air Force One crew. The missiles they used came from the Sinaloa drug cartel. The conspirators planned another attempt by Julio Salazar, using anti-tank missiles the CIA falsely reported as destroyed. An alert citizen spotted them, and law enforcement recovered the missiles and ended the threat.\"\n\nThe reporters started asking questions, but the President held up her hand. \"Our investigators tracked down the offshore banking account used to fund the conspiracy and pay its members. The CIA conspirators used shell corporations to launder billions in Cartel money. They took a cut of the drug profits in exchange for protection against law enforcement. Our investigators are freezing accounts and seizing the balances since the funds are from drug trafficking. A lot has happened today, but we are nowhere near the end. The Attorney General will prosecute the conspirators to the full extent of the law, including the death penalty where warranted.\"\n\nShe then stared into the camera. \"An assassination attempt against a sitting United States President is an act of war. The Sinaloa Cartel is not a country, but today, we are in a state of war with it. I have signed a Presidential Decision Directive, pledging all United States assets towards the destruction of the Sinaloa Cartel. International warrants have been issued and will be honored for any Cartel leader who surrenders to United States law enforcement. Sinaloa Cartel leadership is now the priority target of law enforcement, intelligence agencies, and the United States military. We intend to work closely with Mexican and Central American countries to rid the region of their existence when allowed, but we will take them out wherever we find them. We will not stop until their leadership is dead or in prison, their organization in ruins, and their money is gone.\"",
        "There were murmurs at this; cooperation in Mexico wasn't always welcome or effective. It didn't sound like Laura Kettering cared what they thought. \"The names of those people charged with conspiracy will be available on the Justice Department website. We will not waver, and we will not fail. Thank you, and may God continue to bless the United States of America.\"\n\nWith that, she walked out. The press was going wild, and it was only beginning.\n\nCh. 73\n\nPresident Laura Kettering's POV<br >White House Situation Room\n\nThe simple thing would have been to bomb the compound until it was a pile of rubble, but there were wives and children in there. I wasn't willing to take the collateral damage from that. The drone video showed the guards on the perimeter fencing and patrolling the home and rooftops. \"One minute to target,\" the voice said.\n\nThe target was in the mountains above Imala, a small town east of the capital of Culiacan. It lay in the state of Sinaloa on the eastern shore of the Gulf of California. The drone footage was infrared, as it was four in the morning local time, with only a sliver of moon to light the May night. I'd given the 'go' order forty-three minutes ago. The USS Makin Island (LHD-8) amphibious assault ship was the lead element of the Marine Amphibious Group I'd diverted three days ago to the west coast of Mexico. They had moved into the Gulf of California at sundown. The Marine Expeditionary Unit embarked on the task force included the twelve V-22 Osprey tiltrotor aircraft and six AH-1Z Viper attack helicopters of the Knightriders of VMM-164.\n\n\"Initiate attack runs.\" Just because there were noncombatants in the compound didn't mean we weren't going to blow things up. The drone launched a missile at the front gate, blasting the heavy steel doors open. The low-flying attack helicopters came into view. Two Vipers started lighting up the vehicles in the courtyard and the garage with their Hellfire missiles and 20mm rotary cannon. The other four Vipers took out the guards along the fence and on top of the roof. With their initial targets destroyed, the helicopters starting circling the compound to provide fire support.\n\nThe guns were quiet as the first tiltrotors arrived. Marines from the 15<sup>th</sup> Marine Expeditionary Unit out of Camp Pendleton started fast-roping out the back onto the roof or the surrounding lawn, while others landed outside the gates on the road. The Marines stormed the house as the Vipers brutally eliminated any visible opposition. The Marines took casualties; I counted four men down in front of the house and two in the back. I could see the flashes of weapons firing, and it was an anxious few minutes before the ground commander reported the building was secure. \"X-ray One is KIA,\" the commander reported back.\n\nThe head of the Sinaloa Cartel was dead.\n\nThe mission shifted to intelligence gathering as Marines escorted the prisoners out of the palatial estate. Other Marines carried their wounded and dead back to the waiting Ospreys. As the aircraft filled up, they took off so the others could land. It was less than fifteen minutes before the last Osprey lifted off to head for the carrier.\n\nThe Vipers had been busy discouraging law enforcement and the Mexican military from interfering with the operations. The Mexican President would be furious at my use of US troops on Mexican soil. Well, fuck him and the horse he rode in on. We didn't cooperate because the Mexican Government is hopelessly corrupt and penetrated by the Cartels; any notification of our intent would result in more dead Marines.\n\nThe feed went dead as the drone headed back to base. It took a few minutes for the casualty report to make it to the Commandant of the Marine Corps. \"Madam President, we lost two Marines tonight. Two more are seriously injured, four have minor injuries. We killed twenty-seven Cartel members and captured twelve, seven of them injured.\"\n\n\"Women and children?\"\n\n\"No casualties. We locked them in a room until the Mexican authorities arrive.\" He let out a breath. \"It could have been a lot worse.\"\n\n\"I never doubted their ability to complete the mission. Your Marines performed admirably,\" I said. During the planning phase, casualty estimates ranged between five and thirty, a high cost to avoid civilian casualties. I let out a sigh of relief as the aircraft called in \"feet wet,\" meaning they were back over the ocean.\n\nI called the Mexican President then, informing him of the operation and the Cartel leadership we'd taken out. He raged at me, but what could he do? I promised him additional aid in fighting the remaining Cartels. The Gulf, Los Zetas, and Jalisco New Generation Cartels were already gobbling up Sinaloa territory like a pack of hyenas on an injured zebra. Fifteen of the top eighteen Cartel leaders died in the week since I declared war, and we'd only killed ten of them. The other Cartels were more than happy to give up locations and names of Sinaloa leadership for us to eliminate. We'd also used drones and undercover agents, taking out production and distribution facilities throughout the countryside.\n\nWould it make any difference in the drug war? Not in the long run. The other Cartels would take over the smuggling routes, surviving soldiers would sign on with new leadership, and the drugs would continue to flow. It wasn't about the drug war, though. It was personal.\n\nI looked at my watch; it was seven-forty in the morning, and I'd been up since one. \"Clear my schedule until noon,\" I told my Chief of Staff. \"I want a briefing then about what remains of Sinaloa and how we are going to eliminate it.\"\n\nThe team around the table stood as I did and stayed standing until I was out the door. Three Secret Service agents and one large wolf escorted me back to the elevator, then to my residence. Exhausted, I took a shower and crawled into bed.\n\nThe wakeup came all too soon. I had enough time to dress, and lunch was waiting for me in the Oval Office. I ate quickly as my Chief of Staff updated me on my schedule.\n\nAt noon, my 'war' staff gathered in the Oval Office. My Director of National Intelligence, General Curtis Ripley, summed up the problem. \"The remaining leadership has gone to ground, taking their loyal troops with them. I think they know they can't keep their entire territory, but they are trying to retain their base around Culiacan. We'll keep looking.\"\n\nI looked over at my Attorney General. \"How are we doing on freezing their assets?\"\n\n\"Not as well as I hoped,\" she said. \"Accounts with Banco Mexico are cleaned out. We're having no luck with some of the offshore banks and their secrecy laws. They aren't cooperating.\"\n\n\"You can't just take the money from the accounts as Spider Monkey did?\"\n\n\"If it ever came out that the United States Government hacked foreign bank accounts and stole assets, the blowback would be bad,\" my Treasury Secretary said. \"It would shake confidence in the banking system and open us up to retaliatory hacking.\"\n\n\"So we don't do it directly,\" I said. \"There has to be a better way. As long as they have money and people, there is a chance they can make a comeback. I need them destroyed.\" I looked over to my left, where a pregnant Colletta was resting in a chair. \"Is there anything your people can do?\"\n\n\"The pardon letter doesn't cover future acts,\" Colletta replied. \"Even if you gave me another one, Spider Monkey is in hiding for good reasons. It's not just Sinaloa Cartel retaliation she is facing; the other Cartels and Organized Crime figures know she was able to take a billion dollars away from the Cartel in minutes. How much would they be willing to sacrifice to get that kind of person working for them?\"\n\nI shuddered; Spider had taken one for the team. The theft and the pardon letter had come out two days after the declaration of war. Naturally, I was shocked that I'd signed a blanket pardon without knowing the full scope of her crimes (heh heh) and would look into any alternatives to bring her to justice. Signing another would be taking a huge political risk. \"She's an important asset, and I need her help. The question is how to make it politically palatable.\"\n\n\"It's not like she hasn't done it before,\" the Chairman of the Joint Chiefs replied. \"We are at war with the Cartel. We shouldn't apologize for using any means, legal or not, to destroy the enemy.\"\n\n\"You're opening a huge can of worms if you knowingly sanction international banking theft,\" the Treasury Secretary said.\n\n\"I need to stop this conversation right now,\" Colletta stated. \"Spider Monkey has sacrificed so much already. She is about to give birth to her first child while hiding from people who would torture and kill her to get the money back. She's gone and may never be able to return home again. She won't even use a computer because it could give her location away. I won't accept anything that endangers her life and that of her family. She's already got the billion dollars; what can you offer her that she can't get on her own?\"\n\nI could see her point. \"So, what would you suggest?\"\n\nShe shrugged her shoulders. \"Keep doing what you are doing. The Sinaloa Cartel is circling the drain. We've taken their money, destroyed their assets, and decimated their leadership. Their time is running out even if you do nothing more! Another Cartel, probably Jalisco, will move into their territory and wipe out the last of them. It's inevitable.\"\n\nI could see others nodding. \"Fine. Colletta, please return in two weeks with any other ideas you may have.\"\n\n\"Of course, Madam President.\"\n\nThe meeting ended, and it was back to a packed schedule. No one can prepare you for how physically demanding this job is before you take it. The pressure is intense, and wakeups are common. It is no wonder a two-term president looks like they have aged two decades.\n\nI had a plan for that, though. After being sworn in for another term, I would find myself a mate and become a werewolf.\n\nI'd have another century to live after leaving office.\n\nCh. 74\n\nMaria Meztli's POV<br >Arrowhead Pack Grounds\n\nIt was finally happening, and I was nervous as hell about it.\n\nIt was Saturday of Memorial Day weekend, and there were bikers and vehicles EVERYWHERE. A lot had happened in the last few weeks, and we were ready to party. The Sinaloa Cartel was no more; President Kettering had announced the short and brutal war was over two days ago. The conspiracy against her was broken, with dozens imprisoned awaiting trial or cutting deals with the prosecution to testify against the others. And the checks had arrived.\n\nRemember the billion dollars that Spider Monkey liberated from the Sinaloa accounts? Her pardon deal with the Feds allowed her to bring the money into the United States, provided she paid taxes. Spider Monkey and Vic did spend weeks hiding in a cabin in the White Mountains, but they'd been hiding with tax lawyers and financial advisors. BDSM (Big Dog-Spider Monkey) already had millions in the bank, and they wanted to spread the wealth.\n\nHow does $30k per Pack member sound? Those were the checks we received in the mail; Vic and Spidey each sent the max $15k tax-exempt gift allowed to each person. And not just in Arrowhead; she did that for every North American Pack. Since Canada has no gift tax, the Blue River, Banff, and Belorutsk Pack members got to keep the full thirty as well. There were a lot of new motorcycles making this trip.\n\nThen, they donated ten million dollars to each Pack's corporation. The Alphas would use this to fund improvements, buy additional land, or reduce Pack debt. Arrowhead and Oxbow Lake, as the home Packs, each got an additional ten million \"because we need a bigger pool,\" as the letter said. Chase said he'd get right on that. Finally, she set aside money in a trust to pay educational expenses for North American werewolves.\n\nSpider Monkey took care of her Steel Ladies in the deal. She sent a million dollars to each of the Steel Lady chapters in the United States to, and I quote, \"buy the shit we need that the men don't think is important.\" I've been laughing my ass off as the Ladies showing up told stories of what they are doing with the money; playgrounds, daycare facilities, new furnishings, even a dedicated Ladies-only meeting room. It's their money, and the Brotherhood can't touch it.\n\nFinally, BDSM sent me a debit card connected to an account to cover expenses for the first annual Steel Brotherhood Lake Superior Loop ride. I just about fainted when I saw the amount and read what she told me to do with it. Those that showed up, and there were a LOT of them, wouldn't have to pay a thing. Gas stations? I keep running the card and pay for it all. Hotels? I've reserved as many rooms as I can get. Food? I've got the tab. For a ten-day ride, it would be quite the bill.\n\nThe entire Pack House dining hall was full after breakfast for the pre-ride brief, with all three wings packed with wolves and bikers. Lance and I had worked hard on logistics, and we'd planned a ride with plenty of options for both serious riding and exploring. We laid out the rules and the first day's ride; we would email out future days the night before. Many of the restaurants along the way wouldn't be able to handle our entire group at once. In the bigger towns, there would be multiple restaurant options. When there was only one place to eat, I broke the ride into groups who would eat and explore in shifts. I'd also picked a few beaches to stop at and arranged for catering companies to provide food for us there. The ten-day trip required about a hundred and fifty miles of riding a day, which wasn't a hard pace at all. If we ran into traffic or weather delays, we could easily catch back up.\n\nIt wasn't just the bikers, either. The Loop was a family-friendly ride, and we had two dozen recreational vehicles at the tail end of the formation. The majority of Arrowhead and Oxbow Lake Pack were going, including those not interested in motorcycles but wanting the adventure. They would be driving in the RVs, the support vans, or cars. All in, we had almost two hundred people going, and they were all following my plan.\n\nAs you can imagine, with this many people and Packs, communications would be a challenge. Pack Links were the answer to that. I worked it so that each vehicle had a member of the Arrowhead Pack onboard to relay directions. Since we had worked so closely with our landlords during planning, Roadkill was the Road Captain for the ride. He would ride in the front left spot. The Host Chapter President, Alpha Chase, would ride in the front right and relay commands back to all the Pack members. Arrowhead Pack members would relay it to other wolves, who could pass it to their Packs. Possum would split her time between riding with her old man and watching Rori and the kids in Rori's new RV.\n\nIf someone wanted to head off on their own, that was fine. I handed everyone a paper with the itinerary and waypoints, including the 'extra' runs for the adventurous. If you wanted to leave the group for a while, you checked out with the Ride Administrator on duty in the Alpha's RV and caught up later. If you broke down, one of the Club support vans would break off, and the Prospects along would assist you. If your butt couldn't handle more saddle time, we had trailers and room in the support vehicles. If there weren't enough hotel rooms, we'd pack people into the RVs, and we'd brought tents and sleeping bags.\n\nWhen I finished the briefing on the itinerary and logistics, Roadkill reviewed formation riding practices and hand signals. We had to keep the motorcycles together, or cars would start breaking us up. The riding order was by rank; Brotherhood Presidents and Pack Alphas were in front, followed by Vice Presidents, Master at Arms, and Betas. Patched members were behind them, followed by normal-rank Pack members, prospects, and finally, the cars and RV's. We had four pairs of 'blockers' who would ride near the front; their job was to leapfrog ahead, blocking cross-traffic so our column could stay together. A Pack SUV would be the last vehicle in line, bearing a warning sign on the back of the rider column ahead.\n\nThis trip wasn't a ride; it was a military expedition. The only thing it didn't have was firearms; since we were going into Canada, our visitors who carried locked them up in our Pack Armory. We had security in numbers; who would mess with dozens of bikers, many of whom turned into wolves?\n\nAlpha Chase and a few Brotherhood leaders finished up the brief, and it was time to ride. Lance was back with the Prospects, and I was riding with him. As much as I enjoyed our last trip when I rode alone, I had a lot going on this trip. I knew I might have to help handle crises from the RV once in a while, and I didn't want to load my bike every time that happened. Riding next to me was FBI Agent Lana Black, assigned to my protection on the trip. She was the only armed person in the group, with the Royal Canadian Mounted Police granting her permission. She was riding a BMW 1250 RT touring bike in bright white, and it stood out among the chrome and black of the Harleys.\n\nThe line stretched from the main entry to Arrowhead to the beach. Chase fired up his Harley, and like a rolling wave, the noise moved from front to back as everyone started their bikes. The local Sheriff did us a solid, a cruiser with flashing lights leading us through Two Harbors and north on Highway 61.\n\nThe first stop was optional but was a must for first-time visitors. Split Rock Lighthouse is one of the most-photographed buildings in Minnesota, and the State Park is a lot of fun. A little over half the group pulled in for a 90-minute stop; the rest continued north to Grand Marais and Sven and Ole's Pizza, the lunch stop on our tour. When they finished eating, the lighthouse group was arriving. Chase led a group on a short ride up into the Lakes area while others shopped in the tourist town. We all left together, heading for the next tour stop. We all pulled into a rest area just before the Grand Portage Border Crossing.\n\nChase herded everyone back to the trails heading to the High Falls on the Pigeon River while Possum and the others herded me into Rori's RV. Ten minutes later, with my hair done and a veil over my face, the group led me up to where everyone was waiting below the Falls. I started crying as I spotted Lance waiting for me in his Prospect cut, Chase standing by his side. \"Are you ready to get married,\" Roadkill asked.\n\n\"Absolutely,\" I told him as I wiped tears, thankful for waterproof mascara. Someone had a boom box playing the wedding march, and tourists and bikers alike were taking pictures of us as we walked up the trail to them. One of the Brotherhood members was an ordained minister, and the service flew by. We exchanged vows and rings, he pronounced us husband and wife, and I kissed the hell out of him. Twenty minutes later, we were back on the road and heading to Thunder Bay for dinner and our first night.\n\nWe left our group at dinner early and made the most of our wedding night.\n\nCh. 75\n\nMaria (Meztli) Skollson's POV<br >Thunder Bay, Ontario, Canada\n\nMy phone alarm went off, rousing me out of deep sleep. I rolled over and turned it off, groaning as my body protested the movements. Lance had used his new wife hard and often on his wedding night, and it would take a bit for my body to recover. \"Come on, my husband,\" I said as I sat up. The sheet pooled around my waist as I stretched my arms and back.\n\n\"Mmmm, that's a sight I'll never get tired of,\" he said.\n\n\"Shower.\" I got out of bed and padded my way to the hotel bathroom, eventually ending up in the shower with the hot water pouring over my face. I sensed him coming in behind me and smiled. \"Didn't you get enough of me last night?\"",
        "\"I still have the skin on my dick, so I'm not done with you yet,\" he teased. I laughed, thinking back to how sore we both were after my heat.\n\n\"Do my hair?\" He put some shampoo in his hands and started working it into my hair and scalp. I started purring in pleasure as his fingers caressed my skin; cats LOVE to be scratched and touched, after all. He rinsed it out and put the conditioner in, then started washing my body. I didn't want to get turned on, but he wasn't giving me a choice. His hands were that good, and one of them kept rubbing my kitty and making it all wet. \"My turn,\" I told him.\n\nI got the washcloth ready as he turned away from me. I loved his body, so tall and muscular compared to my small and athletic frame. I did his hair, swearing that I'd get rid of that stupid mullet now that we were married. I finished his back and legs and turned him around. Predictably, he was hard as a rock. I gave him a look, and he just shrugged. \"You do that to me constantly,\" he said. \"There is no one else for me.\"\n\nI scrubbed his chest and arms, leaving kisses behind as I rinsed him off. I made my way down, going to my knees to get his legs and feet. Lance's lance was in my face, and I teased him by kissing and licking it before going back to washing him off. He groaned and begged, but I just kept washing him in between teases. Finally, he'd had enough. He hoisted me up like I weighed nothing. My legs wrapped around his waist, and my hands grabbed his neck. I could feel his hard cock between us as his hands moved to cup my ass. My back hit the shower wall, and I dropped a hand down to guide him to my entrance. He stuffed me full with the first thrust, making me scream in pleasure and pain. \"You shouldn't tease a wolf,\" he said with a grin as he started pounding me.\n\n\"Just fucking take me,\" I said as the first orgasm left me trembling in his arms. He gave me two more before he filled me with his hot seed.\n\nLance carried me out and dried me off, but he didn't let me clean up all the mess he'd left behind. \"The wolves need to know you are MINE,\" he said with a low growl.\n\n\"I think they know after all the screaming,\" I replied. It wasn't worth fighting about, and my cat liked the idea of having that scent strong on us around all the males. We got dressed in our riding clothes and checked out. I sent a message to Special Agent Black, letting her know we were heading to Tina's Breakfast and Lunch to meet the other riders. We had a dozen other bikers heading out with us, so I wasn't worried about security. I'd made arrangements with Tina last week, leaving her the debit card number and a picture of the wristband our group's riders would be wearing. Anyone showing up with the wristband got added to my bill.\n\nThe caravan was leaving Thunder Bay at ten, so we had plenty of time. Some people ate the Continental Breakfast at their hotel and hit the road early for an optional run with Roadkill. They left twenty minutes ago, heading north of town. The hard-core riders were going down the Sleeping Giant Provincial Park peninsula and would meet us where their road connected to 17 at ten-thirty.\n\nI walked outside with Lance when Coral yelled for me from across the parking lot. She waved me over, saying she needed to talk to me. \"I'll see you at breakfast,\" I said. I followed Alpha Coral onto her brother's Newmar Canyon 3927 Toy Hauler, a luxury Class A motorhome bought just in time for this trip. Maritza was waiting for me, but that wasn't the shock.\n\n\"Congratulations, Maria,\" Spider Monkey said. \"It was a beautiful wedding.\"\n\n\"Spider? Vic?\" It was a good thing the door was closed behind me as I squealed and hugged them both. \"I've been so worried about you!\"\n\n\"We're fine, as you can see,\" Vic said.\n\n\"Are you joining our trip?\"\n\n\"No,\" Vic replied. \"We're leaving with Alpha Coral and Hope on their private jet this morning. Alpha Keith will finish the ride.\"\n\nCoral nodded. \"I'm too pregnant to ride, and I'm needed back home. Vic and Spidey have already seen the Great Lakes, and we need to stay out of sight.\"\n\nI looked over at Spider Monkey. \"How?\"\n\n\"The Katahdin Pack brought us up from Maryland and got us across the border. We had Canadian passports and identifications that Coral provided, and they drove one of their RVs from Maine to here. We watched your wedding from the overlook on the Canadian side. It was perfect, but it's the only time we've been out of the RV in a week. We brought the lawyers along for the financial stuff, but all that is behind us, and Sinaloa is no more.\"\n\nI hugged Spider a little tighter. \"Then come home! I miss you!\"\n\n\"We have to stay out of sight for a few years,\" Spider said with tears in her eyes. \"We've joined the Blue River Pack; they are isolated enough that no one will know we are there. Our baby will be born there, and they have a good doctor.\"\n\n\"What will you do?\"\n\n\"I don't know. Vic won't let me touch a computer or a phone because it could lead people to us. I guess I'll be a Mom and become a wolf.\"\n\nAt least I know she is safe, and Chase will visit his twin sister. We'll have to come along. \"So this is goodbye?\"\n\nVic nodded. \"It is. We sold our house back to Arrowhead and told Chase to start looking for another Beta. He's not happy, but he's glad that we'll be with his sister.\"\n\n\"Our car is here,\" Coral said.\n\n\"Time to go,\" Possum said. \"Go back to Lance and head to breakfast, and we'll meet you there.\"\n\nI gave BDSM one last hug and walked out. There was a black Suburban with tinted windows waiting with the door open. I walked past, heading for the line of Harleys, and heard the door close before it pulled away.\n\nI cried the whole way to breakfast as I told Lance what happened. \"They are safe and happy, and that's all that is important,\" he told me. \"What they did for us won't be forgotten.\"\n\n\"I'm just trying to imagine Spider Monkey without a computer,\" I said with a laugh. \"Talk about withdrawals! It's been her whole LIFE!\"\n\n\"She's got millions of reasons to stay off it now,\" he replied as we pulled into the parking lot. The place was full of customers, so we had to wait for a table to open up. The nannies agreed to take Maritza and Chase's toddlers Cheryl and Mark to a separate table with their guards.\n\nMore bikes were arriving all the time, and I recognized Lana's BMW. She walked in with a tall, handsome man and a smile on her face that matched mine. She was also walking a little gingerly. She'd gotten laid and laid well! When they came in, I waved them over. She introduced me to James Carver, a Beta in the Donner Pack. \"I need to wash up before we're seated,\" I said as I pulled her to the bathroom. I didn't miss the way he looked at her as we walked away. As soon as we got inside, I turned to her. \"Damn, girl, he's hot!\"\n\nShe blushed. \"I can't believe that man is eighty-seven years old. He looks like he's thirty and fucks like he's eighteen!\" We quickly washed up while we talked. \"I couldn't believe it when he came over to talk to me last night. We sat together for hours before I brought him back to my room. I haven't had a night like that since I was in college.\" I could believe it; FBI life wouldn't be conducive to dating. \"He's not intimidated at all by my age or my job.\" Lana was in her late twenties and had never been married.\n\n\"From how he looks at you, he's interested in more than sex,\" I told her. \"Relax and enjoy the time together.\" If they were mates, he'd never leave her side.\n\nWe went back out and got a big table right away. The wolves were all ordering big breakfasts, heavy on the meats. I had a Banana Split Waffle because I'm pregnant, and I can have what I want, right? I did steal Lance's bacon, and he didn't complain. If that's not true love, what is?\n\nI learned a little more about James; he'd been one of the four Betas there for fifty years. He sold his construction company last year when it became too obvious he wasn't aging like other people in the Squaw Valley area. He'd been to Arrowhead looking for a mate a few times and liked it. He was planning to sound out Chase about a Pack transfer if there was a Beta spot available. \"And now there is,\" I sent to Lance.\n\nWe finished up and freed the table, and I went over to Chase's RV to work on logistics for later today as the guys went out to ride around and talk motorcycles. At ten, everyone was gassed up and ready for the ride. I was sitting behind Lance in our spot near the back of the Pack as we got ready to leave. Lana had her BMW next to mine, while James had his rental Harley behind me. For some reason, he gave up his prime spot with the Betas to slum around with the unranked.\n\nHuh.\n\nCh. 76\n\nMaria (Meztli) Skollson's POV<br >North Shore of Lake Superior, Ontario, Canada\n\nWe only made one stop on this leg, at Rainbow Falls Provincial Park, right off the Trans-Canada Highway 17. The park was convenient, with a trail with 182 steps leading down to the falls. I was glad Lance was along to carry Maritza after the kids finished playing, and we had to go back up! The falls didn't have any large vertical drops, but they cascaded down the rocks and were beautiful. When we returned to the parking lot, we grabbed some sandwiches, chips, and drinks from the support van. I knew there wasn't much in the way of food out this way, so we'd brought it in coolers from Thunder Bay.\n\nBy one, we were back on the road. We arrived at the beach in Terrace Bay less than an hour later, parking all the vehicles at the far end of the parking lot. The beach would be our headquarters for the night, and I'd arranged optional activities. I paid a boat charter to take groups out on the water, rented kayaks so people could paddle the lake and rivers, and there was a short hiking trail to the 100-ft drop Aguasabon Falls. If you wanted more riding, there was a four-hour ride looping up through Steel River Provincial Park. If you had a camera, you were using it.\n\nOnce everyone was briefed and out having fun, I joined the kiddos playing on the beach. We'd set up canopies and a playpen to keep the sun off them as they played and slept. The Moms were watching them and talking. I got a better idea of who Chase and Rori were from this time. I got to spend time with Carson's mate Heather and her twins Kelly and Connie. Ashley was there with her son Shane while her mate Sawyer was out kayaking. Rori stayed on a blanket, her eyes not missing anything as she rested her big pregnant belly.\n\nThe beach itself was not as crowded as we expected as it was still early in the season. It wasn't sand, more like gravel, and the water was cold. The sun was warm, though, and it was a beautiful day. Lance and I took a break for the boat tour and hiked to the falls before dinner while the others watched Maritza.\n\nThe smoker on the barbecue catering truck I'd hired had been going all afternoon, and everything was ready by seven. Chase had turned the ramp on his toy hauler into an outdoor patio, and we sat around enjoying the late sun and the company. Those that weren't driving were drinking cold beer around the campfires and making s'mores.\n\nEveryone was having a great time, even the ones who weren't riding. Three Tequila told me she didn't know how I did it. All of the Steel Brotherhood rides she'd been on went one of two ways. Either they were family social events or hard riding and drinking. Somehow, I'd found a way to have us all together while still allowing people to have the trip they liked. If you were here to ride, you'd been in the saddle for ten hours today. If not, you spent more time hiking and exploring than you did riding.\n\nThe other beach visitors were leaving, so many of us decided to shift in the RVs and explore. Maritza was thrilled to change into her cat. The humans who stayed behind watched, fascinated as wolves and two jaguars started running and playing along the shore. As the only cats, Maritza and I got a lot of attention. We were the only ones who went swimming; wolves will hunt in streams and cool off in the water, but they aren't Labradors. Jaguars are natural swimmers and will even hunt underwater.\n\nMaritza had enough water after ten minutes, so we shook ourselves off and trotted over to the campfire. Ashley dried her off with a towel, and Maritza promptly fell asleep in her lap. She didn't mind a bit; since wolves don't shift until their mid-teens, my baby jaguar was 'off-the-charts cute' and was just fine there.\n\nThirty or so riders headed to town for their hotel rooms while the rest of us stayed on the beach and watched the stars come out. Some people set up tents, but most of us headed for the heated campers.\n\nYou wouldn't believe how many people an RV can sleep when they are puppy piling.\n\nWe cooked mass quantities of eggs, bacon, and pancakes over the campfires and the RV kitchens in the morning. On the road by nine, we swung by the hotels in Terrace Bay and topped off the gas tanks. This part of the ride was sparsely populated, with no big restaurants. I also ordered the Prospects to the Wal-Mart to buy all the steaks, burgers, and fixings for dinner they could fit into the coolers.\n\nToday's ride took us around to the east side of the lake. There was no \"long\" ride option this time as there were no hotels big enough for us before Sault Ste. Marie. We rode three hours along the lake to Wawa.\n\nThe town wasn't big enough to feed everyone, so I gave everyone ninety minutes and left the choices open. We ate at the Viking Restaurant; others picked the North of 17 or the Chinese place. It took a while to get everyone served, but we still made it to Old Woman Bay by one in the afternoon. There was no camping at this site, but we paid for parking and drove down to the big beach and set up. The bay was very scenic, with sheer cliffs four hundred feet tall in spots surrounding the beach. Once again, I'd arranged for kayak rentals here for the adventurous, and there was good hiking if you wanted to stretch your legs.\n\nWe had all the grills fired up and the steaks ready by five. We had a good time at this stop, but soon enough had to head back out on the road for the hotels. It was a two-hour drive south along the water, with the sun setting over Lake Superior to our right. We had reservations at three hotels to find all the rooms we needed, but we'd all have a place to sleep tonight.\n\nThe sun was almost down when it happened. Our group of riders filled the lanes, doing about fifty miles an hour on the winding coast road. Suddenly, I saw lights to our left as an old pickup blew a stop sign and crossed just in front of me. Lance braked hard, swerving left into the oncoming lane before laying our bike down. I landed hard on my left shoulder, and we skidded for a few seconds before hitting the guardrail on the other side.\n\nLana couldn't react fast enough. She braked hard, but the front of the pickup hit her front wheel, and she went over the handlebars. All I could hear was scraping metal and brakes as the rest of the riders stopped in time.\n\n\"LANA!\" I heard James screaming for her as he got off his Harley, running around behind the pickup truck to where she lay on the road. Two guys went to check on the driver while the others ran to us.\n\n\"Are you all right,\" Lance asked me.\n\n\"Get this fucking thing off my leg,\" I told him. Others rushed up to do just that.\n\nEverything slowed down as I heard James begging Lana to open her eyes while someone told him not to move her head. Guys lifted the Harley off me and helped me up, but I couldn't put any weight on my left knee or lift my left arm. Lance was trying to walk it off, but I could tell he was hurting too.\n\nI heard someone on the phone with the emergency operator reporting the accident and requesting an ambulance.\n\nLana still wasn't moving, and James wasn't handling that well. If that idiot killed his mate, I don't know how many wolves it would take to stop him from ripping the driver apart.\n\nWord of the accident had spread to the Alphas, and they took charge. Everyone ahead of the accident scene was to keep going to the hotels; there was nothing they could do for us here. Alpha Chase came back since he was a doctor. Possum grabbed the medical kit out of the RV and ran forward to help. In the meantime, guys wheeled Lance's bike to the right side of the road. They set up flares on the road and started controlling traffic so our people trapped behind the accident could continue to the hotel. Only a half-dozen riders and Chase's RV were still at the scene when the first Ontario Provincial Police officer arrived. The ambulance was right behind him.\n\nAny thought of this being an assassination attempt against me ended when we got a whiff of the driver. The old man was so drunk he could barely stand. After his arrest, he threw up in the back of the police car.\n\nThank Tezcatlipoca that Lana woke up. She was dizzy and seeing double, but she was awake. Chase supervised as she was strapped to a backboard and moved to a gurney. With potential head and neck injuries, her helmet was still on, and they'd placed a neck brace. They would remove it in the Emergency Room after X-rays checked for a neck fracture.\n\n\"You need to go with them and get that knee and shoulder checked out,\" Chase told me.\n\n\"James should go with her.\"\n\n\"They won't take him with you two, and you can't ride with that arm. James can follow on his motorcycle. I'll be with him plus a few others.\"\n\nLance wanted to go too, but his Harley was too damaged to ride. Granite, the Fort Lauderdale Chapter President, told him to take his bike, and he'd wait. \"I'll be there as soon as I can. Once they finish with the accident investigation, we'll load the bikes into Chase's toy hauler, and we'll head to the hospital.\"\n\nI thought about just riding in the RV, but Lance would insist I get checked out after he landed on me and rode me into the rail. I put an arm around Chase and Larry's shoulders then they linked arms under my thighs to carry me to the ambulance. They sat me near the back and closed the doors.\n\nThe last thing I saw was James' face as he turned to run for his Harley.\n\nCh. 77\n\nMaria (Meztli) Skollson's POV<br >Highway 17 North of Sault Ste. Marie, Ontario, Canada\n\nIt wasn't an enjoyable ride to the hospital. The big ambulance had to slow down for the turns, and I couldn't see the scenery we came here to see. The EMT spent most of his time monitoring Lana and keeping her awake, but he did check on me. \"You should take off your leathers and outerwear if you can,\" he told me. \"Emergency rooms have a habit of just cutting things off.\"\n\nIt sounded like a good idea. I'd left my helmet behind with Lance, but with the EMT's help, I got my Steel Ladies cut and my motorcycle jacket off. I couldn't move my shoulder around without pain, and a look at the leather showed why. The road had scraped up the leathers as we skidded across the opposite lane. He helped me get my leather chaps off, being careful around my knee. They were toast as well from where my knee, thigh, and hips had landed. My jeans underneath were intact, and there was no blood. He wrapped my knee with a cold pack and gave me a sling for my arm.\n\nI'd saved more of my gear than Lana, although my leathers got so scratched up that I'd probably have to replace them anyway. With her body strapped to the backboard and her helmet taped in place, they couldn't risk moving her just for clothing. The EMT used heavy shears to cut away the sleeve of her BMW motorcycle jacket and shirt to hook up the blood pressure monitor. He took one of her racing gloves off and cut the other because of the broken wrist.\n\n\"I don't think it's fixable,\" I told her. \"The front fork collapsed back into the engine housing when you hit the side of the truck. Nice distance on the dismount, though. I heard you cleared thirty feet.\"",
        "\"I was trying for forty, but the cartwheel took away the distance,\" she said with a smile. \"How is everyone else?\"\n\n\"The drunk driver wasn't hurt, James stopped in time, and Lance landed on me.\"\n\n\"You're not much of a skidpad.\"\n\n\"I know. My knee would have been fine if Lance's fat ass wasn't sitting on it.\"\n\nShe giggled at that. \"That's why I don't ride bitch. If I crash, it's my fault.\"\n\n\"You had no chance to avoid it, Lana. Lance barely did, and he had six feet more reaction time and an empty lane he could turn in. You were trapped.\"\n\n\"Yeah.\" She closed her eyes, probably riding out a wave of pain. \"Can you get my phone out of my left breast pocket? I need to tell my boss about this since I'm officially on the job.\"\n\nThe EMT got her phone, but it didn't survive the crash. \"I can call for you.\"\n\nShe didn't remember her boss's number, but she had Allison's. \"Special Agent Cook,\" she answered as I put the phone on speaker.\n\n\"Allison, it's Lana. I've been in an accident.\"\n\n\"I know, Chase called me, and I've already informed Smallwood. He's going to speak with the SAIC of the Detroit office and send an agent to replace you.\"\n\n\"We'll be at the Sault Area Hospital Emergency Room on the Canadian side,\" I told them. \"Unless you can take us across to a US hospital.\"\n\n\"Not with a head injury,\" the EMT said. \"We can arrange to transport her across the border after the doctor clears her for transport.\"\n\n\"Got all that?\" Allison had it all written down, and now she had my phone number. \"Anyone else you want me to call?\"\n\n\"No,\" she said. \"My brother is on a submarine in the Pacific, and my parents are dead.\" The ambulance was slowing down and making turns, so we must be close. I could hear a half-dozen Harleys riding close behind us.\n\nThe ambulance came to a stop, and the back doors opened. Two orderlies were waiting for me with a wheelchair; they helped me down and out of the way as the rest of the team took the gurney. The EMT went with them as they rolled Lana in, giving an update on her vitals. One of the men wheeled me to Admitting.\n\nThe sliding doors opened as my friends rushed inside. Chase was first to my side. \"Are you all right?\"\n\n\"I'm fine, but I've never dealt with this stuff. Mom always took care of it.\" I found my insurance card in my travel wallet and handed that over with my driver's license.\n\nChase explained how it would work. Although we got free medical care from the Pack clinic, the Alphas kept a group High Deductible Health Plan for major medical. The Canadian hospital would bill my insurance, and I'd pay the bill up to the deductible limit. \"This shouldn't reach that, though.\" I finished the paperwork, and Lance rolled me over to where everyone was sitting. I wasn't the priority patient, so I had to wait.\n\nTwo Provincial Police officers entered the waiting room while we waited; one went back to the examining room while the other took my statement. The second man came out with Lana's pistol, badge, and magazines. They'd cut her shoulder holster off to get it. I couldn't tell them much; I saw the truck when Lance did, then we were sliding.\n\nI finally got taken back for X-rays, which didn't show any fractures. The Doc told me I was lucky; my shoulder had dislocated but popped back in, so there was nothing to do but keep it in the sling with ice and rest. My knee had a bone bruise, so I was to stay off it as much as possible and ice it regularly. Since it wasn't structural, I didn't need crutches or a brace. He gave me a bottle of painkillers and a sample of Aleve. \"Take the Vicodin as directed until they are gone, then take Aleve for two weeks at two pills per twelve hours. Keep the knee elevated and ice at least every four hours.\" Lance was in the room for the exam, and I knew he'd take care of me. I asked about the baby, but the baby was tiny right now, and I hadn't taken an abdominal injury. I signed my discharge papers, and Lance wheeled me back to the waiting room.\n\nI wasn't going to leave until we knew about Lana's injuries, so I sat there in the waiting room with ice packs on my shoulder and knee. The doctor came out, speaking briefly to the police officers who went back to get her statement. \"You're all waiting for Miss Black?\"\n\n\"We are,\" James said.\n\n\"She's lucky she was wearing quality protective gear. It saved her life. The helmet saved her face, but she has a concussion and a sprained neck. She also has three cracked ribs on her left side, a broken left wrist, and a badly bruised left hip and shoulder. We'll be admitting her for observation.\"\n\n\"Can I see her? I'm her boyfriend.\"\n\n\"I'll take you back for a few minutes. Visiting hours start at nine in the morning.\"\n\nI let out a sigh of relief; it could have been a lot worse. The RV and the rest of our group showed up while James was back there. \"There's nothing else to do here tonight. Load up, and let's go to the hotel.\"\n\nLance gave Granite his keys back and then carried me to the RV. The ladies fussed over me as I got settled on the couch. Maritza had been crying, and she tucked into one side while Lance held me on the other. \"Chase is talking about cutting the trip short and going home after this.\"\n\nMy eyes got wide. \"NO! That's not what I want!\" Opening the link to Lance, Chase, and Rori, I told them that the show would go on in no uncertain terms. \"I can't ride, but I can stay in the RV, and I planned to do that some of the time anyway. I spent so much time planning this, Alphas. I don't want one accident to ruin everyone's trip.\"\n\nI hadn't convinced Chase just yet. \"What about Lana? We can't leave her behind.\"\n\n\"We already planned to spend a day in Sault Ste. Marie, then a day at the casino hotel not far west of here. James can stay with Lana and drive her back when she's released.\"\n\nWe finally agreed that Lance would finish the tour on the rental bike James had. One of the prospects and a support van would stay here as the group moved on, and Chase would arrange for a private jet to bring James and Lana home after her release. \"By the way, did you see how James reacted?\"\n\nLance laughed. \"If there was any doubt Lana is his mate, it's gone now. His wolf nearly came out when he saw the driver.\"\n\n\"He's lucky that Lana already knows about our kind. I think she'll agree to the change.\"\n\n\"They would be a good Beta pair. Sawyer and Ashley will want to keep them even more now.\"\n\nThat wouldn't happen, I thought. \"Sawyer doesn't have a chance to keep them; Lana is FBI, assigned to Minnesota, and we have a better pool.\"\n\n\"And an empty Beta home ready to go,\" Rori added. \"I can't wait to meet her wolf.\"\n\nMe, too. Lana was one strong woman, and her wolf would match.\n\nNow we needed to convince her to get a Harley and join the Ladies.\n\nCh. 78\n\nMaria (Meztli) Skollson's POV<br >Sault Ste. Marie, Ontario, Canada\n\nThe accident had cast a pall over the riders, and breakfast was a subdued affair. Lance had sent a prospect to Wal-Mart last night to buy a wheelchair for me. I had my leg straight and a bag of ice on it while we ate the breakfast buffet.\n\nWe kept to our plan for the day, though I'd be going with a small group to the hospital. Most of the group was taking a day ride with Roadkill leading. Even Rori was going; one of the old ladies went on the boat tour instead, leaving a spot for Rori in a sidecar. Rori had a pair of goggles and a bandana, and they put pillows and netting inside to keep her in place. It was her first time on a motorcycle in months, and she was thrilled.\n\nThe riders would backtrack north to Hayden before taking the windy 556 road northeast through the Aubinadong-Nushatongani Rivers Provincial Park. Once they reached 129, they'd take that south until they hit the Trans-Canada Highway 17 again on the north side of Lake Huron. Lunch would be there in Thessalon, sampling the famous pizza at Sinton's Tavern and Restaurant. They'd then head west, detouring for a two-hour loop around Saint Joseph Island. When done, they would cross the border into the United States. A short ride to the west would let them join the rest of us at the Bay Mills Resort and Casino.\n\nIt promised to be a great ride, and I was disappointed I couldn't make it. \"You should visit Lana, and I have to get my Harley fixed,\" Lance told me. They'd already transferred both wrecked bikes onto a trailer, and a prospect would drive him to the Harley dealer in Mackinaw City. The damage wasn't too bad; he'd need a new mirror, front wheel, and fender. \"They should be able to get it repaired enough to complete the trip by tomorrow since they are common parts. It could have been worse, but your body did a great job keeping the chrome and paint from getting all scratched up,\" he said with a smile. I glared at him. \"Too early?\"\n\n\"Until I can ride again, yes,\" I said. I had hopes that I could get back on the bike in a few days. I could ride with my left arm in a sling, so it was a matter of how long until the swelling in my knee went down enough to sit comfortably. Until then, I'd stay with Maritza in the Alpha's RV.\n\nMost others would be taking a morning-long boat tour of the canals and the lock and dam. Lunch would be on the rooftop of Outspoken Brewing overlooking the canals. I expected some would stay there all afternoon, while others would go shopping or head to the museums. I'd left the afternoon open on purpose.\n\nI watched from the hotel entrance with Maritza as Lance headed out with the prospect, then the riders and support vehicles took off the other way. The thirty or so people going on the boat tour gathered together. They left the RVs parked for the day, using motorcycles or the support cars and SUVs for the short drive to the marina.\n\nThat left us with Chase's RV, James, Brent, Laura, Possum, Three Tequila, and all the kids.\n\nJames was a nervous wreck; he hadn't slept well, and he couldn't let his wolf out in the city. Sawyer had put Alpha command on his wolf, preventing him from shifting, but that just made him pace back and forth. No Pack member doubted that Lana was his mate, but he still had to convince Lana. James was planning to stay all day at the hospital and get a local hotel room if she wasn't released today. When she could travel, he had the number for the jet service to get them back to Arrowhead.\n\nCoral and Ashley took advantage of the slow day to ride in the day loop with their mates, and I'd sent Heather and the three nannies on the boat tour and shopping expedition. They'd missed out on a lot of activities, and I wanted them to have some fun with the adults for a while.\n\nPossum volunteered to drive the RV while Three Tequila fussed over the little ones and me. When done at the hospital, we'd get lunch and head to Bellevue Park. It was on the water so we could watch boats go by, and it had a few kid-friendly playgrounds.\n\nSince everyone else was gone, Possum drove us up to the hospital early. James ran inside to get us registered while we waited in the parking lot for visiting hours to begin. He came back out, reporting that they only allowed two visitors in the room at a time, and he wasn't leaving.\n\n\"She was guarding me, so I should go in,\" I told Possum. \"Her replacement is probably there with her.\"\n\nBrent looked at Laura. \"I'll escort Maria in and out while you guard the kids.\"\n\n\"That works,\" Laura replied. \"Keep the link open.\"\n\n\"Take your time, Maria. We'll watch cartoons and play until lunchtime,\" Possum replied. I told Maritza I'd be back soon and gave her a big hug.\n\nJames helped me out and into the wheelchair Brent was holding. He pushed me across the parking lot and inside to the elevator to her floor. He stopped at the waiting room on the floor and let James take over. \"Just have James poke his head out when you're ready to go,\" Brent said.\n\nLana turned off the television when the door opened and gave us a weak smile. It was clear she was in pain. \"Hey, guys.\"\n\nJames wheeled me next to the bed, then went around to the other side and sat down. He took her hand in his, the contact calming his wolf, who didn't like his mate suffering. \"How do you feel,\" he said as he stared into her eyes.\n\n\"Everything hurts, especially my head and neck. Faceplanting on the road isn't fun,\" she replied.\n\n\"Can't they give you anything for the pain?\"\n\n\"Not with the concussion. I landed headfirst; if not for the helmet, I'd be dead.\" James did NOT like that comment and had to close his eyes to push his wolf back. \"I owe you guys my life.\"\n\n\"I've never been so scared in my life,\" James told her.\n\n\"You kept me calm and safe,\" she replied.\n\nI was the third wheel in this conversation, but that was all right. I could see the effects of the mating pull in Lana's face; his touch calmed her and took away some of the pain. Finally, she turned back to me, taking in the sling and the knee brace. \"How bad are you?\"\n\n\"I'll be fine in a few weeks,\" I told her. \"It's a good thing we are all ATGATT riders.\" That stood for 'all the gear all the time,' meaning we wore full protective leathers and helmets whenever riding. I would have left half the skin on my leg behind if I'd been wearing jeans. \"I'm blaming it all on you.\"\n\nHer eyes got wide. \"What?\"\n\n\"I spent hours trying to figure out if I was cursed or unlucky before I figured it out. Think about it. We had a long double line of Harleys stretching as far as you can see, with a single bright white sauerkraut burner in the middle. You looked like a RUBBIE,\" which was a derogatory term for a Rich Urban Biker, \"and even the drunk guy figured that was the weak spot.\"\n\n\"I LOVE my Beemer! It rides like a dream and has smooth torque, unlike those old-fashioned rattletraps you guys overpay for.\"\n\nThe teasing broke the tension away. We both recognized how lucky we were to survive; our bodies would heal, and insurance would cover the damage to our rides.\n\nJames told her he was done with the tour and would make sure she got home safely. When she objected, he shut her up by leaning over and kissing her until she couldn't think straight. \"You are the most important thing in my life, Lana. Let me take care of you.\"\n\nIt was a beautiful moment, right up until Laura's mental yell slammed into my head like a flying carp on the river. \"GUN! HELP!\"\n\nCh. 79\n\nFormer CIA Station Chief Richard Todd's POV<br >Sault Area Hospital\n\nEverything had gone to shit in a heartbeat.\n\nSomehow, the FBI had learned of our secret accounts and activities, and they were arresting people left and right. The television news was full of my friends being frog-marched to jail, and they weren't fucking around with the charges. Murder, Attempted Murder of the President, and Treason? Fuck them. I got a warning call from my contact at Echelon's Canadian headquarters and implemented my escape plans just in time.\n\nI'd managed to stash almost ten million in a numbered Cayman Islands account for just this reason. I registered this Honda Accord to the new me, with a Canadian passport and driver's license. The cabin in the woods outside Ottawa I'd hidden was also in that name. I knew enough spycraft to change my appearance. I'd left my old life and all my property behind in an instant. Any Federal agent who came after me would find smoke and a vapor trail.\n\nTwo days ago, I'd parked near a Tim Horton's thirty kilometers away to use their wifi. I took precautions against identification, swapping out license plates and wearing a hat and fake beard despite the window tinting. I'd logged into my offshore account to transfer funds to the Bank of Montreal in an account tied to a debit card I'd use for expenses. I just about screamed when I saw the account was frozen.\n\nI quickly logged off and started driving, heading back to my cabin to think. The account wasn't traceable to my new name since I'd never made a transfer from there into my BMO account. I headed inside, pacing as I tried to calm down.\n\nI was in big trouble. With the numbered account gone, so was my escape plan. I didn't dare try to access my previous bank accounts. If the Feds hadn't frozen my bank accounts, it was because they were flagged and would lead them to me. My friends in the Company wouldn't help; the close ones were in jail, and the rest wouldn't risk it.\n\nAnd all because of that fucking SPIDER MONKEY and the Arrowhead Pack. The FBI might have convinced Mexico to freeze the money, but only a hacker would steal a billion dollars from the Cartel.\n\nAnd there was my answer. I needed money, and the Arrowhead Pack had loads of it.\n\nIt didn't take long to find social media posts that showed where they were. The fools were on a motorcycle tour of Canada! Tourists pictures of wolves running along a beach with two jaguars in the mix, an adult and a cub. Last night, I checked the encrypted chat room my Canadian Intelligence contact used to pass information. Echelon had a flag on Maria Meztli, and it got a hit after an accident north of Sault Ste. Marie. Drunk driver versus motorcycles, and the truck won. Maria and another rider went by ambulance to the Sault Area Hospital.\n\nI took a chance they would still be there in the morning. Driving all night, I'd arrived at the hospital parking lot at six in the morning. Checking with the desk, I found out Maria was not there, but her fellow biker Lana Black was. I found a spot in the corner of the parking lot and waited.\n\nIt was just after nine when I saw a luxury RV pull into the back of the lot and stop. A man got out, one I recognized from the beach pictures on social media. He came back out a few minutes later, so I waited.\n\nJust before ten, another man came out and set up a wheelchair. Soon after, the first man exited, carrying Maria Meztli in his arms. I could see a wrap on her left knee, and her left arm was in a sling. Good; an injured jaguar would be easier to handle. I watched as the three went inside, giving them a few minutes to make sure they didn't come back out again.\n\nMy plan was simple; I'd wait for them in the RV, subdue them, and hold Maria for ransom. I checked my Colt 1911 was cocked and locked before sliding it into the holster behind my right hip. I grabbed my Kronos electric lock picking gun out of the glove box along with a pair of Mechanix gloves and a half-dozen fast-acting sedative autoinjectors. I was wearing a sweatshirt and a thick leather jacket, which should be enough to protect me from wolf bites.\n\nI started the car and pulled it a few spots away and parallel to the big RV. I released the trunk latch and got out. I made sure the trunk was empty of anything helpful and cut the emergency trunk release pull with my knife. I put a pillow in and unfolded a sleeping bag in the bottom in case it got cold.\n\nWalking to the RV door, I stopped and listened before trying to pick the lock. I heard little kids laughing, an adult female talking to them, and a movie playing. How perfect could this be? Maritza was left with her nanny while they went inside. This kidnapping would be easier than I thought.\n\nI reached for the handle to find it open. Drawing my 1911, I pulled the door open and jumped up into the kitchen area of the RV. I heard a scream from my right; two women moved between the kids on the couch and me, while the other shifted into a wolf.\n\n\"FREEZE,\" I said as I pointed my gun at the wolf, but it was too late to stop her leap. I fired once, hitting her in the shoulder, but it didn't stop her from trying to reach my throat. I put my gun arm up to ward her off, and she latched onto my forearm and bit down HARD, causing me to drop my gun. I heard a bone crack as her weight pulled me to the ground. I landed on top of the wolf and heard ribs cracking underneath me, but she didn't let go of my arm.",
        "I managed to get an autoinjector out and plunged the tip into the wolf's neck. The drug knocked her out in seconds. I rolled off the wolf, pulling my arm free as she panted and bled on the floor. I reached out and grabbed my pistol just in time to stop a woman from kicking me.\n\nThat was when I felt a sharp pain in my right ankle. Looking down, I saw a small jaguar form biting me through my sock! I kicked hard, tossing her into the cabinet under the sink and stunning her. I grabbed her by the scruff and picked her up, ignoring her hissing and her attempts to claw me. \"Sit DOWN,\" I told the other two middle-aged women who had gathered the remaining kids in their arms. I moved towards the door, setting the gun on the counter and reaching into my pocket. I tossed two more autoinjectors on the table. \"This will knock you out for a few hours. Inject each other, or I start shooting.\"\n\nThey did what I told them. Both passed out on the bench seats.\n\nI tossed the struggling cub into the trunk of my car and closed it up before she could stand. I ran around to the door, getting in and pulling out of the lot seconds later.\n\nIt was likely that someone heard the gunshot or saw me leaving the RV holding the cub. Stupid criminals race away from the crime scene. Smart ones change directions a few times and obey the speed limits, so I forced myself to be calm as I put distance between me and the crime scene. I found an empty parking lot a kilometers away and pulled in; taking a cordless screwdriver out, I swapped my license plates out in seconds. If someone remembered it or the security cameras caught it, they might not stop me now.\n\nI'd noticed a bracelet on the cat's rear paw. It was probably a tracking device. I went in the back, taking side cutters out of the toolbox on the floor and grabbing a blanket off the seat. I brought it with me to the rear of the car. Opening the trunk, I used the blanket to capture the hissing jaguar cub, holding it up with one hand like it was in a sack. I felt around until I had the paw with the bracelet. I set the blanket down while holding the leg, exposing it long enough to cut the anklet off. I threw the pieces on the ground, tied the blanket in a knot, and closed the trunk lid again.\n\nWhen I got back in the car, I checked the tiny puncture wounds above my ankle. They were still bleeding, so I stuffed a handkerchief inside my sock to put pressure on it. Heading north, I put the city behind me and started thinking about the next move.\n\nMaria and Chase would pay a lot of money to get the only jaguar cub left in the world back. I smiled, knowing I'd get my money and my life back now.\n\nCh. 80\n\nBrent's POV<br >Sixth Floor Waiting Room, Sault Area Hospital\n\nJames took over pushing Maria's wheelchair when the elevator door opened on Lana's floor. The waiting room was right there and empty; I picked a spot where I could watch the hall, the nurse station, the elevator, and the stairway. \"They are going into the room now. Do you need anything when we come back? Coffee?\"\n\nI could sense Laura's humor. \"Unless they have a Tim Horton's in the cafeteria, hospital food and coffee is a NO for me. Why don't you find a deli or something where we can get sandwiches for the park?\"\n\n\"I'm on it.\" I didn't know how long I'd be sitting here, so I pulled out my phone and started looking. I couldn't complain about the food on this trip; Maria's debit cards were covering everything. I searched our route to Bellevue Park, but it was all fast food and sit-down places. I stopped when I saw the name of one place, a block out of the way on Wellington. Clicking on it, I started drooling as I read the menu. \"Maria, Laura, what about Low and Slow Smoked Fusion BBQ and Grill? It's on the way, and they have our favorites.\"\n\n\"What is 'fusion' barbecue,\" Laura asked.\n\n\"I think that means you can get poutine with it. The menu has jambalaya, collard greens, and grits.\"\n\n\"Sounds like a Southern transplant,\" Maria answered with a laugh. \"Why not? I'm sure there are picnic tables at the park, and we all know how much the little ones like their barbecue.\"\n\n\"I'll put together an order and call it in when we are ready to leave.\" It would be a big one; their 'Platter for Two' didn't mean two adult werewolves. I started recording the order on my note program for two adult wolves, two human females, and four were toddlers. I made sure I had plenty of meats and a selection of sides, heavy on the mac and cheese. I added appetizers of onion rings and Texas Twinkies, smoked jalapenos stuffed with cream cheese and pulled pork. I was searching for pecan pie when Laura's panicked send filled my head.\n\n\"GUN! HELP!\"\n\nI was out of my seat in an instant. \"PROTECT MARIA,\" I yelled down the hall as I raced to the stairway. I felt pain through the mate bond, then nothing. My wolf roared in my head as I went down the stairs, my feet barely touching as I raced for the ground floor. When I couldn't raise Laura by the time I hit the ground floor, I linked Maria instead. \"CALL THE POLICE AND GET EVERYONE BACK HERE!\"\n\n\"On it,\" she said.\n\nI reached the ground floor but still had to run through half the hospital to get to the exit. I was dodging people the whole way to the doors, ignoring the people yelling at me not to run, and barely avoiding those in the hallways. Maritza was reaching out to Maria and me over the link; she was scared of the dark. I burst through the outside doors, just in time to see a silver Honda turn onto the main road in front. I ran across the half-empty parking lot to the Alpha's RV, almost ripping the door off. My heart sank when I got my first look at my mate.\n\nShe was in wolf form, unconscious on the floor and bleeding from her chest and mouth. \"LAURA!\" I knelt by her as I looked to the right; Three Tequila and Possum were out, and I could see three crying toddlers. I pulled the autoinjector out of her neck and pocketed it. \"Multiple injured, get help out here now,\" I sent to Maria. I picked up Laura's wolf in my arms; I had to get her inside. \"Where is Maritza,\" I asked.\n\n\"Bad man!\" Cheryl was holding her brother as tears filled her eyes.\n\n\"Stay here,\" I said. I went back out, running with Laura to the emergency room entrance while I updated Maria with what was happening. An ambulance was parked there, and they grabbed gurneys and headed out.\n\nThe Emergency Room doors opened as I yelled for help. \"Two more injured out in the RV in the parking lot,\" I told the woman behind the desk. \"Get me a gurney!\"\n\n\"This isn't a pet hospital,\" a nurse said as I ran past her.\n\nScrew the gurney! I went through the doors and put Laura on the bed in the first treatment room I saw open. A doctor was right behind us. \"No dogs in here!\"\n\n\"She's not a dog, she's my wife and a werewolf, and she's got a bullet in her. Now fucking treat her!\"\n\nThe doctor wasn't happy. \"I'm not a vet! I know nothing about her anatomy!\"\n\n\"Take a pic, get the bullet out, and stop the bleeding,\" I replied.\n\nHe looked at my eyes and agreed to do his best. \"Can you make your wife human again?\"\n\n\"Not until she's awake.\" We only shifted when we had conscious control of ourselves. \"She had his in her neck.\" I handed him the autoinjector.\n\n\"You have to leave,\" the nurse told me.\n\nIt struck me that I had responsibilities beyond my wife today. I ran back outside, racing to the RV where two gurneys were parked. I opened the door, and one of the EMTs inside asked me what happened. \"One of the toddlers is missing, my wife got shot, and those two were out cold. I didn't see blood.\"\n\nThe EMT by the table bagged what looked like a gray tube. \"Sedatives. Fast-acting,\" he said. \"We need the kids out of the way so we can transport.\"\n\n\"I've got it.\" I opened my arms, and they ran crying into them. There is a bed above the driver's area that lowers down, and I set them up there one at a time before pulling the netting across. It turned it into a large playpen. I took one quick look through the RV, making sure Maritza wasn't hiding in a cabinet or something, with no luck. I linked with her, but she couldn't tell me anything beyond 'dark' and 'car' with how scared she was. I told her we'd get her soon.\n\nThe first police car arrived as the EMTs finished getting the two Steel Ladies out to the gurneys. Two patrol officers got out, and I waved them to me. \"We have a missing child,\" I told them as I pulled up a picture of Maritza on my phone. \"The kidnapper shot my wife and drugged my two friends. The other three children are safe; I've got them up there on the bed.\"\n\n\"Do you have a description of the kidnapper?\"\n\n\"You'll have to check the security cameras since he was gone before I got out here. I saw a silver Honda leaving the lot that might be the guy; he was heading west.\"\n\n\"Do you know what the child was wearing?\"\n\nI pointed under the table at the torn shirt and baby jeans. \"She must have shifted during the attack. Maritza Meztli is a werejaguar cub,\" I told them as I found a picture of her in her cat form. \"It's likely the kidnapper was after her because she is the only one of her kind in the world. If she changes back, she won't have clothes.\"\n\nMore police were showing up, and the patrol officer radioed in the abduction and a description of the victim in both human and cat form. It took a while, as this was the first time any of them had dealt with werewolves and werecats. I emailed the police the two pictures so they could get them to their people.\n\nA frantic Maria showed up, pushed by James. \"There is the mother,\" I told the officers.\n\nMaria had her phone out. \"Maritza's tracker pinged four minutes ago here,\" she said as she showed the officers the displayed map. It was on the Great Northern Road, just south of Fourth Line East. \"Next ping will be in eleven minutes.\"\n\n\"It's a start,\" the patrol officer said as he called in the location. \"Can we have your phone?\"\n\n\"I'll go with you,\" she told him. \"If you find Maritza, you'll need me. She's scared and alone, Officer. She might be dangerous to your officers without me there to help.\" She briefly explained how jaguar bites could lead to fevers and death. \"I don't know if Maritza is old enough to kill with a bite, but you don't want to take the chance. My daughter is scared out of her mind. It's best if I'm the one that approaches her.\"\n\nI looked over at Maria; I was responsible for both the children and Maria, but the rest of my team was in the Emergency Room. Someone had to stay here with them. \"Where is Lance?\"\n\n\"On the American side. Lance will talk to the Customs agents and warn them of the abduction. Chase and the others are almost two hours out, but they are on the way back. The boat tour will dock again in an hour.\"\n\n\"Go with the police,\" I told Maria. \"James, you take the kids inside and protect them along with Possum and Three Tequila. I'll stay here with the police and coordinate the search with our people.\"\n\nMaria left with a detective, while more detectives and a Lieutenant showed up to process the crime scene. I ended up outside of the RV, working my phone. I called the nannies first, asking them to come up here with one of the other RVs so we could move the kids.\n\nWhen I hung up, I looked at the time; it had been more than eleven minutes. I called Maria for an update. \"We didn't get another ping,\" she told me. \"He probably destroyed the device.\"\n\nDammit. \"Can you link Maritza?\" I hadn't heard her voice for at least fifteen minutes.\n\n\"No, she's too far away.\" Link range for an adult could reach ten miles, but we didn't know how far Maritza's link could extend.\n\nIt was still our best way to find her. \"He was heading north, so have them take you to the city limits while you keep trying. If you can't, head to the east and keep trying.\" To the west was the lake; Luna forbid that he put her on a boat! \"I'll contact Lance and have him stay at the border in case they head south.\"\n\n\"What if they are out of the city already?\"\n\n\"I'll work it out with Chance.\" I wished her luck, then called up Lance. Their group was on 129, in Aubrey Falls Provincial Park. I asked him to pull over and gather the Pack members, and he did. I quickly explained the situation and my plan to them.\n\nThe first thing Chase did was to bring all Beta rank and below werewolves into the Arrowhead Pack so they could share the Pack link. He then divided the riders into three main groups. The first would do a thunder run to the north and then back west; they would leave wolves at every major intersection, backed up by members of the Steel Brotherhood. They would cut off any escape north into the Canadian wilderness. Some of them would retrace last night's route from Wawa south, checking side roads along the way.\n\nThe second team would race south and do the same thing. That group would cover all roads leading east towards Toronto.\n\nThe third team would race back to Sault Ste Marie. Once there, they would search the city and the area between the main highway and Lake Superior.\n\nChase finished their briefs as the teams raced away. Those who weren't ready to ride fast and hard would head back to the city anyway, meeting up back at the hotel we'd left from this morning.\n\nThe three groups would stay out until we had Maritza back.\n\n \n"
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "werecat",
        "werepanther",
        "pack",
        "luna",
        "alpha",
        "biker"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/aztec-treasure-ch-71-80"
}