{
    "title": "Breaking Out of Boring",
    "pages": [
        "This is a little longer than my other already long stories but I hope you find it worth your while. I also tried something a little different, writing from a different perspective so I would be interested to hear from any women what they think of it. \n\n***** \n\n\"Hey!\" I said as I jumped in the passenger seat of my Dad's truck. \n\n\"Hey! How ya been?\" He asked as he pulled away from my apartment building and headed towards the bar. \n\n\"Oh, ya know, its summer so can't be too bad!\" I replied cheerfully. \n\n\"How's summer school goin?\" \n\n\"It's fine. We went on a field trip to some old one room schoolhouse nearby yesterday and I had to chaperone; turned into a bit of a nightmare when two of the other chaperones didn't show up. Otherwise it's been pretty good though. I'll probably do it again next year for the extra money.\" \n\n\"Well that's good. At least it keeps you busy during the down months.\" My dad commented. He was always worried my summers off would be spent getting into trouble; even after I'd graduated and become a teacher. He never said it outright, but he was always concerned if I didn't have enough to keep me busy. I had never been the problem child, I'd never gotten into trouble at school, always had good grades, and never gave my parents a reason to think I was going to get into trouble if I had some free time, and yet, they were parents, so they worried. My dad was especially protective, not wanting his little girl to get hurt or scarred by the real world. \n\n\"So who exactly is this band we're seeing? Someone you work with?\" I asked. \n\n\"The lead singer and two of the guys in the band work for a contractor that I do a lot of work for. I went and saw them when they did a gig for a cancer benefit and they were pretty good. I figured it was something fun to do on a Friday night.\" When my parents had gotten divorced years ago, my dad and I had promised to at least have a night out once a month, just the two of us. Usually they consisted of dinner or drinks, but tonight he had asked if I wanted to go see a band that was playing to which I happily agreed to the change of pace. \n\n\"Sounds good! What kind of music do they play?\" \n\n\"They kind of run the gamut. They play a fair amount of old rock but also have some country, blues, and new stuff that they play too.\" He answered. \n\n\"Sounds right up your alley!\" I commented, \"Do these guys work for the guy you like or the other guy?\" \n\n\"Haha, I don't dislike 'the other guy.' They're both nice guys. These guys just really know their stuff and do really nice work that's hard to beat is all. They take a lot of stress out of it by avoiding problems a lot of the other guys run into.\" \n\n\"Ah gotcha. Are they the ones with the computer images you showed me of the job before it's done?\" \n\n\"Yeah, the renderings. The contractor's son does those. He's also running some jobs now too so I've worked with him a decent amount lately. He's about your age I think.\" \n\n\"He's 27 and he's running full construction projects? On his own?\" \n\n\"Seems like it. He's the only one out on site and the only one that's making phone calls and asking for bids so I'd say he's running them mostly on his own.\" \n\n\"Damn. Is he any good at it?\" \n\n\"He's learning, so he has moments where he misses stuff, but that's to be expected. He's better than most of the 50 year olds out there though and he's pretty quick on his feet so when he does miss stuff he's quick to admit he screwed up and offer a good solution. Honestly the fact that he admits to the screw up is more than 90% of the guys would do.\" \n\n\"Well that's nice. At least someone is showing some integrity these days.\" \n\nWe sped along talking about work and various other things before finally getting to the bar. It was an older place that had been there forever but always had live music on the weekends. I had been there a few times before and it was a neat little spot. The walls were covered with knick knacks that had been collected over the years: old signs, license plates, trophies from teams they'd sponsored, even some kid's artwork. It was a very homey sort of vibe and that's probably why it had survived all of these years; well that, and they had decent food and cheap drinks. \n\nWe went inside and grabbed a table near the front as the band was finishing setting up. We took our seats and ordered drinks; my dad with his go to bud light draft order, and me with my standard gin and tonic. We sipped on our drinks and watched the band getting ready as we talked about what jobs my dad had been working on. \n\nMy dad was sort of a jack of all trades; he did framing, finish woodwork, some drywall every now and then, and on rare occasions he might do some electrical. He had tried to teach me some things growing up but I had never been keen to learn what I had deemed to be 'boy stuff.' At this point in my life I really wished I had picked up some of what my dad had been trying to teach me as it would have saved me from constantly calling him to come fix any number of things that were broken. Unfortunately I was pretty helpless when it came to home maintenance and it probably wasn't going to get any better now. \n\nEventually the band got going with a song by a lesser known artist that I absolutely loved. They were actually very good and I soon found myself singing along and tapping my feet under the table. I was having a good time when I noticed coming through the door next to the stage, a very attractive guy about my age. I noticed him, sure, but I turned my attention back to the band almost immediately; I was here with my dad after all. I'm not the type to make a move on a guy in a bar anyway and can be pretty shy when it comes to the dating scene; probably why I'd been single for the past year and a half as my mother liked to remind me. \n\nI didn't even notice the guy walking towards us until he pulled out one of the chairs at our table and sat down. \n\n\"Hey! How's it goin? Did they just get started?\" He asked my dad as he shook his hand across the table. \n\n\"Yeah just a little bit ago. Maybe their third or fourth song. James, this is my daughter Amy. This is James, he's the contractor I work for's son.\" \n\n\"Hi, nice to meet you! Oh! This is your monthly night out isn't it? I'm sorry, I won't take away from father daughter time.\" \n\n\"It's fine.\" I reassured, \"We knew there'd be plenty of people that he'd know here. I'm basically just here to check out the band.\" \n\n\"Well who doesn't love a good band?\" James smiled. \n\nOver the next hour I got to know a little more about James. He was the one that was running jobs by himself and I could see why he was good at it. He knew a lot of the people that were there to see the band and they all came to say hi to him, not the other way around. He was confident without being arrogant and seemed comfortable talking to everyone from their company's banker in a nice oxford shirt and slacks all the way to the stone mason that was missing 3 teeth and had holes in every piece of clothing he was wearing. He had a great sense of humor that he changed and melded to whoever he was talking to; rough and curse heavy with the mason to witty and refined with the banker. He was intelligent but didn't flaunt it or speak over anyone's head, and, most of all, he seemed incredibly genuine and nice even when poking fun at others. Everyone loved him, that was easy to see, and I found myself listening more to the conversations he was having with people than to the band. He had a very laid back demeanor and even when a few people told him about problems they'd encountered on jobs earlier that day he never seemed stressed and was quickly able to put everyone's mind at ease with solutions that even experienced workers seemed not to have thought of. I was impressed. \n\nEventually the flow of people stopped and he was able to sit and enjoy the music uninterrupted. Of course, shortly after he'd settled in the band ended their first set and took a break. I imagined he would go mingle with some of the people he knew but instead turned towards my dad and me. \n\n\"So, as a connoisseur of live music, your thoughts?\" \n\n\"Well I wouldn't say I'm a connoisseur, but they're good! They sound great and they've got a good variety which is always nice.\" \n\n\"I told them the only decade they're missing is the 90s. They need to all bust out some synchronized dancing to a boy band song and then their set list would be complete.\" \n\n\"Hahaha oh man that would be worth the cover alone!\" \n\n\"Right?! I mean are you in the entertainment business or not?\" \n\nI was suddenly more aware of my attire for the evening and wished I had worn something a little cuter. It was just a night out with my dad so I had thrown on a pair of shorts, a plaid shirt over a white tank top, and grabbed my favorite baseball hat to try to hide my hair that I hadn't washed that morning. I didn't look bad, but I definitely didn't look cute enough to feel confident talking to James. \n\nThe two of us bantered back and forth having a great time. He was so easy to talk to and he just made me feel so at ease about everything. If he didn't keep bringing my dad into the fold I would have thought I had a chance with him rather than it being just a friendly conversation. \n\nAt the end of the night he said goodbye and headed off to his own car. I watched him go, kind of wishing I was going with him. He had to have a girlfriend I told myself, there was no way a guy like that was single, he was everything a girl could want and more; at least he seemed to be for the few hours I'd known him. \n\nAs we were quietly walking to the car my dad commented, \"You could do a lot worse.\" \n\n\"What?\" I asked, shaking myself out of my daydream. \n\n\"James. You could do a lot worse.\" \n\n\"Dad! I just met him! He's nice and all but I don't know him that well.\" I said, hoping he didn't actually see how infatuated I had become over the past few hours. \n\n\"Yeah, I know, I'm just...throwing it out there.\" \n\n\"Well thanks for the vote of confidence but don't hold your breath.\" \n\nThat's when he gave me the look, you know the look; that look that a parent can give their kid that says 'I know you're not telling me everything and that's fine, but just know that I know.' \n\n\"Really?! Was I that obvious?!\" \n\n\"Haha no, honey you were fine. I just know when you're interested in someone. You have a tell.\" \n\n\"A tell?! What tell?\" \n\n\"Haha you never have your hair down unless you're looking to impress a guy or it's a formal event.\" \n\nI had been wearing a ponytail and a baseball hat when we got to the bar. I didn't even remember doing it, but at some point I had let my hair down. When did that happen? \n\n\"Well that's embarrassing. I doubt I'll see him again though, there's not a lot of cause for us to cross paths.\" \n\n\"Well...do you want to see him again? He goes to all of their shows and they're playing at the bar again in a few weeks for a fundraiser. You could come back.\" \n\n\"Thanks but I think I'll pass on the flirting in front of my dad option.\" \n\n\"Who said I was coming? Just wander in.\" \n\n\"Alone?! ...Oh my god my dad is trying to set me up. Do you really like him that much?!\" \n\n\"Haha no, he's fine, but you seemed to hit it off so I was just trying to help.\" \n\n\"I'll think about it. Don't tell Mom, she'll badger me to go nonstop regardless of who it is.\" \n\n\"Badger you?! You don't think I'd get ten thousand questions about him since I know him? She'd be upset I didn't know his social security number already.\" \n\n\"Haha yeah but at least you aren't the one that's disappointing her by not being on track for grandkids anytime soon.\" \n\n\"Eh, don't worry about her. You do whatever makes you happy.\" \n\nI had said I would think about it but I already knew I was going. It had been a long time since I'd felt this giddy about a guy and regardless of whether he liked me back or not I just enjoyed being around him and wanted more. \n\nIt was a good thing it was the weekend because I couldn't turn my brain off to fall asleep. I kept replaying the night in my head and getting butterflies in my stomach every time I thought about those beautiful blue eyes looking at me. He had shorter dark brown hair that seemed to naturally fall in a semi messed up but stylish fashion, a squared jaw line with a day or twos worth of stubble, 2 adorable dimples at the edges of his mouth every time he laughed, and a smile that made my heart flutter. Beyond his attractive face, he was in great shape. He stood about 6'3\" I guessed, and I could tell from his tight fitting shirt that he had a great chest and abs to go along with his toned arms. I had never noticed them on anyone else before, but his forearms were incredibly distracting; they weren't huge or anything, they were just perfect the way the muscles flexed and rippled as he used his hands. I would have loved to just run my hands over his forearms as he moved about, feeling the muscle move beneath my fingers. All in all, he was hot, there was no getting around it, and yet that was just a bonus to everything else about him. \n\nAfter lying in bed daydreaming for a while, I finally drifted to sleep. When I awoke the next morning I found myself incredibly horny; whatever I had been dreaming about clearly had me riled up. I slowly let my hand drift down my stomach and into my pajama bottoms while I slipped into a fantasy of James taking me home the night before. It wasn't long before I rolled over and grabbed my vibrator from my nightstand and flicked it on. I kicked off my pajama bottoms and laid back with my legs spread, giving myself full access to my already wet pussy. \n\nOver the past year and a half of being single, and not getting laid, I had begun experimenting more on my own. Up until now I had been pretty plain in bed and during our big breakup, my ex had called me boring and lifeless during sex which had really bothered me. I didn't want to be one of those missionary only people, it just sort of always ended up that way. I had never felt super comfortable during sex as far as letting go and just 'letting the freak fly.' I had always been worried what people would think of the noises I made or judge me if I liked something they didn't and, as a result, my boring sex life had become a product of being too safe. After the breakup I told myself I was going to try to change that and started by slowly experimenting with different things. \n\nI had bought my first vibrator which quickly became a favorite of mine during my solo adventures. I had also tried masturbating in different positions, but never could get myself off as well as just laying on my back. Lately I had begun looking up other things I might be able to try. I thought I might enjoy bondage with my submissive personality, but that wasn't really something I could try on my own, and the idea of asking someone about it still terrified me. Maybe I would enjoy rougher sex? I had never gotten so into sex that it became a sort of frenzied, lust filled fuck; I couldn't get out of my own head enough for that. I tried watching porn but I always ended up with my eyes closed fantasizing and just using the noises from the porn to help with my fantasy. \n\nMaybe I was just boring? What if I just didn't like anything but boring sex? The thought terrified me. I didn't want to be boring, I wanted to be the girl on top, slinging her hair around, moaning, talking dirty, exuding confidence and passion, and having a guy look at me with pure lust; but that was so far from how I felt that it might only live in my imagination. \n\nAfter a few months of reverting back to my old boring ways and not experimenting for a while I decided I would try one last time to find something to get me out of my shell. I lived alone, but I had still had a feeling of anxiety like I might get caught when I had started browsing amazon for an anal toy. I was skeptical that I would enjoy it, but it was something I could do on my own and definitely fell under the 'not boring' category so I had to give it a shot. I settled on a thin dildo that had good reviews and said it was perfect for beginners. I made sure it came in a nondescript package and placed the order. It had arrived just 2 days ago and I'd quickly shoved it in my nightstand drawer as far into the back as possible, already having second thoughts and concerned that someone might find it and judge me. \n\nAs I fantasized about James taking me home and having his way with me, I let my vibrator slip up and down my pussy, purposely avoiding my clit, and just enjoying the sensations and feeling of being so turned on. As the tip dove down to my entrance my fingertips lost their grip on the end of the vibrator and it slipped from my grasp. As it fell I was able to catch it, trapping it against my pussy with the tip pressed gently against my ass. I gasped as a shiver ran through my body and my muscles clenched. \n\nI was surprised how intense the sensation was. I decided this was my moment; if I was going to break out of boring, that shiver was the catalyst to get me there. I began slowly rubbing my clit with my hand as the other moved the tip of the vibrator in small circles around my ass. It felt amazing. \n\nAfter a short time I pulled the box with the dildo from my nightstand and tore it open. I grabbed my small bottle of lube from my drawer and coated the dildo from top to bottom and rubbed the leftovers on myself. I tossed a few pillows under my hips to try to keep my sheets from getting too messy with the lube and laid back. I took a deep breath, closed my eyes, and tried to fall back into my fantasy. I brought my vibrator up to my clit while my other hand lined the dildo up with my tight hole. I tried to get out of my own head and not think about what I was about to do and eventually succeeded in focusing more on the vibrator than anything else. I started to push. Slowly I increased the pressure bit by bit until suddenly the pressure gave way and the dildo sank into my ass. It had only penetrated me an inch or two but already I knew I was going to like it. \n\nAs I sank each inch further into me I felt the pressure build inside of me. I couldn't believe how big this thin dildo felt and soon I had the entire length up my ass. I left it there, unmoving for a minute, two minutes, three minutes, just taking in the feeling of having my ass filled with a foreign object. I realized in that moment that my pussy had become sopping wet. A smile spread across my face as I realized I had found it; I had found what would get me out of my boring routine and make me more exciting in bed: I enjoyed having my ass filled. \n\nI could feel my orgasm building as the vibrator swirled around my clit. I reached down, grabbed the end of the dildo and slowly pulled it out inch by inch until very little was left inside me. The sensation was very odd, it felt like I was relieving myself, but all of my nerve endings were super sensitive so I felt every last inch in a far more erotic way than normal. As I pushed it back inside me a moan escaped my lips. I never made noise while masturbating, never, but something about having my ass penetrated deeper and deeper made me involuntarily squirm and moan. \n\nBefore I knew it I was writhing on my bed, my knees clenching and unclenching as I began fucking my ass for the first time. It didn't take long for my orgasm to overtake me and my entire body to go rigid as the tremors swept over me. I had never cum like this before, my body shaking and out of my control, a long guttural moan escaping from inside me, and my mind completely lost in the waves of pleasure. Through it all I continued reaming my asshole and even once my orgasm subsided I didn't stop. I loved it. The sensation, the dirtiness of it, the liberation of knowing I wasn't boring, and then the thought of a dick pounding my ass, it was all overwhelmingly hot. \n\nIn the end I came three times; the final time from nothing but the dildo in my ass. I collapsed back onto my bed, the dildo still partially inside of me, and started to laugh as what I had just done swept over me. I laughed in relief, I laughed at how lost in the moment I had gotten, and I laughed at how I had just gone from the girl that was boring in bed to the girl that was going to be fucking herself in the ass on a regular basis from now on. It had been quite the morning. ",
        "I eventually pulled the dildo from my ass and went to take a shower. I was a dirty girl now after all, if my ex could only see me now; I smiled at the thought. \n\nThe next month went by without anything of note (other than my new anal regiment that occurred a few times a week) and I was happy to be wrapping up summer school and have a few weeks of freedom before the regular school year began. The Saturday after my final day of summer school was when the band was scheduled to play again. I had tried to get some other teachers to celebrate by going to the bar with me but they had all planned on taking their vacations that weekend. I called some other friends to see if they'd want to go out with me but they also had previous plans. That's what happens when you're one of the few single people left in your friend group, you get left to fend for yourself on a lot of weekends. \n\nThe Saturday rolled around and I spent a large portion of my day trying to figure out how I would explain being there by myself and not look like a loser. Not to mention would he remember me? Would he want to hang out with me or had he only talked to me because of my dad? I decided my course of action would be to act like my friends were coming and just say they cancelled on me last minute. \n\nThe band started at 8 but I started getting ready at 6. I wanted to look my best without it looking like I wanted to look my best; you know, that casually cute look. \n\nI hopped in the shower and took my time shaving. With no prospects of getting laid over the past year things had become a bit...unkempt. I shaved my legs, all of them, not just what might be seen, hit my underarms, made sure there weren't any stray hairs anywhere on my lip or between my eyebrows, and then turned to my pubic hair. I usually kept a nice little strip of hair but tonight I felt more daring than I'd felt in a while and, for whatever reason, shaving myself bare felt more in line with that notion. \n\nI stepped out of the shower and started sorting through my closet for what to wear. It was hot out so maybe a dress? No, it wasn't really a dress kind of bar. Jeans? Maybe the dark blue wash that makes my ass look good. Shorts? No I don't have any that look good enough. Then I spotted it. I hadn't worn it in a while but I always got compliments when I did. I grabbed the blue skirt off the hanger and tossed it on my bed. It had a slightly ruffled edge that landed a few inches above my knee. Not too short, but enough to show off a little leg so I hadn't shaved my legs for nothing. \n\nNow for a top, not that there was much of a question there; I had always been fond of a white scoop neck t-shirt that I'd had for years. It made my chest look fantastic without showing a ton of cleavage. It was my go to first date shirt, not that this was a date, I reminded myself. \n\nI grabbed my brown ankle boots with a slight heel and set them by the bed. I surveyed the outfit and was happy with my final selection. Or was I trying too hard? Maybe not the skirt. Maybe just jeans. Go a little more casual. Would he like casual more? He's in construction so maybe he's a more laid back, less formal guy, or, maybe he gets that all day every day and loves a girl that's dressed up? Dammit, I was overthinking it. The skirt, Go with your first instinct.  \n\nOk, the outfit was settled, now came the big question: if tonight goes really well, like really really well, and we end up back here or at his place, am I sleeping with him or not? That determines what I wear under the outfit. No, no I'm not sleeping with him, he'd think I'm easy if I put out that quick. Junky underwear it is. But...what if it goes perfect? I mean, I wouldn't say absolutely no. It has been a while after all. Ok, so don't wear your worst but don't wear your best. Who the fuck am I kidding if the opportunity is there I'm going to take it, I shaved my pussy for a guy that might not even remember me. If he shows interest, he's getting some. Good stuff for sure. \n\nI pulled open my drawer and grabbed my best white bra; a push-up with a white satin edging that I'd only worn once before to rave reviews from my ex. Then the real search began, with my white top I'd had one option, with the skirt I could wear anything. I began tossing anything I thought could be an option on the bed. Once everything was out I tossed my towel aside, threw on the bra and started trying on bottoms in the mirror. \n\nBlack thong, blue cheekies, white lace boyshorts, red g-string, I wasn't wanting for options as underwear was a bit of a shopping weakness of mine. Unfortunately I didn't like how I looked in any of them tonight. I wanted 'wow' but all I was finding was 'not bad.' I went through my drawers again, hoping I'd missed the perfect pair, but to no avail. After a while of staring at all my options again I reluctantly resigned to a lacey yellow thong that I hadn't worn in a while. \n\nI glanced at the clock and realized I had been messing around with my underwear selection for almost 20 minutes and now I was running late. I threw on my clothes, curled my hair slightly, and bustled out the door around 7:45. \n\nI pulled in at the bar after a car ride of second guessing my outfit, second guessing my whole decision to come, and second guessing whether James was the guy I remembered or if I had just built him up in my mind. In the end, I hadn't turned around and I was here. I took a deep breath and got out of my car. \n\nAs I walked up to the doors I could hear the base drum thumping and the faint sound of the band playing already. I opened the door and walked inside, scanning the room for James. I didn't see him. Shit. He hadn't come. I hadn't even considered that option. Now I felt like a complete idiot for all the effort I'd put into this. \n\nOh well, I'll at least have a drink or two and listen to the band for a bit before heading home; it was a charity benefit after all so I could at least help out with that. I walked to the bar and waited patiently for the bartender to see me. I ordered my gin and tonic and watched the bartender scurry around trying to find a lime to garnish it with. \n\n\"$6.50 please,\" the bartender shouted over the music as she handed me my drink. \n\n\"You can put that on my tab. And also a jack and coke please.\" A voice from behind me called to the bartender. \n\nI turned around and found myself face to face with James; well, more like face to chest, he was quite a bit taller than me after all. He was so close it caught me by surprise and I took a quick breath; he smelled amazing. He smelled faintly of cedar and what I could only describe as the smell of a man. It made me swoon and my stomach twist into a knot of anxiety. \n\n\"Oh hi, you scared me! You don't have to do that!\" I responded. \n\n\"Don't worry about it. I was supposed to buy a round of drinks for some friends that were coming but they bailed so you can be the beneficiary of their poor choices.\" He smiled. \n\n\"Well tell your friends thanks for being dumb. My friends actually just bailed on me too. I was just going to grab a drink or two then head out since I don't know anyone.\" \n\n\"Well why don't you stick around for a while and we can save each other from an evening of drinking alone?\" \n\n\"Sounds like fun. Don't you know basically everyone here though? I wouldn't say you're alone.\" \n\n\"Ehhh...know them yes, want to sit and end up talking work with them all night, no. They're nice and everything but it's the weekend, clock out for God sake!\" \n\n\"I'll drink to that!\" I said, holding my glass up. \n\n\"Wanna grab a table?\" He asked. \n\n\"Sure! Lead the way.\" \n\nI followed him through the tables towards a spot on the far side of the bar against the wall. I wallowed in his scent as it drifted back to me and enjoyed watching his body twist and turn between the tables. He grabbed the back of a chair and swung it easily out of the way and I couldn't help but notice his forearm ripple as he did. I was done for. I knew it. This was either going to end with me in his arms or going home woefully disappointed and wishing for so much more. \n\nAs we got to the table he pulled my chair out then sat down at his as I took a seat. For a moment he didn't say anything, he just looked at me. It totally unnerved me and I felt myself blushing. \n\n\"What?\" I asked sheepishly. \n\n\"Oh! Sorry, that probably looked like I was staring at you like a creeper. There's a TV behind you with the game on, I was just looking for the score.\" \n\n\"Oh, haha yeah I thought you were staring at me.\" I replied. Well that was disappointing. I thought he might actually be looking at me with that kind of intensity. Typical guy though, always has to find the TV in the bar. \n\n\"Not that you aren't worth staring at.\" He said with a smile that pulled me right back into fawning over him. \"You look beautiful by the way.\" \n\nI blushed harder, \"Thanks. You're not so bad yourself.\" \n\n\"Thanks!\" he said cheerfully, \"So you're a teacher if I remember right? And you were doing summer school last time; is that still going?\" \n\n\"It just finished yesterday so I'm officially free actually.\" \n\n\"Well congrats on being free, that's worth drinking to.\" He said raising his glass to mine. \n\n\"I already know all about what you do for work, so what kinds of stuff do you do for fun when you aren't working?\" I asked. \n\n\"Fun stuff...I dunno...I guess I'm boring. I don't want to be boring, my days just kind of end up that way. I go to work, come home, take the dog for a walk, then crash on the couch for some Netflix.\" \n\n\"What kind of dog do you have? And what are you watching on Netflix then?\" \n\n\"He's a big fat Beagle. Fat because I give him too much food from my plate every night but I can't help it, he's my buddy and it makes him happy.\" \n\n\"Haha awww that's cute.\" \n\n\"Netflix...I'm all over the map lately. I've been watching Sherlock, Shameless, Archer, and then I'm always up for a good documentary. I watched that one about schools called 'Waiting for Superman' the other day. Have you seen it?\" \n\n\"I'm a teacher, of course I've seen it. It's super depressing but a really good documentary.\" \n\n\"Right?! We have enough dumb people in the world, I'll pay whatever the schools need to get me a few more intelligent conversations each day.\" \n\n\"Hahaha who says you're one of the smart ones?\" \n\n\"Ouch! Damn! If you can feel your brain cells dying over there I apologize, I'll move to another table. I wouldn't want to contribute to the general decline of humanity. What about you, what do you do for fun?\" \n\n\"Ummm...ya know, I don't know. I used to do all sorts of stuff but since I graduated and started working it seems like fun is few and far between. I guess I do this; come out for a band and drinks. That's about the extent of it I suppose.\" \n\n\"So, what kinds of music do you like since you like seeing live bands?\" He asked. \n\n\"I like most stuff as long as it's good. I mean, most genres. There's good country stuff, bluegrass, blues, pop...ya know, just depends on my mood I guess.\" \n\n\"That's cool, too many people get stuck in one genre and never really give other stuff a chance. So what mood are you in now and what genre are ya feelin?\" \n\n\"I'm...relaxed...and happy. I could go for something sort of like smooth jazz or sort of bluesy I guess. Something kind of slow but happy.\" \n\n\"Like...hmm...ever heard of Marc Broussard? Something like Lonely Night in Georgia?\" \n\n\"Oh my god I love that song! Yes! I actually listened to that song while I was getting ready to leave tonight!\" \n\n\"Haha he's awesome isn't he? I love all his stuff.\" \n\n\"Not many people know his stuff, I can't believe you picked that of all songs. Ok umm...let's see...depressed. Let's see if you can name what I'd listen to depressed\" \n\n\"Haha depressed? Wow nice job bringing the mood down...hmmmm, ok well answer me this, are you a lyrics girl or a general feel to the song person?\" \n\n\"Mostly general feel. Lyrics only when I'm looking to jam and sing along.\" \n\n\"Ok then I've gotta go with...damn depressing is hard, I don't listen to a lot of depressing stuff. Ok, shot in the dark cuz I doubt you've ever heard it, 'Eet' by Regina Spektor.\" \n\n\"You try to spend half of your liiiiiife, trying to fall behind. You're using your headphooooones to drown out your mind. You've gotta be kidding, how do you know that song?\" I asked as I pulled up a playlist on my phone titled \"Sad\" with Eet as the 3rd song. \"Look at that. That's insane!\" \n\n\"Hahaha ok c'mon keep going, let's see how long we can do this. This is fun.\" \n\nI proceeded to list off another 5 emotions and all 5 times he listed songs that I loved. They weren't always my go to songs or anything, but they were all songs I knew and really enjoyed. \n\n\"Ok, one more. Something hard. Give me a tough one.\" \n\n\"A tough one...ok, ummm...\" what I wanted to ask immediately popped to mind but I wasn't sure that I was brave enough to ask it. I thought of others before finally telling myself I had to get out of my comfort zone at some point. I looked him dead in the eye with all the confidence I could muster and said, \"Horny. What do I want to listen to during sex?\" \n\nI immediately regretted it. Oh god that was too much. Change your mind, say something else. \n\nHis eyes locked onto mine and a wry smile spread across his face. \"Ooo, took that 'hard one' literally did we? Ok...hmm...well let's really figure you out shall we? You're beautiful, so you probably have plenty of guys after you.\" Wrong. \"But you might be too intimidating to talk to, so you might not see that they like you.\" Uh oh. \"You're too shy to make the move yourself so you've probably been single awhile.\" Yeah so? \"So you're probably a little self-conscious because guys don't actually say anything to you so you think they aren't interested and there's something wrong with you.\" How the hell. \"So when you do get a guy into bed I'd bet you're concerned what they might think for fear of losing them.\" Ok I'm panicking now, how does he know this? \"So...you aren't putting any music on during sex. You'd be too worried they'd judge your choice.\" \n\n\"How...how could you possibly have figured that all out.\" \n\n\"Sorry, that may have been a bit much. But yeah, most people don't play music during sex and you just seem a little too shy to make the suggestion, so I just took a stab at it.\" \n\n\"I'm going to need to drink more if you're going to verbally undress me to my core like that again.\" \n\n\"Haha sorry, I won't do it again. Honestly it was a guess; the rest was just some suspected observations that might support the guess somehow. But really if I was right, you shouldn't feel self-conscious about anything. You're beautiful, smart, and have a good sense of humor. What's not to like?\" \n\n\"My ex found plenty I guess.\" I responded drearily. \n\n\"Well don't worry about him. From what I've heard he's an idiot.\" \n\n\"Wait, how do you know about my ex?\" \n\n\"Haha, I don't, all I've heard is he's your ex, ipso facto: Idiot.\" \n\n\"Oh...thanks!\" I said smiling. Damn he was smooth. Disarmingly smooth. \"Well what about you. Why don't you have a girlfriend? There doesn't seem to be anything wrong with you and you certainly know how to make a girl feel special.\" \n\n\"Ohhhh...that's a long story. The short version is I dated a girl for 4 years from college and after graduation; looked like we were going to get married and the whole shebang, but then she had some big epiphany that she wanted to be a travel writer. She got a job that had her traveling for 7-8 months out of the year and that's not what I would consider to be a balanced relationship so I left. It ended pretty ugly and wasn't quite as clean of a breakup as that sounds, but it was for the best. Since then I've just been avoiding online dating until stray cats start wandering up to my door because they're attracted to the lonely smell coming from my house. I never make a move or hit on women because I always feel like a creep trying to start up a conversation out of the blue with someone I don't even know. So, here I am, just me and my fat beagle eating our way through the days!\" \n\n\"Hahaha aww, well I'm sorry it didn't work out with your ex.\" \n\n\"It's fine, really. The further away it gets the more I realize I probably should have broken it off sooner. Just got stuck in something familiar and didn't see all the stuff that would have eventually ended us anyway. But enough of this ex nonsense.\" \n\nThe rest of the night was a blur. We talked about everything from an article he had read about scientists being able to pull drinkable water directly out of the air to recalling our favorite parts of the movie Liar Liar which had been on TV recently. It was the most fun I'd had since, well, the last time I'd been with James. Before we knew it the band was finished for the night and it was almost time for the bar to close. \n\nI stood up to go to the restroom when I suddenly realized how intoxicated I'd become. I wasn't drunk, but I definitely wasn't sober. I was going to have to uber home, shit. I didn't live that close and that was going to be an expensive uber this time of night with all the bars closing. When I got back to the table I pulled out my phone and opened the app to see how much it was going to set me back. Sure enough, it was looking to be a $50+ ride home. I hadn't even realized how many drinks I'd had, I'd been too engaged in our conversation. \n\n\"Everything ok?\" James asked, clearly seeing the disappointed look on my face. \n\n\"Yeah, it's fine. I'm just going to have to Uber home and it's going to cost me like 50 bucks.\" \n\n\"Oh you have your car here?\" \n\n\"Yeah, wasn't planning on getting quite so tipsy tonight. I'm blaming you and your free drinks by the way.\" I teased. \n\n\"Haha well if it's my fault, then it's my job to fix it.\" He replied. \"You have to uber back to get your car tomorrow or do you have someone to drop you off?\" \n\n\"I don't know, haven't gotten that far ahead yet. It's fine, really, not a big deal.\" \n\n\"Well...if you don't want to pay the $50, there's always another option, I live literally 5 blocks from here. I have a spare room with a big cushy queen bed just waiting for someone to get too drunk to drive home and spend the night.\" \n\n\"Are you sure? If you really don't mind that would be awesome. I promise I'll be gone first thing in the morning so I don't bother you.\" \n\n\"Nonsense! I'll make breakfast in the morning and everything if you don't have anywhere to be. Copper loves sausage so he'll be pretty pumped about it.\" \n\n\"I mean...that sounds amazing.\" I smiled. \n\n\"Ready to go then?\" He said holding his hand out. \n\nI took his hand and we headed towards his place. I don't have the biggest, neither do I have the smallest hands in the world, but James's hand engulfed mine. His hand was warm and slightly callused from work. It made me feel so tiny next to him, but it also made me feel safe, like I could trust him to take care of me. It was a feeling I hadn't felt in a long time. \n\nAs we walked to his place I staggered in my drunkenness a few times which ended in him wrapping his arm around my shoulders to steady me. It wasn't cold out, but the wind was a little chilly and being hugged to his warm body felt nice. We flirted and talked the whole way back to his place. \n\nOnce arriving and getting inside, he introduced me to Copper, his beagle, who barely got off the couch to greet us in his sleepy state. James pet him for a moment before telling him to go back to bed to which he promptly jumped back on the couch and curled up in a tight ball. \n\nHe showed me to my room just down the hall from his and told me if I needed anything to just let him know. I gave him a hug, thanking him for letting me stay there. The hug probably lasted longer than it normally would have given my state of sobriety, but I loved being buried in his chest. ",
        "\"You can stay anytime.\" He said as he kissed my forehead. \n\nI looked up into those dreamy blue eyes and smiled. He brushed a strand of hair from my eye and then, just as I had hoped for all night long, he kissed me. My body melted into him as every ounce of tension I had in me left. It was perfect. He was perfect. \n\n\"Goodnight gorgeous.\" He said as he started to pull himself away from me. \n\n\"Wha-? Wait! You can't just kiss a girl like that and then leave!\" I protested. \n\n\"Haha oh I'm sorry. I'll stay as long as you like. I just thought you'd be ready to pass out after being tipsy and all.\" \n\n\"Well I was...until that. Now I'm about as awake as I could possibly be.\" \n\n\"Ok, well then...\" he said as he slipped his hand around the back of my neck and pulled me in for another kiss. \n\nMy hands found their way up over his sculpted chest and around his neck as I stretched up on my tiptoes to meet his kiss. I pulled him further into the room as I kicked off my shoes and fell back onto the bed. \n\nHe kicked his shoes off and hesitated, \"You sure about this? You did have quite a bit to drink.\" \n\nI smiled up at him, \"Just shut up and kiss me will you?\" I was surprised at how confident I sounded. I wasn't normally so demanding, but it felt good. It felt sexy. \n\nI felt so comfortable with him. I felt sexy, I felt desirable, and I felt like I could be myself without worry and it showed. We made out furiously. Our hands roamed one another's bodies up and down and I could feel myself getting more and more turned on. His large hands on me made me feel small and delicate and the way they massaged and grabbed at my body drove me crazy. His body was perfectly toned beneath my hands, feeling his back muscles flex and move as he did, his arms hard and strong, and finally, I was able to feel his forearms ripple beneath my fingers. He was the sexiest man I'd ever met and here I was on a bed with him on top of me. \n\nEventually I grabbed at the hem of his t-shirt and hoisted it up over his head. He did the same to me, before hovering over me staring down at my body. \"You're absolutely gorgeous you know that?\" He said as his fingers gently danced their way down my neck and sent a shiver down my spine as they traced my collarbone. I reached behind me and unhooked my bra, tossing it to the side, and pulling him back to my body. \n\nI wanted to feel his skin on mine, his hard body against my breasts, his sculpted stomach pressed to mine. I wanted to feel him on me, I wanted to feel him in me. \n\nI gasped as he moved lower and took my nipple into his mouth. His warm tongue danced and flicked over my hardening nub expertly before moving to the other side. My nipples tingled and sent a rush of pleasure down my body with every flick of his tongue. Slowly he kissed his way down my stomach before getting to the edge of my skirt. I wanted him to keep going, I didn't want him to stop. I lifted my hips, giving him the ok to pull my skirt off. He obliged and also took my thong with it, leaving me completely naked before him. I spread my legs to give him access to everything he wanted and closed my eyes waiting for him to drive me wild. \n\nBut it never came. I opened my eyes wondering why he hadn't started eating me out to find him hovering above me, looking into my eyes. \n\nIn a sultry tone he asked, \"What do you like? What drives you crazy that you've been too scared to say because you worried you'd get judged? I know there's something, I could see it on your face earlier.\" \n\n\"I...I don't know.\" I lied. \n\n\"Sure you do.\" He said as he kissed my neck and let his hand run up my inner thigh, brushing just past my pussy but not letting me have what he knew I wanted. \"If you're not going to be honest with me, I can't make you as happy as I want to and I'll just be left teasing you until you do tell me.\" \n\n\"I...\" His fingers traced the edges of my pussy lips making my breath catch as I hoped he would give me any sort of stimulation other than the soft teasing brushes of his fingers. \"I don't...I can't.\" \n\n\"Yes you can. I know you want it, all you have to do is tell me.\" \n\nMy inhibitions were paper thin. Between the alcohol and how incredibly aroused I was, I couldn't hold out much longer. His teasing hands were chipping away at me and I knew I was going to break. \n\n\"Ok, ok, I...I like butt stuff\" I mumbled. \n\n\"You're going to have to speak up a little more than that if you want my tongue on your clit anytime soon gorgeous.\" He prodded \n\nI broke, I couldn't take it anymore, I wanted his tongue on my clit desperately and without even thinking about what he might think of me, I blurted, \"I like butt stuff. I like having my ass filled.\" \n\nJames didn't miss a beat, he reacted as if I'd said the most simple and obvious thing in the world, \"See, that wasn't so hard was it?\" He replied as he moved his way down my body. \n\nHe dove between my legs and proceeded to eat me out in a way that I had never experienced before. I couldn't even tell what he was doing, all I could tell was that it felt amazing. His tongue seemed to be everywhere at once and he knew exactly when to apply pressure and when to back off to the gentlest of touches. I was lost in it and found myself moaning and my hips thrusting my pussy into his mouth, desperate for more. I came quickly, and then came again shortly after. I wanted his dick inside me, and just when I was about to pull him up to get just that, it happened. \n\nHis tongue was still lapping at my clit when suddenly I felt his finger, slick and coated with my cum, pressing against my ass. I gasped, I couldn't believe this was about to happen. I'd been fantasizing about this as I fucked myself for weeks and now it was actually happening. As James applied pressure with his finger I relaxed and he plunged inside up to his second knuckle. I let out a long moan and began gyrating my hips up and down, fucking my own ass on his finger. \n\nHe got the hint pretty quickly and soon he was thrusting his finger as deep as possible in and out of my tight hole. It didn't take long for him to add a second finger which was more than I'd ever taken with my toy. It felt incredible. The pressure was even greater and his thrusting was driving me to my third orgasm of the night. I was a complete wreck, I couldn't think straight, I couldn't form a coherent thought, I was just writhing, moaning, and losing myself in the pleasure. \n\nJust when I was about to cum for the third time, James pulled his fingers out of my ass and stopped tonguing my clit. I lay there catching my breath, my breasts heaving, and slowly opened my eyes. James had left the bed and was now pushing his shorts and underwear off. His dick sprang into view and I got my first look at him totally nude. \n\nHe was toned all over, his six pack visible as his labored breathing clenched and unclenched his stomach, his arms built and flexing as he moved to grab something from his dresser, and then his dick; his dick was beautiful, it was bigger than I'd had before but not huge, it was proportionally perfect, with a thick shaft and a head that was glistening with precum. I wanted to taste him, but I suddenly realized that would probably have to wait as he generously spread lube up and down his shaft. \n\nOh my god. He was going to fuck me. He wasn't just going to fuck me, he was going to fuck my ass. I suddenly got nervous. Could I take something as big as his dick? It was quite a bit larger than the dildo and I'd only just started using that. I wasn't sure if I could do this. I wanted this, I really did, but I wasn't sure if I could physically handle it yet. It was worth trying at least, and if it didn't work then, fine, I would tell him to stop. \n\nHe walked back over to the bed and pulled me to the end of it with my legs up in the air over his shoulders, spread so he could see my glistening pussy, and my ass at the very edge. I felt so submissive. I was his to have as he wished. \n\nMy breath caught as the head of his cock pressed against my ass, gently at first, then with more and more pressure. I didn't think it was going to fit until suddenly I felt my ass stretch open and the head of his cock slip inside me. There was a slight twinge of pain as I stretched to accommodate his girth but as soon as he had entered me I was overwhelmed with how big he felt. \n\nSlowly James began thrusting short shallow thrusts working himself deeper and deeper into my bowels. I lay there gasping and moaning as he went, feeling him stirring depths that had never seemingly been reached by the dildo. \n\n\"Oh my god, how deep are you?\" I asked, expecting him to say he was almost bottoming out. \n\n\"I'm about halfway, want me to stop? It's ok if you want me to back out.\" \n\n\"Holy shit that's only halfway? You feel huge. No don't stop. Keep going. I want it all, give me every last inch.\" \n\n\"Mmm...Yes ma'am,\" he said as he leaned forward and the second half of his cock sunk into my ass in one fluid motion. \n\nMy eyes bugged out of my head as I sat up and my mouth dropped open wordlessly while the sensation washed over me. \"Oh my god, Oh my god. Holy shit that feels big.\" I gasped collapsing back onto the bed. \n\n\"You ok?\" He asked. \n\n\"I'm good,\" I laughed, \"I'm so very very good.\" \n\nWith that he began slowly thrusting in and out of me with long smooth strokes. The sensation was similar to when I used the dildo but the pressure was amplified 10x and made me feel so incredibly full with every thrust. I felt like I could cum at any moment. \n\nHe built up speed and soon I was receiving my first real assfucking. His balls slapped against me with every thrust and I could hear the wetness of my pussy as his pelvis pressed into me. I sat up on my elbows and looked down to see his cock disappearing into me. I couldn't believe I was taking this huge cock, and yet there it was, fucking my ass for all I was worth. \n\nI fell back on the bed and began kneading my chest, playing with my nipples, and not worrying at all what James thought of what I was doing. Suddenly I felt James's hand on my clit and that was it. That was the final sensation that pushed me completely over the edge. \n\n\"Oh my god I'm cu- ahhhhh!\" I cried as I felt my pussy spasm and my ass clench down on his pistoning cock. \n\nHe thrust deep inside me and remained there as I rode out my orgasm. It was the most intense of my life; the intensity of the moment, James and his gorgeous body, knowing his cock was inside me, knowing his cock was inside my ass, his fingers on my clit, my hands on my chest, it was almost too much to handle. I felt like my body might explode as it clenched, spasmed, and writhed uncontrollably. \n\nWhen I finally stopped squirming and opened my eyes, James was looking down at me with a smile. \n\n\"That was, without question, the hottest thing I've ever watched in my life. I hope to god you enjoyed that as much as I did.\" He said. \n\n\"Phew, did I ever. That was unbelievable. Did you cum? Sorry I couldn't tell, I was a little...overwhelmed down here.\" \n\nHe slowly began thrusting again, \"No, not yet. But I don't need to if you're spent.\" \n\n\"Oh no, you just gave me that and you think you're not going to get to cum? I'm not that mean. But I wouldn't mind changing positions if you don't care.\" \n\n\"Absolutely not, what'd you have in mind?\" He asked as he continued to slowly slide in and out of my ass. \n\n\"I want to be on top.\" I said confidently. I felt sexy as hell, and I wanted to ride this man until he came, knowing that I was able to drive him as wild as he drove me. \n\nWithout a word, he slipped from my ass and laid back on the bed. I turned around to face him and climbed on top. I reached back behind me and guided his large cock to my asshole. I slowly impaled myself inch by inch until my ass sat against his pelvis. The angle was slightly different in this position but felt equally arousing. I placed my hands on his chest, looked into his eyes, and slowly began moving my hips up and down. \n\nI couldn't believe how hot it made me to stare into his eyes as I used his cock to fuck my ass. Knowing that he knew exactly what was happening and that he was enjoying it as much as I was turned me on to no end. When I felt his hands grab my ass and help me bounce on his cock, I knew I was going to cum again; his strong hands gripping my ass cheeks, spreading them so his dick could fuck my asshole while he lifted and lowered me in time to his thrusts, his lust filled eyes staring up at me, yes, I was definitely going to cum again. \n\nOur pace built and built until I was just hovering over him as he pistoned in and out of me faster than ever before. I screamed in pleasure with every thrust. Just as I was getting close to cumming again, James dropped me down onto his cock and I felt him twitch inside of me. I couldn't believe that I could feel him cumming. I clenched my ass around him and I felt his dick swell and spurt his cum deep inside. I was so massively turned on by the feeling that my hand dropped to my clit and I masturbated furiously while I felt him shooting rope after rope up my ass. A few moments after he finished cumming I brought myself to my fourth orgasm of the night. It wasn't as intense as the first, but it was still enough to make my body shake and my knees weak. \n\nWhen I finally came down from my orgasm I looked down and realized I had dug my fingers into James' chest so hard that I'd left deep marks in his skin. \n\n\"Oh my god, I'm so sorry I didn't mean to hurt you!\" I said. \n\n\"Hurt me? You're fine. Holy shit are you fine. I'll take a few marks on my chest any hour of the day if that's what I get in return.\" \n\n\"I'm free all day every day for the next 3 weeks before school starts. You can call anytime.\" I said with a smile. \n\nI leaned down and kissed him; a hard, passionate kiss. I had never felt so incredibly satisfied in my life. I'd finally broken out of my shell. No one could possibly tell me what had just happened was boring."
    ],
    "authorname": "OnePenIsMightier",
    "tags": [
        "oral",
        "bar",
        "anal",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/breaking-out-of-boring"
}