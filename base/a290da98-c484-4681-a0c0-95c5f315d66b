{
    "title": "The Girl on the Bridge",
    "pages": [
        "Author's note:\n\nI kept debating on whether to share this story or not, but I think it would be cruel to keep it to myself. To make it easy on you, Emma will be speaking in present time and Camryn will be recounting the past. I did not intend for the story to be written that way, the characters chose that themselves.\n\nXOXO SkylerLuv\n\n**Warning**This story touches on topics of suicide, self-harm, and BDSM. Please enjoy one of my other stories if you are looking for something tamer.\n\n~~~~\n\n{Emma}\n\nI am yanked out of the darkness.\n\nI can't make sense of where I was or where I am.\n\nWhat was that?\n\nSlowly, my consciousness rolls itself out of a deep, deep slumber.\n\nThere it is again. A beep. A monitor? An alarm? It is faint and rings again after an alarming pause.\n\nI groan.\n\n\"Emma?\"\n\nMom?\n\nMy eyelids are weighted down, impossible to move. Where am I? I hear the beep again. I try moving my head but my neck is stiff. So stiff. It hurts to swallow. My mouth is dry. There is no saliva. Every inch of my body protests against any movement. I still try.\n\n\"Oh, don't try to move, sweetheart.\" Her voice breaks and she sniffles.\n\n\"Mom?\" I force myself to reach out to her, through the pain I find her hand. Her hand is tiny in mine. Frail and wrinkled.\n\nI try to open my eyes, even manage to move my lids a centimeter but the bright light forces them shut again. The buzzing light above us, the whiteness of the walls, the sunlight coming from the windows, it is all too much.\n\nI groan again.\n\n\"Ken!\" Her tone is more alert.\n\nI feel another body come around to my other side. \"Emma, oh my poor baby.\" My father sobs into my chest.\n\nThe fear in his voice frightens me. It is hard not to force my eyes to open from the distress their voices. I try opening my eyes slowly this time and manage to keep them open. It takes a while for them to adjust. They burn and no amount of blinking helps. I try to assure them with my eyes that I am okay. But I don't know if I'm okay. I don't know where I am. Based on how sterile the room is, I can assume I'm in a hospital. The beeping is my heartbeat being reflected on a small screen. Are the pauses supposed to be that long between each beep? Something is not right. Well, nothing seems right.\n\n\"Dad?\" My voice is small and sounds more like a croak. Unrecognizable. \"Mom, please. I'm okay.\" I close my eyes again to give them some rest.\n\nIt hurts to speak. My vocal cords grind against each other feeling like sandpaper is being shoved down my throat. I try one last attempt to open my eyes for good and reassure them that I am fine. I have to blink tears from my eyes before I'm able to see them clearly. I try to sit up but a sharp pain shoots up my spine. Fuck! I lay back against the bed, pretending that every nerve in my body isn't fighting for me to sit still.\n\nMy father is still crying against my chest, his arms are wrapped around my waist. My mother wipes my face and tries to put on a strong face. Her smile is forced, her lips pale, nothing at all like her usual collected look. Her short brown hair looks oily and tangled. How long have they been here?\n\n\"Ken, look at her. She's awake. She's here. She's okay.\" She pats his back.\n\nHe wipes his nose with the back of his thick hand and looks at me through bloodshot eyes. His lips tremble but he stops crying. I am his only baby girl. His fair hair is almost white, the wrinkles much more pronounced. He's aged years since I last remember him.\n\nWhen was the last time I saw him?\n\n\"It's okay sweetheart. We're here. We're here.\" My mom wipes my tears away.\n\n~~~~\n\n{Camryn}\n\nShe is a shadow. Practically an afterthought.\n\nJust a few seconds away from not being a person at all.\n\nI lean further against the railing to get a better look at her face. By the look of her profile, I can tell she has a lot of resolve. Frail but unafraid. Definitely determined. She has probably gone through her whole life without voicing her own opinions and sits in the background while others take center stage.\n\nA wallflower, wilting away right before my eyes.\n\nHer pale skin is alarmingly white. Her cheeks cave in making her cheekbones appear sharper. There are dark circles under her eyes. Her hair is as dull and lifeless as she is. Like hay, yet much softer. She's all legs and arms. Thin. Much too thin.\n\nThere is enough room between us to fit a group of tourists from South Korea.\n\nThey're all alive. Taking pictures, capturing the sunny day on this sturdy bridge. Each one takes turns posing in front of the water. They're not loud and boisterous like others that I have seen, but compared to the lifeless girl next to them, their joy is almost offensive. She doesn't pay them any mind though. Her eyes are focused on the deep, dark waters below us. Does she notice the peaking rocks as well? I look down again trying to see them from her perspective. They've been there longer than we have been alive. How long has she been alive?\n\nOne of the bigger men in the group accidentally bumps into her but she barely notices. Her eyes look up at the clouds. Well, the single cloud in the sky. Just a wisp of it, transparent and unassuming. There is no emotion on her face. Nothing to betray her thoughts. But I hear her loud and clear. As if she is yelling at the top of her lungs but everyone around her is oblivious to the sound. But I hear her. The words may be incoherent but I want to believe I understand their meaning.\n\nI dispose of my cigarette and make my way over to her.\n\n\"Hi.\" I lean against the railing and avoid looking directly at her. I look back down at the rocks.\n\nShe doesn't hear me.\n\nIt's like talking to someone on a different timeline. We're both here but are we even here at the same time? I picture her in the distant past, coming to this bridge to contemplate her life. And I am here now, trying to reach her. There is white noise surrounding her, making her less attainable. How can I penetrate through that? This is going to be tricky.\n\n\"How are you today?\" I want to take out another cigarette but I don't want the smell to bother her.\n\nAgain nothing.\n\nMy fascination and concerns are purely selfish, I'll admit. I am attracted to dark things. Images, thoughts, people. She reminds me of my younger self. The one that had broken thoughts and no safe outlets. I always wondered what would have happened if I had someone genuinely ask me what was wrong back then. To truly care about my answer. An although my curiosity is selfish, I must also admit that deep down I want to take this girl out of her own head. Yes, I appreciate the mystery around her from an artistic point of view but I want to also appreciate her true self. If she shows me, I bet I would find a real treasure. I won't build her up to be something she is not in my head. I have done enough of that in the past.\n\nThe tourist group moves on, taking all the buzzing noise with them.\n\nThe bridge is now left bare.\n\n\"I'm fine.\" She smiles a little.\n\nI feel slightly disappointed but relieved. Disappointed because it wasn't yelling that I thought I heard earlier. Maybe it was just a hearty sigh. She doesn't need help, she's okay. She is here now, not somewhere in the future or stuck in the past. Maybe today has just been rough on her. I've all been there.\n\n\"It's a lovely day.\" Her voice is delicate.\n\n\"It is.\" I look back out at the water and the twinkling lights from the sun's reflection.\n\nWe stand in silence once more and I take the hint. My presence is now imposing.\n\nNever one to stay where I am not wanted, I pull back and sigh.\n\n\"I will see you around.\" I hope.\n\nShe nods.\n\nI walk past her.\n\nI guess going downtown will have to wait. I have spent too much time letting my mind obsess over her.\n\nI don't want to turn back and look at her as I walk away. She will probably sense that I'm staring too. It will be too creepy. She is okay. She is fine. She smiled. I curse and turn back anyway. I don't know if I will ever see her again. One last look to burn into my brain should be enough.\n\nMy stomach drops as I see her pull her body up onto the metal railing. She plants one foot and then the other with determination, her arms shoot out as she tries to regain her balance.\n\nShe's going to jump!\n\n~~~~\n\n{Emma}\n\nI wake up again, but not because of the monitor this time.\n\n\"Mom?\" Shifting my upper body, I look to my right.\n\nShe's sleeping on the small couch. A light blanket covers her upper body. My father is no longer in the room. It's night time and the only light in the room is coming from the T.V hanging from the wall. There's an old baseball game playing with no sound.\n\nI really need to use the restroom.\n\n\"Emma!\"\n\nI jump at the voice coming from outside my room.\n\n\"Get off of me! I swear to God Ken, if you don't get out of my way, I will force you!\" The voice is livid.\n\nWho is that?\n\nMy mother wakes with a jolt and rushes to my side. As if she is acting on pure instinct and this isn't the first time this is happening.\n\n\"Emma!\" The voice is more insistent.\n\n\"I told you, she doesn't want to see you!\" My father grunts. There's shuffling, nurses calling for security. \"You stay away from her or I'll call the cops!\"\n\nThe look in my mother's face is hard to place. I try to meet her eyes for answers but she looks back at the door and stands in front of me.\n\n\"What is going on?\" I hang onto her shoulders.\n\nThere is no other sound coming from outside. Her labored breath is the only thing I hear.\n\n\"Mom, who was that?\" Although I swear I have never heard that voice in my life, it sounds familiar. My mind races to try and match a face to it. Like watching a movie with an actress who played a small role in another movie. It wants to find an answer but I'm coming up blank. And it's not like I can Google it.\n\nShe finally turns and hugs me. \"Don't worry about it, sweetheart. Do you need something? Are you hungry?\"\n\n\"I need to use the restroom.\" There is nothing telling about her face. No worried look or angry lines anymore.\n\nAlmost as if nothing happened.\n\n~~~~\n\n{Camryn}\n\nI know without a doubt that this image will haunt me on my death bed.\n\nThat is how life changing it feels.\n\nHer face isn't frightened. Her hair whips around her head as the wind picks up. Her sun dress flows in the direction of the breeze. She regains her balance again, moving her arms out at her side. When she is satisfied, she puts her arms down, no longer looking for the balance she sought before. She smiles, a tiny smile as her body inches out, ready to plunge.\n\nI throw my body in her direction, yelling something incoherent along the way. I try to pull her down but she latches on to a pole right next to her. She lets out a curse, completely angry at my interference. Her eyes fill with tears. Somebody yells in the distance causing others to scream in response. I pull her back again against my chest, sighing internally when her hands slip away from the pole. We roll around on the bridge until I land on top of her.\n\n\"What the fuck are you doing?\" I am yelling at the top of my lungs.\n\nA lady and a man run toward us in a panic. They're one of the first ones to reach us. They make a fuss around her but I hold my hand up to let them know we are okay.\n\n\"Should we call an ambulance?\" The lady looks down at the girl beneath me.\n\nI cover her out of view with my chest and shake my head.\n\n\"I will get her somewhere safe.\"\n\n~~~~\n\n{Emma}\n\nI get discharged after two full weeks of waking up.\n\nMy parents never leave my side, having one of our maids bring them a change of clothing and meals on occasions. My body recovers enough. Whatever that means. My neck is still sore but nothing that isn't manageable. The bruises on my arms and my legs are a deep purple now. They're also not as swollen as before. The stitches on the edge of my bottom lip should dissolve in two weeks, according to the doctor. There is also a yellowish-green bruise under my right eye and a small part of my head had to be shaved off so they could operate next to my ear.\n\nTo say that I am shocked to see the stranger staring back at me in the mirror, is the understatement of the year. My dull dirty blonde hair, flat green eyes, and pale skin have looked the same since childhood. Yet, I didn't recognize myself that first time I saw myself in the bathroom mirror. The bruises, the cuts, the stiches. I'm surprised I'm still alive.\n\nThe doctor mentioned my memory will be hazy for the weeks to come but hopefully nothing too serious. There will be things and people and places that I won't remember. I remember important events. High school graduation, moving to a new city for college, graduating, moving to another new city to start my career...and then there are spotty memories. The building where I work, some colleagues' faces, my roommate's face. I can't remember her name. Why is that? The accident caused everything in my head to be jumbled.\n\nThat's right. I was in an accident. Walking on the street and I got hit while walking on the crosswalk. The guy is in jail for drunk driving. And now I have a minor case of amnesia. What's next? Will my long-lost sister show up claiming to be the rightful heir to my family's throne? I never imagined my life turning into a soap opera. And no, we are not royalty. My parents did inherit enough wealth to live comfortably but we are not filthy rich. Compared to others in our social circle, we have a modest way of life, although my mom likes to keep up appearances. That much I do remember.\n\n\"We have moved most of your things back to your old room.\" My mom announces. She looks back at me from the passenger side seat.\n\nI look at her and give her a small smile.\n\nMy apartment. I almost forgot about that. I live with my friend from college. I remember us eating dinner, watching movies. What is her name? Why hasn't she called me?\n\n\"Where is my phone?\" That should have most of my answers. A person's life can be told through the content in their phone. Old conversations, pictures, documents, social media. What can I find out about the last couple of months of my life? Who was I?\n\nThey trade a look. \"You lost it in the accident. We will have to buy you a new one.\" She says, quietly.\n\nI stare out the window at the cloudy sky. It's going to rain.\n\nI sigh.\n\n~~~~\n\n{Camryn}\n\nWe sit across from each other outside an old ice cream shop.\n\nShe's stoic, no remorse in her eyes. Barely a hint of blush on her cheeks.\n\n\"I don't expect a thank you.\" I shift in my metal seat. \"Or even an explanation\"\n\nHer eyes have a hint of annoyance in them. They're green. Too dark to be considered bright and too light to be considered jaded. What I wouldn't pay to see the things she has seen with those eyes. To catch a glimpse of the girl before the bridge. What does she like? What environment did she grow up in? What pushed her to the literal ledge?\n\n\"Do you at least have someone to talk to?\" I want to smoke again but don't cave in. I picked a shitty week to work on health. Smoking less and less a day has been a bitch, but I've made good progress. I could consider this an unexpected event that requires me to smoke to think clearly but that is such a cop-out. It's all about baby steps.\n\n\"Yes, my therapist.\" Her gaze doesn't waver.\n\nShe's a beauty. Not conventionally what a stranger might consider stunning. But I am attracted to her and all of her emotions or lack thereof. But more than that, I feel like her protector. I just have to be careful and make sure I'm not getting ahead of myself.\n\nI realize now that the white noise around her is calming for someone like me. I always have one thought after the other, if I'm not stressing about this thing then I am definitely stressing about the other. And yet, when I look at her, there is total silence. All traffic comes to a jarring stop. It's refreshing.\n\n\"Any family?\" My chocolate ice cream melts under the setting sun.\n\nShe finally looks away and nods. \"My parents.\"\n\nObviously, her source of guilt. She was planning on leaving them behind. Did she leave a note? Have they found it yet?\n\n\"A significant other?\" I'm curious but I feel like I know the answer.\n\nIf there was someone else, they would have an inkling. I know I would. Just seeing her for the first time today, I felt like I knew some of her thoughts, feelings, and what she wanted to do about them. If she had anyone else in her life who truly cared about her, she would not have been on that bridge.\n\nShe shakes her head.\n\nWe sit in silence again. The pregnant pause gives her time to think.\n\n\"I would like to go home now.\" It sounds like a request.\n\n\"Okay, I can take you there.\" I stand and throw my untouched ice cream away. It was a dumb idea to come here. But I always feel better after having something sweet. I thought she would too. What does she enjoy? Probably nothing at this point.\n\n\"That's okay. I can catch a cab.\" She walks away and holds a hand out to hail a cab.\n\nI take her hand and tug her further down the street.\n\n\"Let me take you somewhere first.\" We're only a few blocks away, so why not?\n\nHer cold hand begins to warm in mine. I feel each bone against my fingers.\n\n\"How do I know you're not some serial killer taking me to your favorite murder alley?\" She follows close behind.\n\nI say the first thing that pops into my mind. \"Then I'll just pick up where you left off.\"\n\nI stop walking and look back at her to make sure I didn't offend her.\n\nShe doesn't look upset. In fact, I think there is some emotion in her eyes.\n\nI hide my smile. She has a sense of humor and I'm an idiot.\n\nWe keep walking. I turn right after the light and see the end of the line to get into the gallery. It's after dinner, so it's longer than usual. People in the city love the night life. Coming to the gallery is on most tourist to-do list but locals love popping in as well. It is also Friday, which means it will be a busy night.\n\nI pull her in front of me and we walk straight in.\n\nPeople wave as I walk by and some take pictures of me but no one stops me. They see my attention is elsewhere at the moment.\n\nI walk said elsewhere to the first room on the right.\n\nI place her in front of a big canvas and place my hands on her shoulders.\n\n\"Wait here, I will be right back.\" My lips almost touch her ear.\n\nShe smells of the ocean. Slightly salty, a breath of fresh air, and a hint of sunscreen.\n\nKaty is talking with a potential client and smiles when I catch her eye. Her red lips are a pleasing contrast against her black hair. Her tattoos draw attention to her arms and her neck. She's a walking art show herself.\n\nHer tattoos are a big part of who she is. Katy is a fun, free-spirited, judgement-free, and by far the best assistant I have ever had. We've worked together for years and she the closest thing I have to a real friend. Seeing her right now brings me peace because I know just for one second, I'm not as alone as I think I am. There is one person here who genuinely cares if something happens to me.\n\n\"And here she is.\" She introduces me to an older gentleman dressed in all black. \"What a lovely surprise.\"\n\nOur chat isn't long and I pull her away once he makes a decision on the particular painting he wants.\n\n\"I didn't know you would be in today.\" She walks towards the back office and I follow her in.\n\n\"Last minute plan. I don't intend to stay long.\" I place my hands on my hips and take a deep breath. \"I brought someone. She's different.\"\n\nHer mouth slightly drops.\n\n\"Just make sure people stay away from us, if you can. She's very shy and won't like the attention.\" I can bet my life on that.\n\n\"Who is she?\" I see the excitement in her dark eyes. It's not the first time I've brought a girl here. Just the first time I'm not boasting about my skills to impress her.\n\n\"Um.\" I don't even know her name. \"I'll let you know all about it tomorrow.\" That's if I come in tomorrow. I can always babysit this stranger for another day if needed. I wouldn't mind in the least.",
        "I walk back to the open floor expecting to see her where I left her.\n\nIt's hard not to panic when I don't spot her. Maybe I shouldn't have left her alone. What the Hell is wrong with me?\n\nSome people stop me and ask to shake my hand or talk about my art but I wave them off letting them know I am off for the night but I will be in tomorrow. Since most of them are familiar with my erratic behavior they don't get too offended.\n\nI spot her natural dark gold strands around the corner. I sigh in relief and stand next to her.\n\nIt's not one of my favorites. A woman sitting on the beach, looking into the endless sea. Most of my paintings are of naked women. In their most natural and vulnerable forms.\n\nThe model was not very fond of the sand that day but she didn't complain when I helped her get all cleaned up. I shake the memory away.\n\n\"What do you think?\" I turn my head trying to see from her eyes.\n\n\"She looks lonely.\" She peaks up at me through the corner of her eye. \"It's also very interesting that she is naked. Completely exposed and with nothing left. Baring her most true self. Kind of sad, really.\"\n\n\"Hmm.\" Yes, she is literally lonely but I was going for more of a 'she is happy being all alone' look. A lot of my pieces are dark and focus on all of the bad traits a human carries around with them or the unwanted baggage that follows them. This one was meant to be lighter. I'll get it right next time.\n\n\"Do you work here?\" She finally turns her towards me. She still doesn't look at me.\n\n\"I do.\" I take her hand and walk us back towards my office.\n\nKaty beams as we walk by but I shake my head when she tries to walk toward us. She nods in understanding and gives me a thumbs up.\n\nI wish I could say that I took her back into my office and got this strange girl to open up to me. To talk about what happened today and help her feel better. But none of that happened. I got her to feel comfortable enough to sit with me on the couch. She became more relaxed and eventually laid her head on my lap.\n\nAnd then she slept.\n\n~~~~\n\n{Emma}\n\nRosa is waiting for us on the steps when we pull up to the house.\n\nShe hugs me tightly and pats my head. Rosa has been with us since I was in diapers. I look into her watery brown eyes and hug her again. Her jet-black hair has some gray strands mixed in. Not how I remembered it.\n\nThe house, though, is as spacious and tasteful as I remember. High ceilings, cream colors, chic paintings.\n\nCold and lifeless.\n\n\"Please take her bags upstairs, Pablo.\" My father gives our butler my bag.\n\n\"Glad to have you back, miss.\" Pablo briefly shakes my hand before going up stairs.\n\n\"Where is Linda?\" I ask nobody in particular.\n\nRosa shoots my parents a look, unsure of how to answer.\n\n\"She is no longer with us. She found a job in New York.\" My mom takes me by the shoulder and leads me to the kitchen. I liked Linda but I'm afraid to ask when she left. Is this what the rest of my life will consist of? Trying to remember people or events and realizing I am years behind?\n\n\"Lunch will be ready in ten minutes.\" Rosa announces behind us.\n\nWe walk to the long dinner table and I take a seat in the middle while my mom sits on one end and my father on the other. Just like we always have.\n\nThe polished silverware sits next to the delicate china.\n\nRosa, and a new maid I do not recognize, come in and set the food out. Fried chicken, mashed potatoes, mac and cheese, and buttered rolls.\n\n\"I hope it is still your favorite.\" Rosa gives me a small smile.\n\n\"Thank you, Rosa.\" I smile back.\n\nIt all looks so good and smells divine. I am careful with my servings. My appetite has changed since being in the hospital. Or I don't know, maybe it has been like this for a long time and I just don't remember. I better get used to the idea of questioning everything about my life.\n\nMy parents talk about their upcoming trips for work, small vacations we can go on, and what I can do to keep myself entertained while I'm here.\n\n\"When can I go back to work?\" I put my fork and knife down.\n\nThree bites of a drum stick, one spoonful of mashed potatoes, and half a spoon of mac and cheese. No bread. I can't stomach anymore.\n\nThey trade another look. Less severe than the one in the car.\n\nYears of growing up in this house have consisted of these nonverbals. One look, a raised eyebrow, a crossing of the arms and I know I'm in trouble. It's never what is said, but what is left out.\n\n\"You don't have to go back. We have more than enough space to have you here.\" My father gives me a warm smile.\n\nI return his smile.\n\nThey continue to eat.\n\n\"I would like to go back, eventually.\" I move aside to allow another maid to take my plate.\n\n\"We just got you back, Emma. Give us some time to spend with you.\" My mother chides.\n\nI nod in agreement.\n\n***\n\nMy father holds my hands down as my mother dunks my head in the water.\n\nI can't breathe. My eyes are wide open but I only see the bottom of the white tub. The light behind me is faint. I struggle with all of my might. Water splashes around us. I move and move and move trying to put just an inch of space between the water and my face but nothing works.\n\nThe cold hard floor is unforgiving against my knees.\n\nMy lungs burn. I need to breathe.\n\nIt is a gruesome analogy, but by far the most fitting.\n\nOne that comes to mind in times like this. When I'm supposed to believe I have control over my life but I can't exercise it.\n\nIt's the guilt for wanting to be away from them, the anger for not speaking up for myself, the shame of being the daughter they didn't want, and the uncomfortable realization that nothing has changed. Or will ever change.\n\nI want to yell at them to let me breathe, to give me space, to let me decide what I think is best but I don't. My words, actions, and emotions fall on deaf ears.\n\nI thought I would be rid of these thoughts after moving out but being back in this house brings them back.\n\nI burry my face further into my pillow.\n\n~~~~\n\n{Camryn}\n\nI watch her carefully as she knocks on her apartment door.\n\nShe doesn't have her keys because she did not expect to come back home tonight. It's hard for me not to think about the what ifs. I could have easily decided to take a taxi today instead of walking to the store. I could have decided to take the long way and not cut through the bridge. She could have decided go to the bridge earlier or later...\n\nThe door opens and a Hispanic girl with long brown hair and dark eyes opens the door.\n\n\"Hey,\" She gives her roommate a small wave and turns to look at me. \"Thank you for walking me home.\"\n\nHer roommate moves aside and watches her walk into her room.\n\nShe looks up at me and turns her head to the side. \"And you are?\"\n\nI stick my hand out, \"I'm Camryn.\"\n\nThere is something in her eyes. In her whole demeanor actually. The interaction between them doesn't look like best friends who decided to live together. Maybe they just share a space and nothing more. She's not overly concerned about why her roommate doesn't have a key. I don't see any emotion actually register in her eyes. Except now that she is looking at me.\n\nThere is obvious curiosity but also some interest. I've seen that look on some of the models I've worked with. Normally I would make the first move at the first sign of interest but my mind is back in their apartment with her quiet and sad roommate.\n\n\"Evelyn.\" She shakes my hands, forcing me to focus on her.\n\n\"Evelyn, can you do me a favor?\" I pull my hand back but lean in to use my charm.\n\nShe reacts with no hesitation. She's looking at me from under her eyelashes and licks her lips. Definitely interested.\n\n\"Can you make sure to check on her tonight?\" I motion to the closed door behind her. The one I saw her blonde friend go into. It's hard not to stare at it in hopes that she will come back out.\n\nHer dark eyes turn hard but she tries to cover her annoyance with a smile. She is probably used to being the center of attention. She is beautiful but I see it is only skin deep.\n\n\"Of course, I'm sure she'll be okay though.\" Her tone is sweet but her eyes say it all.\n\nHm. Not concerned with her friend's well-being. That is disturbing. Maybe I should march in her room and force her to come back to my place. I would make sure she made it through the night and the next day. But I have to put my trust in her. Trust that she will choose to live tonight so that I can hopefully see her in the near future. I have to trust that she will want to see me too.\n\n\"Have a good night.\" I turn away before giving Evelyn any more attention.\n\n***\n\nI have been a nervous wreck over the girl on the bridge.\n\nThis girl that has probably walked through life unnoticed has completely taken over my thoughts. She has a hold over me that I want to explore and need to figure it out. One too many times my mind will wander out into the city hoping to reach her. To brush against her conscience and signal her to come to me. Stupid, I know. It still does not stop me from seeing her in my dreams, in my coffee, on my paintings.\n\nAnd now, here she is, in my gallery. Walking into my life for a second time.\n\n\"Hi.\" She gives me a shy smile.\n\nShe looks better rested. No dark circles under her eyes today but she still looks very thin and frail. Just as breathtaking as I remember.\n\nI pull her into my arms, taking in her scent. I guide her back out to the busy street and signal to Katy that I'm heading out. She beams at me when she sees my companion. It's hard not to feel elated. I try to rush us out of the gallery as quickly as possible. Being inside of a building full of my artwork is not where I want to be. Not with her. Her eyes see too much. I'm afraid she will be able to see my paintings for what they're really worth.\n\n\"I'm starving.\" Not really, but she looks like she needs to eat. \"Do you have a preference?\"\n\nShe looks away. \"I just ate.\"\n\nHer white and yellow striped dress hangs off her shoulders. I can see her bones barely covered by her skin. I'm sure I can count them if I try.\n\n\"Humor me.\" I take my sunglasses out of my back pocket and put them on. It gives me a chance to look at her without having her notice. Her green eyes don't land on anything more than once as she looks around. She's skittish. There is a tiny hint of color on her cheeks today.\n\n\"Pizza.\" She shrugs.\n\nI take her hand in mine and pull her towards the east side of town. I hide my smile. She looks beautiful. I tell her so but she ignores me.\n\nLunch is an interesting affair.\n\nShe takes three bites of her sausage slice and two sips of her Diet Coke. Then she just sits there pushing the food around, making it seem like she's eating more than she really is. That won't do, but I can't do anything about it. I'm technically not even familiar enough with her to be considered her friend. Can't very well demand anything from her. Yet.\n\n\"How was your day?\" I lean back and take a sip of my Sprite.\n\n\"Good.\" She shifts in her seat.\n\n\"What made you come to me?\" I want to hear it. Whatever the reason, she is choosing to spend her time with me. Time the she did not find valuable a few days ago.\n\nShe looks better today. There is no overnight transition. Her hair isn't magically glossy and her face is not plump and full of life. But looking at her eases my anxiousness. She's here, spending time with me.\n\nShe meets my eyes and then looks away. All I get is a lame shrug.\n\nI shake my head. Of course, she won't give me what I want. That is too much to ask for.\n\n\"Are you doing anything tonight?\" I look down at my watch. I'm practically done for the day. She has my undivided attention.\n\n\"No plans.\" She leans back, trying to seem relaxed.\n\n\"Perfect.\" I try to dazzle her with my smile but I don't get the same reaction her roommate gave me. Instead, her eyes flutter and she lean further back in her seat. Not the what I was going for. Also, not very promising to my ego. Perhaps I deserve that.\n\nWe leave the small pizza shop. She doesn't seem to mind when I take her hand in mine and I don't plan on stopping if that is the case.\n\nWe take a short walk to a nearby park. She talks about her current job, which she likes. Being stuck in an office all day surrounded by charts, numbers, and stuffy people is not my cup of tea but who am I to judge? She looks like a level headed young woman who is just trying to find her place in the world. I can help her with anything she wants as long as she keeps wanting to be part of this world.\n\nShe then starts to talk about her roommate. They met her last year of college and moved in together afterwards. They like sharing their living space but don't necessarily do everything together. Evelyn is a party girl that plays for both teams and likes to play the field. She is pretty, so I can only guess that it must not be that hard. This also explains why they don't seem so close. At least not from Evelyn's side. They may be friends but from an outsider looking in, they just happen to live together. I can tell she cares for Evelyn but I don't think it goes both ways.\n\nI also think back to Evelyn's face that night. Something just rubbed me the wrong way. I didn't warm up to her but I don't dwell on it too much since she's not who I'm interested in.\n\n\"What is your name?\"\n\n\"Emma.\" Her cheeks turn a bright red and I see a small smile break through.\n\n\"Why are you smiling?\" It is hard not to smile back.\n\n\"I just realized that we never really introduced each other.\" She lets go of my hand and sits on a park bench.\n\nI sit next to her and stick out my hand. \"I'm Camryn.\"\n\nShe doesn't shake it. \"I know.\" Gone is her smile.\n\n\"Okay.\" I put my hand down.\n\nI watch as she thinks about her next words. The sunlight peaks through the moving leaves above us briefly shining against her curious eyes. I almost have to gasp for air at the picture-perfect moment. Then she speaks.\n\n\"You're 28, born and raised here, have been painting since you were in diapers, lost your parents when you were in college, dropped out, threw yourself into painting full time, and now have your own gallery.\" Her body is turned away from me. Her voice sounds very sure. I haven't heard it that way in all of our time talking. Well, maybe when she talked about her roommate. I guess as long as the spotlight is away from her, she is comfortable with speaking. \"I initially thought you were the receptionist there or something.\"\n\nI chuckle. \"Yeah, I don't usually lead with what I do when I meet someone.\" Unless I want to skip the pleasantries and just jump into bed. I'm not proud of it, but I am trying to learn from it. Which is why I am trying to do things differently with her. With Emma.\n\nShe purses her lips. \"I'm sure all of the girls go crazy when they realize you're an artist. Every picture of you online has some girl hanging off your arm.\" Her cheeks light up again. She looks embarrassed.\n\nI lean in further until she looks at me. Her eyes widen and she breathes in through her mouth.\n\n\"I see you have done your research.\" I'm embarrassed but I don't show it.\n\nShe has caught me totally off guard. I didn't expect her to know so much about me without directly asking me. It shouldn't be so surprising in the age of the internet. I do get an unwanted spotlight now and then. I wonder what stories she has stumbled across. Some of my painting methods have been questioned and my reputation with the ladies can be a turn off for a lot of girls. I am oozing with curiosity about her thoughts. I am also extremely flattered to have her dive deep into learning more about me.\n\n\"I am obsessed.\" She admits. \"Your paintings are...I get them.\" She finally looks at me, not holding anything back.\n\nThat sentence is enough to unfurl the coiled-up emotions and thoughts I have about her. I have been trying to hold back and allow some distance between us because I thought it was mostly one-sided but the feelings appear to be mutual. She is interested in me. Enough to stalk me online. Or maybe she is just a fan of my paintings.\n\nI lean in further, letting my heart guide my lips.\n\n\"I'm going to kiss you now.\" I stop just far enough to see her reaction.\n\nShe closes her eyes and inclines her head to meet me halfway.\n\nHer lips are warm and inviting. I have to limit the kiss to something innocent. It is refreshing. She does not push for more and I do not cross any arbitrary lines. Although I want to. I want to be closer to her, but I can wait. Until she is ready. I inhale her refreshing scent before pulling back.\n\nShe licks her lips. \"Thank you.\"\n\n\"No, thank you, Emma..\" I smile.\n\n~~~~\n\n{Emma}\n\nThe weeks pass by in a blur. Each day blends in with the last. Nothing stands out apart from the looks between my parents when I ask certain questions. I still have big gaps in my memory and they don't know how to help. And then there is this unexplainable restlessness in me.\n\nAt first, I attributed it to having so many unanswered questions. I lie in bed and feel the scar behind my ear, trying to activate the magic to get my memories back but nothing happens. I can't pinpoint my last memory before the accident. Things come and go and names change and colors change. Just when I think I have something substantial and I try to hang on to it, it floats away and disappears all together. It is enough to induce a migraine every time.\n\nMy dreams aren't any better. I hear a voice that's very familiar but at the same time I can't recognize it. I don't see a face, just an outline. I think it's supposed to be the past version of me trying to communicate with my current self, to guide me and tell me what I am supposed to do now. But I never get anywhere with that so I've ignored that too.\n\nI don't leave the house for fear of being seen in such a beat-up state. The first three weeks I rarely went out to our backyard. Once my hair started to finally grow back, almost long enough to hide the scar, I felt better about being seen by others. The stitches on my lip are gone by the third week too, replaced by a small scar. The bruises fade away with time.\n\nAfter the fourth week I am ready to leave. My parents keep a watchful eye on me, rarely letting me out of their sight. When I do leave the house, I am always accompanied by someone. It takes the fun out of going out when there is someone always breathing down my neck.\n\nBy the fifth week my restlessness has reached a new level. Externally, I look the same. Internally, I am trying to crawl out of my skin.\n\nI have been promoted from being drowned to being burned alive. The comparison gets more gruesome. My parents watch the flames lick my legs and then engulf my lower body as I yell for help. They just watch the fire move up my body. My hands are tied to the post behind me. They each have a match waiting to start up the flames again in case they get blown out.\n\nI don't say any of this to my therapist, of course.\n\nShe does most of the talking during our session or pretends to guide me through some self-discovery bullshit that I can't buy. But I go for my parents' sake. They watch me like a ticking time bomb.\n\nI know I may seem ungrateful and they have been nothing but supportive since I have been out of the hospital but I feel my life slipping back to the nothingness it was before. My meals, my outfits, my days are all planned by them to fill whatever role they need me to fill that day. Whether it is to go out and have dinner with my mom and her friends so she can brag about my accomplishments or go to the golf course with my dad as he does business and I entertain some client, it is all predetermined and I just have to do as they say.\n\nIf that isn't bad enough, my brain likes to go to the deepest, darkest part and pull me into a dark hole. Where I don't want to talk to anyone, I don't want to get up, I don't want to be happy. I'm just tired and want to sleep forever. But I can't. And I don't. And I have to fight it every day. Every day. I'm literally fighting to stay awake every day and for what? I stay away from taking medications for it because they make me feel like a zombie. But this is becoming too much.",
        "Thoughts of death plague my mind. They always have and sometimes it's more incessant than others. And I know that something is wrong with me. That I am the problem. Not my parents or my therapist...me. In my head. I can't seem to stop it. Not remembering if I was happy before the accident kills me slowly. Was I different? Were things better?\n\nI'm staring out the window in the living room when my mother walks in.\n\nShe doesn't approach me so I look at her. Her gaze is worried.\n\n\"What?\" I ask.\n\nShe shakes her head and comes near me, cautiously.\n\n\"Why are you looking at me like that?\" I guard myself.\n\nShe sits next to me on the couch. \"It is just nice to have you around.\" Her smile wobbles.\n\n\"Mom?\"\n\nShe sniffles. \"Oh, I'm sorry. I'm really trying.\" She hugs me tight.\n\n\"What's wrong?\" I rub her back. I must be in a parallel universe. One where my parents cry a lot without explaining why. It's unnerving.\n\nShe pulls back and huffs out a breath. \"You have this look on your face.\" She shrugs.\n\n\"What look?\" I want to hide.\n\n\"The same look you had before you moved out. Like you couldn't get out of here fast enough.\" She cries again.\n\n\"I'm not going anywhere.\" I assure her.\n\nI don't want to be the cause of any bad feelings. I don't want to make my parents cry. I don't want her to think I'm unhappy. I don't want to burden her with these depressing thoughts. No one else should have to live with them. I'm not ecstatic to still be here, but I'm also not unhappy. I think.\n\nIt's hard to know how I fared on my own but I can't imagine it being any worse than this.\n\n\"Do you know if we have some ibuprofen in the house? I am having really bad cramps.\" I grimace when I get another one.\n\n\"Oh, are they really bad again?\" She gets up and asks Rosa to get me some pills.\n\n\"You mean this is normal?\" I want to groan. My cramps were never that bad growing up. Regular pain for the first two days and then more of an inconvenience for the rest of my cycle has been the norm. I would imagine that my body would get used to this pain by now but it is unfamiliar to me. Even if my body did go through this every month in the past, my brain is taking it in as if it were a new thing. More shit to fuck with my head. I groan again.\n\n\"I don't know what changed but you started getting really bad cramps during college. They come and go, you had it figured out after meeting...\" She hesitates but then continues, \"You tried birth control for a while but didn't like the side effects.\" She gets a bottle of water from Rosa and gives it to me along with some pills.\n\nI don't push her to finish her initial sentence. I'm tired of being in the dark and having my parents blatantly lie for whatever reason they think they should.\n\n\"There's also the fact that I don't need to worry about getting knocked up.\" I take a sip of water, trying to lighten the mood.\n\nShe smirks. \"Your father did have an easy time getting used to his daughter being gay knowing that he would be the only man in your life.\"\n\nI laugh and then groan when I get another cramp. \"I'm going to rest for a while.\"\n\nShe gives me a hug and looks up at me. \"Just talk to me, when you're feeling like that.\"\n\nLike what? I don't ask.\n\n~~~~\n\n{Camryn}\n\nEmma and I see much more of each other in the upcoming weeks.\n\nI wait until at least the third week of us knowing each other to address one of the many elephants in the room.\n\nBy this time, we have spent a lot of time in each other's presence. She has allowed me to take her out to the movies, dinner, gallery shows, and even the beach. She enjoys my company as much as I enjoy hers. I wish we could spend all day together but I count my blessings with any time she gives me and make sure to keep her entertained.\n\n\"I want to cook for you tonight.\" I open the door to my studio and allow her to go in first.\n\nShe has been here twice and we usually order in.\n\n\"I'm not really hungry.\" She removes her shoes and walks to the gray couch.\n\nShe's wearing a black t-shirt with dark blue leggings.\n\n\"I make a mean mac and cheese.\" My tone is playful but I give her a look.\n\nShe stares without saying another word.\n\nFinding the power balance between us has been as easy as breathing. She is a natural submissive. I get a thrill when she lets me take the lead on most things and doesn't question my decisions. Her trust is as endearing as it is nerve-wracking. I had to earn it and I don't want to lose it. Every now and then she will refuse to try something or force me to persuade her into doing something else but it has never gotten bad. That is before tonight. Pushback is to be expected. I mentally prepared for this.\n\nWhat led to me pushing this up on the list of things to tackle with her, is how bad her period cramps seem to be. Last week she barely got out of bed because of the pain and it was hard not to react. I didn't mind spending time indoors but I could tell she was hiding just how bad it was hurting her. I'm not a doctor and I don't claim to have all of the answers but I know her body is not getting all of the nutrition it needs. She eats less than a mouse and I can't keep letting her get away with it. Not while we're together.\n\nI go into the kitchen and take out a pot, rolls of cheese, pasta, and everything in between. My mac and cheese is nothing special. But it will be. I don't hear a sound coming from the living room and worry that she could decide to leave at any moment. I try to cook as fast as I can, feeling an imaginary timer going off in the distance. Of course, waiting for the water to boil is the toughest part. I try not to watch it.\n\nOnce everything is done, I set up the table, ignoring her as she watches me from the couch. She hasn't moved an inch.\n\nI serve our bowls and motion for her to join me.\n\nShe shakes her head.\n\nShe doesn't look playful. She actually looks like she's going to be sick.\n\n\"Please join me, Emma.\" The request is laced with a warning.\n\nI hate to admit it, but I get a tingle in my stomach at the thought of what is to come next. Besides our one kiss in the park, we have kept everything between us platonic. We act more like friends than anything. Not that I mind in the least. She has been the only one in my mind and I will go at whatever pace she sets. But the thought of bending her over this table and fucking her into submission makes me horny. All with her consent, of course. I will not lay a finger on her without making sure she wants it as much as I do. We have to be on the same page in the bedroom as we are out of it.\n\n\"I'm not hungry.\" She lifts her chin slightly.\n\nI push my chair back, the wooden legs scrape against the cold ground, and she jumps. Seeing her reaction stops me from getting up. I don't want to scare her.\n\nI pat my leg instead. \"Sit here.\" I try to ease her nerves with a softer tone.\n\nI mentally count and make it to ten before she gets up and sits on my lap. I open my legs and make her sit on my left thigh, so that she can face me. I wrap my left arm around her small waist and grip her thigh. She shakes in anticipation. My lips move into a spot right behind her ear. I kiss her lightly and feel her shift on my thigh. Her pussy pulses against my leg and I lick her in appreciation. I'm practically purring into her neck. I'm hungry now, and not for this food.\n\n\"I'm going to feed you this bowl and you're going to be a good girl and eat every last bite.\" I graze my teeth down the length of her neck. \"If you don't, you might as well forget about this. About us.\" I will not stick around to see her disappear before my eyes. I have come to terms with it. If she refuses to eat, I will take her back to her place and ask Evelyn to contact her parents and tell them everything. If I can't help her, then she needs someone who can. I've taken it upon myself to be anything she needs me to be, but I need help from her too. She needs to want this too.\n\nI pull back and look into her green pools.\n\nThey water up immediately but I hold my ground. This is important to me. It is as serious as life and death to her. Her hip bone digs into my forearm reminding me why I need to do this. It is something that I can help her with. I want to do this for her. I want to serve her in any way that I can.\n\n\"I want you to be here, to be alive when you're with me.\" I explain.\n\nShe nods and opens her mouth.\n\nI feed her through her sniffles and wipe her eyes when I have to.\n\nThat tender moment brings us closer than I could have imaged. Her mouth never closes for me and I feed her until she finishes her bowl. I feel connected to her on a level that I did not think would be possible in such early stages of our relationship.\n\nShe turns to the other bowl after finishing hers and feeds me my dinner while I happily take every bite.\n\n~~~~\n\n{Emma}\n\nI control my breathing and place my hands above my head.\n\nThe tennis racket feels heavy in my hand. It has been too long. Charlene walks around the net and comes to shake my hand.\n\n\"Not so bad for someone who hasn't played in years.\" She is an older woman, with a great body, who taught me tennis in high school. Now she's retired and comes to the country club when her husband is out of town.\n\n\"I need to get back to the gym. You wiped the floor with me.\" I breathe out with more ease.\n\n\"Just give me a ring when you want to play and I'll meet you here.\" She shakes my hand one more time and leaves.\n\nI left my phone in the car, so I have nothing left to do but catch my breath. Not like anyone important will call me. I only have my parents' numbers saved. Not even my friend/roommates'. Who is probably not really a friend anymore since she hasn't called once since I've been out of the hospital. Did she move out of our apartment? Hasn't she wondered where I have been? At this point I'm finding it hard to believe we ever even lived together. Is she just a figment of my imagination? Does amnesia work that way? Create new memories to replace the old ones?\n\nIf so, I'm fucked.\n\n\"Emma?\" I see a girl walking towards me. She's wearing a short white skirt and a pink polo. She also has a racket in hand. Her light brown hair is up in a ponytail. She's a few inches taller than me.\n\nHer face looks familiar.\n\nI take her hand and smile. \"Hi.\"\n\nShe blushes. \"Oh, come on. We can be more friendly than that.\"\n\nI blush too and twist the racket in my hand. \"I don't know if you heard but I was in an accident recently.\" This is that awkward part about being back here. People have heard stories but they want to hear it from the horse's mouth. I'm reluctant to feed their curiosity but it is hard not to do it when I don't remember some of them.\n\n\"Oh, wait, that really happened?\" She turns even more red and brushes her ponytail aside. \"I'm sorry. This is so embarrassing. Please forgive me.\" She brings her thumbnail to her lip as a nervous gesture.\n\nThat image resonates with me and a name pops into my head. \"Heather?\"\n\nShe smiles brightly and nods her head. \"You had me worried there for a second. I thought you forgot all about me.\"\n\n\"Well, the memories are spotty but I do remember you.\" Well, enough to remember a name. I'm happy with that.\n\nShe turns to see a guy walking up to us and reaches out to shake my hand again. \"That's my tennis partner. Can I give you a call soon, maybe we can catch up and I can refresh your memory?\"\n\nI nod and give her my new number.\n\n\"Bye, Heather.\"\n\n\"Bye, Emma.\" She walks away and I watch as her skirt sways side to side.\n\n~~~~\n\n{Camryn}\n\nEmma has gotten more comfortable eating larger portions around me.\n\nWhenever we eat at her place or mine, she readily takes a seat on my lap and allows me to feed her. We sometimes just talk or watch T.V. as we do this, making it a favorite routine of ours. Because I am allowing her to set the pace, we haven't kissed or done anything other than hold hands in the last three months since we met. I want to kiss her. All of the time. I want to taste her lips again and make her feel good. But I don't want to scare her or ruin what we have. I already know that once we get past that threshold there will be nothing to hold me back.\n\nI see a change in her as the weeks pass.\n\nHer cheeks are rosier, her body fills out her dresses differently than before, and her attitude changes for the better. Not that I have minded having a moody girlfriend.\n\nGirlfriend? I wish. But that has yet to have been established.\n\nThe only times she does not sit on my lap as we eat is when her roommate is around or when we are out in public. She says the embarrassment would be too much, which I try to respect and understand.\n\nOn a random hot afternoon, I take us to the same ice cream shop we went to after our first interaction. Some weeks we see more of each other than others. Those weeks when I see less of her, I worry things will go back to how they were but she surprises me by staying the same. She's not overtly affectionate or always says what is on her mine, but I see a warmth in her eyes when she sees me after some time. It is a delicious feeling. Which is why, after not seeing her for 6 days straight, I decide to treat us to something sweet.\n\nShe fidgets in line as we look at the different flavors and I know she is probably remembering the first time I brought her here. When I barely knew anything about her and why she was on the bridge that day. I can't say I even know the true answer now, but we are at a completely different point in our relationship than we were that day. She chooses a strawberry scoop and I go for vanilla this time. I want her to be as close as possible, so I guide her to the nearby park bench and make her sit on my lap.\n\nShe tries to pull away but I hang on tight.\n\n\"I don't like doing this in public.\" She looks around and her cheeks turn bright.\n\nHer pussy pulses against my thigh and I lick my ice cream instead of kissing her soundly. With each flutter from her pussy, I find it harder and harder to control my thoughts.\n\n\"Don't worry, no one is going to stare at us. They see lesbians on dates all the time.\" Maybe that will put her at ease.\n\nShe shifts and tries to pull away again. Her breathing is more labored than I first noticed.\n\n\"What's wrong?\" I'm now more concerned. Am I ruining the moment? Maybe this is too much for her and I'm being insensitive.\n\nShe briefly looks at me. \"I want...\" Her eyes drop to my mouth.\n\nI wait but she looks away again, it's frustrating.\n\n\"What do you want, Emma?\" I lean in closer, getting a whiff of her ocean breeze perfume.\n\n\"I'm hot.\" She explains.\n\n\"So, eat your ice cream.\" My stomach tightens as she licks her lips. If I'm reading her body language correctly, I want what she wants too. I need to hear you say it. Please say it, sweetheart.\n\n\"Sitting on your lap...\" She is at a loss for words.\n\nMy tongue sticks out and I dip it into her strawberry ice cream. I picture getting to taste her sweet folds and hum in appreciation.\n\nHer eyes widen.\n\n\"Would you like to go back to my apartment?\" This is it.\n\nShe nods hurriedly.\n\nWe move like we're being chased. The people on the street either move out of the way or get moved as I pull her along. She lets me drag her into my building. We wait for the elevator and in no time we're in my studio. She lets me take every inch of clothing off of her in my living room. Her small breasts beg for my lips. She wraps her arms around her lower stomach and I see a small dark, blonde bush between her legs. She looks nervous and embarrassed.\n\nI remove my shoes, black shirt and jeans. I can't tear my eyes away from her.\n\nOnce I'm completely naked, I pull her down on my plush white rug. I position her body in front of my couch.\n\n\"Put your elbows here.\" I make her kneel on the carpet and cross her arms so she's leaning the upper half of her body on the couch. I run a hand down her back, following the ridges of her spine on the way down. I kneel behind her, one leg on the outside of her left leg and the other in between her legs. I pull her ass firmly against my hips, my pussy brushes the back of her thigh. I move her hair aside and whisper into her ear.\n\n\"You let me know if it's too much.\" I kiss her neck. \"Just say the word.\"\n\nShe nods.\n\nVery tenderly, I wrap my hand around her hair. Her eyes flutter close. I move back slightly, positioning myself for my next move.\n\nWithout warning I yank her hair back and she yelps. Her back arches beautifully, causing her pink pussy to peak out from behind. Her elbows stay on the couch. Good girl. My excitement grows.\n\nGiving her a moment to recover, my free hand explores her firm ass. I give it a light slap, letting her decide if this is too much. I slap a couple of more times, alternating between each cheek, watching as her fair skin turns a beautiful pink after each contact. Her breathing becomes shallower but she doesn't say anything. My juices trail down my inner thigh until it lands on the back of her calf.\n\nI pull her head back further and her hands move off of the couch.\n\nI quickly put them back to their old position on the couch and lightly slap one of her breasts. It jiggles in a mouthwatering way. \"Leave them there.\" I warn. My voice is thick with desire.\n\nShe moans when I slap her breast again. I slap again and again and move to the other perfectly untouched beast, with my other hand, while still hanging onto her hair. The slaps are light, mostly pushing her breasts to watch them bounce. Her hips roll as her moans get louder. I see the glistening wetness dripping from of her pussy. Her breasts turn a delightful pink and I groan.\n\nWithout hesitation, I stick two fingers into her warm pussy, causing her to cry out in relief. I pump my fingers in and out of her wet pussy, hearing the gushing noises coming from between us. I pump at a quicker pace and twist my hand so my thumb rubs against her clit. It's not long before I watch as she cum all over my hand. Her hips ride my fingers through her orgasm, while I enjoy the grunt coming from her lips. I can see her body starting to relax and decide to push her just a little bit more. I move my forearm to her back and make her upper body lean further into the couch. Her breasts are pressed against the gray cushions. I move my fingers around and hook them until I find her g-spot and pump at a faster rate.\n\nShe begins to thrash against me and moans even louder than before. I try to listen for any words or noises that she is not enjoying this, but her hips keep grinding against my fingers. In a beautiful turn of events, I feel another pressure building within her and all she can do is moan into the couch as her pussy clenches and unclenches around my fingers, trying to find another release. She's cumming again! It catches us both by surprise when she squirts all over my hand, my leg, and my rug. Oh fuck, she's so fucking hot! Watching her lose all control and scream in release is incredible. How did I get so fucking lucky? I let her ride her second orgasm out and only pull her back against me when she closes her thighs against my hand.\n\nI lay back against the carpet and pull her on top so that we are both facing the ceiling. Her back against my front.\n\n\"Are you okay?\" I kiss her sweaty forehead.\n\nShe nods and turns her face to kiss me deeply.\n\n\"I am perfect.\" She whispers against my lips. \"I've never had that happen before.\"\n\nWe lay in silence for what feels like hours, enjoying the feeling of bliss. If I had any doubt that she would not fit in with my sexual lifestyle, it has all gone out the window now. She behaved amazingly. The perfect little submissive. I briefly wonder if there is an angel out there who I should be thanking. And then I sigh and decide to bring up another one of those many big, colorful elephants in the room that have been nagging me ever since I first bent her over. Just when I think there is no more room for elephants another one appears. She must be summoning them to test me.",
        "\"Why do you do it?\" I reach down to brush the scars on her thigh.\n\nShe stops breathing for five beats. \"To feel something.\" She whispers.\n\nI run my thumb against one particular scar. \"Do you feel anything when we're together?\" I have to know if what I'm doing is affecting her for the better. I have to. Otherwise, I don't know what else to do. I don't know how else to help her.\n\nShe turns to look at me and nods. \"I feel everything when I'm with you.\"\n\nWe sit in silence, me trying to figure out if this is real and her trying to assure me that it is.\n\n\"You can't do that again.\" It should go without saying that I don't expect any argument on her part.\n\nShe is silent.\n\n\"You have to love and treat your body with the respect that it deserves.\" With all of the love that I want to give it. I want to tell her that but I don't want to involve my emotions in this. This is for her. All about her.\n\n\"Katy wants to take you to some workout class she teaches on the side.\" I rub her arms and smile. \"You could use the cardio now that I'm going to be fucking you into oblivion.\"\n\nKaty has been trying to get to know Emma better. Since she is the closest thing I have to a friend, she wants to make sure Emma is the right girl for me. If only she knew just how right she is for me. How perfect she is.\n\nHer cheeks turn bright but she nods.\n\n\"Good girl.\" I kiss her deeply, spreading her out over the juices she sprayed all over my rug.\n\n~~~~\n\n{Emma}\n\nOn a particularly boring Friday night I decide to get out of the house.\n\nHeather hasn't called in three days and I don't know how much longer I can take being here. Yes, I love my parents and spending time with them is nice but I want to go back to my own space. And yet, I don't know what I will do once I'm there, on my own. I basically quit my last job without even knowing, courtesy of my parents, so it is not like I have something to go back to.\n\nI ask the driver to take me to my old apartment. It is two hours away from my parent's home. By the time I get there I will be tired enough to go to sleep and have to spend the night. I ask him to drive himself back today and I will call my parents tonight before they worry. He doesn't look too happy to be doing this but doesn't really have a choice.\n\nThe contrast between the suburbs and the city is mesmerizing.\n\nMy body hums as soon as I see the lights from a mile away. I'm submerged into the city life. The skyline, the smells, the people. This feels more like me. My leg bounces up and down in anticipation as we pull into a traffic lane. I see myself running across the bridge during my morning exercise. There is my favorite record store, I open the window and breathe in the aroma of hot dogs from the stand next to us. Memories are slowly coming back. I should have done this weeks ago. Of course, I wasn't going to remember my life after moving out if I just stayed with my parents. This is necessary, this will help me get more answers.\n\n\"I can get out here.\" I inform him.\n\n\"I should drive you all the way to your apartment.\" He insists. He is afraid I won't be able to find it. He's dreading what my parents will do when they find out what I did.\n\n\"I'm letting them know I came back to my place for the weekend. I have the address.\" I assure him as I take my phone out and shoot my mom a quick text. I turn my phone off right after sending it and hop out of the car at the next light.\n\nThere are signs, flashing lights, big screens, music, and laughter. It is sensory overload compared to the stillness I have been living in for the past couple of months.\n\n\"Hey lady, can you move?\" Two guys holding a couch try to get past me.\n\nI move out of the way and apologize.\n\nMy feet lead the way. My brain is catching up with all that is going on around me. My heart beats in synch with the drumming sound coming from the underground train. There is a guy playing on a plastic bucket, with a smile on his face. I give him some change and keep walking.\n\nI know that my apartment is four blocks north. But my feet turn left at the next light instead of going straight. I know where I'm going. I don't know why. Maybe a night out will do me some good. Put some color on my cheeks or whatever my mom said. An art gallery doesn't sound as appealing as a movie or a nice bar but I walk with a purpose. Maybe I really like this gallery. Each step accelerates my heart beat and I enjoy the feeling.\n\nI slow my pace when I see the line to get into the gallery.\n\nIt must be a top list artist.\n\nMaybe I should just go to a bar instead. I walk to the back of the line and look around as I wait for it to move.\n\nPeople talk about the peculiar artist, the emotionally moving art pieces in this new show. I bounce on the balls of my feet, looking for something else. Anything else that I can do for the rest of the night. Surely, I can find something better than spend the night staring at paintings. My feet stay glued to the sidewalk. I may as well be that green chewed up gum that has become one with the crack in the cement. I kick it with my foot, it's really struck there.\n\nThe line moves at a slow pace and just when I am about to leave, I am the next one up.\n\nI follow the flow of bodies that start moving towards the right, into an open room.\n\nThe walls are white, the ceiling is made up of old, red, worn out bricks, and the paintings are dark. I practically glide against the smooth, cold, hard floor as I move from one painting to the next. I look around to make sure my jeans and black blouse are not too casual. The audience is a mixture of high class, snooty critics and interesting characters dressed to make a statement.\n\nI move through each room, feeling more and more alone. Each painting has a dark element that leaves me floored. I am not an art critic. I don't know anything about perfect lighting or the right shades. I can't even recognize what is armature and what is considered gold but with these paintings I feel a lot. I am moved and pulled in a different direction if I stare at one for too long. I resonate with the woman in each painting. Despair, anger, hurt, loneliness. God...this is hitting a little too close to home.\n\nOnce I make it to the main room, I place a hand over my chest as I stare at the center piece that has a big audience surrounding it. I move further and further in to get a front row look. The artist is there. Explaining her inspiration.\n\nShe's wearing a black suit. Everything is black. Her shirt, shoes, hair, eyeliner. Eyes. She looks like she is all skin and bones. There is not an ounce of fat on her. Her eyes are sunken in, and she looks...tortured. A tortured artist, how fitting. I stare at her full lips and feel a familiar sensation in my stomach. It has been so long since I have thought about sex. And although she looks delicate, her paintings show she is capable of taking in a great deal of emotions and making masterpieces. She must be good with her hands.\n\nHer eyes meet mine and she stops talking.\n\nI look behind me to see who she is looking at but others turn to look at me too. My cheeks instantly burn bright and I look at my feet.\n\nShe recovers and finishes her speech. I peek up to see her bowing and asking everyone to enjoy her show.\n\nShe comes directly to me and looks upset.\n\n\"What are you doing here?\" Her voice is low.\n\n\"I'm sorry?\" My heartbeat rings in my ears. I try to go through each memory, every thought, anything that can help me remember this person, this face, those lips.\n\n\"What the fuck are you doing here?\" She grabs me by my arm and leads me towards the back of the gallery. People stare and give us looks but she doesn't care.\n\nShe throws me into an office and slams the door shut behind us.\n\n\"Did you come to gloat, Emma?\" Her cheeks are burning and she is glaring at me.\n\nI move away from her, towards the middle of the room. There is a large desk, sofas, paintings but I can't focus on anything else but her eyes. I should be shaking in my boots, terrified that this stranger is looking at me like that but I don't feel scared. I feel hot. I lick my lips.\n\n\"I'm sorry, I think you have the wrong person.\" I move back when she tries to get closer.\n\n\"Are you laughing at me?\" She scoffs. There is a hint of madness in her eyes.\n\nI shake my head. She gets close again and this time I force myself to not shy away. I against every instinct in my body and allow her to get close to me. I stare at her and breathe in through my nose. I brace myself for whatever she is about to do.\n\nShe pulls me in and kisses me. This kiss... is everything. Too much really. Her lips are soft and warm, completely at odds with her harsh words. Inviting, in the most sensual way. I moan into her mouth, allowing her to hold the back of my head as her tongue explores my mouth. Her other hand snakes around my waist and I lean further into her warmth. She punishes me with her tongue, taking all of her anger out on me. I welcome it, allowing my tongue to dance with hers. With open arms and a bated breath, I let her do what she wants to me because this is the most alive I have felt in months.\n\nJust by this kiss.\n\nShe pulls back too soon and looks at me with renewed anger.\n\n\"Is this why you came? To prove to yourself that you still have a hold over me?\" She grabs my hand and forces it on her chest. I feel her heartbeat stutter under my palm. \"To remind me that my heart is yours? That I am yours?\"\n\n\"I-\" My voice breaks and I feel my tears on the brim. What is happening?\n\n\"Damn you!\" She kisses me again and I let my tears fall. I kiss her back with more urgency, begging her to take away this emptiness that I feel in my soul. To soothe the ache in my heart. To defuse the heat between my legs.\n\nShe pulls away from me and I almost fall trying to follow her lips. Deep, unsettling sobs tear from my throat and I use both hands to cover my mouth. What is this? What do I do with all of these emotions? Why does it tear me up to see her hurt so much? How can I be responsible when I don't even know who she is?\n\n\"Don't cry, Emma.\" She drops her arms and reaches for me. I see the regret in her eyes. Gone is the anger, all I see is guilt.\n\n\"Stop!\" I move away and hold a hand out. \"Don't touch me.\" Because I don't know you, but obviously my body does. It's messing with my head. My does my head know which way to turn when we kiss, or that she loves when my hands dig into her hair?\n\n\"I'm sorry. Please, don't cry. Baby, I'm so sorry.\" She doesn't try to touch me again.\n\nThe word of endearment catches me off guard. \"Who are you?\" I dig my hands into my hair. Am I going crazy? My forefinger rubs against the scar on my head.\n\nShe looks upset but I see the confusion peak through. \"It's me. Camryn.\"\n\nCamryn Lara. Famous artist, 28 years old, born and raised here. That rings a bell. But just the artist part. Not whatever else this is. Was she someone important to me? How is that possible if I haven't heard from her in over three months? My parents never mentioned her.\n\n\"What am I to you, Camryn?\" My tears haven't stopped. I furiously wipe at them, trying to control my emotions.\n\n\"What?\" She is concerned now. No more anger or guilt or hunger in her eyes. Just pure confusion.\n\n\"I was in an accident, did you know?\" Where were you? I can't ask that though. I can't ask some random stranger why they weren't there in my time of need. She is just that. A stranger.\n\nShe crosses her arms. \"Yes, I called every hospital in this city and every other city nearby when I didn't hear from you the next day.\"\n\nShe was the last person to see me? \"The next day? What do you mean, what happened?\"\n\n\"Your father forced me to leave when I finally found you.\"\n\nI remember the person calling me, yelling for me in the hospital, it was her. \"I mean, what happened the day before. Were we together?\" If she has the answers, I need to know. I need to know what happened. How I ended up at the hospital. And why my parents did not let her see me. I also want to get away. To run in the other direction. She scares me. She makes me feel different.\n\nShe motions to the couch but I shake my head. \"What happened to you? Why can't you remember anything? Are all of your memories gone?\" She looks concerned and guilty again. I prefer her anger.\n\nI shake my head. \"I can't remember some things, big chunks of time. I don't remember what happened in the accident or what happened before. Or you. I can only remember my life until I moved out of my parent's place.\"\n\nShe runs a hand through her hair and turns away from me. There is pain in her voice. \"Fuck!\" She goes to the desk and pushes everything off it. \"Oh, God. What did I do?\" She pushes a chair away and slams her hands against her desk.\n\n\"Stop!\" I move towards the door. I don't feel comfortable being here alone with her. Not for fear of being hurt, but for something much more unnerving. My lips are tingling. I want to hug her and make her suffering stop. How sick is that? What is wrong with me?\n\n\"I'm sorry.\" She rushes to me and I lean away from her. She has me trapped against the door with her body. \"Baby, I'm sorry.\"\n\n\"What happened?\" I grind through my teeth. Being so close to her is clouding my judgement. I smell the cologne on her. I taste her lips all over again. Her warmth draws me in. It is all so familiar and foreign at the same time. My heart races just by being near her.\n\n\"Emma, we need to talk about this somewhere else. On a more neutral ground. I really fucked up.\" She tries to cup my face but I move away. She sighs. \"Please, let me take you out to lunch tomorrow. We can talk about everything.\"\n\nI shake my head. \"Tell me now or I'm leaving.\"\n\n\"Please don't, I just got you back.\" She looks desperate.\n\n'You don't have me. I'm not yours.\" I correct her. The fear of losing myself in her dark pools make me push her off. \"You stay away from me.\" I open the door and rush out of the room. I hear her yell my name but ignore her and everyone else staring at me as I rush out of the gallery.\n\n~~~~\n\n{Camryn}\n\n\"Are you feeling blue today?\" I shift my gaze to the half-naked girl on my couch.\n\nEmma leans up and stretches her arms over her head. Her breasts rise up and down with each breath. They can be very hypnotizing.\n\nI move back to my painting and brush a few more strokes on the canvas.\n\nWe're in my rented art studio. There are a ton of paintings all over the walls, on the floor, in cabinets. But nothing that I find worthy of being in my next show. The painting I'm currently working on has potential, I just need to keep my head in the game.\n\nMy biggest distraction crawls on the cold floor until she is kneeling in front of me.\n\nThree weeks of us fucking like bunnies and I still get butterflies when she looks at me with that intense hunger. Few emotions reflect from those green eyes of hers, but when they do, it is magnificent. Something I have been fortunate to see develop with our time together.\n\n\"May I make you feel good?\" She leans in and pushes her nose in between my legs. I'm only wearing my underwear and a white button up that is currently unbuttoned. We would make a beautiful painting.\n\n\"Don't ignore my question.\" I use the other end of my brush to motion for her to look up at me.\n\nHer eyes are hungry. But she had a look on the couch that I have seen a few times. Not as much as before, but it still comes around when she has too much time to overthink. She floats away and I have to catch her before she leaves me completely.\n\n\"This is too good to be true.\" She doesn't hesitate as much to speak her mind like she did before either.\n\nEarning her trust has given me that. I get her unfiltered thoughts. I have been there when she needs me and give her space when she wants it. I have yet to let her down or say something to hurt her. In the bedroom she looks forward to letting go, forgetting everything, and allowing me to make her feel good. She has said so herself. I feel privileged.\n\n\"Have you finally realized you're too good for me?\" I sigh. It was bound to happen.\n\nShe smirks. I savor the warm feeling blossoming in my chest.\n\n\"I think it is the other way around.\" She patiently waits on her knees for my signal.\n\n\"You saved me, you know?\" I open up to her. Feeling vulnerable is not a feeling I seek out, but with Emma I know my heart is safe. \"If I never met you, I would be a walking zombie.\"\n\n\"I have never felt this alive.\" She simply states.\n\nI let her remove my underwear and lick me until I cum.\n\n~~~~\n\n{Emma}\n\nI manage to make it to my apartment fifteen minutes after leaving the gallery.\n\nI explain my situation to the front desk employee who verifies my identity and gives me a spare key. I couldn't get my apartment key from my mom lest she found out what I was up to. The building is on the higher-end side of the city. Everything is impeccable, not one speck of dust. The colors in the lobby are light blues and vanilla cream. I glance down at the marble floor before taking the elevator up to my apartment.\n\nThe lights are off. My hand automatically reaches up to flick the switch. I remember the space. The white carpet contrasts against the dark furniture and black curtains. There is a large T.V. hanging on the wall in front of a glass coffee table. There are paintings on the wall. Very similar to the ones I saw tonight. I shy away from them, afraid of who might have painted them.\n\nNo one else is here. Where is this friend I keep thinking about? Maybe my mind is playing tricks on me and she never existed. But my parents did say I had a roommate. Evelyn. Hispanic girl, same age, a friend. We met in college and moved in together once we both got jobs in the city.\n\nI go to her room and see it is still furnished but it looks more like a guest room than someone's room. There are no pictures or any personal belongings. Nothing in the drawers or the closet. I leave it, trying not to overthink any more than I have to tonight.\n\nI think about grabbing something to eat before going to bed, but I'm not hungry.\n\nMy stomach is full of butterflies.\n\nI touch my lips lightly. Camryn. What an intense woman. The fire that she carries burned every inch of my skin. Every corner of my psyche. She marked me and yet, I can't keep letting her thoughts overwhelm mine.\n\nNot when I am already missing pieces of it.\n\n~~~~\n\n{Camryn}\n\nI decide to visit Emma after work one evening.\n\nIn hindsight I should have called her and told her I was coming over but I wanted to surprise her with some carryout.\n\nInstead, Evelyn opens the door in nothing but a white towel covering her up. Her dark hair glistens under the light. There are water droplets on her tan skin. She's any girl's wet dream.\n\n\"Hi Camryn, Emma said she was going to grab some drinks with some of our coworkers so she's not in yet. You're more than welcome to wait if you want.\" Her eyes are bright and her smile is a tad too friendly for me.\n\nIn the past I have kept my conversations with Evelyn to a minimum.\n\nShe hasn't done anything per say, but her flirty personality makes me uncomfortable. Emma knows there is some tension between us but I assured her it was all good on my end. I personally don't want to be friends with Evelyn. I am very happy with Emma and nothing will ruin that.\n\n\"All good, I think I'll come back when she does.\" I turn but she calls my name.\n\n\"Actually, now that you're here, I could really use your help moving my bed frame if you don't mind?\" She opens the door to make room for me.\n\nI look down at my watch and make some dumb excuse about forgetting a work thing. She doesn't buy it but I don't care. I leave the building as quickly as humanly possible and try to forget the whole ordeal. I could be reading into it but I would rather be cautious than trusting. And even if I wasn't rude with her, I hope she got the hint.\n\nThat night I debate on being honest with Emma.",
        "Evelyn is not a good person. At least not a good roommate. She knows we're together and yet acts inappropriately when Emma is not around. Unfortunately, Emma is in a mood and ends up crying herself to sleep. She tells me about the tough day that she had at work and how the people she ended up getting drinks with didn't make her night any better. She didn't give me many details but I got the point. I would kick all of their asses if I could but I know she just wants to forget about it. I leave my conversation about Evelyn alone for the time being.\n\nInstead, I focus on making her feel as best as I can as she cuddles against me.\n\n~~~~\n\n{Emma}\n\nI'm hiding behind an old green sedan.\n\nThere is someone chasing me. Calling me. I don't recognize the voice.\n\nThere is no light around to mark my path. I stay rooted, afraid that I will trip and fall over what I cannot see. The voice gets closer. There is fog creeping in from under the car. A hand slams on the side of the car.\n\nI jump awake.\n\nI gasp for air. I have thoroughly sweated through my night shirt. I kicked the blanket off myself sometime overnight but I am still too hot. I reach out next to me. For someone. Not sure why. I know I'm here alone.\n\nThe dream leaves me feeling uneasy for the rest of the morning.\n\nI manage to eat a piece of toast and drink a sip of orange juice. My reflection on the toaster is haunting. There are dark circles under my eyes. I look ill. I don't feel ill. But I also don't feel like myself. However, that is supposed to feel. Memories is what makes a person feel like themselves. Know who they are and what they stand for. I don't have shit to go off of. It's frustrating.\n\nAfter cleaning up around my apartment, I do what I have been avoiding all morning. My phone has 37 missed calls. All but one from my parents. Heather called once. My thumb lingers over her name.\n\nThe phone begins to vibrate, it's my mom.\n\n\"Hello?\" My hands ball into fists, ready to be reprimanded.\n\n\"Oh, thank God. Emma! What do you think you're doing? Do you know how worried we have been?\" Her voice breaks. \"All I pictured was you in some hospital on a death bed-\"\n\n\"I'm sorry. I-\" My leg is bouncing up and down. I'm gnawing on my bottom lip.\n\n\"Just come back home.\" She whispers to my father that I am okay.\n\nI remember Camryn telling me about my parents forcing her to leave the hospital. There is a lot I don't know yet. They won't tell me anything. Now, I have someone that has answers and is are willing to talk to me. How can I get in contact with her?\n\n\"Not yet. I have some things to take care of.\" I make my way to my room, there is a t-shirt and some shorts on the bed. Should I be wearing shorts? I run my hand over the small scars on my thigh.\n\n\"Honey, we can help you with whatever you need.\" She's worried.\n\n\"I need to do this alone.\" My voice is small.\n\nI am met with silence.\n\n\"I will call you if I need you.\" I hope this will satisfy her.\n\n\"Just be careful. And answer if I call.\" Her voice is strained.\n\n\"Yes.\" I say my goodbyes and walk to the shower. I turn on the water and avoid my reflection in the mirror. Taking off my night shirt and underwear, I pull the curtain back. When I get in the water is still cold and I instinctively jump back. A short memory quickly pops into my head.\n\nCamryn telling me to get in the shower, assuring me the water is fine. I hop in the shower only to feel the cold droplets hit my back. I jump into her arms yelling because of the coldness but she presses her lips into mine, swallowing my surprised squeals. Glad that I'm rubbing my body against hers to get away from the water. My body heats up immediately, the cold water forgotten.\n\nI snap back to the present and turn the water off.\n\nI tingle all over. The memory feels recent. Fresh. Daunting. She has been here. My body yearns for her touch. I turn on the water again, ignoring the heat between my legs.\n\nI fear the next memory that will take over my mind when it comes to her.\n\n~~~~\n\n{Camryn}\n\nEmma is in one of her moods today.\n\nIn the past, I have let her throw her little tantrums and then we talk about why she is upset or feeling the way she is so that she can pinpoint what made her feel that way and we can work on getting through it. Sometimes it takes her hours to feel better or we find it hard to get to the root of the problem but it has never been something we couldn't work through. Her work out sessions with Katy have also been an immense help and I see her confidence growing. She is coming to life before my eyes and I love every minute of it.\n\nRight now, though, she is putting me through it.\n\nAll day today she has been raising all of the walls around her until I have been left on the outside fending for myself. It has yet to have been this difficult getting through to her. I'm feeling out of my depth.\n\n\"Stop being a brat and come to eat.\" I point to my lap again.\n\nWe are in my apartment tonight, as we are most Friday nights.\n\nOur routine schedule rarely strays from what we have been doing the last couple of months. We spend more and more time together and I get to see different sides of Emma as the time passes. She gets to see my crazier, artistic side as well. So far, we have been able to overcome a lot of our differences and have a common ground to talk about our problems but today has been testing my patience. She has been fighting me at every end and I am surprised at what a pain in the ass she is being. I don't think I've ever seen her this way.\n\n\"I'm not hungry.\" She enunciates each word as if I'm hard of hearing.\n\n\"Emma, if you don't get your ass over here in five seconds you are going to regret it.\" I put my fork down.\n\nShe knows this is important to me and she's using it as a last hail Mary to push my boundaries. It is working and she doesn't realize how close I am to breaking.\n\nThe more seconds I count, the further into the couch she moves in.\n\nI get up and lift her over my shoulder. I carry her to my bed, tossing her face down.\n\n\"You asshole!\" She yells into the comforter.\n\nI smirk but pretend to be appalled. \"And you kiss your mother with that mouth?\"\n\nI yank her across my lap and flip her pastel peach skirt over her bare ass. I love when she wears skirts.\n\nSlap!\n\nShe struggles even more against me and the curses start pouring out of her mouth without a breath in between.\n\nEach slap is like music to my ears. My underwear soaks through and I wish I could fuck her into telling me what is wrong but she needs to learn just what type of relationship she signed up for. She wants to act like a child, I can punish her like one.\n\n\"Keep it up, Emma. It will only prolong this.\" I slap with a little more force to get my point across and she stops her cursing.\n\nBy the end she's sniffling and crying into my chest and I lean back into the pillows and pull her close.\n\nI kiss her forehead and run a soothing hand on her warm cheeks.\n\n\"What is, baby?\" I pull her hair back and wipe her tears.\n\nShe looks spent, better than how she looked earlier. She's not holding in whatever emotion had her in a tight bind.\n\n\"You're leaving.\" She begins to cry again and I'm taken aback.\n\n\"What are you talking about?\" I make her look at me,\n\n\"Katy said you're moving in a few months for this amazing opportunity across the country.\" She pushes her face into my neck and I rub her back.\n\nDamn Katy and her big mouth.\n\n\"Nothing is set and stone.\" That doesn't seem to help and she keeps crying.\n\n\"I'm not leaving you, Emma.\" I get up and grab her some tissues and rub some ointment on her tender cheeks. They look beautiful against the sunlight peeking in from the blinds.\n\n\"You're not leaving?\" She looks back as I keep rubbing more ointment than necessary on her ass. It's hard to keep my hands off her.\n\n\"I'm not leaving you.\" I repeat.\n\nThe opportunity I have been granted is bigger than I could have asked for but I don't plan on leaving without her.\n\nShe releases the breath she has been holding all day and climbs into my lap, quickly falling asleep in my arms.\n\n***\n\n\"You have to promise no one will ever see this.\" She looks back at me with nervous green eyes.\n\nI smirk and kiss her neck. \"It will stay in my room and since I never allow anyone in here, you can rest assured that it will be for my eyes only.\"\n\nI place her in front of me and pull her down so she sits in between my legs. There is a large white canvas in front of us, leaning against the wall. Emma is gloriously naked in front of me, while I am in my underwear and a tank top. I use the pastel watercolors I placed next to us and brush some long strokes on the canvas. Once I put the brush down, I use my legs to force Emma to open hers.\n\nI tug on her nipples and watch as her head leans back against me. I lightly flick them and roll them against my fingers. She's been ready since I told her what I wanted.\n\nOne hand trails down to the bush in between her legs. The other stays against her breast, causing the sore nub to turn harder. I push two fingers into her wet pussy and she moans into my neck. I press my lips against her temple, there is a light layer of sweat forming. I feel the heat radiate off her face, onto mine.\n\nThis won't take long. Her juices drip into my palm. I lean up a little more and start to finger fuck her until I feel the resistance building. My hand comes up to her neck and I lightly choke her. Her breathing intensifies and she begins to yell. I remove my fingers in time to see her squirt all over my painting. The blues and greens and pinks get pushed around the canvas by her juices until they drip down the painting.\n\nIt is a work of art, just like she is.\n\nI turn her face and give her a deep kiss of gratitude. When I pull back, I force her to look at the painting and watch as she looks at what she created\n\n\"Thank you.\" I kiss her neck. \"Thank you for being you. You are amazing.\"\n\nShe's everything I look for in a partner. Tender, sexy, caring, eager to please. I can only hope she allows me to show her how much I love her in my own ways. In the ways she deserves to be loved. Too many times I've seen insecurity and doubt in those sweet eyes, I just have to prove to her that her life is the most precious thing she could ever let me be a part of.\n\nI can't let her get in the way of her own happiness.\n\n~~~~\n\n{Emma}\n\nI make up my mind to go see her.\n\nShe might not be at the gallery but I can always leave my new phone number with the receptionist. Maybe talking over the phone is the best option anyways.\n\nI walk out of the revolving door into the street and stop in my tracks. She's standing next to a newspaper stand outside my building. She looks up and pushes her black sunglasses back, holding her hair away from her face. Her cheekbones are high, her dark eyes take me in. She looks beautiful in the daylight. Very hard to look away from. She's wearing all black again. Shirt, pants, shoes. She approaches me cautiously.\n\n\"Hi.\" She stops a few feet away.\n\n\"Hi.\" I place my phone in my back pocket.\n\nWe stare at each other as people walk by or into the apartment building, taxis honk in aggravation, and birds fly away. Yet there is no sound between us.\n\n\"Would you like to grab a bite to eat?\" She points towards downtown.\n\nI nod.\n\nThe walk is silent. I can tell she wants to touch my hand. A couple of times our hands brush but I pull back before she gets the wrong idea. I don't know this stranger. No matter what we shared in the past, this is the first, well, second time we meet. Images of our shower pop into my mind and I clear my throat.\n\n\"Have you been eating?\" She has her sunglasses down again. I can't see her eyes. She's probably scrutinizing me.\n\n\"Yes.\"\n\n\"Enough?\" She questions.\n\n\"Yes.\" I look away. Do I look thinner than before?\n\n\"How bad are the cramps?\"\n\nI look around to make sure people nearby didn't hear that. \"Fine.\"\n\n\"They get better when you eat.\" She points to a deli shop.\n\nI bite my tongue. I don't want to know how she knows that. I don't care. I just need to know what happened yesterday. What was she talking about? How did she screw things up? Did she have anything to do with the accident?\n\n\"We'll take two Rubens, one diet coke, and a sprite.\" She places her card on the counter.\n\n\"I don't like Rubens.\" I can't hide the annoyance in my voice.\n\nHer eyebrows shoot up, completely caught of guard, and apologizes. \"Please, order whatever you would like.\"\n\nThere is a line forming behind us and I chose the first thing I see, a chicken salad sub.\n\nI take my wallet out but she shoos my hand away. \"I got this.\"\n\nThere is a ghost of a smirk on her face, her soft lips barely moving. My annoyance builds but I ignore it.\n\nThere are no tables or seats in the shop, so we stand in silence. I sip on my diet coke and she opens her sprite.\n\nOnce our order is called, she takes it and leads me out front where there are some black tables. I sit across from her. It is hard to miss the disappointed look in her eyes. She places the food on the table and hands me my sub.\n\n\"Please eat at least half.\" The request sounds rehearsed. She even looks surprised to have said it.\n\nI give her a questioning look.\n\n\"Or, as much as you would like.\" She takes a sip of her soda. \"No pressure.\"\n\nWe eat in silence, looking around us for the most part. Our eyes run into each other a few times and I can't help but blush every time. She has an intense gaze.\n\nI put my sub down after four bites.\n\nHer mouth tightens but she doesn't say anything.\n\n\"Can you please tell me what happened?\" Curiosity is killing me.\n\nShe wipes her mouth with her napkin and puts away the rest of her sub. She takes the last sip of her drink and then pops a mint in her mouth. She offers me one but I decline.\n\n\"First, tell me how you have been. What have you been up to?\" She leans forward and leans her head against her hands. Her finger comes up to rest against her bottom lip.\n\nMy eyes snap away from her lips. \"I would rather just get what I need from you. I have other things to do and a life to get back to.\" One that doesn't include you.\n\nHer jaw clenches and her eyes get hard. She couldn't have heard that right? Does she read minds? I wouldn't be surprised.\n\nMy legs automatically snap closed. My pussy throbs against my wet panties. One look is all it takes apparently. My body seems to know what it means. Good thing my memory do not. I lift my chin an inch.\n\n\"Maybe this was a bad idea.\" I get up and she mirrors my movement.\n\nShe is in front of me in the blink of an eye. Her strong arms pull me up to sit on the table. Her hands wrap around my thighs and her nose digs into my neck.\n\nI gasp and freeze. Her nose trails up and down my neck and I can't help but let my head fall back to give her better access. My eyelids flutter close and I focus on her breath and mine. I match mine to hers, each sharp intake pushing my neck against her nose, her mouth, her teeth.\n\n\"So, you have a life to get back to?\" Her hands move further up my legs until they wrap around my ass. She squeezes. \"Tell me, have you really forgotten us?\"\n\nImages of her lips against mine in the shower pop up against my wishes and I snap my eyes open.\n\n\"Please.\" I gasp when she brushes her lips against my neck.\n\nShe stops moving. \"You don't remember how you would beg me to let you cum all over my tongue?\" Her lips move against my tender skin. \"The number of times you snuck your hands in between my legs to torture me? How quickly I could get you to yield to me?\"\n\nI push her away and hop off the table. I need to get away. Far away. People are staring at us and I feel my face turn bright red. What am I doing? How can I let her make a spectacle out of us? Out of me? I turn the corner and ignore her calling out to me.\n\nShe gets close enough to wrap a hand around my arm. She forces me to face her.\n\n\"Don't ever walk away from me when I'm talking to you.\" She growls.\n\n\"I am not your dog!\" I surprise us both by yelling. I don't pull away or try to put more distance between us. I stand my ground. \"You can't train me to do tricks and punish me when I don't listen! I don't heed at your command!\"\n\nShe pulls my body against hers and I want to moan. It feels so good. Letting my anger out, having her overpowering demeanor handle my outburst with ease. As if it is nothing new. My parents would be appalled at my behavior. She looks like she's just waiting for it to pass.\n\n\"Are you done?\" She cocks her head to the side, confirming my thoughts.\n\n\"Fuck you.\" I grind out through my teeth.\n\nHer smile turns predatory. \"Don't mind if I do.\"\n\nShe picks me up and tosses me over her shoulder like a pillow full of feathers. My yelling gets louder and even more obscene as she walks down the block. She saunters into a building and ignore the looks we get. There is not an ounce of shame in my body for the way I am behaving and it is liberating. Being in her arms feels like a sanctuary. Even if I try to hurt myself it will be impossible. Because she will save me, she will take care of me. She will never let anything happen to me. I can get away with anything as long as I am in her arms. My body knows this. I don't know how, but it just does.\n\n\"Keep it up and I won't let you cum.\" She squeezes my thigh in warning.\n\nMy cursing surprises me but I let it all out. All my anger from the moment I woke up in that hospital to the instant in the sub shop. She walks into an apartment and I start to yell anew. She tosses me on a bed, face down. With lightning speed, she has my hands tied at the head of the bed, against the gold metal frame. My lame attempt to pull away only makes the thin cloth around my hands bite my wrists. She pulls my shorts and underwear down with ease and spreads my legs on each side of her hips. She raises my hips. Breasts on the bed, ass in the air.\n\nShe slaps my pussy and a squeal mixed in with a moan escapes my lips. My swollen clit cries for attention and I yank against the thin cloth on my wrist.\n\nShe slaps first one ass cheek and then the other, hard enough for tears to start forming in my eyes.\n\n\"Ahh!\" She slaps my pussy, closer to my clit this time. Not nearly with as much force as she slapped my ass but enough to feel a delicious sting. My breathing is labored and I'm arching my back as far as I can. I want to give her better access to my nub.\n\nShe slaps my ass repeatedly. I bite my quivering lip and ignore the tears rolling down my face. Then she gives my clit three consecutive slaps and I moan into the pillow. It feels so good. I feel my orgasm building. She knows just how hard and what angle to hit it so that it is enjoyable for me. Yet, I know this is a punishment.\n\n\"You're not going to cum.\" She slaps my ass again and can't help the muffle cry that escapes my lips. Not because of the pain, but because of the threat that hangs between us. I know I won't disobey her. I can't. My body won't allow it.\n\nShe slaps my ass, my clit, one cheek, the other, then my clit again.\n\n\"Stoppp!\" I try to warn her as my orgasm sneaks up on me. \"I'm close!\"\n\n\"Fight it!\" She bites back.\n\nI try to move away but she holds my hips in place.\n\nSlap.\n\nSlap.\n\nSlap!\n\nThe consecutive slaps come at a faster rate, nipping at my heated center. She's not hurting me. Not in the way an outsider might think. It's sinful. The amount of pleasure I'm getting should feel shameful but I love it. Every second of it.\n\nI cry out loud, denying myself the sweet sensation of cumming fast and hard. I try to think about anything else and cry even harder at the lack of control on my part. I am so close. I cry silently when she stops all together.\n\nShe comes up and removes my hands from the cloth and pulls me into her arms.\n\nI cry into her neck and let her words and soft hands bring me back down to reality. I grieve over the lost orgasm and the turbulence of emotions coursing through me. The tears don't stop but her kisses ease the pain. It is like nothing I have ever felt before. Fear and desire mingle in the back of my mind.",
        "\"I'm sorry we had to start like this, baby.\" She kisses my forehead and finally looks down at me. She runs her thumb against my bottom lip. \"You look so beautiful.\" She takes my bottom lip into her mouth and moans as my tongue comes out to meet hers.\n\nMy legs shake at the thought of cumming just from her kiss alone.\n\nShe pulls back and brushes a strand of hair away from my face.\n\n\"Are you okay?\" Her dark eyes are sincere. There is even a hint of worry in them.\n\nShe runs her thumb against my lips again and I lightly kiss it.\n\n~~~~\n\n{Camryn}\n\nShe's tempting me.\n\nI watch as she bends over the railing to look down at the fishes.\n\nI thought a nice afternoon stroll would do the both of us some good but Emma has other plans. We're at a small pond, wrapping up our day with a little sun to warm us up after running errands all day. I watch as her skirt rises up a bit as she leans further into the railing. A guy walking by stops in his tracks to see how far up her skirt will go.\n\nI walk straight up to her and place myself behind her, effectively blocking his view.\n\n\"You're asking for it.\" I murmur against her ear.\n\nShe shivers in response but tries to pull away. \"Don't. Not here.\"\n\nI chuckle and move back so that we stand side by side.\n\n\"You tease.\" I put my shades on.\n\nShe knows exactly how far to push before I start pushing back. Then she pretends to be an innocent bystander while I'm made out to be the angry wolf. I don't care. I've learned that Emma will never make the first move. Even if she is horny out of her mind, she will go to the ends of the earth teasing me until I cave and fuck her. Part of me wishes she would just outright ask and not wait until I'm knuckles deep in her to beg, but I can't deny the chase is half the fun.\n\nShe will only ever initiate something if it means she gets to please me. She loves doing that the most. Making me happy, seeing the effect that she has on me. I see her pride swell when my body shudders under her tongue. My little vixen.\n\n\"Come,\" I hold my hand out and pull her towards the park's exit. \"We need to eat then go to bed. I have a long day tomorrow.\"\n\nShe pulls her hand away and stops walking. \"I'm not hungry.\"\n\nIt only takes a few seconds of me staring at her for her cheeks to flush.\n\n\"It'll be a light dinner tonight. A salad if that is what you want.\" I go to grab her hand again but she moves away, almost bumping into a lady walking her dog.\n\nI apologize to the lady and give Emma a look.\n\n\"I'm not hungry.\" Her mouth is set, in an adorably fucking pout and her green eyes flare.\n\n\"That's enough.\" My tone is cautious.\n\nHer defensive stand and heavy breaths are a sign of hurricane Emma coming straight towards me. Half of me gets a thrill of the thought of what is to come. Or should I say, who is to cum. But another part of me is upset. When Emma explodes, she's like a nuclear bomb. Hard to look away from, damaging to those who aren't expecting it, and with lasting affects. I know it's because she never got to throw full-on tantrums growing up, she told me so herself. It is a little sad when I think about it, but I don't dwell on it much. This is part of the healing. I wish we were at that stage where she didn't have to lash out or test my boundaries, but I'm not walking away. Each time she lashes out, it's not as bad as before. And then a weight is lifted off her shoulders, and old wounds turn to scars.\n\nShe folds her arms. \"I'm not going anywhere with you.\"\n\nMusic to my ears.\n\n***\n\n\"Hold it.\" I warn her.\n\nI rub my fingers along her wet pussy, her glistening lips, and swollen clit.\n\nShe cries out and tries to fight the orgasm. I have been pushing her to the edge all night after her little spectacle at the park. She has been crying on and off, cursing me in between. This is the third tantrum I've had to deal with in less than a month. Although I get instantly turned on when she turns into a brat, because of the infinite possibilities of getting her back, I have to admit she is much more docile and giddy after each session. She is more playful the next day, open to try new things, and even eats more without any encouragement. I was concerned at first, that I was pushing her too hard too soon but she has been the perfect little submissive I could have ever asked for. Except for all of the cursing. Sweet little Emma has a sailor's mouth.\n\nAfter she doesn't get to cum and I have enough of her sweet little pleas I hug her into my chest and make her look at me.\n\n\"Something has been bothering you again.\" There is no room for argument in my voice.\n\nShe is silent.\n\n\"You have to learn to talk about it, baby. I know we both enjoy this but it has to be in moderation. I can't punish you every time you refuse to talk about something. You have to give me something.\" I'm at a loss as to what to do if she doesn't open up on her own.\n\n\"Evelyn thinks you tried to hit on her.\" She shakes her head. \"I know, it's stupid. But I know she's your type and-\"\n\nFucking Evelyn.\n\nShe came into my gallery last week and pretended it was a last-minute thing but her clothing and makeup said otherwise. I got Katy to show her around and excused myself as quickly as possible. I debated on telling Emma but I didn't want to give her anything to worry about. She has been doing so much better that I didn't want Evelyn to ruin it. Mentally there is a shift in Emma that I can see is improving. Telling her that her roommate is someone she should stay away from will not help her progress. But I know I eventually will have to expose her friend for who she really was.\n\nI sit up and get out of bed. I take a deep breath before facing her again. \"What exactly is my type?\" I hate how defensive I'm being but I truly want to know what ideas she has going around in her head.\n\n\"Oh, I don't know,\" She says in a sassy tone. \"Beautiful girls that you would like to paint.\"\n\nMy stomach drops. \"I'm not even going to go there because it would be a waste of time.\" I turn away but she pulls my arm back and points a finger at me.\n\n\"You want to fuck her don't you? Fuck her and then paint her? It's what you do anyways.\" I see the hurt in her eyes and it's hard to be angry at her.\n\nI sigh and pull her back into my chest where she lays her head and relaxes her breathing.\n\n\"I have slept with some of my models, yes. But I will never do anything to hurt you\" I rub her back. Most of those rumors about me are true. I wish I could guard her from them because who knows how I would react if the roles were reversed. \"Besides, that was who I used to be. I'm a different person. I would never betray your trust for Evelyn or anyone else. Emma, I love you.\" I force her to look at me. \"You are my only type. Please believe me.\"\n\nShe breathes easier and I see the trust being rebuilt in her eyes.\n\n~~~~\n\n{Emma}\n\nShe gives me some time alone to get dressed and gather myself.\n\nBeing alone gives me time to question everything about what just happened and even about myself. Is this what I am into? Being humiliated and denied orgasms just because? I want to judge myself harshly but being in her arms feels right. Being around her makes me feel different. Like some other person I have never met.\n\nI see myself in the mirror. My cheeks are flushed, hair is all over the place, and eyes are a little puffy from crying. She said I looked beautiful. What does this say about her? She likes inflicting pain. Not just physical but almost psychological. Why do I want that? How can I want that? Wanting to reach climax is a natural part of human nature. Having someone deny that feels very wrong. And yet I would do it. As many times as she wants to because seeing the look of satisfaction on her face is worth it. Even if it felt awful in the moment, I feel better now. More than better. More than anything I have felt since being in out of the hospital.\n\nA painting above her bed pulls my attention. I turn around and a fuzzy memory floods back in my mind. It looks like splashes of watercolor...I remember cumming all over her fingers, having her encourage me to squirt all over her painting.\n\nMy cheeks heat up and I rush out of the room, embarrassed to think I let her do that to me. I don't do that. I've never been able to...do that! I control my breathing and pretend that it never happened. Because it never did. Not to me.\n\nShe's sitting on a barstool when I come out. She's looking down at her phone, brows furrowed. I close the door loud enough for her to hear.\n\nShe looks up and gives me a breathtaking look. Her face is flushed, I know she enjoyed what we did almost as much as I did.\n\nShe holds her arms out and I walk into them, letting her kiss my head.\n\n\"I hope I wasn't too rough with you.\"\n\nI shake my head.\n\n\"It isn't always like this. You usually get what you want most of the time.\" She has a knowing smile on her lips.\n\nI pull away and stand back against the wall.\n\nHer apartment is bare. There is furniture and some books scattered around but nothing fancy. It is clean and says nothing about her.\n\n\"Is this your place?\" I look back at her.\n\n\"For now.\" She puts her phone away.\n\n\"What does that mean?\"\n\n\"I'm only here for about a month and a half.\" Her dark eyes gauge my reaction.\n\n\"Where are you going?\" I move my hands behind my back and ball my hands into fists. My nails dig into my palms. My heart is going haywire.\n\n\"Across the country.\" She crosses her arms.\n\n\"Oh.\" I feel like crying again. She's leaving me.\n\n\"Yeah.\" She seems unsatisfied with my answer but doesn't say anything else.\n\n\"I think I should go.\" I can feel the nails biting deeper into my palm.\n\n\"I can walk you home.\" She stands but I step away from her.\n\n\"No, thank you. I know my way back.\" I walk to her door and ignore her presence behind me.\n\n\"Can I see you tomorrow?\" She opens the door for me.\n\nI shake my head. \"I am going back to my parent's place tomorrow.\"\n\n\"I thought you wanted to know what happened the night before your accident?\" She's getting upset.\n\n\"Frankly, it doesn't matter if you're leaving.\" My tone is cold. She's leaving me. And I will go back to what I know. A world that doesn't involve her. Has the prospect always seemed so pointless?\n\nShe takes in a deep breath. \"So, that's it?\" Her eyes pierce through my soul.\n\nI nod. \"It seems so.\"\n\n\"You love ruining me, don't you?\" Her voice is low.\n\n\"You're the one leaving.\" I hate to point out.\n\n\"You don't even know who or what I am to you!\" She booms.\n\nI don't shy away from her anger, I feed off of it. \"I know you're a good lay.\" Inside I am shocked by what I am saying. I don't talk like this. I don't act like this. Letting my emotions get the better of me is not something I allow. Let alone acting like this in front of strangers.\n\nShe grips the door handle with force. \"You're not the first to tell me so. In fact, you might want to get in line.\"\n\nI push against her chest before running out of her apartment.\n\n\"I'll be here when you want to be thoroughly fucked, Emma.\" She screams out of her apartment.\n\n\"In your fucking dreams!\" I yell back and push the door to the stair open.\n\n~~~~\n\n{Camryn}\n\nI take everything out and set it up to my liking.\n\nEmma sits around and looks at the beautiful waves crashing into the sand in front of her. She likes coming to the beach and I like please her. But now she is going to appease me.\n\n\"Come here.\" My eyes are on the sunlight and the best position. The blank canvas is coming to life in my mind.\n\nShe stands next to me and crosses her arms.\n\n\"Stand there.\" I point to the best spot I can muster. This will be a quick painting so it doesn't have to be perfect but I need to make sure I still have some light by the end of it. \"Take your clothes off.\"\n\nHer eyes widen and she doesn't move. \"People will see me.\" Her cheeks burn.\n\nI love the shyness in her eyes. If only I had enough time to capture it in my painting. \"Now.\" I raise an eyebrow. \"This is my friend's private beach. No one will be here to bother us today.\"\n\nWe stare at each other for a few moments. My eyes are demanding and hers are imploring. She eventually gives in and I watch in lust as she stands in all of her naked glory by the water. I give her some direction on how I want her to stand. I paint with fast strokes. Catching as much of her essence in this painting as I can. She is a natural model. She is usually still and more than happy to watch me in action. Her hips and breasts are much fuller than when we first met. She is full of life and love and I almost get choked up thinking about all of the progress we have accomplished.\n\n\"I love you.\" She quietly proclaims as I finish up the painting.\n\nI manage to set my paint and brush down before pulling her into me and loving her with all of my might.\n\n~~~~\n\n{Emma}\n\nI cry myself to sleep that night.\n\nI cry for the girl I used to be, the one who had a perfect life, with a friend and a job and a lover. Who knew what she wanted and went for it. Who lived a better life. I cry for Camryn. Being around her consumes me with emotions. She brings out the ugly in me. But it is not all that ugly. It is still a part of me. Some of it is necessary. Being under her. Giving both of us what we want is almost as natural as existing for me. Did we always yell so much? I imagine the make-up sex is out of this world. But is the carnal attraction the only thing that ties us together?\n\nThe next morning, I drink a cup of black coffee and brush my teeth.\n\nI check my phone and see a text from Heather. She wants to meet up soon.\n\nI imagine Camryn's thoughts on the idea of Heather and I and cringe. She would not like that I just know it. And yet she has a line of girls telling her she is amazing in bed, she said so herself. My heart feels heavy.\n\nWith one last look at my apartment, I walk out and head to the elevators. I cross my fingers when I get to the lobby and hope there is no tortured artist loitering outside. I come out through the revolving doors and sigh in relief when I see the clear sidewalk. The hint of disappointment is pushed away and out of my thoughts.\n\n~~~~\n\n{Camryn}\n\nKaty is going over the new painting I put up with adoration.\n\n\"This is lovely, who was the model again?\" She turns her head.\n\nI purposefully made sure to get the side profile of Emma's head with her hair covering most of her features in the painting because I knew she wouldn't like the whole world to see her in her most natural form. She is aware of the final product and gave me permission to post it up in my new little section with the promise that no one will ever know it was her.\n\n\"Some Russian chick passing by.\" I shrug. It kills me not to yell at the top of my lungs that this was the love of my life but I will deal with it.\n\n\"Emma!\" Katy turns to look behind me and smiles brightly.\n\nI am excited to show Emma the painting but my heart drops when I notice an older couple walking closely behind her. She looks like a mixture of both of them, although her figure favors her mother's. I try to warn her with my eyes to hold them there, that I can rush to them, but she is eager to have them meet me and approaches even faster.\n\nIt wasn't like I never expected to meet them but I definitely thought it would be in a more appropriate setting. Not one where a portrait of their naked daughter is proudly hanging in my gallery.\n\nEmma's smile drops as soon as she notices the fresh new painting out on display. By then it is too late and I am introducing myself to her parents. Katy introduces herself as well and then manages to point out the one thing Emma and I try to avoid.\n\n\"This is actually a brand-new painting she just posted. It goes very well with the summer theme we're going for.\" Katy points out the colors, the themes, everything in such detail that my ears are ringing by the end.\n\nI see the recognition eventually settle in Emma's parent's eyes and their embarrassment burns within me. Emma is beat red and I am sweating bullets.\n\n\"We just wanted to stop by since we were in the city, we won't keep you any longer.\" Emma leans in to kiss my cheek and squeezes my hand in solidarity.\n\nI shake her parents' hand one more time and ignore the extra stern shake from her father.\n\nI'm royally screwed.\n\n~~~~\n\n{Emma}\n\nI make it back to my parent's place by lunch time.\n\nI join them in the dining room. We eat in silence, like usual. I push around my vegetables.\n\nAfter the maid clears out dishes I look over at my mom.\n\n\"Who is Camryn?\" I see the recognition on her face.\n\nThe anger on my father's face is palpable. \"She's the reason you were in the hospital.\" His lip curls.\n\n\"How? Why?\" Should I have gotten my information from the source? Spending another second with Camryn seems improbable. We clash and fight without holding back. I can't do that every time I see her.\n\n\"Sweetheart,\" My mother gives my father a look then turns back to me. \"She is just not a good person. She's controlling and overbearing and she doesn't deserve your time of day.\"\n\n\"I went to her gallery. She seems successful enough.\" My parents value money, success, and an honest way to make a living. Camryn ticks all of those boxes.\n\n\"I thought you didn't remember her.\" My father's lips are in a straight line.\n\nI shrug. \"I didn't. But I went there one night to see what the big fuss was about. She's really talented.\"\n\n\"You are not to see her and that is the end of this discussion.\" He gets up from his seat and leaves without another word.\n\nMy mother looks at me with concern. \"Please listen to your father. You turned into a completely different person when you were with her.\"\n\n\"How long were we together?\" There is no emotion in my voice.\n\n\"Only a couple of months. You didn't really talk to us about her. Just said you met someone new. We went to her gallery once, she seemed nice. But then...\" She shakes her head. She doesn't want to think about the accident.\n\nI don't either.\n\n~~~~\n\n{Camryn}\n\n\"They hate me.\" I groan into her stomach.\n\nEmma giggle makes my heart sing a little. \"It will be a funny story in a couple of years.\"\n\nI smile against her shirt and pull back to look at her.\n\nTalking about the future has become a more central focus of our conversations. After telling Emma about my plans to bring her along with me, we have been going over logistics. I showed her our new apartment, the restaurants nearby and entertaining things to do. She has also gotten to see where my new gallery will be and I have been over the moon thinking about sharing all of my space with her. She has even started looking into new jobs she can apply for.\n\n\"Do they know you plan on being across the country this time next year?\" I settle on my back, still resting against her.\n\n\"Not yet.\" She plays with my hair. \"I need to find the right time.\"\n\nBeing an only child makes it even harder having to move away. I get it. I won't do anything to make her feel pressured to talk to them. I know very little about their relationship but I know there is some strain. This won't make it any better. She assures me it will all work out though.\n\nI put all my trust in her.\n\n~~~~\n\n{Emma}\n\nI reach out to Heather and meet her at the country club a few days later.\n\nShe is very good at tennis. Too good to pretend that I make her break a sweat.\n\nHer long legs and athletic arms are a sight to see. She is naturally tanned from being out in the sun for so long, there are even gold highlights in her hair. Her hazel eyes laugh with mirth when I make a big show out of catching my breath.\n\n\"Maybe we should have went on a nice walk or just grabbed some coffee.\" I put my hands over my head.\n\nShe lightly pushes me as we walk off the court. \"You did good. Considering you haven't been here in a while.\"\n\nI trust her words but don't miss the glint in her eyes.\n\n\"We could grab a bite to eat now?\" She puts her racket in a bag and takes a sip out of her hydro flask."
    ],
    "authorname": "SkylerLuv",
    "tags": [
        "lesbian romance",
        "romance",
        "submission",
        "bdsm",
        "domination",
        "drama",
        "lesbian oral",
        "spanking",
        "squirt",
        "eating pussy"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-girl-on-the-bridge-1"
}