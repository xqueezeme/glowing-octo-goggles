{
    "title": "My Only Talent Ch. 17",
    "pages": [
        "Chapter 17\n\nHappy landings there, Buddy! \n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\nSuzanne almost fell off the roof herself when she looked down and saw Pavel point the gun at Robbie, and then something landed on Pavel, making a sound sort of like a big watermelon dropped from the second floor. Some guys in dark grey suits held guns on the other caterers, put plastic cable ties around their wrists and ankles, cloth hoods over their heads, and then shoved them in the back seat of their black Tahoe. An ambulance arrived almost immediately, and the attendants put Pavel, who was unconscious, on a back board, and then she realized that the guy that had fallen off the roof must have jumped on Pavel deliberately. He looked familiar. They strapped him to backboard too, and then loaded both of them in the ambulance and took off in less than two minutes. She suddenly placed him: that was the guy who had followed her to Waco. She saw Robbie stand up, but he looked a little woozy. Her phone buzzed with a text from her father. It had a photo of a red headed guy in his thirties and one line of text \"Find Agent Smith and ask him how you can help\". \n\nShe looked up and saw the guy in the photo talking with Erminia and Brujo, and hurried down the stairs. She first checked on Robbie, getting there right after Lara did, and Robbie didn't have a scratch on him, he was just having an adrenalin reaction. Agent Smith hustled over and asked her to sit with Robbie, give him some water, and watch for signs of shock. He told her a drunken guy had fallen off the roof, but he was the only one hurt, and that was all she had seen.\n\nSuanne said, \"What about Pav...\"\n\nAgent Smith was adamant. \"A drunk guy fell off the roof and that's all you saw, right!\" as he looked her right in the eyes. \"Tell Robbie to say the same thing.\"\n\nBy this time the two other guys in suits were talking to all the other people that had seen the guy fall. This early in the morning, there really weren't that many people here yet. A big white Cintas step van showed up, and two guys in funny looking rubber suits with gloves and plastic bags on their feet and plastic hair nets ran to pick up Pavel's gun, and Robbie's racket, and everything the bogus caterers had put out for snacks, and all the stuff that had fallen off the roof with the guy who fell. Agent Smith got in one of the black Tahoes and then he and the white van took off, disappearing down a road that was marked 'no outlet' and about two minutes later two city police black and whites rolled up from the other direction, followed by an EMS unit. Her phone buzzed again, her father texted again, \"stick to that story, will call you later, and do not turn your phone off.\" She saw a bunch of characters flash on her screen, and then it showed only a jumble of nonsensical symbols. \n\nThe EMS guys went over to look at Robbie, shining lights in his eyes and asking him questions. He kept saying \"I did not fall off the roof\" and then, \"the guy who did almost hit me\" and then \"they took him away in an ambulance\", then \"a regular ambulance, just like yours\". The cops were talking to everyone around the court and taking notes. \n\nWhen they got to Suzanne, she opened her mouth to speak but they said \"I think I already know, Miss. Some drunken guy fell off the roof and that's all you saw, right!\"\n\n\"Actually officer, I didn't see anyone fall, I just heard a big thump. I came down the stairs from the roof to look and the ambulance was already driving away. You guys sure are good!\" She gave him her best breathless coed look, but he did not respond. He must be gay, or maybe really married.\n\nThe cops came over and said they were confiscating her phone, but when they tried to page through it, they saw it was trashed. \"This one is fried, too, Sarge. What the heck is going on?\"\n\nThe EMS guys wanted to take Robbie to the hospital, but he absolutely refused, saying, \"I didn't get hurt, just surprised!\"\n\nThe police radio crackled, and the speaker/mics on the cop's shoulders all announced \"Unit 1311, 10-61\" The sergeant stepped away from Suzanne and Robbie, and dialed his cell phone, and spoke into it for a moment.\n\nHe then motioned to the other cops and said \"10-24, 10-22, and you are all 10-8! Roll out a here forthwith!\" The radio crackled again with another set of ten signals and some addresses. \n\nThe cop that had been talking to Suzanne said \"What's the deal Sarge? We are told to disregard, back in service, and then we get immediately sent to routine burglary calls we don't normally roll on!\"\n\n\"Stow it, Stowkowski! Talk to Sergeant Vincent if you think you have a problem. Do you read me?\"\n\nAll the cops and the EMS guys were gone in thirty seconds, but with no squealing of tires. Suzanne's phone rang; she listened for second, and then handed it to Robbie. He listened, with an increasingly serious expression, for several minutes.\n\n\"Yes, sir, I understand. No sir. My pleasure sir, uh, I think,\" and then handed it back to Suzanne.\n\nShe smiled. \"Well, I guess you have now met my father, at least telephonically!\"\n\nRobbie still looked tired and pale, as he was still coming back from the deep crash right after the adrenalin rush. \"He talks as fast as you do, perfect grammar, never pauses, never repeats himself, and he sure sounds like he knows what to do! Let me rest for a few minutes, get some water and a little food, and then I want to play the tennis match.\"\n\nThe tournament director started the match that was scheduled after Lara and Robbie's first, and then they would play theirs, and in just a few minutes, it was like the incident never happened. More people began arriving to fill the available seats, and Lara went and got Robbie a plate of food from what the real caterers had put out, and then she and Suzanne sat on either side of him, kissing him, touching him, feeding him, and making sure he was okay. He was looking better with every bite and every kiss, and soon got up and asked Lara to go warm up with him. They found a racquet for him to use, and then hit for a while until their match was called, and they stepped onto the court to play doubles against an older couple from Italy, who were equipped with complete matching sets of Ferrari logo tennis gear. Where was Theo the clotheshorse when you needed him?\n\nSuzanne watched, remembering the way Lara talked about her first tennis date with Robbie. Thinking that she was going to beat him, like she usually trounced all her tennis opponents, and make him her submissive 'spanky' like all those other loser boys that tried to date her. Then the incredible rush of excitement when she realized Robbie might be good enough to beat her, and the last few points of their match were like her sexual fantasies, suddenly admitting that what she really wanted was somebody strong like Robbie to make her submit to him. As Suzanne watched the two of them move in those short and tight tennis clothes, she recalled she had never been much for tennis, but coupled with a sexual submission wager against either of these two, she might get more interested, win or lose. But then again, why waste time on the tennis part?\n\nShe could tell that Robbie and Lara were much better tennis players than the Italians, but they also understood the social graces of charity tennis tournaments, and kept each point close, until the Italians made enough unforced errors to lose, without making them feel that they had been pounded by better players. There were hearty congratulations across the net, and then they joined Brujo and Erminia for brunch. Robbie again ate very heartily, and drank a lot of Perrier water, while everyone else talked.  \n\n.....\n\nI figured after the tennis match and lunch I would catch a nap, but I discovered we were all scheduled for one of several 'work parties' to get ready for the 'addicted to' after party. My older sister had organized her senior prom, and I followed her trials and tribulations as they were explained in laborious detail across the dinner table every night, but that was nothing compared to this event. There were multiple work parties, a walkthrough, and a dress rehearsal to go, all in the next two days. Lara, Suzanne and I started over to Spear's place early, but most of the other folks would not arrive until after their normal work days ended. \n\nOn the way, I thought about Dwight, the guy who had jumped from rooftop onto Pavel. Suzanne's dad had given me the background on his training as an agent and a very sketchy idea about the still unnamed OGA he worked for, and the basic plan of what would happen to him next, but only Suzanne and I knew even that much. He was in the hospital downtown, under an assumed name, in the burn unit because it was more plausible to keep outside contact to a minimum there. That must have made Suzanne think about her first love Mike, who had spent the last three years in a coma at the burn center hospital down in San Antonio, after what probably should mercifully have been a fatal collision caused by a deranged truck driver. Dwight, however, was in a physician induced coma, drugged and fed intravenously to reduce the chances of swelling and brain damage over the next few days. They had patched up his multiple broken bones, torn ligaments, and cuts and bruises, and there were no neurological problems evident from the fall itself, but there was a chance of later inflammation and swelling damaging parts of the brain. When that risk was in the past, they would wake him up and send him to rehab somewhere unknown to us, under still another name. I guess he was going to miss the big party.\n\nI had read somewhere that living through combat, being shot at and not getting killed, made you horny as hell. In my case, just looking down the barrel of a gun and not even getting shot at was sure making me horny as hell, in fact, I was desperate. My Suzie receiver went on overtime, sniffing like a radar detector in a speeding car, and I picked up some wonderful signals from Lara and Suzanne. Their desire to not see me shot had turned into a drive to make sure I was alright, and that made them want to take care of me, and I knew exactly the kind of care I needed taken.\n\nWhen we got to Spear's nobody else was there, and no one was expected for a while. Suzanne and Lara began explaining all the party plans to me, and I had trouble absorbing it all, until I put it in a project management context. Until then, I had not realized the scope of what they were doing here. They had a complete stage show planned, with music and dancing in between their 'acts' and a grand finale number that they guaranteed me would rock everyone's world, and make them want to come back next year. The remodeling of Spear's party house was primarily to fit in the stage and dance floor in front of the frosted glass that obscured the view into the pool and hot tub area, plus some crowd control and security measures. They would bring in a rented stage set and lighting, and had recruited a bunch of ESU theatre majors to do the stage design and management during the party. \n\nA conference call with both girls and Cindy Nelson, the beautiful, talented and supremely ambitious would be party planner to the stars left me with 45 minutes or so to myself. Rather than take a nap, I listened with half an ear and got my laptop out and worked up a project plan for the party, trying to incorporate everything they had told me about the plan. I saw three critical resource and calendar issues that would jump up to bite us. During the call, one other big problem had surfaced: the local big trick magician, stage show mind reader, and prestidigitator who was scheduled to be one of the key acts had gotten a big break and a lucrative booking at a major Las Vegas hotel, so he was cancelling his union minimum scale only gig at our party. \n\nAfter the call, I showed the girls my project plan, and they could see the schedule issues once I laid it out in the calendar with milestones format for them. Then they started to get a little freaked out. I showed them how we could add some bodies to our crew and change the order of some of the steps, and demand that the caterer and decorators deliver faster completion of some activities on the critical path, and they relaxed quite a bit. Suzanne smiled and said \"Now if you could just do card tricks, read minds and make a ski boat disappear on stage, we would have everything covered. What the hell are we going to do?\"\n\nI saw opportunity, as I was getting hornier by the second. I hoped my Suzie receiver could tell me how much I could push it to make it pay for me. \"Well, if I could give you a substitute act, that actually fits into the theme of the party better, and gives you another hook to lure people back for next year, would you two be willing to do anything I want, and I do mean anything I want, until 6 PM when our other workers arrive?\"\n\nI sensed two wonderful, interested Suzie signals, but I saw suspicion in their faces. Lara spoke first \"We would have to agree that your proposed act is as good or better, and would really keep people spellbound, because I have seen that magician and he is good!\"\n\nSuzanne chimed in \"What exactly do you have in mind?\"\n\n\"Well, I would have to use Millie as my stage assistant, and we would use some real world 'magician' tricks to pull it off, but what if I could give you act called something like \"Sexual Fortune Teller\", for women only? We would bring a woman on stage, ask her a few questions, and then tell her, and the audience, what she really wants and needs sexually, and what she will have to try to achieve total satisfaction?\" \n\nThey both looked interested, and their Suzie's popped and sizzled, but they had some doubts.\n\nSuzanne spoke first. \"I realize you had some remarkable insight into what Lara and I needed, and Millie too, but how many women would be willing to go on stage and have people know who they are and learn that much about them, and how could you get even close to really telling them that sort of thing?\" \n\n\"Well, one of my magician tricks is that we are going to 'pre-select' the women beforehand, so I can have Oiler and Cisco do a little research on them, and get some ideas to work with. What if we have them wear masks on stage and be anonymous, but ask really personal questions to keep the audience interested?\" \n\nLara looked thoughtful. \"I like the mask idea, it's very mysterious, but let's up the ante a bit and make sure the women who go onstage are really motivated to reveal the truth and get some answers. Let's make then come on stage masked, but naked!\"\n\nBoth girls Suzie's sparkled and I knew Lara had it right, that would rivet the audience, and make the women hotter too. \n\nSuzanne said \"What if we don't get any volunteers to go up on stage?\"\n\nI hadn't thought of that. \"How many do we need for a thirty minute act? \n\nLara giggled. \"Well, if we don't get enough applicants from the party, we will have to have some women teed up who have previously agreed to go on stage if we don't get enough volunteers. Maybe Millie can make the Phi Phi pledges do it as an initiation ritual?\"\n\nSuzanne said \"That's hot! Will Master be the fortune teller?\"\n\n\"No. I will talk to Millie through a headset, and she will be the mysterious gypsy and tell the fortunes out loud, taking my directions. We can ask lots of questions beforehand via a questionnaire. We could also open it up and maybe some women would be willing to do it to get invites to the party?\" \n\nLara smiled a wicked smile. \"Bingo, Master! We can use our addicted to party Facebook page to take applications, and pick the ones who will stimulate the audience the most. Maybe take some from the regular party invitees, and some from the contest?\"\n\nSuzanne smiled \"I like it, and I want to talk to Cindy, too. She seems to have a remarkable talent for 'sexing things up' for a party and making the public excited about them!\" Then she looked at the clock, and got down on her knees, saying \"we have about two hours, Master, how may I serve you?\"\n\nHot dog. I looked at Lara and arched an eyebrow at her. I was rewarded with a wonderful version of her tight little smile, and she began to strip and kneel. Happy days are here again, plus two wonderful bubbling Suzie signals ramping up in amplitude. What did I want? It was time for some stream of consciousness erotic thinking. But I never got the chance. I began kissing Lara, and then Suzanne kissed her too, and then their Suzie signals sort of harmonized and just grabbed my brain. I was just subconsciously doing what made them the hottest, and they were doing the same for me. I spent a long time on one of Lara's breasts while Suzanne obsessed over the other. I couldn't believe how wonderful and responsive it was in my mouth. Her nipple seemed to breathe in and out, swelling and flexing as her Suzie trilled in my head, and Suzanne was just as fascinated with the one on her side. \n\nI opened up my pants, and my Suzie receiver, and found I just lost myself in my girls and their signals. It was almost as if the three of us were sharing all three bodies together. As soon as I realized Lara liked something, I made it happen, and likewise for Suzanne. I could also tell that almost everything they did to touch and excite each other worked wonderfully for them. Lara took me in her mouth, and Suzanne went down on Lara. Then I entered Lara and Suzanne kissed us both just where I moved in and out of Lara. Permutations and combinations! Lather, rinse, repeat! I was so totally concentrated on their pleasure that I took no notice of my own, and thus never moved toward a climax. I was in the stone zone, hard and willing. Lara came very hard, squeezing me with her magic box and raking my back with her nails, but I felt not even a tickle toward an orgasm of my own. I sensed Lara was in a refractory phase, and got myself into Suzanne by the quickest route possible, her clarion Suzie telling me I had done the right thing for her. Suzanne pushed me onto my back and rode me hard, Lara sat on my face and kissed Suzanne. It seemed so perfect I almost forgot to breathe. \n\nLara began to fuck my face the way Suzanne sometimes did, and I liked it just as much. Suzanne had another sneezing orgasm and her pussy clamped down on me so hard it hurt. Baby make it hurt so good. I twisted over and put my cock between Lara's wonderful breasts, sliding in and out of the magical triangular tunnel they made. Suzanne leaned over and stuck her tongue out and licked me as I emerged from the top of Lara's breasts, and it was fascinating to feel and watch. She alternated between licking me and sucking hard on Lara's nipples, and Lara began to groan and to roll her head from side to side. Both girls were breathing like sprinters. \n\nSuzanne pulled her head up and said \"Come on her nipples, Robbie!\" The whistling of Lara's breath through her nostrils was my sonic trigger. Suddenly I was around the bend. I did my best to target one nipple and then the other and my ejaculation somehow felt harder, hotter, denser, and somehow more profound. When it landed on Lara's nipples she came hard, and Suzanne said \"Oh yeah! Look at that!\" and then proceeded to suck it off of Lara's chest. I least I think she did, but I'm not sure, because I passed out. \n\nWhen I woke up, I was in the bed under the covers in a third floor bedroom in Spear's party house, and it was already fully dark outside. There was a dim light on nightstand table, and my clothes were hung on a chair nearby. I dressed and made my way out the door and down the staircase, hungry, and still a little wobbly. I saw Suzanne, Lara, and now Millie, all three in jeans and tee shirts up on the newly constructed stage, putting down blue masking tape and conferring with Cindy Nelson and the remodeling contractor. There were about a dozen really nice looking girls on stage in dancing tights and tee shirts holding onto each other's shoulders and high kicking like a chorus line at the Follies Bergere. There were guys with little meters of some kind taking lighting and noise level readings, and another group standing offstage and arguing with each other. As I got closer, I realized that the arguing group included five or six tall women and the musicians from the Goompers, the very talented band that shot the video with the girls and me at the UDP Halloween costume party, and I re-introduced myself.",
        "The Goompers lead singer did a double take, and said \"I didn't recognize you without the leashes, mask, and whip!\" and we both laughed. He introduced me to the tall women, who were actually a 'very progressive country' music group called the Chiksee Dix, made up entirely of historically male pre-op transsexuals, appearing on stage as women. This was definitely for the 'keep Austin weird' crowd. They had formed the group as an inside joke, expecting to perform once at amateur night at a gay bar, but it had proved so popular that they got bookings and had actually delayed their surgeries. Their hormone and appearance regimens were well established, so they all appeared to the causal glance to be attractive, tall, and muscular women, but thanks to their always tight outfits, with some fairly obvious bulges in their pants. They said their doctors were now telling them it was well past time to go forward with the surgery, so the 'addicted to' performance was going to be there final pre-op stage appearance. \n\nMy curiosity then raised a few questions that I soon realized I really did not want to know the answers to. They were working with a video crew that was going to make a 'mock-umentary' of their final performance, and also shoot another music video for the Goompers while at the party, and had agreed to provide some footage for Cindy to give to TMZ and perhaps some other outlets. The two groups were going to combine to play for the musical and chorus line finale of the night, played just before dawn signaled the end of the party. The work session wound down, and everyone agreed to reappear for a dress rehearsal Sunday, and we all went our separate ways. \n\nSaturday morning was spent at the Circuit of the Americas, with Millie, Gretchen, and I following Oiler around the pits while he set up wireless gear and monitors for three different constructors and six different cars. Ivor Greentree became a pitiless and perfectionist taskmaster, sending Oiler scurrying hither and yon with a seemingly endless set of tasks and adjustments. That is if someone almost six feet seven inches tall and weighing two hundred eighty pounds can be said to scurry at all. Both girls got their share of attention from the pit crews, and Millie was taking advantage of the abundant sunshine to wear a micro halter top that seemed to call out especially to Italian mechanics. Her command of Italian slang and some very pointed insults kept most of them at bay, but she did get pinched a few times. Gretchen was wearing a Greentree Racing tee shirt and white slacks, but her six foot three inch stature and amazingly full but athletic figure was drawing a lot of attention, too. One very short but very aggressive and persistent Italian back up driver was completely undeterred by her refusal to respond to his endlessly professed true love for her, until Oiler picked him up by the shirt collar and held him up one handed with his feet dangling almost two feet above the pavement, saying \"She is my girl, Paco, so stay away!\"\n\nThis engendered a chorus of laughs from the rest of his team and the other drivers hanging around, and left him sputtering. I also detected a clarion Suzie call from Gretchen, reveling in the attention and the strong claim Oiler staked on her, and guaranteeing him some hot buttered loving later in the evening if he survived his first day as Ivor's assistant. If this was just time trials, I shuddered to think how demanding Ivor would be during the actual race. Millie and I put in a brief command performance appearance at Sapiento's huge corporate suite high above the track, being introduced to a dizzying succession of European businessmen, two Saudi princes, a member of the British royal family whose exact family relationship status I could not completely discern, and a loquacious old British guy everyone called 'El Supremo'. I didn't get a chance to ask him if he knew Abelard Peters. When Millie responded to some of them in fluent Italian, faces lit up and rapid conversations followed. Gatti (the Fiat MILF) and Brujo Lagoria then joined our group, and when Gatti whispered a few phrases in the ears of some of her women friends I got wondrous gazes from most of them, and one surreptitious pat on the ass.\n\nMillie and I left early to attend another work session for the addicted to party, and afterwards all of us roped Suzanne up to the trapeze in Lara's apartment and whipped and ravished her, penetrating her mercilessly with my cock, all of our fingers and tongues, and a couple of strap on dildos, until she screamed and squirted and sneezed so that she almost passed out. We cut her down and carried her to the shower, where she cried a river of happy tears, loudly proclaimed that she loved us all, and got gently washed and caressed. Then we all sat in Lara's kitchen and ate cereal with milk and fresh strawberries, telling stories of the happenings of the day. I had three bowls, and my stomach still growled. \n\nSunday we did not get the chance to go to the track, as we spent all day in party preparation. We had the race on the big plasma screens, and it seemed to go well. I wondered how well Oiler was doing. Cindy Nelson had indeed 'sexed up' my sexual fortune teller act, finding someone to make script changes and suggestions, helping to pick the woman we would have on stage, and had also incorporated all the Phi Phi pledges into the final number chorus number brilliantly. There were no other major surprises, except that the dress rehearsal of the final musical and dance number left me speechless, and very aroused. It was based on a music video I had seen before on an MTV segment about their top 20 hottest music videos, but this live version was immeasurably sexier. I was convinced that anyone who came to this party would never forget it. As we bid adieu to all the other workers, Cindy sat down with Lara, Millie, Suzanne and I and talked a bit about security. \n\n\"We have got to be vigilant about this party. Spear authorized money for a good security detail, and we have only handed the sheriff's badges out personally, and the final batch is not going out until tonight. But I don't think any of us can understand how hot the paparazzi are going to be to get to this party. They are already in an absolute lather about it, and once the teaser segment runs on TMZ in a few minutes, it will only get worse. Can anyone think of any risks we haven't covered?\"\n\nI decided there was one. 'Well, it may be nothing, but earlier this week a woman from the Tattler asked me about my relationship with Suzanne.\"\n\nSuzanne looked funny. \"When was this?\"\n\n\"She approached me on Monday, during our 'fun run' around the lake. I thought she was one of Bob the Knob's group.\"\n\nCindy looked thoughtful. \"Was her name Tessa Formby?\"\n\n\"Yes. First she asked me directions around town, and then asked me out for dinner. When I said I had to hit the books, she asked me if I was hitting Suzanne.\"\n\nSuzanne bristled. \"She's not one of Bob's clients! I should have caught that.\"\n\nCindy laughed and adopted a British accent remarkably like Tessa's. \"Well, no harm, no foul. She is a good actor and a persistent little bitch, and make you no mistake, Master Robbie! She can act sweet as sugar but she would sell her own mother into slavery for a juicy story.\"\n\n\"I had a negative reaction to her, also. I don't think she really liked me, anyway!\" I poked Suzanne in the ribs with my elbow.\n\nCindy continued. \"She also known for bribes to tradesman to dish up info on parties and celebrities, and they are often successful.\"\n\nLara said \"I have an idea,\" and then whispered in Cindy's ear. Cindy smiled wickedly.\n\n\"Perfect. Do it! We'll co-opt that bitch and cut her off at the pass! Okay, final arrangements: we are running our own shuttle bus up from the entrance to the cul-de-sac, which should eliminate most of the camera from a vehicle tricks, but I am worried about those little hidden cameras that are so easy to buy and use these days. We went over Spear's cellular and camera jamming and focus spoofing systems, which had been upgraded for this event and the metal detectors at the only entrance. Then Lara grabbed the remote control for the plasma screen, and brought up the sound, as the TMZ segment began.\n\nThe on camera reporter was the comely young Phi Phi ESU alum that had first broken into an on air role with the AG scandal, and she was made up to the nines and smiling widely into the camera. Behind her was the setting for the \"Prohibition Ball' that would kick off soon, billed as the 'last pit stop' and the official final celebration of the race week. \"Behind me are the elaborate decorations at the Four Seasons for the Prohibition Ball, the final official social event of the first F1 race in the United States in years. Tonight's party will feature princes, dukes, and racing royalty from all over the world, with live jazz and big band dance music, capping what everyone says was a fabulous race on a wonderful new track and a very successful return of formula one racing to the States.\" \n\nThe camera shifted to a shot from the TV station's tall tower, showing the hotel at a distance and the shimmering sunset city scene around it. The view zoomed out to a distant shot, then out into the hills west of town. \"But the real buzz tonight is for a mysterious and unofficial event tomorrow. Called the 'addicted to' after party it is to be held at an undisclosed location and an invitation to this party is literally the talk of the jet set tonight! Many of the glitterati that will fly out late tonight or tomorrow morning in transcontinental private jets would much rather be staying for this 'addicted to' event. Rumors about this party abound, describing it as everything from an ultra chic gathering of intellectuals and thought leaders to an exclusive invitation only sex orgy! But all the rumors agree on one thing -- the party will be addictive, and an invitation to next year's party will be even more desirable than this year!\"\n\n\"But as usual, TMZ is on the job for you. I can reveal to you now for the first time that TMZ will be bringing you video coverage from the event, and you will not believe some of the people who will be there, and some of the people who will not be there! I can now tell you that at least one of Hollywood's biggest female box office stars will be dancing naked on stage at this event, and I can also tell you that your humble reporter will be too! I will be letting it all hang out, on camera, and on our next TMZ, you will see the video! Who knows who else you might see? Don't miss the next TMZ!\" \n\nThe scene then changed to the 'bullpen' area where the TMZ staff is often shown discussing their stories. There were shocked looks all around. \n\nA blonde surfer looking guy said \"Forget about the Hollywood stars. I never believed that our own little ing\u00e9nue even got naked to take a shower! But appearing naked in public and on video? That is the story of the century no matter what else happens there. How can I get to this party?\"\n\nThe senior editor said. \"Right now, everyone is asking themselves the same question. Plus I really want to know which stars are going to be there! I guess we will just have to wait and see!\"\n\nThey cut to commercial, and Cindy Nelson drew in a sharp breath, saying \"Holy Shit! She's going to do what I asked! This is going to be epic!\" \n\nMillie screamed in surprise. \"I can't believe my Phi Phi sister is actually going to do it, but it will sure help her career!\"\n\nSuzanne, Lara, Millie and I had to get going for the Prohibition Ball. Suzanne drove us to Lara's place and we changed into the costumes Lara had ordered. I was not too familiar with the cable TV show that seemed to inspire the theme, but had seen a little of it in the TV lounge of the dorm as I walked by. Lara had on a red wig, and was dressed as a character called Gillian, an apparently crazy flapper madam, and Millie and Suzanne were dressed as two of her prime hookers. I was to be a character called Richard, dressed in a black suit, complete with little round glasses and a plastic mask covering half my face. I was soon pressed into service dancing with all three girls, and the band was really good. I also danced with Erminia, with some photographers taking pictures, for what purpose I was not sure. \n\nThere were conversations in at least ten languages around us, and all of the ones I could decipher concerned the 'addicted to' party. I heard that it was in a hidden ballroom in this very hotel, at Willie Nelson's golf course, and at an infamous nudist camp outside of town. I heard that everyone must enter nude, that you had to have a net worth of over $100M to be invited, and that the party was actually being thrown by Scientologists, Devil Worshippers, or both. The girls giggled at all this, able to understand even more of the conversations than I could. \n\nSoon that 'El Supremo' guy and the mayor took to the stage, and announced a few of the visiting dignitaries. Then he announced that Sapiento and Erminia Gallo were making a $100M donation to found a neurosciences institute at the new medical school, and none other than Dr. Asa Weltschmerz appeared to accept the donation. Lara whispered in my ear, \"Sapiento wanted to mention you, but I made Asa promise they wouldn't. I figured you would like to stay under the radar.\"\n\nI gave her a hug. \"Thanks, beautiful. I also want you to stay under the table whenever I ask!\" She gave me that wonderful little smile. We danced a few more dances, but skipped the parties at the Bullock museum and at Haven. I was looking for some haven for the rest of the night, and some sleep, as I had two exams on Monday, and more on Tuesday a few hours after the 'addicted to' party ended. Cindy Nelson was off to both late night events, with Millie as her wing woman, plus two other even later parties at private homes, making sure she was plugged into all the gossip. \n\nSuzanne, Lara, and I went back to Lara's place. Even though I had hit the appetizers pretty hard at the Prohibition Ball, my stomach was growling loudly. The girls promised to fix me a midnight supper if I would focus on them for a while. I could never refuse a lady, especially not two super hot ones. It soon become another of those 'shared body experiences' as I was so tuned into them that I lost track of where my body stopped and theirs began, and feeling their orgasms through our Suzie links became more pleasurable (and more frequent) than having one of my own. But I got a chance to do both, plus lots of hugs and then steak and eggs. Life was good. I walked back to dorm sore but sated, and fell asleep instantly.\n\nMonday I hit early breakfast and tanked up, even though Suzanne and I had agreed not to run, given the hectic day and all night party plans. There was no exam in Rhetoric and Composition, we had a walk from the class, and Ms. Wyrickie was alone in the classroom to help anyone who needed last minute consultation on our term papers. I had already uploaded mine to the class webpage, but I gave Wyrickie a little stolen kiss and a butt pinch and headed for Engineering 101 early. I found an empty classroom and reviewed the units briefly, and when class started, I was ready as I was ever going to be. Lillehammer handed out the exams and it was taken almost verbatim from the UDP test files. I aced it, no problem. I then had the luxury of going to early lunch and eating a full and unhurried meal.\n\nWhen I sat down, I saw many of the usual faces that frequented early meals. Two very attractive black girls sat down at the other end of my table, talking a mile a minute, and both radiating some very promising Suzie signals my way. I tried to keep my smile a few notches below a leer, and they giggled. The one girl stood and said \"I have to go!\" and took off, putting her tray in the clean up line and dashing out.\n\nThe other girl said \"Orinda, wait, where are you...\" but then she paused and looked at me funny. It hit me like a ton of bricks: I had heard her Suzie before, in the laundry room last Saturday night. Advantage, Mr. Roberts, and his serve. This might be fun.\n\n\"Hello, I'm Robbie Roberts!\" I stuck out my hand. \n\nShe just looked at it, but her Suzie swooped and growled. Finally she said \"Lizzie. Lizzie Reagan.\"\n\n\"I am pleased to meet you, Lizzie!\" I reached out and took her hand, and raised it to my lips, kissing the back of it gently. Her Suzie blared again. I let her stew a moment, trying to detect images on her carrier and access her 'flight data recorder'. No luck so far, but I suspected she had somehow witnessed my session with Lara, and she had not withdrawn her hand, either. The closer view afforded me more details, and I liked what I saw. She was very shapely, and her clothes fit her just perfectly. Her dark brown eyes mostly danced with intelligence, even though they were staring at me dumbfounded right now. \n\n\"Do you live in this dorm?\" I asked her.\n\nI counted to three in my head, and then she finally said yes.\n\n\"I think I have seen you at early meals before.\" I waited a beat, and then said \"Do you remember seeing me?\"\n\nHer eyeballs bounced. \"No, I don't think so...\" she let it hang. Lizzie was a very poor liar. Her eyes gave her away, even if her Suzie had not telegraphed excitement and suddenly her carrier and her 'black box' (so to speak) was revealed to me. She had seen Lara and me all right, from a few feet away in the laundry room, and she had really, really liked what she saw. I decided to have a little more fun with her. \n\n\"I know this is a busy time of year, and we probably both have busy schedules in general, but perhaps after the break we could spend some time together and get to know each other better?\"\n\nShe looked doe eyed, and said nothing. Finally, she said \"Well. I am pretty busy and I have a boyfriend, and...\" she let it hang again. \n\n\"Oh, no pressure at all, Lizzie, and didn't mean to come on too strong. I would be very surprised if a lovely girl like you didn't have several boyfriends. But since both of us live in this same dorm, maybe we could just do laundry together, or something?\" I sent a very powerful Suzie image of her up on the washing machine naked, with me kissing her. Sonar Contact!\n\nI took her hand, still in mine, and kissed it again, keeping eye contact all the time. Her eyes got big as saucers. I suppose a fellow has to try to set up a pipeline for next semester, just in case. It's my dating duty, after all.\n\nI went back to the room and found Kevin just beginning another last minute cramming session which would extend until his last exam on Wednesday morning. He would then join his dad and wife number three, currently on good terms, for Thanksgiving in the Bahamas, and Lou was going too. My they were becoming quite a couple, and he had not brought up the two on one scenario with her again. I grabbed my backpack and the materials for my last two exams and went looking for an empty classroom, having to go all the way north of Taylor Hall to find one. I knocked off all my review points and could recreate the old tests and answer keys from memory, and I could work all the problems in the text book chapters assigned, and my answers checked. I was ready, and by then it was almost time for the supper line to open. It was the perfect timing for steak night, and I chowed down enthusiastically, with two desserts for brain food. Fully sated, I planned a two hour nap before showering and heading to Lara's for our final costuming session. \n\n.....\n\nTessa Formby was getting desperate for some solid information on this final after party. The TMZ tease segment flaunting their obvious inside access had sent her editor and publisher totally round the bend, and her phone was full of texts and emails demanding some sort of scoop to compete with TMZ. Her usual contacts would only tell her that they had invitations, but were afraid to tell her anything more, fearing they would lose their invites if it came out that they were her source. One of them showed her his sheriff's badge invite, but would only let her take a picture after he obscured the serial number and QR code so it couldn't be traced back to him. She suspected some of the others didn't even have invitations, and didn't want to reveal that fact to her. She had tried bribing folks at the Four Seasons, and the top caterers that might be serving, and the booking agents she knew, with no results. She did discover one magician who pulled out of an appearance at the last minute to take a big gig in Vegas, but that was just an aside, not a real story. Finally, down to her last hope, one of the concierges at the Four Seasons called her back, saying he could put her in touch with a limo driver who knew all about the party. The driver would pick her up at the front of the hotel, and guarantee her a major story, but she would have to leave all cameras and recorders behind, and he would make her prove she had no such devices with her, and would demand several pre-conditions and would still be owed some future favors in return. She agreed, as she really had no other options.",
        "A big white town car pulled in, and a huge and handsome black man got out of the passenger side front door and held the rear door open for her. She stepped into the passenger rear seat, and he got back in the passenger front. The driver appeared to be a smaller version of the big guy, maybe an older brother or cousin. \n\nThe driver said \"Buckle, up, Ms. Formby!\" and as soon as she did he took off quickly, plunging into traffic, and circling the block twice via two alleyways, an apartment porte-cochere, and a quick right into parking garage that took them two floors below street level. He pulled into a parking space so tight that none of the car doors could be opened at all, and so dark that she was not sure the car could be seen at all unless someone held an electric hand candle on it deliberately. \n\nTessa tried to catch her breath. \"I feel very confident we were not followed. Even I couldn't reconstruct where we went!\"\n\n\"That's the idea!\" the driver said. He held up a sheriff's badge party invitation, and said \"Do you want to go to this party?\"\n\nTessa laughed, as smarmy repartee was a bit of a specialty for her. \"Why, we hardly know each other! But you are attractive in rugged sort of way.\"\n\nHe did not laugh. \"Here's the deal. TMZ has the first scoop, and they will be the first to report, but it's not an exclusive. You can attend the party, but you must agree to embargo your report until after dawn, when the party ends. Also, you may take no recorders, cameras, cell phones, or any other electronic devices into the party and that will be true of everyone who attends. We will search you for such devices very thoroughly now, and you will be quarantined in a room from now until the party begins at midnight.\"\n\n\"Wait just a minute! Tessa sputtered. \"I want the same deal that TMZ got!\"\n\n\"Except for the embargo, that's what you have. You must also attend the party naked, and like her you may wear a mask to hide your identify during the party. It's up to you whether or not you want to appear naked in the video, which will be taken by a crew we control. You will get some video and stills from that crew, but they will be different frames and sequences than what TMZ gets. And even when you learn of other famous attendees, there are only three that you can mention in your report. And it's up to you whether or not you want to tell your readers you were naked.\"\n\nTessa thought hard. She really had no choice, but maybe she could get something else to use. \"Who are those three celebs?\"\n\n\"You don't get that until after you agree to the deal, and after the party begins. And one other thing: if you report anything untrue or even mildly negative about the party, you will never get anywhere near the next one, and we will carefully feed your competitors all the best stuff.\"\n\nShe didn't see any other way. \"OK, I agree. When and where should I show up?\"\n\n\"You weren't listening carefully. We are going to take you there now, and hold you incommunicado until your embargo expires, but first we are going to check you for devices. Off with those clothes!\"\n\nTessa sputtered again, but they would make no compromise. They turned on all the interior lights in the Town Car, and both men looked eagerly over their front seat perches. She would give them no hint of her embarrassment. When she was stripped to the waist, the driver held out a hand to the huge guy, who handed him a $20 bill. Were they wagering on her? \"What was that for?\"\n\nThe huge man spoke. \"Rodney bet me that you would have a really nice rack, and I didn't think so. But he was right, 100% natural and very nice!\"\n\nTessa discovered she was pissed off, but also a little turned on. She was not used to getting intimate complements from two big black American men. Well, actually, one big man and one giant. Suddenly her nipples got really hard.\n\n\"Bravo, Ms. Formby, Bravo!\" they both said, clapping at her show. She just smiled at them. They waited expectantly, watching her carefully. \n\n\"Did you make any other wagers, gentlemen?\"\n\nThe driver laughed. \"Yes, but you will have to take those panties off to resolve it.\"\n\nShe slowly took off her panties, and the driver apparently won again. \"I told you shaved!\"\n\nThe big man looked at her appreciatively. \"Really nice, too!\" \n\nTessa felt she had won a little victory, but then the driver said, \"Turn around beautiful. Some of these new cameras can be easily concealed in body cavities!\"\n\nThey both touched her thoroughly, and Tessa was flabbergasted, then irritated, and then more than a little turned on. \"Nothing there but a fine butt,\" the big man said.\n\nTessa was finally getting her bearings, and feeling her oats a little bit. \"You guys didn't wager on whether or not you would get hard when I stripped?\"\n\nThey looked at each other sheepishly, and said \"No. We knew that would happen.\"\n\nTessa was now in her element, and liking it. She smiled. \"Can I see, boys?\"\n\n.....\n\nCindy Nelson was manning the security monitors along with Cisco and Oiler, who were doing final testing on the electronic gear that blocked out cell phones and cameras. They had an iron wall and gate set up across the cul-de-sac and had headed off numerous attempts to jump the wall, and would not let anyone in until midnight, but Rodney and Little Hollywood were due any minute to drop off what Cindy expected to be a totally pissed off Tessa Formby, spitting fire and raising hell. They were so late that she got worried and then finally saw the limo pull through the gate and up to the main and only entrance to be used tonight. Maybe she had overdone it by making sure Tessa would arrive naked and embarrassed, but it was hard to gin up much sympathy for her. Tessa had made Cindy's prior attempts to climb into the party planner limelight holy hell every time she had the chance, and this was payback that Tessa would have to respect, and hopefully remember. \n\nThe limo door opened and Tessa swiveled her hips and rose to a standing position, naked as can be. She held her head high, stuck what Cindy now saw were pretty impressive breasts out, and sauntered in like a runway model, with a smile on her face that surprised Cindy. Rodney and Little Hollywood followed, looking like sheepish schoolboys in her wake. She stopped at the scanner, familiar with them from her air travels, raised her arms above her head, and pirouetted slowly, displaying a pair of erect and quite attractive nipples as she did do. Rodney and Little Hollywood stared at her adoringly, and even Cindy had to admit she looked pretty damn good for approaching forty. \n\nTessa saw Cindy and actually smiled more widely, which made Cindy nervous. \"Cindy Nelson! I might have known you were behind an event like this in this town, but I had no idea the limo service was so good here! You are an absolute darling for inviting me, and sending these two wonderful young men to pick me up. But, I haven't been formally introduced to these gentlemen!\" She batted her eye lashes.\n\nCindy knew she had to go with the flow, and said \"Tessa, this is Rodney Driver and his cousin, Little Hollywood.\" The two of them were still grinning like schoolboys. \"Boys, this is Tessa Formby, ace celebrity reporter for the Tattler!\"\n\nTessa guffawed. \"If you are Little Hollywood, how big is Big Hollywood?\" \n\nLittle Hollywood looked like he was about to say \"Ah, shucks, Ma'am\", but Rodney answered for him. \"They just call my other cousin Hollywood, but he is 'big time', since he made it to the NFL. It's a family joke.\"\n\nTessa turned to Cindy. \"I completely understand about the embargo dear, and I admit that I have sort of jumped the gun in the past, so I assume you are going to have these two lovely men keep an eye on me until midnight?\" She actually licked her lips, and Cindy laughed.\n\n\"Sorry, Tess, but they have to go get their dates and return for the party, but I do have a nice bedroom for you to rest and freshen up in. To be clear, the embargo does not end until dawn breaks over the capitol city, darling!\" Giving Tessa a closer look, she saw some flushing and maybe a little bruising here and there. \n\nRodney gave Tess a look that would melt butter, and said, \"We'll introduce you to our dates, and make sure you get home safe and sound after you file your story, though, Ms. Formby.\"\n\nTessa smiled like the cat that already ate one canary and was looking forward to more. \"Ever the Texas gentleman, I find that so charming! I am sure my write up will reflect that this was a magical evening for everyone!\" One of the Phi Phi pledges working as Cindy's assistants took Tess up to the same bedroom where Robbie had slept, and locked her in, after offering her a selection of sexy leather masks to wear when she was released just after the party began. She chose an electric blue one that she thought would highlight her skin and hair. When she looked at herself in the mirror, she got very wet all over again. This was going to be quite a party, after all. \n\nDownstairs, all was ready and the clock struck midnight, and they began letting guests in. There was already an impressive queue on the road up to the house; they were all impatient to get inside. The Phi Phi pledge returned, unlocked the door, and led Tessa down the stairs, and she took in the setup of the party house. Tessa had not seen a three story tall waterfall into a hot tub since her last trip to Dubai, when she was a younger woman with another career. Rodney and Little Hollywood were a lot more fun and smelled a lot better than any of the 'clients' she had 'worked with' over there. Tessa found a seat where she could see the goings on, and prepared to use her memory, since she did not have her recorders anymore. \n\nCindy whispered in her ear, \"The three celebrities that will appear nude are you, the TMZ reporter, and ...\"\n\nBefore she could finish, Tessa dropped her happy face and interrupted: \"You bitch! You tricked me!\"\n\nCindy spoke the final name loudly in Tessa's ear. She stopped talking and did a double take. Cindy continued, \"Her husband approves and is here to watch and enjoy. She is going to be doing less public work for the next few years to spend more time with their kids, so this is kind of a farewell appearance for a while, but she wants to leave her public something to think about!\"\n\nTessa's mind raced! This was freakin' huge! Not just a story, but multiple maximum print headlines with her byline. She knew these two superstars often came to Texas between films to go to clubs and listen to music in disguise, and that they were here for the auto race, but this was beyond hot. She also felt genuine respect for Cindy. If she could pull this off, who knew what other shockers might come later? Tessa needed to stay on her good side. \n\n\"That's amazing Cindy! Can you give me some background information? Whose house is this, anyway?\"\n\nCindy smiled. \"It belongs to a mysterious billionaire who will be here tonight, but as an anonymous guest. He throws several parties a year here, but this one has really caught the buzz, hasn't it? And although there will be lots of celebs here, some of the most interesting people here tonight may be those you have never heard of before. Don't overlook them, as they may provide some hot story angles.\" Tessa realized that two of them already had. \n\nCindy moved on toward the entrance as the first guests passed through the thick two story tall front doors. Each one stopped and stared, just as planned, at the volume of the space, the giant mural, the stage, the hot tub waterfall, and the pool and the indoor outdoor swim out. The men especially were transfixed by the pool full of naked Phi Phi pledges swimming about and splashing each other. It would take almost an hour for all the guests to filter in and look around to see who else was here. As suggested in the invitation only tweets, most of the women were dressed as 'the sexiest you that you can be' with knockout racy costumes and garish masks that hid their identities. The men were mostly in 'Texas tuxedo' of a tux jacket and blue jeans, which the F1 crowd had taken to like ducks to water. Many had added Stetson hats with or without team logos. \n\nThe huge left side of the house was a giant north facing four story high glass curtain wall, but for tonight's party, it had been covered with a huge expanse of drywall, which served several purposes. On its face, literally, it was a giant mural which looked like a cross between a New Yorker distorted map cartoon and one of those 'Welcome to Austin' post cards. It showed Austin as the center of the universe, Texas as about 75% of the area of the known universe, and few distant points, all of which happened to have either F1 racetracks or the HQ of one of the constructors or major sponsors. The Circuit of the Americas racetrack was prominently featured east of town, as was the university and other landmarks familiar to the race goers, and historical landmarks like the Armadillo World Headquarters and the Vulcan Gas Company. But behind the wooden studs and drywall supporting the mural were a big brute force jamming array which would make getting cell phone calls, Wi-Fi, or any other kind of wireless transmissions in and out of the party practically impossible; powerful infrared and ultrasonic sources that would confound at least 98% of the autofocus systems on cell phone and other digital cameras; and a huge set of advanced video cameras pre-focused and hidden by the features of the mural that would take footage of the stage, dance floor, and party areas. All of the rest of the wall space inside the house was covered with posters and graphics that were half F1 racing themes and half Austin and Texas themes. There was a temporary metal interior wall to the right, completely blocking access to the study and elevators that led to the sub basements and the tunnels to the other house we had found during the Halloween party. \n\nEach of us had a few 'discretionary' invitations in addition to those purely crafted to create buzz and stories after the party. Mille had invited her Phi Phi pledges to do their nudie duty, and several other friends, including Dana Duke, the hottest golfer I knew. Mei Ling came with Cisco, who I had invited, along with Oiler and Gretchen, Kevin and Lou, and Abelard Peters, and Ivor Greentree. They were all very excited to get the invitations, although Abelard and Ivor did not know exactly how they got them. I decided not to push the issue with Peggy. I also had to decide who to greet as Master and who to keep in the dark about my 'secret identity'. \n\nDirectly in front of the entrance was an area set up like a reception line, with a \"clothing check' counter manned by more naked Phi Phi girls in electric blue face masks, where people could leave their clothes and shoes and enjoy the hot tub and pool unencumbered. About half of the guests so far were doing so, the women keeping their masks on, and the men donning little black 'Lone Ranger' face style masks handed out at the clothing check counter. When almost all the guests except those that were trying to be more than stylishly late had arrived, Cindy took to the stage in a stunning French Maid costume that left little to the imagination, save her face covered by another electric blue mask. \n\n\"Ladies and Gentlemen, welcome to the 'addicted to' after party! We will have several stage acts, several sets of music for dancing, and a finale' that will leave you wanting more, and hoping to get invited next year! The crowd cheered lustily. \"First, a music video by one of the bands that will play live a little later, and will soon be known all over the world. I give you The Goompers!\"\n\nA big silver screen rolled down like a curtain behind the lectern where Cindy had been standing, and the Goompers video that had been shot at the UDP Halloween party began to play, with the audio booming from some amazing speaker arrays. Soon almost everyone in the audience was tapping their feet and enjoying the video. I found it strange to see myself larger than life on the silver screen, but was even more impressed with how my three girls looked. There was a good deal of conversation about the video, and when it ended, the girls and I made our entrance down the long stairway opposite the hot tub waterfall, to much muttering both of the audible and the Suzie varieties. I had decided to try to remain the strong silent type to protect my secret identify, and I was getting to be really good with twirling that cape. \n\nSuzanne made an introduction to the next act, the Chiksee Dix, and there was a rabid reaction from the audience. The band's costumes were highly arresting if not frankly disconcerting. They were keeping it weird indeed. They had on plum purple bikinis like Lou had worn to the lake, except with nipple cutouts and transparent plastic dick pouches, which I guess would soon be no longer needed. I shivered at the thought. But the music was strangely beguiling, and they got a standing ovation, so to speak. Then the Goompers came out and did a live set while the audience danced, hit the food and drink area, or splashed from pool to pool. We sat in some tall director's chairs on the darkened stage, waiting for the music to end and our 'sexual fortune teller' act to begin. \n\nCindy Nelson had indeed loved the idea for the fortune teller bit, and she had certainly found some ways to improve it. She put Millie together with a screen writer from the ESU theatre arts program, who interviewed Millie like a 'method actor' to 'discover her motivation'. What she learned blew her away, and somehow she tapped into Millie's own little personal journey and sexual awakening, and then wrote it up like an improvisational stage play with a riveting introduction that was guaranteed to get the audience's attention. I read the schematic script and thought it was killer, but the dress rehearsal with stand in women had affected me even more strongly. Now, with a huge and excited audience listening in hushed anticipation and the real and motivated women in attendance, I knew something special was about to happen, and I hoped my Suzie senses and intuition would prove to be up to the task.\n\nSuzanne, at first seemingly alone on stage brightly spotlighted in that incredible red leather outfit and mask, sitting up high in a tall black leather director's chair, reached out and grabbed the audience with her commanding stage voice, with a little added throaty inflection. \n\n\"Ladies and Gentlemen, we now come to a special part of our evening together. This is an intimate gathering, in a very special and intimate setting, and we are about to pull back the curtains on a very intimate subject: true and lasting love and sexual satisfaction. We will pull no punches in our hard hitting search for the truth, and the brave women you will see on our stage tonight will reveal their most secret desires, as our mystical Gypsy Sexual Fortune Teller helps them find their true sexual needs and the way to find true fulfillment.\"\n\nThere was not a whisper anywhere. She had them from \"Ladies and Gentlemen.\" \n\n\"The stories you will hear tonight are the true stories of real women. Their faces and identities will be concealed, but nothing else will be, as you will soon see! But first, let me introduce Madam Mons Veneris, the sexual soothsayer!\" Another spotlight suddenly fell on Millie, seated on another tall leather director's chair in her glinting and sparkling all metal fuck toy costume and grey leather hood, complete with silver and gold nipple clips shining and reflecting in the lights, and the gold and silver rings around her pussy and anus clearly showing her starkly exposed body. There was a massed intake of breath from the audience. \"Although she is blindfolded by her leather hood, her mystic talents will let her see right into the heart and soul of each brave woman that will appear before us!\"\n\nSuzanne uncrossed and re-crossed her legs casually, but instantly I realized that the little zipper covers in her costume's leather bikini bottom had been removed, and so did everyone else in the audience. I could feel her lusty and excited Suzie signal as her exhibitionistic streak got out, and I wanted to reach out and touch her right now. She continued \"Everyone here has heard the old saying about a man 'thinking with his dick', haven't you?\" There was nervous laughter. \"In fact, some of you men just did, didn't you?\"",
        "\"Women like to romanticize it by saying 'the heart wants what the heart wants' but let's make things crystal clear, shall we? Sometimes it's more correct to say that 'the pussy wants what the pussy wants, and that is not always the same thing that the heart wants, or what we think we should want, is it, girls?\"\n\nThe silence was even more profound. The elephant was in the room.\n\n\"So as you hear these women tell their stories, and discover their real desires, ask yourself if you would have the courage to confront the truth the way they are doing. See if you could make your heart so open and your desires so known to your friends and lovers, and thus perhaps find a way to your own true happiness and fulfillment. Madam Mons?\" \n\nMillie stood and spoke in a commanding voice of her own, with every eye in the room riveted to her. \"I have had my own awakening, and discovered what were at first some very disturbing things about me and my needs. But the reason that they were so disturbing is because they were wildly exciting and I was falsely denying them! And now that I have learned and accepted my true needs and desires, I am free to enjoy that excitement fully and without guilt. I have been fortunate to find close friends and lovers that have seen me revealed, with all my kinks and secrets, and have shown me true love and acceptance. For that, I must acknowledge my trainer and Master!\"\n\nA third spotlight fell on me, seated previously unnoticed between the two of them, in my black leather outfit complete with shoulder pads, big black mask and cape. I sat up straight like my mother always taught me, and tugged on Millie's and Suzanne's leashes and nipple chains, graphically showing the audience our relationship. I heard gasps and whispers from the crowd. Then another spotlight fell on Lara, in her white leather sex suit, and I tugged on her leash, too. Another set of envious groans came from the crowd, and a symphony of massed Suzie signals crashed into me from the audience. I lost my breath for a moment when I realized I was hearing not only the female signals, but the males, too. My now almost perfect links with Lara, Suzanne, and Millie had not only developed my sensitivity and ability to read other female signals, but the signals from males as well. I was quite frankly frightened and suddenly starving again. There were no pockets in this costume to hide those little sugar envelopes.\n\nMillie continued \"My Master will not speak, but he will be using his power to help me penetrate the clouds and obfuscations that these women have been using to deceive themselves and others. Together Master and I will see their true needs and desires, and I will channel them, and make them known to these women, and to you. We respect them for being willing to take a risk to know the truth, and we will do our best to help them! And they also know that if they try to deceive us or themselves again, Master will know it instantly!\"\n\nRecognizing my cue, I stood, and Millie, using her leash as a guideline, rose and walked over to me. She turned to the crowd, saying \"And now I show you my fealty and surrender to My Master, as only through complete submission to my true nature did I find complete freedom and true satisfaction!\" She kneeled before me, looked around at the audience, and then repeated the ritual she had performed at the UDP party, taking my big silver metal codpiece into her mouth until it was completely down her throat. The lights dimmed, and the strobe at the end of my cock cover flashed, beaming pink and deep red through her throat and neck, bathing the stage in that eerie, almost fluoroscopic glow, and taking the crowd's breath away one more time. My new sensitivity to male signals now revealed a lot of envy. \n\nThe reaction was much stronger than at the other party. This was a much larger and more stimulated crowd that had arrived already expecting an atmosphere somewhere between Carnival in Rio and an all out orgy. The sudden cacophony of Suzie signals threatened to give me vertigo, and my light headedness was not helped by the fact that I suddenly had an instant erection, almost painful against the restricting metal cock piece. I heard some kind of signal from each person in the crowd, loud and clear, and was glad I did not have to speak in this bit, except privately to Millie. I was now worried about being able to selectively listen the individual women on stage, by shutting out the incredibly loud Suzie signals from the crowd.\n\nWhen they regained their wind, the crowd muttered excitedly, only to be silenced again as the first woman volunteer climbed up the steps to the stage. She was tall, very shapely, and stark naked, obviously a natural blonde, with a white leather hood on that had small cutouts for her mouth, nose and eyes, and the hood also concealed a small wireless microphone, adjusted for a narrow frequency notch in our jamming profile, so her every utterance would be clear to the crowd. Following the stage ritual, she walked up and kneeled between Millie and me, saying \"I submit myself as a candidate for examination and beseech you to help me find the truth about myself!\"\n\nMillie went through Cisco's research notes on this woman, and our prepared script of basic questions, while I tried to tune into the candidate's Suzie signal. \n\n\"How old are you?\"\n\n\"Thirty\"\n\n\"Are you married?\"\n\n\"Twice divorced\"\n\n\"Why?\"\n\n\"The first one cheated on me and the second one because I cheated on him, and then he punched me.\" A big sigh escaped her lips, made to sound even bigger by the microphone and amplification. The audience was dead silent, and seemingly spellbound. \n\n\"Did you love them?\"\n\nShe drew in a sharp breath. \"Yes, or at least I was convinced that I did.\"\n\n\"Did they satisfy you sexually?\"\n\nShe sobbed a little. \"Occasionally they did, but not very often.\"\n\n\"What did you want that they did not give you?\"\n\nA long silence, then \"I'm not sure I know.\"\n\nI tugged Millie's chain, sharply and in such a way that the audience could not fail to notice. Millie said \"Yes you do! Tell me.\"\n\nAnother long and shuddering sigh escaped her lips. Suddenly I was connected to her Suzie. I tapped into her Suzie 'sexual event recorder' signals and reviewed her history. Her two husbands had been fairly conventional lovers, the first one wanting only missionary position sex under the covers. When he wanted something a little more exotic, he apparently took a mistress, never hinting to his wife what he had in mind. Her second husband was roughly the same, only when he grew bored with her sexually he simply withdrew, but remained faithful to her. When she took another lover, he felt betrayed and struck out at her, literally and figuratively. It had been a nasty divorce. \n\nFinally she said, \"I wanted more!\" almost shouting. \"I wanted.....\" and then she sighed again. Her Suzie carrier came up strongly and it was modulated with images of her and a woman and man, twisting and turning together. First they both kissed the man, and then his cock, and then she kissed the woman's breasts while the man penetrated her, and then they switched positions, and then another variation appeared, and another. I spoke to Millie sotto voce through our headsets, telling her she wanted a man and a woman at the same time.\n\n\"Tell me what you wanted!\"\n\nShe literally covered her mouth with her hands, as if to pantomime that she could not speak it aloud. \"I can't....\"\n\nMillie spoke again. \"Did you ever tell your either of your two husbands what you wanted?\"\n\n\"Oh, no, never! They would have thought I was sick and perverted, they would never have considered....\" she stopped and sobbed piteously. \n\nMillie said loudly \"You wanted a woman and a man at the same time, didn't you?\"\n\nThe woman sobbed. Millie went on, \"You wanted to kiss a woman and a man, you wanted to go down on a woman and man, you wanted to kiss them while they fucked each other, and have her kiss you while he fucked you, and you wanted...\"\n\n\"Yes!\" the woman screamed. \"I wanted what I could never have, is that what you want me to say?\"\n\nMillie paused. \"What about it, men in our audience? If you were seriously dating this lovely young woman and she had come to you, and said something like 'I fancy you just fine but I would also like to bring another young lady to bed with us occasionally' would you have considered it?\"\n\nOne of the young guys in the front row, who if my remembrance of some of the magazine articles was correct was one of the top ten Formula One drivers in the world shouted \"Too right! I would have married her straight away!\" There were several enthusiastic male shouts of agreement. He continued, \"And I'll wager we would still be married, too!\"\n\nThe woman sobbed again. Millie spoke softly \"You are very attractive, my dear, certainly to most of the men in the audience, and to many of the woman too, myself included! Come here!\"\n\nThe woman shuffled over and Millie hugged her, and then kissed her sweetly, but not in a completely chaste manner. \"Will you promise to tell the next man or woman you fancy what you really want?\"\n\n\"Yes\", she sniffed.\n\n\"And will you always remember that the being honest about your desires, whatever they are, always works better than keeping them hidden? Show the audience you will keep your promise by submitting to the Master as you saw me do!\"\n\nWhoa. That was a total ad-lib on Millie's part. But I had a duty I supposed, so I got up out of my chair and stood tall, thrusting my hips forward. The woman kneeled in front of me, and looked me right in the eyes. I took her head in both hands and smiled at her, although given my mask I'm not sure she saw it. When she took my silver cock cover in her mouth she did it with such verve and depth and enthusiasm that I almost forget to switch on the strobe light. Her Suzie signal blasted like a firecracker going off inside my head. I let the strobe run a little too long, fascinated with her signal and the way she was grabbing my butt cheeks with both hands. When she stood up, the audience cheered loudly and lustily. She raised her arms in a victory salute, showcasing her rock hard nipples, and stepped back toward her seat. \n\nThe next woman took the stage slowly. She was also petite, with fair skin and honey blonde hair, and also wearing a white leather hood with slits for her eyes, and already naked. I tuned into her Suzie signals. What a shock. She had a clear and easily perceived carrier, modulated with unmistakable images of her whipping men, insulting and humiliating them, using her stiletto heels to punish them, then forcing them to kiss her high heels, teasing them by making them kneel to kiss her pussy, and teasing them for hours before finally giving them a quick hand job and then walking away disdainfully. Cisco had pulled all her browser history, and she visited many websites that portrayed such domination scenes, including those that depicted the woman donning a strap on dildo and penetrating a restrained man very forcefully. \n\nMillie began her questioning. \"How old are you?\"\n\n\"Forty. I have also been married and divorced twice.\"\n\n\"Were you sexually satisfied in those marriages?\"\n\n\"No. My husbands were, but I was not!\"\n\n\"Did you tell them what you wanted that you were not getting?\"\n\n\"No.\"\n\n\"Did you know what you wanted?\"\n\n\"Yes, but I was certain they would never agree!\"\n\n\"What was it?\"\n\nShe drew in a long and halting breath, and the audience was completely still for a moment. Then she said loudly, \"I wanted to dominate them, humiliate them, make them worship me, and serve me!\"\n\nI dramatically shook and pulled on Millie's leash while whispering to her through our headsets, and Mille said, \"You are not telling me everything, are you?\"\n\nThe woman drew in another huge breath. \"I also wanted to put on a strap on and fuck them in the ass!\"\n\nThe audience mostly reacted with shock, especially the men, but two women were heard to say \"God yes!\" perhaps not realizing they had spoken aloud, and I heard three male signals pinging away excitedly, in addition to the several females. I spoke to Millie again, and she continued.\n\n\"This is not totally unheard of, my dear. First, Master warns me that you should never go to 'hook up' web sites for this sort of thing. It is too risky physically, and the people you meet will not be candidates for any kind of stable relationship, which you also want, yes?\"\n\nShe cried, \"Yes, but I now realize that I can never have that!\" and then she blubbered some more.\n\n\"Nonsense!\" Millie yelled at her. She paused as I spoke to her again through our headsets. \"There are in fact at least three males in this select audience who are physically fit and accomplished professionals who are highly attracted to you and would willingly submit to you on a long term basis. You must learn to look for the signs of this sort of desire in males, and give them the idea that you want what they want, too. They are out there, my dear, and you can have them on your terms if you study and look hard enough.\"\n\nMillie paused, and then said, \"And I am going to tell you how! The next time a man asks you out on a date, wear a long dress and black high heels, and be charming and sexy and excited as though you already knew he was the man who wanted to give you what you really want from him. Then when he takes you home, ask if he wants to kiss you good night. If he says yes, invite him just inside your door, where you will have set up a little chair or footstool. Pull up your skirt and put one high heel up on the stool, and look at him challengingly. If he looks worried and leaves, he will only think you a little strange. But if he swoons and dives to kiss your boot, then you've caught a live one, haven't you?\"\n\nThe woman's breath resonated through the microphone in her leather hood, and resounded through the speakers. Several women in the audience groaned, and the woman said \"I can hardly wait for my next date!\"\n\nA male voice in the audience said, \"How about tonight?\" and everyone laughed. I heard a beacon male signaling for female Suzie signal directed at the woman on stage, and I also thought I recognized the male voice!\n\nThere was a lot of conversation as the next woman came up the stairs to the stage, and there was a line of women forming at the base of the steps who wanted to go on next. Our Phi Phi 'usherettes' were having some trouble keeping order. The next subject was very tall, not as tall as Gretchen, but clearly over six feet. She had long dark hair up in a braid, a very full figure, and as she mounted the steps I could see she that her pubic hair was shaved clean. She had a white leather hood, and she stood tall and proud with her legs a little wider apart than her shoulders and her arms akimbo. The audience got quiet and listened intently, as Millie began her questions.\n\n\"How old are you?\"\n\n\"Twenty three, and never married, and only occasionally have I achieved any satisfaction. I am the reverse of the previous woman. I want to be controlled, dominated, taken, and used, but only in the bedroom. I want a relationship with an equal in every other way!\"\n\nShe had obviously been listening, and anticipating, and wanted to make as much progress as she could in the time she had. Smart girl. I shook Millie's leash dramatically and spoke in her earpiece. She looked at me haltingly, pausing for the audiences' benefit.\n\n\"Master likes you. You are the kind of girl that is perfect for a man like him. You should think of yourself as the ideal woman for many men: A perfect lady in public; a perfect slut in private and fully worthy of his fidelity and honesty. He regrets that his dance card is full, or he would take you on himself!\n\nThe woman sobbed and fell to her knees, reaching at my boot. She slipped something inside, and then stood back up.\n\n\"Master says you must learn to recognize real strength in men. Not show-offs or bullies, or braggarts, but those with calm, quiet strength. If you are attracted to a man for all his qualities outside the bedroom, especially his being honest and forthright with you, and then he asks you openly and honestly to completely give yourself to him sexually, you will know you have found the man for you. Master says that will be a very lucky man. You may now kneel again and acknowledge your debt to the Master!\"\n\nShe sprang forward as I stood, and literally quivered as she knelt before me. Her Suzie signal flamed loud and clear, and her arms quivered as she grabbed me behind the knees and took my cock piece in her mouth. I hesitated before turning on the strobe and spoke to Millie again, and she relayed my words to the audience.\n\n\"This is a message to all the men in the audience. There are many women like this one who are looking for a strong man to make them happy. You cannot find them if you are not strong, kind, calm, and honest. You must act that way toward every woman you meet, because she might be the one that will give herself, her everything, to you. When you are confident that she should respect you, and you know you want her, ask her to give you everything you want sexually. Tell her she must give you everything you ask, and let you take her any way you desire. And then demand one more thing: that she tell you everything she wants. All her fantasies, just as you must tell her all of yours. And then you work to make it happen for her, and be grateful for everyday that you have with her!\"\n\nI turned on the strobe and grabbed the woman's head, pushing myself even further into her mouth. Her Suzie soared, and the signals from the audience became almost overwhelming. She finally got up and turned, walking back down the stairs. Several men called out to her, asking to meet her. \n\nNow there really was a pushing match between several women at the base of the stairs. Cindy sprang into action, with some help from Little Hollywood, and got things under control. Our final female subject walked up the steps. She was of medium height, and had a medium but attractive figure, but with bright coppery red hair and a nicely trimmed bush that matched it perfectly.\n\nShe began, as the first one had, by saying \"I submit myself as a candidate for examination and beseech you to help me find the truth about myself!\"\n\nMillie went through her script. The woman had never married at 35, was at the peak of her natural desires, but very unfulfilled. Millie finally said \"Tell me what you really want that you have never had!\"\n\nThe woman sobbed, then began, \"I want to have people see me have sex, to be naked and exposed, to have them know it is me and be shocked by how brazen and slutty I am. That gets me so excited! All the halfway decent sex I have had was when I imagined that people were watching me.\"\n\nMillie paused and then said, \"Do you want to be a stripper, then, on stage, or a porn star, perhaps?\"\n\nShe paused. \"Not really. If it is all strangers watching, it isn't really that exciting to me. I want it to be people who know me, know who I am. That's really risky, but maybe that's why it is so exciting. \n\n\"Do you want to have sex with lots of men?\"\n\n\"Not really. I think it would be best to have one man, a trusted husband, to have sex with, but to know that other people are close by watching me have sex with him. In my fantasies he sees me exposing myself to other men, and that gets him very excited, too!\"\n\nI tugged on Millie's chain pointedly, and spoke in her earpiece again. She paused, did a double take, and then turned back toward the woman on stage. \"You are editing your desires for our consumption, my dear. You are telling us what you think you should want us to hear, instead of what you really want, aren't you?\"\n\nShe sobbed and almost fell down. \"But I can't actually, I mean it is too wicked, I don't want to tell...\" and then she was racked with sobs. \n\nCisco had scanned her porno browser history, too. It was mostly based on search terms like \"hot wife\" and \"cuckold\". She seemed to favor the more conventional 'husband gets really turned on by seeing his slutty wife with other men, and then they have hot sex afterwards' kind of stuff, rather than the 'husband is a feminized sissy who just watches' variety. Either way it was a pretty sticky wicket to play out on the long term relationship pitch. ",
        "When I was researching Lara's needs, I ran into a lot of academic discussion of this stuff. Like Suzanne and I had talked about, back when we were all animals on the savannah, trying to get as many of our genes into the next generation as possible, females might mate with many males in a night. From a purely sperm competition basis, and from the view point of an individual male, when you saw a female in season, you should mount her. If you saw another male mounting her, you should mount her right after him and try to displace his sperm with yours. So the theory went that the males that could be 'ready to go' right after another male were the ones that succeeded in impregnated more females, and in the next generation there were more males with that trait, and suddenly being excited about 'sloppy seconds' became a survival trait that was selected for in each successive generation. From an overall species viewpoint, many more offspring were produced in this way than the older scenario wherein one male killed off most of other males and then sired all the offspring. So eventually, through these two mechanisms, promiscuity became more common. This apparently was the way things were thought to have been in caveman days, and it stayed that way until the advent of agriculture changed the equations a bit. Since that change was just a few seconds ago on an evolutionary time scale, many males and females still had some of those 'sloppy seconds' trigger mechanisms in place, and some of them became very powerfully aroused by them, whether they thought it logical or moral or not. \n\nMillie laughed, but kindly. \"There is a big phallic symbol on campus with an inscription that says '\"Ye shall know the Truth and the Truth shall make you free'. Tell us the truth and free yourself and your desires!\"\n\nThe woman on stage screamed as if in childbirth. \"I want my husband to watch me being fucked by other men! I want him to get so turned on that he has to fuck me too, right after them. Thinking about it gets me so turned on that I can't help myself! I fantasize about it all the time! I am evil and no man will have me! I am so ashamed!\" She screamed and sobbed again. Her Suzie carrier was replete with such scenes, but in each there was a man standing and watching her exploits, and then he would take her strongly, and they would huddle together and sleep of the rest of the night. \n\nA voice with an unusual accent called out a seemingly involuntary cry of \"Mother of God!\" and then was silent. I felt a sharp male Suzie signal, like a rapier directed at the stage, signaling fulminating arousal and excitement focused on this woman. I spoke to Millie through the mouthpiece, and she repeated almost word for word.\n\n\"Do not despair, sister. You are not alone in your desires, and there are some men out there who want exactly what you do, and are just as strongly excited by it as you are. Finding them will not be easy, but it can be done. Come and submit to the Master for a moment, and imagine that your special man is watching!\"\n\nShe fell to her knees and desperately swallowed my cock piece, grabbing the top of my boots with both hands and anchoring herself to me. When I turned on the strobe her heartbeat raced in synchrony with its pulses, and her Suzie signal was so strong it almost knocked me out. Like Mrs. Douglass had tried to teach me just a few months ago, there are some things that only a few women want, but they desperately need and want those things.\n\nThen it seemed a dozen girls fought to be the next on stage, and there was some pushing and shoving in the ranks. But that was all the time we had available, and all the subjects we had planned for. Millie teased it shamelessly. \"That's all the time we have, this year. But next year we will do this again, and maybe help a few more women to find peace and satisfaction. Now, we will have a long set of songs for your dancing pleasure, and then our musical finale, which you don't want to miss one second of, believe me!\"\n\nDJ DeeRay, apparently the current hot craze spinner of the club set, took the stage and began to play a mix of Techo-pop, Electronika, Rap, Big Band, and other stuff I could not describe or categorize, but it all had a pounding dance beat, and people took to the dance floor in droves. Cindy Nelson and the girls had even scripted this, and we were all assigned to go out and dance with other invitees and not each other, so we could gather the latest gossip and gauge the reactions to the party so far. I was not prepared for the number of women, and a few men, who were desperate for a dance with the Master, but Cindy was. She had actually set up a little table, and had the hopefuls queued up, and a no cut in policy in place.\n\nThe first in line was none other than Marie Oroterrassier! The first song was a slow dance, and she plastered herself to me, grabbing my hips and pulling me into her. She clearly did not know who I really was, and her silent Suzie totally belied her frantic actions. \"I want you to punish me, Master, make me you slave!\" she said.\n\n\"Did you watch the other women that were just on stage?\" I asked her.\n\n\"Yes. It was very exciting!\"\n\n\"But then you must realize that I know you are lying to me! What do you really want?\"\n\nShe was taken aback, apparently not used to being confronted, and fell silent. I felt Suzie signals from people all around me, conveying varying levels of arousal and carrying many scenes, almost in the background noise but still clearly discernible to me. I realized that my Suzie receiving capabilities had jumped to still another, even more advanced level indeed. My stomach growled. Marie's Suzie stayed completely silent, betraying no desire for anyone at all, much less me. Was she so caught up in playing games and manipulating people that she had no real desires of her own at all? I didn't detect anything. The first dance ended with no further revelations, and I felt a chill, and looked forward to another dance partner.\n\nThe next up was our old acquaintance Penelope Peters Perabo, dressed in what was clearly her knockoff version of Millie's metal fuck toy get up. She pulled it off surprisingly well for being 50 plus, her body still tight and tanned, and the parts hidden by her bathing suit providing lovely highlights under the metal pieces. \"You haven't called me for our lunch, Robbie!\" So much for my secret identity! \"I would hate to have to talk to the tabloids about all this!\" I tuned into her Suzie, and heard a fog of extraneous signals. She was gaming me, figuring to manipulate me with threats and extortion rather than being honest with me. Testing my new capabilities, I tried to drill down through the noise and discover her real needs. I finally found a carrier signal, somewhat suppressed, that showed her restrained, on display and totally helpless, unable to move, while I teased and taunted her, then penetrated her forcefully. \n\n\"Penelope, you should know you can't deceive or manipulate me! I told you in my email I was very busy for the rest of this semester. Perhaps we can get together later after New Year's. You are a lovely women but I respond best to honesty. Perhaps sometime when you are tied up, I can learn more about you?\"\n\nShe spoke quickly. \"You mean when I am not tied up don't you?\"\n\n\"No. When you are ready to be honest with me, we will talk further.\" Her Suzie slowly ramped up, as she realized that I must somehow know what she really wanted. I was not even sure she had really admitted it to herself yet. Was she another one in my future pipeline, perhaps?\n\nThe third dance partner was someone I did not recognize at all when she slipped into my arms for another slow dance, and old tune about a 'Mean Mistreater' sampled and then rapped. But when she spoke I was thunderstruck! I recognized her voice instantly. It was the actress who played a hot but harried mom in her thirties with two kids and a wacky hubby on a sitcom that my family had often watched on TV when I was about twelve. I had imprinted on her like a young duckling, and even though she was prim and proper on the show, I used to beat off incessantly to thoughts of her in my bed. She had been on a game show for a while and I guess she was considered a 'B List' celebrity now, but she was on my A list for hot and always would be. Dancing against her got me hard in an instant, but my cock piece provided a shield from instant attention. \"I love your outfit, Master!\" she began, giggling. There was a Suzie blast from her, and I instantly knew that the shy suburban housewife character had not been typecasting. \"What would you command me to do?\"\n\nThe thought came instantly to mind. Would she do it? \"First, I want you to kiss me!\" She did, and wonderfully. \"Do you know who Cindy Nelson is?\"\n\n\"Yes. She talked to my agent, who got me invited to this party.\"\n\n\"I want you to go find Cindy and tell her you want to appear in the final number. You will have to hurry to get into makeup in time!\"\n\nHer Suzie blasted even stronger. \"I already turned them down, I....\"\n\n\"I want you to do it for me! I would love to see you up there!\" She kissed me again and then ran to find Cindy.\n\nI danced with a few other girls, none as memorable as the first three, and then Cindy announced a 30 minute break before the final musical number. My stomach growling, I headed for the appetizers. I saw the camera crews setting up hand held cameras near the stage, with Tess and the TMZ reported on them like ducks on June bug, telling what kind of shots they wanted and that they wanted them immediately. I guess it really was a hot story. They convinced the crew to shoot a teaser segment for each of them with empty stage as a backdrop, and began their spiels as I passed on the way to the calories. \n\nI was midway through my second plateful before I looked around to see who else was there. I recognized Ivor Greentree, and saw Spear Overtop, dressed as a monk, or some such. I went over to Ivor and spoke, disguising my voice, I hoped. \"Hello Ivor\"\n\nHe looked at me funny. \"Do I know you?\"\n\n\"No. But I hear you like our fair city, especially the girl watching?\"\n\n\"Aye, you got that right. Bloody fabulous!\"\n\n\"Well, don't miss a second of the final stage number then. There are a few lovelies in the chorus line that are not to be believed!\"\n\n\"Like who?\"\n\n\"Well, did you see the little short girl and big tall girl at the track that all the Italians went crazy for?\"\n\n\"You mean Gretchen and her friend?\"\n\n\"I don't know their names.\" I hoped my voice was sufficiently unrecognizable. \"But they will both be in the chorus line in the final number, high kicking in the nude! Along with Julie Angel, the movie star, and two reporters from TMZ and the Tattler, and the woman who led Bob the Knob's running group, plus a few more surprises!\"\n\nIvor looked stage struck for a moment, then said \"Mother of God!\" I knew I recognized that voice. He grabbed the shoulder pads of my costume, saying \"Can you do something for me, but keep it confidential? Can you introduce me to that last coppertop hellion that talked to you on stage?\" \n\n\"Do you find her attractive, Ivor?\"\n\n\"God, Yes. I am the man she is looking for, but don't tell anyone but her!\"\n\n\"Well, speaking of confidentiality, we made some promises to those women before they agreed to go on stage. But I might be able to arrange for you to meet her without violating those promises, but I can't specifically introduce you. Will you be completely honest with her?\"\n\n\"Yes! I am begging you, I have to meet her! Anything you can do!\"\n\nI had an idea, but I would have to think it through. I loaded up my third plate, and Spear approached me. \"Can I have a word?\"\n\n\"Of course you can, my fine and anonymous Monk! What can I do for you?\"\n\n\"I want to meet that second woman on stage, the little honey blond budding Dominatrix!\" Wow. I never intended to run a dating service.\n\n\"Well, we made some confidentiality promises to her, but maybe I can arrange for you to meet her in some context. Give me some time to work on it?\"\n\n\"Just don't take too long. I am already heartsick for her. I want to be that next man she asks to kiss her goodnight!\"\n\nI suppose for every woman there is a least one man out there, and vice versa. I would let my right brain work on things for a while. I polished off my plate, eschewing more water because I couldn't take my cock piece off by myself, and headed back toward the stage. I suppose I shouldn't have looked at the waterfall on the way, because now I really wanted to pee. Suzanne appeared at my side, and put her hands on one of the big holes at the back of my leather pants, caressing my butt cheek. I loved it. I loved her. She had taken her mask off, and was all made up in the garish fashion demanded by the final stage number, but had a hoodie tracksuit on to stay hidden until then.\n\n\"Hello Master!\" she said seductively. \"All this talk of fantasies and sexual honesty got me to thinking!\" She stuck her tongue up on her top teeth and leered at me. Suzie signal talents or not, that one little gesture always got me hot as hell, like I was a trained seal that wanted a fish. \n\n\"Since I love you, I am always trying to anticipate your wants and needs, just as I am sure you are doing for me, right?\" This is another one of those things I am always loathe to agree to in advance. \n\nShe leaned up to me and whispered in my ear. \"I think by now you may need to take a piss. If I help you with your costume, can I watch?\" I knew there was a reason that I loved this woman. We found a little individual bathroom, and locked the door behind us. She squatted rather than kneeled, and gently detached my silver and gold cock cover, keeping her tongue up against her top teeth. At first I was afraid that I might not be able to pee because I was too excited, but he pressure was building and I was able to let go a respectable stream.\n\n\"That is so nasty!\" she said. \"I like it! I need to be careful of my make up Robbie, so I can only use my tongue and not my lips tonight, I hope that's okay?\"\n\nAs soon as the last drop escaped I started to get hard again. She leaned over and licked the very end of my cock, never touching it with her lips, and never taking her eyes off of mine. How could she be any hotter? I had to restrain myself from grabbing the back of her head and forcing myself down her throat. I sent her a blast of the image, and she gulped. \n\n\"Hold that thought?\" she said. You know it, beautiful. Anything you ask. \"Oh, Robbie. I am going to be the most excited girl on stage, thanks to you. And I am going to enjoy every minute of it!\" \n\nWe made our way back to the stage and found our marks. It was crowded with both bands, with the lead singers from the Goompers and the Chiksee Dix out front, then the big chorus line, and then me behind the line. The line had been trained, stretched, and coached by three former feature performances from the SWTSU Strutpack, and was composed of the Phi Phi alum TMZ reporter and some Phi Phi pledges, Tessa Formby, Suzanne, Millie, Lara, Gretchen, and Julie Angel, the number one female box office attraction for the last five years, and my personal favorite actress and star of my teenage stroke sessions. My role was to dance around behind the line and give the dancers a few photogenic lashes with my whip, and occasionally trigger the strobe light in my cock piece. The music started with an up tempo drum solo, and the beat seemed to kick start my Suzie receiver, and suddenly I was tuned into the chorus line. They were individually and collectively into the party, the music, the dance, and a little exhibitionism. \n\nAs the bass guitar line began to pound, the curtain rose and the stage lights went up, and the girls began to dance to the beat. The song had originally been called 'Addicted to Love\" and we had modified it to be 'Addicted to Austin' and added a dozen verses. All of the dancers were in the same almost clown white face paint, with hugely exaggerated eye makeup, bright red lipstick, and short dark hair. Their makeup was so garish and identical that it made it almost completely impossible to recognize an individual woman, especially as the lighting primarily came from low and to the side. They all wore identical black dresses, which I knew were flimsy rags with hook and ring fasteners that would soon be discarded. The words to each verse were up in Karaoke style on two video screens, and the audience was urged to sing along. Our chorus line was a lot more active than the models in the original video, and when they tossed off part of their costumes, revealing their right shoulders and breasts at the end of the third verse, the crowd went crazy. The girl's Suzies did too, in a kind a mass hypnotism and temporary insanity. \n\nAt verse six, the chorus was completely topless, and at verse nine when the final rags came off to reveal them completely, the crowd sounded like a pack of braying hounds. The Chiksee Dix lead singer revealed a unique dance move that the other girls lacked, having apparently taken the time to master the trick of having (her?) breasts rotate clockwise, while (his?) cock rotated counter clockwise. I don't remember seeing that at dress rehearsal, and I think I would have remembered it. When the last two verses were accompanied with synchronized high kicks and whip lashes from me onto some of the dancers' butts, I was concerned that civilization might break down entirely. The entire audience was screaming at the top of its lungs, and the Suzie signals were so loud and raucous that I wanted to duck to avoid the impending stampede. Then spotlights trained up on the side walls of the waterfall came on, and each little table area had a stripper pole in it, with a naked Phi Phi coed, also in the garish makeup, high kicking in time with the beat. The audience was now completely agog. \n\nI discovered that I could tell from their Suzie signals which dancer on stage really wanted the whip, and was surprised to discover that they all did. Millie of course was completely incorrigible, almost coming with each stroke, and Julie Angel amazed me by being right there with her. Cindy had scripted the ending tableau, and I stood tall in the center of the stage while the dancers arrayed themselves standing, kneeling, and lying around me so each could touch my cock piece with one finger. We had rigged the strobe to sync with the kick drums, and it did perfectly, and I tried to crack the whip to the same rhythm. We all ended on the same note, with the dancers up on the side walls with legs saucily in the air, and Cindy said \"See y'all next year!\", and then the sound was quenched, the spotlights doused, the house lights dimmed, and the curtain came down, to massive applause and calls of \"encore!\", but we knew we had to leave them wanting more for next year. \n\nThe backstage lights came up and I saw Suzanne and Mille kissing Lara, all three of them an absolute vision, chests pumping, nipples erect, and skin flushed all over. I couldn't get my arms around all three of them at once, but I sure tried. Soon it was an all cast group hug and fondle, and I experienced for the first and I hoped last time the unique sensation of having one of the dancers press two wonderful hard nipples against my ribs while also pressing a hard cock against my hip. At least I had my leather suit on. We headed to the backstage area for the girls to get dressed, and everyone was talking a mile a minute. The plasma monitors showed a shot apparently taken from one of the TV station towers with a wide telephoto lens of naked people seen swimming through the glass side of the swimming pool that faced toward town, meaning they had finally located the party. We could see the sunrise coming in through the windows, and soon we heard two loud helicopters circling the house. Someone said it was from the local NBC and ABC stations, which were feeding live video to their morning network news shows. As we emerged from backstage, Tessa and the TMZ reporter were interviewing Julie Angel's movie star husband and the now clothed female celebs that had been on stage for later updates, some acknowledging that they had been up there nude and some just smiling and saying \"I'll never tell!\" and both reporters teasing later segments that would give more details and personal stories about the party. ",
        "The TMZ segment went out as teaser commercial for tonight's show, and Tessa's video went out about 30 minutes later, just about time for the early afternoon news shows in the EU. I saw Tessa pile into the limo with Little Hollywood and two taller women. Rodney found us and asked if we would like to come to an orgy, and I said I had mid terms this afternoon, so he drove us back to Lara's place where we had left our regular clothes. \n\nWhen we got to Lara's place Millie crawled into the trapeze and strapped herself in, yelling at me \"I defy you Master! I dare you to punish me!\" I raised my whip and a pulse shot through her pussy and her Suzie. I moved closer and tightened all her restraints so she was absolutely helpless, and she literally dripped with excitement. I got out a crop, a flail, and a set of nipple clips, laying them out on a table where she could see them all. \n\n\"Suzanne, Lara, come here at once! I need help to properly punish Millie!\" Mille quivered in anticipation.\n\nLara and Suzanne arrived almost simultaneously, and stopped and stared at Millie. \"She has openly defied me, and I must punish her severely, but I want to make sure I get it right. So I want to try things out on you two first before I work on Millie.\"\n\nI went behind Suzanne and pinned her arms behind her. \"Lara, put a nipple clip on one of her nipples and kiss the other one tenderly for contrast. Millie looked on in frustration, as Lara bent happily and worked on Suzanne. I then grabbed Lara by the hair and directed her mouth to my cock, and took over rolling Suzanne's nipple between thumb and forefinger. Lara kneeled and worked me in and out of her mouth, and still managed to reach a hand over to Suzanne's pussy. None of us had showered yet, and we were still pretty pungent from our dancing exertions. \n\nI could wait no longer. I tied Suzanne up to the trapezes next to Millie, spread her legs, and dove into her sweet pussy. She was wet and wild, and the stimulation from her show at the party had not worn off in the least. I could tell I had even more exquisite sensitivity through her Suzie, and soon my smart bomb tongue was hitting it right out of Orgasm Park, and sweet Suzanne was sneezing and twisting. Lara continued to suck my cock, and Millie watched and shivered, the only motion she could make locked in her restraints. Fully erect, I turned Suzanne slightly and entered her from underneath. Lara moved above her and stuck her long pink tongue into Suzanne's ass. Millie keened in desperate need.\n\nSoon Suzanne was on her third or fourth orgasm, and I took her down, kissed her, and strapped Lara in, right next to Millie. The Millie was forced to watch me take Lara, while Suzanne held Lara's legs apart for me. I felt like a part of Lara now each time I touched her, and I felt her heartbeat and her heat in my bones. My cock felt perfectly at home in her, and I looked haughtily at Millie as she could only watch me surge in and out of Lara. Soon I felt a wave of wetness from her, and her marvelous smell wafted up to me. For me it was sweet perfume, but I Millie's woebegone Suzie screamed need and torture. I would teach her to defy me. Suzanne moved where she could watch me slide in and out of Lara, and kissed her from time to time on the abdomen and thighs. Lara made another groan and magically she was coming again. Suzanne leaned in to taste Lara's sweet juices and Millie groaned even louder. Soon I was ready to come. I winked at Suzanne and she winked back, complicit in my plot to torture Millie even more. I groaned a flexed my legs, signaling that an ejaculation was building, and pulled out of Lara, aiming my shot at Millie's breasts. She leaned her neck out toward me in anticipation, and just as I came, Suzanne swooped in and engulfed me with her mouth, making sure Millie didn't get even see what happened, much less be touched by it. I groaned and pumped into Suzanne's mouth, and I could feel Millie's Suzie lament with each guttural noise I made. Suzanne could not resist rubbing it in. She smiled at Millie and said \"Thank you Master! That was a nice big one.\" \n\nLara kissed Suzanne, and I kissed them both, and then slapped Millie once strongly on the butt. \"I'm going to take quick shower. You two may serve me in the bath. Millie, you just hang out in here for a while.\" I could hear her screaming Suzie's frustration all the way into the bathroom. After the girls washed me, and I washed them, I just could not resist some ass worship. When I got out getting a towel and drying off, they were starting in on each other again. \n\nMy phone beeped and I picked it up. I had received an email from Asa Weltschmerz telling me that they had already stopped the sedative drip and he expected Dwight to wake up soon. Suzanne had to go proctor the exam she had written, so I would take off to cover Dwight while she did that, and then she would cover Dwight this afternoon while I took my last exams. The three of us said a tearful goodbye, since we would not see each other again until after the break. We left Millie literally hanging, although Lara had instructions to release her later.\n\n.....\n\nDwight the Dweeb Boy woke up, but he kept his eyes closed. It was a trick he learned early in life to convince his grandmother that he was too sick to go to his very boring elementary school. The last thing he remembered was jumping off the rooftop towards Pavel. He tried not to change his facial expression, in case someone was watching, because he wanted to take in all the information he could without moving. He smelled soap, some sort of institutional disinfectant, and floor wax. He listened carefully and heard phones ringing, but very faintly, and at least three different kinds of soft electronic beeping and booping noises. He tried to wriggle his fingers and toes, and it felt like they were moving, and that was a good sign. He tried to move his legs and discovered he could not. That was not good. Then he realized the muscles were moving, but the legs were not -- he was somehow restrained. Same story with his arms, but he could turn his neck from side to side very slightly.\n\nHe waited and listened and heard a few voices, both male and female, muffled, as if they were on the other side of a door. They seemed somehow familiar but he could not place them with certainty. He was not ready to open his eyes yet, for several reasons. He wanted to gather all the information he could about where he was now, and try to remember whatever he could, because if he opened his eyes, and someone from the agency was there to debrief him, they would never let up until he had gone over every detail ten times. He decided to give it a few more minutes. His big worry was what happened after he jumped, and how exactly he ended up here in what he presumed was a hospital room. He was wondering what would happen to him and his $100M worth of training. If he had been picked up by the local EMS, and there would be all sorts of photos, medical records, blood draws, x-rays, maybe DNA samples and even fingerprints, and associated police reports. He would be through as a 'no such agent' in the field. He would be doomed to the backroom: become a scenario geek, or a trainer, or homeroom cyber warrior, complete with an actual ID with his real picture and name on it, and commute to work every day from little house somewhere. But he would top out at GS15 and never achieve his goal of a really responsible executive position, and the kind of clearance he needed to satisfy his insatiable curiosity. \n\nOnly if he retained his anonymity could that dream continue. He was just about to open his eyes and start asking questions, when he heard a bump and detected air moving, and decided a door was being opened, as a totally unfamiliar voice was speaking as it moved briskly into the room.\n\n\"It is beyond strange. We have no idea who he is. We took all sorts of photos and samples, but they all just disappeared, along with his records. Dr. Weltschmerz told us to stop asking questions, and that someone will pick him up once we release him to travel and take him to a military hospital in San Antonio, but that officially he was never here, we never treated him, and he does not exist! He also says if he hears any of us talking about this patient, it will come up as a big minus on our next performance review.\"\n\nRelief flooded through Dwight's body. The stranger made a few clicking noises near the bed, and some more of the beeping sounds were heard, and then he exited the door and all was silent again. He wondered who the voice had been speaking to. He stayed still and silent, and counted out 5 minutes, then opened his eyes. It was a hospital room. He was in a big bed surrounded by an IV pump, a heart monitor, and some other stuff he did not recognize. There was a nurse call box and speaker, TV remote control, and a landline telephone on a little stand next to the bed. There was a device on the ceiling above his bed that looked like a cross between a small rolling crane and an engine hoist, and his arms and legs were trapped in a big body cast, leaving only his head and neck and his pelvic region free. The region just below his waist was covered with a hospital gown folded up and stuck to the body cast with plastic clips, and several big metal hooks were molded into the cast, and facing up toward the ceiling, and several other directions.\n\nHe looked to the left and saw the back of the door, and a little mirror and sink combo, with a toilet attached to the wall. He looked to the right and saw a window. Sitting next to the window, relaxing in a chair, was that ass clown punk, the ESU freshman and so called Master, with a pleasant smile on his face! \n\n\"Welcome back, Dwight!\" he said enthusiastically.\n\nDwight was crestfallen. If this freshman loser knew his real name, then all was lost!\n\n\"Don't worry, Buddy. Those nice clean cut fellows in Brooks Brothers suits that blocked off the catering trucks called somebody and before the local cops and ambulances got there, a real authentic looking ambulance showed up right pronto, and they strapped you and that Russkie piece of shit Pavel to backboards like when they take a player off the football field on Friday nights, and then took off with a siren goin' and everything. It was pretty early and there weren't that many people around to notice. Ain't it a fine co inky dink that all those guys were just standin' by waitin' for something to happen? Shazam! Then some guys in bunny suits and booties that Suzanne said ya' call 'scrapers' came and took all the evidence that you were ever there away in a big fake Cintas uniform company step van, with all sorts of special equipment hidden inside. So Suzanne knows your real story, and I do, and her father sure does. He gave me a truly amazing and totally serious ass come to Jesus talkin' to on the telephone about national security and what he called 'aggressive compartmentalization', and he told me to tell you that nobody else knows! Said that would sho' nuff be 'portant to ya!\"\n\nWell, that answers another question, Dwight thought. Pavel was in for some serious interrogation.\n\nDwight noted that Robbie had suddenly adopted an exaggerated Texas drawl and spoke much more slowly than usual. Maybe it made people take him lightly, or stop worrying, or something. Anyway, hopefully Pavel was in worse shape than Dwight was, and had a much darker future ahead of him. That would be somewhat satisfying. \n\n\"Shucks, Dwight, if you hadn't landed on Pavel's head to break your fall, that sidewalk might a killed ya! Plus he was just about to shoot me with that little .22 pistola of his. But all in all, I'm glad you finally woke up. We've had someone sitting up with you since early this morning. They had you on a sugar drip and some happy juice to keep you sleepin' and make sure your brain didn't swell up against your skull. Although Suzanne's dad did tell me that some of the guys where you work always have swelled heads! We had a good laugh on that one! \n\nPerhaps Ambassador Pliskin really had met the current top management team, after all. He smiled, and when he opened his mouth to speak he realized that his throat was really sore and dry, and his voice was hoarse. \"By the way, Robbie, you got away with it once, but don't ever take a .22 lightly again!\" He searched for the right Texas metaphor. \"If he had put a round in your head, it would have zipped around inside your skull like a BB fired into a bait bucket, and your brain would have been the shredded shrimp!\"\n\nRobbie actually looked thoughtful for a minute. \"Yeah, you're right about that. I got the same lecture from some red headed guy who said he was your boss, and Ambassador Pliskin, and from Dr. Weltschmerz, all with a much more precise discussion of the dispersion of kinetic energy and much better anatomical detail. But on a happier note, Dwight, it was pretty boring sitting with you, but it was sorta like study hall, so I studied for all my classes! I aced my exam yesterday, and I have to take two more in a little while, and then I'm ready to head out for Thanksgiving break. You did miss some really cool stuff, though.\"\n\n\"Like what?\" Dwight asked.\n\n\"Well, the Saturday qualifying, the race on Sunday, and the big gala event Sunday night where Sapiento and Erminia announced that they were giving $100M for a neuroscience institute at the new med school, the huge long lines at the airport when most of the race fans left, and ....\"\n\nDwight had to interrupt. \"Just how long was I out?\"\n\n\"The tennis tournament was Friday morning, and this is Tuesday.\"\n\n\"What else did I miss?\"\n\n\"The after party of all after parties! The mother of all after parties! It was epic. You can catch some video on the TMZ website, if you want. Suzanne's going to come over in a few minutes to watch you while I take my last exams. She said she was going to bring the party over to you. Maybe she's bringing you a piece of cake!\"\n\nDwight had nothing to say to that.\n\nRobbie drawled on: \"So after I leave here, I am supposed to forget all about you. Suzanne says she will never forget you for saving my ass from gettin' shot, though, but officially, you were never here!\" \n\nThat was somewhat comforting, but now Dwight was even more confused. What was going to happen to him next?\n\nRobbie stood up and showed Dwight some printed pictures. \"Thought ya'll might want these for your little ol' scrap book, pahdner, but Suzanne says you will probably memorize 'em and then dissolve them in acid or something. There's more to you than meets the eye, ain't there, Dwighto?\" \n\nThere was a print of the picture Dwight had received from HQ showing Pavel and his team out in the bright sunlight. How the hell did Robbie get that? And another picture of Suzanne, Lara, and Millie posed against a railing in bright sunlight. Did Robbie take those pictures? What was going on with this kid? Actually, even though Dwight had five years in the field, he was still only 25, so he was a kid too, he supposed. Guess there was more to Robbie than meets the eye, too.\n\n\"Let me ask ya' one little pregunta, there, buddy. I was hopin' Pavel would get a one way ticket to Guantanamo. Can you tell me straight up what is likely to happen to that Russkie bastard?\"\n\nDwight considered that. Robbie already seemed to know most of the story. There was no risk in answering his question, as long as he did it carefully. \"Well, I can't be sure, because that is going to be fully compartmentalized too, but I can give you a pretty good guess. First off, I don't think he will ever see anyplace as comfortable as Gitmo, or meet anyone that will be as nice to him as the USMC!\"\n\nRobbie smiled an openly feral smile. That look was a little scary, Dwight thought.\n\nRobbie said \"Tell me more, please!\"\n\nDwight didn't get to tell many stories, so he warmed to the task. \"My guess is that our Pavel is going to take a long and circuitous international cruise. Only it won't be on a cruise ship with a cabin on the Lido deck near the international casino! It will be a beat up looking freighter, probably Liberian registration with a mostly eastern European crew. Under that scruffy exterior, it will have perfectly maintained propulsion and communications systems, and very good radar and navigation equipment, and the crew will really know how to mind their own business. Pavel's cabin will be very nicely insulated and well down below the water line and he will be attended to by several specialists, probably from Serbia or Bulgaria, with very interesting skill sets. They will be fluent in the languages that Pavel speaks, with some practical training in 'electro-physiology' and 'aqua-massage', and there will be one MD and a paramedic to come in from time to time and check on Pavel. They will have a long list of questions they want answered, and they will be patient and very, very results oriented. They will all sail around together, never reaching port, until all their questions are answered. Then Pavel will go for a swim!\"\n\nRobbie smiled again, widely. \"You paint a very pretty picture, my friend!\"\n\n\"Oh, and after you leave here, you are going somewhere for rehab, under some other name, but none of us will know where or your alias.\" He stood and walked close to Dwight. \"Guess we can't shake hands until you get out of that cast, but Asa says you'll be fine after a little while! Thanks again, pahdner, I owe you one, and remember the Alamo!\" He walked out the door without looking back. \n\nDwight was lost in thought for a few minutes. He apparently had lots of broken bones, and was going to have lots of painful scar tissue to break up, but there must be no serious nerve damage. He heard about an agent who fell down an elevator shaft and even with six months of tortuous rehab, he never passed the tests to go out in the field again. Dwight would work his hardest to get back to duty. \n\nThen he heard footsteps approaching in the hallway. Loud, clicking steps, in the unmistakable rhythm of a woman's high heels as she strutted on a linoleum floor. At least that was the image that came to his mind. \n\nThe door to his room opened, and Suzanne Pliskin strutted in. \"Hi Dwight! Robbie texted me that you were awake, and you certainly have impeccable timing. I just finished proctoring my exam, and Robbie is off to take his last ones, so it's a perfect time for us to have a nice little talk!\" She smiled, and then the locked the door behind her. She picked up a little wash basin by the sink, and put a washrag and some warm water in it, and then put a dry towel over her shoulder. It looked good there. Anything would look good there.\n\n\"I was in a full leg cast once when I was a little girl. Not as extensive and that one, of course, but it did itch, and it was hard to get to where I felt clean. I'm going to give you a little sponge bath while we talk. It shouldn't bother your sense of modesty, after all, you have been watching me for a while, haven't you, Dwight?\n\nDwight started to answer, but never got the chance. \n\n\"You have seen it all, haven't you Dwight? My dad told me about what you 'OGA' guys do, but I never really thought about it in personal terms or experienced it until lately. Did you like what you saw, Dwight?\"\n\nHe opened his mouth, but as it turned out, just to draw a breath.\n\n\"You seem like a nice guy Dwight. My dad told me a little about your background, and that you should get a little better 'management optics' at your agency after this.\"\n\nShe set the washbasin on the little table by the bed, and began to unclip the hospital gown that was draped over the areas his cast did not cover. She folded the gown almost primly, and began to systematically wash him below his waist. It felt really nice, maybe a little too nice for comfort.\n\n\"Dr. Weltschmerz says there is no permanent damage from your little leap from the roof, at least to you, but you will have to work hard at rehab. That was a very brave thing to do, Dwight.\"",
        "She had just about finished washing everything, and was now rubbing him dry with a towel.\n\n\"You know the old saying about nice guys finishing last, Dwight?\"\n\nBy now he knew he was not really expected to speak.\n\n\"Well, I think they should finish first and last! And I am not attracted to bad boys like some girls; I am attracted to nice guys! Is it hot in here, Dwight?\"\n\nShe slowly and deliberately took off her blouse and skirt, revealing her amazingly tight little body barely contained in some lime green panties and a matching bra. Dwight began to respond, involuntarily.\n\n\"Dr. Weltschmerz says you have absolutely no nerve problems, Dwight, but I wanted to make sure, okay?\"\n\nAgain there was no need for Dwight to talk. He was having a little trouble catching his breath, anyway. She walked right over to him, looked him right the eye, and slowly slipped her bra off. He did his best to maintain eye contact, but eventually he just had to look down. \n\n\"Your vision seems to be fine, Dwight!\"\n\nShe put one hand on the top of his thigh, scratching it gently with a fingernail toward his groin. He felt his groin twitch and his butt muscles clinch.\n\n\"Spinal responses seem normal.\" \n\nHe had to lift his head up the slight bit that he could to watch her as her face seemed to dip down below the edge of his cast, and he felt her warmth breath on his lower abdomen, and trending down. He jumped to attention.\n\n\"Circulatory responses seem fine!\" she said happily. He felt one hand cup his balls, and the other touch his cock. \n\n\"In fact, Dwight, I'd say your circulatory response is very impressive!\"\n\nDwight could not believe this was happening to him. Maybe he was actually was fatally wounded in the fall, and this was one of those near death dreams he had read about. He also felt a little d\u00e9j\u00e0 vu, having spent so much time watching Suzanne with raging hard on. But he felt no guilt. After all, it was completely involuntary on his part, not that he wouldn't have enthusiastically volunteered for this duty!\n\n\"Dwight, you have seen me with Robbie, and you know I love him. In fact you have seen all of my 'proclivities' on display shall we say? But there is this one thing Robbie just won't do for me. He won't let me tie him up and just have my way with him. You, on the other hand, are just sort of ready and waiting for me, aren't you?\"\n\nShe laughed, and then he felt her tongue ever so gently touch his dick. This had to be a dream.\n\nShe laughed again. \"I am a bit of tease, aren't I, Dwight?\"\n\nShe dipped her head down even lower and began kissing his leg in mid thigh, just where his cast stopped. She slowly worked her way to his buttock, and then bit it, pretty hard. A shock ran through him.\n\nShe moved up and nibbled his earlobe. \"You know that I am, shall we say, an 'earthy' girl, eh, Dwight? So when the time comes that you just can't hold back, don't hold back. Okay? Especially the first time!\"\n\nDwight was still trying to process that, when she stood back a little bit and slowly removed her panties, and did an abbreviated version of her stretching routine for him. She moved around to the top of his bed and kissed him, sweetly, on the lips. \n\n\"It's a little different live versus on video, isn't it?\"\n\nGod was it ever. She was a tease, and an absolute genius at it. Dwight never thought he could get this excited. He almost wished he could get a photo, because he was certain his erection was the biggest he had ever had. But not so big that she couldn't do absolutely amazing things to it, complete with the sexiest narration he could imagine.\n\n\"Dwight, that is really nice. I think it was Mae West that said 'a hard man is good to find' and she knew the story, didn't she?\"\n\nShe was very thorough, and seemed to be systematically cataloging his response to everything her amazing mouth did to him. Soon she developed a routine that was steadily carrying him beyond the point of no return. He strained his neck forward as much as he could, and could see the top of her head at the apogee of her bobbing motion, possible the sexiest thing he had ever imagined, much less experienced. But soon it was pushed to a distant second place, as she tilted her face up and made eye contact with him, with a warm smile in her dark eyes.\n\nDwight lost it then, knew he was only a spectator, as he felt a tremor pass through his body like an elastic wave in an earthquake. She riveted him with her gaze, and he fought the natural instinct to throw his head back, because he did not want to break eye contact with her for even one millisecond. \n\nHer mouth broke contact with him for just a second, and she riveted him with her eyes, saying \"Don't hold back, Dwight!\" and the she took just the tip of him into her mouth, and hummed! Dwight almost passed out, but he luckily stayed conscious enough to experience every delicious instant. She smiled, she hummed, she sucked and twisted, her eyes never leaving his, with an expression on her face like someone was telling her a fun story. Dwight fought to avoid swooning as her cheeks hollowed and the suction increased, and he found he had nothing left to give her. He certainly would if he could. \n\nShe smacked her lips, a sound that burrowed right down into Dwight's solar plexus. He could not breathe, and his pulse pounded in his ears. \"You are pretty damn tasty for a secret hero, Dwight!\" and then she applied her lips again. Dwight had always been envious of Robbie's observed ability to stay hard even after this olive skinned goddess had so completely drained him. But then awareness dawned, as Suzanne held her mouth and lips fixed and did some amazing trick with her lungs and diaphragm, rapidly pulsing his cock back and back and forth over about half an inch of distance. Suddenly he was hard as he had ever been, again. It wasn't Robbie, it was her, and Dwight could do it too. What a confidence builder.\n\nShe popped him out and smacked her lips again, said \"You know, Dwight, it is very important that you not leave any DNA evidence here!\" and giggled again, and then moved up and kissed him on the lips sweetly. He might have been squeamish about this before, but she had so thoroughly devoured him that there was not even an aftertaste of his come on her lips. That actually wouldn't have mattered to him anyway, trapped in a body cast or not. \n\n\"Time for a little more nerve testing Dwight, specifically, I want you to flex your genioglossus. Dwight remembered that from anatomy he studied to locate the pressure points and nerve striking points he had learned for first aid and martial arts training. He stuck his tongue out as far as he could.\n\n\"Good! Now left, right, up, down, repeat! Left, right, up, down, repeat!\"\n\nShe put a foot on the head of the bed, stepped up over him, and slowly, tantalizingly lowered her glorious pussy onto his face. It was even better than he had imagined. The visual cues alone were enough to completely enchant him, as his eyes feasted on her supple legs, trimmed bush, and protruding and glistening pussy lips. But the smell was like catnip to a Manx, and the unconscious messages of the pheromones took him away on a hormonal cloud of excitement and lust. He just lost himself in it, total racial and spinal memory time. He was transformed into lust without sentience, and desire without end. He was not sure how long it lasted. He did notice that she began to flex the muscles in her legs, and quivered a little bit. That was magical. Suddenly her tasty flow increased slightly and changed a little bit in oiliness, and he heard her sneeze. \n\nHe wanted that again. He redoubled his efforts, and began sucking and biting gently in addition to the tongue motion. Soon she sneezed again, and another glorious wave of juice fell on him. Suddenly she stood up in the bed, kissed him again, tasting her own slippery juices on his face, and then turned around and lower herself onto him from the other direction. She put more and more weight on him, and he realized he needed to plan his breathing carefully. She just frankly and roughly began fucking his face with her pussy, mashing her pubic bone against his teeth and lips. She had two more orgasms, and he was a little light headed and now had a fat lip, just like he always got in hand to hand drills. He would wear this one with pride, though, and probably smile every time he got a fat lip in the future.\n\nShe disengaged herself again, and kissed him gently on the cheek. \"Sorry about your lip, Dwight. I did get carried away a little bit!\" She adopted a funny, hoarse southern accent he did not recognize \"You should put some ice on that!\"\n\nShe kissed his face very gently a few more times, and then spoke right in his ear. \"Dwight, I am going to fuck you now!\"\n\nShe climbed back over him on the bed, took a step onto the rails, and grabbed the hooks hanging from the lift attached to his ceiling, lifting herself over him like a beautiful and muscular spider. She eyed his huge body cast, and looked happily at his still maximum erection, and then positioned her legs almost perpendicular to his. She squatted slowly, checking her aim, and was soon paused right above him. His neck was sore from all that tongue protrusion, so he decided to 'lay back and enjoy it', as he seemed to remember some previous governor of Texas had advised.\n\nAnd enjoy it he did. Suzanne had leg muscles and balance like he had never seen, and he suddenly pictured his cock as Kagel exerciser, and she was one very advanced athlete. She really did just fuck him, with muscular control he could not explain, but could certainly enjoy. He was surprised and delighted by his staying power this second time around, and his confidence got another boost as he felt another burst of wetness and heard her intoxicating little sneeze. She stopped for a moment, and then sighed contentedly. Dwight certainly hoped she wasn't planning on stopping already. \n\nShe lifted herself off of him and his eyes popped open and he must have looked worried - he felt like a warm little puppy suddenly forced out into the cold. She stepped off of the bed, and said \"Don't worry, Dwight!\" and then took him into her mouth again. He thought he was still a long time from coming, but she quickly wore down his resistance, and he realized he was right on the brink, when she slipped a wet finger just slightly into his behind and he went off like a rocket into her mouth. He discovered he really liked earthy girls, as she drained him of everything he had, and he reached a level of both contentment and confidence he had never before thought possible. After some fine cuddling, she gave him a sweet kiss and then played with his nipples. He never knew he liked that, but he certainly did now.\n\nHe was spent in his release and just watched as she stood and reversed her moves and got her clothes back on. She kissed him on the check and said, \"I know this is usually your line Dwight, but none of this ever happened, okay?\" Then he heard the click clack of her heels on the floor, and heard the door close.\n\nA few minutes later, a tall, dark, and thin young lady walked in wearing a white lab coat. She smiled at Dwight, and when he realized how pretty she was, he smiled back, and wondered if she could smell sex on him. \"My name is Carmencita Escalante. I will be supervising your rehab. We'll be leaving here in about 30 minutes. At the rehabilitation hospital, you will be known by your cover identify as Nando Longomonto, the totally spoiled and utterly useless twenty five year old only child and son of the biggest asshole ever extant on the Texas real estate scene, and that's really saying something!\"\n\nShe began checking his vital sign monitor and reading the latest entries on his medical chart. \"We will limit your contact with the outside world, and even I don't know your real name, Nando, but Dr. Weltschmerz recommended me as your personal full time rehab counselor, and I have just signed the most complete yet confusing non disclosure agreement I ever heard of. I just finished my PhD at Texas State, and I can get you back to peak performance faster than anyone else can. I use some new and controversial techniques, and you will have to devote yourself to working hard and accepting a good deal of pain, but we will succeed, and that will be your reward. I'll be back in about ten minutes to supervise your transport.\"\n\nThey had stopped giving Dwight the 'happy juice' as Robbie termed it, but he was still on a natural high from the 'Suzanne juice' and nothing bothered him as they wheeled him down to an ambulance and they left the hospital ER entrance and went under the Interstate and then a few blocks north and then turned east. They entered a freeway, turned south, and soon were zipping along at what seemed like 80 mph or more. Dwight turned his neck to look out the window, and to his left he caught a glance of the tower and grandstands for the Circuit of the Americas. Missed the race, but at least I saw the track, he thought. After that there was little or nothing he recognized as familiar. About an hour later, they turned off onto a state highway, passed a couple of small town municipal airports, one with a surprising number of corporate jets parked on the tarmac, and then into the business district of a small town. He smelled smoked BBQ and something else not so pleasant -- sort of sulphurous but not at all acidic.\n\nHe asked the ambulance attendant what that smell was. \"That's the smell of sweet crude, Mr. Longomonto. There are quite a few old oil wells still in production around here, and what they pump has pretty high sulfur content.\" By this time they had pulled under the awning of a small hospital with a white roof. \n\nDwight would get accommodated to the smell quickly, and but Carmencita never let him get comfortable with anything else. She looked like a cheerleader, but she was actually a slave driving, pitiless drill sergeant and professional sadist. She left him sore and just to point of breaking into tears for four hours each morning, gave him a 60 minute break for lunch, and then tortured him for another four hours every afternoon for six days a week. His arms made a full recovery well before his legs, and she was especially unrelenting about making him use the arm bike until his heart rate got way up there, and stayed there a while. He ate all the food he could get his hands on at breakfast, lunch and dinner, surfed the web and did a few agency online correspondence classes after dinner, and slept like a log from 10 PM to 6 AM every day. He had mostly pleasant dreams, usually about his college girlfriend or Suzanne Pliskin, and sometimes both of them at once. Occasionally in his dreams, as Dwight fell toward the pavement Pavel would step aside gracefully like a matador and Dwight would hit the sidewalk and then Pavel would calmly shoot Robbie and Dwight both in the head. But for the most part he was so tired and pissed off at Carmencita that he barely noticed how fast his rehab was progressing, or the warm and fuzzy looks she was giving him when he almost passed out every day from the unrelenting effort he was making. He didn't realize that she was developing quite a crush on her mysterious patient.\n\n.....\n\nI made it back to campus from the hospital just in time to take my last exams, and there were no surprises -- I was pretty sure I had aced them all. Suzanne was already on her way to spend Thanksgiving with Mike's family and visit the burn hospital daily, which was very tough duty. Lara took off for Dallas to her dad's house early this morning, and Millie was already on her way to Houston, and hopefully very much chastised for her defiance of me. I was tired, hungry and suddenly lonely. Kevin was back in the dorm room doing another all night cram session for his last midterm exam tomorrow. I waited for the supper line to open, sitting on a couch in the lounge just outside the dining hall, watching the steady flow of people heading out for home. I smiled and said hello to a few people I knew, and as soon as the line opened I went in to slake my thirst and blunt my hunger pangs. Lots of people were already gone and I had a clear shot at the victuals, and all was right with my stomach for the first time in a while. By 7 PM I was upstairs, and did most of my packing for the trip home tomorrow. Kevin sometimes muttered and tapped his fingers while he studied, but nothing could bother me, and by 10 PM I was asleep and I slept like a baby all the way through until morning. \n\nI woke early as Kevin was leaving for his exams and wished him luck and Happy Thankgiving. I put on my running shorts and a sweater, and hit the track, running hard until I got a big time runner's high, and then sprinting three laps instead of one. My heart pounded as I did my cool down laps, and then hit the showers. Downstairs in the dining hall, they had a just two brunch lines going, but I got eggs, bacon and pancakes lathered in syrup rocking in fine style. I had two pieces of pie for dessert, and stuffed my shirt pocket with some sugar envelopes for the trip, and went upstairs to finalize my packing. I was out on the benches in front of the dorm by 11:30, and several other students were there waiting for their rides to show up, and the major topic of conversation was the party they had seen on TMZ. \n\nNora showed up a few minutes later. She looked exhausted. \"I'm finally finished! 21 semester hours have passed by under the bow, Captain!\" She saluted sloppily and yawned. \n\n\"Have you had breakfast this morning?\"\n\n\"Yes sir, Captain Sir, and I have a CLIFbar just in case!\" I gave her a hug, listening carefully but only getting hints of her suppressed little Suzie signal bubbles. \n\nAlley Shitty turned up just about on time, which was unusual for her. The big suburban had a few more road dings than I remembered plus an ESU bumper sticker, and a KKG parking decal. There was a guy in the front seat with Alley, and he looked like one of the pledges I had seen at the PIG lake house. I put my stuff and Nora's in the back, and we got in the middle row of seats, leaving one more row clear behind us. My first thought was to get as much separation from Alley's irritating voice as I could, but I could then hear my mother's voice saying \"That's rude, Robbie!\" Alley introduced her other passenger at Jay Kincaid, and I made further introductions all around. Jay was from Waxahachie, and we were dropping him off before continuing on to the 'Metroplex' of Dallas and Fort Worth. \n\nI had never heard any Suzie signals for me from Alley, as back in high school I could usually only hear the honking maximum signals like Suzie Packard herself sent. But Alley had always chased me incessantly and given all the 'normal' signs of attraction. I expected to hear something from her now but there was a very moderate to weak signal for me. In fact, were it not for my rapidly increasing sensitivity over the last few days, I might not have detected it at all. There was no signal for Jay, or Nora, for that matter. There was a little light conversation as we got on the Interstate, and we soon established that Jay was in fact a Phi Iota Gamma pledge, that Alley Shitty had been in the Econ 101 class that Nora graded for, and thus knew both Nora and Suzanne, but that Nora did not know her exam grade yet. I knew that Suzanne would be grading the essay questions while she stayed with Mike's parents. \n\nThe conversation wound down, and Alley assured us that she had a big hot mug of Starbucks and would stay awake, and encouraged us to sleep if we wanted to. Nora immediately settled into my shoulder and closed her eyes, which felt amazingly good to me. I was a little nervous about Alley's driving, so I stayed awake, but Jay soon began to snore gently. I noticed Alley looking back in the rear view mirror at Nora asleep on my shoulder with a bemused expression. I heard Nora's breathing stabilize and knew she was now sound asleep. And then I got a shock. I had never been around Nora when she was asleep, but I suddenly realized that her ability to so effectively suppress of her Suzie signals must require her to be conscious, because her signal was now clear and unimpeded, and I could sense everything she was sending and had stored, including her 'black box' sexual history. I felt a bit like a peeping Tom, but I could not look away from an opportunity like this. I figured that by the time we dropped Jay off in Waxahachie, I might know the truth about Nora's feelings for me, and for Suzanne. I just hoped nothing woke her up before then. I might really have something to be thankful for this year!"
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "formula one",
        "tmz",
        "hot tub",
        "celebrities",
        "threesome",
        "tattler",
        "orgy",
        "transexual",
        "nudist camp"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-17"
}