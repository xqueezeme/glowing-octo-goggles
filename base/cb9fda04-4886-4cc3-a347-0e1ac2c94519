{
    "title": "Pool Boy Ch. 17",
    "pages": [
        "After returning from the Stewardess Party we had a couple drinks with Mae and Roni, the two middle-aged rich women who come to Vegas every year to get fucked and have some fun. If their stories were true they had never successfully found someone that they liked before our three-way tryst in the Hotel steam room this morning. After saying good-bye and wishing them a happy life, Alexis and I strolled back through casino. Alexis got the looks again and some were from the same people that were there when we left several hours ago.\n\nAlexis said that she needed to check on something with the concierge so we walked a little out of our way. There was a different guy there at this time of night. Alexis told the new guy her name and explained that she had a request that James was working on for her. She asked if James had left her a message. The new guy looked for and found a message with Alexis' name on it. He handed it to her and she opened it. I tried to steal a peek at it but she noticed me looking and stepped away from me. She read the message and burst into a grin. I was intrigued but if she didn't want me to see it, that was okay with me.\n\nBack in our room, Alexis stripped down to her garter-belt. She hung everything back up. I just dropped my clothes where I stood and bent down, picked them up and threw them on a chair. Alexis walked back into the living room. I loved how the garter belt rode perfectly on the gentle slope from her trim waste to her hips. She bent down and unsnapped the nylons. The little minx looked up at me with an impish smile and turned around so her ass was to me. She bent over at the waist, with legs straight and rolled her nylons down to her ankles. I had a clear view of her anus and glistening, hairless and puffy pussy. My cock sprang up off my stomach and then settled at a sixty degree angle from the horizontal.\n\nAlexis peered between her spread thighs at my cock and giggled. She ran her fingers up the inside of her thighs and dragged them through her pussy and touched her rosebud. She was just teasing me now and I loved it. She turned around and model-walked across the room in those stilettos to run her tits up on my ribs and stretch up for a kiss. She had my cock pressed between our bodies. I bent forward and gave her my lips. I nibbled on her lower lip. She pulled back and kissed my nipples.\n\nI said, \"Hey babe. What have you got going with the concierge?\" She smiled up at me and mumbled something like, \"it's a secret.\" I let it drop. I reached my hands around her ass-cheeks and pulled her against my throbbing cock.\n\nShe said, \"Is the 'ever-ready bunny' trying to tell me something?\"\n\nI said, \"I don't know. You'd have to ask him.\"\n\nShe looked down between us and said, \"There's never any miscommunications with him are there?\" I grinned at her as she looked back up at me. I just shook my head. I bent down and kissed her passionately. Our lips roamed all over the other's lips, cheeks, nose, eyelids and forehead. When I bend down lower to kiss her earlobe and then down to her neck, she groaned out, \"Oh fuck baby. You're getting me horny.\" Her lips on mine became almost frantic. She grabbed my cock from between us and started furiously jerking it off. She started to drop down my chest kissing her way. I stopped her on the first nipple and pulled her back up to continue the frantic kissing. We were mauling each other. Our breathing became very ragged. Her face had reddened considerably and I could feel the heat in mine.\n\nAs we continued our frenetic kissing, I slowly guided her backward toward the bedroom. We didn't make it to the bed and we went down on the carpet. Alexis pulled her face away from mine and positioned herself to suck my cock in. She was gasping for air so she could only push herself down my shaft a couple times before coming up for oxygen. She wanted it and she wanted it now. I couldn't remember a time when she was this out of control. I was close behind her gasping for my own oxygen.\n\nI was mashing on her firm tits and tweaking her nipples. She was between my legs with her ass at my feet so all I could reach was her tits. When she drove my cock into her throat I groaned out and dropped my torso back to the floor. Alexis throat-fucked me several times and then pulled her mouth off and moved up my body with her legs crawling over mine. She sat up on my hips and looked down at me. The look in her eyes was pure hunger.\n\nWith one hand she drove my cock up and down over her pussy lips. She was panting hard and fast. She lifted herself high on my lap and drove herself down on my cock. It nearly forced the air from my lungs. She screamed in combination of pain and pleasure and yanked herself right back up again. She slammed herself down again and let out a gut-wrenching groan and exploded into a massive orgasm. She literally screamed, \"AAAAAHHHHHIIIEIIEEE. AHHHH. AAAAHHHHH.\" She continued to drive herself up and down until the orgasm built to a peak and she came crashing down and collapsed to my chest.\n\nAlexis' pussy was clenching...clenching.. clenching. I held her to me for at least five minutes as her spastic movement diminished. She was still gasping for air several minutes after that. We were still joined at the hips as I rolled her over on the carpet and then moved on top of her. The only weight I put on her was at our hips. She wrapped her legs around behind my thighs and yanked me down to bury my cock as deep as possible.\n\nHer eyes had cleared and tears had begun to form in the corner of each eye near her nose. She had her hand behind my neck and she pulled herself up to mash my lips again. She was so passionate. She dropped herself back to the floor and gazed into my eyes. After a few moments she whispered, \"Fuck me Hunter. I need you so bad. Fuck me hard. Please?\"\n\nIf I thought my cock was hard then, nothing ever compared to the surge of hardness that I thought would split my cock up the middle. It was a granite pillar. Alexis groaned and shut her eyes when she felt it harden beyond hard. She groaned out again, \"OH MY GOD BABE. IT'S FUCKING HARD. FUCK ME WITH THIS THING. JESUS CHRIST.\"\n\nI pulled my hips back till my cock head was only keeping place between her labia and then I steadily pushed back down. Alexis screamed and I groaned. I repeated this and we screamed and groaned again. Then I started a normal fucking motion that was driving Alexis crazy. She was hanging on to me with her legs and arms as I pounded up and down.\n\nAlexis screamed out, \"OOOHHH FUCCKKK. I'MM CUMMING AGAIN.\" I could feel her pussy going spastic again but I kept right on pummeling her with my granite hard cock. Her orgasm was a big one but it seemed to dissipate quickly and then she blew right into another one. This one seemed to last forever.\n\nI watched her head spastically snap from side to side. Her eyes were closed. She had squeezed the huge tears from her eyes with her eyelids and they were flowing down her cheeks and neck. Her mouth was wide open in a silent scream. She was almost catatonic. I wanted my orgasm badly but not with her in this state. I slowed down my pace. She opened her eyes but she wasn't looking at anything. She was a limp rag lying on the floor. I pulled my cock out and leaned back on my feet. Alexis' pussy was gushing fluid. I couldn't tell if she squirted or not but there was an inordinate amount of juices. My cock was pointing at the ceiling and it was so hard it didn't even bounce or sway. It just pointed straight up. I was getting concerned after she laid there for several more minutes.\n\nSuddenly there was heavy knocking on the door. I got to my feet and pulled my robe on. I looked back down at Alexis sprawled on the floor. I didn't want to leave her there but there was more urgent knocking at the door. I crossed the living room and opened the door. It was Mae and Roni from the suite next door. They were in their robes pulled tight around them. They had concerned looks on their faces as they tried to look past me, which is hard to do since I take up about ninety percent of the doorway. Mae said, \"Hunter. Is everything okay here? We heard a lot of screams and then silence. Is Alexis okay?\"\n\nI wasn't sure I knew how to answer the last part and I said, \"I think so. I don't know. We were just having sex and now she's just lying on the carpet. Her eyes are open and she's breathing. She can kind of go out there once in a while but never like this.\"\n\nMae pushed past me and in the process pulled my robe apart and my granite hard cock pushed it's way through. Mae didn't see it as she rushed through the living room to the bedroom. Roni did see it and she was dumb struck. I moved back from the door so she could come in too but she didn't move from the door. She tore her eyes from my cock and looked up at me and said, \"Fuck Hunter. Your cock is even bigger than this morning.\"\n\nI looked down and saw the same sized cock that I had extracted from Alexis' pussy moments ago. It hadn't softened at all. I looked at Roni and said, \"We had some pretty passionate sex going there until she checked out.\"\n\nRoni said, \"It sounded like you were killing her.\" Then she looked back at my cock, smiled and said, \"In a way I guess you were killing her.\" She stepped into the living room and I closed the door. We both walked into the bedroom were Mae was leaning over Alexis. Her robe had separated and her huge tits were completely on display. Alexis didn't look any different than when I went to answer the door. Roni stood back and watched as did I.\n\nMae maneuvered herself in behind Alexis' head and lifted it into her lap. Alexis was almost a rag doll. Roni watched Alexis' pussy as it still clenched and released. She was beginning to breathe a little heavy too. Mae looked up at me and said, \"Help me get her on the bed.\" I moved forward instantly. My robe was totally undone as I bent down to pick Alexis up under her arms. Mae couldn't help but see my cock now and she gasped. Mae said, \"Jesus Christ Hunter. Your cock was huge this morning but now it's a baseball bat. No wonder she's so bad off.\" Then she smiled and said, \"I'm just kidding Hunter. She's going to be fine.\"\n\nI moved back and let Mae look her over. Alexis motioned Mae forward as though she just didn't have the energy to talk. Mae leaned in and Alexis' mouth was talking at a whisper. I heard Mae respond to her,\"Are you absolutely sure?\" Alexis nodded and glanced over at me and pointed at me and said something else to Mae. She nodded her head at Alexis and said, \"Okay. If you insist.\"\n\nMae got off the bed and came over to Roni and me. She turned back to Alexis who was staring at her. Alexis nodded her head insistently. I said, \"What's going on. Is she alright? What did she say?\"\n\nMae glanced down at my wide open robe and then looked up at me and said, \"Alexis is concerned that she has left you in a bad way. She said she's sorry. She wants Roni and me to get you off if we can.\" She smiled and shrugged her shoulders and continued, \"Well. That's what she said.\" Roni looked down at my rock solid, unmoving cock and licked her lips.\n\nI said, \"Does she want to do it here or in the other room.\" Mae pointed toward the bed. \"You don't have to do this. I'll be alright. I'll jerk myself off and try to get this thing to go soft. I don't want to burden you two with this.\" I was pouring it on a little thick now.\n\nMae looked at Roni and shared a secret smile and Roni said, \"I think we should do as Alexis wants.\" I shrugged my shoulder and let my robe slip off my shoulders. I looked at Mae and she shrugged off her robe and then Roni did the same. Alexis had gathered up enough energy to get out of the middle of the bed up toward the pillows.\n\nAs I climbed on the bed I looked concernedly at Alexis. Was she sure about this was my concern. Then Alexis winked at me and I knew that she was just taking advantage of the series of events like Roni and Mae showing up unannounced. As I moved into position I mouthed the word, \"You are a bad girl,\" to her. She smiled and went back to her act.\n\nI lay down beside Alexis on my back. Mae was the better of the two at cock sucking and she took the lead as she struggled to push the extra fat cock between her lips. It took her a couple of tries to get her lips past the glans. It felt fantastic once she was on. Roni came up beside Mae and wrapped her lips along the length of the shaft. Mae hadn't started her blowjob yet as she was trying to get comfortable and relax her jaw. Roni dragged her lips up and down several times and then slid off to suck on my balls. I looked over at Alexis and she smiled and blew me an air-kiss. I smiled back at her.\n\nFor more than a minute, Roni sucked on my balls and then my shaft while Mae tried to relax her lips and jaw. Finally, she started pushing her face down my shaft and made it as far as she had got that morning. She pulled back and started a normal paced blowjob. I groaned hard. It felt great. Roni was now relegated to my balls and she was doing a great job of it.\n\nWhen Mae's jaw became too painful she pulled off and flexed her jaw and lips. Roni moved to take over for Mae. This morning, Roni couldn't do anything except get the glans in her mouth. This time she was adamant that she was going to do as well as Mae as she flexed her jaw to relax and stretched her lips over the glans on the first try. She held it like that for a few moments and then opened her mouth as wide as she could, which wasn't much wider than my cock, and forced her head down and up at a pretty rapid pace. Her throat was making an \"AAAWWKKK.. AWWWKk AWWWAAKK\" noise. Saliva was flooding out of her mouth and down my shaft. Mae scooped up the saliva in her hand and began jerking on my cock below Roni's head. She was looking pretty pleased with herself. I knew we would be all night at this rate.\n\nWhen Roni pulled her head back off and sucked the gobs of saliva back in her mouth, I took the opportunity to take over. I looked over at Alexis, who was watching the action. She seemed as though she had fully recovered. At least she was breathing normal now. She mouthed the word, \"Anal\" and then broke into a wide grin.\n\nI said, \"Ladies, this cock is so hard now that I'm not going to get off with a blowjob. I'm going to need something more rigorous to work this out of me. It's starting to hurt.\" Ok, I'm pouring it on a bit but I wanted Mae and Roni to do anything to help me out of this problem. They both looked at each other and they had big smiles on their faces. I pulled them both up and off the bed. I had them put their knees on the edge of the bed facing toward Alexis with their asses hanging off. I had them side by side with only a few inches separating them. Mae stayed up on her hands and Roni went down on her elbows looking between her huge hanging tits.\n\nI left them there like that for a moment as I went to the bathroom to find Alexis' tube of KY Jelly. I hid it at my side when I came back in. Mae was watching intently and Roni was still looking down her front. I moved up behind Roni and pushed my granite slab of a cock into her pussy and she groaned hard. Mae looked back over her shoulder and smiled at me. While I fucked Roni's pussy I pushed the tube of jelly to her anus and gave it a squeeze. Roni was consumed by the pressure from my cock and didn't really register the jelly oozing into her ass. I ran the jelly around her anus. I hadn't lifted the tube high enough for Mae to see what I was doing.\n\nI pulled my cock from Roni and moved over behind Mae who was still watching. She looked at Roni and grinned. Roni had a disappointed look on her face. I pushed my cock into Mae's pussy and started a gentle fucking motion. She groaned out as I pushed all the way in to my balls. She was biting her lower lip. She went down on her elbows and looked between the twin peaks of her tits to watch my cock pull back and push back in. While fucking Mae, I did the same thing to her anus and smeared the excess around with my finger. Mae jumped when I touched her there.\n\nI pulled out of Mae and moved over behind Roni again. Now Mae was frowning and Roni was smiling. Her smile turned to a grin and a loud groan when I pushed my cock back in her pussy. The grin disappeared when I pressed my jelly sheathed finger to her anus. I was certain that they had never had anal sex before. Their shit-for-brains husbands most certainly would have thought it was disgusting and probably Mae and Roni did too. I pushed my finger past her sphincter and she pulled away. My finger followed her as she moved away. After a moment she relaxed and settled down. She tried to look back to see what I was doing. I continued fucking her pussy as I pushed my finger in to the next knuckle and she pulled away again. She wanted my cock in her so she pushed back. 'The carrot and the stick' phrase ran through my mind and I smiled at her. She didn't want the finger but she did want the cock. I pushed my finger all the way in and she pulled away again but promptly pushed back. She was moaning continuously now.\n\nI held my finger in place for a few moments before twisting it around and then slowly pulled back. She groaned the whole way. I pushed all the way back into her bowels again and she didn't pull away this time. I repeated it again and she mumbled, \"Fuck that kinda feels good.\"\n\nI pulled my cock from her pussy and then removed my finger from her anus. She whimpered and pushed back searching for my finger. I guided my cock up to her anus and pressed it hard against her sphincter. She pushed back. When my glans pushed through her sphincter, Roni let out a blood curdling scream. She looked back with a pained expression. She said, \"What are you doing? That hurts really bad.\" I was in to the ridge and holding there.\n\nAlexis came around on her elbows close to Roni and said, \"He's going to fuck you in the ass. Just relax and I guarantee you'll love it.\" Roni had a terrified look on her face and now so did Mae. Mae realized that she wasn't trapped with a cock in her ass and she started to crawl across the bed to the other side. Alexis stopped her but Mae went down on her side. Roni was biting her lower lip. I didn't move a millimeter in or out. She slowly started to relax and the pain subsided. She quickly realized that if she tensed it hurt and if she relaxed it was okay.\n\nAlexis whispered to Roni again, \"When you're okay to proceed, just push back at Hunter. He'll go as slow as you want. Take your time.\" Roni worked up a smile and then she gently pushed back. I didn't push forward and let her take what she wanted and then stop and readjust and relax. Six times this was repeated. Mae watched in fascination as my cock slowly disappeared into her sister's bowels. She seemed to be fascinated.\n\nWhen my hairy balls tickled Roni's pussy she shuddered. She knew then that she had buried the largest cock she had ever seen in her ass. She looked up at Alexis and grinned. Alexis nodded at me to continue. Mae smiled now that Roni was no longer cringing in pain. I very slowly withdrew my shaft and Roni grimaced again. Mae looked back at me. Alexis nodded again. Slowly I pulled out to the ridge of my glans. I held position there until Roni pushed back at me and I pushed my cock smoothly to the depths. Roni groaned loudly, \"OH FUCK. THAT'S BETTER. FUCK ME HUNTER.\"\n\nAlexis beamed a huge grin and I started a fucking motion at a slow pace and kept it that way until Roni indicated that she wanted more. When she tried to ramp up the pace on her own, I started a normal fucking pace and Roni was flailing her head from side to side and up and down. Mae was fascinated and came around behind Roni to watch my cock appear and disappear into her sister's anus. Roni shoved two fingers into her pussy and adjusted them so she could feel my cock moving in and out only a thin membrane away. I could feel her fingers pushing against my shaft. I could feel rumblings in my balls signifying the approach of my orgasm. I pushed it away. I still had work to do on Mae who couldn't take her eyes away from Roni as my cock drove deep in her ass. She finger-fucked her own pussy.",
        "Without warning, Roni burst into a combined vaginal and anal orgasm. Everything around my cock was pulsing and clenching. Her sphincter grabbed my cock hard and any urgent feelings of orgasm disappeared with the pain. Now it was my turn. It's happened several times before. It's one of the 'cons' to go along with so many more 'pros'. Her sphincter clamped and released many times and when I could move my cock I continued fucking her ass. Mae moved in close to watch her sister's spastic anal pulsing.\n\nRoni was working on her clitoris now driving herself higher and higher. Her face was on the bed and her ass was high in the air where I was holding it. As she reached her peak and screamed loudly I couldn't move my cock anymore. It was only buried to the glans as she clamped down hard and held it like that for several moments. I waited for her to relax. Air expelled from her lungs and she hung there not breathing at all until she suddenly gasped for a lungful of air. She pushed her ass toward me and my cock sank to the bottom again. I could still feel her vaginal spasms but her anal spasms had stopped. I slowly fucked her ass until her vaginal spasms subsided. She collapsed forward dragging her ass off my cock.\n\nShe didn't move until she curled up in a fetal position on her side facing Mae. Her eyes were glazed over and her mouth hung open as she continued to gasp for air. When her eyes cleared and she saw Mae staring down at her she mumbled, \"Oh my gaaawwwddd Mae. That was incredible. You absolutely have to do that.\"\n\nMae smiled and said, \"It looked pretty painful to me. But then it looked pretty amazing.\" She pushed herself up on her hands and knees and swiveled around to her original position with her ass in the air. She dropped to her elbows and looked between her tits as I maneuvered myself behind her. When I retrieved the KY jelly I had also brought back a wet soapy towel and I used it now to wash my cock from balls to tip. I pushed my cock into her pussy and started fucking her. She groaned hard and said, \"Jesus. I can't get used to this cock.\" I pushed my finger tip around her anus and she flinched and pulled forward. She muttered, \"Sorry,\" and she pushed back at my finger pushing her pussy onto my cock at the same time. I used the same 'carrot and stick' on Mae. I pushed my greasy finger in to the first knuckle and Mae screamed and pulled away. Roni was smiling because she remembered the pain. She hadn't moved from her fetal position.\n\nMae wanted my cock so she pushed back and I pushed my finger in to the second knuckle and Mae repeated her retreat before pushing back for my cock. When my entire finger was engaged, she pulled her ass back away and I slowly withdrew my finger. Mae was going much quicker than Roni had. I guess she had the benefit of watching Roni's metamorphose from pain to a mind numbing orgasm. She pushed two fingers into her pussy beside my cock to feel my finger pushing back into her bowels on the other side of my cock as it slid past them. I pulled my cock out and moved my finger in and out several times. I flicked my finger tip on her finger tips and she giggled at the sensation. She started moaning and her breathing became very ragged.\n\nI pulled my finger out and guided my cock to her anus. She knew what was coming next and she slammed her eyes shut and braced herself. I ran my glans all around her rosebud until she yelled out, \"Do it for God sakes.\" I smiled at Alexis and she smiled back. I pushed with increasing pressure until my glans pushed inside her sphincter. Mae screamed out and instinctively pulled away. I followed her forward and held it in place. She groaned out, \"Fuck that hurts. I can't imagine it will ever feel good.\" She pushed back and I slowly inched my cock in.\n\nI stopped to let her adjust three times before Mae pushed back into me hard and screamed as my cock bottomed out in her bowels. My cock was now buried to my balls in her ass and her head lifted up as she groaned. I slowly pulled out and pushed all the way back in again and Mae groaned again. I started fucking her anus at a slow pace. She was clenching her facial muscles as she struggled to relax. After a few full strokes I could feel her relax and she started pushing back at me and I increased the pace. She moaned, \"OHH FUCCK RONI. THIS FEELS AMAZING. OH GAWWDDD. FUCCKKK MEEE.\" Her head was rolling from side to side.\n\nRoni knew that Mae was about to explode and she sat up cross-legged beside Alexis. She was smiling at me as I was building my pace. I could feel my own orgasm building. I was fucking Mae's ass for another two minutes when Mae came up on her hands and began pushing her ass back hard into me as she exploded into an anal orgasm. Her sphincter slammed down hard on my cock and I let out a teeth clenching groan. I couldn't maintain the pace because I had to wait for her to release my cock. Her anus pulsed open and shut for a couple of minutes. My orgasm came on to me in a hurry. My balls seized and incredibly my cock got harder and Mae screamed louder. My jizz poured into her bowels and Mae screamed again and collapsed to her face. I kept hold of her hips so I could fuck my cum into her. I thought my head would blow right off, the feeling was so intense. After I had emptied my ball I released Mae's hips and she slid off the end of my cock. She folded up into fetal position like Roni had. Her anus was gaping wide open and pulsing. Cum pushed out of her rosebud with each orgasmic pulse.\n\nAlexis beamed at me. Her grin was infectious and I grinned back. It took fifteen minutes before the two sisters got themselves off the bed and pulled on their robes. I kissed them both and they ravenously kissed me back. They leaned down on the bed and kissed Alexis. They said their good-nights and went back to their suite.\n\nI scooped Alexis out of the bed and carried her to the shower. We concentrated on washing each other this time. We were both wasted. We dried each other and she snapped her towel on my ass as I was leaving the bathroom. I jumped and she giggled. She followed closely behind and we slid between the sheets.\n\nLying there in the dark, Alexis chuckled and said, \"Did you notice how Roni and Mae were walking when they left?\" She pictured it again and chuckled again. I didn't say anything. I rolled toward Alexis and kissed her on the lips and then promptly fell asleep. Alexis had closed the drapes so we could sleep-in without the sun waking us up in the early morning.\n\nI woke up once during the night. The erotic dream I was in faded quickly and I had no recollection of it after getting up to piss and then climbing back under the sheets. I was back asleep in minutes. This time I lapsed into a dream of gold background with shimmering multi-color beams of light everywhere. I was shielding my eyes and trying to see beyond the streams of light. Someone was there but I couldn't make out who it was. I moved around the beams of light to get a better view. It was Alexis. She looked so happy. She threw her arms around my neck and kissed me. The beams of multi-colored lights disappeared. Alexis was jumping up and down holding her hand. What was wrong with her hand? The colored beams were back and as blinding as before except they were following Alexis' hand as she waved it around. The beams were too bright to make out what was causing the blinding luminescence.\n\nAs I slowly came out of the dream and before I was totally conscious I ran through what I remembered of the dream trying to remember it as I came further out of sleep. I was lying on my back. The black-out curtains were doing their job but it was obvious it was daylight on the other side of them as it seeped around the edges. I turned and saw that Alexis wasn't there. 'Probably in the bathroom,' I thought.\n\nI didn't feel anything but there was a pressure on my cock. It was hard as always. I reached under the covers to run my hand down to take my usual stroke or two and it ran into a face. I wasn't surprised. Alexis likes to wake me up in the morning with a blowjob under the covers as I'm coming awake. I pulled my hand back and put both hands behind my head. Now that I was awake she no longer tried to be stealthy and she started a blowjob on the glans along with a handjob with one hand. It was delicious. I groaned when the hand disappeared and her head pushed steadily down the full length and into her throat. She tickled my balls with her tongue. I'm always amazed that she can do that.\n\n\"Oh fuck Baby. You are amazing. What a way to wake up. OHHH JESSUSSS.\" I thrust my hips up hard into her face and she pulled back. I felt the bed give on Alexis' side and I turned to see what it was. It was Alexis crawling on hands and knees onto the bed. She brought her legs around and sat beside my hips. She was as naked as she had been when we went to bed last night. 'What the fuck?' went through my mind. Alexis was grinning her Cheshire cat smile again as she pulled the sheet down. My eyes went wide when I saw an extraordinarily beautiful young woman sucking on my cock. She held my cock with her lips at the ridge line and smiled at me. She pushed her lips down the shaft and buried her nose in my pubic hair.\n\nI looked from the cock-sucking vision to Alexis and she leaned down and kissed me. She said, \"This is Veronica.\" I looked back down and she raised one hand off my balls and waved at me. She looked me straight in the eyes as she increased her pace of a head to balls blowjob. I was going nuts and I let out a loud groan every time she dropped to my balls. She was some kind of good at this. Alexis watched every movement Veronica made like she was committing them to memory. Veronica was sucking so hard on my cock that it seemed she was sucking the cum right out of balls. I dropped my head back and my mouth flew open as cum bolted up my shaft into Veronica's mouth. She took every last shot as she slid off the head with her lips pushed to the 'eye'. She didn't lose any but her eyes started to go wide as she was sure she couldn't do it.\n\nVeronica pulled her pursed lips back and showed her huge load to Alexis and then me. Alexis moved over my hips and kissed Veronica and it was obvious from swirling tongues that they were sharing my sperm. When they separated, Alexis leaned back and showed me her half and Veronica came up beside Alexis and showed me hers. They looked at each other and then seemed to coordinate their actions as they swallowed their loads together on cue.\n\nAlexis slithered onto my stomach and leaned down and kissed me on the lips. She pushed her cum-flavored tongue into my mouth. She pulled back and grinned at me. Veronica knelt down beside Alexis. I had never seen such display of incredibly gorgeous female flesh in my life. Veronica was a ten and Alexis was an eleven.\n\nAlexis leaned to her side and she and Veronica kissed each other passionately for several seconds. When they broke their embrace Alexis showed me one of the cards that she had picked up on the sidewalk yesterday. Then she held up another five cards. The pictures on the cards were all of Veronica. I knew I had seen her somewhere.\n\nAlexis said, \"When I picked these cards up I went gah-gah for Veronica. I asked James, the concierge to hire her services but he told me that the prostitution services in town hire other extremely attractive women for their advertisements. They are not usually prostitutes that work for the agency. He told me he would see what he could do to actually contact Veronica, if that was her real name. The message last night said that he had been successful and Veronica had agreed to a two on one with us this morning. I'm sorry baby. It was a surprise. Isn't she gorgeous?\"\n\nShe was blonde, probably bleach blonde. She was almost as tall as Alexis with pretty much the same lean body. Veronica had enhanced breasts and they were perfect. She paid mucho bucks for those. Her lips were plumped like Angelina Jolie. Her eyes were golden color. I'd never seen her eye color before. She sat there on her feet smiling as Alexis told her story. When Alexis was done, Veronica said, \"I had second thoughts about doing this. I haven't been on this side of the business for five years. I run my own agency now. I'm glad I did though. When Alexis answered the door to your suite this early morning in the nude, I was thunderstruck. I've seen every gorgeous woman imaginable pass through this town but I've never seen anyone that rocked me as hard as she did. I hope you don't mind if we had a romp in the living room already. I just couldn't control myself.\"\n\nAlexis turned from Veronica to me and said, \"I couldn't help myself either.\"\n\nVeronica continued, \"I have to say too that when we were done in the Living room and I came in here and crawled under the covers with you and I saw this monster cock already in an aroused state, I knew I had really hit the jackpot. Holy Shit Hunter. Your cock is massive. I've had longer but not fatter. I think I may be walking funny for a few days.\"\n\nI'm not even sure what either of them had said. My cock was so incredibly hard just looking at them. I was just trying to figure a way to maximize my time with the two of them. I glanced at the clock. It was 7:05 AM. 'Fuck. We've got five hours at least,' I thought.\n\nAlexis said, \"Well, what do you think?\" Veronica looked to see what my reaction would be.\n\nI grinned and said, \"Where do you want me?\" She grabbed my arm and pulled me out of the bed. She moved Veronica to her hands and knees on the carpet and maneuvered me to my knees behind her. Alexis got down on her back and slithered in under Veronica. I watched Alexis' face push under Veronica's hips and Veronica lowered her head to Alexis'. I guided my cock up to Veronica's sopping wet pussy and pushed my glans inside. Veronica's face came up as she let out a long groan and then dropped her head back into Alexis' crotch. I slowly but steadily drove my cock to the balls in Veronica's pussy as Alexis was sucking and licking her clitoris.\n\nVeronica's hips drove away from me and into Alexis' lips. Alexis was inches from my cock as I began fucking Veronica for all I was worth. Alexis' tongue rode along the underside of my cock as I dragged it out and again on the way back in. Alexis pushed herself ahead and she sucked in one of my balls but promptly had to release it as I pulled back. She went back to sucking Veronica's clit.\n\nVeronica was the first to blow. Her orgasm was huge. With my 'monster cock' driving in and out and Alexis sucking on her clitoris, she let out a scream that started deep in her throat and built in pitch and volume. She pulled her head up and lost contact with Alexis even when Alexis used her legs to push her hips up to follow her. Veronica was gasping as her hips pulled away from me and then snapped back. I had tried to follow her hips forward with my cock so when she snapped back she drove her hips even harder onto my cock. She screamed again. She started muttering, \"OOOHHH FUUCCKK. OOOOHHH FUCCCKK. OHHH FUUCCKKK.\" When another orgasm crashed into her she screamed, \"YYYEEESSS. JESUS CHRISSSSTT. OHH MMYY GGAWWDD.\"\n\nGod damn I wanted to cum right then. Veronica was thrashing around so hard that Alexis let her go and Veronica couldn't stay up anymore and collapsed onto Alexis' body. I would have followed her down in order to keep my cock in her but Alexis was there so I let my cock break contact with Veronica's pussy. Alexis seized the opportunity and grabbed my cock and twisted it into her mouth. She looked up at me and pulled her mouth off and said, \"Fuck my face baby.\" She stretched her lips back on and I started gently fucking down into Alexis' throat. I couldn't see her face and she couldn't see mine.\n\nCum was building and as horny as I was right then I knew it would be a big one. One of the most incredible asses I had ever seen lay right before me with the most incredible face right below that. My cock surged harder and Alexis pulled her mouth back to accept what she figured would be more than she could hold and share with Veronica. She figured right as she started swallowing with the first blast of cum arrived. What she didn't figure on very well was the fact that she was upside down which made swallowing more difficult. The result was she couldn't swallow fast enough and her face filled past the gag point very quickly. She was forced to pull off only three shots into my orgasm.\n\nCum was flying everywhere and Alexis was gagging and coughing and trying to aim my cock anywhere else. I took my cock away from her and started jerking on it as long streams of cum lasered onto Veronica's ass and waist. I watched as four more long ropes shot out followed my two or three shots that just kind of drooled out onto Alexis' left eye. She had just cleared her throat and she started laughing.\n\nVeronica had started to recover from her orgasm when I blew my load on her backside. She reached around herself and ran her hand through the thick and gooey jizz. She scooped up what she could readily collect and shoved it into her mouth. She sucked on her fingers and licked them clean and went back for more. I had fallen back on my feet as I continued to stroke my still hard cock.\n\nAlexis pulled herself out from under Veronica and licked up what remained of my cum on Veronica's ass and waist. She ignored the cum in her eye until she realized it was there. She wiped her finger through her eye and shoved it in Veronica's mouth. She eagerly accepted.\n\nVeronica looked back and saw that my cock was as hard as ever and she said, \"Fuck Alexis. You've got a keeper here. Does he ever go down?\" Alexis looked over at me stroking my hard cock and then back at Veronica.\n\nAlexis said, \"He's been that way since the first day I met him. I've watched him pretty much fuck five women in to the ground. He has quite a following.\"\n\nVeronica looked at my cock and said, \"Well Alexis, sweetie. Let's get him. It's good to find a hard man.\" Alexis giggled at that and they moved in on me side by side stalking me like twin tigers on the hunt. I certainly didn't move away from them. I pulled my feet out from under me and collapsed on my back. I let go of my cock to catch my fall with my elbows. Veronica got there first and forced her mouth over my glans. Alexis came in and put her lips on the length of my cock like she was playing a harmonica.\n\nVeronica drove her mouth down over my glans and stopped at the ridge and then back off again. She kept repeating this as she slithered her tongue along the underside of my glans. She stared right into my eyes the whole time. Alexis dropped off my cock and sucked in my scrotum along with one ball. She sucked and licked and rolled my ball around with her tongue. Veronica took advantage of having my entire cock for herself. She inch-wormed her way down to the bottom as my glans pushed into her throat. Her eyes were tearing up. Her lips were thin white lines. She held her position and then quickly pulled all the way off and gasped for breath.\n\nAlexis instantly popped her mouth off my balls and stretched her lips over my glans and she inch-wormed her lips down my shaft and licked my balls. Veronica watched her sink to the bottom and then still have enough to stick her tongue out and flick my balls. She had a look of awe on her face. I was groaning from the double attack of these two sexy women.\n\nAlexis pulled her face all the way off my cock and said, \"Baby. I need you in me, Okay?\" She lay back on the carpet and put her knees together and pulled them to her chest. I was up in an instant moving to grab her ankles and lifted them up to my shoulders. I moved my cock to her pussy and pressed forward. Veronica moved to Alexis' head and pushed her lap under her head so she could watch herself get royally fucked. I started slow and quickly ramped up the pace. Alexis was looking right into my eyes as a pummeled her pussy.",
        "Alexis' mouth fell open and her eyes glazed over. She was doing her disappearing act again. I knew this meant that her orgasm was building. She pulled her ass higher with her heels on my shoulder and the new angle ripped her over the edge and she began bucking her ass up and down. Her hands went to her tits and Veronica's hands followed them there. I reached down and flicked my index finger on her clit to enhance what she was already experiencing. She groaned, \"OOOHH OHHHH OHHHHH OHHHH,\" over and over again. Veronica was struggling to hold on to her. She was amazed at how Alexis had checked out. She looked at me with concern on her face. \"Is she okay?\" she said. I nodded with a grin and kept on pummeling her. Her pussy was spastically clenching on my cock.\n\nI looked at Alexis and noticed that she had her fingernails dug into her tits so hard that her nails were bringing blood. She was oblivious. I reached up and put my hands over Veronica's hands and forcefully unclenched Alexis' fingers. She came to enough to realize I was forcing her hands off her tits. At first she was annoyed with me until she saw blood on her fingernails. Her eyes closed again and her gasps slowly became less vigorous.\n\nAlexis dropped her feet from my shoulders and rolled into a fetal position. My cock was still engaged and still as hard as ever. I fell back and pulled my cock out. Veronica was sitting cross-legged two feet in front of me with Alexis curled up to her side. Veronica opened her legs from her body and crab-walked forward toward my bouncing cock. She walked her legs right up over mine until our crotches were touching. Her legs were behind me with her feet crossed at my waist. She came in and gave me a sensuous kiss that caused my cock to surge even harder. I lifted her legs forcing her ass into the air. I brought it right up into my lap. I pushed my middle finger into her pussy searching for her \"G-Spot\". She knew what I was doing and grinned. I gazed upon her incredible tits. Her nipples were long and tight.\n\nI could feel the spongy tissue on the top of her pussy and I fingered it to push up against her pubic bone. She let out a groan and grinned at me. She had the sultriest look on her face as she hung her mouth open as her breathing became very erratic. Her head fell back on her shoulders as her blonde hair flowed up on her face.\n\nI guided my cock into her pussy and pulled her hips to me. I slid in a few inches. I didn't want full penetration. I wanted to continue working on her \"G-Spot\". She groaned hard and so did I. I looked at Alexis who had in fact checked out. It always concerns me when this happens but in a few minutes she is always back for more. I was pivoting my hips at a steady pace dragging my glans over her 'spot', or at least my best guestimate based on where my finger had been.\n\nI could tell that Veronica's orgasm was building and fast. I was trying to hurry so I could go with her. There was no hint of one yet. Suddenly, Veronica growled out a steadily increasing groan that went directly into a scream. \"OOHHH MMYY GGAAAWWWDDD. I'MMM CUMMINNGGG HHARRRDDDDDD.\" Her voice warbled as her head swung rapidly from side to side. Her fingers went into her pussy as she frantically tried to push her fingers past my cock as though she were digging for a particular spot to scratch. I pulled my cock out to give her access and an incredible gusher of a 'squirt' launched onto my chest, up my face and over my head. She had a horrified look on her face when she saw what was happening. She shoved both hands in her crotch to block it. All that did was spray everywhere in a five foot radius. She was soaked along with Alexis although she didn't register it at all.\n\nVeronica's squirt suddenly stopped and two seconds later her hips came back up and another less forceful squirt soaked me again. She saw the folly in blocking it with her hands. She was screaming to go along with the look on her face. She was backing away as though she was trying to get away from the geyser. As her pussy clenched, the stream changed from a stream to a spray until finally she stopped. Her pussy kept on clenching as Veronica flopped back on her back trying to gather air. She was sucking air through her clenched teeth, \"SSHHIIIIEEEEE.\"\n\nVeronica rolled over on her front and pushed herself up on her knees still coming down from her monster orgasm. I was now looking right into her pussy as it clenched and her rosebud, which was soaked with her juices. I needed to get off so I pushed myself up to my knees and guided my cock to her anus. I figured it certainly wasn't anything new for someone who had been 'in the business'. I dragged my cock through her pussy and pushed it against her anus. She came up on her arms and looked back at me. I stopped to see what she was going to do. She said, \"Jesus Christ. Do you think you can get that thing in there?\"\n\nI said, \"I did twice last night with two anal virgins. It took a while but they loved it after they hated it.\"\n\nShe turned around facing away and gathered herself to push back as I pushed forward. The progress went slow as the pressure built between us until the head popped in. Veronica buried her head in her arms and groaned hard. \"Jesus, that hurts. Go slow. I'll let you know when.\" She gathered her breath and pushed back harder than I would have expected. She groaned and stopped again. In only a few moments she pushed back again hard and I pushed all the way to my balls. I stayed right there until she gave me a sign. I didn't wait long.\n\nVeronica started pulling off and pushing back at a slow pace and I let her take what she wanted. She gathered herself again and started fucking my cock with her bowels at normal pace. She pushed two fingers into her pussy and we could both feel her fingers drag over my cock through the thin membrane. Veronica turned back to me. She said, \"Hunter baby. Cum in my ass.\" Then her urgency ramped up and she yelled out, \"CUM IN MY ASS. FUCK THAT'S AMAZING.\"\n\nI took over the pace and began thrusting my cock into her. She was screaming. Alexis had come to and was reacting to Veronica's screams. She sat up to look. I had a strong grip on Veronica's hips as I pistoned my hips back and forth at a furious pace. Veronica on her hands and knees had her head lifted as high as she could get it with her mouth in an open mouthed silent scream. My orgasm was coming on like a freight train and I fired my cock in as deep as I could get it and launched several huge surges of cum into her bowels. Veronica let out a scream that wasn't silent. She groaned, \"OH FUCK. I'MMM CUMMING AGAINNN.\"\n\nWhen I had fired my last salvo I eased my cock out of her ass and sat back on my feet again. Veronica rolled onto her back with her fingers still in her pussy which was clenching and releasing again. Veronica kept mumbling, \"OH FUCK.. OH FUCK. OH FUCK.\"\n\nI started toward Alexis but she was moving toward Veronica. She pulled Veronica's fingers from her pussy and pushed her lips on and sucked and slurped her juices. Then she pushed herself down lower and put her lips on Veronica's anus and licked up the gobs of cum gushing out and then sucked out what was left. She sat up and looked at Veronica lying there looking at her.\n\nVeronica pursed her lips and pointed her finger at Alexis. Alexis knew what she wanted and she hadn't swallowed what she had collected yet. She crawled over and put her lips on Veronica's and used her tongue to push all of it into Veronica's mouth. She extended her lips and swirled the gooey mess around to mix with her saliva. She swallowed it with a gulp.\n\nVeronica sat up and kissed Alexis. She said, \"Alexis. If you ever need a job here in Vegas; give me a call. With a little marketing you could be the hottest property in town.\" Alexis laughed and nodded. Veronica turned to me and said, \"Hunter, I have a great need for men with your talents. More than half of the appointments are for women of all ages. A lot of women come here to get fucked. You could charge whatever you want.\"\n\nI laughed and said, \"Thank you Veronica. I'll keep it in mind if Engineering or Pool Cleaning doesn't work out.\"\n\nWe got to our feet and all took a shower together to clean up. There was no fooling around. We were all wasted. After drying off and Veronica found her clothes in the Living room; she and Alexis kissed and hugged. I watched from the bedroom doorway. Veronica looked at me and whispered something to Alexis who laughed and whispered something back. They broke their embrace and Veronica waved at me and went out the door.\n\nWe both collapsed on the bed with our feet hanging off. We laid there looking at the ceiling for a while and then Alexis rolled over on top of me and rested her chin on my chest with one hand propping her up. She just looked up into my face. She had a curious smile on her face. I couldn't tell what she was thinking and she didn't offer any incites. I put my hands behind my head to pull it up so I could more easily gaze down at her. \"What are you thinking right now?\" I said.\n\nAlexis smiled and said, \"Oh, I was just thinking about how much I love you.\" She was silent for a moment and then continued, \"I hate to think about going home. Roni and Mae were right. Four days in Vegas isn't near enough time. We're going to have to come back.\"\n\nFor some reason my dream when I was waking up this morning flooded into my mind. It was so weird because I never remembered dreams for more than a few seconds. This one seems so real but so bizarre. 'What does it mean,' I thought. Alexis noticed the shift in the look on my face and she said, \"That's a weird look. What are you thinking right now?\"\n\nI thought a moment more and said, \"Oh, nothing. I was just remembering a vivid dream I had this morning. I was just wondering what it meant or if it means anything.\" Alexis asked me to tell her about it, but it was so weird I couldn't really put words to it. All I could explain was that everything was golden with the brightest colored beams of light. I told her that I thought she was in it but as I was remembering it right then, I wasn't sure. I glanced at the clock. It was a little past nine. We had four hours before we had to be at the airport.\n\nWe got off the bed and finished our bathroom stuff before going to the closet to start packing. Alexis had a ton of new clothes to take home so she was going to have to dispose of a lot of the stuff she came with. I had new stuff too but my suitcase was really too big for the clothes I brought. Alexis sifted through her clothes and came up with two piles. She set aside the clothes she would wear home. It consisted of a light weight cotton dress. No panties and no bra. I looked at her and she shot me the most lascivious look. She said, \"You owe me a mile high lavatory fuck.\"\n\nI laughed so hard that she started laughing too. When I got my breath back, I said, \"Your mind is stuck in fuck.\" She laughed again.\n\nShe responded, \"Well, what can I say. You bring out the best in me.\" She opened her suitcase and because of the flimsiness of many of her new outfits, she was able to jam it all in. She sat on the cover and I zipped it up. I had no problem with my suitcase. In fact, I was able to put a few of Alexis' clothes that she was going to leave behind. I opened the safe and took everything out. I handed the $200K check to Alexis and I split the remaining $40K in cash between her and me. I asked Alexis if she wanted to eat out by the pool or order room service. She opted for the pool. I asked her to pack my suit for me and meet me there. I was going to go to see about checking out. I had no idea if \"everything here is free\" that they told us at the airport meant everything here is free or not. I took the money that I had and rode the elevator down to the lobby.\n\nAt the checkout counter I was delighted to discover that 'free' meant free. I told them we would be having lunch at the pool and they said that it would be free too. I stopped by the concierge's desk and thanked him for the fantastic service we had received and especially for tracking down Veronica. He was all smiles. He said, \"She is gorgeous isn't she? Almost as gorgeous as Alexis. I noticed that when she left this morning, she was walking a little stiff.\" I smiled at him and nodded.\n\nI walked toward the casino and window shopped along the way. I passed a jewelry store with many diamonds in the window and special lights that they always used to highlight their brilliance. I was about to continue on my way when I was blinded by an incredible burst of light of every color in the rainbow. The dream came back to me in an instant. Now I knew what the bright beams of multi-colored light was. It was white light refracted in a diamond. Alexis's happy face was more intense now than the time I had explained my dream to Alexis only minutes ago.\n\nI stopped and backed up and looked at the one diamond ring that had caught my eye. It was beautiful. The tag said 2.0 caret round cut diamond with two \u00bd caret marquise cut diamonds on each side. I bent down to look closer. The ring looked like a white diamond rose with white diamond leaves on each side. It was beautiful.\n\nA very classily dressed woman was watching me from inside the shop. When I noticed her she motioned for me to come in. I did and asked her to see the ring that I had been looking at. She smiled and opened the cabinet. She brought it out and set it up on a piece of black velvet. It was spectacular with the dark background.\n\nShe said, \"This is one of our nicest rings.\" I could tell that she was certain someone like me could come nowhere near affording this piece of jewelry. She went on though, \"It is a 2.0 carets of D color and IF clarity, round cut diamond. It's nearly flawless.\" None of that except the 'round cut' meant anything to me. She continued, \"There are two .5 caret marquise cut diamonds on either side.\" She turned the tag over and showed me the numbers behind the dollar sign. $20,000. I asked if I could hold it. She hesitated and glanced at the security guard by the door. He apparently caught her look and he came over to stand by the counter. She took the ring off the velvet and with a slight hesitation handed it to me. I was thunderstruck by its beauty. I pictured it on Alexis' ring finger, left hand. I knew the significance and my breath caught in my chest as it fought with my pounding heart. I tried to appear somewhat in the know so I asked some questions that just made it clear that I knew nothing. I asked if D color was good. She looked at me and smiled as she said, \"The best.\" I asked if the IF clarity was good. She said, \"The best.\" I held it up and turned away from the special lights to see what it would look like in sunlight. My dream flooded back into my brain again. I turned back around and handed it back to the woman. She had a relieved look on her face. The guard relaxed too.\n\nThe woman asked if there was anything else I would like to look at. I shook my head. I just stood there leaning on the counter trying to catch my breath. I looked from the ring on the counter to the woman and said, \"If this was to be an engagement ring, is it proper to buy without her approval?\"\n\nThe woman smiled at me and said, \"Either way. We get a lot of each.\"\n\nI smiled at her and said, \"Okay. I'll take it.\" I could have blown her over with an exhale. She repeated the price and I reached into my pants pocket and pulled out the twenty thousand. Her eyes went wide. The guard smiled at me and went back to the door.\n\nThe woman stumbled all over herself as she carried the ring and the really fancy ring box it came in to the cash register. I handed her the cash and she asked if I wanted it wrapped. I contemplated her question and then said, \"No. I pushed the ring box containing the ring in my pocket and left the store. I was nearly bouncing with energy as I headed for the pool. My breath was back and adrenaline surged through my body.\n\nAt the pool, Alexis was there in her amazing bathing suit. She was surrounded by guys trying to strike up a conversation with her or they just wanted to get an up close look at her. She was a spectacular vision. She spotted me coming across the pool deck and her face beamed with a grin. She waved and the guys around her looked toward where she was waving. As I came into the crowd around her, I towered above all of the guys. Slowly they just drifted away as I bent down to kiss her. She met me half way and kissed me passionately, which hastened the departure of the hangers-on.\n\nShe pulled my speedo out of her bag and grinned as she lifted it to my face. I grinned back at her and took it from her. I didn't complain. I went into one of the poolside bathrooms and changed. It took me a few moments to find the best spot for my cock without getting me arrested. I carried my clothes back to our chairs and I folded them into her bag being careful that she wouldn't easily find the ring box.\n\nWoman sitting around us were all lowering their sunglasses down their noses to get a better look at me in my suit and what was or wasn't in it. I lay back on the lounge chair and shoved my hands behind my head. This position always enhanced the muscles on my chest, abs, pectorals and shoulders. Alexis leaned over close and said, \"They're all gawking at you like you're a piece of meat.\" I just smiled and kept my eyes closed. Alexis said, \"I ordered a couple bacon cheeseburgers and fries. They should be here any moment. Would you get us some drinks?\"\n\nI pulled myself out of the lounge chair and walked to the bar. Every woman along the way was staring at my crotch. I had to look down to see if my cock had escaped again. It hadn't but the outline of the entire shaft was obvious. I collected our drinks and got back to my chair just as our burgers and fries were delivered under stainless steel domes.\n\nWe hadn't had breakfast and I was famished. Apparently, Alexis was too. She was digging in to the burgers and pushing two or three fries into her mouth at a time. She looked at me looking at her and she realized what she was doing and stopped. We talked and ate until lunch was gone. We had another drink. It was another blistering hot day but we didn't want to pack wet bathing suits so we adjourned to one of the cabanas. We left the flaps open and crawled up on the bed. We cuddled and kissed as people walked by and stopped to look in. Alexis saw the same guy go by three times and she started laughing. I yelled at the guy to get out of here. We didn't see him again.\n\nIt was getting time to go so we pulled our street clothes over our suits and made our way back to our suite. We stood in the big living room windows hand in hand looking up and down the strip. The sun was blinding and the shimmering heat distorted the view of the hotels and casinos further down the strip toward the airport. I put my arm around Alexis and pulled her against me. She rested her head on my shoulder. She said, \"Thanks for bringing us here Hunter. I've had such an amazing time this weekend. This has been magic. I love you babe.\"\n\nI kissed her hard and long and pulled back. We were forehead to forehead. I said, \"I love you so much.\" She smiled and we kissed again. We hated to break this up but we had a limo to catch. We wheeled our suitcases into the hall and waited for the elevator. We finished another round of kisses as the elevator doors opened. We rode it down to the lobby and when the doors opened, George and Danielle were waiting there. George took out bags. Alexis and Danielle hugged each other and exchanged kisses. We followed George out to the limo. The girls were arm in arm and I followed behind so I could watch their amazing asses sway side to side as they walked. I know. 'What a pig.'\n\nWe all got in the limo and in minutes we were at the airport. I got out and Alexis and Danielle were hugging and kissing again. I noticed that Danielle was wearing a beautiful new diamond bracelet. I looked at George standing beside me. He noticed what I was looking at and he grinned. He said, \"Thanks Hunter. That little trinket got me one hell of a good lay.\" I smiled. The ladies pulled themselves out of the limo and kissed again. Words were spoken but I didn't hear any of them. George got our bags out of the trunk and I shook his hand. George said, \"I hate to see you go. It's going to be pretty boring around here now.\" I kissed Danielle and Alexis kissed George and we made our way into the airport.",
        "We checked in and got our seat assignments. We would have upgraded to first class but we figured we wouldn't be spending the whole time in the seat anyway. I took a moment to pull the ring box out of my pocket when Alexis wasn't looking and unzipped my back and shoved it in. I hadn't locked it before but I locked it now. Getting through security took forever. We had to take off our shoes and I had to take of my belt. I knew Alexis didn't have much on to take off if this went any further. We gathered our carry-ons from the scanner and took our time getting to our gate. We sat down and waited. Alexis found a People Magazine and I looked over her shoulder.\n\nWe finally made our way back to our seats in the last row on the plane. There were fewer people on this flight than the one we came on. There was no one in any of the seats three rows in front of us. Alexis leaned over and said, \"We could outright fuck back here and no one would know.\" I nodded as I fumbled through the seat pockets in front of us looking for a magazine. Alexis had grabbed a blanket on the way down the aisle and she spread it out of our laps. She promptly reached over and unzipped my pants. When I saw what she was going to wear home, I decided to go commando. My cock pushed out past the zipper into her hand. I tried to concentrate on the magazine. I have no idea why.\n\nWhen the cabin door closed and the plane started to push back from the gate, Alexis' head was under the blanket giving me an incredible blowjob. I knew the Stewardesses would be coming down the aisle to check for seatbelts and tray-tables and sure enough I noticed one bent over some guy helping him with his seatbelt. I lifted the blanket and told Alexis that the Stewardess was coming back. She took one more drop down my shaft and then pulled back and sat up in her seat looking out the window.\n\nI looked back down the aisle and then I turned to Alexis and nudged her. She looked from the window to see what I wanted. I pointed down the aisle toward the front and Janine was making her way to the back. When she saw that we had seen her, she burst into a huge smile. When she got past the last row containing passengers, she pulled her uniform skirt up to show she was wearing a garter-belt and nylons with no panties. Alexis burst out laughing.\n\nWhen Janine was standing beside me she pulled into my seat area a little to block any view from up front. Alexis launched herself onto her back in my lap. She lifted Janine's skirt and pushed her mouth up to Janine's soggy pussy. Janine snapped forward when Alexis' tongue pushed into her pussy. Her breath burst from her lungs. Alexis didn't stay there for long. It was like this was her greeting. She pulled back out and sat up beside me. She was grinning broadly. She said, \"Janine why didn't you tell us you'd be on this flight today?\"\n\nJanine said, \"I wanted to surprise you guys. Connie is here too. She'll be back later. We saw you when you boarded. We went forward and stripped off our panties just in case you two have some sex for us. We've already put an 'Out of Order' sign on one of the lavatories right behind you.\" My cock was hard after Alexis' attention and it was tenting the blanket over my lap. Janine spotted it right away and she lifted the blanket. She said, \"I see you've already got started. Janine stood there for several seconds just looking down at my cock pointing straight up at her. I could see her breathing was becoming labored.\n\nShe bent down at her knees and wrapped her hand around the circumference. She looked at Alexis and just shook her head. I got what she meant. She stroked up and down several times and I groaned hard. She lowered her head and put her lips on the glans and kissed it and licked it several times. Then she stretched her lips around the head and forced her face onto it. Her eyes went wide. Her lips were a thin white line around my cock. She started blowing me and my mind flashed back to the blowjob she gave me at her house party. I groaned again.\n\nApparently she didn't have the time to blow me to orgasm. She knew it could take some time. She pulled her lips off the glans and stretched her lip and flexed her jaw. \"Jesus Christ,\" was all she said as she stood up. She turned toward the front and slowly worked her way back up the aisle. I saw Connie come out of the galley in front of First Class and she saw Janine coming forward. She was still working her jaw with her fingers now. Connie smiled and waved to us all the way in the back.\n\nAlexis turned to me and said, \"That's great! They're both here.\" She dropped her face back into my lap and pulled the blanket up over her head. When her lips worked their way onto my cock, my head pinned itself on the headrest of my seat. I groaned, loud and hard and when Alexis pushed the full length of me into her mouth and then her throat it was an incredible feeling. She held me in her throat before she pulled back to breathe. I tried to reach over her to play with her pussy but I couldn't reach that far.\n\nI had my head tipped back and my eyes were shut. Alexis was under the blanket sucking my cock for everything she was worth. Neither of us noticed that Connie had come down the aisle to say hello. The first indication that she was there was when she intentionally coughed. My eyes flew open. The blanket in my lap was moving up and down and Connie certainly knew what was under it. She bent down at her knees and lifted the blanket. Alexis was looking up at Connie with a smile on her face and my cock buried deep in her mouth. She was just holding it in place. She pulled her head back off and licked from glans to balls and held it out offering it to Connie.\n\nConnie reached down and wrapped her fingers as far as she could around it and started jerking me off. Alexis looked at Connie and said, \"We expect to see you two back in the lavatory. Right?\" Connie grinned and nodded and said that she and Janine were looking forward to it. Connie leaned forward and kissed my glans and then licked all the way down the underside to my balls. It felt great. She came back up again and stretched her lips over the head and pushed herself down as much as she could. Then she began working a blowjob with the top half and a handjob on the bottom half.\n\nAlexis' blowjob had me worked up and my orgasm was coming on right now. My mouth hung open and my head tipped back as cum boiled from my loins and exploded up my shaft. Connie didn't get much warning and she was taken by surprise when the first wad rocketed into her mouth. Connie pulled back to the ridge and gagged on the sheer quantity of cum surging between her lips. She maintained position on my cock for as long as she could but she couldn't hold any more and was forced to pull her lips off my glans. I wasn't close to being done yet and the next rope of cum splashed off her chin and spattered all over Alexis' face. Her shocked face turned quickly to glee as she wiped her hand over her cum soaked face. The next shot hit Connie square in the nose and both eyes and then up over her head. Her hair was covered in cum. Alexis came to the rescue and pushed her lips onto the eye to catch any more.\n\nI let out a loud groan that other passengers must have heard. I looked to see if anyone was looking. I looked down at Alexis and she was busy swallowing the remains of my orgasm as fast as she could. After one big gulp Alexis opened her mouth wide and stuck out her tongue to show me. She looked up at Connie and burst out laughing. I looked where she was looking and Connie face and hair were covered with cum.\n\nI hadn't noticed Janine coming down the aisle until she was standing behind Connie. She couldn't see Connie's face but she could see that cum was all over her hair. She pulled Connie up to her feet and ushered her back to the Lavatory. Alexis was running her fingers around her face searching for any stray cum. I helped guide her search until she looked cum free. Then she pushed her lips back on my softening cock and lathed it with her tongue to gather any taste.\n\nAlexis sat up and adjusted her clothes and then crawled across my lap to the aisle. She moved quickly back to the lavatory. I knew where she was going immediately and for what purpose. I stuffed my mostly soft cock back in my pants and zipped up. I turned to look down the aisle and I could see Alexis standing partially obscured by the open lavatory door. I tipped my seat back as far as it would go and closed my eyes. Twenty minutes later, Alexis crawled over my lap toward her seat. She stopped in my lap and leaned down and kissed my lips. She shoved her tongue between them and swirled it all around in my mouth. I could taste pussy on her tongue. When she broke the embrace and sat back in my lap she had a funny little impish smile on her face. I knew I was supposed to ask whose it was; so I did. Alexis' little smile blossomed into a grin and she said, \"Both.\"\n\nI laughed and said, \"Of course it is. How are they doing back there?\"\n\nAlexis responded, \"They'll be fine once they recover.\"\n\nTen minutes later I sensed that someone was standing beside me. I opened my eyes and both Janine and Connie stood there smiling down at me. They both looked all refreshed. Not a hair was out of place. I looked over at Alexis but her head had slid against the bulkhead and her eyes were closed. Janine bent down and spoke softly to me, \"Make some time for us back there, okay?\" Connie smiled down and nodded her head. They both slowly worked their way to the front of the plane. We were an hour into the three and half hour flight. Apparently, I had a lot of work to do yet. I nudged Alexis and unbuckled my seatbelt. I stood in the aisle and cocked my head toward the back. She practically tore off her seatbelt and hurried along behind me.\n\nI turned back to see who might be looking our way to see us going in the lavatory together. The only two people watching were Janine and Connie. Their grins were so wide I could see them from the length of the plane. Alexis started to go in first but then she assessed the maneuvering room and backed out. She pushed me in first and then followed. She shut the door and locked it. She had that lascivious look on her face again. Her hands raised above her head with the hem of her dress in her fingers. When she put the dress on the counter, she was naked. My cock reacted to her nakedness and sprang to attention.\n\nIn the confines of the tiny lavatory there weren't many options for having sex. We settled for me sitting on the toilet with my cock pointing to the ceiling. Alexis turned around back to me and put her legs together and moved between mine. I put my hands around her waist and helped her lower herself onto my cock. With her legs shut, she couldn't see so I wagged my cock forward and back searching for the right spot. She was soaking wet with anticipation and when she could feel it drag over her pussy, she pushed herself down. She yelped and then moaned as her silky slick pussy slowly slid over my granite hard cock. I groaned this time.\n\nAlexis used her legs to push her hips up and down my shaft until I could tell she was getting tired. I assisted her fucking motion by lifting her at the waist to the established rhythm. Her head had dropped back on her neck. Her face was pointed at the ceiling and her mouth hung wide open. Her eyes were shut as she seethed air in and out of her lungs through clenched teeth.\n\nWhen Alexis' orgasm erupted she let out a short scream followed by a stream of \"OOHHHs\" and \"AAAHHHs\". Her body flexed all over my lap and I had to hang on tight to keep her from going to the floor. She wasn't fucking me anymore. I was fucking her and I kept on going until she started to recover.\n\nAlexis pulled herself up off my cock and turned around to face me. Her vaginal juices were flowing down her thighs. She moved her body up close to my sitting position and guided my cock into her pussy again. She wrapped her arms around my neck and pulled herself up my shaft. She repeated this several times and then leaned as far back as she could with just her fingertips on my shoulders and started rocking her hips forward and back so that her pussy was cocked at a new angle to my shaft as she pushed down and then she shifted to a different angle when she pulled up. Her tits were right in front of me and I couldn't take my eyes away. I leaned toward her and sucked her left nipple between my lips. I gently mauled it with my lips sheathed teeth and delighted in the affect it was having on her. I moved to the right nipple with the same affect. I could rock my hips a little but this ride was all on her as she slid her pussy on and off my cock.\n\nI thought I might be able to get Alexis off again but then I wasn't so sure when I could feel my own coming from my toes, it seemed. It was coming from a long way off but it was coming fast. My teeth clenched hard and every muscle in my chest, stomach, arms, neck and face knotted up tight. Every ounce of concentration I had went to my cock as Alexis continued her attack. She grinned at my facial contortions and ramped up her pace. The only thing I could do to help her was to pull her hips hard to me as she was sliding on.\n\nThis brought a yelp from her and she said, \"OHH FFUCCKKK BABE. I'LL RACE YOU.\" She doubled her effort as she was slamming her pussy on and off my cock. One long drawn out \"OOOOOOHHHHHHHHH\" drained out of her lungs. My orgasm rose higher and higher building faster and faster until every muscle locked and instantly released. My hips were trying so hard to fire up into her that I almost stood up carrying her with me. I was so intent of firing my load as hard as I could I totally forgot about hers. She had thrown herself forward with her face in my neck and hung on for dear life itself. She was slamming her pussy onto my cock even as I was desperate to drive my cock right through her.\n\nI finished draining cum into her long before she settled down. Her orgasm was mind numbing. Her pussy quaked on my spent cock for several minutes after I was done. She clung to my neck as she breathed sporadically in long gasps and then not at all. I hung on to her, crushing her tits into me.\n\nI was fully recovered before Alexis stopped clenching her pussy on my softening cock. Finally, she lifted her head off my shoulder and leaned back to look up at me. She sucked in a lungful of air and went, \"PHHHEEEWWWWW.\" She kissed me and said, \"Well? Are we there yet?\" I nodded and we both laughed and laughed. I hugged her to me and kissed her on the ear and neck. She pulled back quickly looking at me and said, \"If you're going to start with the earlobe and neck thing, you'd better reload that six-shooter there 'pahdner'.\"<br >\n\nI laughed again and pulled her to me to kiss her lips. She threw her arms around my neck and kissed me hard and long and then it turned more passionate. My cock, which was still in Alexis' pussy, rose to full size causing her to groan around my lips. She pulled back and looked at me and said, \"You still have a couple of horny stewardesses out there wanting some of that,\" as she swung her hips from side to side dragging my cock with them.\n\nI said, \"You know I'd rather stay right here just like this until we get to the arrival gate.\" She kissed me again. I reassessed my last statement and said, \"But, my legs are so numb from sitting on this toilet that I won't be able to stand.\" Alexis pulled her body back from mine and pushed herself off my cock to stand up by the door. I couldn't move my legs and they burned and tingled in pain. Alexis pulled her dress over her head and opened the door. She stepped out into the aisle and pulled me up. I nearly went down as the leg muscles just wouldn't work.\n\nI finally got to my feet and she held me in the open doorway as I flexed my legs one at a time. She helped me down the aisle to our seats. Janine saw me limping along with Alexis helping and hurried down the aisle to ask what was wrong. She burst out laughing when Alexis explained it to her. I dropped into my seat and Alexis pulled Janine back behind our seats and talked with her for more than a minute. I flexed my leg muscles to get circulation going again.\n\nAlexis crawled across my lap again to her seat. She leaned back into me and said, \"I just told Janine that you can't sit on those toilets anymore and there isn't any room to fuck in there any other way. She said she would discuss it with Connie. I figured that with the amount of cock they must get, it wasn't all that important, but they seem adamant that they want to strap that 'monster in your pants' on, and soon.\" She giggled and squeezed my cock through my pants. It jumped at her touch and she went \"OOOOOOOO\" and leaned back to her seat with an odd but sultry look on her face.\n\nA half hour later, Janine came back and knelt in the aisle beside me. Alexis leaned over to hear what she had to say. Janine said, \"Okay. Connie is going to take care of things up there while I take care of things back here.\" She nodded toward the back of the plane. She continued, \"I'll go back to the rear galley and you follow in two minutes. Okay?\" I nodded and Alexis was all grins.\n\nJanine disappeared behind me and in two minutes I got out of my seat and pulled back the curtain and stepped through. Janine had already stripped down to her garter-belt and nylons and her high heels. She was playing with her pussy. Her face was red and her breathing was already ragged. She went for my zipper and started jacking on my cock with one hand as she struggled with the belt and button with the other hand. She unsuccessfully tried to get my bouncing cock into her mouth as she used both hands to yank my pants down over my socks. I pulled my shirt off over my head and looked down at Janine on her knees desperately trying to force my cock past her lips.\n\nI knew Alexis was not going to sit by in her seat for long. As that thought passed through my brain, she pushed her way through the curtains and then pulled them shut. She pulled the jump seat down and sat. Janine saw the movement to her right and behind and smiled when she saw Alexis. She renewed her attempt to push my cock into her mouth. This time she was successful and she started giving me an amazing blowjob. Alexis pulled the hem of her dress up and started fingering herself. She grinned up at me and I threw her an air-kiss. Janine's head was bobbing up and down on my pole as she ran her fingers down her slit.\n\nWhen Janine seemed satisfied that my cock was as big and hard as it was going to get she pulled her mouth off with a 'pop'. She giggled and then let her ass fall to the floor behind her and she lay back with her knees up. Her fingers were working her pussy which was sopping wet. She lifted one hand to offer to pull me down. I took it and dropped to my knees between hers. I leaned forward and guided my raging hard cock into her pussy. I was as gentle as always but the second my glans touched her pussy lips and found the exact spot she caught me completely by surprise as she launched her pussy forward onto my cock. She screamed softly and kept right on driving until her ass touched my balls. She didn't stop to adjust and pulled right back off and slammed her hips up onto me again. Her contorted facial expressions told me it hurt her but she wanted it this way. I went with it.\n\nI looked over at Alexis and she was grinning from ear to ear. She said, \"Fuck her as hard as she wants it. Jesus, she's in heat.\" I tried to slow the pace down but she'd have none of it. So, I relented and began to fuck her as hard as I could. I pulled my cock out so the glans was between her labia and then slammed it back in. Her back arched up and then collapsed as she pushed her hips back up. She started repeating this action and I got in the rhythm and pummeled her pussy with everything I had. Janine's head was rolling from side to side with her mouth hung open. Her hands were mashing her big tits as her long nipples protruded through her fingers.",
        "I thought that I probably had another round of cum in me. My balls had begun to ache a little. I was trying hard to get Janine off so I could finish with Connie. Janine was so close. I couldn't believe she could take much more of this. She was flailing all over the floor. Her knees were dropping to the floor and then right back up again. Then it happened. Fuck, I wasn't planning on this.\n\nJanine's eyes flew wide open and a silent scream erupted on her face. She used her feet to push away from me and the second my cock came out, what seemed like a wall of water gushed out of her pussy. I heard Alexis say, \"Holy Shit.\" I was so glad I had taken my clothes off. I couldn't believe my eyes. The gusher went on and on and then slowly diminished like a fire-hose after the spigot was closed. Her squirt stopped and after a couple seconds ramped back up again but to a much lesser degree. My body was as wet as if I'd just stepped out of the shower. Alexis sat on her seat wide eyed slowly stroking her pussy lips.\n\nJanine just lay there looking at me. At least her eyes were looking in my direction. She had a vacant look on her face. I crawled over behind her head and pulled her up into my lap. She blinked. At least that was a good sign. Even from my vantage point I could see Janine's outer labia pulsing open and closed. Her breathing had returned to normal. I leaned forward and said, \"Janine. Are you okay?\" She looked up at me and smiled. She tried to sit up and I helped her. She turned her body to sit against the bulkhead.\n\nShe said, \"Holy Shit Hunter. I've squirted before but never anything like that. Jesus Christ.\" She looked at my soaked body and burst out laughing. \"I'm so sorry. You really caught that one.\" She got her feet under her and pushed her body up the bulkhead until she was standing on her own. I stood beside her ready to catch her if she collapsed like she looked as though she was about to. Alexis got out of her seat and gathered up Janine's uniform and bra and set it down on the counter beside her. Janine reached into a cabinet and pulled out two towels. She handed one to me and wiped herself dry with the other. I steadied her as she pulled on her clothes item by item. She stepped into the lavatory and five minutes later came out looking none the worse for wear. She took my towel and dried me all over and then she pushed against me and kissed me hard. She turned and did the same to Alexis and then was gone.\n\nAlexis turned to me and said, \"She wants you to stay right where you are and she'll send Connie back. Are you going to be okay?\" I nodded. My dick had softened considerably. Alexis noticed and she wrapped her fingers around it and started jerking me off. By the time Connie pushed through the curtain my cock was back up to full size. It stuck forward at a sixty degree angle as I stood against the counter. Alexis went back and sat in the jump seat along the rear bulkhead.\n\nConnie started to remove her uniform but I walked up to her and removed it for her. She was already breathing heavily. When her bra and panties came off she shivered. Her panties were soaking wet. I put everything on the counter behind me. She stood there naked. She never looked at anything except my bouncing cock. She was thin but not skinny. Her tits were small but firm. Her nipples were hard on dime sized aureoles. I moved my body up to hers and put my arms around her waist and pulled her against me. She moaned as she kissed my chest. I gently guided her to the floor away from the flood area left by Janine. Connie's lower lip started to quiver again.\n\nShe reached for my hard cock but could only reach the glans. Alexis moved down off her seat again and pushed her lap under Connie's head so she could watch. I kissed her pert tits and moved steadily down her body until I pushed my tongue into her pussy. Her back arched up and her hips followed. I backed off and moved my hips to hers and gently pushed my cock into her pussy. Connie looked up at Alexis and said, \"Jesus I don't know how that thing goes in there.\"\n\nAlexis responded, \"I know but it feel wonderful doesn't it?\" Connie grimaced once and then nodded. Paying close attention to Connie's body language I could tell when she was ready to rock. I started to fuck Connie's pussy in a slow gentle fashion. Quite the opposite from what Janine had demanded. Connie started a low pitched constant groan. As I increased the pace, her groan built in pitch until a soft scream forced from the throat.\n\nAfter five minutes, Connie's muscles cramped up hard as an orgasm cascaded over her. Her eyes grew larger and larger as the orgasm built higher and higher. Her mouth dropped open in a silent scream. When I felt her pussy start to clench down hard on my cock, my own orgasm started to build. It started and stopped and started again. My face contorted too. Connie started humping her hips up into me as she became aware that I was about to cum too. As cum boiled up from my balls, Connie started building a cry that peaked when my first shot of cum rocketed into her pussy. She grabbed her small tits and dug her fingertips in hard. I blasted five or six long spurts of cum into her as the spasms of her own orgasm rocked through her.\n\nEven after I had finished I kept a steady fucking motion until Connie's orgasm had finished too. I pulled my cock back and Connie grinned when it pulled free of her. She looked up at Alexis and said, \"Thank you Alexis. Thank you. That was fantastic.\"\n\nAlexis said, \"Hunter did all the work. Thank him.\"\n\nConnie shook her head and said, \"None of this is possible without your okay.\" Alexis smiled and nodded.\n\nWe all got up and Connie and I started putting our clothes on. Connie looked at the flood area and said, \"Did Janine do that? Holy Shit. I'll come back later and mop that up so we don't get in trouble.\"\n\nWe returned to our seats. Janine stood in the aisle at the front of the plane and waved as we got into our seats. Five minutes later the captain came on the intercom to tell us to put on our seatbelts and stow the tables we would be on the ground in ten minutes.\n\nAs we deplaned at the forward hatch, Alexis hugged and kissed Janine and Connie. I offered my hand to thank them and they hugged and kissed me too. We were the last two off the plane so they took their last opportunity to squeeze my cock. They laughed as I hurried along behind Alexis. We were home. What an amazing week. What a lot of stories. "
    ],
    "authorname": "BigZeke13",
    "tags": [
        "orgy",
        "las vegas",
        "threesome",
        "blojwob",
        "deepthroat"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-17"
}