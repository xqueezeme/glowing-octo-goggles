{
    "title": "Ten Days at Sea",
    "pages": [
        "This was actually a story intended for the nautical theme invitational, a few months/years back. I never got it done in time, but hey, thought I'd finish it up and throw it out there, see if anyone enjoys it. \n\nIt was edited by 29Wordsfornow, who did a stellar job on it. \n\nThis was an interesting problem, switching between time periods and perspective, hopefully we caught all the mistakes I made. \n\nI should have stuck some '80's music in there too, since most of it is set then. \n\nBrett Bell was finishing up making a tuna salad sandwich using his wife's recipe and wishing for the tenth time that day that she was still around, when the doorbell rang. Pausing only to cut the sandwich in half -- ready for some 'good eatin' later' as she would have put it, with exaggerated accent - and wipe his hands on a kitchen towel, he walked to the door, wondering who was there, at midday on a Wednesday. He wasn't aware of any Amazon deliveries, and it was a little early in the day for the Mormon Missionaries who were currently targeting his neighborhood. \n\nGiven it was Sunday, he doubted he'd see any other human at all, unless he chose to go out, so a ring on the door was unusual. \n\nWhen he opened the door, he saw two youngsters, as his father would have put it -- god rest his soul -- standing looking expectantly. One male, one female. Both had light blond hair, and they were obviously brother and sister, the family similarities were obvious. Both wore hesitant smiles -- the hopeful kind, where a good first impression is desired. But what caused him to start in shock was when he looked in their eyes. One brown eye and one blue each. Just like his. \n\nAnd when the lady said, with a distinct British accent, \"Hello Dad. It's nice to meet you,\" it was the moment he collapsed. \n\n\"Are you sure you are okay?\" said Amelia, looking very concerned. Brett was on the couch in his living room head in his hands, trying to comprehend what was happening. Amelia was hovering over him, the same kitchen towel he'd wiped his hands on now wet and pressed into service dabbing his forehead. \n\n\"I told you I'm fine,\" Brett replied, some steel in his voice. \"You just took me by surprise, that's all.\" \n\n\"Told you we should have rung him up first,\" said the man. Bradly, as he had introduced himself, right after they'd helped him up off the doorstep and into the house. \n\nBoth were decidedly British. That same clipped and clear accent that Brett associated with Downton Abbey and, of course, Fiona. Or using her full title, the Lady Fiona Birmingham Hart. Daughter of the Duke of Ipswich. \n\nBut here they were. He'd had some suspicions of course. The timing had seemed right. But, he'd never reached out and ask. That had been the agreement, and he wasn't going to break it. He knew, like she did, there was no future. No chance. She was trapped where she was, and he was powerless to get her out. She had commitments. Responsibilities. Duty. He knew that, and he loved her enough to leave her alone when she asked. No contact. As he'd agreed, no matter how unwillingly. \n\nHe knew that his heart would unlikely survive another encounter anyway; best to live and let live. Or in his case, Live and let Love. \n\nHe'd nursed his broken heart for years. New places. New occupations. New relationships, if only temporary, until he'd met Caroline. She, as it turned out, was as damaged emotionally as he was. They'd clung together, two pieces of flotsam in a tsunami of life, holding on to each other for dear life, and making a life together. It was never a relationship dominated by passion, more a comfort. He'd loved her -- and he was sure she loved him -- but it was a relationship of convenience and attraction, not a white-hot passion like he'd had with...her. If only for ten days. \n\nAnd now here they were. The children he would never have. \n\nHe moved his hands and looked up. He had to cope. Deal with this. However unexpected. \n\nHe smiled at them ruefully, and they looked down at him, concern on their faces. The crease in Bradly's face was one he'd seen in the mirror more than once. He glanced at Amelia and was struck again by how much she resembled her mother. \n\n\"I'm really sorry. I'm not normally that much of a wuss. You just...well, you really caught me by surprise. I'm okay now. Just getting on a bit.\" \n\nAmelia snorted, and then sat down, saying, \"You are fifty-one, Dad. You are barely begun yet. Strong as an Ox, so mother says.\" \n\n\"I think he needs a drink,\" said Bradly, looking around the great room to locate interesting bottles. His eyes lit up when he saw the small collection on the side table. It was an eclectic grouping -- a bottle from every country he'd visited while he'd been in the merchant marine, plus some top end blended Irish and Scottish whiskeys. He'd never worked out if it was Whisky without an 'e', or Whiskey with an 'e'. It seemed to change depending on the nationality of whomever he was talking to at the time. \"I know I do,\" he added, walking to the table to examine the different bottles. \n\n\"You think everyone needs a drink!\" exclaimed Amelia, and then glancing at Brett, her expression softened. \"Mind you, in this situation, we could all probably use some mother's ruin. Even if the sun isn't over the yardarm yet.\" \n\n\"You look so like your mother,\" said Brett, wistfully. He suddenly gathered his wits and stood. \n\n\"But my manners. You show up, and I've offered you nothing. It's lunch time, I was about to have a sandwich. Can I offer you something?\" \n\nBradly looked over from the drinks table, looking pensive. \"What are you having?\" \n\n\"Bradly!\" said Amelia, sharply. \n\n\"What? If it's something good, I'm definitely in. I'm all still messed up from all that jetlag. What you got, Dad?\" \n\n'Dad? Who the hell was that? Oh yeah. Me,' Brett thought. \n\n\"Tuna sandwich. It's the... it's Caroline's recipe. Tuna, mixed with mayo, sprinkled with Sweetcorn and green onion. Tastes great.\" \n\n\"Oh yes, that sounds marvelous,\" said Bradly, smiling widely at Brett. \"Definitely up for some of that.\" \n\n\"Amelia?\" inquired Brett, looking down at his...daughter. \"I'm sorry, should I call you Amelia? Do you prefer anything else?\" \n\nAmelia smiled wide at him, the same wide smile as Bradly. Genuine, and showing big teeth, with a tiny gap between the two front teeth. Just like her mother. \n\n\"My family calls me Milly,\" she said, hesitantly. \"I'd really like it if you did too?\" \n\nBrett's shoulders dropped at her obvious and genuine desire, and suddenly she was on her feet and in his arms, hugging him for all he was worth. \n\n\"I'm sorry. We didn't know who you were. We didn't even know you existed. Mother only told us a few weeks ago, and it took so long to find you. I'm sorry. We just want to know you. To know who you are...\" \n\nThe words came out thick and fast, interspersed with sobs. \n\n\"It's okay, Milly. You are here now. I'm the one who should apologize. I wasn't there. There was a reason and I'm sure your mother explained. But please, let me...\" \n\nSuddenly there was another arm wrapped around him, and Bradly was in on the hug. He was wordless, a few tears coming down his face, belaying the disinterested hard man impression he'd been trying so hard to maintain. \n\n\"We have all the time in the world to catch up. You are here now,\" murmured Brett, wondering how his life was going to be going forward. Well, it couldn't be any worse. \n\nLunch completed, Brett finished off his beer and burped, contentedly. Suddenly realizing not only his guest, but their place in society, he pursed his lips and looked away. Then he looked back. He was damned if he was going to be made to feel inferior in his own house by his own children, regardless of who raised them or what position they may feel they had. \n\nAmelia looked on amused, and when Bradly burped in almost the exact same fashion, he laughed. These were definitely his children. \n\nPretending to be disgusted, Amelia turned away. \"Men. Such pigs. Did we at least wash our hands before sticking both trotters in the trough? At least I know where he gets that from.\" \n\nBradly looked at Brett and spread his hands in a 'what can you do?' gesture, and Brett winked back. \n\n\"I'm just glad it wasn't a peanut butter and jelly sandwich. I mean, that's what you Americans eat, isn't it?\" Amelia announced, looking back at Brett. \n\n\"Well, on occasion. Have you never had one? I'm sure I have some here somewhere...\" replied Brett, hamming up the accent. \n\nShe just smiled back, and Bradly finished his beer, making lip smacking noises. \n\n\"You know, they look down on your Yank beers back home. But this, this was rather good. Have to say. What was that?\" \n\n\"Anchor Steam. Made up in San Francisco. It's a favorite of mine.\" \n\n\"I think we may have to look into grabbing a case before we head back,\" said Bradly, appreciatively. \n\n\"So...\" said Amelia, getting up and gathering up their plates, \"I suspect you'd like to know why we are here? Why Mother finally told us about you?\" \n\n\"I'm guessing it's because of the death of the Duke?\" hazarded Brett, eyes following Amelia as she deposited the plates in his kitchen sink, and then as she wandered to the fridge to gather new bottles of the beer for all three of them. \n\n\"Indeed,\" replied Bradly, nodding to Amelia as she handed him a bottle. \"Mum finally came clean after the funeral. On learning of your existence, we looked at her reports on you, had to do some research to find your current abode, and hopped on a plane as quick as we could. We had to meet the man who...\" He didn't finish the statement, going a little red. \n\n\"Yeah,\" said Brett, dryly. He was not about to have that talk with his children. \"I suppose you want to know the story?\" \n\n\"Among other things, for sure. We have other stuff we want to know, obviously. I mean, for example, any hereditary stuff we should know? Do we have a history of heart disease, for example?\" Amelia was right to the point. It made Brett chuckle -- another one of his traits on display. \n\n\"Not that I'm aware of. The only thing I know about is the skipped generation of insanity. I mean, Uncle Tom and Dad both died in an asylum. That's happened for five generations now. Skips every other. It should be hitting your generation I think... Mad cow or something?\" \n\nThere was silence for a moment, then both Amelia and Bradly burst out into laughter. \n\n\"Oh, very good. Very drool. You almost had me going there for a moment,\" laughed Amelia. \n\nUnable to keep a straight face, Brett joined the laughter. It felt good. It was unforced, and just spontaneous. There hadn't been a lot of that recently. Not since Caroline died. \n\n\"But yes, we'd like to hear it. Mother didn't tell us much. Just that you were 'the best ten days of her life,' as she put it.\" Amelia made quote motions with her fingers and then rolled her eyes. \n\n\"The concept of mother having passion filled days at sea is, honestly, both off putting and also quite hard to believe. She's never been one for large displays of passion, except when one of us is threatened. Telling us this story about you was quite the shock, let me tell you.\" \n\n\"Shall we sit in the living room? Comfortable chairs there, and the view is terrific,\" asked Brett, wondering how much he should really tell them. How much do children really want to hear about their parents love life? \n\n\"Yes, let's,\" replied Amelia rising, Bradly following. \n\nThey took their drinks into the great room, with its massive bank of floor to ceiling windows, that looked out over the cliff and into the Pacific Ocean, calm and flat as the eye could see, clouds rolling over the top of it. Distantly, breakers could be seen rolling in, and surfers trying to catch a wave in their wetsuits, in the post midday sun. The north San Diego surfing grounds in all their splendor. \n\n\"Nice view,\" nodded Bradly at the bay windows, as they settled into a couch and easy chair, arranged for peak view. \n\nBrett shrugged. He'd never tired of it, but he'd grown accustomed to it over the years, hardly noticing some days. When there was a storm though, it was one of his favorite things to do, to sit in the easy chair and watch the lightning fork and the seas roll. More than once, he'd woken late at night, with a blanket over him, where Caroline had tucked him and left him to his fascination and memories, a glass of Jameson on the table within easy reach, alongside a large glass of water. \n\nSomething occurred. \"You said 'reports'? That your mother had?\" \n\n\"Yes,\" replied Bradly. \"She looked in on you every other year or so. Just to catch up with where you were. How you were doing. I don't think she ever stopped loving you, to be honest. When she talked about you, she was more animated in years. Apparently, you were somewhat hard to find when you moved on from Chicago?\" \n\n\"I'm not entirely surprised to hear it. I figured she was doing something like that. When I got married to Caroline, we got a wedding gift, from an anonymous benefactor. When we signed for the package and opened it, there was no note. Just five diamonds. Good ones, too. They paid most of the down payment on this place in fact. I figured then it must have been her, reaching out in her own way. No direct contact but still...\" \n\nBrett took a long slug of his beer, to mask his feelings. When it had arrived, and it had dawned on him the likely origin of the outrageous gift, he'd been very hard pressed not to reach out. But, his promise... both to Fiona and also the promises he'd made to his new wife. It wouldn't have been appropriate or right, for anyone. He'd been unsettled for days though. \n\n\"Did you tell your wife where you thought they came from?\" asked Amelia, curious. She was sitting at the end of the couch, her legs tucked up under her, moving some stray blond hair from her face and tucking it behind her ear. So like her mother, it almost burned Brett. He looked away to keep his own control. \n\n\"Yes. We had no secrets. She knew of my broken heart. She was similarly afflicted, if your mother's reports didn't mention that. We were both of a same mold, and we helped each other become whole. Whoever your mother was to me, Caroline was too. I don't know if I would have made it to this age without her and her love and acceptance. I respected her too much to lie. And she understood. She did, it was amazing. Caroline's ability to look beyond the broken to the rest was amazing. She pulled me out of my own self-destructive cycle and I owe her a lot. Everything, in fact.\" \n\n\"I'm sorry. We didn't come here to disrespect her or your relationship, Dad. I know we came out of the blue. Out of the past, so to speak, but we are just grateful to be here. We know you have a life and we aren't here to try and drag you out into our world. Just to... know you?\" Bradly was concerned at the emphatic nature of how Brett spoke. \n\n\"Oh, it's okay...son.\" There. He said it. This was his son. How the hell did Dads work anyway? He had no clue. \n\n\"I have had a life since your mother and I won't apologize for it. Caroline was important and amazing and we built a great life together. But she's gone now, and I have to make a new life now. One without her. But I'll never forget her or what she did or what she meant.\" \n\nThere was silence for a bit after that statement. The quiet and distant roll of the ocean waves and the gentle ticking of a mantle clock all that could be heard. Brett could tell that both children were groping for what to say next. They wanted to hear about their mother, and he could tell, so he made it easy on them. \n\n\"But your mother was special too. In ways I can't even begin to tell. Unless you've been in love like that...well...\" \n\n\"So, how did you meet?\" \n\nBrett closed his eyes for a moment, and unbidden, a memory of Fiona popped up. Clad in just his shirt, all prim and proper and yet devastatingly seductive, a bottle of cheap wine in one hand, a plastic wine glass in the other, standing in the door way of his cabin, - where anyone might walk past, - her head tilted against the door frame, as she said, \"See anything you like, sailor?\" and then he began to talk. \n\n\"I was twenty-four. I'd been at sea in the US merchant Marine for almost six years. Ever since my eighteenth birthday. My parents died when I was seventeen, and I had very few prospects. I wasn't any great shakes at school; too interested in girls and weed and rock music. And the concept of college for an orphan with no trust fund, well, it wasn't going to happen. I tried to join the Navy -- I had some fool ideas about going to sea and protecting the world. Damn silly, now I look back on it. But they wouldn't take me. I'd gotten caught selling some weed when I was seventeen, right after Mum and Dad were killed in a car accident. You have a conviction, well, you have to apply for a moral waiver to join any of the armed forced, and I was young and arrogant, and they said 'Thanks by no thanks.' When I think about it now, probably the right thing; I'd have made a shitty naval seaman. Too hard for me to not ask questions when given orders. Anyway, I wasn't taking no for an answer, so off I went and signed on to some ship. An oil tanker. The Pearly White. What a name. \n\n\"I went from contract to contract. Some ships have you on contract for a time period -- six months or whatever, and when you are done, you can leave the ship at whatever port she happened to be in when the time is up. Some hire you for a specific voyage or set of trips. I wandered around from ship to ship. I had no one to go home to, no home to really speak of. I was brought up in Atlanta and had always wanted to go to sea. So there I was. It was a container transporter I was on, The Lady Grey. Bit of a rust bucket, but it got the job done. I was an able seaman by then. I was going to go for the Bosun's ticket next time I got to port with an academy office at it. \n\n\"We were bound to Hong Kong out from Argentina. We weren't pushing it hard -- we were pretty much fully loaded and had already lost two containers when we went through a squall early in the trip.\" \n\nBrett noticed both Bradly and Amelia looking a little shocked. \n\n\"Oh, it's no big deal. Happens more often than you might think. All the containers have to be heavily insured anyway, and the reality is that you pay extra to be lower in the ship. If you pay the least, you go on top and it's known that can be risky. Just part of the glamor of shipping containers. \n\n\"Anyway. We were about ten days out from Hong Kong -- you tend to skirt the pacific rim if you can, rather than going direct across sea. If anything goes wrong, it's always better to be able to make landfall easily, or have people come to you quickly. You only go direct across if time is of the essence. \n\n\"We got this call, a general 'keep an eye out' alarm. I was doing bridge duty that day, and I remember it well. You don't get many of those. There are all sorts of rules you have to follow when you get one. Reduce speed. Radar on maximum, look outs posted, coordination with other ships in the area and so on. \n\n\"So, we slowed down -- the captain wasn't happy about that because his bonus was directly related to us being on time and now we wouldn't be. But there are maritime laws you have to abide by. We had no choice, and rightly so. \n\n\"We'd just missed a major storm that had come through a week or so ahead of us, thankfully. Those are never fun. Apparently, someone had been sailing the area and hadn't been heard from since the storm and there was a lot of fuss about it. Someone important. \n\n\"As it turned out, it was my friend Marcus who saw her. We'd picked up something on radar, something small, that didn't respond to radio calls, so we'd made a small detour and then lowered the skiff the ship had aboard to go take a look. And sure enough, there it was. One very beaten up single masted forty-footer. Minus mast or sails. Or pretty much anything. No propulsion, and it had obviously been through it. Everything not bolted down was washed away, and quite a lot that was bolted down too. ",
        "\"The whole ship was pretty destroyed. It was just barely staying afloat, to be honest. There were some canvas scraps rigged up to catch water, so obviously the water containers on board were broached. The whole thing just smacked of desperation. We were yelling and firing the horn on the skiff as we approached, and there was no motion, so we were imagining the worst. Obviously someone had survived the storm, since there were those canvas water catchers, but it was possible that they hadn't made it past that. After all, you only survive a few days with no clean water. \n\n\"I was first aboard, since I was the one with what little medical training is required for container ships. I found your mother in the main cabin, on a makeshift hammock. She was weak, and not even completely conscious. The entire room was mostly flooded, stuff sloshing around our feet. We just grabbed her and bundled her up and carried her into the skiff. We put the boat on a tow, and dropped a small pump into the cabin to pump out the water. We figured there might be something in the boat she might want later, so easier to just take it with us. \n\n\"She was moaning and groaning as I carried her -- she was wearing a very torn set of pants and white top, which she'd torn the arms off, to make a head scarf. She was obviously suffering from dehydration, and her tongue was enlarged, and lips chapped. Thankfully, no sign of sun exposure -- she'd kept below deck when the sun was up to avoid that, which was smart. \n\n\"It took us about two hours to get back to the container ship. Dragging the smashed boat with us wasn't doing us any favors, and the pump was working overtime throwing water over the side, as more seeped in, from the dragging we were doing. It was clear when we tied up next to the container that it wasn't going to be long for this world. As I carried our bedraggled victim up to what constitutes the medical bay, our chief engineer jumped down into the boat, and started grabbing stuff from inside and passing it back, as fast as he could. The pump just wasn't keeping up, and it was clear it was going to sink pretty soon. \n\n\"We got a lot of stuff out of it -- all the personal stuff we could find, plus some other waterlogged supplies. There was no point in trying to salvage any of the electronics, since we had all that kind of stuff aboard, plus it was all mostly destroyed anyway. We got some charts, some clothes, a couple of books, as many sealed containers as we could find, stuff like that. It took the boat about three quarters of an hour to sink completely. We all watched it go down, slowly, solemnly staring. No mariner enjoys watching another ship go down. It's not only bad luck, it's the knowledge that someone, somewhere, is out a boat and probably a home. Davy Jones has a lot to answer for, at times. \n\n\"I'd got our passenger settled, put an IV into her to put some fluids in, with a sedative. She needed proper sleep. I'd checked her over -- as much as was decent -- and while there was a large bruise on her left hip and on the left side of her head, plus a deep cut down one forearm, from just below the elbow to just above the wrist, she seemed to not be injured further. While we do have a medical bay on the ship, it's not really a hospital room. It has a small bed like appliance in it, but that's more for things like basic dentistry, or sewing up of wounds. It's not a bedroom in itself, although there was a spare berth next to that bay itself, which is where I ended up manhandling her into. \n\n\"The reality was that she was slightly delirious, and mostly out of it. She was aware we'd got her, and that she wasn't on her little yacht any more, and that she'd been rescued, but beyond that, she wasn't making much sense. She needed fluids, protein and most of, uninterrupted sleep. \n\n\"When I talked to the Captain, to give him an update on her condition, he grumbled a bit and then ordered the engines full ahead. I could tell he was intent of making up that time and, more importantly, making up his bonus. He'd been with the company for over seventeen years, and he was only four more off full retirement, and I knew he was looking forward to it. He'd shown everyone pictures of the cabin he had picked out, on the Norwegian coast, for when it came. It was clear that his love affair with the sea had cooled considerably, and like a shitty marriage, he was tolerating being there until he could dump it unceremoniously, and be where he wanted to be. \n\n\"He informed me that he'd radioed in the find, her condition, and been told that unless she had life threatening injuries, which he now knew she didn't, that he was to go full ahead and try and make the port facilities at Hong Kong as soon as he could. She'd be put ashore there, hopefully fully restored.\" \n\nBrett stopped to take a drink -- thirsty work, all this talking. He wasn't used to it, since Caroline had died. He mostly just listened these days -- the radio, pod casts, the TV, whatever. Anything to make the house seemed lived in. One thing Caroline has been great about was always having things in motion. There was always something happening, something to talk about or discuss and life felt very much lived. With her gone, it just...didn't. \n\nHe glanced at Amelia and Bradly, and they were intent on his every word, eyes shining. This was a story that had been hinted at but never really told, at least not to them. They just wanted to know... \n\nSo, he continued, shifting his view to the placid sea, outside the window. \n\n\"She slept for the next twelve hours. I moved my berth from my normal cabin to the one next to hers, at least temporarily. We actually had six passenger cabins on the ship -- sometimes the company would ask us to carry someone or some company officers would be aboard, so we'd need somewhere to put them, so we had these six cabins, all with en-suite bathrooms. They were small, and didn't have balconies or most of the amenities you get on a cruise ship, but they did have a small TV and VCR installed, ship board phone and radio. The ship itself had a small tape library in the mess, something like thirty or forty movies and TV shows, some of them English based and some not. People took and brought as they came on board, so it was constantly changing. Remember, this is twenty-five years ago -- no DVDs or Wifi at that time. It was all strictly video tape or physical books. We had a lending library for that too, with as many current magazines as we could find when we docked, plus a healthy bunch of thrillers and spy novels and the like. \n\n\"So, I grabbed a book and settled in next door. The captain had made it plain that she was my problem to deal with, and although a fair number of the rest of the crew had some interest in her, popping in to ask her condition, most of them had work to do. It doesn't seem like there would be much to do on a ship that's taking containers to another port, but you'd be wrong. Ships like that need a lot of preventative maintenance, to keep them running and to be sure that the emergency equipment would work if required. There's a lot of work on a working container transporter, just like there is on an oil tanker, or a cruise ship, or any working vessel. \n\n\"Like I said, your mother slept for twelve hours straight, just dead to the world. I had left her door open a crack, so I could hear if she moved around or called out, and I managed to get seven hours in myself, which I was surprised at. But, I did hear calling out, with that posh voice she has. She was calling, 'Hello? Anyone there?' and sounding a lot more composed, so I hustled from my cabin and into hers. \n\n\"I can tell you right now, kids, I was smitten the moment I walked into that room. I'd had my fair share of instant infatuations in the past, but this... this was the real deal. I mean, you know what your mother looks like, but right then, she was in the flush of youth. Beautiful porcelain flawless skin, the deep auburn hair, the flashing eyes, those perfect eyebrows, the small mouth with the full lips. Just... wow.\" \n\nHe glanced at the kids, and could see the expression on their faces, and then suddenly realized who he was talking to. This was their mother he was describing, probably in ways they'd never heard before, and in ways that were almost certainly making them uncomfortable. No child ever wants to hear of their parent what a hottie they were in their youth. For the first time, it dawned on him the story he was about to tell them. Did they really want to hear about their mother being unfaithful to the man they called \"Father\"? Would it change their opinion of her? \n\nHe had to ask. \n\n\"Hey, look, what I'm telling you... this can't be easy to hear, yeah? I mean, this may change how you view your mom, and I don't want that. You sure you want to hear this?\" he challenged them, shifting a little uncomfortably in his chair. \n\nAmelia snorted derisively, and Bradly smirked. \n\n\"Yeah, the only thing this is going to do is improve our image of her. She's not been the most...passionate of people growing up, Dad. The most animated we've seen her was when she finally came clean about our parentage. Hearing this makes her far more alive than she tends to be most of the time, honestly. So please, continue,\" Amelia said, matter of factly. \n\n\"Does she still look the same? I try and not search her out on the internet. It would hurt too much,\" he admitted. \n\n\"Well, the hair has a fair bit of grey in it now -- mother is not one for putting on airs and graces, unless she absolutely has to, for some public event, so she doesn't dye it most of the time. And there's a few more crow's feet around the eyes and probably the lips -- it's hard for me to really tell since she's always looked the same to me. But yes, I don't think she's really changed that much over the years,\" Amelia commented. \n\n\"Yes, no tattoos that we are aware of,\" laughed Bradly. \"Not unless they are really hidden!\" \n\n\"Bradly, that is Mummy you are talking about. Have some respect,\" chided Amelia, hotly. Brett could see Bradly was more than a chip off the old block, whereas Amelia was definitely a carbon copy of her mother. Ramrod posture, clipped elocution, and absolutely zero pretense. When you are related to the Queen of England by birth, no matter how remotely, what's the point in being a poser? \n\nBradly smirked back, and yet again, he knew he'd seen that expression before. Where though? Was it in the mirror? \n\nHe smiled. He had all sorts of conflicting feelings -- being kept apart from these children for so many years, not even really believing they were his He'd missed out on so much of their life, and that was very upsetting. But... they were here now, and they wanted to know him. And that's something. That's very definitely something. \n\nHe looked from Bradly, to Amelia's gaze, now directed back at Brett, eyes shining, with that pleased and expectant expression on her face, so similar to her mothers. That same wide smile, inviting expression, where she made it feel like you were the only person in the world and she was paying you all of the attention she could. Glancing back at Bradly, he could see him sitting back, trying to affect a cooler and more casual pose. But he could see the posture. He could see the eagerness in his body language. This was as important to him as it was to his sister, he just didn't want it to appear that way. \n\nHe gave that one chuckle you do when you make a realization, one that makes you smile internally. \n\nAnd, looking back at Amelia's face, he was transported back twenty years, back to that dirty container ship -- The Lady Grey -, to the point where Fiona had just reawakened. \n\n\"Um. Hello. I'm assuming I was rescued?\" the lady on the bed asked, expectantly. She was holding her bed clothes up, to cover whatever modesty she felt she had to, after Brett had knocked and entered the little cabin. \n\n\"Yes, indeed,\" he answered, coming over to the bed. \"I'm Brett. I'm the...well, as much of a medic as we have on this bag of bolts. Brett Bell. Able Seaman.\" \n\n\"American, then? Is this an American ship?\" she said, more as a statement than a question. She had a very clipped British accent. He didn't know much about accents, but it seemed quite upper class to him. \n\n\"Actually, registered in Honduras. At least, the company is. Why, I don't know. We are part of a container fleet, out from Buenos Aires, bound for Hong Kong. Due in about ten days or so, weather permitting.\" For some reason, Brett found himself adopting her method of speech. Direct, to the point, with clarity. No unnecessary words. \n\n\"Ah. Well, you came along just in the nick of time, didn't you? Quite manna from heaven, and no question.\" She smiled uncertainly. \"Did Peppermint Joy make it?\" she asked, suddenly. \n\n\"Your ship? I'm afraid not. It was filling with water -- the towing we put it under to bring you to the main ship just loaded it up. We got all we could out of it, but it went down about two hours after we got you on board. I'm sorry.\" Brett added the last, because he knew the lone sailors got very attached to their ships. \n\n\"Oh well. I guess it was going to at some point. She had quite a battering in that last storm, much more than she was rated for. There were winds of over a hundred miles per hour, at least, before my little weather station gave out. The hurricane -- was it a hurricane? Or a typhoon? Or a cyclone? I think it was a cyclone, because we were in the south pacific? Is that right? You'd know, wouldn't you?\" This was all delivered very fast, with her running her hand through her chestnut hair, in the most attractive and unselfconscious way. It was incredibly attractive to Brett. \n\nBrett was to discover this was a prime Fiona trait -- delivering information very fast and veering off into a side bar equally fast. \n\n\"Does it really matter?\" Brett asked, mainly because he wasn't that sure either. They were in the south pacific -- barely -- but most of the crew referred to them as typhoons. \n\n\"No, I suppose not,\" answered the lady, not breaking her train of thought. \"Yes, so big storm. Typhoon. Whatever. It came up behind me. I knew about it, of course, but I was trying to out run it -- use its own force against it. When it became clear that wasn't going to work, I reversed direction. The storm -- did it have a name, by the way? I never got one -- was heading north west, so I started heading south west, trying to get out of its path. That didn't work out so well either. I got caught on the middle edge, as best I can judge. There was nothing for it but to batten down the hatches, as they say, and try and ride it out. I tied myself to the tiller, and held on for dear life. It was... quite the battering, I have to say. I've not experienced anything like it.\" \n\nShe stopped for a second, and looked at the bandage I'd put on her arm. \"I got this as the mast went over. When it did, it took the small radar dish with it, and the radio mast, and that's when this happened. Sliced my arm open. I did the best I could with some old clothes to bind it up. About the only thing that didn't get crushed or lost was the medical kit.\" \n\nBrett had noticed she'd at least tried to deal with the gash -- it was at least clean and wrapped when they'd found her, something that had no doubt saved her life. Infection would have been almost impossible for her to deal with in the deep ocean. \n\n\"It took almost seven hours before the waves stopped being so high. I did my best to steer through them, but I knew once it calmed, I was in trouble. The boat did spring some leaks, and salt water got into the batteries, and once that happened, solar panels or not, my radio was kaput. I did trigger the emergency beacon, but I don't think it was working either. Hard to really tell, to be honest. I tried the flares too, that first night, once I'd done inventory -- which didn't take long, let me tell you -- and nothing was doing from that. So, I took stock, realized my fresh water supplies were mostly gone, and had to deal. As you do, you know?\" She delivered this so matter of factly that it was impressive. Brett was astonished at her resilience. \n\n\"I did all the things I'd seen on television, the survival stuff. You know, fashioned a water catch from what was left of my canvas sails, built myself a little fishing pole. All the do it yourself stuff.\" Fiona was almost excited about retelling the things she'd done, justifiably proud of herself for surviving, and not panicking. \n\n\"I did have some food left that wasn't spoiled, and some cans of pop, and the like. A few bottles of water, that sort of thing. Enough that I could survive a while, but I had nothing else to do, so I tried to learn how to fish. Can I tell you a secret? It's incredibly boring. I mean, I don't know how those fellas do it every weekend? Their wives must be something terrible to drive those men to sit on a river bank all day and just stare at water. It almost drove me batty, I have to say.\" \n\nFiona was like a school girl, confiding about which boy she had a crush on. Brett tried to get a word in edgeways. \n\n\"I'd like to...\" \n\n\"And, I'll never be able to look a plate of cod and chips in the face again, either,\" she added to herself, interrupting him. \n\n\"Anyway, I ran out of water about three or four days ago, and I have to say, I started to feel a little less than tip top, if you know what I mean. With no way to contact anybody, or any method of propelling the boat, well... I just tried to keep busy and not let myself get too down. And then you must have showed up, like my knight in shining armour! And here I am!\" she said, brightly, as though this was an everyday occurrence. \n\nHow she managed to speak the word armor with an audible U, Brett wasn't quite sure, but she managed it. She was so indescribably... British. And Radiant, and full of life, and Brett was utterly captivated. \n\n\"Okay. Well, you appear to have come through your ordeal relatively unscathed, as far as I can tell. The arm gash I did put some stitches in, since it needed them. Sorry about the needle work. You were dehydrated, and a little malnourished, and mostly needed sleep. Well done staying out of the sun, by the way. Not having to deal with sunburn is really good,\" he said, getting up off the chair he was sitting on while Fiona was telling her story. \n\n\"May I?\" he asked, holding out his hand for hers. \n\nShyly, she gave him her hand, and he grabbed it, looking at his watch to check her pulse. Eighty beats per minute, which was fine. \n\n\"I'd like to...\" and sitting on the side of the bed, he grabbed her head and looked into her eyes, moving her head around and watching her eyes focus on him. \"Doesn't look like there's any concussion, so whatever generated that bump didn't hit your head, I don't think.\" \n\n\"No,\" she said, still looking him in the eyes, unblinking. \"That was me getting thrown against the tiller. Painfully, but as Daddy says 'Pain is weakness leaving the body.' Which is sooooo incredibly stupid -- I mean, someone who's been shot must be so fit, according to that logic, but whatever. Daddy says a lot of things like that. Still love him though. You have to. Don't you find?\" \n\n\"Follow my finger,\" he said, holding up his forefinger and moving it back and forth. \n\nShe complied and he nodded. \"Yeah, you are fine. Just needed some liquids and some stress-free rest. Speaking of that...\" \n\nHe grabbed her hand, and quickly yanked out the feed. \n\n\"Ouch!\" she exclaimed, rubbing the back of her hand. \"Where did you go to school, doctor? Auschwitz?\" \n\n\"Sorry. Getting it over quickly is the best way,\" he replied, rolling up the tubes and bag. \n\n\"I'll bet you say that to all the girls,\" she said, smiling lopsidedly. \n\n\"Look, you need to get something on. We put the clothes we could salvage in the closet over there. They are still in the suitcases and stuff we could get out, so you'll have to sort through them, I'm afraid.\" ",
        "Fiona looked interested, then suddenly something seemed to occur to her, and she lifted the bed clothes and looked down at herself. \n\n\"Ah. I appear to be...somewhat unclothed?\" she said, somewhat unsure. \n\n\"Yes, sorry about that. I promise I held my hands over my eyes,\" Brett said, fighting back a smirk. \"I had to examine you. I'm sorry I wasn't able to ask your permission, but you were somewhat out of it.\" \n\nShe nodded back. \"Yes, I suppose so. Next time though, please, ask first. You never know what I'll answer!\" \n\nShe had a glow in her face, and twinkle in her eyes, and Brett was hit with a sudden surge of desire. She was pretty much his perfect woman, at least in appearance. In personality, well, the jury was still out on that. No such thing as Love at First Sight. His parents had drilled that into him, for sure. \n\nSomething else occurred to her. \"Hey, do you have a shower on this boat? A proper one? Not one of those drip things like in my yacht?\" \n\nBrett nodded, glad to have something else to think about. \"Sure. Back behind the door, each cabin has its own shower room. It's not hotel quality, but it's pretty good.\" \n\nIf anything, the glow in Fiona's face intensified. \"Oh, I've been so waiting for one of those. The shower on the boat was... basic. And I could rarely use it when at sea, because, fresh water, you see? Once the storm hit, well, I couldn't use it at all. And I soon learned that soap doesn't work in sea water. I should have thought to bring some sea water soap with me, but it just didn't occur to me. So... quite ripe by now, you see.\" \n\nShe coquettishly raised armpit and sniffed humorously, holding the sheet against herself. \n\n\"Quite the pong, I'm afraid. I'm surprised you didn't find me from just following the stink.\" \n\nBrett smiled again. Her good humor was infectious. Speaking of that... he had to ask. \n\n\"I don't mean to speak out of turn, but you seem... well, you've stared death in the face. You must have thought...?\" He didn't finish the thought, suddenly thinking it wasn't a smart thing to be saying. \n\nFiona's face faltered a little, then recovered, as though she was gathering strength. \n\n\"Well. British you see. Stiff upper lip and all that. Honestly though, yes, there were times when I thought I was a goner, for sure. But... well, you can't just give up, can you? I did my best to get fresh water, eat whatever I could find, ration the supplies, just...survive really. At some point, someone was going to find me. I just had to stay alive till they did. I mean, what's the alternative? Jump overboard and drown myself? Cut myself and hope there were sharks? None of that sounds very palatable, does it? What would you have done?\" \n\n\"Well, yes...\" Brett said, stroking his chin. \"When you put it like that, yes, I suppose you are right. Never really thought about it, to be honest. Not something you want to...\" \n\n\"No,\" said Fiona, staring off into the distance. \"Be glad you don't have to,\" she added quietly, after a moment's reflection. \n\n\"So...\" asked Brett, a few seconds later, more to fill the silence than anything, \"is there someone we need to notify? Someone you want to talk to?\" \n\n\"Oh!\" exclaimed Fiona. \"Yes, of course. Should have thought of that immediately. Sorry, the prospect of a hot shower made everything else slip my mind. Yes, well, Daddy, of course. He'll be beside himself by now, I'm sure. And, Eric, I suppose.\" \n\n\"Eric?\" asked Brett, with a sinking feeling. \n\n\"Yes. Husband. Well, in name, anyway. Daddy loves him more than I do, I think. No brothers you see. Essentially, he needed someone to pass on the title and family lands to. Daddy is very old fashioned that way. Apparently, Eric is 'an incredibly handy bloke to have around', and Eric, it has to be said, apparently feels the same way about Daddy. When they get talking, the brandy and cigars come out and I might as well not be in the room. It's terribly boring, frankly. Eric certainly wasn't my first choice, but Daddy had his heart set on Eric, as the best of the bunch.\" \n\n\"I'm sorry,\" said Brett, a little confused. \"Best of the...bunch?\" \n\n\"Oh yes. Suitors. Once you've come out, you get a lot of them, all sniffing around for the title and a girl's hand in marriage. Still quite old fashioned.\" \n\n\"I'm sorry,\" said Brett, again. \"I'm quite lost here. Coming out? To be honest, I still don't even really know who you are?\" \n\nHer eyes narrowed. \"You mean you've been chatting me up and no clue who I am? Really. What a world.\" She rolled her eyes dramatically. \n\n\"I'm Fiona. Fiona Birmingham-Hart. That's hyphenated. I'm the Lady Fiona, in fact. My father is the Duke of Ipswich, back home in Blighty. Eric, my husband, is due to inherit the title when dad shuffles off, specially selected for the privilege. I get to sit around and look pretty and pump out children, which is the use that women of station back home tend to get put to. Well, I may have been married off to some fella I didn't chose, but I'm damned if I'm just sitting around, having luncheons with other vacuous ladies in waiting. Stuff that for a lark. I want to get out into the world. I want to do something. Hence the sailing.\" \n\n\"Oh, I see. Well, errr... do I have to call you something? Is there a title we should use?\" \n\nShe chuckled. \"Well, as long as it's not 'Oi, you', I think Fiona will do just fine. Let's not go down the fi-fi route though, please. I get enough of that from Mother, and frankly, I hate it. So twee.\" She made motions of sticking her fingers down her throat and once again, Brett was mesmerized by her vitality. \n\n\"Right. Well, so... I'll go talk to the captain and see if he can set up a ship to shore call. It's a little complicated to set those up, but we can at least get a message to your husband? Eric... is he also Birmingham...er...\" He'd lost the name somehow. \n\n\"Hart. Yes. But I would bother. I doubt he's even noticed I've gone, to be honest. He is inattentive at the best of times. Out of sight, out of mind for him. He's far more worried about breeding his prize bull than he is in his wife. No, try Daddy. Duke of Ipswich. Just get a message to the UK government and they'll find him. If I know Daddy, he's probably already doing his damndest to get a call placed here.\" \n\n\"Fine. OK. Yes. I'll do that,\" stammered Brett, disappointedly. \"Let me...\" \n\n\"You know what I really could use?\" said Fiona, as Brett rose to leave. \"A cup of tea. God, what I wouldn't give for a decent one. It's been almost two weeks since I had one. I suppose all that went down too?\" she said, sadly. \n\n\"Let me go look,\" answered Brett, on firmer ground now, since he was pretty sure some of that had been pulled out. \"You shower, and I'll be back with whatever we got out of the boat, OK?\" \n\n\"Sounds like a plan!\" she agreed, laughing. \"Go. Before you see something you shouldn't!\" \n\nBrett left the cabin, carefully closing the door behind him, and went in search of the cabin where they'd stashed what they'd gathered from her craft. \n\nForty-five minutes later, he was back at her cabin door, cup cradled in his hand, large plastic pelican box on wheels in another. It was one of the new travel cups, that were all the rage around the world, with the wide base to keep it stable. \n\nHe knocked on the door, listening carefully for a response. \"Hello inside? Can I come in?\" \n\nHe dimly heard a \"Wait a second...\" and then a minute later, the door opened slightly. He saw a vision of alabaster skin, wrapped in a large towel -- one thing the line of ships did not skimp on was towels -- with another wrapped around her head, through the crack. \n\n\"It's you, isn't it, Brett?\" she enquired, through the crack in the door. \n\n\"Yes. Got something for you,\" he answered, brandishing the cup. \n\n\"Is that...?\" she asked, hand on her mouth. \n\nBrett just grinned back. \n\n\"Oh. My. God. Marry me!\" she exclaimed, throwing back the door. \n\n\"Here you go,\" he said, handing her the cup. \"We found some tea bags in a plastic container, and they were dry, so it was one of the things grabbed. This,\" he said, gesturing at the large pelican case, \"Has some of your clothes in it. This is what we got out of the draws and that wouldn't fit in the closet in your cabin. There's more back at in the other cabin, along with everything else we salvaged. You can go through them later? I thought you might want some new clothes now?\" \n\n\"Oh god, yes. I take it back. Let's just spend a week having a long dirty weekend. Best offer right now.\" \n\nFiona was clearly delighted, and, after Brett dragged the box in and dumped it on her bunk, immediately opened it and started rummaging around. \"You got my delicates! Well... good, I suppose. Let's see...\" \n\nShe pulled out a T-shirt, a bra, some panties, and some sweat pants, and eyed them critically. \n\n\"Well, they could use a wash, but not too pongy. They'll do for now. You don't happen to have a washing machine on board, do you?\" she said, not paying attention and not expecting an answer. \n\n\"Actually, we do. Next deck down. You are supposed to buy your own detergent, but you can use mine?\" \n\n\"You do?\" she squealed. \"Wow. I really did luck out. Fantastic. I'm going to drink my tea, put some clothes on, and then we can go and do some laundry. Wonderful news!\" \n\nAnd then she looked pointedly at Brett. \n\nHe just stared back, even more mesmerized. Her lithe body was apparent under the towel even with the gash on her arm and the bruise on her head. She was very attractive, never more so as she was at that moment, vulnerable, with no mask hiding her true feelings. \n\nEventually she coughed, politely, and he suddenly realized that not only was he staring, slack jawed, but she wanted to get dressed and he was preventing that. \n\n\"Oh? Right. Yes. Of course. Sorry,\" stammered Brett. He seemed to be doing that a lot around her. \"I'll be going. Yes. Err, I'm in the next cabin, when you are done. Just pound on the door. I'll take you to the laundry. The captain is arranging a call for you -- probably be tomorrow, but at least he's gotten word that you've been found to the appropriate people.\" \n\n\"Oh good. That's very good to know. Thank you. I'll find you in a little bit, yes?\" she said, literally fanning him out of the cabin. \n\nEmbarrassed that he couldn't apparently take a hint, Brett, turned and stumbled out of the cabin, heading immediately to his own. \n\nHe made a call to the bridge to inform the captain that their guest was up and around, and that she'd be requesting a call to her nearest and dearest at his convenience, to which he got a grunted reply. He also explained that she'd be going through what they'd salvaged, doing some laundry and generally getting acquainted with her new home, for the next few days at least. He did ask that the captain prepare the crew for the fact that they had a new guest, and that she was actually minor British royalty, so best be on their best behavior. That elicited another grunt, but Brett was sure that the captain wouldn't want any bad reports percolating to the board of the company that owned the ship, so he'd probably at least put the word out that she was out of bounds. \n\nThe captain then indicated that he'd been given light duties -- less than half his regular duty shifts, and their passenger was now his responsibility. He was there to keep her happy and have her the picture of health when they disembarked. \n\nTwenty minutes later, there was a tap on the door, and he opened it to find a much refreshed and rejuvenated Fiona, grinning at him stupidly. \n\n\"Okay then, the -- what do you call it? -- the twenty-five-cent tour? My thinking was, let's go look at what you guys salvaged, then we can stop by the launderette, and then we could get something to eat? I'm starving, almost literally.\" She laughed the last bit, a little self-consciously. \n\nBrett learned pretty fast that Fiona was all about 'making short term plans' then following them to the letter, with almost military precision. \n\nHe found himself nodding along. \"Yeah, that works. I think Cookie should have some things to eat. He normally has pastries and stuff like that, although...\" he glanced at his watch. \"It's almost noon. Lunch is probably almost ready. It certainly will be once we are done with those chores.\" \n\nHe nodded again, and then looked inquiringly at Fiona, as she cocked her head at him and smiled a lopsided smile. \"What?\" \n\n\"You are cute when you a confronted by a demanding woman,\" she said, pursing her lips at him. \"Has anyone ever told you that, sir knight.\" \n\nBrett felt very uncomfortable after that statement, and just didn't know how to respond. They stood, staring at each other for a moment, before he chickened out and coughed, \"Right, shall we...?\" \n\nHer smile got wider and then she reached out and grabbed his arm, hooking hers through his. \"Lead on, good sir.\" \n\nThey went to the storage room where what had been grabbed was stored, and Fiona spent the next half hour going through it, lamenting what had not been saved one minute, and then whooping with delight when, rummaging through, she found something she'd thought lost forever. \n\nThirty minutes later, she had an arm full of clothes, and her 'delicates', as she put it, in a plastic bag, and was ready for the laundry room. \n\nThe laundry was one floor down, and Fiona had quite a time getting down the narrow stairs-come-ladder between floors. Space on a ship was at a premium, and stairs were an afterthought. A container ship was different from most large ships, in that all the storage and people-based facilities were located in one section, at the back, in a large upright building on the superstructure, named \"the sail\", even though there was no actual sail to be found anywhere on the ship. \n\nEventually they made it, with much back tracking to pick up items dropped, and somehow, by the time they got there, Brett seemed to be carrying more than Fiona was. \n\nFiona oohed and ahhed over the laundry facilities, declaring that she'd never seen better -- which was obviously a very large lie, since they were basic at best -- and that it was a lot better than washing her things in a sink and tying them on the mast to dry. The concept of all clean clothes was quite going to her head, after so long without. \n\nOnce they were on a wash cycle -- using all three machines in the room -- Fiona announced it was \"time for the tour, and then lunch\". \n\nBrett took her on a cheap tour, walking her around the sail, showing her the mess, the library, the bridge, where she elicited more than a few longing glances from the crew stationed there at the time. He introduced her to the captain, and they had a quick chat about her making a ship to shore call, which the captain agreed to arrange, after he explained their destination and route. He even took her down to the engine room, where she met Jock, their chief engineer, a dour Scotsman who did not take to her at all. \n\nBrett had noticed that she was charming to everyone she met, and after being introduced to them by name, thanking them all for her life. She was sincere, and put her hand on them, while looking them in the eye and thanking them for being there for her. The only person it didn't work on was Jock, but then, as Brett explained, he was a miserable bastard and didn't like anyone anyway. But otherwise, Brett was in awe of her people handling abilities, never more than when they encountered Pierre, in the mess. \n\nPierre was the cook, and a more archetypal French short order cook it would be hard to find. Lanky unwashed hair, perpetual cigarette on his lips, insolence when his food was questioned, French accented sarcasm, and a deeply held personal belief that no woman could ever resist him. \n\nWhen he saw her coming, he hurriedly licked his hand and slicked back his hair, and put on the phoniest smile. 'Well, mon amor, to our humble...\" \n\n\"Can it, Pierre,\" interrupted Brett, not willing to let Pierre go through his whole spiel. \"What's for lunch?\" \n\n\"For you? I have some dog turds I cooked up. For the lady? The very best meatloaf, made with love and flavored to the taste of the best French restaurant. I heard there was someone on board who might appreciate it, rather than these tasteless barbarians, so for you, gorgeous...\" \n\n\"Does that ever work?\" asked Fiona, innocently, breaking into the long speech. \"I mean, as patter goes, it's pretty basic. The accent is good and will forgive a lot, but honestly, we are on a shipping container ship in the Pacific Ocean. I've just been rescue from a sinking ship, from almost certain death, and right now I feel like death warmed over. What, exactly, are you expecting here?\" \n\nPierre was disconcerted, women didn't normally directly question him on his motives in this way, and he was at a loss to know the best way to recover. Brett grinned widely, enjoying the experience of Pierre being accosted in this way. \n\n\"I...I...I just wanted you to experience some class among all these philistines,\" he rallied, uncertainly. \n\nFiona suddenly smiled widely. \"Oh, don't take me seriously, Pierre. I'm just having you on. Thank you for the greeting, and for cooking this for me. It's most appreciated. I'm sure we will be great friends,\" she said, emphasizing the \"friends' word, so he would understand that she was not interested in him any other way. \n\n\"Still, let's see what we have here...\" She took a little of everything on offer smiling at Pierre, who had a very disconcerted look on his face. Then, winking at Brett, she went to sat down and eat. \n\nBrett got his plate full, delivered with a lot less deference than Fiona, and he went to sit with her. \n\nWith barely an \"I'm starving!\" statement, Fiona fell upon he food. \n\nFour mouthfuls in, she stopped. \"Oh no,\" she murmured. Two more mouthfuls. \"Oh, this won't do at all. No no no!\" \n\nAnd she got up and went over to where Pierre was now serving two other crewmen who'd come in, both of which were paying her considerable visual attention. \n\n\"Pierre, now we must talk. This won't do. No, we can do better than this. I'm sure if we got our heads together, we could better than what's on offer today. Were you rushed?\" Fiona's voice was clipped but firm. Even to Brett, she was clearly playing the aristocrat abroad rule to the hilt. \n\nPierre just stared at her, and eventually said, \"Well, it's not exactly the Waldorf kitchen back here...\" the French reputation for sarcasm intact. \n\n\"I'm sure. However, there is more that can be done here. Do you have some Barbecue sauce anywhere? Perhaps some Worcestershire? What about ground pepper?\" \n\nThere was more staring, then suddenly Pierre got animated, went back in the galley, there were sounds of rummaging around, and he appeared again, with bottle of HP sauce and a pepper shaker. \n\n\"Right, excellent, now, what we are going to do...\" started Fiona. \n\n\"Hold on. Wait a minute...\" protested Pierre, suddenly growing a backbone. \"This is MY kitchen. What do you think you are doing?\" \n\nHot woman or not, Pierre was not about to take cooking lessons from the British. \n\nFiona sighed, and then went straight to the point. \"What's it going to take, Pierre? A look at my tits?\" \n\nBrett almost snorted his diet coke out of his nose hearing that. It was an incredible juxtaposition -- the words versus the plummy British accent that delivered them. \n\nPierre's mouth dropped open, and the dangling unlit cigarette dropped into the mash potatoes, unseen by anyone. \n\n\"Fine then,\" said Fiona, and she suddenly just hoisted her top, just for a second, to give Pierre a quick glimpse. No one else was looking at the right angle, and it was all so fast that everyone else in the room was just stunned. \n\n\"Now, you've got yours. My turn. Let's do this meatloaf up a bit. And I can give you some tips on the mash too, later. Have you any onion soup mix, for example?\" ",
        "She reached out and took the HP sauce bottle from a totally stunned Pierre, whose mouth was still open, with no words coming out, and then emptied it over the meatloaf on the tray, then took the pepper and dumped a bunch of that on it too. \n\n\"Right, that should do it,\" she said, dusting her hands against each other. \"You fellas, give that a try, see what you think?\" she said to the other two, equally stunned crewmen, gesturing at the meatloaf. And then she turned and sat down with Brett, smiling broadly. \n\nBret suddenly paused in his recounting, suddenly realizing who he was relating this story to -- they were her children after all. He stole a look at Amelia, who was sitting, open mouthed, reminiscent of how Pierre looked. Glancing at Bradly, he noticed that Bradly was fighting to keep a straight face. Looking back at Amelia, confused, Brett noticed she was shaking too. \n\nSuddenly Amelia let out a massive belly laugh, and Bradly joined her a split second later. The two of them fell about, laughing in the kind of way people do when they simply can't control it. \n\nBrett just sat there, looking at them, wondering what was going on in those heads of theirs. \n\nEventually, Amelia, wiping her eyes, said, \"Sorry, Dad. Yeah, I know, a bit risqu\u00e9 for dear old Mum, right? But, when you know Mum, that sounds exactly like something she'd do, right brother?\" \n\n\"Oh god, yes,\" replied Bradly, wiping his own face. \"That's Mum, down to a T. Remember the calendar?\" \n\nBrett sat there, feeling quite left out, blank expression on his face. \n\n\"So, did you ever hear about that film with the women of the women's institute, who made a nude calendar? It had Helen Mirren and Julie Waters in it? No? It was a big thing in the UK. Based on a true story, about a bunch of old biddies who make a nudie calendar in order to make money for a local hospital. Well, when Mum saw that, she couldn't be stopped. She had all the local women's organizations posing nude at the estate within the week. Dad just shook his head and left for the stables, not wanting to have anything to do with it. Mum did it all, and even posed. She put out four calendars a year for the next seven years, and earned the local charities almost half a million pounds doing it. That's who Mum is. So, your story, well, it's absolutely on par for her. Color us entirely unsurprised.\" \n\nBrett sat, considering the story. He could well believe it. And now he was wondering how to ask if the kids still had any of those calendars... \n\n\"Sorry,\" said Bradly. \"We didn't mean to interrupt. Please, carry on.\" \n\nClearing his throat, Brett continued. \n\nLater that day, feeling much refreshed, Brett suggested a walk around the ship. \n\n\"You mean, we can go all the way around? Those big boxes aren't in the way?\" asked Fiona. \n\n\"Well, they are fairly intrusive, but no, there's a walk way all the way around,\" explained Brett. \"It gets a bit narrow in the bows, but it is open. Some of the crew use scooters to get around, in fact.\" \n\n\"How long is it?\" asked a curious Fiona. \n\n\"Almost exactly one fifth of a mile, all the way around,\" replied Brett. \n\n\"So, five times around is a mile?\" Fiona was sounding more excited by the second. \"I could run around?\" \n\n\"Well, yes, I do that regularly. Much nicer than the treadmill in the gym.\" \n\n\"Wait. Stop. You have a GYM on this boat?\" exclaimed Fiona, excitedly, stopping in her tracks, and thumping a foot down. \n\n\"Well, I wouldn't say it's much. A multi-gym machine, some free weights, a treadmill. Not much...\" \n\n\"I had to make do with this stupid bow flex thing on the boat. Way too cramped and not very good, but the most I could take on the ship. I had it mounted on the hull at the front. It was... not good. But best I could get. A real gym. Oh yes. I can run. Wait... can we go back to the storage room first?\" \n\n\"Take me there, RIGHT NOW,\" said Fiona, emphatically, grabbing Brett by the shirt. \n\nBrett nodded, and guided her back to the storage area. \n\nFiona dug into the boxes and suddenly shouted with glee. \"Aha!\" \n\n\"There we go!\" she yelled, triumphantly, holding up two tennis shoes. \"All set! Now we can run together!\" \n\nBrett was a little dubious. \"You've just had a life or death experience, Fiona, and your body is recovering. I don't think the gym is necessarily...\" \n\n\"Yes, thank you, Doctor,\" she said, ignoring him and doing more rummaging in her boxes. \"I understand. I'll take it easy,\" she continued, in a voice that indicated she would do no such thing at all. \n\n\"Right,\" she said a few minutes later, her arms full of what looked like workout clothes, and was that a sports bra? \"Now, show me this gym,\" she demanded. \n\nThey went, she ohhed and ahhed for some moments, then put on her shoes, and tried the treadmill for a few minutes, tired quickly, then tried a few free weights. Brett just sat and watched, understanding that any warnings he would give would be ignored anyway, since that was the kind of girl Fiona was. She'd learn pretty quickly anyway. \n\nFive minutes into a small weight's regime, Fiona suddenly slowed, and gingerly put the weights down. \n\n\"Well, that hurts. Guess the working out on the boat, such as it was, wasn't hitting the spot,\" she said, breathing heavily. \n\n\"Or it could be the lack of decent nutrition and distinct lack of water over the past few days too, you never know,\" replied Brett, sarcastically. \"But what would I know? Not being a doctor and all.\" \n\nHe got a mock glare from Fiona, and then she said, in a much smaller voice, \"Perhaps I should take it a bit easier. Sorry, Brett. Just... so excited to be among all the things I've missed for the past couple of months. Being alone and on a small boat like that... well...\" \n\nThere was a lot unspoken in that last statement, and Brett decided that he'd do his best to act as confessor and psychiatrist, to the best of his ability. Fiona was putting on a front, to cover her own terror at what she'd been through, that much was obvious. But he wasn't trained in this, and as such, the best thing he could be to her was a friend and sounding board, so she might get over her own demons. \n\n\"Let's get you back to your room. Pick up something to eat on the way, and then you should take a nap. Your body needs sustenance and rest.\" \n\nFiona looked at him, curiously. \"Did you just say 'Sustenance', and use it in a sentence?\" she demanded, after twenty seconds of silent staring. \n\nBrett just nodded, suddenly embarrassed. \n\n\"You Americans, always a surprise,\" she muttered, moving to the door. \n\nThey picked up a small sandwich snack and Fiona was yawning by the time they got back to her room. \"Actually...\" yawn \"...now that you mention it...I am feeling quite tired.\" \n\nBrett nodded. All classic delayed shock symptoms. She needed sleep more than anything. \n\nAs they reached her door, she stopped abruptly, turned and reaching up on her toes, gave Brett a kiss on his cheek. \"You really are a dear, aren't you? Looking after me so nicely. Don't you have anything else you should be doing? A shift or be on duty or something?\" \n\nBrett nodded. \"I have a shift later tonight, when you'll be asleep. It's pretty easy, basic bridge duty. Nothing exciting.\" \n\n\"Oh. You aren't at my beck and call then?\" \n\n\"Oh I am. As much as I can be. When I'm not on duty, I'm all yours.\" Brett regretted the phrasing of the last sentence the moment it left his lips. Fiona, it appeared, picked up on it. \n\n\"Well then. That's enough to give a girl ideas, sailor,\" she said, giving him a very saucy wink.\"Wake me in a bit?\" \n\n\"Certainly. Anything else you need?\" \n\n\"I wish I had my tapes...and my player,\" she said, after a moment of considering. \"Probably at the bottom of the deep blue sea right now, though,\" she continued, sadly. \"Oh well. No point in crying over spilt milk. Time to make do. See you in a bit.\" And she yawned again, and it struck Brett suddenly that this woman could make even yawning attractive, and as such, she was probably highly dangerous goods to be around. \n\nBrett stopped narrating for a moment, and looked into uncomprehending faces. \n\n\"Tapes,\" he said, \"Cassette tapes. Small Walkman player. You know. We used to record albums onto them, or make mix tapes of different tracks. This is all happening at a time when CDs had just come into being, and your mother hadn't caught up with the new hotness at that time.\" \n\nAmelia nodded, knowledgeably, once she understood. \"Those are the things you used to use a pencil to roll the little rollers around, right? When the tape came out of the cassette thingy?\" \n\n\"Yeah, you got it. At the time, we used to have boom boxes -- big old box with a tape player and a radio and big old speakers at either end. Most people had one, they took those huge batteries.\" \n\n\"Well, thank god we use iPods now, eh bro?\" said Amelia, grinning at her brother. \"Bloody dark ages!\" \n\n\"Don't let your mother hear that,\" admonished Brett. \"I don't know her that well, but I know she loved her music and her mix tapes.\" \n\n\"Yeah, don't we know it,\" sighed Bradly. \"She's still making mix tapes on CDs and now on her iTunes account. Still totally stuck in the 1980's too. I mean, who the hell is 'kag a goo goo' anyway?\" he asked to no one in particular, disgustedly. \n\nBrett had a little chuckle and then went back to his story. \n\nFiona slept, and while she did, Brett went by the storage compartment, and did a more thorough inspection of what had been salvaged. He found a few things that he thought would make Fiona happy, and gathered them up, then went to the laundry room, to collect her now cleaned and dried things. Face red with embarrassment, he grabbed a basket and collected them all together, and took them back to his room, praying he wouldn't run into any of the crew. Explaining why he had a basket that contained women's underwear was not something he'd relish. \n\nOnce he'd dropped that off, he sat in the medical bay, doing a long overdue stock check. Glancing at the time, he'd noticed three hours had passed, so he stood, stretched, and headed off to the galley to get some hot food. He found Pierre, doing his usual \"I'm better than everyone else\" act, and grabbed a couple of plates of his chicken pot pie, a couple of cokes and wandered back down to Fiona's room. \n\nHe knocked on the door, balancing the plates with the other hand, and had to wait for a moment before a yawning, disheveled Fiona opened the door. \n\n\"Ohhh, hot food! What do we have here?\" she exclaimed, spying the plates. \n\n\"Chicken pot pie. Not very good I'm afraid, but its fresh and it's hot and it'll do you good,\" he replied, handing her a plate. \n\n\"What, no diet coke?\" she asked, holding up the coke can. \n\n\"I'm sure we... I could...\" replied Brett, rising. \n\n\"No, no, I'm just ragging you. Don't get up. I'm just burning your wick,\" exclaimed Fiona, hastily. \"Trust me, I could probably do with the sugar,\" she added, popping open the can and taking a long draft. Then she looked over at Brett and started singing, hilariously off key, \"I'd like to teach the world to sing, in perfect harmony...\" Before cracking herself up and giggling like a little girl. \n\n\"Oh, come on, that was funny,\" she admonished a stone-faced Brett, who was doing his best not to laugh. \n\nBrett allowed a small smile to play across his face, and then, very soberly and with studied nonchalance, he picked up a small carrot from his plate, and threw it at Fiona. \n\nShe sat there, mouth open, the carrot sticking to her nose. \"Did you just...?\" She said, in disbelief. \n\n\"I'm sure I don't know what you mean,\" he retorted, now focusing on his plate, using the fork he'd brought with him to scoop up some pie. \"Yum. You should eat yours, while it's hot.\" \n\nFiona kept staring at him, and then, with as much grace as she could, she took the carrot off her nose and ate it. \n\n\"Oh, it's so on. I would throw this entire plate at you, but I'm hungry and I need the, what's the word? Oh yes, I need the 'sustenance'. But don't you think for one second this is over, buster. Not by a long chalk. You'll get yours. Believe it. I spent four years at Beneden girls' school, mate, and we know how to get even.\" And with that, she scooped up some of her own pie. \n\nThey ate in silence for the next ten minutes, until both had cleaned their plate. Brett could see Fiona staring at her plate, gears moving. \n\nHe reached in and took the plate, murmuring, \"Pierre would kill us both if this got broken, so I'll just take that.\" \n\nBrett was enjoying having Fiona off balance for a change. He could tell she wanted to one up him and honestly, he'd probably let her. It was good for her soul, some simple pranking. \n\n\"Let me take these back, and then I have something for you,\" he said, standing to take the plates back to the galley. \n\n\"A present? For me? Oh sir. You do know how to flatter a girl. More carrots, I presume?\" Her sarcasm was thick and well laid. \n\nHe snorted, and wandered out, taking the plates with him. When he got back, he stopped by his cabin and grabbed the basket before returning to her room. \n\n\"Knock knock,\" he said, opening the door, realizing as he did so, that was probably inappropriate. She was lying on the bed, head in one hand, looking, well, frankly, radiant. He mentally kicked himself again. He had no business thinking that, even if she did look it, bruises and all. \n\n\"Here,\" he said, handing her the basket, while keeping the other hand behind his back. \n\n\"Ohhh, laundry. My, Mr. Bell, you certainly know how to sweep a girl off her feet with gifts like that. Good thing I'm already flat on my back, eh? Or I might have sprained it, swooning.\" \n\n\"Yeah yeah yeah,\" replied Brett, grinning at her. \"That's not the gift. This is. Tada!\" and he brought his other hand from his back, holding her Walkman, headphones and a small box that contained a bunch of cassette tapes. \n\n\"Oh my god! My Walkman!!\" exclaimed Fiona, suddenly very excited. She jumped up, throwing the basket aside. \"Oh, I could kiss you! In fact...\" \n\nShe then threw her arms around him and gave him a big smack on the lips, on tip toe to reach him. It was obviously intended just as a quick peck, but somehow, they stayed in that pose for at least ten seconds, four or five seconds longer than was really comfortable. Then she jerked back, looking him dead in the eye, neither one of them knowing what to do next. And then she grabbed him again, and gave him a longer kiss, harder, and of the kind normally reserved for long time boyfriends or husbands.  \n\nIt was possibly the best, most unexpected kiss of Brett's life -- something he'd been thinking about for the past day at least, and never expected to happen. He was aware this was someone else's wife, but for that second, it just didn't matter. \n\nWhen they broke the kiss, Fiona stepped back, flushed and breathing heavily. \n\n\"Sorry, I...sorry. Just...so glad to get my tapes back,\" she muttered, not meeting his eyes. \n\n\"Yes,\" coughed Brett, not really knowing what to say himself. \"We found them in this plastic box -- looks like it was water proof. So we grabbed them. When you mentioned your tapes, I did think we might have got them. So... I went and looked a bit harder...\" \n\nAnd that was as far as he got, when Fiona just pulled him back into a kiss, this time pulling his head down to meet hers. This kiss went on longer, and involved tongue, and it was the kind of kiss that curled your toes. Brett had never had one like it, and it was something he vowed to get more often, never having realized it could be like this. \n\nWith his hands full, all he could do was put his arms around her and draw her in even more than she already was. \n\nEventually, they had to come up for air, and again, they broke apart, both breathing heavily, staring at each other, wondering what had just happened. \n\n\"I...\" he started to stammer, aware he needed to break the awkward silence. \n\n\"No, I...Look, I'm sorry. Must be something to do with the concussion,\" Fiona said, hurriedly. \n\nBrett, wisely, didn't point out that she didn't have a concussion. \n\n\"It's fine. Frankly, that's the best kiss I've had all year. Any year,\" he replied, trying to be nonchalant, to let her off the hook. \n\nThere was a considered silence, Fiona looked at him with a small bemused smile on her face. Brett took the opportunity to break the eye contact and put down her Walkman and tapes on the table next to them. \n\n\"Oh yeah?\" She asked, breathlessly. Brett was suddenly aware that this wasn't over, as he turned back to her. She was, for god's sake, interested. She wasn't regretting it, she was now actively considering teasing him. This was not good. It was very very good and terrible at the same time. \n\n\"Well then,\" she said, pushing herself back into his personal space, and slowly running her hand over his crotch, a nail dragging across his somewhat outlined dick in his pants. \"If that's the best kiss you've had all year, I wonder what this would do for you?\" \n\nIf Brett wasn't already stiff as a board in his slacks, he was now. Painfully so. And also very aware of the fact that she was someone else's wife. British Aristocracy, at that. With an intense amount of effort, he stepped back, taking her hand gently and moving it. \n\n\"Lady Fiona,\" he said lowly, doing his best to try and make her understand that this was not okay. Or, worse still, more than okay, but a stunningly bad idea for him, \"I really think...\" \n\nShe just started laughing. \"Oh, get over yourself. Believe me, it wasn't going to go any further,\" she said, teasingly. It wasn't a mean tone, just a teasing one. \"I know it's wrong, and I just wanted to get a rise out of you.\" \n\nThen she lowered her gaze, licked her lips suggestively, and then said in breathy tone, \"And it looks like I did, too.\" \n\nBrett had to get out of that room, right there and then, or he'd risk having an accident. And that was NOT going to happen. He needed to get to his cabin RIGHT THEN or... bad things would happen. Things he would never live down. \n\n\"Ma'am,\" he nodded at her, back tracking as fast as he could, and almost stumbling over the door jam, seeing her amused look on her face as he basically ran away. \n\nHe left the cabin, shutting the door, then leaned up against the wall next to the entrance, breathing heavily and wondering what he'd done in a past life to deserve this. Oh, that evening was going to be a lively one in his cabin, for sure. Did he have any hand lotion left? \n\nHe got back to his cabin just in time for his phone to buzz, indicating that the captain needed the Lady Fiona up in the bridge, since the call she needed had been arranged, and the people to be called were waiting. \n\nHe groaned, shrugged and went back to her cabin, knocking on her door. \n\n\"Yes?\" he heard her call as she opened the door, looking sweaty and a little bedraggled and just generally very sexy -- watch it! \n\n\"The call is ready for you. You can take it here,\" he gestured at her phone, \"Or up in the bridge. Up to you.\" \n\nShe stared at him for a moment, then made a snap decision. \n\n\"Down here is fine. Can you ask the captain to pipe it down? Thank you, Brett.\" \n\nBrett just nodded and turned back to his cabin. He called the captain, and then sat down, wondering how that call was going. \n\nThe next day, Brett was up early, despite having done his shift of four-hour bridge time. Brett had learned early in his naval career that you take naps when you can, and not to expect a solid eight hours every night. He, like all merchant seamen, could exist off cat naps taken when he was able. \n\nHe stood outside Fiona's cabin door, wondering what she had in store for him that day, and entreating the lord to, 'let me get through the day without embarrassing myself', he raised his hand to knock on the door. \n\nHe never got the chance to actually make contact as the door flew open and Fiona bounded out, almost knocking him over. She was in a tight white outfit, T-shirt with open arm holes, some kind of sports bra underneath, tight pants and what looked like ankle warmers on her feet, rounded off with white sneakers on her feet. ",
        "She stood in front of him, swapping weight from one foot to the other, clearly warming up for some exercise. \n\n\"Good morning Brett. Come on, the day light is a wasting! We are going to go for a run. I can't tell you how much I've been looking forward to this! I had a marvelous sleep and feel tons better and am really ready for this. Now go put on your work out togs, there's a good chap. Chop Chop!\" was all delivered in rapid staccato, with a look of benevolent expectation on her face. \n\nBrett just stared at her -- her hair was pulled back at the back of her head, with a clip, making her face quite severe, but highlighting her cheek bones and showing off her magnificent eyes. She wore no makeup, but it was clear that she didn't need it -- her skin was porcelain white and clear of any blemish, apart from the bruise. It was all he could do not to just reach out and grab her and kiss her, he was so mesmerized. \n\n\"Come on, man. The day is passing. Get with it!\" she admonished. Brett was sure she knew what kind of effect she was having on him, and delighting in teasing him this way. Particularly when she said, \"I'll just wait here and stretch, while you go get changed,\" and then bent down, presenting her absolutely astonishingly pert and perfect back side to him, as she went to touch her toes. \n\nHe pulled himself together -- he was a merchant marine seaman, and by god, he wasn't going to go all gaga over a woman. Get it together, man! \n\nAverting his eyes and muttering about 'Sirens' under his breath, he retreated to his cabin to change into shorts, a T-shirt and some running shoes, not even considering whether he should just tell her no or not. \n\nFive minutes later, he opened his door to find her leaning against the door jam, arms folded, smirk on her face. \n\n\"Ready now, slow boy?\" she taunted. \"Come on. Last one around buys breakfast!\" she shouted, and took off, running down the narrow corridor. \n\nBrett just walked out of his cabin, closed the door, and stood, waiting, till Fiona returned ten seconds later, red faced, because the direction she ran in only took them to a stairwell that went down into the infrastructure of the ship. \n\n\"Yes, well,\" she said, with a determined, if pained, look on her face. \"Fine. You lead the way then, Macduff.\" And she gestured at him, to go in the other direction, Brett doing his very best to maintain his stone face. \n\nBrett led her out of the tail end infrastructure of the ship, where the quarters and other crew facilities where, down to the actual exterior. The ship was laden down with shipping containers, piled on top of each other, eight levels high, towering above the deck. The deck itself was fully loaded, with a narrow channel around the edges, just wide enough for two people to walk abreast. When they got out, it was fairly cold, and Brett stopped Fiona from just taking off, explaining that they needed to run single file, since while the channel was wide enough for them run together, there was various items of equipment that would jut out and make it difficult. \n\n\"As it is, this is an older vessel,\" he explained, as he started stretching out his legs, concentrating on each different muscle group. \"The newer ones actually don't have this ledge -- they have a channel that goes underneath the containers -- the containers are loaded to the edge, on top of a supporting infrastructure, and there is a deck beneath them, that runs around the edge of the ship. Like those old strolling decks you see on some of the old time liners.\" \n\n\"Really?\" asked Fiona. \"How astonishing. Don't those containers weigh tons?\" \n\n\"Well yes, but the supporting structure is part of the boat's infrastructure,\" answered Brett. \"They can support the weight and not collapse because it's actually the frame of the ship itself holding them up.\" \n\n\"Hm,\" replied Fiona, with a nod. \n\n\"Ok, I'm warm, you ready?\" asked Brett. \n\n\"As I'll ever be. Five times for a mile, yes? So, let's do, oh, three miles? Think you can keep up, big boy?\" she teased him. \n\n\"Look, Fiona,\" Brett said, seriously, putting out an arm to stop her taking off. \"Please, understand you haven't run in a while, you are getting over a major life event, and you are likely going to be tired out. Let's take it easy and see how it goes, Okay?\" \n\nFiona smiled at him, indulgently, if even haughtily. \"Yeah. Eat my dust, Yank!\" \n\nAnd ducking under his arm, she was off. \n\nThe trail was easy to follow, and she maintained a decent pace. Brett was fine being behind her, since she could then set the pace, and also, he got to look at her magnificent ass, as it jiggled around, surprisingly firm. He could watch her glutes and see her form as she ran. \n\nAs it was, they were both soon warm, and as the sun came up from the horizon, the day got warmer, and they were both soon sweating. Fiona managed four complete loops before having to slow and walk, obviously out of breath. Brett could hear her, talking to herself, cajoling and castigating her performance. He refrained from trying to talk to her, regulating his own breathing and keeping up his own pace. He was not the least bit surprised that the desire to run would be outweighed by her ability to do so. She didn't seem like the type who would take her own limitations to heart. \n\nAfter the eighth time around, Fiona stopped, arm out, leaning against the exterior wall, breathing heavily. \n\n\"Sorr...rryy,\" she gasped, taking lung fulls of breath. \"Very...out...of...shape...it...seems.\" \n\n\"It's fine,\" said Brett. \"I normally don't do more than a couple of miles a day,\" he added, which was a total lie since he normally did at least three to four miles whenever he could, but which was designed to give her an easy out, so she didn't overly tax herself this early in her recovery. He didn't need a relapse just because she was ultra-competitive, especially when it was obvious she was. \n\nFiona wasn't taken in for a second. She glanced back at him, a sullen look on her face. \n\n\"Don't BS me, boy. I know when I'm being talked down to...\" \n\nHe just shrugged and said, \"Ok, well, once more around then?\" \n\n\"Yes, I think that will be fine,\" she replied haughtily, flipping her face at him. \"Come on, slow coach.\" \n\nShe managed two more loops before stopping again to draw breath. \n\n\"I...think...that's...all...for...now,\" she managed to get out. \n\nBrett grinned at her. \"Well, you've already done far more than most of the crew do here, so don't feel bad,\" he said, eyes twinkling at her. \"You've been ship wrecked and you STILL show most of this lot up!\" \n\nShe smiled gratefully at him, and said, \"Aren't you just a sweet one?\" while looking right into his eyes. And, it felt to him, into his soul. \n\nShaking it off, he suggested they walk back to their cabins, and as they did so, he noticed she was limping. \n\nHe looked at her quizzically, and she replied, wincing, \"Shin splints. Always had them when I run. Wish I could do something about them.\" \n\n\"Oh, that's not a hard thing to fix,\" he said, airily, as they walked slowly down the edge of the ship. \n\nFiona looked hard at him, suspiciously. \"Oh, you just happen to have that fix, do you? I did eight years of Ballet, buster, and none of them could fix it. But you, have the secret to the universe, yes? They teach that on this rust bucket?\" she demanded. \n\n\"Well no, but I learned this from a Nigerian we used to have on the crew,\" he answered, cautiously. He still couldn't tell when Fiona was genuinely annoyed versus pulling his leg. \n\n\"Basically, lean back,\" he added. \"When you run, I mean. Lean back as you do it. It'll feel stupid to you and you'll feel like an idiot, but it'll stop the shin splints from bothering you.\" \n\nFiona stopped walking and looked at him, like he was an idiot. \"Seriously?\" \n\n\"Well yeah. Think about it. Shin splints come about because of undue amounts of pressure on the front of the shin. That pressure comes from the impact of the weight of your body over the foot. Now, you can't stop that entirely, but leaning back does two things. Firstly, it distributes the weight more evenly over your legs -- the back leg takes more of it, and secondly, it actually forces the down stroke leg to be a little more vertical, so the weight goes down the shin, not over it.\" \n\nFiona thought it over, and continued walking. \n\n\"Okay, let's say I try it. If I find it doesn't work and you are pulling my leg, so I can look stupid when running, then you'll regret it, buster!\" she exclaimed. \"Still, if it does work, I'll love you forever.\" \n\nHe glanced at her, and saw a hint of a mischievous smile, half flirty and half silly. Then she winced as she took another step, and he immediately moved in, concerned. \n\n\"Here, let me...\" he said, pulling her arm around his shoulder. \n\n\"Yeah, you just want to get close to me, don't you, sailor boy? Been too long since you saw a woman, eh?\" she teased. Brett didn't know how he could answer that without a sarcastic or inappropriate comment, so he just kept quiet. \n\nWhen they got back to the cabin, Brett offered Fiona a 'Leg massage', knowing it was verging on the inappropriate. But, he was duty bound to offer succor, he reasoned. And if he got to touch her legs, well, so be it. It was up to her anyway. \n\nShe looked at him appraisingly, with a smirk on her face. \n\n\"Yeah, right. Do I get a happy ending?\" she asked, twinkle in her eye. \n\n\"You'll get a spanking if you carry on like that,\" Brett answered without thinking, taking a chance. \n\n\"Ooooh, promises, promises,\" she answered back, tumbling onto her bed. \n\nShe extended a foot. \"You may approach the royal foot, serf,\" she exclaimed in her plummy posh accent. \"But be warned, these feet are to be admired and worshiped. Nothing else will do,\" she intoned imperiously. \n\nBrett knelt down and took one foot in his hand, unlacing her shoes and taking it off, making a pantomime over the smell from her feet. \n\nOutraged, Fiona declared, \"This shall not do! The royal feet smell divine! How dare you, peasant! Off with his head, I say! To the executioner, immediately!\" \n\nBrett grinned up at her, and then started massaging her calf muscles. He could feel the tension and knots in her legs and worked on them, slowly, one muscle group at a time. \n\nFiona instantly shut up, and leaned back into the pillows of the bunk. Apart from a small \"oooohhh\" escaping from her lips and a look of ecstasy, she was silent, allowing his hands free roam over both lower legs. \n\nBrett did one leg, then, removing the shoe, did the other. Then he alternated, one foot, then the other. Fiona didn't move, eyes closed, just making occasional whimpers. \n\nBrett remembered having to do this for his mother, years ago. He remembered her instructing him in the best way to foot massage -- where to be soft and where to knead hard. He couldn't help but remember her telling him it was a skill he'd come to be thankful for, in the future, and at the time, he couldn't imagine how. Now, he understood. \n\nHe knelt before Fiona for at least ten minutes, massaging her feet, the balls, the toes, the ankle, her calf muscles and shins, and Fiona was, at this point, utter putty in his hands. Her skin was going red, and her eye lids fluttering under his ministrations. \n\n\"You want me to go... higher?\" he asked, tentatively. One did not just lay hands on the thighs of British Royalty -- no matter how far removed -- without at last asking permission first. \n\n\"Oh god, yes,\" groaned Fiona, clearly in a world of her own at this point. \n\nBrett licked his lips, wondering if this was a good idea. He'd made the suggestion now, and needed to follow up, but his own internal compass was warring with his desire for this woman. She was married to someone else, but by god, she was responding and he was absolutely into her. \n\nWhat was it the British say? \"In for a penny, in for a pound\"? Well, at this point, he was in for about fourteen tons. \n\nTentatively, he moved his hands higher on her legs, gently kneading the tendons below and above her knee caps. More soft moans were elicited from Fiona. \n\nThen, very slowly, he moved up to the thigh. She was still wearing the skintight pants, and it made it easy for him to feel the movement of the muscles underneath. \n\nFiona, at this point, had raised herself on elbows and was gazing down at him through hooded eyes. \n\n\"You are very good at this, aren't you?\" she said, softly. \n\nHe stopped and shrugged. \"Blame a mother who was on her feet all day. She came home and just wanted a massage, so I learned how. Don't get to do this very often though.\" \n\n\"What, all the hunky sailors here not clamoring for your magic touch?\" she teased, laughing gently at him. \n\n\"Not as such, no,\" he replied. \"Thankfully.\" \n\n\"Well, what are you waiting for, get to it?\" she said, after they stared at each other for a moment. \n\n\"Want to turn over? I can do your shoulders and back too?\" \n\n\"Oh, you wonderful man. I wish I could bottle you. My friends would pay through the nose for you,\" she husked, turning herself over and flattening herself out on the bed. \n\nBrett moved up and started massaging her through her billowing T-shirt. \n\n\"Wait,\" she said, pushing herself up and taking the T-shirt off, revealing the sports bra underneath. \"Makes it easier.\" \n\nAt this point Brett wished he had oils or hand warmers, to do the job properly. But, he was a merchant seaman. He would make do. It was in his job description, pretty much. \n\nHe worked on her shoulders, the outside, then inside. Then the knots in her shoulder blades -- this is where a lot of the tendons in the back come together, since that's what shoulder blades exist for -- to act as anchors for lots of the tendons. Inevitably they end up with knots, and since they are so close to the surface, they are generally easier to work out. \n\nThen he moved down to the lower back. Fiona had plenty of knots there too, which after her experiences was to be expected. The trick was to be gentle -- the spine was right there and there were plenty of places where nerves extended from between vertebrae, that needed to be treated with extreme care. \n\nAnd then... gulp, the lower back. At the top of her perfect tush. \"Oh my god,\" he thought, \"I am actually laying hands on this woman's ass. She's related to the Queen of fucking England, for god's sake!\" \n\nHe risked a quick glance up at her head. Some people are fast asleep from this kind of work over, by now. Was she...? No, she was awake. He was aware her eyes were open, and the one he could see was regarding him, unblinking. \n\nMore gulping. \n\nHe went as low as he dared, and then came back up again. \n\n\"Lower,\" she husked, suddenly speaking. \n\n\"Um...\" \n\n\"Lower I said. Or do I have to come up there and tell you with The Voice? Aren't you supposed to be making me happy?\" \n\n\"Well, yes, but...\" \n\n\"Then Make Me Happy, slave. Now, please.\" \n\nThere was nothing for it. Off to the races, then. \n\nHe slid his hands an inch lower. \n\n\"More.\" \n\nAnother inch. \n\n\"I'll tell you when. Keep going.\" \n\nOK, now his hands were almost full of ripe, peach globes. There was no way this wasn't deliberate. \n\n\"Keep your mind on the job,\" he reminded himself, gritting his teeth, and adjusting his position so his rapidly expanding erection didn't poke into the delicious body underneath him. \n\nOnce his hands were completely full of delectable ass -- or 'arse', as she would put it -- she murmured, \"That's it. That's the spot,\" and he was left massaging her butt cheeks. \n\nHer breathing increased in frequency and depth, and the murmurs increased in intensity too. \n\n\"Yes, there, that's it,\" she muttered, squirming her torso around. \n\nBrett was now stuck. When did he stop massaging? When was it appropriate? Should he just move his hands back up her torso? What was the etiquette here? When massaging a member of the British Royal Family on the butt, when did you finish and how did you disengage without causing offense? Was bowing -- or curtseying -- involved? \n\nIn the end, after a couple of minutes, he moved his hands gently back up her torso, and then, after kneading her back and giving her shoulders another rub, he sat back. \n\n\"All done. Ma'am,\" he murmured. \n\nFiona sighed heavily and then levered herself up, staring at him, unblinking. \n\n\"Oh my god. Felicity would just eat you up,\" she said, almost to herself. \"Not that I'd allow her the chance...\" \n\nShe rolled over onto her back, one hand up behind her head, regarding Brett. She was, to him, the specter of loveliness, bruises be damned. The hair, starting to escape from the bundle behind her head, wisps of it down one side of her face. Her face flushed, her lips pursed, a perfect and lithe body. Brett sat as still as he could, trying to make sure she couldn't see -- or worse still, feel -- his erection. The shorts, he wore, were baggy and so it wasn't as constrained as it should have been. She only had to look down or brush a hand against him, and there it was, needing to be explained. \n\n\"You really are very cute, you know that?\" she said, at last. \"Come here.\" And she beckoned him down to her. \n\nThis presented Brett with a conundrum. If he pushed himself down to face her, she'd feel his dick. The only way to do what she asked was to move himself back... he hesitated, and, losing her patience, Fiona suddenly lunged up at him, saying, \"I said, Come Here!\" and then, rolling her free hand around his head, pulled him to her, kissing him with fervor. \n\nThere was no doubt she was now encountering his erection, in all its covered glory. The biggest problem was that Fiona was a hell of a kisser, and Brett just wanted more. She was exciting, interesting, passionate, attractive and just one hell of a package. \n\nSo, he kissed her back, and resigned himself to the fact that she'd know his arousal. Which, if he was thinking about it, would have been inevitable at that point regardless. But men don't think about women are thinking about in situations like that; there's only enough blood to consider their side of the equation. \n\nShe hungrily kissed him, almost growling at him. Her mouth opened and her tongue darted in, to caress his. This was no peck, this was the kind of kissing they teach at slut school. \n\nOne of her hands was behind his neck, holding his head to hers, and the other roamed his body, finally clamping down on his, now painful, erection, squeezing it and groping him. \n\nEventually, she pushed him back, breathing heavily, staring into his eyes, mouth open, tongue running around her lips. \n\n\"Kit off. Now\" she ordered, pulling her sports bra off with a two handed cross over. \n\nBrett just stared -- her perfect just C cup breasts popped out, large nipples erect and puffed out. She licked her lips again and then repeated the word, \"Now!\" with urgency. \n\nBrett knew it was wrong. She belonged to someone else. But she was here. He was there. They both so desperately wanted it, and it had been a long few months... \n\nBefore he knew it, he was shrugging out of his clothes, his seven-inch steel bar cock bouncing out of his briefs as he pulled them down, Fiona tugging hungrily from the front. \n\n\"Oh yes, that'll do,\" murmured Fiona, breathlessly, before she pounced on it, mouth open, engulfing the glans. \n\nBrett's back arched as the tip of his cock vanished into the velvety recesses of Fiona's mouth. She started working on, with gusto -- slurping on it, and out, tongue running up and down the shaft, inhaling the scent of his balls before rubbing them on her face and then slobbering on them. There was no chance she wasn't enjoying this -- occasionally she'd look up and meet his eye with her gaze, with a twinkle in her eye. \n\nThe sensations from her ministrations to his dick were mind blowing. He had to start thinking about navigation issues to stop from blowing his load almost immediately. ",
        "Eventually, she pulled his dick from her mouth, grinned up at him and said, \"Been a while for you, has it, sailor?\" \n\nNot trusting himself to speak, he just nodded. \n\n\"Well, imagine how it's been for me. Months on my own, and then thinking I was going to die at sea. Look at this as a celebration of life.\" \n\nAnd with that, she engulfed his member again, going back to town on it. \n\nBrett sucked in a breath again. He wasn't going to last long at this rate... \n\nKnowing how bad etiquette it was to just blast into a partner's mouth with no warning -- no matter how enthusiastic they might be -- so he groaned, and did his best to push her back a bit when he started feeling the tightening indicative of his balls. Gently, trying to lift her off, she backed off, wiping her lips with the back of her hand. \n\n\"Yummy,\" she sparkled. \n\n\"Yes, thanks, that...\" \n\nBefore he was able to get a complete sentence out, she rolled on her back, spread her legs and said, \"Now, I have a fire here, and I need you in there, now. Show me what you've got, sailor boy. It's been months and I need to put out this fire. And you're elected.\" \n\nA confusing mismatch of idioms, but she made her point very eloquently. Part of Brett's mind recognized that this was almost certainly a delayed reaction to the situation she'd been in. While she had a stiff upper British lip, it couldn't help but affect her, and her present desire was without doubt a result of an emotional reaction. \n\nBut, while that was echoing at the back of his brain, at the front of it was a hot woman demanding him to satisfy her. A woman he really really liked. Sooooo... \n\nWithout thinking any more, he leaned forward, and guided his rock-hard cock into her willing and very wet folds. She moaned as he pushed in, and sank deep into her, and he let go of a breath he didn't know he was holding. \n\nFiona moaned again, then pushed back. She felt like liquid fire around his cock -- he'd never been with a woman with such internal heat before, and it was an amazing sensation. \n\nSlowly, he started to stroke it in and out, longer and deeper, each stroke. He looked down at Fiona, and saw she had her eyes open, staring back at him, face creased in pleasure, mouth in a round open shape, lips pursed, her eyelids fluttering each time he pushed into her. \n\n\"Harder,\" she cried, arching her back and offering herself up to him even more. \n\nBoth realized this was not love making. This was lust. Passion. Raw desire. Need. On both their parts. Neither was reading more into this than what was there at that moment. They both needed this, and by god, they were going to get it. \n\nBrett also realized that, at this point, he wasn't going to last long. He just wanted to be sure she got off first. \n\nLuckily, he picked up on her movements -- she was arching as he pushed in, and he reached around and starting rubbing his thumb across her clit, lightly touching it on the out stroke, and pushing hard on the in stroke. \n\nFiona now was reduced to guttural moans, and she started trembling, her moans getting higher and her breathing getting shorter, her face and upper chest flushed red. \n\n\"Hard, please, harder. I need...\" She moaned, her head lolling to one side, and one hand grabbed and pinched her breasts, going back and forth, pinching a nipple and then rubbing them. \n\nSix more thrusts and she was there. Her body arched, she cried out, a long cry of, \"Oh, oh ooohhhh!\" and then she fell back, his cock still firmly embedded and her trembling like a leaf. \n\nHer breathing slowly returned to normal and she looked up at him, sly smile on her face. \n\n\"Oh, Christ, I needed that. I almost never come that way.\" \n\nA strange thing to share at that precise moment, but Brett gave her a moment to subside, and then started again, slowly, long powerful strokes, pushing her legs up and wide, to give him more access. \n\n\"Oh you... oh I...\" she murmured, and he started to increase the pace. Her breathing, again, started to get labored, and it was clear she was on her way to second orgasm. Brett counted himself lucky -- he'd never had a multi-orgasmic woman before, this was a first for him. He was wondering if he could orchestrate it so they came together, when Fiona came to his aid, putting her own finger on her clit, while he pounded away. \n\n\"Oh yes, come for me, big boy. Fill my pussy. I want to feel you spurt.\" The dirty talk, in the passion of the moment, from a refined British accent was enough to spur him on. He pounded and banged, the sweat starting to drip down his forehead, an expression of determination and power on his face. \n\nFiona started to writhe again under him, pushing herself forward, saying phrases like \"More\", \"Fuck me\", \"Push that hard cock into this dirty pussy\", evidently getting as much off it herself as he was. \n\nAnd, inevitably, he felt it start, the moment the muscles start to contract, the loss of control, the heady feeling of ejaculation, and he just spurted into her, the ropes of cum throbbed out, time and again. He felt her also arch, her fingers moving furiously, as she rode her climax to its conclusion at the same time. Another first for Brett, a simultaneous orgasm. \n\nHe sat back on his hunches, his cock still engorged, and pointing obscenely at the ceiling, as it pulled out of Fiona. \n\nShe stopped writhing and her breathing slowly subsided, as did his. \n\nAnd then the awkwardness began, as the realization of what he'd just done set in. She was married. He'd made her cheat. She belonged to someone else. And he'd just had sex with her. Unprotected. Jesus. Unprotected at that. Christ almighty, how stupid could he be? He was better than this. But something about this woman... something made him lose control. \n\nHe looked down at her, hoping she wasn't watching the expressions march across his face. \n\nShe was looking at him, with much the same kind of facial expression revealing the same kinds of thoughts. \n\nWell, fuck. \n\nHow does a guy extricate himself from a situation like this? Without it being awkward, and he did have to basically be her companion for the rest of the time on the ship? \n\nOne thing was for sure -- he couldn't presume on her. She obviously had her own demons to work out, and his presence was not the thing for that. \n\nWhen she sat and thought about it, she'd be so pissed at him for taking advantage, he just...needed to give her space. \n\n\"I...Um...\" he stuttered, not knowing the right thing to say. \n\n\"Oh, it's fine. More than fine,\" she murmured, languidly. \n\n\"Look, I think I need to go. I think... Yes. Look, lets um... just... talk later. Or something.\" \n\nHe was totally falling over his own words. He needed to get out. He'd just done something utterly reprehensible, and she was going to realize it. God knows what the captain was going to say, once she told him. \n\nGathering up his clothes, he pulled on his pants, and stumbled out the cabin door, the light outside hurting his eyes. \n\nGood thing his cabin was only a few doors away -- less chance of seeing any of the crew seeing him as they wandered off to the refectory for lunch. Lunch! Was it only lunch time? Jesus. \n\nHe got his door open, leapt in and slammed the door behind him, leaning against the door and breathing heavily. \n\nBrett looked at his enrapt audience. He had very definitely toned down most of the recounting of the actual sex event. They didn't need to hear about their mother in that way. He had stumbled over his words, tried to choose the least offensive way of telling them he had ravaged their mother, and worst still, she had encouraged it and enjoyed the hell out it. There are some things kids do not need to know about their parents' lives. \n\nAmelia leaned back and glanced at Bradly, smiling widely. \"Well, go Mum! Woo!\" \n\nBradly scowled at her, \"Really Milly?\" \n\n\"Oh, come on. Did you imagine for a second mother had it in her? So to speak,\" she chuckled at her own witticism. \"I mean, let's face it. Mum is not the most passionate of women. Sensible, yes. Sometimes she goes outside her comfort zone -- very occasionally, like the calendar thing -, but she is calm and collected about it. Duty first, how many times had we heard that Brad? This...\" she said, gesturing at Brett. \"This is like someone else entirely.\" \n\n\"Look...\" Brett was hesitant about continuing. \n\n\"So, you'd wimped out, Mum was wiped out, you scuttled away, to...what, consider your navel? What happened next?\" Amelia leaned forward, elbows on knees, hands cupping her chin, eyes sparkling. \n\nShe glanced up at Bradly, who shrugged, holding up his bottle of beer, gesturing for Brett to continue. \n\nBrett sat in his cabin, after taking a quick shower in the utilitarian shower unit, and dressing in a fresh uniform, such as it was. Then he sat and thought, staring at a glass of water on his table. \n\nThis was not who he was. He was a merchant sailor, and while they were mostly a pretty unethical lot, he'd tried his best to retain principles. He didn't fuck whores, he didn't gamble, and most of all, he didn't screw married women. Particularly -- and this bit was crucial -- not minor members of the British Aristocracy, who were married to Dukes. \n\nBut he had. He'd let his dick do the thinking and now, here he was. And with no protection. For all he knew, she was over there, ovulating! Oh fuck. When it rained, it poured. \n\nWhat to do. Did he go tell the Captain? Get out ahead of it? What if she complained? I mean, he had taken advantage. Hadn't he? That massage... well, yeah, it was foreplay. He hadn't really thought about it, but now... she'd been at sea, for months, alone. Of course it was foreplay. Jesus. What a mess. \n\nAnd then there was a knock at the door. Fuck. First mate, come to clap him irons? What? \n\nHe answered the door, and was surprised to see Fiona leaning against the door. Just like first thing that morning, what seemed like all those weeks ago. \n\n\"Well, sailor. Going to invite a girl in?\" she asked, a one-sided smile on her face. \n\nWhat? Yes, of course. It wouldn't do for any of the crew to wander by with her standing outside. \n\n\"Oh course. Yes, come on...\" \n\nShe walked in, swinging what appeared to be a six pack of beer. Where had she gotten that? \n\n\"I managed to persuade Pierre to give this up,\" she said, holding up the six pack. \"Don't ask me what I had to do to get him to let go of it. Let's just say, he no longer has to wonder what both royal boobs look like...\" \n\n\"Look... Fiona. I think I need...we need...\" \n\n\"What you need, young man, is a beer. God knows I do. Thirsty work, all that working out, yes?\" \n\nShe handed him a can, with its ring pull that came off the can, and sat back in his bunk, popping one open for herself. \n\n\"Ahhh... first beer in months. Lovely,\" she sighed, after taking a deep draft. \"Wonderful stuff. I can appreciate this. A gift from Hugh...\" \n\nAfter taking another draft, and looking at him speculatively, she then chided him, \"Oh, come on, Brett. Open a beer. Live a little. It won't kill you. A little celebration of life.\" That phrase again. \n\nHe looked at his beer. Heineken. He remembered Pierre buying four cases of it at their last stop off -- he doubted much remained of it. Shrugging, he popped his open can, and sat down at his small desk, tipping the can at Fiona in salute. \n\n\"Look, you ran off. To be honest, I fell asleep for a bit. I didn't really know what to say after... that. But... we need to talk. I think you are beating yourself up a bit unnecessarily, Brett. I came after you. Granted, that massage was a great opening gambit, but I came after you. Don't forget that. Your virtue is intact, such as it is,\" she smiled broadly at the last statement. \n\n\"That doesn't really make it okay, Fiona. You are married.\" Brett replied, somewhat emphatically. \n\n\"Oh, is that what you are worried about?\" she replied, nonchalantly. \"Brett, do you have any idea how the British royals work? How the establishment perpetuates? Ever heard the phrase 'arranged marriages'?\" \n\n\"What?\" asked Brett, sitting up straight at the thought. \"This is the 1980s. Almost the 1990s! That doesn't happen anymore.\" \n\nFiona laughed -- a tinkling laugh, Brett couldn't help but notice. Her neck arched as she threw her head back and it was really attractive and FOR GODS SAKE GET A HOLD OF YOURSELF, MAN! \n\n\"Yes, well, if you really believe that, I have a bridge I'd quite like to sell you,\" she quipped back. \n\n\"Look, there's this thing where I come from called The Duty. It's imprinted on all Royals from an early age. We live a life of privilege -- land, money, publicity, some notoriety. It's all there. But, the other side of that bargain is The Duty. All capitals, I'm afraid. We have to be above the herd. We have to be unimpeachable in our behavior. We have to be available to act as heralds. We have to open fetes and bazars and have the photographers follow us around. We have to be what the tourists come to see, and keep our stately homes working and provide fodder for the tabloids. We don't have a choice about it -- you don't get to just walk away. You're born into it, and you don't get any other choice. Lots of choices are taken from you. I can't just marry anyone -- it has to be acceptable to the court. Yes, it's all very medieval, but it's still there. The United Kingdom never killed off all their nobility, like France did, so it's all still there, traditions galore, no matter how stupid they are in today's world.\" \n\nShe took another drink, and carried on, face creased with emphasis. \n\n\"I mean look at Diana. I know her personally -- she's the patron to the charity I was actually doing my little jaunt in my boat for. HeadWay -- it's a charity for those with head injuries. She and I have worked together more than once. But did Charles want to marry her? Well, sure, but she certainly wasn't his first choice. He wanted some other little number -- Camilla Shand -- now Parker Bowles. She was always his first choice. But the Queen wouldn't have it. As Dad would say, 'common as muck.' She was a commoner, and just declared 'not suitable' by the palace, and that was that. He had to be married to someone of his station, and Diana fit the bill. She's not wildly happy in her marriage, I can tell you, but that has more to do with how she seems to think the entire world is some Mills and Boon romance novel, and reality, well, it doesn't really measure up. She's had her little flings too, of that there is no doubt. \n\n\"But the point is, I'm not particularly free to marry for love. I mean, I'm not forced into something against my will, just... my options are limited. Daddy more or less selected Eric for me. There was a selection of about ten gentlemen that were deemed acceptable to carry on the dukedom, and Eric was about the best of all of them. After Hugh, well... I just went with the program, I'm afraid.\" \n\n\"Hugh?\" \n\n\"Oh Hugh...\" she replied, having another swig and then sighing. \"Love of my life he was. I mean, no question of marrying him, unfortunately. That would have given Daddy a coronary, much less mother having a stroke. But Hugh was dashing. He had the gift of the gab that one. Taught me all about the mysteries of love. And cricket. He did love his cricket, did Hugh.\" \n\nShe looked off in to the distance, seeing the past and reveling in it. \n\n\"He was such fun. A real ladies' man before me, so I'm told. He and I were inseparable. I could see Mummy and Daddy getting more and more uncomfortable about it all. If they only knew what he taught me in the stables... and then... it all came to an end.\" \n\nShe came back from the past and then looked back at me. \"We were due to have the week together. He was dropping some plans at the office -- he was an architect, don't you know? Anyway, he was happy about our upcoming week, drove too fast, came around a corner and his little Ford Escort smashed headlong into a lorry coming the opposite direction. He was in a coma for months, and eventually came out of it with rather a lot of brain damage. He never lived alone again, and died about three years later, of influenza. The charity that helped him was HeadWay, and it was for them that I was doing the globe circumnavigation. It was to raise funds for them. I had over half a million all set to be raised, although who knows what will happen now, after recent events.\" \n\nShe sighed, then patted the bunk next to her, indicating that Brett should join her. After a quick mental debate, he did. \n\n\"Anyhoo, the point is, my marriage was rather arranged. Eric is not a bad sort. He's Okay. More concerned about the ancestral home and the grounds than me, most of the time, to be honest. It's not like it's any great passionate love affair, but we are British. We just get on with it, rather. It's more business partnership than anything. We are more companions than lovers, if you understand? We share a bed but the wifely duty -- you've heard the expression 'lay back and think of England', yes? Well, it's more accurate than you'd think.\" \n\nThey both had another draft of the slightly warming up beer, and then she said, thoughtfully. \n\n\"Don't imagine you are getting in the way of a cosmic marriage Brett. I spoke to Eric the other night as well as Daddy. You know what he wanted to know? What bloody aquarium fish food we use, because he needed to replace it. That was it. He made a few noises like 'Oh, I'm glad you are alright' and then launched into asking questions about the damn household. That's my husband. Daddy was more concerned about my health than my husband was. He never even asked if I was injured. He wanted to know where the insurance information for the boat was.\" \n\nShe stopped talking for a moment, breathing heavily, clearly angry. She calmed down a bit, and carried on. \n\n\"We are miles from anywhere, and whatever happens here, stays here. I've been on a boat for months, alone, and I thought I was going to die. I'm sure that what we did today was a reaction to that, and it's not like I'm here for the next great love affair, Okay? Take a load off your mind. It's all just good clean sweaty fun. No wronged husband is going to come looking for you, with a loaded blunderbuss. I'm certainly not going to worry about it, and neither should you. I'm a big girl and I'm not about to fall in love with you, and you aren't going to fall in love with me, either,\" she said, patting his hand. \n\nFamous last words. \n\nAnd then she kissed him. She didn't hesitate, just grabbed his head in both hands and kissed him, hard. And despite all his internal decisions, Brett kissed her right back. \n\nAnd then they were suddenly naked again, and this time, they both took their time. This time, Brett explored her, delighting in making her quiver or moan or breath harder. She took him on a guided tour of her body, and he was only too happy to explore. \n\nThis time, she looked into his eyes as he drove her to the edge, several times. This time was for her, but in a decidedly different fashion than from before. This time, she kissed him repeatedly as he looked in her eyes as he drove his steel rod cock into her willing wet hole. This time, she held herself off, barely, so she could coincide her last orgasm with his, and when done, covered him with kisses, before dissolving gently into tears. He held her as the pressures of the past weeks came due, smothering her head with his hands, caressing her and telling her repeatedly, it was going to be alright. \n\nThis time, they made love. \n\nAnd when they were done, they fell asleep, still entangled, sweaty bodies stuck together, breathing hard, and for once, Fiona did believe it was going to be alright. \n\nThey slept through the night together, and Brett woke early, gently disentangling himself, smiling as a sleeping Fiona muttered to herself, blearily looking around in a sleep deprived fashion, and instantly falling back to sleep again. He dressed, and wandered off to the galley to gather breakfast, ignoring the jibes from his shipmates. They couldn't possibly know that their good-natured pokes at him, asking if his charge slept heavy or not, were actually squarely on the money, and he wasn't about to enlighten them. ",
        "Balancing two plates of bacon, eggs, toast and two coffees, he made his way back to his cabin, and gently slipped in side, making sure no one was around when he did so. \n\n\"For me?\" said a bleary-eyed Fiona, sniffing the air and raising herself up on one arm. \n\n\"For the lady, indeed,\" replied Brett, putting them down on his little cabin table. \"A breakfast of champions! Fit for a queen!\" \n\n\"Yeah, well, I've seen what the queen has for breakfast, dearie,\" replied Fiona dryly. \"And it generally features a lot more yogurt and granola and a lot less artery hardening bacon swimming in fat.\" \n\nBrett looked down at his carefully carried breakfast, dubiously, the back at Fiona. \n\n\"That said, though, god that smells good.\" She bounded out of bed, naked and like a gorgeous nymph from heaven. \"Yes, please, serve it up.\" \n\nShe shrugged on one of his shirts, and sat opposite Brett and dived into her breakfast with gusto, talking nonstop about her upbringing and schooling, and the breakfasts they'd had there, in-between bites. \n\nBrett just marveled at how effortlessly sexy she was, the shirt half open, one breast present, chalky skin, with a red ruby nipple. Fiona was utterly unselfconscious, and just nattered as she ate, small bites, and always using a knife and fork, even for the toast. \n\n\"And then, they brought out this small birthday cake, honestly the most miserable thing I've ever seen, so incredibly sad, and we all had to sing 'Happy Birthday', in our night gowns and...\" \n\nEventually she realized he wasn't eating and just trailed off, staring at him enquiringly. \n\n\"What?\" \n\n\"Just...\" he stumbled, realizing he'd been caught, and, breaking eye contact, he dove into his own breakfast ferociously. \n\n\"No, what? What were you looking at?\" Fiona insisted. \"You don't get to stare like that, and not tell me.\" \n\nBrett just mumbled with a mouthful of egg and carried on eating, doing his best to just avoid the subject. \n\n\"What? You've never seen a naked woman before? Over breakfast? Come on, boy, spit it out,\" she pushed, leaning over the table to stare at him, intently. \"What, is my big brave sailor falling in love?\" she teased, putting special emphasis on the word \"Love\", and pronouncing it more like \"LuuuuUUUUVVVVvvvve\" \n\nBrett could feel himself blushing and glanced up at Fiona, with pleading eyes. \n\n\"Oh my god, you are!\" she gushed. \"Brett is in luuuuVVVvvv.\" \n\nBrett put down his utensils, and, steeling himself, met her slightly mocking gaze. \n\n\"Brett, this the equivalent of a week-long one-night stand. Don't be getting all mushy on me,\" she said, sitting back, hard faced. \n\n\"Look, obviously it's easier for you to separate feelings from...well, sex, than it is for me. The fact is, I'm a seaman at sea, alone, no women, and then you show up. I mean, for god's sake, you're British Royalty. And then here you are, and we did...well, what we did. Twice in one day, in fact. And I have no clue why me, and you are pretty gorgeous and well... I'm just a little... I dunno... I don't really know what I feel.\" \n\nFiona's face softened immediately. \"Oh, aren't you just the sweetest thing?\" she cooed. \n\nShe reached forward and grabbed his hand, \"Look, that's part of the reason for all this. You think you've had a dry spell? I've been on that boat for months now. And before that, well, it wasn't up to much. You've made me cum more than at any point since I was last with Hugh, that wasn't self-induced, you know. And I'm married. That should tell you something.\" \n\nThis was all delivered conversationally, as though it was no big thing, and Brett was still getting used to Fiona's more than forth right way of delivering heavy subjects. \n\n\"I barely know you though?\" he mumbled, looking for the right thing to say, and trying not to sound whiny. \"What if this is all a big mistake? I'm having a hard-enough time as it is, with you being married. I have no idea if this is right or not anymore.\" \n\n\"Let it be what it is. If you need to know more about me, just ask,\" she responded, picking up her coffee, and putting both elbows on the table, holding the cup up to her face. \"Ask away. I'm an open book. Mostly.\" \n\nShrugging, Brett decided this was probably the best thing he could do, so he did. \n\nThey spent the rest of the morning in the cabin, just talking. Her telling him about life in the royal household, and what her life entailed, and him telling her about his life, his upbringing, his mistakes, and what led him to be on the ship, doing what he did. \n\nThey laughed, they giggled, they told sad stories, and she regaled him with stories of her boat, her initial sailing, the pomp and ceremony -- how she learned to sail as a child, first on the River Orwell and then graduating to sea faring boats, from Harwich and Felixstowe. How she found the only peace she could when sailing by herself. It was not a hobby her husband desired to join, and so she sailed alone, with trips to Kent, and then further afield, like Ostend in Belgium and Dunkirk in France, and then Rotterdam and Amsterdam. \n\nEventually she graduated to an Atlantic Crossing, as part of a crew on an old fashioned full masted sailing ship, and then back, with a newly purchased yacht from Miami and a crew of two. \n\nThen she spent two summers sailing her little toy around Europe, and once to Africa, before deciding on her big adventure, and then spending several months arranging charity sponsorship, berths at docks along her journey and supplies ready to be picked up, and generally outfitting her boat ready for the voyage. All the immense annoyance of her husband, who generally ignored the whole thing and chose not to be involved at all. \n\nAnd then, they had lunch, went to the gym, took a stroll around the decks, after which Fiona insisted on getting a tour of the engine room, much to the Scottish lead engineer's very visible pure anger. Brett never did figure out what his issue was; was it she was British? A member of their nobility? Or, he suspected, was it just her gender in general? No one was chummy enough with the lead engineer to dare to ask. \n\nFiona got her tour though, since all the other engineer's mates were keen to show her around, and share as much of her physical proximity as was possible, something very easy in the narrow confines of the engine room. Despite the almost audible eyerolling of the chief engineer, and lots of sighs of annoyance, she still managed to charm the rest of the group, who were falling over themselves to be the one to explain the next valve or switch to her. \n\nIt was only after about ten minutes of her nodding thoughtfully, asking questions, and generally smiling a lot that Brett caught on to what she was doing -- she was being the Royal Who Attends, as she later described it. \n\nShe was, in effect, opening a village fete -- something else she had to explain to Brett -, or taking a tour of a new factory. Basically, she was doing her best to pay attention so the rank and file would be pleased at her interest. What the British Royal Family do best. \n\nIt was all Brett could do not to smile broadly, as he leaned against the door way, arms folded, watching her performance. Every now and then, she'd glance in his direction, and nod along to whatever was being explained to her, just staring at him, daring him to laugh. \n\nEventually, the tour was done, and Fiona air kissed everyone, shook hands, and wished them well, and walked with Brett back to her cabin, Brett doing his best to hold in the shaking with laughter he felt. \n\nUpon the door shutting he left it all go, one rolling belly laugh after another and after a moment, so did Fiona. \n\n\"I'm sorry,\" he gasped, after a moment. \"I know I shouldn't laugh at my shipmates, but the way you were glad handling them. It was, well, comical.\" \n\n\"Glad handling?\" asked Fiona, wiping a tear from her face and sitting down on her bed. \"That's actually a new way of describing what we do. I don't think I've heard that before.\" \n\n\"Yeah, it's what the politicians do back home. Glad handling people. Making them glad you handled them, so to speak,\" he answered, sitting down at the small stool by the desk. \n\n\"Well, I'm sure they enjoyed being 'glad handled' by me,\" said Fiona, making quotation marks around the words 'Glad Handled'. \"It sounds positively naughty, the way you put it. Would you like me to 'glad handle' you, big boy?\" She dabbed her eyebrows up and down, in a suggestive way. \n\n\"Oh, you can handle me any way you want,\" replied Brett, without thinking. \n\n\"Well,\" replied Fiona, pursing her lips slowly at him, \"now there's an opening.\" \n\nBrett was tempted to make another ribald comment about her openings, but refrained. Not that it mattered, because Fiona jumped off the bed, grabbed his head, kissed him hard, pulled him upright, and dragged him to the bed. \n\n\"Let's see how glad you are at my handling,\" she murmured, feeling his cock through his regulation uniform pants. \"Oh look. He's glad. Very glad, by the feeling of him.\" \n\nAnd that's how they spent the rest of the afternoon. Brett was, in fact, ready for sleep that evening, quite worn out by Fiona's somewhat extreme appetite. It felt very much she had recovered from her ordeal, and was out to make up for lost time, at least when it came to physical exertion. \n\nAround nine o'clock, after failing to get himself up for a fifth time, Brett went to the galley to see what he could scare up for food, and got a very hard stare from Pierre, but managed to scrounge some chicken sandwiches, a couple of cokes and a bag of chips. Or 'crisps', as Fiona put it. \n\nThey snacked together at the little table, making jokes at each other's expense, moving pretty quickly into 'your Mother' jokes, where Brett found that Fiona actually had quite a reserve of these kinds of jokes. Eventually he quizzed her on it, and she shrugged, her mouth full of chips and eventually explained that the boarding school she'd been sent to had their own quirks, and a good sense of humor and memory for jokes was essential. \n\nWhen they'd finished, Brett stood to go. Fiona looked at him quizzically, and he smiled, ruefully, at her, 'I honestly don't think I've got another one in me. You've exhausted the supply for now. I need rest, my lady.\" \n\nShe smiled back at him, toothily, and said, \"It's okay, I had just hoped...\" and patted the bed where she had moved to. \"Stay?\" she asked, hopefully. \n\n\"I.. don't know that's a good idea,\" he hesitated, thinking about if anyone came looking for him. Not being found in his bunk would not be a good idea. \n\n\"Please?\" she implored, patting the bed again. \"I would really like to wake up next to you. Come on, you know you want to. There might be a nighttime emergency, and don't you want to be handy if there is?\" \n\nHe could quite imagine what kind of 'night time emergency' she was thinking of, if the afternoon's activities were anything to be judged. \n\nHe bit his lip. She was really attractive. And wanted him. And it's not like he'd had any other offers in the past few months. \n\n\"Pleeeaaassseee...\" She could see he was wavering. \n\n\"Fine,\" he said, rolling his eyes, and acting like he was doing her a massive favor. \"But I'd better be made a knight of the round table, when we dock,\" he muttered, as he shrugged out of his shirt and pants. \n\nWaking up in the morning was a revelation for Brett. While he'd done it before, it had mostly been after one-night stands. He'd had one longer term relationship, with an old friend from school, that had lasted a couple of months, but she'd made it clear that she wasn't happy with him shipping out as a merchant marine crewman, and that had been that. \n\nSleeping next to a sleeping woman, particularly in the narrow cabin beds the ship had, meant close proximity. It meant her hand and face on his chest, breathing slowly. He glanced down, craning his head so he could see without moving or disturbing Fiona, and saw the blanket was dislodged. She was bathed in the light from the porthole, revealing her unblemished and soft skin. She looked divine, natural and innocent, even though he had first-hand knowledge that she was not. \n\nHe could get used to this. Which was a dangerous thought. \n\nAnd then she opened her eyes, and caught his as the first thing she saw. And she smiled at him, a pure, open, no bullshit smile. Nothing else behind it, but delight to see him. No pretense, no other thought but pleasure at him being the first thing she saw when she woke up. \n\nAnd something shifted in Brett. Something moved. Suddenly, looking at her, meeting her eyes, was the most important thing in the world. In a split second, Brett was lost, and he was only dimly aware he was. \n\nThey stared at each other for what felt like hours. Eventually Fiona yawned, and stretched. \n\n\"What's on the agenda today?\" she murmured, and Brett suddenly reared up and smothered her mouth with his, because it was suddenly extremely urgent that he kissed this woman, right there and then. \n\nFiona was surprised, but went with it, breaking apart after a few moments, and panting -- not entirely from lack of breath, either. \n\n\"Well, someone is keen! And a good morning to you, too!\" she grinned at him, eyes shining. \n\n\"I'm sorry... I just...\" replied Brett, suddenly bashful, aware he'd over stepped the mark. \n\n\"Oh no, don't stop now!\" Fiona demanded. \"This is a great way to wake up. More, please!\" \n\nAnd he kissed her again, and she kissed him back and something passed between them that both were aware of, and neither could articulate. \n\nThe rest of the morning was spent, predictably, in bed. \n\nThe next few days saw Fiona charming the crew and finding things to do to liven the ship up. \n\nOne day she decided to host a scavenger hunt, putting the available crew into teams of three, and sending them out to gather items from A to Z, inside of two hours. They gathered in the mess hall, for an official judging, where she awarded a case of beer, similarly charmed out of Pierre. \n\nShe hosted a movie night, where they sat and watched some of the well-worn video tapes, where she, Brett and Pierre provided running -- and somewhat amusing- commentary. Mystery Science Theater 3000, twenty years too early. \n\nOne evening, Brett surprised her with dinner on the deck, in the bows, as far forward as he could get the table. They sat and ate, watching the water, and the sun set to the west, toasting each other with beer and the one bottle of wine Brett had stashed in his cabin. \n\nAnother evening, she hosted her own version of The Generation Game, a popular game show in the UK, where average people were shown a specialist's job once, and then had to attempt that job themselves and were then judged by the experts who'd shown them what to do. She had the crew trying to replace a filter in the kitchen, make a souffl\u00e9, handle a Morse code message using a heliograph lamp, and a bunch of ballet moves only she could achieve. It was all very silly and most of the crew were drunk at the end of it, which only made it more hilarious. Brett was astonished that she managed to cajole the crew into doing it at all. But Fiona had that no-nonsense attitude, with a large dose of cheek, that just assumed you were going to do what she wanted anyway, and all she had to do was shame you into it. \n\nBrett was still given a few shifts of work, and one evening, when he returned to his cabin, he found Fiona dressed only in one of his shirts, leaning out with a bottle of wine in her hand, - god knows where she got it from -- winking at him vivaciously, and saying, \"Hey, Sailor, see anything you like?\" \n\nThe sex went from frantic to slow and gentle, and got more and more meaningful. There were little touches, murmurs of delight, small pet names for each other, sly smiles, shared jokes, faked outrage, and one fight they had, regarding her desire to not have to talk to her husband on the radio phone link again. Brett couldn't quite believe he was the one telling her she had to do it -- there was a sense of irony about that that was not lost on him. \n\nThere was tired sex, silly sex, lustful sex, comfort sex, and meaningful sex. It was only the night before they were due to dock in Hong Kong, when Brett was on watch on the bridge, and the first mate, spelled him, nodding and smiling slyly, when he said, \"I'm sure you've got better things to do, yes?\" and then winked at him, and Brett realized that the rest of the crew were aware of this relationship. \n\nHe nodded, red faced, and was about to leave when the first mate laid his hand on his shoulder and said, \"Lad, I know it's great now, but you know she's leaving in two days, yes? This is not going to last. Make sure you know where you heart is, because she'll only break it, if you let her.\" \n\nBrett wasn't about to have that conversation -- he didn't know the first mate anywhere near well enough to bare his soul, plus he had no idea of his own feelings, - so he just nodded, said, \"Yes, Sir,\" and left the bridge. \n\nBut he didn't go back to his cabin immediately. He went for a walk around the main deck, stopping in the bows to look at the black water, to try and sort through his own feelings. \n\nHe knew this was just a pleasant interlude, didn't he? Of course, he did. He was a career merchant seaman. She was British Royal Family. Of course there was nothing else to this. \n\nShe was pretty, sure. And clever. And funny. And damn, she was hot stuff in bed. And she made him feel like a man, for certain. But part of that was just infatuation -- attachment syndrome. He'd been part of the crew who rescued her from certain death. Of course she was grateful. He could take it or leave it, obviously. \n\nExcept... she was awfully pretty. And damn she was fun. And clever. And hot in bed. Wait, he'd covered that already. \n\nHe'd be fine though, once she was gone. He wouldn't miss her. Well, he would miss her. Anyone would miss the sex, that's a given, right? But that's all, right? It's not like he would marry her. It was just a summer romance kind of thing. A shipboard fling. That's all it was. \n\nIt wasn't like he loved her, or anything. \n\nRight? \n\nFuck. \n\nBrett sighed heavily. One thing Brett tried not to be, was a liar to himself. \n\nThe fact is, they hadn't been having sex in the past couple of nights. They'd been making love. Maintaining eye contact. Doing things for each other, just because they knew the other person liked it. \n\nDouble Fuck. \n\nThe thing is, he knew he knew all this. He just wasn't going to admit it. He also knew he couldn't afford to feel this way. Because she was leaving. She was married, for god's sake. And she, sure as shit, wouldn't have felt the same about him. She had her Duty. The all-pervading Duty. And a husband. And a life. \n\nTriple Fuck. \n\nShould he tell her how he felt? What would be the point? Still, wasn't life supposed to be all about being true to himself? Being real? \n\nYeah, no. \n\nBrett wrestled with his inner most feelings, back and forth. What to do? What to say? Anything at all? \n\nAnd then, while he was leaning on the railing, staring sightlessly out to sea, an arm slipped into his, and he was aware of a warm body settling next to him. \n\n\"Penny for your thoughts? Or in your case, since you are a yank, a dollar?\" \n\nHe breathed in her scent -- while she wore no perfume, Fiona smelled of clean and crisp and jasmine, somehow. \n\n\"Just thinking.\" \n\n\"Yes, I gathered that. Why else would you be staring all moodily out to sea? Are you practicing for a Smiths music video?\" \n\nAnd there it was, her humor, which punctuates even a good moody moment. \n\nHe smiled and turned around to her. \"Just wrestling with the whichness of the why, my lady.\" \n\nShe tilted her head at him, and gazed up, unblinking. \n\n\"Yes, you are, aren't you? Well, don't let me stop you.\" And she turned and leaned on the railing next to him, gazing out to sea herself, staring into the future. ",
        "He turned back and just breathed for a moment. \n\nAnd then she dropped a bomb and said, quietly, \"Yes, I love you too.\" \n\nBrett drew in a breath, stunned. \n\nThere was silence for a moment while he desperately tried to work out what to say. \n\nThey just stared out at the black sea, until he broke the silence. \n\n\"Yeah, I... here's the thing, Fiona...\" \n\nAnd she turned to him, and said, passionately. \"Now look here, Brett. I know you feel it too, and I know damn well you can't afford to. I know I can't. But I do, and you do too, and it's just the way it is. I'm going to have to walk down that gangplank and back to my life in a day or so, and you'll sail on, and we'll both have to deal with our hearts being broken.\" \n\nShe paused for breath. \n\n\"God knows I didn't ask for this, and I'm pretty sure you didn't either. It's gotten out of hand, far more than I could have predicted. But here we are. And we have to acknowledge it.\" \n\nThere was more silence as Brett struggled to work out the right thing to say. \n\n\"If you don't say something soon, Mister, I'm going to tip you into the drink. Don't let me bare my heart and you just ignore it,\" she threatened. \n\n\"I honestly don't know what to say, Fiona,\" Brett said, turning to look at her. The gentle wind on the bows was flipping her hair up and he reached out to tuck it behind her ear. She grabbed his hand and rubbed his palm on her cheek. \n\n\"What do you want me to say? You want me to tell you I love you? I love you. There I said it. I love you. I. Love. You. And I'm a merchant sailor and you're a member of the aristocracy, and never the twain shall meet. We are the ultimate in ships passing in the night.\" \n\nBrett's voice was brittle at the end and he looked away. \n\n\"Yeah. Bloody unfair, isn't it?\" Fiona answered, laconically. \n\n\"You might say,\" Brett hissed bitterly. \n\n\"I don't know how to handle this, either, Brett,\" Fiona said, gently. \"I have to go back to a marriage I don't really want to be in. To a life of duty. I mean, these few days with you, they are like a bubble in my life. I wouldn't exactly call it a holiday, not for what I went through to get here. But saying that, I would do it again, for these days with you.\" \n\nShe moved in closed to him, and grasped his arm, pulling it around her body and molding herself to him, holding his arm in place. \n\n\"And don't say you wouldn't either. At the end of the day, Brett, are we better for having done this? For having these feelings? Or worse? I chose to believe we are better. I have something to measure life against now. You've made me feel things that I've never felt before, that I never thought I'd ever feel. And here it is, thunderbolt city.\" \n\nThere was more silence. Brett wasn't struggling to find the right thing to say, he was just drinking in the moment. He was standing with his arm around his woman, his love, looking out at the endless ocean. \n\n\"The thing is...the thing is...\" she started to utter, then stopped. \n\n\"Look, you know, this has to end, right? I have the Duty. I have to return to the life. There is no future. God knows I wish there was, but there isn't.\" She paused again. \n\n\"And I think we need to make a clean break after this, you know?\" She turned to look at him, staring him in the eye, to be sure he was getting the message, and understood why. \n\n\"We need to make it quick and brutal. Like ripping off a plaster,\" she said. He looked at her quizzically. \"Err, band-aid, I think you call them?\" \n\nHe nodded. He got the point. \n\n\"No trying to follow the other. No stalking. You go on with your life and I'll go on with mine, and we don't. Look. Back.\" She poked him the chest with each word to punctuate her meaning. \n\n\"You don't suddenly show up in England, and I won't show up...well... anywhere you are. Promise me, Brett. Promise me you'll let this go. Treat this time we had as hallowed ground and never tread on it again.\" \n\nBrett just stared at her. \n\n\"Promise me,\" she hissed, with intent. \"I don't want either one of us to regret this time. But we have to end it. And have a pact.\" \n\nBrett turned away and leaned on the railing, and not looking at her, nodded. Not what he wanted, but he got her point. They were too different. \n\nEventually, he said, \"You've destroyed me for any other relationship, you know. I'm serious. How am I going to find another You?\" \n\n\"I should think so too!\" she retorted, smiling again, hesitantly, and then turned into him and pulled his head down into a kiss. \"I'm one of a kind, and don't you forget it!\" \n\nThey kissed again, and it started to get more urgent, more passionate. \n\nShe broke it off, and, flushed, said, \"Let's take this back to the cabin. We have one more day. Let's make the most of it.\" \n\nAnd taking him by the hand, she pulled him down the edge of the deck back to the cabin block. \n\n\"The last I saw of your mother, she was walking down the gangplank, scarf around her neck, oversized sunglasses -- she looked like she was just getting off the Royal Yacht Britannia, rather than having just narrowly escaped death a few days before.\" \n\nBrett sighed as he remembered. \n\n\"I couldn't even accompany her. No risk of impropriety, you see. I, like everyone, watched from the deck above. Just a face in the crowd. She did turn around at the bottom, and looked for me, but there's no way she would have been able to make me out. \n\n\"There was a surprising number of photographers there -- way more Caucasian faces that you'd expect, for a Chinese port. I suspect the UK press had flown some of their guys out there. Naturally, she played up to them all. That was the last I saw of her in the flesh. Some guy came by in a Range Rover for her things later in the day. \n\n\"We stayed in port for a full two weeks -- way longer than usual. The owners and chairman of the line who owned the ship flew in, and with the captain, they milked the press for all it was worth. And then, when the furor died down, we loaded up and slipped out of port, bound for New Zealand.\" \n\nBrett tried to take another drink from his already empty bottle, and looking at it suspiciously, he put it down and, making eye contact with both his children, finished up, saying, \"I spent the next fifteen years going around the world, ship to ship. Ended up a first mate before I retired here. I followed your mother's life for about six months -- your press sure does intrude on you guys, doesn't it? After six months of abject misery, and discovering she was pregnant with you two...well, my sanity couldn't take it anymore. So I just let it go. Left her to her life, to the Duty she chose. I mean, I get it. She didn't have much of a choice, but...still... \n\n\"She was the great love of my life. Those ten days literally spoiled me for the rest of my life. I tried to make things work with other women, other relationships, you know? But they... just didn't measure up. I knew it was me with the problem, but what can you do?\" \n\nHe paused, looking out at the sea view. \n\n\"And then I met Caroline, who was every bit as damaged and disappointed at life as I was. She had her own story and demons to battle, like me. We gravitated together and made a life, giving each other the space to grieve for the things we'd lost.\" \n\n\"And here I am. And then you showed up. Talk about reopening old wounds,\" he finished, ruefully. \n\nThe kids sat back as he wound down, glancing at each other meaningfully. \n\n\"Well, she didn't forget you either. I mean, so many things made sense after Daddy died and she sat us down and told her version of that story. When we were growing up, our bedrooms were all nautical themed. We'd get little airfix models -- you know, the little plastic models kids make, of planes and boats and what not? Well, all ours would be merchant ships. We never understood till now,\" Amelia said, after a while, grabbing hold of Brett's hand. \n\n\"Yes,\" agreed Bradly. \"Every other holiday, we'd go on cruise. She used to sit on the little verandas the suites we had were graced with, and have tea and stare out into the ocean. She used to say the sea calmed her. I think she was reliving memories, now you've told us your story.\" \n\nThere was another silence, and then, hesitantly, Brett addressed the elephant in the room. \n\n\"How... how is she? Does she ever...?\" he said, looking at the ground, almost afraid of the answer. \n\n\"Well, she's fine. Older, I'm sure. But Mummy always did look after herself. She's quite a spry forty-six-year-old. Did you know we are the exact same age as she was, when she met you?\" \n\nBrett just stared at Amelia. There was an uncomfortable silence. \n\nBradly shifted and then spoke, \"Actually, now that Daddy is gone, she's decided to step back from public life. She's now the official title holder, or was, anyway.\" \n\n\"Was?\" asked Brett, looking over at Bradly. \n\n\"Yes, she abdicated her title. Passed it on down. 'Retiring from public life' is a euphemism for letting go of the title and passing it down.\" \n\n\"So, you are now the Duke?\" asked Brett. \n\n\"Yes, for my sins. I was born twelve minutes before Milly, so now, I'm the Lord of the manor, His Grace, the Duke of Ipswich,\" answered Bradly, simply. \n\n\"Am I supposed to call you My Lord or bow or curtsey or something?\" said Brett, pursing his lips. He had no idea if his kids had his same sense of humor; time to find out. \n\n\"Well, strictly speaking, according to protocol...\" started Amelia. \n\n\"Yeah, I seem to recall us colonials having a little war with your lot so we wouldn't have to bow and scrape and all that crap,\" interrupted Brett, dryly. \n\n\"Yes, well, of course,\" said Amelia, cheeks a little red, evidently embarrassed. Bradly just grinned at her, obviously enjoying her discomfort, as siblings are wont to do. \n\nThere was another silence. \n\n\"So, where do we go from here?\" asked Brett, getting up to get another beer. \"I mean, you came to see me, I know you exist, now what?\" \n\n\"Well,\" said Amelia, exchanging a glance with Bradly, \"We were hoping to get to know you? I mean, it would be nice to know some family history, you know? Any uncles or aunts, or cousins out there for us to meet?\" asked Amelia, half hopefully. \n\n\"'Fraid not. Only child. My parents died when I was seventeen, so there's just me.\" \n\n\"Well, not anymore,\" smiled Amelia, and it went through Brett like a knife. So Much Like Her Mother! \n\n\"Won't that be a bit...awkward? Long lost daddy shows up from the US? I mean, won't that impact your titles?\" Brett wanted to know, settling back into his chair after passing a bottle to both his children. His brain had started working again, seeing the bigger picture. \n\nHis. Children. ...Jesus. \n\n\"Well, I hope you understand, Dad... we can't go around admitting this. In terms of the title, well, stuff like this is as much part of the Royal Family as crowns and pomp and ceremony. I mean anyone who really thinks that Harry is really Charles biological son...\" Amelia trailed off as she saw Bradly shaking his head vigorously at her. \n\n\"Anyway,\" she said, after a second, trying to get back on track. \"The Palace will just simply issue a denial if it comes out, and that'll be that. Short of a DNA test, that's the end of it. They just ignore it. It's what the Royal Family are very good at doing, unfortunately. So, not really worried there, as long as we don't flaunt it.\" \n\n\"That does mean,\" added Bradly, \"We can't officially recognize you, Dad. There's no point in waving a red flag, either. Neither one of us particularly want to flaunt what happened with mother all those years ago, and I'm sure she doesn't either. With that in mind, I hope you aren't really looking to make a big deal out of all this?\" \n\n\"If I was, do you think I would have let your mother walk away?\" demanded Brett. \n\n\"No. Quite. Point taken,\" answered Amelia, quietly. \n\n\"It IS a big deal though... to me,\" muttered Brett. \n\n\"Yes, I can imagine. Us too. We spent the entire flight talking about it. Wondering who you are, reading Mum's dossier over and over. And thankfully, you really are everything we had hoped. Right Brad?\" \n\n\"Definitely,\" agreed Bradly, firmly. \"Great taste in beer too,\" he said, holding up his almost finished bottle. \n\n\"Well, that's nice. I warn you though, I really know nothing about being a dad. Never figured it was on the cards for me.\" \n\n\"Don't worry, we'll guide you through it,\" Amelia said, leaning forward to take his hand again. \n\n\"One thing though. Please, while our father was never really that available, or there that much, he did his best, so please, don't disparage him? That would mean we couldn't be around you, and no one wants that.\" \n\n\"Oh please, the man was a saint! I am just jealous he got you and your mother for all those years,\" said Brett, emphatically. \"Nothing but respect here.\" \n\nHe paused, then asked, gently, \"Do you think he knew?\" \n\n\"Well, Dad wasn't the most present person when it came to family, to be frank. I don't think he really had a clue what to do as a father, either. But like Milly said, he did his best. Tried to steer us right, have the talks he thought we needed to have, made sure he turned up for music recitals and so on. But where he really excelled was at running the estate. He was a whiz with animal husbandry, for example, so I wouldn't be the least bit surprised if the heterochromia in our eyes tipped him off. But if it did, he never said a word to us, or loved us any less than he was capable. For that alone, he deserves respect,\" said Bradly, reflectively. \n\n\"To the Duke,\" said Brett, raising his bottle. \"May a good man rest in peace.\" \n\n\"Hear, hear,\" agreed Amelia, and they all three raised their bottles. They all took a long drink and sat for a moment, each with their own thoughts. \n\n\"So, are you in town for long? What does your mother think about you coming to see me?\" asked Brett, conversationally, without thinking - more for something to say to break the awkward silence than anything. \n\n\"Well, since we are now the official royal representatives, we have to go home as soon as possible, I'm afraid. Mummy has moved out of the main house and into one of the small cottages on the estate. It's all up to us now, so we have to be around and be seen. Plus, I have a practice to get back to,\" answered Amelia. \n\n\"Practice?\" inquired Brett, interested. \n\n\"Yes, I'm a solicitor. Lawyer, you'd say. First year of it, at a local group. Lots of pro bono work, local land trusts, things like that. Brad is now the Lord of the Manor, and his full-time work is now the Duchy.\" \n\n\"But,\" interjected Bradly, \"we'd like to extend an invitation for you to come visit. Have a holiday. Spend some time with us, so you can see our lives. And we'd rather like to portion some time to come out here, and see how you live, if that's okay?\" \n\nBrett shrugged. \"Well, yeah, I mean, of course. I just... don't want to make it awkward. With your mother, I mean.\" \n\nThere was yet another meaningful glance between the two of them. \n\n\"Dad...\" said Amelia, carefully, \"I know Mum was the love of your life... well like I said, she's decided to take a step back from public life. It's a totally understood thing. Lost her husband, so she'll wear her tweeds and do her gardening and just retreat a bit. Happens all the time in our strand of society. And to do that, she's going to just... take off for a bit.\" \n\nAmelia was clearly groping for words, constantly looking back at her brother for encouragement and confirmation of what she was saying. Bradly was nodding at her, clearly sympathetic to her phrasing. \n\n\"She's decided to take a cruise. She says she has wonderful memories of some time spent at sea.\" \n\nAmelia was concentrating on Brett as she spoke, watching and evaluating his response to her words. \n\n\"For six months. Around the world. She's booked a suite -- quite one of the nicest on the ship in fact. Two bedrooms, Private deck, steward, the whole deal.\" \n\n\"Oookkkay?\" said Brett, not following. \n\n\"And... it leaves in two days.\" \n\n\"From San Diego.\" \n\nThere was a sudden silence as Brett's eyes bulged and understanding flowed into him. \n\n\"She's HERE?\" he said, abruptly standing up. \"Now?\" \n\nAmelia grinned at Bradly and then smiled even wider at her father. \n\n\"A hotel downtown. The Coronado. We are staying there too.\" \n\nBrett looked wildly around. \"She wants to see me? Me?\" \n\n\"Well, as long as you have your passport, I think the idea was that you might want to join her? You've got nothing going on that you can't leave, right?\" \n\n\"I...\" Brett fell back into the chair. \"This is for real, right? She's here?\" \n\nAmelia nodded, vigorously. \"And waiting for you. If you want, Dad.\" \n\n\"She's here,\" Brett muttered to himself. \"I've got to...pack, get the house shut up. I need to go, do you think it would be okay if I just showed up? What should I wear?\" he was babbling now. \n\nAmelia glanced at Bradly, who was also grinning broadly. \n\n\"I think it would be more than okay, Dad.\" \n\nBrett stood outside the hotel room door, nervous despite himself. Twenty-three years. He'd traveled the world, seen storms and other things, experienced what life had to offer, and yet, what was inside this room terrified him; something -- no someone -- he desperately wanted. \n\nHe raised his hand to knock, but before he could land his hand, the door opened. And there she was. A little aged, but the same woman. Same eyes, same porcelain skin, some crows and wrinkles, but the same smile. Same inviting mouth. Same...everything. It made his pulse race, just looking at her. \n\n\"Hello Sailor, ready to pick up where we left off?\" \n\n'Oh god yes,' thought Brett, 'All things come to those who wait.'"
    ],
    "authorname": "jezzaz",
    "tags": [
        "container ship",
        "aristocracy",
        "love affair",
        "royals",
        "sailor",
        "sea rescue",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/ten-days-at-sea"
}