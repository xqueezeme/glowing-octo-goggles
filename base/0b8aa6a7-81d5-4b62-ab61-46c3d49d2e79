{
    "title": "Conversations 17",
    "pages": [
        "Another conversation around that event, but with a whole lot more people involved in this one. No sex, so no surprise there. There isn't usually much sex going on during those types of conversations. \n\nI braced myself for what was to come. I'd seen looks of sympathy and smirking grins already, and knew it was going to happen, but it didn't matter.\n\nI looked at the door for what was probably the last time, took a deep breath and settled my face into a neutral expression. Then I opened it and entered.\n\nThirty-six faces turned to stare at me.\n\n\"Settle down,\" I said. \"Jackson, go and sit in your own seat and leave Cummings alone. He's not your play toy.\"\n\nReluctantly, the rat-faced teenager left off tormenting the overweight boy that he'd targeted for the past month. Stanley Jackson was a bully, and quite honestly, a mean little fuck. I knew about the nightmare that was his home situation -- the drinking, the drugs and the violence -- and I could understand how any kid would turn to the dark side in those circumstances, just to get through the day without having a complete breakdown. While I could understand it, I still couldn't accept his bullying others in order to make himself feel good. The problem that I and every other teacher faced in this situation was how to punish bad behaviour when that youngster would go home everyday to face so much worse than anything we could throw at him. \n\nI picked up the register and clicked my pen.\n\n\"Alderly?\"\n\n\"Present, sir.\"\n\n\"Brown?\"\n\n\"Present, sir.\"\n\n\"Cummings?\"\n\n\"Present, sir.\"\n\nI did the roll call, listening to the calls of 'Present, sir!' almost absent-mindedly, and at the end was a little surprised to find all my charges present, and if not correct, then at least not running riot. This was my first posting as a teacher, and it had taken me a little while to gain control over the pack of slathering monsters that comprised my current sixth form class. Two years later, I almost had them eating out of my hand.\n\nAs I finished congratulating myself, it started. There was a little noise that sounded like a strangled chicken.\n\n\"Cuck, cuck, cuck, cuck.\"\n\nIt was coming from good old Stanley Jackson; of course it was. I was in a situation where he felt he could torment me and certainly wasn't going to give up an opportunity like that. He was trying to make the sound without moving his lips, but was doing it badly and I could see his Adam's apple bobbing up and down in his scrawny throat in time to the sound.\n\nI sighed, stood up and moved to the front of my desk, perching my bum on it and looking around at the faces watching me. Well, apart from Karen Evans, who was once again trying to text on her phone without me seeing: trying, but not succeeding. She never did catch on that when she looked at her phone, it lit up her face, and so the phone grassed her up every time she did it by shining a spotlight on her.\n\n\"Karen, bring me your phone. You can have it back after class.\"\n\nHer pretty face lifted sadly. She knew the drill.\n\n\"Oh, sir. I was just...\" She couldn't come up with a lie quickly enough and trailed off.\n\nI held out my hand and she reluctantly dragged herself up and brought it to me as if she faced execution. \n\nHands-free for probably the first time in a week, she turned and stomped back to her desk. I turned the phone over in my hands and the idea that I'd been turning over in my head since I got to school that morning took form and solidified. I put the phone down and looked at them.\n\n\"Put your books away,\" I said, as the chicken noise started up again, while Jackson looked around with a big smile, as if searching for applause and approbation. I ignored it.\n\nSurprise on many faces, they put their books back in their bags, or piled them up in a corner of the desk.\n\n\"Right, phones please. All of them, on my desk.\"\n\nThere were protests and moans, but in the end I had them all laid out in a grid pattern on my desk according to where they sat in class. There was a gap.\n\n\"Linda, your phone!\"\n\nShe looked wounded and almost frantically tried to deny she had it with her, but a look at my face showed her I wasn't going to give in. Finally, she brought it forward and seemed to be trying to power it down as she walked between the desks. Her thumb must have slipped as the screen lit up as I took it from her. There was a picture of a naked man holding a hard dick on it. She blushed scarlet.\n\nI carefully didn't allow my expression to change. They were all legally adults, so it wasn't my business. It wasn't her boyfriend, however.\n\n\"Thank you, Linda. Despite lying to me about not having your phone -- there won't be any problems about this.\" I tried to make my meaning clear by the tone of my voice, and powered the phone off in front of her. \n\nShe understood, and looked so relieved it was as if she'd just had an instant shower. I saw her eyes moisten.\n\n\"Thank you, sir.\" It was an academy school -- and in this school the sir or ma'am was mandatory. In this case, it was heartfelt.\n\nI nodded. \"Go sit down.\"\n\nI put the phone down in its place on my grid, completing the six-by-six pattern, and turned back to the class.\n\n\"Okay, now the reason I made you hand your phones in was because I didn't want any surreptitious recordings of this lesson. You all have to be aware of how things can get out of hand when things hit the net, and I don't want that to happen.\n\n\"I know you've all heard the rumours about what has happened between me and my wife, so I'm going to tell you about it, which will hopefully stop the wilder rumours, and I really hope you'll learn something you can use in your own lives. I'll be as honest as you want, and when I'm finished, you can ask whatever questions you like -- about anything. So you can stop making those stupid noises, Jackson. Yes, I know it's you. Your throat moves. Try watching ventriloquists, that's how you can tell.\n\n\"But let's start with that. Jackson has been calling me a cuck since class began. Everyone know what a cuck is? Hands up those who aren't sure -- nobody needs to feel dumb if they don't. It's not a word that you see every day.\n\n\"A cuck is short for cuckold. Its origins trace back to the French word cucu -- from which we get our word cuckoo. Because that bird lays its eggs in the nests of other birds, for them to feed, protect and raise as best they can, it came to mean a man whose wife is unfaithful -- thus raising other men's children as his own.\n\n\"Most of you have met or at least seen my wife Emily, at school functions and sports days, and most of you -- probably all of you -- have heard that she had an affair and that all was revealed in a rather noisy altercation on Friday. She effectively made me a cuckold. I'm being honest with you here, so I'll go into as much detail as you wish, although I'd rather keep the really intimate details to myself. But, I offered, so if you ask, I'll tell. That's a fair warning though; you're all legally adults, so at least the head can't fire me for corrupting children.\n\n\"And if any of you don't feel you want to hear what I'm about to say, just put your hand up and I'll give you a note and you can spend this class in the library, okay? Who wants a note?\"\n\nI was pretty sure of my wolf pack, and sure enough, not a hand twitched. Children -- and despite being in their late teens, each still had a fading part of them that thought like children -- are inveterately curious, especially about things they feel that adults are hiding from them. Here I was offering them a free pass to all the information they wanted.\n\nA hand went up.\n\n\"Tracy? You want a note?\" That really surprised me. Tracy Smithy -- or TySy as she insisted her friends call her -- was the complete gossip. I was pretty sure that if the office handed her a memo instead of printing out a copy for each pupil, it would get to a lot more people a whole lot faster, and they'd pay a lot more attention to it.\n\n\"Oh no, sir!\" she said. \"I just wondered what Mrs. Marsden did exactly.\"\n\nWell, at least the pain I felt at her question was just an echo of how I had felt when I opened the door and saw them. I couldn't have survived if that emotion had continued to run at its initial white-hot temperature.\n\nI took a deep breath. \"Emily met up with an old lover of hers from the time before we were married. She didn't tell me about that meeting or any of the ones that followed. They became intimate and would spend several hours together each week at a hotel on the coast.\"\n\n\"Cuck, cuck, cu... awk!\"\n\nLeonard Alderly had leaned over and squeezed Jackson's throat, one-handed. \"Shut the fuck up!\"\n\nLeonard was a tall, thin boy with lanky brown hair and was slightly bucktoothed. He was quiet and fairly studious, preferring to spend time online with his friends than out on the street corners where most of them hung out. Tellingly, he lived with his mother in a one-parent family. Something had resonated within for him to react so intensely. I wondered about the one-parent side of his circumstances.\n\n\"Leonard,\" I said equanimously. \"Please don't kill him. Think of all the paperwork I'd have to do.\"\n\nHe gave a last squeeze and then pushed Jackson away, giving him a filthy look. I guessed that he'd taken enough of the little rat's torment in the past and his blatant attempt to torment me had finally caused him to boil over. That look morphed into one of surprised, blushing pleasure when Jenny Radcliff leaned over to squeeze his arm and give him a look of intense approval. That little gesture might turn into something a whole lot more meaningful if my experience of teaching teenagers was anything to go by. Cummings gave him a double thumbs-up with a wide grin on his round, pleasant face.\n\n\"How did you find out, sir?\" asked Cynthia -- a dark-haired girl with sharp features, but managing them well. I guessed she had a mother or older sisters who really knew how to handle make-up.\n\n\"Mileage,\" I said. \"The hotel wasn't far away, but it was a whole lot further than a trip to Emily's office or to the shops. I keep a note of petrol consumption and mileage for both our cars, as my dad had shown me that you could spot engine problems before they got too big by keeping track of fuel economy. All it needed was a little maths and statistics, and I realised that she was travelling out of town a couple of times a week. I followed her and found they were visiting a cheap hotel.\"\n\n\"I would have used a PI,\" stated Weeks -- a boy with a never-ending repertoire of short-term enthusiasms.\n\n\"Do you know how expensive they are to hire?\" I asked. \"You do know I'm a teacher with a teacher's salary, don't you? You've been watching too much Hollywood.\"\n\nAt least I was a teacher for the present moment.\n\nHe grinned and made the shape of a gun with his fingers at me. I couldn't help grinning back.\n\n\"So have you two broken up, sir?\" This one came from Agnetha, an overweight blond girl who sat in a back corner in every class she'd ever attended -- although attendance was never a certainty in her case. I knew that Social Services had taken a look at her situation a couple of times, but never found anything serious enough to start alarm bells ringing. \"I mean, it's just ... fucking, isn't it? It's not very important.\"\n\nI could see on her face that she'd tried to find a euphemism but given up. A nervous titter ran through the class. I thought that, with that attitude to sex at her age, Social Services may have missed something important.\n\n\"You know what, Agnetha -- you're right. It was just fucking.\" That silenced the titters and seemed to raise this conversation in their minds from a lecture by yet another boring teacher, to something that might treat them as the adults they were desperate to be. \"And I guess if Emily was careful about using condoms so that she never got pregnant and really went cuckoo on me, I suppose it never took anything away from me. So why give it any importance?\n\n\"I mean, it's not as if any of the equipment involved wears out with use, for either the man or the woman. It's not as if the man has to use a sharpener to keep a point on his penis, or that a woman's vagina wears away until it's the size of a cathedral. So why all the shouting and screaming and tears and...\"\n\nOh god, I didn't want to remember that evening anymore; the photographs I'd taken of them getting out of the car and going into the hotel, with the time stamps circled in the lower corner; the ones of them kissing at the door to the room; the ones I'd taken inside the room when they were going at it like stray dogs in an alley.\n\nThe door to the hotel room had been one which closed and locked itself, something prevented by quickly nipping forward from the shadows and slipping a piece of cardboard between door and jamb as it slowly closed behind them. Then came the wait in the corridor, trying to look as if I was hanging around to meet someone by constantly glancing at my watch. And finally, desolately hearing that very specific noise she always made when a cock first plumbed her depths at the start of a session, which told me I could at last go in, get the evidence I needed and get the fuck away from that place. I had vowed never to go to that town ever again, never mind that cock-pit of a hotel.\n\n\"... and the drama?\" I finished. \"It's the emotion, the trust, the respect, the belief that you are both on the same team, working together towards the same thing -- a good marriage. When you get married, you promise each other various things. I know people make up their own vows, but they usually include an implicit or explicit promise of sexual exclusivity. And for homework I want a paragraph on the specific difference in all their forms between those two words; implicit and explicit. While you're at it, you can also give me a paragraph on assume and presume.\"\n\nThey smiled. A paragraph or two was something they could do in five minutes with Google. It would be good practice for their English finals.\n\n\"I also want a two page essay,\" I continued speaking over their disappointed groans. \"On the history, the legalities, and the meanings of a marriage contract -- past and present. It's something you need to know in a lot more detail than you might think. Always operate from a position of strength, and knowledge is strength. Knowledge is power!\n\n\"That's why we go to school. That's why you're all here, wishing I'd forgotten about giving out homework assignments.\"\n\nThey gave varying degrees of smiles at that weak little joke.\n\n\"Okay, in reality your parents actually send you to school just to get you out of their hair for a while so they can do adulty things and get some peace and quiet for a while, but for you -- you're here to learn how to grab power over your lives. Now repeat after me: 'Ladies and Gentlemen, I call this meeting to order!'\"\n\nPuzzled but willing to go with me to some extent, they chorused those nine words.\n\n\"Now say: 'Do you want fries or potato wedges with those nuggets?'\"\n\nThere were giggles as they did so. Jackson didn't participate, which was a pity. He was one of the brightest boys but had locked his future into helping his brother sell weed from the boot of a crappy broken down car. I'd taken him aside at one point and asked if he had considered the economic future of that career. He'd sneered.\n\n\"I'll be making more money in a month than you'll make in a year.\"\n\n\"And when Britain joins the US in legalising marijuana? Who's going to want to shop from you in a back alley, when there'll be stores up and down the high street, offering a much wider range at fixed prices, and with no supply problems. Nice, bright, shiny shops -- while you're scraping a living out of an alley alongside their dustbins. You'll be out of business in a month. And don't even think about going on to harder stuff. With all those coppers freed up from having to chase the smokers, they'll be coming down with an iron fist on the real drug problem. You're already extinct. You just don't know it yet.\"\n\nHis answer was predictable, I suppose. \"Yeah? And you're a bell-end!\"\n\nI posed the next question to the class, needing them to get this message more than any knowledge they might pick up in a defined lesson. \"Now think carefully. Which of those two sentences made you feel better, more important, more empowered?\"\n\nMost felt that the former felt better.\n\n\"This is the time that you decide which of those two things you want to have in your future. It's an opportunity, don't piss it away.\"\n\nThe laughter at that mildest of swear words was louder than it should be. They were still getting used to the fact that they were on a par with me in this conversation.\n\n\"So it's not about the sex, but the emotion?\" Agnetha dragged me back to the matter at hand.\n\n\"Actually, it's both,\" I replied. \"Because, if you married for love -- rather than convenience or arrangement -- then both are intertwined so closely it's impossible to separate the two. Let me put it another way. My Granddad always told me there was only one philosophy that you should live by: always keep a promise, and try not to be a dick.\"\n\nThe word dick got a laugh of course. This was a classroom and I was a teacher, and I shouldn't be using that language, but it was just one lesson.\n\n\"Think about that. Always keep a promise. If you make a promise then keep it -- not always easy, I know. But the thing that's not said, is that if you can't keep a promise, then don't make it in the first place. If you don't mean to remain faithful to your partner in a marriage, or even in a relationship -- then don't promise to do so. Have the courage of your convictions! If you don't think you can be exclusive then don't promise to be so -- and take the consequences of that.\n\n\"But sir,\" protested Melanie, who was easily the prettiest girl at the school, but who kept the boys at bay, and was thus branded a lesbian. \"People live a lot longer than they used to, and marriages therefore mean having to remain faithful for a lot longer. People change over time and they fall in and out of love.\"\n\n\"That doesn't change anything,\" I reasoned. \"Of course people change, and some do fall in love with other people -- I recognise that, and so does the law. That's what divorce is for. So if you find you've made a promise but are no longer able to keep it, then find the courage to go with your feelings and withdraw your promise before you break it. Sure it would have broken my heart if Emily had announced that she no longer loved me, or was just too horny for somebody else to remain faithful, and the divorce would have hurt me enormously. But it would have hurt a whole lot less, a whole world less, than her going behind my back and sneaking off to have an affair.\"\n\n\"Are you going to divorce her, sir?\" asked Melanie, her green eyes seeming very bright in the afternoon sun.\n\n\"What do you think?\"\n\n\"Drop her like an anvil, sir!\"\n\n\"He could forgive her,\" said Isobel with a shrug, a thoughtful expression twisting her Mediterranean features slightly. \"It's an option he hasn't mentioned.\"\n\nMelanie's long golden-red ponytail swung sharply as she turned to her classmate. \"Forgiveness should be for a mistake. Not a deliberate action!\"\n\n\"People make mistakes all the time,\" responded Isobel, warming to the defence of her statement.\n\n\"Once! They make a mistake once! The expectation of a different result from a precisely repeated action is not only meaningless, it's stupid! If you keep doing the same thing over and over, it's not a mistake, it's deliberate.\"\n\nI had to smile approvingly at Melanie, as she'd repeated word-for-word what I had tried to teach them on that point in revising for the chemistry paper.\n\n\"A quickie while drunk is one thing,\" she continued hotly. \"A planned, ongoing affair is completely different. No mistake there!\"\n\n\"Still, if Mr Marsden loves her, then he should forgive her, for his own sake.\" I think Isobel was a hopeless romantic at heart.",
        "\"There are two fields of thought about forgiveness,\" I pointed out, trying to ignore Alicia's actions which I couldn't help seeing out of the corner of my eye. The little blond cheerleader always sat in the front row in my classes and had the alarming habit of shuffling her butt forward in her seat and then slowly opening and closing her legs, which forced her skirt up and gave me full view of her panties and the shape of the camel toe they cupped. I don't know whether she was trying to get something started between us -- which was never going to happen; whether she just wanted to try and throw me off my stride in the lesson; or whether it was something she did everywhere when she was bored. I'm pretty sure I could have described in detail every pair of knickers she possessed, she did it so often. It always got a reaction -- a twinge in my loins.\n\n\"Two streams of thought,\" I began again. \"One is that forgiveness teaches only that the guilty party can expect to get away with repeating the deed in the future, and the other is that it should only be offered for true repentance.\"\n\n\"Isn't that religion, sir?\" Emir said. His large hooked nose evinced his Turkish ancestry. His parents were split on religion, which probably made his home life a hellish minefield at times. His father was a strong supporter of Attaturk and his secular beliefs, while his mother was a convert to Islam and wanted them to live under the rules of her Imam. Understandably, Emir avoided any discussion of religion at all. \"You're not supposed to teach religion, sir! It's against school rules!\"\n\n\"I don't think forgiveness is a religious ideology,\" I said mildly. \"We forgive people every day for all sorts of things -- from bumping into us, or jumping the queue, or even stealing from us -- and religion has nothing to do with that. Besides, every religion teaches forgiveness after repentance. It's a vital part of human survival. We know we make mistakes, so we forgive them in others so that we can be forgiven in turn.\"\n\n\"That's my point, sir!\" Isobel cut in, bless her romantic heart. \"Forgiveness.\"\n\n\"For a mistake!\" said Melanie. \"Not for a deliberate series of actions.\"\n\nBless her logical heart as well.\n\n\"I saw one of the photographs you took,\" said Cummings, his voice slow and revealing his reluctance to say anything that might upset me. He was a nice kid. \"Somebody showed it to me.\"\n\nOh dear. That had worried me afterwards. I wasn't sure that she'd picked them all up, and now it seemed that at least one was out there. It was no good asking Cummings who had shown it to him; he had only a few friends and he protected them with fierce loyalty. I liked him for that. I hoped that his puppy fat would finally morph into something resembling muscle as he hit his final growth spurt, and that some girl would recognise that he was the nicest kid in the whole class, had the sweetest smile and would sweep him off his feet and into her bed. \n\n\"What did you see?\" asked one of the boys. Cummings shook his head.\n\n\"You can tell them,\" I said. He looked at me for a long moment, wavering, and then shrugged.\n\n\"It showed Mrs Marsden naked, on all fours, with a man behind her and ... doing it.\"\n\nHe blushed, shrugged again and smiled, and I noticed Anna Weston suddenly sit up and look at him hard with a certain expression on her face. Ah, she'd seen through his chubbiness at last. Young love -- you have to admire how kids somehow get through it, with all the damage they take trying to get to grips with it, and each other.\n\n\"Who took the pictures, sir? Did you?\" Leonard had joined the conversation.\n\nI nodded. \"I didn't feel able to ask for a divorce without some sort of evidence of her cheating. It was tough.\"\n\n\"Ouch!\" said Karen.\n\n\"Oh, sir,\" Melanie said with sympathy.\n\n\"Cuck, cuck, cuck,\" was Jackson's contribution.\n\n\"Jackson! Will you shut the fuck up!\" roared the usually quiet and gentle Evan Young, twisting around to face Jackson and brandish an enormous black fist at him. Young was six foot six and had a physique shaped by playing number eight in the school rugby team. His skill had led to his selection by the Rhinos for their youth team, and everybody seemed to accept without question that he would be in the England team by the time the next Rugby World Cup rolled around.\n\nJackson squeaked and rocked back in his chair, almost spilling over backwards. Edwards, who sat behind him, kicked the back of the chair hard enough to push it upright again. Jackson had his toadies to help him in his bullying, but it seemed that even they were on the outs with him at the moment.\n\n\"Okay, let's address the cuck word in more detail. Some men fantasize about sharing their wives with other men, and some even go further, and encourage it. The word cuck normally applies to them in current usage.\"\n\nA strange sound of denial and repulsion seemed to circle from boy to boy around the room, although one boy looked more thoughtful than disgusted. To each his own, I acknowledged.\n\n\"However,\" I continued. \"I didn't ask for this or approve of it in any way. I didn't volunteer to be a cuckold; that appellation was forced on me by the secretive actions of my wife, in such a way that I didn't even know I had been so labelled until the very end.\"\n\n\"So forgiveness would very, very hard,\" I said, looking at Isobel. She nodded, her expression showing unhappiness, but her eyes revealing understanding. \n\n\"When you also take into account the broken trust, the lying, both by omission and commission...\"\n\nThey tensed up, praying I wouldn't demand more homework.\n\n\"...as well as the sheer amount of disrespect, it made it pretty much impossible for me.\"\n\nThere were further nods from both girls and boys. They understood disrespect. Respect was earned, and disrespect had to be rooted out at all costs. Each and every one of them was prepared to physically go to war on that point. At any school, it meant the difference between survival and sinking into the mire.\n\n\"Like I said, loving Emily as I do, if she'd told me she could no longer honour her promises, the divorce would have hurt me deeply. But it wouldn't have hurt as much as her actions did. That's why I said it isn't just about the sex, Agnetha. But it certainly plays its part.\"\n\n\"Alie wid you sir! I heard you punched out that chief real sick for jacking your bitch. Respect!\" John Moore was not black, anymore than I was, but he insisted on talking that way, practicing the rhythm and nuances as well as the vocabulary.\n\n\"I didn't punch him,\" I protested.\n\n\"But I heard the man ended up in A&E, sir,\" Karen protested.\n\n\"Well, yes. But I didn't punch him.\"\n\n\"So what happened, Mr. Marsden?\" asked Melanie, a look on her face that I couldn't interpret.\n\n\"All right. I was at the supermarket, picking up the developed photographs from the one hour kiosk -- and yes, I know I could have used my phone to take them, but I wasn't sure how light or dark it would be in that hotel room so I took my SLR camera to make sure. I picked up the photographs, and as I went to leave, Emily and Mr. Wells approached...\"\n\n\"It was Mr. Wells?\" shouted Linda, shock on her face. \"The vice-principal?\"\n\nI frowned. I hadn't meant to name the bastard who'd been shagging my wife during all the time I was teaching at his school. It hadn't been common knowledge and I wanted my suing him to be a surprise. Any damages would only cover my legal costs in the divorce, but more importantly, it would out him to the world as a sneaking coward, as well as a fucktard arsehole.\n\nI nodded. There was silence for a moment as they stared at each other. This really was adult stuff!\n\n\"What happened then, sir?\" Isobel chipped in.\n\n\"It seemed, that despite their attention being focussed on each other, they had realised that I was also present during the cheating, fucking, bitch-slut...\"\n\nI broke off as I realised I had started to lose it. I was panting with emotion, and fought to control my breathing and my heart-rate, as they stared at me, wide-eyed. Some showed simple curiosity, some revealed sympathy. A couple of them looked heart-broken. After a few moments I apologised and continued.\n\n\"Sorry... They must have raced back to try and put some damage control in place, and seen my car outside the supermarket. The first I knew of their intentions was when they basically cornered me up against the bananas. They were both talking at me at the same time, quietly so nobody could overhear, but it felt as if they were crowding me: Emily ordering me to come home so we could talk about fixing the problem, and Mr. Wells warning me that if I told anyone -- especially his wife -- he'd have me fired. Eventually, it became too much and I just pushed him away, opened the envelope of pictures and threw them at Emily. I remember telling her that they were the reason I wouldn't be going home anytime soon. The negatives were still in the envelope, so I could always get more.\n\n\"I heard a crash and realised that Mr Wells had stumbled back when I pushed him and fallen into a large display stack of tinned beans on special. The display tumbled down and buried him, and Emily was too busy trying to pick up the photos, which had scattered everywhere, to try and help him. So I left. I hadn't started it, and the end had been an accident.\"\n\n\"Did five-oh try to take you in?\" Weeks asked enthusiastically.\n\n\"No, but they did question me the next day. They accepted from witness statements -- and there were apparently a lot of those -- that it was an accident, and that Mr Wells had caused me to push him away by crowding and threatening me. It turns out he got hit on the head several times by the tins of beans and was knocked unconscious. They didn't ask about any photographs so I'd thought Emily had got them all, until Cummings proved me wrong.\"\n\nThe boy blushed once again, and Anna seemed to wriggle slightly as she watched him. I couldn't help smiling, pleased for him.\n\n\"Any other questions?\" I asked, hoping this was nearing its end. I had thought it would be good for my students to get the rumours out into the open and establish the truth or falsehood of them -- or at least the truth of how I saw them -- but it was tearing me up inside to have to remember again and again the things I'd seen. \n\nTo my dismay, a forest of hands grew in front of me. I picked one.\n\n\"Trudy?\"\n\nThe quiet, perfectly-average girl blushed a little at being singled out first, but hung in there. \"Did you speak to your wife after that, and if so, what did she say?\"\n\nI paused for a moment, trying to sum up in my mind that little shit storm.\n\n\"Apparently Emily is mad because I moved out of the house before she could get home. So, when I phoned her later that night to discuss legal proceedings, she became a little over-excited, and I had to end the call for the sake of her health.\"\n\nShe had started off by screaming at me that I should be home so that we could talk it through, and not try to conduct serious, adult discussions on how to mend our marriage over the phone. When I pointed out that I'd only phoned as a courtesy to let her know I was filing for divorce, the noise levels went through the roof. When she started swearing at me, calling me everything from a useless provider to a cowardly cunt, I had cancelled the call and turned the phone off.\n\nSome of the arms were waving now. All they needed was lighters and I'd be a rock star at a concert.\n\nI ignored Moore's frantically waving hand for the moment, not confident I could translate all his street slang into comprehensible English. I pointed at Melanie. \n\n\"You should talk to her and let her know how you feel. Maybe she feels that you let her down in some way, and she's getting her own back.\"\n\nI felt a bubble of disappointment in her float up in my belly. \"You think that was a better thing to do than come and tell me about it; perhaps give me a chance to try and fix whatever problem she had with me?\"\n\n\"No. Personally, I think you should kill the bitch and bury her body in the woods. Failing that you should just divorce her cheating arse! But I do think you need to hear her out -- for your sake, not hers. She burned her bridges and can't cross those again.\"\n\nThe disappointment bubble in my gut popped at this good, cogent thought from my brightest pupil -- even if it was a little too murderous in parts. The fact that she had a schoolgirl crush on me was secretly pleasant, but the fact that she had a great mind and I'd had the chance to shape that brain into something that might one day eclipse the universe, had definitely been the cause of her becoming my favourite pupil.\n\nHer suggestion of killing Emily was too bloody for me, but the nodding around the room indicated that most of the class though it was a pretty good idea and -- all things considered -- very reasonable.\n\n\"I'll take that under advisement, Melanie, but thank you.\"\n\n\"Sir, if you're going to divorce her, will you date me when it goes through? I'll be out of school by then.\" \n\nSweet Alicia, with those magical legs and familiar panties, had put in an early bid, astonishing me. She'd also surprised me by requesting that only after my divorce went through. I'd always known she was bright, but had pegged her as an airhead who didn't really listen to me. Now I found that she'd taken in every word of today's lesson and the talk on promises.\n\n\"Alicia, I think you'd wear me out within a month. You're far too pretty.\"\n\nShe looked both disappointed and pleased at the same time, giving me an extra-wide flash up her skirt in response. I smiled.\n\nI hopped off the desk and went to stand behind it.\n\n\"Guys, you have your finals in three months' time. You're ready to face them, and I know that not one of you will disappoint me. However, I'm genuinely sorry to say that I won't be there for you. I've loved teaching you, sharing your thoughts, worries, ambitions and even your failures. It's been a privilege and an honour from the first time we met. However, this is my last class at this school. My brother has been after me to join him at his company for years, and I've taken him up on his offer.\"\n\nThere was a buzz of muttering.\n\n\"Many people will say I ran away, and in one regard they're correct. After that silliness at the supermarket, the whole town is now taking sides on my marriage. I could stay and face it out, or I could head for something brighter. I choose the latter. If I could take every one of you with me, believe me, I would. But as that's not going to happen, I'll say goodbye to each one of you individually when I call you up to pick up your phone.\"\n\nI called on them alphabetically, having a quick chat with each of them and shaking their hand. Alicia gave me a rather sexy hug, and then wiggled her hips as she left the class, phone in hand. I mentioned to Cummings that he might want to cycle to school and back each day, and downsize the pizzas his mum let him order several times a week, and whispered to him that he should pay extra attention to Anna in the near future. \n\nI asked Linda what she planned to do, looking down at her phone significantly, that dick pic in mind.\n\n\"I'm going to withdraw my promise of exclusivity,\" she sighed. \"My boyfriend is going to be really pissed off.\"\n\n\"Have courage and face the consequences of your choices head on,\" I urged. \"And do it face-to-face, not by phone or text. You're a classy lady, and you should always treat yourself like one.\"\n\nShe gave me a kiss on the cheek and hurried off.\n\nWhen Isobel picked her phone up, leaving just Jackson, Melanie and Agnetha, she kissed my cheek and then asked to take Melanie's phone as well.\n\n\"Huh?\" \n\n\"She said she had something to do, and asked me to get her phone,\" Isobel said quietly.\n\nI looked around and saw that she was right -- my favourite pupil had slipped away without a word. I was sad. I'd shared so much with them that I didn't want any of them to just walk out of my life without even looking back.\n\nWhen Jackson slouched up to the desk, I handed him his phone. \"Think about what I said about economics. You could do so much better!\"\n\n\"You're not the worst teacher in this fucking dump,\" he said. \"But you're still a cunt.\"\n\nI shrugged as he walked away.\n\n\"Agnetha?\" \n\nShe stood next to the desk, and I searched for a spark within her eyes. She looked down.\n\n\"Agnetha, you need to tell someone. I don't know who is doing it, but I know what's happening just from the signs. Please, you don't have to take abuse and...\"\n\nShe cut me off by hugging me. \"I'm handling it. You don't need to worry about me. Thank you for being there for us all. We needed you, and I think you needed us. I won't forget you.\"\n\nShe walked away, leaving me alone with the thought that some of my pupils had snuck up on me and matured beyond all expectations. I was proud of them. \n\nI collected a few things together, left the register in the middle of the desk, took a long, last look -- and walked away from my life as a teacher.\n\nAnd so...\n\nThree years later, I received the yearbook that the Academy had started producing each year on the American model. Cummings had sent me a copy of the one that included my pupils. He was at University, studying physics and was doing really well. In fact, both he and Anna were doing well, and planning to do their masters together as a team -- and a couple.\n\nHe'd included notes; some gossipy, some funny and some very sad.\n\nPerhaps predictably, Stanley Jackson was in jail, his attitude at school not transplanting well to the streets, and he and his brother had tried to sell a large bag of weed to a plainclothes cop. The cop was off-duty at the time and had simply said no to the offer, but the brothers had kept on and on with their sales pitch until he finally arrested them, mostly to shut them up.\n\nKaren had become a successful blogger, and had possibly had her phone surgically attached as no one ever saw her without it.\n\nTracy Smithy and John Moore had got together and formed a rap duo as TySyMorE, and were working clubs and bars up and down the country, waiting for their big break.\n\nLeonard Alderly and Jenny Radcliff had married fresh out of school, and divorced two years later. Cummings had noted that Leonard had serious trust issues which had driven Jenny to drink and then to a lawyer's office, and he had moved back in with his mother.\n\nAgnetha had finished her A-levels and promptly moved away from home to become a sex worker, picking up a nasty drug habit shortly afterwards. She was currently awaiting trial for shoplifting from an all night shop. That news broke my heart.\n\nCynthia, unsurprisingly, had found a job at the BBC and was one of the make-up crew that made average people look really good on television each night.\n\nAlicia and Isobel had surprised everyone when they opened a business together, and had a growing reputation as personal shoppers who would get their clients exactly what they wanted... or needed, if that was different. I was proud of them, and still remembered Alicia's collection of underwear with great fondness.\n\nSadly, Evan Young had received an injury to his knee in his first game in the England Under-21 squad, which had put paid to his rugby ambitions, and was a bouncer at a club in his home town.\n\nThe others had all done reasonably well or excellently in their finals and had drifted off to become perfectly normal, average people. All except...\n\nI looked at Melanie's picture and then at Cumming's notes. He had nothing. She had gone completely off the radar after getting nine A* grades on her finals, which would have given her free admission to any University in the country, and probably in the world. Nobody contacted by Cummings and Anna, who were trying to get a reunion together for their fourth anniversary and were hoping I'd attend, had any clue about her.\n\nI wondered about that as I went about the business of controlling the group of whizz-kids at my brother's company who were developing a series of computer games -- which was remarkably similar to herding a flock of cats. Was she changing the world, or sunk into obscurity?",
        "A month before the fourth reunion I was stress testing our latest product at home, and trying my best not to throw the controller at the television screen in frustration, when the doorbell rang. \n\nAnd there was Melanie.\n\nAs I did my famous goldfish impression, she started what turned out to be a well-rehearsed speech that may have got a little garbled in presentation.\n\n\"It took me a while to find where you went. I didn't want to say goodbye because I couldn't say that to you -- and I didn't want to, so it wasn't the end. I got my degree in Edinburgh, and picked Computer Sciences when I found out where you worked and what your brother's company did. I didn't want to come across as a stalker, but I followed the company on Facebook, and then followed your girlfriend and when she changed her status to single I knew I had to move quickly, and please don't send me away. Besides, you can't, because your brother employed me today to lead your games development team, so we'll be working together, and now I'm here, and you're here and I've always been in love with you. Oh god, I'm so stupid and I'm not saying this right, and...\"\n\nI shut her up very effectively, by drawing her in and kissing her gently but firmly until she relaxed and then melted into my embrace.\n\nAt twenty-two, she was no longer a girl: she was a beautiful woman, and yes -- her mind could still eclipse the universe, especially mine. Was it creepy that I was willing to take a damped-down, half-forgotten affection for an incredibly beautiful and exceptionally bright schoolgirl, and allow it to fire up into a solar flare? Possibly. Probably. But I was willing to take that chance.\n\nWhen we drew apart after a very long moment, having dismissed all those claims at school that she was a lesbian, I managed to say my first word. \n\n\"Melanie?\"\n\n\"Present, sir!\""
    ],
    "authorname": "SleeperyJim",
    "tags": [
        "cheat",
        "conversation",
        "cuck-calling",
        "photos",
        "pushback",
        "redhead",
        "tins of beans",
        "teacher"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/conversations-17"
}