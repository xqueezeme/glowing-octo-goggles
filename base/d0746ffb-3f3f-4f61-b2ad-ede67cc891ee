{
    "title": "The Night Watchman",
    "pages": [
        "\"That's not fair. I honestly don't care what a man does for a living. It does, however, matter that he has the intelligence to carry on a conversation.\"\n\n\"A conversation about...what?\" her younger sister, Deanne, asked. \"Classical music and art history?\"\n\n\"No. It doesn't need to be about those particular subjects,\" her sister replied a little too defensively.\n\nShe hesitated knowing she'd been cornered and said, \"Not necessarily.\"\n\n\"Donna? I'm not calling you a snob, okay? I'm just trying to point out the reason why you have so little luck where men are concerned.\"\n\n\"I date!\" donna said even more defensively.\n\n\"True. You do date. Once or twice and that's it. And there's a reason for that. You know it, and I know it, but only one of us is willing to admit it. And it has nothing to do with looks, because you are a very attractive woman. For someone who's...forty,\" Deanne said, twisting the knife she'd just plunged into her sister's ego.\n\n\"Oh. Okay. Well, just remember your day is coming.\"\n\n\"Yes it is. In another five years,\" her sister said with the laugh that drove her elder sibling crazy.\n\nDonna Hartley hated being 40. The only thing she hated more was being 40 and single. Then again, she might possibly hate it when her 35-year old sister, Deanne Conway, a wife and mother of two beautiful little girls, picked at her like this even more than that. Okay, it might even be possible that knowing Deanne was right hurt most of all. It just felt so mean and personal, and having recently turned 40 made it all the more hurtful.\n\n\"Why do you do this?\" Donna asked.\n\n\"Do what?\" Deanne replied as though she had no idea what her sister meant.\n\n\"Pick. At scabs.\"\n\nDeanne was picking, but she'd tried every other way she knew to break her sister out of her narrowly-focused mold that involved the two things she loved above all else: her job as a conservator-restorer at The Art Institute of Chicago and classical music. Deanne had no interest in art and she hated classical music. She agreed with her husband, Tim, who said the only thing more boring than listening to it was watching paint dry. But with paint, it didn't make any noise, and at least there was something to look at when it dried. \n\nDeanne understood it, but she not only didn't like it, she knew she never would. But that's because she and her sister were as different as two siblings with the same parents could be. \n\nDeanne was a happy-go-lucky free spirit who'd barely managed to get into a state school, and who barely graduated due to her love of partying and boys. She'd changed a lot over of the years due to the responsibilities that came with raising children, but deep down, she was still a fun-loving girl who preferred going to country bars with her husband on date nights and hoisting a few.\n\nDonna was the older, quieter, more serious girl who'd been a straight-A student in school. As in...all school from elementary through college. She'd majored in art history in at The University of Illinois then spent two years at the prestigious School of the Art Institute in Chicago where she earned a masters degree in Historic Preservation. \n\nHer work was good enough to earn her an apprenticeship with one of the world's foremost conservator-restorers in the world, Dr. Ira Mazlow, at The Art Institute of Chicago. By the time Donna was 35, she was almost as well known for her talents and skills as her mentor who felt confident enough in her abilities to finally retire, and Donna begun training apprentices herself.\n\nIt was during her undergraduate years that she developed a love of classical music, and had it been possible, she'd have done something similar in that field. Due to the very generous salary she was paid for her work, Donna Hartley owned nearly every known piece of classical music ever written. Not the scores themselves, even though she had many of them. They were only copies, but she treasured them almost as much as the music. Rather, she had high-quality recordings of everything from Bach to Mozart to Verdi to Paganini to Chopin to Tchaikovski and many, many more. \n\nHer idea of fun was spending 10-12 hours each day painstakingly working to restore some famous piece of art be it a painting, a sculpture, ceramics, textiles, paper works, books, or historical artifacts then attend a symphony or the opera on the weekend.\n\nIronically, Donna enjoyed lovemaking almost as much as her other passions. But the problem was finding a man who fit her ideal, an ideal that melded art, classic music, and lovemaking into one man. Her one, ideal man.\n\nIt wasn't that there weren't men with similar interests in a city the size of Chicago. The issue was more that Donna was extremely good at finding fault with those men. They were either too stuffy, too inattentive, insufficiently attractive to her, or just...inefficient...in bed. And in most cases, she quickly located two or more such faults and that was the end of things before they got started.\n\nDeanne was the only other person on earth who knew about this impossible 'cocktail of needs' her sister had come up with and now believed was essential, and she was definitely the only person who could get away with telling her how ridiculous and unrealistic it was. Donna really was still a very attractive woman who, well...attracted...a lot of attention from men. But finding this mysterious Mr. Perfect was the elusive Holy Grail of her life.\n\nThere was more irony in that Donna Hartley looked so much like Sarah Rafferty, the legal secretary on the hit TV show Suits, who was also named Donna in the show, that it was uncanny. Both were beautiful, strawberry blondes with amazing figures and faces to match. Donna didn't see it, but she'd heard it so many times she gave up fighting it and thanked anyone who told her she had a TV twin.\n\nIn response to Donna's question about 'picking at scabs', Deanne softened her tone.\n\n\"I just want you to be happy, Donna.\"\n\n\"What makes you think I'm not?\" her sister asked.\n\n\"Seriously, Donna? Yoo-hoo! Hel-looo! I'm your sister. I know you. And even better, you're the one who's told me more than once how much you wish you had a husband.\"\n\nDeanne let up even more when she brought up the most sensitive issue of all.\n\n\"And children.\"\n\nTurning 40 was eating at her sister in a way Deanne had never seen before. The reason why was obvious, even if Donna wouldn't admit it. And that reason was getting married to someone she could both love and respect, and having a baby before she no longer could. So now, with no husband, no boyfriend, and no prospects, Donna was at a low point in her life as she often wondered if she would ever find someone who met all of her prerequisites.\n\nFor her, it had all been a matter of priorities. Marriage and a family had to wait until she finished college. But then came grad school, another huge priority. And how could she even think about marriage until she was firmly established in her new career? When that happened, she had apprentices to mentor and there were always new, interesting projects to work on. And then suddenly she was 40 and couldn't understand how or why.\n\n\"I'm sorry,\" Deanne said almost immediately. \"But would it hurt you to try looking at someone who doesn't share all of your passions?\"\n\nWhen Donna gave her a raised-eyebrow look, Deanne laughed and said, \"Okay. He's gotta be good in bed. That's a given.\"\n\nWhen her sister laughed, too, Deanne felt like she'd just forged a new connection.\n\n\"I can't imagine living with a man who's ideal is watching football on Sunday and drinking beer with his friends,\" Donna told her.\n\n\"Why do you go to the extreme all the time?\" Deanne replied, a hint of exasperation returning to her voice.\n\nDonna started to say she wasn't, but again, her sister had her boxed in. \n\n\"Because I'm trying to paint a picture of a life I would hate to juxtapose with one I'd love.\"\n\nShe hesitated then smiled before saying, \"And I'd hate that even if he was really good in bed.\"\n\nThe two sisters laughed and shared another moment before Deanne asked, \"Okay. So no football. Or even sports. But what if he was say...a man of science? Or how about a writer or a poet? Is there anyone you'd consider who wasn't as familiar with art and classical music as you are?\"\n\n\"I already said I don't care what a man does for a living,\" Donna replied rather defensively.\n\n\"Would you date say...a firefighter or a police officer?\"\n\nDonna made a face which answered the question.\n\n\"What if he knew art and loved the kind of music you do?\" Deanne said, trying a different angle.\n\n\"Then he wouldn't be a police officer. He'd be an art conservator or maybe a composer.\"\n\n\"What about a rap star?\" her sister asked out a renewed sense of frustration.\n\n\"Okay. We're done!\" Donna announced, signaling she couldn't take any more of The Weekly Inquisition with its star, Deanne Conway.\n\nDeanne never really thought that this particular talk, one in a long line of similar discussions, was going to change anything. She just hated seeing her sister like this, and it was getting to the point where she felt like giving up. It was a bit like having a friend with a terminal disease. No matter how much one might want to help, at some point there just wasn't anything more to be done.\n\nBut Donna didn't have a disease. She just needed to be more open to... Deanne didn't have the answer to her own question, but she posed it anyway.\n\n\"Can you just maybe...try...to be more...open-minded?\" she asked with a little shrug of her shoulders.\n\n\"Oh, okay. What you really mean is, 'Can I just stop being who I am and be more like you', right?\"\n\nDonna wasn't trying to be mean, but she could tell her words hurt her little sister.\n\n\"I'm sorry, Dee-nan,\" she said almost immediately using her name the way Deanne pronounced it when she was two or three.\n\n\"No. It's okay. I know my endless pushing and nosiness is annoying, so I suppose I had that coming,\" Deanne said as she got up to leave.\n\n\"I'm glad you came by,\" Donna told her as she got up, too, and walked Deanne to the door of her upscale apartment just two blocks from the museum where she worked.\n\n\"Same here,\" Deanne told her as they hugged goodbye.\n\n\"Can I expect you again next week?\" Donna asked.\n\nDeanne smiled and said, \"Yes. Of course. Always.\"\n\nShe laughed a little before saying, \"Unless you tell me you have a hot date.\"\n\nDonna gave her another raised-eyebrow look, and Deanne threw up her hands.\n\n\"Okay. I'm done,\" she said in surrender.\n\n\"Uh-huh. Until next time,\" Donna said with a laugh, relieved that the torment was almost over. For another week, anyway.\n\nDeanne's heart went out for her sister whom she loved very much as she reached out to hug her again.\n\n\"You know I love you, right?\" she asked as they embraced.\n\n\"And you know I love you back, right?\" Donna asked rather than answer directly.\n\n\"I do. And before I forget, the girls have been asking when Aunt Donna's coming over again.\"\n\n\"Soon. I promise.\"\n\nDeanne looked right at her big sister then said, \"I'm gonna hold you to that,\" before opening the door and telling her sister 'goodnight'.\n\n\"Bye, Dee-nan!\" Donna told her as she closed the door.\n\nShe stood there and let out a long, deep sigh at the frustration she was feeling over the last few months and made worse by Deanne reminding her that the sands of time never stopped flowing.\n\nTwo weeks and one visit to Deanne's later, Donna was thrilled to learn that one of the most famous and beloved paintings in the world was being brought to Chicago for a final display before being entrusted to the Institute's care for restoration. Even more exciting was learning that she would be in charge of the project.\n\nThe painting was called The Night Watch, and had been done by Rembrandt van Rijn in 1642. It was one of her top-ten personal favorites, and she was very familiar with it and thrilled to know that she would be taking the lead on the restoration.\n\nOver the next month, it was all she could do to focus on her daily work which involved important artifacts, but none as famous as the painting that would be on display in just a few more days. \n\nDonna was going to be there when it was revealed, and she planned to spend as much time as she could studying it at night when the museum was closed. There would be plenty of time for a detailed analysis to determine exactly what needed to be done after the display period ended, but she couldn't wait to get started on the most important project of her career.\n\nWhen the evening finally arrived for the Institute to display the Rembrandt, Donna was beside herself. She chose a formal, gold-sequined gown she'd been saving for a special occasion, and this, in her mind, was as good as it got. She'd also had her hair done and just before leaving her apartment, she stood in front of a full-length mirror and tried to make an honest assessment of herself. Her 40-year old self.\n\nHer hair looked amazing. It was neither blonde nor red but closer to red with a strong hint of the minor color showing through. She wore it in an updo for the big event, but it normally fell to just below her chin. She'd been blessed with beautiful, thick hair, and it was one of her best assets and went perfectly with her very blue eyes that always looked so bright and alive.\n\nIn terms of her figure, she'd also lucked out in the area of 'endowment' and perfectly filled a small-C cup bra. Hers were still perky, or at least she believed they were. \n\nShe sighed then said, \"Well, for a woman who's 40 years old anyway.\"\n\nThe size 8 dress fit like a glove, and her hips and waist had just enough curves to give her 5'8\" body a very feminine look. The dress was nearly floor length with a very long slit up the side through which one very shapely leg was visible.\n\nShe'd always been considered a pretty girl, and from the time she started junior high school, she'd had more than her fair share of attention from boys. But even then, she'd preferred staying home and studying or quietly listening to music with a friend to going to parties where beer and loud music were the norm.\n\nIt wasn't until she was in college that Donna Hartley discovered the pleasures of lovemaking, and she owed most of that to one young man who'd been three years older than her. He'd been a very experienced lover and patiently taught her things she had no idea her body could experience; things she still yearned for all those years later.\n\nAs she took a final look at herself she laughed.\n\n\"If only he'd loved art and classical music instead of rugby and Budweiser,\" she said to herself, causing another long, heavy sigh before the thought of seeing a world-class painting from just a few feet away caused her to smile. And that thought reminded her of the way he'd made her smile...and more...many different times over the year they'd dated.\n\nThe weather was unusually warm for Chicago at that time of year, and Donna loved not having to wear a wrap or a coat over the beautiful dress. She took a cab and to the Institute and asked to be let out in the back where she, and a handful of senior employees, had private access.\n\nAs she made her way toward the gallery, she passed her desk with the project she'd been working on for the last two weeks. It was important, to be sure, but when compared to seeing a Rembrandt in person, it seemed insignificant in the extreme.\n\nThe dim lighting gave way to the much brighter lights of the gallery, and Donna stood there for a few seconds to allow her eyes to adjust. By the time she was ready, the museum's curator saw her and headed her way.\n\nDavid Alton Dumond was 53 years old, and for a man his age, very handsome and distinguished looking. Donna knew he found her charming, beautiful, and even alluring, but she didn't see him the same way. And it was that kind of knowledge that forced her to admit her sister had a very valid point about her propensity to find fault in any man.\n\nDavid was quite possibly the most perfect match she would ever find. At least on paper. He wasn't a conservator, but he was as accomplished in the art world as anyone she knew, and he was also a fellow lover of classical music. And the opera as well as ballet. And for all she knew he might be just as amazing in...other areas.\n\nAnd yet each time she imagined herself with him, all she could see was gray hair and saggy skin, and...\n\n\"Donna! May I say you look absolutely stunning!\" David said as they faux kissed one another's cheeks.\n\n\"You may,\" she replied with a laugh. \"And may I say you look equally handsome, yourself tonight, David.\"\n\n\"Well, we men have one and only one choice, but I suppose I still look reasonably okay in a tux,\" he said with a laugh of his own.\n\n\"May I?\" he asked as he extended an elbow.\n\n\"Why thank you, kind sir!\" Donna told him as she looped her arm in his.\n\n\"I'm not going to ask whether or not you're excited. Rather, the question is, how excited are you?\"\n\nDonna laughed a nervous laugh, mostly due to the anticipation of seeing the Rembrandt in a few more minutes then replied, \"On a scale of 1-10, I'd say...a 12!\"\n\n\"I share your enthusiasm,\" he told her...enthusiastically.\n\nAs they reached the area set aside for the reveal, David apologized as he moved his arm.\n\n\"I do believe duty calls,\" he said with a smile a slight bow.\n\n\"Of course,\" Donna told him as she knew he would be making some opening remarks about the painting before the heavy, purple, cloth curtain in front of it was raised up.\n\nAs she made her way to a decent vantage point, she ran into a handful of other senior fellows at the Institute and spent a moment exchanging pleasantries.\n\nOne of them made note of the increased security, something Donna hadn't noticed.\n\n\"Have you ever seen so many security guards?\" she asked.\n\nDonna had to look as the men in light -blue shirts and dark-blue pants with leather belts and handguns were somehow managing to hide in plain sight. She counted six of them, five more than she'd ever seen in the gallery.\n\n\"It's almost as if something very important is here,\" the woman said after Donna turned back her way.\n\nThe comment made Donna laugh.\n\n\"Hmmm. I wonder if there's a VIP of some kind here tonight,\" she mused, her attempt at humor drawing a laugh in return.\n\n\"Yes, if you mean 'Very Important Painting',\" the woman said before excusing herself to say hello to someone else.\n\nThe closest thing to a human VIP was the mayor of Chicago, a man Donna viewed with deep suspicion. Then again, she tended to see most politicians of both major parties that way. The notion that people went into politics to be 'humble servants of the people' was laughable, and this particular mayor epitomized the way she felt about power-hungry politicos.\n\nEven so, it was impossible not to look as he walked in with a small entourage of aides and members of his own security detail. The good news was that his arrival meant the reveal could begin, so Donna turned off her cynical mind and waited with genuine excitement for the most important moment of her life. \n\nOnly later that night did she realize again how right her sister was. If seeing a painting was the acme of her existence, perhaps she needed to make some changes to her life. But for the time being, the Rembrandt was the be-all, end-all of...everything in her life.\n\nThe din of voices in the room trailed off as David walked upfront near the painting. When he asked for everyone's attention, a hush fell over the gallery.\n\n\"Ladies and gentlemen,\" he began just as Donna sensed someone standing very close behind her.\n\nShe turned to look over her shoulder and saw a man who appeared to be in his mid-30s smile at her.\n\n\"You look amazing,\" he whispered.\n\nShe gave him a look that indicated she was trying to listen, but he either missed the subtle message or didn't care.\n\n\"I see you're alone.\"\n",
        "Donna continued ignoring him until he pushed his way next to her.\n\n\"So who made you come to this?\" the man in a suit whispered.\n\n\"Made me?\" she whispered back.\n\n\"Yeah. I'm part of the mayor's security detail, so I have to be here. Who's making you show up?\"\n\nDonna's snide glance not only didn't deter him, he pulled open his suit jacket to show off his badge and a gun.\n\n\"Detective 2nd grade with just 12 years on the force,\" he said with a sly smile.\n\n\"My sister was right,\" Donna replied very quietly.\n\n\"Yeah? What about?\" the detective asked. \n\n\"She didn't think I'd ever date a police officer. I told her she was wrong. But where you're concerned, she's absolutely right.\"\n\nThe detective gave her a smug look then said just a little bit louder, \"Lesbo, huh?\"\n\nUnder any other set of circumstances, Donna would have been disgusted. But David's voice brought her back to reality as he said, \"So it is my distinct honor to present to you...\"\n\nHe paused for dramatic effect before saying, \"Rembrandt's...The Night Watch!\"\n\nThe heavy veil slowly rose up revealing the breathtaking work of one of the art world's great masters. Donna had no idea she'd gasped along with many other people as the painting slowly came into view an inch at a time.\n\n\"Please! Feel free to file toward the front and take a closer look. But do be nice and avoid shoving, okay?\" David said with a laugh as the large group of admirers began slowly moving his way, every eye on the mostly dark painting.\n\nIt took Donna nearly an hour to get her first few minutes of alone time with 'The Men of the Watch'. She'd have waited all night if necessary, and the hour flew by as she continued inching her way forward as security politely encouraged the front row to let others have a look.\n\nIt was even more spectacular in person than she could have ever imagined. Even the highest-quality digital photographs didn't do justice to the original. \n\nDonna had known for years that Rembrandt was known for his masterful use of shade and light, something fully brought to life in this beautiful work of art. He was uncompromisingly devoted to realism, something that led many critics to claim that he preferred ugliness to beauty. But in her eyes, Donna saw nothing but beauty and couldn't for the life of her understand how anyone could be so shortsighted.\n\nFive minutes later, after what felt like only a few seconds, a security guard on her left quietly said, \"Ma'am? Can you please give others an opportunity to...\"\n\nThe sound of his voice startled her and caused her to realize she had no idea how long she'd been standing there. It was the same five minutes every other front-row group had had, but she felt cheated in spite of knowing she would have many hours of personal time with The Men of the Watch.\n\nShe looked over at him and saw an imploring look on his face indicating he wasn't going to do anything more than ask. When she looked his way he smiled at her then said, \"I know your time seemed short, and were it up to me, I'd let you stand and look as long as you like.\"\n\nDonna wanted to take a last look at the masterpiece, but there was something about his gentle smile that caught her attention. She knew she needed to move, but her feet wouldn't cooperate.\n\n\"Ma'am? Are you okay?\" the voice asked.\n\nAs the person to her right began gently pressing against her Donna realized she really did need to move.\n\n\"Yes. Sorry,\" she told him as she took a tentative first step. \"It's just so amazing!\"\n\n\"I don't blame you,\" the security guard told her. \"I'd stand there with you all night if I could.\"\n\nHer brain was on overload from the swirl of thoughts about what to do in terms of the restoration, and now she found herself even more confused by the words of someone employed as a security guard.\n\n\"I...I understand,\" she replied as she continued walking, not sure if he meant he'd stand there in order to view the painting or just to be next to her.\n\nThe last thing she noticed was the man's embroidered name on his shirt. His first name. A name that was, by all accounts, completely unremarkable. Chad.\n\nAs she walked away, Donna realized she'd seen more than his name. She'd just been too preoccupied to focus. This...Chad...person's face was the opposite of his unremarkable name. She turned to look one last time and confirmed what she'd assumed she'd seen, and yes, she'd been correct.\n\n'Chad' had a thick head of sandy-blond hair that was combed in a very traditional way for someone in his current job, but she could easily envision it when it was more relaxed. Either way, it was very...\n\nThe word 'sexy' came to mind, but that seemed wholly inappropriate to describe anything about a man she didn't know. Even one as attractive as this security guard with the kind of facial features seen more often on male models than men earning $15 an hour as security guards. But it was the eyes that had made her stare in spite of her best intentions not to. Like hers, they were bright blue. Also like hers, they were encased by long eyelashes that looked like they might belong on a woman. And yet they were every bit as...sexy...on him as his hair.\n\nThis flurry of thought was stopped in its tracks when David's hand gently took her forearm as he smiled and asked, \"So what did you think?\"\n\n\"David. Hi. Oh, my gosh! I have never seen anything more amazing in my life!\"\n\nShe'd seen the Mona Lisa and several other more famous works on a trip to a handful of museums in Europe during her time in grad school, but this was the first time she'd been felt so personally attached to any work of art.\n\n\"I couldn't help but notice the look of awe on your face,\" David told her. \"Your...very beautiful face.\"\n\nThe compliment caught her off guard, but Donna recovered almost instantly as she smiled back and thanked him.\n\n\"Donna? Listen. I was wondering if perhaps you might like to accompany me to the Chicago Symphony this weekend. They're performing Higden and Tchaikovsky, and I know you love them both as much as I do.\"\n\nThe unexpected invitation was even more surprising than his compliment, and Donna was again reeling from sensory overload.\n\n\"That...that sounds wonderful, David, but...\"\n\n\"Ah, yes. The infamous 'but',\" he said with a smile of understanding resignation. \"But...you can't blame me for trying, can you?\"\n\n\"No. It's...I'm...I'm flattered, David. I really am. And under normal circumstances I'd love to. It's just that with the Rembrandt finally being here, and everything else going on...\"\n\n\"I understand,\" the older man told her, knowing she was out of his league. It wasn't that he had a negative self-image, he just knew that this very attractive, 40-year old woman was unavailable to him regardless of his credentials or their common interests.\n\n\"Perhaps another time,\" he said just as graciously.\n\n\"Yes. Definitely,\" Donna told him just as the mayor approached wanting a moment of David's time.\n\nAs she made her way out, she passed the detective\u20142nd grade\u2014who rolled his eyes and gave her a snide look. \n\nDuring the short cab ride home, Donna had nearly forgotten about the breathtakingly handsome security guard, and was once again totally focused on the future task of restoring such an important work of art.\n\nThe two-month period in which the painting was on display had begun, and she was also making mental notes for how and when she would get the 'alone time' she so desperately craved with The Men of the Watch.\n\nThe men depicted in the painting were part of the Militia Company of District II under the command of Captain Frans Banninck Cocq, also known as The Shooting Company of Frans Banning Cocq and Willem van Ruytenburch. But its more well-known name was simply The Night Watch.\n\nIt was also famous not only for its use of light and shadow but for its colossal size and the perception of motion in what would have traditionally been a static military group portrait. The painting had become even more darkened by dirt and layers of varnish. It had been restored once before but was badly in need of additional work, work that would be the sole responsibility of Donna Hartley.\n\nTo her chagrin, Donna's rendezvous with them would have to wait as she was committed to an evening with her sister the following day. She thought about the handsome security guard and laughed knowing she would have at least one thing to talk about that Deanne would find interesting.\n\n\"A security guard, huh?\" her little sister said with a huge smile after Donna informed her that she'd seen someone...interesting.\n\n\"Yes. He's very good looking but much too young. I will admit, however, that he looks like a kind of...work of art...in his own way.\"\n\n\"Wow. So...he works there now?\" Deanne asked, the matchmaker in her alive and well.\n\n\"I have no idea. He may have just been hired for the one night. After all, there were several other security personnel on hand I've never seen before.\"\n\n\"What a shame,\" her sister replied in a kind of whimsical voice.\n\n\"A shame?\" \n\n\"Well, yes. You and...Chad...would make such...beautiful babies,\" Deanne said almost melodramatically, the back of one hand on her forehead.\n\n\"Babies. Ha! Listen to you! That's hilarious!\"\n\n\"Hey! I wonder if he's good in bed?\" Deanne said, changing her facial expression and tone of voice.\n\n\"Unless you're planning on being unfaithful to your husband, we'll never know now, will we?\" Donna replied in a faux snobbish sort of way.\n\n\"Right. Because the amazing Donna Hartley would never deign to go out with a mere...\"\n\nDeanne raised her nose high then said with a British accent, \"A mere...security guard.\"\n\n\"That is so not true!\" her older sister said with a hint of resentment.\n\n\"Oh, yes it is,\" Deanne insisted. \"I'm not being mean here, but we both know you'd die of embarrassment if you were asked what your date did for a living.\"\n\nCornered yet again, Donna replied by saying, \"It's a moot point anyway. As I said, he's way too young to even consider going out with let alone dating.\"\n\nDeanne let out a sigh then asked, \"How good looking did you say he was?\"\n\n\"Oh, let me see. Imagine a young Brad Pitt mingled with a young Ashton Kutcher and throw in a bit of Charlie Hunan or Ryan Reynolds in their mid-20s, and...\"\n\n\"Stop!\" Deanne said as she pretending to gasp for breath. \"You had me at a younger Brad Pitt! Any more and I'm going to simultaneously orgasm right here!\"\n\nDonna couldn't help but laugh. It was a little crass for her taste, and yet she had to admit he was handsome enough to cause that kind of reaction. And that thought only made her even more aware of just how alone she was.\n\n\"David asked me out,\" Donna said, hoping to move on from the fantasy hunk she'd only briefly seen.\n\n\"Really? David, as in head guy at the Art Institute, David?\"\n\n\"Yes. That David.\"\n\n\"You said 'yes', I hope.\"\n\nWhen Donna didn't answer right away, Deanne knew.\n\n\"No! You did not turn him down. Please tell me you didn't.\"\n\n\"It...it just wasn't the right time,\" Donna told her as though she were pleading her cause in a courtroom.\n\n\"He's a very good looking man. And he likes everything you like,\" her sister pleaded back.\n\n\"I know, I know. It's just...\"\n\nDonna knew she could tell Deanne how she felt, but actually saying it out loud made her sound more than merely snobbish. But when she begged Donna to tell her why, she gave in and shared her reasons.\n\n\"That is SO disgusting!\" Deanne replied.\n\n\"What? Doing it with David or picturing him being all gray...down there?\"\n\n\"No! The saggy skin thing,\" Deanne said with a shudder. \"And, okay, the gray pubic hair thing isn't exactly sexy, either.\"\n\n\"And yet the gray around his temples kind of is,\" Donna replied, ignoring a word she felt shouldn't be used outside of a doctor's office.\n\n\"Yeah. Weird, huh?\" her baby sister said before telling Donna she needed to get going.\n\n\"Okay. Sure. Go home to your handsome husband and two beautiful daughters,\" Donna teased. Or mostly teased.\n\n\"Don't give up, okay?\" Deanne said encouragingly as they hugged goodbye.\n\n\"Well, nothing's going to happen as long as the Rembrandt is here. I can assure of that,\" her sister replied.\n\n\"So you're punting for another...how many months?\"\n\n\"Two for the display and another two...ish for the restoration?\"\n\n\"I'd say you'll be 41 before you have another date, but I don't feel like getting socked in the eye right now,\" Deanne said with a goofy smile, hoping to soften the blow of her words.\n\n\"Hey! I just turned 40, okay?\"\n\nDeanne almost spelled out the way another year would slip by but left well enough alone.\n\n\"So am I going to have to stop by the Institute if I want to see you between now and...\"\n\nDeanne was counting out the months, and that made Donna laugh.\n\n\"No. We'll still get together every week. I promise.\"\n\n\"Fine. But next week is at my place, okay?\"\n\n\"I wouldn't miss it,\" Donna told her again.\n\n\"Unless you have a hot date. Which won't be happening,\" Deanne had to say.\n\n\"BYE, Dee-nan!\" her sister said as she playfully pushed her out the door.\n\nDonna arrived 30 minutes early the next morning in order to have her first 'alone time' with the painting. But to her surprise, it was covered with the heavy veil she assumed had been permanently removed.\n\nDavid, a morning person if there ever was one, had been in for an hour already, and he saw her come in and made a beeline for her.\n\n\"You'll need to get me or security to raise that for you,\" he said, surprising her again from behind.\n\nGuilt welled up inside her as Donna thought about the irony of needing his help after turning down his invitation to the Chicago Symphony.\n\n\"I don't mind,\" he told her, sensing her discomfort.\n\nHe pulled out his security card which had higher privileges than hers and swiped it. The overhead lights slowly came on, and as the heavy curtain raised up, and Donna was so captivated by the appearance of the painting that she forgot to thank him.\n\n\"I'll uh, I'll leave you two alone,\" David told her with a little laugh.\n\n\"David. I'm so sorry! Thank you. Thank you so very much!\" she said when her rudeness made itself known.\n\nHe nearly told her he'd do anything for her, but he settled for saying it was his pleasure before heading back to his office.\n\nAnd by the time Donna got to hers, she realized she would never get tired of looking at such an incredible work of art as she forced herself to focus on the now-mundane task of the day; a day that took forever in spite of the work she tried getting absorbed in. She left around 6pm, went home to have dinner and change clothes then returned at 10pm just as the museum was closing.\n\nHer excitement built as she again passed through her work area on the way to see the Rembrandt when it hit her that she hadn't made arrangements with David. \n\n\"How can someone with this much education be so stu...\" she began saying about herself when she heard footsteps in the gallery. It was dark but not pitch black, and she saw the security guard before he saw her.\n\nHe raised his flashlight to see who it was then lowered it without having shined it in her face which he'd seen. She, however, had not yet seen his.\n\n\"Hello, again,\" Donna heard him say very cheerfully as he walked to within two feet of her.\n\nHis face came into view from what little light was available, and she also glanced at his shirt.\n\n\"Chad, right?\" she asked as though he might be wearing the someone else's shirt.\n\n\"That would be me,\" he told her in a pleasant voice with a smile. \"I'm assuming you're hear to see a certain painting?\"\n\n\"Yes. Guilty as charged,\" Donna told him.\n\n\"Mr. Dumond told me to expect you,\" Chad replied as he hit a button on a fob he was carrying.\n\nThe overhead lighting slowly grew in intensity, and Donna could now see his face clearly. He walked over to the security reader and swiped his card, and the heavy veil slowly began to rise.\n\n\"Thank you,\" Donna said with genuine sincerity.\n\n\"My pleasure,\" Chad told her as he watched the painting reappear with the same rapt attention as this attractive, older woman.\n\n\"It's amazing, isn't it?\" Chad said once it was fully displayed.\n\n\"Yes. Stunning. Even awe inspiring,\" Donna agreed.\n\nHe moved a little closer then said, \"I've known\u2014academically\u2014for quite some time that Rembrandt was a master of shadow and light, but seeing it person is...incredible.\"\n\nDonna had already been captivated by the painting, but his comment caused her to turn to look at the younger man in the blue shirt who was standing beside her.\n\n\"How is it that you know that?\" she asked with no thought as to how he might know it.\n\n\"Oh, gosh. I think the first time I heard it was in an art appreciation class in college,\" he told her matter of factly.\n\n\"Oh. So...you went to college?\" Donna said more than asked, unaware that her question had a ring of surprise to it that some might find offensive.\n\nChad didn't. He fully understood. He was a security guard, and from what David Dumond had told him about Donna Hartley he was aware that she was an expert in the area of restoration.\n\n\"I did. Not all at once though,\" he offered without explaining.\n\n\"Did you take a year off?\" she asked as she tried not stare at his chiseled features.\n\n\"More like four years,\" he replied with a little laugh.\n\n\"You'll have to help me out here,\" Donna told him, a look of confusion on her face. \"If it's not too personal.\"\n\n\"It is personal,\" he replied with a warm smile, \"but I don't mind telling you.\"\n\nHe stopped looking at the painting, turned toward her then explained.\n\n\"I went to a community college for two years but ran out of money. My parents didn't have much themselves, and I wasn't mature enough to work full-time and go to school full-time so I found a way to pay for it.\"\n\n\"I'm still kind of lost,\" Donna said as Chad looked at her.\n\n\"I enlisted in the Air Force. Mostly for the GI Bill. I was proud to serve my country, but I'd never have gone in had I been able to pay my own way. But I couldn't so the military seemed like a reasonable way to earn the money I needed to finish my degree.\"\n\n\"Okay. I understand now,\" Donna told him. \"So you were in the Air Force for four years, got out, then went back to college?\"\n\n\"I did,\" Chad said, confirming her understanding. \"I applied to The University of Illinois in Springfield where I grew up and finished the last two years.\"\n\n\"That's very impressive,\" Donna told him even as she was dying to know why someone with a four-year degree in any field of study would be working as a security guard.\n\nShe didn't ask about that but rather inquired as to his major.\n\n\"I stayed with art history,\" Chad told her. \"And somewhere in those two years I learned a lot more about Rembrandt and this painting, which, by the way, is quite possibly my favorite of all his works.\"\n\n\"It's arguably his most famous,\" Donna agreed, \"but my personal favorite is...\"\n\n\"Let me guess!\" Chad said, politely cutting her off.\n\n\"Okay. Go ahead,\" Donna replied with a smile of amusement.\n\nChad turned even more her way then pretended to be studying her.\n\n\"Of course. You're a Self Portrait kind of girl,\" he told her very authoritatively.\n\n\"Not bad,\" she replied with a smile. \"That's #3. My second favorite is The Storm on the Sea of Galilee.\"\n\n\"I'm a fan of The Return of the Prodigal Son myself, but The Storm is amazing.\"\n\nDonna stood there looking at him for several seconds before Chad asked if everything was okay.\n\n\"Yes. I think I'm just fascinated by the fact that you're so familiar with Rembrandt.\"\n\nChad laughed quietly then said what she'd been thinking.\n\n\"Not too many security guards know art, huh?\"\n\nOnce the words were spoken out loud, Donna could hear her sister whispering in her ear, \"Snob!\"\n\n\"I...I suppose I may have been thinking that,\" Donna admitted rather apologetically.\n\n\"It's okay. We humans are pattern-seeking creatures and we also use generalization to help us survive. We have to careful where people are concerned, but if we couldn't learn from a hot stove that an open flame will burn us just as badly, we'd have a lot more difficulty as a species, right?\" he said with another little laugh.",
        "\"You're a very interesting young man, Chad,\" Donna told him as she continued trying to make sense of his job and his education.\n\n\"I will take that as a compliment,\" he told her, \"and as much as I've enjoyed talking with you, I do have a job to do, so if you'll excuse me...\"\n\n\"Oh. Of course. I didn't mean to keep you. Please forgive me.\"\n\n\"Don't apologize. It's a rare pleasure to meet a woman who's both as beautiful and intelligent as you, Dr. Hartley.\"\n\n\"Thank you, Chad. That's so kind of you to say, but I'm not a PhD, so please call me Donna.\"\n\nChad smiled one more time, glanced at his watch then told her he really did need to go.\n\nHe went to leave when Donna said, \"Chad?\"\n\nHe stopped, turned to look at her, then waited.\n\n\"I'll um...I'll be here again around this time tomorrow. And most other evenings. If you'd care to talk some more. To discuss the painting, of course. Or Rembrandt. Or maybe just art.\"\n\nDonna felt like she was back in high school talking to the cutest boy on campus rather than a master conservator-restorer talking to a modestly-educated art lover who worked as a security guard.\n\n\"Then on those nights when I'm working, I'll make it a point to stop by,\" he told her.\n\nShe could tell he was waiting for her to say something else or let him go, so she smiled at him and said, \"I...I'd like that.\"\n\n\"Same here,\" he said before telling her yet again he really needed to go.\n\nIt took Donna a good 15 minutes to regain her focus on the painting as her short conversation with Chad, whose last name she still didn't know, took center stage in her mind. His extremely handsome face certainly played a role in this distraction, but most of all it was his ability to talk to her about the thing she loved the most. And no matter how physically attractive he might be, were he to bring up something like, say, whether she was a Cubs or a White Sox fan, she would have had no interest in him at all.\n\nThe disappointment she felt the next evening when someone else was on duty was as strong as her pleasant surprise from the night before. The good news was that he, too, was able to raise the veil, and a bonus was being able to really study the painting in detail without the distractingly good looking security guard named Chad.\n\nThe next morning she saw David who apologized for not having things ready for her. Two days in a row.\n\n\"No worries,\" Donna told him. \"The security guards have been very good about giving me access.\"\n\n\"Ah, yes,\" he replied. \"Were you aware that one of them is a graduate student at The School of the Art Institute?\"\n\nDonna blinked twice and shook her head in disbelief even as the fuzzy picture in her brain became a little clearer.\n\n\"Your alma mater,\" David said when she didn't reply.\n\n\"Would that be someone named Chad?\" she asked.\n\n\"Yes. Very nice looking young man as I recall,\" David told her. \"And that little girl of his is...adorable.\"\n\n\"Little girl?\" Donna repeated, her brain fogging over again.\n\n\"Yes. After we hired him, he stopped by one day to sign some paperwork, and she was with him. Cute as can be and sweet as anything,\" David told her.\n\n\"Oh. Okay,\" Donna said as the number of pieces in the puzzle that was Chad continued to grow.\n\n\"At any rate, you shouldn't have any issues tonight,\" David told her as he handed her a new badge. \"You now have the same level of privileges I enjoy.\"\n\nHe leaned closer then said with a laugh, \"Don't let all this new power go to your head, though, okay?\"\n\nDonna made herself smile and promise she wouldn't as David told her he had a meeting to attend.\n\nWhen she came back in that evening, she was indeed able to turn on the lights and raise the veil herself. She was deep in thought when a male voice spoke startling her so badly she yelped and jumped nearly a foot to the side.\n\n\"Sorry,\" a smiling Chad told her when she saw him.\n\n\"Shame on you! You nearly gave me a heart attack!\" Donna said, her hand over her chest.\n\n\"I thought about saying, 'Psst!' or something else as I got closer, but you were so transfixed on the painting I couldn't bear to interrupt you.\"\n\nHe apologized again, and asked how she was doing. Other than her near cardiac event.\n\n\"I'm doing okay, thank you. And you?\" Donna asked.\n\n\"I'm doing well myself,\" Chad told her, using the correct 'well' rather than 'good'.\n\nHe then raised his left hand to point to the painting, and Donna saw the wedding ring she'd missed before. For the briefest of moments, she felt a huge letdown as though her 'ideal prospect' had just evaporated before her very eyes. It didn't matter that he was also far too young to even consider. The whole thing was ludicrous, and after a few seconds she actually felt relieved. Now she could relax and just talk with someone who could at least hold his own with her.\n\n\"Did you notice this?\" Chad asked as his index finger moved closer to the heavy plexiglass pane enclosing the painting.\n\n\"What is it?\" Donna asked as she also moved closer.\n\n\"Well, you know how Rembrandt used smudging in his later works, right?\"\n\nShe'd known that for nearly two decades but only said, \"Sure. But this isn't one of them.\"\n\n\"Well, look right here from up close then keep your eye on that same area as we move away,\" Chad said, his finger still pointing and then drawing an air circle around a three-inch area.\n\n\"Okay. I see it,\" Donna said.\n\n\"Now. Walk back with me. Very slowly,\" he said as he reached over with his right hand and took her left. \n\nIt was purely platonic and Donna barely even noticed as she matched his movements.\n\n\"There! See it?\" Chad asked.\n\n\"Oh, my...goodness! Yes! I do. That's...that's amazing!\" she said, her voice filled with excitement.\n\n\"I know, right?\" he replied using a catchy phrase that normally irked her. This time she not only didn't care, she didn't even notice.\n\n\"That's amazing, Chad! When did you see that?\"\n\n\"Two nights ago. I came back after you left and spent my break time studying the painting and that just jumped out at me.\"\n\n\"It's so subtle and yet it's right there!\" Donna said about the smudging she'd never seen nor heard of before.\n\nShe also had no idea he was still holding her hand until he looked at her and smiled. When he did, her heart skipped a beat before her brain reminded her he was a married man. She slowly let go, and when she did, Chad apologized.\n\n\"It's fine,\" she told him as she turned away and back to the painting.\n\nDonna's attitude toward him seemed to change rather dramatically, so Chad told her he'd give her some time by herself.\n\n\"Oh. You're not bothering me,\" she told him. \"I just overreacted a little. You know, with you being married and all.\"\n\n\"Oh,\" Chad replied very quietly. \"Yes. That makes sense.\"\n\nSensing something was still wrong, Donna said, \"I wasn't offended. At all. I know it wasn't any kind of...romantic gesture. We both just got caught up in seeing something new, and...it just happened.\"\n\nWhen Chad excused himself without saying anything in reply to what she'd just said, Donna was wondering if perhaps it was more than platonic. It felt like she'd inadvertently 'called him out' for it, and he'd reacted the way a guilty person might.\n\nAs he walked away, Donna thought to herself that if he had been openly flirting with her while having a wife and child at home, then she was glad she'd done so. And by the time he disappeared from view, her view of him had changed completely, and not in a good way.\n\nChad wasn't working the next night, and Donna had the weekend off, but even so, she found herself back at the gallery when it opened the following Monday having all but forgotten about her 'unlikely soulmate'.\n\nAs it happened, this was the week prior to the Labor Day weekend, so the museum/Institute would be open on Saturday and Sunday but not on Monday. Crowds were rarely large unless a school sent students on a field trip, and to Donna's chagrin, not even this famous painting had attracted many new visitors. The flip side of that was that she'd talked her sister into joining her on Saturday, and they would be able to get reasonably close to it, just not nearly us close as she could at night by herself.\n\nTo say that Deanne was thrilled to be going was an understatement. In fact, she thought it would be so boring she didn't bring the girls with her. \n\nThey'd been standing in front of the Rembrandt for about ten minutes when Deanne asked how much longer they had to stare at the same boring painting. Donna rolled her eyes and was about to tell her it wouldn't be much longer when she heard a voice that sounded vaguely familiar quietly say 'hello'. \n\nDeanne turned around first and the moment she saw the voice's owner said, \"Well hello to you, too!\"\n\nDonna then turned around to see her sister smiling from ear to ear only to learn that the reason why was Chad. But the even bigger surprise was the very cute little girl standing next to him and holding his hand.\n\n\"Chad?\" Donna said as she looked at him then at the little girl.\n\n\"Hi, Donna,\" he said very quietly.\n\n\"Ah, ha! So this is Chad,\" a Deanne said, the smile still glued to her face.\n\n\"Yes. This is Chad. Chad, this is my sister, Deanne.\"\n\nDeanne's hand shot out as she said, \"It is truly a pleasure to meet you.\"\n\n\"Likewise,\" Chad replied very quietly as he shook it. \"And this is Annabelle. Or sometimes just Anna or maybe just Belle.\"\n\nBoth sisters bent down and said 'hi', but the shy little girl clung to her daddy's leg then hid behind it. \n\n\"She's a little bashful,\" he told them.\n\n\"She's adorable!\" Deanne said as she continued trying to make friends.\n\n\"She is adorable,\" Donna admitted without looking at the girl's father.\n\n\"Thank you. I think so,\" he readily agreed. \"I wanted her to see the Rembrandt even though she's too young to appreciate it.\"\n\n\"But not your wife?\" Donna asked, her head slightly tilted and an eyebrow up just a touch.\n\nChad very quietly said, \"Um...no. My wife died almost four years ago.\"\n\nDonna's smug face went blank as she again looked at Chad then at Annabelle.\n\n\"I...I'm...Chad, I am so sorry,\" she said with pure, unadulterated sincerity and sympathy.\n\n\"Thank you,\" he replied.\n\n\"What did he just say?\" Deanne asked as she stood back up having abandoned the 'let's be friends' routine for the time being.\n\n\"I'll tell you later,\" her sister replied as feelings of guilt and embarrassment welled up inside her.\n\n\"So have you discovered anything new?\" he asked Donna, a pleasant smile back on his handsome face.\n\n\"No. Sorry,\" Donna told him. \"At least...not about the painting.\"\n\nShe felt horrible for having assumed the worst, and were they not in public she'd have hugged Chad and probably cried when she apologized. But they were, so she only tried to smile and hope he wouldn't hate her. Then again, perhaps he had no idea what she'd been thinking and it would just go away on its own.\n\n\"Anna? You want to go look at the painting?\" he asked.\n\nThe little girl didn't answer, but she did hold her arms out. Her dad picked her up and and said, \"Okay. Let's go see those what those men in the painting are doing, shall we?\"\n\nAnnabelle said, \"Okay,\" very quietly, and Donna couldn't help but say 'ahhh!' as she moved aside for them to pass by and get a better look.\n\n\"Now I know why you spend so much time here at night!\" Deanne told her sister just quietly enough that Chad couldn't hear.\n\nDonna pulled her head back, made a face, then said, \"What? That's ridiculous!\"\n\n\"No, that's...gorgeous!\" her sister said as she admired the man's 'booty'.\n\n\"Okay. He's not bad looking,\" Donna admitted.\n\n\"Not bad. Are you serious?\" \n\n\"It doesn't matter anyway.\"\n\n\"Wait. He's married, huh? That's what you were saying, right?\"\n\nDonna turned her back to Chad then explained what he'd said.\n\nDeanne covered her face with her hands in horror and said, \"That is SO terrible!\"\n\n\"Yes. And that poor little girl!\"\n\nTheir discussion ended when they heard a tiny voice ask, \"Daddy? Are they the three Mustakeers?\"\n\nThey heard Chad say it correctly for her and Deanne grabbed her sister's arm and said, \"She is so precious!\"\n\n\"She's...a little doll,\" Donna agreed.\n\n\"Did he say how long it's been since...you know?\"\n\n\"Around four years ago, and his daughter can't be much older than that, can she?\"\n\n\"No. She might be five, but I'd say four. I don't know for sure, but that's my guess,\" Deanne said, using her girls as a guide.\n\nDonna didn't say anything, but Deanne did.\n\n\"That's long enough, though, right?\"\n\n\"Long enough for what?\" Donna asked, her eyes open wide.\n\n\"Duh! Do I have to spell it out?\"\n\n\"He's not even 30 years old, for heaven's sake!\" Donna said, her whisper strained and nearly audible to others.\n\n\"And your point is?\" Deanne asked with a little head shake.\n\n\"You're...you're just...amazing!\" Donna told her as she turned away, shaking her head.\n\n\"So do you like it?\" they both heard Chad ask his daughter.\n\n\"I guess,\" the little girl replied. \"But can we go home now?\"\n\nHe saw Donna out of the corner of his eye and knew she heard that exchange.\n\n\"So much for the cultural refinement of America's youth,\" he told her with a smile.\n\n\"She's probably just tired, Daddy,\" Donna said to Chad while trying to get Annabelle to smile at her.\n\n\"I'm not sleepy,\" the little girl informed her. \"I almost never take naps anymore.\"\n\n\"Oh. I see,\" Donna told her, a smile on her face. \"So can you tell me how old you are?\"\n\n\"I'm this many,\" Annabelle told her as she held up four little fingers. \"But I'll be five in...\"\n\nShe turned to her father and asked, \"How many more days, Daddy?\"\n\n\"Just two more. On Labor Day.\"\n\n\"I'll be five in two more days,\" she parroted to Donna who managed not to laugh.\n\n\"I see. So that's why you hardly ever take naps, right?\"\n\n\"Uh-huh,\" Annabelle agreed.\n\nDeanne was right next to her sister, and Chad spoke to them both.\n\n\"Listen. I know we barely know each other, but we're having a birthday party on Monday. Would the two of you care to join us?\" \n\n\"We'd love to!\" Deanne said, answering for her sister, too.\n\n\"Deann!\" Donna said, a smile on her face.\n\n\"What? It's a holiday, you have nothing to do, and I will find nothing to do.\"\n\n\"What about your girls?\" Donna asked.\n\n\"Bring them!\" Chad suggested immediately. \n\n\"Are you sure?\" Deanne asked in that flirty way that was driving her older sister crazy.\n\n\"Yes. Of course. And there's no need to bring...\"\n\nHe mouthed the word 'presents'.\n\n\"Just show up and have some cake and ice cream with us.\"\n\n\"I love cake and ous cream!\" Annabelle said, smiling for the first time.\n\n\"Come on, Donna. Say yes!\" Deanne insisted.\n\n\"Are you sure?\" she asked Chad.\n\n\"Positive. Here. Let me give you my address and phone number.\"\n\nHe set Annabelle down and fished out his phone. As he did, Deanne elbowed her sister who understood why and shoved her back using her hip.\n\n\"You ladies okay?\" Chad asked as he found his contact info and handed the phone to Donna. The phone that Deanne snatched and thanked him for.\n\n\"What time should we show up?\" Deanne asked as she copied his number and address into her contacts list.\n\nChad provided the time and noticed the look on Donna's face. As he took his phone back he asked if he could have a minute of her time.\n\n\"I'll be right here,\" Deanne said with a devious smile which drew another look from her sister.\n\nA few feet further away Chad asked if everything was okay.\n\n\"It's just a sibling thing,\" Donna told him.\n\n\"You don't need to apologize for her. She's actually quite charming.\"\n\nDonna felt a little embarrassed as she said, \"I guess I sometimes forget how wonderful she is. It's just that she's on some kind of mission to match me up and marry me off, and she can come across as...aggravating.\"\n\nChad laughed once he understood the dynamic.\n\n\"Okay. It all makes sense now. I have a younger brother and he's the um...more vocal one, too.\"\n\nDonna laughed for the first time, as far as an actual, genuine laugh went.\n\n\"There's five years difference between us. How about between you and your brother?\"\n\n\"Two years but you and Deanne remind me of my brother and myself.\"\n\n\"I won't ask if he's also a matchmaker,\" Donna said in a very subdued tone of voice out of respect for Chad's situation.\n\nHe smiled then told her, \"Actually, he is. He keeps telling me it's been four years and time to move on.\"\n\nHe stopped for a moment, looked down then back at Donna before telling her, \"If he saw us talking, he'd definitely try and pair us up.\"\n\nDonna felt a flutter she hadn't felt in a long time. It, or whatever came with it, caused her to make a goofy noise and say, \"Right. Like that's gonna happen!\"\n\nShe was nervously laughing at her own comment until Chad winced and said, \"Ouch.\"\n\nIt took her a second to understand, but she realized it sounded like she was implying he wasn't good enough for her.\n\n\"No. Chad, that's not what I meant. At all.\"\n\nHe smiled like he'd done before then said, \"That's okay. You're a very beautiful woman and the head of restoration at one of the most prestigious art museums in the world. It's not like we're in the same league.\"\n\nIt was said politely and as a statement of fact. And the part about her job was true. But what was most surprising to Donna was the overwhelming feeling of some kind of huge letdown because of what he'd just said. That feeling made no more sense to her than the rush of elation she'd experienced just moments before.\n\n\"It's okay, Donna. I don't take that sort of thing personally,\" he told her in a way that said he did. Or at least that he had in this particular case.\n\nNow feeling foolish Donna just stood there, unable to look at him.\n\n\"I should really be going. My little princess here doesn't seem to get the same kind of joy we do from the Rembrandt, so we'll leave you and your sister to enjoy it,\" Chad told her.\n\n\"My sister has the same level of interest in it as your daughter,\" a very confused Donna told him as she tried her best to smile and sound like her old self.\n\nChad laughed politely and again told her he understood.\n\n\"My brother has no interest in art and absolutely hates classical music, but it's my music of choice.\"\n\n\"Wait. What...what did you say?\" Donna asked with a tiny little shake of her head.\n\n\"I enjoy other kinds of music, too,\" Chad replied as though he thought Donna disliked his favorite genre as much as his brother. \"It may be illogical, but I love country music, almost as much as classical. So please don't think I'm a total nerd because art and classical music are my passions.\"\n\n\"That's...that's just cr...\" Donna began before Deanne called out to her.\n\n\"Are you two planning your future life together or something?\"\n\nHer words took an extra second to sink in, and when Chad laughed and commented on them, Donna laughed, too.\n\n\"You weren't kidding, were you?\" he said.\n\n\"Nope. It's pretty much a constant theme with her.\"\n\n\"I know you're talking about me!\" Deanne called out.\n\n\"We really should go,\" Chad said again.\n\n\"Oh. Right. Sure,\" Donna said as she tried to get Annabelle's attention.\n\n\"Maybe I'll see you again sometime, okay?\"\n\n\"She's coming to your birthday party, honey,\" her dad explained.\n\nWhen Annabelle held her arms out to Donna, the woman's heart went pitter-patter. \n\nShe looked at Chad who smiled and said, \"Go ahead.\"\n\nDonna took the sweet little girl in her arms and said, \"Well, hello there!\"\n\n\"You're very pretty,\" the almost-five-year old told her.\n\n\"You are SO sweet!\" Donna said back. \"And you're very pretty, too!\"\n\n\"Thank you,\" Annabelle said. \"I'm glad you're coming to my party.\"\n\n\"Yes. Me, too, sweetie.\"\n\nAnd with that she wanted her daddy again, so Donna handed her over.\n\n\"She is so sweet!\" she told him as she passed her back.\n\n\"Except at bedtime, right?\" he said to his daughter.",
        "\"I don't like to go to sleep,\" Annabelle told her.\n\n\"Oh. Well, I don't, either.\"\n\nDonna leaned closer then said, \"For that matter, I don't like getting up very much, either.\"\n\n\"You don't?\" the little girl asked.\n\n\"No. But that's because I don't like going to bed.\"\n\nDonna was so focused on the sweet little girl she was unaware of the way her father was looking at her. But there was another woman just a few feet away who saw it all, and within seconds after Chad and Annabelle left, Deanne started in.\n\n\"My, my, my. I think someone has a serious crush on someone else!\" she told her big sister.\n\n\"I do not!\" came the immediate reply.\n\n\"I wasn't talking about you,\" Deanne informed her with a smug smile. \"Well, not just you, anyway.\"\n\nDonna looked right at her sister then said, \"What on earth are you talking about?\"\n\n\"Oh, nothing,\" she began. \"Unless we're talking about the way Chad was looking at you.\"\n\n\"What way are you talking about?\" Donna demanded to know.\n\n\"The way that guys look at girls they have crushes on. That way.\"\n\n\"Ha! That's...absurd! He...he doesn't have any interest in me. Like that. At all!\"\n\n\"Oh, yes he does!\" Deanne shot back the way kids in junior-high school would talk.\n\nDonna was shaking her head, but Deanne didn't care.\n\n\"And it's obvious you've got it just as bad for him.\"\n\n\"Okay. That's...that's beyond absurd. That's...ludicrous!\"\n\n\"Is not,\" Deanne said in that playground voice.\n\n\"Is too!\" her sister came back with as though it was a surefire defeater for the 'is not' comment.\n\nThe childish exchange went on for two more rounds before Donna said, \"Okay. I've had enough. Not even Rembrandt can keep me here any longer with the likes of you!\"\n\n\"Uh-huh. That's because you know I'm right,\" Deanne informed her.\n\n\"Ohhh! Sometimes you are just so exasp...\"\n\n\"So right?\" her sister said as she threw her head back in triumph.\n\nDonna refused to speak to her all the way back to her apartment. But before she got out of the cab, Deanne told her she loved her, and that ended the silent treatment.\n\n\"You make it very hard for me to stay mad at you,\" Donna told her as she paid her part of the fare.\n\n\"That's because you know I'm right,\" she replied with a laugh, pouring salt into the wound.\n\nWhen Donna slammed the car door, Deanne laughed even louder and just before the cab pulled away, hollered out, \"You know I am!\"\n\nBy the time she got inside Donna went from being furious with her sister to nearly calm, and the calm allowed her to ask herself some very pointed questions.\n\nBut before she did, her brain did a quick mental recap of the situation and how it had changed so dramatically. And so quickly.\n\nFirst and foremost, Chad wasn't a married man. Second, he had the sweetest little girl Donna had ever seen with the possible exception of her two nieces. He'd invited her\u2014and her sister and her girls, and Donna assumed her husband\u2014to Annabelle's birthday party. He loved art and seemed very well-educated, at least where paintings were concerned, and he loved classical music. \n\nOn the negative side he also loved country, a style that made Donna's skin crawl. Lastly, Deanne said he'd been 'looking' at her which implied more than simply looking. Oh, and he was still as handsome as she remembered and also as young as he'd been, and the age difference, whatever it might be, couldn't be overlooked.\n\nFrom there, Donna asked herself what, if anything, all of that meant. As she was trying to sort it all out, she asked herself whether or not Deanne was right about her having feelings for Chad\u2014as absurd as that might be.\n\nHer initial response to herself was to laugh the whole thing off as so much nonsense. And yet she couldn't deny that their mutually-shared passions made him at least interesting, and although she wasn't ready to admit it to herself just yet, maybe even intriguing. \n\nShe then wondered how many women would see a man having a child as a negative and couldn't even guess. What she knew was that it wasn't a negative to her. In fact, after meeting Annabelle, Donna knew for sure that his having a child was a positive. And maybe even a big one.\n\nShe smiled when she thought about the sweet little girl who reached out to her, and just the thought of being hugged by Annabelle made Donna happy. She also couldn't deny that Chad wasn't hard to look at. In fact, the only thing she'd found difficult was trying not to look at him.\n\nSo if her sister was right, if he had been 'looking' at her the way she'd been looking at him, was she also right about him 'having a thing for her'? Was that even possible? And if it was, what might he think when he found out she was 40 years old?\n\nMore than anything else, that thought caused her to come mentally crashing down in a very painful kind of way. It was as though the universe was toying with her. It had set up their paths to cross, but in spite of all the positives Donna had just ticked off in her mind, there was no chance that anything would ever come of it because she was...old.\n\nShe tried saying old-er, but that did nothing to restore her hopeful mood; a mood that had crashed and burned and left a big smoking hole in her heart. Even though she knew that hearts only did one thing and that was pump blood.\n\nDonna couldn't remember the last time she drank alone, but that evening she was so depressed she poured herself a glass of wine and sat down to try and console herself even as she beat herself up for being such a baby.\n\nShe was halfway through the glass when she heard her phone buzz. She assumed the text was from Deanne, and even if her sister was apologizing, she didn't feel like talking to her just then. Even so, she couldn't resist checking in the unlikely event there was an 'I'm so sorry' somewhere in her words.\n\nBut when she didn't see her sister's name but rather just a telephone number, she opened the text to see who sent it. Like everyone else, she routinely got texts from her phone company or some other business letting her know about this or that 'great deal' she couldn't live without.\n\n\"Probably a furniture store's Labor Day sale,\" she said to herself as she opened it.\n\nBut as she read the first few words, Donna was holding her breath.\n\n\"Donna. Hi. I hope you don't mind me bothering you out of the blue, but I really wanted to tell you how much I enjoyed seeing you today outside of the context of our jobs. Annabelle really likes you and has mentioned you several times. I hope this doesn't come across as...weird...but I wanted you to know I like you, too. It's so unusual to meet someone who shares my passion for art. Beyond that we both like classical music. Lastly, I just wanted to say that meeting someone like that who's as attractive as you are isn't just rare. It's the proverbial...Holy Grail. Well, for me anyway.\"\n\nDonna finally exhaled and realized her heart was beating faster than it had in...well, she didn't know how long.\n\n\"At any rate I wanted to tell you how nice it was to see you, and Annabelle and I are both looking forward to you coming to her birthday party.\"\n\nDonna's heart was now racing and there was only a line or two left.\n\n\"I should tell you I got your number from your sister who put hers in my phone today. I'm not sure I should tell you what she said, though. Perhaps at the party? Take care, Donna. Chad and Annabelle.\"\n\n\"Oh...my...goodness,\" Donna quietly said to herself as she read the text a second and then a third time. She started reading it a fourth time but stopped and called her sister.\n\n\"Calling to admit I was right?\" Deanne asked in her happy voice.\n\n\"No!\" Donna said immediately before softening her tone and changing it to, \"maybe.\"\n\n\"He called you, didn't he?\" Deanne asked. \n\nDonna could tell she was smiling, and that infuriated her. Until she remembered her internal conversation a short time ago.\n\n\"No. He didn't call me, Miss Smarty Pants,\" Donna informed her.\n\n\"Really? He texted me two hours ago asking for your number. I was sure he'd have called by now.\"\n\nDonna hated admitting her sister was right, but after holding out for a few seconds she admitted that he'd texted her, too.\n\n\"I knew it!\" Deanne said triumphantly.\n\n\"You did not! You thought he called me and he didn't!\" came the snarky retort from her sister.\n\n\"Texting is the same thing,\" Deanne boldly insisted.\n\nThere was another round of 'is not/is too' before Deanne stopped and asked a serious question.\n\n\"You really like him, huh?\"\n\nThis pause was even longer, but Donna wasn't going to lie.\n\n\"No! Well...maybe,\" she said rather quietly.\n\n\"But?\" Deanne asked.\n\n\"Exactly.\"\n\n\"Exactly what?\"\n\n\"Okay, he told me in his text that Annabelle really liked me. And he also told me that...he likes me, too.\"\n\n\"Donna! That's great, right?\"\n\n\"I...I don't know.\"\n\n\"Wait. What do you mean you don't know? You like him. He likes you. Oh, and his sweet little girl likes you, too. So what's not to know?\"\n\n\"His age?\" \n\nDeanne knew by the way Donna asked the question that she was doing the little cringe thing women do when they're not sure about something.\n\n\"He's old enough to have a five-year old daughter. What more do you need to know?\"\n\n\"Um...how about whether or not he's even 30 years old?\" \n\n\"Oh, okay. So...if he's 30 or older you'll go out with him, but if he's 29...no way. Right?\"\n\nThe sarcasm was impossible to miss, but Donna thought it was unfair and told her so.\n\n\"Why is that unfair?\" Deanne asked. \"That's essentially what you just said.\"\n\n\"Did not!\" \n\n\"Did too!\"\n\n\"Stop! Just...stop!\" Donna, who was frustrated, confused, and losing every round said.\n\nDeanne did stop then said, \"Can we both stop? You know, as in stop the whole sister routine? You're my best friend, Donna, and I'm on your side, okay?\"\n\nThere was a third pause and the longest one yet.\n\n\"I'm just so confused!\" Donna admitted.\n\n\"There's a cure for that,\" her sister said, her voice almost sweet sounding.\n\n\"A second glass of wine?\"\n\n\"Hey, are you drinking by yourself?\"\n\n\"Just one glass. I only got through half of it before Chad texted me.\"\n\n\"Drinking isn't the answer, Donna. And the cure for confusion is information. And you get information by getting to know someone. And until you do, this won't get any better.\"\n\nFor all of the ways Deanne could be annoying, she was also a very smart woman.\n\n\"You're right,\" Donna replied.\n\n\"Hold on. Can you say that again? But let me set my phone to record before you say it, okay?\"\n\n\"Ha-ha!\" \n\n\"Did you text him back?\" Deanne asked.\n\n\"No. I...I wanted to talk to you first.\"\n\nDeanne laughed then said, \"Okay. And now you've been to The Oracle. So...?\"\n\n\"The Oracle my...\" Donna replied but then laughed, too. \"Do you think I should?\"\n\n\"Oh, geez, Donna. How can anyone be SO smart and yet SO dumb?\"\n\n\"Okay. I'll text him back,\" Donna said so fast it made her sister laugh.\n\n\"Just tell him how you feel. But omit the part about wanting to have his babies, though, okay?\"\n\nDonna's exaggerated gasps and gags made her laugh some more.\n\n\"Go on. Get some information and maybe you'll be pleasantly surprised.\"\n\n\"Yeah, right. Maybe he's got a thing for...grandmothers.\"\n\n\"Grandmothers. Ha! You're hot, Donna. Super hot. Forty or not...you're smokin'.\"\n\n\"Smokin'. I must be smoking something to think a guy like Chad would be interested in a...\"\n\n\"Good luck, Grandma!\" Deanne said before the phone went dead.\n\nIt took her a few minutes of additional back and forth with herself to convince herself to text him back. What finally convinced her was the realization it would be impolite not to do so. And were it anyone else who'd texted her, she'd definitely respond. So with that in mind she thought about what to say.\n\n\"Chad. Hi. What a pleasant surprise! Thank you for the kind words, and please let me say I enjoyed seeing you today, as well. And as far as your beautiful little girl is concerned, the feelings are mutual. She is just adorable!\"\n\nDonna read what she'd written and thought, \"So far, so good.\"\n\nThe problem was what, if anything else, she should say. She laughed when she thought about Deanne's 'having his babies' comment, and knew that wasn't going into her reply. But how could she possibly tell him how she felt in a text? After some more thought, she closed with one more thing.\n\n\"I'm very much looking forward to the birthday party, and no matter what you say, I will be bringing a gift, okay?\"\n\nShe searched for the right emoji and added it before reading it all one more time and hitting send.\n\nDonna checked her phone every few minutes until she got ready to go to bed, but there was no followup response from Chad. To her, it was obvious that meant he liked her 'as a friend' rather than as something more. So by the time she finally crawled into bed, another dark cloud of sadness descended on her. Only this time it was even worse now that the realization set in that Chad, his unknown age and last name aside, was her ideal man, but that she just wasn't his ideal kind of girl.\n\n\"Girl. Ha! I hate being 40,\" was the last thing Donna remembered thinking before drifting off to sleep around 2am.\n\nJust when Donna felt like she couldn't get any lower, Deanne called around 10am the following day and asked her to come over for dinner that evening.\n\n\"The girls really want to see you, too,\" Deanne let her know.\n\n\"You know what? I think that's just what the doctor ordered,\" Donna told her.\n\n\"Hmmm. Does that mean your text wasn't well received?\"\n\nDonna sighed then promised to explain later at her sister's.\n\nAfter explaining how Chad didn't even respond after dinner, it was Tim who spoke.\n\n\"He's a guy. And guy's don't feel they have to say a lot even if they care.\"\n\nHe saw his wife glaring at him and laughed, making matters worse.\n\n\"Okay. I get it. But that look Deanne is giving me proves my point. She knows I love her, but I don't say it every day. And no guy I know does that, either.\"\n\n\"It wouldn't hurt you to say it more than once a year, though,\" his wife said with a bit of attitude.\n\n\"Hold on. I tell you I love you on our anniversary AND on your birthday,\" Tim said before he put his arms up and ducked.\n\nDeanne still whacked him with a pillow and everyone laughed.\n\n\"So don't read anything into it. He told you he likes you in the text, so...relax.\"\n\nDeanne was still steamed and said, \"Yeah. And maybe he'll tell you again next year. On your birthday.\"\n\nDonna didn't laugh.\n\n\"Yes. When I turn...41.\"\n\n\"Oh, boy,\" Deanne said, knowing she'd just picked at another scab.\n\n\"No. It's fine. I have no one to blame but myself anyway,\" Donna said in a resigned tone of voice.\n\n\"Stop! You're beautiful!\" Deanne told her. \n\nShe looked at her husband and asked him, \"Right, honey?\"\n\nTim held his hand up again but this time in a 'don't get me involved in that' kind of way.\n\n\"There is NO way I'm answering that, because no matter what I say, I'll be in hot water.\"\n\n\"Wait? You don't think my sister is hot?\" his wife asked with a single raised eyebrow. But she realized her husband was right once she thought about how she'd feel if he told her she was.\n\n\"Thank you. Both,\" Donna said knowing Tim would agree if he could. \"But right now I just feel...old.\"\n\n\"Okay. Where's the wine?\" Deanne asked as she looked at her husband who happily got up to get it, and more importantly, to get away.\n\nTwo hours and two glasses later, Donna felt much better. Just seeing her sister and nieces always had that effect, and she was so thankful to have them in her life.\n\nAs she was getting ready to leave, Deanne said, \"Wear something nice to the party tomorrow, okay?\"\n\n\"Like that's gonna matter,\" her sister replied.\n\n\"You have an amazing body, sweetie. Show it off a little. Even if Chad isn't a big talker, he's still a man, and men notice things like that.\"\n\n\"It just seems kind of...desperate,\" Donna said.\n\n\"Well, desperate times call for desperate measures, right?\" her sister said with a laugh before they hugged each other and said 'goodnight'.\n\nThe following morning, Donna listened to the weather report which gave her the information she needed. It hadn't turned cold yet, but it was chilly enough to wear something she'd been saving for a special occasion. It was too informal and not at all appropriate for work, but not so...revealing...that it would be in bad taste around children. And if Deanne was right, Chad would have to notice. Or at least she hoped that would be the case. In between those moments when she wondered whether or not she was still sane.\n\nBy the time she needed to get ready to start getting ready, she convinced herself to give it a try and hope that someone as handsome as Chad... \n\nDonna realized she still didn't even know his last name, and that made her laugh. \n\n\"You're laughing because that means you don't know what your new last name will be, huh?\" she said to herself as she got ready to step into the shower.\n\nAs she dried her hair, Donna thought about wearing it up, but that seemed a little much for a birthday party. Instead, she left it damp and put it up in some big rollers while she got dressed and did her makeup and nails.\n\nA dress was also too formal and jeans were too informal. So a pair of black pants made sense, especially with the top she wanted to wear. It was a very soft, very pretty, off-the-shoulder, white sweater that provided a very nice view of her entire upper body. The fact that it would look great with her beautiful auburn hair was an added bonus. \n\nA little later, when the rollers came out and she saw the way it fell around her face and halfway from her chin to her shoulders, she knew she'd made the right call. Once she was ready to go, there was just enough time to take a cab, stop and guy a gift and have it wrapped, and still get to the party on time. Or close to it.\n\nDonna asked for help as soon as she got to the toy store, and a cute young associate suggested a few things, all of which Donna liked. But the one that caught her eye was a game called \"Animal Logic\" that was both fun and involved learning as children had to find ways to bring the 'animals' in the game to safety.\n\nShe was in and out in less then 15 minutes and on her way to Chad's when Deanne texted her. She was at the store Donna had just left, alone, and asked for her opinion on what to buy for Annabelle.\n\n\"Anything but 'Animal Logic',\" her sister told her with a laugh.\n\n\"Ah, okay. You bought something brainy. Gee, what a shock!\"\n\n\"She'll love whatever you bring, Deanne. You really can't go wrong.\" \n\nDeanne opted for something fun that involved exercise and picked up a game called \"2 in 1 Musical Jump 'n Toss\". Kids flipped a switch which started sprinkler-like poles spinning; poles they had to jump over as many times as they could. When the missed, they'd just put the poles back together and try again.\n\nWhen the cab pulled up to an apartment building that was nicer than the one Donna lived in, she was more than a little surprised. Grad school was expensive. But housing in Chicago was out of this world. \n\nWhen she stepped into the lobby, she was pleasantly surprised to find a doorman, a man who smiled at her and told her she looked quite lovely. Donna thanked him then went back to wondering how someone with a child, and who worked as a security guard, could possibly live in a place like that and afford to go to graduate school.\n\nHer concerns changed to how Chad would react when she saw herself in the mirrors located on both sides of the elevator. She did another quick assessment and told herself that if this didn't do the trick then Chad either had no interest in her, or how she looked made no difference to him. Her final thought as she exited was that he probably wouldn't notice because to him, she was little more than a middle-aged woman who also happened to love art.\n\nShe walked down the corridor until she found his apartment, stopped, took a deep breath, then rang the doorbell. Donna smiled when she heard the unmistakable voice of a little girl holler out, \"I'll get it!\"",
        "Seconds later the door opened, and a pretty little girl with ribbons in her hair and wearing a party dress appeared.\n\n\"Happy birthday, Annabelle!\" Donna said as she bent down.\n\n\"I know you!\" the little girl said with a smile. \n\n\"Yes, you do, and I know you, too,\" Donna told her.\n\n\"Today is my birthday!\" \n\n\"Yes. Yes, it is. And I brought this for you.\"\n\n\"A present? For me?\"\n\n\"Yes. For you,\" Donna said with a smile just as her father came to see who it was.\n\n\"Donna. I'm so glad you could join us. Please come in,\" he told her.\n\nAs she stood up, she could tell he was looking at her while trying to make it seem like he wasn't.\n\n\"And...wow!\" Chad said when it was appropriate to go ahead and take a quick look at her.\n\nHe was wearing a very nice shirt and a pair of gabardine pants which looked great on him, and today his hair wasn't as formally combed, and that only made him look even better to her.\n\nAs she stepped inside, she said, \"Thank you, and 'wow!' back. Oh, and this is for Annabelle.\"\n\nChad accepted the gift but told her that wasn't necessary.\n\n\"Nonsense! I'd never come to a birthday party and not bring a gift.\"\n\n\"Well, that's very kind of you. And your sister just texted me and said she'd be here in a few minutes. So please come in and meet the other guests.\"\n\nDonna could hear a lot of laughter and conversation, and when she got to the very spacious living room, she saw at least a dozen adults and what looked like twice as many children.\n\nSeveral of the women were wearing dresses and not one of them was in jeans. That let Donna relax knowing she was at least 'in the ball park' as far as wearing the right thing was concerned.\n\nChad told her that many of the guests were parents of children Annabelle had gone to Pre-K with the year before. She couldn't be sure, but it felt like most of the parents were closer to her age than Chad's\u2014whatever that might be.\n\nSomeone who looked a lot like Chad made his way over to them, and before he could be introduced, he stuck out his hand and said, \"You must be Donna.\"\n\n\"I...I am,\" she said with a smile as Chad laughed.\n\n\"Donna? This is my brother, Chet. He obviously knows your name, but Chet, this is indeed Donna.\"\n\n\"Dang, girl! You're even more beautiful than my brother said you were,\" the younger version of Chad told her. He wasn't quite as attractive as his older brother, but it was obvious he was the more outgoing of the two.\n\nThe doorbell rang again and Annabelle hollered out the same thing.\n\n\"That's probably Donna's sister,\" Chad said as he excused himself.\n\n\"Don't worry. I won't steal her away from you the minute you turn your back, bro!\" Chet told his brother.\n\n\"I take it you're not married?\" Donna asked rather than asking what he meant by 'stealing her away'.\n\n\"Me. No. Never. Well, never say never, but I don't see that happening for many, many years to come,\" Chet told her with a huge amount of confidence.\n\n\"You never know, right?\" Donna replied with a smile.\n\n\"Right. Not all of us can find the perfect woman when we're 22 years old,\" Chet said with a laugh.\n\n\"Is it fair to assume you mean Chad's wife?\" Donna asked very carefully.\n\n\"It is. And she was...amazing. Just such a tragedy. They were so different and yet so perfect for each other and then...she was gone.\"\n\n\"I don't know how she...passed away...but it breaks my heart that she did. Not just for Chad but for Annabelle, too.\"\n\n\"She was in the Air Force, too. Both of them were cops. Security forces. You know, like military police in the Army.\"\n\n\"Oh. Okay,\" Donna said, not knowing the differences or the similarities.\n\n\"Annabelle was only nine months old when Cara, Chad's wife, got sent to Afghanistan for a three month deployment to provide security in Kabul. She'd only been there six weeks when one of the Afghani soldiers, who are supposed to be on our side, opened fire on a group of US servicemen. He killed two people and wounded four others. Cara was one of the two who didn't make it.\"\n\n\"Oh, my...God!\" a shocked Donna said as she covered her mouth just as she heard her sister's voice.\n\n\"There she is!\" Donna heard Deanne call out, forcing her to turn her way. \n\nChad brought her over and introduced her to Chet with a warning to his brother that she was a married woman.\n\n\"Not that that'll stop this guy,\" Chad said with a 'you know what I mean' kind of look.\n\n\"I don't hit on every married woman,\" Chet said as though he'd just been offended. \"Only the hot ones. Like Deanne.\"\n\n\"Oh! Well...hit away, handsome!\" she replied with a laugh.\n\nDonna knew her sister would never, ever cheat on her husband. It was equally obvious that the two younger, more gregarious siblings had just hit it off, and within seconds Chet was taking her around to meet the other adults in the room.\n\nOnce they were 'alone' again, Chad told Donna how glad he was to see her.\n\n\"I'm very happy to be here,\" she told him as she noticed him 'looking' at her again.\n\n\"I knew from seeing you in the formal gown you wore the first time I saw you that you were a beautiful woman, but you look absolutely stunning.\"\n\nDonna's heart went pitter-patter as she thanked him (and her sister) for the compliment.\n\n\"Listen. I was hoping maybe you and I could, you know, talk for a bit after the party. If you don't need to get back right away.\"\n\n\"No. I...I'd like that, Chad,\" she told him as they made eye contact, contact that sent a tingle down her back.\n\n\"If you'll excuse me, I should get things started. Do you mind?\"\n\n\"No. Please. Go right ahead,\" she told him.\n\nChad got everyone's attention, thanked them all for coming, then surprised Donna by mentioning her by name.\n\n\"For those of you who don't know the beautiful redhead in white is...\"\n\nHe smiled at her and paused for everyone to look before continuing.\n\n\"That is Miss Donna Hartley, the woman who is going to be in charge of the restoration of one of the most famous paintings in the world.\"\n\n\"The Rembrandt!\" someone Donna hadn't met said.\n\n\"Yes. Exactly,\" Chad said.\n\nHe looked over at Donna again, smiled at her, then said, \"I've mentioned the painting to pretty much everyone, and I may have mentioned the beautiful woman who will be its guardian a time or two, as well.\"\n\n\"A time or two? More like two hundred times!\" Chet called out, drawing some polite laughter.\n\n\"Can you blame me?\" Chad said as he held his arm out in Donna's direction.\n\nHer pitter-patter had increased to a race as she smiled at everyone hoping that would be the last of the commentary about her. But alas, Deanne made sure that wasn't the case.\n\n\"Two hundred? That's about how many times she's mentioned you to me, Chad!\" she said in her outdoor voice.\n\nDonna hadn't blushed since high school, and although she didn't 'flame on', she felt her cheeks getting very close to matching the color of her hair in a matter of seconds.\n\n\"Good to know!\" Chad said to Deanne as he winked at Donna, something that only caused the crimson glow to deepen.\n\nFor the next two hours, Donna joined in the celebration by playing games, helping cut and pass out cake while Chad dispensed 'ous' cream, then watching the birthday girl open presents.\n\nAs guests began saying goodbye, Chad reminded her he'd very much like her to stay.\n\n\"Oh. Okay. Sure,\" she said. \"I can help you clean up.\"\n\nChad smiled at her then said, \"That wasn't what I had in mind,\" before turning toward someone else who was getting ready to leave.\n\nDeanne left soon after but told her sister something just before she did that made her shake her head.\n\n\"Strike while the iron's hot, Donna!\"\n\n\"Someone needs to strike your head with an iron!\" her sister shot back as though the suggestion was ridiculous.\n\nAll Deanne said back was, \"Okay. If you say so. But...good luck!\"\n\nWhen the only sound in the apartment was Annabelle playing with her new things, Donna began gathering up wrapping paper when Chad asked her what she was doing.\n\n\"Cleaning up, of course,\" she said without stopping.\n\nChad joined in and in a few minutes the floor was free of ribbons, bows, and paper.\n\n\"Can we maybe talk?\" he asked as he filled a plastic trash bag before tying it off and setting it out to be thrown away.\n\n\"Um...sure,\" Donna said, that flutter in her heart back again.\n\n\"I'm a very quiet person, Donna. And I'm rarely direct. But there are times when being indirect just won't cut it, and I think this is one of those times.\"\n\n\"It is?\" a somewhat wide-eyed 40-year old woman replied.\n\n\"Can we sit down?\" Chad asked as he gently put a hand in the middle of her lower back to guide her toward the couch.\n\nOnce she'd taken a seat, Chad sat across from her.\n\n\"I...I just wanted to say that I've never met anyone quite like you before,\" he began. \n\nDonna was sitting up straight, her knees together, and her hands in her lap.\n\n\"I loved my wife dearly and always will. But we were opposites. In many ways. They say 'opposites attract' and while I wouldn't trade one day of my life with her for anything, I think it's better when two people share as many things in common as possible.\"\n\n\"You do?\" \n\nAnother two-word response was all Donna was able to come up with.\n\n\"I do,\" Chad told her with a smile that made her tummy flip flop.\n\n\"I want to confess something else here, too, before I go any farther.\"\n\nChad smiled at her then said, \"I knew you weren't married, but I didn't know whether or not you were seeing someone, so I asked your sister.\"\n\n\"I see,\" Donna replied very quietly, her mouth feeling dry and her heart still racing.\n\n\"I got the impression from Mr. Dumond that the two of you might, you know, be...an item.\"\n\n\"David said that?\" a very surprised Donna asked.\n\n\"No. Not in so many words. But my sense is he has...a thing...for you. I just needed to be sure there wasn't...any...thing between you two other than work.\"\n\nHe hesitated for a moment then continued his quasi-direct approach.\n\n\"What I'm saying, and maybe not doing such a good at, is that, well, as I said in my text, I like you, Donna. And I like you very much.\"\n\nShe didn't say anything, so Chad said, \"You look surprised.\"\n\n\"I...you...when I texted you back, you didn't...\"\n\n\"I'm sorry about that. I did read your reply. Several times,\" he told her with a smile. \"But when you didn't say you felt the same way, I assumed you didn't. Feel that way. But I do, and I guess I'm directly asking you in an indirect kind of way, if you have any such feelings for me. At all.\"\n\nThere was a boyishly hopeful look on his very handsome face, and Donna's heart was now pounding in her chest as she realized her sister was right. \n\n\"I...I do...Chad. I...I just don't understand,\" she began, her eyes open a little wider than usual and a confused look on her face.\n\n\"I have to say I don't understand,\" he told her. \"We both love art. We both love classical music. And maybe I misread something, but it honestly seemed to me like you...enjoyed my company. Am I wrong?\"\n\nNow it was Chad whose eyes were open wide and whose eyebrows were high in expectation.\n\n\"No. You're...you're not wrong. I...do enjoy your company.\"\n\n\"But?\"\n\n\"But? No. There's no 'but'. I do. Enjoy your company.\"\n\n\"There's something you're not telling me, Donna,\" Chad said rather quietly.\n\nShe looked at her hands for several seconds then finally looked at Chad again before asking him, \"Do you, do you know how old I am?\"\n\n\"Oh. Okay,\" he replied with a smile and almost a laugh. \"No. I don't.\"\n\n\"I don't know your age, either,\" Donna said as though that would explain everything.\n\n\"I'm 27,\" Chad told her immediately and so matter of factly it surprised her.\n\n\"Is that bad?\" he asked as she tried to collect her thoughts.\n\n\"No. I...I don't think so, anyway,\" she said, feeling almost sick to her stomach to have her worst fears confirmed.\n\n\"Are you 35 or something?\" he asked very politely.\n\n\"Thirty...five?\" Donna repeated with disbelief in her voice.\n\n\"Sorry. I guessed high because you seem to be worried about my being younger than you, and...\"\n\n\"Wait. You guessed...high?\"\n\nDonna's little head shake told Chad he was missing something.\n\nHe tilted his head a bit then asked her if she was trying to tell him she was older than that.\n\n\"Yes,\" came the one-word reply. \"And that's why, as much as I like you, Chad, I can't imagine you still feeling the way you do now that you know.\"\n\nThe way he smiled at her sent chills through her. When he stood up and walked over to her and asked if he could sit beside her, her body trembled.\n\nHe sat down and turned her way then looked right at her.\n\n\"Donna? I've only felt like this about one other woman. A woman I fell in love with and married. Since I lost her, I've wanted to find someone who shares my passions. But it's been difficult. I started thinking I might never meet anyone who did. Well, let me be more precise. I never thought I'd meet a woman as beautiful as you who loved what I love.\"\n\nShe tried to speak, but the saliva in her mouth was even thicker than her tongue and nothing came out.\n\n\"I don't want to miss out on the possibility of being happy again, Donna. And no one has made me feel like that since Cara was alive.\"\n\nHe smiled warmly as he slowly reached up and gently brushed her long, silky hair out of the way then said, \"You make me feel like that.\"\n\nDonna's heart had raced before but never so fast that it scared her. It was out of control, and her mind was a mass of gray goo, unable to think or speak or even move.\n\n\"Like this,\" Chad said as he leaned in to kiss her. \n\nHer eyes had been locked with his, and he saw them moving a thousand miles an hour back and forth between his. That told him what her mouth couldn't. And when his lips met hers, her eyes closed and Donna Hartley kissed him back.\n\nWhen the kiss ended, Donna opened her eyes, and the first words she spoke were, \"I don't even know your last name.\"\n\nChad did his best not to laugh as he told her it was Morris.\n\n\"Like the cat.\"\n\nDonna's face was still expressionless so he said, \"In the commercials. For cat food. Back in the day.\"\n\n\"Oh. Yes. I remember,\" she heard herself say. \"Chad. Morris.\"\n\n\"That's me,\" he told her, another smile on his handsome face.\n\n\"I'm...40,\" Donna blurted out but rather quietly as her eyes never moved from his.\n\n\"Is that your middle name?\" Chad teased with a very straight face.\n\n\"What? My...my middle name?\" a bewildered Donna asked.\n\n\"Sorry. I was trying to lighten the mood, and that didn't come across the way I...\"\n\nBefore he finished his sentence, Donna suddenly kissed him. Softly at first then harder and more passionately. Out of control, she offered the tip of her tongue, and when he responded, she offered more. \n\nWhen he then suddenly pulled away, it took her several seconds to realize why. He wasn't offended, and it wasn't too much too soon. It was due to the giggles coming from the newest five-year old girl in Chicago.\n\n\"Dad-dy!\" Annabelle said, a smile on her face.\n\n\"Yes, honey?\" her father said as though nothing was going on.\n\n\"I saw you guys kissing!\"\n\nDonna felt awful. She was deeply embarrassed and wanted to run, but that ended when Annabelle came over and asked if she could sit on Donna's lap.\n\n\"Yes. Yes, of course,\" she said as the little girl let her pick her up and her head began to clear.\n\nShe turned her head around and looked up then asked, \"Do you love my daddy, too?\"\n\nChad again tried not to laugh when he saw Donna's eyes get wide as she looked down at his daughter.\n\n\"Well. We...we uh, we just...\"\n\n\"We like each other, honey,\" Chad told her. \n\nHe looked at Donna then added, \"A lot.\"\n\n\"Oh. Okay,\" she said before sliding off and reaching for Donna's hand. \n\n\"Do you want to play with me?\" the five-year old asked in a way that made Donna tear up in an instant.\n\n\"Yes. I would love to play with you,\" she told her.\n\n\"Come on!\" Annabelle said as she pulled on her arm. \"I'll show you all of my new toys and dolls, okay?\"\n\nAs she stood up, Donna mouthed the words, \"Are you coming?\" to Chad who said, \"You go on ahead. I'll be in in a few minutes, okay?\"\n\nHe turned to watch them leave, and as they walked away, he said to himself, \"You don't know it yet, Donna Hartley, but I'm going to marry you.\"\n\nHe gave the 'girls' ten minutes before joining in. In that time he heard laughter and the kind of happy talk that made him...happy.\n\n\"Are boys allowed to come in?\" he asked when he got to Annabelle's room.\n\n\"Yes!\" his sweet little girl said as she patted the area next to her on the floor.\n\n\"We have to save the zebras, Daddy. You wanna help me?\"\n\n\"You better believe it!\" he told her as he put an arm around her.\n\nWhen he looked at Donna he saw her wiping a tear from her eye, and when she noticed, her smile told him it was a tear of happiness.\n\nThey not only saved the zebras but several other animals before the adults had another opportunity to talk and get better acquainted.\n\n\"Feeling better about this?\" Chad asked as they sat side by side on the sofa.\n\nDonna told she was then shared what her sister told her to do.\n\n\"Gather information, eh?\" Chad repeated after she explained. \"Is it working?\"\n\n\"There's still so much to learn, but so far? Yes. It's definitely working,\" Donna told him.\n\n\"What more can I tell you today?\" Chad asked.\n\n\"I'm not sure. I don't exactly have a list. I think I just needed to know that you wouldn't run for the hills when you found out how old I am.\"\n\n\"Donna, you're not old. You're beautiful. And smart. You're talented and have this amazing ability to restore works of art. And after watching you with Annabelle, I can see what a warm, loving person you are, too.\"\n\nHe reached for hand then said, \"I can't imagine ever meeting anyone as amazing as you, Donna.\"\n\n\"But don't you need to...gather information, too?\" she asked.\n\n\"Good point,\" Chad said very seriously before asking a question even more seriously.\n\n\"Cubs or White Sox?\"\n\n\"What?\" Donna a very confused Donna Hartley replied.\n\n\"Well, most of the people who live in this part of the city are Cubs' fans.\"\n\nChad looked into her eyes then said, \"Just not me. I've been a White Sox fan for as long as I can remember. So...were you to tell me your a Cubby, I think this would be over before it got started.\"\n\nIt took Donna a moment or two to realize he was kidding, at least about this being over, and then she recalled how she'd used that very question before as a way to rule out any man who was heavily into baseball.\n\n\"Maybe I do like the Cubs,\" Donna told him with an air of snobbishness, as she decided to play along. \"Are you saying that would create some kind of 'house divided'?\"\n\n\"Oh, wow,\" Chad said as he rubbed his chin as though he were in deep contemplation.\n\n\"Are you really a Cubs kind of gal?\" he asked just as seriously as before.\n\n\"Considering how I know almost nothing about baseball, I would say I'm a...blank slate? Not that I want to know anything about it.\"\n\n\"I have season tickets to the White Sox games. The season will be over soon, but I'd like you to go to a game with me this week.\"\n\n\"You know I don't like baseball, and yet you're asking me to to a baseball game with you?\"\n\n\"I'm...gathering information,\" Chad told her with a smile. \n\n\"But what if I hate it?\" \n\n\"You won't,\" he told her with such confidence it made her laugh.\n\nDonna looked at him for a second, smiled, then said, \"Okay. I'll try it. Once.\"\n\nShe smiled back at him then said, \"For you. For your information gathering.\"\n\n\"Yeah?\" Chad replied as he moved closer.\n\n\"Yes. I'll go to a game with you.\"\n\n\"I'm glad,\" he told her quietly before kissing her softly. \n\nAs he pulled away he also said, \"Thank you.\"\n\n\"You're welcome,\" Donna told him as she looked at this younger man, barely able to believe he felt about her the way she felt about him.\n\nThat week they saw each other several times with two of them being at the gallery at night as Donna began putting her observations down on paper. It wasn't easy, though, as a certain security guard stood behind her with his arms around her as she tried to concentrate. ",
        "When she complained he moved around in front of her and kissed then asked if that was any better. Donna set her pen and paper down and kissed him back; a kiss that lasted for a very long time before Chad told her he needed to go finish his rounds right then or he might not finish them at all.\n\nShe had dinner at his place that Thursday which turned into playing games with Annabelle, and by the time she went home around midnight, Donna knew she was falling for the handsome security guard with the beautiful little girl. \n\nThe two of them were burning up their phones texting back and forth, and at some point the texts got a little racy. Donna loved the way Chad was able to used double entendre and innuendo without being crass. And as the raciness got hotter and hotter, Donna found herself getting well, wetter and wetter.\n\nThe night before the White Sox game, it got so intense she did something she'd never done and 'touched herself' as they texted. It wasn't just touching, though. It was the most unusual and amazing and mind-blowing thing she'd ever done not involving a man who was physically with her. \n\nAs they rode in a cab to the game that Saturday afternoon, Chad confessed to having done that himself. Rather than embarrassment, Donna let him know she'd done the same and suddenly felt closer to him than she'd ever felt to any man before. As they sat in the backseat together holding hands, she put a hand on his face, moved closer, then whispered, \"We could do that again tonight only without the texting.\"\n\n\"Yeah?\" Chad replied with a big smile on his face.\n\n\"If it's not too soon,\" Donna said, giving him a way out.\n\n\"I've been ready since I saw you at Annabelle's party,\" he told her.\n\n\"I see,\" Donna replied with a smile of her own. \"I kind of thought you were when you were standing behind me in front of the Rembrandt.\"\n\nShe laughed then said, \"Either that or your gun was in a very unusual place.\"\n\nChad laughed, too, then told her he was hoping she hadn't noticed.\n\n\"How could I not notice? You have a very big...gun.\"\n\nWhen he told her, \"All the better to...love you with, my dear,\" Donna laughed happily and kissed him then curled up beside him until they got to the park.\n\nChad did his best to explain the game to her as it unfolded, and Donna made a serious effort to learn. But her mind was elsewhere, and that made it very hard to concentrate. Even so, the truth was, she enjoyed being with him so much she promised she'd go with him again.\n\nChet spent the night at his brother's place watching his niece, and Chad spent his night at Donna's where she learned for sure that he was good in bed. To her delight, he wasn't just good. He was downright amazing, and she couldn't think of a single thing more she needed to know about him. There was plenty more to learn, it just felt like none of it mattered\u2014barring him being a 'closet serial killer' or the like.\n\nAs they lay in bed together after a second round of passion, Donna asked him about his job.\n\n\"Ah, yes. How is it a guy who works as a security guard can live where I live,\" he said with a smile.\n\n\"No! I...don't care what you do,\" she told him even as she realized she finally didn't care. But yes, she was curious even though that wasn't why she asked.\n\n\"When Cara died, I ended up with, well, a whole lot of money,\" he began explaining.\n\nFrom there he further explained that when someone died in a combat zone the way Cara had, and assuming the person killed had the full amount of Serviceman's Group Life Insurance, the beneficiary received a half million dollars, all told.\n\n\"I left the service a few months later and Annabelle and I moved home with my mom and dad. The money was just sitting in a credit union savings account, and my dad suggested I do something with it. He's been a general contractor since I was born, and he's always wanted to flip houses. So I invested in him just as the market was really heating up. He turned one old house around in four months and let's just say I got a huge return on my investment. One house became two, two became three, and now we're flipping 4-5 at any given time and my dad oversees them with his project managers do the work. We split the profits and he's never been happier.\"\n\n\"That's incredible. I've always enjoyed house flipping shows. I just didn't know the average person could do it,\" Donna said.\n\nShe waited a few seconds then realized he hadn't answered the question.\n\n\"Oh. Right. Sorry. I took the job with the Art Institute so I could get a chance to see the Rembrandt up close as many times as possible. It's just a temporary thing and that's the only reason I took it.\"\n\nHe rolled over on top of Donna, smiled at her then let her know that because he had taken the meaningless job he'd found something more valuable and meaningful than any painting or work of art.\n\n\"I found...you.\"\n\nDonna teared up again and told him how thankful she was that he had.\n\n\"I still can't believe you lo...like me so much,\" she said.\n\n\"You can use the 'L' word, Donna, because...I do love you.\"\n\nChad was so serious and so sincere it turned the welling up in her eyes into a flood of tears.\n\n\"I love you, too,\" she told him through those tears. \"And I love that beautiful little girl of yours, too.\"\n\n\"And she loves you, Donna. And who knows? Maybe she'll be 'ours' one of these days.\"\n\n\"Nothing would make me happier,\" his beautiful, older girlfriend told him before she reached for him and guided him back inside of her.\n\n*****\n\nTwo Weeks Later\n\n\"So what other ideas do you have that would let me learn more about you?\" Donna said after Chad asked her if she really enjoyed watching his White Sox. \n\nShe told him she had with the qualification that she still didn't understand the game all that well. He assured her there was plenty of time to do so beginning next Spring.\n\n\"Oh, so does that mean we'll still be together then?\" Donna teased.\n\n\"We better be,\" Chad told her with a serious look that made her laugh. \"But to answer your question, I do have another idea.\"\n\n\"I take it this won't be a classical music concert?\"\n\n\"No, but it'll be close,\" Chad replied. \"But for this one you'll need to wear some jeans and a tee-shirt.\"\n\nHe looked over at her then asked just as seriously, \"Do you even own a pair of jeans?\"\n\n\"I have jeans!\" she said with faux indignation.\n\n\"Great! Then wear 'em this Friday night when I come to pick you up.\"\n\n\"That's it? That's the only hint I get?\"\n\n\"Okay. I'll give you one more,\" Chad told her. \"Ask me the same question again.\"\n\nDonna played along, and this time Chad said as southern as he could, \"Yup. That's all I'm gonna tell you, little lady.\"\n\n\"Okay. That didn't help. At all,\" she replied with a little pout that made him laugh.\n\n\"Be patient, okay?\" was all he'd tell her even when she tried getting 'frisky' to get more information.\n\nChad showed up that Friday wearing jeans and cowboy boots with a large box in one hand and a dozen roses in the other.\n\n\"What in the world is going on,\" Donna asked after thanking him for the flowers.\n\n\"Take a look,\" Chad told her as he set the box on the kitchen countertop.\n\n\"I'm almost afraid to,\" Donna said as she gingerly raised the lid. \n\n\"What...is...this?\" once she looked inside.\n\nChad reached in and held it up then told her, \"It's yours,\" as he placed the pink cowboy hat on her head.\n\nHe reached back in and held up another and said, \"And this one is mine.\"\n\nEven in a Stetson, Chad looked amazing to her, and Donna didn't bat and eye when he told her they were going line dancing at his favorite country bar in the city.\n\n\"So...they'll be playing country music there,\" Donna said without any hint of enthusiasm.\n\nBut when Chad stuck his thumbs in his belt around a huge buckle she hadn't noticed and said in a southern accent, \"You got that right, little lady!\" Donna laughed.\n\n\"Do I look as ridiculous as you?\" she asked after putting her arms around his neck.\n\n\"If by 'ridiculous' you mean incredibly handsome...then yes!\" he told her.\n\nBefore she could say anything he picked her up, spun her around then set her down and started leading her around her fairly small living room.\n\n\"Okay! Stop!\" she said once she was able to quit laughing. \n\nChad held out an elbow which Donna looked at for a second or two before taking it. Once she did, she told him, \"You're lucky I'll go anywhere with you.\"\n\nChad tipped his hat and told her in his Southern accent, \"I shore 'nuff am!\"\n\nWhen he added a loud, \"Yee-haw!\" as he opened the door, Donna knew she not only loved him, she was sure she was in love with him, and that she really would go anywhere as long as he was with her.\n\nUnlike baseball, Donna picked up line dancing in no time. The club offered a short class for beginners, and within an hour, she was good enough that Chad told her she was turning him on just by turning around.\n\n\"Are you sayin' you like my saddle, cowboy?\" Donna said, trying to do a country accent herself. It was awful and made no sense, but she was actually quite good. Her body was also that good and just the way she moved really was working magic on the 'horn' of Chad's saddle. \n\nHe laughed and told her he loved her saddle. And her stirrups and everything else, none of which made any more sense than what she'd said, but Donna didn't care. She was having more fun than she could ever remember having, and doing so while line dancing, something she would have never done in a million years had a gorgeous, young cowboy not come along and swept her off her feet.\n\nDonna got to meet Chad's parents, who lived nearly four hours away in Springfield, the state capitol of Illinois, over the Christmas holidays. Chad told her several times they would love her, but until she actually met them, all she could imagine was getting the cold shoulder due to her being the 'older woman' who'd come along to take advantage of their son.\n\nWithin minutes, Donna realized that wasn't the case at all. Chad had talked to them many times about the older woman he'd fallen in love with and sent them quite a few photos of Donna. And once they met her and saw how open and friendly she was, they welcomed her with open arms. Even more importantly, they saw they way she looked at their son and how much she clearly loved their only granddaughter. By the time they left after the three-day visit, Donna knew she'd made two more friends for life.\n\nWhen the Rembrandt finally came down off display, Chad's gig as a security guard ended, but his relationship with the head conservator-restorer at the Institute continued to grow. \n\nDonna let him into her work area a couple of times to show him what she was doing. That he was as fascinated by the restoration as she was only made her love him even more. The fact that he enjoyed classical music and took her to several concerts was for her what Chad had called 'the icing on the cake'.\n\nDuring early March, which Donna learned was spring training for baseball players, she accepted Chad's offer to move in with her, and it was hard to tell who was the happiest of the new trio. Annabelle already thought of Donna as her 'mom' even though she still called her by her given name, and Donna loved her like she was her own.\n\nMarch 26, 2020\n\n\"This is the earliest opening day in baseball history,\" Chad excitedly told Donna as she bundled up for the ball game.\n\nThe White Sox played at Guaranteed Rate Field, a name that made Donna laugh due to its obvious commercial nature. But even in the cold of a raw Chicago afternoon, her heart was warmed by having the two people she loved the most sitting on either side of her. For much of the game, Annabelle alternated between her lap and her daddy's, and Donna loved every second of the time they shared.\n\nShe was freezing by the 7th-inning stretch, and enthusiastically singing 'Take me out to the Ballgame' helped a little. But it was what happened after they sat back down that warmed it unlike anything ever had.\n\n\"Take a look, honey,\" Chad said as he pointed to the closed-circuit TV monitor.\n\n\"Oh, my...\" she said.\n\n\"Daddy! That's us!\" Annabelle said.\n\n\"Huh. Your father must know someone here,\" he said as the camera honed in on them.\n\n\"Chad? What...what are you doing?\" Donna asked when he stood up then got down on one knee on front of her.\n\n\"Do you have the box, sweetie?\" he asked Annabelle.\n\nIt was zipped into a jacket pocket, and her father had to help her get it out because her fingers were too cold to open it herself.\n\nAs Chad opened it, he saw the woman he loved crying.\n\n\"I haven't said anything yet,\" he teased.\n\nEvery eye in the stadium was on them, but Donna was only aware of one thing. The handsome man holding out a diamond ring who asked her to marry him.\n\nWhen she said, \"Yes!\" the packed opening-day crowd burst into applause.\n\nChad stood up, took his fianc\u00e9's hand, then had her stand up, too.\n\n\"Smile, honey! All of Chicago is watching!\" Chad told her as he picked up Annabelle and waved. Donna did, too, showing off the beautiful new ring for the camera.\n\n\"Kiss him, kiss him, kiss him!\" the crowd chanted.\n\nOnce Donna realized that meant her, she did just that and kissed Chad in front of 40,000 cheering fans.\n\n\"I love you so much!\" Chad hollered over the noise.\n\n\"I love you, too!\" Donna told him as they waved one last time before melding back into the crowd.\n\nOn the ride home Donna finally warmed up. Chad had his arm around her and asked her if she like baseball any better.\n\nShe smiled at him then told him, \"I'm...warming up to it.\"\n\n\"That's okay. You don't have to like everything I do,\" he told her before giving her a kiss.\n\n\"No, but I want to share every part of your life with you, honey, and if freezing my tushy off at a White Sox game is what it takes to be near you, then I'll be at every game right beside you.\"\n\nDonna had never seen Chad tear up, but as he looked at her in the white stocking hat she was still wearing, he told her, \"I kept hoping I'd eventually find someone to love. I just never imagined she'd be as wonderful as you.\"\n\nDonna snuggled up tighter then said, \"I had this...idea...in mind for most of my life.\"\n\n\"Idea?\" Chad asked.\n\n\"U-huh. Maybe more of an 'ideal' than an idea. Deanne is the one who helped me understand I was my own worst enemy when it came to finding someone to share my life with.\"\n\n\"Then I believe I owe your sister a huge debt of gratitude,\" Chad told her as he pulled her close.\n\n\"It's funny how I spent my life restoring works of art and never really thought about how badly my outlook on life needed a restoration of its own.\"\n\n\"Did I have anything to do with that?\" Chad quietly asked.\n\nShe looked up at her fianc\u00e9, smiled happily then told him, \"Yes. Everything. You were and are the very thing that restored me, sweetheart,\" before she kissed him and told him how much she loved him.\n\n******\n\nChad finished his master's program in June and took a job with Baumgartner Fine Art and Restoration and Conservation across town from the Art Institute of Chicago where the woman he married the day after graduation still worked.\n\nDonna Morris adopted their beautiful daughter later that summer, and to everyone's great delight, she learned that she was pregnant in August and shared the news with her new family during what else? A Chicago White Sox game.\n\nJust before she turned 42, Donna gave birth to a second daughter, a beautiful little girl they named Emily Rose. The first day they brought her home, Donna watched her husband and their older daughter cooing over the new addition to their family. Once again, tears welled up in her eyes when she realized how lucky she'd been. \n\nHad The Night Watch not been brought to Chicago when it had, there'd have been no handsome security guard and no Night Watchman there to see it\u2014or to find her. But both things had happened, and as Donna sat there in a home filled with new love and new life, she too, felt as though her very life had been restored by the handsome younger man who loved her the way she'd always dreamed of being loved."
    ],
    "authorname": "komrad1156",
    "tags": [
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-night-watchman"
}