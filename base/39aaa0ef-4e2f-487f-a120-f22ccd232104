{
    "title": "Surefoot 24: Snakes on a Starship",
    "pages": [
        "Hovian Cluster, Maxia Sector:\n\nThe Nausicaan Raiders swarmed around the crippled cargo ship, the beetle-shaped attackers taking their time and taking turns to strike at the failing shields of their prey. The built-in nacelles of the Raiders glowed a bright lime green as their power was diverted to their plasma cannons, ensuring a steady, relentless assault, wanting to leave the cargo ship vulnerable without destroying it.\n\nThe lead Raider, meanwhile, kept back, watching and listening like a mother predator teaching its offspring on their first hunt... watching and listening...\n\nThen the local subspace channels were flooded with a wail and a fast-throbbing pulse of electric music, as a human voice declared, \"We come from the land of the ice and snow / From the midnight sun, where the hot springs flow / The hammer of the gods...\"\n\nThe Shipmaster of the lead Raider had expected this, understanding the tactic of the incoming Starfleet vessel: a tactic meant to instil confusion, fear, and to prevent them from coordinating a counter-attack via subspace channels. So he launched three small flares, attracting the attention of the rest of his raiding party, and alerting them to stand ready...\n\n*\n\nDeck 2 Fore -- Bridge:\n\nCaptain Esek Hrelle's tail, sticking out from the back of his customised chair, kept slapping the floor with anticipation as he sat there, eyes fixed on the forward viewscreen. The dilated starfield of warp speed had returned to a normal view, providing an instant tactical assessment of the situation, as his First Officer, Commander T'Varik, provided commentary from her station. \"On full impulse... Six Neeth-Class Nausicaan Raiders attacking the J-Class vessel SS Nagaina-\"\n\nHrelle's claws popped out with excitement, though he kept them hidden in his fists as he announced, \"Lieutenant Shall, remind the Nausicaans of my personal feelings towards piracy in my territory.\"\n\n\"With pleasure, Sir.\" The young, black-furred Caitian female C'Rash Shall let loose a volley of photon torpedoes and phaser beams on the nearest Raider, the phasers reaching the target first and disrupting its shields enough to let the torpedoes achieve maximum effect, turning the Raider into an orange-white blossom.\n\n\"Draw the others away, Lieutenant.\" Hrelle smiled. \"Give them time to regroup. Mr Darcy, what's the status of our ventral arrays?\"\n\nFrom the Engineering station, the crewman looked up -- and grinned, knowing why he was being asked. \"All systems fully operational, Sir!\"\n\nT'Varik knew why, too. \"Sir...\"\n\nHrelle ignored her for now. \"Ready to increase power to ventral shields, Structural Integrity and Inertial Dampeners. Helm: pick a prey.\"\n\nBehind Hrelle, Operations Officer Lt Neheru's Kelpien threat tendrils fluttered from the back of his peach-coloured neck. \"Sir, with respect, it's an unnecessary stress on our systems!\"\n\nHrelle didn't respond, but at the Helm, Cadet Meow Rrori's white-furred fingers moved eagerly over the controls. \"Already got one, Sir!\"\n\n\"Captain,\" T'Varik continued. \"It's an ostentatious display.\"\n\nNow he glanced at her. \"It's our signature move!\"\n\n\"We don't have a signature move, Sir.\"\n\n\"And we never will that kind of attitude, Missy. Now make the announcement, and hurry!\"\n\nThe Vulcan turned back to her controls and opened a shipwide channel. \"This is the Bridge! All Hands: Brace for... Pouncing.\"\n\nHrelle grinned, hearing the reluctance in her voice as he faced forward again. \"Mister Rrori... Pounce.\"\n\nOutside, the unlucky subject of the Surefoot's attention dodged and dove as best it could, trying to lose it, even as the Starfleet vessel ignored the plasma beams from the other Raiders. The Surefoot dropped down suddenly... and then swooped back up from behind again, slamming down on the aft dorsal side of the Raider. The Raider was larger in size, but the Surefoot's engines were stronger, forcing the Raider down, down... towards two more Raiders who had drawn back to regroup.\n\nInside the Surefoot, various systems protested the unorthodox manoeuvre, while Hrelle's crew worked to compensate, while his eyes remained fixed on the image of the screen. They were getting close- very close- Mother's Cubs, Rrori, are we gonna have sex with them or what?\n\nBut before he could give the order to do so, Rrori pulled them away at the last second, letting the Raider's momentum carry it fully into one of the other two ships, which in turn made it strike the third. All three became a necklace of fiery gems.\n\nThe protests from the systems were eclipsed by the cheers and whoops from various bridge crew members, before T'Varik restored order with, \"Return to your duties, cancel Red Alert, prepare Medical and Damage Control teams... and cease Immigrant Song. Captain, the remaining Nausicaans are retreating. Shall we pursue?\"\n\n\"No, the Nagaina and her crew need our assistance more than the Nausicaans need another ass kicking; alert Starfleet Command of their details and heading.\" As his crew moved to comply, he finally relaxed his grip and spared a glance at the guest who had sat quietly at the Auxiliary Science Station. \"All in a day's work.\"\n\nThe stocky, grey-furred Caitian female, clad in the heavily-decorated red-black uniform of their people's Planetary Navy, grunted at him. \"So why are you looking at me like a cub expecting a treat for performing well? Or do you want a scratch behind the ears? Or maybe just a rub of your belly?\"\n\n\"Oh, could I get one of those, please?\" he asked, lifting up his shirt to reveal his furry stomach, which with some considerable effort on his part he had been managing to reduce in the weeks since the birth of his cub, wanting to get as healthy and fit as possible. \"Just do what you normally do with people, only rub me the right way.\"\n\n\"Oh, I'll rub you alright, you fat-\" The rest of her words were lost as she intentionally switched to Old Caitian, a dialect deliberately left out of most Universal Translator matrices -- and from the guffaws from Rrori and C'Rash, it was probably for the best, at least in this instance.\n\nBut Hrelle kept a straight face, waiting for her to finish before replying with, \"Okay, I'll just take the scratch behind the ears, then.\"\n\nFleet Captain Ma'Sala Shall, his mother-in-law -- and also his kin-mother, which prompted explanations to non-Caitians whenever the subject arose -- narrowed her furred brow... and smirked as she stood up. \"Thank you for the opportunity to watch your ship and crew at work, Captain Hrelle; I might have to introduce the Surefoot Pounce to the escort ships in my fleet. Now, if you'll excuse me, it's been too long since I've seen my grandson... the only reason for coming here.\"\n\n\"Of course, Ma'am.\"\n\nShe winked at him as she departed.\n\nHrelle couldn't stop grinning, even as he dove into the necessary work required following an engagement. Having more Caitians come to visit little Misha and the rest of them was so invigorating -- even on a physical level, with their added musk -- and though he wouldn't have wished an attack on the cargo vessel, he was glad for the opportunity to show off his ship and crew to someone of Ma'Sala's stature and experience.\n\nHe listened to T'Varik and Neheru organise the beam over of the Nagaina's crew and cargo, and studied the damaged vessel, wondering what they had been transporting that piqued the interest of the Nausicaans...\n\n*\n\nDeck 5 Fore -- Cargo Bay 5:\n\nThe two cadets were passing the tricorders over the large, long crates. Neraxis Nemm, a Bolian Security Specialist, frowned, her bald blue head creasing. \"Multiple life forms, large... reptilian?\" She glanced at her friend and squadmate, the lizard-like Kitirik, a Science Specialist. \"Buddies of yours, Kit?\"\n\nNearby, standing next to T'Varik, Captain Koulev spoke up, offering, \"Aldebaran serpents, actually. Three-headed Aldebaran serpents.\" He was a short, slight human in his early forties, with a bushy moustache and the casual air of a man who had spent most of his life eking out a living in deep space. He held his left forearm conspicuously as he nodded to the rest of the crates beamed over from the Nagaina. \"Not buddies to anyone.\"\n\nKit looked to him, the wattles beneath his jaw puffing and flaring red with excitement. \"Indeed, Respected Guest Captain! And they are exceedingly rare!\"\n\nKoulev nodded bemusedly at the young Qarari's enthusiastic reaction. \"Uh, yeah. Rare and valuable, and as a result almost extinct on their homeworld because of poaching. So the Federation has rounded up a bunch of them, put them in stasis and hired us to relocate them on a classified planet in the Tyree system, which is already under protection because of a pre-First Contact planet there. Obviously the Nausicaans had heard about it. And now I'm without a ship.\"\n\n\"Your vessel remains intact, Captain,\" T'Varik reminded him, \"And can be salvaged, once we deliver you, your crew and your cargo to Deep Space Five.\"\n\nNeraxis slung her tricorder over her shoulder, having cleared the last of the crates. \"Three heads? Holy Hraxor, how does it make up all its minds what to do or where to go?\"\n\nKit looked to her, his zeal for the subject obvious. \"Good Friend Neraxis, although they are not sentient creatures, they remain singular entities, with each of the brains controlling a separate function: cognitive deliberation, aggression and territoriality, and limbic functions and sexual drive.\" He wheezed with delight. \"Oh, if only we could revive one of them! The paper I could write for my Biology Final!\"\n\n\"Hey!\" Koulev piped up. \"No one's reviving any of them! They're venomous, dangerous!\"\n\n\"I believe the cadet is merely expressing scientific exuberance rather than planning an actual breach of regulations,\" T'Varik noted dryly.\n\n\"Yeah, well, I'd really like this room sealed and undisturbed, make sure no one enters.\"\n\n\"Such additional security requirements should not be necessary. However, I believe we can accommodate your request. Cadet Nemm, ensure the room is sealed on our departure at the earliest possible time. Cadet Kitirik, I suggest the subject of your Biology Final paper remains the life cycle of the Type-6 Rigelian flu virus; you are less likely to end up inside its digestive tract.\"\n\nShe turned back to Koulev. \"In the meantime, I will escort you to Sickbay, where you can see to the rest of your crew... and to the treatment of your hand.\"\n\nKoulev blinked, glancing down at the arm he held. \"Oh, uh, it's nothing, I just sprained it getting flung from my chair when the Nausicaans attacked.\"\n\n\"That should not overtax our medical facilities. Afterwards you and your crew will be billeted in our Evacuation Barracks on Deck 4; you will be restricted to that area for the duration of your stay, but there are replicators and recreational facilities on hand. If you'll follow me?\"\n\nAs the officers departed, Neraxis turned back to Kit, who was still gazing longingly at the crates like a child desperate to unwrap birthday gifts awaiting him, and smacked his rear. \"Come on, you little bug eater, I've got to lock up.\"\n\nHe turned to his squadmate, straightened up and declared, \"If I possessed your facial features, I would seriously consider learning to walk backwards to spare others the unpleasantness of seeing me.\" Then he asked, \"Was that an acceptable retort, Good Friend Neraxis?\"\n\nShe smirked, leading him out. \"Not bad, but a bit long-winded. Next time, just tell me to kiss your ass; Less is More, and it works so well for the Captain.\"\n\n*\n\nDeck 3 Aft -- Security Suite:\n\nC'Rash sat alone sipping coffee and reading through some PADDs, when she caught the scent of someone familiar entering. \"Evening, Aunt Kami. If you came to collect me for the party, I've got work to do.\"\n\nThe Counselor sat down opposite her, the brown-furred Caitian rubbing her eyes. \"You think I want you there, fighting with Esek over the smoked sleekfish pate and listening to Papa Mi'Tree's thousandth retelling of the Dohlman of Elas?\" She reached out and took the coffee mug from her niece and sipped at it, appreciating its flavour but noting, \"You should have something to wind you down after the engagement tonight, not keep you awake.\"\n\nC'Rash grunted. \"A little early for our Counseling session, don't you think? I thought we were scheduled for 1300 Hours tomorrow?\"\n\nKami smiled. \"We are, but we can always get it over with now.\" She glanced around the empty room. \"And we won't be disturbed at this time of night.\" She set the mug down between them. \"You operated the ship's weapons systems under Captain Hrelle's orders, which resulted in the destruction of at least one Nausicaan ship. How does that make you feel?\"\n\nC'Rash let her tail smack distractedly against one of the legs of her chair. \"I am sorry that circumstances forced me to take action against another vessel which resulted in its destruction and the loss of all hands onboard, although I also recognise that I was under orders to do so, and that the circumstances did not allow for a non-lethal resolution to the encounter.\"\n\n\"Very good. You have the expected answer to the question memorised.\" She leaned in. \"Now... how did it really make you feel?\"\n\nC'Rash stared into the older female's eyes. \"I.... I hated them.\"\n\n\"Why?\"\n\n\"Because... they forced me to kill them.\" She shook her head. \"Why... Why in the Seven Hells do people have to kill? To steal and to enslave and to hurt others, and force others to hurt and kill them to defend themselves or other people? We could all get along, cooperate, it's not like we don't have the technology now to meet our basic needs, or-\" Then she stopped. \"Sorry, I sound like a naive cub.\"\n\nKami smiled. \"There's nothing naive about feeling that way. Everyone does. Even men with Beasts inside them. Speaking of which: let's talk about your fears about my husband.\"\n\nC'Rash started. Weeks before on the planet Skaros, she had witnessed Captain Hrelle, her uncle, slaughter a group of criminals. Admittedly, it was to help Hrelle, C'Rash, Rrori and a group of abducted Federation children escape the criminals, and there had been no other option. But the savage glee which she witnessed in Hrelle's demeanour, the savagery he had dubbed The Beast, had frightened her, and made her concerned for the safety of Kami and her new cub Misha. But a private conversation with their clan's Matriarch Ma'Sala had ended with Ma'Sala declaring her personal trust in Hrelle, and an order for C'Rash not to raise the subject again. \"I- I have no fears about Uncle Esek-\"\n\n\"Liar.\" Kami took a sip from the mug again, grimacing slightly. \"Needs more sugar. Esek told me everything about what happened on Skaros. So did Rrori. You haven't. You had a private conversation with my mother, and since her arrival with the others, you have minimised your contact with her, which suggests she warned you about saying anything to me.\"\n\nC'Rash's hackles rose with anxiety. \"Um- Aunt Kami, I swear I would never- I don't want to-\"\n\nKami reached out and touched the younger female's hand reassuringly. \"When I was last on Cait, and I met Mirow's mother-in-law Jnill, she had made a remark about Esek being a potential abuser of cubs. And I smacked her across the room for it. But she said what she said because she was a nasty, stuck-up bitch -- and I'm so delighted that her daughter is nothing like her -- but I have no doubt that any fears you might have about Esek and the safety of myself and Misha would not be out of malice.\n\nI understand how you might feel about him. But Esek tells me everything he's done, everything he's felt... and I remain unafraid of him. In fact, after I'd killed someone, I think I understood him even more.\"\n\nC'Rash frowned. \"You've killed? When? Who?\"\n\n\"Before you came onboard, on the old Surefoot. A Ferasan. Sasha and I had been imprisoned, one of them was holding me, another had just broken Sasha's arm. And I... I killed the one holding me, before going after the other, ready to kill him too. Kill him with the same savage zeal I'm sure you saw in Esek on Skaros. All Caitians carry it within us: guilt at the taking of life, guilt at the ferocity we unleash -- but tempering this with the knowledge that in the defence of cubs, of Clan, of crew, even of oneself... it's necessary.\n\nI share your wish, that the Universe would allow all of us to work together without violence, without the need to bring forth the Fury of the Great Mother. But we both know that it's just a wish, nothing more, and it won't come true. Just as I wish you will never have to feel that same Fury, that you will never have to kill with your claws and fangs... I think you probably will. And I'm sorry.\"\n\nShe patted C'Rash's hand once more before rising -- taking the coffee with her. \"Forget about the party. Go have some fun with T'Varik. Tell her you need to unwind after tonight. And no more coffee.\"\n\n*\n\nDeck 2 Mid -- Officers Mess Hall:\n\nMi'Tree Shall laughed with booming delight as the infant on his lap clamped onto his grandfather's finger and bit down, growling. \"Yes! That's it, my darling cub! Don't let go!\"\n\nThen his chuckles ebbed, and the discomfort on his elderly face became obvious. \"You can stop now, Misha. Please. Let go now, sweetheart. Ouch. Ouch!\" He looked over to his husband. \"Some help here, please, if you don't mind.\"\n\nBneea set aside his plate and rose, approaching and gently but firmly unlocking Misha's mouth from Mi'Tree's finger, before lifting the infant up entirely. \"What did I tell you? That sets a terrible precedent! How's he supposed to know that biting people is wrong if you encourage it?!\"\n\n\"He's a clever cub,\" Mi'Tree justified, licking his wounds. \"He knows the difference. He just doesn't know how sharp his teeth can be.\"\n\n\"Oh, so he was biting you on purpose, was he? Well, I can hardly blame him for that.\" He sat down, Misha on his lap now, and stuck a reinforced Caitian pacifier into the cub's mouth. \"There; chew away, even if it isn't as tasty as your Idiot Grandpapa.\"\n\nMi'Tree continued to lick at his wounds; he was a slightly older, slightly stockier male compared to Bneea, but their resemblance remained striking, from the days when Mi'Tree had been a famous star in the action vivids, and Bneea his stunt double. \"You never mind nibbling on me from time to time-\"\n\nThe doors slid open, and Kami entered with her firstborn Mirow and his wife Ptera, who had accompanied the grandparents on the visit. It took less than a heartbeat for Kami to assess the situation and scowl. \"Papa! What did I tell you?\"\n\nMi'Tree's eyes widened. \"It wasn't Misha this time! I... bit myself.\"\n\n\"Of course you did.\" Kami bent down and rubbed her muzzle against her infant's own, making him purr. \"I'm going to spend weeks correcting all the bad habits my family is imprinting on him.\"\n\nMirow walked up to the buffet table with Ptera, laughing. \"Hey, don't lump us in with those reprobates, Mama!\" Still smiling, he asked, \"I assume that Red Alert we were on went well?\"\n\nThe Counselor smiled. \"It gave Esek a chance to show off to the Matriarch; that'll get his fire going. I might have to ask one of you to mind Misha tonight.\"\n\nMi'Tree raised a wounded finger. \"We will be both honoured and delighted to-\"\n\n\"-To get him overexcited with irresponsible roughplay, all night long.\"\n\nMi'Tree's voice boomed. \"It is the divine duty of parents to be responsible... and grandparents to be irresponsible!\" He chuckled. \"Speaking of which, where's our Tailless Cub? She doesn't get enough doting... or food! She's too skinny!\"\n\n\"Sasha's a busy girl onboard,\" Kami reminded him. \"She'll be by later before she retires for the night... no doubt sporting the gift Ma'Sala brought her.\"",
        "\"Assuming she hasn't buried them into Hrulish's hind quarters,\" Bneea joked.\n\nMention of the name elicited a groan from Ptera. \"And once again I must apologise for him. He's... very traditional. He doesn't mean to be... well...\"\n\n\"A pompous kussik?\" Mi'Tree suggested.\n\n\"Papa!\" Kami scolded. \"He's her uncle!\"\n\n\"No,\" the other female disagreed. \"He's right. My uncle is a pompous kussik. I told him to be nice to Sasha while we were here and keep quiet about his opinions on humans, but he can't help himself.\"\n\nMi'Tree pointed his injured finger in her direction as his voice rose with righteous indignation. \"Yes, well, our Sasha's just as good as any Caitian as far as the Shall Clan is concerned! So he damn well better start helping himself, or he'll have to answer to me!\"\n\nStill on Bneea's lap, Misha began to mewl at the raised voice. Kami gathered up the infant and started rocking him as she gave her father a sour expression and a measured voice. \"This isn't the occasion for one of your heroic speeches from the vivids, Papa. And you do not have to apologise for your uncle's attitude, Ptera. And as for the rest of us: Sasha does not need anyone's help to defend her place in our clan.\"\n\n*\n\nDeck 3 Fore -- Training Room:\n\nSasha took the Ready Stance on the mat before the automated training module, making the appropriate flinches in her hands: come on, you've got an audience, even if it is just an audience of one this late at night-\n\nThen she felt the reaction in the gauntlets, as the memory metal in the fingertips automatically curled up and formed into centimetre-long tritanium curved claws.\n\nShe struck out against the module, dodging the preprogrammed blows its arms shot out at her, as she ducked and dived, striking back, the claws raking against the black metal surface, causing sparks.\n\nFinally she drew back, the module automatically stopping as well, as she looked to her friend. \"Well? What do you think?\"\n\nOn an adjacent mat, practising with a pair of short Capellan swords against her own module, Eydiir Daughter-of-Kaas straightened up and lowered her weapons as she regarded the effects of the gauntlets. \"I prefer to keep the enemy at a reasonable distance.\"\n\n\"Ya wanna try them?\"\n\n\"No. What if I was scratching my rear end while I was wearing them and accidentally popped out the claws?\"\n\n\"Then you'd probably end up brain damaged,\" Sasha retorted, offering a raised middle finger before marvelling at the engineering behind the gauntlets. \"Now I can move up to Tier Six in K'Gressir, and not feel like- well, like-\"\n\n\"Like a fraud?\" a new voice prompted.\n\nBoth young women turned at the new arrival to the gym: a handsome Caitian male in his mid-forties, slate-furred and clad in a smart black civilian suit, his tail swishing lazily behind him as his snout twitched at the ambient scents in the room. He spoke with the crisp polished Northeastern accent he shared with Ptera -- but garnished with extra privilege and arrogance. \"Was that what you were going to say, Ms Hrelle?\"\n\nSasha straightened up, controlling herself as best she could. \"No, Sir. I was going to say 'Not feel like I'm going to have my ass handed to me if I face a Caitian opponent at Tier Six, when they use their claws'.\"\n\nHrulish tucked his hands into his pockets and chuckled. \"If that's such a fear for you, maybe you shouldn't be playing around.\"\n\n\"I'm not playing, Mr Hrulish. And I don't back down easily.\"\n\nHe nodded at that. \"How intrepid. Or short-sighted. After all, K'Gressir is a Caitian martial art. And Caitians have greater strength, speed, stamina, agility, reflexes-\"\n\n\"Humility,\" Eydiir added.\n\nThe Caitian ignored the comment, pretending to be interested in the exercise and training equipment. \"Quite a ship you have here. My clan's company manufactures the spaceframes for many Caitian vessels of similar size, so I can appreciate the design and innovation on display here.\" He looked at Sasha again. \"I don't want you to think that I can't acknowledge the inestimable gifts of humanity, young lady.\"\n\nSasha crossed her arms over her chest -- careful not to accidentally extend the glove's claws, after hearing Eydiir's warning -- and stared back. The male had been snide and barely polite with Sasha ever since he arrived with the others, but she maintained the high ground and didn't give into his remarks. Still, she wasn't going to just roll over and take it like a Ferasan. \"No. You just don't like the idea that a human might embrace Caitian culture.\"\n\nHrulish smirked again. \"Please understand, I don't blame you, young lady. You certainly haven't made a deliberate effort like some humans your age might do, seeing our culture as exotic or fashionable. It's the fault of your upbringing, the influence of your stepfather, and the members of the Shall Clan.\"\n\nThen he drew closer, affecting an air of someone genuinely trying to assist another in seeing the light of his wisdom. \"But, speaking as an impartial observer, who is more interested in maintaining the purity of his culture than in sparing your feelings, let me tell you this: it's one thing to learn a few words of Old Caitian, or take a couple of lessons in K'Gressir -- or even be included in the Clan Registry and gain citizenship of my world. But you need more than that to be Caitian. You need to feel the Fire. The Fury. The Heart of the Great Mother inside you.\"\n\nShe steeled her expression challengingly at him. \"You think I can't?\"\n\nHe smiled condescendingly. \"I think you think you can. Have you been in battle? I mean genuine hand to hand combat, grappling with a foe you must kill, before they kill you?\"\n\n\"Sure,\" she began -- but then amended, \"I've- I've never had to kill-\"\n\nHrulish nodded. \"Well, as a decorated veteran of the last war with the Ferasans... I have. Many times. And when you're locked in a fight to the death, feeling the hot breath of your opponent on your face, your teeth and fangs clawing away at them as they do the same to you... a Caitian feels the Great Mother inside them, fuelling them, guiding and shielding them. A true child of the Mother... a true Caitian... understands this.\" He glanced towards the doorway. \"I heard that there was an Arboretum on this deck. Can you point me in the right direction, please?\"\n\nNumbed by his words, Sasha nodded at the exit. \"Head out, go left, around the wide corridor, three doors down, it's marked.\"\n\nHe smiled genially. \"Thanks, Ms Hrelle. Have fun.\"\n\nAs he departed, Eydiir set down her swords. \"Your relative is a prattling, fen-sucked fool.\"\n\n\"He's not technically a relative, as I understand it. When Mirow married Ptera, he joined the Mroara-Lnee Clan, though Mirow remains my kin-brother, and Ptera my bond-sister.\"\n\n\"Hmph. Well, whatever he is to you, his words are hollow.\"\n\n\"Hollow?\"\n\nThe Capellan nodded. \"I do not believe his boasts. He reminds me of Giles in the early days-\" Then she stopped and looked guilty. \"Forgive me, I did not mean to bring him up.\"\n\nBut Sasha shrugged. \"Hey, it's no big deal, we're still speaking to each other, I'm not lying in my bed crying myself to sleep each night over our break-up. Especially considering I was the one who initiated it.\" She removed her gauntlets. \"I need a shower; unlike Caitians -- whom I will apparently never be like -- I sweat like a pig.\"\n\n*\n\nDeck 5 Fore -- Cargo Bay 5:\n\nThe room was locked, quiet, dark and cool. When it had been that way for a particular amount of time, a hidden sensor on one of the stasis crates activated, reviving the occupants, tightly packed within. They uncoiled and emerged, weapons drawn, slithering around and examining the interior of the bay, before moving to the other crates, reviving their occupants. They emerged too, with more weapons, and equipment. And a plan.\n\n*\n\nDeck 3 Fore -- Sickbay Suite:\n\nAs the last of the crew of the Nagaina was being examined, Doctor Ling passed a sensor wand over the forearm of Captain Koulev, frowning. \"Are you sure you're injured, Captain? I'm not detecting any damage with your hand.\"\n\nThe man stared at her intently, keeping his voice low from the rest of the occupants of the Suite. \"Actually, Doctor, I think it might be a reoccurrence of... Janus Syndrome.\"\n\nLing paled at the mention of the condition, nearly dropping her instrument, her face tightening and her heart racing.\n\nKoulev continued staring hard at her. \"Perhaps we can discuss it further in your office?\"\n\nShe nodded numbly, guiding him to the room and closing and locking the door, before stepping back from him. \"You're with-\"\n\n\"The Bel-Zon?\" Koulev nodded. \"Just like you.\"\n\n\"I'm not with them.\"\n\nHe smirked. \"You take their money. You do their bidding. You're with them. Now me, consider me Middle Management in the organisation.\"\n\nHer hands clenched into fists. \"The attack on your ship-\"\n\n\"A ruse, to get the crates onboard safely. They should be out and about from them by now.\"\n\n\"Who should?\"\n\nHe smiled. \"The Vlathi.\"\n\nLing felt like her heart jumped into her throat. \"The Vlathi? Why the hell are they onboard?\"\n\n\"Why do you think? After Captain Hrelle's recent activities on Skaros, our employers have decided to finally finish him off... and using the Vlathi will point the finger at the Skarosians rather than at the Bel-Zon.\"\n\nLing fought to control her breathing, as she moved to a bottle of Saurian brandy on a shelf behind her desk, pouring out a generous helping for herself. \"How many of them are onboard?\"\n\n\"A dozen. They will be emerging by now, taking over Auxiliary Control, locking the off-duty personnel in their quarters, restricting movement and setting up a dampening field generator to neutralise phaser, sensor, communications and transporter use. Did you manage to secretly implant any of the Caitians with tracers as ordered?\"\n\nLing bristled. \"Yes, the Counselor's infant; the tracer's on Local Subspace Frequency 47. But that's no guarantee that Hrelle will be nearby him.\"\n\n\"Doesn't matter. Their orders are to kill all the Caitians they find.\"\n\n\"All?\" Ling turned back to him. \"Including Misha? Why do they have to kill him? He's a baby, for Pity's sake! What could he have done to deserve that?\"\n\nKoulev regarded her curiously. \"An inconvenient time to grow a conscience, Doctor; just be thankful you haven't been ordered to do the job yourself. The Vlathi will move out, they'll do the deed while my crew commandeers the Shuttlebay, and then we'll steal a couple of the warp shuttles and rendezvous with a Skarosian vessel.\"\n\n\"There's more Caitians than you might be aware of; they have family visiting.\"\n\nKoulev shrugged. \"It won't matter. The Vlathi will have big appetites after being in stasis.\"\n\nShe emptied her glass, and poured herself another. \"Why are you telling me all this?\"\n\n\"Consider it a courtesy call. The Bel-Zon have been most pleased with the reports you've sent them since signing up with Hrelle's crew. And obviously, after the Vlathi have made a snack of him and his brood, you'll be reassigned elsewhere, to continue your services in a similar fashion.\"\n\nShe glared at him, shaking her head. \"Forget it. I'm done with them.\"\n\nKoulev stepped forward, his face a taut, confident mask. \"Doctor... you're done when the Bel-Zon say you're done.\" He smiled. \"Just keep your eyes on the monies accumulating in that Orion account when you finally retire. No modest living for you with the rest of the Contented Masses.\"\n\n\"I didn't do it to live well. I had- I had issues-\"\n\n\"I'm not interested in your backstory, Doctor. Just your compliance.\" He left her at that.\n\nLing finished her second glass, welcoming the rush but wishing it did more... like numb her to the predicament she'd found herself in- no, put herself in.\n\nShe resisted the urge to indulge in a third glass, sat down at her computer and quickly began researching the Vlathi, identifying the nature of their attacks... and ordering from the replicators the treatments she expected she would need, hoping she would have time and opportunity to implement them. Or better yet, that something would happen to not make it necessary.\n\n*\n\nDeck 5 Fore:\n\nTwo of the Vlathi completed the connections between their generator and a power conduit in the wall near the door. At a nod from their leader, they activated it. The displays indicated success.\n\nNearby, in Auxiliary Control, others completed the overrides, successfully seizing control of the ship -- without the crew on the Bridge even being aware of it.\n\nThey redirected the ship towards the Skarosian system, and initiated Lockdown.\n\n*\n\nDeck 2 Fore -- Bridge:\n\nNeheru was sitting in the Command Chair, having taken over the Midnight Shift with Delta Squad manning the stations, when Squad Leader Isabelle Zhou, standing at Ops behind him, asked, \"Did you feel that?\"\n\nThe Kelpien looked behind him at her. \"Feel what?\"\n\n\"We altered course.\"\n\nNeheru blinked, then turned forward again towards the Helm. \"Mr Utrecht?\"\n\nThe young cadet moved his fingers over the controls before him. \"We're still on course for Deep Space Five, Lieutenant.\"\n\n\"No,\" the Englishwoman insisted. \"We shifted! I've grown up on starships all my life, I know what I'm talking about, Sir!\"\n\nNeheru regarded her for a moment, before tapping his combadge. \"Bridge to Engineering.\" He frowned at the lack of response. \"Cadet Guforg, check Communications. We may have suffered damage from our engagement with the Nausicaans tonight.\"\n\nThe Tellarite female's hooves moved anxiously across her station panel. \"I can't reach Engineering, Sir! But the Board shows All Clear!\"\n\nNeheru rose, strode around and moved to the Bridge doors -- stopping when they failed to respond. He tried the Manual release, finding it inoperable.\n\n\"Sir?\" Zhou prompted.\n\nHe took a moment, to control his rising anxiety, before finally responding, not just to her, but to the rest of them, trying to exude confidence, the way Captain Hrelle did. \"Stay calm, all of you. This may simply be a malfunction that is currently being repaired even as we speak. However, I am concerned at our lack of control, communication and access. Cadet Guforg, retrieve the Emergency Engineering Kit from under your station and work on opening the door. Mr Zajan, there is a possible access to the Jefferies tube behind the Secondary Science station-\"\n\n\"There is?\" the Suliban male exclaimed. \"Are you sure, Sir?\"\n\n\"I was present in the construction of this vessel, Cadet, so I can safely say Yes. You will need to dismantle the isolinear interface panels to get to it, but the panels are modular in design and you should not need tools, but take your time and be careful. The rest of you: stay at your posts. Should control resume, I'd rather we're not caught off-guard if we find ourselves flying into a star.\" At their expressions, he elaborated, \"Just a joke.\"\n\n*\n\nDeck 2 Mid -- Officers Mess Hall:\n\nHrelle had already been pleased that members of his clan, and those from the clan that had taken in Kami's firstborn Mirow, had come to visit, to bond with Misha and bring gifts for Kami and Sasha. But when he heard they had also brought some fresh, non-replicated food with them to have a real Clan Feast, well, he had almost advanced-ordered some uniforms in larger sizes from the fabricator, to accommodate what he intended to consume tonight.\n\nAs it happened, however, he proved more restained, selecting only a little of everything from the spread Mi'Tree and Bneea had cooked and provided. And though he always believed it a myth that replicated food was never as good as the real thing... he now had to reconsider that notion.\n\nAnd it was a delight to see Misha, now on solid foods to a limited degree, trying out Noso Beans and nibbling on shuris skin cracklings, greedily devouring those items he liked, and blowing raspberries at those he didn't.\n\nThe infant now sat on Ptera's lap, the young female surgeon giving off the broody scent, and making Hrelle wonder when she and Mirow might start planning their own. \"Where's C'Rash? She should be in here, tucking into this fine fresh food and keeping Mirow from hogging all the pies.\"\n\nAcross from her, her husband raised his head from his plate to ask, with stuffed cheeks, \"What?\"\n\nAt the end of the table near her fathers, Kami replied, \"She's spending the evening with Commander T'Varik.\"\n\n\"Tucking into something else,\" Hrelle quipped, pretending not to see his wife's disapproving eye at his remark.\n\n\"She seems a strange choice for our niece,\" Mi'Tree noted, reaching across to wipe some bean sauce from Misha's muzzle. \"Don't Vulcans only rut once every seven years?\"\n\n\"No,\" Kami corrected. \"They have an unignorable biological urge to do so every seven years, but they can have sexual urges at any time.\" She pointed a finger at Hrelle. \"And you should be showing more respect to your First Officer.\"\n\nHrelle blinked. \"I am! And I'm glad that she's finally stopped working her tight little toches off and started enjoying herself. With C'Rash's hot and eager help.\"\n\n\"And how do you know her toches is tight and little?\" Kami teased.\n\n\"Um... it's logical?\"\n\nThen the computer piped up. \"Captain Hrelle, please report to Main Engineering.\"\n\nHrelle rose. \"Duty calls.\" He leaned in and rubbed the side of his muzzle against Kami's and Misha's, and then picked up his bottle of Farshnosh. \"Don't overfeed him, he's got his father's fat genes to fight against.\"\n\nAs he departed, Ma'Sala, sitting at the end of the table with a pile of barbecued shuris ribs in front of her, grunted. \"Kami...\"\n\nHer daughter looked up. \"Mama?\"\n\n\"Your husband's a good Captain. Very good. See if he wants to leave Starfleet and join the Caitian Planetary Navy.\"\n\nKami smirked, but then sat up as her combadge chirped and announced. \"Counselor Hrelle, this is Dr Ling. Can you bring Misha and yourself to Sickbay, please? As soon as possible?\"\n\nKami's smirk dropped. \"What's wrong, Juliet?\"\n\n\"I'll explain when you get here. It won't take long, but I'd appreciate it if you could hurry.\"\n\n\"Okay, we're on our way.\" She rose and collected the infant. \"I doubt if Esek will want to leave Starfleet, Mama -- and neither do I, thank you for asking by the way -- but I'll mention it to him.\"\n\n*\n\nSuch was his delight at the evening as Hrelle emerged from the turbolift on Deck 4, that he didn't notice the strange scents in the air until he was several metres down the corridor. Then he stopped and sniffed the air. Human... and something else? He knew the crew of the Nagaina were billeted on this deck in the Emergency Barracks-\n\nHe tensed as he heard someone rushed up towards him from around the corner -- a young, fresh-faced human in a one-piece beige utility outfit -- and wielding some sort of short rifle. \"Hold it, Captain! Put 'em up!\"\n\nHrelle blinked -- and then began drinking from the bottle still in his hand and swaying. \"'Put 'em up'? Put what up where, bubulah?\" He chuckled to himself, leaning against the nearest wall. \"Oh, this Farshnosh has me hammered!\" He drank from the bottle again.\n\nThe human blinked. \"Uh- Your hands! I said put them up! You're coming with me!\"\n\nHrelle looked at him and smiled, his words slurring now. \"Ish thish a joke?\" He pointed a swaying finger in the human's direction and chuckled again. \"My Firshth Officer shent you, didn't she? She's got a wicked shensh of humour-\"\n\nThe human tightened his grip on his weapon as he approached, almost putting the barrel of the gun to Hrelle's head. \"Quiet! We're going to the Shuttlebay, and you're not gonna give me any trouble, right?\"\n\nHrelle smiled as he made a shushing sound, but then replied with, \"Sorry, can't promise you that, Stroke-off.\"",
        "Swiftly he reached up, twisted the weapon out of the way and kicked the man between the legs, before booting him in the stomach as he doubled over. Hrelle dropped his bottle and shifted the weapon so he held it fully, examining it: a primitive-looking ballistic rifle, something he didn't expect to see, even though Starfleet ships usually carried a small cache of such weapons in the event of entering environments where phaser-based arms were unusable or impractical.\n\nHe drew up to the man, who was jackknifed on the floor, coughing and dry-heaving, and kicked him onto his back, before stepping away, raising the weapon. \"Next time, keep your distance.\" He tapped his combadge. \"Intruder Alert.\" With no response he tried again. \"Hrelle to Bridge! Hrelle to Security! Computer: Respond, Priority One!\"\n\nHe nudged the man with his boot. \"Who are you? What are you doing on my ship? Why was I called down here?\"\n\nHe was moaning. \"Can't- Can't breathe-\"\n\n\"Sure you can, boy.\" Hrelle approached and set his boot on the human's chest. \"At least, you will until I put my full weight on you, smash your ribcage and pierce your heart with the broken bits. Shall we try that, or are you gonna start talking?\"\n\nHis breath quickening, the human shook his head. \"Was sent- to bring you to the Shuttlebay- make it easier with you out of the way first-\"\n\n\"Make what easier?\"\n\n\"Ship takeover- Captain Koulev- the Vlathi-\"\n\nHrelle's hackles rose. \"The Vlathi?\" He knew about them; his extended time undercover on the planet Skaros turned up a number of rumours about them, a guild of assassins operating under the control of their absolute monarch, the Imperium. They were said to be strong, fast, vicious, venomous... and sometimes ate their victims. \"How many?\"\n\n\"T-Twelve- my crew- helping them- got a dampening field- knocking out phasers, communicators, transporters- you can't win-\"\n\nHrelle grunted; that explained the ballistic weapon in his hands. \"What for? You're hijacking my ship? Taking us back to Skaros for ransom?\"\n\nThe human's face remained creased in pain, but he struggled to laugh. \"You... your family... every Caitian onboard... marked for death...\"\n\nHrelle's face tightened. \"Where are the Vlathi now?\"\n\nBut the human kept chuckling. \"Hope... you said goodbye... to your little bastard...\"\n\n<br >Hrelle drove his boot down on the man's face and left him there, gripping the weapon in his hands as he rounded the corners, listening ahead; he could hear sounds forward, towards the Emergency Barracks, and the Shuttlebay, but there were closer, more familiar voices aftward, towards Engineering, and he headed that way-\n\n-Nearly running into a forcefield in the doorway leading to Engineering, and Chef Grev, holding up his hooves. \"Captain, watch it! Security fields are up over every juncture! We don't know what's going on!\"\n\n\"It's a hijacking.\" He told Grev everything he knew. \"Get your team back inside Engineering, bring down the doors, lock up, and shut down the engines. Eject the warp core if you have to, I don't want my ship going where they're taking us. Then focus on trying to regain control from inside. Do whatever it takes. Understood?\"\n\nThe old Tellarite looked at him, before narrowing his beady black eyes and nodded. \"Yes, Sir.\"\n\n\"Get moving.\" He turned, absently listening to the Chief Engineer bark orders to his shift crew, and then rolled the doors down and locking them, as Hrelle's thought raced up several decks, to Kami, Misha, Sasha... he knew he had a whole ship and crew to think about, but he couldn't stop going back to them- No! He forced himself to stay focused as he moved forward, picking up the scents and sounds he detected earlier.\n\nHe stopped when the voices became clear. One of them was the Nagaina's captain, Koulev. The other was more sibilant, and accompanied by sounds like something being dragged around. \"Monty will be bringing the Captain along in a minute. But their doctor said there are more Caitians onboard than just the four of them.\"\n\n\"Good. We will enjoy the hunt. Did she manage to put tracers in any of them?\"\n\n\"Just the infant.\"\n\n\"Even better. Hotbloods don't stray far from their hatchlings. What iss the frequency, Kenneth?\"\n\n\"Subspace Channel 47.\"\n\nHrelle's breath quickened. The doctor? Did they mean Kline, the Klingon from the Medical Exchange Program? No, they said 'she'... Doctor Ling? No! They had served together for nearly two years now! She wouldn't have-\n\n\"You can trace the location of the rest of them with your scanners,\" Koulev was saying. \"This time of night, most of their crew will be locked in their quarters, we've locked down the turbolifts, and the force fields will be up at the junctures. But there may still be enough crew around to cause trouble.\"\n\n\"Not with their phasers unable to function -- unlike our own weapons. You and your men secure the Shuttlebay and-\"\n\nThe rest of their conversation was lost as Hrelle caught the scent of someone unfamiliar trying to sneak up on him, and he turned and struck first...\n\n*\n\nDeck 3 Fore -- Arboretum:\n\nThe lights were down, and the junctures leading back to the crew and cadet quarters had force fields erected, but there was a clear way to the Arboretum, and the door opened for her approach, letting the collective scent of flora and soil drift out. \"Mr Hrulish?\"\n\nThere was no answer, and she thought he might have already returned to his quarters before the lockdown commenced, but she entered anyway. It wasn't a part of the ship she had visited much since they had boarded; it seemed superfluous, when one had Holosuites that could recreate any natural environment from a thousand different worlds and times.\n\nBut she could appreciate the need to have a corner of the ship with real, living things, to ground one; it also helped those Medical and Science cadets running Botany projects.\n\nThere were sectioned areas where flowers, bushes and trees were planted, and in the background, she could hear a soft chirping from some insects. There was more emergency lighting in here than in the corridor, given the particular needs of some of the plants. \"Mr Hrulish?\"\n\nThere was a sound in the corner, and her eyes fixed on the figure reclining on some grass, like he was back on Cait looking up at the stars. Now he sat up leisurely, tail swishing idly behind him. \"Oh, look, it's the Human Who Wants To Be A Caitian. And what can I do for you, Ms Hrelle?\"\n\nSasha fought down the urge to respond to his taunt, preferring to remain professional as she approached him. \"Sir, something's happening, and I wanted to make sure you were okay.\"\n\nBut he seemed sluggish, uncaring, helping himself back to his feet. \"That's awfully nice of you, young lady, but I'm rather enjoying the scents of this room. Very conducive to meditation.\"\n\nShe frowned at his insouciant response -- then noticed something he left on the grass, reached down and picked up... a small silver box, its lid opened to reveal a powdery substance with a strong scent escaping it. \"Is this yours, Sir-\"\n\nSuddenly he snatched it from her, cursing when some of its contents spilled out as he closed the lid shut. \"I'll thank you to mind your own business, Ms Hrelle!\"\n\nShe stared at him. \"That's snuff, isn't it? Caitian snuff? It's an addictive substance.\"\n\nHe pocketed the box in his jacket. \"Perhaps to Lowborns unable to handle its deleterious effects. My clan are made of sterner stuff.\"\n\n\"It's also illegal, whether you're Lowborn or not. I'll have to report this, Sir.\"\n\nHrulish smirked at her. \"My Clan can trace its ancestry back to the First Landing, Human. You think I'll be intimidated by- by-\" He stopped and frowned towards the doorway, his muzzle twitching. \"What in the Seven Hells...\"\n\nShe didn't know what he meant, her nose not being as strong of course -- then she heard the sound outside: a heavy sliding sound.\n\nAnd then something large entered.\n\nSasha first saw a torso, with long, thin arms ending in long thin claws on its digits, and topped with a head that rose up high, and cowled. The rest of its body... was serpentine, a long singular tube of leathery flesh and muscle that propelled it along as it drew in fully, coiling around itself as it regarded the two of them.\n\nHrulish's breath quickened. \"I'm- I'm seeing things...\"\n\n\"No,\" Sasha countered, her own pulse racing as she stared at the figure blocking their way out. Her first thought was that it was one of the Aldebaran Serpents that had been rescued from the Nagaina and had somehow escaped from stasis. But this thing only had one head, even as it exhibited every other snake-like attribute, including a forked tongue. \"I- I don't know what it is-\"\n\n\"It iss a Vlathi,\" it helpfully provided. \"It thinks and speaks, Hotblood.\"\n\nSasha shifted in place, taking a defensive stance, kicking herself for not thinking it could have been sentient. \"What do you want?\"\n\nThe Vlathi bobbed and swayed slightly, as if adopting a stance of its own, as it pointed a claw in Hrulish's direction. \"The Caitian. Stand aside and let me have him.\"\n\nHrulish gasped. \"M-Me? What do you want me for? What did I do?\"\n\n\"The Imperium of Skaros demands your death. The death of all Caitians onboard the Surefoot.\"\n\nSasha's heart skipped a beat. Skaros, she knew about, from the accounts by her Dad, C'Rash and Rrori. But she focused on the Vlathi's response about killing all the Caitians. \"No- you won't get away with that. This is a Starfleet vessel-\"\n\n\"We are already 'getting away with it', Little Starfleet,\" it informed her with its a sibilant sneer. \"But we have no quarrel with you. Step aside. I'll be quick with this one.\"\n\nHrulish was shaking his head and holding up his hands towards it. \"N-No, wait- my clan has money- I can get you anything you want-\"\n\nThe Vlathi rose up a little, making an angry sound as if insulted by his offer, but stayed focused on Sasha. \"I will not make my offer to spare your life a third time, Hotblood.\"\n\nAs she kept her gaze on him, Sasha had already worked out her options... there weren't many. She could have stepped aside, departed, on the pretext of going for help, for weapons. But, assuming the Vlathi wasn't lying and would attack her anyway, it could still take down Hrulish.\n\nTogether, however, they might have a chance against it... if she could get her gym bag opened to get at the contents within. \"I can't go... This man... is my responsibility. I'm sure we can come to some reasonable compromise-\"\n\nThe Vlathi's hooded head shot forward, snapping.\n\nSasha reached in, pulled out her damp, sweaty towel and threw it towards the creature's head, before grabbing the gauntlets beneath. \"Hrulish, come on! We can fight it together!\"\n\nThe Caitian stared at her.\n\nAnd ran away.\n\nThe Vlathi flung aside the towel and lunged towards her.\n\n*\n\nDeck 3 Fore -- Sickbay Suite:\n\nKami had been concerned when Dr Ling had summoned her, asking her to bring Misha along. Now her concern doubled as she saw the look on the woman's face -- anxious, almost frantic, and... guilty? -- and the confused expression on Eydiir's face nearby. \"Juliet, what's wrong?\"\n\nThe woman was almost pacing. \"About time you got here. Come on.\" To Eydiir, she barked, \"Go back to your quarters, Cadet! Immediately!\"\n\nThe Capellan girl rose from the desk where she had been studying. \"What is wrong, Doctor?\"\n\n\"Nothing! Just go, now! That's an order!\" She kept glaring at the confused cadet, until the latter complied, picking up her sports bag and departing.\n\nThen she focused on the Counselor and her infant -- who hissed at Ling. Ling ignored her. \"Kami... I made a mistake. I'm sorry.\"\n\n\"Sorry? For what? Juliet, you're scaring me-\"\n\nLing moved over to a tray and lifted up a hypospray. \"The Nagaina crew- they brought something onboard with them, something I didn't detect at first- it could be fatal for you and Misha-\" She stopped and looked straight at her. \"Hopefully it's not too late. May I?\"\n\nKami's pulse quickened. \"Yes! Yes, do what you have to!\"\n\nLing nodded and injected the other woman, and after adjusting the dosage on the hypospray, injected the still-hissing Misha. She stepped back, looking a little less frantic now. \"I want to keep you both under observation for a little while. In the Isochamber.\"\n\n\"What? Are you sure?\"\n\n\"Yes! Now please, get in there! It'll only be for a short while!\"\n\nBemused, Kami carried her infant into the reinforced chamber, before looking back at Ling. \"Wait, what about Esek, the others-\"\n\nThe lights went out, and the ship shuddered to a halt as it dropped out of warp space. Ling shut the door completely, activating the manual deadlocks.\n\nPanic rose in Kami now. \"Juliet! What's going on! What are you doing?\"\n\nLing glanced around in the darkness, not able to look at either of them. \"I'm sorry. I'm sorry...\"\n\n*\n\nDeck 3 Mid -- Alpha Squad Cadet Quarters:\n\nEydiir entered, glaring at Jonas and Kit, who were sitting at the table, the Durotta board game between them. \"Get up. Something's happening.\"\n\nHer fellow squadmates rose, Kit tilting his head towards her. \"Is this a prelude to a practical joke or some hazing ceremony, Good Friend Eydiir?\"\n\n\"Neither. Where are the others?\"\n\n\"Rrori's with the other Caitians in the Mess Hall, Neraxis is on duty in Security. Wasn't Sasha with you?\"\n\nThe Capellan nodded. \"We'll go back for her first-\"\n\nShe was standing in the doorway when the lights went out and the door to their quarters starting sliding shut on her, something it should not normally have done. She dropped her bag and propped herself against the doorframe, forcing it to stay open, her face grimacing. \"Chair- Quick-\"\n\nJonas grabbed his own chair and brought it over, manoeuvring to lodge it where Eydiir was standing, keeping it from closing entirely. Eydiir stood outside in the corridor, glancing around. \"Try to hail the Bridge.\"\n\nJonas tapped his combadge repeatedly, without success, before looking up as he felt the ship shudder to a halt. \"That felt like a Cold Shutdown! We have to get to Engineering-\"\n\n\"No. We have to get to Sickbay- something's happening there, involving the Counselor and the Cub.\"\n\nMention of Kami and Misha galvanised the two cadets. \"I'll get my Engineering Gear, we might need it.\"\n\nKit looked out at Eydiir. \"What do you think is happening, Good Friend?\"\n\nShe didn't answer, not having felt like this since she was a child, back in her tribe, as they prepared for an ambush from one of their neighbouring tribes during a Blood Feud...\n\n*\n\nDeck 2 Fore -- XO's Quarters:\n\nT'Varik lifted up her head. \"We have dropped out of warp.\" She rose up fully from where she was.\n\nBeneath her, C'Rash bolted upright, hissing. \"Mother's Cubs, do you know how close I was?\"\n\n\"Of course; I have become quite familiar with your body, as you have no doubt noticed.\"\n\n\"Oh, very funny -- you had some fun first!\" But C'Rash set aside her frustration and rose, dressing quickly to catch up with T'Varik, even as the Vulcan tried her combadge on the side table of her bed, and then her wall intercom, failing. The Caitian never tried her own combadge, instead snapping, \"Where do you keep your phaser?\" When T'Varik didn't respond, she reminded her lover, \"All senior officers are required to keep a hand phaser in their quarters. Where's yours?\"\n\nThe Vulcan moved to her desk. \"I am certain it will not be required.\"\n\nBut when C'Rash followed her, retrieved the weapon and checked its status, finally pointing into a corner of the corner of the room and confirming it would not function, she countered with, \"Think again. Have you any other weapons? Blades? Clubs?\"\n\n\"No,\" T'Varik replied, allowing indignation to lace her voice.\n\n\"Then stay behind me.\" She moved to the door, worked the manual release and straightened up, her tail twitching in agitation. \"Do what I say, when I say it.\"\n\n\"Lieutenant, I realise you might be feeling frustrated from our interrupted-\"\n\n\"Shhh.\" She peered out into the dimly-lit corridor, pointed ears twitching. \"No one's out there. Let's get to the bridge.\" She looked back at T'Varik. \"At least pick up something heavy to take with you. Like that pointy rock carving.\"\n\n\"That 'pointy rock carving' is a miniature replica of the Kir'Shara, an ancient Vulcan artefact containing the writings of Surak. To use even a reproduction as a weapon would be at best irreverent, at worst-\"\n\n\"Never mind.\" She stepped outside, beckoning T'Varik to follow. \"At least tell me you remembered your unarmed combat training from your Academy days?\"\n\n\"Of course, though I believe it will be unnecessary.\"\n\n\"Logic tell you that?\" C'Rash grunted as they made their way to the Bridge doors, finding them encased with a security forcefield. T'Varik attempted to override it manually -- before being distracted by the Caitian's increasingly agitated behaviour. \"What is it?\"\n\n\"Something- Something's in the air-\" She moved down the hall in the opposite direction, before running into another forcefield at a juncture. Then she moved to a nearby access hatch in the corridor wall. \"Come on, we have to get to Security for more weapons, we can't waste time here.\"\n\n\"Lieutenant-\"\n\n\"Now!\" C'Rash snapped, sliding aside the hatch.\n\nThe Vulcan regarded her subordinate, before silently complying.\n\nBut she had found herself stopping in their horizontal crawl when C'Rash, leading the way, paused at a vertical juncture, her breath quickening, her tail smacking the side of the Jefferies Tube. \"Lieutenant-\"\n\n\"Turn-\" came the whispered, ragged reply. \"Turn and head the other way! Hurry! Something's in here with us!\"\n\nT'Varik was about to protest -- when she heard it too.\n\n*\n\nDeck 3 Fore -- Arboretum:\n\nSasha rolled with the swipe driven to the side of her head, letting herself hit the soft moist earth around one section, but giving her the chance to slip her hands into the gauntlets. She rose up again. \"Hey, you ugly Stroker!\" She beckoned to him. \"Try that again!\"\n\nThe Vlathi had been slithering towards Hrulish, who was huddling pathetically behind a tree, shaking, unable to take his eyes off of the invader. Now the Vlathi faced her again. \"What kind of fool are you? I told you we were only after the Caitians!\"\n\nSasha grunted. \"I am Sasha Hrelle, daughter of Captain Esek Hrelle. My father is Caitian. My grandparents are Caitian. My brothers and uncles and aunts and cousins are all Caitian. I am listed in the Clan Registry on Cait. So, as far as you're concerned... I'm Caitian too.\"\n\nShe couldn't believe she was saying it.\n\nShe was ready to fight this creature, fight to protect someone she barely knew, and didn't like. Someone who was- who was-\n\nWho was Caitian. Like Sasha assumed herself to be. And a Federation citizen.\n\nAnd it was her duty, as a Starfleet officer, to protect him.\n\n\"I accept your argument,\" the Vlathi conceded.\n\nAnd attacked.\n\n*\n\nDeck 4 Fore -- Starboard Corridor 1:\n\nIt was a human, one of the Nagaina crew, brandishing another of the ballistic weapons Hrelle had taken from the first human. And like the first, stupidly not using its obvious long-range advantages, preferring to try and sneak up on Hrelle.\n\nThe Caitian captain grabbed the barrel of the weapon and aimed it upward, even as he raised his own and fired. Both weapons discharged; bullets shot up past Hrelle's ear and struck the bulkhead, and his own was just as loud and sharp. Hrelle flinched -- Mother's Cubs, that was loud! -- until he saw the back of the human's head open up from the back, and was thankful that all he would end up with was ringing ears.",
        "The human went down, as Hrelle leapt over him, taking both weapons with him. Voices rose from behind as he turned a corner in time to avoid gunfire from behind. His boots pounded the floor as he reached a vertical access, instantly getting his bearings before ascending, still hearing his pursuers.\n\nWhen he reached the next deck up and aftward, he closed the access hatch, as he picked up some familiar scents from the adjacent Security Suite. He called out, \"Nemm! Thykrill! It's Captain Hrelle!\"\n\nHe approached as they emerged, phasers drawn, Neraxis taking the lead. \"Captain, what's happening? We weren't informed of a drill-\"\n\nHrelle marched past them. \"Your phasers won't work, there are dampening fields. Thykrill, keep an eye on that hatch, shout if it opens.\" He strode up to the weapons locker, which used a physical deadlock and primitive pushbutton keypad. \"We've been boarded. The cargo ship crew brought onboard Vlathi.\"\n\n\"Vlathi? Never heard of them, Sir.\"\n\nHrelle grunted as he slid aside the locker door, eyeing up the many energy- and non-energy based weapons at their disposal. \"A subspecies of the Skarosian race, humanoid above the waist, serpentine below. Employed by the planet's Imperium as royal assassins, and probably here because of a little trip I took to their world recently.\"\n\nHe selected weapons from the TR Range: TR-110 pistols and TR-114 short-barrelled rifles, both employing the same size magazines with the same 6mm caseless tritanium-tipped bullets. \"Thykrill, get over here.\"\n\nAs the Andorian female approached, Hrelle began handing out the weapons and belts with spare magazines. \"They've taken over Auxiliary Control and probably the Shuttlebay, based on what I've heard from them, and knocked out the engines, transporters, phasers and communicators. Most of the crew will be off-duty and locked in their quarters, and we don't have time to free them all, or weapons to arm them with. With the turbolifts down, the invaders will be using the Jefferies Tubes, same as us. I've been to Engineering, and had them shut down the warp drive, lock themselves in and work on regaining Aux Control.\"\n\n\"What do you want us to do, Sir?\" Thykrill asked.\n\nHrelle lifted up an MM-4 Projectile Launcher, a barrelled, six-round weapon, and began loading it up with 25mm stun grenades, wincing with the memory of having been in close proximity to one of these little jewels being detonated when he was in Advanced Tactical Training; it was nearly thirty years ago, but the pain to his pointed little ears, still ringing from the firefight on the lower deck, felt fresh. \"We're locking up the shop here, but bringing some of the wares with us, and arming every one of our crew we find still out and about -- and taking out any of the enemy we find along the way.\"\n\nAt their expressions, he elaborated. \"I know, these weapons can't be set to stun, and we have other non-lethal weapons. But from what I know of the Vlathi, they're big but fast, their hides are tougher than a Gorn's ass, and their fangs pack a lethal venom. There are maybe ten crewmen left from the Nagaina helping them, but I don't know how many Vlathi -- or how many ballistic weapons they're carrying. Get those protective vests and headgear on.\"\n\nThey obeyed, Thykrill asking, \"What about you, Sir?\"\n\nHe shook his head. \"My head and waistline are too big for the standard issue we've got here, and the fabricators are offline.\" He slung the Launcher over his shoulder. \"We're going up to Deck 2 to make sure our Caitian guests are safe, before taking back the Bridge. Thykrill, lock up and join us.\" He patted Neraxis on the shoulder and led her back down towards the hatch he had emerged from.\n\nHe knelt by it, ready to open it, but not before dropping his voice to a confidential murmur. I'll open it a little, just for a sniff and a listen, before we enter. Shoulder the rifle, save it for corridor action, and use the pistol if you have to in there; I know you qualified for it like the rest, but be ready for the recoil, and the noise, just the same.\"\n\nShe nodded silently, the hand holding the pistol trembling a little.\n\nHe studied her. \"I know you've had issues with the thought of killing, Neraxis, and I'm sorry if I have to put you in a position where you might have to take a life. But from what I've heard, the Vlathi are here to kill every Caitian onboard -- including Kami and Misha.\"\n\nMention of their names stunned the young Bolian woman... and more. And Hrelle saw something in her that he only rarely glimpsed in people her age, the moment when necessity forced them to grow, to mature and blossom from insecure or cocky cadets or neo-crewmen, and become the solid, mature, resolute members of Starfleet that they would be for the rest of their lives.\n\nHe saw it now, as she declared, without bravado, \"That won't happen, Sir.\"\n\nShe made him believe it -- and despite the underlying threat to his ship, he indulged in a moment of pride as he slid open the hatch, just enough to catch any sounds and scents, assessing the situation. \"There's movement, but not nearby or headed in our direction.\" He sniffed again. \"T'Varik and C'Rash are in there, somewhere above.\" He smirked. \"Oh my.\"\n\nAs Thykrill joined them, Neraxis couldn't help but ask, \"What is it, Sir?\"\n\n\"I really shouldn't say, since she's your superior officer, but... based on Lieutenant Shall's current scent, she had something better in mind tonight than crawling through maintenance conduits. Come on.\"\n\n*\n\nDeck 2 Mid -- Officers Mess Hall:\n\nMi'Tree held up the fried shuris stick between thumb and forefinger, stabbing the air between him and the Caitian cub sitting opposite him. \"'There'! I cried. 'That's my answer! And you can take that with you to the Seven Hells!'\" He looked around at the rest of his (mostly) captivated audience. \"And that was when I finished him off.\"\n\nHis own plate of shuris sticks momentarily forgotten, Rrori's eyes widened. \"Really, Mr Shall?\"\n\nBeside Mi'Tree, Bneea chuckled. \"That's how he finished the scene in Clawback 3: Furburn. He then returned to his trailer to flirt with that handsome-looking journalist from the C'Troaw Chronicle, while I doubled for him in the stunt jump off the burning building.\"\n\n\"And you were simply wonderful, my dear,\" Mi'Tree assured him, patting his husband's hand sympathetically. \"But let's not forget whose name is on the top of all the posters?\"\n\nNext to the cadet, Mirow looked to Ptera, before smiling and noting, \"We'll never forget, Grandpapa. You certainly never give us a chance to forget.\"\n\n\"And for that, you are most welcome, by the way.\" Mi'Tree looked back at Rrori. \"Now you, my dear cub, have the potential to be almost as famous and successful in the vivid business as me.\"\n\n\"No!\"\n\n\"Yes! You have the looks, the build, the charm and intelligence and talent-\"\n\n\"That's all true!\" Rrori agreed enthusiastically.\n\n\"How does the ship manage to contain both their egos?\" Bneea asked.\n\nMi'Tree ignored him. \"Do you play any instruments, young cub?\"\n\n\"The frettercast! I've won awards for my playing back home!\"\n\nThe older male boomed with delighted laughter, eyes wide. \"Then you should definitely reconsider a change of career!\"\n\n\"No,\" said a low voice from the end of the table. \"You shouldn't.\"\n\nAll eyes turned to Ma'Sala. \"I saw you on the bridge, against the Nausicaans. You may not hear stirring incidental music or get close ups or tail-licking reviews in the media for what you do. But what you do is real. More real than anything my husband has done.\"\n\nMi'Tree frowned at her. \"When was the last time you had a good hard rutting, my dear? Because you're clearly overdue.\"\n\nShe rose, taking her bottle with her as she approached him. \"The Vivid business is very, very shiny, like a sparkling gem. But that's all it gives you: sparkle. No heat, no warmth. It's all surface. Mi'Tree, I have no doubt in your ability to speak a scripted line and give it gravitas and meaning -- or to charm the pants off some feckless cub. But in the end, you're still an actor. You've never been in any actual fight that didn't involve a drunken starlet at a premier.\"\n\nMi'Tree grunted, setting down his shuris stick. \"Well, never let it be said that you didn't know how to kill a lively discussion, my dear.\"\n\nMa'Sala drew closer, set down her drink, squeezed his shoulders and rubbed the side of her muzzle against his. \"I love you, you old cat. But this cub has a promising real career ahead of him in Starfleet-\"\n\nSuddenly the lights went dead, and the ship dropped out of warp; from the windows, the starfield returned to normal. Rrori stood up. \"What in the Seven Hells-\" He tried his combadge, without success. Then he moved to the doorway. \"Wait here, please, I'll find out what's-\" He bumped his snout on the unresponsive door. \"This isn't right.\"\n\nMa'Sala regarded him. \"Perhaps it's a drill?\"\n\n\"Commander T'Varik has expressly cancelled them for the interim, given the schedules the cadets are under at this time.\"\n\nA sound came from the ceiling in the far corner of the room; all ears cocked towards it, Ptera asking, \"What's that?\"\n\nRrori tensed. \"There's nothing up there, just a Jefferies Tube.\" At her expression, he elaborated. \"Maintenance conduits that run behind the walls throughout the ship. But they shouldn't be occupied at this time.\"\n\n\"This one is,\" Ma'Sala growled, her claws bared. \"Get that door open, cub.\"\n\n\"I- I can't!\"\n\nMi'Tree rose. \"My dear, why so agitated?\"\n\nShe didn't take her eyes off the outline of the ceiling hatch. \"Something's coming down. All of you, get behind the main table! Cadet, that door! Now!\"\n\nRrori moved instinctively to the barked order, kneeling down beside the emergency manual release panel. The others drew together, in time for the ceiling hatch to pop open -- and a figure to emerge, upside down, firing a weapon in their direction...\n\n*\n\nDeck 3 Fore -- Sickbay Suite:\n\nMisha was crying in Kami's arms, obviously reacting to his mother's own confusion and distress as she banged her free fist on the transparent aluminium, knowing that Dr Ling could hear her through the intercom. \"Juliet! What are you doing? Let us out! Please!\"\n\nThe woman was moving about quickly, preparing hyposprays and- pocketing them in her coat? What the-\n\nSuddenly Ling turned towards the open door, before finally looking back at the Isochamber and making a gesture for her to be quiet and to duck down, out of sight.\n\nKami was perplexed, frightened -- and then terrified as she saw a huge pair of shapes slither into Sickbay, bobbing and weaving as they drew in, and caught sight of the occupants.\n\nMisha stopped crying and hissed at them.\n\nOne of them heard it, and hissed back.\n\nKami clutched her infant tighter and drew back instinctively, into the corner of the Isochamber, eyes still fixed on the new arrivals.\n\nTheir slick voices carried over the intercom as they regarded Ling. \"Very good, Doctor, trapping two of them. That will make our job here easier-\"\n\nLing held up a hand. \"No.\"\n\nThey stared, forked tongues snapping out. \"'No'? What do you mean, 'No'?\"\n\nLing was shaking, but kept her composure as best she could. \"You can have the others, do what you want with them! But not these two! They haven't done anything!\"\n\nOne of the Vlathi drew closer -- and Kami saw its tail curl around, drawing behind Ling, rising, and trapping her loosely in its coils. \"That's not for you to decide, Traitor. You were paid well, I hear, for your assistance.\"\n\n\"It was the biggest mistake of my life, taking money from the Bel-Zon,\" she declared loudly -- and, to Kami's trained ear, deliberately, for the Counselor's benefit. \"Keeping track of Captain Hrelle on their behalf, keeping records in a hidden file of my contacts on my private computer disguised as medical notes on the fictitious Janus Syndrome-\"\n\n\"Enough!\" The Vlathi's coils tightened around Ling, as it leaned in. \"Open the door!\"\n\nLing shook her head, declaring loudly, \"Forget it! You'll never work out the access code... not unless you know the Stardate of the birth of a certain hissy little cub-\"\n\n\"Doctor!\" the Vlathi holding her snarled, the tip of its tail reaching, gripping her by the neck. \"We do not have time for Hotblood sentiment! This is your last chance! What is your answer?\"\n\nLing was panting, sweating, shifting in its grip, before gasping, \"You- You look tired- I- I prescribe- cyalodin-\"\n\nSomething made the Vlathi react, and tighten around Ling's neck.\n\nKami covered Misha's face and looked away, unable to avoid hearing a horrible snap.\n\nBut the screech from the Vlathi made her look back... seeing Juliet Ling lying crumpled on the Sickbay floor like a discarded toy -- beside some emptied hyposprays. Meanwhile, the Vlathi that had held her was thrashing about, making a frantic, pitiable sound, before collapsing, gasping, shuddering, and finally lying still.\n\nThe second Vlathi stared down at its comrade, before looking up at the Caitians, shooting forward, hissing as it tried without success to open the Isochamber door, screeching at them now. \"I'LL KILL YOU! I'LL KILL YOU BOTH!\"\n\n*\n\nDeck 5 Mid -- Jefferies Tube Access 12-A:\n\n\"MOVE!\" C'Rash was practically shouting, her voice resounding within the cramped confines.\n\nT'Varik complied, alert to the unprecedented levels of stress in her companion's voice, forgoing the usual safety protocols to slide down the vertical access until she reached the floor of Deck 5, between the Starboard Warp Plasma Conduit and the Starboard Battery Compartment. Immediately she stepped aside to let C'Rash join her, even as she heard the incoming rush of air and a hissing sound as-\n\n-As a large reptilian body emerged upside down from the top of the vertical hatch, its fanged mouth snapping at them, its gaunt clawed fingers striking out.\n\nSwiftly C'Rash swiped back with claws of her own, hissing as well.\n\nUntil T'Varik, studying the musculature of the attacker, timed her response, and pressed hard against the right side of its neck, beneath the curved cowl of a segmented hood. Its attack ceased, its eyes rolling into the back of its head as it went limp, some of its huge body succumbing to gravity and pouring down, though some of it remained stuck up in the conduit.\n\nThe women stopped and regarded it with contrasting levels of heat or coolness. C'Rash cursed. T'Varik responded with, \"This is not a three-headed Aldebaran Serpent.\"\n\n\"No kidding. There were sounds and smells of more of them in the Jefferies Tubes.\"\n\nT'Varik nodded. \"This, plus the current status of the ship's systems, suggests an attack. We must regain command via Auxiliary Control.\" She started down the corridor.\n\n\"Wait -- how long will it stay unconscious from your neck pinch?\"\n\n\"I cannot determine that with any certainty.\" She moved towards the juncture of the corridor on this side of Deck 5, that led to Life Support, the Bussard Collector Array, the Long range Sensor Pallets and, of course, Auxiliary Control. \"I believe that there are-\"\n\nShe looked back at the sound of the snapping bones.\n\nC'Rash was squatting beside the attacker, whose body was now growing still from more than . T'Varik saw the Caitian lower her hand from its neck, ascertained what had just happened, but still felt overwhelmed to ask, \"What did you do?\"\n\nC'Rash stared at it, before rising, her tail still. \"What I had to do. I- I don't think it felt any pain, being unconscious.\"\n\nT'Varik approached again slowly, studying the entity, confirming its now-lifeless state. \"You killed it. You executed our prisoner.\"\n\n\"Yes.\" She turned to move around the Vulcan.\n\nUntil T'Varik reached out and stopped her in place with a hand on her lover's arm. \"'Yes'? That is all you have to say?\"\n\n\"What more do you want me to say?\"\n\n\"I want you to explain yourself!\"\n\nC'Rash bristled. \"You couldn't tell me how long it might stay unconscious. We have no weapons to more effectively stun it, we can't secure it anywhere, and we can't waste time and effort keeping guard on it and having you pinch its neck again. So, to prevent it from awakening and coming after us, or another member of the crew, the logical course of action was to neutralise its potential threat.\"\n\nT'Varik stared in abject disbelief. \"Don't you dare attempt to justify your actions with logic!\"\n\n\"Why are you reacting this way? Earlier tonight, I fired weapons that wiped out dozens of Nausicaans, and you said nothing.\"\n\n\"That was a different context! This was our prisoner, and we had a duty of care. You had no right to do what you did!\"\n\n\"I had every right, as Chief of Security.\" She shook off the arm.\n\nThe Vulcan's face was as taut as piano wire. \"We are meant to be a civilised society. Members of a civilised society do not use excessive or unnecessary force against an opponent, no matter the circumstances. We do not happily execute our prisoners for facile reasons.\"\n\n\"I agree,\" the Caitian replied. \"I just happen to believe that what I did was necessary. And what makes you think that I did what I did happily? What makes you think I'm not sick to my stomach over it now, and maybe for a long time to come, regardless of whether or not I knew I did the right thing?\"\n\nT'Varik stared hard, before finally declaring, \"Lieutenant, I am giving you a direct order: do not employ such actions again under any circumstances. Do you understand?\"\n\nC'Rash stared back, the hurt and anger and anxiety manipulating her features like marionette strings. \"Begging your pardon, Commander, but with all due respect, I have direct orders from Captain Hrelle to take any and all steps necessary to protect everyone on this ship, including the cubs, the crew... and you. If you have a problem with anything I do, take it up with him, or file charges against me with Starfleet Command. Assuming we survive this.\"\n\nShe started down the corridor. T'Varik followed, not travelling far before spotting another Vlathi, and two crewmen from the Nagaina, moving in and out of Auxiliary Control, or standing guard.\n\nThey kept behind a corner, C'Rash drawing back out of sight again, murmuring, \"I hear three of them only, including that Snake. There's no way we can sneak up on them.\"\n\n\"I have a possible solution. One that will not require unnecessary loss of life. Hopefully the lack of bloodshed will not disappoint you.\"\n\n*\n\nDeck 3 Fore -- Arboretum:\n\nThe Vlathi struck out, again and again, and when it didn't do that, it snapped at her, trying to get its fangs into her throat.\n\nAnd Sasha kept blocking it, again and again, the gauntlets proving an effective defence, even as she caught it in several places with her claws. But its hide was thick, hard to cut into along its segmented, scaled surface -- except closer to the throat.\n\nAnd she found herself at a disadvantage whenever the fight took her onto one of the planted areas, with their soft earth and roots and other unseen things.\n\nBut she did see and hear the Vlathi react as it realised that Sasha wasn't as easy to kill as it had initially thought. But that didn't mean she could win -- not without help. Breathlessly she called out, \"H-Hrulish! I need your help! Please!\"\n\nBut the Caitian stayed behind one of the trees in the far corner of the room, watching. Crying.\n\nThe Vlathi hissed with obvious delight. \"Such a pitiful creature, for you to lose your life over, Little Starfleet.\" It shifted its tail away. \"You have proven your valour, I will tell my brothers and sisters of you. I give you an egress. Go now. I won't offer it again.\"\n\nShe glanced quickly behind her. It was right; she could rush out now.",
        "She almost did, trying to justify it to herself by claiming to want to go for help, knowing what a sham it was.\n\nShe can't defeat this thing. It's too strong, too fast and deadly and-\n\nSuddenly her thoughts rushed back a decade, to a time before her father had been kidnapped by the Bel-Zon and her mother had died, when the ten-year-old Sasha had started learning K'Gressir, under Hrelle's guidance and a holographic opponent that seemed to tower over her, snarling and baring its teeth and declaring how it would crush Sasha beneath its paws.\n\nIt seemed undefeatable to her.\n\nAnd her feelings must have shown on her face, because her Dad dropped to one knee, his tail swishing behind him as he smiled. \"He seems like such a badass, doesn't he?\"\n\nThe word made her giggle, despite her efforts to want to stay intimidated.\n\n\"You'll see a lot of people like him as you grow up,\" he continued warmly, stroking her face as he pointed at the holographic Caitian. \"Schmucks who boast loudly that they've been in too many fights to count, that they're the master of Ju Jitsu or Mok'bara or Kish Mein Toches or something they've just made up on the spot. Or maybe they'll tell you they know fighting secrets no one else knows, or that they once knocked out a Klingon Dahar Master with their little finger or their buttcheek or something else.\n\nWhatever they say, it's a safe bet to assume that they're just braggarts and that they've exercised their mouths more than anything else. And when you get into an actual fight with them, and they start to realise that they're up against someone who can do more than just talk, then you'll start to hear them offer you a chance to walk away before they really hurt you, or tell you how stupid or crazy you are to still be fighting with them, or something else.\n\nThe bottom line is: don't take your opponent's word for it for you can't win, because it's not in their interest to let you see the truth: that you are stronger than you think, smarter than you think, and braver than you think.\"\n\nThe twenty-year-old Sasha looked up at her opponent.\n\nAnd roared as she charged at him, claws raised.\n\n<br >Deck 2 Mid -- Officers Mess Hall:\n\nThe Caitians ducked as the Vlathi fired at them, clumps of tiny duranium flechettes propelled by magnetic fields cutting through the air, striking the walls and the tops of tables, taking small chunks out of everything they hit.\n\nMa'Sala grabbed a chair and held it up as she pivoted around to an angle the Vlathi would have difficulty twisting to meet, before flinging the chair at it, knocking the weapon from its grasp. It grasped, descending quickly into the room, its long, colourful, scaled body pouring down and trying to coil itself into a defensive posture.\n\nMa'Sala chose not to give it time to do so, charging forward, claws bared as she leapt upon it, striking its hide and noting its toughness before moving towards more vital areas. It hissed and tried to bite and scratch her, before finally wrapping its elongated body around her, ready to crush her.\n\nBefore Ma'Sala heard its weapon discharge again, and the top of its head erupted.\n\nShe wrinkled her muzzle in disgust at the odour, snarling as she extricated herself from its coils, with the belated help from Bneea and Mirow, the former asking, \"Are you okay?\"\n\nShe nodded, her ears still ringing as she looked over at Rrori, still holding the creature's weapon, still standing there in obvious shock at what had just transpired. She caught her breath and nodded again at him, \"Thanks, Cadet.\"\n\nRrori's jaw had dropped, and he was panting shallowly as he stared at the Vlathi he had just killed. \"I- I had- high scores- in Marksmanship-\"\n\nNow Mi'Tree drew closer to him, his voice warm and paternal as he slowly reached out and removed the weapon from the cub's shaking grasp. \"And you did very well, Mr Rrori. Your clan will be very proud of you. In the meantime, let's let someone else hold this for a while, okay?\"\n\nRrori nodded absently, as Ptera drew up to him now, holding his arm as she stared at the creature with the rest. \"What in the Seven Hells is that?\"\n\n\"It- It smells Skarosian,\" Rrori noted. \"I was on Skaros several weeks ago, on a mission with Captain Hrelle and Lt. C'Rash. But they- the ones I saw anyway -- were bipedal-\"\n\n\"It's a Vlathi,\" Ma'Sala informed them, kneeling down beside it, searching the armoured chestpiece it wore. \"An evolutionary throwback among the Skarosians. When they're born, they're taken to be trained as assassins for their royal family, the Imperium.\"\n\n\"How do you know all that?\" Bneea asked.\n\n\"I took an interest in them when I learned of that mission our kin-son took there. These things are obviously here for revenge.\" She looked at Rrori. \"Cadet, can you get that door open?\"\n\nThe young white-furred Caitian snapped out of his shock. \"Um, no, Ma'am, it's security deadlocked, I don't have the authorisation level to override it.\"\n\nShe nodded, looking up at the open hatch. \"Mirow, Ptera, move a table closer to that; looks like us old cats get to do a bit of exercise besides licking ourselves.\" She patted Rrori on the shoulder as she drew up to Mi'Tree, retrieving the Vlathi weapon, ignoring his silent protest as she handed it to Bneea, adding to him, \"You'll bring up the rear, I'll take the lead, we keep Mi'Tree and the cubs between us until we find a way out.\"\n\nMi'Tree glared at her and harrumphed. \"Lumping me in with the cubs, are you? Why not just shoot me and put me out of my misery while you're at it?\"\n\n\"I thought about it, but couldn't stand to have all those legions of mourning fans of yours weeping at the gates of our Clanlands wanting samples of your butt fur.\" She smacked the back of his head. \"Now come on, let's move! My daughter and grandson are alone!\"\n\n*\n\nDeck 3 Fore -- Sickbay Suite:\n\nMisha clung to his mother's neck and shoulder, crying, as she backed into the rear of the Isochamber, watching helplessly as the Vlathi outside slammed the chair in its hands against the transparent aluminium windows, again and again -- making the fractal pattern it produced expand with each blow, as it continued to hiss and screech.\n\nShe hugged Misha tighter. \"It's okay, baby, everything's going to be okay.\" But even she didn't believe it. They had been invaded, cut off from the rest of the ship, Ling was dead... and they would soon be next. She looked frantically around the interior of the Isochamber for the hundredth time, seeking a weapon, a defence, anything. But there was nothing, nothing to delay the inevitable for more than a few seconds.\n\nThe hole in the window grew.\n\nThen something behind the Vlathi caught her eye, and she turned to see a figure race in from behind- Eydiir! Wielding her twin Capellan short swords! Without hesitation she rushed up, yelling as she struck out, cutting a slice in the Vlathi's tail, making yellow-red blood geyser up.\n\nThe Vlathi turned away from the Isochamber to face the cadet, its injured tail twitching, appearing useless from the damage inflicted upon it, the attacker hissing in rage and pain. \"Earther scum! I'll make a feast of you!\"\n\nEydiir kept her eyes on it as she backed away slowly, deliberately, letting it draw closer -- and further away from the Isochamber door -- as she kept one blade pointed at the Vlathi. \"I am not an Earther. I am Eydiir, Daughter of Kaas, of the Ten Tribes of Capella. And you will not have that mother and child today! I SWEAR IT!\"\n\nKami stared in disbelief -- and noticed how the girl was pointing with her other sword in a strange direction, towards the wall beside the rear of the Isochamber-\n\nThen Kami gasped as she saw the open hatch to a Jefferies Tube -- and within, Jonas and Kit looking out, silently beckoning to her!\n\nAnd Eydiir was manoeuvring to get the Vlathi to turn its back on the Isochamber, and stay focused on the immediate threat.\n\nThat girl was risking her life to save them- she was-\n\nThen Kami focused on the task at hand, shushing Misha as she approached the door. They were locked in, but before she died, Juliet had given away the access combination: the Stardate of Misha's birth. She punched in 47430.8, hoping that the door hadn't been damaged-\n\nIt clicked and slid open!\n\nAnd the Vlathi twisted to look as it heard.\n\nMisha hissed.\n\nAnd Eydiir exploded into astonishing action, using both swords now as she became a blur of limbs and Capellan steel, striking out at the Vlathi as she screamed at it, forcing it to focus fully on her, using the chair as a shield, sparks flying.\n\nClutching Misha tightly, aware of the Vlathi's tail between her and the Jefferies Tube, she braced herself, ran and leapt over it, still watching over her shoulder as she passed the infant to Jonas, as Kit shouted over the noise, \"Quickly, Most Respected Counselor! Follow us!\"\n\nBut as she started inside, she looked back at the fight. \"Eydiir! Come on!\"\n\nBut the girl kept focused on the Vlathi, who was desperately trying to strike back.\n\n\"Kami!\" Jonas pleaded from within the Tube, Misha clinging to him. \"We have to go!\"\n\nThe Counselor gasped, swallowed -- then looked inside at the cadet and her son. \"Get him to safety! We'll follow! GO!\"\n\nJonas looked ready to argue, before he finally twisted around inside the Tube.\n\nKami looked back at the fight. Eydiir was struggling now.\n\nAnd the same maternal instincts that screamed at her to follow her infant into the Tube and safety now focused on the creature that threatened this brave, beautiful young woman.\n\nAnd she bared her claws and fangs and leapt onto the back of the Vlathi...\n\n*\n\nDeck 2 Aft -- Cryo Tanks:\n\nHrelle ignored the chill under his fur as he, Neraxis and Thykrill emerged from the Tube and into the chamber, but he appreciated the change of scent; the interior of the Tube system was growing more suffused with the sounds and scents of the Vlathi as well as his own people, confusing him.\n\nThe cadets silently took point at the door to the corridor, nodding to each other, while Hrelle remained impressed with their level of professionalism- until he was distracted by sounds from the Tube. He returned to it, squatting down, listening and smelling.\n\nThen he unslung the Projectile Launcher from around his shoulder, flicked off the safety switch, stuck the barrel down one direction of the Tube and fired, pulling back as the concussive wave rolled up and out, making him curse and shake the ringing from his head.\n\n\"Are you okay, Sir?\" Neraxis asked, approaching and offering a hand to help him up.\n\nHe nodded. \"Better than the Vlathi who just got a face full of stun grenade. Support is gonna have kittens cleaning out the Tubes.\" He gripped the Launcher in his hands as he drew up to the door, entering his command codes into the manual release, nodding silently to them to stand ready as the door slid open, and the cadets emerged, keeping to the walls as they covered either end of the corridor, each of them declaring in turn, \"Clear.\"\n\nHrelle stepped out as well, moving down the Starboard Corridor towards the Mess Hall and the Officers' and VIP Quarters, his confidence fighting for dominance with his anxiety, as it felt like ages since he'd left Kami and Misha safe with his clan-\n\nThere were noises around the corner just ahead. Neraxis had switched to her rifle and aimed it, until he raised his hand. \"The force field is online just ahead. The gravitons might just absorb the bullets' kinetic energy and let them drop to the floor... or they might deflect back to us.\" His heart raced as he listened to the sounds. \"Besides, it's not the enemy on the other side.\" He called out, \"Hope you saved me some fresh shuris!\"\n\nA group of Caitians began appearing from around the corner, led by Ma'Sala, looking more grave than expected -- and bedraggled. \"Captain, where's your Sickbay?\"\n\nHe tensed. \"Deck 3. What happened? Who's hurt?\"\n\nBneea drew up, wielding one of the Vlathi ballistic weapons. \"We were attacked by one of those things, we're okay, we crawled out of the Mess Hall through your conduits -- but Kami and Misha were called to Sickbay before the attack.\"\n\n\"Called?\" Immediately he thought of the false summons he had received. His heart raced. \"Was Sasha with you?\"\n\n\"No, she never showed up.\"\n\nMi'Tree strode up. \"We need to get to-\" He winced and drew back as he touched the force field wall, and it protested with a surge of gravitons. \"Drop these infernal security precautions at once, my son!\"\n\nHrelle's mind was already returning to the warren of Jefferies Tubes in his ship... and to trying to control his racing heart, his arrythmia acting up again. \"I wish I could, but the Vlathi and the Nagaina crew have taken temporary control. All Caitians are their targets.\" To Rrori and Ma'Sala he ordered, \"Stay together, get back into the Tubes and make your way downdeck, we'll do the same here. Rrori, get them to 3. Watch yourselves.\"\n\nHe turned back towards the Cryo Tanks, barking to the cadets, \"Follow!\" His hackles rose. If those things harm his wife and cub, he'd kill those monsters. He'd kill them all. He'd take the Surefoot to their planet and burn it to a cinder...\n\n*\n\nDeck 4 Fore -- Shuttlebay Workshop:\n\nKit slid aside the hatch, hopped out, glanced around and reached inside to collect Misha, cradling him under his rear. \"You're a very good hatchling, staying quiet. I must compliment your mother when she arrives.\" He swallowed. \"If she arrives.\"\n\nJonas climbed out of the hatch, pushing an Engineering Kit out ahead of him. \"When she arrives, Kit. They'll both be here.\" He drew out a light and set it on a table, before walking around, pausing to tickle under Misha's chin before proceeding to assess the surroundings. \"Good. There's things we can work with here.\"\n\nKit tapped Misha's snout playfully. \"Good Friend Jonas, with respect, we do not even know the full situation.\" Then Misha clamped onto the Qarari's finger. \"Ouch. Please, Respected Infant, let go!\"\n\nJonas returned to his friend, reaching into his jacket pocket and producing a biscuit, offering it to the infant, who took it in his stubby hand and proceeded to let go of Kit's finger and nibble away at the food, letting crumbs fall onto Kit's clothes. \"Communications are down, we've been dropped out of warp, the corridors have force fields raised, and there was a giant filthy reptile trying to kill Kami and Misha.\" He stopped and looked back at Kit. \"No offence.\"\n\n\"None taken.\"\n\nJonas returned to his kit, lifted an Engineering tricorder and took a moment before adding, \"There's a dampening field, affecting transtator-based technology, so phasers, tricorders, communicators are disabled.\" He returned the tricorder and withdrew instead a similar-looking but bulkier device with a black matte finish. Unlike the first, this switched on, making him smile. \"My recreation of an old T-22 tricorder works on pre-transtator technology. It's not as strong or accurate as...\" He stopped and frowned, rising and moving slowly towards the door at the far end of the room.\n\nKit noted that Misha had devoured the biscuit, and reached for the crumbs on his shirt to feed him those. \"Is there a problem, Good Friend Jonas?\"\n\nHe shut the lid of the tricorder and slung it around his shoulder. \"We need to make weapons while we're here.\"\n\nThen Misha twisted in Kit's grip to reach out in the direction of the open hatch, making a mewling sound. Kit tensed, whispering, \"Good Friend Jonas!\"\n\nThe other cadet drew up, stepping between his friend and the infant, and the hatch, until he heard Kami's voice calling ahead of her. \"Help us!\"\n\nJonas knelt and reached in, guiding the Counselor out, and then a pair of bloodied and broken swords, and finally an equally bloodied and broken Eydiir, the Capellan collapsing onto her back on the floor of the workshop, before he slid the hatch shut.\n\nKami looked injured as well, though not to Eydiir's degree, but she rushed up and took Misha from Kit. \"Help her.\"\n\nKit knelt beside Eydiir even as Jonas rose and rushed to a wall mounting. \"The workshop keeps a First Aid Pack. Basic temporary stuff, but...\" He opened it and selected the antiseptic sprays and dermal sealant, recalling his previous Medical training. \"They don't supply painkillers with these, sorry.\"\n\nEydiir half-sat up on her elbow, wincing. \"I am Capellan. I am strong.\" Then she wiped blood from her mouth. \"But I wouldn't say No to some ambizine right now.\"\n\nJonas looked at her hand. \"You were bit?\"\n\nShe nodded. \"Barely. I can manage it; Capellans are resistant to reptile venom.\"\n\nJonas handed the rest of the sealant to Kit. \"Keep at it, I have some ideas.\" Then he moved back to his bag.\n\nKami drew up to him. \"Jonas, we have to get to Esek, T'Varik-\"\n\nHe stood up with a set of tools and moved over to a storage cabinet, sliding the doors up and rapidly selecting various items. \"We will, Counselor. But first we need weapons that don't rely on transtator technology. We'll have to go back through the Tubes -- the Main Shuttlebay has more of those intruders.\" He nodded to Misha, now chewing on Kami's mane. \"Protecting you and that civilian in your arms is our priority.\" He held up a short segmented staff, pressing a control at one end and causing a crackle at the other.\n\n\"Jonas,\" Kami started. When he looked up again, she added, \"Thank you.\"\n\nThen Misha twisted towards the access shaft and hissed.\n\nSeconds later, Kami heard it too. \"One of those things is coming!\"\n\nJonas threw the staff towards a waiting Kit and lifted up a capacitor. \"Counselor, get behind the transporter console. Eydiir, can you-\"\n\nBut the Capellan was already on her feet, lifting up her remaining intact sword, as the hatch slid open and another of the Vlathi shot out, knocking crates towards the cadet to keep them back until it was fully inside the workshop.\n\nIts tail shot out, grabbing whatever it could and flinging them towards the two cadets standing between it and the people at the rear of the room. Jonas joined the Caitians behind the console, dropping and attaching the capacitor he brought to the innards of the transporter mechanism.\n\nEydiir swung out at the Vlathi, while Kit kept it at bay as well with the neuroleptic charges from Jonas' improvised stun staff.\n\nThen the Vlathi stopped and focused on Kit. \"Little One... do not side with these Hotbloods. We are your Brothers and Sisters... stand aside and let us do our job...\"\n\nKit looked up at the figure as it drew closer.\n\nAnd struck out. \"All of my Brothers and Sisters... are in Starfleet!\"\n\nThe Vlathi hissed and renewed its attack.\n\nBehind the console, Kami watched Jonas work. \"Can you- can you beam us out of here with that?\"\n\nThe young man never looked up as he worked furiously. \"I don't have sensors or power to make a safe transport!\"\n\n\"Then why are you wasting time-\"\n\nBut then he shot upright over the control panel, eyes fixed on the Vlathi as his fingers moved over the reactivated controls.\n\nAt the other side of the room, the Vlathi began to be enveloped by a curtain of transporter field energy.\n\nOr rather, just its upper half.\n\nIt realised too late what was happening to it, that not all of it was leaving, and tried in vain to break out of the energy field. But it was too late-\n\nThen its upper half vanished, leaving a long, twitching tail behind, trickles of blood leaking from it.\n\nAll eyes turned to Jonas, who was staring blankly at the results of his actions.\n\nThe other cadets approached, Eydiir asked softly, \"Jonas... the rest of the Vlathi-\"\n\n\"-Is in space,\" he finished, stepping away from the console, his hands rubbing furiously together, as if he had tear the creature in half directly. \"Didn't know if, uh, it might still be a threat without, uh, its tail-\"",
        "\"Jonas,\" Kami murmured, Misha still in her arms but staring at the young man as well. \"I'm sorry. I know you, and how terrible it was for you to do what you just did.\" She drew closer, taking his hand in hers and squeezing. \"And I thank you, for saving my son, and me.\"\n\n\"And the rest of us, Very Good Friend Jonas,\" Kit added sympathetically.\n\nHe nodded to them all, before recovering a little and declaring, \"I'll see about putting together another weapon for myself.\" Then he glanced around hurriedly. \"After- After I find I place to be sick-\"\n\nHe just about made it to the floor behind a work table, Eydiir joining to help him.\n\n*\n\nDeck 5 Mid -- Life Support:\n\nT'Varik's hands moved over the controls, while C'Rash stayed near the doorway and kept guard, glancing over at her companion and fellow officer. \"Is it working?\"\n\nThe Vulcan waited an interminable amount of time before finally responding. \"Yes. As I suspected, the invaders did not seek to include Life Support systems in their takeover, or they were unable to override the additional security and safety firewalls in place. Now I can reduce the temperature and raise the carbon dioxide levels within Auxiliary Control and the corridor outside it until they are rendered unconscious.\"\n\n\"Or they try to escape.\"\n\n\"Then no doubt you will have the opportunity to indulge in more murder.\"\n\nThe Caitian stared at the back of T'Varik's head, before finally approaching her, reaching out and touching her shoulder.\n\nT'Varik started. \"This is not the appropriate time for that-\"\n\nC'Rash turned her so they faced each other, and she put her arms around the other woman, pressing the side of her muzzle against the Vulcan's face, as she whispered, \"Yes it is. We've made love. We've mind melded. You know me, more intimately than any other lover I've had, any other person I've known. So, use that knowledge, use your amazing intellect, and tell me: am I really some sadistic murderous animal?\"\n\nT'Varik let herself shake off the tension and anxiety she allowed to fester within herself. \"No. You are not. I regret inferring otherwise. It was unseemly.\" She drew back, composed once more. \"I still believe that there is a logical and ethical means to response to threats, and that one should not give in to so-called bloodlust.\"\n\nThe Caitian breathed in. \"Then... I will try to save my lust for your bedroom.\" She smiled. \"Assuming I'm still allowed to join you there?\"\n\nT'Varik raised an eyebrow. \"That is an inappropriate enquiry at this time. We will discuss it at a future date. In my quarters.\" She stepped back and walked around her. \"I believe our environmental assault will have reached maximum efficacy by now.\"\n\nThe corridor outside was chill, making their breath ghost as they coughed from the altered atmosphere, and there was even frost on the walls and floors, making their footfalls crunch as they made their way down and around the corner, stopping and peering to confirm the sight of the Vlathi outside of Auxiliary Control, now lying still. T'Varik knelt beside it and touched its neck. \"I believe it's dropped into a state of hibernation.\"\n\nC'Rash had entered the room and examined the two human crewmen from the Nagaina. \"These guys are out of it, but still alive.\" She reached up under her uniform top. \"Take your bra off.\"\n\n\"I beg your pardon?\"\n\n\"I need something to tie their hands behind their backs.\" She wriggled in place as she managed to slip it out from within her clothes without disturbing them too much. \"Come on, it's a logical and ethical means to dealing with the threat. Besides, you're firm enough that you don't need it.\"\n\nT'Varik stared for a moment, before complying. \"May I suggest in future you carry handcuffs with you?\"\n\n\"Kinky bitch.\"\n\nAs T'Varik handed her the item of clothing and C'Rash dealt with the humans, the Vulcan approached the Auxiliary Control boards, taking a moment to examine the changes, before overriding them. \"T'Varik to Bridge, please respond.\"\n\nAfter a moment, Neheru's voice filled the room. \"Commander! It's good to hear from you! What's going on?\"\n\n\"Lieutenant, we have been invaded by hostile forces, number and nature unknown at this time, but they must be considered extremely dangerous. There is a dampening field generator somewhere onboard, affecting phasers, sensors, transporter locks and our combadge system, but as I have just demonstrated, internal communications still function. They had Auxiliary Control, but Lieutenant C'Rash and I have retaken it.\n\nI have restored control to the Bridge; initiate a Level 5 Lockout to prevent its loss again, and secure your area in case the hostiles attempt to take your section. Have you heard from the Captain?\"\n\n\"No, Ma'am, we've been completely cut off in here.\"\n\n\"Sound General Quarters, all non-essential personnel to remain where they are until further notice, and send a Priority One Distress signal to any Starfleet vessels in the area. I am dropping the forcefields in the corridors and reactivating the turbolifts. Lt C'Rash and I will make our way updeck to search for the Captain and any other crewmembers. If you do not hear from us again in 15 minutes, flood the rest of the ship with anesthizine gas. T'Varik out.\"\n\nC'Rash had lifted up the weapons dropped by the Nagaina crew. \"Why wait? Why not just knock us all out now and sort things out later?\"\n\nShe walked up to the other woman, her expression sober. \"We do not know what level of concentration is required to incapacitate the serpentine entities... but I can hazard that even a normal dosage for most adult humanoids might be harmful to an infant like Misha.\"\n\nC'Rash tensed at the thought, handing her one of the rifles. \"Then let's get moving.\" As they stepped out and towards the turbolift, the Caitian nodded to the rifle T'Varik was holding with obvious discomfort. \"From Sigma Iotia. Ballistic, fires metal slugs via chemical propellants-\"\n\n\"I am aware of the principle behind ballistic weaponry, Lieutenant.\"\n\n\"Yeah, well, that switch on the side is the Safety, and below it, the options for firing single shots, small-round bursts or Full Auto. Not sure how many shots the magazines hold, but you might want to conserve your ammunition in a firefight-\"\n\n\"I am certain that I will not be required to employ this for anything other than intimidation,\" the Vulcan assured her, as they entered the waiting turbolift.\n\n*\n\nDeck 3 Fore -- Holodeck 1 Support Room:\n\nHrelle moved with incautious speed as he emerged from the maintenance room, weapon in hand and his senses on alert for his wife and son, as an announcement came up around them. \"All hands, this is the Bridge: we have been boarded by hostile forces. General Quarters is in effect, we have regained control of ship's functions but phasers and the combadge system remain non-functioning at this time. Security forces are currently engaged in retaking the occupied sections of the ship. Stay in your present locations unless you are directly threatened.\"\n\nHe strode out -- and dropped his weapon as he was tackled from behind by one of the Vlathi, who shot out from the darkness opposite him, slamming him into the adjacent wall. It was wrapping itself around his legs, even as it struggled to sink its fangs into his neck. He roared, claws bared, furious at himself as much as his opponent for being caught like that-\n\nSuddenly the Vlathi screeched, as bullets tore into its lower half, erupting blood from the wounds. Hrelle grit his teeth and looked up to see Neraxis, holding her pistol and controlling her shots, her eyes wide as she shouted, \"GET OFF HIM! NOW!\"\n\nThe Vlathi was uncoiling itself from Hrelle and drawing bad, hissing as it clutched the stem of its body above where the Bolian had shot him. \"Filthy infidel scum! I'll rip you to pieces! I'll kill you, your family-\"\n\nShe pointed the pistol to its head. \"Shut up.\" Without looking away, she asked, \"Can you get up, Captain?\"\n\nHe nodded as he rose. \"Yes, thank you, Crewman.\" He picked up his Launcher. \"Get him in the nearest lifepod, put a security lock on it from the outside, get him medical aid afterwards.\"\n\nThe Vlathi hissed. \"I will not be caged!\"\n\nHe aimed the Launcher at its head. \"Then you'll be killed. Make your choice: Three. Two. One-\"\n\nIt hissed -- but complied. Seconds later, they were on their way towards the rear of the deck, the thick scents in the air of Vlathi and his wife and cub making him hasten towards-\n\nFrom the portside corridor, Ma'Sala and the other Caitians appeared, Rrori reporting, \"Sir, did you hear the announcement-\"\n\nHe didn't respond, entering and wincing in disgust at the sight of two dead Vlathi, sprawled over the Sickbay floor -- alongside the body of Dr Ling. Had she been betrayed by her paymasters, or did she defy them and pay the price?\n\nHe didn't stop to speculate further as he moved to the open, smashed Isochamber, catching the fresh scent of Kami and Misha in here, thick and frightened... but otherwise, now missing.\n\n\"Esek.\"\n\nHe stepped out to see Ma'Sala squatting beside an open hatch to a Jefferies Tube. \"They went through here, along with some of your cadets. Downward.\"\n\nHe hardened his expression as he scented them as well. \"Their scent goes forward, and most likely down to either the Fabrication Lab or one of the Shuttlebay Support Areas. The Vlathi and Nagaina crew have taken the Shuttlebay. I'll follow-\"\n\n\"Sir,\" Neraxis prompted. When he stopped and looked up at her, she continued. \"Sir, it's not appropriate for you to go in there. Thykrill or I should go, and lead them back up here.\"\n\n\"Absolutely not. It's too dangerous for you.\"\n\n\"Begging your pardon, Sir, but this is my job.\" The Bolian remained sober and resolute. \"I know they're your family, Sir, but you're still the Captain-\"\n\n\"You're forgetting yourself, Cadet!\" he snapped at her.\n\n\"No, Captain,\" Ma'Sala said quietly. \"She's not.\"\n\nHe looked at his kin-mother... and quietly acceded the truth. He nodded to Neraxis. \"Get going. We'll head down by the Central Corridor on 4, distract them and give you a chance to get them back up here. And be careful, Neraxis.\"\n\n\"Aye, Sir.\" She handed over her rifle to Thykrill and took an extra magazine for her pistol, before dropping down and heading into the Tube without hesitation.\n\nHrelle and Ma'Sala rose, rushing out with Thykrill and the others -- but then stopping and looking at his relatives and guests. \"Kami and Misha are on the deck below. So are the attackers. Cadets Thykrill and Rrori are in my crew, and Ma'Sala is an experienced officer. But the rest of you are civilians. You should head back to your quarters-\"\n\n\"If our daughter and grandson are still in danger,\" Mi'Tree said, looking to his husband and nodded. \"Then we're coming along.\"\n\nMirow looked to Ptera as well, before replying, \"Same here, Captain.\"\n\nHrelle nodded, not wanting to waste any more time.\n\n*\n\nDeck 4 Fore -- Shuttlebay Workshop:\n\nKit had found a covering and draped it over the remains of the Vlathi, while Kami, still holding Misha, was helping Jonas overcome the recent events. Then he heard the noise inside the Tube from behind the door. \"Good Friends! Come!\"\n\nThey approached, an ashen-faced Jonas asking, \"What is it, Kit?\"\n\n\"Noise, from behind the door!\"\n\nFrom behind the metal hatch, a familiar voice boomed, \"Hey, Strokers!\"\n\nJonas grinned. \"Neraxis!\" He slid it open and helped her out, clutching her. \"Are we glad to see you!\"\n\n\"Same here -- but get that door shut again, I heard more of those Vlathi crawling around in there.\"\n\nThey complied, Neraxis glancing around and noting the object under the covering. \"Holy Hraxor, you've been busy- are you all okay?\"\n\n\"So far,\" Kami replied. \"Have you seen my husband?\"\n\n\"He's up on the next floor, with all your relatives in tow. They're coming down to distract them while we vamoose back up.\" She nodded. \"So, let's vamoose.\"\n\nThey reopened the hatch -- freezing as Misha hissed.\n\nKami held up a hand for silence, and knelt down closer to the hatch opening, listening and sniffing, before darting back, mouthing to them Close It!\n\nAs Neraxis did so, Kami asked Jonas aloud, \"Can you seal that?\"\n\nJonas rose for the Medical Case, returning with some dermal sealant and applying it along the perimeter of the door. \"This is the best I can do on short notice. But it won't hold them long.\"\n\nNeraxis nodded, drawing her pistol and pointing towards the door at the far end. \"If I recall, the workbees and smaller shuttles are on this side of the Bay; they'll be focused on getting the larger warp shuttles going on the other side.\"\n\n\"Are you sure we shouldn't stay here?\" Kami asked.\n\n\"No,\" Eydiir replied. \"If they come out of the hatch and attack, and the ones in the Bay hear us, we'll be trapped here.\"\n\n\"They do appear most persistent,\" Kit observed, still holding onto the stunstick.\n\n\"According to the Captain, they're here to kill all the Caitians they can find.\" At Kami's reaction, Neraxis added, \"But we're not letting that happen.\"\n\nMisha hissed again, as the sounds of something attempting the open the hatch from the other side.\n\nNeraxis drew her pistol. \"Come on.\"\n\n*\n\nThykrill had taken the lead as Hrelle's group emerged onto Deck 4 near Engineering, but as she was about to turn a corner, Hrelle pulled her back, shucked off his uniform jacket, hung it on the end of the Launcher in his hands, and stuck it out into the Central Corridor leading forward to the Shuttlebay.\n\nThe jacket danced as bullets struck it.\n\n\"I liked that jacket,\" he muttered, flicking off the safety, dropping to a squat, leaning around and firing a stun grenade down the corridor, drawing back and wincing at the concussive wave rolling back towards them. His head rang -- but then he started as he looked across to see figures appear from around another corner. \"Commander! Lieutenant! About time! Report!\"\n\nT'Varik and C'Rash, both wielding weapons obviously taken from the attackers, drew up, but were astute enough not to cross over to the rest of them. The Vulcan responded. \"Captain, the Bridge has regained partial control, but transporters, internal sensors, phasers and combadges remain inoperative. I gave orders to flood the rest of the ship with anesthezine in 13.42 minutes, but the potential danger to Misha is-\"\n\n\"Say no more.\" He thumbed forward. \"You hear anyone there?\"\n\nT'Varik tilted her head. \"Two individuals near the Mid Junction, staggered breathing... stunned, Sir.\"\n\nHe nodded, signalling to the others to follow. As they ventured forward, Hrelle had a clear view to the Shuttlebay Access doors -- and then hurried as he saw the doors part, and human and Vlathi figures emerged, raising weapons. \"COME ON!\" He dropped to one knee and fired upwards, striking the ceiling over the enemy. Making them drop and giving Hrelle's people time to make it to safety in the Mid Junction, before joining them.\n\nHis heart was pounding; they were closer to the Shuttlebay, but he didn't dare use any more stun grenades, in case Misha and Kami were nearby. As gunfire erupted, he held up a hand for his people to cease, while he called out, \"Enough! This is Captain Hrelle! We've retaken our ship and called for backup! It's over! Give yourselves up! No one else has to be hurt!\"\n\nNow he listened, hearing voices at the Shuttlebay, one nervous human, one angry Vlathi. \"He's right! It's over! We can't get away!\"\n\n\"No, Hotblood. The Vlathi do not surrender. And neither will you.\"\n\n\"Speak for yourself, Stroke-off. I'm out of here-\"\n\nThe rest of the human's argument ended in a strangled gasp.\n\nHrelle's expression twisted as pain gripped him again. No, no, not now!\n\n*\n\nIn the Shuttlebay, Kami, Misha and the cadets emerged, dropping quickly behind some Workbees, watching as the Vlathi and the Nagaina crew were scurrying about in a panic, some reinforcing the gunman firing out into the central corridor, others rushing in and out of one of the warp shuttles on the other side of the Bay.\n\nNeraxis, pistol still drawn, signalled to the others to sneak down to a larger parked shuttle near them-\n\n\"Here!\"\n\nThey looked back to see a Vlathi appear from the workshop they had just exited from, calling again, \"Over here! More of them-\"\n\nNeraxis raised her pistol and fired at the Vlathi, striking it in the throat and sending it tumbling backwards, before turning to the others. \"Quick! That way! Move!\"\n\nJonas led the way, but was grabbed by a Nagaina crewman, until the cadet swung out and punched him in the face, and Eydiir raced around him, sword raised and brought down to cut across a second attacker.\n\nKit moved up to the rear door of one of the shuttles to open it -- never seeing the Vlathi slithered up onto its roof, its tail coiling down to snatch the stunstick from the Qarari, before using it repeatedly as a bludgeon.\n\n\"No!\" But Kami couldn't do anything other than try to escape with her son.\n\nBullets cut into her calf, making her stumble and fall, her hands protecting Misha's head and body as best she could.\n\nThe Vlathi from the top of the shuttle leapt down and sank its teeth into Kami's shoulder, even as she struck back with her claws.\n\nJonas moved back to rescue the infant -- only to double over as bullets struck him in the stomach.\n\nNeraxis shouted and began firing, bringing down the gunmen.\n\nAnother Vlathi shot out from behind the shuttle, its tail coiling around Misha's lower half.\n\nSqueezing.\n\nBreaking.\n\nAnd Misha screamed.\n\nThe cry reached frequencies outside of the range of most humanoid ears, carrying out from the Shuttlebay and into the Central Corridor, where the Caitians crouched with the Surefoot personnel, still pinned down by the gunfire.\n\nNow, however, on hearing that, without even recognising that they were hearing it, the Caitians rose as one, instinctively galvanised, driven forward, claws and teeth bared, roaring as they charged, oblivious to the threats in their way, even oblivious to the shots that struck them. Such was the speed and ferocity of their charge that the Nagaina crew were overwhelmed, and literally stampeded over.\n\nYoung, old, male, female, of Starfleet or Clan Shall or both or neither, it didn't matter. Every Caitian who heard responded without thought, driven by a racial trigger, reacting as instinctively as pulling their hands out of a fire.\n\nHrelle and Ma'Sala led the way, both leaping onto the back of the Vlathi holding Misha, both clamping their jaws into the throat of the cub's attacker and tearing away the flesh, even as Eydiir joined them, bringing down her sword to cut off the tail just above where it held Misha. The remainder of the tail uncoiled from around the infant, letting the Capellan girl toss aside her sword and scoop him up and away from the carnage, as quickly and carefully as she could.\n\nAround them, the other Caitians attacked the other Vlathi, while the armed Starfleet joined in. Eydiir, injured herself, stumbled as she struggled to get Misha away-\n\nA hiss made her twist, in time to see a huge Vlathi dart at them-\n\nBefore its body erupted into a thousand puzzle pieces of blood and shredded flesh, courtesy of the rifle in Commander T'Varik's grip, as she unleashed its magazine at Full Automatic, continuing to fire even after the Vlathi had already fallen.\n\nEydiir's ears rang from the sound, but she focused on Misha, who was shuddering in obvious pain.\n\nThe Vulcan discarded the emptied rifle and raced up to Eydiir, who was as careful as she could be. \"Broken bones, internal injuries-\"\n\n\"Get him to the Emergency Sickbay on this deck.\"\n\nEydiir nodded and raced out, as T'Varik turned to the others. The rage that had momentarily possessed the Caitians ebbed, leaving them to focus on the unconscious Kami and the injured cadets, and their own wounds. Hrelle swept his wife up in his arms and raced out, others carrying Jonas and Kit.",
        "Then she heard Neraxis barking orders at some Nagaina crewmen, including Captain Koulev, who had dropped their weapons and surrendered. The young cadet was obviously distraught by the carnage, particularly that involving her lover and friend Jonas, but she remained professional and stayed at her job; T'Varik made a mental note to commend her as she opened a channel from a wall intercom. \"All Medical personnel report to Auxiliary Sickbay on Deck 5 immediately! Bridge, we have retaken the Shuttlebay, but remain on Red Alert!\"\n\nC'Rash rushed up. \"Will he be okay?\"\n\nThe Vulcan took a moment to gather her discipline. \"I... do not know.\" She noted the wounds on the Caitian's arm. \"You have been injured, too. You need treatment.\"\n\n\"Later. I have to sweep the ship, make sure there are no stragglers. Go with the Captain and the others, they'll need you now.\"\n\nT'Varik nodded -- but indulged herself in a moment of briefly touching the Caitian's hand, before departing.\n\nThe Auxiliary Sickbay was more basic that the Main, but it was larger, and more than adequate for all but the most specialised treatments. Doctor Kline had arrived, and cursed in his native Klingon at the readings the biobed provided as Misha was set upon it.\n\n\"Will he be okay?\" Hrelle demanded, setting Kami on an adjacent biobed.\n\n\"Your little Warrior will not see Sto-Vo-Kor today. Scarlo! Assist me! Deal with the Counselor, Eydiir, unless you are too injured.\"\n\n\"I will manage.\" She moved to Kami's biobed, quickly reading and assessing. \"Strange... The level of neurotoxins should have already been fatal, but the Counselor already has some antitoxin in her system... Dr Ling injected her and Misha with something before all this happened...\" Then she set aside her surprise to focus on replicating more and treating her other injuries.\n\nPtera moved up to Kline. \"I'm a neurosurgeon back home-\"\n\nKline grunted. \"You will have more experience with Caitian physiology. Do you wish to take over Misha's treatment?\"\n\n\"May I?\"\n\n\"Do it, I'll deal with the gunshot wounds. Those, I can stomach more than thinking about what those dishonourable petaQs did to an infant...\"\n\n*\n\nDeck 3 Fore -- Arboretum:\n\nSasha lungs felt raw and bone-dry from the sheer effort of just breathing. Her outside, on the other hand, felt drenched from sweat and blood. Most of it her own, she thought.\n\nAt least her Vlathi opponent looked just as bad, swaying uneasily, gasping for air, one of its fangs broken off, one of its arms hanging broken and limp at its side, one eye sealed shut from bruises. \"I... I... I...\"\n\nSasha offered a weak smile and a chuckle. \"'I, I, I.' It's always about you in this relationship, isn't it?\"\n\nThe Vlathi made a final lunge at her.\n\nShe swung out and smashed it across the side of its head, both of them going down onto a square of upturned dirt, both of them still struggling until the Vlathi stabbed her in the arm with its remaining fang.\n\nSomehow, she still had strength enough to feel pain -- and to strike back, grabbing it by the throat, claws piecing the thinner flesh here, and squeezing until it spasmed, wheezed, unable to breath. And she held it there until it went still.\n\nHer head was pounding with a thousand drumbeats, as she rolled off it, trying to help herself back to her feet and go for help. But she barely managed to rise to her hands and knees, before feeling the electric numbing wave rushing through her. Her muscles failed to respond. Her lungs felt like they were curling up inside her chest.\n\nShe looked up with dilating vision at Hrulish, still at his hiding spot behind a tree, and she wasn't quite sure if she was saying anything...\n\nA distant noise caught her fading attention, and as she dropped into unconsciousness, she saw Hrulish racing up to her, calling out to someone, \"In here! We're in here!\"\n\n*\n\nDeck 4 Mid -- Auxiliary Sickbay:\n\nKline moved quickly and efficiently among the wounded, using a micro-transporter to remove the shrapnel, and autosutures to repair the wounds, while Medical cadets synthesised and administered plasma and suitable antibiotics.\n\nHe had worked on Jonas first, confirming for all as the unconscious young man was moved into the adjacent Recovery Bay that he would be fine; Kit had suffered only a mild concussion, and would stay and watch over Jonas.\n\nNow all focus was on the adjacent Operating Theatre, where Ptera worked on Misha, and Eydiir on Kami, assisted by the more experienced nurses. Hrelle and Ma'Sala stood at the doorway, as if standing guard, their attention unwavering.\n\nUntil Hrulish and C'Rash entered -- carrying a bloodied, broken Sasha.\n\nThe room erupted into a storm of horror as nurses took over, carrying the young woman to a biobed, removing the gauntlets on her hands and studying the readings. Hrelle strode up. \"Great Mother...\"\n\nNurse Scarlo looked up at the readings. \"Vlathi venom, toxic shock, blood loss, concussion, internal injuries- prepare another bed in Ops! Dr Kline!\"\n\n\"I know! Just lift her up and take her straight in!\" He followed the nurses and Sasha back into the Theatre.\n\nHrelle stood there, gasping, fighting the pain in his chest as he turned to face C'Rash and Hrulish. \"Where did you find her?\"\n\nHis Chief of Security spoke first, her expression tight and anguished. \"She was with Hrulish in the Arboretum, and a Vlathi body.\"\n\nHrelle looked at the other male. \"What happened?\"\n\nHrulish took a moment to respond, as if needing to gather his strength. \"She- I found her, being attacked by one of those monstrous things- I leapt in to save her- I managed to dispatch it... I'm hoping I wasn't too late...\"\n\n*\n\nHrelle stood in the corner of the Recovery Bay, staring at his family, all lying there, still unconscious, but their individual readings, and the prognoses from the doctors who had worked on them, telling him that they would eventually recover.\n\nHe wished he could say the same for himself.\n\nT'Varik entered, sparing a glance at the patients before approaching him. \"Captain, the Nautilus is on rendezvous with us, ETA 3.67 hours. Lieutenant C'Rash is continuing a Security sweep of the ship; she located the dampening field generator on Deck 5 and deactivated it, and we have restored full power and function.\n\nThree of the Nagaina crew, including Captain Koulev, survived and were moved to the Brig. There were surviving Vlathi, but they appeared to have ingested some form of lethal poison. Their bodies had been moved to Cargo Bay 5 for cold storage, as our own morgue facilities could not handle their size and number, but we did move the bodies of the Nagaina crew, and Dr Ling, there, and have begun clean-up following forensic evidence gathering.\"\n\n\"She was a spy for the Bel-Zon,\" he noted blankly.\n\nThe Vulcan reacted. \"Doctor Ling? How are you aware of this?\"\n\n\"I heard them talking about her. Alert Starfleet Intelligence, seal off her quarters, and check with the Nautilus to see if they have an SI Officer onboard to begin the investigation, taking statements and all that.\"\n\n\"Aye, Sir.\" She noticed as his expression went taut with pain. \"Were you injured, Captain?\"\n\n\"No- I mean, I was, but nothing I can't handle. I- I have heart arrhythmia; it's been through a lot in my life. I take metrazine for it, but I haven't had a chance to get any since this happened, and I'm not leaving my family.\"\n\n\"Shall I ask Dr Kline or-\"\n\n\"No, they've all worked hard enough, I'll be fine.\" He nodded at his family. \"Better than them. I did this. They're in this state because of me.\"\n\nShe looked to him. \"Your reasoning is specious, and deeply flawed. Their present state is the result of a series of decisions independently made by others. No one forced the Bel-Zon to send the Vlathi, or the Vlathi to act as they did, or the crew of the Nagaina to assist them. These were all actions taken by them of their own free will. You cannot blame yourself.\"\n\nHrelle swallowed. \"Misha... it's not fair, to be so young, and to suffer so much-\"\n\nShe nodded soberly. \"The Universe is not fair. Nor is it unfair. It simply is. In other realities, he might not have been injured like this... and he might not have existed at all. But our Misha exists, and will continue to exist. With our support. And love.\" After a pause she announced, \"I will remain on duty until further notice, should you need me.\"\n\n\"Thank you, T'Varik. For everything.\"\n\nShe nodded as she departed.\n\n*\n\nIn the waiting room, the Caitians waited, silently, cups of coffee in hand, unwilling to leave until they heard something.\n\n\"What-\" Rrori finally spoke up, staring into his own cup. \"What happened to us in the Corridor? I- I don't remember much.\" He touched his right bicep. \"I don't even remember getting struck by a bullet.\"\n\n\"It was C'Mau's Cry,\" Ma'Sala answered simply.\n\nThe cadet looked to her, eyes wide. \"Nonsense! I mean, excuse me, Ma'am, but- that's just a myth!\"\n\n\"But it may have some basis in fact,\" Ptera noted, curled up beside her husband. \"There have been only a few documented cases in medical history, of Caitians reacting like we did to the cry of an infant cub in mortal pain or terror. Similar, I suppose, to stories of humans exhibiting moments of superhuman strength and endurance when faced with assisting others in danger, or Klingons going into berserker rages and taking on overwhelming numbers of opponents.\n\nThere may be a mechanism in us that can produce C'Mau's Cry, something we lose when we learn to talk and crawl.\" She shrugged tiredly. \"Of course, it's never been properly tested, since we're not going to intentionally put an infant in danger. And... maybe we shouldn't test for it, if it should prove to be something that our enemies can use against us?\"\n\nEydiir had been moving about them, checking on their individual readings, and had been listening. \"Forgive my ignorance, Doctor Ptera, but who is C'Mau?\"\n\n\"C'Mau was one of the Great Mother's Cubs,\" Mi'Tree explained, his melodious baritone deep and soothing. \"He had been taken from Her by the Unspeakable, and secured behind a ring of unscalable mountains raised up by the devil, who wanted to feast on the infant in peace. But C'Mau released a Cry that gave the Great Mother the strength to bring down the very mountains themselves with Her bare hands.\"\n\n\"Well told,\" Ma'Sala commented, smirking at his reaction to her complement. She approached him, rubbing her muzzle against his. \"By the way, you old cat... you fought superbly. I will be proud to have you by my side should we be called upon to fight again.\"\n\n\"Thank you, my dear. But perhaps I shall leave the fighting to those who aren't as invested in maintaining their attractive features as I am.\"\n\nNow Hrulish rose. \"Yes, well, this has been a very trying day. I think I'll retire.\"\n\nBneea looked up at him. \"You're not staying, to be here when they wake up? Sasha will want to thank you for saving her life.\"\n\nHe spared an uneasy glance towards the Recovery Bay. \"That... won't be necessary. Besides, she might not even remember the events the way they happened, and I wouldn't want to confuse her while she focuses on healing. Good evening, all.\"\n\nHe started towards the door -- but then C'Rash appeared, blocking his way, glaring with tight fury at him. \"Going somewhere?\"\n\n\"Yes, to bed. If you'll excuse me-\"\n\nShe took his arm. \"No. Not just yet. I have a couple more questions.\"\n\n\"Perhaps in the morning, young lady-\"\n\nNow she reached up to his chest and shoved him back into the room. \"Now.\"\n\n\"Hey! You can't treat me like this! Do you know who I am?\"\n\n\"Yes: a witness in the assault of a member of this crew. And as Chief of Security, I can treat you like this.\"\n\nThe others rose, Ptera asking, \"What's happening, C'Rash? What's wrong?\"\n\nC'Rash kept her gaze fixed on Hrulish. \"You said you were passing the Arboretum when you heard Sasha being attacked, went in to save her, and killed the Vlathi. Do you still maintain that?\"\n\nHrulish looked nervous, and irritated. \"Yes, why?\"\n\nEydiir looked over curiously, suspiciously. \"When you visited the gym where Sasha and I were working out, you asked where the Arboretum was, and then left for it. How did she manage to get in there before you?\"\n\n\"Well, I was there, but I got bored and wandered into your Library! I was trapped in there until everything was restored, I returned, and found Ms Hrelle being assaulted! Is that so difficult to grasp?\"\n\n\"No,\" C'Rash answered for her. \"What's difficult to grasp is how you can say you killed the Vlathi, when I examined the body, and found that every wound in it had traces of tritanium from Sasha's gauntlets. No Caitian DNA, like I would expect to find if you had raised your claws to it.\"\n\nShe looked down at him. \"Then there's your clothes. You've got Sasha's blood on them from when we carried her down here, but no Vlathi blood.\" She indicated the others. \"All of us who fought them are covered in it. But perhaps you're so good at killing that you managed to keep yourself clean.\"\n\n\"He told us he was a decorated veteran of the last War you had with the Ferasans,\" Eydiir mentioned darkly. \"And had killed many of them with his claws and fangs.\"\n\n\"No he didn't!\" Ptera exclaimed, confused. \"He had a deferment from the Militia because our clan's company makes the spaceframes for our warships!\"\n\nAll eyes moved to Hrulish.\n\nMi'Tree rose to his feet, gaze narrowed in sheer disbelief, voice low and laced with a growl as he drew closer. \"Did you... did you let my granddaughter fight alone against one of those monsters?\"\n\n\"Now, Mi'Tree, technically she's not your granddaughter-\"\n\n\"DID YOU LET MY GRANDDAUGHTER FIGHT ALONE AGAINST ONE OF THOSE MONSTERS?\"\n\n\"Of course not!\" he exclaimed indignantly. \"I was there!\"\n\n<br >\"Yes, you were,\" C'Rash agreed. \"I found the place in the corner of the Arboretum, behind a tree, where you had cowered, your claws raking the bark, the scent of your fear thick and lingering.\" She raised her hand, producing his small silver snuff box. \"And where you dropped this. This has your DNA, along with some illegal substance.\" She stuffed it into the breast pocket of his jacket.\n\n\"Uncle...\" Ptera murmured in shock, staring wide-eyed at him.\n\nHrulish's tail twitched in anxiety, and he held up his hands, as if he could hold them all back. \"Yes, well, perhaps in all the confusion I might not have told the account with 100% accuracy-\"\n\nMa'Sala growled now. \"You stood by and let my granddaughter almost get killed-\"\n\n\"Will you stop that? She's not really your kin! She's not even Caitian!\"\n\nMirow growled now. \"My sister is more Caitian than you'll ever be, you coward!\"\n\n\"I'm not a fighter! I'm a businessman!\"\n\n\"And I'm a surgeon,\" Ptera reminded him. \"And Mirow's a pilot. And Mi'Tree an actor, and Bneea a stuntman. But we all stepped up when we were needed, to fight a common threat. All of us. Except you.\"\n\nHrulish's angry, umbrageous expression moved to each of them, sneering at them. \"None of you have the right to judge me! None of you! I have more responsibilities than you can imagine! I can't be expected to risk my life to save some arrogant little human bitch-\"\n\nA growl from behind them made everyone turn.\n\nHrelle stood at the doorway at the Recovery Bay, eyes wide, teeth bared, claws raking the framework as he glared at Hrulish. Ready to strike.\n\nMa'Sala understood instantly, turning back to Hrulish. \"GET HIM OUT OF HERE! NOW! GET HIM TO HIS QUARTERS!\"\n\nHrelle launched himself in his direction, before being caught and tackled back into the wall by Ma'Sala, barely holding him, until Bneea assisted her. \"No, Esek! Don't! He's not worth it!\"\n\n\"Bneea's right,\" Ma'Sala agreed, looking back to see Ptera and Mirow escorting Hrulish out of the room. \"Calm down! Don't give in!\"\n\nHrelle was growling... then he was gasping in pain. \"Heart-\"\n\nEydiir rushed over to a medical replicator, produced an appropriate hypospray and injected him. As her Captain visibly calmed down, the Capellan girl noted, \"Commander T'Varik made me aware of your potential need for metrazene, Sir.\"\n\nHe nodded weakly, gasping, allowing Ma'Sala to say, \"Thank you, Cadet. And thank you for all your efforts tonight. My clan will not forget what you've done; we are in your debt.\"\n\nThe other Caitians guided Hrelle to a chair to sit him down.\n\nHe was shaking.\n\nAfter a second, Ma'Sala realised he was sobbing, and dropped to one knee beside him, holding him.\n\nEydiir deliberately looked to Bneea, announcing quietly, \"I will be with the patients, if you need me.\"\n\nThe Caitian male nodded in appreciation as she departed.\n\n*\n\nDeck 2 Fore -- Captain's Ready Room:\n\nC'Rash entered without preamble. Behind the desk, T'Varik spared only a quick glance at the intruder. \"This must be concise, Lieutenant, I have a meeting scheduled with Admiral Trenagen to provide a briefing on the incident.\"\n\nThe Caitian entered, drawing up to the front of the desk and standing formally. \"I have logged my initial reports, along with a catalogue of the evidence gathered. I've also received confirmation that the escort vessel Firetail is en route to collect our Caitian visitors. What about our wounded?\"\n\nThe Vulcan's fingers continued to move over the PADD in her hand. \"Doctors Kline and Ptera have downgraded the levels of Counselor Hrelle, Sasha and Misha from Serious to Stable, but they are being kept under stasis to allow their bodies to heal further. Cadet Kitirik has recovered from his concussion but is being kept under observation.\"\n\n<br >\"What about Jonas? Getting shot in the stomach must have hurt like a bastard.\"\n\n\"I imagine it was painful, but the bullets did not strike any vital organs, and he is expected to make a full rapid recovery; I have been told that he has asked Neraxis to assist him with his toiletry duties, though I suspect this is more an excuse to have her handle his genitals.\" She looked up. \"Is that all?\"\n\nC'Rash regarded her, before crossing her arms over her chest and adopting a more informal, challenging posture. \"No. A member of the crew who was directly involved in the violence on the Shuttlebay has provided an inadequate account of her involvement. I am required to ask additional questions, but she has been hiding away in the Captain's Ready Room.\"\n\nT'Varik glanced up, setting aside her PADD. \"My report was factual accurate, concise and true.\"\n\n\"But not quite complete.\" She sauntered around the desk to face the other woman, her black-furred tail flicking behind her. \"I know that I instructed you in the use of the rifle you were carrying. You stressed prior to the incident in the Shuttlebay that you believed it would not be necessary to actually use it.\"\n\n\"Clearly I was mistaken.\"\n\n\"Yes. But when you did use it, to kill the Vlathi who was about to attack Eydiir and Misha, you emptied the full magazine into it. Sixty rounds. Far more than was necessary to stop the Vlathi.\"\n\n\"Lieutenant, this is not the time to be discussing this-\"\n\nC'Rash dropped to her knees before the Vulcan, reaching out and gently but firmly taking T'Varik's hands in her own. \"You're the one who told me that we had to use minimal force. What you did could not possibly be defined as 'minimal'.\"\n\n\"Lieutenant, you are out of line-\"\n\n\"I'm not speaking to you now as Chief of Security. I'm speaking as your lover. What you tell me will never, ever go any further. But it's not good, not logical, not healthy, to keep it to yourself.\" She squeezed the Vulcan's hands. \"Why did you react the way you did?\"\n\nThe Vulcan's expression grew pained, as she momentarily lowered her mental disciplines. \"I... I have committed a heinous act. And yet I remain unrepentant by what I have done. I can employ any number of sound logical justifications for my actions. But in the end, I know I was not driven by logic.",
        "Because my logic... fails me... where my godson is concerned.\n\nYou Caitians are annoyingly effusive with your emotions; even humans can prove to be more reserved. But based on the one whom I am in contact with on a regular basis, Caitian infants are on another level entirely. Bereft of sophisticated thoughts, and mercurial memory associations, he is pure instinct, pure emotion. There are times when I am holding him, and find I must strengthen my mental disciplines in his presence, such is the almost overpowering intensity of his feelings.\"\n\n\"Really? Don't Vulcan parents have the same problems with their infants?\"\n\n\"No, the mesiofrontal cortex responsible for the Vulcan suppression of emotions is stimulated at a very early age through breast-feeding, and natural disciplines are instilled afterwards.\" She tightened her expression. \"Misha makes me very aware of his love for those around him.\"\n\n\"Including you,\" C'Rash prompted with a smile.\n\n\"Yes. Including me. Perhaps I should speak with his parents; they had appointed me his godmother in order to provide a mature, objective influence in his life. If they knew the difficulty I have experienced in fulfilling my role, they might wish to reconsider their decision.\"\n\nThe Caitian's smile broadened. \"I doubt that.\"\n\n*\n\nDeck 4 Mid -- Auxiliary Sickbay:\n\nMa'Sala heard the singing as she approached the section, but focused on Dr Kline and the unfamiliar Starfleet members milling about outside. The Klingon drew up to her. \"These are medical staff from the USS Nautilus, here to run follow-up checks on the wounded. He refuses to let anyone he doesn't know near them. And he hasn't bothered to change, or clean up. I do not wish to summon Commander T'Varik, but-\"\n\n\"I understand. I'll lead him out of the way.\" She entered, carrying the fresh uniform she thought she would need.\n\nInside, Hrelle was standing between the biobeds holding the unconscious Sasha and Misha, his hands on their hands, still singing to them: \"So close your eyes on Hushabye Mountain / Wave goodbye to cares of the day / And watch the boats from Hushabye Mountain / Sail far away for Lullabye Bay...\"\n\nThe Matriarch of the Shall Clan drew up to him as his song ended, seeing him tense at sensing her approach but otherwise not reacting as he recognised her scent. She stepped up to the other side of Misha's biobed, looking down and stroking the fur on top of the infant's head. \"I remember when Kami was this tiny. I used to sing Hnall and His Crooked Tail all the time, even when she was still growing inside me. Then when she was out and about, that was the song she'd need to get to sleep. I ended up hating it... but I still obliged.\"\n\nShe looked up at her kin-son. \"You stink, Esek. You need to wash and change your clothes. The Vlathi blood and scent is on you; it is not good to remind your family, in their current weakened states.\"\n\nHe looked up at her at that, suddenly realising the truth in her statement. He glanced out at the newcomers waiting to enter without being challenged.\n\n\"Doctor Kline will watch over them,\" she promised him dryly. \"You can trust him. And we won't be long. Come with me.\"\n\nHe let her lead him out, into the now-deserted Evacuation Barracks, and to some of the group sonic showers. She helped undress him and guide him under one of the overhead shower units, aware of his physical and emotional exhaustion. \"The Firetail will be with us soon.\"\n\nHe nodded blankly -- but then turned to her. \"Good. I want you to take Kami and Misha back with you.\"\n\nShe blinked, her fur rising whenever her arms were touched by the sonic waves raining down on him. \"Excuse me?\"\n\nHe faced her fully. \"I want you to take them back to Cait. It was a mistake to think I could have them here, not with the life I lead, the responsibilities I hold. It was insane to think I could have them here, insane and selfish. I'd have you take back Sasha too, but I know that she's an adult and I have no control over her.\"\n\n\"And you think Kami isn't an adult, and that you, that anyone, has control over her? Silly cub.\" She drew him out, smoothing down the raised fur on his body with her fingers before helping him into the fresh clothes. \"My daughter knew what she was doing when she had Misha, and decided to remain in Starfleet, on this ship, and at your side. If she felt differently-\"\n\n\"You think she won't feel differently after she wakes up? Her cub was nearly killed! How could I have been so stupid, allowing an infant to live onboard?\"\n\n\"Many do. At least on Caitian vessels.\" After a moment, she added. \"Kami did, after I had her. And she was nearly killed then, too.\"\n\nHrelle looked at her. \"Killed?\"\n\nMa'Sala guided him into his trousers. \"She was two months old. There was a Ferasan terrorist attack; poison gas bombs beamed through holes punched into our shields. She needed cloned lung replacements.\"\n\nHe gasped. \"She never said.\"\n\n\"She doesn't know. I had been so proud and happy to have her onboard my ship, with a whole crew of females to dote over her. Afterwards, though, the guilt ripped into me, like a blade.\" She reached behind, ignoring his reaction as she took his tail and guided it through the flap in the seat of the trousers. \"I sent her back to stay permanently at our house in the Clanlands.\"\n\nHe nodded at that. \"Good for you.\"\n\nMa'Sala faced him again, her face... sorrowful. \"No. Not good for me. Esek, I missed so much of her life because of my fear and guilt. I missed her first crawl. Her first words. Her first walk and hunt and pounce and dance and her first day at school and her first date...\"\n\nTears welled up in her eyes at the memory of it. \"Mi'Tree and Bneea and the rest of the clan did their best to keep me informed, involved, sending me vivids and stills whenever they could, and of course I always came back to visit as much as I could. But it wasn't the same.\n\nIs it selfish? Yes. And no. Think about what Misha would miss by not having you around, by having you as nothing more than a face and a voice on a screen, a long-distance parent. And you believe being on Cait is risk-free? There are dangers everywhere. Maybe they don't all appear as a hoard of snake assassins, but they're still there.\"\n\n\"But- with the Clan around, to watch over him- protect him- both of them-\"\n\n\"You seemed to have formed a clan here already without us. Those cadets who followed you into battle, who risked their lives to save Kami and Misha? Do not dismiss that bravery so easily. And you'll have C'Rash, and that Vulcan, and all the others.\"\n\nHe grunted. \"And how many of them might be like Dr Ling? At least we can trust our own kind.\"\n\nShe knelt and helped him into his boots. \"Like Hrulish?\" She sighed and rose again, grunting at her aches and pains. \"I had made an offer to Kami earlier tonight to pass to you: if you wished, you could transfer yourselves to the Caitian Navy, you'd get a ship of your own, a patrol closer to the Motherworld, or maybe a posting on our station at Refuge. She said neither of you were unlikely to accept the offer. But that was before all this. Should you choose to accept, let me know.\n\nBut I have a feeling that you won't. And that might be for the best; I would rather see you out here, defending our people against threats before they ever reach Cait.\"\n\nShe put an arm around him and guided him back to Auxiliary Sickbay. \"Oh, speaking of which, I was on a subspace channel to the Matriarch of Ptera's clan. Ptera had contacted her earlier to tell her of Hrulish and Sasha. She wishes to formally apologise to you for Hrulish's cowardice and deceit, that he has been removed from his position of authority within the clan's company, and she wants to assure you that his attitudes and actions do not reflect her clan as a whole.\"\n\nHe grunted. \"When I look back on the events here, I will not be thinking of him, but of Ptera, fighting alongside us to help save Kami and Misha, before operating on my son and saving his life directly.\"\n\n\"Well said. She is also arranging for Sasha to receive the Order of R'Masi for her valour.\"\n\nThat made Hrelle stop. \"Really? Well, anyone with doubts about Sasha's Caitianity won't say anything after she receives that honour. Come to think of it, I never received the Order.\"\n\nMa'Sala reached up and patted him on the shoulder. \"Well, my kin-son, you keep your tail clean and your claws sharp, and someday you may catch up with my brave and beloved granddaughter.\"\n\nThen the banter ceased as they heard familiar and welcome sounds from the Auxiliary Sickbay, and they rushed in to see figures stirring. Hrelle raced up to Misha's biobed, barely allowing the medical personnel to step aside as he looked into the wide, wondering eyes of his son. \"My little Warrior Prince! Awake at last, and I never got to take advantage of you sleeping so long!\"\n\n\"He's fully recovered,\" one of the Nautilus doctors was telling them, \"Physical injuries and traumas fully repaired, vital signs strong. You can pick him up and treat him as normal, Captain.\"\n\nHrelle took the recommendation, carefully lifting Misha up and cradling him against his shoulder, breathing in his scent and purring, his heart racing as he felt his son purr back.\n\n\"Hey,\" started a hoarse, weak voice. \"Bring him here, ass.\"\n\nHrelle turned, as he saw Kami struggling to sit up, Ma'Sala assisting her daughter in adjusting the bed and her gown as her husband complied, Kami weeping with unchecked emotion as she held her son and husband and mother.\n\nBut even as he drank in the joy of their awakening, he was aware of Sasha being helped up as well, and watching the scene with a smile, murmuring, \"Captain... I have to report there was a snake in our garden. But I- I think I got it-\"\n\nHe looked at her with huge eyes already welling with tears of relief as he drew over and put his arms around her, hugging her tightly. \"You did, Sasha. You did.\"\n\n*\n\n\"USS Surefoot-A, Captain's Log, Stardate 45688.39, Captain Esek Hrelle, commanding: The Nautilus has departed following the collection of evidence and those prisoners who will face a Federation court for their crimes, and will be meeting with us at Deep Space Five, once our guests from Cait depart upon the arrival of the escort vessel Firetail. Those injured have made a full recovery -- physically at least -- but given the circumstances, we are currently on Inactive Duty pending Counseling evaluations from an outside source to be appointed by Starfleet Command.\n\nWe will also need a new Chief Medical Officer. This will be difficult. I am still reeling from the fact that Juliet Ling, someone I trusted not just with my life but the lives of my family and crew, could have been working for the organisation that has caused me so much suffering and grief. But the SI investigators from the Nautilus found the evidence in her quarters; she had been taking their money and sending them reports on us and our activities.\n\nI want to hate her. But I've heard the accounts from my wife and the medical staff, that Ling had provided an antitoxin that almost certainly saved Kami's life when she had been bitten later by a Vlathi, and secured Kami and Misha in the Isochamber to initially protect them. Kami believes that the woman had genuinely regretted her involvement and was desperate to try and make amends. I'd like to think that. I'd like to think that no one is beyond redemption.\n\nThe clean-up of my ship has been completed; you wouldn't know that we had been the victim of an assault. Unless you asked us.\n\nOh, and with the assistance of Fleet Captain Shall's contacts in the Caitian government, I've taken a command decision that will probably get me into trouble with Starfleet Intelligence. Ask me if I care, though...\"\n\n*\n\nDeck 3 Fore -- Security Suite:\n\n\"Captain Koulev.\"\n\nThe man was stretched out on the bunk in the Brig, but now sat up as Hrelle stood outside force field doorway, making a sound as he stretched up. \"Okay, I'm ready.\"\n\nHrelle stared at him. \"Ready? For what?\"\n\n\"I heard you move my crewmen out for transfer before. Surprised you didn't take me along as well.\" Then he smirked. \"Unless of course you wanted this moment alone with me -- and everyone conveniently looking the other way while you took your anger out on me for what I did, before sending me off.\"\n\nHrelle stepped closer to the invisible force field in the doorway to Koulev's cell. \"Believe me, Captain, if I was to take my anger out on you for what you did, there would be nothing left of you to send off anywhere. Except in a tiny little box.\"\n\nKoulev chuckled mirthlessly. \"Oh, you're gonna regret not doing it, Captain, I promise. You won't see justice done to me.\"\n\n\"No?\"\n\n\"No.\" He rose and moved to the water dispenser mounted in the wall opposite him, drinking deeply from a paper cup. \"Even if the Federation justice system had the death penalty, you wouldn't. You see... I'm what's considered a Valuable Asset to your Intelligence people. I have information, contacts, knowledge about the Bel-Zon, data that would benefit them greatly.\"\n\nHe scrunched up the emptied cup and threw it into the corner of the cell as he faced Hrelle. \"My fellow crewmen will languish for a long time in prison, but me? I'm expecting a reduced sentence if not a complete pardon, protection from the Bel-Zon, a new identity when I'm released-\"\n\n\"That won't happen.\"\n\nKoulev smirked. \"Don't pretend you're gonna come in here and kill me, Captain. You haven't got the balls for it.\"\n\nHrelle grunted. \"I've always found that idiom chauvinistic and inaccurate. Equating the possession of testicles with the capability of being brave or savage or just a badass is a fool's notion. I know many who do not possess a set of family jewels, and still have proven more than able to fight, to kill... especially when our cubs are threatened.\n\nAll races love and protect their offspring, I know, but Caitians always believed that there was something actually hardwired into our very beings about it, something that brings out a ferocity that we've only ever seen in our myths -- and I've felt proof of that, thanks to your efforts-\"\n\n\"Captain, I'd love to stick around and listen to you bleat on about your precious little brats, but I've got Starfleet Intelligence to deal with-\"\n\n\"You're not going to be dealing with them. You'll never face a Federation or Starfleet court. You're being extradited to Cait.\"\n\nKoulev's smirk dropped. \"What?\"\n\n\"When the Caitian transport arrives to collect my clan members, you're going along with them. Not as a guest, of course, but a prisoner. As you have positively identified yourself as the leader of your group, and as the majority of your intended victims are Caitian civilians, the Caitian government applied for your extradition. I granted it.\"\n\nHis captive paled. \"You... You can't do that-\"\n\n\"As a Starfleet captain, I have broad discretionary powers over the disposition of civilian criminals. And individual worlds of the Federation are allowed to maintain their own justice systems.\" Hrelle drew closer, until the invisible screen began to crackle in protest at his proximity. \"You'll stand before a special assembly of the Matriarchy Tribunal, to answer for the crimes of the attempted murder of twelve Caitian citizens, including several cubs: Rrori, Sasha -- who is human but has earned herself the right to be called Caitian -- and of course my infant son.\n\nI hear the Matriarchs are very interested in seeing someone willing to murder an infant.\n\n<br >And they won't give a damn what you might know about the Bel-Zon.\n\nThere hasn't been a crime like yours committed on Cait in generations, but the old laws still apply; and, like the Matriarchs, they won't be lenient.\"\n\nKoulev shuddered as the full realisation sank in. \"N-No... you can't... you're just screwing with me-\"\n\nHrelle stepped back. \"Still, before you die, it might afford you the opportunity to find out first-hand what someone can do without testicles.\"\n\nHe strode away, as Koulev called after him, \"Wait, Captain! You can't do this! It wasn't anything personal! It was just business! PLEASE!\"\n\n*\n\nDeck 3 Fore -- Holodeck 1:\n\nThe collected scents of grilling, sizzling meats made Hrelle's stomach groan in protest, despite the snacks he kept in the pockets of his apron. He focused on flipping over the burgers, hot dogs, shuris sticks, chicken pieces -- one roasting giant fat caterpilar -- and, on an adjacent grill where it won't be contaminated by the meats, soylent burgers. Once his expert nose thought everything was more or less ready, he called out, \"Come and get it, before I do!\"\n\nThose assembled streamed down to the grill pits, gathering plates and cutlery, spooning salads and coleslaws and selecting buns and other accompaniments from the waiting tables before moving onto the meats.\n\nHrelle smiled at Sasha at the head of the line, and with two plates in her hand. \"Save some for the rest of us, Greedy Gutso!\"\n\nShe sneered at him. \"I'm getting for Kami, she's keeping an eye on Little Brother on the porch.\"\n\nHe nodded; his wife hadn't strayed far from their son since waking up days ago, or let anyone else near him but the people assembled here. \"Well, she'll want the shuris sticks, don't forget to add plenty of blood relish.\" He picked up a strip of crispy bacon sitting on the grill and dropped it onto one of her plates. \"That's for my Warrior Prince. Not you.\" He ignored the middle finger she responded with as he looked to T'Varik. \"Your soylent burgers are on the next grill. And Kit, I'm hoping the caterpillar meets with your expectations, because I don't think anyone else will want it. Even me.\"\n\nHe then served C'Rash, Neraxis, Eydiir, Jonas and Rrori, before grabbing a plate for himself, calling over to them, \"There's a few hot dogs left.\"\n\nPerched on the long wooden porch with the others, nibbling on the head of the caterpillar, Kit announced, \"Forgive my rudeness, Very Good Friends, I have been nipping at the nectar and am pleasantly drunk, but eating dog sounds disgusting.\"\n\nNearby, Jonas was leaning against Neraxis,swallowing the frankfurter in his mouth to explain, \"It's not actual dog, Kit. It comes from a time when people feared there might be dog meat in the sausage.\"\n\n\"Should you fear eating canine, or anything else of a dubious nature,\" T'Varik reminded them. \"You can always switch to a vegetarian diet.\"\n\n\"I will pass, Commander,\" Rrori declared, looking out at the Caitian sky at late afternoon, with ribbons of clouds stretching out over the sky. \"This is an amazing recreation of the Motherworld, Captain! And is it an accurate representation of your house and your Clanlands?\"\n\nHe nodded, sitting down beside Kami, who was wiping drool from Misha's muzzle. \"The only thing missing are the people. We tried recreating the Clan, but we can't get the scents right, and it just confuses and frightens Misha.\"\n\nSasha drew up to the infant, handed him the bacon, touched his nose and went \"Beep Beep!\" before joining the other cadets on the floor of the porch, looking out. \"If you go past those trees, you get to the beach. There was some excellent swimming there.\"\n\n\"I liked lying on the beach with you too, Tailless,\" C'Rash teased.\n\nNeraxis looked to Sasha. \"Something we should know?\"\n\n<br >The girl blushed. \"Nothing you don't already know about.\"\n\nEydiir sat beside Sasha, watching the holographic birds circle in the soft, still sky. \"I feel guilty. Just sitting around, eating, walking around-\"\n\n\"You're on medical leave,\" Kami reminded her. \"We all are. Let's enjoy the respite while we can.\" She tried balancing Misha and her plate, failing, and finally setting the infant down onto the floor at her feet and tucking into her food. \"Are you all planning on staying tonight? You're welcome to.\"",
        "\"Would we be allowed?\" Jonas asked.\n\n\"Of course,\" Hrelle replied, smiling. \"And we won't be disturbed unless it's an emergency, or if the Junior Squad gets us lost.\"\n\nT'Varik raised an eyebrow. \"Lieutenants Neheru and Velkovsky, and Chief Grev, can hardly be classed as part of any 'Junior Squad'.\" She frowned as C'Rash purred against the back of the Vulcan's neck. \"That is unseemly.\"\n\n\"We're off duty. And all adults here. Except for Misha, of course.\"\n\nThey sat in silence, eating and drinking, or not eating and drinking.\n\nThen Sasha asked, \"Are we going to be okay?\"\n\n\"Of course we are,\" Hrelle responded.\n\nBut no one backed him up.\n\n\"I'd like to think so,\" Jonas muttered after a moment. \"We have to be.\"\n\nSasha began crying, wiping her face and letting Eydiir put an arm around her.\n\nHrelle tensed, but resisted the urge to rise and comfort her. Kami had warned him that it would be like this, for all of them. They couldn't just shake off what had happened to all of them, and with Kami being as much a victim as the rest of them, they would need help from an outside source.\n\nMisha had been sitting chewing on the last of the bacon, when he saw his sister weeping.\n\nAnd began crawling towards her.\n\nHrelle and Kami noticed the unprecedented activity first, eyes wide, Hrelle whispering, \"Look at him...\"\n\nAll eyes watched, collectively holding their breaths as the infant struggled to propel himself along the polished wooden floor towards Sasha, grunting to himself, his diaper swishing around his lower half, his tail sticking out and twitching with his efforts.\n\n<br >\"Go on!\" Neraxis urged, grinning. \"Go on, Ickle Baby!\"\n\nSasha wiped her face again, surprised and delighted by the unexpected action, setting aside her plate and holding out her hands. \"Come on, Little Brother! Come on! You can do it!\"\n\nMisha grunted again, growling as he kept moving, closer, closer-\n\nThey cheered as he reached the girl, and she swept him up in her arms, hugging and kissing him with unadulterated delight.\n\nThe others whooped and cheered. Hrelle took Kami's hand and squeezed, both of them laughing and crying with joy..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "federation",
        "starfleet academy",
        "caitian",
        "vulcan",
        "starfleet"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-24-snakes-on-a-starship"
}