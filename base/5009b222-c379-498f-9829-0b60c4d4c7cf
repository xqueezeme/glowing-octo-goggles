{
    "title": "The Girl at the Spa Ch. 01",
    "pages": [
        "Port George was never a town I would have chosen to visit.\n\nIt sat a really rocky outcrop on the North Cornish side of the Bristol Channel and took the full force of the North Atlantic weather. The village, jutting out on ragged cliff edges, wasn't the most welcoming place to be even at the height of summer and you kind of got the feeling that the Gulf Stream and the warm tropical currents it brought with it took one look at the small granite houses clinging to either side of the harsh unforgiving fissure nature had slashed into the rock face and thought 'fuck that place'. \n\nI'd been there on many occasions and it always rained. I don't mean that with typical British glibness about our weather, it actually did always rain, all the time, every visit, without fail, except for one - when the sun shone on me.\n\nI was a just turned 23 year old Londoner; a not so self-confident as I would have liked, semi-detached suburbanite and full of ideas and fired for my second year of my post graduate course in Clinical Medicine at my old alma mater, Cambridge and training to being a doctor.\n\nMy much-loved (if slightly away with the fairies) solicitor mother was about to head off for her fourth honeymoon (I was conceived three months before her first) with my latest Step-Dad, and I was to stay at our house with my two new step-sisters - 21 year old solidly stout, smart arse, bookishly bespectacled, dark haired and grumpy Leah and stick thin, bitchy, eighteen going on eight, whiney arsed, nothing-ever-right-or-good-enough, blonde Fiona.\n\nLeah was studying at a University in London (which is how her Dad met my Mum) and Fiona was waiting for her results from her fee paying school before she then worked out how she could get into and out of The University of Guildford without having to meet any poor people. \n\nLeah thought I was an idiot and stared down her nose at me because I was studying medicine and not English like her; which she did, all day every day, wherever the fuck she was. The fact I already passed the medical sciences Tripos seemed to go straight past her. \n\nFiona spent her first few days not in school hunting and often finding things to bitch about, and she would descend on the chosen subject with glee, happy in the knowledge that her eternal quest for the rest of the world to meet her perfectly normal, if rather exacting, standards had not been met AGAIN and that the world really did need her. \n\nWith a boyish attempt at psychoanalysis I guessed that with her high achieving sister, (albeit self-proclaimed), her birth mother doing the same as my birth mother and engaged in the process of serial monogamy, and then her wimpish Dad not having time for anyone but himself, she struggled with society and exactly where she figured she fitted in to it.\n\nAt least I knew that for the next fortnight I would be saved from \"Daaaddeeee?\" howled throughout the entire house as the middle aged love birds were off on honeymoon. Daaaaddeeeee was Dave who had worked out that he could never be more than three feet away from my Mum as her love for him could diminish and she could start looking for number five. Because he hardly knew me and Mum was British enough not to feel the need to shout my successes from the roof tops, I kind of think he had the almost the same opinion of me as Leah did. Again, I already had the equivalent to a degree and was two years into the four year clinical course I needed to be a real life medical Doctor. \n\nI had dubbed him 'The Leech' as for most of their days together you couldn't see daylight between them.\n\nFiona's whine that morning had been a cracker and I think it was just because she knew it was her last chance before her father pissed off to 'their' holiday home in Southern France with my Mum to shag themselves stupid for two weeks, and because we all had to bend over backwards to play up to the little witch, the best she could manage went something like, \"Richard has put the HP sauce RIGHT next to the mayonnaise again.\" \n\nSeeing as her and her sister were both avid reality TV watchers, this was accompanied by a Kardashian style disappointed 'what the fuck' hand raise and a stunned disbelieving 'what the fuck' head wobble and this completed, she verbalised her disappointment to whit, \"he ONLY does that because he knows it annoys me, make him stop it RIGHT NOW!\" \n\nThis would be done with folded arms and pursed lips - I'm pleased to say that the brattish floor stomp had finished a few weeks before when everyone, including her Dad, took the piss.\n\n'Daaaddeeee' had never had the inclination to refuse his daughters anything that didn't interfere with him, his business and his closeness to my Mum, and would normally put a gentle hand on my shoulder and ask if I could work a bit harder to ensure harmony in the house as we all 'had to get along'. \n\nI reached into my back pocket and pulled out my little book that I'd been keeping for the three weeks since her term had finished and with a big cheesy grin said, \"I'll add it to the list Dave.\"\n\nBut the irony was lost on him,\n\n\"Thanks mate,\" he said, so I wrote down 'don't put the HP so close to the mayonnaise in the fridge' after 'make sure the toilet paper is torn off of the roll square', 'don't put the mugs so close together in the dishwasher', 'Fiona's laundry has its own basket and MUST be stored separately before being washed with everyone else's stuff' and my personal favourite 'please don't open the large cupboard in the upstairs bathroom, as Fiona keeps her tampons there and doesn't want anyone to see them as they might know when she's on her period'. The fact that Mum and I had previously kept all of our deodorants, body sprays, aftershaves, razors and stuff in that large cupboard was fuck all to do with it.\n\nFor that one, Dave actually said that perhaps I could move all of that stuff into my room while Fiona was home before starting at University. I said perhaps Fiona might like to choose one of the many other cupboards that no one else used, much fairer I thought.\n\nDave did consider this, but as a professional businessman felt he was much cleverer than me and could totally get me to do what he wanted. So he came up with what he thought was some kind of a great deal, throwing in the counter-offer of me moving MY stuff in MY house because, after all, Fiona had let me keep MY bedroom so surely I could meet her halfway... mate...\n\nI snorted something about that having been my bedroom since I was four but Dave just shook his head and gave me his big smile and hand on the shoulder 'we all gotta get along' routine that stopped me telling him where he could put all of Fiona's feminine hygiene products - just.\n\nHe needed me today because I was driving him and Mum to Gatwick so they could fly south. Bearing in mind I didn't really want to listen to them cooing and slobbering over each other for the forty five minute drive, I checked what I had stored on my phone and took a set of headphones.\n\nI walked out to the car and there was Leah giving Dave a cursory peck on the cheek before returning to her 'study' (she growled and snarled if anyone referred to it as a bedroom) to throw herself zen-like into her re-reading of some more Byronic poetry to see if she could drag anymore joy or meaning from it.\n\nFiona hugged 'Daaaaddeee' and begged like an eight year old that she be allowed to come for the first two weeks rather than the flight out to join them for the second two.\n\n\"But I'll have to stay with HIM!\" she pouted as Dave pushed her away to close the car door.\n\n\"Richard has promised to be nice to you Darling,\" said Dave, \"He's writing all of your rules down;\" he said, \"aren't you Richard. Show her your little book...\"\n\nI beamed and fished out my tiny hard back black and red book and gleefully handed it back from my driving seat and continued plugging my phone in the car charger and setting up the audio book I would be listening to, looking in the rear-view mirror at the face of hatred from Fiona.\n\nDave might have taken it for kindness on my part but as for Fiona, she just read the book with all of the fifty or so stupid, whiney complaints numbered and written on a separate page in my best black, red, green and gold felt-tip illuminated calligraphy. It was a thing of beauty and I followed a YouTube idiots guide on the art, learned a couple of fonts and put enough effort into it to make a Cistercian Monk proud, and while it went straight over the head of superficial idiot Dave, it didn't with her and she saw my ridicule of her ridiculousness and she snarled at me with narrowed eyes.\n\nResult.\n\n\"Daaaddeee!!\" she screeched, \"Make him stop writing down what I say!!\" This latest dig at her brought back the brat stamp.\n\n\"But Fiona Darling!\" said Dave, \"How is he to know?\"\n\n\"Yes, how will I remember not to put the Ribena back into the cupboard with the label facing inwards if I don't write it down Fiona? I'm not as clever as you and Leah don't forget.\" I said mirroring her Dad's part pacifying and part admonishing tone.\n\n\"DAAADDEEEEEEE!\"\n\n\"David, we'll miss our flight Darling...\" said Mum not wanting to be involved.\n\nI put the car into first gear and knocked off the handbrake as Dave pushed his daughter away from him just enough and I pulled away, hitting 'play' on the second chapter of a Stephen King audio book I was into.\n\nI kept adjusting the rear-view mirror so I didn't have to keep watching my Mum and the leech staring into each other's eyes and kissing. It wasn't the actual mechanics of the process as such, but the fact that this was the third time I'd watched her go through this.\n\nAlthough Dave was better than the last wanker she'd hooked, I still didn't give him much more than a year; after all his clinginess was already starting to piss Mum off, I could read her body language well. \n\nHe was still trying to 'father' me and it pissed me off no end. I was 23 and in a normal world I would have been working hard and to be honest I actually was and when not on placement at one of three hospitals was at University studying, and NOT being talked down to by arseholes like him. Even my Dad didn't talk to me like that and he was at least entitled to. My constant battle with that whole family was that I wasn't the idiot they all figured I was, just because I wasn't one of them.\n\nI'd told the last husband that tried the same routine that the only reason I stayed at home was that by law I couldn't leave until I was eighteen. Now I was twenty three of course I could go, but the bed and board was free despite her erratic (yes, I said 'erratic', not erotic) love life thanks to certain circumstances. For instance, the vast amount of money my Dad sent in our direction for maintenance for me, even though legally he didn't need to.\n\nWithin an hour I was driving back along the M25 and heading for home, not happy in the knowledge that my new step-sisters would be there waiting for me. I was happy that my door had previously had a lock fitted to it two husbands ago when he used to come into my room - I now know he was hunting for porn or booze and was convinced that his 14 year old step-son had both seeing as my Mum denied them to him.\n\nI let myself in as quietly as I could and tiptoed into my room. There was a thump on my door.\n\n\"RICHARD!!\" It was Fiona, I hadn't even got my shoes off.\n\n\"What?\" I shouted back.\n\n\"Open this door!\"\n\n\"Why?\"\n\n\"OPEN THIS DOOR!\"\n\n\"How about... no...\"\n\n\"Daa...\" she stopped and thought, \"LEAH!!\" She paused long enough to take a deep breath, \"LEEAAAHH!\" she screeched.\n\n\"WHAT!\" Came a second voice. \"Fuck's sake Fifi, FUCKING WHAT!?!\"\n\n\"Don't call me Fifi!\" screamed Fiona, \"Not in front of HIM!\"\n\n\"What's up FIONAAAA!\" said Leah, the sarcasm dripping from her voice.\n\nI couldn't resist and opened my bedroom door, leaning against the frame with a smile.\n\n\"Yeah Fifi, whassup?\"\n\nShe was stood at my door, arms folded and pouting, trying to peak over my shoulder. I moved and pulled the door partially closed to deny her that pleasure. She'd never had the opportunity to inspect my room and cast her scrutiny across what was within, and I smiled knowing it was driving her crazy. Mum had asked me were the spare key was to my room, \"in Cambridge,\" I replied.\n\n\"Good,\" she said, \"makes life easier for me if it stays there...\"\n\nBloody Fiona...\n\n\"I have laundry that needs doing,\" she said dropping some stuff at my feet that even I could see was still ironed and unworn, \"DON'T wash the whites with...\"\n\n\"Yeah, and the washing machine is down in the utility room, it's dead easy to use.\" I said pushing her clothes back towards her with my foot.\n\n\"And how exactly am I supposed to wash them?\" she said pushing them back towards me and looking at me wide eyed like I was the house idiot.\n\n\"The same way I would I suppose,\" I said pushing them back to her again. \"Read the instructions on the front. Next question?\"\n\nNow it was Leah's turn,\n\n\"I'll print you a list of what I do and don't eat, simple enough even for an idiot like you to understand.\"\n\n\"Again, at what point did I become your chef?\"\n\n\"I have studying to do?\" she said, with the Kardashian head wobble.\n\n\"And what if I have studying to do?\"\n\n\"LEAAAAH!\" whined Fiona with a tiny knee flexation that hinted at a stomp, \"Tell him he's not to argue with you!\"\n\n\"Yeah go on LEEEEAAAH,\" I mocked, \"tell me not to argue with you.\"\n\nLeah snorted, looked me up and down in disgust.\n\n\"Just who the fucking fuck do you think you are to talk to me like that?\"\n\n\"Why I believe I'm your step-brother,\" I said with a grin I honestly thought was going to get me punched in the face.\n\n\"You are no relation of mine!\" she screeched.\n\n\"Excellent,\" said I, \"cook your own fucking food then,\" I stepped back and made to close the door.\n\n\"And just what about my laundry?\" said Fiona.\n\nI picked up the clothes, all clean, ironed and folded and still smelling of the drawer liners that had stank out the whole first floor of the house two weeks ago when she had put them in. They were rank but apparently she'd read on the internet that they were the same ones that Taylor Swift used.\n\n\"Well can I suggest that you wear them first, and not just lift them out of the drawer to throw at me. Next can I suggest that if your wear clothes you learn to do what I did, and clean them afterwards.\n\nShe looked down at her pile of clothes, now arranged as she had lifted them out of her drawer. Her bottom lip wobbled and she looked at a retreating Leah.\n\n\"WHY is your door locked?\" was the best she could manage.\n\n\"Why shouldn't it be locked?\" I said.\n\n\"Because... because... well... Oh, I can't talk to you, I'm going to ring Daddy!\" She made to flounce off.\n\n\"He's flying to France Fi...ona,\" said Leah who then saw sisters protruding bottom lip, \"For fuck's sake Fiona!\" She stormed away to her 'study' and her monastic devotion to her dead poets.\n\n\"I HATE you!\" she snapped and flounced away, tripping over the high heels she had put on since her father had left. She turned and saw my grin.\n\nSomehow I just knew this wasn't going to end well.\n\nI laid on my bed, swiped opened my Smartphone and saw that I had mail, there was one from the only man I ever called 'Dad'. \n\n\"Hi Richie,\n\nHope your summer is going well, just to let you know that I've put that \u00a31000 into your account for your holiday we talked about. I know that your Mum has said that you are definitely spending two of your four weeks in France with her and the new love of her life, but don't forget you are always welcome down here at Port George with Meghan and me. The weather is glorious and supposed to be for the rest of this month...\"\n\nTHIS month - as opposed to every other month since records began.\n\n\"...and you can have your own room, in fact if you come before September you can have your own bungalow. We've closed down for August so there's tonnes of room. Believe it or not I've had the Wi-Fi super-upgraded and it even reaches as far as the pool. Anyways, give me a ring and let me know if you're coming; hell, just give me a ring and have a chat, miss you mate.\n\nLove Dad.\"\n\nDad was one of the country's top Chiropractors and spent his life with his second wife of more than ten years Meghan (just one!) down at that arsehole of a village in North Cornwall and had cornered the market looking after rich people's bad backs, dodgy hips and troubled knees, and got amazingly well paid for it. When not doing that he travelled widely and lectured across the globe being a specialist in some non-surgical spinal treatments for babies and small children.\n\nMum tried to take the piss about him all the time about how someone so spiritual in the old days could be such an extremely rich man and how shallow the whole thing was, but I think she was infuriated that he continued to do so very well, was happy in his life and worse than that had found someone he could be happy with, or at least happier than he was with her. Although I don't remember him ever being unhappy with Mum, she had a problem with him.\n\nI was lucky that I was spared much of their shenanigans when they were in the process of splitting up; according to the few independent observers, Mum was too tightly wound while Dad was so laid back he was virtually horizontal. It worked when they first met, and they were extremely happy, so much so I came along.\n\nThen as Mum decided it was time for the family to grow up, she married Dad and once she'd gone back to work expected Dad to become the 'stay at home' and look after me while her legal career went from strength to strength, after all he wasn't a real Doctor and while Chiropractic was OK it wasn't a real job like hers.\n\nDad took me to work with him and I was looked after by any number of his friends and colleagues that worked in the huge Chiropractic Clinic he ran with two friends. It was idyllic and I couldn't have wanted for more love, care and attention, and for a pre-schooler and I had lots of fun, learning to both read and write before I was sent to my first Primary School.\n\nBeing more advanced I was left with books to read and writing to do in the classroom while my compatriots caught up with me. I still loved going to the clinic during school holidays and I think that Mum hated that. No way could she have a share of that 'take your child to work' day that was so easy for my Dad.\n\nDad became more successful and took over the clinic from his two friends and was building up a real reputation, at the same time that Mum was building one too. Hers was as a hard faced, scary court room inquisitor and much sought after District Judge, while Dad was as a nice, gentle healer and for some reason that didn't settle with her. \n\nAs the stipendiary magistracy started to take off, Mum was invited to more and more events and dinners and the slightly too long hair and slightly far away smile of the Chiropractor on her arm wasn't the effect she was looking for.\n\nShe became more demanding of him and after a while there was nothing he could do to make her happy. The final straw, according to Mum's own father, was the year that Dad finished his yearly accounts and had made almost a quarter of a million in straight profit and she took that personally.\n\nShe started to stay out late for cases and then office functions, until finally she decided that she now had almost nothing in common with my Dad and, according to her own father again, decided how she was going to take as much of his money as possible and ensure access to the remainder.\n\nDad had to re-mortgage his Clinic despite his insistence that he could make more money all the time it remained his. Mum I think just wanted revenge for his success that appeared to make him so happy - and of course a lump sum. Solicitor Mum screwed him one final time and he didn't stand a chance against her and her advocacy and knowledge.\n\nShe allowed him almost nothing and I now know how mean she was to him. For instance he asked if he could sleep in the spare room of the large house he'd paid so much towards until he knew what his eventual finances would look like, but she said that he could just as easily make up a camp bed in his office or sleep on one of the many couches he had at his clinic. He didn't even bother making a counter-claim as he knew he was up against one of the best.",
        "So he moved into his re-mortgaged office and got on with it. Through a series of timely projects and hard work he was always able to make look effortless he was back in the money and paying his dues in respect of me.\n\nI went and stayed with him during the school holidays across town much as Mum tried to prevent it by trying hard to get me into play schemes and sports camps, but I loved spending days back with his friends and staff learning about chiropractic and how the body worked, and being so well looked after.\n\nMum did try to explain the law to me, but there was so much interpretation involved and my pre-teen sensitivities objected to the fact that if you had more money than the other person you could bend the law how it suited you, and so much of it was about one person being crappy to another one.\n\nThe human body was much easier and it did what it did, not matter how much money you gave to your doctor. From my first biology lesson at school I knew that I wanted to mend people not help them hate each other.\n\nMum was now semi-retired, still on the bench as a District Judge and specialising in teaching the theatrical and adversarial aspects of advocacy and court room nastiness at several of the best educational establishments in London, and since she had remarried three times and I was way past my eighteenth birthday, any claim she might have had to his much regrown fortune was extremely small and based on the fact that I was still living with her. Dad did pay support for me and always had mind you, and as his income increased so did my child support. Once I got into Cambridge and opened my own bank account he had just funnelled money into it, and this holiday bonus was no different.\n\nI emailed him back,\n\n\"Hey Dad!\n\nThanks so much for the holiday money, I'd quite forgotten about it! Yes, I'm supposed to be in France in a fortnight, but right now I'm just stopping myself from strangling one of my new step-sisters, so a few weeks of travelling around Europe sounds a brilliant idea right now. She's a real spoilt brat of a Daddy's girl and I just know that life it going to be terrible until I get back to Cambridge.\"\n\nBy accident I hit the send button; Dad was obviously online as his reply was instant.\n\n\"Come now, I'll have a car waiting for you at St Ives Railway station, ring me when you get to Plymouth.\"\n\nI was about to reply that I might just when he sent another,\n\n\"I know I don't often say this, but bring sunscreen and swimming trunks!\"\n\nThat was enough, I was on the first day of my month long summer holiday, and it was going to be MY summer holiday, not Mum's or her new husband's or his bratty spawn, MINE!\n\nI packed my big rucksack I'd been carrying back and forth from Uni' for five years and threw in enough stuff for a week's holiday, and yes swimming shorts and a bottle of Factor 30. I stepped outside of my room and locked it with the key.\n\nThere was Fiona, wearing the tiniest bikini imaginable around her skinny pale body.\n\n\"Like what you see Richard?\" she said trying to make out she was some kind of tease.\n\nI looked her up and down. She had never looked 'healthy' since I'd known her, but with my clinical training I was actually concerned that something was awry with her eating habits. The bottom of her rib cage was clearly visible as was the jutting points of her pelvis.\n\n\"No, not really.\" I put my keys in my pocket, \"listen, I'm off to stay with my Dad in Cornwall for a week, so you stay out of trouble ya crazy kids.\" I grinned and winked, \"Ta ta!\"\n\n\"LEAH!\"\n\n\"WHAT... NOW?\" Came the bad-tempered shout from down the hall.\n\n\"It's Richard,\" she said with an evil malicious smile, \"he's staring at me in my bikini... what did you say?\"\n\n\"I said I'm going to stay with my Dad for a while in Cornwall. See ya,\" I made to walk past them both.\n\n\"Hold on, hold on,\" said Leah spreading her not insubstantial frame across the passage way, \"Going fucking where?\"\n\n\"Cornwall,\" I said, \"Little pointy bit way out west, last stop before America, you must have heard of it. If you hit the Atlantic you've gone too far. Excuse me,\" I said and made to walk past her again.\n\n\"Just you fucking hold on one fucking minute,\" said my now foul-mouthed step-sister, \"Just who the fucking fuck said you could fucking go to fucking Cornwall?\" She too had the 'no fucking way' Kardashian raised hand pretty much down.\n\n\"I did,\" I said, \"I'm 23, key to the door, drive a car, vote, get married, everything!\"\n\n\"Just who the fuck is going to look after us for the next two fucking weeks?\" She pursed her lips, folded her arms and looked like a darker, wider, slightly less petulant copy of her skinny, blonde, virtually naked sister next to her.\n\n\"Look after?\" I said in surprise, \"You, as you NEVER stop reminding people you are twenty years of age and pardon me but didn't we spend two weeks trying to find a restaurant that was suitable for Fifi's eighteenth birthday not three weeks ago? That kinda makes her responsible for herself now, don'tcha think?\"\n\nLeah snorted and rolled her eyes, \n\n\"Yeah right,\" she said.\n\n\"Well Fifi, tonnes of support from your big sis look,\" Fiona rolled HER eyes this time, \"She's your sister Leah, you I suppose?\"\n\n\"Errrr, I'm fucking STUDYING ACTUALLY?\"\n\n\"Take a week off,\" I said with a calmness calculated to annoy, \"all work and no play, bad for the soul.\"\n\n\"Unlike SOME PEOPLE AROUND HERE,\" she warbled in a sing song voice, \"I'm studying at a good university.\"\n\n\"A good university?\" I gripped my chin with thumb and forefinger, \"And there's me just studying at silly ol' Cambridge... with a Tripos pass... Wish I was as clever as you... down at...\" I paused, again just enough to annoy, \"Sorry, what was the red brick you go to again?\"\n\n\"Fucking Oxbridge,\" hissed Leah rolling her eyes and trying to chuckle as much as the green eyed monster would allow, \"Still locked in the Victorian era...\"\n\n\"Yeah, a terrible old Victorian University that half of the civilised world wants to go to... and you couldn't get a place there could you.\" It was a statement not a question as Mum had told me she desperately wanted to study Classics at Trinity but had failed her Latin A level. \n\n\"Yes... yes, well that doesn't alter the fact that I need to spend every moment reading and writing notes, SOME OF US CAN'T GO SWANNING OFF when we feel like it.\" She hefted her weight onto her other leg in angry parenthesis.\n\n\"Of course you can Leah, you're only a second year with a three month summer break and a whole year before you need to put in your dissertation, whereas I have a month, four straight weeks before I have to be back at Suffolk Hospitals NHS Trust, and you know what? I'm not spending a fucking second of my four weeks babysitting two fucking grown-ups,\" I smiled, \"Anyway, you work too hard.\" I smiled and pushed past them both, dragging my rucksack between them.\n\n\"Owwwaaaah!\" howled Fiona.\n\nI was done playing,\n\n\"Get out of the fucking way then.\" I said under my breath with a long held snarl.\n\n\"You swore at me!\" exclaimed Fiona.\n\n\"Yeah, just like Leah did, or is that a special girlie F-word that doesn't count.\" I started my descent of the stairs hoping to fuck I had everything I needed.\n\n\"And precisely WHO the fuck is going to fucking cook for us?\" snarled Leah.\n\n\"I figured that two borderline geniuses like you could knock up the odd Lobster Thermidor or moules marinere between you?\"\n\n\"We don't know how to cook!\" They both exclaimed in disgust as if the mere concept was below them.\n\n\"Do what I did when I reached eighteen and grew up,\" I shouted, \"fucking learn!\" I trotted down the stairs with a grin on my face, \"there's a load of microwave dinners in the freezer, you heard what my Mum said this morning.\"\n\n\"Errr... I'm a VEGAN actually!?\" said Leah.\n\n\"And if you listened for more than the first two sentences this morning, you would have heard when she said the Vegan meals all have a 'V' written on the packaging - remember?\"\n\nLeah raised her arms and her bosom and turned her head away from the increasingly inconvenient truth.\n\n\"Yes well... well, I'm GLUTEN FREE!\" barked Fiona.\n\n\"No you aren't!\" I said, \"you put a mountain of crap away at the wedding reception and your birthday party, and since you've lived here, good try Fifi.\"\n\n\"But... but...\" The ugly sisters took it turns to try and interrupt me, but my mind was set.\n\n\"Ladies, I'm going to miss my train; there's an excellent chippy around the corner,\" I said, \"and the Indian at the bottom of the road is quite splendid, don't have the rice dishes until after seven in the evening. It means they've used up all the rice they cooked for lunchtime, safer that way. Trust me,\" I smiled, \"I'm nearly a doctor.\"\n\n\"FUCKING... FUCKING...\" said Leah.\n\n\"Not much of a student are you?\" I said looking up the stairs at her in disbelief, \"Can't cook food, can't work a washing machine? Mind you I suppose with your level of genius you are up at the high table explaining 'She walks in Beauty' or The space alien reference in 'Childe Harold's Pilgrimage' to the senior fellows all evening while you're in halls.\" I took my Gor-tex jacket from its hook by the door, this was Port George I was going to after all, \"Until later ladies.\" I said and shut the door behind me.\n\nAs I stepped down to the pavement I looked up to the open first floor window and heard, \"FUCK... FUCKING... FUCK...\" getting fainter and fainter as I headed for the underground station thence to Paddington and the West of England. The last thing I heard was \"What fucking alien?!\", some running feet and I figured that would keep her going until I got back.\n\nI giggled as I walked down the stairs to the tube station. There wasn't an alien reference of course but I'd re-read Douglas Adams 'Dirk Gently's Holistic Detective Agency' a few weeks before and couldn't resist.\n\nI had a quite passable brunch from the buffet, and was just getting to the end of the next chapter in my Audio book as the train reached Plymouth and I rang my Dad. He said that I was to look out for a black Land Rover Discovery when I finally got to St Ives.\n\nAfter I'd finished chatting with Dad, I found I had an answerphone message from Mum,\n\n\"Richard Darling, Leah tells me that you've abandoned those poor girls in London, what's going on Darling honestly! Ring me back at once.\" the disappointment in her voice was calculated but I was long past being taken in by it, my Mum was lovely but a classic drama queen when necessary.\n\nI sipped some more of tea and nodded off.\n\nAt Truro I was woken from my dreamless sleep by another phone call and it was Mum again.\n\n\"Richard, why didn't you ring me back?\"\n\n\"Because I'm on the train!\"\n\n\"You will turn round and go back home NOW!\" she snapped like I was a ten year old.\n\n\"I'm in Truro,\" I said looking out of the window at the station sign.\n\n\"WHERE?\"\n\n\"Truro Mum,\" I said.\n\n\"It's your damned father again isn't it?\" She snarled, \"KNEW he would get involved, KNEW he'd have to spoil things, KNEW that HE couldn't let me be happy...\"\n\n\"Mum!\" I snapped, \"It's nothing to do with Dad and all to the do with those fucking girls I've inherited as step-sisters, and you and lover boy have dumped on me!\" I shouted but stopped once I realised that the others in my half empty carriage were watching. \"Mum, Dave is a nice bloke but YOU married him, his daughters and none of my concern and I am not spending two of my four weeks off baby-sitting a spoilt nasty rich bitch and her stuck up sister who, as she keeps reminding me, is only 23 months younger than me but SOOOOOO much more mature, grown up and responsible!\" I took a breath, \"I asked Dad if I could come and stay with him; me, not him.\" I calmed, \"You have a great holiday Mum, the ugly sisters are both over eighteen and can take care of themselves.\"\n\nI heard a giggle from Mum.\n\n\"But...\" It was obvious that the phone was snatched from her hand.\n\n\"Hi mate,\" it was Dave, \"look Richard, I was kinda hoping you would be keeping an eye on the girls for me.\" It was my turn for the parental and admonishing tone evidently.\n\n\"Why? Can't they look after themselves?\" I said.\n\n\"Well, you see...\" the line went quiet.\n\n\"Leah is almost twenty one as she hasn't stopped reminding me and we've just celebrated Fiona's eighteenth birthday.\"\n\n\"Richard,\" he oiled, \"we all have to work to...\"\n\n\"You don't need to have that conversation with ME Dave,\" I said, \"Ring Fiona and ask her about how she's changing to meet me halfway, yes?\" The phone at his end went silent yet again, \"Because, other than graciously allowing me to keep the room I've lived in for eighteen years, so far the changing has all been in my direction. Once you've spoken to Fiona and told her to stop bitching at everything I have, say or do, and to not treat me like her personal servant, then tell Leah I'm not her chef then you can ring me and we can have this conversation again, can't we... mate...\" I was bored and looked out as the platform of Truro Station outside, \"You and Mum keep telling me that we are step-siblings, all I see is a me spending half of my precious holiday as a live-in cook and bottle washer for two girls that never seem to have lifted a finger other than to call room service... hang on,\" I said, \"just going through a tunn...\"\n\nI disconnected the call, switched off my phone, sipped some of my tea and closed my eyes.\n\n\"St Ives mate,\" the guard gave me a shake and I came around.\n\n\"Oh thanks, very kind of you.\" I stood and grabbed my bag, stepping towards the door. In these days of less trains doing more work, you rarely have time to stretch and collect your thoughts or possessions as the bloody train pulls out again.\n\nI stepped down to St Ives Station, and headed for the exit. The sun was shining brightly and it boded well. I stuffed my Gortex jacket through two loose straps on my rucksack and it stayed there for a month.\n\nThere, as promised, was a large black Discovery with blacked out windows and I walked across to it. I'd been collected in one of these before and Dad had a selection of them for his more camera shy clients. Or at least that was what people were supposed to think. No one in their right mind would ride the train to St Ives THEN sneak into a blacked out car; OK he did sometimes have clients collected from airports, or have staff drive to London but that was pretty much it, they were mostly for effect.\n\nI walked across to his latest, it's registration number SPA AL1.\n\nThe electric passenger window wound down.\n\n\"You must be Ralph's son,\" said the sweetest accented feminine but deep, well-educated voice with a hint of West Country. I got closer to the car and looked in. The female driver had a visage to match her sweet voice. \"I'm Alice,\" she purred, her dark brown eyes staring out from a beautiful face made up to perfection. She was wearing a cropped black vest, tailored to her fantastic figure and I could see smooth tanned skin and the suggestion of a cleavage under the strap of the seat belt, \"chuck your bag in the back Richie,\" she said.\n\nOnly my Dad ever called me Richie, but I swore that this girl could call me Richie as often as she liked!\n\nI did so.\n\nI climbed into the front seat and looked across at the girl, spellbound. She was wearing a black dress slashed to her knee in the same material as her vest top. She was very curvaceous and watched me looking at her. She giggled and held out a hand, \n\n\"Hi Richie!\" she said.\n\n\"Hi Alice,\" I said and we shook.\n\n\"Good journey?\" She said as she pulled out of the car park and into the stream of traffic\n\n\"Yes,\" I said, \"thanks to Great Western buffet lunch and a Stephen King Audio book.\" I waggled my phone.\n\n\"Oh I love Stephen King! Which one?\" she turned that wonderful smile on me again.\n\n\"The Stand,\" I said.\n\n\"Fantastic! I love that story!\" Again, that wonderful smile and I could only smile back, but thinking quickly I took the chance and turned my phone back on and pulled the earphones free and pressed play and the narrator spoke about the hero escaping and Mother Abigail playing her guitar. Alice tilted her head to one side to be closer to mine and I smelled her perfume. \"I'd love to listen to that all the way through,\" she said, \"how far have you got?\"\n\n\"About a third of the way,\" I said with a hint of disappointment.\n\n\"Oh, well I'm sure I know enough of the story to catch up to where you are.\"\n\n\"Yes,\" I said, \"Hang on...\" I pressed the buttons on the expensive car stereo and suddenly Grover Gardner was blue-toothing his way across the 8 beautifully balanced speakers and it was like he was in the car with us.\n\n\"At twenty two minutes of nine by the clock over the sheriff's office doorway, the lights went off. Nick Andros had been reading a paperback he had taken from the rack in the drugstore...\"\n\n\"Wow,\" said Alice, \"I like that. I've only ever read it before, having someone read it to you is quite spooky!\"\n\nWe listened some more and the Discovery ate the miles on the flat and on the hills in the way that Discovery's have with them.\n\nBy the time I saw the sign for Dad's Large Spa and Practice, Larry and Nadine were escaping Manhattan, and we had to turn it off and leave them to it.\n\n\"I'd like to listen to more of that,\" said Alice, \"Is it on Disc or a download?\"\n\n\"Audible,\" I said.\n\n\"Perhaps you might lend it to me,\" she turned a most ravishing smile on me, \"Or perhaps you could bring it to my room and we could listen together?\"\n\n\"I... err... I'm sure that could be arranged!\" I stuttered.\n\n\"I'll look forward to it,\" she said with a smile.\n\nIn seconds, the electronic gates were swinging open and she was parking the Disco in one of the staff parking spaces at the front of The Spa next to another Black Disco and a large black Jaguar, and I got my bag from the back seat.\n\nAlice opened the main door with a swipe card and showed me in; she walked into the reception clipping the car keys into a metal cabinet with lots of others in a small back office. She tapped a computer screen and it came to life. I had never met Alice before, and I guessed she was one of the numerous staff that Dad employed here.\n\nWhatever was going on she was fucking gorgeous, and everything she did, including walking and talking, just seemed to drip sensuality. She finished with the computer and looked across at me, still bent at the waist, her perfect hourglass figure outlined by the tailored clothing and the daylight from the windows behind her.\n\n\"Come through to the garden,\" she said in her wonderful deep tones with just a hint of West Country to her voice, \"Meghan and your Dad should be there.\"\n\n\"Where is everyone else?\" I said looking around for the dozens of people that were normally walking around.\n\n\"Your Dad has sent everyone home for the month, on full pay I might add,\" she said with a grin, \"he's lovely like that. Only he likes to have August to himself, always has done. He loves this place and always likes it to himself if and when he can.\" She grinned. \"Watch out, sometimes both him and Meghan go all naturist and just stop wearing clothes. Meghan will warn you though, she's got a very nice body, mind you.\"\n\nI looked around and it was almost as I remembered it, white marble floors, the sounds of running water, green plants and the occasional statue; the lack of people was strange - like coming to Shangri-La only to find that all the immortals had gone out for the day. \n\nThe fountain poured, the wind-chimes chimed and more than anything the sun shone. This was going to be a nice summer, something Port George had never been before in my memory.\n\nI'd come to The Spa fairly often in my growing up and it had always been cold and/or raining, and I had met Meghan quite a few times, she was very nice, attractive and gentle in everything. I'd missed their wedding as Mum 'couldn't remember when it was' and couldn't manage to get me, just started at my secondary school, all the way to Cornwall 'on her own'.",
        "Dad had re-started his Chiropractic Clinic from a house in London once Mum had taken him for almost everything. But he was always in the right place at the right time with the right product, and it just seemed to go his way. He studied his craft even more and found several niches that he made his own. This saw his house became a much larger Clinic that he took out a long lease on and this time took on staff rather than partners. With the extra room he was able to offer the occasional two or three-day 'recovery sessions' - detoxes really - along with his Chiropractic. This would include exercise, massage, acupuncture, hot rocks, aroma therapy and all that alternative jazz, but his space was limited as were the facilities. \n\nMum was outwardly supportive and happy that things had finally started to go well for him, but I could see that she actually wasn't. When one of the senior partners in her firm told her how fantastic he felt after going to McNair Chiro and that Mum should think about visiting him about her lower back problems. She demurred, until another partner that had known her for years was making cutting motions across her neck and tapping her ring finger.\n\nMum noticed and admitted that he was her Ex. She then had to bring him and his firm down of course, and hinted that part of the detox wasn't just about clearing out their systems of the wrong 'foods' hinting that other substances and liquids were involved!\n\nThis was no damage to his business such was his skill and prestige, and within weeks his next big break came after talking shop with an older lady that had been recommended to him. After he had cured her of almost crippling back pain, she offered him a free weekend at her 'retreat in the country' and he took her up on it. This was 'The Spa', a former holiday camp turned into an alternative health centre in the seventies and badly in need of updating.\n\nFrom his first visit he loved the place and after carrying out some of the updating works would borrow The Spa from the now cured client and latterly friend, the lovely, slightly batty old lady universally referred to as 'Grandma'. \n\nGrandma was a great believer in Homeopathy, Eastern philosophies, meditation, yoga and natural healing, and she approved of his now refined 'recovery session/detox' business model, so he began to rent the whole place from her for June, July and August each year. She would take his money and fly to India (her spiritual home) and (so everyone said) would eat curry, drink lassi, meet some Yogi's, meditate and smoke an awful lot of marijuana. \n\nI never have found out why it's called The Spa, because there is no natural spring or anything that you would expect from such a name. It was called The Spa when Dad started working from there and has been ever since. In the second summer there Dad met Grandma's granddaughter Meghan the most excellent masseur, they married two years later.\n\nThe business model and the site were an instant hit, and Dad offered it to some of his more respected, at the very least richer clients. Most of the Spa's new footballer, rugby player, jockey and athlete clients tended to keep quiet about my Dad because he was so bloody good at his job and they didn't want their opposition taking advantage of him and his skill. Also, with internet betting taking off many of them didn't want word to go out that they had a fitness issue, so Paparazzi hanging around wasn't ideal, and the natural security and remoteness of The Spa was ideal.\n\nNaturally secure and remote wasn't the half of it.\n\nBuilt into a small plateau with high cliffs around it, all Dad needed to do was install electric gates and CCTV cameras at certain points to ensure total discretion for his visitors. The three blacked out cars that he rented just added to it.\n\nHe struck gold when he was introduced to his first 'footballer's wife' by her husband. She went to The Spa and had the full detox treatment of Dad's magic manipulating hands, Meghan's massage, the hot rocks, acupressure, aromatherapy, yoga, exercise sessions and relaxation with added tall bronzed male instructors, good food well prepared and sauna she was in paradise. But most of all she loved the absolute discretion of the place born of the great security. She told ALL her friends of course, but told them not to tell anyone else.\n\nSuddenly his door was being knocked off of its hinges by a string of C and B list celebrities competing for space with the athletes and professional sportsmen. One of the B-listers suddenly became an A-lister and during one of her 'finding herself, life Detox' moments after breaking up with her B-list boyfriend she was Sunday Supplement reported as being at The Spa. \n\nFrom that Sunday everyone wanted to be treated by Dad at Port George, including more A-listers. Dad only had twelve weeks, and eight cabins. Demand soon outstripped supply and of course the price went up accordingly.\n\nThe Spa was so well received by his clients that by his second year he had sold out his next three summer seasons outright. He asked Grandma if they could enter into a partnership.\n\n\"No,\" she said having an idea of the money involved, \"But I'll sell it to you?\"\n\nDad bought the place for a song, plus a regular pension he sends out to Grandma who lives in a houseboat on a long quiet Kashmiri lake for most of the year and like a memsahib of the empire moves to Shimla to escape the heat of the summer. \n\nShe lives in some grandeur there and along with the interest that she gets from the lump sum and the monthly pension Dad sends her representing the other half of that lump sum. She also has an income from some of HER former Spa guests who fly out to the Punjab to spend some time with her and receive guidance which is, according to Meghan, turn up at Grandma's place, strip down to T-shirts, drink lots of lassi, eat an awful lot of curry, meditate (fall asleep generally) and smoke marijuana when they wake up.\n\nUsing the quite significant deposits paid by the elite clientele he attracted and a mortgage on his place in London, Dad refurbished The Spa so Grandma probably wouldn't recognise it. The Indian styled bungalows that were a left over from the holiday camp were completely refurbished and brought up to what the elite would want and he added a couple more bungalows and turned the other buildings into therapy rooms, offices and a professional kitchen and large dining room.\n\nIn his second year of ownership, he bought the abandoned farm next door on the same plateau from a local family and applied for planning permission to build another eight bungalows. The council committee grumbled about the disappearing local culture and green space but were reminded by the architect the amount of money each of the new bungalows would bring into his business and by implication the local community - per week. They all looked again, and one of them coughed. The architect said that no trees were being cut down as this was old very poor-quality grazing land that almost nothing would grow on.\n\n\"Is this REALLY how much each bungalow makes a week?\" said the Planning Committee Chairman used only to caravan holiday parks and farmhouse and barn conversions to holiday lets.\n\n\"Yep,\" said the architect, \"Of course most of the income is derived from the therapy that the applicant carries out. He employs local people in all of the service and office jobs, and is also training local young people to be therapists. He supplies his kitchens from local farms and market gardens and he's worked with some of them to upgrade to fully organic produce within the next five years.\"\n\n\"All in favour?\" said the Chairman. It was passed unanimously.\n\nDad paid off the mortgage halfway through the fourth year, knocked down two buildings and installed a pool.\n\nHe now lives permanently at The Spa with Meghan, and has his staff operate the London Clinic and Dad goes there to meet special clients. Dad is of course raking it in, and lives extremely well on it. So, I might add, do I.\n\nAlice led me through to a large sitting room and there was my Dad.\n\n\"Special Visitor,\" said Alice.\n\n\"Richie!\" said my Dad leaping to his feet and coming across to hug me, \"How was your trip?\"\n\n\"Excellent, other than Mum ringing me to bitch about me leaving the ugly sisters at home on their own.\"\n\n\"Her problem not yours mate,\" said Dad.\n\nMeghan came across with a huge smile on her face and hugged me too. I hadn't seen her in a couple of years as she hardly ever came to London with Dad. Since I'd last seen her, I must have had a growth spurt or something and I noticed that I could now see down the front of her white billowing shift dress and her large still shapely breasts and the dark brown nipples crowning them, unfettered by a bra as always. She turned to put down her spectacles and it pulled tight across her hips and I guessed that she wasn't wearing panties either.\n\n\"Alice Darling,\" said Meghan still holding my hand, \"would you be a love and make Richie some tea?\"\n\n\"Of course,\" she said with a smile and headed for the kitchen returning with a tea tray five minutes later. She had a bit of a long face, and handed a phone handset to Dad.\n\n\"Sorry Ralph, thought you'd want to take this one.\"\n\n\"Let me have it,\" said Meghan, and she walked out of the room chatting.\n\nDad poured the tea and Alice disappeared for a few moments; on the patio with the most fantastic view of the coast and the Bristol Channel, Meghan was pacing up and down and discussing something of great import.\n\nShe pressed a button, and came back in.\n\n\"Mateo has hurt his tricky calf muscle training for a summer friendly, wants you to come and 'save his career', his words Darling, not mine.\"\n\nI saw Dad's shoulders drop.\n\n\"It's bloody typical,\" said Dad, \"No bugger it, tell him to contact Paula, she's on duty in London.\"\n\n\"He's asked for you specifically Ralph,\" said Meghan \"He's already told Paula that she isn't up to it, and he said that Sean doesn't like him.\"\n\n\"Richie has just got here!\"\n\n\"And Richie will still be here when you get back, it's just a Day's work Darling, and staying friends with that hooligan alone for the rest of his career will probably be more than enough to pay for all of Richie's tuition five times over!\"\n\nDad had already paid for my five years at Cambridge.\n\n\"Shit,\" said Dad.\n\nAlice appeared from behind me and put both hands on my shoulders and whispered in my ear, and I jumped a bit. She smelled wonderful.\n\n\"It's Mateo Rodriguez, he's...\"\n\nHe was one of the finest players in the Premier league, world-renowned and a pain in the arse.\n\nI turned to her,\n\n\"Rodriguez? My Dad really is Chiropractor to the stars!\"\n\n\"And then some,\" said Meghan with a grin, \"Mateo thinks your Dad has magic fingers, and can pull, twist and tug out any sprains, pains and training strains, and all manner of assorted injuries, won't have anyone else. Spoilt Mexican bastard.\"\n\n\"He's Colombian,\" said Dad, \"But he's a direct introduction to some of the richest players in the Premier League and into Europe and South America; Oh, what a pain in the arse, I TOLD him we were shut down in August.\" He slumped in the sofa next to me and looked thoughtful, \"And Meghan is right of course, it's the difference of you not having to take out a student loan.\" He steepled his fingers, \"Fuck,\" said my Dad with a tone I hardly ever heard from him, \"Tell him to send a car to Paddington and that seeing as we're on shut down its double time.\"\n\nMeghan went back into the garden and turned on the phone, and I heard her bright chirpy voice again.\n\nAlice, still behind me, giggled.\n\n\"Double time?\" I whispered up into her lovely face, inches from mine.\n\n\"Twenty five grand rather than ten,\" hissed Alice with a grin. I could feel the warmth from her skin and her breath on my neck was making me goose-pimpled.\n\n\"His assistant says if you can get to St Mawgan, he'll send a helicopter.\"\n\nThat'll do; Ali Darling, would you drive me to Mawgs, I'll tell Mateo to buy you something nice for your trouble.\"\n\n\"Of course,\" she said with a grin.\n\nDad poured the tea and we all sat down to tea and biscuits, me only slightly put off by Alice sat to my right, her arm on the sofa behind me and touching me every time she leant forward for her cup and to make it worse Meghan he would lean forward for her cup or a biscuit and I would see her full breasts in her gaping dress. Dad didn't seem bothered by any of it.\n\n\"You two had better go,\" said Meghan putting her cup down one final time, and Dad and Alice both rose.\n\n\"I'll be back in a couple of days Richie,\" said Dad, \"promise.\"\n\n\"No problem,\" I said, \"I'll enjoy the sunshine while I'm here.\"\n\nDad stood up and walked across to Meghan and hugged and kissed her, \"I'll get my grab-bag from the office, I'll see you in a couple of days Darling. You two will look after my boy for me, won't you?\" He grinned across to Meghan and Alice.\n\n\"Oh yeah,\" they both said in unison - both with the same suggestive smiles on their pouting lips.\n\n\"Have some more tea,\" said Meghan, bending and pouring me a second cup and enabling me to see all the way down the tunnel of her white dress from her big tits to the hint of pubic hair at the apex of her thighs!\n\nWe chatted about my training, and she seemed quite impressed. I told her about post graduate Clinical Medicine at Cambridge and how much I was loving it. She smiled. I always got the feeling from Meghan that while she thought mainstream medicine was OK it was no substitute for the real thing.\n\nShe offered me the tour of the place, as there had been lots of changes since I was here last. We started back in reception, and it was very glamourous with the cold and cleaned coffee machine waiting to produce its next expresso or cappuccino in four weeks' time when the paying guests returned.\n\nThen it was through to interview and treatment rooms and there was any number of massage tables, a few plastic skeletons, a few tall racks with strings across at every level, full height posters of the human musculature, bones, nerves and all the rest of that Chiropractic stuff that had so much linkage to the medicine I was learning.\n\n\"This is Alice's treatment room,\" said Meghan, \"she's probably the only person in the place I'm willing to say is a better masseur than me! Certainly, the only one I let massage me and your Dad.\" I looked on the wall and there were lots of certificates outlining her Chiropractic qualifications as well.\n\nMeghan ran a finger across a table edge, the surface covered with bottles of varying kinds, then an acupuncture steriliser, a heating unit for stones and a mess of other stuff I didn't understand or recognise. \"Like most of us here she learned it all from your Dad, and some from me and Grandma of course. A natural that girl.\" She looked proud.\n\nThen we were out through the sauna, and more tables. The smell of chlorinated water hit my nostrils and I knew the pool was next. But it wasn't just one pool. There were small one person therapy pools, pools with cranes for the disabled and wheelchair bound and then finally the door out to the main pool. This was now fully built in to the biggest glass structure ever, with air handling for the hot and cold days. Not that I'd known many hot days at Port George of course!\n\nShe took me back out to the now silent kitchens that would cater for the most discerning and contrary palettes. Meghan flipped through some laminated diet sheets and mentioned a few names and said things like 'irritable bowel', 'coeliac', 'insists on gluten and diary free', then the TV newsreader that was a 'strict vegetarian right up until they've really chilled out then they order the chef's steak and kidney pie when no one's looking' before mentioning a very popular prime time presenter.\n\n\"Just a pain in the arse, but worships Alice, won't have anyone else touch them. They complain about the food because they can, not because there's anything wrong with it; reckon they are thinking they are getting their money's worth out of us but Alice and I get our revenge when we send out the bill, that fucker pays an extra \u00a350 a day in service charges for the grief they give to waiting and kitchen staff...\"\n\n\"And they keep coming back?\" I said.\n\n\"Every year! Booked twice more before Christmas,\" said Meghan, \"and we've already put an extra \u00a3100 on the quote because of how outrageously unpleasant they can be to any one that isn't me, Paula, Gwen, Sean, Ralph or Alice.\" She shook her head, \"twat. I shall ban them next time; that way they'll have to go begging to Ralph and he'll put the price up again.\"\n\nWe walked out into the dining room with its wonderful d\u00e9cor and views, then out onto the balcony. This took us out and down into the secluded gardens and the decorative railings I remembered from my last visit. \n\nThe other side of the railings on this walkway was a sheer cliff drop of about forty feet down to the main road, another addition to the great security they had here, which made the camera shy and media conscious even more keen to come here for diets, 'get well' detoxes and I'm pretty sure some 'drying out' and 'cold turkey' treatments that Mum had alluded to.\n\nFinally we were out and into the car park again just as the electronic gates swung upon and the same blacked out window Range Rover swung in.\n\n\"And here's Alice!\" said Meghan, and Alice beamed me the loveliest grin when she saw me again. \"Right Darlings,\" said Meghan in a very similar accent to Alice's, \"I'll go and start dinner, can you show Richie to his room Alice, put him in the best one.\"\n\nAlice grinned,\n\n\"You said I was in the best one?\" She put her hands on her hips and pouted. Fuck but she looked sexy!\n\n\"Alright, the best one after yours then,\" said Meghan meeting Alice's big smile with one the same.\n\n\"Of course, come this way Richie!\"\n\nWe went back into the reception and I grabbed my bag and followed Alice out into the gardens and along one of the covered verandas to a large bungalow.\n\n\"This is one of the most expensive ones,\" she said, \"in fact this is the one Mateo stays in when he comes here.\"\n\n\"Doesn't Dad always go to him?\"\n\n\"Nah, he comes here for spiritual rest, and as well as that he loves to annoy the press; the bloody paparazzi hate it when he's here and try to get pictures of his latest girlfriend or boyfriend.\" I raised my eyebrows, \"Oh yeah, and he's brought both here with him.\" She grinned and pointed out to sea, \"There,\" she said pointing out across the cliff edge with protective trees and greenery, and the large stones that had been in place since the last ice age, \"There's the reason the media hate it when he and his mates come here.\"\n\n\"Why?\"\n\n\"Think about it,\" she said pointing down the garden to the currently placid Bristol Channel, \"They can't get level with us for photography or filming from the south, east or west, even with drones, the trees are just to thick. From that direction,\" she pointed north towards the sea, \"they have to fly helicopters or take their lives in their hands and try to scale the cliffs. When the wind picks up even the coastguard don't fly along these cliffs because the wind blows them straight up and into the rock face, nearly happened twice since I've worked here. The trees make it even harder. Ralph had some hidden winches installed so if someone should be unlucky enough to wash up down there, he can winch them up on a special cradle. Only the Coastguard, RNLI and the Harbour Master know about it of course.\n\nWhen Gra'ma owned the place she said that the Royal Marines Special Boat Service from Plymouth used to train on them, you see that big rock there?\" She pointed and I looked. It was taller than the rest and I could see it had been roughly hewn into a Celtic cross, \"There's half a dozen names on it, all poor boys killed on the rocks below. Every couple of years we have a few young Marines, a few older ones with beards and very heavy sun tans, and some old boys in green berets and blazers and medals and they stand to attention on the lawn, blow a bugle then throw poppy wreaths down there. Meghan always puts on a special lunch for them with lots of booze, very sad.\"",
        "\"Wow.\"\n\n\"You wouldn't know it today of course, not when the sun is shining. As soon as the local tourist board tweeted that the sun was out and the weather was balmy, the answerphone hasn't stopped ringing from rich sportsmen and women and a few of Hollywood's finest leaving messages and asking for this very cottage and promising a King's ransom for it; your Dad wouldn't have it of course, not when he realised that you were coming.\"\n\n\"Turning down all that money though?\"\n\n\"Nah he's cool with it. Besides he's sent all the staff off on their holidays don't forget, and many of those spoilt millionaire bastards can't even boil a kettle. They are a fucking nuisance, hence Meghan makes them pay through the nose for it when they are here.\"\n\nI stepped inside. It was quite splendidly furnished \n\n\"Wow!\" I said.\n\n\"You can thank any number of footballers, actors, rock stars, models, and their partners AND some quite significant Royalty.\"\n\n\"I won't ask,\" I said.\n\n\"Good,\" said Alice, \"that way I won't have to tell you.\"\n\nShe showed me to a short hallway, took my phone to connect it to the Wi-Fi, walking through to the bathroom with it.\n\n\"Did Meghan show you the phone lockers?\"\n\n\"No,\" I said.\n\n\"Well most of the time we don't let guests have phones in case they start taking pictures of other guests. The staff are trained to spot cameras of course, and we have people that advise MI5 coming and teaching us all about how to spot covert surveillance. That's why each room has a laptop or tablet, and a proper old-fashioned telephone that we tell everyone is recorded for their and our security, they sign that they know it'll be recorded and that we'll hand over any evidence to the police or the offended party's solicitor if they tell Auntie Ada who else is staying here. As well as that we have the guests in swimming costumes, shorts and vests, that sort of thing, kinda hard to hide a wire and a lens!\" \n\nShe walked further through the bungalow, \"and this is your bathroom,\" she said, \"the bath has a Jacuzzi function on it but to be honest the ones across in The Spa are a thousand times better and you can jump in the pool afterwards.\" She walked through to the bedroom, and had just the most fantastic smile on her face. \"this is happy room Richie,\" she said, \"Oscar winning movie stars, national and international politicians, rock stars, football players and sports personalities and a fair few millionaires have all slept in this bed; some with their husbands and wives, some with their boyfriends and girlfriends and a fair few with other peoples' husbands and wives.\" She wrinkled her nose at me, \"don't worry we change the sheets regularly...\"\n\nI could feel the erection that had been fighting to make itself known starting to stir in earnest, fuck but Alice was probably the most overtly sexual woman I'd ever had to deal with. \n\nI'd gone to a good but very religious all boys school Mum had chosen, and the second one pupil so much as smiled at another they were descended upon by teachers and dragged to opposite ends of the premises. At college, because of my lack of contact with girls I was very shy but had gone for coffee or a drink with a few girls, and a couple of which I did drag up the nerve to ask them on a date. One of those dates actually saw us sat in the corner of a bar kissing and cuddling. Sadly for me I'd left it a bit late in my second year of college and with that particular girl, and as soon as the exams were finished she went on a long all-summer travelling holiday with her parents, then went straight to university after that. I'd gone to Cambridge, she'd gone to Edinburgh.\n\nOK, I'd watched quite a bit of porn (cheers Pornhub!) but was still a virgin. Once I hit seventeen Mum left me in the house to my own devices and seeing as I hadn't burnt the place down or played truant from college, she decided that she would 'have the odd evening away'. This of course became regular evenings away and after some nagging and my own bank card that I could buy groceries and the occasional takeaway and cinema trip, I was pretty free. The down side was that I thought that Mum must have had the place wired, for every time I got brave and thought about taking advantage of my isolation and contacting some old 'friends that were girls' from my college and inviting them to home for a meal, she would reappear that day.\n\nI thought that moving away from home would do it but my initial course had been all male for the first time in forty odd years. I'd tried dating in the same way I had at college but again had two sessions of kissing and cuddling in 'moon-washed college halls' but for some reason I'd struck out with all of the nice girls I'd gone out with. Not one of them had gone past the third date and on the last occasion I asked the girl what it was about me that had the girls walking away from me in droves.\n\n\"Rich,\" said the girl, \"You're too nice mate,\" she smiled at me kindly. \"You're very hot looking honest, but I really thought that you were gay for the first year.\"\n\n\"What?\"\n\n\"Rich, don't take this the wrong way but you're a great guy and you have great promise but... but you're hard work mate; and you try waaay to hard and, to be honest, most women don't want to give lessons. AND,\" Here it comes, \"I mean...\" she said, \"it's great that you have no money worries but the rest of us do...\"\n\n\"Oh,\" I said, \"Never knew I had even mentioned it...\"\n\nShe pecked a kiss on my cheek and hugged me, and said the one thing young men don't want to hear, ever,\n\n\"Sorry Richard, but you're a really good friend...\"\n\nFor the next ten minutes we sat there drinking the wine that I had bought to finish off the meal I had paid for while she talked about the veterinary science undergraduate she was actually interested in.\n\nSo that was that, I was cursed with being Richie Rich; the nice, comfortably off, friendly, attractive and muscular boy, that ISN'T ACTUALLY GAY HONESTLY, is terrified of real women but is really good to talk to about your problems with your actual boyfriend.\n\nFuck. I thought about dating websites and went to quite a few university societies and 'meet and greet' events but it was full of desperate people (just like me) and I could suddenly see what my 'friend that was a girl' was talking about in me in those other people. I lasted for just long enough to drink my nasty warm white wine before fabricating a phone call/message and left, never to return.\n\nFuck.\n\nMy nervousness had started to show, and while I was now working in hospitals the nurses were terrifying and to be honest I didn't have the first clue on how I should start chatting to them, let alone chatting them up to ask out on a date. They all seemed confident, feminine, attractive and professional while I was terrified of my own fucking shadow and my lack of dates a bit of a joke with my college mates.\n\nSo, not only was I a 23-year-old, 'inexperienced with girls' virgin, I was now being flirted with (I guessed) by the most gorgeous, dark, curvaceous, totally intoxicating girl in what she was suggesting was some kind of sex palace.\n\nTo make it worse, she reached up to open the bedroom curtains raising her quite fantastic tits up, then bent at the waist to straighten them down below showing off her perfect arse. I gulped, and she turned back to me and winked.\n\nI kinda got the feeling that Alice would be taking care of me but I wasn't quite sure if this was what Dad had in mind when he asked.\n\nShe turned and walked back to me and handed me my phone, with the softest smile.\n\n\"You're logged into the secure WIFI Richie; Dinner is at seven, Meghan is cooking something a bit special seeing as you're here.\"\n\n\"I'll see you seven,\" I said.\n\n\"I'll look forward to it,\" she replied touching my arm gently. Then she reached up on her toes and kissed me on the cheek.\n\nWhat the fuck to do next?!\n\nShe looked at me and smiled again, no expectation, no questions, just a lovely smile and I calmed down a bit. I didn't really have to do anything, did I?\n\n\"See ya!\" she said and left me to it.\n\nFuck, again!\n\nThis was The Spa, here I was Ralph's son; I wasn't Richie Rich the undateable undergrad Clinical Med student Doctor, I wasn't the centre of anyone's jokes, I wasn't the virgin that the nurses would giggle behind their hands about and joke which one of them should take me off somewhere and 'sort me out'. \n\nThis girl just seemed to like me, Richie.\n\nI lay down on my huge bed and kicked off my trainers; it was so comfortable, and I rolled to the middle of the thing. I nodded off in moments.\n\nI was awakened by my phone ringing, and pulled it from my jeans pocket. It was Mum, Fuck! I had forgotten to turn it off.\n\n\"Hello?\" I said blearily.\n\n\"Darling?\" it was Mum, \"Are you back in London yet?\"\n\n\"Mum, I explained earlier, I having a few days with Dad...\" Mum butted in.\n\n\"But I've told Dave that you'll look after the girls.\"\n\n\"Mum, define 'look after'.\"\n\n\"What do you mean?\"\n\n\"You said that you and Dave wanted me to 'Look after' Leah and Fiona. It would have been nice if you mentioned that before you were actually in France. I think Leah and Fiona are under the impression that I'm their servant until you and Dave got back.\"\n\n\"Richard, that's not the case at all,\" she snorted.\n\n\"Really? When I said I was leaving the first thing they both said was 'who is going to look after us for the next two weeks?' You and I both know that nasty Leah won't come out of her room and will want her food delivered to her, while spoilt brat Fiona will want me to do everything and what I do will never be good enough and will turn her nose up at anything I can throw together in the kitchen. It's the house I live in, not the Bed and Breakfast that I run.\"\n\n\"Richard, how dare you!\" It was Dave who had obviously been listening, \"my girls...\"\n\n\"Your girls Dave, not mine!\" I shouted, \"within seconds of getting back from dropping you off they were both telling me what to do, throwing their laundry at me and telling me what they wouldn't eat.\"\n\n\"Surely doing a little bit of laundry and cooking a few meals...\"\n\n\"Darling Fifi was telling me how she wanted her washing done, and when she wanted it back by, and Dave? It was a huge pile of clothes she HADN'T EVEN WORN! Leah thinks I'm an idiot, Cambridge educated I might add, and there to wait on her in your absence.\"\n\n\"Weeeeeeeell,\" said Dave sounding crosser than he normally did, \"if you're not prepared to meet me halfway then your mother and I will have to give some consideration to your continuing to live in our house.\"\n\nI'd had enough, they had both pretty much fucked up my chilled out first day of my holiday and I was fucking angry. I was twenty three, and done with being nice guy Richie.\n\n\"It's not your house Dave,\" I snapped with a ton of attitude, \"don't kid yourself, I read the pre-nup that Mum wrote and you both signed don't forget; she has no claim on your place, you have no claim on ours and I mean OURS. You'll find that when my maternal grandfather died he left the house to me and Mum in equal shares and now I'm over eighteen she can't stop me living there or try and sell it without my signature. See how you get on with that. You want to start threatening people then I'll ask for my half of the fucking rent!\"\n\n\"Richard...\" it was Mum again, \"Darling let's not argue about this, go back home to London and we can work on this...\"\n\n\"NO!\" I howled, \"why should!?\"\n\n\"Look, I... we just need you...\"\n\n\"You need me in London, on the understanding that I go back home and wait on Princesses Leah and Fiona until you get home in two weeks. No, this is my holiday as well as theirs.\"\n\n\"You'll be flying out here don't forget,\" said Mum adding brightly as if that would make the penal servitude more bearable.\n\n\"I'm here for a week Mum,\" I said, \"that's all.\"\n\n\"Well I'm sure the girls can look after themselves for a week.\"\n\n\"Like I do,\" I said.\n\n\"Like you do,\" she said, \"I'll tell the girls to expect you on Friday.\"\n\n\"Sunday,\" I said.\n\n\"Sunday?!\" she said, \"in two days?\"\n\n\"No, the next Sunday after that, good try though.\"\n\n\"OK Sunday week, but try...\" she stopped obviously hearing my deep breath, \"we'll tell the girls that everyone is going to work harder at this relationship.\"\n\n\"OK,\"\n\n\"Don't think I'm going to let this insult go Richard.\"\n\n\"For Christ's sake David,\" snarled Mum, \"are you the only person that doesn't see how nasty your daughters are to Richard?\"\n\n\"They have their own feelings and standards like everyone,\" he said superciliously.\n\n\"Oh do they!\" said Mum with a growl, \"I'll talk to you later Darling,\" said Mum and disconnected the call.\n\nMy wonderful relaxed feeling was gone, and I sat up. I thought about the grief that would be waiting for me when I eventually went home. I reached into my rucksack and there on the top was my shorts that Dad had insisted I brought with me.\n\nA swim, that would do it, then perhaps a splash in the Jacuzzi and then a shower before dinner at seven.\n\nI pulled on my shorts and walked the short distance to the pool. The last time I came the pool had been heated but open air. In the passing years, it had been covered over and a Jacuzzi built into the far corner of the area it occupied.\n\nI hadn't swum since my last holiday with Mum the summer before but jumped straight in anyway. I moved along under the water adding a few kicks to carry me further, and as I rose to the surface I saw I was a few metres away from other end. I did a few lengths of the pool to loosen up then did a racing turn powering through the water at maximum effort for four lengths which I knew from my last visit was two lengths of an Olympic size pool.\n\nAs I touched the wall for the final time I surfaced and stopped, happy that I had burned off some of that excess energy that the phone call had created. \n\n\"Wow look at you,\" said Meghan, appearing at the doorway with a tray with tea things on it.\n\n\"Shitty phone call from Mum,\" I said, \"just wanted to burn off some energy.\" I jumped up on the pool edge wiping the excess water from my face and hair.\n\n\"I know,\" said Meghan, \"she was on the phone to me not twenty minutes ago. Blaming your Dad for everything and saying that he was trying to ruin her relationship; I said that you had just decided to come and see your Dad because you were unhappy.\" She smiled, \"just came out to check you were OK. New bloke sounds like an arse.\"\n\n\"That he is,\" I said, \"and his two daughters are even worse; they all thought I was going to stay in London and be housekeeper, cleaner, cook and nursemaid to them, only trouble was no one asked me. Once they were both safely out of the country, then they both TOLD me, but I was already on my way here by then of course.\"\n\nI looked at my Step-mother and wondered if she was going to be giving me a bollocking and sending me back to London.\n\n\"Good for you!\" said Meghan, \"no way should you be playing Cinderella to that pair. Have some tea, sit in the Jacuzzi and chill out until dinner. I'll tell Alice you're here, she races your Dad sometimes.\"\n\nShit! OK, I slipped into the heated pool resting my elbows on the edge but my cock swelled straight away as soon as she mentioned Alice, and the thought of that gorgeous woman in a swimming costume in the water with me.\n\nFive minutes later as I drank my tea, Alice appeared not in a swimsuit but in the hottest, brown bikini that complimented her dark brunette hair and tanned skin to perfection. It was also tailored and wired and held her boobs perfectly and the cleavage was to die for. Then to make matters worse she turned to a high cupboard and reached up for a towel. The sight of her already shapely arse in that bikini was perfection - something that would have had the designer, the seamstress and salesperson all saying, 'THAT'S how we wanted it to look' and applauding themselves.\n\nIt wasn't quite a string but was very high cut and exposed just the right amount of tanned buttocks. I drank my tea, quickly poured myself another and set it on the poolside, ready for me to jump in and hide the erection pushing the front of my shorts out disgracefully.\n\n\"I'll have one Richie,\" said the sex goddess slowly walking towards me with the towel over her shoulder. I poured her a cup as well. \n\nI tried to turn and hide my embarrassment but it was of course much too late. Alice grinned, \"My,\" she said looking at the front of my shorts and taking the mug I was now handing to her, my face flushed, \"you are pleased to see me aren't you.\" She bobbed a little curtsey to me.\n\n\"Sorry Alice,\" I said, \"I... err...\" My cheeks were burning.\n\n\"Don't fret it Richie,\" she said with a grin, \"doing what I do to who I do it to, you're not my first erection and trust me, you ain't going to be my last. Believe it or not I actually consider it a complement.\"\n\nI shrugged my shoulders,\n\n\"You...\" I stuttered, \"you look gorgeous Alice,\" I said, \"I've been fighting it off all day.\"\n\nShe giggled,\n\n\"Well a girl doesn't get a compliment like that every day.\"\n\n\"That black dress you were wearing, and your make-up,\" I said, \"it was perfect.\"\n\n\"Thank you Richie,\" she said and then it was her turn to look me up and down, \"The feeling is mutual. While I get to give treatments and massages to lots of attractive men, they all know it. You're very sweet and your body is in great shape.\" She put down her mug next to mine. \"Come on Richie,\" she said and then broke the tension, \"Race ya to the end and back!\" and she plunged into the pool.\n\nFortunately for me, I'd had swimming lessons and used to race for my school and was able to catch up with her and overtake her on the way back, so much so I was leaning on the pool and drinking my tea when she surfaced.\n\n\"Fit as well Richie?\" she said, \"remember, no one likes a show off.\"\n\nI figured that she often had Olympians and professionals here so being beaten by the boss's son was nothing new to her and that she wasn't impressed.\n\nShit, blown it already.\n\n\"Sorry Alice, only Meghan says you like to race Dad.\"\n\nAlice took her cup and grinned.\n\n\"Fuck sake Richie,\" she said coming up by her half full mug and sipping her tea and beaming at me again, she put her cup back on the tray, \"Only joking with you lovie.\"\n\nI put my hand on her head and pushed her down, and she surfaced moments later, laughing and swearing revenge.\n\n\"Come on then,\" I said and struck out to the middle of the pool with her chasing me.\n\nWe played and ducked each other a few times splashing each other, and I dipped down and swam between her water-treading legs coming up behind her and pulling her back towards me.\n\nShe came right up into my arms and we were body to body, and face to face. I smiled, unsure in my innocent inexperience what to do next. Alice saved me by putting her arms around my neck and kissing me full on the lips.\n\nI put my feet down and Alice put her legs around me, and we kissed some more with the occasional touch of tongue I was sure, her lovely full boobs pushing into my chest.\n\n\"There,\" she said, \"that's better isn't it?\"\n\n\"Oh yeah,\" I said with my arms around her still.\n\nShe took the opportunity to tuck her leg around the back of my knee, pull it and at the same time press down on my head to duck me. We both came up laughing again.\n\n\"Well,\" said Meghan appearing from the door to collect the tray, \"you sound like you're having fun.\"\n\n\"Yeah,\" said Alice, \"Richie is a crap swimmer just like his Dad.\" She struck out for the pool edge and was just pulling herself out as I came up behind her my face made contact with her wonderful arse and she gave a little cry.\n\n\"Well Richie, if you wanna touch me there again you'll have to marry me.\" She screeched.\n\nShe swung up to sit on the poolside and wiped some of the beads of water from her great body, Meghan loaded the tray up again and shaking her head at Alice walked back towards the kitchens.",
        "\"It's half past six Darlings,\" she said, \"Don't forget Dinner at Seven.\"\n\nAlice smiled, shrugged, pursed her lips as if to say 'this isn't finished' and grabbed her towel and dried her face and her hair. She wrapped it around herself and walked away, looking back over her shoulder and smiling at me at the most perfectly calculated moment.\n\nI laughed, she laughed. She stopped and reached under her towel and next thing I saw was her bikini bottoms falling to the floor. Next thing she was reaching under the towel and the bikini top was in her hands and the towel fell open to one side and I had the most wonderful view of part of her body and the suggestion of what she would look like naked. She had no tan lines at all, and her right hand cupped the pristine white towel to her left breast as she bent to retrieve the first garment.\n\n\"We'll be dressing for dinner Richie.\" She walked back through the pool area and I guessed back to her room.\n\nI hadn't really brought any posh clothes, certainly nothing up market enough for two attractive women, both of whom I had had seen partially naked.\n\nSo pushing my erection up and into my swimming shorts I climbed out of the pool. I got a towel from the same cupboard that Alice had used, and walked back in the still bright evening to my room. I showered and managed to get my erection under control and dressed in the smartest clothes I had. Some black Levi's and a black short sleeve cotton shirt which I tucked in, including putting in a tuck on each side to show off my broad chest and narrow waist; after all I had the funniest feeling that Alice would do something similar.\n\nI had shaved but didn't have any aftershave. While I'd thrown in toothbrush and tooth paste both of which were in the cabinet anyway, and a week's supply of deodorants, nothing with a stronger smell. I checked the cupboard just in case this high-class establishment supplied high-class aftershaves. They didn't, I guessed that the visitors probably brought their own lotions and after shaves. According to Alice at least two of them had fragrances named after them.\n\nAh well, I'd go without.\n\nChecking myself in the huge mirror in the huge bedroom I finally headed back to the main building and dinner. When I arrived, back in the family room I'd been in earlier, I just followed the noise of pots and pans and the wonderful smells that Meghan was creating in the kitchen.\n\nThere was Alice. If I'd been impressed by her outfit earlier that day, tonight's was stunning. She was wearing a fitted black top, slashed to show off her great cleavage and some amount of boobs, this was tucked into some very sexy but very smart black shorts that showed off her long legs down to short black ankle boots. Finally, I looked up at her face and her hair was now down from being elegantly piled on top was now hanging around her face and neck and looking hellishly sexy. Her make-up was incredible and although she had looked good this morning, tonight she looked like she wouldn't have been out of place on a London catwalk, she posed and put one hand on her hip.\n\nShe saw me looking and beamed a smile back at me, a real one and none of the cheeky, teasing, sultry stuff she had been favouring me with for most of the afternoon, and our short sojourn in the pool. She walked across to me and with a gentle hand on my shoulder, put her cheek to mine and kissed me.\n\n\"Good evening Richie,\" she said smiling at me and looking me up and down, \"You look great,\" \n\n\"Good evening Alice,\" I said, \"You look fantastic. Even more fantastic than you looked this afternoon in fact.\"\n\n\"Thank you,\" she said, returning back to the coolness of our previous meeting.\n\n\"Oh well, don't you two look glamourous!\" said Meghan, appearing with a tray of nibbles and a bottle of wine still misted from its removal from the fridge. Meghan herself had dressed up and the baggy semi-translucent white muslin shift dress had been replaced by a tailored dark blue creation that clung to all of her curves, and it was obvious that she was now wearing underwear, evident from the great cleavage that she too was displaying and when she leaned across the large dining table and the string panties that she was wearing were visible. \n\n\"Can I help with anything?\" said Alice.\n\n\"No Darling, you stay here and look after Richie, open the wine.\"\n\n\"Let me,\" I said picking up the bottle and taking the cork screw.\n\n\"Thanks,\" she said, leaning across the table to the three large wine glasses already there. I opened the bottle and smelled the cork. It was a nice, fruity white and I poured three glasses, handing the first to Alice, who took it, sniffed at the edge of the glass and took a sip. \"Hmm,\" she said, \"your Dad can pick wine, always said it.\"\n\nI raised my glass and touched hers with it.\n\n\"Cheers,\" she said.\n\n\"Your very good health,\" I said looking into her pretty face.\n\nMeghan brought out the most wonderful food.\n\nThe starter was mackerel fillets, caught that day and brought up to The Spa. The flavour was quite fantastic and being a Londoner, this kind of food was quite new to me. Mum was 'traditional' in her cooking and rarely stepped out of her comfort zone of pre-prepared main courses, but saying that neither was I. I had spent the much of the last four years feeding myself in Hall of Residence kitchens or hospital canteens, and I had never cooked anything as fantastic and flavoursome as this.\n\nMeghan cleared the plates, not allowing Alice or I to raise a finger, instead we drank the last of the bottle of fruity white, ready for the next bottle to go with the next course.\n\nThe next course was announced as 'a bit of a Cornish pasty sort of thing', but that didn't come close. It was more of a Beef Wellington of trimmed rib eye steak, part grilled then wrapped in a herbed pastry then baked, with the addition of the most wonderful sauce. To this was added roast potatoes and fresh vegetables, again delivered that day.\n\nThe sweet course was the most wonderful strawberry and lime roulade with clotted cream. We took our coffee and went out onto the private garden and patio. It was wonderfully warm with a cool sea-scented breeze coming off of the Bristol Channel and the sounds of the waves crashing against the rocks below.\n\nMeghan looked at Alice and I and stood, taking her coffee cup, but leaving the half full jug for us to finish.\n\n\"I must away to my bed Darlings,\" she said with a gentle smile, \"early to bed, and all that shit...\" I looked at my watch and it was just heading towards 10 o'clock.\n\nAlice stood and kissed Meghan, and I did likewise, both wishing her a good night and thanking her for the wonderful meal. I retook my seat and poured both of us the last of the coffee, and Alice smiled, \"thanks Richie,\" she said and added milk to both and sugar to mine.\n\n\"It's so lovely here Alice,\" \n\n\"Not always,\" she grinned taking a long pull at her coffee. She closed her eyes and leaned back and we listened to the waves crashing on the rocks below.\n\nI didn't close my eyes of course, I was too busy looking at the beautiful woman before me. I spoke, keen to keep this evening going.\n\n\"First time I've ever been here when it's been nice,\" I grinned.\n\n\"Must confess this is a bit of a special occasion,\" she returned my grin, \"don't get used to it Richie!\"\n\nThe smile that I got back was 'real'; by that I mean that for the second time she wasn't trying to be sexy and alluring, it was just a big smile that lit up her eyes and all of her face. She was lovely and she got the same smile back from me. Much as I struggled not to, no way could I stifle the yawn I felt coming, I stood and stretched - no point in trying to hide it.\n\n\"I'm so sorry Alice,\" I said, \"thank you for a wonderful day but I'm going to have to head for my bed as well and listen to some more Stephen King,\" there was some barely noticeable regret in those gorgeous features of hers, and in my desperate racing mind a thought struck me following on from what she'd said in the car; \"would you like to come with me?\" She raised her eyebrows and I gabbled a bit, \"and listen... for a while... not in my bed of course...\"\n\nShe went back to that big smile again,\n\n\"That would be nice,\" she said, \"I'll raid the kitchen for snacks and perhaps some hot chocolate.\"\n\n\"Awww, this just gets better!\" I said.\n\nThere's a lead that you can plug your phone in to that will connect it to speakers in the headboard,\" she said. She must have seen the slight shock in my face, \"It's the cosiest place, trust me.\"\n\nFucking hell, I was going to get into bed with the most gorgeous girl I had ever seen and we were going to listen to an audio book?!\n\nRight then I didn't know if Alice was lusting after me, after all this was a bit of a first for me; if something happened then so be it - if not it would still be really nice and perhaps take us a step closer to when it did.\n\nI took off my shoes and socks, then my trousers and shirt and pulled on a black T-shirt that would match my stretchy black boxers. I found the lead, plugged it into the headphone socket, and turned on the power to the four perfectly balanced Bose speakers and Grover Gardner sounded like he was in the room. I turned it down and paused it just as Alice appeared with a large tray, and it held Pringles, cakes of varying descriptions, chocolate hobnob biscuits and a handful of chocolate bars. Next to this was two huge mugs of hot chocolate, and she dropped legs from under the tray and put it next to the bed.\n\nOnce the tray was out of the way I could see that she had taken off a similar amount of clothing and was stood before me in the black vest top of earlier in the day and a pair of lacy string panties. Her arse was fantastic and there was even more of it on display than when she wore her bikini in the pool that afternoon. Because of the tightness of the top I could see that the bra that had given her such a great shape was gone also. \n\nShe picked up my phone,\n\n\"We have iPod Mini's for the guests loaded up with their favourite music,\" she said sliding further down the vast bed and pulling up the light summer duvet to her waist, \"seeing as we steal their phones... here we go,\" and Grover started to talk again. \"What shall we eat first?\" she said rolling over to the large tray table and exposing that perfect arse to me again. She must have known she was doing it and I felt like I should reciprocate so pulled off my T-shirt to expose the six-pack and pecs I worked so hard at.\n\nShe turned back to me,\n\n\"You getting hot Richie?\"\n\n\"Yeah, just a bit.\"\n\n\"Well I think you look hot,\" with that she rolled back holding our mugs and a large bar of Cadbury's chocolate.\n\n\"Oh yeah,\" I said taking one of my all-time favourite confections.\n\n\"How often do you work out?\" she said.\n\n\"I try to get to the gym twice a week. Run a bit, as often as I can.\"\n\nShe rolled closer,\n\n\"Whatever you are doing, it works very well,\" she stroked a soft hand down my chest, holding it on my six pack with the confidence of a professional care giver.\n\n\"What about you Alice,\" I said trying desperately not to sound as nervous as I actually was, \"how do you stay looking this... incredible?\"\n\nShe giggled again.\n\n\"I swim regularly, yoga of course,\" she said, \"and like you I try to run as often as I can; living and working here the healthy diet is pretty much assured.\"\n\nI looked her up and down as she had done me,\n\n\"You're gorgeous Alice,\" I said, \"But then I guess you know that.\"\n\n\"I do get told that quite often,\" she grinned, and by the soft light of the bedside lamps I could see her pretty face was blushing. \"Thank you,\" she leaned forward and kissed me. \n\nI did likewise, and what was meant to be a gentle peck became a full lips kiss, similar to the one she had used in the pool that afternoon to put me off during our water fight.\n\nWe were face to face, I could feel the warmth of her cheek so close to mine and I desperately hoped that we could explore this more. She smiled and closed her eyes and my silent wish was granted. When we kissed a second time our tongues mashed properly. It was lovely, and we broke for breath a few moments later.\n\nWe smiled at each other, me hoping desperately that my lack of experience wouldn't put her off as it so evidently had to other women while I was at Uni.\n\nI decided that I was just going to go with whatever happened here, and not worry about it.\n\n\"Here,\" she said with her beautiful smiling face still close to mine, \"Hot chocolate.\"\n\nI took my mug from her but maintained my hard-won closeness, sipping from my steaming mug. It tasted fantastic and far from the usual 'just add boiling water' stuff that one gets used to.\n\n\"This is great,\" I said, \"Another one of Meghan's special recipes?\"\n\n\"You guessed it,\" she said, \"From Gra'ma actually. A hint of almond and cherry syrup - sip it slowly.\" There was and I felt the warmth of it taking over my entire body. She swirled the last of hers and drank it down, and I did likewise, \"Meghan calls it 'a hug in a mug'. Ralph... your Dad loves it.\" She giggled so sweetly, \"he says that Gra'ma put a spell on the first one she made for him so he had to stay here and marry Meghan!\"\n\n\"I can see why he'd think that,\" I said and she took my mug and put it back on the tray with hers. I lay down, and eased my neck into the soft pillows, and Alice raised my arm and slid under it resting her head on my shoulder and putting her hand back on my stomach. I pulled the duvet up to cover us both, and she smiled at me.\n\n\"Thanks Richie,\" she whispered and I turned my face to her and we kissed again, our tongues playing together, both of us tasting of Meghan's hot chocolate on each other's lips and tongues. We moved together, wrapped in each other's arms and, I realised, we'd finally got past the game that we had both been playing since I climbed into the Discovery that afternoon.\n\nWe were still half listening to Stephen King mind you and then there was one of the good bits of the story and we stopped what we were doing for a moment and listened. I woke to Grover still talking at about two in the morning to find Alice snuggled up in my arms, her head still on my shoulder. I didn't want to move and lose the contact so let him carry on. \n\nAt some later point in the night she got up, kissed my cheek and left, and I was in two minds about getting up and following her and asking her to stay, but I heard the click of a light as it turned out was only going to the bathroom. She came back and I raised the duvet and she settled back into my arms where she had been a few short moments before. She switched off Stephen King, we had a week to listen to it after all.\n\nI woke with the early sun pouring through the windows and found that Alice had turned in the night and I was now spooning her and had both of my hands on her bare breasts and soon realised that she had taken off her vest top.\n\nIt was if I suddenly realised that I was holding on to her and flinched. Alice just made a slight noise in her throat and squeezed her hands that were over mine causing me to squeeze her boobs. She wriggled slightly moving back into me and getting more comfortable and I held her just a bit tighter. Her boobs felt wonderful, her hard nipples pushing into the palms of my hands; I should point out at this stage that this was the first time I had done such a thing since I was weaned.\n\nA short while after she stretched and pushed her arse back against my erection and wriggling her virtually bare skin against me. With my arms still around her she turned so that we were facing each other and my hardness was pushing into her flat stomach. She slipped her arms around my neck and we started to kiss, just as we had done not eight hours of amazingly restful sleep ago.\n\nShe was obviously into what we were doing, and as for me I just did what came naturally. We broke for breath. I had to tell her, no two ways about it. If she thought I was crap in bed at least she would know why and I might just get a second go.\n\n\"I have a confession Alice,\" I said.\n\nShe pushed me flat and rolled on top of me,\n\n\"Really!\" she said, looking intrigued, \"It's not something nasty is it?!\" She kissed me again.\n\n\"No,\" I said, \"more embarrassing than nasty...\"\n\n\"Tell me!\" she giggled, then stopped, figuring it could be something I was sensitive about.\n\n\"I... err... I'm a virgin,\" I said, \"I've never done... well... anything like this before.\"\n\nShe looked down on me, and smiled so sweetly.\n\n\"Oh thank God!\" she said giving me a tiny shake, \"I was worried it was something serious!\"\n\n\"No, just my cherry,\" I said, my cheeks burning, \"Not that I thought I was going to... well... you know... but I thought...\"\n\nShe smiled another of those wonderfully real smiles that lit up her face, and then stopped my embarrassed babbling by clamping her mouth over mine. I put my arms around her, resting my hands on her lower back and the rise of her bottom.\n\n\"Don't worry Richie,\" she said, \"I woke up with your erection pressing against my bottom and my first thought was about shagging you,\" she kissed me again, \"Now I know that I'll be your first, shit, lay back and think of England Richie.\" We started kissing again.\n\nSliding to my right side, she pushed her soft masseur's hand under the elastic of my boxers and smiled at me. At first she rubbed around the skin and through the prickly short and curly hairs there and I flinched. She carried on stroking mind you and I just looked at her trying not to grin like a stupid Cheshire cat. Her breasts where pushing against me and I tried to look down at them in a 'not looking' kind of way.\n\n\"Let's get rid of these,\" she said, and pushed them down my thighs. I raised my hips and before I knew it I was naked with Alice. \"Wow Richie!\" she said taking hold of my erection and giving it a brief squeeze before slowly pumping it, \"This is lovely!\" She kissed my cheek, \"This I've got to take a closer look at...\"\n\nShe slid down me, kissing my flesh as she did so, finally stopping and placing a kiss on the crown of my as yet virgin knob. She slid across my legs, kneeling either side of me with her mouth level with my tool. I held my breath.\n\nI was an avid watcher of porn and had seen this kind of thing played out and had jerked to it many times, but this, with a real life, flesh and blood gorgeous girl; shit. I didn't think I could get any harder, but Alice decided she was going to make sure. She licked from the base of me to the crown, stopping at the top to swirl her tongue around my helmet and I tried not to curl up as she did this.\n\n\"OK Richie?\"\n\n\"Fuck yeah,\" I gasped.\n\n\"You're not to come yet,\" she said wagging an admonishing finger of the hand not currently wanking me.\n\n\"I'll try,\" I said.\n\nShe grinned, and with that opened her mouth and dropped it over my erection giving me a long, hot, wet embrace, dropping down two or three times and making me want to curl up again, doing all I could not to come, just from the fantastic view and the thrills and chills running down my spine.\n\nShe beamed her beautiful smile at me after taking me out of her mouth, resting across my legs and giving me a few gentle tugs.\n\n\"Well Richie,\" she said, \"what shall we do now?\"\n\n\"I'll go with the flow Alice,\" I said, \"whatever you feel like doing.\"\n\nShe laughed and looked around.\n\n\"Got any condoms?\"\n\n\"No,\" I said, and laughed and shook my head, \"I put one in my wallet seven years ago when I first left school and started college, but threw it away because after my first year at Uni as I figured I'd never need it.\" Alice just smiled, \"it just sat in my wallet getting more and more tattered and reminding me that I was still a virgin.\"\n\n\"Well lucky for you I have some!\" Still lying on the bed she reached down to the side of the bed and a small bag and there was a Durex box and she retrieved one. Moving up slightly she settled with her lace covered pussy inches from my cock.",
        "I stared at the perfection before me at last, her full perfectly shaped boobs, hard red nipples that had been pushing into my palm and then my chest that very morning.\n\n\"What?\" she said ripping into the small foil packet.\n\n\"You're... perfect...\" I said, my cheeks blazing.\n\n\"Oh Richie!\" she giggled, a hint of redness to her cheeks as well, \"you don't have to pay me compliments lover, I'm just about to put the condom on!\"\n\n\"But you are totally fucking gorgeous Alice,\" I said.\n\n\"Thank you!\" she leaned forward and kissed me. As she moved back, her hand stopped and raised my prick and she settled the condom on the top and slid it down in one swift movement. \"There,\" she said, \"let's get this whole virginity crap out of the way then we can really enjoy ourselves.\"\n\nShe had stepped off of the bed and dropped her string panties. She looked perfect, just as I had imagined her the day before, a lightly tanned, hourglass figure with flawless skin, perfect boobs and a pussy shorn or waxed of any vestiges of pubic hair.\n\nShe knelt on the bed and moved across me, raising her groin above my cock and very gently lowering herself onto me with closed eyes and a long sigh.\n\n\"Oh Wow Richie!\" she said, \"that feels just as nice as I thought it would when I had a proper look just now.\" She wriggled around on me and I felt the softness of being inside a woman for the very first time.\n\n\"Thank you Alice,\" I said, obviously sounding very grateful.\n\nShe giggled that gentle laugh of hers again.\n\n\"Your welcome,\" she said rising gently off of me only to lower herself down again and it felt great. I could feel that I was going to come quite soon and wanted to do anything to stop that. \"What's up Richie?\"\n\n\"First time Alice,\" I said, \"Rather afraid this is all going to end in under ten seconds with little to show for it other than a used condom.\"\n\nShe kissed me,\n\n\"Stop it,\" she tapped my nose with her pointer finger, \"it doesn't matter, this is love making not a competition, enjoy!\" Ali lowered herself over me and kissed me, her boobs touching my chest as she did so.\n\nShit but this was bloody great, and I was so pleased that I was finally here, doing this.\n\nBut it wasn't just that I could finally say that I was no longer a virgin; I mean who do you have that conversation with? This beautiful woman whose company I just loved to be in, that I found enchanting, intriguing, mystifying, electrifying - all of those things that good books and good movies said was love at first sight. \n\nSurely not.\n\nI smiled as I looked up into her face.\n\n\"Let's try something different,\" she said and lay next to me encouraging me to get on top. That was it...\n\nShe took hold of my prick and directed it between her thighs and I was in her, resting on my elbows in the classic missionary. Suddenly we were face to face, in each other's arms, both a little shocked in how right the moment was, and I started a slow fucking motion,\n\n\"Oh shit yeah,\" she gasped, with a real indication that what I was doing was alright. She put her arms around my neck and hugged me to her and we kissed again. It was perfect.\n\n\"Careful Alice,\" I said, \"too much of this and I'm not going to last much longer.\"\n\nShe grinned and shook her head,\n\n\"OK lover,\" she said, wrapping her legs around me to hold me still but keep me inside her, \"A few more moments of this...\" she started to kiss me again, our tongues meshing and messing together in the most wonderful joinder until she broke for breath, \"OK Richie,\" she said taking her legs from off of me, \"Let me get on my hands and knees and you can go for the big finish.\"\n\nI had never known such pleasure, I was a regular masturbator but fucking hell this was fantastic! I knew that I couldn't last too much longer and the ribbed condom was doing little to dull the sensitivity of the end of my penis.\n\n\"Oh fuck,\" I gasped feeling my knees trembling, \"I'm gonna come Alice!\"\n\n\"Of course you are Richie, that's why we're doing this,\" she gave a tiny wiggle of her hips, \"if you want to come lover, you do just that, we've got more condoms.\" She dropped her shoulders to the bed and put a hand back between her thighs, \"You come Richie,\" she said stroking my testicles and I felt the most almighty spasming in my groin and I came, my forward thrust obviously doing the right thing for her as she cried out, adding \"That's it! You come, ooh yeah... you come Richie - right in your sister's pussy...\"\n\n\"Arrgh fu... WHAT?\"\n\nShe grinned back over her shoulder,\n\n\"Come Bro',\" she moved backwards and forwards on me to keep up the feelings, \"Ooooh yeah...\" Somehow I managed to continue fucking through my orgasm.\n\nAlice pulled forward off of me, and rolled to one side and pulled me down onto her.\n\n\"Sister?\" I said.\n\n\"Well, step-sister actually,\"\n\n\"What?\" I said stupidly.\n\n\"Meghan is my Mum you idiot!\"\n\n\"But you call her Meghan.\"\n\n\"Everyone calls her Meghan, it's only ever in the third person and just business, something I got used to I suppose. She rolled onto her side and I saw all of that gorgeous tanned body of hers. She narrowed her eyes, \"So who did you think I was?\"\n\nI lay next to her, resting on my elbow.\n\n\"Honestly? I thought you were Alice, the gorgeous brunette bombshell with I figure to die for that I fell in lust with the second you opened the car window at St Ives Railway Station.\"\n\n\"You didn't wonder why all the staff had gone and I was still here?\"\n\nI leaned over her and kissed her,\n\n\"Not even once, all I could think of was how fantastic you were and everything about you was perfect and what I needed to do... well... to get...\"\n\n\"To get me into bed?\"\n\n\"To get to know you better!\" I said, \"to find out how I could get you all to myself for a while and 'ask you out on a date'.\"\n\n\"A... date?\" She giggled.\n\n\"Yeah, don't you ever look in the mirror Alice?\"\n\n\"Awwww you are such a gentleman!\" she screeched, but must have seen my defences go up a bit, and leaned in and kissed me, \"which is why I like you so much Richie,\" I smiled and felt my cheeks flush a bit. \"You are soooo like you Dad, which is of course another reason why I like you so much.\"\n\nI leaned in again and she made a funny noise, and pulled back. We both looked down and saw that the condom was slipping off of me and a damp patch had touched her leg.\n\n\"I'll get shot of it,\" I said standing up, just in time as it slipped and hit the wooden floor with a splat.\n\nAlice smiled and shook her head,\n\n\"Wrap it in some tissue paper and we'll chuck it in the bin, we're emptying them after all.\" I grabbed and handful of tissues from the box at the side of the bed and as I stepped across to the offending prophylactic Alice rolled from the bed and stretched; I stopped what I was doing reaching blindly and stupidly for the condom on the floor, transfixed by the perfect tanned body naked before me, stretching up.\n\nShe giggled again, \"one thing at a time Richie!\" she said and walked around the bed. I quickly reached down and snatched it up, wrapping it in the paper. By the time I'd done this, she had reached me and taking more tissues from the box wiped the remaining come from the end of my knob that had leaked out. \"There,\" she said handing me the tissue, \"you really are new at this aren't you.\"\n\n\"Yep.\"\n\nShe slipped her arms around my neck,\n\n\"Don't worry about it lovely Richie, we can have lots of practice while you are here.\" She closed her eyes and we Frenched the fuck out of each other's faces. We broke for breath, \"Let's go and have some breakfast, Meghan... Mum that is, will have been up since six meditating and contemplating and I reckon she'll just have started cooking things by the time we get there.\"\n\nI reached down for my boxer shorts that Alice had thrown down not half an hour ago. She was still holding her hand out, and saw me looking at my pants. She pursed her lips and shook her head. I figured this was how both she and Meghan had all over tans in the summer, just as Alice had warned me when I first arrived.\n\nWe walked naked through The Spa arriving at the kitchens and there was Meghan in her white muslin shift dress of the day before. She looked at Alice then at me, giving me slightly more than a cursory glance I noticed, and had just the biggest, relieved grin on her face.\n\n\"Oh thank fuck for that!\" she said, and stepping back from the range she was cooking at pulled the dress over her head to stand as naked as we were. She had a similar tan to Alice but deeper. She did step across to a locker and retrieve an apron.\n\n\"Fat splashes,\" whispered Alice reaching over and taking the large tray already loaded with mugs, a tea pot and various other breakfast things.\n\n\"You two go through and have a swim and freshen up,\" said Meghan, \"I'm still about ten minutes shy of plating up yet,\" she looked at us again, with a cheeky grin, \"guessing you could both do with freshening up by the look of you!\"\n\nAlice tutted and we headed for the pool.\n\nBeing the gentleman Alice so liked I took the tea tray and followed the wonderful tanned arse through to the poolside where a large table and chair had been set up ready for us.\n\nI put the tray down and poured two mugs of tea, just in time to see Alice dive straight into the water. I wondered about jumping in and whether I should at least wash my groin seeing as I'd lost my virginity shortly before.\n\nAli surfaced and looked up at me,\n\n\"What you waiting for Richie, scared I'll beat you in a race?\"\n\nI looked down at my groin and my penis that I was pleased and a little surprised to note hadn't started to harden.\n\n\"Don't I need to wash...\"\n\n\"There's three hundred thousand gallons of water in here Richie,\" she said, \"don't think a few microns of me and you are going to affect it any. Besides, we pay a fortune for the chlorine and cleaning equip...\" Her tale ended in a squeak.\n\nI leapt straight in, coming up just to her left and grabbing her and kissing her again. I couldn't help but grin at her and she responded by smiling back and returning the kiss, closing her eyes and opening her mouth, her arms around my neck.\n\nWe stopped and she just beamed at me, kissing me again. I forgot that this was the pool though and she did as she had done the day before and pulled at the back of my knee ducking me again, striking out for the far corner laughing.\n\nI chased her around the pool, impressed by the size of it and the quality of the surroundings. I caught her quite quickly of course and grabbed her feet making her dive down. I followed her until she ran out of water, giggling as I closed on her and pinned her to the wall. \n\nShe didn't try to escape this time of course and just slipped her arms around my neck and pulled me close. We kissed again, something that I hadn't done that much of before but now just couldn't get enough of. \n\nHer wet hair was around her face and I couldn't stop staring at her. It seemed that the feeling was mutual.\n\n\"Awwwww!\" said Meghan, \"how sweet!\"\n\nAlice laughed, giggling like a caught out kid. I smiled an embarrassed smile as well pulling Alice back into our hug and spinning her around so we could resume our swimming and not look so obvious about what we had been up to since Meghan had gone to bed the night before. \n\n\"Brekkie!\" screeched Alice seeing a vast tray the same size as the one in my room still looking like a tuck shop raid. This one had plates, a huge pile of toast, fried bacon, eggs, sausages and a plate of buttered bread and several bottles of sauces.\n\n\"Help yourselves Darlings!\" said Meghan. \n\nAnd we all did.\n\nI confess that, like my Dad, I prefer bacon and egg sandwiches over the plated version Full English, toasted if the Gods of catering are smiling on me. Today they were and Meghan knew, of course - I am my Father's son. \n\nClimbing out of the pool, I sat making several sandwiches, and crooning to my hostesses at the sheer perfection of the moment. It was a summer Saturday morning, not gone eight o'clock by my reckoning, by a huge heated pool, with two beautiful naked women. When Alice stood in her bare, pool-wet, glistening perfection and poured me another mug of tea I knew what heaven was really like.\n\nShe looked at me, shook her head and tutted.\n\nFollowing my third sandwich and fourth mug of tea, I was like a man refreshed and looked across at Alice, now stretched out and taking advantage of the morning's rays to keep her tan how she wanted it. My seat was a recliner as well so I did the same as her, until Meghan stepped across and started to clear the breakfast things and noted my pale Anglo-Saxon complexion.\n\n\"If you're going Spa brown Richie dear, can I suggest some sun-screen?\" Meghan looked up and saw that I was laying out.\n\n\"Ali, do we have any of that nice factor 15 left? That should do him splendidly.\"\n\n\"Yeah,\" she said, \"It's in my therapy room, I'll go get it.\" She stood and stepped over my legs, giving me a great view of her again. In those few seconds and with my dirty mind I felt the quickest flexation of my penis and while I was happy that Alice had seen it, and... other things... I wasn't sure that Meghan would be happy. She had looked of course, smiled and nodded to Alice.\n\n\"I'll throw a bucket of water over him!\" Alice sighed.\n\n\"You can't blame him honey!?\" said Meghan standing up and taking her cup before heading to the kitchen and whatever else she had planned for the day.\n\nI had placed a hand over it by now, and figured that in this environment it was inevitable.\n\n\"Still a compliment Alice,\" I said.\n\nMeghan looked at the retreating Alice, looked back at me, raised her head to check out my condition and smiled, blowing me a very meaningful kiss.\n\nAlice came back a few minutes later with a large tub of a very expensive looking sunscreen moisturiser.\n\nI reached out for it with a smile. She just shook her head,\n\n\"Let me,\" she said, \"I've been thinking about massaging you... No I haven't,\" she grinned with a wrinkled nose, \"I've been thinking of rubbing all over your naked body with my bare hands!\" She took my hand and led me to one of the larger sun loungers and had me lay down. \"This one is extra special. It has all kinds of moisturising qualities, lots of natural minerals and is a factor 15. If you take it easy for the next few days, you'll have a great tan in a matter of days.\"\n\nI lay on my face, and she started on my shoulders.\n\nFuck but she was good.\n\n\"Some tension in the shoulders Richie,\" she said, \"Wassup?\"\n\n\"I've just lost my virginity and the girl's Mum is looking at me at bit old fashioned.\" I said, honestly.\n\n\"Really?\"\n\n\"Yeah.\"\n\n\"What's the girl like?\"\n\n\"Gorgeous,\" I said, \"Most attractive woman I've ever met.\"\n\n\"Wow, what a lucky boy you are!\" She bent down and kissed my cheek.\n\nNext she was working down my arms, then my back.\n\n\"You need to go careful with the weightlifting Richie,\" she said being serious for once. \"Do you use a machine or bench press.\"\n\n\"Bit of both.\"\n\n\"Well later this week I'll show you how to bench press properly, you've got a muscle here that is a bit out of shape. Quite normal, but...\" she bent down and kissed my back, where the muscle was I guessed, \"stick with me sweetie, I'll look after ya!\"\n\n\"Like you haven't already?\"\n\n\"You know it!\"\n\nNext she was into the base of my spine, and digging her fingers in, explaining the most common types of back problem, the causes and cures. While I just wanted to lay here and be manipulated, I was mentally taking it all in, for my training. She bent my right leg up, pressing at my hip in several places and I felt some immediate relief.\n\nThen it was my gluteus maximus, my thigh muscles, calf muscles and, yes my feet. She massaged my FEET and I felt soooo relaxed.\n\n\"Roll over sweet cheeks,\" she said, slapping my bottom. I did so.\n\nShe started at my neck and shoulders again, this time taking the opportunity to kiss me, and giving me the opportunity to grope the fuck out of her great tits, even going so far as to suck the nipple closest to me.\n\n\"Why Richie!\" she said, \"we are getting bold!\"\n\n\"Still a total amateur Miss,\" I said, \"But I am willing to learn.\"\n\n\"Stick with me young Padawan, I'll teach you the ways of the ways of the force.\"\n\nYES! The most beautiful, sexy girl on the fucking Planet was a Star Wars Nerd. How could this possibly get better!?!\n\nIn a few moments I found out how it could get better. \n\n\"Oh look,\" she said, \"I mention Star Wars and you get an erection.\"\n\n\"Princess Leia in the gold Bikini Ali,\" I said. I took a breath, \"don't suppose you've got one have you?\"\n\nShe shook her head, smiled and next thing I knew, while her left hand stroked hard into my pectorals her right was masturbating my now hard penis.\n\nWhen her hands both met at my still sensitive groin, I looked down. It was the perfect timing because she opened her mouth and lowered it onto me and straight down.\n\nCHRIST!!\n\nShe dragged her mouth agonisingly slowly down and teasingly back up again, giving me a slow lick.\n\n\"Go easy Alice,\" I said, \"even us Padawan learners can't stand up to that kind of thing.\"\n\n\"Really?\" she said, repeating the performance.\n\n\"Oh shit,\" I said sitting up and fearing I could soon be having an extremely pleasant but uncool accident.\n\nShe kissed the top of my manhood, and cackled.\n\n\"You are now mine, my young apprentice!\"\n\n\"If you're working on the dark side, where do I sign?\" She laughed and stroked me softly, \"Oh is there a pension scheme and how much annual leave do Sith Lords get?\"\n\nShe laughed, leaned forward and kissed me,\n\n\"You fucking nerds kill me, honest you do.\"\n\n\"And like you don't know what I'm talking about?\"\n\n\"Guilty as charged your honour.\" She rubbed a final few swipes of the very pleasant smelling sunscreen on my legs. \"OK big boy, your turn to do me.\"\n\n\"Oh yeah,\" I said, almost leaping off of the sun lounger.\n\nAli lay on her front and I rubbed in the lotion, asking her about the pressure she had given to particular muscles and she elaborated as much as she was able to without getting up and showing me. I reached her bottom and paid particular attention that.  \n\n\"Lots of exercise Richie,\" she said, \"and a healthy diet.\"\n\n\"Worth every step and every soya bean,\" I said kissing each cheek. \n\nAs I rubbed her inner thighs, she did start to squirm a bit, and I began to clock all of her erogenous zones for later use. Next she rolled over and I started at her neck again, taking the opportunity of kissing her, something we seemed to be doing all the time now, and worked the sunscreen down her neck along her sides before settling onto her boobs.\n\nAli talked to me about the necessity for good support to stop large breasts from sagging and how massage was particularly good for them.\n\n\"Here you go Doctor McNair, here's how you search breasts for lumps and bumps,\" and she very slowly taught me the method recommended, and I checked her fantastic tits, a quarter at a time for far longer than necessary. Something I was pleased to say I remembered for the rest of my career.\n\nBy the time I reached her groin, I couldn't hide my desire for her and wanted to go down on her and try and give her the same kind of pleasure she had given me that morning.\n\n\"How are you with gynaecology Doctor Alice?\"\n\n\"Pretty good, want me to talk you down?\"\n\n\"Fuck yeah...\"\n\nBeing a single masturbatory male up until that point I had, shall we say, read lots of instruction books and lots of training films... ahem... but the real nitty gritty that Alice got down to was actually really interesting.\n\nI had seen cadavers of course, and I had seen some real women when on rounds but this was my first time that I could pay real close attention. She showed me around; the labia, urethra, clitoral hood, the clitoris. Next she suggested I insert a finger and explore in my own time, and I did. I could see that what I was doing was having the desired effect and I found the rough patch of skin that I guessed was her G-spot."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "oral",
        "naked",
        "anal",
        "pool sex",
        "milf",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-girl-at-the-spa-ch-01"
}