{
    "title": "Basics - Neural Control Node Ch. 06",
    "pages": [
        "Author's Note\n\nThis chapter resumes the next morning. Josh slept alone with Rhi. While Tess, Gina and Essie each slept in their own rooms in Tess' much larger mansion. Everyone has the rest of the week off. Josh promised to take a video conference from someone who claimed to have in depth knowledge of the cube's technology. \n\nNeurally enhanced assistant scorecard:\n\nJosh - Cube 1: (Active nodes)</br>01- Gina</br>02- Rhiannon (Rhi)</br>03- Ester (Essie)</br>04- Contessa (Tess)</br>05-\n\nJosh - Cube 2: (Deactivated nodes)</br>01- Jasmine</br>02-Eve</br>03- Hassan\n\nThursday morning means the weekend is close. Everyone is moved into Tess' riverside mansion. Let's see where things go.\n\nThis is obviously a work of fiction, all characters that engage in sexual activities are over the age of 18. This chapter does include a scene with incest. \n\n\n\nBasics: Neural Control Node Ch. 06\n\nWatch out, you might get what you're after<br/>Cool babies, strange but not a stranger<br/>I'm an ordinary guy<br>Burning down the house<br/>~Burning Down the House (Talking Heads)\n\n\u2014\u2014\u2014\u2014\u2014\n\n\"You need to wake the fuck up,\" growled Rhi, her eyes flared in anger\n\nI woke up with a start, sitting up breathless in a bed. I didn't recognize where I was. The beginning of the day brightened outside a spread of windows that overlooked a pool and a large flowing river.\n\nSlowly my mind awoke and I recognized our new home, and turned and saw Rhi stirring beside me. Her eyes fluttered open and she yawned.\n\n\"Same dream?\" She said her eyes gained focus and looked at me with concern.\n\nI slid back down alongside her, and brushed a lock of her dark blue hair off her cheek so I could look in her blue eyes.\n\n\"I don't know,\" I said, \"But I remember some this time. You were angrily telling me to, 'wake the fuck up,' your words.\"\n\n\"You must have made me mad,\" she smiled, \"you know I hardly ever curse.\"\n\n\"Well, you do,\" I grinned, \"When I'm fucking you, you curse a lot.\"\n\n\"That's more asking for something very specifically,\" she teased, then leaned and kissed me, her fingers combing through my hair, \"I'm sorry you're having nightmares. It doesn't make any sense to me, you are so wonderful to all of us. I wish you could tell me what is troubling you.\"\n\nI rolled onto my back, and looked at the ceiling. Waves of thoughts and worries started swimming in my mind. I just didn't know how to express my thoughts well. This was what happened when I was younger and starting relationships. I always lived more in my head, hardly ever talking about issues with whomever I was dating. The strain of unresolved conflict would cause sparks and arguments. Then it was easy for me to dismiss my partners for not really caring about me. It was toxic, and I'd quit the cycle by not allowing anyone close. I didn't want to restart that cycle again, not with Rhi. Not with any of my lovers.\n\n\"Everything is happening so fast,\" I started, \"I've been reacting to things, trying to do my best. I think I won't be able to and all that I've gained - I'll lose.\"\n\n\"That is a pretty heavy burden,\" Rhi said, shifting up to sit against the headboard. \n\nShe leaned over and combed her fingers through my hair, then tapped me. \n\n\"Put your head in my lap,\" she said, \"Just talk to me, we don't have to fix anything. I just want to listen to you.\"\n\nI nodded and moved to my side, my head rested on her thigh. I took a long breath, and her fingers combing through my hair helped me to relax. I closed my eyes and ran through my thoughts, determined to work through my issues.\n\n\"I think my subconscious mind chews on these issues while I sleep,\" I started, \"Then I wake up from a dream where my subconscious thoughts are connecting the pieces.\"\n\n\"That makes sense,\" Rhi said, soothingly combing her fingers through my hair.\n\n\"I picked you,\" I said, \"I chose to completely change your life, to bind you to me. I didn't give you any choice at the time, I just took you. I don't regret it at all. But how can I make good moral choices, when I have violated your free will. I love you so much now.\"\n\n\"I hear what you're saying,\" Rhi smiled, after a moment of thought, \"I do understand what happened, I am aware that the cube linked us without my willing consent. Do you want to hear what my feelings are about that day?\"\n\n\"I do,\" I said, \"because I think I will continue to tear myself up, even as we grow closer, and that scares me. Will my inner conflict cause a rift between us?\"\n\n\"Okay, thank you for telling me your fears,\" Rhi said, \"I appreciate that a lot. I don't want you to feel as my Master that you have to always be distant and confident. I need you to share your emotions with me, you don't need to be stoic, not with me. You can, and should, confide in me. I can't help you if I don't know you are struggling with something. I want to know everything about you, and I want you to know everything about me.\"\n\nI nodded and inhaled, releasing some inner stress, when I was done she continued.\n\n\"That morning Gina and I had an argument,\" Rhi said, \"I never told you that, it seems so distant and unimportant now. I resented her spending so much time with you. I thought it was inappropriate, she is young enough to be your daughter. I didn't think you were doing anything inappropriate, I didn't understand why she had to spend so much time with you.\"\n\nI turned my head to look at her, my eyes must have shown some confusion, because she rubbed her hand on my shoulder to reassure me.\n\n\"I resented that she got to spend time with you, while I stayed at home, alone.\" Rhi said, \"Part of me wished that I could be with you. I was smitten with you. You are handsome, and were always polite and respectful. Gina would come back from playing games, and she'd laugh about your humor. I was jealous, but didn't want to steal her only fun outlet. In my mind it was a zero sum game.\"\n\n\"A zero sum game?\" I asked, looking for clarification..\n\n\"Yeah, one winner, and one loser,\" Rhi explained, \"only one of us could be with you, either her as a gaming friend, or me as, hopefully, a lover. I didn't think of any other possibilities.\"\n\n\"Oh,\" I said nodding in understanding.\n\n\"So when you invited me over, and gave me the cube,\" Rhi continued and then started to smile, \"My mind linked to yours, and I sensed Gina's link as well. It clicked. It fit. My conflict was resolved. We could both be yours. It's hard to explain how quickly my mind changed in those few moments.\"\n\n\"I installed the FuckMe app almost immediately,\" I offered as an explanation, \"It was an accident with Gina. That damned app installed when I said that phrase to myself. But, with you, I purposefully installed it on you first thing.\"\n\n\"Maybe something in the cube logic solves that conflict,\" Rhi shrugged, \"Two lovers, one man, maybe it adjusts jealousy for compatibility. I don't know. All I do know is that I wanted you. Then you adjusted our appearance, and I felt so desired. Something I'd always wanted to see in your eyes, I saw. You wanted me.\"\n\n\"It happened so fast,\" I said, \"I had a crush on you, but you were Gina's mom. I thought it would be weird to ask you out before the cube. I haven't been good at relationships, and the thought of even trying to start a relationship with you felt doomed to failure - my own issues with relationship and intimacy would always wreck things.\"\n\n\"All I wanted, as the AI meshed with my thoughts, was your happiness,\" Rhi recalled, \"You were hungry, I could cook for you, feed you. Making you happy became my focus. Though, like I told you, I was a bit angry that you went and fucked Gina first.\"\n\n\"Yeah,\" I admitted, \"I had to test it, I had no idea how anything worked. My rationale was I didn't want to mess up with you.\"\n\n\"I don't think you can mess up with me,\" Rhi mused, \"I think the cube would resolve it to maintain a balance. I do know that you work hard to restore an imbalance that you may cause. You could use the cube, probably, to adjust us to accept things differently. You choose to respond \u2014 to treat us as people that you love. It's why I submitted to you, I know that you'll always work for the best solution.\"\n\n\"I will try,\" I admitted.\n\n\"You're trying now, babe,\" she assured me, \"I don't think you've had talks like this with girlfriends before the cube. Just a hunch.\"\n\n\"That's true,\" I confessed, \"I get my thoughts and emotions trapped in my head. I'd have entire arguments in my head, and then my girlfriend would be surprised when I was angry with her. I realized I was a bit off, I let my emotions get the best of me. The easy fix was not to have any relationships, limit emotional involvement. I became celibate. The cube has changed me too.\"\n\n\"We are soul mates,\" Rhi smiled, \"Maybe that has changed you. The security you feel in that relationship has allowed you to discuss your feelings with less fear.\"\n\nI nodded slowly, and I realized that the higher relationship status I had pushed into her, may have affected how she related to me too. It could, in theory, also affect how I related to her. It was dizzying to think of the ramifications of how the cube's power could affect us.\n\nAs my eyes returned to her after processing my thoughts, she smiled at me, her blue eyes full and trusting. I lifted my head from her thigh to kiss her fully, my hand lifting behind her head, fingers curled to grip her blue hair. She deepened the kiss. The time for talking was over and we both knew it. We shifted into more comfortable positions for kissing and fondling.\n\n\"Are we going to have morning sex now?\" She smiled.\n\n\"We've gotten closer ever since we started,\" I grinned, lowering my other hand to her exposed breast, \"I don't want to jinx it by skipping a day.\"\n\nShe groaned her approval and pressed her breast into my grip. We kissed again, as we shifted in the bed. I lowered to my back, and pulled her down over me. She shifted and straddled my hips lowering her sex to grind against my cock. My hands slid down her sides to her hips, feeling her move slowly pressing her slick labia along my hard shaft.\n\n\"I want to watch you,\" I said, \"You are so beautiful.\"\n\nRhi blushed and nodded, then rested her hand and pressed into my chest to lift her hips up. Her other hand dropped down to grip my cock. She stroked it once, then lifted it up and then pressed it into her cunt. Her eyes locked on mine as she lowered, then her eyelids half closed as I filled her. She started to rise, and I lifted my hands to her full breasts. She purred as I gripped firmly and then ground down til she could rotate her hips against me.\n\n\"You feel so good inside me,\" Rhi breathed, \"You fill me up, like you're made for me.\"\n\n\"You're made for me,\" I growled, \"You're mine, body and soul.\"\n\nShe ground on me, and we enjoyed slow sensuous love making. Her breaths matched my groans, and her moans made my cock pulse. Slowly our pace increased until she pressed forward and kissed me. I wrapped my arms around her lower back, pulling her hips against me. Then I cycled my hips, taking over and fucking her hard and fast. \n\n\"Cum!\" I commanded in a low whisper, triggering her release, \"cum for your Master, slave.\" \n\nRhi cried out, and I felt her cunt clench. She kissed me deeply, her fingers curled in my hair as my continued strokes drove her to another peak. With a grunt, I slammed my hips into her. Her eyes flared as she felt me release and pump my cum into her cunt, then her eyes faded closed, and a smile spread over her lips. Our hips spasmed together as I emptied into her, and her oragasm faded. I ran my hands up along her back and held her tightly.\n\n\"I'm so glad we kept our streak intact,\" Rhi smiled, \"I don't know what I'd do to start a day without you filling me up.\"\n\nI looked at her, as she gazed in my eyes. The bliss of the moment overwhelmed me and I combed my fingers through her hair.\n\n\"I love you, Rhi,\" I said, \"More than I can express.\"\n\n\"I love you too, Josh,\" she her catching, and her eyes bright as she blinked rapidly. \n\nI ran my thumbs along the bottom of her eyes, and collected her tears. We stared at each other in the moment, caught up in our own cocoon. Like nothing else existed. We kissed and she rested on my chest.\n\n\"Breakfast needs to be made,\" Rhi finally said, \"It's something else that makes me feel close to you. Caring for you and serving you.\"\n\n\"You are my treasure,\" I said, \"Can I help you with anything.\"\n\nShe looked at me, and bit her lip, and searched my eyes.\n\n\"I'd rather you not,\" she said softly, \"I want to serve you. When you help it makes me feel like we're equals. I want to be your slave. It's weird I know. But let me serve you.\"\n\n\"Okay,\" I said, \"Thank you for telling me how you feel. You do make me feel like a king.\"\n\n\"Good, you are my Master,\" she smiled. \n\nShe slid off of me with a soft moan as my cock slid out. She walked naked to the bathroom in only the satin collar she wore continuously. I remembered the meaning, and reminded myself to find a special collar for her. She came out of the bathroom and leaned over to kiss me, then stopped by the closet to wrap a full length satin robe around her naked flesh. Then she waved and left to go to the kitchen.\n\nI rested for a few moments, reviewing the morning. While the discussion with Rhi was satisfying, I was still disturbed by my dream. It was the third day in a row I woke up with a start. Part of me was sure it had to do with how the cube was being used. Unable to put my finger on anything specific, I slid out of bed. I stretched, and then walked to the bathroom to take a quick shower. I couldn't remember where I left my phone, but figured it was still early. My dream seemed to wake me consistently just before 6AM.\n\nI started the water in the shower. Tess' guest room had a large bathroom, the same footprint as the master bathroom below. A large garden tub beside a smaller, but still generous shower area, enclosed by clear glass. I started the water in the shower, and was pleasantly surprised by hot water almost instantly.\n\n\"Tankless water heaters,\" Tess said, stepping behind me and pressing her naked breasts against my back, \"one for each side of the house, water is always hot. Just like you.\"\n\n\"That's a bit corny,\" I laughed, \n\nI stepped forward, wrapping my arm around her to pull her into the warm spray with me. She shut the glass door behind her while I was turning around. I smiled into her eyes, and then pulled her close with my hands at her hip. She smiled and pressed up to kiss me, her breasts pillowing into my chest. My hands dropped to cup her ass, and pull her closer. She moaned into my kiss, her fingers sliding between us to stroke my erect cock trapped between our bodies.\n\n\"I think I'm becoming addicted to this,\" she said as she pulled from the kiss and dropped to her knees.\n\nThe spray from the shower soaked her blue curls, her violet eyes looking up as she pressed her lips to the tip of my foreskin and kissed. The spray from the shower was hitting my lower chest and then streaming down my abdomen. She blinked in the light spray from the water, as her lips pushed my foreskin back, and her tongue swirled over my exposed glans. \n\nMy knees buckled, and I leaned back against the tile. Tess grinned at my reaction, then stroked my cock as her mouth continued to suck and lick my crown. Her other hand cupping my balls massaging them deliciously. \n\n\"I hope you have some of your cream left for me,\" Tess teased, \"You didn't empty everything in Rhi's pussy did you?\"\n\n\"I haven't seemed to run dry,\" I grinned, gripping a handful of her blue locks to pull her back to my cock, \"despite the four of you constantly trying to drain me.\"\n\nShe purred as I gripped both sides of her hair and held her while my hips drove my cock into her mouth. She kept her mouth open and pressed her tongue against the underside of my shaft, as I fucked her willing mouth. I drove forward, then paused, then pulled her further, feeling her gag, then swallow. I groaned as I felt my cock press into her throat. Her eyes lifted to mine, blazing with lust as her nose pressed into the rivulets of shower water streaming down my body.\n\nI held her there for a long moment, then pulled back. I used one hand still gripping her ringlets to tug her head up, my other hand dropping to grip under her arm, and pulled her to standing. I spun her around and pressed her against the cool tile just under the shower head. My hand ran down her bare flesh, and puller her cheeks open. My cock was like a steel rod as my fingers cupped her sex, spreading her slick labia open.\n\n\"Please,\" Tess groaned, her eyes shifting to look back at me, her cheek pressed against the tile by my grip in her hair, \"Please fuck me, fuck me hard, Josh.\"\n\nShe pressed her ass back and spread her thighs, and I steered my cock between her open lips then drove my rod firmly into her tight cunt. She grunted and moaned as my thrusts pressed her breasts against the tile. I leaned close to kiss her cheek as I rammed my cock into her from behind.\n\n\"You're my needy slut aren't you?\" I growled into her ear, \"Aren't you?\"\n\n\"I'm your slut, your cock toy,\" Tess nodded, her eyes flaring as I held her firmly against the shower, \"fuck yes, I need your cock, fuck me, fill me... fuck.\"\n\nThe heat and passion between us had skyrocketed as I held her tightly. My hand gripped her ass as she pressed her hips back to meet each of my strokes. I pulled my hand back and spanked her firmly, she yelped at the sudden blow, her eyes flaring. Then she pressed back seeking another slap. I spanked her as I fucked her, prodding her towards her peak like a filly towards the finish line. \n\nHer eyes lifted up, rolling back as her lids closed and her body stiffened. I felt her cunt contract then ripple as she grunted out a low moan as she hit her climax. I hit my peak right behind her, and jammed my hips into her. My cock throbbed and I flattened her against the wall as my balls pulsed my hot cream into her cunt. \n\nWe rested, her body pressed against the tile, the weight of my body holding her there. I tugged on her hair to slowly turn her head, then kissed her deeply. Her tongue pressed into mine as she groaned in deep satisfaction. Then I shifted back, freeing her, while she turned, her deep violet eyes searching mine, then she kissed me again wrapping her arms around my neck.\n\n\"Mmmm that scratched my itch,\" she purred, \"I need to wash up and go help Rhi with breakfast.\"\n\n\"You're beautiful and sexy, Tess,\" I smiled and reached for the shampoo.\n\nWe washed each other, I shampooed her azure ringlets, and she soaped up my chest and down to clean my cock with the suds. We spent a lot of time getting lathered up. I recalled that lathering was important in washing your hands, wouldn't it be important for all the rest of the body. Finally satisfied that our skin was the cleanest it could be, we helped each other rinse with more touches. I turned the water off, and she handed me a towel and one for herself from a shelf above the shower head. She smiled as she dried off, then leaned up and kissed me again.\n\nShe wordlessly left the shower, and I slumped against the wall for a moment. Tess echoed Rhi in so many ways physically. Yet her expressions and desires were sexy in a different way. I enjoyed how we were learning more about each other, and what we liked about each other. Her smile was contagious and I enjoyed her laugh, and her flirtatious personality. \n\nI toweled off then left the shower. Looking at myself in the fogged up mirror. My body still reflected the changes Rhi had helped me with the night we first made love. I took a moment to appreciate her suggestions, I did look sexier than I remembered. I looked at my hair, which was growing longer.. My beard was thicker than I'd ever remembered, it was more than just stubble. I wondered if I needed to visit a barber, or if I needed Tess to help me with some adjustments. Overall, for the first time in many months, I liked what I saw in my reflection.",
        "I grinned, then leaned into the glass, \"Don't become an asshole, Josh,\" I reminded myself.\n\nI walked back into the bedroom Rhi and I shared, then into the closet. Rhi had neatly unpacked my clothes onto a set of open shelves, and hung my few nice shirts up one side of the closet. I dressed in a pair of swim trunks, and a printed tee-shirt. Then slid my feet into a pair of sandals. I didn't have anywhere I had to be today, and I expected today would be as hot as yesterday was. A relaxing day outside near the pool sounded like an ambitious plan. \n\nI walked down the hall to the other end of the house, and then paused outside of Essie's room. I knocked lightly and then entered. Her bed had been slept in, but she wasn't in her bed. I heard moans and arousing noises coming from Gina's room across the hall. I grinned and decided I'd let them enjoy their time alone. I had adjusted their bisexuality for a reason. If I tried to continually please every one of my assistants, I would wear myself out.\n\nI quietly turned and walked down the stairs towards the kitchen. I saw Rhi and Tess working on breakfast, putting out the platters of breakfast food they'd prepared. I hugged them both and shared a kiss with each of them.\n\n\"Have you seen my phone,\" I asked absently.\n\n\"Yes, it's on the counter there, connected to the charger,\" Rhi said pointing to the corner I'd just walked past, \"You left it in your shorts from yesterday, I found it when I started a load of laundry. That corner will be where I put things from your pockets, okay?\"\n\n\"Okay, yeah. I'm sorry, I should remember to empty my pockets.\" I said apologetically.\n\n\"Master,\" Rhi said, smiling leaning close and putting her hand in the center of my chest, \"If this is a way I can serve you, and help you when you're so very busy, then I'm happy to help you not worry about such mundane things.\"\n\n\"Thank you,\" I said looking at her, as I pocketed my phone, \"I appreciate what you do for me so much, it does make things easier. It is incredible how much you get done.\"\n\n\"If I keep everything neat and tidy,\" Rhi grinned, \"You stay happy, and happy men enjoy showing their appreciation in the most wonderful ways.\"\n\n\"I may exhaust myself showing appreciation,\" I chuckled, then added \"I might have to adjust my stamina again, to keep up with all of you.\"\n\n\"We should remember there is only one of you, and four of us,\" Tess grinned, wrapping her arms around me, \"Thank you for spending time with me this morning.\"\n\n\"I'm not complaining, just trying to keep up with all my sexy assistants,\" I explained, remembering the special times I'd spent with each of them the night before, \"I enjoy spending time with each of you.\"\n\nWe filled our breakfast plates, then took them out to the patio. Gina and Essie soon came down and did the same. I was famished, and after finishing one plate, returned to the bar for a second helping. I enjoyed all of their smiling faces as I returned to the patio.\n\n\"What do we need to do today?\" I asked, as I sat back down.\n\n\"Unfortunately,\" Essie said, \"I need to go collect my Abuelo's remains. The Medical Examiner has finished the autopsy, and his body was cremated per his will. He didn't have much, his house was paid for, and a small life insurance policy. I have no idea how to work through what needs to be done. I'm his only next of kin.\"\n\n\"I can drive you to get the remains,\" I said, \"I'm a bit lost on next steps for the rest.\"\n\n\"Let me call my lawyer,\" Tess said, \"She's on retainer for a reason. I'd be glad to help you Essie, if you'd like.\"\n\n\"Thank you Tess,\" Essie smiled, then rose and hugged her, \"I really appreciate your generosity. You hardly know me, but you've been so helpful.\"\n\n\"I consider you family, Essie,\" Tess smiled, \"A bit to my surprise, to be honest. I only want what is best for you and for all of us.\"\n\nEssie sat back down and just looked at Tess for a long moment, her brown eyes soft, then smiled and looked at me.\n\n\"I need to take a conference call,\" I said, \"I can take you after that's done.\"\n\n\"For work?\" Rhi asked, \"I thought you had the week off.\"\n\n\"It's actually about the cube,\" I said, \"I got an email from someone claiming to be from the product development group for the Neural Control Node. They say they have been monitoring the users of the cubes, and I stood out as a good example.\"\n\n\"That's interesting,\" Rhi said.\n\n\"Can I listen in?\" Essie said, \"It's awful convenient that they selected you, something doesn't smell right.\"\n\n\"I'd like it if you would, actually,\" I said, \"Parts of what was expressed makes sense, but I want to be cautious too.\"\n\n\"Master,\" Rhi asked, \"What is this new app HealthMonitor?\"\n\n\"It was Tess' idea,\" I said, \"She was concerned about all the unprotected sex we have. I should tell you all, that I'm sterile, I had a vasectomy while I was in college. I'm certain I can't get any of you pregnant. The new app was to screen all of you for any hint of a disease, as well as monitor your health continuously.\"\n\n\"Did you think we had STDs?\" Gina asked, her eyes flicking toward Tess, \"I have been celibate for months, even before all the social distancing mandates.\"\n\n\"I didn't know,\" Tess said, \"I was concerned. I haven't had many sexual partners the past few years. I didn't want any of us to get sick.\"\n\n\"I think we've all been celibate,\" I said, \"I did agree it would better to be safe than sorry. Tess and I researched the app, and there are additional benefits beyond the STD screen. I want all of us to be in good health.\"\n\n\"It's a good idea\" Essie said, \"You're right. You didn't know anything about me when I touched the cube. I didn't know anything about you all either. I can see the logic. The cube already helped by alerting you when Gina and I were shot.\"\n\n\"We're still figuring out the mysteries of this cube,\" I agreed, \"One of the reasons I'm curious about this call. If it's genuine, I might be able to glean more information about how it works, and maybe find a way to free you all.\"\n\nThat was the wrong thing to say. As one the four of them looked at me gobsmacked.\n\n\"Why would you want to free us?\" Tess asked, incredulously \"Are you unhappy? Have we made you angry? Are we...\"\n\n\"Wait, wait, wait,\" I started, \"hold on, I might have stated that wrong. I don't want to lose any of you. You all understand you didn't have a choice. The only one that voluntarily touched the cube was you Tess.\"\n\n\"I've never regretted it since,\" Tess said, crossing her arms, still irritated.\n\nI looked at the rest of my girls, they each met my eyes with looks of irritation, sadness, or disbelief. I shook my head and shrugged my shoulders. \n\nThe same cycle of toxic thoughts took another lap in my mind. I kept returning to the thought that they only wanted to be with me because of the cube. That if they hadn't accidentally or by my action been influenced by the cube, they'd have nothing to do with me. It was a toxic self-condemnation that was an echo of why I kept my distance in relationships. I found it surprising that anyone would choose to stay with me.\n\n\"I'm sorry,\" I apologized, \"I won't bring that up again. I love being with all of you, and if you're happy with me, I'm overjoyed with you. For better or worse, we're together.\"\n\nI went silent, I didn't know how to get my thoughts out of my head. Or stop the cycle of recrimination. Gina and Essie, I loved them. I had never thought through the long term aspects of our deepening relationships. I had, in some ways, treated our connections as a technical issue that needed to be solved. All the while the influence of the cube was melding us into a more complex and web of entwined relationships. A Gordian knot that couldn't be unraveled.\n\n\"Josh, my love,\" Rhi said, taking my hand, \"I remember our talk this morning, and I know you've been troubled by what initially happened. I do understand. Speaking for myself, I see what happened as fate. Something cosmic that was meant to be. I wanted to know you more before I ever touched the cube. I love you for you, not because of technology.\"\n\nThe other three girls nodded, looking at Rhi then at me. Essie slid closer to me and gripped my other hand.\n\n\"I touched the cube by accident,\" Essie said, \"We all know that, and as soon as you had time to explain, you offered me an out. I didn't take it, and I don't regret it. Now you are all my family. The only family I have left. Call it fate, kismet, or just meant to be. I'm so happy to be with you.\"\n\nEssie kissed my cheek and hugged me. Gina stood up and wiped her eyes, she had been crying. She walked behind me and hugged me close. I felt her breath on my cheek, it felt like she was trying to find words.\n\n\"I love you Josh,\" she finally said, \"The first touch wasn't a mistake - it was fate. I am where I am supposed to be. I trust you with all of me, and I never want to be free from you.\"\n\nI was overwhelmed at their responses. My vision was suddenly a bit blurry and my eyes stung. I wrapped my arms around Essie and Rhi, turned my head to kiss Gina's cheek. I struggled with what words to say, there was still a lot wrapped up with the events that connected us, and my own poisonous self-doubt.\n\n\"I love all of you,\" I said, \"I do. Being together like this, though. Do you all realize what that means? Gina and Essie, you'll never have a boyfriend, get married, or have kids. We can be happy, I'm certain of it. I wonder how much our happiness is - enhanced by the connection to the cube. What if that get's cut off. The technology fails. What if I fall in love with you, and you all decide to leave when the cube doesn't recharge? I want to be honest with all of my worries.\"\n\nTess got up and lightly sat on my knee, and leaned and kissed my cheek. \n\n\"We trust you, Josh,\" Tess said, \"We believe in you, and know you'll fight to figure out how to fix any difficulties. Like you have from the moment this all began.\"\n\n\"You weren't even here when this began, Tess,\" I said, \"How do you know what I was doing.\"\n\n\"I sense it,\" Tess said, \"My sisters tell me, not always with words. The way they look at you, respond to you. Look to you for help. I find myself doing the same thing. It might be invisible to you, but you are our head, our leader. We love you, and trust you.\"\n\nAll four of their heads nodded, as I held them all close. I was humbled beyond words, their love filling me like nothing I ever felt. I'd never imagined being so connected to another person, let alone four. Our sexual connections were intense in the moment, but fleeting once we started living and doing normal activities. I was more aware now of our deep connection beyond the physical, even beyond emotions. We had become symbiotic, we needed each other.\n\nThe deep connected feeling of the moment slowly faded and the girls each kissed me tenderly then returned to their seats. I grinned at each of them while wiping my cheeks. \n\n\"Okay.\" I said, \"I understand now. No turning back. I still think it's best for me to know as much as I can about the cube, and the technology. To keep all of you safe, all of us together.\"\n\n\"You're different from any other male I've had a relationship with,\" Rhi said, \"You show us love and care, you look after our needs. You are honorable, and admit when you make a mistake. You continually try to do better. You really are unique, and you should know I think you're an amazing man.\"\n\n\"You are a good role model,\" Tess agreed, \"if there is such a thing, for other cube owners. You haven't abused your powers, you've fostered deeper connections with each of us. I don't know a lot about how the cube works. My perception of males however makes me think most wouldn't show the restraint you have.\"\n\n\"The email did mention that several cubes were disabled because of terms of service violations,\" I said, \"Which is odd, because I haven't been able to find any terms of service anywhere.\"\n\n\"When is the call?\" Essie asked.\n\nI pulled out my phone and tapped to open the screen, the phone unlocked after identifying my face, then I tapped on the email app and went through another face identification unlock. The time on the phone had said 9:32AM just before the screen unlocked, then in the email the video conference invite listed a 10AM start time.\n\n\"In about 28 minutes,\" I said, \"What time did you want to go back into town?\"\n\n\"Can we go as soon as you're finished?\" Essie asked, \"I want to pick up my bike on the way back.\"\n\n\"When will you be back?\" Rhi asked, \"Looks like you'll be gone for lunch.\"\n\n\"Maybe back mid-afternoon,\" I guessed, \"Certainly, we will be back by dinner time.\"\n\n\"You're going to miss prime tanning and swimming time,\" Gina grinned.\n\n\"I know, hopefully we can be back as soon as we can.\" I grinned, \"I'd better get ready for this call, I'm going to change into more appropriate clothes so we can go right after it's done, okay Essie?\"\n\n\"I'll come up with you,\" Rhi said, rising to walk with me to our room.\n\nThe rest of the girls started cleaning up from breakfast, and then started working in the kitchen. The MaidMode app seemed to keep primary residences as neat and tidy as possible. The four of them seemed to just keep in sync with each other, because I never saw them discuss or plan, they just executed. \n\nUpstairs I pulled off my tee-shirt and pushed down my swim shorts after kicking off my sandals. Rhi sat on the edge of the bed watching me. I smiled at her as I pulled on a pair of underwear. \n\n\"Was there something on your mind?\" I asked, then pulled on an undershirt, and then pulled a button down off a hanger.\n\n\"I just wanted to tell you, alone and face to face, how much I love you,\" she smiled, \"I'm proud of you too, working through how we all work together, your own feelings about what is happening to all of us. I know that was hard for you.\"\n\n\"It is hard,\" I admitted, \"I can accept that good things happened from events that occurred out of ignorance on my part. It was a good reminder that I didn't act completely out of malice.\"\n\n\"I don't think you acted out of malice at all,\" Rhi said, standing up and helping my button my shirt, \"I think what happened was just meant to be, and I want you to stop beating yourself up over it. Please.\"\n\n\"Manners are important,\" I smiled and wrapped my arms around her, \"Message received. I am happy with all of us, and I need to put all my messy toxic self-condemnation behind me.\"\n\nShe leaned up and kissed me, her fingers combing through my hair. She smiled into my eyes then put her head against my chest. I enjoyed holding her and rubbed my hands along her spring.\n\n\"Thank you, my Master,\" she said quietly, \"Your energy affects all of us, I enjoy when your energy is positive. I love you.\"\n\n\"I love you too,\" I said and squeezed her tightly.\n\nWe parted and I pulled on a pair of faded jeans, and tucked in my shirts, then Rhi helped me with my belt. I found a pair of comfortable leather loafers, then looked at myself in the mirror. Rhi looked at me in the mirror from over my shoulder, then dropped her hand to my crotch.\n\n\"We didn't have to put on pants for a conference call,\" she grinned and fondled me.\n\n\"You're a bit insatiable today,\" I grinned, \"I like that energy.\"\n\nShe laughed and then kissed me again. We held hands as we went downstairs. Rhi went to find out what else needed to be done. Essie met me and walked with me back where my laptop was set up.\n\nI sat down, and flipped my laptop open, then logged in. Essie sat to the side, and looked at me. She had also dressed for the rest of the day, jeans and a cropped top which exposed her firm abdomen as she moved. Her hair was pulled back into a ponytail, like when I met her when she stopped me for expired registration. She smiled softly at me.\n\n\"You okay?\" I asked.\n\n\"Yeah,\" she said, \"I'm okay, just feeling sad remembering Aubeulo. His name was Oscar, he didn't have much, but he was everything to me. Now he's gone, and my life is changing in so many different ways. I don't think I want to return to the force, it's getting so hard to do our jobs. You've given me a reason to do something different.\"\n\n\"I want to support you in anything you choose,\" I said, \"We can talk about options, I know you'll do your share of what we need. I need to start the call. We can talk more on the way down, if you'd like.\"\n\n\"I'd like,\" Essie smiled, I reached and squeezed her hand and we shared a look.\n\nI logged in and opened my email. Then found the email for the meeting and clicked the link to open the web conference. The familiar login screen was there, and I turned off my video, and started the desktop audio. The mysterious R. Bala hadn't joined yet, so I grabbed my cube that I'd left on the table last night. My backup cube was in Essie's gun safe at my apartment. \n\nI tapped on the cube and the top lit up with the radar view. It was satisfying to see all of my assistants all in the same place. I thought back on our earlier conversation, and how much they valued their connection to my mind via this odd matte black cube. I valued it too, I realized.\n\nThere was a buzz then the screen lit up, the face of R. Bala filled the screen. He was of Indian descent, which I'd figured. I had worked long enough in tech to be familiar with Indian names. R. Bala was probably short for Ramesh Balasubmaranian which was akin to John Smith in America. I turned on my video feed so he could see me.\n\n\"Hello Mr. Valentine,\" came the voice, his kind looking face breaking into a smile, \"Thank you for taking this opportunity to connect.\"\n\n\"Just Josh is fine,\" I said, \"I'm hoping to learn more about this intriguing cube,\" I waved my cube across the camera then set it down.\n\n\"Please, call me Bala,\" he continued, with only a slight accent, \"Let me begin by repeating what I said in my original email. We are impressed with your choices and use of your cube, or should I say cubes.\"\n\n\"I do have two,\" I said, his added statement seemed like a cryptic accusation, or maybe he was just fishing, \"I'm wondering why my eighteen year old nephew was caught up in your random beta program. It seems a bit risky to allow a youth access to this much power.\"\n\n\"Regrettably,\" Bala said, his facial features expressing regret, \"there were many issues with the beta selection process, like the issue you have mentioned. One of the reasons we wanted to talk to you. We had discovered the issue with his assimilation of his mother. We were about to terminate your nephew's cube when ownership changed. We didn't at the time know your identity, just an account identifier. We continued to monitor the use closely. We matched your account identifier to your main cube, then we were able to follow protocol to access your account information. That series of events has led to this call.\"\n\n\"How many cubes are active?\" I asked, \"How large was the beta?\"\n\n\"I can't... well I shouldn't discuss the details. You strike me as someone who is invested in using the cube responsibly and enhance your associations with your NEAs. I would like to discuss more details with you, but to do so would require that you sign an NDA. Would you be interested in discussing a change in employment?\"\n\n\"You're asking me to come work for you? Developing the NCN?\" I asked, slipping comfortably into using acronyms for long technical terms.\n\n\"More of a support and customer advocate role\" Bala said, \"The application development team is highly skilled in advanced artificial intelligence algorithms, which seems outside of your technical stack based on your social media profiles. We believe you can assist us with issues we have identified around security, operational, and technical shortcomings. You would also be helpful as a mentor/coach for other cube owners.\"\n\n\"I'm interested,\" I said, \"The NCN and my assistants are invaluable, and the success of this program is vital to me. I would be very interested in improving the use and maintenance of the program.\"",
        "\"I will send you the NDA forms to sign,\" Bala said, \"Unfortunately your signature will need to be witnessed by a notary public, will that be an issue?\"\n\nI glanced at Essie, and she shook her head, mouthing, \"I can help,\"\n\n\"How should I get them back to you?\" I asked.\n\n\"We can start a deeper discussion once we have photos of the notarized copy,\" Bala said, \"So long as you send the hard copies via certified mail. I want to work fast, there are some pressing issues I want to get your opinion on.\"\n\n\"I will get them to you as soon as I can.\" I assured him.\n\n\"My phone number is in the signature of the email I'm sending,\" Bala said, \"please connect directly when it is convenient.\"\n\n\"Thank you,\" I said, \"I'll be in touch, I see your email now.\"\n\n\"One more thing,\" Bala said, rubbing the top of his bald head, \"We've been trying to retrieve some of the cubes that went to an auction site. We enlisted the help of a Mr. Hassan Jafar as a contractor to collect these stray cubes. We believe you may have come in contact with him, can you confirm?\"\n\nI looked at Essie and she shrugged. This was a surprising tangent. I thought for a moment, if they were tracking James' account. Then they may also have been tracking Hassan? Why would they even care about Hassan? I didn't know much about Hassan, and we'd decided to just deactivate his account, once he touched my cube.\n\n\"Yes,\" I admitted, instinctively deciding to trust Bala, \"after I gained possession of my nephew's cubes I was concerned about these cubes getting into the wrong hands. I bought two at auction then determined Hassan had the third. I offered to sell him my spare when I answered another ad he'd left specifically asking for a cube. It seemed very suspicious.\"\n\n\"I see,\" Bala said, then paused to scratch his head, before continuing, \"I can understand your concern. However, Hassan was acting on our behalf. Not out of malice or deceit. If you have gained possession of his and other cubes. I'd like to show you how to do a system reset. It's important that we safely deactivate any connected NEAs on those cubes. Especially if he has become a NEA on a cube, we need his cube to be reset.\"\n\n\"May I ask why?\" I asked, curiously.\n\n\"Hassan's contractor role was to find and assist with the decommissioning of bricked or deactivated cubes,\" Bala explained, \"As of now, he has no recollection of what a Neural Control Node is, and is unable to do his primary function to safely deactivate NEAs. I'm sorry, I've said too much. I can't explain more without the NDA.\"\n\n\"What will a system reset do?\" I asked.\n\n\"When initiated,\" Bala began, \"a system reset will uninstall all applications and safely deactivate all NEAs. Physical changes will remain - which probably should be reset in the appearance app prior to system reset if extreme changes have occurred. After the system resets all NEAs are erased from the node. At which point it is like they never were connected, and they can access normal memory functions.\"\n\n\"Completely?\" I asked, \"Are they susceptible to another connection with a new node?\"\n\n\"It's complex,\" Bala admitted, \"I can show you the system reset gesture, but further details will need to be under an NDA.\"\n\n\"What's the gesture?\" I asked, \"I'll need to perform it on the three cubes I'm receiving. As well as my nephew's.\"\n\n\"If you press one finger into the center of each cube face for five seconds,\" Bala said, and used a normal puzzle cube to show me the gesture, \"System reset will initiate and cannot be aborted. It takes two hands to perform. I'm sorry but I need to go to attend another call. Please call me after the NDA process is complete.\" \n\nThe call terminated and I looked at Essie. We shared a look, then I called for Tess.\n\n\"There is a notary at the station,\" Essie said.\n\n\"What do you need, Josh?\" Asked Tess.\n\n\"Do you have a printer?\" I asked, \"I need to print some documents to sign.\"\n\n\"It should be open on the network, it's in my office.\" Tess said, \"I use it for my contracts. Most everything else is paperless.\"\n\nShe helped me wirelessly connect my laptop to the printer on her network. I sent over the document, fifteen pages of legalese. I read through it then was about to sign it, when Essie stopped me.\n\n\"Has to be signed in front of the notary, Josh,\" she reminded me.\n\n\"I'm a notary,\" Rhi said, stepping into the room, \"It's useful for some of my customers, and a way to get extra cash sometimes, let me get my stamp.\"\n\nI shook my head, the earlier conversations on fate and the odd synchronicity of my assistants resonating in my thoughts. Rhi was back quickly. Her office things were in the room next to the one I was using as an office. She sat down and opened her book, made a listing of the transaction, then pulled out her stamp. I signed the document, and she signed as the notary, then embossed the signature page. \n\nTess grabbed the pages, and asked for my email address. It happened so quickly, it took me by surprise. I looked at Essie and she grinned and shrugged her shoulders. I leaned and kissed Rhi.\n\n\"You're amazing thank you.\" I said.\n\n\"I'm emailing you the scanned PDFs,\" Tess called from her office, \"Do you need to send these somewhere?\"\n\n\"The mailing address is on the last page,\" I said, \"It needs to be certified please.\"\n\n\"We'll run down and get that done for you,\" Rhi said, \"You and Essie should go take care of your errands.\"\n\n\"Email me the certified mail number,\" I reminded her, then grabbed my keys, phone and Essie's hand.\n\nWe left and slid into my car, and were headed down the highway. It was a couple of miles before I realized I'd left my cube behind on my desk.\n\n\"It'll be okay,\" Essie said, \"No one is going to touch it, or take it. We're already part of your network. Let's just get this done. I want to swim again. It's so fucking hot.\"\n\nWe turned the AC on high, and rumbled down the freeway back to our town. Traffic was light on Thursday, as we passed our normal exit, I remembered the private PO Box that Essie had arranged for me. \n\n\"Where was the PO Box?\" I asked, \"We should grab the cubes that were sent, if possible. I'd like to test the system reset gesture Bala showed me. I don't want to test that on my main cube, and my backup cube with Hassan's details is in your gun safe.\n\n\"Oh, yeah\" Essie said then took a moment to think, \"Take the next exit, it's near here. We can check the box, get your backup cube, then continue from there.\"\n\n\"Thanks,\" I said, \"I'm sorry to cause a delay in the plans, I just would feel better if I had physical possession of those stray units.\"\n\n\"No problem, Josh,\" Essie smiled, \"I feel the same way. Doing it now means we won't forget later. I have a feeling that I'll be a bit distracted after we visit the station.\"\n\nIt didn't take long, I pulled up outside the private post office box location. Essie got out,and I forwarded the scanned NDA along with the certified mail receipt to Bala using my phone. Essie returned with three small boxes. Then we backtracked back to the apartment. We went back up to my apartment, which was eerily quiet compared to earlier in the week. Essie opened up her safe, and I retrieved my spare cube in the packaging we used to fool Hassan.\n\nBack in my SUV, I opened the packing boxes, then pulled out the cubes. Everyone had shipped them back in their original packaging, which would keep them from inadvertent contact. I placed all four of the cubes into the glove compartment. \n\n\"Thanks, Es,\" I said, then kissed her on the cheek, \"Let's get this errand finished.\"\n\nAfter getting back on the highway leading to the center of the city, it didn't take long until I pulled into the police station. Essie looked at me, and smiled shyly. Which was odd, she was rarely ever shy.\n\n\"Do you want to come in with me?\" She asked, \"I'd like to introduce you to my Captain, I don't know why exactly.\"\n\n\"I'm here to support you, Es,\" I said.\n\nShe leaned and kissed me then we both walked to the entrance. Essie waved at the desk sergeant, then had me sign in as a guest at the front desk. \n\n\"Josh is helping me with my grandfather's remains, Rose\" Essie said to the desk sergeant, \"We shouldn't be long.\"\n\n\"How do you know Essie,\" the sergeant asked pleasantly, she was a trim redhead, with a bright smile.\n\n\"She stopped me on a traffic violation,\" I explained, \"Then everything just sorta clicked.\"\n\n\"I see,\" Rose said, with a wink \"Right to the kinky stuff, Essie does love her handcuffs.\" \n\n\"Is this entire precinct filled with gorgeous female cops?\" I flirted back, while grinning at Essie who shook her head vigorously, her eyes wide.\n\n\"We don't like our police officers to be sexually harassed by civilians,\" came a deep voice from behind my back.\n\nI must have turned about twelve different shades of red, as I turned to look into the amused eyes of a tall muscular older man in plain clothes. He chuckled and held out his hand.\n\n\"Call me Mac,\" he said, offering his hand, \"I recognize you from the scene on Monday night, I'm Captain McKensie. Thank you for taking care of Officer Mendez, Essie is one of the good ones.\"\n\nI relaxed and shook his hand, \"Sorry, Captain,\" I said, \"Sometimes my sense of humor goes a bit crazy.\"\n\n\"So does mine...\" Mac said then paused, it took me a moment to realize he was wanting my name. \n\n\"Oh, Josh,\" I said, \"My name is Josh Valentine.\"\n\n\"Appropriate name for a guy that seems to have swept Essie off her feet,\" Mac smiled, \"Follow me, I have Essie's stuff on her desk. I'll help walk you out.\"\n\n\"We can handle it Cap,\" Essie said, \"You don't need to be bothered.\"\n\n\"You're right, I don't need to be,\" Mac said, \"I want to be \u2014 You're a good cop, Essie. I have a feeling this might be one of the last times I'll see you. Life changes like you're going through often get in the way of continuing on the force.\"\n\nHe leaned back against Essie's desk. A collection of flower vases, cards and other things were arrayed, and some packed neatly in boxes. He looked at her steadily, then looked at me.\n\n\"It's understandable,\" Mac said, returning his eyes to Essie, \"I want you to know you have a place on the force, even if you need to take a leave of absence for a while.\"\n\n\"How long could that be?\" Essie asked, \"I'm thinking of becoming a private investigator up in Riverdale.\"\n\nMac took a moment to look at Essie. Then looked down and stood back up, and held out his hand.\n\n\"I think you'll be great at anything you put your mind to,\" Mac said, shaking her hand, \"I'll talk to some friends up in Riverdale, see if I can smooth the transition. There is a six-month leave of absence application on your desk, just sign it. I'll take care of the rest. I'm going to get some muscle to haul away what is becoming a flower garden inside of my bullpen. I'll need to get your service weapon and badge before the end of the week.\"\n\n\"Thank you Mac,\" Essie said, and then hugged him tightly. \n\nHe hugged her back, then gave me a steady look followed by a wink. As he left, Essie sat down and filled out the paperwork for her leave of absence. I hovered unsure of what I could do, looking at the array of well wishes and boxes. A group of uniformed officers filed in and picked up a box each. Leaving me with only Essie's hand to hold.\n\nI opened up the back of my SUV, and the boxes were all piled in neatly. Each officer hugging Essie and saying their goodbyes. Essie looked through the boxes, then pressed her hand to a small metal box and closed her eyes. She spoke the words of her prayer in Spanish, and I was quiet as she honored her grandfather. \n\nShe paused for a moment, then reached for her portable gun safe. She ran her fingers along the edge, then as if she made a decision started opening the safe.\n\n\"It'll be like tearing a bandage,'' she said,\" in a soft voice, more like she was talking to herself.\n\nShe pulled out her service weapon, holster and badge. Then also pulled on her mirrored sunglasses, slipping them over her eyes, as she secured the safe.\n\n\"I'll just be a minute, '' Essie said, \"Save us a trip later.\"\n\nI nodded and slid into the car to start the AC, and waited for her. She came back out, her posture rigid, her eyes hidden behind her sunglasses. I got out, leaving the car running. She saw me, and walked towards me. I opened my arms and she melted against me. I lifted her sunglasses off her face, and she blinked at her tears.\n\nShe looked at me, then wiped the tears and forced a smile. We stood for a long moment. I tried to comfort her, and she melted against me. Then pressed up and kissed my cheek. We got in the car and headed back towards my apartment.\n\n\"Did you still want to get your bike?\" I asked.\n\nEssie was quiet, looking out the window as the city passed by. She looked over at me and took my hand. \n\n\"Maybe we can get it tomorrow?\" she said, \"I want to just be with you for the drive back, if that's okay. That was tougher than I thought it would be, I didn't know how much I had invested myself into that identity. A stupid badge and a gun shouldn't define me.\"\n\n\"It was part of you,\" I said, \"It never defined you, just what you did. You are so much more. We can get your bike whenever you're ready.\" I smiled and stayed on the highway back to Riverdale.\n\nA few miles later the phone rang, and the caller ID said it was Gina. I hit the button to have the car stereo system answer it via Bluetooth.\n\n\"Hello,\" I said.\n\n\"Josh,\" Gina's voice said tensely, \"You need to come back home now,\"\n\n\"What happened?\" I asked, acutely aware that I didn't have my cube, \"Is someone hurt.\"\n\n\"Listen,\" Gina said, and I heard her move the phone away from her ear.\n\n\"Neural Control Node Unit 5 of 5 initialized...</br>Unit Katherine added to the control list...</br>Active mode disabled...</br>Node owner not available.\" \n\nThe unfamiliar monotone female voice resonated through the speakers of the car.\n\n\"Katherine?\" I asked, \"Who the hell is Katherine?\"\n\n\"Katie is Tess' maid,\" Gina explained, \"She came into your office to tidy up. She was leaning over touching the cube when we found her. She's trapped in some endless loop - that repeats about once a minute. We can't move her and her grip on the cube is too strong.\"\n\n\"Fuck,\" Essie said, \"Maybe we should have gone back and got it.\"\n\n\"We're on our way,\" I said and hung up as I accelerated to a safe speed about five miles above the speed limit.\n\n\"You can go ten over, Papi,\" Essie said, \"No one's gonna pull you over until then,\"\n\n\"Fuck, fuck, fuck,\" I cursed, watching the road, \"Dammit.\"\n\nI was at a loss for words. This was the last thing I wanted, one more accidental assimilation. One more person to have to look out for. My fingers must have been turning white as I gripped the wheel. Essie reached over and rubbed my hand.\n\n\"It'll be okay,\" Essie said, \"Try to relax, we can't change anything. She touched the cube. She's lucky the cube was owned by you. You can reset her and deactivate her. She'll then be safe from any other asshole.\"\n\n\"You're right,\" I said with a sigh, \"That is an option, and it might be better that way. I just \u2014 I should have been more responsible and not let it out of my sight.\"\n\nIt took about twenty minutes until we were pulling into Tess' drive. A yellow VW Beetle was parked near the entrance and I pulled through and parked on the other side. We hurried out and into the house, closing the door with bang.\n\n\"We're in the Living Room,\" Rhi called.\n\nEssie and I rushed in and saw Gina and Tess were sitting on either side of a cute young blonde girl. Rhi was in front of her on an ottoman, massaging the younger girl's calves. \n\n\"We got here as fast as we could,\" I said.\n\n\"She returned to normal just a few minutes ago.\" Rhi said, \"Her thighs and calves were cramped from being bent over for so long.\"\n\n\"I don't know what happened,\" Katherine was saying, \"Suddenly I was bent over and in pain. Did I black out.\"\n\nEssie had gone back to my office and grabbed the cube, then handed it to me. I slipped over and sat next to Rhi.\n\n\"What did she say at the end?\" I asked, \"Before she was able to move again?\"\n\n\"It was something like, 'Node owner in range, resuming Active mode, say Setup for... blah blah blah,',\" Gina said and aped her eyes going vacant then snapping into focus.\n\n\"I said that?\" Katie said looking shocked, \"Why?\"\n\n\"Setup mode for Katherine,\" I said, \"Unit Katherine alias Katie.\"\n\n\"Setup mode active,\" Katie said in her monotone voice, \"Alias accepted.\"\n\n\"Katie, return to Active mode,\" I said.\n\nHer eyes regained focus and for the first time I took a moment to look at her. She was a year or two older than Gina, yet younger than Essie. Honey blonde hair, clear blue eyes, the shade of her tan betrayed she enjoyed suntanning. She wore a yellow bikini under her lightweight yellow sundress. She had an ample bosom, and when her calves and thighs weren't locked by cramps, I thought her legs would be amazing.\n\n\"Please tell me what's happening,\" Katie asked, \"You are all starting to freak me out.\"\n\n\"Katie,\" I started, \"When you touched this cube, you activated a special program that has assimilated your consciousness into a neural network controlled by me.\"\n\n\"Get the fuck out!\" she scoffed, then turned to Tess, \"Is this a practical joke? Tess?\"\n\nTess shook her head, and looked at Rhi. Rhi smiled and leaned forward to speak.\n\n\"We have all touched that cube,\" Rhi said, looking at Gina, Tess then back at Essie, \"Some of us by accident like you, some on purpose. What we are telling you is the truth.\"\n\n\"So, what?\" Katie said, an edge of fear in her voice, \"I'm like some drone now.\"\n\n\"It's more a neurally enhanced assistant,\" Gina offered cheerfully, and the others nodded.\n\nThe synchronicity of their actions probably didn't help the situation. Katie started to breathe in rapid shallow breaths, the first signs of panic settling in.\n\n\"Hey Katie,\" I said to activate the trigger, then continued, \"take a deep breath, please, then continue to breathe normally.\"\n\n\"Good manners are always helpful,\" Katie said with a small grin, as she inhaled a long slow breath, then returned to normal breathing.\n\n\"I'm sorry,\" I said, \"I shouldn't have left my cube on the desk. I can't undo the assimilation process. I can explain the benefits of being part of the cube. Then let you decide if you want to stay active. If you don't choose to continue, I'll deactivate you and you'll go back to normal. The same as the moment you touched the cube.\"\n\n\"What could possibly be the benefits?\" Katie asked.\n\n\"Look at Gina,\" I said, \"With the cube I can adjust any of my assistant's appearance.\"\n\nShe looked at Gina with an amused look on her face.\n\n\"This is the weirdest practical joke,\" Katie grinned, shaking her head.\n\n\"Appearance app,\" I started, \"make Gina's hair the same color as Rhi's, increase her breast size to the next cup, and deepen her tan by one hue.\"\n\nGina smiled and glitched. She shook her head and her hair turned a deep azure, her breasts ballooned in her bikini top and her flesh darkened like she'd been to a tanning salon. Katie's eyes grew wide. Gina hefted her new larger tits and grinned at me.\n\n\"Can I try these for a few days?\" Gina asked me, \"these might be fun.\"\n\n\"Gina!\" Katie gasped when she was able to speak, then looked at Tess, \"You too, your hair is because of ... him?\"\n\nKatie tilted her head in my direction, and Tess nodded. \"He also lifted and smoothed a lot of my trouble spots. You know the ones I'm complaining about all the time.\"\n\nKatie blushed and looked hard at Tess. Suddenly I realized that Katie's position as 'maid/cook' was somewhat an honorary position. She was really Tess' ... plaything wasn't the best word, but it was close. I looked at Tess with a raised eyebrow. She could tell by the look the gig was up. She leaned close to Katie and kissed her cheek.\n\n\"You're among friend's Katie,\" Tess said, \"We are all ... intimate with each other. If you would like, you can be too.\"",
        "Katie looked around at all of the other faces. Their smiles betrayed the truth of Tess' words. Then she looked at me, and her eyes gave me a slow once over. I shifted, slightly uncomfortable, as I hardly knew the young lady.\n\n\"Well, that's not the only benefit of being in my network,\" I said, nudging Rhi, \"Rhi can tell you about some of the other perks.\"\n\n\"What Tess is referring to is only one of many apps,\" Rhi started, \"The app in question helps to define our relationships, and makes our intimacy very fulfilling with little jealousy. Beyond that we also have apps that help us focus on the jobs we need to do around the house, and keep track of our health.\"\n\nI appreciated how well Rhi had gotten at summarizing the benefits.\n\n\"We have all grown closer to Josh,\" Rhi said, \"As well as to each other. We have one more spot open in our family. Josh can either add you or deactivate you.\"\n\n\"Do you have any family?\" I asked Katie, acting on a hunch.\n\n\"I live alone,\" Katie said, shaking her head, \"I moved to Riverdale for college, then couldn't keep up. My ... I ... fuck. Why do I feel like I have to tell you everything?,\" she paused then continued, \"I messed up and partied too much, and my grades went to hell. I was almost broke when I answered Tess' ad for a domestic position.\"\n\n\"I've been working for her for two years,\" Katie continued, then looked at me, \"We only became intimate a few months ago. I promise. Her employment has kept my rent paid, and I've started paying down my student loans. I hope to save enough to go back to school. I really regret how I fucked up my chance at an education.\"\n\n\"Where are you parents,\" I asked, \"You didn't answer my question. Please answer my questions honestly.\"\n\n\"Manners are helpful,\" she said, her face getting confused as she automatically said the phrase again, \"My parents died in a car crash my freshman year. One of the reasons I lost control, and partied.\"\n\nI nodded, looking at her, seeing if she needed to let go of anything else.\n\n\"I..., fuck..., Why can't I stop talking about this,\" she said irritated, then looked in my eyes, \"I burned through their small inheritance in a little over six months. I bought my car, got a very nice apartment and a lease I couldn't really afford. I blew the rest on drugs and alcohol. The last of the money went to a mental hospital stint to help me detox, and fight my depression. I came out better, and broke my addictions. Only to be financially broke. Tess was my angel.\"\n\n\"It's okay,\" I said, \"No one here will judge you. We've all done things we wish we hadn't. We've all survived some scars of the past. We are learning to heal together. I think you'd find a lot of benefits joining us.\"\n\nI looked at her, and she met my gaze.\n\n\"I can't make the decision for you,\" I said, \"Each of them decided to stay active. It is your choice.\"\n\n\"This feels like joining a cult,\" Katie grumbled, then nodded, \"What do I have to lose? I love Tess, I want to stay with her. Y'all seem cool. What do I need to do?\"\n\n\"Say yes,\" I said.\n\n\"Yes,\" Katie said, \"Yes, I'll join you.\"\n\n\"Setup mode for Katie,\" I said, \"install FuckMe, MaidMode, CulinaryChef and HealthMonitor\"\n\nKatie's eyes fluttered, while the rest of the girls smiled. Essie slid down to sit next to Gina and rested her head on her shoulder. I tapped on the cube, then tapped on each of their labels, filling the cube with their profiles. I selected all of their FuckMe applications and looked through the relationship settings. I had to rotate the cube to look at each face individually. \n\n\"Okay,\" Katie said, after her eyes stopped fluttering, \"When is this going to happen? What is going to happen.\"\n\n\"It's happened,\" I said, absently still examining the different faces of the cube. \"Anything about you that you'd like to change?\"\n\n\"Can you remove a tattoo?\" Katie asked, \"Going crazy leads to poor decision making.\"\n\n\"I probably could,\" I said, \"Would you like to show it to me? Actually, why don't you strip so we can fix any other places you would like to change.\"\n\n\"I'm okay with that,\" Katie said, standing up and pulling her sundress off. \n\nShe continued to strip while I examined all of their relationship statuses. The status blocks of the cube were fascinating. I focused more on the cube than Katie or anyone else. I was listed as a Lover for all of them except Katie where I added myself to Friends with Benefits. Soul Mate for Rhi. The rest were all mutual lovers, Katie elevated to Friends with benefits for Essie, Gina and Rhi. She was listed as a Lover for Tess and it was reciprocated. \n\nKatie was Heterosexual with a 70% bisexual level , practically the same as Essie and Gina. They were both looking at her approvingly, which caught my attention. I panned my sight line and then Katie's naked body filled my vision. She had bent over as was showing me her tramp stamp tattoo, which had the words, \"FuckToy\" surrounded by tribal style decorations. The tattoo was right above her amazing ass and I took a moment to appreciate her firm buttocks. \n\n\"That's the tat you want removed?\" I asked, absently, looking back at the cube.\n\n\"Yes, please.\" She said, \"I regretted it the morning after.\"\n\n\"Manners are important,\" I said, \"Hey Katie, remove the tramp stamp.\"\n\nThe tattoo faded immediately. Katie looked at me oddly.\n\n\"Is that all?\" She asked.\n\n\"Yep,\" I replied, \"Gina take her to a mirror, please.\"\n\n\"Manners are important,\" Gina grinned, and I wasn't sure if she said it by script or as a well timed joke.\n\nGina and Essie herded the naked Katie to the bathroom. I admired Katie's natural beauty as she walked away. Then looked at Tess and Rhi. They shook their heads and smiled at me.\n\n\"I don't believe you,\" Tess said, \"Katie is a sexy girl, and you practically ignored her stripping naked in front of you to look at your damn cube.\"\n\nShe laughed and I grinned sheepishly. Rhi hugged me and kissed behind my ear.\n\n\"I know it's because you're thinking of me, right lover?\" Rhi teased, and nipped my ear, \"You really should take a look. You made me enjoy the female body a bit more, I can tell. She really is an eyeful.\"\n\n\"I'm sure I'll have plenty of time to ogle our newest member,\" I said, \"I'm kinda glad I don't have to worry about adding anymore assistants accidentally. A full cube adds a bit of peace of mind.\"\n\nThe three young girls were walking back, and I got a full look at Katie's naked body. Her breasts were firm and bounced deliciously, a bar piercing through each nipple. Her flesh was a nice honey hued tan, with very light tan lines. Her blonde hair fit her skin tone, and her body was fit and trim. There was very little to improve on her, and I felt my cock stiffen in my jeans as she walked directly towards me, her eyes focused on me.\n\nShe wrapped her arms around me and hugged me. Her breasts pillowed against my chest. Her lips pressed to my cheek near my ear.\n\n\"Thank you,\" she said, \"I can't tell you how much that means to me.\"\n\n\"I'm happy to help you,\" I said and hugged her closely, with my arm around her back, \"That's all I want for each of you.\"\n\n\"Welcome to the family, Katie,\" Rhi said, \"We all want to see you happy.\" \n\nRhi leaned over my shoulder and combed through Katie's hair. Katie turned and smiled at her, then Rhi kissed her softly. I found myself kissing along Katie's neck, and my hands dropped to cup her bare ass. \n\n\"I want to keep you happy too,\" she smiled, looking back at me then kissed me promisingly on the lips.\n\nHer flesh was warm in my hands and I had to slowly shake my head trying to regain my focus. I vaguely remembered there were things I needed to do, but I also felt a growing need to take possession of my newest assistant. I blinked, not recalling this same feeling in previous connections. I turned to Rhi and she combed her fingers through my hair and kissed me deeply. It was becoming hard to resist the growing sexual tension in the room. \n\n\"It's okay,\" Rhi seemed to say, but her lips didn't move, and I didn't completely know what she meant.\n\nI turned to look at Katie, and in her blue eyes I lost any semblance of control. I pressed my lips to hers and hungrily kissed her. She moaned around my tongue as it pressed between her lips. I leaned forward and pressed her back into the sofa, next to Tess. My hands lifted to her pert breasts and kneaded them. I was hungry for her. \n\nI felt fingers at my belt, but knew that Katie's hands were along my jaw, holding me to our heated kiss. My trousers were being pulled down, and fingers unbuttoning my button down shirt. I focused on kissing Katie, my attention on everything else faded. Somehow I was undressed, multiple hands were running over my flesh. Squeezing my ass, fondling my cock. I was at once the center of attention while my attention was focused solely on Katie.\n\nI hovered over her, completely naked. She looked up at me then let her eyes drift down my torso. She reached and grabbed my cock, stroking it then lifted her eyes to look into mine. I nodded to her unspoken question, and my hands pressed her thighs apart. I pressed forward as her hand pressed the head of my cock into her sex. I felt hands grip her legs and hold her open, freeing my hands to cup her breasts again. \n\nShe tossed her head back as my cock made contact with her slick lips. She was already wet and ready, although it seemed like we'd barely kissed. A stray thought tried to connect a FuckMe app setting with her apparent need. I blinked my eyes and the thought fled as I thrust firmly into her tight cunt.\n\n\"Ohhh fuck, yes,\" she groaned, \"Yes, do it, fuck me,\"\n\nI felt a hand in my hair and I was tugged to kiss Rhi. My hips stroked into Katie, who lifted her hips to meet my strokes. My lips left Rhi's lips and she smiled, then Tess was kissing my lips. I growled into the kiss, the ardor of the sudden overheated lust in the room clearing my mind of any other thoughts. I pulled from the kiss then hungrily kissed Katie who moaned into my mouth.\n\nAnother set of fingers combed through my hair, I turned my head and was suddenly kissing Gina, her eyes bright as she smiled at me. Then Essie's dark enchanting eyes held mine as our lips met and kissed deeply. I shivered, my sensory systems overloading as I slammed into Katie. I looked back at her and her eyes held mine. I drove her to her peak, without a word. She crested and I felt her cunt clench around my cock, and I was jerking against her, my cock spewing into her cunt.\n\nThen like a mist fading, the scene shifted and dissipated. I was fully clothed and parting from kissing Katie. I smiled, blinking to try to reorient myself with reality. \n\n\"Yeah, welcome to the family,\" I said, absently, echoing Rhi's greeting. \n\nKatie's eyes held mine for a long moment, then blinked rapidly and she stepped back and began to redress. I worked to regain control of my thoughts. I picked up my cube and wandered outside to pace alongside the pool. The girls inside gathered together around Katie, except Rhi. She followed me outside and leaned against me as I looked out over the river, weighing the cube in my hands.\n\n\"Did you feel that?\" I asked her, \"What just happened.\"\n\n\"You were fucking Katie,\" Rhi said, \"We were all there watching you, encouraging you. It wasn't real, more like a dream or a shared vision. I'm certain we all experienced it.\"\n\n\"That's crazy,\" I said, \"I don't remember that happening before.\"\n\n\"You haven't had a full cube before either,\" Rhi offered, \"I know, with each new addition, our thoughts have become more intertwined, connected, like \u2014 telepathy. Maybe you haven't felt it, or couldn't feel it until the five spots were filled, but I know what my sisters are thinking.\"\n\n\"Sisters?\" I asked.\n\n\"That's the easiest word to explain what all of us have become,\" she said, \"We're connected, linked, we share thoughts, feelings... I can even tell when one of my sisters orgasms with you.\"\n\n\"Can you sense what I'm thinking or doing,\" I asked, curiously.\n\n\"Not before what just happened,\" Rhi said, \"But I think all of us just shared your fantasy. I can sense you feel confused and also - awe?\"\n\nShe tilted her head to look in my eyes. I found hers and nodded.\n\n\"That's pretty close,\" I said, focusing on Rhi's thoughts, \"You want to comfort me, assure me that everything is okay.\"\n\nShe nodded and we pulled each other close. I tried to push away the thoughts suddenly racing through my mind. They felt like a mix of everyone's emotions and desires streaming through my synapses. I closed my eyes and just tried to push everything else away, find a center, any center. \n\nI fixed my thoughts on Rhi's satin collar around her neck, and then held that thought centrally in my mind. After a few moments the rush of conflicting thoughts in my mind quieted.\n\nI looked back at Rhi, and she nodded at me.\n\n\"Yes,\" she said, \"that's better. Your thoughts need to be steady, otherwise it gets really confusing, you need to be the center \u2014 the control.\"\n\n\"This is getting even more weird.\" I said, \"I need to call Bala.\"\n\n\"Take Essie with you,\" Rhi said, \"She can help, I'll gather the rest and get Katie settled in the room near Gina's. We'll need to have another moving day. I will handle all of it, don't worry.\"\n\nEssie looked out the window at me, as I started walking inside. She turned and walked with me, reaching her hand to hold mine.\n\n\"Gonna talk to Bala?\" She asked, even though she seemed to know the answer, \"Good, we need to figure out what happened.\"\n\n\"What do you think happened?\" I asked, then set the cube down on my desk and started my laptop.\n\n\"I think we all got caught up in your fantasy of fucking our newest assistant,\" Essie said with a grin, \"It was pretty hot, honestly.\"\n\n\"That's what Rhi thinks too,\" I said, \"I felt like I lost control, and everyone's thoughts jumbled together. I had to really focus to bring it back together.\"\n\n\"The fifth spot?\" Essie asked, \"That must be significant.\"\n\n\"Obviously,\" I smiled, \"Fucking mind blowing.\"\n\nEssie just nodded, her eyes betraying that she had experienced something akin to a climax \u2014 we all must have. I found Bala's number, then dialed it on my phone putting him on speaker.\n\n\"Josh,\" came his voice, \"I got your NDA, and the certified mail receipt. Let me send you a conference invite, I think it's best if we can see each other. You must have a lot of questions, I see you've filled your cube.\"\n\n\"You have a knack for understatement, Bala,\" I replied, \"I'll look for your email.\"\n\n\"Yes,\" Bala said, \"Email is on it's way. A quick note on a full cube, something we saw in testing. A full node can transmit a wave pattern, the echoes between each unit can become overwhelming. The owner needs to find some concept or thought to fix on. Once that happens, the communication usually normalizes within an hour or two.\"\n\n\"Thank you,\" I said, \"That helps me reconcile this latest experience. I'll join the call once I get the invite.\"\n\nI disconnected the call, then grabbed Essie's hand and went back to my car. I pulled open the passenger's door, and then the glove compartment. I handed each of the four cubes to Essie. I locked the car back up and we went back inside. I lined up the four cube packages on my desk. They all looked exactly the same.\n\n\"Which one has Hassan in it?\" I asked aloud.\n\n\"We should really label these,\" Essie said with a shrug.\n\nI pulled open the one to the far right, then touched the cube. Nothing happened, the battery had died. I continued and felt the small vibration on the third cube, and pulled it into my hand.\n\n\"What are you going to do?\" Essie asked.\n\n\"Wanted to test the system reset,\" I said, \"This will free my step-sister, step-mother and Hassan. I think we may have made a mistake with him.\"\n\n\"Hold on,\" Essie said, \"You hardly know anything about this Bala guy. Why should we trust him.\"\n\n\"Let's walk through what we know,\" I said, and Essie nodded, and sat back to listen.\n\n\"The NDA process makes sense for this company,\" I said, \"The mailing address was in Silicon Valley, their headquarters. The video conference I'm joining is custom branded to the same company. I can do a quick DNS query to check and see if his email address is owned by the same company. The evidence so far is on Bala's side.\"\n\n\"Do the query,\" Essie said, \"Just to be sure. I'm probably being extra cautious. We don't know a lot about Hassan, but any real interaction with him has been pretty tame and mundane.\"\n\n\"Yeah,\" I said, \"Bala did mention that he was a contractor working with him to help deactivate cubes safely. He said Hassan couldn't even recall the name of the device. I did that, I made him forget. What if I messed up the program?\"\n\n\"We couldn't have known that he was working for Bala,\" Essie said, \"The whole auction and emails were pretty cryptic, and didn't feel official.\"\n\n\"The whole project was a closed beta,\" I explained, \"invisible and not-acknowledged. Like it was some black ops military program.\"\n\nEssie just looked at me, an eyebrow raised. I shrugged. I didn't want to think about a secret military connection.\n\n\"I think I jumped to a bad conclusion based on a few old social media posts,\" I replied typing in the commands to backtrace Bala's email domain, \"It matches, Bala's email address is owned by the same online shopping company.\"\n\n\"Okay,\" Essie said, sitting down, \"Go ahead and do the system reset, just tell me what you're seeing. Whenever you're using it all I can sense is a perfectly blank cube.\"\n\nI sat down, and picked up the cube. It buzzed softly as normal. I used three fingers on one hand to press into the center of each face, then tilted the cube to do the same with three fingers on my other hand.\n\n\"The cube buzzed in five short bursts,\" I said.\n\n\"I could hear the vibrations,\" Essie said, \"but I don't see anything.\"\n\n\"It's now scrolling a message, 'System Reset in process...'\" I recited, \"then a series of dots in a ring, cycling.\"\n\nI looked at Essie, and she was fascinated looking at my blank cube. I looked back and the same message was displaying. No other diagnostic or status messages, just the spinning ring of dots.\n\n\"You're actually seeing something?\" Essie asked, incredulously.\n\n\"Yeah, I am,\" I assured her, \"It's a pretty boring process.\"\n\nThe cube went blank, and I put it down. Then touched it. It buzzed.\n\n\"What's it doing now?\" Essie asked.\n\n\"It's setting up as a new node, adding this node to my account.\" I said, \"basically the same thing it did when I first touched my cube.\"\n\n\"Can I touch it?\" Essie asked.\n\nI slid it over towards her, and looked at her.\n\n\"I don't think it'll do anything since you're part of my network.\" I said, \"But if you're willing to test it, go ahead.\"\n\nShe concentrated then carefully tapped the button, and the top face lit up. I leaned closer to read the message.\n\n\"Current active unit, Essie, detected,\" I read aloud, \"then it just flashed back to dark faces.\"\n\n\"Fascinating,\" Essie said.\n\n\"Yeah, that's what I expected actually.\" I said, \"Let me see if the invite has come through.\"\n\nEssie picked up the cubes and put them back in their packages. She used a black marker to label the box with the new active cube. I opened the email then clicked the meeting email message. A window opened, and I allowed my video to be displayed as well as the audio components. Bala peered into his screen, and then smiled and nodded.\n\n\"Josh,\" he said, \"Thank you for joining. You took longer than I anticipated.\"\n\n\"I retrieved the other cubes I had collected.\" I said, stacking them in front of me, \"I also did a system reset on my nephew's cube. Performing the gesture you showed me. I'm not near any of the deactivated assistants to see what's happened, but the cube seems to be in a new condition.\"\n\n\"That is the expected behavior,\" Bala said, \"The units should be unaware that anything has happened, any memory of their AI connection is inaccessible. The only thing that wouldn't change is any modified appearance that wasn't reset in the Appearance app prior to the system reset.\"",
        "\"So my step-sister will still have her modified appearance,\" I clarified, \"But lose access to any AI enabled apps like MaidMode.\"\n\n\"Correct,\" Bala said, \"NEAs should not recall they ever had access to such AI empowered applications. They should retain all memories, just minor holes as it relates to AI access. At least that's how it was designed. If you have any other cubes, please perform the same system reset on all the cubes.\"\n\nI nodded and Bala picked up a piece of paper, and read through it then refocused on the screen. I pulled out some of my Qi chargers from my bag. Essie nodded when I mimed charging the cubes.\n\n\"Josh,\" he began, \"I have a contractor application in your name. I've sent a copy of this to you. It may seem things are moving fast, and they are. I need to bring you onboard as soon as possible. Please read through the contract and see if the terms of the contractor position meet your expectations. I'll go on mute, but I'll be listening to answer any questions.\"\n\nI shook my head, looking at Essie in amazement. Then looked back at the screen.\n\n\"Can I ask why we are moving so fast?\" I asked, while I minimized the video conference, and opened up my email.\n\n\"I can answer, Josh,\" Bala said, \"But I cannot answer if I'm on speaker. Can you connect headphones, Unfortunately, I need this to be a confidential conversation.\"\n\n\"I'm going to go on mute,\" I said, \"and turn off my camera while I review the contract.\"\n\n\"Please do,\" Bala said, \"I'll stay connected, you'll be on speaker.\"\n\n\"I want to start the dead cubes charging,\" I told Essie after I muted my microphone and stopped the video feed, \"There is an embossed icon that looks like this on one of the faces. Put that face on one of these two charging pads. We'll have to wait to do the last one.\"\n\n\"Got it,\" Essie said, and retrieved the cubes to start the process.\n\nI nodded and opened the email. I read through the contract that Bala had sent. The boilerplate was familiar enough that I was able to scroll through the pages of legalese boilerplate and got to the actual terms of the contract. The contract was for a six-month duration, fairly standard for a technical consultant. The compensation made my eyes bulge. It was nearly six times my normal compensation. Usually these short-term contracts were a bit larger as benefits wouldn't be included. This was entirely a different animal, basically would quadruple my take home pay, after I factored in taxes and insurance.\n\nEssie had gotten two of the cubes charging. I turned my laptop so Essie could read the contract. Her eyes scanned, then widened and looked at me. I nodded, not trusting my voice. Finally I coughed and looked at her.\n\n\"This is a bit incredible,\" I said, \"I don't see how I can pass this up, it will give me access to information to keep all of us together and safe.\"\n\n\"It's up to you, Josh, that is a lot of money,\" Essie said, \"I trust your instincts.\"\n\n\"I need to move to a secure conversation,\" I said, pulling my headphones out of my laptop bag, \"I'll come find you when I'm done.\"\n\nShe got up and hugged me and kissed my cheek. I hugged her tightly, then refocused on the screen. I plugged in my headphones, and restarted the audio and returned to the video conference. Bala turned back to the screen as I adjusted my microphone.\n\n\"Okay, we are on a secure line, Bala. This is a very generous offer,\" I said, \"Is it a contract-to-hire position, or will I be looking for a job in six months.\"\n\n\"It's my intention to bring you on permanently as soon as possible,\" Bala said, \"This is a stop-gap necessary to give you contractor level access to our new unreleased version of the control node. It is essential that you get this as soon as possible. We will be tearing down the existing infrastructure soon, and you need to transition your NEAs to our new version as soon as possible.\"\n\n\"I'm sorry, what? Tearing down the infrastructure?\" I asked, suddenly motivated to complete the process as quickly as possible, \"What do you need from me? I'm ready to commit. I need to ensure my assistants are retained and safe.\"\n\n\"I'm accepting your verbal acceptance of the offer, and expediting the paperwork.\" Bala said hurriedly, \"Please send me the completed contractor application via email, as soon as you can. I'm hoping to get your new v2 control node out for delivery as soon as possible. But it will probably be Saturday afternoon, via our normal delivery.\"\n\n\"When will the current infrastructure go dark?\" I asked.\n\n\"Currently it's set to go dark at 12:00AM UTC Saturday.\" Bala said, \"I'm trying to get a 24 hour extension. Believe me Josh, your five NEAs are essential to our research, and our ongoing project. We can't risk losing them in the change over. I'm doing everything I can to ensure this happens.\"\n\nTime zone math was always difficult for me. I lived in the US Central time zone, commonly referred to as Chicago Time. Daylight savings time was in effect, during the summer. I hated doing Timezone math. I flipped up my phone and grumbled to myself.\n\n\"What time is it in Chicago when it is midnight, Saturday in England.\" I asked no one in a whisper.\n\n\"It would be 6:00PM,\" Rhi said quietly from the edge of the room, \"Six in the evening Friday night.\"\n\n\"Fuck,\" I said, and Bala looked at me and tilted his head.\n\n\"Sorry,\" I said, \"without the extension it's impossible. I wouldn't receive the new node in time.\"\n\n\"I understand,\" Bala nodded, nonplussed, \"We may need to work within that contingency. It's important, Josh, that the NEAs have no knowledge of this time constraint. In the event there is a gap, that memory could corrupt the reassimilation.To keep your network intact, do not do a system reset on your cube. When the network goes dark, they will lose access to their beta cognitive map, and have no memories of the past week. The neural network will still be present but dormant.\"\n\n\"So ...\" I asked, and couldn't continue with Rhi listening, it wasn't worth the risk.\n\n\"At reassimilation, the neural network reactivates, does a system integrity check, and upgrades the cognitive engine, When successful, the updated cognitive connection will reaccess the beta map, and memories will return.\" Bala explained, \"Then the neural network updates to the new system. That's what our theory suggests. Transitioning them to the new node without any downtime is the most optimal. If we can get the 24 hour extension.\"\n\n\"What if I just did the system reset?\" I asked.\n\n\"Do not do a system reset on your node. Disabled assistants like those released in a system reset cannot be upgraded,\" Bala warned, \"If they are upgraded, in a disabled state, they will not be able to recall events while they were part of the beta network. If you want to keep your NEAs memories of the past week, you need to allow the network to disconnect. That is the only path for them to retain their memories.\"\n\n\"Okay,\" I said, trying to disguise my emotions, \"I'll get the paperwork signed and sent. Please send the node to this address I'm typing into my chat window.\"\n\nI typed in Tess' address. If the extension went through I would still be here. I didn't want to think about what would happen if the extension didn't happen. I terminated the call, and printed the contractor contract on Tess' printer. Then I plastered a fake smile on my face, and turned to face Rhi.\n\n\"That sounded intense,\" Rhi said, \"what happened?\"\n\n\"I got a new job,\" I said, forcing a smile, and told her my new salary, \"I need to finish up the paperwork by 6PM tomorrow, and send in my resignation to Brent, he's not going to be happy.\"\n\n\"Wow,\" Rhi said, hearing the numbers, \"That's incredible. Congratulations! I'm so excited for you.\"\n\nI hugged her and lifted her and spun her around. Feeling like I was lying to her and masking it poorly. I kissed her and then walked to Tess' office to get the printout and sign them. No notary was required, so I fed the papers back through and sent the scanned PDF to my email address.\n\n\"I need to make a few calls,\" I told her, \"I want to get this finished. I'll be done by dinner. How is Katie fitting in?\"\n\n\"Gina and Tess are going with her to collect a few days of clothes,\" Rhi explained, \"Then we can do a larger move on the weekend.\"\n\n\"That sounds perfect,\" I smiled, \"Once this call is done, I want to spend the rest of today and tomorrow relaxing with all of you. My new role doesn't start until Monday.\"\n\n\"Sounds like you had a deadline at 6PM tomorrow?\" Rhi asked, tilting her head to look at me.\n\n\"Deadline for this paperwork, I've already sent it in, I just have to receive a package sometime on Saturday,\" I lied, but masked it with a partial half truth, \"So it's just a waiting game for me. I really need to call Brent and give him my resignation.\"\n\n\"Okay love,\" Rhi smiled and kissed me, \"We're having burgers tonight, I'm figuring out Tess' grill. Essie is going to help me. You do what you need to do.\"\n\nI went back to my laptop and robotically sent my acceptance paperwork to Bala. I was feeling conflicted. I had to basically lie to my soulmates - plural - to keep them safe. Trusting a new technology that wasn't tested, and I didn't fully understand. I trusted Bala, because it felt like he saw my completed five NEA nodes as a vital part of their project. I just didn't know why it was important to him. That left me with an uncomfortable feeling in my gut. \n\nI typed out my resignation letter to my current company. Then I called Brent, my manager. He picked up on the third ring.\n\n\"Hey Josh,\" Brent said, \"Hope things are going well, sounds like you've had a rough week.\"\n\n\"Hi Brent,\" I said, \"I'm sending you an email with a letter of resignation. I just accepted a fantastic offer. I'm sorry for no warning, but it was just too good to pass up.\"\n\n\"Wow,\" Brent said, \"I wish you would have let me know, I may have been able to match the offer. You're too good to let go without a fight.\"\n\nI told him the new offer.\n\n\"Well, we're going to miss you around here,\" Brent said, then laughed.\n\n\"Yeah,\" I chuckled, \"That's what I figured. Look, if you need help, please do call, I can't give you two weeks, but I can help out a bit if needed.\"\n\n\"That's generous Josh,\" Brent said, \"I appreciate it. We need to be able to move on without you, but your availability is appreciated. Let's meet for a beer sometime when all this social distancing crap is over.\"\n\n\"Sounds like a deal,\" I said, then we disconnected.\n\nA beer sounded really good. Bala had replied to my acceptance and included a tracking number for an expedited delivery on a Saturday. It promised before noon, but I'd had enough experience with Saturday deliveries that I was skeptical that I'd receive it before sundown. I picked up my cube, and started tapping, and exploring.\n\nThe radar mode showed two clusters, Tess, Gina and Katie were slowly approaching the middle, but still away. Rhi and Essie were clustered in the middle. The apparent distance meant that Gina's group was still a way off. I watched them get closer, while Rhi and Essie's labels moved slightly away from the dead center of the cube face. \n\nI was conflicted. If what Bala said was true, dinner time tomorrow, they could all forget everything that happened from the moment they touched the cube. A small part of me was feeling a weird relief. They'd be free of the control of the node. The majority of me had to keep from panicking. I couldn't lose them. I turned off my laptop and closed my eyes and just slumped in my chair.\n\nThe two charging nodes started flashing green, reminding me I needed to put those through a system reset. I was curious what other cubes had been used for, so this seemed like a good distraction. \n\nI picked up one of them, placing the last dead cube on the charge. The new charged cube sensed the touch of another owner. I took control, like I did with James' cube. It only had one assistant connected. I tapped on the label - Sandra and her avatar appeared. She seemed to be in normal appearance, nothing strangely out of proportion. She appeared attractive in the miniature view allowed on the cube face. I decided not to check the applications, and continued with the system reset protocol. \n\nThe second cube was much the same. Two assistants, Tina and Tammy. They appeared to be sisters, or maybe twins. Their avatars looked almost exactly alike. Somewhat pornstar appearance, but not overly gonzo. I couldn't decide on a good protocol. I could reset their appearance, but that would be a bit awkward if they weren't alone. If they had been radically altered, they'd be fixed in this new configuration, when the system reset. After weighing the options, I decided to system reset. Being attractive wasn't a terrible fate. After I system reset that cube, I stowed both the reset cubes in their boxes, and marked them with the marker.\n\nThe last cube was flashing blue, and I watched the lights. I could interrupt the charging and try a system reset, but maybe it would fail if it was still in low powered mode. I slumped back into my chair. The distraction of resetting the cubes was evaporating. My thoughts started cycling with the worries of the pending loss of the beta network. What would that mean to my lovers?\n\nI realized I had to focus to keep my thoughts centered. Protected. The surprise shared fantasy of fucking Katie made me realize my thoughts could be somehow entwined with my lovers. I didn't want my troubled thoughts to echo through the network. I needed to lock things down, as much as I could. Too much was dependent on keeping my lovers ignorant of what might happen.\n\nI evened my breathing, meditating. Trying to keep a darkness in my vision, my eyes closed. Trying to relax. I felt fingers sliding through my hair from behind. Then tender lips pressing against mine. An upside down kiss, gentle at first then deeper. I opened my eyes, and Essie lifted from my mouth. Her eyes found mine and she grinned.\n\n\"Whatever it is, Josh,\" Essie said, \"I trust you, You got this.\"\n\n\"I can't talk about it Es,\" I said, \"It's too important.\"\n\n\"Then don't,\" She smiled and then pulled my chair back from the table.\n\nShe walked around and straddled my hips, sitting on my thighs. Her dark eyes, so different from the rest of her sisters, caught mine. We just looked at each other, and she leaned and kissed me. Her hands flat on my chest, then moving around my neck.\n\n\"You don't have to explain it to us,\" Essie said, \"Just know, I've got your back. I know you have mine.\"\n\n\"I do,\" I said, \"I promise you.\"\n\n\"Good, because the hamburgers are ready,\" Essie smiled, \"the others are back and we're hungry. For some reason none of us can eat until you do. So stop worrying and come eat with us\"\n\nThat was just enough zany cube logic to make me smile. Essie pulled back and grabbed my hands to help me up. I paused, and she looked at me.\n\n\"Just need to reset the last cube,\" I said, \"Hold on a minute.\"\n\n\"Did you reset the others?\" Essie asked.\n\n\"Yeah,\" I said, \"This one needed to charge a bit more.\"\n\nI picked up the last cube and performed the six finger gesture until I felt the five buzzes. Then I placed it in the last box, and marked the top. I took Essie's hand and we walked together out to the patio. The heat of the afternoon was waning, and the grilled burgers were delicious. Sides of potato salad, fresh cut vegetables, and cool glasses of lemonade made for a great meal. \n\nThe smiling faces and lovely bodies of my girls in swimsuits soon had my thoughts far from the technical difficulties and troubles of the cube. I relaxed and enjoyed the banter. Katie stood from talking with Gina, and slid into my lap, and kissed me. She was in her bikini and it fit her perfectly. I ran my arm around her waist, and enjoyed her tender kiss.\n\n\"What was that for?\" I asked.\n\n\"I wanted to thank you, this is amazing.\" Katie smiled, \"I'm still a bit dizzy from what's happened today. I wanted to let you know, I love being part of your family. I want to learn more about you. Everyone seems to think you are incredible.\"\n\n\"Well,\" I smiled, \"I wouldn't trust them, they're horribly biased. Mind controlled drones tend to placate their master.\"\n\n\"Oh really?\" She laughed, then combed a tangle of my hair from hanging into my eyes, \"I've never been mind controlled before, but this doesn't seem like I've lost my ability to reason. I do trust you, even though I hardly know you.\"\n\n\"I look forward to changing that,\" I said, \"We should both know each other better.\"\n\nI needed a distraction, and as the skies darkened, I felt the need to proceed into a different type of night time pleasure. Katie slipped from my lap and sat next to Gina. They seemed to be becoming closer, which made me smile. I stood up and looked around.\n\n\"Let's all pitch in to clean up from dinner,\" I said, \"I'd like to then have a whole family welcome ceremony to our fifth and final assistant. What do you all think.\"\n\n\"Is it a naked ceremony?\" Gina asked, looking at Katie, \"I think it should be a naked ceremony.\"\n\n\"Yes,\" I decreed, then looked at Tess, \"Can we celebrate in your bed?\"\n\n\"Yes,\" Tess agreed, her eyes flaring as she grinned, and nudged Rhi, \"It might be cozy, but even that sounds fun.\"\n\n\"Let's get to work then,\" I said, and started picking up plates.\n\n\"Not you,\" Rhi said, and slapped my hand, \"Go shower and relax, you can join us after we're done.\"\n\n\"Your wish,\" I started.\n\n\"If you say command, I'm gonna...\" she grinned, \"You are the head, you do the commanding. Wish fulfillment is appreciated.\"\n\n\"Of course,\" I smiled then turned towards Tess' room.\n\nI stripped in the closet down to nothing. Then Gina swept in and gathered up my clothes. I looked at her, and she held her hand up to block her view of my cock.\n\n\"Gotta finish MaidMode first,\" she said, \"can't get distracted by your...\"\n\nShe waved her hand and didn't finish then scampered out of the room. I heard all of the girls moving, and doing their duties. They moved about without anyone telling anyone else what to do. They were able to figure out their tasks. I marveled at the coordination and then slipped into the shower. \n\nAlone with my thoughts, I fought to keep the troubled future clear from my active musings. I centered my thoughts on my lovers, visualizing their bodies, their eyes, their lips. My cock engorged the more I thought about them. I washed off the soap and stood under the hot water. Then turned off the faucets and toweled myself dry.\n\nTess had drawn the door to the bathroom closed, and I was alone. I looked in the mirror and used a towel to clear the fog from my reflection. I looked in my eyes.\n\n\"Don't be an asshole,\" I said, then grinned at myself.\n\nI hung my towel on a peg, then drew open the door. Sitting on the edge of Tess' bed was Katie, naked. On either side of her were another pair of lovers. Tess and Rhi to one side, and Gina and Essie on the other. I smiled, as I looked at them. Katie smiled at me, a blush rising up her flesh as her eyes dropped to my cock. Then she lifted her eyes to look back at my eyes.\n\nI walked towards her, and she laid back along the bed. The four other girls moved and shifted her towards the center. Her legs were spread, and then her arms spread. She lay spread eagle in the middle of the bed, her flesh was caressed by the hands and fingers of my lovers. I crawled up between her spread thighs, and ran my fingers along her warm flesh.\n\nOne of my hands lifted to cup and squeeze one of her breasts. The other cupped her sex. She writhed, pressing her hips to feel more contact, as her breath caught.\n\n\"I'm ready,\" she purred, \"I've been dreaming of you, and your cock, I don't need any foreplay.\"\n\n\"What if I want some foreplay?\" I smiled, then lowered my mouth between her thighs. \n\nI used both of my hands to spread her lips apart, my tongue sliding between her labia. Tasting her musk, inhaling her scent. She moaned and her hips lifted to meet my mouth and lips. My lovers kept her hands and arms away as I slowly lapped, licked, gnawed and nuzzled into her bare pussy. She already had a clit hood piercing, as well as one ring through each labia. I flicked my tongue across the metal jewelry. ",
        "I kissed up over her bare mound, and along her lithe abdomen. She shivered as my mouth chewed lightly on her tanned flesh. My hands lifted to cup her breasts, squeezing firmly to feel her response. She purred as my grip tightened. I pulled at her nipples, clamping lightly on the piercings through each, then twisting.\n\n\"Please stop teasing me,\" She whined trying to free her arms from my lover's grips.\n\nI looked around and my four beauties nodded. Two of them pressed Katie's legs further apart and bent her knees. I slid closer, my knees sliding under her thighs. I gripped my cock, and ran the head up and down her slick lips. With her mouth open, she tried to press her hips into me, but her movements were limited by my mesmerized slaves. They watched me, then their gazes mirrored mine as I watched Katie's eyes.\n\nI drove into her and her eyes flared. She tried to close them but instead locked her blue irises on mine. She arched her back, lifting her perfect breasts to me. My hands latched onto her breasts and pushed her back down flat against the mattress. I drove into her again and again. She was at my mercy, our mercy, the center of attention of my four lovers and I. Katie whined and moaned, being trapped under me, under my control, my cock slamming into her. I was enraptured.\n\nI leaned forward, and then my slaves mirrored my movement. I was kissing Rhi, then Essie, then leaned back and was kissed by Tess then Gina. They shifted against Katie, an undulating mass of female flesh pressing against my captive. They sucked on her breasts, licked her nipples. I stared at her as her senses were overloaded by continuous arousal. She looked at me, her eyes pleading.\n\n\"Cum for me, Katie,\" I said, \"Cum on my cock, and enjoy your sisters love.\"\n\nShe nodded then writhed, her hips bucking and her body trembling. She came in waves overcome by all the sensations. I fired harder and faster, feeling her cunt clench around my shaft, then I slammed into her and my cock pulsed deep inside her. Then I pulled out and my cock jetted one rope after another over her bare tanned flesh.\n\nEssie purred and quickly took my pulsing head into her mouth. Her cheeks hollowed and her tongue lapped and collected the last of my side. Essie winked at me, and swiveled and kissed Katie deeply. Katie's eyes flared as she felt Essie's breasts compress against her, then she tasted her kiss and deepened it. They shared my cream and then I twisted and slipped beside Katie and rested catching my breath.\n\nMy cock was sucked and cleaned. I kissed and was kissed. I gripped breasts and cupped pussies. I lost track of who was touching who. My cock hardened, then was played with. I came hard, and triggered orgasms in the others, then the cycle repeated. The top of Tess' bed was a mass of flesh, that writhed as the night darkened outside.\n\nEventually we quieted, and curled into groups. I held Rhi to my chest, her bottom nestled into my groin. Essie pressed into my back, her arm under mine and around my chest. her breathing slowed along my cheek. I faded into sleep, surrounded by my family.  \n\nThursday was much busier than I'd expected.\n\nAuthor's Note\n\nThank you for your time in reading this much longer chapter. I've been keeping these chapters aligned with days, and Thursday became very busy. I appreciate all of the feedback, comments, favorites and 5-star ratings (all ratings really - rate away).\n\nStory help from beta readers like Master_Doctor hopefully tightened up some of the plotlines. Editing props go out to Pope1944 and DJS_Ronin. Any additional misspellings, grammatical errors or mishaps, are entirely my fault.\n\nSome highlights to take away and ponder as we pull closer to the weekend. A completed cube of five assistants is unique, what will the enhanced synchronicity between assistants unlock? Can Josh control his thoughts? The tearing down of the initial network, what will that cause between our characters when the plug is pulled?\n\nLife moves pretty fast..."
    ],
    "authorname": "HankDolworth",
    "tags": [
        "bisexuality",
        "body modification",
        "female submission",
        "group sex",
        "male dominance",
        "polyamory",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/basics-neural-control-node-ch-06"
}