{
    "title": "Fingerprints on My Heart",
    "pages": [
        "\u00a9 2017 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. \n\nWell, okay, this one's a kind of First Time Romance (?) written for the 2017 April Fool's Day competition. As always with my stories, it's not a short one -- it's around 11 LIT pages so be warned before you start reading. That said, of course it's worth reading. LOL. And ratings and comments are, as always, more than welcome. I do hope you enjoy .... Chloe\n\n<center>* * * Fingerprints on my Heart * * *</center>\n\n<center>I feel the fingerprints\n\nThat you left on my heart\n\nYou played a game of love\n\nAnd then you said we had to part\n\nYou left me all alone\n\nAnd as the teardrops start\n\nI feel the fingerprints \n\nOf sorrow on my heart</center>\n\n<right>Fingerprints on my Heart, Patsy Cline</right>\n\n<center>* * *</center>\n\n\"Hi Kylie,\" he says as I walk in to the restaurant with my parents. He's right in front of us with his wife.\n\nI blush and say \"Hi\" back. I wish I could think of something else to say but words desert me. With him they always do. Not with my boyfriend, not with anyone else. Just with him.\n\nI have a crush on him. A totally major crush.\n\nHis name's Nick. He's thirty four. He's married. He has two young children. I'm eighteen and I'm a freshman at College and, well, I know what this thing I have for him is. I'm eighteen and I'm supposed to be an adult but this is a teenage girl's crush on an older guy kind of thing and I don't care. It's a crush. I know that. It won't last forever but right now, my feelings for him are so intense. I can't stop thinking about him. Fantasizing about him and me. I know it's a fantasy, I know I'm being ridiculous but still, he's just so hunky and every time I see him I want to melt all over him.\n\nSome of my friends have had crushes like this. Some about guys our age. Some over an older guy. One or two have even had crushes over a married man. I've seen them. I've laughed at them, I've sympathized with them. I've sat there while they cried on my shoulder. If I tell them how I feel about Nick, it'll be my turn for my friends to laugh at me. Maybe they'll sympathize with me. Maybe not. If I tell them. I'm not going to though, because I know this is silly and nothing will ever come of it and I'll look like an idiot having a crush on a guy that's almost twice my age.\n\nI'd laugh at myself as well except whenever I see him I want to stand so close to him. My heart pounds. My cheeks flush. I'm breathless. I can't take my eyes off him. It's ridiculous, I know. I can't help it. Its teenage hormones or something, I swear. But it's not like there's a pill for hormones. Not for these ones anyhow. What's worse is that I have a boyfriend and he doesn't make me feel like this at all. I wish he did, but he doesn't and really, it's a little disappointing. \n\nTonight, we're out at a restaurant as part of a large family group and Nick is there. My boyfriend isn't. I didn't ask him. He'd have been bored coz it's a friend of the family birthday dinner thing. My family, other families, family friends. That kind of get together. Nick's family are friends with mine, have been for years. I've babysat for him and his wife. That's how I know him so well. I've known him for years, all my life really, but this crush thing only started recently. It's weird. \n\nWe're all swapping seats throughout the meal, moving around, talking, laughing. Halfway through I sit down next to him. He flirts with me. I smile. I giggle at his jokes. His eyes meet mine and then, very deliberately, very slowly, unseen by anyone else, he places his hand on my leg under the table. \n\nJust above my knee. \n\nWe both look at his hand. My heart jumps. Pounds. Races. My cheeks are burning. I glance back at him. Our eyes meet. Neither of us says anything. I don't remove his hand. I don't move my leg. I don't do anything at all. He too does nothing, except in his case, doing nothing means his hand remains exactly where he placed it. On my leg. I'm wearing a skirt. A short pleated skirt and his hand isn't on my skirt. It's on my leg between the hem and my knee and I'm not wearing pantyhose or leggings or anything else that covers me.\n\nHis fingers burn into my skin. He starts talking to someone on the other side of the round table. His hand remains where he's placed it. I do nothing. I sit there and his hand on me, unmoving, is the most sensual thing that's ever happened to me in my entire life. I can barely breathe for the excitement that's sweeping through me. My skin flushes, burns, tingles. I sit there, quite still, not quite trembling but I'm limp with excitement and if there was no-one else here besides him and me, I'd moan out loud. He glances back to me. We look at each other. My face burns.\n\nHe smiles. He's still smiling as his hand moves higher, slowly stroking my leg, out of sight under the tablecloth now. Now I move. Not to remove his hand though. Instead, I lean in towards the table, flick the tablecloth up to cover my legs, rest my elbows on the table just so as to make sure no-one can see. I'm so excited. His hand slides higher, it's brushing the hem of my skirt now and my skirt isn't a long one. His fingers are on the skin of my inner thigh and I'm mesmerized. Enthralled. Shaking.\n\nHigher. His hand moves higher.\n\nIt's not a tight skirt. That's what makes what happens next so easy to happen. His hand slides under my skirt. My heartbeat is frantic as his fingers almost brush my panties. Again and again. My knees twitch a little apart. Further apart. I'm making more room for his hand, for his fingers to brush the soft skin of my inner thighs. My cheeks are pink. With trembling hands, I sip on someone else's wine to make an excuse for the pink. My nipples are swollen, hard, aching. I'm melting inside the way I do in my bed at night when I'm fantasizing about him. This isn't a fantasy though and I know my panties are wet. \n\nI'm so wet. \n\nEven wetter than when I fantasize about him at night because this isn't a fantasy and it's his hand and it's under my skirt and I'm dying here. I'm disappointed when his wife joins us, she smiles at me. I smile back, not feeling guilty at all that his hand is under my skirt as I smile at her. I'm disappointed when his hand eases from me. I'm disappointed but I'm not really surprised. Why should I be? She's his wife, not me. It wouldn't be good if she saw where his hand was. \n\nIt doesn't happen again, even after his wife moves off to talk to someone else. He smiles at me but his hand doesn't return. When we're leaving, he smiles at me but he says nothing other than the usual inanities. How could he? His wife's next to him. I smile back, still flushed, still excited. Still wet with that overwhelming excitement. They tease me about my pink cheeks. \n\nMy Dad asks me if I've been drinking. He's laughing at me. \"You've got your Mom's Asian no-alcohol genes, Kylie,\" he says. \n\nI giggle, thinking that no, it's not the no-alcohol genes, it's another set of genes entirely that are kicking in to turn my cheeks pink. The same genes that kicked in years ago to set my Chinese Mom chasing my very Caucasian Dad. When I look at Nick, I know exactly which genes those are. They're the genes that tell a girl that she needs to find a man like Nick. Nick's successful, he's fit, and he's handsome in a rugged kind of a way. I know I have the teenage crush thing to end all teenage crush things on him. Nick laughs. I think he knows it too. I wonder if he'll do anything about it. I hope he will. I'm going to do my best to help things along.\n\nNick does say one more thing to me just before all of us head for home. We're in the parking lot next to the restaurant, everyone's talking loudly. He walks across to where I'm standing by Dad's car. Waiting. He's smiling. \"Did you enjoy this evening, Kylie?\"\n\nI smile back. I'm blushing, thinking of his hand under my skirt. Touching me. Almost touching me where I've never let my boyfriend touch me. Where I think I would have let Nick touch me if no-one else had been there. Where he touches me in my fantasies about him. Except tonight wasn't a fantasy. \"Yes,\" I reply.\n\n\"Everything?\" He raises an eyebrow. I love the way he does that.\n\nI giggle. My cheeks flush pink all over again. \"Especially everything.\"\n\n\"Well, you should drop by my office on your way home from college sometime,\" he says. \"I'd love to see you. Just you and me.\" He smiles. I smile back, saying nothing. My heartbeat is frantic.\n\nMy parents join us, there's no time for him to say anything else just to me but my mind is a whirl. My mind is still whirling all the way home. He's asked me to drop by? He's interested in me? But he's married. Do I care? So many thoughts, all of them confused, mixed in together, formless. His hand on my thigh. Stroking me. I close my eyes and I feel his fingers on me. \n\nLater, at home, in my bed, I'm still thinking. I can't stop. His hand on my leg, stroking, stroking all the way up under my skirt, so high, almost touching me. I've touched myself before, I know what my own fingers feel like but his? They felt so different. Heart-stoppingly different. I'm breathing faster just thinking about it.\n\nTonight I have to touch myself. I need to or I'll be awake all night fantasizing about his hand under my skirt. I don't do this very often but when I do, it's because I'm hot about a guy. It's funny, but I've never done this while I've been thinking about my boyfriend. It's always been some other guy. A couple of months ago it was this lecturer at College. Tonight, it's Nick that has me all steamed up. I undress, take a quick shower, climb naked between the sheets, closing my eyes, my hands sliding over my thighs. I'm remembering Nick's hand there, touching me and it's so recent that it's easy to recall. \n\nMy recall is vivid. It's almost like Nick's hand is stroking me there now, high on my inner thigh. My other hand moves upwards and I'm imagining it's his, sliding over my stomach, onto my breasts, stroking my nipples, teasing them to a rubbery firmness that I like, down over my ribs to my stomach and back up to my breasts again, rolling my nipples between thumb and forefinger. The fingers of my other hand brush my thighs, the soft skin of my inner thighs. I part my legs the way I'd part them for Nick, slowly, my knees edging apart.\n\nWider apart. My hand strokes, my fingers tease my labia, my hips jerk at my own touch and if it were his fingers there, I'd moan out loud. My fingertips brush lightly. I think of Nick's fingers touching me there and my lips swell, they moisten, they're wet and slippery as I brush across my entrance, circling, teasing. My other hand runs across my breasts, my nipples, moving from one to the other, backwards and forwards and I wish it were him doing that to me.\n\nNot my boyfriend's hand. Nick's hand. I want Nick touching me like this. I want Nick's hand exploring my body, revealing my body for his eyes to see. I'd like that. I'd like to be naked for Nick. I push my sheet and duvet aside and now I'm lying naked on my bed and I spread my legs wider apart, exposing myself. If Nick were here, he'd be beside me and I'd be lying like this before his eyes. I'm breathing hard now, fingers stroking my slippery labia, my knees spread wide apart as I close my eyes and imagine him next to me, looking down at me.\n\nHe'd see me like this, on my back. His hand would brush and touch my nipples like this. His hand would caress my skin, circle on my stomach, slip down to stroke my inner thighs; touch me tenderly where I'm now so swollen and wet. His fingertips would run through my sparse pubic fluff. They'd slip down and touch me ... here! I gasp as I slide my fingers downwards, as I press one finger inwards, feel myself part easily as my fingertip presses inwards.\n\nI sigh as my fingertip finds my entrance while my thumb brushes backwards and forwards across my clitoris. Little ripples shudder through my body as I picture Nick touching me like this. His finger, not mine. My fingertip slides inwards, slides inside me, I'm touching myself inside and it's good but if it was Nick's finger it would be so much more exciting. Just thinking about Nick doing this to me is more exciting. I'm sobbing now, excited little noises as I slide my finger in and out, simulating what a man would do to me.\n\nNow I want more. My other hand leaves my nipples, slides down. One hand concentrates on my sex, the other hand circles my clitoris and this is even better. I roll over, face down on my bed, my face buried in my pillow to muffle the noises I'm making as my fingers move. I wish it were his fingers doing to me what I'm doing to myself, inside me, rubbing and gently stroking in and out while the fingertips of my other hand roll across my swollen clitoris, massaging myself as my orgasm draws closer and closer. \n\nI think of Nick doing to me what I'm doing to myself. I would, I'd let him do this to me in an instant. There'd be no resistance, no refusal, I'd willingly let him do this to me and I know it would be so good. Him and me. Together. Naked. I try to imagine that. It's exciting. My boyfriend wants me to touch him, touch his cock, but I never have. I've always said no. I think I'd touch Nick's.\n\nMy fingers work faster. I close my eyes tight and my hips are moving. My finger inside me is sliding in and out. Nick's cock in my hand. My heart's pounding now. Beating like a drum. He's in me. His cock in me where my finger is in me. I'm sure that would feel really good and I think I'd do it with him if he wanted me to.\n\n\"Oh Christ, yes ...yes ... ohhh yes....\" I would. I would. Yes, yes I would.\n\n\"Ooohhhh.\" It is. My orgasm, it washes through me and it's a good one.\n\n\"Oooohhhhhh yes ... yes ..... yes...\" I cry out rapturously, hips jerking, my sex spasming around my finger and it's a wonderful feeling. Somehow, I think it would be even more wonderful if it was Nick doing this to me. I think it would feel even more exciting and wonderful than this. I know it would.\n\nAfterwards, it doesn't take me long before I fall asleep but when I do, I dream of him.\n\n<center>* * *</center>\n\nIt's the Friday of the following week. March the thirty first. I'm walking home from college through the city center. It's almost five and I know where Nick works. This has been in my mind all week. It's not like I don't know him well, but I've never been to his work before. I could have visited him earlier in the week but each time I walked into the ground floor foyer of the building he works in, my courage has failed me. This morning, I told myself that today was the day. I was really going to drop by his office this time. I picked my clothes with flirting in mind. \n\nActually, I've been doing that all week. Every morning. Today I'm wearing s short pleated black skirt that's almost a miniskirt but long enough that no, it's not. Underneath I'm wearing lacey black French short panties that are slit almost to the waistband on either side. They're very loose and very sexy. They're the sexiest panties I own and just knowing I'm wearing them has been exciting me all day. \n\nMy top is a long sleeved black silk shirt that buttons. I'm not wearing anything beneath it. I wore a bra to college, but I took it off before I left and it's in my bag. I daydream of Nick touching my boobs. It's not going to happen, I know, but it's exciting to walk towards his office dressed like this and thinking of flirting with him. If I was by myself, I'd touch myself. I'm that worked up and on edge.\n\nFlirting with Nick. That's what I've been thinking of all day as I sat through my classes at college. What to say to him. How to respond. I'm not sure what to say to Nick but I know what guys say to me when they're interested. My boyfriend's been good practice. He's in his senior year at college and kindof cute, but he doesn't inspire that heart-melting excitement that just looking at Nick does for me. I'm supposed to be going to a party with my boyfriend later tonight but I still have lots of time to get home. He's picking me up at nine. \n\nWhich makes me think of Nick picking me up. Momentarily, I shiver. I want to squeeze my legs together and just moan out loud but I can't, the foyer is busy, mostly with office workers leaving. They all have the weekend in mind, they're probably rushing home to their families. Most of them ignore the vaguely Asian-looking college girl in her spring coat and boots. \n\nExcept that I'm Asian-looking, there's nothing to distinguish me from the other young women my age leaving the building. Even my bag slung over one shoulder looks like the sort of bag many of them are carrying. Men glance at me, but it's that fleeting \"check her out\" look that brushes over me when they don't see anything to hold their gaze and hidden inside my coat, there's nothing to catch their eyes.\n\nThis time I'll do it, I tell myself. I've stood in this foyer twice before this week and each time my courage has failed me and I've turned and left. It's Friday, it's the last day of the week. The last day of the month. The last day of the first quarter. I take a deep breath. Almost, I turn away. Almost. I think of Nick. My nipples brush against the silk of my top. My panties are loose, they remind me of his hand and that's enough. My sex pulses. That's enough to have me walking to the elevator bank, I don't even have to press the button. The doors are open, a horde of office clones pours out. One of them holds the doors for me.\n\nInside the elevator, alone, I press the button for his floor. Now I'm nervous. My stomach sinks as the elevator rises, slows, comes to a stop. The doors whoosh open. My heart beats faster. I step out of the elevator. I'm on his floor. Reception is ahead of me. There's no-one there and the floor is wide open. There's a corridor to my left, with offices of it. I pause for a moment to unbutton my coat before I walk down the corridor confidently, as if I know where I'm going. I don't of course, I've never been here before but I know this is his floor. He must be here somewhere. There aren't that many people around and their security is terrible. \n\nThere are name tags beside every office door. I haven't seen his name yet. I turn the corner, walk down another side of the building. I see washrooms. My heart is doing that pounding thing all over again. I'm so alive, tingling everywhere, butterflies dancing inside me as I remember his hand under my dress last Friday. I take a deep breath, turn and walk into the women's washrooms. It's empty. If I'm going to do this, I'm going to do this right. \n\nPutting my bag and my coat down, I look at myself in the mirror as I brush my hair, gloss my lips. It's obvious I'm not wearing a bra. My black silk top isn't transparent but it's a little translucent and I can clearly see my nipples where they brush the material. I swallow. Blush. I'm panting a little. I hope I don't run in to anyone. I hold my coat and my bag in front of my chest as I leave. I'm glad I do because there's two older women walking down the hallway when I walk out. They don't even look at me as they pass me. \n\nApart from those two women, the place is empty. Does anyone else actually work here? My heart's beating faster. Did I get this wrong? Turn again. I'm half way around the building and thinking maybe I made a mistake when I see his name beside a doorway. My heart pounds furiously. My mouth is suddenly dry, my head spins just a little. I take a deep breath. Another. I look inside. There's a large workstation. There he is, working on a laptop, peering at the monitor, half turned away from me so he doesn't notice when I step inside the door.",
        "He looks up when I walk in. His expression is startled, then pleased. He smiles as I place my bag on the seat by the door, throw my coat over the top of it and walk over to stand beside him. My boobs quiver under my top, my nipples ache and swell like they do when I'm playing with myself except they're even harder than they are then. Much harder and much more swollen. They hurt a little. \n\nGod, I'm being such an exhibitionist and I'd be embarrassed at what I'm showing off except I'm just about panting with excitement and there's that hot wet sensation at the juncture of my thighs where I'm thinking about him touching me there like he almost did last Friday night at the restaurant. Will he try? My heart goes wild at the thought.\n\n\"Hi Nick, what're you doing?\" I ask, smiling. It's a slightly nervous smile now. I don't really care what he's working on but I need to say something and it's the best I can think of. It's not like I'm going to say \"do you want to put your hand up my skirt again?\" I'm looking at him. God, he's just so hunky. There's something about him that draws me like a magnet. Weird. All my friends are dating guys our own age. Me, I've got a crush on some old guy. Well, not really old, but in his thirties anyhow. I know exactly how old he is. Sixteen years older than me.\n\nHe smiles up at me. His face is level with my boobs when I'm standing and he's sitting. They aren't that big and there isn't that much to stare at but his eyes flicker from my face to them and back again. I like it that he's looking at them. I wonder if he can tell that I'm not wearing a bra. I can. My nipples are swollen and hard and they're brushing the black silk of my top, pushing at the thin material and they're so sensitive. Every time I move my nipples move against the silk and little shivers run through me.\n\n\"Working, until you walked in,\" he says. His grin is boyish, sending more little shivers all the way through me. \"What're you doing here, Kylie?\"\n\n\"I thought I'd see where you work on my way home from College,\" I say, thinking now that maybe I've done something totally dumb. \"You said maybe drop in on my way home and see you, so I did.\" \n\nGod, now I feel like a total idiot. How ridiculous is this. I mean, I know I have this, like, absolutely total crush on him but he's married and I know his wife. She's ten years older than me and she's drop dead gorgeous and they have the two most adorable little kids. He's not interested in me at all. It's just my overactive imagination. But there was his hand on my leg last Friday at dinner. And it wasn't just on my knee. I didn't imagine that. Did I?\n\nI didn't imagine him saying to come by his office and see him. Did I?\n\nHe grins. It's really a very attractive grin and I feel myself just turning into mush when it's directed at me. \"I'm glad you did.\" He looks up at me as I stand beside him. \"Natasha's over visiting her parents for the evening with the kids, she won't be home until really late and I was going to work tonight. You've given me a very good reason not to if you're not doing anything.\" He grins. \"Did you have any plans?\"\n\n\"None,\" I say, consigning my boyfriend to the four winds. I'll text him later and cancel. \"I was going to go home and study.\"\n\n\"How about a coffee here while I tidy things up and then a couple of drinks and I'll take you out to dinner or something instead,\" he says. \"I'll drop you home after.\" He grins. \"It's not like I have to be home early tonight and it'll be far more fun than last Friday if it's just you and me.\"\n\n\"I'd love too,\" I say, smiling happily. Wow. Sometimes things just work out the way you want them too. An evening with Nick. Just him and me. And he thinks that's going to be lots of fun. Oh wowowowowowow! \n\nIf I was a puppy, I'd be rolling around on the floor looking ecstatic. As it is, I'm smiling and my cheeks are a little pink. I wonder what he means by far more fun. Hand on my thigh fun? Hand under my dress fun? I'd like that. A lot. I wonder if he'll do that again. If he does, will his hand go higher? My heart dances a little. There's that thrill at the thought. That's why I wore these panties. So that if he did, he'd find he could touch more. My knees are jelly at the thought. God, if he touched me right now I'd melt. It's all I can do not to squeeze my thighs together as tight as I can.\n\n\"Good, let's get that coffee,\" he says. When he stands, the top of my head barely reaches his shoulder. Somehow, he has one of my hands in his and I have no idea how that happened and he's leading me out of his office into the hallway. I walk with him, his hand holding mine sends little thrills through mine. Non-stop thrills. He doesn't let it go, it's not an accident. He's deliberately holding my hand. I like that a lot. It's a long walk. All the way to the other side of the building. In the little cubbyhole of a kitchenette, I stand close to him as he makes two cups, one for him, one for me.\n\n\"Cream and sugar for you.\" I smile as he passes me the first cup. He remembers.\n\n\"And for you,\" I say. I remember too. We smile at each other. \n\nHe reaches out, once more takes my hand in his. There's no mistake. It's deliberate. I look down. He looks with me, we both look at our hands, we look up; he smiles at me. I blush, half-smiling back. I don't try to take my hand away. Neither of us say a thing. Holding our coffee's, we walk slowly back towards his office. Very slowly. My hand stays in his for the entire distance. I wish it was five times as long. Ten times.\n\nHe only releases me when we're next to his desk and he's putting his coffee down and sitting down. I place mine besides his. I'm standing. There's a chair, but it's over against the wall and I'd rather be close to him.\n\n\"Last Friday,\" he says.\n\n\"At the restaurant,\" I add. I remember. Everything. My cheeks are pink. They're burning.\n\n\"Where did we get to?\" He's looking at me. \n\nStanding while he sits, I'm a little taller than he is. His hand is suddenly on my inner leg, just above my knee, hot on my skin. I place one hand on his shoulder to keep my balance. My legs have suddenly turned to jelly. I'm flushed with excitement in an instant. He begins to stroke my leg, slowly working his way higher.\n\n\"I like your skirt,\" he says, his hand resting just above my knee. \"It's very revealing.\" He smiles. \"Shorter than that skirt you wore last Friday.\"\n\nI smile. \"That didn't seem to slow your hand down.\"\n\nHe grins. \"It didn't, did it? Now where was I last Friday?\"\n\n\"I think you got higher than that,\" I say. I know he was. I know exactly where he was touching me and suddenly I'm so hot and so very wet and I'm shivering with excitement and with nervous tension. \n\nHis eyes burn into mine. His fingers move lightly over my skin, teasing me, leaving tingles shivering through me in their wake. I look at him and I bite my bottom lip. If I didn't I'd moan out loud with excitement. As it is, I gasp.\n\n\"Not far from here, I believe,\" he says, his fingers reaching the hem of my skirt and pausing. \"This IS a short skirt isn't it, Kylie?\"\n\n\"Yes,\" I gasp. \"It is.\" A lot shorter. That's why I'm wearing it. To show off my legs. \n\nHis smile, the look on his face, his hand on my inner thigh, resting just below my hem, those are my reward. That's why I wore this skirt.\n\n\"Hmmmm, not far from here.\" His fingers slide upwards, under my skirt. \"I think we were here,\" he adds, and his hand has disappeared under my skirt, which is already short so he's very high, he's stroking my inner thigh. That slippery wetness I felt last Friday is back again except that now it's a flooding wetness and my hips want to twitch and I'm so so wet and the lacey shorts are split up the sides and they're loose, they're not tightly fitting and if his hand goes any higher he's going to find out. \"About here, I think,\" he adds.\n\nSuddenly I'm very very nervous. Like, totally.\n\n\"Somewhere about there,\" I gasp, barely able to talk, shuffling my feet a little further apart. I'm glad I wore my prettiest panties today. These are the lacey little black French short ones that I paid for myself out of my allowance and keep hidden so Mom doesn't see them. They're not really panties. They're very loose and they're slit half way up the sides. They're much more for decoration than for protection and, well, this is why I wore them. In point of fact, this is the first time I've worn them out anywhere outside of my bedroom. His fingers are almost touching them. They must only be a fraction of an inch from touching them. From finding out how exposed and accessible I am.\n\nWill he? Will his hand move that little distance higher? I'm not going to stop them if they do.\n\nMy heart pounds as I wait to find out.\n\nHis phone rings. He looks at it. His hand leaves me. He holds a finger up to his lips. \"It's Natasha,\" he says, before picking it up. His wife. \"Hi darling ... yes ... yes, no problem ... no, I'm going to grab something here before I go home ... might meet a couple of the guys for drinks later so don't wait up for me .... no, you stay as late as you like, darling ... see you in the morning ... love you too, darling ... bye now...\"\n\nHe hangs up. Smiles at me. \"Now, where were we before we were interrupted?\" he says. \n\nI move even closer to him. I stand right next to him, one hand back on his shoulder. I can smell him. Masculine. A little sweat, deodorant, not too strong. It's a very attractive smell. I want to rub my face against his chest and just inhale. I want to press myself up against him and melt into his arms. Is he waiting for me to say something? \n\n\"You had your hand on my leg,\" I say, my cheeks burning. I'm warm everywhere. Tingling. \"Under my skirt.\"\n\n\"You didn't mind?\" he says, watching me.\n\nI smile now. My cheeks are pinker. \"No,\" I say. \"It was nice.\" His eyes are on my boobs. It's not just my cheeks that are burning now. Maybe I should have worn a bra? God, if my nipples swell any more, they're going to burst. They hurt so much. They ache. For the first time in my life, I really really want a man to touch them. More than touch them. My nipples are inches away from his face, pushing that black silk outwards. He can't miss seeing that. God, I'm such an exhibitionist. \n\nFor him. For Nick.\n\n\"Maybe you should shut the door first, Kylie,\" he says. He's watching me. He's looking at my boobs.\n\nI nod. I turn. I step across to his office doorway on legs that are rubbery and I close the door.\n\n\"It locks,\" he says.\n\nI look down. Turn the lock. My hand is shaking. I turn back towards him. He swivels his chair towards me, watches me. My cheeks flame as I take those half a dozen steps across the room to him. My nipples rub against my top. They're so swollen and hard and I'm so very much aware that I'm not wearing a bra and that my top is translucent and he can easily see there's nothing beneath this black silk top but me. Those butterflies inside me aren't just fluttering now, they're swarming and I'm so wet that I can feel myself slippery as I walk and that's exciting me with every step. \n\n\"Would you like to sit down?\" he asks. He pats his knee.\n\nOh god, yes! Without a second thought, I begin to turn to seat myself sideways across his lap. I've done this before, with my boyfriend. I really want to sit on Nick's lap.\n\n\"No,\" he says, stopping me with his hand as I turn. \"This way.\" His hands turn me to face him. He wants me to sit astride him, facing him. His hands guide me as I do. I seat myself, conscious of the shortness of my pleated skirt. It's loose, it rides up my thighs easily. I'm sitting on his trousers, my skirt is around me, not under me. Just my panties and his trousers and him and me. His hands are outside my skirt, they hold my hips, part of my butt. \n\nI like his hands on me. His touch is so confident, so assertive. He knows what he's doing. He's a married man. He should know what he's doing. My hands rest on his shoulders now. Seated like this, my face is slightly above his, I'm looking down at him. It's strange sitting on him, my legs either side of his. I've never sat like this with a guy, not even with my boyfriend and it's breathtakingly exciting. I'm so conscious of my short skirt, the loose-legged panties I'm wearing, of how excited and wet I am and that my legs are spread wide on either side of him. \n\nThe way a man would position me if he wanted me the way a man wants a woman. But I'm not a woman. I'm a girl. An eighteen year old girl.\n\nHe's looking up at me and my eyes look into his. \"Kylie,\" he says.\n\n\"Yes,\" I say. It's more of a gasp, really. I'm breathless with excitement. That crush I have on him? Right now, I'm overwhelmed. Something's going to happen, I know it is. He wouldn't want me sitting on his knee like this if he didn't want something to happen, would he? His hand wouldn't have been on my leg, under my skirt, if he didn't want something to happen, would it? I mean, I have a boyfriend but I've never felt like this about my boyfriend. This is all my fantasies come to life and made real. This is heaven.\n\n\"You're gorgeous.\"\n\nI look at him and wait, half smiling. Okay, I know I'm attractive. I'm not super-model material or anything. \"And?\" I say in the end, when he doesn't say anything else.\n\n\"And I want to kiss you,\" he says at last. His expression. He's nervous? Well, so am I.\n\nNervous or not, my heart's going wild. \"If you want to, you can.\" \n\nI look him in the eye. I want to smile but I can't, I seem to have lost muscle control over my face. What else does he have in mind? It's not like he's a teenager. He's married. I'm sure he's thinking of other things. Like putting his hand all the way up under my skirt and touching me there which I'd let him do if he wanted to even though I've never let my boyfriend do anything like that? But I don't say that.\n\n\"I'm married,\" Nick says. He's looking so serious. He's adorable. And yes, he is married but I don't care. It's not like I want to marry him. It's a crush I have on him. It's not like I want to move in with him and have his babies or anything.\n\n\"You've got two kids as well,\" I say. I'm smiling down at him. \"Nick, I know that. You're sixteen years older than me too. I don't want to marry you.\" I have this huge teenage crush on you, silly man. Take advantage of it, why don't you?\n\nHe's looking up at me like he's trying to make up his mind about something. I'm content to sit and wait because this is so exciting sitting on him like this. I'd like to wriggle on him but, well, maybe that would be too little girly and I desperately don't want to act little girly. Not with Nick.\n\n\"There's a lot of things I'd like to do besides kiss you, Kylie,\" he says at last.\n\nMy heart dances a wild fandango. I'm all choked up inside and those butterflies aren't just swarming now, a flock of them is migrating to Mexico inside me or something. \"Okay,\" I whisper.\n\n\"If you don't like what I do, all you have to do is say stop,\" he says and his voice is so soft and gentle. As gentle as his eyes looking into mine. My heart melts. I melt. I can't believe how wet I am and I'm just limp and I'm positive there's going to be a big wet patch on his trousers soon if there isn't one there already.\n\nI look at him through eyes that are half-closed. \"Okay,\" I say. \"I'll say stop if I want you to.\" I can't wait. I want to say \"Go\" but I can't. That'd be silly. The expectation and anticipation is killing me. It's like the first time I was kissed. Will he? Won't he? Will he? Oh please, just hurry up.\n\nHe smiles. One of his hands reaches up, his fingers brush my cheek, trace my jaw, guide my face closer to his until our noses touch. I angle my head just a little, our lips brush. Touch. It's not like I've never kissed before. I have. A million times with my boyfriend. My mouth opens and suddenly we're kissing passionately, his hand is behind my head, holding me as his lips crush mine, as his tongue slips into my mouth, swirling against mine, dancing with mine, tasting me. \n\nBy the time we come up for air, I'm just about moaning into his mouth. Magical kisses? It is, it's beyond magic. The best kiss ever, that's what it is. When our lips part, I'm gasping for breath. He's breathing hard too. We look at each other and then, a split second later, we're kissing again, even more passionately and my mouth is wide open to him, he's kissing me however he wants too and I'm there for him, his tongue in my mouth, his lips crushing mine, moaning softly now with every breath, on and on and on. \n\nAt last our lips part and this time it's not for a pause, it's because both his hands are on my thighs, sliding up under my skirt to my hips, exploring that slit in my panties that runs to the top on either side, his fingers on my skin, stroking me, holding me, pulling me closer to him so that now I'm pulled up tight against him and then suddenly we're kissing again and I can feel how hard he is through his trousers because I'm pulled up hard against him.\n\nHis bulging length is right where I'm pressed up tight against him and those loose lace panties are doing nothing but rub against me where I'm so incredibly sensitive and this feels even better than when I touch myself and he's not even touching me and I'm moaning into his mouth as we kiss. As he kisses me. Really moaning, uncontrollable, noises that just come from me and I've never had this happen to me before. Never and I'm just making these noises and they're just coming out.\n\nHis hands, they're on my skin, high under my skirt, on my hips, his fingers under the lace of my panties where they're slit up the sides, digging into my butt and holding me, pulling me closer to him, moving me against him so that I want to squeal with excitement and then he's kissing me again, lips crushing mine, his mouth possessing mine the way I've dreamed of his mouth possessing mine except reality exceeds fantasy a thousand fold. I open my mouth wide, his lips crush mine, his tongue is inside my mouth and him kissing me is paradise.\n\n\"Ooohhhhhh.\" I can't help it, I moan loudly as his hands move me and his hands are on my butt now, pushing the lace out of the way, his fingers kneading my butt cheeks and I'm clinging to him as he kisses my face, my nose, my cheeks, my ear, my neck, his lips everywhere. He takes a breath, he looks at me. His nose brushes mine, his hands are sliding over my hips, caressing me now, hot on my skin.\n\nHe says nothing but his hands slide out from under my short skirt. They're on my waist now, easing my black silk top out from where it's tucked under the waistband of my skirt. Easing all of my black silk Calvin Klein top out until it hangs loose and I look down and watch his fingers as they begin to unbutton it. I'm not wearing anything underneath. No bra. Nothing. He knows that, I'm sure he does. It's impossible to miss. My nipples are so hard they hurt as I watch his fingers moving. One button, then two, then three. \n\nHis fingers are between my breasts, they pause. \"Can I?\" he asks.\n\n\"Yes,\" I gasp, and it's like my heart is in my mouth when I speak.\n\nHe smiles. His fingers unfasten a fourth button, then the fifth, working their way downwards. There's one more. He unfastens that last button. He reaches up, takes one of my hands from his shoulder, and moves my fingers to my top. \n\n\"Open your top for me,\" he says, \"I want to look at you.\"\n\nI shiver. Tremble. My heart pounds. With that one shaking hand, I ease my top open, slowly, exposing one of my boobs to his eyes. My face is on fire, I'm having difficulty breathing. I've never done anything like this before, showing myself to a guy. Exposing my boobs. Not like this. Never. He's the first guy to ever see my boobs and it's me revealing them to him. Sure, he undid my top but it's my hands peeling that black silk away and exposing myself to him. \n\nHis eyes burn into my skin. My nipples seems to swell, grow even larger, they're both aching and hurting now. So hard and so hurting. I look down and they're larger than I've ever seen them, so swollen and full. I keep my top open so that he can look at me. Look at my boobs. My nipples. Shivering. I'm shivering.",
        "Is he going to touch me? \n\nHis hand rests on my waist, hot on my skin. He looks up. Looks into my eyes as his hand slides upwards, a gentle caress that pauses below one boob. \"May I?\" he asks, again.\n\nMy heart leaps. Butterflies no longer migrate inside me. Instead, there's a black hole of anticipation and fear that unfolds, flowers, expands, fills me. \"Yes,\" I whisper, again.\n\nHis hand, very gently, cups one boob. It's his right hand. My left boob. I watch as his thumb brushes across my rubbery hard nipple, pleasure rippling through me. Fingers on my skin, his palm, hot, pressing against me. His touch is magic, exquisite, like nothing I've ever felt before. We're both looking at his hand on me, although maybe he's looking at my boob. It's very small compared to Natasha's. Small under his hand. Very small and very firm. I'm not big and bouncy like a lot of girls are.\n\nEyes half-closed, I continue to look down as his hand moves on me, his fingers trace the curves of my breast, brush my nipple. His thumb plays with me, brushing backwards and forwards, my nipple responds with rubbery-firm resilience to every touch. Ripples of pleasure wash through me as he caresses me, pleasure that holds me enthralled, spellbound, wanting more.\n\nHe gives me what I want. His other hand slides up my back, under my top, he eases me back so that his hand is supporting me as he lowers his head. I know exactly what he's going to do before he even does it and I can't wait. One of my hands strokes his hair as his breath puffs across my skin. His lips touch me, his tongue slips out, he licks at my nipple, his mouth opens wide, engulfs my boob, his tongue swirling on me.\n\nMy hand stops stroking his hair, clutches at his head instead as I offer my breast up to his mouth, back arching, trembling as he licks and sucks at me. The sensation is indescribable, his lips on me, his tongue lapping across my skin, his lips drawing on my nipple, sucking at me, ripples of pleasure through my nervous system, meeting and mixing with that source of pleasure at the juncture of my thighs in a slowly rising tide of anticipation and enjoyment.\n\n\"Ohhhh.\" I can't stop my sigh. There's no reason to try, there's no-one in earshot, no-one here besides us and his office door is locked. No-one can possibly hear us or interrupt us. If they could, I wouldn't be sitting across Nick's lap with my top completely undone and my boob in his mouth. \n\nHis mouth lifts. Before I can protest, he's switched to my other breast with his mouth and his hand is back on me where my breast is wet with his saliva and he's cupping me and teasing my swollen nipple with his fingers. His mouth is busily suckling at my other breast and I'm clutching at his head with both hands and starting at nothing, my eyes unfocused, my mouth wide open.\n\nOh. My. God! This is so good. This is just amazing. Better than amazing. I'm in heaven. I have this huge crush on Nick and he likes me. He likes me enough to be doing what he's doing to me and it feels so good and I know he's married but I don't care. I don't care one bit. All I want is that he keeps doing this to me and I wish we were somewhere where we could lie down and stretch out together but right now this is good enough and with my back arched I'm pressing against him where I'm so sensitive and wet and I can't help moving and when I do it feels so exciting and I want to do it again.\n\nSo I do and it's heaven.\n\nHis mouth leaves my breast. I'm disappointed, but only for a moment because now he's urging me closer, holding me, his mouth on mine again and now we're kissing as his hands roam over my back under my top. My back, my shoulders, down to my waist, he's touching my skin, hands running everywhere over me and my breasts are pressed up against his chest, his shirt. I wish he wasn't wearing that shirt, I want to feel his chest naked against my breasts but there's no time to think.\n\nNo time for anything except what he's doing to me. He's breathing hard as he kisses me and he's not the only one. I'm panting. Gasping. When his hands run over my thighs and up to my hips I squirm against him and when I do that, I moan into his mouth. \n\n\"Ohhhhhh.\" My moan is even louder when it's his hands that grip me and move me against him. I'm so wet and those French short panties are so loose that I know I'm going to leave a wet patch on his trousers and I burn with embarrassment as he moves me. I don't stop him though. I don't stop kissing him either. If anything, my response to his kissing me is even more passionate. \n\nWhere his hands move me against him, it's unbearable. I can't stand it and I want it, I want more and where my clitoris rubs against him almost chokes me with the sensations I'm experiencing. My fingers have never made me feel like this. Never. My mouth lifts from his, I clutch at him as he moves me, I'm leaning forward, against him, my top wide open and loose, breasts pressed against his shirt, my eyes wide as I look blankly at his office wall and cling to him.\n\nAll the time his hands are controlling me, they grip me, they move me, they friction me against him and I want to squeal out loud because it's so exciting. Glorious friction as I rub wetly against him. I'm shivering and covered in goose pimples and I'm limp and I want what he's doing to me. His mouth is on my neck, kissing me, his tongue licking me, sucking at me so that I shiver and moan and cling to him more tightly, acutely aware that my nakedly exposed breasts are pressing against him. That only the thin cotton of his shirt separates his skin from my naked exposure. Somehow one of his hands is under my butt, lifting me, moving me and his other hand is between us. \n\nBetween us? My heart explodes in my chest as his hand slides inside the loose front of my lacey French short panties and cups my sex as his other hand holds my butt. No-one has ever touched me there before, but then, that's why I wore these panties wasn't it? So that he could touch me like this if he wanted to and he is. Oh my god, he is and his hand, it's on me, he's really touching me, his fingers are cupping me there, right where I've fantasized about him touching me and I can't believe that he actually is. \n\n\"Oohhhhh.\" He is. He's touching me!\n\nWet? I'm so wet where he's cupping me and his finger, one of his fingers, it slips inwards so easily as I part for him. His fingertip presses against my entrance, very gently, I'm hovering on a plateau of pleasure and anticipation and excitement and suspense and fear and longing that I've never felt before and it's so overwhelming. All I can do is cling to him and stare sightlessly at his office wall as I hang there, suspended in time, waiting for him to take this further, to do what he wants with me.\n\nHe does.\n\nHis fingertip pushes inwards. I rise in an instinctive reaction to that pressure. I can only rise a little though and then my thigh muscles relax and, shuddering, I sink downwards, bury my face against his shoulder as his fingertip eases through my entrance. Inside me? Oh my god! His fingertip is inside me and I feel him where he enters me and I'm so wet there, I'm wet on his hand, wet everywhere his hand cups me and my eyes widen as his finger pushes. My hands clutch at him. My eyes open wide. My mouth opens wide, a breathy exhalation as his finger moves in me.\n\n\"Ohhhhhh.\" My breathe escapes in a long sigh as half his finger probes upwards and he's touching me where only my own finger has explored and his finger in me is so much more exciting than my own. Bigger than my own finger too and I like that. My sex is so swollen and sensitive against his hand, the heel of his hand rubs against my clitoris, his finger pushes inwards even further, all the way, his finger is all the way inside me and his hand presses against me and I'm clasping him inside and when he moves, I feel him within me, gently caressing the inner walls of my channel.\n\n\"Kylie,\" he breathes in my ear and his hand moves, his finger moves, probing, stroking, moving and his hand under my butt is holding me firmly in place as his finger explores inside me and I'm having trouble breathing. \n\n\"Nick,\" I moan. \"Ooohhh .... ooohhhh Nick .... Nick .... Ohhhhhh.\" I can't stop moaning. I can't stop my hands clutching at him. With my legs either side of his, straddling him, I'm completely open to his hand and there's no stopping what his finger is doing inside me either. Those panties I'd worn, fantasizing about his hand on me, well, they allow him complete freedom of access and there's no changing my mind now. This is no fantasy, this is real and he's touching me, his hand is on my sex, his finger is inside me and I want to bite him. I want to scream, I want to cling to him. I want more.\n\nMuch more.\n\n\"Kylie .... Kylie.\" His hands, he's touching me, his finger moves in me and I'm so wet where's he's touching me and I want to see what he's doing as well as feel it. I lean back, away from him, look down to where his hand cups me. I can see his hand inside my panties, moving. I want to see more. I want to see where his finger penetrates me, I want to see his hand on me. I want him to see me.\n\nI want to see him.\n\nI can't move. Straddling him, his hand inside my panties, his other hand on my butt, I'm held, I'm helpless. Unable to do anything other than accept what he's doing to me. Torment. It's exquisite and I love it and I want more and I can't move and I want to.\n\n\"Your top,\" he says as I squirm on his hand, \"take it off for me.\"\n\nI'm kissing him. Leaning forward and kissing him and struggling to peel my top of as he fingers me. My only thought is to do what he's asked me to do but the long sleeves are awkward. I fumble to undo the cuffs, then, desperate, I tear my shirt off and drop it on the floor. I'm naked from the waist up and he's the first man to ever see me like this and I'm burning with embarrassment and with excitement, both my breasts exposed to his eyes. To more than his eyes.\n\nTo his mouth.\n\nHe lowers his head, his mouth seizes one breast, engulfs it, which is easy for him because my breasts are small. His tongue swirls, laps, licks while his finger caresses me inside. My hands clutch at his head, I arch my back, pushing my breast at his mouth, my mouth wide open, no sound coming out. His tongue swirls on my nipple. I shudder, desperate, as he sucks it between his lips, drawing it outwards, tugging on it with his lips. Pleasure ripples through me, his mouth slides over y breast, his tongue once more torments my nipple, swollen rubbery firmness in his mouth.\n\n\"Ooohhhhhh ..... ooohhhhhh .... ooooohhhhh.\" I'm sobbing my pleasure, sobbing my enjoyment of his touching, of his hand and his fingers and his finger inside me and his mouth all combined and sitting like this on his lap and being topless for him and his caresses are everything I've ever dreamed of. They're better than my dreams.\n\nFar far better.\n\n\"Ohhhhhhhh.\" I sob my complete surrender as he lifts me easily and lowers me to the carpeted office floor in one quick movement. I'm on my back. On the floor.\n\nHe's on the floor with me, beside me, his chair crashes over onto its side behind us. Neither of us even look. Who cares? His hand has left me, it's not inside my panties anymore, he's not fingering me and I want it back but he's unfastening the catch on the side of my skirt, tugging at the little zipper there. My skirt comes loose, he tugs it down, down to my knees. I raise one knee, kick my foot free, his foot pushes it off and now all I'm wearing are my black knee socks and those lacey little black French shorts and his hand is tugging them down too.\n\nHeart pounding excitement surges within me as those little lace shorts are dragged down to mid-thigh, exposing me to his eyes. The warm air brushes my skin as I reach down with one hand and hold them weakly. I've dreamed of this so many times, but now it's happening for real, it's not in my dreams and I'm not sure. This is reality and it's far more exciting but it's also very different. His hand leaves my panties, his fingertips trace their way up my inner thighs.\n\n\"Ohhhhh.\" I moan softly. My knees part at his touch, my sex pulses with a wet heat that has me clenching inside as the rest of me turns into a helpless jellyfish, sprawled limply on the floor of his office looking up at him. His fingers trace over the skin of my inner thighs, exploring, and now I want his finger back inside me so much. I want his hand doing to me what it was doing when I sat there, straddling him, his hand inside my panties.\n\nHis eyes hold mine as I lie there, his fingers trace their way across my skin as I wait because there's nothing else I can do except lie there and wait. And want. I want very much. His fingers trace their way back down, away from where I wait for them to explore me. My hips twitch. He smiles. I feel his fingers brush my wrist, my hand, my fingers where I clutch that scrap of black lace, my last protection. The last thing between me and complete nakedness. He doesn't remove my fingers, he doesn't urge them lose. He simply strokes them and smiles down at me and I know what he wants.\n\n\"Kylie,\" he breathes and that single word acts like a magical spell on me. My insides tighten, my sex pulses hotly, wetly, my fingers slowly relax their hold, fall away from the black lace that they clutch, rest limply on the carpet beside me. He's going to take my panties off me and I'm going to let him do that to me. I'm going to be naked for him. Exposed to his eyes. All of me. Will he think I'm pretty? I hope so, because he's going to see all of me if that's what it is that he wants.\n\nHis smile transfixes me as his fingers brush my outer thigh, hook under the elastic waistband. There's a pause, he looks at me, looks down at me. His eyes look at me there and his look, it's almost as if he's touching me. He says nothing but his fingers drag my lace shorts downwards, down to my knees. Just as I did with my skirt, I do the rest, raising one knee, easing my leg up and through until they tug at my ankle. His fingers drag them over my foot, down my other leg. I'd kick them off except his hand abandons them to run all the way back up.\n\nUp over my knee, sliding up my inner thigh. My knees fall further apart and it's so natural to do that. It's something I should do for him. Expose myself for him. My face is burning, everywhere is burning, tingling, his hand rests on my inner thigh, he smiles again as my hips twitch. I'm pushing myself up at his hand and I'm so so wet there. Swollen and wet and so sensitive that even the air brushing my skin has me shivering with excitement. He smiles and he's still not touching me there again and I want him to but his face draws closer and he's kissing me again. \n\nI love his kisses, his lips on mine, crushing mine now, his mouth taking possession of mine, his tongue sliding deep into my mouth. There's something so intimate about kissing, that intermingling of our mouths and lips and tongues and saliva and breath. It's as if I'm joined to him, part of him is part of me when his tongue is deep in my mouth. He's closer to me, his body pressed against my side, leaning over onto me and his chest crushes mine but his shirt is between us and I don't want anything between us and even while he's kissing me my fingers fumble at his buttons, trying to undo the ones I can reach.\n\nHis lips lift from mine, my head tries to lift and follow him before sinking to the carpet again. His hand leaves my thigh, he's unbuttoning his shirt faster than I can, finishing quickly, peeling and shrugging it off and now when he kisses me again his chest is pressed against mine and it's his skin on mine, warm skin, hard muscles, delicious harshness, crushing my boobs, crushing almost harshly against me. My arms go round his neck, curling around him, holding me against him. He's fumbling at his trousers, I can feel his hand working, his body moving and I know what he's doing.\n\nHe's unfastening his trousers as he kisses me. I draw one knee up, my foot kicks as I shake my panties off, a last shake sends then flying into the air to land who knows where. I don't care. They're gone and now, except for my black knee socks, I'm naked on the carpeted floor of his office and his trousers are round his knees and he's kicking them off and now he's naked too and his cock is freed. Exposed. Pressing against my thigh as he moves closer.\n\nHardness. It's so big and hard. My heart jolts, my breath catches in my throat. I'm naked. He's naked. Every inch of his cock presses hotly against me and those must be his balls, they feel different. One of his legs is over mine, his hand runs up the outside my leg, my hip, my waist, circles on my stomach, slides downwards and just like that his fingers brush over my sex so lightly. Feather-lightly.\n\n\"Oooohhhhh.\" I sob at this touch that I want so much, my back arching, my knee moving outwards, exposing myself. Opening myself to his fingers. I feel different there, my labia so swollen with excitement, hot, wet, so delicately sensitive. His fingers cup me, my wetness spreads across him where his fingers press against my labia, spreading me for the one finger that presses inwards. He's touching me there, my entrance, his fingertip finds me and I remember so well his finger there earlier. My hips jerk, my knee moves even further aside. It's so good to open myself like this to him and he's kissing me again and his fingers brush and press and caress with excruciating skill.\n\nHis finger has been inside me before, when I straddled his lap. I desperately want it inside me again and I'm half turning towards him, one foot on the floor, straining as I arch my hips, push myself at his hand in response to that racking need that grows and grows and grows inside me. He holds me, the heel of his palm moving against my clitoris, grinding that most responsive part of my body with a touch that in my complete innocence I don't recognize as skilled but it is and he's driving me crazy because I've never felt excitement and pleasure like this.\n\nAll I know is the pleasure of his touch is overwhelming and my body responds. There's no thoughts in my head now, no consideration of whether I should be doing this or not, there's just him and me and his hand on me, his finger inside me, touching me inside, caressing and stroking and moving in me and his body against mine and he's kissing me and I can feel him so hard against and I want to touch it. I want to hold him in my hand, clasp him with my fingers and explore his body.\n\nI want to, but his hand between my legs has me at his mercy. My hips are jerking, twitching, his finger pushes, slides so easily into me. I can feel him inside and I can feel where he enters me, where I'm so sensitive and every movement sends little thrills and ripples washing through me. What he's doing to my clitoris is indescribable and I can't even moan my pleasure and my excitement. It's a struggle just to breath and when he looks into my eyes and twists his finger inside me and his other fingers slide wetly over my labia, slick with my liquid excitement, he knows exactly what he's doing to me.\n\n\"Ooooohhhhhh....ooohhhhhhh.\" The one hand that's not trapped under him moves down to rest on his. I feel his muscles move, feel the movements of his hand and his fingers as I feel them on me and in me and I press his hand down against me as my hips judder upwards. It's so good. It's heaven and I know I'm close to climaxing and his fingers move and move and move.\n\n\"Ohhh Jesus ...Ohhhh Nick .... Nick ..... Nick....\" I sob his name as that wave inside me rises, crests, crashes down on me and then I'm lost in a swirling maelstrom of pleasure that has me desperately clinging to him as I'm swept away. Everything but his face looking over mine blurs, I'm seeing stars, colors, I'm feeling them, feeling that golden wave wash through me, fill me, leave me limp and glowing. I lie there, panting, sobbing for breath. Looking at him.",
        "\"Nick.\" It comes out as a little sob of joy. \"Oh, Nick.\"\n\nHe's smiling down at me and now, getting my breath back, held in his arms, I smile back. I can feel how hard he is against my thigh and, well, this has gone even better than I'd hoped when I walked in here with that hopeless crush on him. I'm in heaven now and what he's just done to me, well, it was so good and I want to do that for him too and we have plenty of time. We have all evening and really, I don't mind at all spending it naked on the floor of his office with him. I hope he can do what he just did to me again before we have to leave. I know I want to make him feel the same way.\n\nHis cock is hard and it's pressing against me. I've never seen one before, not a real one, not a live one, and he's naked and it's there, pressed hotly against me, and I really want to see it and hold it. I smile and turn towards him a little and my heart pounds as I reach for him and take him in my hand. When I do, when I finally clasp him in my fingers for the first time, my heart stutters. It's big, bigger than I thought it would be, its thick and it's hard and his skin moves when my fingers do and I freeze. Did that hurt him? But he's smiling so I relax. I guess not.\n\nI smile back. \"I want to look at it.\" I'm so curious now. Curious and very excited.\n\nHe grins. \"Sure.\" Now he lies back, rolls onto his back on the floor and he's grinning up at me as I turn towards him and raise myself up onto one elbow, our positions reversed. I look at him on his back, naked, and he's so hot. I've never seen a completely naked guy before. Swimming shorts, sure, but naked and excited, never. He's fit, he's tanned, his muscles show he works out but I know all that. It's his cock and his balls I'm interested in. \n\nThey're so fascinating.\n\nI'm still holding his cock in my hand. It's so hard. I know they're not hard all the time but I'm wondering now how big it is when it's not hard. It's certainly big now. It feels huge. Soft velvety skin that's warm under my fingers overlying a steely hard core. The head of his cock holds my eyes, purple, plum-sized, that strange looking head with the little hole at the very tip. It's an odd shape and I've seen pictures and things but in real life, it's making my heart pound.\n\nHe watches me looking at him. I move my head closer, getting a good look as my fingertips delicately explore him. I touch him tentatively, running my fingertips over the rounded head, down his length. He smiles and lies back, watching me. I run my fingers through his thick thatch of wiry hair, look at his testicles.\n\nI slip my hand down, cup both his testicles, lift them a little, holding his balls in my hand, weighing them. I can feel the two individual balls, large in my hand in the loose sac of skin that contains them. It's fascinating but it's his cock I'm really interested in. It's big and long and it's so hard and just eyeing it has my heart pounding with excitement as my fingers move up and I clasp him delicately, gripping his shaft with my palm and my fingers. He throbs in my hand. My pulse races.\n\n\"It's so hard,\" I say, fascinated. \"What do I do?\"\n\n\"Stroke it with your hand,\" he says. He smiles when I glance at his face. I smile back. \"Just move your fingers up and down like this,\" he adds. He places one of his hands over mine where I'm clasping him carefully and moves my hand up and down on him before releasing me.\n\nI smile back. \"Okay.\" I stroke him slowly, holding him carefully. It feels very strange, this hard shaft of rigid flesh. Unlike anything I've ever touched. \n\n\"That's good,\" he says, \"only don't grip just one spot, let your fingers slide and down on the skin.\"\n\nI do as I'm told, watching as the glans vanishes and then reappears from beneath his foreskin and its getting even bigger and harder still as I stroke it. Wowowowowowowow.\n\n\"Not so fast,\" he adds, \"there's no hurry.\" He's watching my hand.\n\nI slow the movement of my hand. Now I'm using deliberately slow strokes but I'm not sure if that's what he wants. \"Is that okay?\"\n\n\"That's good,\" he smiles, \"really good.\"\n\nI glance at his face, give him a quick smile, turn my eyes back to this fascinating male appendage that's all mine to play with. It's so exciting looking at it as I stroke him. I move my face closer, examine it, taking in the blue veins on the surface, the solid shaft, the swollen head that tops his shaft, his balls. My sex pulses hotly, reminding me of the ultimate use for this hard length of male flesh that I'm holding in my hand.\n\nHe seems content with me stroking him. I like that, I like doing this to him and I think of how he touched me just now, bringing me to a climax. That had been so good and I'm still so wet and I'm excited all over again now. I'd like to satisfy him and I kind of know the theory. Cocks. Semen. Ejaculation. I wonder what that will look like. \n\nI move my eyes closer to the head of his cock, examining the little hole there. So when men ejaculate, that's where it comes out? It seems so tiny. I wonder how much there is when he ejaculates. Not something I've ever thought about before but I'm sure there's something online if I want the theory. Right now its more empirical evidence that I'm interested in.\n\nI smile. Academic knowledge and reality are a lot different. Forget theory, I want to make him ejaculate and without any further thought, I lower my head and lightly kiss the tip of his cock. It's very smooth. One of his hands moves, he strokes my head, brushes my hair back from my face. When I turn my head to glance at him, he smiles. It's an encouraging smile. \n\n\"Don't stop, Kylie, that's good.\"\n\nMy lips quirk into an excited smile before I turn back to his cock. Eyeing it, all sorts of thoughts are running through my mind. Incoherent, excited, confused. Chief among them is, am I going to give him a real blowjob? Most of my friends have given blowjobs, they all talk about them. I think I'm almost the only one that never has and now, here, naked, with Nick naked and his cock pointing at my face, I'm thinking I'm going to try this and see what it's like. I'm not exactly sure what to do but it can't be that hard and he's a guy, he's married, he knows all this stuff.\n\nI glance at him. Blush. The thought of Nick's cock in my mouth has me salivating. I'm so wet and hot and twitchy all over again and I want him to touch me there too but I want to do this even more. \n\n\"Tell me if I do something wrong,\" I whisper. I don't look at him. I'm looking at his cock. I'm holding his cock now, not stroking it and I don't kiss it this time. I touch my lips to the tip, very delicately, then part them to slide over the head of him. I'm being so careful not to graze him with my teeth and it's kind of difficult to do that and absorb the size and texture and taste of him at the same time.\n\nI slide my tongue over him, swallow. Taste him. Salty. Slightly bitter. A little pungent but it's not something that I don't like. It's different, that's all. Different and now the entire head of his cock is in my mouth and my lips circle his shaft just below that little ridge that separates the head from the rest of his cock and I slide the tip of my tongue along it, licking him there. His cock throbs in my hand, his hips twitch, I hear a sudden intake of breathe from behind my head.\n\nHe likes what I'm doing. Suddenly, I'm a bit more confident. This is a lot easier than I thought it would be. I mean, his cock, my hand, my mouth, the mechanics of this are kind of obvious and I think I know what to do. There's probably lots of technique but hey, I have a boyfriend. Guys are guys. They just want to get off and now I'm planning to get Nick off. Do for him what he just did for me. My heart's pounding. I want to smile except my lips are glued to his cock.\n\nSwallowing again, I taste him. Cock-flavored saliva. It's Nick's cock and my saliva and it's an unexpectedly delicious combination. I never thought of a guy's cock tasting delicious but it does, it's so yummy and I enjoy the taste of him in my mouth. Enjoy? Okay, it's not haute cuisine, it's a flavor that I doubt will be on any restaurant menu but oh boy, I love it. Sliding my tongue over him and swallowing again, I wonder how much of his cock will fit into my mouth? \n\nLifting my head, I draw my lips back all the way to the tip, lift my head, glance up and smile at him as I lick my lips. Suddenly, I'm shy. This is so weird, lying here with him. We're on the floor in his office and both of us are naked and I've never been naked like this with a guy. He's not just a guy. He's Nick, the guy I have this hugely mind-blowing crush on and okay, he's thirty five, he's married but he's here with me and he's had his finger inside me which I've never let a guy do with me before and he's made me climax and I'm holding his cock in my hand and I'm giving him a blowjob and it's hard to believe this is happening.\n\nHe smiles back at me and I blush. I turn my face back to his cock and well, it really is happening and his cock is pointing right at my face and I'm holding it in my hand and it's been in my mouth and in a few seconds I know it will be in my mouth again because, well, I want to give him this blowjob. His cock is wet now, wet with my saliva and when I lick my lips I can taste him there and then, very slowly and gently, I kiss the very tip, explore that little hole there with the very tip of my tongue. Lick around it.\n\n\"Jesus, Kylie.\" I look up at his groan, smile at the look on his face. I'm teasing him, I know that. I'm enjoying teasing him. It's fun teasing guys and I'm pleased that I can tease Nick so successfully. But I don't tease him for long. I give him that quick smile, turn back to his cock and lower my mouth onto him. He shudders as my lips slide down his shaft, his cockhead sliding over my tongue and deeper into my mouth as I see how much of him I can comfortably take. \n\nHe is long, or at least I think his cock is long because it's the first I've seen and held and, well, had in my mouth. I'd like to stop and measure him, I'm curious. But I don't think he'd like it if I stopped and really, I'd rather he was in my mouth. I can always ask him afterwards how big he is. How much of him can I get in my mouth?\n\nA lot of him as it turns out. I'm surprised at just how much of him I can take. It's like sliding a big large sausage into your mouth except, well, obviously it's not a sausage, it's a cock and it has its own unique shape and it's very alive and very hard and Nick's on the other end of it and his hips are jerking. I have to move my fingers because they're in the way and my lips are brushing them. I circle his girth with my forefinger and thumb, near the base, holding him as I draw my lips back, slowly, until they circle him just below his glans.\n\nI have to swallow now, more cock flavored saliva and I lick him and swallow again, savoring that taste. The taste of Nick's cock in my mouth. The first cock I've ever tasted. The first cock that's ever been in my mouth. I'm going to tell him afterwards, I'm sure he'll be excited to know that. I'm excited to know that. I'm excited to have his cock in my mouth. I love doing this for him. I love it that he's enjoying me doing this for him. I slide my lips back down, slowly, his shaft slides inwards between my lips, I slide my tongue over him at the same time. \n\nMore and more of him. The head of his cock is brushing the back of my mouth now, and my lips are brushing my finger and thumb where I circle and hold him. I use my other hand to cup his balls, they're so big and they're tight now, not hanging in a loose sac of skin. Is that because he's excited? There's so much for me to learn. I swallow around his cock, carefully ease my lips further down, feeling his cock brush my throat so I have to hold my breath.\n\n\"Fuck, Kylie,\" I hear him groan and I'm pleased as I ease back, slowly, sliding back up until my lips circle the head of his cock just below the rim that separates the head from the shaft. He seems to like it when I flicker my tongue around him there. I hear his sudden intake of breath, his cock actually throbs I my mouth. His hips jerk a little. I carefully run my fingernails over his balls as I slide my lips down him again, take him into my mouth. I'm more confident now, my lips move faster. Down and up and down and up and down without stopping now, swallowing and licking and sucking as I move. He likes that too.\n\n\"Jesus, you're killing me, Kylie,\" he groans.\n\nI don't stop to chat. I'm enjoying this. Nick's cock is just the yummiest thing ever. I hadn't thought I'd end up giving him a blowjob when I came here. I was thinking flirting, kissing, maybe he'd try to touch me but a blowjob? That never crossed my mind but now that his cock is crossing my lips, well, I'm willing. I'm more than willing. I want to do this for him. Maybe after this, he'll want me to come and see him and we can do this again? I'd like that a lot.\n\nHis finger in me again? I'd like that too but right now it's so exciting just doing this to him and I know I'm not stopping. I'm holding him and bobbing my head, my lips slips up and down his cock, my other hand cups his balls very tenderly. It's fascinating, his balls are so big. As big as eggs? Hairy. I like cupping them in my hand as I suck on him and I'm moving faster now, I can tell he's excited. So am I. I'm so wet again but it's him I'm thinking about, not me.\n\nHands. His hands reach for me, find my hips, he wants me to move. \"On your knees, Kylie,\" he says, and I do what he tells me to do, shuffle myself up onto my knees while I keep my mouth on him. His hands are moving me. Pulling me around and I'm moving like he wants me to and trying to keep his cock in my mouth as he urges me to my knees and guides my knees around towards his head.\n\nI move, not knowing what he wants but doing what his hands insist on. He lifts one of my knees and oh Jesus, he lifts it over his head and I'm kneeling over him with my knees either side of his head above his shoulders and I'm half lying on him and my heart threatens to explode as I realize my sex is right above his face and he can see me there.\n\nOh Jesus. Jesus. Jesus! I want to squeal with embarrassment and hide myself but all that comes out is a muffled \"mmmppphhhh\" as his cock moves in my mouth. Not just moves, his hips are moving, half his cock slides into my mouth, the head pushes in firmly, brushing the back of my mouth and I'm swallowing frantically. His hands hold my hips, he's holding me where he wants me and my inner thighs brush his face and his bristles rough scraping against my skin sends shivers racing through me. My hips jerk. His hands hold me, pull me down.\n\n\"Mmmmmpphhhh.\" His mouth is on my sex. Oh my god. Oh my god. He's kissing me there, his tongue is licking me and my hips buck wildly. Lifting. Pressing down against his mouth. It's so good. It's so exciting. It's so embarrassing and I love it and I'm burning with shame and embarrassment and I want more and his cock's moving in my mouth and my hand strokes him and strokes him and now my other hand goes back to cupping his balls and they've tightened more. \n\nOh jesus jesus jesus I don't believe what he's doing and my face is burning with embarrassment. His tongue is pushing inside me and I can't help it, I'm squirming on him and pushing my sex down onto his mouth and he's sucking and licking and kissing me there and his thumbs are pulling me open while his fingers grip my thighs and hold me and ooohhhh ooooohhh ohhhhhhh I want to scream because it's so good but I can't because his cock is filling my mouth and I'm swallowing and dribbling and sucking on him and my saliva's going everywhere over my hand and his cock and my face but I'm not stopping him I'm trying I'm trying because I want to give him what he's giving me and ohhh fuck fuck fuck this is so exciting and I'm trying to stroke his cock and suck on his cock but it's so hard to think about what I'm doing because of what he's doing to me and now good it is.\n\nHow can his tongue push into me like that? Oh god, this is beyond embarrassing, his face must be right there looking at my sex and I can't believe this is happening or that it's so exciting and I'm trying to moan out loud and his cock slips out of my mouth and it's bouncing wetly all over my face and I can't get it back in my mouth and I give up and just hold him in my hand and try and stroke him at the same time as I'm moving on him and oh fuck, his thumbs, they're pulling my labia apart and I'm so open there and his tongue, it's licking and licking and licking. My clitoris, he's licking my clitoris and I'm frozen. How can it possibly be this good? This exciting?\n\n\"Oooohhhhhh .... Ooohhhhhh ..... oooohhhhhh.\" I'm squealing. I can hear myself squealing as his mouth works on my sex. God, what must he think I am to be doing this with me? To me? I can't imagine what he's thinking about me but I've been so easy for him. I wonder if he does this to his wife? Is this what he gets from her but it doesn't matter because it's not just his tongue. I feel one of his fingertips pushing at my entrance and I know he must be able to see me there. See everything and his finger pushes into me.\n\n\"Nick,\" I groan, my face resting on his lower stomach. His cock is right in front of my face and I suck on the head. \"Nick.\"\n\nHis finger is inside me, exploring the smooth slippery soft walls of my channel, stroking me inside.\n\n\"Do you like that, Kylie?\" His voice is muffled by my sex and my thighs but I hear him clearly as he asks me and simultaneously pushes his finger deeper inside me.\n\n\"Oh god .... Nick .... Please .... Please....\" I'm moving on him, moving my knees, spreading my thighs wider, trying to expose more of me to him and I'm trying to keep his cock in my mouth and suck on him and stroke him at the same time as he licks me and fingers me. His finger is working faster and faster, in and out, his tongue circles my clitoris, exquisite torment, and suddenly he's bringing me closer and closer to my peak.\n\nBeneath me Nick is moving to, his hips rise and fall, his cock thrusts into my mouth, eases back, thrusts in between my lips again and I'm not sucking on him now, I'm holding him in my clenched hand and wrapping my lips around him and taking him in my mouth as he moves and trying to keep him there but I have to sob and moan and his cock slips from my mouth again as my excitement soars.\n\n\"Ooohhhhhh ... ohhh ... ohhh Nick ... Nick .... Nick ...\" My sobbing cries fill the room as his finger plunges into my sex, his tongue laps at my slit where his finger penetrates me. \n\nHis cock throbs in my hand as I stroke him, I'm trying to get him back into my mouth but it's so hard to focus on anything except what he's doing to me and his cock keeps bouncing against my face because I'm stroking him and I'm moving desperately and he's moving too but I try and I manage to open my mouth wide and slide my lips down his length until more than half of him is in my mouth. It's so hard to moan around his cock but I have to, I have to moan and sob because I can't not, he's just making me feel things I've never imagined feeling and my excitement is soaring. \n\nMy need is soaring and this is a need that dwarfs what I felt before, when it was just his finger in me and his hand on me. I'm moaning and sobbing and trying to move my mouth on him and breath and swallow and lick all at the same time and it's not working that well because now his hips are moving fast and his cock is moving in my mouth. He's pulling back and pushing himself in and his cock shaft is sliding in and out between my lips and over my tongue and it's like he's doing it to my mouth and every time I swallow around him I can taste him.\n\nI have to. I have to push myself down on his mouth because I want it so much and I'm almost there. Almost ... almost ... it's coming ... it's building inside me and I'm squealing and his cock slides out of my wide open mouth and I'd move if I could but his mouth and his finger inside me ... oh god ... oh god ... I want it ... I want it .... His finger inside me twists, massages the inner walls of my channel, his tongue is pushing at my entrance, he's sucking on me, my clitoris, oh god I can't think all I can do is experience what he's doing to me.",
        "My climax is a wave inside me that sweeps me up, I'm flotsam in a maelstrom of glowing gold and stars and my hips are jerking and my channel is spasming on his finger and I'm lost in a molten sea of ecstasy, filled with golden pleasure, and somehow even as I'm washed away my hand still strokes him, my fingers clasp him tightly but I'm so unaware of what he's experiencing that when a long jet of thick white cum erupts from the tip, sprays across my face, spurts into my wide-open mouth, I'm taken completely by surprise. Actually, I'm not even really surprised. Rapt in my own pleasure, I barely notice that first jet of cum. Or the second and third, criss-crossing my face in long thick jets, spraying into my hair, a single explosive spurt filling my mouth in mid-squeal.\n\nI have to swallow, I don't even think about it, there's so much of it that materializes suddenly in my mouth, and when I swallow it's the thick texture and the salty astringency on my tongue that brings my attention as I gulp it down. Not that I'm able to do anything about it except keep stroking his cock with my hand as he pumps his cum out. I'm so absorbed in my own climax but still, I want to be good for him and I try, I do try to get his cock back into my mouth but my body has its own responses to what's happening and all that happens is I lift myself a little to press my sex down on his mouth and grind my clitoris against him and those next three or four spurts of cum spray across my boobs.\n\nHis cum jetting out onto my boobs in thick white ropes, those warm liquid splashes as his cum spurts into my boobs, somehow that just adds to the sensations I'm experiencing. One thick jet spurts out to shoot onto one of my nipples and I watch it as it pools, then trails downwards from the tip of my nipple in a long white rope. My hand continues to work on him, milking him, the last of his cum trickles out over my fingers as I collapse down onto him. My face sinks down, my head rests on him, my cheek is in a pool of his cum and his cock slides across my lips and I lick him, lick his cum from his cock and my fingers and swallow it. I like the taste. It's Nick's cum and now, glowing, limp, I lick it from the tip of his cock where some fresh cum is oozing out in a large droplet. I lick it delicately and I roll it in my mouth, truly tasting it before I swallow.\n\nI savor the taste, slide it around my mouth with my tongue chew on it a little, and savor the texture. It's his cum. His semen. I have his semen in my mouth and wow, just, wow. It's been messy and his cum is all over my face and in my hair and I can feel it on my boobs and between us where I lie on him but I've had his cock in my mouth and I've swallowed some of it and this is my first blowjob ever and I'm feeling very proud of myself as well as glowing from what he's done to me.\n\nGlowing. I'm glowing and now I'm not even embarrassed. I'm lying on him with my legs either side of his head and his eyes are inches away from my sex and he can see everything and I'm not embarrassed at all. There's that golden satiation, I glow inside, I'm so happy and I'm so close to him and my eyes watch another droplet of white cum ooze slowly from that little hole at the tip of his cock.\n\nHis cum is everywhere on my face and my fingers and his belly and on my boobs and I can feel it between us where I lie on him. I guide his cock to my mouth, lick his cum off the tip, swallow, tasting it. I enjoy that taste. It's so intimate, it's his semen and I want more of it. I lift my head, his belly is coated with it, a creamy layer that I can also feel on my own skin. I bury my face against him, breathing in the slightly acrid scent, licking him, tasting, collecting it in my mouth until there's this thick mouthful and then I swallow.\n\nThat mouthful of his cum rolls over my tongue, slides down my throat, into my stomach and I know I can't really feel it there but it's like I can and I'm all shivery. I can feel his breath now, on my inner thighs and I'm so aware of myself there, that he can see me. My sex pulses at the thought and his finger is still inside me, my sex tight around him and I think he feels that because I can feel myself tighten on his finger. He doesn't say anything but slowly, very slowly, his finger eases from me and I'm empty where he was in me.\n\nHis face moves against me there, he kisses my inner thigh. \"You're so pretty,\" he says, and his breathe wafts across my sex, sending little ripples through me. \"So pink and pretty.\" I think that maybe he's not talking about my face right now, that he's looking at me there. Really? He thinks I'm pretty there? I don't know what to say. What do you say to a guy who thinks you're pretty there? I have no idea. I kiss his cock. It's softening now, shrinking, it's a lot smaller than it was and it's fascinating to watch it lessen in size.\n\nI have a much better idea of the mechanics of this now. I mean, guys, girls, what we've just done. Hands-on experience is worth more than a whole sex education class back at High School with all those stupid diagrams. I have it figured now, and Nick's lips kiss my inner thigh again while one of his fingers trace my labia. I gasp at his touch, the excitement flowering within me at the mere brush of one fingertip on me.\n\nExcitement isn't the only thing that's flowering. His fingertip brushes my labia. Hot excitement grows, my labia swell, I know they are. They swell and as his fingertip brushes them they part slowly, I'm a flower and he's my Apollo, my sun, and my petals are opening to the sun, my labia swell and moisten and part. His fingertips brush me and now they're sliding in my liquid excitement and I part further. I lie on him, breathing slowly, excitement ripples through me with every feathery touch.\n\n\"Come up here,\" he says, \"I want to kiss you.\"\n\nI lift myself reluctantly, his hands help me up, help me turn and I know I'm a mess as my face lifts from him and I kneel upright. He smiles, sits up, reaches across to his desk. His hand returns with a box of wet wipes. He takes one, he's smiling as he wipes my face, my forehead, my cheeks, my nose. God, his cum sprayed everywhere and I'm such a mess. I look down and there his cum on my boobs as well. All over his belly as well, but I'm the one wearing cum all over my face and my boobs and in my hair even.\n\n\"Lie down,\" he says, gently as he wipes me.\n\nI look at him and I move down onto the carpet, on my back and he's looking at me, his eyes running over me. \n\n\"Kylie,\" he breathes. \"Kylie.\" The way he says my name, it's like I'm so special to him. \"You're so beautiful.\" He's looking down at me as I look up at him, smiling. It's like his eyes are shining, I've never seen him so happy and I know it's me that's made him so happy and that's just ecstasy.\n\n\"Nick,\" I whisper. I don't say anything else. I can't think of anything else to say. I'm content to lie here before him, naked, exposing myself to him as I glow with the pleasure of that climax and with the satisfaction of having done the same for him. It's a radiantly happy feeling. \n\nOkay, I know he's married, but I don't care. It's not like I want to tear him away from his wife and kids or anything. That crush I have on him, it's not unrequited now, and I'm so happy about that. Happy? I'm ecstatic. Smiling. Glowing. Now I know what it's like when a man touches me. It's far far better than my own hand. And Nick? I hope I've satisfied him. God, I'm in heaven knowing that he likes me, that he finds me attractive. The clock on the wall above us says it's only seven. I'm smiling, there's no rush, no hurry, he doesn't need to go home and his office door is locked.\n\nNow I smile up at him as he moves to lie propped up on one elbow beside me, still looking down at me. I'm expecting him to use one of those wet wipes to clean more of his cum from my breasts but he doesn't. Instead he runs his fingers through the layer that coats me, massaging it across my boobs. Okay. I smile again, enjoying his fingers on me, running over me.\n\n. \"Does it take long to get hard again?\" I ask him. I want to do this again and we have lots of time. We have hours. I don't mind staying here. The floor of his office isn't as comfortable as a bed or a couch would be but its soft carpet and the door is locked. Nobody can possibly disturb us and it's just him and me and that's the way I want it. I want to give him another blowjob, I want his cock in my mouth, I want to taste his cum again. I want him to bring me to another climax. I want him to touch me and kiss me and lick me there again. \n\n\"When do you have to be home?\" Nick doesn't answer my question.\n\n\"I can stay out until late,\" I say, \"Mom and Dad are out tonight. As late as you like. I was supposed to go out on a date with Freddie, but I can text him and cancel that one, tell him I can't make it.\" My hand is still wet with Nick's cum. I like the feel of it on my fingers and I raise my hand to look at it, let it drip from my fingers in long strands to pool on my stomach. The cream of his cum contrasts with the olive brown of my skin. I dip my fingers downwards, trail it thru his cum, spreading it across my stomach. His fingers join mine.\n\n\"Oh, fuck, Kylie,\" Nick breathes. \n\nI smile, turn towards him. \"Can we rest for a few minutes?\" I'm tired, a little lethargic now and the heating is on, it's warm with the door shut and it's comfortable and the carpet is soft and I don't mind that some of his cum is still on me. I like it there.\n\n\"Sure,\" he says, easing himself down, onto his back, one arm under me now, drawing me onto him. He looks a little sleepy too as I turn to lie on him, on my side, my head on his shoulder, one leg thrown over his, his arm around me, holding me there. Over time my pulse slows, my breathing gradually returns to normal, the glowing lethargy that fills me fades away and I'm relaxed and happy. I lie motionless for what seems an eternity but in reality it's more like twenty or thirty minutes. I'm smiling, content. I'd come here to flirt with Nick, hoping maybe he'd take the initiative and make out with me.\n\nHe's made out with me alright. I'm in heaven and I'm so elated just knowing what's happened. That crush? I can't get enough of him. This is far more than I'd ever hoped for and it's beyond wonderful. After an eternity of relaxed happiness, I finally raise my head to look at him. Just seeing his face smiling back at me, I'm filled with joy. I mean, I have a crush on him and everything but he's married. He has a wife and two little kids and still he finds me attractive enough that he wants to do all of this with me.\n\nWhat does he see in me that his wife isn't giving him? I want to know but I'm afraid to ask. I mean, yes, she's in her early thirties, she's a lot older than I am, like, fourteen years and three months older, not that I'm obsessing about Nick and her, but she's very very attractive in a tall, blonde, big-boobed all-American girl sort of a way. Me, I look vaguely Asian, my hair is long and jet black and my complexion is a sort of light olive and I'm slender and my boobs are small and I have a little snub nose that everyone says is cute but I'm not so sure and I'm a bit skinny and my butt's more like a boy's than a girl's. \n\nHow come he's attracted enough to me to do something like this? How come he's not satisfied with Natasha? She's so hot. I'd have thought any guy would be satisfied with a wife that looks like her. What is there about me that excites him like this? Now that my excitement has momentarily quietened down, it's a question that's foremost in my mind.\n\nI mean, here we are, naked together on his office floor and I like it that we are but he must like me a lot to do something like this with me and I'm so happy that he has. I don't want to spoil it and scare him off by asking all sorts of questions but I'd really like to know what he's thinking. Does he really like me that much? Does he really think I'm that attractive? He must, he just came all over me and from the noises he was making it must've been good for him. I hope it was really good because it was better than good for me and I want to do it again now.\n\nMy hand slides down over his stomach and it's me taking the initiative now and I want to. It's my hand that finds his cock and takes him in a light clasp and gently begins to stroke him with my fingers. It's my eyes that look down into his and it's me that smiles down at him as I stroke him. It's my smile that grows as his cock begins to engorge under my fingers. I look down now and watch it this time. I want to see what happens. It's small when I start. It's fascinating to watch it as it slowly swells, lengthens, and thickens. It's getting harder under my stroking fingers.\n\n\"Ohhhh, you're such a good little cock-teaser, Kylie.\" His voice startles me for a second.\n\nI glance up at him. I smile. I continue to stroke him. He's swelling under my fingers. I'm exciting him. \"Cocks were meant to be teased,\" I say. I smile and lick my lips. \"Besides, I'm not a tease.\" I'm a little hurt that he even thinks that. I'm not teasing him at all. Well, only enough to get him hard and he's doing that fast enough. Swelling, lengthening, engorging. Veins strain under his skin. I can't wait to take him in my mouth again. \n\nThis time I want to suck on him until he finishes in my mouth. I can still taste him and I like the taste. It's not something I'd put on toast and eat, but it's exciting and I want to do this for him next and this time, well, I intend to swallow everything. All my friends say guys like it when you do that. I want to find out if that's true. \n\n\"You're beautiful,\" I say as he reaches his fully erect size. At least, I think he is. He's thick and those blue veins stand out beneath the skin of his shaft. I can't measure him but he must be seven or eight inches long. Wow. It really is big and it's supposed to go inside me? I'm so small. How could something that big possibly fit inside me? I mean, when I play with myself, I'm tight for my own finger and this thing I'm stoking is waaaaay bigger than my finger. My sex does a little dance all the same. \n\nNot that it matters right now. I'm intent on giving him that blowjob next. I glance back at his face. \"How long is it?\" I have to ask, I'm stroking him slowly, feeling how hard he is under my fingers. I want to kiss it again. Take him into my mouth.\n\nHe grins. \"Eight inches,\" he says.\n\n\"Did you measure it?\" I ask. I'm really curious.\n\nHe chuckles. \"A long time ago. Do you like it?\"\n\n\"Mmmmm, I do.\" I kiss the tip, lick it. I'm going to slide my mouth over him but his hand pulls my head back by my hair. Gently. Insistently. It's like leaving an icecream cone unlicked, I'm reluctant to abandon it but he wants me to move so I do.\n\nHe smiles and now he's easing me over onto my back, it's him now that's looking down at me and I like that. I like that he takes control. I'm still holding his cock but I like it when his hand covers one of my boobs and squeezes gently. My nipple swells and hardens under the gentle backwards and forwards brushes of his thumb. His hand runs down over my stomach to my hips. He holds me lightly, his face lowers to mine, his lips find mine, he's kissing me again, gently, tenderly and my mouth opens to him, my lips are sealed to his as his tongue possesses me.\n\nHe's so hard in my hand and now his other hand is on my knee, resting on my skin, urging my legs a little apart before sliding to the inside of my leg and working upwards. I want to squeeze my thighs together where his hand is brushing my skin and at the same time I want to spread my legs wide for him. It's an exquisite quandary that has me shivering and breathing hard. His fingers stroking my inner thighs are so good and I'm so wet again and his mouth is trailing kisses over my breasts, across my nipples, flicking the tips with his tongue and then sucking on them. Sucking hard, so that I arch my back and push my boob at his mouth.\n\nBefore I realize what he's doing his hand is cupping my sex and I'm so easy for him this time, his fingertip finds me, pushes, slips inside me so easily as I open for him and suddenly my hips are jerking eagerly against his hand as he fingers me wetly. I'm limp before him, I've let go of his cock, both my arms are above my head now and I don't know how they got there. They're resting on the carpet and I'm there for him as his mouth trails downwards over my stomach while his finger explores where I'm so wet and tight around him.\n\nHis thumb bushes across me, he lifts his mouth from my boob, looks down at me. \"Do you shave here?\" He's smiling.\n\nI'm not. \"No.\" Now I'm shy. I have very little pubic hair. Actually I have almost no body hair and I'm not exactly sensitive about that but I am shy.\n\n\"I like it,\" he smiles, \"You really have a pretty little cunt, Kylie, did anyone ever tell you that?\" He's easing his finger outwards as he speaks, he's looking at me and I can feel myself clinging to him there as his finger moves. \n\n\"No,\" I gasp. \"Nobody.\" Nobody but him has ever seen me there before and I should tell him that but his finger in me, it's so distracting and he's kissing my navel now and his mouth is moving down, he's kissing me there again and ... \"ooooohhhhhhhh\" he's found my clitoris and he's licking me right there, He's licking my clitoris and his finger is still inside me and I want to push myself up at his mouth and he's moving. His finger eases from me. He's moving down, he's kneeling and spreading my legs wide, both his hands on my inner thighs, spreading my legs wide apart and it's embarrassing because I'm so exposed to his eyes like this and he can see everything but it's so exciting as well to show myself to him like this. \n\nI know he can see me. He can see everything because he's pushed my legs apart and back and his breath puffs across me there and I want to moan but instead I just stare at the ceiling and gasp. I reach down with one of my hands, I stroke the top of his head as I lie there. His finger isn't in me anymore but he's kissing me there, licking me and my labia swell and part for his tongue and hips lips like the petals of a flower exposed to the morning sun.\n\nHis tongue explores my slit and it's as good as when he did it before but this time his hands push my legs so much wider apart and even further back and I'm so completely exposed to him, to his mouth, to his tongue. He's kissing and licking and lapping and his tongue pushes at me, the tip is pushing inside me and I'm gasping and raising myself up on my elbows because I want to see what he's doing to me and I try and spread my legs wider for him but that's hard because his hands have already spread me almost to the limits of my flexibility.\n\nHis mouth lifts from me, he looks up, he smiles and his lips shine with my wetness. His hands press my legs back and apart, wide apart and we both look at me. I've looked at myself before, but I've never seem myself like this. My labia are so pink and swollen, parted, glistening wetly. I don't have much pubic hair and the little that there is has been soaked with his saliva and my wetness and it's clinging to my skin and I can see every part of myself, even my clitoris, which is just a little exposed, the way it is when I'm really really excited and playing with myself only now I'm not playing with myself. Nick's playing with me and my heart wants to explode in my chest as I watch him looking at me there.\n\n\"Do you like it?\" I whisper, heart pounding.\n\nHe says nothing, his reply is a hot smile and his mouth lowering to me, his eyes rolling up to watch me as his lips brush me. I see his tongue slip out, he licks me. I feel his tongue on me, see and feel his lips, his mouth. He groans, a low sound that reverberates through me and I watch as his mouth works over me. I can see the little bud of my clitoris when his mouth isn't there, and then his tongue slides over it and I'm shivering and his tongue lashes my clitoris and he knows exactly what he's doing. His tongue is tracing circles around my clitoris, fast, ecstatic and I know what's going to happen. ",
        "It's happening. It's uncontrollable and in an instant I'm climaxing wildly, my hand suddenly holding his head, holding him against me and watching him do this to me and I'm squealing and moaning and sobbing as that golden pleasure washes through me yet again and this time I'm stunned. So quickly. He's brought me to another climax just like that and .... \"Nick ... Nick ...,\" I moan, still watching him. Watching myself and his mouth on me.\n\nHis tongue laps at me unceasingly. I shudder. My hands pull at his head as he sucks on my clitoris, as he strokes it with the tip of his tongue, as he sucks on it again and I'm shuddering with pleasure, falling from one peak only to begin to rise towards another without any pause. He moves up over me, he's kissing me and I'm falling back onto the floor, my arms around his neck as his mouth possesses mine.\n\nI can taste myself on his lips, on his tongue, the taste of me mixing with that residual taste of his cum in my mouth and I want to taste him again, I want his cock in my mouth so that I can give him that same pleasure he's just given me. He's kissing me hard, his hand cups me, his fingers explore me and I'm liquid with excitement, my labia so swollen, already open for him, my entrance accepts his finger easily as he pushes his fingertip through. \n\n\"Uhhhh.\" I gasp. It's so good to feel his finger there and with my legs drawn back, wide open to him, it's somehow even better. \n\n\"Ohhhhhh.\" My back arches, I look up at him wide-eyed as his finger gently slides all the way up inside me until his hand is pressed firmly against me, cupping me, his finger moving inside me, caressing the inner walls of my channel. He eases his finger outwards until only the tip remains inside me, pushes inwards again and lying beneath him, with him kneeling between his legs, my own legs spread so wide, his finger sliding into me is so good that my back arches again, my breasts press up against him, my mouth is wide open as I sob my excitement.\n\n\"Is that good, Kylie?\" he breathes and his eyes are look into mine, his expression so intent. \"Do you like it when I do that?\"\n\n\"Yes,\" I sob, \"yes I do .... I do.\" It is good and I do like it. It's so so good and I don't want him to stop. That exquisite friction as his finger slides inwards where my entrance circles him, the slide of his finger against the sensitive membranes of my labia, his finger inside me, pressing against the inner walls of my channel where I clasp him, delicious sliding friction as he moves in me, in and out of me. \"Ohhhhh yes.\" My back arches as his finger embeds itself completely in me. \"Yes...\"\n\nHe smiles, his nose brushes mine, his lips brush mine, my lips part, my mouth anticipates his kiss, I lift my head eagerly, our lips brush and brush and brush again, his tongue slips into my mouth. His mouth seals itself to mine, his kiss presses my head back down against the carpet I lie on, his tongue searches for mine, finds it, caresses and vines with mine. His finger eases outwards and beneath him I shudder. He pauses, only his fingertip inside me and I want it, I want his finger sliding into me.\n\n\"Please,\" I moan, \"oh please, Nick, don't tease me ... I want it.\" I want it badly.\n\nHis finger moves, he's stretching me wider, opening me. My eyes open wide, wider. My entrance is opened, stretched, he's forced the tip of a second finger through, into me and I'm stretched around two fingers now and he pushes them both into me, sliding them up inside me, stretching my channel around him all over again. \n\n\"Uggghhhh,\" I groan, \"nnuughhhh.\" My back is arching, my hands find his shoulders, my finger nails dig into his skin, my feet kick a little but I give no thought to objecting. I'm giving him what he wants and his fingers in me are so good even though they're stretching me so much. Maybe it feels so good because they ARE stretching me so much. I don't know. I don't care. All I know is that it's wonderful. They're both easing in and out of me and it's so good to surrender myself to him, to feel his fingers inside me, exploring, moving, and taking what he wants from me. In the silence of his office I can hear the wet noises my sex is making around his fingers.\n\n\"Uuuuuughhhhhh ... nnnhhhhh .... oohhhh .... Uughhhh.\" His fingers are moving inside me, easing in and out and I can't help the noises I make as somehow he brushes my clitoris at the same time. I want to tell him I want to give him another blowjob, I want to make him cum with my mouth but his fingers are driving me crazy all over again and he's going to bring me to another climax if he does this to me for much longer. \n\n\"Kylie,\" he breathes, his mouth lifting from mine, \"you've got such a pretty little cunt .... you're so wet.\"\n\n\"Yes,\" I moan, and his fingers are sliding and twisting in me. \"Yes ... I'm wet ... I'm so wet for you...\" I am. I'm so wet for him, for his fingers, I can hear how wet I am with every slide of his fingers in and out of me.\n\n\"I'd like to fuck you with more than my fingers,\" he says between kisses.\n\n\"Yes,\" I sob, \"yes.... yes.\" I'd like that too. I'd love that but I've never done it before. I've never even let my boyfriend touch me like this, let alone kiss and lick me there. His fingers are so good in me and another minute of this and I'll be climaxing on his fingers and then I'll give him that blowjob and suck on him until he cums in my mouth and this time I want to swallow it all. I want to swallow everything.\n\n\"I want...,\" I gasp, between those kisses, between those sliding strokes of his fingers inside me, \"I want...\" He smiles, he interrupts my attempt to tell him about that blowjob I'm going to give him with his kisses. He kisses me again and again and I'm so slippery on his fingers and he's kissing me so hard again, his tongue plunging deep into my mouth and his fingers are plunging deep into my sex, sliding in, sliding out. \n\n\"I want...\" I gasp again as his fingers ease completely out of me just as my excitement begins to crest and I whine, wanting his fingers back, wanting what he was bringing me too. \"Nick ... please ... I want...\"\n\n\"You want this, Kylie,\" he growls, and his legs move, they push my thighs back even further, wider apart, his hand is doing something between us and something big, much bigger than his fingertip, has slipped between my labia, it's pushing at my entrance. Pushing firmly. Pushing hard. I'm so wet, so excited, my heart almost stops as my entrance stretches and stretches, opening for him. He pushes harder and his eyes look into mine as his cockhead pushes against me, pressing against my entrance where I know he can slide inside me. There's no time for thought, no time to react, no time to say even one word. His mouth lifts from mine.\n\n\"God you're so fucking tight, Kylie,\" he groans, pushing hard and I know what he's doing and it's not his finger that's pushing against me this time. My back bows upwards, I'm startled, shocked, surprised and there's this black hole inside me as I realize what's happening, what he's doing.\n\n\"No, stop,\" I want to moan and my mouth is wide open but no sound is coming out as my head arches back, my eyes as wide open as my mouth. He's big, he's strong, he has me positioned exactly the way he wants me and my entrance has already been prepared by his two fingers. He pushes against me.\n\n\"Uuughhhhh.\" I jerk beneath him as he pushes through my entrance. His cockhead is abruptly inside me. His hands have found mine and now he's pinning them to the carpet above my head and my heart goes wild as I experience him inside me, his cockhead stretches me around him, moves just a little, sliding inside me and it's enormous and it's so hard and my back is arching upwards and oh fuck it's so big it's so big it's so big and I'm so stretched around his thickness where he's entered me.\n\n\"Ooohhhhhh,\" I cry out, my head arching back even further. He's moving into me, pushing into me. I stretch inside for him, that huge plum-sized cock-head stretches the walls of my channel remorselessly as he pushes a little further up inside me.\n\n\"Aaaahhhhhh.\" I cry out again. He eases back until only the head of his cock is inside me and he pauses, my entrance clamped around his girth right where there's that rim that I was running my tongue around so eagerly only a little earlier this evening.\n\nI gasp with momentary relief. It's only momentary because after that brief pause he's pushing inwards again, his cockhead pushing inwards against the resistance of my channel and I'm so wet and slippery on him as he pushes into me and I'm so stretched around him where his hugely thick shaft is sliding through my entrance, my labia are stretched around him and it burns, it hurts and he's enormous and he's huge and I didn't expect this at all.\n\n\"Hhhuuuunnnnhhhhhh.\" My groan is long and low as I arch beneath him again, beads of sweat breaking out across my forehead. No, I didn't expect this, I didn't expect this at all and his cock, it's inside me, he's pushing into me and it hurts. It hurts.\n\n\"It's okay .... it's okay, Kylie,\" he breathes and he's kissing me, his cock is easing back and there's a momentary relief but then it's not okay, it's not okay at all and it hurts again because he's pushing inwards again and my hands clutch at his where he pins them to the floor above my head and I realize he's not stopping. I look up at his face and I see his expression and his eyes looking into mine and he wants me. I know he wants me so much and I can see the desire for me there.\n\nHe wants me and he's doing this to me, he's moving inside me and now I know what it is that he wants, what he intends to do to me and it's not a blowjob that's going to finish this. He has far more than a blowjob in mind and he's moving, pushing, easing himself back, pushing into me and inside, my channel is opening to him, stretching around him and I'm helpless beneath him. So helpless and it hurts and I'm not sure about this, I'm not sure at all but he's in me and he's moving and he's not stopping, he's going to take me and in my mind I've already surrendered to him.\n\nPain, sharp and sudden. Pain that brings tears to my eyes as something inside me is torn open, pain that has me bucking beneath him, my knees suddenly clutching at his ribs, my heels beating a wild little tattoo against his hips as they lift and fall, driving his cock deeper into me. \n\n\"Owwwww ... ohhhhhh ... ohhhhh .... Owwwww ... owwww.\" He's pushing in, it hurts, it burns, my channel stretches around him and there's this enormous intense pressure deeper and deeper inside me and I can barely stand it, I can barely breathe as he continues to work his cock into me. Oh fuck, he's so big, it's stretching me so much inside and where he enters me and ow oe ow owwww.\n\n\"Owwwww.\" I cry out, \"ohhhh. ... ohhhh ... owww ...ohhhh.\" He doesn't stop.\n\n\"Oh fuck,\" he groans, \"Fuck, Kylie .... Oh fuck you're so tight ... your cunt's so fucking tight....\"\n\n\"Uuughhhh,\" I groan, \"Uggghhhh .... Nnnghhhh .... Uggghhh.\" Oh god, he's right. I am tight. I'm so tight on him and his size dwarfs his two fingers, dwarfs my own finger. Oh god and my eyes fill with tears. It hurts. It hurts.\n\nMy hands clutch desperately at his, my head jerks back, his weight pins me, his legs spread me and hold me wide open for him to take. His cock thrusts in and out where we join, sliding in and out without cease, working its way deeper and deeper into me and I feel his every movement. He's pressing into me, he's stretching me and his cockhead is this enormous presence deeper and deeper inside me, shaping me inside to meet his need, he's pressing inwards at the juncture of my thighs where I'm stretched like a rubber band around him so that I can barely stand it and my forehead is beaded with a sheen of sweat.\n\n\"Kylie .... Kylie ...,\" he groans as his cock works its way up inside me, deeper and deeper, in and out and his hands keep a firm hold on mine and I arch and move beneath him in a helpless attempt to escape this invasion of my body that goes on and on and on and on. I know what's happening, he's taking me, he's intent on fucking me and he's not going to stop and somehow, despite the pain, now I don't want him to stop either. It hurts but I want him. I want him to take me completely and the pain I feel is incidental now.\n\n\"Aaaaahhhhh ... owwwww ... ooohhhhhh....uuuuhhhhhh.\" My own moans and cries and groans are intermingled with his groans and of enjoyment and he doesn't stop, there's no surcease from this relentless impalement. I don't ask him to stop. Now that it's happening I don't want him to stop. Despite the pain, I want this. He's taken my virginity and I want him to take me completely. I want to surrender myself to him. I want him to make me his completely. I want him to make love to me. I know it can hurt the first time, my friends say so, some of them. Well, this hurts but they say it gets better and it's not hurting as much now.\n\n\"Kylie .... Kylie,\" he groans as he moves inside me. \n\n\"Ohhhhh,\" I sob. \"Ohhhhhh.\" How much more of his cock is there? It's enormous inside me but with every movement of his body, there's still more of him easing up deeper inside me and I'm in a daze. Just how much more of him there is? How much more of him can I take? Eight inches was what he'd said, I remember that. This seems like a lot more than eight inches and somehow, it feels a lot thicker inside me that it did when I was holding it in my hand and when he was in my mouth.\n\nHis hands continue to pin mine to the carpet above my head, his body continues to move on me now, his cock thrusts into me again and again, sliding up inside me in long slow movements that fill me. Again and again they burrow into me. My entrance clasps him in a tight embrace as he slides into me, my labia are stretched around him, the girth of his cock far exceeds those two fingers of his and I'm so stretched around him where he joins me at the juncture of my thighs.\n\nMy knees clutch at his ribs, my heels continue to bounce against his hips with his every movement and I'm so aware of how my body is completely at his mercy. I'm positioned for him to take, his body on mine has me where he wants me and I'm helpless to do anything other than what I'm already doing. Lying there and taking his cock and I know I want him to take me. I do want this, I want to be his. It's not what I'd anticipated but now that's it's happening and he's doing it to me, he has my surrender. I want to be his, I want him to take me completely. I want him to make love to me. I want him to do this even though it's straining me to my limits. I want to be his.\n\n\"God, Kylie,\" he groans, \"you're so tight.\" His cock slides up inside me once more, he's almost all inside me and he knows it, I can see his expression, he wants all of it, everything and he pushes against that residual resistance deep inside me and I feel him surge that last inch up inside me.\n\n\"Hhhuunnuhh.\" I groan, quivering, surrendering. Taking everything he wants me to take.\n\nHe's pressed up hard against me. His pelvic mound grinds against my exposed and vulnerable sex, an intimate contact that makes me completely aware that all of his length is in me. He's all the way inside me. I have all of his cock. I'm so full. His cock pierces me, reaching halfway to my heart. His balls brush my butt and even that light touch I feel and I've never felt this helpless in my life. I'm fucked. Nick. He's got me. He's in me and I look up at his face and I know he's about to fuck me.\n\nHe knows too. He holds himself still inside me. He's smiling down at me. \n\nI'm so aware that of his cock is finally inside me. That and his body on mine is all I'm aware of. He's pressed up hard against me where we join and now, our bodies joined but still, his balls brush my butt as his cock fills me inside. Both of us are panting, I'm sweating, a sheen of sweat covers my body everywhere and the pressure inside me is so intense where he fills me. My channel is spasming around him, contracting on him, squeezing him as I continue to adapt to this invasion of my body by his hard male flesh.\n\nI look up at his face above mine, feel his weight on me, his hands pinning mine to the carpet, his body pinning mine beneath his. His thighs spread me wide for him to take, his weight holds me in place, his chest presses down against my breasts, his mouth possesses mine whenever he wants to kiss me. I'm his now, he's made me his, he's taken me, he's taken my virginity and now he intends to make love to me. It's not what I'd anticipated when I walked in here but now that it's happening, I so want him to complete this act, I so want him to make love to me. He continues to hold himself still inside me and he's so big. \n\n\"Are you okay?\" he whispers. His nose is brushing mine. His lips brush mine again. He doesn't give me any time to answer. He's kissing me gently. \n\nI'm kissing him back. Kissing is something I know how to do even though all my mind is focused on what he feel like inside me. I've never experienced anything like this feeling, this rigid length that fills me inside and I can feel him all the way up within my body. He's rigid, he's long, he's thick and he's inside my body. It's like somebody has taken something large and hard and impaled me with it and there's no escape from this and it's so strange.\n\nThat's not all that's so strange and new. It's his body on mine, his weight and I mean, I have a boyfriend. We kiss. We make out, he's lain on me when we're kissing, a guy's weight on me isn't new. It's not that at all. It's that I'm naked and he's naked and he's on me and it's the way he's spread my legs so wide, so far back so that I'm wide open, so vulnerable, so helpless. I've never felt like this. I'm one of those confidently assertive girls who's always on charge, always in control and now I'm not. Now I have no control at all and it's the way I'm positioned.\n\nOn my back, my hands pinned to the carpet above my head, it's like I'm surrendering. I am, I have surrendered and the way he holds my hands accentuates that surrender, both physically and in my mind. My legs are drawn so far back, I'm spread wide, the most intimate part of my body is exposed and vulnerable and positioned so that I'm vulnerable to him and he's using that. His cock enters me at that most vulnerable part of my body. Enters me and impales me.\n\nWe're joined there, at the juncture of my thighs. The rigid length of his cock penetrates me, stretches me around him and he's inside me, he's pressed up against me, his cock impales me, fills me. His face looks down into mine, the hard muscles of his body dominate my softness, his size overpowers me. I've been taken, he's taken me. I'm his. I've been taken by a man and I'm all his. Not just any man. By Nick. The older guy I've had this total crush on has made me his. \n\nHe's making love to me.\n\nAt last, still panting, I half smile up at him. \"Nick,\" I breathe. His name rolls across my lips, my lips reach for his. He kisses me, he continues to kiss me as I lie beneath him, absorbing this new experience, adjusting to him inside me, adjusting to his cock. It's not hurting now, not anymore. Instead there's this exquisite fullness that's on the verge of being uncomfortable but isn't and I know he's going to make love to me and now I'm sooo very happy and I can't stop my smile as I look up into his eyes. \n\nHis hands release mine, one of his arms slides under my neck, his other hand brushes me hair back from my forehead as he looks down at me. \"Kylie,\" he breathes, and his kisses are magic, \"are you okay?\"\n\n\"I can feel you all the way up inside me,\" I gasp. My hands remain where he left them, resting on the carpet, above my head. \"I'm okay, it's just, don't move, it feels so strange.\" I bite my bottom lip, gasp as my channel spasms on him. Oh Jesus, he's so big in me. Are all men this big? \n\nHe smiles. \"You feel so good, Kylie.\" He kisses me. \"You're so beautiful.\" His kisses go on and on and my mouth is wide open to him and my body is his and he's inside me and he's going to make love to me and I know I'm going to be so completely his and its wonderful and I'm glowing and his cock is so big and hard and its inside me. "
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "chinese",
        "virgin",
        "first time",
        "missionary",
        "asian",
        "blowjob",
        "anal",
        "18 year old",
        "april fool",
        "chloe tzang"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/fingerprints-on-my-heart"
}