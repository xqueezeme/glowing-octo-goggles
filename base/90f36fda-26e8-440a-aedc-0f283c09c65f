{
    "title": "Play Testers Wanted Pt. 16",
    "pages": [
        "[0] Rebuilt and Reacquainted\n\nI woke in the White Room. Had the game crashed? The genderless interface appeared, but it was Kat Shaw's voice speaking through it that startled me.\n\n\"Hey, listen... shit has kind of hit the fan.\" She began but did not sound upset, only strangely stern. \"Some of the regular Star Wars players caught wind about you and a few other play testers that found the portal. You know the one between Star Wars and Marvel.\"\n\n\"And?\" I asked and heard Kat clear her throat.\n\n\"Well, you need to separate your Star Wars side from your Marvel one. Take time and use the points and XP you have earned to fashion two individual characters. Sorry.\"\n\n\"Don't be. The other players have every right to be upset, and I will start with the Marvel one. That is my core character anyway. Let us see,\" It was easier fleshing out Ghostfire than Katria. Ghost was well defined in my head, while Katria was more an alternative Ghost persona than a separate being. I was overjoyed when I learned that I could keep my shapeshifting in both universes. It was the one bonus Kat could provide as one of the top players in either game. I lost my vampire abilities on the Marvel side. I had to keep them in Star Wars as they were integral to the Darth Nocturnal storyline. It would be nice not to have that hanging over my head all the time. I had the Darksaber for the Star Wars side and Death Kiss and the Svartalfar dagger for Marvel. \"You changed the damn interface again. Ugh.\" I laughed.\n\n\"There are new synergetic skills, so keep that in mind. So that you know, those last skills you picked up are unique to you. No one else solved the puzzles fast enough to gain them. If you share them be choosey.\" Kat advised, and I heard the trepidation in her voice.\n\n\"Listen, I can give them up if you feel better. I can have just as much fun without those skills. However, I do like Kun's unique fighting style. The wind sword technique is a bit O.P.\" I admitted, and she let out a sigh of relief. \"Tell you what, you give me a discount on blueprints and cost for supplies, and we can call it even. Ooh, by the way, I have an idea for a new speeder.\"\n\n\"Agreed. What is your idea?\" Kat asked, and the worry crept back into her voice or was it simply nervousness.\n\n\"A stealth speeder armed with Mandolorian weaponry. I reverse engineered one of those blacklight blaster rifles. I want to build a blacklight cannon for underneath and two blasters on top.\" I said and heard her sigh. \"You guys can sell them as you see fit. Think of spies and assassins buying them up. Just give Katria credit.\"\n\n\"Fine. Just be careful.\" She said, and this time I sensed genuine fear. \"You hold the top views on both your channels. Yes, we created two official channels for you. On average, you are getting ten million plus views on either of them. If I were you find stories you can film. Your account is getting some serious coin from advertisers and subscribers.\"\n\n\"I will keep it in mind,\" I said as I spied a new icon on the skill web. Ooh, a three-way synergetic bonus. Traci highlighted my best configuration, and I liked the way it felt. It nicely balanced Force powers, skills, and fighting forms with engineering and forging. I had lost a few rogue skills, but I did not have to rely upon those so much. I finalized both character sheets, and they rewarded me with a new skin for my Je'Daii Master robes. The devs and monitors also removed characters' ability to craft particular robes, armor, or weapon designs. They could only earn them through storylines or not at all. Namely, players were creating Je'Daii items outside the campaign. The devs did not approve, and this was their way of putting a stop to it. They could also not name things using labels secured for special or reward items. After three cursory looks, I found both character sheets to be the best build, given the resources at my disposal.\n\n\"All done!\"\n\nThe White Room faded, and I was standing over the prone figures of Whisper, Aoki, and Kyanna. HK-47 trundled in and announced that we were about to drop out of hyperspace. I felt the background vibration shift through my naked feet.\n\n\"Wakey-wakey, we are here, wherever the hell that is,\" I said as the others stirred.\n\n\"Where are we?\" Kyanna asked as she shifted to a sitting position. Whisper rose and leaned against the trunk of the Force tree. It had never given us a name, so we settled on the simple, inelegant title, Force Tree. Aoki rolled from her back to her belly and got to her hands and knees. I smiled, and she laughed as she thrust her ass up and pushed her breasts to the decking.\n\n\"Expert level of doggy style,\" Aoki declared.\n\n\"I was not aware there were levels,\" I admitted.\n\n\"Well then, behold,\" Aoki purred. \"Basic is so.\"\n\nShe rose to a new position with her back parallel to the deck, arms, and legs at a perfect ninety-degree angle. The next stage of doggy was when she walked her hands forward until her arms were at a forty-five-degree angle. The third form allowed her to bend her arms at the elbow and rest her forearms against the decking. This position lowered her head and formed a fifteen-degree angle from head to ass which was now noticeably higher. With a wiggle of her ass, she returned to her original pose with her ass up high, tits pressed against the floor, and a smile on everyone's lips.\n\n\"The three of you might just have to show me again,\" I suggested. \"I am a little confused on that one.\"\n\n\"You never answered my question,\" Kyanna stated.\n\nShe placed hands on her hips and grinned. Aoki and Whisper looked to me for answers.\n\n\"No clue,\" I replied. \"H.K.?\"\n\n\"Query. Do I look like a navicomputer to you?\" The droid replied.\n\n\"Never fucking mind,\" I snapped, realizing I had not fed recently. I moved to the pilot's compartment and looked at the readout. \"Lehon. We are deep in the Uncharted Regions.\"\n\n\"Lehon?\" Aoki said as she got to her feet. \"Never heard of it.\"\n\n\"Incoming transmission,\" Whisper announced as she hopped into the pilot's seat. She worked the controls and placed us in a stable orbit. \"That is strange. The signal is not coming from the planet below.\" Whisper's fingers worked the keyboard. \"I am triangulating, and it appears that the transmission is originating from the star. There must be something artificial orbiting it. There is too much interference from solar radiation to get a clear look.\" She paused as her fingers danced over the controls. \"Holy shit, we are orbiting Rakata Prime!\"\n\n\"Display the transmission.\" I directed as H.K. walked off towards the cafeteria. The holographic emitter activated. The hologram displayed a random string of numbers.\n\n\"They are transmitting using base three. Translation might take some time to decipher.\" Whisper informed us. The agitation grew as I fought the hunger and tried to keep my thoughts clear. It was Aoki that noticed and giggled. She took my hand and drugged me towards the captain's quarters.\n\n\"Come on, Grumpy, you have not had breakfast yet.\" She said, and Kyanna followed. \"We have plenty of time for Whisper to decipher the message. Base three that is like zero, one, and two, right.\"\n\n\"Yeah, maybe whoever is sending it only has three digits,\" Kyanna suggested.\n\n\"Gods, I can't think straight,\" I grumbled as the door slid shut behind us. We sat at the foot of the bed while I fed. The anger fled, and what followed could only be described as a long leisurely getting to know you again. H.K. entered without announcing himself and, clutched in his elegantly designed hands, was a tray laden with fruits, cheeses, and coffee.\n\n\"Statement. Meat bag Master and his fornication partners should keep up their strength.\" He said, and we all laughed.\n\n\"What do you make of the alien transmission?\" I asked H.K., not expecting anything but a snarky comment.\n\n\"Statement. I suspect there is a biological component present. Addendum, I have looked at the raw signal, and it is unique. Clarification. While I have pretended to be a protocol droid in the past, it was necessary to acquire a language preset. Emotional response. Fascinating.\"\n\n\"What is so unique?\" Kyanna asked, and instead of getting pissy, H.K. responded civilly. Well, as civilly as could be expected.\n\n\"Response. Being a simple meat bag and not seeing it, you would not know the full extent of the signal's complexity. It ranges all over the E.M. spectrum and yet is cohesive, concise, and completely incomprehensible. Intended sarcasm. Good luck translating it.\"\n\n\"I got it!\" Whisper hollered from the bridge.\n\n\"Emotional response. Bitch.\" H.K. cursed and stalked off.\n\nI took a quick shower, and all of us gathered behind the Lethan Twi'lek. She showed us the information packet that preceded the bulk of the transmission. The design of the message screamed comprehension. The broadcast became legible after using the data packet, but still, it proved a mathematical enigma. The equation was inscrutable and proved a bitch to solve. One thing was clear, though. We were not to approach the thing orbiting the sun before we solved this puzzle.\n\n\"Let us land, stretch our legs, and work on this thing planetside. You two need to touch the Dark Side and find your balance.\" I suggested.\n\n\"Whisper, any sites look good to set down on?\" Aoki asked, stroking her fellow Twi'leks lekku or head tails.\n\n\"Stop that. I can't think straight when you do that,\" Whisper purred. \"Scanning. There are dozens of power sources scattered across the planet's surface, but only one shows any significant output. It looks like a temple complex, typical Rakata architecture big, tall, and intact after nearly twenty thousand standard years.\"\n\n\"Works for me,\" I said, and she plotted a course, and down we went. Lehon, or Rakata Prime, is made up entirely of thousands of archipelagos. Tens of thousands of islands of varying sizes and shapes dotted the watery surface. The largest was a bit greater than Japan's Honshu island. The island also happened to be the source of the power signature. We flew over once before landing, and that is when we saw them.\n\n\"Rancor! There are packs of wild Rancor all over the place,\" Kyanna exclaimed. \"We can't land here. They will tear the ship apart!\"\n\n\"Land near the split spire,\" I ordered as Whisper swung the Ivory Wraith around and landed. \"First lesson of the day, how to enthrall an animal intelligence. Who wants to be a beastmaster?\"\n\n\"What makes you think that you can control one of those?\" Kyanna argued, which surprised me. Then I realized that the Dark Side nexus was affecting her. Fear leads to the Dark Side. I opened my inventory and called up an old friend that I had woefully neglected.\n\n\"I am sorry old girl,\" I said, watching to see how my two students dealt with the camouflaged newcomer.\n\n\"I sense something.\" Aoki declared. \"No menace, just curiosity.\" She smiled, knelt, and was summarily knocked down and licked furiously. \"Cut it out.\" She giggled. The exomorph revealed itself, and Kyanna's hand drifted to her lightsaber. The exomorph froze and locked eyes with the green-skinned Mirialan.\n\n\"The Dark Side has you in its grip,\" I said, observing. \"Will you be mastered, or will you master it?\" Kyanna closed her eyes, and I felt her tap into her wellspring of strength. She wrestled with, and in the end, she won out. The exomorph returned to playing with Aoki. \"Excellent, now tap into it and the Light Side and let them move through you. If it helps, imagine you are in a spherical Yin Yang. It is constantly in motion, and one leads into the other, an eternal circuit if you like. Good, I can feel the balance within you.\"\n\n\"I have never felt so complete,\" Kyanna exclaimed. \"It is so difficult to maintain.\"\n\n\"You are trying too hard. Just let it be. Ignore it and let your power find its natural flow.\" I instructed her. \"Now you...\" I said and looked at Aoki in shock. \"Well, I will be damned.\"\n\n\"My grandmother raised me,\" Aoki began. \"I was taught from a young age that too much of anything is a bad thing. I have always lived my life that way. I hid my connection to the Dark Side early on. I was afraid you would not like me.\" The exomorph pounced her again and licked her face. \"I am proud of you both. Let us try and wrangle some Rancor, and then we will visit the temple.\"\n\n\"You called it the Split Spire,\" Kyanna stated and cocked her head to the side. \"Did you learn that from a Holocron?\"\n\n\"I did indeed. Speaking of Holocrons HK... can you gather my guest so he can see his homeworld again.\"\n\n\"Statement. Yes, Master.\" The assassin droid said, leaving off for the first time the title of meat bag. We were all changing, and I wondered if the transmission was influencing the droid.\n\n\"HOME.\" My Rakatan master boomed. \"I am home.\" He shouted as H.K. carried him onto the bridge.\n\n\"We are near the Split Spire. I am leaving you here, old friend.\" I declared, and the Holocron fell silent. \"The circle is now complete, and it is time for you to join the others.\"\n\n\"You have a Rakatan Holocron,\" Kyanna exclaimed in shock. \"No wonder you are so strong in the Dark Side.\"\n\nThe ramp lowered, and a rogue male Rancor greeted us with an ear-splitting roar of challenge. I placed my hand on Kyanna's shoulder, and she reached out and touched the primitive mind of the beast. H.K. aimed at the towering semi-sentient monster and waited for me to give the order. I felt the struggle between Rancor and Kyanna. She began with an all-out assault and failed. She quickly switched tactics and went for seduction. The clever little minx triggered the pleasure centers of the thing's brain.\n\n\"Aye-Yah,\" Aoki exclaimed when the thing sported an erection of epic proportions. \"Keep it away from the ship's engines.\"\n\n\"Statement. You are sick.\" H.K. remarked as his optics turned green.\n\n\"Go on, big fella, find yourself a nice willing female... of your species,\" Kyana whispered as she released it, and the Rancor bellowed a second time and went in search of a mate.\n\n\"Not bad for your first time.\" I chuckled. \"Some girl is going to be lucky... dear god, tone it down, you two.\" I laughed and left the ship's safety with Holocron in hand. We strolled up the stone path to the temple. Whisper elected to stay behind and handle the ship's defenses. The Split Spire stood over a hundred feet in height and took its name from the stone and alloy adornment that made up half its height. The design reminded me of the chess piece called the bishop. The smooth upswept teardrop shape with the gouge cut out made the wind moan and whistle between the flat interior sides. The haunting sound greeted us as ten-foot-tall blaster doors opened, and we entered the ancient complex. \"They know you are here,\" I said to the Rakata gatekeeper.\n\n\"Of course they do. I am a ranked master,\" It said ever so humbly.\n\n\"No dust, no damage, it looks brand new,\" Aoki commented as we followed the ramp down to the main floor. There were hundreds of banks of computers, displays, and towering mysterious mechanisms. The center display awoke, and a holographic image of a Rakatan appeared.\n\n\"Welcome back, Master,\" it said in its native language.\n\n\"Thank you, the being holding me is my former apprentice and known as Darth Valakhor.\" The Holocron introduced me to the keeper of this place. It was one gatekeeper greeting another.\n\n\"I bring my Master home,\" I replied in the Rakata tongue.\n\n\"We will place him with the other honored masters. They will be pleased to have a new mind to occupy them.\" The image replied. \"Your appearance has been anticipated.\" A set of double doors slid silently open, and a heavily armored droid strode in and made his way towards us.\n\n\"We received a transmission from something orbiting your sun,\" I said as what must have been a Rakatan war droid appeared and took the Holocron from me. Like so many other races past and present, the droid's design mirrored its creators' basic anatomy. The gleaming chassis and haunting red optics gave it a menacing appearance.\n\n\"You speak of the Star Forge.\" The digital intelligence explained. Those two words brought a flood of memories and sensory input. I fell to my knees, remembering my destiny. One of my other selves had been here, and now I was finishing the temporal loop. The Star Forge would build the Heart of Korriban, my flagship. Battle droids of my devising would operate it, and we would strive to crush both the Jedi and the Sith beneath my heel. The sister ship would vanish in the battle, and Xim the Despot would claim it for her own. I would discover the Heart of Korriban and my corpse in orbit around the Viridian Pulsar. I felt sick. Time and space were colliding, and I was at the epicenter.\n\n\"Master?\" Kyanna stood behind me, cautiously observing but not interfering.\n\n\"Boy, are you in for a trip,\" I managed before a Rakatan protocol droid appeared to guide us to a place of rest. This new droid had a noticeable female softness to its features, limbs, and delicate digits. Her markings bore the droid's name, PL-42, and she moved smoother than the war droid. I paid attention to her hip servos and how they affected her movement.\n\n\"Are you checking out that droid's ass?\" Kyanna laughed.\n\n\"Yes and no,\" I said and fought the urge to giggle. \"I was comparing the difference between the combat and protocol droid. The war droid has a staggered if stocky movement. PL-42 is more fluid and biological. I think she might inspire as assassin droid or bodyguard model.\"\n\n\"Are you alright?\" Aoki asked as we left the control center and down one of many tunnels to the observatory. \"When it mentioned Star Forge, well, you fell to pieces.\"\n\n\"I am fine now,\" I said, looking around at the boundless domed chamber. Here, via holographic projectors, was displayed the entirety of the Infinite Empire. Every world where the Rakata touched and enslaved the native populations was ours to look at and interact with if we chose. \"Kashyyyk, Corellia, Ilum, Ossus, and dozens of others. Where there was sentient life, the Empire reached out and claimed them. Even the Rancors were brought here as an amusement. The Star Forge and the endless supply of ships, droids, and war supplies made it possible. It took energy directly from the star and converted it into raw matter of any shape or configuration the forge required. It was a miracle of technology and the Dark Side of the Force. I reached up, and one of the spheres dropped down, and I held the Wookie homeworld in my hand.\n\n\"I have never been there yet,\" I said as the ladies munched on the exotic food provide by the droid. \"How are you getting along with that transmission?\" I asked, tapping my earbud and speaking to Whisper.\n\n\"I found a second data bundle. My gut tells me there should be a third.\" She replied calmly. \"Oh hey, the weather is turning shitty. Does this planet have monsoons?\"\n\n\"No clue,\" I replied when a new model of droid hovered in. It reminded me of a more organic-looking probe droid. It was a blend of octopus, dragon, and jellyfish. The metallic casing was translucent, and its insides were visible and glowed in seemingly random patterns. Its tentacles fluttered below it and appeared to be part of its propulsion system. The underside of it, where the beak would be, gave off an ethereal blue radiance.\n\n\"Master, would you like me to direct you to sleeping quarters, or would you prefer to retreat to your vessel?\" The droid asked, and as it spoke, the random pulses of light from its interior became a pattern. \"The storm time has come, and it will last some weeks.\"\n\n\"Time to go,\" I said, not wanting to overstay our welcome. This new droid gave me a bad feeling and did not appear to be made by the Rakata. I could not tell you why but my instinct screamed retreat and regroup. We hauled ass back to the Ivory Wraith. The first drops of rain were falling as the ramp dropped. By the time we reached the bridge, a steady downpour was falling. An hour later, the full might of the, oh why not call it what it was, a fucking monsoon struck. The power of the tropical storm manifested, and my ship shook like a woman in the throes of passion. I opened the iris on the roof and lay on the decking, watching the storm as my students practiced the lessons I laid out for each of them. The fury of the storm held my fascination and gave me respite from the inevitable. Time was circling like the ouroboros, and as the lightning was getting incredibly intense, Whisper's voice pulled me back to the present.",
        "\"I do not get it.\" She snapped, confused. \"When is zero, not zero.\"\n\n\"Huh?\" I said as I sat up, forsaking the storm.\n\n\"I found the third packet, but it doesn't make any sense.\" Whisper snarled. I got to my feet and looked over her shoulder at the screen.\n\n\"Here,\" she said, her fingers tapping out commands. \"Is your typical number line. The pulsing blue dot is zero. To one side are positive numbers, and to the other negative.\" She said the flat line bent and formed a V-like shape, and then a third line shot downward. \"Each is 120 degrees apart, and here is where my head hurts. Let me color code them so I am not alone in this. The blue line represents positive numbers, the red is negative, and the green is zeros. The packet's language to describe the third line, the absolute line, has no easily referred descriptors. Any ideas?\"\n\n\"Positive. Negative. And then, like you said, when is zero, not zero. A number that is neither positive nor negative, ugh. Wait, hold the hell on. What if you got the first two packets wrong. What if those represent quantum states? Instead of being a positive number, there are X particles on. The second line is how many particles are off, and the last one is undetermined. We know how many particles but not their state. They remain unobserved.\" I blurted out, and it made my head hurt, and if I was a judge of sentients, Whisper was equally baffled.\n\n\"Statement. On or up,\" H.K. began. \"Off or down. These are basic concepts of a binary state, in effect zeros and ones. Supposition, this race has taken it a step further and somehow incorporated a third undefined state. Let us call them queries or question marks. I can see where Master is going with this to a small degree. Restrictive statement. My programming is quite limited in the field of theoretical mathematics. Proposition, if this species incorporates such an aspect, we are out of our league. I strongly suggest the application of high explosives when all else fails.\"\n\n\"What is the bulk of the transmission?\" I asked Whisper even as I silently agreed with H.K. We may need to destroy the Star Forge. It represented a clear and present danger to the entire galaxy. \"When the rain ends, we can speak with the Rakatan A.I. and see if our theory is correct.\"\n\n\"A series of ever-growing complex equations. It looks like a test. Maybe whoever is running the damn thing wants to see if we are intelligent enough to access it.\" Whisper offered. \"What do you want me to do, boss?\"\n\n\"I need to clear my head. Send me the equations, and I will see what I can do.\" I said as I stripped down. The others whistled and made some interesting lewd suggestions which I found rather complimentary if crude. \"I will be outside practicing.\"\n\n\"Practicing... practicing what?\" Aoki asked.\n\n\"Tutaminis,\" I said. My head needed a good cleansing blast of lightning or two. I lowered the ramp, stepped outside, and moved to a safe distance from the Wraith. My undead status made the biting wind-driven rain a minor inconvenience. Once I was far enough away from the starship to risk being struck by lightning and not having it arc to my vessel, I raised my arms skyward.\n\n\"Oi,\" Left cried aloud over the raging storm. \"What has gotten into you?\"\n\n\"Oh hey, I need to clear my thoughts, and nothing does that better than pushing my limits,\" I replied as I called down a bolt of sky fire. It struck my upraised limbs, passed through my body, and then dissipated into the soggy ground. Small pools and puddles arced with residual energy. \"Damn, I needed that,\" I exclaimed as Left bitched and moaned. \"Besides, I need to raise my Tutaminis level.\"\n\n\"You know we both feel that right.\" He laughed. \"You are one crazy...\"\n\n'Ber-Zapp!' The next bolt knocked me to my knees.\n\n\"...I felt that one!\" Left roared in delight. I stood tall, reached up higher, and my world went white. The storm stood suspended between one second and the next. The rain was frozen midair, the lightning hung suspended, and even Left's ever-present existence was gone. I was alone and had this moment to contemplate the equations. The first one was easy enough to solve--the next a bit harder, and so on. I reached the tenth challenge and was stumped. Its complexity defeated every attempt I made to unravel it. I retreated to the ninth equation and compared them, trying to find a clue, but they were on two different levels. Did I need to solve all of them to access the Star Forge? I withdrew and looked around at the static environment. I was not alone. Someone or something was there with me. I sent my thoughts out, but they could not pierce the bubble around me. The moment I dwelt in was as hard as diamond and just as resistant to change.\n\n\"Kaiburr.\" The sexless voice uttered before the storm struck. My bubble burst, and I was back in the real world again.\n\n\"Kaiburr?\" I uttered, and Left asked me what I meant by that. \"Didn't you hear it? It said Kaiburr.\"\n\n\"Nope. I did not hear shit.\" Left informed me. I moved to a sitting position and let the rain and wind pelt me relentlessly as I dove deep and pondered what the single word meant. Kaiburr was the crystals both Jedi and Sith used to channel the Force into their weapons. Pomojema, the healing god of Mimban V, had a massive Kaiburr crystal set into his/her/its chest. It warranted a look when things here settled. There was only one clear course of action. \"Traci, how many different Kaiburr crystals do I have in my inventory?\"\n\n\"Colors or actual varieties by planet and origin?\" She replied.\n\n\"Distinct origins, whether it is a planet or varying abilities.\" I fired back excitedly.\n\n\"You have found or created over thirty different crystals.\" She said. \"For the record, the Je'Daii Grandmaster left you nearly half of those out of friendship.\"\n\n\"Time to take a deeper look,\" I said as I leaped to my feet. \"I am coming in.\"\n\nWhisper lowered the ramp, and I strode in with steam wisping from my flesh as I took a hot shower to revitalize my senses. I had H.K. activate the ship's lab, pulled out my entire collection of Kaiburr crystals, watched my students gawk, and asked where I had found each one. The four states of Vorpalite proved easiest to analyze. As Traci identified them, the impact crystals were solely unnatural, as was the synthetic red crystal I had gotten from one of my Sith adversaries. I created Vorpalite by using the full might of Force Burst on a location containing mineral deposits. The raw energy and sheer impact of the discipline transform those minerals. These four showed similar strata and crystalline configurations. The chemical composition proved different, though. The furnace and recipe used to forge a red crystal differed significantly from the naturally occurring minerals from the rock face on Tython. Though there were naturally occurring red Kaiburr, they were just exceedingly rare.\n\nI displayed everything above me as I diligently went from one crystal to the next. I saved the black and clear diamonds from the Darksaber for last. Luckily, I had a second Ghostfire crystal to compare against the diamond I had rescued from the Negative Zone. The lattice structures were remarkably different, and yet the similarities outnumbered the variances. I looked up, and with a gesture, I merged all twenty or so holograms. After a moment, Traci produced a single image, an illustration that revealed the core constants that all Kaiburr crystals possessed.\n\n\"There is a parent template they all follow.\" I gasped as Aoki and Kyanna stared at it.\n\n\"What the hell does it mean, though?\" Kyanna asked.\n\n\"I have no fucking clue, but it hints at a common ancestor or origin point,\" I stated. \"What allows a Kaiburr crystal to grow?\"\n\n\"A Force nexus?\" Aoki offered.\n\n\"Korriban does not produce Kyber crystals,\" I said, knowing the world intimately.\n\n\"Do you think just light side nexus then?\" Kyanna said, unsure.\n\n\"I do not know. Many places are strong in the Force I have not visited yet, so I cannot answer that question. Dathomir. Here on Lehon. Tomorrow we begin training in earnest. I need to meditate on this.\" I stated, and they found quiet spots of their own to ponder.\n\n\"Ilum. Ossus. They have crystal aplenty or did for a time.\" Left whispered once the ladies had left. \"A dozen other worlds had a single type and in tiny numbers. Your namesake is on the peak of one mountain on a backward world.\"\n\n\"What makes a Kaiburr crystal grow? I mean, you said the top of a mountain. It cannot be geological activity, then. A mountain top is as inactive as possible, or the Ghostfire is the oldest crystal in the damn galaxy. If they were born while the area was active, that would make them millions if not tens of millions of years old, wouldn't it?\" I pondered aloud.\n\n\"Quartz takes only a few thousand years to form in the right conditions. The question is, what are the right conditions for Kaiburr to grow.\" Left mulled it over. \"How is that new speeder design coming?\"\n\n\"New speeder?\" Aoki's voice called from the center of the bridge. She was leaning against the Force tree, and they were in communion or had been. \"MMM... what are you working on?\" She purred.\n\n\"Oh hell, you better tell her already.\" Kyanna urged. \"You may not know this, but in another life, she was a professional racer. If you want suggestions or a test pilot, you can ask for none better.\"\n\n\"I was going to make one for both of you, and seeing as you are a pro, take a look.\" I relented and displayed the basic prototype of the stealth speeder. \"I am arming it with blacklight weaponry. I reverse-engineered the Mandolorian rifle I found and designed its big brother, the blacklight cannon. I have not even run it through the wind tunnel yet.\"\n\n\"Why is the ass end up so high? What is with the split-tail design?\" Aoki asked, and I touched the display control that revealed the speeder's biggest combat surprise. \"Holy mother of... you are a freaking genius!\" She praised me when she saw the under-mounted cannon spin around 180 degrees, swivel up between the split tail so it could target foes pursuing the speeder.\n\n\"It beats dropping back and wasting valuable time shooting them that way. The weapon gives the pilot a targeting display to attack while hauling ass to their destination. I already have a small enough stealth field generator to fit it, but there is one major problem plaguing it.\"\n\n\"What?\" Aoki asked.\n\n\"Ground disturbance,\" Kyanna chimed in. \"The repulsor engines create a ground effect disturbing the earth below.\"\n\n\"Yep. It beats the hell out of me, for now.\" I admitted. \"What?\" I asked as Aoki touched the screen revealing the guts of the vehicle. She looked at the turbine engines and how I had muffled them to reduce noise to a minimum. She spun them around and made odd noises.\n\n\"You know what,\" she giggled. \"In another life, these would work.\" She said, doing her best to stay in character.\n\n\"Most of my designs would work in another life, as you say.\" I declared properly.\n\n\"Pity there isn't a power source to make that bad girl go,\" Aoki said with a severe pout.\n\n\"Want to see the speeder bike version?\" I asked, and there went the rest of the afternoon. The three of us brainstormed, and both speeder and bike took on a definite form. Aoki was invaluable when it came to redesigning the speeder bike's controls. She helped with a more ergonomic and user-friendly configuration. She preferred a reclined model to one where you sit upright. The vehicle's light armor protected the pilot and improved on its streamlined design.\n\n\"That will let it go faster and more maneuverable. The pilot being closer to the thing's center of gravity made for speed and control. So, two forward-facing blacklight repeating blasters and the cannon below. Perfection.\"\n\nAs they took a required rest period, I continued. I opened a new file and began work on a droid design, and this one would be a step up from the typical protocol or assassin droids. I even had a designation for this model, DP-69. Her servos would allow her to move and attack with the same agility as a flesh and blood woman. I dropped coin on the schematics to the female [redacted] protocol droid I had seen in the split spire.\n\n\"I fucking knew it. Neither droid is of Rakatan make.\" I cursed triumphantly. I dove deep and understood how clever they had been when they designed her. I gave full credit to the devs on this one. They built her for speed and close combat. The devs crafted her exoskeleton from an unidentified poly-alloy layer with interconnected hexagonal plates that allowed her to quickly disperse damage from the impact area across the other cells of her honeycomb design. Those same cells allowed her to absorb a percentage of energy from blasters and the like to recharge her internal weapons. She had two heavy blaster rifles built into her arms, a flamethrower down her throat, and a small but effective personal shield array. Like my H.K. version, she had two dedicated power plants, one for most of her functions and the second for weapons and shielding. Like an octopus, she has three interconnected brains. \"You would be a bitch to take down.\"\n\nI brought up her schematics and viewed them. She had several deliberate design flaws, and that was disconcerting.\n\n\"Why would they build her like this,\" I said, thinking aloud.\n\nI tweaked her hips, elbows, ankles, armpits, and even her ribbed skeleton. I lost track of time as she slowly took form. I let Traci reassemble the first iteration and sat back and noticed flashing notifications. There were dozens of pieces of fan mail and questions. I recorded responses to each of them and sent them to Kat to post. Rule one, keep the fans happy. Besides, there were some great questions or observations from clever members. There were gold-level messages, and to my pleasant surprise, there were male and female voice actors offering their services to voice NPC companions or droids. Some of them were actors whose names I recognized instantly, some I did not.\n\n\"Play audition clips,\" I directed Traci. She would flash the actor's name and then play their prepared audio clip. Some provided a video file, and most of those were female actors who wanted to tip things in their favor with a smile or tease me with their tits or ass. The first voice that caught my attention had a distinct Russian accent. I turned my head away from the crafting station, and I felt my jaw drop open. Her skin was nut brown, she was naked, and while she faced the camera, her ass was clearly on display. Her name was Liya Silver, and she was very popular as an adult entertainer.\n\n\"Your pulse just jumped, not bad for a dead guy.\" Traci teased me. \"If you like her, take a look at this one, another Russian.\" A curvy blonde danced and moved, showing off her body and several tattoos she possessed.\n\n\"Nata Lee, that is clever,\" I commented. \"Worth a second look, both that is. Let us continue, and I will listen for the right voice.\" I tore my gaze from the curvy blonde. \"Can the droid touch her toes?\"\n\n\"Are you crazy? Let us see.\" Traci laughed. \"Nope. She can bend over, though. Her abdomen is too rigid for that kind of range of movement. If we shrink the hexagonal plating, we sacrifice defense for mobility.\"\n\n\"Show me.\" I directed, and we localized vital areas that limited the droid's flexibility. \"We are getting close to the limit factor. If we give her any more motion, she will fold on the first hit.\"\n\n\"Many droids do, but uh, I have a suggestion to make her sturdier... oh, you are a dirty old man.\" Traci laughed.\n\n\"Statement,\" H.K. said, startling me. \"You will never be able to mass-produce that thing.\"\n\n\"This is most likely just a one-off H.K., three at the most. I agree. She is too intricate for mass production.\" I stated.\n\n\"Query. What good is she, genders, by the Maker, what is her primary function?\" H.K. rambled on seeing the schematics. \"Pleading Statement. Tell me you did not give her genitals.\"\n\n\"She is not a sexbot, and she is going to be, if I can manage to get the materials together, a spy or assassin/bodyguard,\" I told him. He stalked off without a word. \"You had a suggestion.\"\n\n\"Yeah. We can use the secondary power source to run a personal shield generator for the droid.\" And Traci purred when she uttered the last word. \"If her function is to infiltrate and take out high priority targets, then stealth and defense seem a wiser option.\"\n\n\"Do it and run a mobility test,\" I ordered.\n\n\"You are building a Jedi killer. You know that, don't you.\" Traci giggled. \"Or a Sith slayer.\"\n\n\"I do not know what you are implying.\" I lied. \"The Brotherhood was a manifestation of problems yet to come,\" I said as I watched the droid's stationary movements. It was all well and good, but she stumbled and faltered when we ran her through form one lightsaber training. \"Let me see her feet. We need to tweak those too. H.K. is right. DP-69 might be a one-off, but what a unique droid she'll make.\"\n\n[2] Rakata Primer:\n\nMy students woke, and I let Traci examine the current version of DP-69 and look for improvements to the problems I identified. We all ate, which meant they offered up enough blood to get me through the day. The wet season had just begun, so their training was limited.\n\n\"I have made a decision,\" I said. \"I am going to teach you the eighth form,\" I informed Kyanna. \"And I am going to improve your lightsaber skills,\" I told Aoki. \"Here, I made this while you slept. It is a shoto lightsaber for your off-hand.\"\n\n\"Thank you, Master,\" Aoki replied, looking at the sleek dark weapon.\n\n\"While I walk Kyanna through the first steps of form eight, I want you to drill the forms, you know. By the way, which ones are you skilled at?\" I asked, and a look passed between my two students. \"Well?\"\n\n\"One thru six,\" Aoki laughed.\n\n\"She taught me the excellent art of firearms and shooting from the hip,\" Kyanna added.\n\n\"I feel a story coming on,\" I said with a smile. Aoki began, and they took turns explaining how they had created a joint account. The masked female Chiss, known only as the Solitaire, could fill in slots from gunslinger to generic tank to Jedi healer. They cross-trained each other until their skills were damn near identical. The genius part is that Solitaire was an alias for their main characters. Aoki preferred being a Force-sensitive gunslinger, and Kyanna adored her identity as a powerful Jedi weapons master. What they both hated was the politics involved in dealing with the Jedi and Sith. That is why they jumped at the chance of joining my faction, the Je'Daii. \"My faction?\"\n\n\"Didn't you know?\" Aoki laughed. \"Just a second,\" she muttered as she worked her HUD. \"Ah, got it, take a look at this.\" I pulled down my own HUD and saw the groups, official organizations, and factions. \"Holy shit, I never knew there were so many people asking to join my faction. I cannot just let everyone join. I do not want the Brotherhood or former members infiltrating. Traci? Can you vet potential members?\"\n\n\"No. I cannot do that. I can transmit your request to Mistress Kat.\" She replied. \"She has the resources and authority to fulfill that request.\"\n\n\"Can I ask a question?\" Kyanna said, her voice filled with caution and curiosity. \"Did you train the Shrike?\"\n\n\"You mean the Sith in black armor?\" I stated, remember the mysterious woman using form eight. \"No, I have no idea who she was.\" Was she a player or NPC? It did not matter. We would have a reckoning. \"Like any good villain, she will be back.\"\n\n\"Speaking of villainous,\" Aoki said, moving closer and smiling. \"I stood right next to you at the damn bar. I did not feel you.\"\n\n\"Oh, that.\" I laughed nervously.\n\n\"Oh, that?\" Kyanna closed in from another direction.\n\n\"Force cloak. It reduces your aura to nil.\" I said and saw that hungry look I must have had when the Rakata trained me. \"It is not an easy discipline to grasp, trust me. Do either of you have any talent hiding?\" That was my in-game version of asking if they possessed the stealth skill. They both checked their HUDs and replied.",
        "\"I am quite skilled,\" Aoki replied first.\n\n\"Um, no,\" Kyanna frowned. So, their characters were similar but not identical, good. Another idea came to mind, and I asked them how their elemental manipulation was.\n\n\"Excellent,\" Kyanna exclaimed while Aoki shook her head. \"Why?\"\n\n\"I will teach Aoki Force cloak since she is skilled in stealth. I will instruct you in the art of manipulating shadows to fit with your elemental gifts.\" I offered, and they smiled. \"It is nice that you have different strengths.\"\n\nThe monsoon lasted for two weeks. I got them well on their way to be stealthy warriors. While they slept, I worked on my crafting projects. When I found the time, I tried to puzzle out the test sent to us by the Star Forge. Why did it give me a hint about Kaiburr crystals? Could it create artificial crystals? My curiosity peaked. I went to my room and paused as I stood next to where my students slept. They looked so damn cute as they snuggled together. I turned and entered the security code into the wall safe holding the most valuable crystals in my collection. I carried the soft leather case to my meditation area below decks.\n\n\"Meditation settings,\" I ordered the ship to dim the lights and play soothing music.\n\nI sat tailor fashion and placed the pouch before me, and opened it. Even in the weak illumination, some of the stones gleamed. I slid the deep violet shard of Vorpalite from its place and cupped my hands around it. My eyes closed, and I reached out to touch the crystal born of so much violence. Force Burst mimicked an impact from such relics as Thor's hammer Mjolnir or a power punch from the Hulk. Yet out of that brutality arose such beauty and potency. My mind slipped into the lattice structure that was the indigo crystal. The going was easy and swift at first, but then I reached the first obstruction. While potent and gorgeous, the stone possessed flaws. The imperfections retarded my movement. It must have been pure instinct, but my power reached out and repaired the damage, and I continued.\n\nIt did not take long to explore the entire stone and remove the cracks, mineral deposits, and damage to the lattice structure. My mind withdrew, and I looked at the purified Vorpalite. Its value had quintupled as I now held a flawless crystal in my hand. I saved the second Ghostfire crystal for last. The more stones I repaired, the faster the process went. By the time I held the diamond-like gem in my hand, the entire collection had shimmered and sparkled under the soft lighting. Patience, I thought as I lovingly repaired and restructured my namesake. The transparent crystal shone as it gathered what little light there was and cast it back in an aura of rainbows and chromatic flashes of luminosity.\n\n\"Perfect, you are perfect,\" I whispered. I returned the Ghostfire to its slot and closed the case. In a rush of excitement, I returned to my bedroom, locked away the crystals, and turned my attention to Aoki's and Kyanna's weapons. I sat at the foot of the bed, and using only the Force, I dismantled Kyanna's lightsaber and purified the two crystals within it. I felt Kyanna awaken and then heard her gasp as she watched the process from above me. Whole and gleaming, I rebuilt the weapon and levitated it into her grasp.\n\n\"Try it out.\"\n\nKyanna triggered her weapon's activation, and the weapon's typically loud and distinctive snap-hiss hummed softly instead. The blade itself was crisper and more defined than usual. Kyanna leaped from the bed and sped below to practice with it. Aoki's breath teased my ear as she leaned close to observe.\n\n\"Do me, I mean mine too, Master,\" the little minx teased me as I field stripped both her blasters. \"Slowly, do it nice and slow.\" I levitated the first crystal and performed the cleansing process. \"Is it me, or did that one just get darker?\" I opened my eyes once I finished, and Aoki was right. The crystal was free of impurities and structural flaws, and the color was luxurious and more vibrant. Aoki took the crystal and put her weapon back together. As I cleansed the second crystal, a disturbance in the Force echoed outward from Aoki. \"Something is wrong.\"\n\n\"Explain.\"\n\n\"It feels off somehow,\" Aoki declared. \"My connection is not as strong as it should be.\"\n\n\"Ah,\" I exclaimed softly. \"It is my fault entirely.\"\n\n\"My lightsaber is fighting me,\" Kyanna growled as she returned.\n\n\"Remove the crystals and sit,\" I urged. \"While I have removed the flaws from those stones. I also bonded them to myself unintentionally.\"\n\n\"We need to attune ourselves to them,\" Kyanna said and began the process.\n\n\"I do not know how,\" Aoki admitted. \"Can you teach me?\"\n\nThe cerulean Twi'lek plopped into my lap and leaned back while Kyanna harrumphed and lost focus on the task before her. Aoki ignored the other and ground her ass against me. When was the last time we were intimate? Too long if I did not remember right away. I had been pushing their training without rewarding them.\n\n\"If you can claim your crystals, I will let you ask for an award from me,\" I offered.\n\nKyanna's eyes snapped open, and I felt her hunger as if it were my own. I instructed Aoki on the technique for attunement and directed her to sit next to Kyanna. Aoki pouted but complied. I observed my students and kept my laughter to myself as the Twi'lek's lekku twitched and slithered as she performed the task at hand. Being a shapeshifter, I knew the meaning behind the subtle movements Aoki's body was whispering. She was aroused and fought her desire to complete the task. Aoki succeeded in reclaiming the first stone.\n\n\"How long have you been able to alter kaiburr crystals?\" Aoki asked as she waited for her energy to recharge.\n\n\"A short while ago,\" I admitted and enjoyed her surprised expression. \"Perhaps, I should explain my sudden epiphany.\"\n\n\"That would help,\" Aoki agreed.\n\nI told her about the voice during my Tutaminis training. The moment the world froze and the voice spoke the singular word, Kaiburr. Then, I went into how it inspired me to dive into those fantastic minerals' fundamental nature and structure. Finally, I showed Aoki and Kyanna the display Traci had created for me. I pointed out the similarities all the various crystals had in common. Vast distances separated them, and yet they seemed to possess an analogous origin.\n\nWithout a word, Kyanna was on her feet and heading below deck. I felt it when she activated her weapon. The cry of joy echoed throughout the ship. \"Hoo boy!\" It was as if my hands wielded the lightsaber. So, I still had a bond to the crystals. However, the purity I had instilled had allowed the stones to permit more than one person to utilize them. I would have to sever my link soon so that Kyanna could adequately master it. Aoki joined Kyanna, and once more, I experienced the raw emotion and joy she felt as her blasters struck the target droids with ease. While they reveled in their new toys, I performed the ritual to sever my bond to the Kaiburr crystals. If I didn't every time they went into battle, I would be distracted, perhaps even lethally. The rite finished, I meditated to recoup my energy. The act was very costly and drained me right onto the edge. My health and stamina were both in the red.\n\n\"Nope, not enough,\" I cursed. I slipped away and left the ship. My feral nature was once more rearing its ugly head, and I could do nothing to stop it. The last thing I wanted was three corpses littering my ship. \"Oh, so callous tonight, Nocturnal,\" I ranted as the scent of a Rancor caught my attention. My vision crested scarlet as I tracked the beast to its lair. The young rogue slept alone, away from the pack. He must have lost a battle with an older male and found himself banished. I touched the sleeping mind and instilled a sense of panic. While he thrashed around gripped by the nightmare I had inspired, I unleashed Force Drain. The torrential rain did not seem to touch me as I absorbed the fear-tainted energy from the whimpering beast. My former Master had been right. The stronger the emotion I inspired, the better it tasted.\n\nThe Rancor let out a single warbling cry as its heart burst. A rush of raw energy filled me, and I shook off the last of my lethargy. I turned to come face to face with Kyanna. I had been unwise to leave so quickly and be detected. Well, she was a Jedi Master, and I had taken her skills too lightly. I pondered every possible explanation, and none of them felt appropriate. So I remained silent and returned to the starship. I tapped into levitation just enough to pass through the saturated ground without leaving a trace. Kyanna followed silently behind. I neither heard her and nor did she speak about what she had seen.\n\nShe and Aoki slept in the cabin they shared. HK-47 stood immobile as he recharged. Whisper shivered as she joined me in my bed. She did not have to say how cold my flesh was this night. While she slept, my mind raced. I was undead, and the night was when I was most active. My thoughts returned to the Kaiburr crystals. Rakata Prime was one of the oldest settlements in the galaxy. Could it have a massive supply of them somewhere in the system? Traci announced another attempt to improve the assassin droids schematics. As she ran yet another movement test for DP-69, I decided to see if there was a secret cache of crystals in the system. I set Traci to guard my body as I used Astral Projection and search for the distinctive resonance a large amount of Kaiburr crystals would surely give off.\n\nI slipped free of my flesh and reached out for an echo in the Force. I drifted into orbit around Rakata Prime. The world turned below me as the sexless voice called out to me.\n\n\"You are full of surprises,\" it said in its cold, emotionless voice.\n\n\"Are you an A.I.?\" I asked.\n\n\"I was.\" It replied. \"Now, I am myself and strong in the Dark Side.\" If I doubted that I was speaking with the Star Forge's governing intelligence, the thing's words dismissed that. \"Welcome home. Let me show you the fleet I am building for you.\" The sinking feeling of fate trapped me, and I surrendered. \"Let me.\" The stars became lines for a moment as my spirit traveled through the intervening distance in seconds. I stood on the bridge of the Star Forge facing its physical avatar, and I grimaced.\n\n\"You stole my idea.\" I snapped, seeing the fully realized DP-69. She was gorgeous. She reached up, and a holographic hood manifested, along with dark Sith-like robes. \"Well fuck, you improved upon my design.\"\n\n\"You did most of the heavy lifting, as fleshy sentients would say. The hologram doubles as a personal shield generator. The exoskeleton can rearrange itself to mimic male or female biologicals as needed.\" The droid explained with a respectful tone. \"Master. This unit will never truly pass for a biological lifeform, but it could fool the inept under the right lighting conditons.\n\n\"I can feel the Dark Side coming from her,\" I said, alarmed before I remembered the Star Forge was itself powered by it, the Dark Side of the Force. \"Brilliant.\" I grudgingly acknowledged. \"I will discard my work on it. That will free up time to finish the aw mother fucker, really?!\" The stealth speeder bike slid silently into view. I cursed a few more times before calming down. \"How long to complete the Heart of Korriban?\"\n\n\"The three capital ships will be ready for departure in a month. To support them will be two dozen various war droids, astromechs, and one medical droid programmed to extract information. I have also set fifty support ships and one hundred warships based on the Ivory Wraith design. A single DP-69 model espionage droid will pilot them. They will, if captured, insinuate themselves and prove willing to help their new owners.\"\n\n\"While sending burst transmission back here,\" I stated, and the droid bowed.\n\n'Ding!' Went my HUD. New Event: Droid Hunt. The event's details were not limited to me. Oh no, any player could try and hunt down and claim the ship, the droids, and add them to their inventory. Kat, what are you doing? That does not sound like you. I will sit back and wait.\n\n\"Expect a shuttle with one droid and three speeder bikes and one full-sized stealth speeder... Master.\" Since I was not physically there, the droid stated that I was not teleporting to the Star Forge just yet. Therefore, the others did not need to know I had visited it. I was given a tour of the bridge and shown the complete schematics of the Star Forge.\n\n'Duh-duh-dah, Dum-de-dum-dum...' I felt the subtle vibration in the background. It was two series of numbers repeated a dozen times before it was time for me to leave. I memorized the pattern and wondered what it was and represented. \"Stupid! Those are GPS coordinates!\" I exclaimed and then fell silent. \"Traci...\"\n\n\"According to the Rakatan archives, there is a small volcanic island at those coordinates. The littered surface has several volcanic rock types, including some unusual obsidian forming a regular pattern near the center of the island.\" She paused and waited. \"I have pulled all available records, and there is not much to get excited about.\"\n\n\"Pattern eh, could it be artificial?\" I asked, and she nodded and emphasized what could be. \"Can we take off under these conditions?\"\n\n\"We could,\" Traci answered but sounded hesitant.\n\n\"There is no rush. We can wait. If there is a break in the weather, launch a few probes.\"\n\nI meditated until the girls woke. The damn Star Forge had stolen my side projects. I liked crafting things, and it had unknowingly annoyed me; I am sure the deadly superweapon meant well. I laughed and mentally brought up other things to do and discarded one idea after the rest. Finally, I went through my inventory and found it. The gift from Odin carried the label of an 'alien' helmet, but now that my characters were separate, it had a new name. It was a black Mandolorian helmet, and all it needed was a complete Beskar armor set to finish it up. Suddenly a flurry of dirty tricks filled my thoughts, and I let my mind drift down new paths.\n\nI had been lost in thought when Aoki pounced onto the bed next to my head. The sudden movement broke the spell that held me entranced.\n\n\"There was a security alert while we slept.\" She informed me.\n\n\"Traci, why didn't you wake me?\" I called out as Aoki rolled backward, off the bed, and came to her feet smoothly. I rose, and Traci responded.\n\n\"Your shipment has been delivered.\" She said and paused. \"They are in the cargo hold.\" Traci completely ignored my question.\n\n\"They?\" A sleepy Kyanna commented as she strolled into my bedroom wearing non-Jedi lingerie. \"Who are they?\"\n\n\"Let's go find out,\" I urged, pondering Traci's odd behavior.\n\nAll of us, including HK-47 and Whisper, walked down the ramp to the bottom deck. A small shuttle sat in the corner of the hold, and next to it were three speeder bikes, four of the octopoid probe droids we had seen in the Split Spire, and a solitary gunmetal grey DP-69. The droids bowed and called me Master. Kyanna cursed softly as HK-47's optics shifted to the red end of the spectrum.\n\n\"Where the hell did they come from?\" Aoki asked. \"Is she a droid or a cyborg?\"\n\n\"I am a droid Mistress. My designation is DP-69.\" She replied with a subtle smile. \"The others are probe models SR-22, for search and recon. So we are all at your service.\"\n\n\"What does D.P. stand for?\" Aoki asked with a giggle.\n\n\"Deception and penetration, Mistress,\" DP-69 replied. \"My primary function is gathering intelligence of whatever kind is determined to have value by our Master. When in tandem with the SR-22s, we can uncover minerals of value, hidden enemies, or lost civilizations.\"\n\n\"Useful,\" Kyanna remarked, looking at me with just a hint of alarm. \"Any thoughts, Katria?\"\n\n\"Yeah, can the SR-22 units launch under these shitty conditions?\" I asked, startling my students. \"There is an island on this world that has come to my attention. Can they reach it safely?\"\n\nThe SR-22s chittered in a lower registered voice than other droids like R2's or even B.B. units. They were thrilled that their safety was of my concern. They were positive the monsoon would not harm them. I gave them the coordinates of the island and what I wanted.\n\n\"I need a full sweep of the island, especially any area with unusual mineral deposits. I suspect there may be an underground facility or, worst case, a hidden lab or the like.\" I said, and they eagerly tittered and prepared to perform the tasks I laid out. The SR-22s launched, and I noticed Aoki running a hand over the speeder bike's dark surface. \"It is yours. Take it as a gift from one friend to another.\" I paused. \"Kyanna?\"\n\n\"Well, if you are just handing them out,\" she said and then pulled me into a passionate kiss.\n\n\"Let us eat and then get some training in today. DP-69 I want to talk about your skills and limitations.\" I said, and she flinched at the word limitation. \"Everyone has limits, those that fail to see that are doomed to a bad end.\"\n\n\"Master's wisdom enlightens this pitiful unit,\" DP-69 replied with a bow.\n\n\"Statement.\" HK-47 began. \"Suck ass cunt.\"\n\n\"Observation.\" DP-69 fired back, mimicking him. \"Jealous much?\"\n\n\"You both have skills I need for my plans to reach fruition. Can I rely upon you?\" I asked. HK-47's optics went from a hostile scarlet to an agreeable emerald. DP-69's eyes shimmered a soft blue, and she nodded once. \"Good. I am hungry. I am going to call something in for breakfast. You two come with me.\" I directed Aoki and Kyanna to fall into step behind me. We dressed for the shitty weather, and the questions flew.\n\n\"Katria,\" Aoki began. \"Who made those speeder bikes? They are your design, and yet those droids delivered them.\"\n\n\"I hate even to think this,\" Kyanna said. Her voice was barely above a whisper. \"Did you cheat when you fixed our crystals?\" Aoki stared at her friend in shock. \"I checked my skill tree and can't find any way you could have done it.\"\n\n\"I don't cheat,\" I spat out each word slowly and angrily.\n\n\"Displaying Katria's skill tree,\" Traci interrupted without prompting. \"You will see these two triangular synergy nexuses--the first grants Katria the ability to blend her Shatterpoint gift with her crafting skill. The second nexus ties together telekinesis with her analysis skill. Combined, they grant her access to the hidden skill Force Alchemy. Finally, like the Sith Masters of old, she can examine and alter the fundamental nature of any living or nonliving specimen. In this case, your lightsaber and blaster crystals.\"\n\n\"Please forgive me,\" Kyanna begged. \"It is this place. I spoke without thinking it through.\"\n\n\"I will let you earn your way back into my good graces,\" I purred. \"I will answer your question later, Aoki.\"\n\n\"No rush,,\" she said. Aoki's tone indicated her concern but also her trust in my judgment. Finally, the three of us stepped out into the monstrous downpour. I ignored it while my students adjusted to it. I observed how they acclimated, and it was interesting.\n\n\"Shit... fuck... damn...\" Kyanna bitched and cursed even as she used telekinesis to shield herself from the rain. Meanwhile, Aoki subtly adjusted her body temp and endured quietly and without complaint. Interesting. She launched into a story as I reached out to see if any wildlife were nearby.\n\n\"I remember this job some friends of mine and I did on Manaan, the homeworld of the Selkath, tons of water, well most of the planet's surface is water.\" Aoki paused to munch on a protein bar. \"Anyway,\" she said, her speech garbled as she chewed and talked at the same time. \"I was stuck in a backup position and perched on the only piece of land overlooking that nice dry hotel where the mark was staying. So, there I was, flat on my belly on this god-forsaken rock. A storm raged, and the rain and waves smashed the shit out of me.\" She took another bite of the protein bar. \"I had just bought this great sniper rifle... Aratech M-91 with this sweet ass hand-crafted Bothan scope with genuine Trigarian lenses that are accurate up to... you feel that?\"",
        "I gestured, and they froze. There was something near us, so I reached out again and snared its mind. It was not easy. The thing was slippery, both physically and mentally. It took a bit to get control of it. I drew it close, and it was hard to hear its approach over the biting rain and gusting wind. The thing was dark, and its outline shifted and changed from second to second. There were no apparent external organs such as eyes, mouth, or ears. Instead, it seemed to be a singular mass of undulating translucent flesh. We could see its internal organs, and they shifted as much as the thing's exterior. What the fuck was this thing? It reminded me loosely of the creature I had encountered on Tython, but it was feral and not precisely what I would call sentient. A young Rancor stumbled into the area, and a sudden surge of energy caused me to lose control of the creature. It pulled itself into a tight ball before launching itself at the Rancor. The blob struck the Rancor's head and latched on. Smoke rose as its digestive enzymes went to work. The Rancor bellowed in rage and agony as it died. It tried to rend its attacker with formidable claws but to no avail. The thing absorbed the apex predator's head, and the body dropped to the water-soaked ground with a soft mushy slap.\n\n\"Aw fuck,\" Kyanna cursed, and I quickly reestablished control. The formless thing sat contented as it slowly digested the brain of the Rancor. I caught flashes from the creature as it relived the short life of the young predator. The once semi-sentient status grew to a barely self-aware entity. With this new level came an aura of malignancy that radiated out and blanketed the area with dread and horror. I used Force drain and slowly stole every ounce of the thing's life force. It faded as it dried and broke down to a thin layer of slime floating atop a nearby pool.\n\n\"We need to be cautious when the rain ends,\" I suggested, and we returned to the ship. The energy I had absorbed was enough to sate me for a week. After that, I learned enough to know it was also an infant of its species. It was too young to pass on more than its hunger and hate for other life, no matter what form it took. The abhorrence hardwired into its nature, or perhaps it would better be described as its instincts to survive. Absorb, digest, and grow were its core instructions, and at that moment, I understood. A superior intelligence created the eldritch horror.\n\n\"Was this a Dark Side experiment gone wrong?\" I muttered aloud, and I heard both my students gasp as the ramp rose and the ship sealed. \"I need a hot shower after that.\"\n\n\"We need one.\" Kyanna corrected me.\n\n\"No shit,\" Aoki stammered, still upset at what she had seen. \"I am glad you killed that thing.\"\n\n\"Did the Rakata make it?\" Kyanna asked as she slowly stripped out of her robes.\n\n\"We can check afterward,\" I suggested as I followed suit.\n\n\"Hey, wait for me,\" Whisper called out, already half-naked. \"Me too.\"\n\nThe bathroom was one of the largest of the compartments on the ship. It could and has entertained up to ten human-sized individuals, ah, good times. We formed up under the six ceiling-based showerheads and lathered up. I picked up the subtle metallic footfall and spied DP-69 observing us from the entrance of the bathroom. Her optical sensors glowed a faint pink illumination.\n\n\"Do not mind me. I am curious about biological's breeding practices. Is this typical?\"\n\n\"For me, yes, for most sentients, um no,\" I replied. \"Is there anything you want to say?\"\n\n\"I have prepared food, so whenever you finish your watering ritual, a meal will be ready in the cafeteria,\" DP-69 announced.\n\n\"Watering ritual?\" Aoki chuckled.\n\n\"I suppose that would be one way of categorizing a shower.\" Kyanna laughed.\n\nWe kept the frolicking to a minimum. I felt weirded out being observed by the droid. We all dressed comfortably and casually. After the meal, I began training my apprentices in form eight and dueling in general. They were both skilled fighters, and Aoki had discovered the hidden functions I placed on her shoto lightsaber. She quickly adapted to the switch that could suddenly lengthen or shorten the off-handed weapon's blade. She used it with great skill too. Between dueling and learning the eighth form, we found time to chat and improve their stealth skills. I tried and failed to emulate my Rakatan Master when it came to a stern training attitude.\n\nI had Traci place a weather icon in my vision's bottom right corner to monitor the ever-present weather. All I had to do was look at it, which would cause it to glow, and then one blink later, and I had a virtual weather map. The cycle of shitty weather continued for another six weeks. By that time, the girls had mastered not just form eight but their stealth abilities. I was so damn proud and not just of them but a bit of self-love for managing to pass on those talents without failure.\n\nAfter three days of leaving them to their own devices, I finished the last few weapons and armor modifications. I will not lie. After seeing the Star Forge's versions of my droid and speeder designs, my confidence plummeted when it came to crafting. It felt like a gut punch and made me question myself. So, what might have taken a week or so now took nearly a month. What had once been a joyful smooth process was now a grind, and I loathed it. Finally, I finished all my outstanding projects and shelved everything else. I needed a break or hell to get the fuck out of this damn ship.\n\n\"Boss? I have found the edge of the weather pattern. It won't reach us for another week, but the wet season is ending.\" Traci declared.\n\n\"Fucking show me!\" I snapped. The virtual map hovered before me. There it was. I pointed to the very top left of the display. \"I am the fuck out of here, now. Ladies! Pack for a long weekend outdoors. I will grab food and water, and don't forget your weapons.\" I whistled, and the Exomorph raced in, and her anxiousness mirrored my own. \"Want to go for a run? Huh, do you, good girl. Let us go.\"\n\nI attacked the cafeteria and packed food, snacks, and canteens. I picked out loose-fitting armor, boots, two new lightsabers I wanted to field test, and a few of my dirty tricks just in case. I pulled up the hood, slipped on my tactical battle mask, and tapped my foot impatiently until the girls appeared. Whisper begged to go with us after being locked up for so long.\n\n\"HK-47, you lovely bastard you, I leave protecting the ship to you. If someone or something is stupid enough to attack, blast the shit out of them.\"\n\n\"Emotional Statement. Oh yes, Master, I will terminate with joyous prejudice.\" He replied.\n\n\"Master? May I accompany you?\" DP-69 requested. \"I would like to push my physical parameters.\"\n\n\"Fine, but we are going to be running and attacking the terrain,\" I announced. \"Alright, huddle close, and let us get going.\" I slipped free of my body with ease and teleported to the edge of the storm. Like everything near the ship, the ground was utterly flooded. I found a rocky outcropping that would provide a dry landing spot. I stood atop it and brought not just my body but those of the others, including the eager Exomorph.\n\nPop! The air exploded outwards as so large a group suddenly appeared. The others let their inner ear and mind adjust to their new surroundings. I was an accomplished teleporter and had long ago gotten used to the jarring effect of instantaneous travel. I tapped into one of the Rakatan satellites and compared our current location to Star Forge's GPS coordinates. We were pretty far off, but we could reach it in four days after using the satellite's mapping program if we pushed our pace. We would be out of food, but worst case, we hunted along the way to expand our supplies.\n\n\"Everyone ready? Good. I am sending our route and destination to your HUDs. Shoulder those packs, and we are going to haul ass for the first couple of days. Follow me, ladies.\" I roared as I launched myself forward. The surrounding landscape was rocky, slick as shit from the extended torrential downpour, and required careful passage. Finally, I let go and let the Force guide my movements. It is hard to describe the sheer joy of surrendering and being out of the confines of my ship. I took long deep breaths, and I raced forward. Traci played a handpicked soundtrack for the first day, and after only two breaks, we covered more ground than I anticipated. DP-69 kept up effortlessly, and after tapping into her memory core of today's events, I was thrilled for a moment at how well she performed. A moment later, I remembered she was not my creation.\n\n\"Master, why are you frowning?\" DP-69 asked. I relented and told the truth.\n\n\"I feel disappointed that I was unable to finish designing your systems,\" I said, my voice low and bitter.\n\n\"Is that all?\" She said, sounding relieved. \"You lovingly crafted and sculpted 95 percent of my functionality, and you feel a failure. Why?\"\n\n\"Ninety-five,\" I repeated. \"I thought...\"\n\n\"No, what you see before you are mostly your handiwork. The rest was simple tweaking that I am confident you would have discovered and applied in due time. I am the child of your ingenuity.\" DP-69 stated, and I felt my confidence somewhat restored.\n\n\"Um... for the technologically challenged, who did build you?\" Aoki asked her defenses on high alert.\n\n\"Why the Star Forge, of course.\" The droid replied with a smile, and her optics glowing a pleasant blue hue.\n\n\"The Star Forge!\" Kyanna exclaimed. \"Oh shit, Rakata Prime, I thought, what is the current galactic date in Republic Standard?\" DP-69 shared that information, and I saw the Mirialan's face contort. \"That means we arrived here months before the concert on Malastare.\"\n\n\"How the hell is that even possible?\" Aoki asked, and I shrugged.\n\n\"Something must have happened when I plugged the sphere into the navicomputer.\" Kyanna tried to reconcile the time jump. \"We were already in hyperspace. The sudden course correction must have messed with hyperspace. Great.\" I fought the urge to shout 'welcome to my world' but instead took out a guitar from my inventory and began playing. I sang until the ladies got tired. Then, I would watch over them as they slept.\n\n\"Your flagship is nearly finished. By the time you are ready to leave, the strongest ships of your fleet will be ready to crush your enemies.\" DP-69 said only once she was sure the others were sleeping.\n\n\"Of course, it is,\" I stated. \"I don't know what felt worse, the loss of confidence when I saw you aboard the Star Forge or the loss of choice when I realized where we had landed.\"\n\n\"I imagine the loss of confidence. You cannot fight fate.\" DP-69 stated as she got to her feet and began walking away. She moved like a woman, and in the dim lighting, she might even be confused for one.\n\n\"I do good work.\" I chuckled. \"Where are you going?\"\n\n\"Someone needs to patrol the area while the biologicals sleep,\" DP-69 replied coolly. Something was wrong, and it did not take the Force to warn me that bitch of a droid was up to something. \"Traci, what kind of satellite were you tapping into for the weather reports?\"\n\n\"One of a series of near orbit and deep space sentinels that monitor the planet and the entire star system for activity. In the case of an attack, they trigger an early warning system. Why?\"\n\n\"Tell me about the near orbit one,\" I asked as I changed from light armor to heavy-duty Cortosis weave and my full loadout.\n\n\"Since the fall of the Infinite Empire, it serves as a weather and survey platform. Not that there is anyone to warn of bad weather or deep earth situations.\" She replied. \"Do you want me to have it scan the area around us?\"\n\n\"Yes. Do so quietly while I wake the others.\" I directed as I rose and found Whisper nearby, watching me intently. \"Whisper?\"\n\n\"Booker,\" Kat said through the lethan Twi'lek. \"Are you okay?\"\n\n\"That depends,\" I said as I moved to wake Aoki and Kyanna. \"My weird-shit-o-meter just went off... why?\"\n\n\"Just checking,\" she lied and poorly. I could hear the concern screaming off her. The subtle twinge and not-so-subtle quake in those two words, just checking. She was scared, and it had nothing to do with the damn game. Was something happening I needed to be alarmed about in the real world? Did she find out about Wraith and my connection to the power company we were about to open?\n\n\"Can you tell me what is going on?\" I asked, and she flinched.\n\n\"I forgot how empathetic you are.\" She said, trying to laugh and failing miserably. \"No. I cannot. No one is in danger.\" I believed that part. \"Just some weird shit happening out in the real world. I hate to break immersion, but I need your advice. Do not pause the game. Just listen. We picked up a signal beyond Jupiter. The winery I set up on one of its moons detected a weak yet complex pulse transmission. We think it might be an old Soviet scramjet vehicle they launched in the seventies. They loaded it for bear with two small nuclear power plants and aimed it at the Jovian system. They lost contact with it a week after launch. A common theory was that when the engines kicked in, something got knocked loose. It roared off the screens like a bat out of hell and vanished.\"\n\n\"Until now,\" I said, and she nodded. \"Do the transmissions match Soviet-era profiles?\"\n\n\"No. The pulses are mathematical and increasing in complexity. The problem is that the genius behind the communications portion of the project died last year. The professor was found dead in his apartment. Though he was in his seventies, we could use him right now.\"\n\n\"Is this thing going to hit the winery?\" I asked, and she shook her head. \"The Earth?\"\n\n\"The Earth Master?\" Whisper replied, and I knew Kat had disconnected without warning me. The echo in the Force was subtle and beneath us. A second pulse, but this one was a bit further away.\n\n\"Something is moving under you. I suggest you take a more tactical position and soon.\" Traci warned us. I shook the others awake as I reached out to locate the source of danger. Three fast pulses sounded as they triangulated our positions. It was directly below us.\n\n\"MOVE!\" I shouted as I activated both lightsabers.\n\n\"Huh?\" Kyanna replied sleepily. \"Shit.\" She cursed as she grabbed her pack and backflipped away. The ground where she had been sleeping broke open, and a slime-covered tube erupted and rose into the air. The tentacle was big enough to swallow a full-sized human with ease. The earth shook as more of those appendages ruptured the ground and swayed above us. Aoki's blasters spoke, and purple blaster fire struck the nearest of the tubes. My boss-fight music filled my ears as we engaged whatever the hell these things were. The devs had come up with something brand new for the backwater planet. I held onto one lightsaber and threw the other using the ghosting technique. It began its path vertically before the English I had put on it brought it horizontally to slash at the base of the same tube Aoki had targeted. Kyanna lashed out with Force lightning and destroyed the cylinder that had tried to swallow her.\n\nThe other tubes struck out, and we went onto the defensive. I caught my returning weapon and crossed them in front of me to singe the attacking tentacle. Aoki tossed a thermal detonator down the 'throat' of that tube. We moved back as the explosive went off, killing the second tube.\n\n\"Aw, this is not so bad,\" Aoki giggled. The ground shook, nearly throwing us off our feet. \"No fucking way.\" A twenty-foot diameter portion of the land bulged upward, revealing the terrible truth. The tubes were attached to the back of a much larger creature. I sheathed my lightsabers and went for an area of effect attack, namely Force lightning. I reached for the weather pattern and went to build a storm strong enough to kill this thing. I felt Kyanna uniting in my attempt, and the change happened that much quicker. Whisper and Aoki covered us as we worked the weather.\n\n\"Where the fuck is DP?\" I shouted. \"Some bodyguard she is.\" Even as the main body pushed itself to the surface, the tubes continued to attack. Three of them targeted Aoki, and as good as she was, one of them swallowed her whole. \"No!\" Whisper tried to free her, but she was equally overwhelmed. \"Just a few more seconds.\"\n\nBRIPPPPP!!! Automatic blaster fire lit up the night. The tube holding Aoki dropped, and she used her shoto saber to free herself. Her rage was evident as she attacked the boss monster with Force drain. She restored her life points and kept latched on.\n\n\"Die motherfucker!\" She screamed as the dark energy of the monster lighted her face.\n\n\"Query. Am I late?\" HK-47 called out as he continued to lay down suppressive fire.\n\nThe horror finally breached the earth and roared in pain. The first rumble of thunder heralded the death from above that we were about to unleash. The boss yelled a second time as the tubes rose straight and changed color.\n\n\"Get out of there,\" I shouted. Whisper and Aoki were already racing in our direction. The beast sent foul-smelling fluid shooting out those tubes, and digestive acid rained down all around us. HK began smoking where the acid struck him. I raised a telekinetic shield above us. \"You can do it, Kyanna.\"\n\n\"So much power,\" she screamed as she brought down the rain and lightning. The storm broke above us. The rain and digestive acids interacted, and the boss bellowed as its attack turned upon it. The lightning strikes ripped open its flesh, and the tubes leaked acid on the back of the thing. More lightning struck, but this time they were all over the place. A bolt struck my shield and dropped me to my knees. \"Power.\" Kyanna roared, and my world went white. I woke in the White Room. Did she kill me? I waited for the counter to respawn. I returned and got my reduced portion of experience points while Kyanna and the others got a ton for defeating the Barantu Elder. Kyanna looked guilty as hell, but I waved it off. \"I don't know what happened. I lost control, sorry.\"\n\n\"New game mechanic?\" I offered, and she shrugged. I telekinetically lifted the monster's body and revealed a hidden cache of rare Kaiburr crystals and the remains of ancient Rakata armor and weapons that survived the digestive tract of the Barantu Elder. We split the hoard evenly though Aoki secretly offered up her portion of the crystals in place of a nifty weapon or armor later. I accepted. DP-69 arrived a few moments later. She offered no excuse but did look surprised to see HK with us. \"Speaking of, what brought you here, HK?\"\n\n\"Astute Observation. I do not trust this bitch.\" He said, indicating the other droid. \"Statement. I was proved correct.\"\n\n\"Master?!\" DP-69 exclaimed as I gripped her entire body with the Force.\n\n\"Give me one good reason I don't teleport you into low orbit and watch you burn up on reentry?\" I snarled, feeling the Dark Side take over.\n\n\"You... you haven't passed all of the tests to earn your fleet.\" She struggled to speak as her vocabulator began malfunctioning. I let go reluctantly.\n\n\"How many more tests?\" I yelled, and a blast of thunder rumbled above us. DP glanced up, and as her self-repair functions kicked in, her optics turned a happy green color.\n\n\"I have been informed that you and your companions are worthy of laying claim to the Star Forge. The builders were masters of the Dark Side. I saw a little manifestation of it until now. You have earned my respect.\" She said and walked off. The blindingly white-hot sky bolt struck the retreating droid welding her into one solid piece of metal.\n\n\"Fuck you bitch!\" I snarled before regaining my sense of balance within the Force.\n\n\"Joyous Observation. My Master is a beast.\" HK-47 stated.\n\n\"No more subterranean anomalies, boss,\" Traci confirmed.\n\n\"We eat, we meditate, and then we finish this little outing.\" I directed as HK revealed how he had arrived in the nick of time. HK had parked all three speeder bikes at a safe distance. He had used one and slaved the other two to his. \"I concur with HK, fuck walking. We ride in style. Traci scan the destination coordinates, no more surprises.\"",
        "I reached out and called in one of the larger herbivores for food. I drained the beast's life force, and afterward, HK butchered the carcass, and we had ourselves a little barbeque. While Kyanna prepped the meat with her portable spice rack, Aoki walked the perimeter with Whisper. I meditated to delve deeper into the balance and find the source of the rage Kyanna and I had experienced. Sure enough, the devs decided to add an emotional subroutine into anyone tapping into the Dark Side. It emulated the poisonous nature of that side of the Force. Kyanna, however, found her balance in cooking. Out in the real world, her family owned several restaurants and diners scattered across the west coast. They were originally from Baton Rouge, and thus the spicy stew she cobbled together from the meat and ingredients she kept in her inventory.\n\n\"Every world I reach, I make it a mandatory task to gather naturally occurring herbs, spices, or unknown plant life. I see what is toxic or not, taste test it, and viola Lehon Gumbo. It will be ready in a few hours, so you teleported to the Star Forge while we slept?\" She asked, and I smiled.\n\n\"I can astral project,\" I replied. \"I can send my spirit self across the galaxy and then recall my body when I reach my destination.\"\n\n\"Holy shit, Katria, when the hell did you pick up that little trick?\" Kyanna exclaimed, and I broke down and regaled her with my adventures that were not all over the holonet. \"You have been busy. So, where are we going?\" She asked as she taste-tested the gumbo.\n\n\"While I was aboard the Star Forge, I picked up a background noise that I believe are GPS coordinates to something of importance here,\" I explained.\n\n\"Damn, something smells good,\" Aoki said as she and Whisper rejoined us. \"Nothing out there, Master. I think all that lightning scared off anything and everything. So, what is the plan? Why are we out here?\" Kyanna and I laughed as I repeated my time aboard the Star Forge. Then, Traci appeared, and she was smiling.\n\n\"You were right. Here,\" Traci said, and a holographic overlay of the atoll appeared. \"It is volcanic though the area is stable now and shows no signs of geological disturbances. The lava tubes have been altered and form a network of tunnels beneath as well as this.\" She said, displaying a deep vertical shaft that was at least a hundred meters deep. \"The sensors cannot penetrate any deeper. I guess that it leads to the original caldera and the source of an ancient eruption.\"\n\n\"We may have to bring the ship in and get the climbing gear if we go that deep,\" I said, thinking out loud. \"Any signs of life?\"\n\n\"Funny you should ask,\" Traci replied. \"That early warning system I mentioned picked up an inbound ship. Its configuration matches a Republic corvette, defender class. It could not carry more than six crew.\" She paused for dramatic effect. \"It just landed on top of our atoll.\"\n\n\"Have they detected us?\" I asked, and Traci shrugged.\n\n\"The craft did not deviate in its path to the atoll. Odds are they were too focused on a safe landing.\" She offered. \"I cannot be absolute.\"\n\n\"Good enough for me. After the gumbo, we take the bikes and get in close and see what they are up to.\" I said, and we settled down and watched the holonet. The only time I watched was back in the real world to see trending videos of gameplay. I rarely checked it out in-game. \"Stupid,\" I exclaimed, and everyone looked in my direction. \"How did I not know about this? All these opportunities and I have been out just bouncing around left to my own devices.\"\n\n\"Jeez, Katria just discovered the lunatic fringe.\" Aoki laughed. \"Most of my guild missions I find from the holonet. Try and filter using your name and see what happens.\" I did. I entered my name and ID number to verify that it was the one and only Katria Forgemaster, and boom, dozens of offers to hire me. Some were crafting jobs, while others ranged from wet work or assassinations to multiplayer missions that needed a bit of muscle. I filtered further to isolate just the crafting offers. Some of the drawings were bare-bones with great possibilities, while others looked like CAD drawings done by professionals that wanted my name attached to their design. While the gumbo cooked, I picked out a few lightsaber designs that caught my fancy.\n\n\"Look at this,\" I said, displaying a crude drawing. \"What do you think, Kyanna?\"\n\n\"Organic, maybe wood and a little metal on the exterior. I like the roughness of it. Hold on a sec. Yes, I still have a few pieces of bark from an ironwood tree from Telos III. With some help from a few other Jedi guardians, I managed to route out and destroy a Sith cult. They were pretty damn sick. They were capturing natives and killing them in strange Sith rituals.\" I accepted the wood, activated my portable crafting table, and went to work. I kept most of the natural shape and texture of the wood to form the outer casing. I did sand and buff it to bring out the raw beauty and natural patterns.\n\nAfter checking the blade emitter and focusing crystal, I stamped the interior with my logo and assembled the weapon. Along with a few metal rings to enhance its strength and integrity, I had that done in no time at all. I already had several lightsaber guts assembled for my use, so it was just a matter of finding the best match for the casing. I even had a violet Vorpalite crystal to use since she requested a purple blade.\n\n\"Another satisfied customer.\" I chuckled as I completed the transfer. I sent half the payment to Kyanna for the critical component to make it possible.\n\n\"Holy... that is one hell of a profit.\" She exclaimed. \"If you ever get bored, you could settle down and earn a fortune just making things. Here,\" Kyanna said as she handed me a bowl of gumbo.\n\n\"You said guild contracts,\" I said between spoonfuls of the succulent stew. \"Not Jedi?\"\n\n\"No, to be able to take up your teachings, I severed my ties with the Order,\" she said and smiled. \"I have no regrets.\"\n\n\"I have been thinking about the origins of the Kaiburr crystals,\" I replied as I took a swig from my canteen. \"I need to access a Holocron library. Of course, the obvious choice is the Jedi library on Coruscant. But, that being off-limits and nearly impossible to infiltrate. I was thinking Tython. What?\"\n\n\"I thought you knew,\" Aoki entered into the discussion. \"Tython is under a blockade.\"\n\n\"The Jedi want the Je'Daii library for themselves. But, unfortunately, that is not going to happen, so once we get back to Republic space, I am going to retrieve our legacy,\" I promised.\n\n\"You are going to need someone to watch your back,\" Kyanna offered.\n\n\"And the best gunslinger this side of Tattooine,\" Aoki volunteered. \"Besides, think of all the credits we can earn along the way.\"\n\n\"Speaking of Tattooine,\" I chuckled. I held up my cantine and turned it this way and that. \"I got an idea.\" They watched as I drew a schematic in the earth. \"Heat sink, and a moisture collector, solar panels to power it, and boom a solar-powered cantine.\"\n\n\"Huh?\" Aoki commented. \"I don't get it.\"\n\n\"He just dreamt up a cantine that acts as a moisture farm in a bottle,\" Kyanna said. \"You are a genius. See, the exterior has solar panels, and the interior has a heat sink to help cool the moisture and convert it into drinkable water. You could make a killing with this, and I don't mean just in the game. Think of all the areas suffering from drought. Put up solar panels and the rest, hell, this could save lives!\"\n\nI did not have the heart to tell her that I had not created the design. It was something Nick had been working on but had been too busy to implement. However, the hour I had spent within the digital ether had exposed me to Nick's genius. It changed me fundamentally. The complete specs flashed in my mind, fully realized, and Kyanna was right, of course. I would exploit this technology and the other brilliance Nick had either stolen or created on his own. The first mandatory break and I would send word to Wraith and isolate the neediest nations for implementation. It was time Nick paid back to the world for taking so much. As my thoughts raced, silence inevitably crept upon us. I glanced at the second design and grinned. The player wanted a Japanese-style wrapped hilt and a flat energy blade; he did not want a lightsaber but a plasma katana. I sunk into the digital realm without the others noticing. The main problem to overcome would be configuring the blade emitter. A narrow slot to form the flat blade would be necessary. One success led to the next, and then a significant setback almost turned me aside. I pulled the holographic display apart and found my problem. One of the focusing lenses was cracking under the unusual shape of the blade. So, not only did I have to reshape the emitter but the crystals as well. After several attempts, I found a pairing of crystal forms that lent themselves to the contour I desired. After a dozen successful tests, the weapon was ready for construction. What felt like hours and hours of work was barely a few minutes in meat time, as Nick had called it.\n\n\"Traci, can you machine the pieces I need while I finish eating?\" I asked, and she gleefully went to work.\n\nThe portable crafting station sprung to life as I returned to Kyanna's gumbo. We sat close and savored the home-cooked meal, and Aoki asked why and how a Republic starship came here. Had they followed us? My best theory was that they accidentally ran into the anomaly the sphere had created in hyperspace. The thought of a lasting space hazard lent urgency to finding the ship and discovering why they were here. Aoki looked at the odd-shaped crystal and parts coming off the workstation.\n\n\"Patience,\" I urged, and she stuck out her lower lip. I sent her the request I had received.\n\n\"Hmm,\" Aoki murmured. \"Is that even possible? I have never seen anything like it at the marketplace.\"\n\n\"I am going to send it with my other patents,\" I explained.\n\n\"Patents, as in plural,\" Aoki gasped. \"I knew you made those droids, but this is way out there.\"\n\n\"I get a cut for every emitter and crystal they sell,\" I bragged. \"The M-Series of droids has made me a pretty penny.\"\n\nI hand cleaned the parts, dry fit them before assembling the weapon. The last touch was the hand-wrapped hilt to finish the look. So, I stood and ignited the weapon. Aoki clapped while Kyanna let out a sexy whistle. I performed a portion of form eight and knew I would be making one of my own soon. It would take foes off guard and give that moment to strike and win a battle. I switched it off and sent the patent request to the devs. The reply came, and they credited my account for what they suspected I would make once word got out. I sent the weapon to its new owner.\n\nWe finished the meal, cleaned the dishes, swept the area clean of our passage, and packed the speeders with our gear. It was time to take the speeder bikes and see what the passengers of the corvette were up to for ourselves. The excitement built, and I could not wait to see what this beast could do."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "vr",
        "virtual reality",
        "threesome",
        "fff",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-16"
}