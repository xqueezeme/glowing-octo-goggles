{
    "title": "The Hermit",
    "pages": [
        "Parts of this story have greatly benefitted from George Anderson's input. I wouldn't call it editing any more, co-authorship describes it better. Other parts are still my stuff, the quality and the lack of grammar errors will surely tell you which parts are his.\n\n*****\n\nWarning:\n\n- This story contains no real sex scenes. I generally don't like writing those and I think I'm also not very good at it.\n\n- My characters are flawed. Flawed female characters are more or less required in this section. But I refuse to pair them with the typical ever-loving, perfect, non-cheating, rich ex Navy Seal owner of an international PI firm. So expect flawed male characters as well. If you can't handle that, choose another author or complain in the comment section that the male character was less than perfect AGAIN if that makes you feel better.\n\n- This story just flowed and I had a good time writing it. When it was finished, I realized there are some similarities to \"Fifteen Hours\". I'm quite aware of that, yet I liked it too much to let it rot on my hard disk. If the similarity annoys you or if you didn't like \"Fifteen Hours\", better don't read this one.\n\n*****\n\nYeah, this is it. The perfect evening. My feet are located higher than my hips, which, as everyone knows, is essential for a serious hanging-around position. A cold beer is strategically positioned in my right hand. My eBook reader is lying on the deck at my side, but switched off, just like it should be at such a moment. No input is necessary now, mental or otherwise. Apart from a little bit of beer, of course. This is a much needed moment of serenity. I need to just - be. And most of all - be alone. Solitude is the only acceptable state in my current life. The sun is just about to set and the colors are warm. The sea is absolutely calm, there is no wind and no sound at all. This is as peaceful as it can get.\n\nHalcyon, my sailing yacht, is anchored in a small bay off a Greek island. Well, not really an island. More like a big piece of rock. This rock has two major advantages: a population of zero and an excellent anchoring place. The small bay is deep enough for my 50 ft. yacht and it is quite nicely shielded from the open sea.\n\nAnchoring the yacht was quite a task obviously, since I was alone. I needed a second mooring point because the bay is too small to let the boat swivel freely. But the manual labor was quite welcome after a day of lazy sailing in the Aegean Sea. Now everything is done, the beer is cool and the silence is just perfect.\n\nThen my thoughts return to Julia. They always do whenever I'm not occupied with something. I always fight it and the more I try, the more I fail. I rarely think about the good times we had, because I have reason to doubt those too. I had lived under the illusion of being one gloriously happy bastard. She seemed all lovey-dovey too and it was just a shame that no camera was present to record her performance. An Academy Award would have been a sure thing. Anger starts to overwhelm me again.\n\nNo, stop it. The sea. Look at the sun. Beautiful. There are some doves. Very interesting and underrated animals, worth observing. Especially right now. Relax. I suddenly decide that the mooring lines need to be checked again although I know that they are perfect. I just need something to occupy my mind before the damn thing returns to her again. To Julia. To the evening I discovered the truth. No. Stop it. Shit. This is driving me crazy.\n\nOn a sudden impulse I jump into the sea, swimming a short distance. It helps to clear my mind. It stops me from getting angry again: from falling into the seething rage that made me avoid other people, especially women. I need to prevent my rage spilling onto innocent bystanders, like it did so often during the last months.\n\nIt was my sister Annette who told me I'm a ticking time bomb. She was right, of course. She always is. So I chose to live as a hermit: it's the best solution for everyone. But instead of living in some damp, dirty cave where I would never see the sunlight, I bought a luxurious sailing yacht. I might be disappointed by humanity, but I'm not dumb.\n\nI climb onto my boat again and decide to keep myself occupied by cooking. Julia never cooked, when we wanted to eat at home that was my task. A lot of things were my task, come to think about it. That bitch. No! Stop. I take the eggs, some mushrooms and proceed to produce an omelet. I'm not really hungry, I just need some defined task to keep me occupied.\n\nAgain, I marvel at the silence and solitude of the place. This is really my favorite place in the world right now and I'm just happy that it is public property so everyone is free to stay here whenever they want. I've rarely seen other boats around here, which makes it even better.\n\nI sit on my deck and enjoy my simple meal in total silence. The absolute absence of sound is almost deafening now, as it usually is in the evenings when the wind has died down. Perfect.\n\nI love it when the rocks are illuminated by the reddish-yellow last rays of sunlight. It's nothing short of spectacular. The silence is broken by an engine noise. At first, I think it's a fishing boat on its way home, but the noise gets louder.\n\nFinally, I see a huge white motor yacht appearing from behind the island. Shit. My silent, lonely night is already history. It will be filled with loud and rude party people and it's too late and too dark to go to another island now. Damn.\n\nThe nearer it gets, the bigger and uglier the thing seems to get. Loud techno music can be heard now. This is going to be just \"wonderful\".\n\nThe yacht approaches my position until its bow is a mere five meters away. This is not a respectful distance any more. A man in a black suit appears at the bow and looks totally out of place in the Aegean Sea. He hails me.\n\n\"Hey mate. Listen, this is Fulvio Brione's yacht. You know him, the fashion czar.\" He has to shout to be heard over the loud music.\n\nI just nod. I have no idea why he's telling me this and I have no intention to find out.\n\n\"So be a nice little nobody and remove your tiny boat from here. We need this mooring spot and we need some privacy.\"\n\nI just laugh briefly and shake my head.\n\n\"Listen, we want to handle this in a cooperative, friendly way. But this is Mr. Brione's mooring spot you're in.\"\n\n\"This is public property. I got here first, so it's my mooring spot. You will just have to anchor over there. Or wherever, that's none of my business.\"\n\n\"Boy, I'm getting a little pissed here.\"\n\nI just shrug my shoulders. His strategy seems to try to piss me off, whatever he hopes to achieve with it. It doesn't work anyway, I don't give a shit about this clown.\n\nHe goes astern. I concentrate on my beer again until he returns a few minutes later.\n\n\"What about a thousand Euro for you if you move?\"\n\nThese guys are actually funny. \"Keep your pocket change.\"\n\n\"Asshole.\"\n\nI just wave him off dismissively.\n\nHe disappears again. After a while, the ship moves backwards, towards the second best anchor place, which is almost in the open sea. They anchor their ship about 30 meters from mine, which is far too close for my taste, but there's nothing I can do about it.\n\nI try to not get angry by deciding to regard the whole thing a free show for my entertainment. The ship is as brightly illuminated as a circus and some of the persons on her deck can only be described as bizarre. The gaudily dressed men parade around like complete morons. The women all wear high heels and black bikinis. I wonder what kind of deck they have: I certainly wouldn't tolerate high heels on my teak deck. But they seem to be mandatory aboard this ship, like the general behavior seems to be. Men are busy finding themselves awesome, women are present for decoration purposes. I'm amazed how idiotically these people behave and how great they seem to find themselves. They probably don't think too kindly about me either. It's like we are from different planets.\n\nApart from the peacocks and the bikini girls, there are a few black suit guys aboard, obviously bodyguards. Then there are the white uniform people, probably part of the crew. The bikini girls seem to be fashion models, some of them are merely slim, while others are extremely thin. It's like watching a conference about malnutrition. My first impulse is to help those poor famished girls by feeding them.\n\nFrom time to time one of them looks down on me as I relax on my boat and I realize how far apart we are. They are in their glitzy fashion world, probably fighting hard to make a life by brown-nosing and fucking influential people on occasions like this. Probably thinking they are successful and extremely important for humanity. I, on the other hand, am just a lonely, regular guy with a beer in his hand. I'm definitely not a happy man, but I think my life is still way better than theirs.\n\nI wonder about the women on this ship. Maybe they plan to snatch a rich guy to gain some wealth and social status by marrying him before at a ripe age of probably 22 they get too old for their job. I realize that I have no idea about their world. How long can fashion models work? 20? 30? 40? I have no idea.\n\nI think about Julia again and her attempt to get rich by marrying and divorcing some unsuspecting rich dude - namely me. She fooled me completely. I really loved her, finding out the true nature of our relationship and losing her hurt me a lot. It still does. My whole life is still revolving around her, but in an entirely negative way.\n\nSome shouting on the deck of the big yacht brings my attention back to the present. One of the women seems to be in some kind of argument with a small group of men, one of them Brione himself. He's easily recognizable as he's the only overweight person aboard. One of his bodyguards is at his side and for a brief moment it looks like he wants to hit her. It looks almost comical as all of their heads turn simultaneously in my direction. Whatever they planned to do with her, they are suddenly aware that they have a witness. I just smile and lift my beer in a salute.\n\nThe fat guy and the bodyguard drag her inside for more privacy. Whatever they have in mind for her, it doesn't seem too good from here. She seems to have come to the same conclusion and fights them tooth and nail. The other girls and a few men watch the scene without any reaction - their lack of compassion amazes me. She's on their boat, there's no police around, she's completely at their mercy. Yet nobody feels compelled to help her.\n\nSuddenly she jerks free and runs towards the bow. Brione and his goon grin and follow her slowly. They know that there's nowhere she can go. She's theirs. It's their ship. They are stronger. They are wealthy and powerful. They can certainly destroy her career. They advance on her like predators, closing in for an easy kill. Watching the situation makes me sick. This is not right. I really have the urge to intervene somehow, but I have no idea how to do it.\n\nThe girl looks around in panic and yells something at the other passengers, but these assholes just turn around and look away. Just as I decide to get my camera, the girl suddenly jumps overboard. This surprises everybody, including me. The drop is quite high, but she jumps gracefully, looking fantastic in her high heels. A brave move, but it won't help her. She has nowhere to go.\n\nAt least that's what I think until I realize that she's swimming in my direction. She still looks graceful, but I can't appreciate the sight any more. She's about to invade my privacy. What can I do? Send her back to those lechers? Would I be any better than them? No, that is not an option. I couldn't live with myself afterwards. The alternative is to take her in, to sacrifice my precious solitude. Worse, I'd have to be around a woman: something I've sworn never to do again.\n\nDamn. Just what I need now, a woman around me. Not just any woman, but a fashion model. Probably a spoiled, bitchy brat, whining and complaining all the time, living out her bulimia to the fullest. I can almost hear her. \"I can't possibly eat that kind of salad, it's not even organic!\" \"Do you have some decent Evian water instead of this San Pellegrino piss?\" \"I need my avocado in the morning! Why don't you have the most basic stuff on this caricature of a boat?\" \n\nAren't there any places in the world without women? A cloister maybe? Would I be of any use in a Gregorian chant? Are these monk guys really eunuchs or do they just look that way?\n\nShe's still swimming in my direction. Damn, a damsel in distress. Possible female company. I panic. \n\nIt's too late to weigh anchor now and I can hardly reject her if she wants to come aboard. Hell, it looked like she was about to get raped on that ship. Okay, okay. I can take her to the nearest port tomorrow. She has just reached the ladder at the stern. I will help her but that doesn't mean I have to talk to her much. Women are not good for me; I need to stay away from them. I'm determined that I will never get hurt by one again. I need to keep my distance from this one. This decision helps me to calm down a little. I haven't spent months to re-gain my mental sanity just to have it shattered by the next bitch.\n\nShe looks at me questioningly and I just extend my hand to help her out of the water. No word needs to be spoken, which suits me just fine. I might have a guest for a limited time, but I certainly don't plan to chatter all day long because of it. The situation is self-explanatory anyway. She knows that I witnessed the scene on Brione's ship and my extended hand should tell her that I'm willing to help.\n\nWait, she's still wearing her high heels and she's about to step onto my teak deck. I just point at her shoes and she understands immediately.\n\n\"Oh, sure, sorry.\" She starts to remove them. \"I'm Anna, by the way.\" \n\n\"Mark.\" Damn, a few seconds in female company and I'm already babbling like an idiot.\n\nShe extends her hand again. Our first handshake doesn't seem to count as I only helped her aboard. I understand what she means and shake her hand. This is a combined greeting and thank you.\n\nShe stands up and looks around, taking her time. It's obvious that she's not as much taking in her new surroundings as giving me the opportunity to take a look at my new guest. Maybe she just wants to give me time to get used to her after I've opened my home in a less than voluntary way for her. I think that's a sensitive gesture after having imposed herself on me this way. I wonder what a woman with a sensitive bone in her body has been doing aboard this asshole's ship. I don't need to hear this story, but I'm afraid I will sooner or later anyway.\n\nMy new guest is a strikingly beautiful woman, as it could be expected for one of Brione's toys. She's not as young as I guessed, though. She might be in her mid-twenties, which makes her only a few years younger than me. \n\nAnna is not some kind of attractive girl-next-door type. She's not cute. She's not pretty. She is straight beautiful, no sense in denying it. If I just saw a photo of her, I'd immediately assume she's an arrogant and self-centered bitch. She just has to be with such a face. Well-defined jaw and cheek bones, perfect green eyes, and a perfect straight nose. Not a cute nose, but a thin, perfect model nose. She is a little on the thin side, but she doesn't look famished like some of the other girls. Her bones don't stick out and she has small, but shapely boobs. Her hair is still wet and it's quite dark by now, so I can't tell what color it is. But it's long, very long.\n\nI had thought that Julia is beautiful and out of my league. But compared to Anna she's plain and unremarkable. This woman is so far out of my league that it isn't even funny anymore. A few years ago the sight of this jackpot in the human genome lottery would have aroused me to no end. But I've decided to keep women out of my life and I think I've been quite thorough in conditioning myself. With Julia's evilness as a perfect motivation, of course. I can appreciate this woman's beauty, like I would a butterfly or a flower, but it doesn't affect me. At least that's what I keep telling myself.\n\nAfter giving me a few seconds to check her out, she looks at me again.\n\n\"Thanks for helping me.\" She looks a little tentative, almost shy, which surprises me for some reason. Women that look like she does are not supposed to be shy. I expect them to just take what they need and move on. But I realize that she really needs me and lot depends on my reaction.\n\n\"Hmm,\" I just mutter, nodding. I want to make it clear from the beginning that speaking is not high on my agenda. She looks at me puzzled, shrugs her shoulders and takes the towel I offer her. After a while she smiles and has probably booked me under \"grumpy sea dog\", which is totally okay for me as it is not far from the truth.\n\nI look at the grotesquely illuminated ship again and see Brione discussing something with two of his bodyguards. He seems quite animated and points towards my boat from time to time. Perhaps he's thinking of boarding my yacht to reclaim the girl? An act of piracy in Greek waters would be more trouble than even someone like Brione would want, especially over a woman he can easily replace. He's probably one of those people who can't stand to lose at anything, right down to rock paper scissors. But what do I know? Don't get too curious, old boy or you might get more involved than you want to. Just keep those weirdos out of your life.\n\nI turn around and see that she has watched the same scene, looking worried. She doesn't seem to be arrogant and stuck up right now.\n\n\"I hope the fat bastard doesn't send his gorillas to kidnap me.\"\n\n\"Hmm,\" I say in a dismissive tone, shaking my head.\n\n\"He could, you know. He has four security apes he could send after me. Could we just sail away?\"\n\n\"Tomorrow.\" I try to sound curt to keep my distance.\n\n\"Okay. I can't say that I'm going to sleep well, I'm still a little worried. Thanks again for saving me. They were just about to rape me.\" She seems quite unperturbed by my brief answers. But what she says surprises me. \n\n\"They?\" I ask before I can stop myself. Damn, stop it, this is none of my business.\n\n\"Yeah, Brione, his male guests, his bodyguards and the whole male crew. It seems that he has made a bet that he and every other male on the ship will fuck every girl at least once before the ship returns to Italy. All the other girls weren't looking forward to it, but let them do it anyway. I... well I suddenly just couldn't stand it anymore. Suddenly - I don't know - something snapped inside me. I've endured a lot, for very little gain. But today it became just too much.\"\n\n\"Shit.\"\n\n\"Yeah. I said no to Fulvio Brione, and with one little dive, my career is toast. That part of my life is already history.\" She looks a little shaken at her own insight.\n\nI just nod and emit some grunt that might or might not sound sympathetic. For looking so beautiful, this fashion business is totally shit.\n\n\"Yeah, you're right,\" she resumed, despite the fact that I hadn't said anything. \"Maybe it's even better this way. Nothing I can do about it now, right? Leave the old shit behind, try something new. New opportunities will arise. Life is change.\"\n\nShe seems surprisingly upbeat again. How could she just shrug off something that completely wrecked the life she thought she had? I wish I could. Or did I?\n\n\"Hungry?\"\n\n\"Seriously? I'm always hungry, it's part of my job description. I've been hungry for ten years now.\" She laughs. It's magical. Damn, what a woman. No, stop this, you fool! Okay? Just stop it.\n\nTo distract myself, I go below deck to get some of my omelet for her. She follows me and looks around.\n\nWordlessly, I offer her a plate with some omelet. Keeping my grumpy mood is surprisingly arduous while she's around, but it has to be done. No sense letting myself like this woman, I'm quite sure no good will come of it.",
        "\"Oh yes, that looks delicious. Thanks. You live alone here?\"\n\nI nod, desperately trying to limit my communication with this woman to the absolute minimum, lest I be infected with her upbeat personality.\n\n\"Would you have some clothes I could borrow? I didn't exactly have time to pack.\" That smile is back. It's still fabulous.\n\nI nod, and go to my stern cabin to get her some sweats. I don't know how long I can stay grumpy in the face of that smile.\n\n\"Take one of the forwards cabins.\" I hand her the clothes.\n\n\"Thanks. They're all available?\"\n\nI just nod again.\n\n\"Why is a man like you living all alone? How have you managed to keep the women away?\"\n\n\"What?\" The total shock on my face brings on that musical laugh again. Then she takes pity on my confusion.\n\n\"Never mind. I'll get changed. It gets kind of cold in this wet bikini.\" There is far more warmth in that smile than a stuck up fashion model should have, as she turns and heads forward. I watch her for a moment; she's just as gorgeous from the back as from the front. I shake my head and try to puzzle out what she was talking about.\n\nJulia told me time and again over the years that I was \"just a guy,\" completely ordinary, with nothing special or attractive about me. I was lucky to have her, she told me, and I had come to believe her. Now this incredibly beautiful woman, an actual fashion model no less, was asking me how I kept the women away? I figure I have some time while she's changing, so I try to figure this out.\n\nTwo minutes later she's walking toward me, making my ratty old sweats look better than they have any right to. Of course, she's a fashion model. So she's supposed to change quickly and to look good in everything. Still, my only comparison is Julia, who could take half an hour to change her shoes. I could get used to a quickly dressing woman, I think, chuckling a little. \n\n\"Hey, you can have a friendly face. I think you're not as grumpy as you try to be.\"\n\nI'm trying desperately not to smile back at her. It works, sort of. Her hair is drying and it becomes obvious that she's a brunette. It doesn't matter, she would look good with any hair color. Damn, stop this, Mark. All it will bring you is trouble and heartache.\n\n\"Would you mind if I stayed below deck? I don't want to remind Fulvio I'm here.\"\n\n\"Hmm,\" I say in an affirmative tone. My attempts to stay monosyllabic are starting to sound ridiculous, even to me.\n\n\"Okay. See you tomorrow. Would you mind if I borrow your eBook reader?\"\n\nI nod again and retreat into the safety of my cabin, feeling relieved to be alone again.\n\nxx\n\nEarly morning on deck. I'm always grumpy in the morning. The cup of coffee that is my only companion doesn't mind. I could stay in bed, but then I'd just lie there and think of Julia. That's no good. I'm thinking of her anyway, so I guess it doesn't matter. \n\nShe hated my morning grumps. Now that she's not here to grouse at me, I've come to like this mood. I can sulk all I want to about how life (really, Julia) treated me, and there's no one to tell me not to. \n\nThe noise and commotion from Brione's Floating Whorehouse finally stopped around 4 am. Now it looks and sounds like a ghost ship. I'm betting they won't be up until noon. Good.\n\nI hear shuffling below decks. My uninvited guest seems determined to break out of the 'fashion model' mental box I created for her. She's over 20, she's not bulimic, she's not stuck up or bitchy even when I'm almost rude to her, and now she's an early riser? What's next, she's a certified diesel mechanic?\n\n\"Morning.\" Her head emerges from the hatch.\n\n\"Morning.\" I'm sure my grumpy mood is obvious.\n\n\"Coffee?\"\n\n\"Galley.\"\n\nShe disappears down the hatch. It seems she's just as terse as I am in the morning, though a lot nicer looking.\n\nI turn back to look at the sea. The smooth surface of the bay is painted with images of Julia and her lover, intimately joined, smirking at me. Shit.\n\nI hear my unwanted guest coming up on deck. Now that she's had her coffee, she'll be all perky and happy and want to talk, about stuff I either don't care about, or don't want to talk about. And she'll smile that fashion-model beautiful smile, don't forget that. Shit. I don't want anyone to cheer me up. I want to mope. Alone. Don't I have the right to do that?\n\nAnna (now I remember her name) surprises me again. She doesn't say a word. She sits on the deck next to me and gazes at the calm sea. The air is still fresh and crisp, and the intense Greek sun hasn't yet begun to scorch everything in sight. Strange: all I see now is the sea. Julia has disappeared. The silence stretches comfortably between us.\n\n\"So what's the deal?\" she suddenly asks.\n\n\"Deal?\"\n\n\"You rescued me. What do I have to do?\" She looks a little tense now, almost as if expecting bad news and not wanting to hear them.\n\n\"Did everyone that helped you in the past wanted something in return?\" Damn, I didn't want to talk that much and I certainly don't need to learn anything about her past, but her question has surprised me.\n\n\"Yeah, pretty much.\"\n\n\"Well, your life must be pretty shitty, then.\" Yeah, right. Any woman as beautiful as she is would have men lining up to beg for the privilege of doing her a favor. \n\n\"It is.\" I look at her. She is serious; her beautiful face looks completely forlorn. I turn away, not knowing what to say. This silence is not comfortable.\n\nIt occurs to me that getting out of here before Brione and his fellow revelers wake up is a sound idea.\n\n\"Is there anything on that ship that you need?\" I'm surprised how gently I ask her.\n\n\"No.\" She says it firmly, as if she's renouncing her high fashion life and everything associated with it.\n\nI nod and prepare for getting under weigh. I hope she won't follow me around and try to 'help.' She doesn't: she stands at the rail, silently gazing at the sea. Is that just how she is? Or has she figured out that's what I would like? Either way, she seems to know me far better than I'm comfortable with.\n\nI stow our coffee cups in the galley and get to work. I bring in and stow the mooring lines; fortunately, I can do it without using the dinghy. Getting the anchor in with the winch motor will take a while and be noisy toward the end, but there's nothing I can do about that. Anna looks anxiously toward the Floating Whorehouse as the noise increases.\n\nThere isn't much wind, so I fire up the diesel. I'd like to put some distance between myself and Brione just in case the anchor winch woke someone up on the Whorehouse. Halcyon has a nice turn of speed if I need it, but I'd prefer to just disappear. \n\nI can almost see the tension leaving Anna as Brione's yacht grows smaller and finally disappears from view. She looks even more beautiful, which I hadn't thought possible. She sits next to me, quiet and happy, as I stand at the wheel. \n\nWith Brione out of sight, I've had enough of the diesel's noise. I set the sails and kill the engine. Ah, blessed silence! Only the wind, the waves, and the sails can be heard. I trim the sails and return to the wheel. The companionable silence falls between us again.\n\nI look over at her from time to time as she sits quietly, gazing at the sea. With Brione out of sight, she seems relaxed and serene. She doesn't seem to have a care in the world. This is odd, I think. She doesn't look like a woman who's just thrown away a career most girls would kill for. \n\nIf Julia had done that - not that she would, but if she had - serene is exactly what she wouldn't be. Nervous, shrill, demanding, yes. Serene, no. Unless...\n\nWhat if this Anna is thinking of me exactly as Julia did? What if she's decided that since I let her come aboard, I must be the sucker who will support her in the style to which she's become accustomed? Is that why she hasn't a care in the world? Oh, shit, I thought, here we go again. Henry Higgins was right: Let a woman in your life, and your serenity is through. I was finished with that forever.\n\nI look at her. She has turned her face away from me, gazing over the port rail at the sunlit ocean. She looks completely innocent. Of course, I remind myself, she's a model. Ex-model, that is. They can look like anything they want to. I look upward to check the sails, then off to starboard.\n\n\"What did she do to you?\" My reverie is broken. Wait, how did she know that? I stare dumbly at her.\n\n\"Well?\" Damn, the morning has been almost perfect and now she has to ruin it.\n\n\"Nothing. I'm just a guy.\"\n\n\"Sure. A handsome guy, obviously well off, sailing alone on a gorgeous boat, trying to cover the fact that he's nice by being grumpy.\"\n\nWhat, handsome? I've found the first flaw in her: she definitely needs glasses.\n\n\"You need to talk about it sometime; we're all alone here, and I'm a good listener, but I don't want to press.\"\n\n\"Thanks.\" \n\nDamn. Am I that obvious?\n\n\"Yes, you are.\" My head snaps around and she just chuckles. I can't help but smile. Shit, keeping my defenses up is not really going well.\n\n\"Okay, I'll bite. What will I say next?\" She actually blushes a little.\n\n\"I don't know what you will say. I do know you try to keep your distance by being silent. \n\nShe takes a deep breath and looks me in the eye. Her face registers determination, though I think I see sympathy in her eyes. Or do I imagine it?\n\n\"You've been hurt, badly. Your reaction is to curl up in a ball and keep everyone at a distance, because you're afraid you'll get hurt again. That's okay, it's natural; even animals do that. Sooner or later, though, you have to uncurl and start moving again. You're walking and talking, but you're still afraid of being hurt, especially by women. I get that. But you've chosen to cut yourself off from humanity, with only your pain for company. What you don't see is that every time you choose to think about your wounds instead of other things or other people, you let her hurt you again. Your pain gets worse instead of better. You don't even get any sympathy, because you've cut yourself off, so no one's here to see you.\"\n\nI pictured myself as suffering in noble solitude, insulating myself so that no one, certainly no woman, could ever again do to me what Julia had. What if all I'm doing is sulking? I decide to give her the basics; maybe she'll stop talking and I can think. Or sulk, or whatever.\n\n\"Okay, I was married to the woman who'd been my best friend since we were kids, but it crashed and burned.\"\n\n\"She cheated?\"\n\n\"Yeah, and at the end all she wanted was my money. So you see why I'm a little gun shy, especially when it comes to women.\" There, that should hold her for a while. But it doesn't.\n\n\"I'm sorry, I thought it must be something like that. But now you're letting her continue to hurt you, and keep you away from happiness. It's a shame that you give her that power over you.\n\n\"Look, you're going to have to talk about it sometime. You can't just lock all of that up inside, it's not good for you. And who better to talk to than someone you'll never see again?\" \n\nI look at her in surprise. I guess she isn't making a play for me, after all. \n\n\"Don't worry, I already knew you planned on getting rid of me at the next port. So your secrets are safe with me.\" She paused. \"Would it help if I told you my story?\"\n\nI think for a moment. If she's telling me her story, she isn't asking about mine, and trying to make me move past the pain of Julia. That scares me. But what if she's had it worse than I have, and handled it better? Then I'd have to open myself up to this beautiful stranger whose world is completely different from mine. What would become of me then?\n\nShe interrupts my musing. \"Back to the silent treatment, then?\" She has this infectious grin, like a mischievous little girl. I'm about to smile back at her, when I catch myself. No attachments, I remind myself; don't let her get to you.\n\n\"Too late,\" she's still grinning. Damn, she caught me again. I'd better watch myself around this woman.\n\nSlowly her smile fades, and her eyes focus on the far horizon.\n\nShe speaks in a flat monotone, as if she's reciting. \n\n\"I grew up in a small town, where everyone knew me. Other kids were smarter or more talented, but I was the one who was expected to go out into the big world and do something. Be famous, you know. When the only thing you can do is look beautiful, that means modeling.\n\n\"I soon found I was at the bottom of the food chain: quite a change from being the princess in my little town! For the first time in my life, I was told I wasn't good enough. Time after time, and in the crudest and most hurtful terms.\" She turned toward me, her eyes pleading for understanding.\n\n\"Mark, when you do something - a project, a report, or something - and you're told it isn't good enough, that's bad enough. When you're told it's you, yourself, that isn't good enough, nastily, again and again, it really does things to you.\" She paused and turned back to the horizon.\n\n\"Like a lot of models, in self-defense, I began to think of my body as something that wasn't really part of me. It was almost like a tool box or a skill set. I did my best to keep it up: I worked out, I ate right, all those things. I still wasn't good enough: I was never chosen.\n\n\"Then I noticed that the directors chose girls they already knew: girls who had partied with them, or with someone even higher up the food chain. Partied, of course, was a euphemism for sex. It didn't matter whether the director was a man or a woman, it seemed that was what you had to do.\n\n\"I resisted for a while, but the pressure of not getting any jobs was too much, and I gave in. It wasn't all that bad: most of them were considerate, even nice. I had gotten used to considering my body separate from myself anyway; I was just using it to get the job as well as using it on the job. I began to get some work. \n\n\"Everyone in my little town was overjoyed every time they saw me in some catalogue or advertisement. It was as if I carried the hopes and dreams of the entire village. So I kept doing it, even though I knew I would never reach the top, and I was beginning to hate my life. I knew several girls who were in abusive relationships, and I began to understand them better.\" She sighs.\n\n\"I'm not sure what finally made me change my mind. I'd been on Brione's cruises before, and knew pretty much what was expected of me. For some reason, whether it was the bet or the gangbang, I'd had enough. I hid in my cabin until the goons dragged me out, and you saw what happened after that.\" She stops and looks at me. \n\n\"They never thought I would have the nerve to jump. I probably wouldn't have, except your boat was there, and I'd heard you stand up to them earlier in the day. I was terribly afraid last night, that Brione would send his goons after me. Believe me, that was one time I was glad to be just another replaceable pretty face! I wonder if I broke up their bet.\" The corners of her mouth turn up as she imagines it; I smile back to encourage her. I still can't get used to the idea that anyone would think that she's just another pretty face.\n\n\"Now I'm done. That's all over. The village will have to find someone else to be famous for them. So what if I have no job and no money: I've been there before and survived. I won't sell my body, nor let people tell me I'm not good enough, ever again. I don't know what's coming next, but whatever it is, I know it will be better, because I'm free!\" She smiles at me. I had thought she couldn't look any more beautiful, but I was wrong again. The animation in her face makes her radiant.\n\n\"So now you think I'm a whore.\" She's still smiling, and her eyes twinkle like stars. What the hell do I say to that? Fortunately for me, she's probably used to men losing coherent speech when she gives them her Grade A Treatment. I mutter something about choices and honesty and stuff that I'm sure makes no sense, until she rescues me.\n\n\"You know, in a way, I'm a virgin.\" My mouth falls open, and she laughs again. I was right: I could definitely get used to hearing that laugh.\n\n\"Remember, I told you I had come to think of my body as separate from my heart - the real me. So yes, men and women have used my body, and yes, I enjoyed it sometimes, but I've never made love. I've never shared my heart.\" She looks at me seriously for a moment and continues. \n\n\"All I ever really wanted is what my mother has: a quiet life with a good man, and a house full of love. I lost my way for a few years, but not anymore.\" Then the smile is back.\n\nShe is so determined and optimistic that I feel weak and whiny in comparison. I excuse myself to go below where she can't see my feelings, and return with two glasses of chilled Sauvignon Blanc. We toast to her future, and I suddenly realize it's not just her face and her body that are irresistible: it's her. I decide to tell her my story, to avoid thinking about her.\n\n\"Do you...\"\n\n\"Yes, I still want to hear your story.\" Still with that smile. Am I really that transparent?\n\n\"Yes, you are, but I still want you to tell me the story.\" Damn, how is she doing that? Oh, well, something else to figure out later. I begin.\n\n\"I met Julia on my first day of school. She was a cute little thing, and a couple of bullies were pulling on her pigtails, and I made them stop. From then on, I was her protector, and she helped me with my homework and kept me from being stupid. My family had money and hers didn't, but that doesn't matter when you're six. We were inseparable.\n\n\"Then she grew into a pretty and popular girl, and she didn't want me fighting off the boys any more, she had other things to do with them. We were still friends, but everyone including my mother told me she was out of my league. I was just too ugly.\"\n\n\"Your mother?\" She sounded horrified. \"That's pretty brutal. Not to mention totally wrong.\"\n\n\"Maybe, but I still have trouble with that, even today.\" \n\n\"Your mom needed glasses, or else she was drunk. She was confusing you with two other guys.\"\n\n\"Hey, don't talk about my mother like that!\" I scowl at her. For just a moment, Anna thinks I'm serious, then she bursts out laughing. I smile at her, then continue my tale.\n\n\"We ended up going to the same University. She got in touch with me and wanted to talk. She'd had some bad experiences with stuck-up assholes, as she called them, and remembered how safe she felt with me back in grade school. She hinted that I might have a chance with her after all. Of course I was all over that, and before I knew it, I proposed, she accepted, and we were married. I was the luckiest guy in the world, until I came home and found her in our bed with another guy. I didn't even confront them; I just locked myself in my study and licked my wounds.\"\n\nShe nods, as if that's what she expected I would have done.\n\n\"She cried a lot, begged forgiveness, and promised to remain completely faithful, to never do this again. I resisted for a while, but I really wanted her back, so I agreed.\"\n\n\"You forgave her, then?\" I nod.\n\n\"I think I would have forgiven one mistake, too, but she obviously didn't keep her promise.\" Anna looks thoughtful for a moment. \"Did she have money when you married?\"\n\n\"Well no; why?\" \n\n\"You said earlier she went after your money when you divorced. I'm just guessing, but what if she thought that because you had the money, you had the power in the relationship? What if she felt insecure because of that?\" \n\n\"I loved her! I did everything I could for her. Why would she feel insecure?\" \n\n\"Maybe dependent is a better word. Either way, I wonder if her cheating was an attempt, consciously or unconsciously, to even the scales? Perhaps to take some power for herself, and make you somehow dependent on her?\" \n\n\"What, are you making excuses for her now?\" I'm getting a little pissed at her, to tell the truth.\n\n\"No, not that. I don't think there are any excuses for breaking promises like that, not real ones, anyway. I'm thinking of you. You're stuck in this lonely, isolated place. You're not getting hurt, but you're also not happy, and you won't be until you start living again. To do that, you need to understand at least a little bit of why she was so cruel to you.\"",
        "\"How come you know all this?\" I'm trying to be sarcastic, but she doesn't take it that way. She looks at the horizon again.\n\n\"I don't know, I guess I just do.\" She smiles a rueful little smile, then turns back toward me.\n\n\"Go ahead. What happened next?\" I take a deep breath and tell her how my world ended.\n\n\"It starts off like such a clich\u00e9, I'm almost ashamed to tell you. It was snooker night with my buddies, but the power went out in the pool hall. They wanted to go out drinking instead, but I thought time home with my wife sounded like more fun. I went home, and found candlelight and soft music in our apartment. It was one of our special things to do, you know: one of my buddies must have alerted Julia I was coming home early.\n\n\"I followed the candles to our big bathtub. She was there, alright, with that happy just-fucked look on her face, exchanging kissy faces and soap bubbles with some guy. I stood there watching them, wondering how to get their attention. All I could think of was to clear my throat.\n\n\"That's where the clich\u00e9 ended. They both turned to look at me, but neither of them seemed upset; they were both smiling at me. A soapy male hand extended itself toward me, and the guy said 'Hi, I'm Andy. Nice to finally meet you.' As the suds subsided, I could see he was cuddled up with my wife, their arms around each other.\n\n\"About then it hit me what I was really seeing: the end of my marriage. The end of my lifelong love. I just stood there, feeling shell shocked, desperately trying not to bawl like a baby. The two lovers looked at me with comfortable sympathy. I guess the bath water hadn't gotten cold yet.\n\n\"'Mark, don't take it so hard. It's no big deal. I still love you like always; this is no threat to you, or to our marriage. Nothing needs to change at all.'\n\n\"She might have been talking Icelandic for all the sense she was making. 'You mean you plan to continue this?'\n\n\"'Of course, Mark. I love you both. I'm sorry you found out this way, but it was going to happen anyway, so maybe this is for the best. I'm glad you've met Andy; I think you'll like him.'\n\n\"I had no idea what to say, so I just stood there. Mistaking my dumbfounded silence for approval, Julia smiled and went on.\n\n\"'You see, Mark, I've discovered that I love two men. Andy's already accepted it, and I know you will too, when you see how happy we all are. You're my husband, so of course you'll have me most of the time, though now that you know, I'll spend a few nights with Andy. I'll do that when you're out with your buddies; you won't even miss me. Of course when we decide to start a family, he'll have to wear a condom so we'll know the children are yours, right Andy?' Andy nodded enthusiastically. 'So you see, Mark, our marriage will be stronger, and everything will work out fine.'\n\n\"'What about your promise to be faithful?'\n\n\"'Oh, that. Well, I guess I was a little hasty. Besides, I hadn't met Andy yet.'\n\n\"'That excuses your breaking your promise?'\n\n\"'Oh, Mark, don't be so melodramatic. Think about it. Andy and I have been seeing each other for over two months. Have you gotten any less love from me? Less affection, or less sex? No, you've actually had better sex since I've been seeing Andy, and you know it. He's not your competition, Mark. You see, Andy is the artistic type, unpredictable, spontaneous, the opposite of you. You're the better lover, because you know me so well, but I enjoy him too, because he surprises me. I love you, Mark; you aren't losing me. This doesn't have to be a big deal unless you make it one.'\n\n\"She'd had an affair for two months, and I never knew it. She wasn't sorry; she just demanded that I accept it. Her promise of fidelity was worthless. I could feel the hurt start to penetrate my heart, as I looked at my smiling wife and her lover.\n\n\"'What if I don't go along?' She still smiled, but the smile had an edge to it now.\n\n\"'I hate to tell you this, Mark, because I love you and I hope this never happens, but you need to know. If you divorce me over this, I have to protect us. Andy and me, you know. I'll make sure I get at least half of everything you have. I don't want to, but I will if I have to.'\n\n\"'Mark, don't look so sad. Remember I've loved you since I was six. It shouldn't be that hard a choice: keep enjoying everything you have now, including your loving wife, or lose me, your home, and half of everything you own.' She and lover boy smiled their warmest smiles at me, inviting me to accept my betrayal at their hands. I'm sure I had the same dumb look on my face that the cartoon character gets when he's hit in the head with a brick. Andy had to stick his oar in again.\n\n\"'Hey, Mark? It is Mark, isn't it? Why don't you stick around and join us?'\n\n\"'Oh, that's a great idea!' Julia enthused before I could say anything. 'Come on, Mark, don't be such a spoilsport. It'll be fun, you'll see.' She took a handful of suds and blew them at me, then kissed Andy cutely on the nose.\n\n\"I'd had enough. I turned around and left. I could hear them talking low to each other, giggling occasionally. I didn't know I'd said anything funny, but you never know. I packed a small overnight bag and left.\"\n\nI pause. I've been so involved in telling the story that I've forgotten Anna is even there. She was right, though: I need this. \n\n\"I got a hotel room and did about what you would expect. I cried, I cursed, I punched the mattress, and finally fell asleep in a chair with my clothes on; none of which changed anything. When I woke up, though, one thing had changed. Julia was no longer the little girl I'd protected, or the wife I'd loved. She had made herself my enemy now. The only thing I cared about was protecting my assets from her and lover boy. It wasn't that I needed the money, but paying her for fucking around on me was just wrong on principle.\n\n\"I had one big advantage that my dearest wife was unaware of - my wealth wasn't really mine at the time. I was living off a trust fund, set up by my sly grandfather. He had a black humor and was deeply mistrusting women in general. He had decided that I would be receiving a hefty monthly allowance until at the age of 40 or after my first divorce the whole fortune would change ownership. He said that in both cases I would have learned the facts of life by then. Legally I had almost no assets at the time Julia had killed our marriage. Ironically, our divorce was about to make me rich.\n\n\"I immediately visited my family attorney who assured me that the worst that could happen would be a small alimony for a limited time. I really wasn't looking forward to having to give her a single Euro, but this was a solution I could at least live with. He handled all the details, making sure Julia couldn't run off with anything, and filed for divorce. He said things would start to get interesting in a couple of weeks, when she would come to realize the new situation. Meantime, I rented a nice apartment, and moved in what little I wanted from the old one. \n\n\"Julia didn't try to contact me for a whole week, and then it was only a text asking if I'd gotten over my hurt feelings and was ready to come home. I didn't answer. For someone who loved me so much, she certainly didn't seem to miss me.\n\n\"My attorney was correct. Two weeks to the day after our appointment, the barrage of texts and messages began. Her attorney must have told her she wasn't going to be as wealthy as she thought. At first she said that if I would come home, I'd see how much she would love me and how much stronger our marriage would be. Then she told me it was all just a big misunderstanding, and she was sure we could make everything all right. Finally, she just told me to man up. After all, Andy accepted it, why couldn't I?\n\n\"Suddenly, the static stopped, and a couple of days later, her attorney produced a postnup giving her 20.000 per month for life if we divorced, and saying I'd signed it. Which was stupid, because after the handwriting folks did their thing, Julia's credibility was pretty much zero. Then they tried for domestic violence, but couldn't provide any evidence. Finally they decided not to dig themselves a bigger hole, and accepted what we offered, which was now down to 2.000 per month for a year, and nice hefty bills from her lawyer.\n\nI had won. But I also felt like shit, and ran like a rabbit whenever a woman approached me. So I became a hermit.\"\n\nI fall silent. The only sounds are the wind in the rigging and the waves under the bow. Anna says nothing. I look at her. Tears are streaming down her face. You know what? She's still beautiful.\n\n\"I'm so sorry, Mark. That's terrible. I understand why you hurt so much.\" The funny thing is, I hurt less after telling her the story. I wouldn't have guessed that.\n\n\"But Mark, you can't go on this way. Don't you see? She's not worth throwing your life away over. She never cared about your happiness, but now you're letting her make you miserable.\" She speaks with intensity, determination written on her face even as the tears dry on her cheeks.\n\n\"Mark, you have to live. If you don't, you've let her kill you.\" I flinch. That's pretty drastic, but I can tell she means every word. She lets me think about that for a while before breaking into my thoughts.\n\n\"So you're a hermit, then?\" She has that quirky, teasing smile on her face again, and the sparkle is back in her eyes.\n\n\"Yeah, I guess so.\" Yesterday, I'd have been proud to say it. Now, I'm not so sure.\n\n\"Your place is a lot nicer than those hairy bearded guys used to have.\"\n\n\"Fortunately, yes.\"\n\n\"Promise me you'll leave it soon though. You need to start to live again, Mark.\" Her voice is soft and warm; I look into her eyes and I can see that she cares. A lump forms in my throat, and all I can do is nod.\n\nShe draws back from the moment. \"Good,\" she says. \"Now that that's all settled, maybe I can get some sun.\" Her smile both dares me and invites me to watch her as she gracefully stands and walks toward the bow. People actually told this girl she wasn't pretty enough? Yikes.\n\nI accept her invitation and enjoy the view as she stops just forward of the mast, rolls my sweats up into a pillow and reclines on the deck. There's certainly nothing else out here anywhere near as watchable as she is, and I'm very sure she knows it, in spite of how nice she is. Her loose, long hair fans out and catches the breeze. She looks perfect enough for a magazine cover, even when there's no one to take the picture, but there's more to her than that. She's kind. People don't get how important just ordinary kindness is, except it isn't ordinary. She's empathetic. She cried when I told her about Julia, and somehow that made me hurt less. Is she telepathic? I sure hope not, but for someone who met me less than 24 hours ago, she knows me and my thoughts too damn well. \n\nIs she right about me, though? Should I give up my isolation? I know I can't go through what Julia did to me again. I would die. But if I'm already letting Julia slowly kill me, like Anna said, what's the difference? I'm still staring at her as I muse. What about her, then? She left her previous life behind, just as I did, though somewhat more dramatically. Where I'm hiding from the world, afraid of getting hurt, she seems eager to get out there and go on with whatever is next in her life, even though she has no idea what that might be. What's more, her attitude is contagious. Just being around her is making me less afraid of living again. I almost feel that with her, I could... No. She's obviously way out of my league. Maybe somewhere, though, there's a girl who's like Anna, but not as gorgeous, that I could build a life with. My imagination roams freely, while my eyes are mesmerized by the slow rise and fall of Anna's smooth belly and high, round breasts, almost completely revealed by the tiny scraps of black fabric.\n\n\"Mark?\"\n\nOh, crap, she's caught me looking. I thought she couldn't tell from behind the sunglasses. Maybe models can always tell, I don't know. \n\n\"Where are we going?\" She asks the question as if she really doesn't care.\n\n\"Naxos.\" \n\n\"So that's where you were going to dump me?\" She rolls over onto her front and removes the sunglasses, and grins at me.\n\n\"No, not dump you, I wouldn't, but well, no, not like I wanted to... oh, crap.\" She's laughing now.\n\n\"I'm sorry, Mark, I shouldn't do that. I know it's not nice, but I just seem to always know what you're thinking, and it's been so long since I had anyone to tease and be light-hearted and just have fun with. Forgive me?\"\n\nI smile and nod. I think I would forgive her anything if she'd only look at me like that, and then the \"all women are selfish bitches\" voice reminds me of what women can do when they think they'll be forgiven.\n\n\"No, Mark, I'm not like that.\" She says it gently and seriously. Damn, she's doing it again! I sense that she knows why I need to hear it, and doesn't mind repeating it as often as I need it. Whoa, am I reading her now? What's going on here?\n\n\"So am I leaving the boat at Naxos?\"\n\n\"NO! I mean, not unless you want to, or you really have to, but you can if you want, I really like you here, but I wouldn't... oh, damn. You can stay as long as you want.\" She's enjoying my stammering way too much. I take a deep breath.\n\n\"I'd been planning on stopping there anyway to lay in supplies, and you might want to get some clothes.\" That's my story and I'm sticking to it.\n\n\"What's the matter, sailor, not enjoying the view?\" She stands and leans against the mast, posing like a glamor girl. I gape and goggle; she laughs, then becomes serious again. \n\n\"You know I don't have any money or debit cards, and I don't know if I'd be able to get to my bank accounts from Naxos. I might not be able to pay you back, at least not right away.\"\n\n\"Hmmm,\" I pretend to think things over, while I walk toward her. \"Well, maybe I can think of a way for you to pay me back.\" I'm trying to keep a straight face, and I must be succeeding. She has this \"Oh, no, not him, too\" look on her face.\n\n\"How are you with knots?\" I ask, still straight-faced. She shrinks back from me just a touch.\n\n\"Um, what kind of knots?\" There's a little quiver in her voice I hadn't heard before.\n\n\"Sailors' knots. Halcyon doesn't sail herself, you know, and since you're here, you might as well help out.\" \n\nI smile as she laughs and punches me on the arm. \n\n\"I had you going there, didn't I,\" I enjoy having the laugh on her for once.\n\n\"It looks like someone else has gone too long without a little light-hearted fun,\" she smiles at me.\n\nWe sit on the foredeck facing each other as I start to teach her some knots. It's still hot even though the sail shades us from the fierce Greek sun, so I take off my shirt. We catch each other looking from time to time, and smile. It feels odd to have someone who looks like her, look at me like that, but not so odd I couldn't get used to it. I haven't been this relaxed around a woman in a long time. We trim the foresail more for practice than anything else. She's more athletic than I would have guessed, and watching her move is a joy.\n\nI'm the envy of the waterfront as my bikini-clad guest helps me moor Halcyon. She follows my instructions perfectly, and looks like she's been doing it her whole life. If I'd ever thought she was just another brainless model, I certainly know better now. She pulls on my sweats and we head into town.\n\nOur first stop is at a bank, and as she had feared, Anna is unable to get access to the money in her accounts in Italy and Germany without her ID or debit card, so she's shopping on my dime. My cynical self expects her to act like a stereotypical model and buy at least two of everything in sight, so of course she doesn't. She gets some sundresses, some shorts and tops, and actually asks for my advice on what shoes to buy. Everything she buys is good quality, but nothing is glitzy or garish. I go off to buy the food and supplies while she sees to her underthings, and we're both thoroughly laden when we meet at the town square. \n\nWhen we left the docks, I had been snickering at her sweating in my sweats in the mid-afternoon heat. Now she's wearing a light sundress, looks absolutely gorgeous, and it's her turn to laugh as I gawk and stare as she pulls me along. Of course, half the male population of Naxos wishes they were in my position.\n\nWe go aboard and stow our purchases, and relax for a moment. Anna looks at me seriously. Every time I think I'm getting used to how beautiful she is, she looks at me a different way, or she holds herself differently, and I'm stunned all over again.\n\n\"Thank you, Mark,\" she says. \"I have some savings, and I will pay you back.\" \n\n\"Shouldn't you hold onto your savings until you get a job or something?\" \n\n\"Well, maybe, but I don't like owing debts to friends.\" Her smile is soft and sweet, her eyes warm and tender, and I panic. This is all going way too fast for me.\n\n\"We are friends,\" she repeats. \"Friends help each other, like you helped me last night, even when you didn't really want to.\" We both know she is right. \"Friends don't hurt each other, and whatever happens, Mark, I won't hurt you. Ever. And you know, we're... comfortable together. I was trying to think how long it's been since I was just comfortable with a man: no expectations, no pressure, just friends. I can't even remember when it was. You're getting comfortable with me, too.\n\n\"There's another thing. You know how I seem to always know what you're thinking? How I can read you? You're the only person I can do that with.\"\n\n\"Damn,\" I try to look disappointed. \"I was hoping you could read everyone like that, and we could rule the world.\" We laugh together, and she gazes at me for a moment.\n\n\"So, friend, what's the plan for tonight?\" \n\n\"Well, friend,\" the word comes out before I can stop it, startling me, but it's the right word. \"I don't have a clue. I'm known as the man without a plan.\"\n\n\"Good,\" she says, smiling, \"because I have one, and it's perfect. You're going to take me onshore to that nice-looking seafood place we noticed, and we're going to have a wonderful dinner together.\"\n\n\"And then?\" \n\n\"And then we'll come back aboard and I'll tell you the rest of the plan.\"\n\nWe go ashore for dinner. The seafood place isn't pretentious; for a moment I wonder if Anna will think she's slumming. I'm pretty sure they've never had a fashion model, even an ex-, in there before. But it's obviously been there for generations, and it's clean and well kept, so I have high hopes for the food.\n\nSure enough, every eye is on us as we walk to the restaurant and are shown to our table. I know Anna's used to this, but I'm not. She senses that I'm ill at ease, and draws close to me. \"It's okay, Mark. I don't mind their staring at you; I'm not jealous.\" We share a laugh as we sit.\n\nFortunately, places like this don't mind if you dawdle for a couple of hours over dinner; in fact, they take it as a compliment. The owner comes by a couple of times to say how much he enjoyed us enjoying his food. If his real motive is to get a closer look at Anna, so what? I can't blame him, and the food is good. There's something special about seafood that was actually swimming just a few hours ago. Most importantly, Anna is enjoying herself, and to my immense surprise, so am I. \n\nFinally we rise from the table. The owner and the waiter (son No. 3, I'm guessing) see us out, and we stroll along the waterfront before we go back aboard Halcyon. Anna holds my arm. She says little; I say nothing. \n\nWe're aboard. I haul up the gangplank and turn toward her. She melts into me, gives me the lightest kiss on the lips, and steps back. I can't tell whether the sparkle in her eyes is a reflection of the lamps on shore, but she is, as usual, irresistible.\n\n\"Thank you.\" She speaks low, almost whispering. \"I can't remember the last evening I've enjoyed so much.\" She turns away for a moment. To hide tears? After a moment, she turns back to me, smiling impishly.",
        "\"So are you ready to hear the rest of the plan?\" \n\n\"Um, sure, I guess.\" She laughs.\n\n\"Are you sure?\" She winks and raises one eyebrow slightly. Her voice from earlier in the day plays in my memory. \"Promise me you'll start to live again, Mark.\" \n\n\"Okay, I'm game. Whaddaya got?\" I put my hands on my hips in my best ready-for-anything pose.\n\n\"This is where I seduce you.\" \n\n\"Uhh...?\" My eyes get big as saucers, my mouth falls open, my arms fall to my sides. \n\n\"Seduce. You know, where I... and then you...\" She's smiling at me like I'm some sort of slow learner, which is exactly what I feel like. I gurgle something at her; she giggles.\n\n\"Well, there's one part of you that knows what I'm talking about.\" Her gaze falls to the tent that has suddenly appeared in my crotch. Oh, shit. She hasn't unbuttoned a single button, and I'm harder than I can remember.\n\n\"Um, Anna, I thought you didn't, want to, uh, have sex so soon after...\" I'm proud of myself for even getting that much out.\n\n\"Oh, don't worry, Mark, we won't be having sex.\"\n\n\"Uh?\" I seem to be saying that a lot.\n\n\"We're going to make love.\" The serious eyes, the sweet smile, the warmth of her soul. I feel myself falling for her. \n\n\"Anna, you can have anyone you want. Why me?\"\n\n\"We're falling in love. Haven't you noticed?\" The panic rises in me again.\n\n\"Mark, I'm not Julia. I could never do to anyone what she did to you.\" She says it gently, but seriously. I believe her.\n\nWordlessly, she grabs my shirt and kisses me straight on the mouth. Damn, this feels good. This is almost magical. It's like I've never kissed a woman before. As we finally break our connection, I see that she's crying. And to my amazement I feel that my eyes are wet too. Our connection is almost scary.\n\nShe just stands up and I realize that she still has a firm hold on my shirt. She roughly drags me behind her as she rushes towards my cabin. Then she pushes me onto my bed. I stare in awe as she starts to dance to some imaginary music and slowly starts to remove her newly purchased summer dress. She's still wearing that ubiquitous black bikini underneath. Her toned body seems too good to be true. Then she slowly moves her hands behind her back and starts to toy with the bikini straps. Oh, god, surely she's not about to lose that bikini top too? I'm holding my breath as she starts to pull on one of the straps until the knot is loose. She pulls the top over her head and I see her breasts for the first time. Oh my God. They certainly are not huge. But they are so perfect.\n\n\"You're unbelievably beautiful.\"\n\nShe just smiles and proceeds to slowly push her bikini bottoms downwards. Her small landing strip comes into view. I'm so aroused that I'm afraid to come just by looking at her. Damn, that would be embarrassing and the thought cools me off a little again. I snap out of my reverie and frantically start to undress myself.\n\nxx\n\nI'm still bathing in the afterglow, trying to come to grips with what has just happened to my life. Why has this dream woman chosen me? Because of my money? I can't think of any other reason.\n\nI suddenly raise my head and look at her. She has been watching me as well, a content expression on her face.\n\n\"No, Mark.\"\n\n\"No?\"\n\n\"Because I love you. Not because of your money. Don't get me wrong, of course money makes things easier. But being with a man because of his money is the last thing on my mind right now. The thought alone repulses me. I'll sign any prenup, no problem.\"\n\n\"Prenup?\"\n\n\"Well, in case we marry someday, of course. You never know.\" She smiles impishly and has to laugh after a few seconds. It seems my fate is already sealed. Well, could be worse. What? Am I crazy?\n\n\"And even if the thought never crossed your mind, I'm on the pill and you're the first man ever to have me without a condom. So you're safe.\"\n\nOh, my God, what an idiot I've been. She just laughs again as she sees my reaction.\n\n\"You're so cute, Mark.\"\n\n\"Ah...\"\n\n\"Mark, we have to think about where we're going to go from here.\"\n\n\"Well, this boat's home port is Antibes.\" I'm not sure if that's what she's been talking about.\n\n\"Good. You have a car there?\"\n\n\"Yes.\"\n\n\"A big one?\"\n\n\"X5.\"\n\n\"Good, that's one of those SUVs, right? We'll drive to Milano from there if you don't mind. We can pick up my stuff there, the shabby remains of my old life.\"\n\n\"Oh, sure. That's almost on the way to Germany anyway.\"\n\n\"Good. We're going to have so much fun. I have my work cut out for me and I'm going to enjoy it.\"\n\n\"Your work?\"\n\n\"Yeah, I have to convince this guy that nice women exist.\"\n\n\"Oh. So you want to open him for the fellow members of the female species again?\"\n\n\"What? Are you kidding? No way, my reasons are purely selfish.\"\n\nI'm afraid I'm gawking rather boorishly. This is too good to be true.\n\nxx\n\nThe four weeks it takes us to return the boat to Antibes can only be described as perfect. We spend it with sex, sex and - yes - also some sex. We also lounge in the sun, eat good food and visit various harbors. We don't talk about the future, divorces, diets, fashion and the past.\n\nAfter our arrival in Antibes we pack our stuff, clean the boat and load everything into my car. After we lock up the boat, we look at each other in what seems a maudlin way. We've both enjoyed the time together on this boat tremendously and both fear that now the cold reality will reclaim us, that things will change. We don't talk about this, but we know each other well enough by now to understand this.\n\nThe trip to Milano and to Germany is uncomfortably silent. After she fled this Brione guy I tried to remain as grumpy and quiet as I could, now I wish we had something to talk about, to alleviate our fears, to break the tension. I don't know what she's afraid of, but I'm afraid to lose her again. If I'm completely honest, I've completely fallen in love with her and I'm afraid to get hurt again.\n\nxx\n\nWe live in my condo for about four weeks, but the spark is somehow gone, replaced by an underlying tension. The sex is still good, we enjoy living together, we enjoy each other's company a lot, but we're not as relaxed as we've been on the boat. I seriously contemplate to return there in an attempt to save our crumbling relationship. I don't know what else I can do to stop it and we're both avoiding the subject. \n\nWe currently watch some stuff on TV and again I realize how unappealing the program is. She is snuggled against me with her head on my shoulder, which is a lot more appealing.\n\nI seriously think about retreating to the bedroom for some fun when the doorbell rings. Anna still refuses to open the door or to answer the phone in my condo, which starts to annoy me as it shows that she's not really at home here.\n\n\"Okay, Anna, I'll get it.\"\n\n\"Thanks.\"\n\nI open the door and find my nightmare standing there. Julia. Dressed to the nines, looking pretty, being evil incarnated. \n\n\"Oh, honey, there you are finally,\" she exclaims and throws herself at me. Disgusting. She doesn't mind that I don't reciprocate and just steps back to watch me.\n\n\"My my, don't you look good? You've been in the sun a lot? It suits you.\"\n\n\"Thanks.\"\n\n\"Won't you ask me in?\"\n\n\"Please come in, Julia,\" I hear behind me while I still think how to get rid of her. Frowning, I step aside.\n\n\"Thanks. And you are...\"\n\n\"Anna.\"\n\n\"I'm Julia.\"\n\n\"I know.\"\n\nWhat a weird conversation, I think while I close the door. Their voices are suddenly harsh, if their words were daggers, the floor would be soaked with blood now.\n\n\"Please have a seat, Julia.\"\n\n\"Thanks.\" \n\nI'm still silent.\n\n\"So you're a friend of Mark?\"\n\n\"I'm his girlfriend.\"\n\n\"You're getting paid for this?\"\n\n\"You're asking if I'm a hooker?\"\n\n\"Well, honey. Let's not beat about the bush. You're quite good looking. Mark is filthy rich. I wouldn't suspect a hooker but maybe some kind of escort service?\"\n\n\"No, sorry, I wouldn't want to intrude in your line of business.\"\n\n\"What? That's ridiculous.\"\n\n\"So you haven't married him for his money?\"\n\n\"No, of course not. That was just a big misunderstanding during that unfortunate divorce. We belong together, I truly love him.\"\n\n\"So do I.\"\n\n\"Honey, let's face it. Mark is a nice guy, but he's not in our league, looks-wise. So I don't buy for a second that you're here out of love.\"\n\n\"Okay, HONEY. Let's talk about leagues here. I'm certainly not in yours.\"\n\n\"Oh, don't sell yourself short.\"\n\n\"I'm not. You're a decent looking woman, but I'm model quality.\"\n\n\"Ummm...\"\n\n\"Now let's talk about Mark. He's handsome, built like a brick shithouse, honest, open and caring. He's a catch, one in a million. I'd be glad to catch him. If he asked me, I'd marry him in a heartbeat.\"\n\n\"Seriously?\" I ask, totally stunned. \n\n\"You just want his money, you bitch.\"\n\n\"No, I'll gladly sign any prenup.\"\n\n\"Seriously?\" I ask, again.\n\n\"Sure, you doofus. What do you think I've been waiting for all this time? Why do you think I've been on pins and needles since we left the boat?\"\n\n\"Ah... What?\"\n\n\"Mark, please don't. This Anna bitch is no good for you. You need me.\"\n\nI still can't believe my good fortune, but I slowly stand up and move towards Anna.\n\n\"Anna...\"\n\n\"Noooo! Mark! Don't!\"\n\n\"Yes!\" Anna smiles from ear to ear.\n\n\"Anna, will you...\"\n\n\"Maaark!\" Someone grabs my shoulder and tries to stop me. I hardly notice it. I'm in some kind of daze. But I like it. This is some kind of dream come true. I realize that I've expected for four weeks that Anna will leave me for good, now that she's back in Germany. I really can have her? Un-fucking-believable...\n\n\"Yes! I will.\"\n\n\"Anna, please marry me...\"\n\n\"YEEEEES!\"\n\nI can't seem to finish this damn sentence.\n\n\"Noooooooo, Mark.\" Julia has finally released my shoulder and Anna jumps into my arms.\n\n\"Yes!\"\n\n\"Shit. This can't be true. Mark, dont'do this...\"\n\n\"Really? You will?\"\n\n\"Yes, Mark. Finally. I thought you'd never ask. I was so afraid...\"\n\nThis time I silence her with a kiss.\n\n\"Well, it seems I'm not needed here anymore. Mark, I would have been so good for you. Instead you choose this bitch to let her gut you.\"\n\n\"You're right, Julia.\"\n\n\"What?\"\n\n\"You're not needed here anymore. I'm glad that you came, it was the best that could happen to us, the best thing you've ever done for me. Julia, I wish you all the best. I've forgiven you, it just doesn't matter anymore. But if you would excuse us, we need to consummate something.\"\n\n\"Anna, don't hurt him, okay?\"\n\n\"I won't.\"\n\n\"Not like I did.\"\n\nAnna and I look at each other, surprised, while Julia walks to her door - the entrance - while we walk to another - the bedroom.\n\nI have definitely traded up. I really have to thank Fulvio Brione and Julia for making this dream possible."
    ],
    "authorname": "stev2244",
    "tags": [
        "wife",
        "cheating",
        "model",
        "sulking",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-hermit-1"
}