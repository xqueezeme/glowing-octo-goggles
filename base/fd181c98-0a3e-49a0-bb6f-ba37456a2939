{
    "title": "Darkroom - Saturday",
    "pages": [
        "This is the final chapter of a continuing story that begins with Darkroom - Monday.\n\n----\n\nSteve's alarm went off at 7:00 on Saturday. It was unusual for him to get up earlier than 9:00 on the weekend, but he had signed up to teach English to immigrants at the library once a month and today was his first day. He rolled out of bed, checked his email. Nothing yet. A shower and breakfast and he was on the road.\n\nThirty minutes later and he was helping a group of three elderly Indian ladies learn the days of the week in English.\n\n\"Sunday\" they repeated after him, \"Monday, Tuesday, Wednesday, Thursday, Friday, Saturday.\"\n\nIt was strange how a single week could completely load a set of ordinary words with new significance. \n\nDieter was at the gym. His time with Friday, with Marie Marthe, had been tantalizing and brief. She had completely skewed his standards of what he was looking for in a woman. After the girls had gone the night before he had stayed in the basement to clean things up. She had left her dress behind. He wondered if she had a change of clothes, but he guessed that she had probably just walked away naked. He had no doubt she was capable of doing that. He pushed metal against gravity. For the moment, he felt like he was beating it.\n\nAnthony answered the door at 9:00, yawning in his boxers and a t-shirt. It was the landlord. He said he had sold the house. They had 30 days to get out.\n\nGabe and Justin were blasting each other to pieces on the LAN. They were talking smack on the chat channel between lobbing grenades and calling in air strikes on each other.\n\nAnthony came in with a paper in his hand and some bad news.\n\n----\n\nEnglish classes were over at noon. Steve had covered the days of the week, the months of the year, the seasons, and counting to twenty with his ladies. They left, one by one with their rides and he stood there on the curb watching them leave, a bag of cooling samosas in his hand from a grateful student.\n\nThe mood in the house when he got home was pestilential.\n\nThen the email came.\n\nHi Boys,\n\nWe know about your house. Don't start packing just yet. One of us knows how to help you guys out. Trust us.\n\nIt's Saturday and today we're getting the hell out of the dark. Find us at the food court at the mall by the theater at 2:45. We'll all be within view of each other, but otherwise alone. You may have to take a few risks. Join the club.\n\nLove,\n\nMonday, for Tuesday, Wednesday, Thursday, and Friday\n\n----\n\n\"We're early,\" Gabe said.\n\n\"No we're not. Your watch is fast. It's always four minutes fast. We set it while you're sleeping.\" Anthony was in the parking lot with the guys looking at the mall. \"It's kind of late for lunch- maybe there won't be too many people in there.\"\n\nAnthony realized something was wrong before they even opened the glass doors.\n\n\"Oh shit.\" Steve spoke for all of them. The place was swarming with young women.\n\nDieter scowled. \"Your Monday is one evil little...\"\n\n\"Watch it.\" Steve said, \"You're right though. Evil. It's opening day of romantic vampire movie 4. Right after the first showing.\"\n\nThere were long lines of women with the occasional humiliated boyfriend waiting to get into the second showing and crowds of blushing fan girls flowing out of the theater and into the food court.\n\nDieter smiled. \"Well, it looks like I can eliminate 80% of the crowd. Good luck, guys.\" And he waded into the chaos.\n\nJustin looked shell shocked. \"I don't even know where to begin.\"\n\n\"They know what we know about them- they'll be signaling us somehow,\" but Gabe was secretly thinking the same thing. How do you find the girl who invented your favorite blowjob?\n\nJustin groaned. \"I just know she has incredible tits, but I don't actually know what they look like. I can't go around feeling all these girls. I'd get maybe three chances before security would drag me out.\"\n\nAnthony took a step forward. \"Well, if any of you see a hot girl humping a pillow, let me know.\" and he headed for the arcade.\n\n\"Screw it,\" Steve said and stood up on a table and started waving his arms. \"Hey! Monday? How about a clue?\" He waited as several hundred amused eyes turned to stare at him. \"No? Okay then. Girls, I'm looking for my Cinderella and she has great smelling hair. I need you all to line up here and I'm going to sniff your hair one by one...\" He saw some uniforms starting to move in his direction. \"Never mind,\" he said quickly, getting off the table and plunging into the crowd.\n\n----\n\nMarie Marthe stood with her arms crossed, leaning against the wall near the ladies' restroom, scowling. Two girls standing near her kept up a high pitched irritating chatter, \"did you see those guys. I know- the one on the table was cute. Does my hair smell nice? But I know- totally, the blond guy wearing the muscles. Wouldn't he look tasty in my Cabriolet? Is it true that guys who work out are compensating? Look, he's coming this way. Shit. I think he looked at me.\"\n\nMarie Marthe watched him approach, devouring him with her eyes. \"You're a beautiful man. I want you to kiss me.\"\n\nWhen Dieter heard her voice, he knew her immediately. She was walking toward him, looking fierce, wearing a dress that was similar to the one he had destroyed the night before. Her braids were gathered in a large bundle that swung at her back. Everything about her seemed to burn, her skin was dark brown, smoking hot, her breasts swayed freely in the front of the dress. Her lips seemed to have their own dance, impatient and mobile. The way she wore the dress, she could have been naked. She transcended her clothing. Her eyes burned into him and spoke of need, impatience, passion. He kissed her deeply, enveloping her in his arms and she grabbed his buttocks and pulled herself into him.\n\nAll conversation in the vicinity lapsed into uncomfortable silence as the kiss lasted beyond what was comfortable, or even decent. Dieter's hands were on the small of her back, mostly, sometimes lower. Finally, breathless, Marie Marthe broke the kiss, breathing heavily. \"Look into my eyes right now, like you will later. Look into me.\"\n\nDieter did. He let his excitement, his admiration for her, his lust, he let it all show in his face. They felt completely alone. \"Yes. You will take me to my room now.\"\n\nAs they left, a spell lifted from the people that had surrounded them. \"How did she do that?\" one of the chatterboxes wondered. Someone called out, \"Get a room,\" lamely, and too late.\n\n----\n\nSteve had managed to evade security, and was wandering blindly looking for Monday when he saw her sitting at a table behind a bottled sports drink- long blond hair, freckles, an impish smile, and a tight white t-shirt with \"Volvo\" stretched over small breasts. He stumbled over a chair getting to her, and sat down across the table from her heavily. She was wearing a very distracting miniskirt.\n\n\"I'm Thursday,\" she said, feeling a little sorry for the way it made Steve wilt. \"Monday told me you imagined she looked like me. We thought that could be a little awkward. She doesn't look like me at all. She's not that horrible though.\" She grinned and paused for a moment, thinking. Then she leaned forward. \"I feel a little bad for you, so I'm going to help. She's wearing what she wore Monday. It's important to remember that you weren't ever going to see her in it.\"\n\n\"Thank you,\" Steve said, as he stood, \"Anthony is going to be very, very pleased.\"\n\nShe smiled, \"Thank you- I sure hope so.\"\n\n----\n\nJustin wandered hopelessly, not really having any idea of how to find Wednesday. Finally he noticed that the light in the arcade was mixed with ultraviolet. He drifted over in that direction, not sure what to look for, but not having any better ideas. Several of the girls checked him out, the male to female ratio being what it was, but none of them seemed right. One's hair was too short, one was too tall, one had an infected nose ring. Then he saw something that caught his eye- a slightly goth chick with a little tattoo of the sun under her ear. He approached her, and she smiled at him. He thought he'd take a chance.\n\n\"Play a game of Ms. Pac Man?\"\n\n\"Old school. Sure, why not?\"\n\nHe led her into the arcade where he could see several people's clothes glowing. He looked at the girl he had invited, and nothing about her glowed except the \"Team Edward\" on her black hoodie. Her voice was wrong. It wasn't her. He played the game with her, but he was distracted and played badly.\n\n\"Thanks,\" she said, \"hey, if you haven't seen the movie yet, I'll take you.\"\n\n\"Thanks, no. Actually I'm trying to find someone. I met her on Wednesday. I don't really know what she looks like though.\"\n\n\"Cybersex, huh?\"\n\n\"What? no- well, sort of,\" he sputtered, \"I saw your tattoo and I thought it might be you.\"\n\n\"My sun?\"\n\n\"Yeah, never mind though.\"\n\n\"I saw a chick with a wicked sun tattoo on her back a while ago, looked like it was inked in blood. I wanted to get a closer look, but...\"\n\n\"Where was she? What did she look like? What was she wearing?\"\n\n\"Eager boy. I don't know- black hair. She was facing the other way over there. White top cut low in the back.\"\n\n\"That's great!\" Justin kissed her absently on the cheek, \"Thanks!\"\n\n\"No,\" she said, her hand on her cheek, \"thank you.\"\n\nJustin moved in the direction the girl had pointed, but didn't see anyone promising. He turned back to the arcade and he felt a jolt as he saw her. She was walking away from him into the arcade, an intricate sun glowing yellow under the arcade lights in the center of her exposed back, framed by long black pigtails tied low on her head. He plowed through the crowd, his eyes fixed on her back. Justin got to her and didn't wait- he grabbed her around the waist from the back and kissed her in the center of the beautifully airbrushed sun.\n\n\"Well now, that's a strange way to greet someone you've never met.\" The girl turned to face him. She was Asian, with prominent cheekbones and bright eyes. \n\nJustin was stunned. \"You're, um... beautiful.\" He stuttered and started again, \"My name is...\" and stopped, feeling foolish.\n\n\"I know- Justin- you feel like you should introduce yourself even though we... lit each other up the other night. My name is Kaiyin Huang, but people who know me best call me...\" \n\n\"Wednesday.\"\n\n\"I was going to say 'Karen', but people have been calling me 'Wednesday' lately too.\" She smiled, put her arms around his neck and kissed him deliberately. \"So, you want to want to watch the fun?\" She nodded to the crowd.\n\nJustin followed her gaze. He could see Anthony still looking, and nearby, Gabe was looking lost. Steve was moving with some purpose, but he clearly hadn't found Monday yet.\n\n\"Let's grab a table before someone else gets it.\" She led him out of the arcade, and he saw the artwork on her back fade to blood red on her skin. The deep V of the back of her blouse pointed at her hypnotically swaying jeans.\n\n\"Actually,\" Justin said as they sat down, \"I think I just want to sit here and look at you. I got the idea that your breasts were your best feature, but I hadn't seen your face.\" Karen looked at him, amused, letting him flounder. \"I know this is stupid, but it didn't occur to me that you'd be Asian.\"\n\n\"You guys really need to broaden your minds a little. Look over there. That's Monday in the sweater, Thursday is there at the table, Tuesday is in that line for smoothies over there.\"\n\n\"Huh. Thursday's the only white girl. Where are Dieter and Friday? I kind of expected them to stand out...\"\n\n\"Yeah, well, she snagged him as soon as he was within earshot and grabbed his ass. She kissed him like she thought she could pop her cherry like that.\" Karen stopped, then added, thoughtfully, \"He just might have popped her cherry with that kiss. They left- probably back to her room.\"\n\n\"Wow. I turn my back for a few minutes and I miss all the action. Hey- did you really get in trouble with the girls about the glow-in-the-dark stuff?\"\n\nKaren grinned, \"Sort of. I've been on the honor system. I haven't come since Wednesday night and I'm all kinds of horny. I'm not allowed to use my hands and I'm no good at seam riding. I just want to see Steve's face when he sees Monday, then I'm going to jump you and hope we don't get arrested.\"\n\n----\n\nGabe was passing the smoothie counter for the fourth time, trying to push through the line when the guy behind the counter yelled at him.\n\n\"You! With the stupid look on your face. What's your flavor?\"\n\n\"I'm not in the line...\" Gabe started, then stopped. He went up to the counter. \"What?\"\n\n\"What's your flavor?\"\n\nA smile grew slowly on his face. \"You know, I've never had a smoothie before...\"\n\n\"Well then,\" a familiar voice said just behind his ear, \"this is about to become your favorite smoothie.\"\n\nShe grabbed his belt at the back of his pants and steered him out of the crush of the crowd, staying behind him. \"Close your eyes, turn around and kiss me.\"\n\nEven through the taste of the strawberry smoothie on her lips, Gabe could taste the flavor of the girl herself, and a torrent of memories from Tuesday night flooded him, and when she broke the kiss and he opened his eyes he saw a black eyed latina looking back at him, biting her lip.\n\n\"What do you think?\" she watched him closely.\n\n\"I think you kiss like a goddess and you make me feel all wiggly inside.\"\n\n\"No-what do you think of me- now that you can see me.\"\n\nShe was wearing a white long sleeved t-shirt over black shorts, looking at him with what he was surprised to see was anxiety. The condensation from her smoothie was dripping off the cup and landing on a black canvas shoe. Her black hair was down and shining. A strand fell in front of her face.\n\n\"Tell me your name.\"\n\n\"I'm Marisol. Well? Tell me.\"\n\n\"Marisol, that's a beautiful name. You're absolutely beautiful. I'm speechless.\"\n\nShe smiled, finally. \"Speechless? Where's that pretty fucking vocabulary of yours?\"\n\n\"We're not engaging in the behavior that triggers...\"\n\n\"We could be soon.\"\n\nJustin took her by the shoulders and pressed her against the wall. He spoke insistently into her ear, his words moving her hair. \"I want to spin you around until you're dizzy, kiss you like a sister, like a girlfriend, like a lover. I want to undress you with my eyes and make you blush. I want to press my lips against your shoulder, your wrist, your neck, your thigh. I want to look at your face, innocent, mischievous, and naughty. I want to see you laugh and concentrate and scream. I want to look in your eyes and watch you come as I say your name.\"\n\nMarisol dropped her smoothie.\n\n----\n\nSteve's job was easier with Thursday's hint, but there were still a lot of girls wearing sweaters. He tried to move methodically through the crowd, but the crowd was moving too. When he finally saw her though, there was no doubt. She was sitting at the sushi bar, toying with chopsticks and watching him. The sweater was plaid, neon yellow and pink and the short silk skirt was olive drab. She was Indian, her deep brown eyes watched him with amusement as his expression transformed from shock to admiration. She had long silky black hair that hung straight down.\n\n\"My grandmother,\" she said, \"thinks you're cute and she's planning to 'forget' the months of the year so you'll go over them again with her next time you teach.\"\n\nSteve's mouth opened, then closed. \"Your grandmother? She was in my class this morning? Which one was she?\"\n\n\"She gave you a gift.\"\n\nHe remembered the samosas, setting them down in the living room when the guys told him about having to move out. The samosas had disappeared in seconds. Steve moved behind her and touched her. The sweater felt wonderful. He ran his hands down her back and brought his face down to her hair and breathed in. She wasn't wearing anything under the sweater.\n\nShe sighed happily. \"My name is Amala.\"\n\n\"Amala. You're Indian. I was completely wrong and you didn't even give me a hint.\"\n\n\"Don't feel bad. It's hard to tell with just your fingers and your tongue. Besides, it made me hot thinking about what you didn't know.\" She turned her face up to him. \"Kiss me.\" She ran her tongue into his mouth and across his tongue. She took Steve's hands and pulled them briefly across her breasts in a way that she hoped was somewhat discreet. \"Do I taste like curry?\"\n\n\"Not your mouth. Jury's out on the rest of you though.\"\n\n\"Smart boys...\" she sighed. \"We'll arrange an experiment. White boys always think Indian girls will taste like curry. And you, if you're like most white people, are German, Norwegian, and Irish with a pinch of French from a black sheep in the family tree. Do you think about it much?\"\n\n\"No.\"\n\n\"Neither do I. All that international hanky panky made you a very handsome man though.\" And she popped a California roll into her mouth. \"You want some?\"\n\n\"Sure.\" Steve grabbed another pair of chopsticks and struggled with a piece of crab. \"I get it,\" he said, \"chopsticks.\"\n\n\"Yes, and a cotton ball. You believed we could come up with seven ways to make you come with chopsticks and a cotton ball.\"\n\n\"It was just a figure of speech...\"\n\n\"Maybe, but the idea has provided us with many delightful hours of speculation, and a little bit of informal experimentation.\" Amala picked up another roll, dipped it in soy sauce and ate it, closing her eyes as the flavor filled her mouth. \"We could only come up with four.\"\n\n\"You actually came up with four ways...\"\n\n\"Well, sort of. One could possibly result in difficult to explain splinters in sensitive areas. One required three chopsticks- you know, minimum. One only works on women. Sorry. Our best technique would definitely work spectacularly,\" she looked at her watch, \"but we think it will take about four hours.\"\n\n\"You're not planning on...\"\n\n\"Not today, no. Today I want an orgasm too.\"\n\n----\n\nAnthony found Thursday spinning an empty plastic bottle on her table.\n\n\"I thought I might have to go out and set off the alarm on your car to get your attention,\" she grinned mischievously, \"but you've had kind of a bad day, right? My name is Summer.\"\n\n\"Hi Summer. Nothing bad about this day. You're amazingly beautiful.\"\n\n\"Getting an eviction notice didn't get to you at all?\"\n\n\"Details. Let me look at you for a while.\"\n\nSummer stood and came to his side. \"Get a good look. I don't want you to miss anything.\" She turned around slowly, brushing her bottom against his shoulder, putting her hand in his hair. Anthony drank in the sight. She had a heart shaped bottom, just covered by a grey pleated miniskirt and he flashed back to his hands on her in the dark. She sat on his lap facing him and stared into his eyes, oblivious to the mall crowd around them.\n\n\"Go ahead. Look at them.\"\n\nAnthony glanced around quickly. There were a few people watching curiously. He put them out of his mind and looked down at Summer's small breasts, inches in front of his chest, nipples poking out at him. She was holding her shoulders back a little and pushing them out. She sighed, sadly. \"I'm afraid this is as much action as my girls can get here, and they're so hard. Is there anything hard on you?\"\n\nAnthony let his eyes fall down to his fly and back up to Summer's eyes. She looked down at his erection under his pants and smiled hungrily.\n\n\"I think we're done here.\" He said. Summer slid off his lap and he grunted softly as she dragged her shoe across his erection. \"What do you want to do now?\"\n\n\"You know what I want.\" She pointed at 'Volvo' on her shirt, \"Or do nipples make men illiterate?\"\n\n\"That's yes and yes again.\"\n\n\"Meet me outside. My mommy taught me to go to the bathroom before getting in the car for a long trip.\"\n\nAnthony was sitting on a flower planter in the sun a few minutes later when Summer came out of the mall, an odd look on her face.\n\n\"I must be totally out of my mind,\" she said, \"but a girlfriend from my sculpture class is in there- her boyfriend ditched her and she doesn't have a way to get home. I told her I'd see if I could figure something out for her.\" ",
        "\"We've got time. Let's give her a lift. Where does she live?\"\n\n\"Sunnyside. I told you, I'm out of my mind. I should have just pretended I didn't see her, but she was crying. Shit- I'm sorry to mess things up.\"\n\n\"It's okay. Lemons. Let's make lemonade. Where is she?\"\n\n\"Probably watching through the glass doors. Her name is Beth.\" Summer motioned for her to come out. A girl in a black hoodie and black jeans came out of the mall, trying to hide black mascara streaks running down her face. She was thin and pale faced and he could see that she would be delicately pretty on a good day. Her mouse brown hair hung down over her eyes.\n\n\"Rough day, huh?\" Anthony said, turning his back to spare her feelings. \"Let's get you home,\" and he started out for the car. Summer grabbed his hand and squeezed as she walked along with him, Beth following a few paces behind.\n\n\"It makes me hot that you're so stinking nice,\" she said quietly, \"and it pisses me off that you being nice means I have to wait to do all the dirty things I have planned.\"\n\n\"Yeah, well, being nice has worked out really well for me lately.\" Anthony squeezed her hand back. \"This trip could be... well, it's at least ten minutes on the freeway.\"\n\n\"I know.\" Summer walked silently next to him, thinking. She turned to him. \"Friends share, right?\"\n\n\"Not me they don't,\" Anthony said quickly.\n\n\"Of course not. But maybe we can just cheer her up a little.\" A breeze picked up Summer's hair and blew it across Anthony's face. He wanted to bury his face in her hair, but clenched his teeth and kept walking. Summer squeezed his hand again. \"She needs a little kindness.\"\n\nAnthony thought for a minute. \"Okay. Here's what I'll do. I'll drive exactly the way you tell me to. This is you being nice. I'm playing dumb.\"\n\n\"Here it is,\" Summer said to Beth when they got to the car, \"Hop in the back.\"\n\nAs they pulled out of the parking lot, Beth finally spoke. \"I really appreciate this. I feel so stupid.\"\n\n\"Don't worry about it. Anthony's one of the nicest guys I know. I knew he'd come through.\"\n\nSummer sat in the passenger seat of the old Volvo, her feet comfortably up on the dashboard as they accelerated onto the freeway. Beth was sitting behind Anthony, curled into the corner of the back seat. Summer caught Anthony's eye and turned the knob on the stereo up a little, even though the stereo was off. He understood and sped up to 66.\n\n\"I saw lip marks on the window.\" Beth's voice floated forward from the back. \"Did someone do that while you were in the mall?\"\n\nSummer didn't answer fast enough. Anthony smiled, \"Those are my trophies. Girls who... appreciate me... leave me a little memento. Summer's the fourth one. Right here.\" He tapped the glass.\n\nSummer scowled at him and mouthed I'm going to kill you. She could feel a minor vibration starting. It wasn't much, but it was enough to make her relax a little and let her eyes go out of focus. She looked back at Beth. She had her eyes closed, clearly enjoying the sensation. She jumped when Summer spoke.\n\n\"Do you want to talk about it?\"\n\n\"What? Oh- him. Not really. I guess it was sort of my fault for being so into Jacob whenever he was on screen. I couldn't shut up about him.\"\n\nSummer turned the volume knob up again, and then again. Anthony sped up to 68. The vibration started in earnest. Whatever the tires were doing, it made an absolutely delicious sensation bloom in Summer's pussy.\n\nShe kept her voice natural, with some effort. \"What do you like about Jacob anyway? I kind of pegged you for a vampire groupie.\"\n\nBeth's breathing was speeding up a little, but she answered bravely. \"Well, he's all smoking and hard... everywhere. And he never wears... a shirt and he just looks hot to touch. Mn. Um- is the car supposed to shake like this? I mean, is it safe?\"\n\nAnthony kept his head pointed straight ahead, but his eyes were on Summer as she tried to tell Beth to keep the effects of the car secret from him. She was shaking her head and shushing her. \"I'm sure it's perfectly safe. Anthony takes very good care of his car.\"\n\n\"So,\" Summer started, caught her breath, and started again, \"So- you were telling me about Jacob.\"\n\n\"Yess. I- I forgot where I was...\"\n\nSummer twisted around and whispered, just a little too loud, \"I love this car! Shhh.\" She closed her eyes and bit her lip and crossed her legs.\n\nBeth grinned back shyly then took a deep shuddering breath. This was going to be a hard secret to keep.\n\nSummer suddenly had an idea. She turned the volume down a few notches. \"Beth, do you have your iPod? You made that sculpture class playlist- I bet Anthony would like it.\"\n\nBeth was trying to get control again. The vibration had eased off, but her body wasn't slowing down as fast as the car. She fumbled in her bag and handed the iPod and headphones over to Summer.\n\nSummer reached over and put the earbuds in his ears. \"Anthony, you have to listen to this. She made a totally rocking set.\" Summer winked at Beth, but she didn't start the music. She punched Anthony's shoulder and yelled. \"Cool, huh?\"\n\nHe grinned and nodded. Then he saw her hand spinning the knob up on the car stereo.\n\n----\n\nJustin was tracing the sun on Karen's back with his finger. \"What the hell is seam riding?\"\n\n\"You're kidding me.\" Karen turned around to see his face. \"You've never heard of seam riding?\"\n\n\"Not kidding. You said you aren't good at it.\"\n\n\"Remember pillow humping?\"\n\nJustin smiled. \"That I remember.\"\n\n\"Seam riding is the advanced version. It's a way a girl can get herself off in public by crossing her legs and squeezing her thighs together, sometimes pressing against the seam of her jeans for pressure on her clit.\"\n\n\"Girls can do this? It sounds amazing.\"\n\n\"It would be if I could fucking do it.\"\n\n\"So there could be a girl in here doing that right now? How would you know? Can you see any?\"\n\nKaren scanned the people sitting at the tables. \"There's one, I think.\"\n\nJustin followed her eyes. \"Where?\"\n\n\"The girl with the vampire makeup eating the corn dog. She's real gone. Look at her eyes. In some fantasy. Now look at her legs. The one crossed over the other is rocking, the toe is leading the movement. Can you see it? Squeeze, pause, squeeze, pause.\"\n\n\"I think so. How can you be sure?\" Justin was fascinated. Girls could do so much cool stuff.\n\n\"We'll know pretty soon. Either she's just innocently rocking her foot or she's going to climax. When she does, her thighs will clench down and she'll make some involuntary noise that she has to cover somehow. She'll fake coughing or a sneezing fit or maybe giggling. Keep watching.\"\n\n\"So let me get this straight,\" Justin was grinning. \"Some women fake orgasms in private, but in public they fake sneezing?\"\n\n\"Well? What would you do?\"\n\n\"I see what you mean. I guess I'd sneeze all over the place.\"\n\n\"There she goes- white knuckes... clenching, oh wow- I haven't seen that much shaking before... aannnd...\"\n\nThe girl sneezed seven times in a row.\n\n\"I feel like I should clap for her or something,\" Justin said, impressed. \"Why can't you do it?\"\n\n\"I don't know. It feels good for a while, then I just plateau.\"\n\n\"Show me.\"\n\n\"I'm not doing that right now. I don't need to. I have you.\"\n\n\"Five minutes. If you get off I'll take you anywhere you want to go and I'll do anything... anything you want. If you don't get off, same deal. Anything you want. If you don't even try, well, I guess we can go wedge ourselves into a changing room. This is a mall.\"\n\n\"Those are very generous terms. Five minutes.\" Karen crossed her legs and took a deep breath.\n\nSeven minutes later they were in Justin's car on the way to his room. He was breaking several traffic laws.\n\n\"Can't you drive faster?\" Karen was writhing in the passenger seat. \"I was soooo close and you stopped me.\"\n\n\"Five minutes was up.\"\n\n\"Fuck the five minutes. I needed another thirty seconds.\"\n\n\"I will do everything in my power to make you forget those thirty seconds. What's it going to take?\"\n\nIt took her the rest of the drive to tell him what it would take.\n\nShe left her shoes in the car, her blouse on the porch, her bra on the stairs, and she was struggling to get her jeans off at the door to Justin's room when they stuck around her ankles and she fell into his room, struggling and swearing.\n\n\"Help me get these damn pants off...\" When she looked up, he was miraculously naked and unflustered. She stopped for a second, breathing hard and saw his cock pointing straight at the sky. She started struggling again with renewed energy.\n\n\"You don't have time to get those off.\" He said, and he lifted her feet into the air, put his head between her knees and slipped his body between her legs. When his cock was poised at the lips of her pussy and her legs were trapped around his waist with the jeans, he bit her left nipple. She jumped and growled. He bit her nipple again and slid into her.\n\n\"Ohhhh Yessss,\" she yelled, and pushed hard against his thrusting. The jeans around her ankles gave her extra leverage, and she pulled hard, bit his shoulder, dug her fingers into his back.\n\nJustin was surprised at her need, but he matched her, thrust for thrust, pushing her passion, driving her. He grunted each time he slammed into her and she responded with delighted squeals.\n\nKaren screamed and Justin stopped her mouth with his own. The kiss was short and hard. She broke it. \"Oh, Justin... Yes!\" She came, shuddering and wailing. Justin stroked into her three more times and came, pumping hard into her pussy. He collapsed on top of her as she started to relax, gasping and laughing. He laughed with her.\n\nJustin lifted up on his elbows and looked into her flushed face. He was still inside her and felt her pussy twitching as she came down. \"I think you faked it.\" He smiled at her.\n\n\"What a horrible thing to say.\" She kissed him lightly on the lips and squeezed his softening cock with her pussy. \"What makes you think that?\"\n\n\"You didn't even sneeze once.\"\n\n----\n\nMarisol was dragging Gabe towards the theater.\n\n\"I thought we were getting out of the dark.\"\n\n\"That was before I had to fuck you right away. Now the only place we'll have any privacy is the theater.\"\n\n\"You're kidding me. There are a million people in there.\"\n\n\"Yep. They're all watching shirtless hunks fight over brooding girl. We're going to see that.\" She pointed at a poster. Screen 14 was showing a comedy of manners set in London in 1840.\n\n\"Smart girls are so...\"\n\n\"...resourceful when it comes to banging venues. You're buying my ticket. I bought your smoothie.\"\n\n\"You dropped it.\"\n\n\"I dropped my smoothie, and that was your fault. I'll expect a replacement. Your smoothie is still on the counter at the shop.\"\n\nThe theater was empty and the movie was starting. Gabe took Marisol to the top row and kissed her, sat down and pulled her down on his lap. She ground into his erection as he ran his hands under her shirt, up her belly and across her bra. She got her shirt and bra off and threw them on the seat as he slid his hands between her legs and tapped her shorts gently, right on top of her clit. Marisol sighed. \n\nGabe loved the feel of her skin- smooth and responsive. He ran his hands over her breasts, loving the sensation of her nipples hardening under his hands.\n\n\"No good,\" she gasped, \"it's too dark. Let's go to the front.\"\n\nGabe registered the first scenes from the film vaguely- a lot of parasols in manicured English gardens. There was a small stage immediately below the screen. Marisol jumped up on it. \"Stay there. You have to see me.\"\n\nShe stood in the shifting light from the projector and slowly turned around, showing off her hair, her back, her breasts. Gabe watched with his heart in his throat as she pulled off her shorts, then her panties. He pulled of his shirt as he watched her pace the stage, waiting for him impatiently. \"If someone walks in...\"\n\nMarisol interrupted him. \"They'll get a graphic representation of the subtext of the film. Help me out. When he says, 'Harriet, you are full of charms,' what he really means is...\"\n\n\"I want to fuck you until you scream.\" Gabe climbed on to the stage, naked. \"And when she says, 'Oh Clive! You startled me,' she means...\"\n\n\"You caught me fingering myself thinking about you.\" Marisol ran a finger into her pussy and out again. She shuddered happily as Gabe wrapped his arms around her from behind and teased her nipples. \"And when he says 'The hounds are on a scent, they'll flush the fox soon,' he means...\"\n\n\"Get on your knees and spread for some doggy style. Mmmm.\" Gabe hummed as Marisol rubbed her bottom teasingly against his cock and got on all fours in front of him. \"And when she says, 'I am full up with your words,' she means...\"\n\n\"Shut the fuck up and fill me with your beautiful cock, slowpoke!\" Marisol wiggled her bottom at him invitingly.\n\n\"Slowpoke it is, then.\" Gabe knelt and placed the head of his cock against her pussy. She whined and struggled as he slid himself into her slowly and back out again, holding her hips to keep her from filling herself too soon.\n\n\"Yes,\" she said, rocking gently, \"Finally...\"\n\nShe shrieked as he thrust into her. The light swirled around them- images of horses and petticoats and rowboats on ponds. Gabe pounded her mercilessly, pouring the tension of days of buildup into fucking his beautiful Marisol.\n\nShe squealed and moaned, pushing herself into him, around him, squeezing and thrusting.\n\nGabe pulled out and turned her on her back. The light from the screen lit her softly. He entered her again, from the front and her eyes widened a little. He said her name, \"Marisol,\" pumping gently at first, her hands on his arms. He sped up until she gasped for breath, while he said her name, \"Marisol. Marisol.\" \n\nHer orgasm came gently at first, teasing her with promise, then it rolled in, pounding her in time with Gabe's pounding, in time with her cries, like the ocean pounding a beach. Gabe grunted and shot himself into her, powerfully, again and again. She shook with the feeling, full of him, moving, sliding against each other under a small shifting sun.\n\n\"Sun and ocean,\" Marisol murmured into his ear as he struggled to catch his breath. \"That's what 'Marisol' means. We were the waves on a beach.\"\n\n\"Yes we were.\" Gabe pulled out of her and tipped his head towards the seats. \"I think we're also caught in the act.\" \n\nA pair of glasses reflected light out of the dark theater.\n\nMarisol's eyes got wide. \"What do we do- run for it?\"\n\nGabe shrugged. \"Let's take a bow. Then we can get your clothes from the back, then we can run for it.\"\n\nMarisol smiled, \"Okay.\"\n\n----\n\nBy the time they arrived at Beth's house, Anthony was as hard as he had ever been. It had been difficult to read Summer's reactions to the car's magic. She had spent most of the ride twisted around, facing the back of the car. He thought he had heard her moaning once or twice. Beth had let loose though, once she thought he couldn't hear her. He guessed she had a continuous orgasm for the last three minutes on the freeway. She was eloquent in cursing the fact that she didn't live down in Fairview.\n\nBeth got out of the car unsteadily. Anthony took the earbuds out of his ears and rolled his window down a few inches to hand the iPod back to her.\n\n\"Thanks,\" he said, \"that's a cool playlist. It has a lot of... passion.\"\n\nBeth smiled awkwardly. \"Thank you so much for the ride.\" She bent down so she could see Summer. \"I really appreciate it.\" Then she leaned forward and pressed her lips to his window and added her lipstick to his trophies, turned and wandered to her door.\n\n\"I'm never being nice to anyone ever again.\" Summer growled as Anthony pulled away from the curb.\n\n\"I thought I caught you digging the ride once or twice. What happened?\"\n\n\"Well yeah, but she grabbed my hand when she started to come and wouldn't let go. Twisted me all up and I couldn't get the shaking to the right spots.\"\n\n\"I know exactly how you feel. Honestly, this getting everyone else off gig is making me jealous. I'm taking you to my room. On surface streets.\" He turned on to a boulevard.\n\nSummer slipped her hand over to his crotch and rubbed him gently as he drove. \"Okay then,\" she said, \"but I'd love to keep you interested.\" \n\nHe stayed interested.\n\nAnthony parked behind Justin's car. Justin's engine was still running and the passenger door was open.\n\nSummer went to the passenger side, took out Karen's shoes and closed the door while Anthony turned off the car and locked it.\n\n\"There's no telling what we'll find inside,\" Anthony muttered.\n\n\"Oh, we know perfectly well what we'll find,\" Summer said, smiling, \"Clothes all the way up the stairs, and unless they suddenly got responsible, they've left the door open.\"\n\nThey picked up the blouse on the porch, closed the front door, picked up the bra on the stairs.\n\nSummer sighed and whispered, \"Okay- one last nice thing before I give it up for good. Give me a sec.\" She left Anthony on the stairs holding half of Karen's clothes. When she came back she had four bottled waters from the fridge.\n\nJustin's door wasn't quite closed and happy sounds were drifting into the corridor. Summer knocked twice, yelled \"Housekeeping!\", and opened the door far enough to throw two of the the water bottles, the clothes, and the keys into the middle of the room. She slammed the door. There was a stunned silence, then laughter. \"Thank you!\" drifted out through the closed door.\n\nWhen Summer turned around, Anthony was standing so close that she ran into him. She breathed deeply and smelled him- the cologne and sweat of him, looked him in the eye and impulsively bit his nipple through his shirt. He grabbed the hem of her t-shirt and pulled it over her head in one motion and backed her up against the wall. \n\nAnthony fondled her breasts, enjoying the softness of her skin and the way she responded to his touch. She had pulled his belt off and was unbuttoning his pants. He felt her hand search for his cock through his boxers and give it a loving squeeze, then she pulled those off too.\n\nAnthony hooked his finger into the top of Summer's miniskirt and led her down the hall, he in just his shirt, she in just her miniskirt and panties. In his bedroom, he kissed her and backed her up to the bed. He pushed lightly in the center of her chest and she fell, her hair arranging itself in a halo around her head on his pillow.\n\n\"You smell good,\" Summer cooed, \"I loved the smell of your pillow in the darkroom.\" \n\nAnthony took off his shirt. \"It smells like you too. When I'm awake at night I breathe and I think about your pussy grinding my pillow.\" Anthony was pulling her panties off as he spoke. \"Spread your legs.\"\n\nShe felt both excited and shy to be opened to him this way. \"Tell me what you're thinking. Tell me I'm beautiful.\"\n\nAnthony caressed the inside of her thighs with his fingers, then his lips. He kissed her pussy lightly and licked her once.\n\n\"I love looking at you. All the delicate folds of you, smooth and textured, dry, moist, sparkling.\" He licked her again, harder. She squealed and touched his head with the tips of her fingers. \"You smell beautiful, like excitement and willingness and lust.\"\n\nAnthony kissed up her body, and when his cock penetrated her he pushed to the hilt and held her, enjoying the moment, and enjoying the promise.\n\nSummer moved first, a smooth press of her pussy against Anthony's cock and a squeeze. Their rhythm grew, naturally and deliberately. The bed creaked quietly with their movements, and suddenly, as Anthony started to pound her pussy in earnest, one of the legs of the bed started beating the floor loudly in time with his thrusting.\n\nSummer was biting his ear. \"Does everything you own...\" she gasped, \"...get unbalanced at speed?\" She licked his shoulder and squeezed his ass.",
        "\"Nothing that matters,\" he said, and kissed her. The room disappeared for him. He was only aware of her mouth on his, her breasts pressing into his chest, her fingernails making burning paths across his back and buttocks, her pussy, wet and strong and needy, squeezing him, sucking him in over and over.\n\nHe sucked in a breath through his teeth and came. Summer felt the rhythm change and it turned a switch on. Suddenly she was riding uncontrollably towards her own orgasm. She was vaguely aware of the screaming escaping from her throat. Her legs wrapped around his waist and she squeezed him hard. She rocked and pushed and squeezed against his hardness inside her. The electricity running through her seemed to go on for hours, carrying her out of the room and over the house, and finally, descending again, letting her down gently. She found herself back on his bed again, his eyes sparkling down at her. He kissed her and smiled. \"I broke my mug full of pencils when I came.\" He kissed her again. \"You broke my lamp.\"\n\n----\n\nAmala loved the way Steve looked at her. He kept sneaking peeks at her breasts, and grinning when she caught him. He wanted to see her from every angle, in every kind of light.\n\n\"The darkroom was all your idea, wasn't it?\" Steve asked, putting a hand on her thigh.\n\n\"Well, I sort of planted the idea, yes,\" she said, grinning, \"and the girls just ran with it.\"\n\n\"You deserve a prize. Let's find a podium somewhere so I can present it to you.\"\n\nAmala's eyes sparkled. \"I made one last little arrangement. You remember the masseuse?\"\n\n\"He scared the shit out of me. Of course I remember him.\"\n\n\"He knows everybody at the mall. He pulled some strings and got me this.\" She held up a funny looking key. \"It opens one of the stores.\"\n\n\"The stores are all open. It's the middle of the afternoon.\"\n\n\"Not all of them.\" Amala took Steve's hand and led him toward the main hall.\n\nThe sign said \"Bedding on a Winner\" and the display windows were covered in mall logo paper. A sign on the door said, \"For Lease.\"\n\nAmala opened the door with her key. \"They went out of business a couple of weeks ago.\"\n\nSteve followed Amala into the dark store and when she flipped the light switch he laughed in amazement. In the center of the empty store, lit up by a pool of warm light, was a bedroom. A king sized bed covered in a feather comforter flanked by end tables with lamps.\n\n\"I knew I wasn't going to be able to wait until I got you into my room and I didn't want to end up in a broom closet. At least, not this time.\" She felt Steve come up behind her and wrap his arms around her. She pushed her breasts into his hands as he ran them up her body. \n\n\"You were nervous on Monday,\" Steve said as he caressed her, \"and you didn't want to let me hear your voice. I want to hear your voice now. Tell me exactly what you want.\"\n\nAmala turned her head towards him. \"Kiss me.\"\n\nSteve leaned forward to kiss her and she stopped him. \"I changed my mind. Get me out of these clothes. I'm done waiting.\"\n\nSteve took off her sweater and skirt and had to chase her to the bed to get her panties off. She sat on the edge of the bed, naked, breathing hard as he took his clothes off. \"Lick me- gently. Tell me how I taste.\"\n\nSteve kissed Amala's pussy and licked softly once, twice. He closed his eyes, kept licking.\n\n\"Curry?\" she gasped, between strokes, and squealed when he shook his head, his nose grazing her clit.\n\n\"Cucumber,\" he murmured into her folds. She would have laughed, but she was having trouble organizing her breathing.\n\n\"I... want you... in me now. Now!\"\n\nAmala backed across the bed and Steve followed her, his mouth catching her nipple as he moved up her body. He slid into her easily and stroked in and out of her, smoothly, as he kissed her neck, her chin, her mouth. The smell of her hair drove him wild.\n\n\"Don't stop... Oh, don't stop...\" She gasped as he thrust into her, \"Lean down a little. Don't stop...\"\n\nSteve lowered his face to her shoulder and kissed it just as he felt her teeth touching his own shoulder. He could feel her fingers starting to dig into his back and her pussy squeezing down against his hardness.\n\n\"Nnnnn,\" Amala groaned into his shoulder as she rocked with him, against him, her teeth grazing his skin and tightening a little each thrust.\n\n\"Do it.\" Steve growled at her. \"Do it. Bite me when you come.\" He sped up, pounding her pussy fast and hard. \"Bite me.\"\n\nAmala felt the glow start in her pussy and it flashed into an orgasmic flame. She felt the shocks running through her body, flushing the skin of her face and she felt Steve grunting and coming inside her, his body filling hers in a perfect rhythm.\n\nShe didn't remember having actually bitten his shoulder, but when she finally opened her eyes she saw a tiny drop of blood where her teeth had been.\n\nSteve kissed her. \"I'm glad you chose me.\"\n\n\"Me too,\" she said. \"Now do me from behind.\"\n\nSteve laughed. \"Give me a minute.\"\n\n\"Okay then,\" she said, sitting up, \"you'll find a basket of apples and water under the bed. I want one of each.\"\n\n\"You thought of everything,\" Steve said, as he grabbed some apples and water. In the very bottom of the basket he found a bag of cotton balls and two pairs of chopsticks.\n\n----\n\nDieter looked at Marie Marthe sitting next to him on the bench seat of his old Nova. She was a force of nature with her hand on his thigh and he was driving her... he didn't know where.\n\n\"How do I get to your room?\" Dieter asked.\n\n\"We live close to your house. I will tell you from there.\"\n\n\"You left without your dress last night. How did you get home?\"\n\n\"I walked. I was with my friends and I could still taste you. I did not feel exposed.\"\n\n\"You're completely amazing. I guessed you must have done that, but I didn't realize you lived close enough to walk.\"\n\n\"Yes, we arranged it that way. It has worked very well.\"\n\nDieter wasn't sure what that meant, but he was distracted when Marie Marthe laid her head on his lap and curled her feet up on the seat. She looked comfortable and, briefly, vulnerable like a child.\n\nDieter caressed her face as he drove \"You're completely uninhibited, like a little girl that raises her dress over her head. It doesn't matter to you what people think should be covered, and it doesn't occur to you to be embarrassed.\" He let his hand wander to her breast and she touched the back of his hand as he touched her.\n\n\"I have nothing to be embarrassed about.\" She closed her eyes and sighed. \"Your touch is right.\"\n\nAs Dieter approached the guys' house, Marie Marthe spoke without raising her head from his lap. \"Drive to the corner, turn right, and turn right again. Our house is the white one on the right.\"\n\nDieter laughed. \"Are you serious? You live across our back fence.\" He parked.\n\n\"Sometimes I can see you from my window. We made a hole in the fence to walk through this week. I will show you later. Come to my room now.\"\n\nMarie Marthe's room was a large attic room, full of light and decorated in shades of white in dozens of different textures. Dieter stood in the door, taking in the sight as Marie Marthe faced him.\n\n\"I like having you here.\" She dropped her dress on the floor and walked to the bed, comfortable in her own space. \"Look how my skin looks against the white,\" she said, lying down on her bed, looking at the dark skin of her wrist.\n\n\"You look like you could set the whole house on fire.\" Dieter took his shirt off as he crossed the room and looked down at her. \"You look like an African princess, a black jewel set in white.\" He took off his pants and his boxers. He took his time laying down between her legs. \"Are you ready?\"\n\nMarie Marthe nodded, looking in his eyes, then whispered, \"You cannot hurt me.\" She wrapped her arms around him.\n\nDieter placed his cock at her opening and pushed gently until he met her resistance. She was very wet. Her eyes never left his. Her hands cupped his ass, pulled on him and he responded, pushing more forcefully. Marie Marthe sucked in a quick breath, then another and pulled on him again. He pushed hard, watching her eyes widen as the resistance inside her stretched, then gave way completely. Dieter slid his cock into her slowly, feeling her pussy change and stretch with each bit of progress until he was all the way in. He saw her every sensation in her eyes. Her fingers clutched his ass and she whimpered as she buried her face in his shoulder.\n\n\"Stay there...\" she said, \"I am full of you. I want to stay full. Just stay...\"\n\nDieter held still, suppressing the urge to move. She was tight, but he was surprised to feel her experimenting with him- she squeezed him even more tightly with her pussy and tried moving left and right a little. He kissed her just under her ear and she nuzzled her head closer to him. He kissed her there again, then a little lower on her neck. He kissed her lips, then she looked in his eyes again.\n\n\"Empty me and fill me again. Slowly.\"\n\nDieter pulled back, fractions of an inch at a time, until just the head of his cock was inside her, then he pushed in again, at a snail's pace. As he pushed, Marie Marthe's face changed. He could still the anxiety of pain, but he could see a new understanding growing that was overwhelming the pain.\n\n\"This is good,\" she said, closing her eyes, \"You are very good. Fill me.\"\n\nDieter pushed all the way in, a little faster, and stopped.\n\n\"Yesss.\" Marie Marthe's breathing was coming faster now. \"Please yourself with me. I want to feel you enjoy my body.\"\n\nDieter felt her squeeze his cock twice, and he started stroking, very slowly at first, but speeding up gradually, as she encouraged him. He bent his head down and licked her right breast, nibbled her nipple, switched to the other breast, always moving in and out of her. She responded- arching her back and pushing her breasts into his mouth, holding his head in her hands, whispering to him.\n\n\"Come now, Dieter,\" she said, \"Come fill your beautiful African princess. Don't hold yourself back. We'll set the sheets on fire. We'll burn down the city. Ohhh that's... sweet... do it harder.\"\n\nDieter's face flushed and picked up his pace. Marie Marthe started to squeal with his thrusts. She squeezed him and rocked with him. She dug her nails into his back and whispered in French and then spoke aloud something else completely, something more elemental, a language made for yelling across rivers, for spurring on lovers.\n\nThe words were nonsense to Dieter, but their effect was to push him relentlessly toward his orgasm. Suddenly he stiffened and came and Marie Marthe felt him shudder, hardening and shaking inside her, and when he said her name she came too with an abandoned cry.\n\n\"Stay in me,\" she said, her voice rough, \"Don't leave me empty.\" So Dieter stayed as he softened, playing with her hair as she taught him dirty words in her first language.\n\nFinally, after her pussy, despite her efforts to keep him in, had squeezed his soft cock out, she smiled and said, \"I have bought a gift for you.\"\n\n----\n\nSummer woke Anthony up in the late afternoon with a kiss to his chin and a casual comment. \"Someone's tearing down the fence.\"\n\n\"Let 'em.\" Anthony murmured without opening his eyes. \"We have to move out anyway. Bastard landlord can fix the damn fence.\"\n\n\"Let's go see.\" Summer wrapped a sheet around herself and picked her way carefully through the broken glass on the floor to the window. \"It's Dieter. He's tearing down your back fence.\"\n\nAnthony joined her at the window. \"That's weird. He's smiling. Friday must have short-circuited the big guy. Our neighbors are going to be pissed.\" He pulled on some clothes and headed for the stairs.\n\n\"Hey Dieter,\" Anthony approached cautiously, watching for nails sticking out of boards, \"What are you doing?\"\n\n\"We're having a barbecue tonight.\" He said, and then, as if to clarify, \"to celebrate.\"\n\n\"With our soon-to-be extremely pissed off neighbors?\"\n\n\"They invited us.\"\n\nSummer walked up behind Anthony and wrapped her arms around his waist. \"Your week is about to get kind of weird. Look up there- in the attic window.\"\n\nAnthony saw a black woman watching Dieter calmly through the window. She was naked. \"Uh...\" he stammered.\n\nSummer whispered into his ear, \"That's Marie Marthe. She's a friend of mine. Yours too. That's Friday.\" She grabbed his hand and pulled him towards the ruined fence. \"Come on,\" she said, \"I'll show you my room.\"\n\n\"You live here? Right behind our house?\" Anthony sputtered. Summer was dragging him through the front door.\n\n\"Yes.\" Summer said. \"This is going to sound kind of weird. We had our eyes on you guys a few weeks ago, and suddenly one day Marie Marthe, you know- Friday- she came into the place we were living and told us she had bought a house to make our job easier. She said she could afford it and she wanted us to move in with her, and you don't disagree with Marie Marthe. So we did a lot of screaming and hugging, then we moved in.\"\n\nAnthony was reeling. \"When she said her dad was rich, I didn't realize... and... oh no! She bought the house right behind the one our bastard landlord sold out from underneath us.\"\n\n\"I know. She bought your house too. Your bastard landlord was supposed to keep his bastard mouth shut,\" Summer scowled. \"Ruined your day. Bastard. But I made it better, right? Anyway. This is my room and that's my bed. I hope you like it because this is where I'm going to fuck you before the barbecue.\"\n\nAnthony's eyes were crossed and he felt like he'd been hit by a truck. \"So Dieter is tearing down the fence...\" \n\n\"For the barbecue. To celebrate.\"\n\nAnthony was confused. But he wasn't so confused that he didn't know what to do when Summer crawled onto her bed and wiggled her ass at him."
    ],
    "authorname": "Ambidentrous",
    "tags": [
        "first time",
        "interracial",
        "public",
        "twilight",
        "surprise",
        "car"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/darkroom-saturday"
}