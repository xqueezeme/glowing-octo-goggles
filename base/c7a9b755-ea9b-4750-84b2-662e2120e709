{
    "title": "Visitation",
    "pages": [
        "\"You know we all get old, Weston. It's nothing to fear,\" his grandmother told him. \"Death, I mean.\"\n\n\"I know what you meant, Grandma,\" he told her.\n\n\"I'm not afraid to die,\" she told him. \"I am afraid of being alone, though.\" She reached out her frail hand and took his before saying, \"Thanks to you and your mother that's something I've never worried about. If not for the two of you, I really would rather move on than just hang on for the sake of living. I had two friends like that, you know. Their families put them in homes and forgot about them. They just wasted away, eaten up by sadness and the neglect. I swore I'd never go through that.\" She patted his hand and smiled. \"You're such a good boy, Weston.\"\n\n\"We'd never let that happen to you, Grandma. You know that.\"\n\nHis mother had cared for her mother for the last three years since she got to the point where she could no longer care for herself. Her husband had passed away nearly ten years ago and she had lived alone, proudly and independently until the combined effects of debilitating arthritis and a mild stroke made doing so impossible.\n\nShe had her own room in her daughter's house with a television, a nurse who checked on her each day, and the companionship of her 'baby girl' who was now 52 years young. Somehow, no matter how busy he was, her adult grandson, Weston, also stopped by to visit her seven days a week, time permitting. \n\nShe and her daughter were both very proud of him. He'd been a Seattle police officer for a little more than four years after graduating from community college and then the police academy. That kept him plenty busy. But he was also a very nice-looking young man and an never-ending string of pretty girls took up even more of his time. As if that wasn't enough, he also worked out and played basketball with his fellow police officers yet somehow he made time to see his grandmother nearly every day.\n\nHow could he not? She'd always been there for him. She didn't have a lot of formal education, but she was the smartest person he knew. No matter what the trouble had been in his life over the years, she'd had an answer. Not a pushy answer. She'd sit there and listen carefully to everything young Weston said giving him room to explain or just vent. Only then did she offer her opinion. And invariably, it put things into perspective leaving Weston asking himself, \"Now why didn't I think of that?\"\n\nShe'd recently turned 82, and she wasn't doing well. Her spirits were still up and now he realized that a large part of that was due to being surrounded by people who loved her. At 25, he couldn't possibly understand what life would be like 60 years down the road. He could barely imagine turning 40 or having a family let only being 80-something. But he was already wise enough to see how important it was for someone that age to know that people still cared. \n\nHis mom was there pretty much all day, every day, but that didn't matter. He just couldn't stay away. On those very rare days when work kept him busy for reasons beyond his control, he felt guilty and he'd at least call to let her know he was thinking about her. Perhaps somewhere deep inside he hoped there would be a Weston in his life to remember him when friendship and love were all that were left and worth living for.\n\n\"I gotta go now, Grandma,\" he told her. \"I start my tour in half an hour.\"\n\n\"Oh, right,\" she said weakly. \"That sergeant of yours is a tough one. You best be running along. You don't want to get on his bad side, huh?\" She managed a smile as he kissed her on the cheek.\n\n\"I love you, Grandma. You know that, right?\"\n\n\"Yes, I do,\" she told him. \"No doubt about it.\" She reached up and touched his face. The back of her hand was purple and nearly black. The skin looked like wax paper and he was afraid that if he touched it, it would just flake off leaving nothing but the bones he could almost see through it. \"I love you, too, Weston. Never forget that.\"\n\n\"I won't, Grandma,\" he told her. \n\nThen she said something he couldn't ever remember her saying before. \"Goodbye, Grandson.\" She'd always said, \"Take care\" or \"See you later.\" Never goodbye.\n\nHe smiled and said, \"Bye, Grandma\" not knowing he would never see her alive again.\n\nThe call came just as he was finishing his ten-hour tour of duty. It was his mom on the phone, and he had a foreboding about something being wrong as she never, ever bothered him at work.\n\n\"Honey? It's me,\" she said, her voice shaky with emotion.\n\n\"It's Grandma, isn't it?\" he said quietly.\n\n\"She's gone, Weston. I'm so sorry. She loved you so much.\"\n\nHe sat quietly for a few seconds then said, \"She loved you too, Mom. She told me that all the time.\"\n\nThe funeral was held four days later. After a very nice service at the United Methodist Church, everyone filed by her open casket to pay respects. Some just looked, others touched her cold hand. A few, like Weston, kissed her forehead as he took a final look and fought back tears; tears he knew she wouldn't want him to shed.\n\nRather than cry, he recalled her words about her fear of being alone and resolved to spend as much time as he could with people like his grandmother or more precisely, like her friends who'd been sent off to die alone in nursing homes where few people, if any, ever came by to let them know they still mattered.\n\nThere was a home just a few blocks from where he lived and that evening he stopped by for the very first time.\n\nHe walked up to the lady at the front desk and introduced himself. \"Ma'am? My name is Weston Greer. My grandmother just passed away and I feel this, I don't know, this...need or...burden...to spend time with older folks who have no one who comes to see them. Are there any here like that?\" he asked.\n\nShe sighed deeply and said, \"Unfortunately, we have quite a few here, young man. Many have lots of visitors. Most have at least one. But we have more than a handful who have no one. My own mother is getting very old and it breaks my heart to think of her like that. We occasionally get folks from a church to come visit, but that comes with a price tag of sorts. We also bring people in for things like Bingo or whatever, but it's not the same as a personal visit\u2014especially from a regular visitor. Come on. I'll introduce you to a few of them tonight and the others when you come back. Just say 'when' once you've met enough of them.\"\n\nAs they walked down the hall, the woman whose name was Marilyn, said, \"You must have an amazing mother or parents or someone. A handsome, single young man like yourself could be doing a lot of other things with his free time.\"\n\n\"Maybe so,\" he said, \"but I can't think of too many that are more important.\"\n\nShe pointed to a room number which had 17 on it. \"This is Mr. Thomas's room. He's been here for a year and I've never seen a soul come visit him. He's a retired school principal and a very sweet man.\"\n\nThey walked another 20 or so steps and she pointed to room 30. \"Mrs. Garr is in there. For almost her first year, she and her husband shared a room. He passed away and she's been completely alone ever since. Between you and me, I keep expecting her die of a broken heart any day now. Such a sweet lady.\"\n\nShe turned right at the end of the hall and three doors down pointed to room 54. \"And this is Mrs. Tilly. She's been here longer than anyone I know and again, no one has ever come by to see her. At least not family or friends. She's 94 and getting very close to the end. She's so weak and frail.\"\n\nShe started to take him further and Weston said, \"I think three is enough. At least for now.\" He made a mental note of the names and room numbers then thanked the lady for her help.\n\n\"There's plenty more if you that burden of yours grows any bigger,\" she told him with a friendly smile and a touch on the arm. With that, she went back up front.\n\nGreer peeked into Mrs. Tilly's room and saw her staring blankly at the television. He walked over to her and when she became aware of his presence, turned her head toward him. \"Are you an angel? Am I in heaven?\" she asked in a very weak, very shaky voice. \n\n\"No ma'am,\" he said. \"Just a mere mortal stopping by to get better acquainted.\" He leaned closer and smiled. \"You kind of caught my eye as I walked passed your room.\"\n\nThe elderly woman made a noise he thought might be a laugh, but it sounded so painful he felt bad if it were. Her lungs rattled and she coughed and spat. He grabbed a tissue and wiped away the spittle. \"You okay there, good lookin'?\" he asked.\n\n\"Yes. Just fine,\" she said as the wheezing stopped. \"So what really brings you by, young man? Are you going to try and sell me something or save my soul?\"\n\n\"No ma'am. Neither of those. I just decided it was important to get to know people who spent their whole lives helping to make the world I live in a better place. I'd just like to acquainted. I'm Weston Greer. I'm 25 years young, and Seattle police officer.\"\n\nShe offered him a bony hand that looked even worse than his grandmother's had. \"Nice to meet you, Officer,\" she told him. \"I'm Martha Tilly. I raised two boys and a girl and was married for 52 years. After my husband died, I went to live with my daughter, Alice. She got cancer and passed away three years ago, and my boys put me in here.\" \n\nShe didn't cry, but her eyes were so...sad. Just the mention of her sons changed the way she looked. \"They both live close by, but they never come to see me. I raised them better than that, but they're grown men and you can't force people to do things they don't want to do.\" She tried smiling a toothless smile and said, \"If you ever see either of them, pull 'em over and give 'em a ticket. For me.\"\n\nWeston smiled and said, \"Yes, ma'am. I definitely will.\"\n\nHe spent about a half hour with her and let her do all the talking. It was as though he'd tripped a release valve allowing her to get rid of some of the things building up inside of her. When she told him she was very tired, he thanked her for sharing her time with him.\n\n\"No, thank you, young man. I...I can't remember the last time anyone came to see me.\"\n\n\"I'll be back tomorrow and as often as I can, okay?\"\n\nMrs. Tilly didn't believe him, but she told him she looked forward to it. Greer smiled at her and said, \"Would it be okay if I gave you one little kiss right here?\" pointing to her cheek.\n\n\"I'm not married anymore so I suppose that'd be okay,\" she said with a toothless smile. Greer gently squeezed her hand and gave her that kiss. She put her other hand on his face and told him what a sweet boy he was. He thanked her again and wished her a good night.\n\nOn his way back to the front he saw Mrs. Garr also staring at a television. She was the tiniest little black woman he'd ever seen. She also looked very sad and frail. She had essentially the same questions as Mrs. Tilly and was just as grateful for his company. When he asked if he could kiss her too, she laughed. \"I'm still a live wire, young man,\" she said. \"I might just kiss you back, you know!\"\n\nHe assured her that'd be just fine so he only smiled when she raised up and kissed his cheek, too.\n\nHis last stop was Mr. Thomas. Of the three people Greer visited, he felt the strongest connection with him. It was almost certainly because he was a man, but he was also a kind, gentle soul.\n\nHe'd been a teacher or an educator for almost 45 years then had worked part-time at a big-box hardware store until he turned 75. \"I just love to work,\" he said. \"I'd still be working if I could. This...this layin' around all day stuff is for the birds.\"\n\nDuring their talk he spoke fondly of his late wife, Dorothy. \"We were married for almost 60 years before she passed away.\"\n\n\"Did you have children, sir?\" Greer asked.\n\n\"Oh, sure. Boy and a girl. Let's see now. Jeffrey is um...well, he has to be close to 50. Then we had our 'accident'.\" Mr. Thomas smiled and said, \"Shannon was very unexpected. She'd be, well, let's see here. I guess she must be 34 or maybe 35. What month is it?\" he asked.\n\nGreer told him it was January then asked, \"Do they live around here?\" almost not wanting to know.\n\n\"Oh, no. Jeffrey, he did 25 years in the Navy, and retired down in Jacksonville, Florida. Gosh, I haven't seen him in...what? Fifteen years now? And Shannon, she married a guy who was quite a bit older. Nice fellow. They moved out to Colorado about ten years ago. Last time I saw her was maybe three years back. Yeah, that's right. That's when Dorothy died. She came up for the funeral. Got to meet my grandson for the first time.\"\n\n\"How old is he?\" Greer asked.\n\n\"Well, let's see. He was three then so he must be six now. Cute kid. Very polite. Smart, too! Shannon calls me every week. Sometimes I get to talk to my grandson, too. Boy, can he talk!\" Mr. Thomas's eyes lit up for the first time as he talked about his daughter and grandson.\n\n\"What's his name?\" Greer asked.\n\n\"Colby,\" he replied. \"I heard all kinds of names working around kids all those years, but I never heard that one before. Cute kid, though. Smart, too!\" he said again.\n\nGreer spent a few more minutes with him then said his goodbyes, again promising he'd be back.\n\nOver the next couple of months, Greer took on two more elderly residents before realizing that was the most he could handle. He talked a couple of his buddies from his precinct into visiting occasionally, and once his captain found out what several of his officers was doing, he proposed they adopt that particular nursing home. \n\nWithin a week, it was routine to see police officers in or out of uniform either coming, going, or sitting and visiting with someone. Greer continued to see his 'Fab Five' as he'd come to call them, and he always walked away thinking he'd gotten more out of the visits than they did.\n\nWhen he stopped by to visit a few days later, Martha caught him before he went down the hall. \"Weston? I wanted you to know Mrs. Tilly passed this afternoon. I know she was one of your 'regulars' and I didn't want you going down there and finding an empty room. I'm very sorry for your loss.\"\n\nGreer didn't even notice how Martha thought of Mrs. Tilly as 'his' as all he could think of was how much he wished he could have seen her one last time. He felt a tear welling up in his eye and turned away as he said, \"I'm glad you told me, Martha. She was such a sweet woman.\"\n\nMartha knew what was going on and didn't mention it. People were people and sometimes...people cried. Even police officers who saw some horrible things in the line of duty. \"But your others are all well and I'm sure they're looking forward to your visit.\"\n\nGreer tried not to let his sadness affect his other visits, but when he got to Mr. Thomas's room he felt sure he he could tell something was wrong so Greer immediately turned it around on the older man. \n\n\"You doing okay, Mr. Thomas?\" he asked after a few minutes. He hadn't said a whole lot and that was very unusual.\n\n\"Oh, sure. I'm fine,\" he said. \"It's just that I got a call from Shannon today. She normally only calls on Sunday nights, you know. That nice husband of hers? He had some kind of thing she called DTV or VTD or something. Some kind of blood clot thing in his leg. Went up to his lungs and...that was it.\"\n\nGreer knew what a DVT was from his first-aid training. It stood for Deep Vein Thrombosis and often affected people who sat for long periods of time. People like police officers who rode in cars for many hours each day. Blood clots could form in the legs then upon standing, migrate to the lungs or heart and in many cases, result in death. One need not be old or in bad health so patrol officers made it a point to stretch their legs and/or walk around whenever possible. It was rare, but by no means unheard of.\"\n\n\"Geez, I'm...I'm so sorry. How's your daughter doing?\"\n\n\"Oh, you know, she's putting on a brave face. Poor Colby isn't doing so well, though. He's too young to understand these kinds of things. Yeah, he was always flying somewhere on business. Long trips. Lots of sitting. I never heard about such a thing before, but that's what can happen. Shannon told me about some news reporter who died from it in Iraq during the invasion in 2003. I guess he'd been cooped up in a tank all day, and not long after he stood up, he keeled over.\"\n\nGreer asked if there was anything he could do, but Mr. Thomas told him no. \"If they lived nearby, I'd ask you to go look in on her, but Colorado's a pretty long drive.\"\n\n\"Okay, well if you think of anything, you just let me know, okay?\"\n\nMr. Thomas promised he would then said, \"How about a game of chess?\" pointing to the set the department had recently put in every room.\n\n\"Okay, but I'm not gonna take it easy on you,\" Greer told him as he started setting up the board.\n\n\"Hah! You take it easy on me? Son, you're gonna be begging for mercy here in no time,\" the older man said with a gentle smile.\n\nGreer largely forgot about the death of Mr. Thomas's son-in-law for the next seven months and then one day in August, he was surprised to see a visitor in his room when he stopped by to say hello.\n\n\"Oh, speak of the devil. That's him right there,\" he heard Mr. Thomas say as he pointed to Greer who happened to be uniform, something he tried not to do too often.\n\nHe noticed a woman with very pretty blonde hair sitting next to him and a small boy playing with a car on the floor. Greer came in and smiled then said, \"I'm guessing you must be Shannon.\"\n\nShe smiled and said, \"I am. And I'm 100% sure you're Officer Greer.\" She pointed to his name plate then laughed.\n\n\"Hi, it's nice to meet you. Your father talks about you all the time.\" He looked at the little boy with dark hair and said, \"And that must be Colby.\"\n\n\"How do you know my name?\" the boy asked looking up and the police officer. Before Greer could answer he said, \"Is my grandpa in trouble?\"\n\nHis mom and grandpa both laughed and she said, \"No, honey. This is the police officer who visits Grandpa all the time. Remember?\"\n\n\"Oh, yeah,\" he said. He was staring at Greer who smiled at him. \"Is that a real gun?\" he asked pointing to it.\n\n\"Yes, it is,\" he said.\n\n\"Do you shoot bad guys?\"\n\n\"Colby! That's enough,\" his mother said somewhat embarrassed.\n\n\"I don't mind. It's a natural question for kids his age.\" He knelt down and said, \"No, I don't shoot bad guys with it. We make sure to catch them and put them in jail so we don't have to use our guns.\"\n\n\"Do you have a police car with a siren?\" he asked moving on from the gun.\n\n\"Okay. How about you play with this for a while?\" his mother said fishing a handheld game system from her purse.\n\n\"Cool!\" he said ignoring his car. \"My mom never lets me play this!\"\n\nShe shook her head and said, \"If I didn't occasionally take it away from him, you'd think it was surgically attached to his hands.\"\n\nGreer noticed she seemed attractive when he first walked in. Now that he was standing less than two feet away from her and looking at her beautiful smile, he could tell she was a very good-looking woman.\n\n\"Before I forget, thank you very much for spending time with my dad. I've felt horribly guilty for living so far away and not being able to see him. He talks about you every week when I call and I kind of feel like I know you or something. Anyway, it means a lot to me.\"\n\n\"We're moving to Seattle,\" Colby said without taking his eyes off of his game. \"We're selling our house in Colorado and Mom's buying a new one here so we can visit Grandpa.\"\n\n\"Oh. Oh, wow. That's...great,\" Greer said. Very quietly he said so that Colby wouldn't hear, \"I'm really sorry about your husband, Mrs...\"\n\n\"Shannon is fine,\" she said. \"Thank, you. Me, too. It was quite a shock.\"\n\n\"This one is very strong, Weston,\" Mr. Thomas said pointing toward his daughter.\n\n\"Not really, Dad,\" she said. \"But I can put on a brave face when I have to.\" She looked up at Greer and said, \"Did you want to sit down, Officer Greer?\"",
        "\"No, thank you,\" he told her. \"And it's Weston.\"\n\n\"Okay. Weston it is then,\" she said smiling politely.\n\nGreer spent about half an hour with Mr. Thomas and his family before moving on. He told Shannon how nice it was to meet her and said, \"If there's anything I can do to help you get settled, please don't hesitate to ask.\" He gave her a card with his name and number on and she thanked him for it.\n\n\"Unless you feel like unpacking boxes or putting stuff away, I think we're fine,\" she said in a friendly way.\n\n\"I'm not afraid of hard work,\" he told her. \"I don't know how many friends you might have around here to help out, but if you do need a hand, I really am happy to stop by and help out.\"\n\nShannon smiled again and said, \"I just may take you up on that, Officer...Weston. I do still have a couple of friends in the area, but they're both married and raising kids so...\"\n\n\"Oh, COOL!\" Colby called out. \"Mom! I just made it to level 17 for the first time!\"\n\n\"That's great, honey,\" she said as she and Greer looked down at her son who never once even looked up. \n\n\"See what I mean?\" she said managing a small laugh. \"Surgically attached.\" She did her thumbs like she was playing the game, too, and Greer couldn't help but laugh.\n\n\"Okay, so call me if you need me. And Mr. Thomas? You stay out of trouble, okay?\"\n\n\"Not a chance!\" he said, his spirits up more than Greer had ever seen.\n\n\"And good luck with level 17,\" he said to Colby who didn't hear a word as he was busy making 'game noises' as his thumbs worked overtime.\n\nGreer nodded at Shannon then did the same thing with his thumbs causing her to laugh hard enough that she covered her mouth. For a woman who was somewhere around 35, Greer couldn't help but think she was about as attractive as anyone he'd ever met, and he'd been in the company of some very nice-looking women. None of them had been older than 28, but Shannon was someone he thought he wouldn't mind getting to know if and when she might be ready to start dating again. Then again, having married an older man, she might well have no interest in a 'kid' his age regardless of when she might be ready to start seeing someone else.\n\nHe wished everyone a goodnight again, then headed down the hall to see Mrs. Garr, who hadn't been doing well for the last couple of weeks. As much as he loved spending time with the elderly, he knew full well the eventual, unavoidable downside of getting attached. Even so, he always looked forward to his visits and the way his new friends reacted each time he walked into their room.\n\nHe popped his head into hers and said, \"Where's my beautiful girl?\" Mrs. Garr immediately perked up and asked where her 'kissing cop' was then pointed to her cheek. \"Just a little sugar, okay?\" she said in a voice that was raspy and weak.\n\nHe gave her a quick peck and asked how she was feeling. \"Not so good, handsome,\" she told him. \"I think the good Lord may be callin' me home any day now.\"\n\n\"Hey, don't talk that way,\" he told her with a smile. \"Who else am I gonna kiss if he does?\"\n\nShe laughed and the laughter caused a terrible coughing spell. Greer propped her tiny, frail body up and held her until it subsided.\n\n\"Oh, Lord. Maybe I should cough more often,\" she quipped as he gently laid her back down.\n\nThey talked for a while longer before Greer went to excuse himself. \"Oh, Weston? There's something I want you to have, okay?\" She pointed to the drawer in the nightstand next to her bed. \"Go on. Open it,\" she told him.\n\nThere was an envelope with what looked like a Hallmark card inside the drawer. He went to open it and Mrs. Garr said, \"Oh, no. Not that. Just the drawer. No, you hold onto the envelope until the Good Lord takes me into his arms and then you open it.\" She smiled and said, \"No peeking!\"\n\nHe promised he wouldn't then gave her another kiss on the cheek. He saw a tear in her eye then heard her say, \"If only my kin would come to see me like you do.\" She smiled again then asked, \"Is it too late to adopt you?\"\n\nGreer laughed, squeezed her tiny hand, and wished her a good night.\n\nHe just couldn't get back the next night and the following day, his tough, former-Marine police sergeant called him over first thing. \"Hey, kid? I wanted to let you know that nice lady, that um...\" He was looking for the name he'd written down somewhere.\n\n\"Garr?\"\n\n\"Yeah, that's it. She um...passed away last night around 10 o'clock or so. I'm real sorry.\"\n\nHe could be a real dick, but he was a superb police officer and since he'd started visiting the elderly, his heart of stone had softened just a bit.\n\n\"Thanks, Sarge,\" Greer told him. He knew if he'd gone last night, he'd have been there to see her one last time. All he could think about was that sweet lady dying all alone. He blinked away a tear and got ready to go to work.\n\nGreer had never fired his service weapon in the line of duty until that evening. Just twenty minutes before the end of his tour, he and his partner were called to the scene of a robbery in progress at a convenience store on their beat. They were less than a block away and arrived in under two minutes. \n\nA young kid wearing a hoodie had a gun in his hand and was holding it sideways pointing it at the shop owner's face. Greer's partner called for backup as the pair followed department procedure to the letter. The kid saw them standing outside watching him and panicked. He started firing his weapon several times as he bolted for the door. Greer's partner was hit in the shoulder and went down just as the kid exited.\n\nGreer was in a crouch and fired two rounds in quick succession, both of them striking the young man in the chest. Greer approached with his weapon in hand while calling for an ambulance using the most dreaded of phrases, \"Officer down! Shots fired. Repeat. Officer down!\"\n\nHe kicked the young man's weapon away, then slowly knelt down and checked for a pulse. He was alive so Greer handcuffed him then went to attend to his partner who was angry but not scared.\n\n\"Son of a bitch!\" \n\n\"You okay? Where'd you get hit?\"\n\n\"Yeah, I'm okay. Bastard missed my vest by an inch. Looks like it went right through my shoulder.\"\n\nThey heard the sirens in the background and seconds later two squad cars arrived and within two minutes paramedics were on the scene.\n\n\"You want me to call Tammy?\" he asked his partner as they examined the wound.\n\n\"Nah, you'll just scare the hell out of her. I'll call her on the ride to the hospital.\"\n\n\"I'll be by to see you later. And leave the nurses alone! You hear me?\"\n\nBack at the precinct, the lieutenant was waiting for him. Greer debriefed him completely then waited for the unavoidable.\n\n\"You know the drill, Greer. I'm gonna have to take your weapon and put you on administrative leave until the investigation is complete,\" the lieutenant said. \"Sounds like a clean shooting to me, but that's not my call.\"\n\n\"Is the kid gonna make it?\" Greer asked.\n\n\"He's in surgery, but yeah, they think he'll be okay. You know, so he can spend the next 20 years in a prison cell.\"\n\nGreer stopped by the hospital where his partner was recovering with his wife and two kids.\n\n\"There's the real hero,\" the other cop said pointing to his partner who may well have saved his life as the kid was getting ready to fire a second round at him.\n\n\"Nah, I just managed to not get shot,\" Greer said modestly. \"You doin' okay?\"\n\n\"Oh, yeah. This morphine stuff is great,\" he said. He tilted his head toward his shoulder then said, \"Went right through, just like I said.\"\n\nTammy thanked him and he could see the fear in her eyes. It was a dangerous job. There was no getting around that. His partner had a wife and kids, something Greer didn't have to think about. He assured her her husband would fine and that he'd be back to check on him in the morning.\n\nAs he was making his rounds at the nursing home that evening, Shannon was visiting with her dad again. They made small talk and after a nice visit she asked if there was any chance he really could give her a hand over the next day or two.\n\n\"Well, considering I'm on administrative leave and have no job...I think I could manage to stop by and do a little work.\"\n\nHe didn't want to explain why and was grateful when Shannon didn't ask. She gave him her address and he promised to be there bright and early. Colby asked him if he could wear his uniform because he'd made friends with a neighbor boy and he wanted to show him he really did know a police officer.\n\n\"No, sorry, buddy. I'll be wearing shorts and a tee-shirt since it's August.\"\n\nShannon laughed and said, \"Oh, right. The one true month of summer. People go nuts around here when it hits 85 for a couple of days. I'd forgotten that.\"\n\n\"Well, enjoy it, because a month from now it's gonna be...nothing but gray skies...from now on.\" \n\nHe sang it to the tune of 'nothing but blue skies' and Shannon laughed before saying, \"You have very nice singing voice.\"\n\n\"It's strictly for karaoke and the shower, but thank you. So I guess I'll see you tomorrow?\"\n\n\"I hope so,\" she said with a smile. \"Is 9am too early?\"\n\nGreer laughed and said, \"I was thinking more like eight so nine is perfect.\"\n\n\"I'm not exactly a morning person,\" she said, \"so nine is much better for me. She looked at Colby and said, \"But this guy is up bright and early seven days a week, huh?\"\n\nHe was playing video games again and didn't even hear her. Both his mom and Greer did the 'thumbs thing' and started laughing.\n\nGreer stopped by the hospital at 8am and spent some time with his partner then headed across town to the address Shannon had given him and pulled into the driveway. It was a fairly new, rather large, ranch style home in a very nice suburban neighborhood. Nothing overly ornate, but very comfortable with a decent-sized yard.\n\nThere was a large storage container in the driveway Greer correctly assumed was filled with boxes from the move. As he got out of his car, he saw Shannon appear from inside it carrying a large box.\n\n\"Hey!\" he called out. \"Let me give you a hand with that.\"\n\n\"Hey yourself!\" she called back. \"Be careful. This one is pretty heavy,\" she told him happily handing it off to him.\n\n\"Wow. What's in this one? Rocks?\" he joked.\n\n\"Crystal. At least I think that's right. We'll know for sure when we open it, won't we?\" She got the door for him and asked him to set it in the kitchen. Evidently, she'd just started because there were only two other smaller boxes that he could see.\n\n\"You sure you want to get into this mess?\" she asked as they headed back outside.\n\n\"Absolutely,\" he told her. \"Beats hanging out around my apartment all day.\"\n\n\"So you're not working?\" she asked as they each picked up another box.\n\n\"No, I've got a few days off,\" he told her.\n\n\"Well, you certainly don't need to spend them here, but I'm grateful for any help you care to offer.\"\n\nGreer kicked the door with his foot to let Shannon go in first as she said, \"Lunch is on me if you care to hang around that long.\"\n\n\"Oh, okay. Well, honestly? I planned to stay until you were done. I tend to finish whatever I start so unless you kick me out, I'm here until that pod is empty.\"\n\nShe sat the box down in the living room and told him where his went. \"Okay. I accept!\" she said smiling brightly at him.\n\nFor the next two hours they hauled boxes inside one after the other without a break. \n\n\"I think we should maybe knock off for lunch is you don't mind. After that I really need to unpack some of these before we bring anything else in. Don't feel obligated to stick around for that.\"\n\n\"Are you kicking me out?\" he said with a smile.\n\n\"No, just giving you...a way out,\" she said smiling back.\n\n\"No, thanks. I'm good,\" he told her. \"A sandwich is all I need to keep going as long as you feel like working.\"\n\n\"You give real meaning to the 'serve' part of 'to protect and serve',\" she told him. \"I don't really have anything in the house to eat so how about we grab Colby and go get ourselves a sub sandwich or whatever strikes your fancy.\"\n\n\"Yeah, sure. Where is the big guy?\" Greer asked. \n\n\"I let him stay at his new friend's place since we don't even have our beds put together. We've been in a motel until I came over here this morning. So it would be really great if I could at least get his bed assembled today.\"\n\n\"Consider it done,\" Greer told her.\n\nColby was thrilled when he saw Officer Greer and couldn't wait to show his new friend, Dustin, that he knew an actual police officer\u2014uniform or not. Shannon asked his mom if Dustin could come with them, and the four of them headed off to get ready to go to lunch just before noon.\n\nGreer tried not stare as Shannon led Colby back to their house while he and Dustin brought up the um...rear...but she had legs that made it impossible not to look. They were long, lean, shapely and tanned, and she had a perfect, tight little butt he also found irresistible. As if that wasn't enough, she also had this narrow waist and a pair of gorgeous, C-cup boobs that bounced just right underneath the pink wife-beater tee-shirt she was wearing. And that smile and her pretty face and...\n\n\"Weston? What do you think?\" he heard her say.\n\nThe problem was he'd been 'otherwise occupied' and hadn't heard a word.\n\n\"I'm sorry. Could you say that again, please?\" he asked hoping she didn't know why he hadn't been paying attention.\n\n\"Do you have a preference for where we go?\" she asked.\n\n\"I'm kind of fond of Potbellys, but anywhere is okay with me,\" he told her trading places with Colby.\n\n\"Potbellys? Are you serious or just pulling my leg?\" she asked, covering her eyes with her hand as the sun shone directly into them.\n\n\"Serious. There are two of them fairly close by. Or we could hit Quiznos. That's a little closer.\"\n\n\"I've been to Quiznos. You've got my curiosity up with this Pork Belly place so let's give that a try,\" she said intentionally goofing on the name.\n\n\"You won't regret it,\" he told her. \"Their toasted ham and cheese on rye is incredible. I like sauerkraut on mine but...\"\n\n\"Eeew! Sauerkraut? Really?\"\n\n\"Oh, yeah. Really,\" he told her. \"Tell you what. You try one bite. If you don't like it, lunch is on me.\"\n\nShe smiled at him and said, \"Okay, you're on! Come on boys, climb on it!\"\n\nShannon drove a Volvo Cross Country wagon. Nothing flashy but very safe and Greer knew it was fairly new and likely a 2015 model. He also knew they went for around $40,000 which was the starting price for the base model. This one had to be well over fifty grand new.\n\nTwenty minutes later, the car was unloaded and Shannon was walking into Potbellys with Greer. \n\n\"Nice place,\" she said. \"Funny name, but nice.\"\n\nA young girl saw them and smiled at Greer until she realized this beautiful woman was with him. She saw her wedding ring and did a double take. \n\n\"Hi...Weston,\" she said dryly. \"I...I didn't know you were married.\"\n\nHe smiled at her then at Shannon who smiled back, \"Oh, no. We're not married,\" he said pointing at himself and Shannon.\n\n\"We're just friends,\" she added. \"No worries. He's still available.\"\n\nThe girl blushed furiously then said, \"Oh, okay...um...well, have a nice lunch!\"\n\n\"Looks like someone has a crush on a handsome young police officer!\" Shannon teased.\n\n\"Nah, she's just really sweet,\" Greer said playing it but knowing better.\n\n\"Uh-huh. Sure. I was her age once, but let's go with your version,\" she said smiling at him in way that let him know she wasn't buying it.\n\nAs promised, Shannon took one small bite of Greer's sauerkraut-laden sandwich. She made a face as she did, but as she chewed, the face went away. \"Oh, my goodness. This is delicious!\" she said with her mouth full.\n\n\"Told you, right?\" he said gloating just a bit. \"Looks like you're buying\u2014this time.\"\n\nAs they ate, Greer couldn't help but notice how well-behaved Colby and Dustin were, something he mentioned to Shannon.\n\n\"I don't know Dustin, but he seems sweet. Colby really is a good kid, Weston.\" She lowered her voice and leaned closer. \"His father's death really hit him hard. He's much more subdued now. We both went to see a therapist a few times right after he passed away, and she said this is very normal. It's just hard to see him hurting. I know this is something he has to go through, but as a mom it isn't easy, you know?\"\n\n\"I can't say I fully understand, but I can certainly sympathize. Were they close?\"\n\n\"Yes and no. Dale, my husband, sold pharmaceuticals. He traveled a lot for business. He was gone about half the time and busy with work whenever he came home. He tried to spend time with Colby, but Dale didn't play sports and that's what Colby loves. Well, other than video games which I think you already noticed. And Dale didn't enjoy those much, either. Still, he was his father and I know he misses him terribly. I miss him, too, just not like my son. But...that's another story for another day.\"\n\n\"What are his favorite sports?\" Greer asked her.\n\n\"Oh, you name it. Soccer, football, basketball, hockey, skateboarding, bowling. All of them and more.\"\n\n\"There's a half pipe not far from your house. Would you possibly consider letting me take him there while I'm off work?\"\n\n\"Do you skate?\" she asked not sure she heard him right.\n\n\"When I was a kid, yes. I haven't for a long time, but I can probably still hold my own with anyone who isn't really good. Some of these kids are just amazing. I like to bowl, too. Maybe we could go bowling sometime.\"\n\n\"We? As in you and Colby or...\"\n\n\"Whatever,\" he said. \"I'd be more than happy to take him\u2014Dustin, too, for that matter\u2014but it like seems he'd enjoy having his mom around. No?\"\n\n\"Um...maybe. I've tried to take up the slack for his dad being gone so much, but I'm just not good at any sport. I try but honestly? I suck.\"\n\nGreer laughed politely and Shannon said, \"I'm not kidding. I totally throw like a girl. I bat like a girl.\"\n\n\"Um, well, you kind of are a girl,\" he said trying not to stare.\n\nShe smiled then said, \"I like being a girl. I just wish my son had a strong male role model who was there for him, you know? Then again, I'd love to find someone someday myself. I truly hate being alone, and that was part of 'the other story' I referenced a minute ago.\"\n\n\"If you ever wanna just talk, I've been told I do a pretty decent job of listening.\"\n\n\"I noticed that,\" she told him. \"You're not like any guy I've ever met. You really do listen. You actually pay attention and seem to care about what I have to say. That's very refreshing.\"\n\n\"I do care, Shannon, and I'm available pretty much anytime. Just let me know.\"\n\n\"Thank you, but you're already giving up so much of your time helping me get settled. Oh, and then there's all the volunteering you do.\" \n\nShe stopped for a second then said, \"Weston? I can't thank you enough for taking an interest in my dad. I've almost literally been sick knowing he's there all alone. You've made quite an impression on him...and me.\" She paused again then smiled at him. \"Please, please don't spoil the surprise, but I'm moving him in with us as soon as the house is put together. Dale had a reasonably good life insurance policy and after selling our home in Colorado, we can afford nursing care, and I want my dad to be at home with his family.\"\n\n\"Wow. That is just incredible, Shannon! I can't tell you how good that makes me feel. Whatever you may be alluding to in your marriage is none of my business, but I can tell you I'm a little...\" Greer stopped talking and thought twice about finishing his thought.\n\n\"It's okay, Weston. Tell me. I won't be offended. I promise.\"\n\n\"Offended? No, I was going to say something complimentary, but it probably isn't appropriate so perhaps I should just stop talking now.\"\n\n\"I haven't heard many compliments in...well, many years, so at the risk of sounding like I'm fishing for one, it would be very pleasant to hear something nice.\"",
        "\"Okay, well, I was going to say I was almost envious of your husband being married to a woman as caring and thoughtful as you.\" Greer wasn't shy, but he really did feel this was something he shouldn't be saying.\n\n\"Thank you so much. That just made my day,\" she told him with a happy smile.\n\nIn spite of his deep misgivings he found himself blurting out the rest of what he'd been thinking. \"You're also very attractive on top of everything else.\"\n\nHe saw Shannon stop smiling and turn away and knew he'd crossed the line. \"I'm sorry. That was totally out of line. Shannon, I don't normally just say things without thinking. It kind of just came out.\"\n\nShe grabbed a napkin and dried her eyes. \"I'm not upset, Weston. It's just that I wanted my husband to something like to me for so many years and he never...\" \n\nShe looked over at him and said, \"Maybe we should get back to the house. That is, if you're not fed up with my overly emotional reactions to everything. It's just so nice to hear anything positive. Thank you, Weston. And Potbellys is a great place for lunch. I'm glad you suggested it.\"\n\n\"Boys? You ready to head back?\" Shannon asked making sure Colby hadn't see her crying\u2014again.\n\nIt was after five and hours of putting things away before Shannon said to Greer, \"You ready to call it a day?\"\n\n\"I would be except now that I know that finishing means moving your dad in here, I'm up for a few more hours if you are. I could order some pizza and we could just keep on trucking.\"\n\n\"We got a ton of stuff done today and Colby's bed put together so please don't feel obligated to stay.\"\n\n\"I don't feel obligated,\" he told her. \"I feel honored. And like I said, I really don't have anything else to do today so...\"\n\n\"Okay, then. You're on!\" she told him smiling happily. \n\nDustin had to go home for dinner, but Colby was thrilled to be eating pizza from Pizza Hut. He loved their pan-style crust with pepperoni and sausage, while his mom asked for mushrooms and black olives on the other half. Greer just liked pizza so he had a couple of slices of both along with some cherry diet Dr. Pepper to wash it down with.\n\nIt was eight o'clock when Shannon said, \"I can't lift one more thing, Weston. I've got to take a break.\"\n\n\"Oh, sure. That's fine. We've been at this all day. I'll just grab my stuff and get out of your hair. I can be here again tomorrow if you'd like.\"\n\n\"You deserve some kind of award,\" she told him. \"I won't refuse your offer, but again, please don't feel...\"\n\n\"Okay, then I'll see you tomorrow again at 9am!\"\n\nShannon walked outside with him and thanked him profusely for the help. \"You're a lifesaver, Officer Greer,\" she said as they stood by his car.\n\n\"I'm just glad I could help. I guess being forced to take a little time off isn't such a bad thing.\" He smiled but Shannon sensed something wasn't right.\n\n\"Weston? I know it's getting late, but I get the sense there's something going on you might want to talk about. Is there?\"\n\n\"Oh, I don't want to bore you with work stuff, Shannon. They should be done with the investigation in a few days and then I'll be back at work.\" He didn't mention the mandatory requirement to see the department's shrink to be cleared before returning to full duty.\n\n\"You won't be boring me at all. In fact, there really isn't anything to do since we have no TV, no DVD player, or... Well, there is a boombox but listening to the radio alone isn't exactly my idea of a big night. I'd actually really like some company, and if you care to talk about whatever's going on, I'll share my sad story with you.\"\n\nShe had this imploring look in eyes he knew he couldn't resist. He was all about helping people and even though it meant missing his visitation time at the nursing home, he was sure they'd forgive him this one time.\n\n\"I could go grab a six-pack of cold beer,\" he offered.\n\n\"Great! I'll take a shower while you're gone now that we found the box with the bathroom stuff in it.\"\n\n\"Oh, in that case, I'd smell like wet tennis shoes to you so maybe we should postpone this until...\"\n\n\"Don't be silly. Come back and take a shower here. Colby's home so it's not like we're 'doing something wrong',\" she said making air quotes for the doing something wrong part.\n\n\"Well, I've got my gym bag in the trunk with a spare pair of shorts and another tee-shirt and some clean socks. Okay, if you're good with that, that works for me, too.\"\n\n\"Okay. So...I'll see you in a few minutes then! And I promise to try and not look like such a...mess.\" \n\nJust like Greer, Shannon was dirty and sweaty, and even though her long, blonde hair was pulled back in a ponytail, it was looking pretty ragged, too. Even so, she still looked incredible and Greer found himself saying so.\n\n\"You look just fine to me,\" he said. \"But I do know how good a shower feels after working all day so have it at it. What kind of beer do you drink?\" he asked.\n\n\"The cold kind,\" she told him with a sweet smile. \"Get whatever you like and that'll be fine with me.\"\n\nHe hit a convenience store a half mile down the road and was back in less than ten minutes. He knocked but no one answered so he went back in and put the beer in the refrigerator and set his gym bag down on the floor.\n\nShannon clearly didn't know he was there as she came walking into the kitchen with just a towel wrapped around her. When she finally did see him, she made a loud noise which scared the hell out of Greer.\n\n\"Sorry! I didn't know you'd be back so soon,\" she said pulling the towel tight.\n\n\"My apologies,\" he said turning his back to her. \"I put the beer in the fridge so whenever you want one...\"\n\n\"Weston? It's okay. I just didn't know you were here. Really. I'll go put some clothes on and dry my hair while you take a shower in Colby's bathroom. He's in mine now taking a bath, by the way.\"\n\nGreer turned around and did his best not to look. Everything was covered, but there was a lot of cleavage showing and the towel just barely covered up her...backside so he grabbed his bag then intentionally avoided eye contact as he went by.\n\nHe took a very quick shower then came back out to find Shannon sitting on the couch with her legs up drinking a beer.\n\n\"Is it cold?\" he asked as he went to grab one.\n\n\"Oh, it's great!\" she said. \"I'm not much of a beer drinker but after a day like today, this tastes so good.\"\n\nGreer grabbed one then joined her taking a seat on the recliner they'd put together while Shannon relaxed on the sofa. Even without any makeup, she looked amazing. Her hair was dry now and it was soft and full. Her face was clean and fresh and so...pretty. Yeah, pretty was the word that fit.\n\n\"You look great,\" Greer told her.\n\n\"Thank you\u2014again,\" she said. \"I don't know about 'great' but I do feel clean.\" She smiled at him then said, \"You clean up pretty well yourself, Officer Greer.\"\n\nHe took a long pull from the bottle then said, \"So do you still feel like talking?\"\n\n\"I'd rather listen first, if that's okay,\" she replied. \"You said your time off was...forced?\"\n\nHe took a deep breath then spent the next couple of minutes telling her what happened.\n\n\"Oh, my goodness. So your partner is okay and this kid survived?\" she said hardly able to believe what he'd just told her.\n\n\"Yes and yes,\" he said. \"I've never even drawn my weapon before. It's not like on TV where cops pull their weapons out at least once an episode. And actually firing it is even more rare.\" He made a face then said, \"Or would that be 'rarer'?\"\n\nShannon laughed and said, \"Don't ask me. English wasn't my best subject.\"\n\n\"So that's the short version of why I'm on administrative leave. Care to tell me your story now?\"\n\n\"I'm tempted to ask you how all of that makes you feel, but I don't want to make you relieve it so I won't.\"\n\n\"Don't worry about that. I've relived it a hundred times already, and while I hated shooting someone, I know I did the right thing so it's not gonna give me PTSD or anything. I slept just fine and I'll continuing sleeping well knowing my partner is going home to his wife and kids tomorrow.\"\n\n\"You know you're a hero, right?\" she told him.\n\n\"Hardly. Well, maybe to his family, but I really was just doing my job. Anyway, enough of that. I'd like to learn more about you and this thing you seem to want to talk about or anything else you'd like to share for that matter.\"\n\n\"I don't know. Now that I've thought about it, I'd probably just feel bad for bringing this up and there's nothing that can be done to change it so I'm not sure it's such a good idea.\"\n\nGreer was watching her carefully. It was much more than her words. It was the way she said them and the way she looked when she spoke.\n\n\"It was more than just being alone too much, wasn't it?\" he offered in a kind way.\n\n\"Is it that obvious?\" she replied.\n\n\"I get the feeling you weren't just alone but also\u2014lonely.\"\n\n\"Wow. I didn't even have to say it.\" She took a sip then said, \"Do they teach you that at the academy? Mind reading?\"\n\nShe smiled but he could tell she was hurting somewhere deep inside.\n\n\"Marriage is supposed to be a partnership, you know?\" she began finally wanting to talk. \"You're supposed to be a team. You work together and compliment one another. Not the 'say nice things' kind of compliment, but where you mesh your strengths and weaknesses and become closer and stronger.\" \n\nShe was having a hard time, and Greer told her she didn't have to share any of this with him. \"It's okay. I'm not sure why, but I trust you, Weston, and I feel like you won't criticize me or judge me.\"\n\n\"Nope. I won't do either. I'm just a friend ready to listen.\"\n\n\"Well, in a nutshell, Dale was so...different after we got married, you know? He went from being warm and affectionate to distant and cold. He was 16 years older than me and he'd always made me feel so...safe and so cared for. I went from feeling like I'd married my best friend to living with a stranger. We had Colby our first year together and that's when things went from bad to worse. Yes, I gained quite a bit of weight, but I got it all off within a year. Even so, he just never wanted anything to do with me after that. I had Colby and that gave me something to do and someone to love, but living with the person you love and want to be with, but who no longer wants you is...is worse than being alone. It got to where I looked forward to him leaving and dreading when he came home.\" She looked at him then said, \"That sounds terrible, doesn't it?\"\n\n\"Terrible? Not at all. It sounds...tragic. I don't know anything about your husband or your marriage, but I do know you're one of the most attractive women I've ever met and the thought of not wanting to be with you is something I just can't understand.\"\n\nHe stopped talking and saw she was tearing up again. \"Hey, are you all right?\" He instinctively went to comfort her. He sat next to her and said, \"It's okay. Or it's going to be okay. None of it was your fault.\"\n\nShe shook her head but didn't speak.\n\n\"What is it, Shannon? Can you please talk to me?\"\n\nShe was fighting hard not to start crying, and he wanted to hold her more than anything but knew that wasn't okay. She took several deep breaths then tried to talk.\n\n\"I'm not so much upset about the past as I am with how needy I am now because of it.\" She wiped her eyes with a clean napkin then said, \"That's twice today you've said something really nice to me and...and I just wanted to...drink it all in. I feel so empty inside, you know? All I ever wanted was someone to make me feel...to make me feel like you've made me feel today.\" \n\nShe was still very shaky as she tried to steady herself. \"Is that too much to ask? Is it too much just to want the man you love to tell you you're beautiful once in a while? To maybe say he can't live without your touch every now and then? That he wants to make love to you so bad it hurts?\"\n\nGreer gently put a hand on her forearm as she took some more deep breaths. \"I didn't need the big house or the expensive cars or the...stuff his money bought. He was always working and we had more money than I'd ever seen in my life, but I was so lonely. I hurt so bad and I cried so many times. And then one day, I just stopped crying. And that's when I stopped caring. I...I built my entire life around Colby and the one or two friends I only occasionally saw because we lived so far from anyone else. I was living in this huge, gorgeous home in the middle of nowhere with my wonderful son and my heartless husband.\" She was doing better finally and said, \"This is the most terrible thing of all. I... I was almost happy when I found out he...\"\n\n\"Mom! Can you bring me my clothes?\" Colby called out.\n\n\"Sorry,\" she said. \"I'll be right back. And I promise I'll stop blubbering.\"\n\nShe grabbed his hand as she stood up, squeezed it gently, then slowly let it go as she headed toward the other end of the house.\n\n\"Be right there, honey!\" she called out.\n\nA couple of minutes later she came back and said, \"He'll be coming out to say goodnight here shortly so I can't be crying.\" She'd obviously splashed some water on her face and looked pretty close to normal again. \"Thank you for listening, Weston.\"\n\n\"Hey, my pleasure,\" he told her. \"Anytime. And Shannon? No disrespect, but your husband was well, he was a...he missed out on someone and something truly amazing.\"\n\nHe saw her tearing up again so he changed the subject. \"Oh, you never told me if I could take Colby skating. How about we all go tomorrow? We'll just take an hour and go over to the half pipe.\"\n\nHe saw Shannon's eyes look right passed him, so he knew Colby was standing there. \n\n\"Are we going skateboarding tomorrow?\" he asked, his eyes wide with anticipation.\n\nGreer looked at Shannon who nodded.\n\n\"Yeah. Yeah, we are. How does that sound?\"\n\n\"Awesome!\" he said. \"Mom? Did you find my skateboard yet?\"\n\n\"I know which box it's in so we can get it first thing in the morning, okay?\"\n\n\"Cool! I can't wait to show you my moves, Mr. ...\" \n\n\"Greer,\" his mom said. \"And it's Officer Greer.\"\n\n\"Weston is fine unless you mind,\" he said.\n\n\"Okay. Then I guess you can call Officer Greer\u2014Weston.\"\n\n\"I can't wait to see you do your thing, buddy. I used to be pretty good back in the day.\"\n\n\"This is gonna be so cool!\" Colby said excitedly.\n\n\"Do you want to invite Dustin?\" Shannon asked.\n\n\"No, not tomorrow. I just want to hang out with Weston!\" he said still beaming with excitement.\n\n\"Okay, then that's exactly what we'll do!\" he said. \"Oh, hey. Is it okay if your mom tags along with us?\"\n\nBefore Colby could answer, his mom chimed in. \"I can't skateboard, but I used to be a cheerleader. Rah, rah, rah and all that. I can at least root you guys on,\" she said holding out her arms for her son. He gave her a hug goodnight then turned to Weston but immediately stopped.\n\nGreer could see Colby wanted to hug him, but it obvious his father hadn't encouraged that kind of thing. He stuck his arms out and said, \"Come here, big guy. Give me one those too, would you?\"\n\nColby's face lit up as he ran straight into Greer's outstretched arms then latched on tight. \"I liked hangin' out with you today, Colby.\"\n\n\"Me, too,\" he said his face still buried in Greer's neck.\n\n\"Okay, tell Weston goodnight and let's get you ready for bed,\" his mom said prying him off of Greer.\n\n\"Goodnight, Weston,\" he said with a big smile. \"Will you be here in the morning?\"\n\n\"Not until about nine, but yes, I'll be here.\"\n\n\"Promise?\" he asked.\n\n\"Colby? Weston said he'd be here.\"\n\nGreer knew why he was asking and said, \"I promise. There's no way I'd miss a chance to go skating with my new best bud!\"\n\n\"Cool!\" he said again as his mom led him off to bed.\n\nOnce Colby was tucked in, he fell asleep within two minutes.\n\n\"He had a long day,\" Shannon said. \"But he had a lot of fun, too.\"\n\n\"It's great that he's already made a friend and one who lives right next door.\"\n\n\"True,\" she said, \"but it was you who made the difference, you know. He hung on every word you said, Weston. And the way he hugged you tonight?\" Tears formed again as she said, \"That just melted my heart and my heart has felt like it's a lump of coal for a very long time.\"\n\n\"It's how you've protected yourself from getting hurt,\" he told her letting her know he understood.\n\nShe blinked away the tears, smiled and said, \"You're right. I had to toughen up to stay with Dale knowing I wasn't ever going to get the kind of love and nurturing I needed.\" She looked at him and said, \"That makes me sound so weak and needy, doesn't it?\" \n\nHe reached out for both of her hands then said, \"No, it makes you sound human. Who doesn't need love, affection, and nurturing? Sure, we're adults and we're supposed to be strong and brave and all that. But deep down we still have the same needs we did as children. We just need different things to fulfill them.\"\n\n\"Yeah, I guess you're right. Getting a pony or a shiny new bicycle doesn't have quite the same meaning now as did when we were Colby's age.\" She was still letting him hold her hands when she said, \"You're the most unusual guy I think I've ever met before, Officer Greer. Were I a little closer to your age I might...\"\n\n\"What? Flirt with me?\" he said lowering his head to get her to look into his eyes.\n\nIt took a couple of seconds, but she finally looked back at him.\n\n\"Maybe,\" she said in a noncommittal kind of way. \"But I'm not closer to your age or even close to it, so I guess I'll have to settle for calling you my friend.\" She smiled and told him, \"A very good friend, by the way. I want to thank you one more time for being so helpful today, Weston.\"\n\n\"I wouldn't have missed it,\" he told her before saying, \"I should probably be going.\"\n\n\"Oh, okay,\" she said as he let her hands go. \"So do you know how long this investigation will take?\"\n\n\"No, not really. I'm guessing just a few days. I understand they have a video of it from a street camera right in front of the store as well as my partner's statement.\"\n\nShannon didn't want to say goodbye, but after a deep sigh said, \"All right, I guess I'll let you go. I'll dig Colby's skateboard out of the box it's in before you get here so we can go to the um...skate thing. What did you call it?\"\n\n\"A half pipe. You'll understand why when you see it,\" he let her know. \"Okay, so see you tomorrow?\"\n\n\"Definitely. I'm really looking forward to it, Weston.\" She let him out then smiled one more time before saying, \"Good night!\"\n\nGreer had to hunt down his own skateboard when he got home. He hadn't been on it since he was maybe 14 or 15. When he found it, it brought back a lot of very pleasant memories along with recalling the way he'd broken his wrist the last time he ever rode it. He'd tried to grind a double handrail but unfortunately, the rail ground him and then grounded him after that. He was at the age where he was getting tired of skating anyway and that event convinced to put his board away and take up a more interesting hobby\u2014girls.\n\nGreer had had a girlfriend or at least a series of girls in his life ever since. The only real break had come during his time at the academy and maybe the first month on the job. He was attractive enough that he didn't have to do the pursuing in most cases. The girls\u2014and later, women\u2014came to him with great regularity. Between those good looks and his boyish charm, he was very popular with pretty much every female he met from Mrs. Garr to... That's when it hit him.\n\n\"Where did I put that envelope?\" he said when it hit him. He went to his study and found it then slit open the top with a letter opener. Inside he found a certified check for $10,000 along with the card.\n\n\"Hello there, handsome! I've gone to be with Jesus, but I'm still thinking about that nice-looking young white boy who was such a good kisser. (I'm gonna miss that most of all, don't you know!) This is all the money I got left in the world and the home don't know I have it. I'm leaving it all to you because you been nicer to me than anyone in my family. Weston? You are like a son to me and your visits were the highlight of every day. I can't tell you what they meant to an old woman who was ready to give up right about the first time you walked in. You gave me somethin' to live for so I want you to have this. And I want you to do somethin' nice for yourself with. Knowin' you, you'll spend it on someone else, but that's okay, too. Long as I know it went to you, then I'll die happy. You're a good boy, Weston. Don't ever change. (If you do, I'm gon' come and beat you upside the head, you hear me?) With my love and gratitude (and one more kiss), Lucinda Garr.\"",
        "Her handwriting was shaky and very hard to read and the tears in his eyes didn't make it any easier. He set the card down then looked up and said, \"I love you too, Mrs. Garr. And don't worry. I won't ever change. I promise.\"\n\nHe picked up the card and read it again, then took another look at the check. It was made payable to Weston Greer in the amount of $10,000. He just shook his head then set it down and willed himself not to cry.\n\nThe weather was perfect again the next morning, and he noticed Colby had his skateboard and helmet by the front door when Shannon let him in.\n\nGreer said hello as he came inside, but didn't notice until Shannon closed the door and asked how he was doing that he actually looked at her. \"I'm...fine,\" he said, a blank look on his face.\n\n\"So did you want to go to the half pike thing now or wait until a little later?\" she asked as though nothing had changed.\n\nBut it had. Her hair was styled and looked unbelievably soft and silky. Greer had seen her wear very light makeup before, but today she looked like she'd had a makeover. It wasn't overpowering or too much, it was just...stunning. She looked so different and so beautiful, Greer couldn't speak.\n\n\"Weston? Did you want to do the skating thing first?\"\n\n\"Oh, right. Um, yeah. That sounds good. It's still nice and cool but not chilly. Is Colby ready to go?\"\n\nShannon laughed. \"He's been up since six o'clock asking if you were here yet every few minutes. So yes, he's ready to go. I'll let him know we're ready.\"\n\nShannon was wearing a very cute, sleeveless white knit top that clung to all the right places showcasing her feminine body in a way that was very distracting. And then there were the black shorts that did the same wonderful thing for her cute um...rear end which was still perfectly attached to those long, shapely legs which ended in a pair of white sandals.\n\nHis thoughts were interrupted by the sounds of someone tearing down the hallway. \n\n\"Weston!\" he called out. Greer dropped down and not only hugged the boy but picked him up.\n\n\"Hey! Did you get bigger overnight?\" he asked as he held him way above his head. \"Look how tall he is, Mom!\" he said to Shannon.\n\n\"Did you see my skateboard, Weston?\" he asked excitedly as the police officer set him down.\n\n\"Yeah, that's a great board,\" he said pointing to it. \"They didn't have anything that nice when I was skating. You ready?\"\n\n\"Yep! I'm ready!\" he said grabbing his stuff.\n\n\"Let me get a couple bottles of water and I'll be right out,\" Shannon said.\n\nGreer had momentarily forgotten about the 'big change' and did another double take when he looked at her.\n\n\"What?\" she said as she went to the kitchen.\n\n\"What do you mean 'what'?\" he said following her. \"You look like...a model.\"\n\nShannon laughed loudly then said, \"You need to get out more, Officer Greer.\"\n\nShe handed him a bottle and as he took it he looked right at her and said, \"I get out plenty, thank you. And you look...amazing.\"\n\n\"Well, thank you, but I had to do something. If I'm gonna hang out with you, I wanted to at least look like I'm close to being in your league,\" she said with a very happy smile.\n\n\"Oh, you're in my league, all right,\" he said following her the other direction. \"In fact, I'm not sure I'm in yours today. Did I already say you look great?\"\n\nShe stopped to lock the door, smiled again, then said, \"Yes, but it was very nice hearing it again.\"\n\n\"Well, you do,\" he said as he stepped outside.\n\nColby talked non-stop on the way to the skate park. Greer hadn't been there in years, but he knew it was still there. What he didn't know was the condition it was in.\n\n\"Oh, man. This place looks bad!\" he said as they walked up to it.\n\n\"Can we still skate here?\" Colby asked.\n\n\"I think so, but we're gonna have to be careful. See over there? There's a big chuck missing out of the half pipe.\" He grabbed a rail like the one he'd broken his wrist grinding on and said, \"This thing is so loose it's about to fall out. What a shame.\"\n\n\"Is it safe, Weston?\" Shannon asked.\n\n\"Not the rail, but we can still do a lot of stuff here. It's just sad to see it look like this.\"\n\nHe grabbed his board and said to Colby, \"Come on, dude. Show me what you got!\"\n\nIt was obvious Colby hadn't even really had the chance to skate the way Weston had so they started with the basics and got as far as they could in an hour or so. By the time the left, Colby had made significant progress, and he bubbled on and on about it all the way back home. But his biggest question was for Weston: \"When can we do that again?\"\n\nShannon started to tell her son how busy Weston was but he said, \"No, it's okay. Really. How about tomorrow?\" which made Colby a very happy camper. So much so, he spent the rest of the day helping carry boxes or put things away doing his best to stay close to Greer.\n\nDuring lunch, which was sandwiches made from the bread and lunch meant Shannon picked up on their way home, Colby said, \"When I grow up, I want to be a police officer. Just like Weston.\" \n\nNo one laughed at the little boy with a dream, but his mother did tear up again. This time, Weston didn't have to ask why.\n\nBefore he left to go see his friends at the nursing home, Shannon walked outside with him after Greer said goodbye to Colby. It was still warm and pleasant something that wouldn't last much longer. \n\n\"You know, Colby is getting really attached to you, Weston. And you're so good with him.\"\n\n\"But?\" Weston said knowing one was coming.\n\n\"I just don't want to see him get hurt. You can't keep spending this much time around him every day, and we both know that, but Colby doesn't. Maybe it would be best if you kind of just sort of drifted away after tomorrow.\"\n\n\"Oh. Um...I guess you have a point,\" he said. \"Then again, after having spent this much time around him...and his mom\u2014and really enjoying it\u2014well, maybe I could keep spending time around both of you.\" He looked at Shannon then said, \"Unless, of course, you're tired of having me around.\"\n\n\"Weston, please don't make this harder on Colby and me than it has to me. We both know how busy you are and once you're back at work and my dad is home with us, we'll just be a memory.\" She smiled and said, \"Okay, you'll be a very pleasant memory from my perspective, but that's all it will ever be.\"\n\n\"It doesn't have to be that way,\" Greer told her quietly. \n\n\"Weston, come on. We've been over this. I hate saying it out loud, but I am older than you. A lot older and there's no way a guy like you is going to hang out with a woman like me. You could have pretty much any girl you want. Someone who's beautiful, smart, and well, a whole lot younger than me. So let's not kid ourselves, okay?\"\n\nWeston reached for her hands again and Shannon said, \"Weston, please...\"\n\nEven so, she gave them to him. \"I do all right for myself with regard to women,\" he said which was an understatement in the extreme. \"But honestly? I haven't even looked at another woman since...\" He looked down for a moment then looked back at her. \"Since the first time I saw you carrying that heavy box full of crystal.\"\n\nShannon made a 'pffft' kind of noise and said, \"Right, because seeing a woman my age toting boxes is so...sexy.\"\n\n\"No, because you are so sexy.\"\n\nAnother 'pffft' sound followed by, 'Yeah, right. I might not look awful with my makeup on, but otherwise...\"\n\n\"You weren't wearing any when I started falling for you,\" he told her, his voice trailing off.\n\n\"Falling? For me? Come on. Be serious. I'm 35 years old with a son who just turned seven. And...I'm damaged goods. I'm a mental train wreck.\" She looked at him then said, \"You should run, Weston. Just get away while you can. From me, from my problems, and from...\"\n\nWeston reached up and touched her face and said, \"Not a chance. I never run from anything, and while I'm not a Type-A kind of guy, I do go after what I want.\" He leaned in close then kissed her softly on the lips. \"Like you.\"\n\nShannon was speechless. She stood there not wanting to look at him yet unable to not look. Her heart was racing and her head was spinning. Finally she said, \"Why did you do that?\"\n\n\"Because I needed to show you you've got it all wrong,\" he said still gently touching her face.\n\n\"I do?\" she asked, her voice weak and frail-sounding.\n\n\"You do,\" he said. \"You're not 'a wreck.' You're just temporarily confused. Your self-esteem has taken a huge hit. Your self-confidence has been shattered. You don't think you're attractive to anyone, let alone to me, but you couldn't be more wrong because you may just be the most beautiful woman I've ever met. And you're kind, caring, and loving. You're a devoted mother, a wonderful daughter, and so much more. The last thing I want to do is run.\"\n\n\"It is?\" she said just as quietly.\n\n\"I not only don't want to run, I very much want to stay. I want to be with you, Shannon. And with Colby. I know I'm not his dad, but he's such a great kid and I'd love to be a part of his life. So...so unless you're telling me you don't want me in his life...or yours, I plan to keep coming back as often as you'll let me.\"\n\n\"You...do?\" she said, her heart pounding wildly.\n\n\"Yes, I do,\" he said before putting his other hand on her cheek, framing her face, then kissing her again. This time she kissed back and put her arms around his neck.\n\n\"So...would you like me to come back? Can I be a part of your lives?\"\n\nHer eyes moved quickly back and forth between his as she listened.\n\n\"Yes. Yes, I'd like that. I...we'd...like that very much, Weston.\"\n\n\"You see? You're not a wreck. You're thinking very clearly,\" he told her with a big smile.\n\n\"Oh, trust me. My brain is anything but clear right now. It's...a mess. But my heart is beating so fast I can't think straight, and worst of all, I don't care that I can't. All I care about, all I want, is...is being with you even though it makes no sense why you'd want to be with me.\"\n\n\"Well, I do want to be with you,\" he assured her. \"So until you can understand why, will you just trust me and believe me when I tell you there's nothing I want more than to be with you?\"\n\nShe looked into his eyes for several seconds before saying just above a whisper, \"Yes.\"\n\nHe kissed her one more time then said, \"So...I'll see you again tomorrow.\"\n\nShannon just nodded unable to say another word as she watched him get in his car. He smiled at her then backed out of the driveway while she stood there staring straight ahead long after he was gone.\n\nThe following day, Greer spent two hours with Colby at the half pipe then the rest of the day with Shannon. Before he left to make his daily rounds, she told him, \"I think this place is just about ready for me to break the good news to my dad.\" Colby was in his bedroom so Shannon put her arms around Greer and said, \"Would you please be there with me when I tell him?\"\n\n\"You know I will,\" he told her. \n\nThey'd held hands, hugged, or stolen a kiss anytime they had a chance that day as Shannon still wasn't completely sure she said tell Colby that Greer was going to be a part of their lives. That's because she wasn't sure herself just how big a part he might play.\n\nShe kissed him then said, \"Weston? I was thinking and once my dad comes home it might not be so easy to have a lot of time to ourselves around here.\"\n\n\"That seems likely,\" he said before kissing her back.\n\n\"I'm not really a morning person, but I am very much a night owl. So if you maybe wanted to come back over here later on after your visitation...\"\n\n\"I would love that,\" he told her before kissing her goodbye.\n\nIt was a little after 11pm when he returned to Shannon's. She cracked the door slightly when he knocked to make sure it was him. Even then she was hesitant to open the door.\n\n\"Did you want me to come in?\" he asked after standing there for several seconds.\n\n\"Yes,\" she said. \"I...I just kind of lost my nerve.\"\n\nPeeking in through the crack, Greer said, \"I'm not sure I understand.\"\n\n\"I...I kind of maybe overdid it and now I wish I hadn't,\" she said which told Greer nothing.\n\n\"I'm a little lost,\" he said trying to get a look at her. Only her face was visible as she was hiding everything else behind the door.\n\nSeveral more seconds passed before she finally opened the door and then it was very, very slowly opening. \"Um...come on in,\" she said.\n\nWhen she closed the door, Greer understood.\n\n\"I should go get my robe and then...\"\n\nHe saw her start to move away and gently caught her arm.\n\n\"No, don't do that. Please. Don't go anywhere, okay?\" he said as he moved in front of her.\n\nShe was wearing a white bustier with white stockings, four-inch white heels, and a gorgeous knife-pleated, white robe over it. It was sheer enough that Greer could see everything and everything looked incredible. He hair and makeup were also perfect and even the scent of her perfume was intoxicating.\n\n\"I really went overboard, didn't I?\" she said as he held her hands.\n\n\"No, not at all. Shannon, you look so incredibly beautiful...you...you take my breath away.\"\n\n\"I wanted to look pretty for you, and I was so happy thinking about you coming back here and I've had this...this outfit for three years and never worn it and I wanted to wear it for you, but then I felt so foolish and...\"\n\nGreer leaned in and kissed her then said, \"You don't have to explain. You look gorgeous.\"\n\n\"Thank you,\" she said. \"Um...did you maybe want something to drink?\"\n\n\"No,\" was all he said. His smile said everything else.\n\n\"So do you want to...\"\n\n\"Yes,\" he said quietly. \"I do.\"\n\n\"Okay,\" was Shannon's own simple, one-word reply. She took Greer's hand and led him to her bedroom and closed the door.\n\nShe lit several candles then stood in front of him and said, \"I haven't been with anyone for almost two years. Just so you know.\"\n\n\"That's okay,\" he assured her. \"We can go as slowly as you need.\"\n\n\"I'll be fine. I think,\" she told him. \"I just have all of this pent-up passion, and there's no one I'd rather share it with than you.\"\n\n\"Me, too,\" he told her before opening her long, flowing robe and letting it fall to the floor. \"You are so beautiful,\" he told her again before kissing her. Like their previous kisses, this one started out soft and slow but quickly took on a life of its own.\n\nWithin the first couple of seconds, tongues met, touching tentatively and then eagerly. Mouths opened wide and tongues probed deeply, both lovers burning with desire. Shannon pulled the his tee-shirt over his head breaking their kiss just long enough to allow the fabric to pass between them. She put both hands on his chest and moaned softly. \n\n\"You are so handsome,\" she purred as her hands explored the hardness of his young body. \n\nGreer unhooked the bustier and let if fall next to the robe. Her perfect breasts moved with her body as he cupped them while renewing their kiss. Her nipples were already hard and swollen and Greer's own body was doing the same to a part of himself that Shannon needed and wanted so badly it hurt.\n\nShe quickly pulled down his shorts and the jock strap underneath then fell to her knees in front of him as she took him in her small hand. He quickly filled it as he grew quite literally right before her eyes.\n\n\"Mmmm. So big and so...beautiful,\" she moaned as she stroked his growing cock in the candlelight.\n\n\"You are beautiful,\" he said as she raised up then lowered her dark, red lips over the head of his shaft.\n\nGreer groaned with pleasure as Shannon began doing every single thing she'd dreamed of doing to a man she lov...cared for...for so long.\n\n\"You taste so good!\" she told him before taking him deeply.\n\nSeveral seconds later, Greer said, \"Come here,\" as he lifted her up. He walked backwards to her bed then laid down pulling her on top of him. She kissed him passionately while continuing to stroke his throbbing cock before lowering herself back down on it.\n\nGreer pulled her long legs around his head then pulled her pussy toward his mouth. As his tongue found its mark, Shannon released him from her mouth as pleasure forced her to briefly focus on herself.\n\n\"Oh, my God!\" she cried as his tongue entered her slowly making its way across her nub, now engorged with blood. \"Yesss!\" she whimpered as a finger made its way inside her. Shannon took him again this time as deeply as she could sucking hard from the bottom to the top and then slowly sliding back down.\n\nBoth of them were aware of the other person, but the pleasure they were receiving took each of them into another world. A world of passion and bright sensation.\n\nGreer no sooner slid a second finger inside Shannon's very-wet pussy than he felt her stop sucking and momentarily freeze before her body exploded in a mind-blowing orgasm; the kind she'd dreamed of but not experienced in many, many years.\n\nGreer never stopped even as her head hung low while her body trembled with pleasure. \"Oh...fffuck!\" she gently cried letting wave after wave flood her love-stared body. As the sensations subsided, she took his cock back inside her mouth and continued doing what she knew he loved so much.\n\nGreer could last a very long time, but Shannon was so incredibly beautiful that he felt he was already losing control.\n\n\"Come here, gorgeous,\" he called out signaling for her to stop.\n\nShannon obeyed immediately and turned around. Greer pulled her down and rolled on top of her. \"I want you so bad,\" he said before kissing her long and hard.\n\n\"Fuck me...\" she cried as she reached for his cock. \"Please, dear God...fuck me!\"\n\nShe let go when she felt him began to push. She wrapped her arms around his wide back and accepted his kiss as his hard, thick cock spread her pussy. \"Ooooo!\" she moaned as she began taking him. \"Go slow!\" she cried as he stretched for the first time in so many months she'd forgotten how wonderful it felt. \"Okay,\" she said when she was ready for more.\n\nIn and out, slowly and gently. Shannon's soft moans let him how much she could take and when until he was fully inside her. \"Oh, God...\" she moaned. \"You feel so good!\" as he began fucking her. Slowly at first. Long, deep stroked driving her crazy with passion.\n\n\"Yesss!\" she said as he quickened the pace. \"Oooo!\" she cried again as he began hammering her.\n\n\"Just like that! Yes! Oh, God. Oh, fuck! Yes...yes...oh...fucking...yesss!\" she screamed out as her body went rigid for the second time.\n\nGreer never slowed down as she came hard again. When he knew he couldn't last any longer, he pulled out and went to use his own hand when Shannon said, \"No! Uh-uh! Come here!\" She met him halfway, hungrily taking his cock then using her lips, tongue, and hand to finish him off. \n\nGreer grunted loudly as the first string of cum fired off. \"Fffuck!\" he called out as he watched his gorgeous lover taking one hot salvo after the other until there was nothing left to do but collapse.\n\nHe saw her eyes twinkle as she swallowed him then pulled him on top of her. \"Oh, my God!\" she cried. \"That was the most amazing thing...ever!\"\n\n\"No kidding!\" Greer said letting her support most of his weight. \"You haven't forgotten anything. I can assure you of that,\" he told her smiling happily at her.\n\n\"I've never had a man make love to me like before. Ever,\" she told him pulling him close.\n\nGreer sensed something was wrong and raised up. \"Hey, what's with the tears?\" he asked smiling and stroking her cheek.\n\nShe shook her head but didn't speak. \"What? What's wrong, Shannon?\" he asked.\n\nAnd then the dam broke. Greer rolled off her then just held her. \"Shhh. It's okay,\" he said holding her close. \"Don't cry, honey. I'm here.\"\n\nHe wasn't sure how long she cried, but it couldn't have less than five minutes. She was now fighting hard to stop shaking and breathe normally. \"Ss...sorry,\" she said, her voice cracking with emotion.\n\n\"It's okay,\" he told her again.\n\nAfter another couple of minutes, he could tell she was intentionally taking long, deep breaths. Finally, she spoke again. \"I...I really am a wreck, Weston. I can't even figure out what I'm feeling right now.\" She looked at him with raccoon-like eyes from the mascara that was all over them.",
        "\"I'm...I'm feeling so many things all at once. I'm really just overwhelmed,\" she said finally reaching for a tissue.\n\n\"Are the feelings all good ones?\" he asked gently stroking her cheek.\n\n\"Yes,\" she said dabbing her eyes. \"Very good, in fact.\"\n\n\"Care to share?\" he asked with a kind smile.\n\n\"No. You'd probably just laugh at me or maybe finally run away,\" she said tossing the tissue and reaching for another.\n\n\"I promise that won't happen. You can tell me anything, Shannon. Anything.\"\n\nShe had to blow her nose and the noise it made was one of those things that just makes people laugh. \"Very romantic, huh?\" she said tossing that one away, too.\n\n\"You're just as beautiful to me right now as you were when I walked back into your house,\" he told her.\n\n\"You see, that's what's making me feel this way,\" she said finally able to get rid of the last tissue.\n\n\"What way is that?\" he asked gently pushing her hair away from her face.\n\n\"Promise you won't laugh or say anything mean?\" she asked.\n\n\"Mean? I would never say anything mean,\" he told her. \"It's okay, Shannon. You can talk to me.\"\n\n\"Okay, I'm sure this has a lot to do with having been in the desert for so long where intimacy is concerned, but I'm also sure it's a whole lot more.\"\n\nGreer didn't interrupt. He just lay there and listened.\n\n\"I...this...it wouldn't have been the same with some other random, good-looking guy.\" She managed a smile then said, \"Even one as young and as handsome as you, Officer Greer.\" He smiled back but didn't speak.\n\n\"But you have made such an impression on me. You've...you've touched my soul, Weston. You've made me believe I might even be...attractive to you and...\"\n\n\"Hey! You are attractive to me, Shannon. You're more than attractive. You are downright freaking gorgeous, okay?\" he said firmly but sweetly followed by a big smile.\n\n\"You see, that's what I mean. Right there. You made me feel it again.\"\n\n\"Feel what again, sweetheart?\" he asked still gently circling her cheek with his finger.\n\n\"Like...like...like you might...\"\n\n\"Like I might love you?\" he suggested.\n\nShe turned away slightly then said, \"I know that's crazy. We don't really even know each other, but...\"\n\nHe softly turned her pretty face back toward himself then said, \"I do love you, Shannon. I know because I've never felt like this about anyone before. You may need time to date other guys and find out how you really feel, but...well, I already know I love you.\"\n\nGreer saw tears in her eyes again and felt helpless. \"I guess I should have kept my mouth shut,\" he said trying to smile.\n\nShannon shook her head and said, \"No. Not at all. It's not you. It's me. You just said exactly what I wanted to hear you say and what I wanted to tell you! And other guys? I don't want other guys, Weston. Can't you see I am completely and totally in love with you? That's what I was so afraid to tell you because...it's so...it's so soon.\"\n\n\"Not for me,\" he told her. \"I've been waiting to find you my whole life. I didn't know when or where it would happen, but I knew it would. All I meant was I know I'm the first guy since you lost your husband. I just wanted you know that as much as I wouldn't want to lose you, if you needed to date other guys, if you...\"\n\nShe pulled him on top of herself and said, \"Would you stop with the 'other guys' thing? Please?\" Her eyes had a desperation in them. Desperation to make him understand she meant what she was saying. \"Weston? I don't want other guys. I don't want any other guy. I want you. I want you because I'm in love with...you! Okay?\"\n\nShe waited for him to smile then said, \"You had me at 'can I get that for you'? when you took that first box from me.\"\n\n\"Oh, well, I guess that makes a kind of Jerry McGuire then.\"\n\nShannon finally laughed and said, \"You goof! Jerry McGuire\u2014or Tom Cruise\u2014can't hold a candle to you. I'll take Weston Greer any day of the week.\"\n\nShe felt him growing hard again then said with the happiest smile he'd seen from her yet, \"Mmmm. Does that mean I can take Weston Greer again right now?\"\n\nAfter another round of passionate lovemaking they decided Greer would go home before Colby woke up and come back later that morning. And that's when they would tell him they were now more than just friends. They also decided that evening would be when they'd let her father know he was coming home.\n\nJust before he left, Shannon, who was exhausted from being unable to sleep even when Greer left her alone the rest of the night said, \"I love my son and my dad very much, but until you came into my life, I felt like I had no purpose. It's not that raising a child isn't very important, but it's a duty and a responsibility. It can be fun, but it isn't always easy.\" She turned over and looked at him then said, \"But now, I have every reason to live and to be happy.\"\n\nGreer smiled back then said, \"And I have two reasons to be the happiest guy on earth. You\u2014my beautiful, gorgeous girlfriend, and Colby, my new bestest bud ever. Hey, how about we all go bowling this afternoon now that the house is pretty much done?\"\n\n\"He'll love that,\" she said. \"And if you're there, so will I.\"\n\n\"I'll be there,\" he told her. \"And if you'll let me, I'll always be wherever you are.\"\n\nShannon pushed him away and said, \"Okay, you need to go or I'm gonna start crying again, and Colby will up in a couple of hours and I haven't slept all night.\"\n\nGreer got up and went to take a shower but decided to hold off. Before he disappeared he told her, \"And yet you still look absolutely gorgeous, sleep or no sleep.\"\n\n\"Liar!\" she said teasingly. He smiled then she said, \"I love you, Weston.\"\n\n\"I love you, too,\" he told her before closing the door.\n\nShannon heard him leave as she finally fell asleep. Greer slipped out quietly and decided to go to the gym at the precinct knowing he couldn't possibly sleep after last night. Two hours and a hot shower later, he was headed back to Shannon's knowing she was likely still asleep but fully expecting someone else to up and around.\n\nAfter making sure who was at the door, Colby flung it open when he knew it was Greer.\n\n\"Weston!\" he called out just before getting scooped up by the older man.\n\n\"How's my favorite guy in the whole world?\" he asked.\n\n\"Great!\" Colby said. \"What are we gonna do today? Are we gonna go to the half pipe again?\"\n\n\"I thought we might try bowling today. How does that sound?\"\n\n\"Awesome!\" the boy said as Greer set him down.\n\n\"Okay, what's for breakfast around this place, my friend?\" Greer asked knowing Colby hadn't eaten yet.\n\nThe smell of bacon and eggs woke Shannon up, and as soon as her foggy brain realized why that smell was wafting into her bedroom, she smiled. She winced as she rolled over, a pleasant reminder of the pleasurable pounding she'd taken just hours ago and she couldn't wait to see her handsome young lover again.\n\n\"Hey! There are my two favorite guys!\" she said as she entered the kitchen wearing a much less sexy robe this time. She wanted Greer to kiss her so badly it hurt but just smiled at him.\n\nAfter they ate, Greer told Colby, \"Your mom and I have something we want to tell you.\"\n\n\"About going bowling?\" he guessed.\n\n\"No,\" Shannon said. \"Come on. Let's go sit down and we'll talk.\"\n\nColby was sitting between his mom and new best buddy when she said, \"You really like Weston, right?\"\n\n\"Yeah! He's cool!\" Colby said.\n\n\"Well...so do I.\"\n\nHe looked up at her then over at Greer then back at his mom. \"You mean like a boyfriend or something?\"\n\nShe smiled then asked, \"Is that okay?\"\n\nColby looked at Greer who said, \"It's true. Your mom and I really like each other\u2014a lot.\"\n\n\"Awesome!\" he said. Then he looked back at his mom and asked, \"So do you guys kiss and stuff?\"\n\nShe tried not to laugh before saying, \"Um...yes. We kiss and...stuff.\" She leaned over to kiss Greer and Colby tried to watch her head go over his as he swirled around in his seat.\n\n\"Kissing is gross,\" he said. \"But as long as it's with Weston, I guess it's okay.\"\n\nBoth adults laughed before jointly ganging up on the seven-year old and tickling him until he begged for mercy.\n\nGreer was amazed at how quickly he was bonding with Colby now that he knew he loved his mother. The little boy was terrible at bowling when they started, but after a lot of patience and help, he was keeping nearly every ball on the lane. More important than the bowling itself were the high fives, the praise, and the words of encouragement from Greer who was clearly this young boy's American idol.\n\n\"So do you have nursing care lined up for your dad yet?\" Greer asked as they had dinner out.\n\n\"I do!\" she told him, \"and she's ready to start tomorrow which is when we'll be bringing Dad home.\n\n\"I can't wait to see his face when you give him the news.\"\n\n\"It isn't going to be easy, but life isn't always easy,\" Shannon said. \"It doesn't matter whether it's marriage, raising children, a job, or dealing with teasing at school when you're Colby's age. But that's no excuse for not trying.\"\n\n\"And just when I didn't think I could love you any more,\" Greer said before leaning over to kiss her.\n\n\"Is kissing fun?\" Colby asked as he watched them.\n\n\"Not when you're seven,\" Greer told him. \"But just wait. In just a few more years, you'll think it's pretty great.\" He looked at Shannon then said, \"Especially when the girl is really pretty. Like your mom.\" Shannon happily accepted another kiss before suggesting they head over to the nursing home.\n\nGreer popped in and said hello to her father then went to check in on his other regulars before coming back for the big announcement.\n\n\"So, Dad? Weston and I have two things to tell you.\"\n\n\"Oh?\" he said looking at them as they stood together next to him.\n\n\"The first is that Weston and I are...dating.\" She smiled and waited for his response.\n\n\"Well, it's about time!\" he said. \"I was thinking I was gonna have to draw you two a road map!\"\n\nThe happy couple held hands and laughed at his comment.\n\n\"And...we have a really special surprise.\"\n\n\"Well, it's not my birthday so what is it?\"\n\nShannon took his hand and said, \"I never wanted you to be in here, but Dale wouldn't even discuss letting you live with us. I can't make up for that. I can only tell you how sorry I am. But now that I have a home and thanks to Weston for helping me get it ready so fast, we have a spare room and...we're taking you home tomorrow.\"\n\n\"Home?\" he asked. \"With you?\"\n\n\"Yes, with me. We have a nurse who'll be there a couple of times a day to check on you, but you'll have your own room, your own TV, bathroom, and whatever else you need.\"\n\nShannon had never seen her father cry before, but his eyes were filled with tears and his mouth was quivering. \n\n\"It's okay, Dad. I just hope you can forgive me for ever letting you be in here.\"\n\nHe couldn't speak, but he did raise his arm to give her a hug. He never actually cried, but he was very emotional.\n\n\"So we'll back tomorrow to help you bust out of this place, okay?\"\n\nHe just nodded and Shannon gave him one more hug. Greer shook his hand and told him he'd be there, too. Lastly, Greer raised Colby up to hug his Grandpa.\n\n\"I love you, Grandpa. I can't wait 'til you come live with us. Then you can watch me go skateboarding and go bowling with us!\"\n\nThe old man finally smiled then laughed. \"I'm not so sure about all that traveling and watching, but I'll be happy to play chess or checkers with you.\"\n\n\"Cool! How about Monopoly? Can you teach me that, too, Grandpa?\"\n\nThat night Shannon asked Greer if he'd consider moving in with her, too.\n\n\"You want me to give up the luxury and splendor of my one-bedroom bachelor pad?\" he teased. \n\n\"I know the man usually provides the home, but ours isn't exactly the most usual of relationships,\" she offered. \"I have a house and I can't live without you here another day.\"\n\n\"Of course, I will,\" he told her. \"I'd have asked sooner or later and I like sooner a whole lot better than later.\"\n\nGreer rented a truck the next morning and had what few things he owned in Shannon's place by noon and right after lunch they went back to the nursing home to check her father out for good and bring him home to spend the rest of his life with his daughter, grandson, and soon-to-be son-in-law.\n\nLess than a week later, the investigation was over and Greer was cleared for duty pending the okay of the department's shrink. Two short sessions with her put him back on full duty and within another month his partner was back just like old times.\n\nGreer never once doubted his love for Shannon or hers for him, and he proposed to her on Christmas Eve with his family having joined them for dinner. They married the following Spring and within three months, there were three happy surprises for the Greers.\n\nWeston passed his sergeant's exam and was promoted right about the time Shannon learned she was expecting with their first child. And that same week, Greer adopted Colby who was thrilled to learn he was not only going to have a baby brother or sister, but that he now shared his dad's last name. \n\nStill, his greatest joy came from the time his strong male role model spent with him almost every day after work. When the weather was nice they played catch outside or went to the half pipe which Weston had refurbished using a good chunk of the money Mrs. Garr had left him. He'd used the rest to take them on the shortest-ever honeymoon of three days which was all they felt comfortable with leaving her father home with just his nurse (even though he flirted with the much-younger woman non-stop.)\n\nGreer continued doing his visitation at the home but did cut back to every other day to spend more time with the two most important people in his life. He spent as much time there as he could making another new friend each time one of his beloved regulars 'went home to be with the Lord.' \n\nShannon had been absolutely right. Doing the right thing wasn't always easy, but it had to be done. And had Greer not understood that himself, he would have never met the love of his life, his new son, or been blessed with a daughter later that year. It may not have always been easy, but it had always been worth it."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december",
        "older woman",
        "younger man",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/visitation-3"
}