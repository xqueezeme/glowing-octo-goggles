{
    "title": "Lilith's Emporium - Madam Estrella",
    "pages": [
        "Joshua stood inside a strange shop he had always wanted to check out. It was nothing like what he expected as he saw many strange artifacts around him. He was expecting to see sex toys and DVD's, maybe even mannequins wearing lingerie but this seemed to be more of a witchcraft store or something like that.\n\n\"Can I help you?\" A woman's voice said from behind him as he spun around and saw a very stunning blonde standing there with a smile on her face.\n\n\"Holy... You scared me,\" he said as his heart raced.\n\n\"My apologies, I guess I don't make a lot of sounds when I move,\" she said laughing to herself a little understanding why Nessira loved to do that to her customers. \"So what brings you in today?\"\n\n\"I um, I'm not sure, I've always wanted to check this place out but it's not quite what I was expecting.\"\n\n\"We get that a lot, maybe if you tell me what you are looking for I can help?\"\n\n\"Well, I...\" He said finding it hard to think as he was distracted by Shadow's immense beauty.\n\nShe could tell he was aroused by her which she always found flattering. She was even thinking of having her way with him as she hadn't actually fed off a human in a long time but she had a lot more control now so she pushed those feelings back and continued to do her job.\n\n\"Up here,\" she said pointing at her eye's.\n\n\"What... Oh, I'm so sorry, it's just, you're so...\"\n\n\"It's alright, if you're in this store then it's for a reason, but I have a boyfriend so calm down.\"\n\n\"I'm sorry, I'll just um...\" He said pointing at the door.\n\n\"Nonsense, nothing wrong with looking, but don't touch,\" she said in a stern voice. \"Now let's see what we can do for you,\" she said as she began to look through the stock still trying to get a sense of what he wanted. \"So you are single I take it?\"\n\n\"That obvious?\"\n\n\"You're in here aren't you, but you're not a bad looking guy, maybe it's a confidence issue or maybe... Ah, I see what it is.\"\n\n\"You do?\" He said with some panic in his voice.\n\n\"I think I know what you need, this way,\" she said as he followed her over to the counter noticing how good her ass looked through the fabric of her dress. \"You want something different,\" she said as she pulled out a book and began flipping through the pages as she used the senses Nessira had taught her to read what people desire. \"I think I have the perfect thing for you if you are interested?\"\n\n\"I'm not sure what you mean?\"\n\n\"Here is an address, should I tell them 8:00?\"\n\n\"What are you talking about, where am I going?\"\n\n\"To visit a business partner of ours, she'll take good care of you.\"\n\n\"What? You mean like a... That's not what I was thinking at all.\"\n\n\"She is not a prostitute, Madam Estrella likes to... Help young men like you who have desires that are, shall we say, not the norm?\"\n\n\"Not the norm, What do you mean?\"\n\n\"You are attracted to me, for starters and...\"\n\n\"Well, I mean, look at you, you are breathtaking!\"\n\n\"That's sweet, but first, don't interrupt me, and also it's more than that, you find me mysterious, you walk into a shop filled with strange artifacts and see an attractive woman, but your mind is racing, you start to wonder how she was able to sneak up on you, how she knows these things about you, you start to wonder if she is even human, and instead of fear, the idea just arouses you even more, you want a taste of something otherworldly, even if it's dangerous.\" Joshua stands there sweating trying to hide the bulge in his pants as Shadow raises an eyebrow and smiles at him before glancing down at his pants. \"You might want to save that for tonight, 8:00 pm at this address,\" she says handing him a piece of paper.\n\n\"I um... I don't know.\"\n\n\"Trust me, she is exactly what you want, and if you are dissatisfied, you can always come back and we can try again.\"\n\n\"Maybe I will anyway,\" he said with a smile.\n\nShadow's face became very serious looking before she stood up straight and walked around the counter getting right up in front of him. She was close enough that he could feel her breath against his skin as she glared into his eye's. He was confused for a moment not sure what she was doing when he noticed her eye's seemed to glow for a moment. \n\nJoshua began to feel a little dizzy until he was no longer in the store. It was strange as he wasn't sure what was going on but he was laying in bed with Shadow riding his cock like crazy. He could feel the sensation and it was better than anything he had ever felt before. \n\nAs this went on he got closer to orgasm as he noticed a strange glowing down near his crotch. He wasn't sure what was happening but her eye's turned red and her skin turned black as she glared down at him. Fear came over him and just as his cock finally bursts he felt his body start to break apart like it was burning up. His hands turned to ash as he let out a scream of pleasure before his vocal cords broke apart as well and he seemingly was dead.\n\nHe suddenly jerked back as he was in the store again but he tripped and fell to the floor with a thud. Shadow stood before him with her arms folding glaring down at him with a smirk. Joshua pulled himself back up embarrassed by what just happened.\n\n\"That is what will happen if I were to fuck you like you've been imagining since you first saw me, still interested?\" She said waiting for his reply.\n\n\"What the fuck, I'm so sorry, I...\"\n\n\"Don't be, now if you want to have an amazing experience with a better survival rate, be at that address at 8:00 tonight.\"\n\nJoshua was still shocked and confused as he stumbled bumping into a nearby shelf. He turned and headed for the door rushing to his car as Shadow watched him drive off. She stood by the door for a moment as she heard Kevin come walking down to see what the commotion was. She locked the door before she turned to greet her lover.\n\n\"Everything okay down here?\" He asked seeing Shadow smiling up at him.\n\n\"Just showing some guy what would happen if he kept flirting with me.\" She said before walking over to him.\n\n\"Ha, lucky guy.\"\n\nShadow was now right up against him as she said: \"well, if you want the full show,\" as he suddenly felt her unzip his pants and pull his cock out which was getting harder by the second.\n\n\"Um... When uh... When are your Mother and Patrick due back?\"\n\n\"Not for a few days,\" she said as her tail suddenly curled up and wrapped around his shaft.\n\n\"Oh... Fuck!\"\n\n\"The door is locked,\" she said with a smile before she kissed him and pulled him on top of her as they fell to the floor.\n\n----\n\nJoshua pulled up to what looked like a big house in the middle of nowhere. It was practically a mansion that he didn't even know existed but there also seemed to be an event going on like a party or something. He was nervous and not sure if he should just go home and forget about all of this. He was still a little freaked out by what the woman at the shop did to him earlier.\n\nFinding what courage he could muster he finally parked his car and walked towards the front door of the house. There was a lot of commotion coming from inside that sounded like one of those parties he'd see on TV about rich people. He was wearing a black button-up and dark pants but he still felt grossly underdressed for where he was.\n\nAs he approached the door ready to knock it suddenly opened and there was an elderly man standing there in a suit. He assumed maybe he was the butler or something as he just glares at him unsure of who this young man was and what he was doing here.\n\n\"Can I help you?\" The man said as Josh stood there nervous.\n\n\"I am terribly sorry, I think I have the wrong address, is this the home of Madam Estrella? I was given this address and...\"\n\nBefore he could finish the old man interrupted him and said: \"ah yes, you must be Mr. Joshua, she is expecting you, right this way,\" he said opening the door wider and inviting him inside.\n\n\"Thank you, I hope I am not interrupting anything.\"\n\n\"Not at all, wait here,\" the Butler said before walking away only to stop and ask: \"can I get you anything?\"\n\n\"Huh, no I'm fine to thank you,\" he said feeling even more nervous as he stood in a large front hallway with a huge staircase in front of him.\n\nTo his right, he could hear people talking and turned to see a room filled with people all nicely dressed, drinking wine, and chatting. He began to think something was strange though the longer he stared. It was like there were some people who seemed out of place in the group but he wasn't sure why.\n\n\"Ooh, who is this tasty morsel right here?\" A young woman said coming from another room behind him. \"Why don't you spend the evening with me, Honey!\" She said walking up and getting a closer look at him.\n\nShe was a rather attractive brunette but he wasn't sure if this was Madam Estrella or not but he didn't think so. A moment later he heard another voice behind him as he turned around and saw a beautiful blond woman in a black dress standing in the doorway glaring at the other woman.\n\n\"Elizabeth, Joshua here is a guest of mine, so I suggest you leave him be and return to the party.\"\n\n\"My apologies Madam Estrella, I did not know.\" She said with a little fear in her voice as she quickly returned to the group.\n\n\"Sorry about that,\" she said as she walked over to get a closer look.\n\n\"Not at all, it's very um... Nice to meet you, Miss Estrella,\" he said gently shaking her hand noticing the long black gloves she was wearing and getting a better look at this beautiful woman with her hair tied up in a tail.\n\n\"Nervous, and cute, I can see why she sent you my way.\"\n\n\"Um... Thanks, you look... well amazing, if you don't mind me saying.\"\n\n\"Now why would I mind such a compliment?\" She said as she began to circle him seemingly to get a good look at him almost like a predator examining her prey.\n\n\"I don't know, I just um, this is a lovely home you have here.\"\n\n\"Attractive, polite, I love it, you are perfect.\"\n\n\"I am? Sorry, honestly I'm not even sure what I am doing here, this woman at a shop I was in... Well, she,\"\n\n\"Lilith's Erotic Emporium, yes, Shadow told me you were coming.\"\n\n\"Shadow?\"\n\n\"The woman you spoke with, her name is Shadow, I am a friend of her mother Nessira.\"\n\n\"Oh, such an odd name for someone so...\"\n\n\"She is a beauty isn't she, yet so dangerous, but you know that don't you?\" She said with a grin as if she knew of the vision Shadow showed him. \"Beautiful women often are, that is how were lure in unsuspecting men, like you,\" she said in an almost teasing fashion. \"but if she sent you my way then she must be doing a good job running the store, Nessira will be proud when she returns.\"\n\n\"Returns?\"\n\n\"She's on her honeymoon, but enough about them, let's talk about you.\"\n\n\"Me, there isn't much to talk about.\"\n\n\"I don't believe that one bit, you seem fascinating to me, a strange aura about you, but perhaps you are right, besides you didn't come here to talk did you?\"\n\n\"I um, as I said before, I'm not sure why I am here actually.\"\n\n\"Your water Sir?\" Geoffery said as he had returned and was handing him a bottle of water.\n\n\"Oh, I'm alright, thanks.\"\n\n\"Trust me, you might want to drink up.\" Madam Estrella said with a smile handing him the bottle. \"Wouldn't want you to get dehydrated.\"\n\n\"Um, okay, as you wish Madam,\" he said taking a sip.\n\n\"Please, call me Mercy,\" she said as she leaned in close to him and whispered: \"everyone begs for Mercy,\" before sucking on his earlobe for a second and taking him by the hand leading him into the party. \n\nHe was extremely uncomfortable and felt very underdressed but he was also very turned on by what she had just said to him. She was an absolute beauty who had the body of a woman in her twenties but something about her made her seem much older. It was something he saw in her eyes, almost as if there was wisdom behind them and perhaps even darkness.\n\nHe was sort of lost in the clutter of voices around him as she seemed to mingle a little and introduce him to a few people. He couldn't remember any of their names, he just smiled politely and shook hands when needed and was as polite as he could be.\n\nHe suddenly heard something that caught his attention when he heard a man say: \"Madam Estrella, will you be joining the festivities tonight?\"\n\n\"Festivities?\" He thought to himself.\n\n\"I'm afraid not, I have a more private matter to attend to this evening,\" she said as she turned towards Joshua and grinned. \"This is actually my date for the evening, his name is Joshua, Joshua, this is Mr. Mordon,\" she said introducing to an older looking man.\n\n\"Pleasure,\" Joshua said shaking his hand noticing a rather strong grip.\n\n\"Oh, my dear boy, Mercy here will show you the meaning of the word,\" he said with a strange grin on his face which almost made Joshua feel uncomfortable.\n\n\"Oh stop it,\" Mercy said with a giggle before they moved on.\n\nJoshua was even more confused by what sort of party this was and what exactly he had stumbled upon. He was getting nervous but also aroused at the same time which he thought was strange. He actually was starting to think he might die tonight but he couldn't pull himself away to escape. \n\n\"Is this some sort of cult?\" He thought to himself as she leads him around even more.\n\nHe began to notice some strange things happening but he wasn't sure if his imagination was just getting the best of him. He saw a couple making out on a couch but for a moment he thought he saw fangs. As he glanced around he saw a woman kissing a guys neck before she seemingly bit into it but someone walked in the way before he could see clearly what had happened.\n\n\"Well it is getting late, and things are about to get a little crazy down here, shall we?\" She asked him raising an eyebrow.\n\n\"Where are we going?\"\n\n\"You'll see, follow me,\" she said before leading him out of the large room and shutting the door behind her.\n\nShe was taking him up the stairs when they heard Geoffrey again say: \"will you be needing anything else this evening Madam?\"\n\n\"No Geoffrey, that will be all for tonight, just make sure the cleaners are here early tomorrow,\" she said before turning back to Joshua and continuing up the stairs.\n\n\"Cleaners?\"\n\n\"These parties tend to get a bit messy, but don't you worry about a thing,\" she said with a giggle as they continued on.\n\nJoshua knew why he was here for the most part but he didn't want to assume anything. What bothered him was what he thought he saw downstairs but he wasn't exactly sure what he saw. Soon Mercy opened too large doors into what he assumed was her bedroom. The bed was huge and the decor was interesting as she definitely had expensive taste. The bed was covered in red sheets and the curtains were closed covering the windows.\n\n\"Wow, so this is very nice.\" He said standing there with his hands in his pockets visibly nervous.\n\nMercy walked over to him and placed her hands on his neck gently pulling him towards her. As her lips met his heart raced but he also felt a calm wash over him at the same time. Her thumbs gently rubbed his cheeks through the long black gloves she was wearing. He enjoyed the moment very much as her scent filled his nostrils and her taste came upon his tongue.\n\n\"Tell me,\" she said after pulling her lips away. \"Am I what you expected?\"\n\n\"I honestly didn't know what to expect, but you are...\" He paused as she stared at him curious about what he was going to say. \"Just stunning, I mean I've never met anyone as beautiful as you.\"\n\nMercy smiled at his compliment before she said: \"but?\"\n\n\"Um, but nothing,\" he said even more nervous.\n\n\"There is something on your mind, just say it.\"\n\n\"Um, well, forgive me but, I'm not sure you're entirely human,\" he said in an almost joking way knowing it sounded a little crazy.\n\nShe smiled at him as her hand gently continued to stroke his cheek before she gave him another gentle kiss and said: \"of course I'm not human, you didn't come here for the pleasures of mortal flesh.\"\n\nShe let go of him and turned towards the bed before she began to slide off her gloves as Joshua stood there now even more nervous. \"Ha, that's uh... That's a good one,\" he said with a chuckle.\n\n\"There is no need of that, you saw it downstairs didn't you? The feeding had already begun, that is why I got you out of there quickly, I didn't want to share.\"\n\nJoshua swallowed as he began to sweat. \"Wait... So you're a... And I'm... Your dinner?\" He asked as his voice squeaked with panic.\n\nShe turned back to him with a smile that showed her fangs before she said: \"trust me, we will both get what we want tonight.\"\n\nBefore Joshua could even think of trying to run she was up against him again with her hand on the back of his neck looking into his eye's. He knew it was too late and he could not escape even if he wanted to. Even if he could have somehow outrun her there was a bunch more of her kind downstairs.\n\n\"I uh... You're going to...\"\n\n\"Shh,\" she said placing her finger on his lips to silence him. \"We both need something tonight, so why don't we stop fighting it and just have our way with each other, I promise that whatever happens, you will not be disappointed.\n\nShe slid the tie out of her hair letting her blonde locks fall across her shoulders. She looked absolutely breathtaking and despite his fear, he still wanted her so badly it almost hurt. She reached back behind her neck as he heard something release before her dress fell to her feet leaving her standing there naked in front of him. Placing her hand on his neck again she pulled him in tasting his lips as the passion between them grew stronger.\n\nShe traced her fingernails down his chest before taking her index finger and cutting off his top button. Her nails were sharp but she was like a surgeon with them as she could touch his skin gently enough to the point it almost tickled or she could draw blood at any second which he found out when she gently poke the side of his neck before removing her lips from his to taste a drop of his blood.\n\n\"Hmm, my favorite,\" she said licking it off her finger before she began kissing his neck where she had drawn the blood. The hairs stood up on the back of his neck as she sucked on it for a moment before the bleeding stopped. \"Save that for later, you need to keep some in order to keep things, shall we say, stiff?\" She said as her hands found there way down to his pants unzipping them and letting them drop to the floor as her finger traced along the bulge in his underwear. \"Even with the fear in your eye's, you still desire me?\"\n\n\"I... More than anything.\"\n\nShe smiled before she began to lower herself down in front of him. He felt her slide down his underwear freeing his aching manhood. He was nervous, not of her biting his cock but he was worried whether or not he was big enough for her. He was not small by any means but he also assumed a Vampire who may be centuries old would have seen and had all different sizes so it had him a concerned. Her fingernail traced along the side of his shaft gently not cutting his flesh at all.\n\nHe stood there still nervous but excited at the same time as she seemed to be examining his manhood. She did not seem to mind his size or at least made no comment about it before he felt her lips gently tracing along the side of his cock. His body shivered at the sensation as he found himself becoming more curious than afraid.\n\nHe had always read stories about Vampires and how they were very sexual creatures. At least that was how they were depicted in books and Hollywood but despite the fact he was almost certain he could die tonight he still couldn't wait to see what making love to this immortal bloodsucker would be like. \n\n\"Oh... Fuck!\" He moaned out as he suddenly felt her lips wrap around his cock.\n\nDespite the fangs in her mouth, she was very good. This may have been the best blow job he had ever felt. She was definitely talented with her tongue but he assumed that was after many years of practice. He almost didn't care if she did kill him at this point because he did not want this to stop.",
        "Her fingernails gently caressed his balls tickling them a little which only made him moan louder. He clenched his fists not sure how much longer he could hold on if she continued like this. It was like being in heaven and hell at the same time as he had never felt this good before but also didn't want it to end too quickly.\n\nAs she removed her lips leaving his cock wet and red begging for release before she said: \"you're a little too excited, but that's okay, I know a few tricks to make this last longer.\"\n\nShe stood up and walked over to her dresser opening the top drawer leaving him standing there with no pants on. He watched as she took out a small bottle and examined it closely. He couldn't help but stare at her as even her ass looked amazing as she stood there before she looked back and smiled seeing him admiring her backside.\n\nShe walked back over to him and handed him the small bottle. \"Drink this.\"\n\n\"What is it?\"\n\n\"Something to help you keep up with me.\"\n\n\"For how long?\"\n\nShe stepped closer to him taking the bottle back and opened it before she said: \"as long as we want,\" and brought it to his lips making him drink it.\n\nJoshua wasn't sure what he had just drunk but he suddenly felt strange. She grabbed his shirt and ripped it off him the rest of the way. The room was spinning a little as he looked over and saw Mercy crawl onto the bed before looking back at him and spreading her legs a little. Joshua did not hesitate as he walked over kicking off his shoes and climbed into the bed with her as she backed against him and let his throbbing cock slide inside her.\n\n\"Fuck!\" He yelled out as her pussy felt amazing around his shaft.\n\nHe now knew it was true what he had heard about vampires and how good they were in bed. His hands wrapped around her front feeling her stomach before sliding up and feeling her breasts. She leaned back against him as he began kissing the side of her neck as her hands reached up sliding through his hair. The way she moved her hips was heavenly as her body was warm against his. Her scent was intoxicating as well as it filled his senses.\n\nIt didn't matter what she was anymore, or what he had just drunk, or what even what she intended to do to him, all that mattered was he had this beautiful creature in his arms and was going to fuck her all night long if he could. Apparently whatever was in that small bottle seemed to be making that a possibility.\n\nAs he thrust his swollen member deeper inside Mercy let out a moan enjoying his cock. Feeling his hands squeeze her breast just added to the pleasure sweeping through her body. It had been a long time since she had a willing playmate so she intended to enjoy herself all night.\n\nShe tilted her head back on his shoulder turning it a little in order to kiss him. She was incredibly flexible which Joshua was enjoying very much as he tasted her lips again. He had been with many women in his life but none of them compared to Mercy. Even Shadow seemed like a faint memory as this gorgeous creature wiggled in his arms.\n\n\"Oh... Shit, not yet!\" He yelled out as his cock erupted inside her filling her with his warm seed.\n\nShe let out an approving whimper as she slid herself off his wet dripping cock. \"Don't worry, we aren't done yet.\"\n\nShe turned to him and slid back on the bed inviting him to follow with her finger. Despite the load he had just burst into her his cock was still hard and wanting more as he quickly crawled towards her. Getting up close to her face he kissed her again as her hands wrapped around the back of his head. She quickly spread her legs and slid her hand down his back guiding him back inside her.\n\nJoshua began to thrust himself upon her as her leg curled up around him. Neither one of them could seemingly get enough of each other as their lips tasted every inch of each other. He sucked on her neck before going back to her lips. He then kissed her chest getting as close to her breasts as he could without hurting himself.\n\nHe was shocked that she hadn't bit him yet. He knew it was going to happen and a part of him wanted it despite the danger. He didn't know what was going to happen. He was not sure if he was going to die or become a vampire himself, this was all new to him but it didn't matter as he continued to thrust making hee whine and moan beneath him until his cock exploded again filling her insides.\n\n\"Don't stop!\" She moaned as his cock remained hard and ready for more.\n\nHe glared into her eye's for a moment before he kissed her again. Her lipstick had been smeared across her face and it just made her look sexier. He could have sworn for a second he heard her growl before quickly flipping him over and getting on top of him. She had her mouth open with her fangs out as she went for his neck.\n\nJoshua waited for the pain only to feel nothing. When he opened his eye's he saw her holding back as she continued to move her hips milking his cock. It was as if she wanted to bite him but was fighting the urge.\n\n\"Not yet,\" she whispered before she kissed him instead as if trying to keep her mouth occupied.\n\nJoshua leaned up as she wrapped her arms around his head. His hands slid around her back as their lips never broke from each other. He did not expect a night with this much passion in it when he arrived. He wanted it to go on as long as possible as he pulled his lips away from hers and began working his down her neck and then to her chest.\n\nThis was the first time he finally got a good look at her breasts which were soft, plump and amazing to behold. He attacked her nipples with his tongue making her moan as she tilted her head back and grabbed his hair. All the moans and sounds she was making just turned him on even more making him think this felt as good for her as it did for him.\n\nShe was like an unstoppable machine the longer they went. It sounded like she would cum every now and then but it was hard to tell because she never stopped. Whatever he had drunk earlier made him the same way as his penis would blow a load every few minute feeling just as pleasurable every time.\n\nThis went on for what felt like hours. Over and over again he would empty his cum into her and she sucked up every last drop. Time seemed to speed up and slow down as he could feel the pleasure start in his outer extremities and then flow through him and bursting out his manhood into her. It felt strange and amazing as he let himself go to this immortal beauty who could do whatever she wanted to him. \n\nAfter a while, he found himself just laying on the bed beneath her as she gently continued to ride his manhood glistening with sweat looking like a goddess. He was exhausted and also covered in sweat along with other fluids as all he could do is stare up at this angelic creature on top of him who had shown him pleasures he didn't think were possible. He slid his hands along her hips and up her sides cupping her breasts again. She grabbed his hands and held them there while she tilted her head back and moaned loudly.\n\n\"Almost time my love,\" she said in a breathy voice biting her lips and moaning.\n\n\"This... This has been...\" He said feeling the exhaustion in his voice. \"Oh fuck!\"\n\nShe began kissing his chest and working her way up to his neck. \"Are you ready for one more?\"\n\n\"I... I think I... Yes!\"\n\nHe heard her begin to moan and move her hips quicker as he felt his cock ready to burst one more time. He noticed Mercy's eye's suddenly turn white almost like a predator ready to strike. It was both frightening and beautiful at the same time as she opened her mouth showing her sharpened fangs and without much warning, she dug them into the side of his neck. \n\nIt hurt at first as he let out a moan of pain but soon he couldn't even feel it anymore as he felt his cock twitch once more before erupting in her much stronger than before. He also felt her body shake as if she had just cum herself as she sucked the blood from his veins. He wrapped his arms around her holding on as tight as he could not sure what was going to happen to him.\n\nShe suddenly released his neck and let out a scream that didn't sound human as the blood dripped down her chin. She seemed to be cumming uncontrollably since his blood touched her lips and he watched the red liquid drip down covering her breasts. She licked her fingers and began rubbing the red liquid into her breasts as she glared down at him with those same cold looking eyes.\n\nHis cock was still squirting as if her bite had also drugged him making him feel immense pleasure as she leaned back down and began licking the blood from his wound. Her tongue tickled as he felt no pain and just let himself go. The room began to spin as his vision got fuzzy. He tried to hold on as long as he could but soon he passed out feeling nothing but pleasure through his entire body all at once as he saw her continuing to drink his blood before everything went dark.\n\n----\n\nJosh's head was pounding and he was not sure where he was at first as he felt weak and exhausted trying to see his surroundings clearer. The sun was shining through the windows and as his eyes adjusted he realized he was back home in his apartment. Confused he sat up quickly which was a bad idea as the room began to spin and he fell back to the bed.\n\nHe didn't know how he got there or how long he had been out but when he turned his head he saw what looked like an envelope on his nightstand. As he opened it up it read:\n\n\"Joshua\n\nThanks for a wonderful night, get some rest and don't be a stranger, come back and see me any time!\n\nMercy,\"\n\nJoshua read the note over and over again as he reached up and felt a bandage on his neck where she had bitten him. He knew it would be insane to go back for more but he couldn't help but smile to himself as he laid there for a while before he finally found the strength to pull himself out of bed. He made it to the kitchen and grabbed a sports drink from his fridge trying to get rehydrated as he thought about when he should go back."
    ],
    "authorname": "maestro84",
    "tags": [
        "vampire",
        "bite",
        "fangs",
        "drinking blood",
        "vampire sex",
        "female vampire",
        "passion",
        "blow job",
        "blonde",
        "bloodsucker"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-madam-estrella"
}