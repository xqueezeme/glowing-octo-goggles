{
    "title": "Androshorts: That Bloody Woman!",
    "pages": [
        "For some people working for a company that sells sailing holidays would seem the ultimate perfect dream job. Dave Ross was nobody's sailor, even he admitted it but the job suited him. He was an almost thirty four year old graduate and now the lead Human Resources person in a sizeable public limited company that spanned most of the world. \n\nHe was responsible for the pay, holidays, sick leave, discipline and the general health, safety and welfare of representatives, crews, shipwrights, mechanics, cleaners, riggers and chandlers that operated and maintained the large fleet of large yachts from marinas in the United Kingdom, down across the Mediterranean; from Gibraltar, St Tropez, Amalfi and around Sicily and the heel of Italy into the Adriatic, The Ionian and Aegean seas, and then Cyprus to Port Said and across to North Africa.\n\nBrave Sailors could sail across the Atlantic, by boat if they wished, and cruise anywhere from Maine down to the Caribbean and the Gulf of Mexico, or alternatively fly to the West Coast of America and sail the Pacific from San Diego to Hawaii. \n\nBut Dave Ross hated the water,\n\n\"I don't swim in the same way I don't fly. When I develop gills or wings bring it on,\" he would say on those many occasions he was offered the chance to crew a yacht to or from the far flung locations that to him were just pins on a map.\n\nHe'd seen all sorts of yachting videos and figured he could do it, no question, he just didn't bloody want to! Dave just hated the pretentious crap spouted by the crews, skippers, and holiday makers in their stupid clothes who lived and loved the whole stupid concept.\n\nA sheet for instance.\n\nSheets go on beds, everyone knows that. \n\nThere are sheets on a yacht.\n\nOf course there are; for the money these people are paying they aren't going to put up with a fucking sleeping bag for heaven's sake.\n\n\"No, no, no!\" the yachties would chortle at his idiocy, \"it's part of the rigging!\"\n\n\"What, like a sail?\"\n\nThe hilarity of the sailors knew no bounds,\n\n\"A sheet controls the angle of the mainsail!\" the main sailor all but howled, pronouncing it mainsa'l as if they knew this would piss him off even more.\n\n\"And it's made of rope?\"\n\n\"Yes,\" said the sailor seeing Dave's look of incredulity, \"but it's called a sheet...\"\n\n\"Why not call it a rope...\" said Dave.\n\nThe Sailor took a deep breath,\n\n\"There aren't any 'ropes' a yacht,\" he snapped \"they are called 'lines',\" he took another deep breath and with some inspiration added, \"unless they are halyards, shrouds or stays.\"\n\n\"And they're made of rope?\"\n\nThe sailor stuttered his reply,\n\n\"Or cord...\"\n\n\"Fucking thin rope then.\" said Dave, finishing his coffee and going back to his computer and his nice files that were called 'files'.\n\nHe considered calling them 'personal detail portfolio's' and keeping them in large parchment ledgers rather than e-mail-able files seeing as many of his colleagues seemed like they wanted to use pointless fucking terms from the 18th century; perhaps he should pay them in doubloons rather than Sterling, Dollars or Euro's and rather than use the staff disciplinary system for workplace transgressions or late payments from clients he could have them whipped, keel-hauled or hung from the yardarm -- whatever the fuck a yardarm was.\n\nHe didn't mind Rum though.\n\nIt was his contempt for this pretention that first brought him to the attention of his new colleague who heard a similar rant about port, starboard, for'ed and aft, when he thought left, right, front and back served the rest of civilisation reasonably well.\n\nDeborah or 'Debs' Conway was a former lone yachtswoman and had been a very minor celebrity as she had chosen to sail the world at a time just after the Olympics and hardly anyone knew despite the publicity from her sponsors. The pictures showed the side of her yacht marked \"The Harry Conroy Veterans' Sailing Charity\" and a swift Google search would show a picture of a young soldier killed in Afghanistan and the charity started in his name by his Father.\n\nOnce she stopped sailing the world and she hadn't been made a Dame she went to her local town hall where she received the British Empire Medal from the Lord Lieutenant and like many sports personalities before her she moved into motivational speaking, and was then employed by Worldsail International as the UK Operations manager, her lonely BEM photographed pinned to her corporate blouse.\n\nMany of her new colleagues felt she was employed because of her name rather than her skill as manager and were concerned at some of her more random decisions and her rather unpleasant attitude.\n\nShe had been told off for bullying a young staff member who was slightly overweight saying that she didn't want any fatties on her bloody watch and berating her in front of two of her blonde, slim, now cringing crewmates arguing that there was no excuse for someone being overweight, \n\n\"less food, more exercise, simple,\" snapped the motivational speaker tapping her victim's belly.\n\nThe fatty in question was niece of the investment director and she phoned him in tears from the staff toilet within minutes of the incident.\n\nDebs was made to apologise, and when she did stated that it was just tough love and merely grown up banter. She walked away from the sales floor with that director giving him the benefit of her hard-hitting creed, hating the twenty first century, entitled snowflakery she came across so often in the overpaid, molly coddled corporate environment found in Great Britain today. The Director didn't stop to ask her about exactly where she had come across that seeing as she had been at sea with injured veterans or as a lone yachtswoman for the last five or six years. \n\nHis niece was posted to the Med as a Rep in the Cyprus office and was more than happy with the change and the distance between her and her previous manager.\n\nWithin a few weeks of that she had reviewed and replaced the staff uniform going for cheap unbranded gear heavy with sponsorship logo's but short on comfort, and the nylon polo shirts that shrunk in the wash were universally detested as the numerous embroideries caused much itching and scratching across backs and shoulders, while the shorts caused sweating and rashes where temperate climate based staff least wanted that kind of thing; staff across the globe and out of her sight just ignored them except for photographs. \n\nThe smell of three or four staff members in any confined space was better talked about than endured that spring, and many brought a second set in for the afternoon after a lunchtime shower in the gym across the road. After the fifth week and no increase in the laundry allowance or clothing issue many didn't and just wore the same.\n\nThe long trousers were slightly worse.\n\nDave was a shiny arsed bureaucrat, self-confessed, and wore the same kind of smart casual attire he had for many years along with the other office based staff in the main building and away from the rich customers.\n\nShe called him into the office a few months into her job.\n\n\"Ah Dave,\" she said looking him up and down, \"the trousers...\" she waved her pointer finger up and down indicating them as if he hadn't cottoned on to her description.\n\n\"Yes?\"\n\n\"They're jeans.\"\n\n\"Yes.\"\n\n\"They'll have to go.\" She said grimacing.\n\n\"Why?\"\n\nShe stood and folded her arms, her face folding into a look of such anger he thought she might have hurt herself when carrying out the manoeuvre.\n\n\"What do you mean why?\" she snapped, \"They're bloody jeans and wholly inappropriate for a work environment!\"\n\n\"In your opinion.\"\n\n\"In my opinion,\" she stood up, \"as UK manager, my job is smarten up and straighten out this...\"\n\n\"As UK 'operations' manager,\" he emphasised, \"I'm 'corporate' manager - upstairs.\" He pointed at the ceiling to indicate his office and his domain.\n\n\"Jeans?!\" she all but squealed.\n\n\"Black jeans,\" he said, \"the same style, pattern and make I have worn for nine years, and no one has had an issue with them before.\"\n\n\"Well I have,\" she said, \"You can wear proper trousers or I'll get you the corporate uniform, your choice.\"\n\n\"Deborah,\" he said, \"First off, I'm six foot ten inches tall as you can see, and I can't buy posh work trousers for less than fifty pounds a pair.\" She shook her head. He leaned across her desk and pushed the computer mouse at her. \"You find them Deborah and I'll wear them.\" His look had enough challenge that she didn't take him up on it. \"Secondly I then have to go into various buildings and workshops to meet with staff and onto boats...\"\n\n\"Yachts,\" she corrected him.\n\nHere we fucking go, he thought, another fucking yachtie.\n\n\"Boats AND yachts,\" he replied and holding up a hand to stop her retaliation continued, \"and I'm done with clambering around and wrecking expensive trousers when the black jeans I buy on line for twenty pounds last much longer, are far more hardwearing and practical for wearing around the boats, yachts and workshops and certainly more comfortable and I buy new ones as soon as they start to fade. Finished?\"\n\n\"I'll arrange for the uniform for you and all of the corporate staff.\" She said with a self-satisfied nod. \n\n\"Really?\" he grinned folding his arms, \"I'm intrigued, do tell me how you're going to swing that.\"\n\n\"I'm UK operations manager,\" she said, \"I have only to snap my finger and the board will approve whatever I say.\"\n\n\"Yes, but what happens when they ask HR to approve it?\"\n\n\"You'll do what you're bloody told!\" she said.\n\n\"Or what?\" he raised his eyebrows.\n\n\"Or... or...\"\n\n\"Human resources will take action?\" he grinned, \"I'll sack myself?\" he pursed his lips and tried a less confrontational look, \"Deborah, I've worn black jeans for nine years, I can tell you the very day even,\" he thought back to the morning he'd first worn them, the Friday three days after his wife's funeral after he'd ripped his last good pair of cleaned and pressed trousers on a loose screw head clambering onto a just-arrived yacht the afternoon before, and his black jeans were all he could find, \"and the board have never had an issue before even when I've been presenting to them and some significant investors.\"\n\n\"Well I'll soon sort that!\" she snapped with a wobbling head of self-righteousness this time. She stood to leave the office. \n\n\"Really, so I guess you going to rewrite all of the contracts of employment for all of the corporate staff?\" he shouted after her.\n\n\"What's that got to do with anything!?\" she said angrily turning back to him.\n\n\"The operations staff all have clauses in their contracts to say they will wear the uniforms provided, no matter how uncomfortable they are and how much they stink in them, the office staff don't have that in their contracts and because of that, you can't make them. And as the company's HR advisor for almost ten years I can tell you that 'because I say so' is hardly going to stand up in an employment tribunal when twelve ladies all sue the company for constructive dismissal because they can no longer work in the office that gets all the sun in the afternoon and you've made them wear those cheap bloody polo shirts and they sweat themselves into a coma.\"\n\nDebs closed her eyes and shook her head and folded her arms,\n\n\"When I sailed across the pacific I had to...\"\n\n\"Yes,\" he interrupted, \"the very moment the HR and finance teams need to sail across the Pacific I'm sure they'll just lap up your advice, but right now I struggle to get the management team to buy enough electric fans seeing as air conditioning is too expensive and the blinds just make the place even hotter.\"\n\n\"God preserve me from fucking snow...\"\n\n\"Stop there sweetie!\" he snapped, \"I've already had to tidy up one of your bullying rants so don't even think of trying that shit with me! Those ladies are all committed to the company, many of them long serving and under appreciated and they 'are but warriors for the working day'. They aren't here for the sailing or the occasional trip to the Med, they are clerks. Boring, simple support staff that keep this company running and without whom not a single fucking boat could set sail no matter how non-snowflake the crew are!\"\n\n\"Lose... the... jeans!\" she leaned across her desk and hissed at him.\n\n\"Make... me!\" he leaned back across it.\n\nHe could see that she was fuming, and obviously used to her own way. He was probably the first person to stand up to her despite the below stairs bitching that he'd had to put up with about the nasty woman and the shitty clothing she had sourced.\n\n\"I'm going to the board.\" She said picking up her mobile phone and keys.\n\n\"Best of luck,\" he said, \"Don't forget what I said about rewriting those contracts and finding a way to get thirteen office staff to sign them!\" he grinned as she made to storm out, \"Oh yes, don't forget there will be a pay increase for them as well, can't be expected to wash all that shit for free now can they!\" Her bottom jaw flapped, \"Or they could just have the air conditioning installed that they promised us. After all, the board will do whatever you tell them Debs, however much extra money it will cost.\"\n\nShe left.\n\nHe walked back to his office, just as angry as Debs had been. He stormed into the large open plan office and his crew of ladies that did indeed keep the whole organisation, to coin an apposite phrase, 'afloat'.\n\n\"Whassup Davie?\" said Lisa the accountant seeing the storms across his eyebrows.\n\n\"That bloody woman!\" he snarled, the entire office knowing in an instant who he was referring to. It was the standard term of reference for the former round the world yachtswoman.\n\n\"Tea?\"\n\n\"Yeah,\" he said walking towards the kitchen. Once there he restarted his tirade. \"That bitch only said I couldn't wear black jeans anymore.\"\n\n\"What the fuck has it to do with her?\" said Lisa.\n\n\"Throwing her weight around,\" he said, \"only I caught it and threw it straight back.\"\n\n\"Bitch,\" said Lisa opening the box of tea bags.\n\n\"Is she one of yours?\" he said. The gorgeous Lisa was a committed Lesbian and there had been much banter around her sexuality, much of it started by her, between the two of them after he had asked her out to dinner one evening shortly after she had arrived five years before. They had been out to dinner many times since of course but with her partner Trudy.\n\n\"Is she fuck,\" said Lisa, \"she's quite fit I do have to say, more so since she's taken up a more sedentary lifestyle and put some weight on, but no, definitely not Lesbianic.\"\n\n\"Fit?\" said Dave who had never looked past the hard faced masculinity of the short-haired, trouser and trainer wearing, make-up free martinet that reminded him more of a school PE teacher than a world class manager.\n\n\"Oh yeah,\" said Lisa, \"she has a great arse, and fantastic tits!\" Lisa grinned, \"Don't get me wrong I wouldn't stop to piss on her if she was on fire but if she was drunk and giggly and asking me to take her to bed and show her the ways of love that only another woman can, I'd cheerfully push you out of the way.\"\n\n\"Thanks,\" he said, \"that's good to know she has at least one redeeming feature.\"\n\n\"Like I said, if she was on fire though mate...\"\n\n\"Yeah.\" He took his tea and went back to his desk.\n\nHe sat and thought about options. Much as he had told Deborah that the contracts couldn't be changed that was actually rubbish; with appropriate notice the company could achieve it in one calendar month and anyone not signing the new contract would render themselves unemployed, but with the resort to a tribunal a very real, but expensive, option. \n\nBut fuck it, no way was he telling the company that. \n\nHe had years with the company and knew that they wouldn't want to upset the back office, that included the personal assistants that did all of boardroom stuff and while they might want to indulge the yachtswoman, no way would they want to see Jenni, the rather overweight but terrifyingly efficient 59 year old PA, in shorts or squeezed into the cheap nylon shit they had bought for the late teens to early twenties boys and girls on the sales floor, the prep and handover teams or the crews.\n\nHe knew that almost the entire board didn't have the first clue about human resources and the legal advice they sought from a local firm of solicitors would come down firmly with him. He was good mates with them after all.\n\nThree days later he was talking to the managing director who made him a coffee and asked him to sit down.\n\n\"David,\" he smiled handing a mug across, \"I understand that you've had a falling out with Debs.\"\n\n\"No Stuart, I just didn't agree with her, that's completely different.\"\n\n\"David, We've rather a lot invested in young Debs,\" he said with a placatory smile, \"It's all about global profile, and she has been brought in to attract the younger female market.\"\n\n\"And what does that have to do with me and my girls having to kowtow to her because she thinks she's in charge of everything?\"\n\n\"Daviiiiid!\" Stuart crooned, \"You two need to be able to work together if this is going to be a success...\"\n\n\"And I can't do that wearing the trousers I've worn since Sally died?\"\n\n\"OK,\" said Stuart, \"that was perhaps a little high handed of her...\"\n\n\"And none of her bloody business,\"\n\n\"And none of her business,\" Stuart rubbed a hand across his bald spot, \"But please, don't go out of your way to piss her off.\"\n\n\"Absolutely; on the understanding that she does likewise.\" He thought about the youngsters on the ground floor and their silent bitching about the crap clothing, \"And what about the team clothing,\" said Dave, conscious of his captive audience and the lateness of the afternoon.\n\n\"What about it?\"\n\n\"They teams hate it.\"\n\n\"No one has said anything?\"\n\n\"Not to you they haven't, and have only talked to me off the record because they all know that Debs will start to shit on them the second they complain and be branded as 21st century snowflakes.\" Dave finished his coffee and stood, \"come with me if you really want to know.\"\n\nThey walked downstairs to the huge open plan office festooned with seafaring memorabilia and the occasional palm tree and label 'sails sales' in letters made out of fake driftwood. The Sales floor was always slightly stuffy because of the number of computers, TV's and other electrical items generating heat and the appalling ventilation in what has been designed and built as a dockside factory back in the late thirties.\n\nAll doors and windows were open but without any wind blowing outside it was very hot and humid, even for early June.\n\n\"Breath in through your nose mate,\" said Dave and they both stepped closer to a set of tables with three sales staff and the smell was noticeable. As they got closer to them they could see the huge dark patches on chests, armpits and backs and red sweaty brows dotted with beads of perspiration that the sufferer would occasionally swipe with a hand.\n\nAll of the girls had their long lustrous hair tidied up and away from their necks and even the few customers were picking up brochures and fanning themselves with more than one wrinkled nose against the body odour.\n\n\"Bloody hell,\" said Stuart walking across to one of the girls leaning over a desk fan, \"What do you think of the new corporate clothing Tina,\" he said with a grin.\n\n\"It's...\" Tina looked around her rubbing the skin around her neck, \"it's... not as comfortable as the last stuff but...\" she looked across Stuart's shoulder seeing Debs in the distance, \"I'm sure it'll be fine...\" she quickly walked away.\n\n\"Tina!\" said Stuart.\n\n\"Debs has just appeared,\" said Dave, \"and Tina wants to keep her job.\"\n\nStuart, like Dave, saw the daggers look that Debs threw across the room at the retreating Tina. He walked across to the sweating group looking at the customers being escorted to the cashier.\n\n\"How's everyone!?\" he said with a jolly bark. Debs was there in seconds making eye contact with all of them.",
        "\"Fine...\" mumbled five scared young reps not making eye contact with anyone.\n\n\"Warm isn't it,\" said Stuart, \"Good heavens!\" he said seeing the looks he wasn't getting, \"what on earth is that smell?\" He looked around him at his own staff.\n\n\"It's us,\" said Megan raising an arm, \"these uniforms are basically airless plastic bags and we sweat to hell in them.\"\n\nDebs looked daggers at the traitorous behaviour of her direct underling.\n\n\"And they scratch to buggery, look,\" said Dorothy pulling her shirt collar down to expose not only her pretty, lacy bra strap but also the numerous scratches that the tail of a fish and the binding behind it had inflicted in dozens of red scratches across her pale white shoulder.\n\n\"Bloody hell,\" said Stuart seeing the mark.\n\n\"It's just because they are new...\" moaned Debs appearing suddenly.\n\n\"They are almost six weeks old and mine have been washed forty times already,\" said a braver Tina, \"And this outboard logo isn't helping either.\" With that she pulled off her polo shirt to show the scratches across her shoulder and the slope of shapely left breast held in place by a black balcony bra. \"We used to wear T-shirts to stop them scratching but SHE said we couldn't and threatened to send anyone home without pay if they wore one.\"\n\n\"The contract is very specific,\" said Debs, \"Image in this line of work is everything...\"\n\n\"I notice that you aren't wearing one?\" said Dave seeing that the lighter shade of blue Polo shirt Debs was wearing was a lightweight cotton.\n\n\"This is the management colour, helps the customer to tell the difference between staff and shop floor.\" Debs folded her arms in stiff bottom lipped petulance, \"this is the colour that the office staff will wear when the board approves my recommendation.\"\n\n\"Yes, well...\" said Stuart, slipping a pointer finger into the sleeve of Debs' T-shirt and the one that the half-naked Tina was holding, \"yeah, we'll have to see about that. Debs,\" said Stuart walking away, stopping to throw Tina's shirt back at her, \"walk with me for a moment.\"\n\nAn email was circulated that afternoon ordering staff to return to the cotton Worldsail International short sleeved shirts and blouses until new, more practical corporate wear could be sourced.\n\nDebs was fuming.\n\nNext morning Dave had to walk across to the yard to speak with one of the shipwrights. As he walked into the workshop their was loud voice.\n\n\"Excuse me Mr Ross, where do you think you are going?\" it was her again. That bloody woman.\n\n\"I was going to discuss Brian's up and coming sick leave Debs,\" he said.\n\n\"Well you must have read the health and safety policy Mr Ross, seeing as you wrote most of it.\"\n\n\"And your point is?\"\n\n\"You can't enter the workshop without wearing safety shoes and fluorescent clothing.\" She was walking slowly towards him, her Florrie vest obvious.\n\nShit!\n\nThat bloody woman!\n\n\"Fair enough,\" he backed out of the workshop and stood by the door, \"Brian, please come and see when you have five minutes, I'll give you the full SP on your operation leave and all that.\"\n\n\"Fanks Dave,\" shouted Brian across the workshop.\n\n\"During your coffee break please Mr Threadgold,\" shouted Debs.\n\nBitch.\n\nShe did have him there. Because of some rather errant cleaners they'd had previously, strict times had been written into the procedures. And that fucking woman must have spent the last three days reading every single one of them.\n\nIt got to the point that every time he stepped off of the first floor she was there telling him what he could and couldn't do. So he took them home as well, Sky movies playing to itself as he read and made notes, two can play at that game.\n\nThe fun continued.\n\nThe staff all took lunch breaks, and coffee breaks, and took their rest breaks from operating computer screens, phones went unanswered, and overtime was needed to get the boats out.\n\nIt was just one long battle and productivity fell accordingly. Something had to be done, and Stuart called both of them to his office one Friday afternoon.\n\n\"A sailing trip,\" he said with a smile, \"Just the two of you.\"\n\n\"WHAT!?!\" Debs and Dave shouted at the same time.\n\n\"It's the 'Montego Bay', a brand new six sleeper specially built and rigged for the Caribbean, needs to be in Jamaica in time for third weekend in August,\" said Stuart, \"Dave, you know nothing of the work and are the only member of staff that has never sailed in all of your years here. There is no one better to teach you than Debs here.\" He indicated the shorter woman next to him.\n\n\"But...\" said Debs stuttering her response, seeing weeks of being stuck on her own with this man she pretty much detested and having to teach him to sail.\n\n\"Sailing?\" spat out Dave as if he had been asked to carry out a Herculean task, \"I don't want to sail! No way!\"\n\n\"Dave! You've been putting this off for years, part of you coming to work here all those years ago was that you would eventually do this!\" he took a deep breath, \"it is in your contract mate.\"\n\n\"But I can't even swim, why would I want to sail the bloody Atlantic?\" said Dave looking very angry now.\n\n\"Sailing the Atlantic with a landlubber,\" said Debs, \"It could be dangerous.\"\n\n\"One of things we employed you for is your knowledge and you are contracted to take this very boat to Jamaica, it's in your contract as well.\" The room went silent. \"How about the company sponsors you,\" said Stuart with a grin, then a quick nod of his head, \"Yeah, We'll sponsor you and Debs to sail the Atlantic, five hundred pounds per day for however long it takes. You can leave in a few weeks, sail first to the Canaries and then head for the Windward Isles, take you about a month, what could go wrong!\"\n\nSo he was presented with a set of specially made sailing waterproofs, and corporate clothing, enough for his trip out and the for each time they docked for the amounts of free publicity their trip would garner. He was also presented with a large sea bag that would keep all of his possessions dry whatever happened. \n\nAfter all, he figured, what's the worse that could happen; he shared the same conclusion as Samuel Johnson, going to sea was the same a being in prison with the risk of being drowned. He kissed and hugged his daughter for what seemed the hundredth time since he packed that fucking bag.\n\n\"I'll be fine Daddy!\" said his teenage girl, an arm around his mother in law, both of them reminding him of his beloved Sally and just made him miss her so much more than he normally did.\n\nHe looked to his left and there she was, Debs Conroy BEM, or 'that bloody woman'. She was all over the boat, buggering around with bits of rope and generally changing all of the stuff that the ship fitters and the chandlers had done, and the unfriendly scowl on her face let him know that whatever the company's highly paid Specialists had done wasn't good enough for her.\n\nHis parents and his in-laws had all come to Plymouth to see him and 'her' off. Sally's Mum Dawn stepped on the boat and walked up to Debs and shook her hand, thanking her for her efforts in raising money for cancer research in her late daughters name. She hugged Debs and her face left Dave in no doubt that it was something that she really didn't care for, or perhaps wasn't used to.\n\nDave had shown his daughter around the boat and she seemed impressed. He only wished he was.\n\n\"Dave,\" said Debs without a sign of regret or sympathy, he even thought he detected an air of disapproval in his desire to spend a last few moments with his family, \"the tide? We really do need to be on our way?\"\n\nStuart got all of the families together and final hugs and kisses were shared and photos and video taken, and Debs was noticeably absent for that moment. Dave thought it strange that there was no one there to see off Debs.\n\nRopes were untied and thrown onto the boat and Debs started the motor and with a single shove on the pointed end, the boat moved out into the deeper water and with Drakes Island to their bow they headed out into The English Channel.\n\nDave walked to the front of the boat and pulled in the plastic fenders on the off side (he refused to say starboard) as he had seen the crews do when they sailed away from the yard. He was still wearing his Worldsail International crew clothing -- the new stuff the firm had bought with assistance from the kids that wore it every day.\n\nDebs hardly spoke to him for the first day, and as they motored a long the channel westward waiting for the wind to pick up he guessed.\n\nAfter an hour he went down into the kitchen and made two mugs of tea, having been well acquainted by the yard crew who wanted him to be able to at least feed himself if 'that bloody woman' wanted to make life difficult for him. He did actually consider himself no mean chef, having taken classes a few years back.\n\n\"Thanks,\" she said in a very business like fashion.\n\n\"Don't mention it,\" he said with the same chill to his voice.\n\nThat first night they just stayed around the cabin, one on watch the whole time as this was still one of the busiest shipping lanes in the world.\n\nOn the second day they lost sight of land and she told him that she was changing the heading and making for the Canary Island prior to the Atlantic crossing. They had only slept for the occasional hour or two, but on that night she set the sails, talking as she did so, quietly and hardly instructional, he tried to follow what was going on but it was wholly pointless, so he stayed in the well with all of the expensive equipment keeping them on course. \n\nAs they reached they sea lanes the conditions worsened and Dave started to suffer his first sea sickness. It started in the calm swells that had him throwing up over the side. Soon he had decided not to eat anything as he really didn't see the point and just said to Debs he would just throw his meals over the side and cut out the middle man. She nagged him insisting that he needed to keep his strength up and soon he would get over it. \n\nFor Dave it was just out and out misery, and while his companion obviously loved the life. He went to bed, fuming that the large bed he'd been promised was not an option and that he was sent to sleep in his own roomy cabin but in a bunk he was too big for.\n\nHe was tired, hungry, nauseous, and he ached. From bumps to the head and from trying to sleep with his legs cramping because he could not stretch out properly. It was hell.\n\nMaking his way through the boat it lurched, throwing him against a bulk head and making him hit his already sore head the seventh or eighth time that day, and he swore.\n\n\"I seriously hate the fucking ship!\" he shouted thumping the timber support.\n\n\"What now!?\" Debs growled, she was starting to tire of his constant moaning. \n\n\"I was promised a relaxing holiday and so far this fucking boat is misery!\"\n\n\"It's a perfectly good craft!\" shouted Debs.\n\n\"It's a floating Wendy house!\" he snarled back.\n\n\"And just how do you work that out?\" she said defensively. \n\n\"Because I'm six foot fucking ten and this boat is designed for five footers!\"\n\n\"Wear the bumper cap!\" she shouted back at him pointing to the ridiculous plastic baseball cap someone had Put on board for him.\n\n\"Oh yes, that will make all the fucking difference won't it.\"\n\n\"You've done nothing but moan since we started,\" she shouted back at him.\n\n\"Oh good, you noticed,\" he said with his hands on his hips, \"I've managed to keep down one meal in six, I can't sleep at night because the spacious bunks are designed for no one taller than six feet. I get leg cramps, last night I ended up sleeping on the fucking floor!\"\n\n\"You'll have to deal with it,\" she said just as cross, folding her arms petulantly.\n\n \n\n\"Look I was assured that there was a double bed that I would be able to sleep on, only reason I agreed to come.\"\n\n\"Well that's where I have to sleep. It's closest to the radio and navigation equipment and the stern if I have to get out on deck all of a sudden...\"\n\n\"And I can't sleep there?\"\n\n\"Not with me you can't.\"\n\n\"Look, I'm not suggesting we talk warm showers in the wee hours, just sleep on the same bed, surely that's not going to end in tears.\"\n\n\"It's totally out of the question!\" she snapped.\n\n\"OK, then just drop me off in France and I'll get the bus home.\"\n\n\"We aren't going to France!\"\n\n\"Anywhere! Drop me off ANYWHERE! I CANNOT SLEEP IN A FUCKING SHOE BOX FOR A MONTH - END OF STORY!\"\n\n\"Oh you bloo...\"\n\n\"If you call me a snowflake precious, so help me I'll...\"\n\nDebs looked concerned for a moment,\n\n\"You'll do what?\"\n\n\"I'll get on the radio, contact whichever coastguard answers me, and tell them I'm being held prisoner on a fucking slave ship!\"\n\n\"A five star slave ship!\" she said with a leer.\n\n\"Only if you're one of the seven dwarves!\"\n\n\"Well you certainly aren't Bashful - Dopey and Grumpy I can believe!\"\n\n\"Not fucking Happy or Sleepy either,\" he snarled, \"chance'll be fine thing.\" \n\nHe smiled, she smiled, there was a definite ease to the tension.\n\n\"One night Debs, please. Let's just try it. I really will get out and walk if it stays like this.\"\n\n\"Ok Dave, we'll try it tonight,\" she grinned at him, as if testing out if such a thing was allowed.\n\nHe bowed,\n\n\"Thank you,\" he reached forward and took her hand and kissed it. She giggled again. \n\nNeither seemed in any great rush to get to bed that night and they sat in the well deck looking up at the slowly setting sun, and the stars that appeared in its lee.\n\nEventually they both started to hide their yawns and Dave started the process. He stood cleared away their tea mugs and he started to build the double bed the way that they had been shown back in the yard. He took both of their large duvets and their pillows and quickly made the bed while Debs went up and deck and settled everything for the night, content that the alarm would wake her in a few hours and she could check all was still well in their voyage.\n\nShe reappeared and saw the bed made and crawled around the edge to get to the bathroom. While she was in there he stripped down to his shorts and a T-shirt, grabbed two water bottles, placing one on each bedside table before dowsing the lights so she could have the darkness to get into bed.\n\nShe did so, whispering a 'night-night Dave' to him.\n\nHe replied in a slightly dopey parent voice, \"G'night honey,\" before luxuriously stretching out in his bed, he was asleep in moments.\n\nAt the sun started to rise Dave was conscious that at some point in the night, they had both rolled together, their duvets over both of them.\n\nHe found that Debs was right into him, her head on his shoulder her arm across his waist, just how his wife had done all those years ago. He liked the feeling, and decided to go back to sleep, pulling the duvet back over them both and laying an arm across her waist easing himself fractionally closer to her and she purred her unconscious appreciation.\n\nHe woke an hour or so later to find that she had turned in his arms and was now snuggled into him spoons fashion, her bottom pushed into his groin, his arm that had been across her now around her, his hand clamped across her full breast by her hand.\n\nShe stretched and ground herself back against him and he squeezed her tight. She purred again squishing her boob with his hand, her hard nipple pushing into his palm.\n\nThere was a sharp intake of breath as she woke and remembered where she was,\n\n\"Dave!\" she spluttered out rolling away from him. She looked down at the hard points sticking out from her grey vest top she had chosen and had kept on after loosing her trousers and boots.\n\n\"Sorry Deb,\" he said, \"I was just as surprised as you were mate.\" He only hoped that she hadn't noticed his erection that he'd pressed into her bottom at one point as he dozed, ready to wake not half an hour before. \"I'll get breakfast.\" He said rolling over and taking an all new look at her lower half, well-muscled and toned legs already tanned in the almost week they had been sailing, tapering up into tight fitting panties that clung to her bottom and groin.\n\n\"A cup of tea would be great,\" she said pulling the duvet over her legs as he stood up, his elasticated boxer shorts giving her the same view that he'd just had. He used the reflection of the highly polished wood and the glass in the kitchen to see that she was checking him out in the very same way.\n\nHe made sure he kept facing the kitchen and pumped the water into the kettle and set it to boil, conscious of the limited amounts of gas and electric they had. He unhooked her mug and then his, digging out a single tea bag that he would make last for both mugs.\n\nHe saw that she had climbed off of the bed and had started to break it down still just in her vest and panties. She was very easy on the eye he did have to admit, however much she annoyed him.\n\nShe opened the aft hatch and popped her head out, looking around for other shipping but there was none. Her standing on the mid step also meant that her shapely bottom was right in his sight line. It was growing on him, even more so when she absent mindedly tucked her pointer finger under the elastic and straightened the seam pulling a bunch out of the cleft, stroking her hand across the same cheek.\n\n\"All quiet out there,\" she said, stepping back down into the cabin, \"and we're still on course.\" She messed around with the computer equipment, \"We made for better time than I thought we would...\" she stopped talking, \"Dave, about this morning...\"\n\n\"Debs, don't worry about it. I slept properly for the first time since we started this journey, probably why we ended up having a bit of a cuddle. I really didn't mind.\"\n\nShe gave him the first genuine smile he'd ever seen on her pretty face, finally shorn of the hard faced affected look she'd put on the second she came to work for Worldsail International, more like the happy triumphant girl he'd seen sailing into Plymouth on the TV eighteen months before.\n\nAnd that was how things progressed, they shared a bed in companionable silence, occasionally waking up in the arms of the other and he had to admit that he really liked it. The last few nights he had laid awake listening to the sea through the half open window and thinking his single man thoughts in bed with, on reflection, was one of the most attractive girls he'd ever been this close to.\n\nAs he lay there thinking about his beloved Sally and how they had fallen into their night time routine of her reversing into him and him spooning her until she slept, that he noticed that Debs was starting to do the same. She rolled towards him slightly then shuffled closer to lay her head on his shoulder and pull his arm around her, same as she had on about three occasions. He didn't object and turned slightly to face her and move slightly closer.\n\nThe were much closer during the day now too, and she was much less guarded around him and, as she had predicted his sea sickness was pretty much cured and he was like a man refreshed, eating well, feeling well and sleeping like a log to wake with this pretty woman in his arms.\n\nThey stopped at the Worldsail wharf in the Canaries for a few hours, and topped up and emptied where necessary, heading west for the coast of America. It was nice to step on dry land for a while and buy more Coke.\n\nDespite his generally sleeping like a log, his paternal hearing woke him; his could hear soft sobs and only the rocking of the ship reminded him that he didn't have to jump out of bed and run to his daughters room and check she was OK.\n\n\"I'm doing it Daddy...\" Debs mumbled, \"sails are set... the windvane and the electronics are keeping us on course... making good time... we're not in a race...\" she was obviously talking in her sleep and he was hearing one half of the conversation, \"but we have to sleep...\" she whimpered again, louder this time, \"Can't leave it to Dave... landsman... doesn't know... I can't do it all... sorry Daddy... No Daddy NO!\" she said in a rising tone and Dave gave her a shake to rescue her from whatever was happening in her dream.",
        "\"Hey Debs!\" he said, \"it's OK Baby,\" he said using the same tone and the same words he used for his daughter Kathy, \"just a bad dream.\"\n\nShe came around giving her head a bit of a shake.\n\n\"Was I talking?\"\n\n\"Oh yeah,\" he said, \"well whimpering mostly,\" he grinned at her and still in Dad mode stroked the single tear from her cheek.\n\nShe broke eye contact but was evidently touched by his tenderness and concern.\n\n\"What did I say?\"\n\n\"You were trying to convince your Daddy that everything was OK on the trip,\" he said.\n\n\"What?\"\n\n\"Well I only listened to your half of the conversation but I get the feeling that he was giving you a hard time for sleeping.\"\n\nShe took a deep breath,\n\n\"Yeah,\" she said, as the remembrance came back to her, \"tough bloke my Dad.\"\n\nDave took the duvet and pulled it up to her chin, tucking her in. Still parental, even though the girl his was tucking in was three years younger than him and, he had to admit, classical gorgeous with light brown hair verging on blonde that would look incredible if she didn't insist on keeping it only an inch or so longer than his; and then there was those deep blue eyes, high cheek bones and lips that just begged for...\n\nHe snapped out of it.\n\n\"Tell me about him,\" Dave switched the tiny light above them.\n\n\"Haven't you heard of him?\" she asked surprised, \"he's famous in the sailing world.\"\n\n\"Yeah well,\" he said leaning back to take the bottle of water held in a small frame, \"He'd have to famous in the world of personnel and human resources for me to know about him.\" He flipped the top and drank from it.\n\n\"Oh yes,\" she said, \"keep forgetting that,\" he handed her the bottle and she took it, propping herself on one elbow, \"He's sailed around the world four or five times now, lost count to be honest. Took up sailing when he was at Sandhurst and got the bug, and seeing as he sailed so did his family, although I took it more seriously than the rest of my family.\" She took a deep breath, \"Lieutenant Colonel Sir Henry Conroy MC DSO, late of the Welch Lancers and the Special Air Service,\" she took a sip from the bottle and handed it back, \"thanks,\" she said, and continued. \"Won his military cross in Iraq with SAS, Distinguished Service Order for commanding his infantry battalion in Afghanistan, knighted for services to disabled veterans sailing.\"\n\n\"Oh yeah,\" said Dave, a faint recollection of something in one of the Sunday supplements. \"He named a boat...\" Dave stopped himself.\n\n\"After my dead brother,\" she completed the sentence for him.\n\n\"Sorry,\" he said, \"didn't think that one through.\"\n\n\"No problem,\" she lay back down on her pillow, and after he replaced his bottle he did likewise. \"Harry... my big brother was killed by a roadside bomb in Sangin province, first tour of Afghanistan, he was a Lieutenant in whichever regiment it was that absorbed the Welch Lancers. Can't remember for the life of me.\"\n\nDave was sure he could read some animosity between Debs and her late brother, and she cleared the matter after her next breath.\n\n\"Harry was part of a convoy of trucks,\" she said staring at Dave but all the way through him, \"simple resupply mission apparently; eagle-eyed driver of the little tank at the front stopped because the road ahead looked all wrong and called on the convoy to back up a bit so they could call in the experts, when Harry demands to know what the bloody hell is holding everything up, gets out of his nice armoured truck, storms to the front of the slowly reversing convoy to give the first driver a bollocking when the device was command detonated. Killed him instantly apparently.\" She dropped her eyes.\n\n\"I'm so sorry,\" said Dave.\n\n\"Why? You didn't kill him.\" There is was again, that anger.\n\n\"Well...\"\n\n\"Sorry Dave,\" she said with an ironic smile, \"that was unfair of me.\" She stretched and her great boobs contained in her sports bra appeared above the duvet again. \"Stupid bastard was doing what he did best, showing off and throwing his dumb fuck, bullying weight about.\" There is was! \"If he'd followed procedures, stayed in the truck and let the experts deal with it in their specially designed super tank, he's still be alive and trying out for the SAS as we speak.\"\n\n\"Shit,\" said Dave with a sigh.\n\n\"Precisely,\" said Debs.\n\n\"And he bullied you I guess?\"\n\n\"As soon as he reached puberty,\" she said, \"My eldest sister was away at University, I was the youngest working hard to get the right qualifications to join my sister at Mum's Alma Mater, while my much longed for brother was already turning into his father and bossing the world around.\" She pulled the covers up to her neck again and Dave read this as being defensive, so without asking he moved closer and slipped an arm around her pulling her to his chest, and she obviously didn't mind. She closed her eyes and laid a hand in his chest, and carried on.\n\n\"Daddy was one of those classic, old school 'Fighting Tommies' - survival of the fittest, 'lead me, follow me or get out of my way' type men and saw nothing wrong with it; when I told him that Harry had started to hit me, he told me to hit him back -- harder. I did, once; so he waited for his time and two nights later pushed me down stairs breaking my arm and my collar bone. Daddy laughed as I lay there crying and pointing out what Harry had done, and just told me not to let the enemy get behind me.\" She shuddered, \"Trouble was I didn't know I had an enemy, I thought I had a big brother. \n\nMum went spare of course and ripped into Harry. Dad sided with my brother who grinned and said I must have slipped, while I added that if I had 'slipped' the thump between my shoulder blades hadn't helped.\"\n\nAs Dave lay there looking at the pretty girl next to him and opening her heart he suddenly had the explanation why she was the way she was, and why she struggled dealing with other people and just jumped in with her first decision, however inappropriate it was, it was how she had been raised. She hadn't had a family, she was part of a competition.\n\nShe continued, \"There was even a fist shaped bruise in my back to help matters along; when they found that Dad insisted that HE should take me to hospital to get my broken bones fixed, the Doctor found the bruise almost straight away.\"\n\nDave could see her eyes screwed shut at that particular memory,\n\n\"Dad told the Doctor that there was a Newel post on the stairs that must have caused it and the Accident and Emergency Doctor, an expert at that kind of thing, gave him one of those 'yeah right' looks. After he left the cubicle Dad got right down in my face and told me that we had to keep this in the family...\" she stopped and opened her eyes looking up and into Dave's face, \"No, actually he said we had to 'keep it in the Regiment'!\" she giggled, \"Close ranks and straighten up Deborah! Those were his very words.\" She shook her head, \"You don't grass on your own! He snarled at me, and I replied 'even when my own had been punching me, bullying me and generally messing me around for eighteen months'?\" she shivered yet again, \"Dad looked really angry but then the Doctor came back in and saw what was going on. \n\nHe pretty much told Dad that he had made a note of the injury and the bruise and it was on file. Dad was annoyed at this and said that anything about my family was hush-hush' as he was in the SAS. The Doctor said he didn't give a shit and he was doing his job. Dad was pissed because in those days the army was getting tough on family problems and any sniff of domestic violence was stomped on good and proper.\" She sighed and closed her eyes again snuggling closer into her bedmate, \"suffice it to say that Dad and I have never really been that close since...\"\n\n\"Fucking Hell Debs,\" said Dave, \"What did your Mum do?\"\n\n\"She watched Harry like a hawk, but common to bullies the world over he just got cleverer and more sneaky. How's this for an example; he left the house for a sleepover at his friend's house, but climbed out of friend's bedroom window, ran through a whole mess of back gardens, used a ladder and drainpipe to get onto our conservatory roof and into Mum and Dad's room, snuck in behind me as I was doing my homework with my headphones on and whipped the chair from under me. My face hit the desk and I landed on my arse and bruised my coccyx. He laughed, slapped my face as I made to stand and left the way he came, and was running the back-garden steeplechase to his mate's bedroom window when Mum found me with a bloody nose, a red cheek and a sore arse when she came up to investigate the noise.\n\nDad was all defence for my Darling brother and even rang the friend's Mum to prove that Harry and best friend Julian had been in their room all evening and she could hear the bangs and bullets of the computer game they were playing. I'm pretty sure that Mum believed me and Dad had this weirdly proud smile on his face when I pointed out how Harry had got in and out undetected with the locked front door and everything. Dad said that I was showing off and trying to get Harry into trouble when he was clearly three streets away and playing with his friend and our house was locked up tight and secure because of Dad's 'job'. I was told not to cause trouble.\n\nThe next time he went to his mate's house I went straight to Mum and Dad's bedroom window and found it unlocked which was out of the ordinary; so I closed it, tight, just as Dad always did, and a couple of others.\" Debs had a bit of a smile on her face, \"I waited in the garage with a book, and an hour or so later heard him take the ladder from the side. I slipped out and saw Harry negotiating his way across the roof of the conservatory and once he was around the corner and out of sight, I quietly took the ladder away and hung it back on the garage where it always was.\n\nDad found Harry in the garden an hour later with a badly sprained and swollen ankle from when he'd landed badly trying to jump clear. I was long since back in my room doing my homework of course and only came down when I heard Mum asking him in a loud voice how the hell he had made it into the back garden when he was supposed to be spending the night at Julian's place, and how he had twisted his ankle so badly in a garden he'd been playing in since his fourth birthday.\"\n\n\"Sweet revenge?\" said Dave.\n\n\"No sadly,\" her palm went rigid on Dave's chest, \"about two months later I was walking home from school when I was jumped from behind, a bag put over my head and pulled tight and I was punched in the face, twice. Blacked both of my eyes.\" Her hand relaxed again, \"A neighbour found me and brought me home and the police were called. The neighbour said that she saw two boys in grey trousers and white shirts running down the street from me but couldn't see their faces. Harry wore black trousers to school of course. His friend Julian went to the Grammar and they wore grey but that wasn't mentioned.\n\nIt was written off as 'mischief' and the police promised to increase patrols and to do some work with the Grammar school and find out if anyone had 'issues' with kids from my school, the posh fee paying one. \n\nHarry came into my room that night with a cup of tea Mum had made for me,\n\n'How's the face bitch?' he said with a giggle and drank my tea, blowing pretend dust from his knuckles.\n\nI told him that I knew it was him, and his friend Julian, I could smell his appalling B.O.\n\n'Couldn't have been me Darling Deborah, I was working in the library revising, you can check the signing out book!' he got right in close to me, 'And you'll never be able to prove anything against me because I'm too fucking good! There is NOTHING YOU CAN DO ABOUT IT! Your arse is mine Darling Deborah; now you do as your told, keep your mouth shut and we'll all get along fine.' \n\nI didn't realise that it would get worse -- much worse.\"\n\nDave was waiting for the next part of the story when the shrieking bleep of one of the many electronic devices seeing them across the Atlantic commenced.\n\n\"Shit,\" said Debs, patting his chest then throwing the duvet off of them, \"winds up, need to re-arrange the sails or we'll end up in the Falkland Islands.\"\n\nAnd that was that; by the time the sails were sorted and they were making even greater speed across the reasonably choppy Atlantic, the sun had come up and they were back at their daily chores. \n\nHe couldn't complain really, those chores consisted of checking the batteries that were kept charged by a small wind turbine, but more than that the seven solar panels dotted around the upper deck area, so small as to be unnoticeable among the deck clutter and brilliantly polished decks. He even found himself polishing the brass portholes and various loops, hooks and bits and pieces dotted across the boat.\n\n\"So is Grumpy finally getting to like sailing?\" said Debs, lounging in the large stern well, not realising quite how fantastic she looked. As Lisa had once said, she did have great tits and a fantastic arse and the bright orange string-bottomed bikini she was wearing just emphasised it. \n\nShe had changed from her underwear into her bikini and looked fantastic, and he couldn't think for a second how she had done it without him noticing. \n\nLike a large ocean going recreational vehicle the 'Montego Bay' had a separate bedroom with bunks and a small bathroom with a shower and toilet and she must have gone into one of those. They had limited their showers to one every few days to save the water and more importantly the filters that they pumped water through, while the tanks full of fresh water that were topped up back in the Canary Islands were kept for drinking and cooking. OK perhaps she was more than growing on him, they were just over half way through their trip and they had settled into a routine.\n\nHe straightened from his polishing and wiping of the solar panels, and looked her up and down with an appreciative eye, following which he nodded his approval; she returned his look with a nod.\n\nHe made his way back to the well and dropped down into it across from her, and wearing his shorts already, removed his T-shirt.\n\n\"Well well, Grumpy's tan is improving!\" she said looking him up and down this time, AND she was obviously liking what she was seeing, \"you've shifted a few pounds since we've been working this trip.\"\n\n\"Didn't eat for the first week if you remember,\" he looked at her trying to be stern, \"Working?\" he sat straighter, \"no one said I was going to be working, wouldn't have come if I'd known.\" She smiled at his joke, he smiled back. \"You look fantastic by the way,\" he said.\n\n\"What?\"\n\n\"In those bikinis,\" he said hoping she wouldn't think him inappropriate, \"If you were going for the gorgeous, confident yet still sexy yachtswoman, you nailed it sweetie.\"\n\nShe flushed, but with a really sweet smile to go with it.\n\n\"I was actually going for the practical, easy to pack, 'would normally be sailing through to the Caribbean naked if I wasn't sharing a yacht with the nice bloke from the office' look.\"\n\n\"That's probably another great look,\" he grinned, \"Please, if you'd be more comfortable...\" she pursed her lips trying not to smile, \"I'll get the tea shall I?\" he said.\n\n\"Let me,\" she said standing straight and turning her fine arse to him. He grinned, just as she looked back at him, shaking her head.\n\nAnd that was how it went. He wore shorts and occasionally a T-shirt while she wore one of five bikinis. All of which held her in place and shaped her beautifully. Occasionally she would roll out a mat and lay flat to lose the faint tan lines she had on her back. He would rub sun screen onto her back and she would do the same for him. They got closer, as friends initially with just an air of sexual tension between them as they lounged around in swimwear before dressing, adding the occasional T-shirt as the evenings cooled.\n\nAs he slowly warmed to sailing she told him how she had got into the sport then the lifestyle.\n\n\"My parents were both into sailing, how they met in fact, at some joint services sailing club in Cyprus where he was based and she was teaching at a service school. We all grew up with it and went down to our yacht in a really quiet little marina in Hampshire, sailed all around the Solent, knew bits of the Isle of Wight and Lymington in the New Forest better than I knew the town Daddy was based in. Soon as I graduated Dad got me involved in his charity work with the veteran's of course, he did credit me with half of his knighthood in his interview speech.\"\n\nShe talked more about her Father with that same guarded tone she used for her brother; her elder sister and brother were very much 'his' children and fiercely independent while she was Mummy's Girl and more feminine and less competitive.\n\nHis degree level psychology started to kick in and the nasty manager he'd met in the office started to make sense. She'd been raised like it, and her lack of self-confidence was better explained in the way that she dealt with people, in her 'its my way or the highway' attitude to her occasionally poor decision making. \n\nHe felt himself having slightly more patience with her and she eased up on him, and herself for that matter, and her teaching him to sail improved by leaps and bounds. They became 'friends' and life was much nicer for them both and there was even some banter in their dealings, and the looks they shared across the boat, the well deck and the dinner table.\n\nAs if to improve his mood he was finally able to use the built in camera in on the deck, and have a satellite skype chat with Kathy his daughter who was really pleased to see him and talk to him. He brought out the tablet computer and connected it so they could all see each other.\n\nHe got through quite quickly to the Worldsail HQ where his daughter had been brought by his parents. Her pleasure at their first chat in weeks was obvious and she seemed even more impressed when he introduced his crewmate Debs, who walked behind him to get to the cabin. With the change in the weather he was shirtless and Debs was back in a bikini.\n\nDebs stopped and bowed down to get into the picture in the top right hand corner of the screen and smiled, her great cleavage more than evident as she grinned at his daughter and waved.\n\n\"Wow Daddy, you have a really great tan!\" said Katherine, then after Debs had gone back out on the deck, \"Who is that!?\" she whispered\n\nHe was shocked that his fourteen year old daughter could have such thoughts about him as he sailed across the ocean.\n\n\"That's Debs,\" he said, \"You met her before we sailed.\" He said with grin.\n\n\"Not looking like that I didn't!\" giggled his daughter.\n\n\"Yeah well, it's much hotter now.\"\n\n\"And so is she!\" hissed Kathy with a giggle, \"Lucky old Daddy!\"\n\n\"Don't worry Kathy,\" said Debs reappearing at his shoulder, \"We have other ways of keeping cool...\" with that she emptied a bucket of freezing sea water over him. Katherine screamed with laughter at this nice lady having such fun at Daddy's expense. To make matters worse she sat on his lap and took over the conversation, and arm around his neck and chatting sweetly with his daughter. \n\nAfter a while he put an arm around her and just let it go, chatting about the voyage, the weather, the food that was just starting to get boring and his desire for a roast dinner. After thirty minutes of chat all three were blowing kisses to each other and saying goodbye until later, Debs insisting that in less than two weeks he'd be skyping her from Jamaica and then flying home. They disconnected the cable and went back into the cabin as the evening cooled.\n\n\"Your daughter is lovely,\" Debs said.\n\n\"I think so,\" he grinned proudly, \"the image of her mother.\"\n\n\"I'm guessing that you lost her to cancer seeing as Stuart is sponsoring Cancer Research.\"\n\n\"Yeah,\" he said, \"ovarian, had gone metastatic before they'd even found it.\" He sighed, \"But that's life isn't it.\"",
        "\"Yeah,\" Dave was waiting for the apologetic recognition, instead Debs smiled, \"Took my Mum as well in the same way.\" She looked out to sea, \"Well, I think she'd be very proud of what you're doing Dave,\" she stood and stroked his hair and kissed his forehead.\n\nThe weather changed and had them locking down the boat at night, bringing down all the sails and just drifting. She suggested that there should be someone on watch at night and he offered to take the majority of those night time shifts so she could be awake during the days when the real sailing was required, with the few occasions when she would go to bed first and then change over, what the Royal Navy referred to as 'Hot-bunking', they avoided the busy sea lanes alive with container ships and the occasional liner, not seeing any other living thing for days. It was one awake and one off as they went through a single busy patch of ocean she couldn't avoid. \n\nShe would set the alarm and they would take four hour watches, with a bit of a handover as one woke and the other prepared for sleep. She took to pecking a kiss on his cheek when it was her turn to sleep, and he had to confess that he missed sleeping with Debs; her warm body against his, that sound of another person breathing, even the occasional wake up moment when he would just watch her sleeping in the gentle light cast by the various bits of equipment responsible for their direction and tracking their slow progress across the Atlantic.\n\nIt was also keeping them in touch with the rest of the world by radio and satellite and they reported in each day. He was pleased that at the beginning of their third week the weather changed, the sun was back up, sails were at their maximum and they were making up for the lost time and it promised to be another few nights of remote control sailing relying on radar and satellites to keep them safe.\n\nThat night when they made the bed she stayed in her bikini insisting that the sea lanes were getting close, the nearer they got to the Caribbean but the radar was clear and while he knew he should go on deck he didn't want to. He'd scoured the horizon and there was nothing around them for as far as he could see, that in this clear weather had to be twenty miles.\n\nHe just wanted to be in her company. He really liked the way that she just curled up with him wherever they were, on the sofa, on the large seat on the stern well or even better when they lay down together and she just raised his arm and pulled it around her.\n\nHe lay down on the bed, and she stirred seeing him there and grabbed his arm as they generally did on those occasions they could sleep together. He slid closer to her and felt her face brush against his. He saw that her eyes were open and without even thinking about it kissed her before she could ask why he wasn't on deck.\n\nHe was waiting for the tirade but it didn't come. Not only did he not get the tirade, she kissed him back and soon she had her arms around his neck and was pulling him to her.\n\nIt was great and soon he was hands all over her, as soon as he touched her bottom she flinched away from him.\n\n\"Easy Dave,\" she said, \"I... I just need a little time to get my head around... this.\"\n\n\"OK honey,\" he said, \"no rush, hand strictly above the waist, honestly.\"\n\n\"It's complicated...\" she said.\n\n\"No problem,\" he said, \"Can I keep on kissing you though?\"\n\n\"Yeah,\" she said with a soft smile, \"think you'll get away with that.\"\n\nThey kissed and cuddled some more, with Debs purring softly at his caresses, while he struggled to control his ardour and desire. They cuddled some more falling asleep as they did so.\n\nHe slept with her in his arms, really enjoying the warmth. He woke to the sound of her scream in his face.\n\n\"Debs, honey, whatever's the matter?\"\n\nShe leapt from the bed, probably still slightly unsure of where she was and what was going on. The boat lurched and she had to put a hand to the bulkhead to steady herself was obviously enough to ground her.\n\n\"Another bad dream,\" she said sitting back down on the bed.\n\nHe reached for his water bottle and handed it to her.\n\n\"What to talk about it?\"\n\nShe looked very undecided, and her bottom lip gave a bit of uncontrollable wobble.\n\n\"No, I don't think I do,\" she said.\n\n\"Oh,\" he said, remembering their heart to heart of a few nights previously, and expecting her to carry on from where she had left off with his brother's very systematic bullying of her, \"Come here honey, back to sleep now.\"\n\n\"Sorry Dave,\" she said, \"I'll just get some fresh air up top.\" She rolled out of bed and away from him, opening the hatch and letting in the fresh salty air.\n\nFor the rest of that day she was more distant that she had been since they first started. He smiled as she came out on deck in one of her great bikinis, after only a few minutes she went back inside and returned in a T-shirt and shorts and even though it was the sort of weather she had lived for since they set out she stayed covered up.\n\nShe rarely spoke during meals and then only a few words, and he hated it.\n\nHe came up with a plan.\n\nIt was bright warm day and she was head down and into the charts and the satellite equipment, and next they were undertaking a tack, and he took his chance.\n\nThe boom thing she had made so much noise about flew across the boat and instead of ducking as he had for the last few weeks he grabbed it and went with it, sweeping him over board and into the Atlantic.\n\n\"DAVE!\" screamed Debs seeing her crewmate fly into the water. \"MAN OVER BOARD!\" she screamed to no one, grabbing the floatation device at the stern.\n\nShe threw the ring as far as it would go happy that it landed just over and behind him, fortunately for him he had somehow managed to grab a thin rope and was pulling himself towards the boat with it.\n\n\"DAVE! DON'T LET GO!\" her face was a picture of pure panic, \"PLEASE!\"\n\n\"It's OK,\" he shouted back pulling at the rope and getting momentarily closer to the boat that was still shifting through the water, and she pulled a couple of lines and the sails fell around them and the boat slowed.\n\nAs he got closer to the boat she reached down and grabbed at his hand and pulled at his arm, again with an air of desperation.\n\n\"Dave!\" she panted as he was almost out of the water, tears pouring down her face.\n\n\"Hey Baby, it's OK,\" he said as he pulled out of the ocean and back to the safety of the boat.\n\nShe hugged him pulling his wet body close to hers, feeling the cool water soaking her T-shirt.\n\nShe wiped some beads of water from his face, looking into his eyes and finally kissed him, pushing her face hard into his.\n\n\"Why Debs, I didn't know you cared!\"\n\n\"What?\"\n\n\"I was rather getting the feeling that you'd rather gone off of me, at one point I thought you might actually let me drown.\"\n\n\"But you said you couldn't swim!\" she howled clouting his shoulder, \"you said...\"\n\n\"Of course I can bloody swim, you don't think that I'd sail the Atlantic if I couldn't swim did you?\"\n\n\"Bastard!\" she growled at him, \"I think I aged a few years in those seconds you were in the water. You said...\"\n\n\"That was because I just didn't want to come on this bloody trip!\"\n\n\"And you didn't think of telling the captain that...\"\n\n\"Captain?\" said Dave, \"What's that make me, first mate?\"\n\n\"It makes you the other person on the trip. I need to know whether you can swim in the same way I need to know if you're diabetic, or epileptic. It's important,\" she growled at him again, \"Dickhead!\" she grinned at him for the first time in days.\n\n\"Sorry Debs,\" he said thinking how he could turn this to his advantage, \"I'll pop down and get changed,\" he stopped, \"Ah fuck it, the sun is up, I'll dry off here.\" He stood up, stripped out of his wet T-shirt and trousers, standing in just his stretchy boxer shorts.\n\nShe looked at him seeing his tanned hairy body, lean and muscular and she approved; for the first time in days.\n\nAfter a few slugs of water to rinse out his mouth, he drank some.\n\nShe looked at him again, her face flushed and her heart pounding. Dave saw it and sat down in the stern well pulling her down to sit next to him.\n\n\"Debs,\" he said looking across at her, \"Honey, we were getting on so well then... well I thought we were really getting along, then... then it all went wrong.\" He touched her cheek and she closed her eyes and rubbed her face. \"Whatever I did I'm sorry, I will do anything to go back to how it was,\" he moved his face closer to hers, \"Just tell me honey, whatever...\"\n\n\"It's not you Dave...\" she began.\n\n\"Then let's work through it, together. I thought we were doing quite well, and...\"\n\n\"We were,\" she said, \"I was starting to have real feelings for you and it brought it all back, when I was younger...\"\n\n\"Are you sure about this Debs?\" he said, \"they are trained people back home...\" He knew, his wife had been one of them.\n\nShe nodded, the tears starting to run down her face.\n\n\"Harry...\" she blubbed, \"That bastard brother of mine used to interfere with me, he would come into my room and...\" her face was a mask of horror and long stored fear.\n\n\"Debs Baby,\" he said gentle hands on her shoulders.\n\n\"I have to Dave,\" she said keeping her resolve, \"I have to shift this, I have to get it out into the open and purge my soul. This secret has been destroying me for too long.\"\n\n\"OK Honey, let's do this, get it all out. I can't think of a better place to leave it than in the middle of the Atlantic.\"\n\nSo she started.\n\nHer mother had developed pancreatic cancer, and just as it had with his wife a few years before it had already sentenced her to death before it was even discovered. Debs still felt that without the diagnosis her Mum probably would have lived longer, because she went down hill so fast after they were told the terrible news.\n\nThey stopped attending school as Mum's condition deteriorated and Debs spent every available moment with Mum and her older sister back from University while Harry spent his mother's last days in town, going to the army cadet hut or to Daddy's Regimental Headquarters where he was based following the end of his tour with the SAS and the end of his command of the 1st Battalion of his regiment and where Daddy spent most of his time. The Colonel took some days out of his hectic schedule to watch his wife die.\n\nMum died, in her own bed with her family around her, but for Harry. He was downstairs watching TV despite his big sister's admonitions, while their father insisted that Harry was just 'grieving in his own way, which was not all so it seemed.\n\nThe funeral happened and for once was nothing to do with the army, although Daddy did wear his uniform, despite Ellen and Debs asking him not to for once but, after all, they were only bloody women.\n\nEllen went back to University to catch up with her studies, leaving teenagers Harry and Deborah at home on their own, old enough to take care of themselves now surely insisted Daddy.\n\nTo Debs it seemed that the death of their Mother inspired something in Harry but he did nothing about it for a few weeks. \n\nLike all bullies he was fired by her reaction, or lack of it and left to his own devices his mischief started as just that. Tormenting his younger, smaller sister still grieving for her beloved Mum, the person that had railed him in and kept a lid on his excesses. The verbal bullying moved into threats of violence and eventually became real violence during that first weekend that their father left them on their own when he went away with a reserve unit of his regiment.\n\nShe came home from school to find the note from Daddy telling them that he was away and that there was plenty of food in the fridge and he would see them both on Sunday evening.\n\nAt the bottom of the note, in Harry's obvious and quite immature script and word usage, was a P.S. telling her that she was to do what Harry told her. She argued that it clearly wasn't written by Daddy and she as going to her room to finish her homework.\n\n\"Not until you've cooked my fucking tea,\" said Harry, sounding every bit like their father.\n\n\"No w...\" she started say but was cut short by his angry face and the back of his hand hitting her face. She sat stunned, that had quickly become his signature move.\n\nShe ran to her room and away from him. She came downstairs later to make herself a sandwich and there he was in the living room, lounging in Daddy's chair,\n\n\"Where's my fucking tea woman,\" he said waving an empty cup at her.\n\n\"Still in the cupboard I expect,\" he stood up with a snap, and she felt the first of the real fear that she had for Harry. \"L...look,\" she stuttered, \"we both had a meal in school today so a sandw...\"\n\nShe feel the pain in her cheek again as he stepped across to her at speed, \n\n\"I might want another main fucking meal,\" he snarled again.\n\n\"Cook it then,\" she snarled back again, waiting for a further blow to fall.\n\nHarry was really angry at his sister's lack of respect for him, something their Father insisted on and had done for many years. He raised his hand as if to slap, then laughed at her flinching, and while she concentrated on his raised hand, he punched her square in the face and she dropped instantly. \n\nShe stayed hungry in her room pretty much until her Father's return, showing him her black eye.\n\n\"Oh yes,\" said Daddy, \"Harry told me you caught your face, that looks nasty.\" He folded his arms with a whimsical smile, \"you really should take more care going around the house.\" Her face flared, \"look, don't try and make out that Harry did it,\" he said with a raised finger, \"he's already told me that you had a falling out over whose turn it was to cook, so none of your shit Miss Deborah!\"\n\n\"He punched me!\" she exclaimed.\n\n\"And why would he punch a little girl for heaven's sake? He's a gentleman!\"\n\nThat was that. Harry was stood behind his Father, silently holding his sides and laughing at his sister and rubbing his knuckles. Worse still he now knew that he REALLY could do anything he wanted to her and his chances of any kind of retribution was almost zero. He would now hit her whenever they were alone or at the very least out of sight of their father.\n\nAfter his physical assaults and the lack of any sort of response or even recognition from their father, Harry had started to 'grab her', to grab her in a way that made her really uncomfortable mentally as well as physically.\n\nIt started as the occasional painful squeeze of her firm boobs, and grabs at where he figured her nipples would be. She grabbed back once and cried out, he punched her just as her Father entered the room. She told her father, already knowing what he would say. He shook his head and walked out of the room mumbling 'women' and sighing once more.\n\nHarry could still do no wrong it seemed. The perfect Harry, the man that would take the Conroy family name on to even more greatness, to be the next Colonel Conroy. \n\nNot only did her father not see his bullying, he actually made things even worse for her.\n\nAided by his three weeks out of lessons while his mother died, he was now really struggling in the crammer college he'd been sent to after failing to get the necessary grades to get him into the army as a private soldier let alone the Royal Military Academy Sandhurst. Believing that it was because of his mothers death, his previously doting father finally started to come down on him for something. This just led to Harry's rage increasing and of course she suffered for it.\n\nHer school success was just something else for him to resent her for. Their eldest sister Ellen was already at University and unaware of what was going on at home and as she headed towards a master's degree her successes affected no one.\n\nIn the same way Debs learned not to talk about her high grades as it would just be something else that annoyed her idiot brother and would just result in more pain for her. Her Father blew it for her again by telling Harry he should be more like his clever sister Deborah who had scored so fantastically in her latest exams. She hid in her room for a week, sneaking out for her cold meals, if her father hadn't already thrown them in the bin.\n\nHarry had finally cornered her in the kitchen as she wolfed down her food, and unable to put down her plate he pinched, punched and jabbed at her and she cried out.\n\nHer father came silently into the room and saw what her laughing brother was doing.\n\n\"Now then Harry, I don't think that Deborah wants you to tickle her!\"\n\n\"He's NOT TICKLING ME DADDY!\" she howled, \"he's pinching my... my breasts.\"\n\n\"Deborah!\" shouted her father, \"you will not use language like that in my house, what would your mother say!\"\n\nThe misery of her life and the usage of her late mother's disappointment in HER was enough and she ran away crying. \n\n\"Women...\" sighed her father.\n\nBut his educational problems continued; Harry had finally come up against something that his bullying and scheming couldn't alter. No matter how much he growled at or about the school teachers about his low grades and threatened his classmates, in that silent room full of chairs, desks and younger, silent, university-bound college students it was just him, his memory and the exam papers and it wasn't going to end well. He blew his mock exams to such an extent that the college wasn't minded to put him up for his second time around, second year of college study, not confident that he would get enough to set him up for any university let alone Sandhurst.\n\nHer father paid for private tutors in every available minute and it suggested some light at the end of the tunnel but her possible freedom was at risk because of Harry's stupidity and she saw her misery continuing until he was gone off to Sandhurst.\n\nSo she made the decision to help her brother pass his exams to get shot of him. So two nights after her father's passing off of Harry's last assault she entered his bedroom with some notes books.\n\n\"Well well, the genius Deborah comes into my room,\" he said, \"to what do I owe this great honour?\"\n\n\"To help you pass your exams Harry, nothing else,\" she said.\n\n\"I don't need you fucking help you ugly fucking dyke,\" he sneered.\n\n\"I beg to differ,\" she said.\n\n\"Well... well what's in it for you?\"\n\n\"Harry,\" she said looking annoyed, \"if you don't get into Sandhurst, I have a real concern that Daddy will insist I go.\" She folded her arms, and only subconsciously noticed him looking at her breasts raising up, no way was she giving him the satisfaction of knowing how much she hated him being in her life.\n\n\"You? Get into Sandhurst?\"\n\n\"I've got more chance than you have right now!\" she snapped back at him.\n\n\"OK,\" he said, \"try me.\"\n\nShe had read his reports from both the specialist tutors and the private teachers, and suggested a different lesson each night, staring with mathematics. He insisted that she always sat in her bedroom, in the same chair and he sat in another with his note pad on his lap. She could not understand why, he never took notes.\n\nInto their second week she asked him when he was likely to start trying to study. He laughed, \n\n\"Never, you dumb bitch!\" he rocked back in his chair, obviously pleased with his own cleverness, \"you're sat there just so I can stare at your big tits. The sunlight goes through the window there and makes your blouse and those tiny bras you wear virtually transparent!\"\n\nShe looked down. It was true, her large red nipples were very apparent as the hopelessly small bras she had long since grown out of and that barely covered her nipples at the best of times and had rode down as she had sat there; and probably had done for the last few nights. She had told Daddy that she needed new bras but he had just said that as soon as Ellen came home at Easter, she could buy her more. Now her obnoxious brother was taking advantage of the fact.\n\n\"But look what a great effect your shitty body has had on me!\" he said reaching down and pinching the material of his trackie trousers around his erection.",
        "She pulled her cardigan across her and stood, but he grabbed her and pushed her back down. She hit the arm of the chair she had been sat on with a cry and rolled off of it and onto her bed, pain in her bottom from the hard arm of the chair.\n\n\"Where do you think you're going?\" he said standing up and over her, slapping her bottom hard, again sounding like a younger and far more terrifying version of their father.\n\nHe ripped at her white blouse and several buttons pinged off in various directions, her hands across her almost bare boobs. She made to stand again, but Harry slapped her face and she put one hand to soothe it.\n\n\"There,\" said Harry reaching out and touching her now bared right breast, \"that's much better, we can all see what's going on now can't we.\" He grinned evilly, \"the dog can see the rabbit, or in your case the rabbit can see the ugly fucking dog.\" \n\nHe reached out and pinched her bared nipple, and it was agony.\n\nShe covered it and tried to comfort it at the same time. He pushed his face down and an inch from hers and growled and she could smell his foul breath, \n\n\"Take... your... fucking.... hand... away,\" he said in his best army voice. She shook her head with tears in her eyes. He slapped her face again and she began to cry. \"Mummy's not here to save you now you stupid fucking bitch,\" he slapped her other cheek, and she moved both hands to her face now trying in vain to cover her breasts with her elbows. \"Darling Daddy believes everything I tell him Deborah, haven't you noticed?\" he said with a psychotic smile, \"EVERYTHING!\" He giggled, \"So why don't you just phone him and tell him what's going on,\" their father was away with another training exercise, \"Gonna?!\" \n\nHis grin was now challenging and hateful. He put his hand to her bare breast and squeezed, gently at first then as his passion and his power increased he mauled her, with both hands on both breasts as she sat in fear. \"Yeah, you fucking know it, just a fucking woman, second class citizens in THIS house!\" he said with triumph. \"Ooooh look at Deborah's nipples! Both rock hard! She obviously likes having her big tits played with, well it's just too fucking lucky that I'm here to do it for her.\" His use of the third person while she was still there made her shiver, and break eye contact with him. \"Glad that you know your place,\" was all he said in response.\n\nHe pulled at her bra, but unlike in the movies it didn't give way, it just resulted in her whole body coming forward and her face impacting on his. He hit her again, calling her a bitch and pinching both nipples and making her cry out for the first time.\n\nHe bored with her tits and her terrorised, rigid, unresponsive stare as he played with what he considered his latest toy. He got right into her face again.\n\n\"OK bitch,\" he hissed, \"this is how it's gonna be from now on,\" he sat back in his chair, his erection straining in his trousers, \"I'll be coming into your room each night once that fucking housekeeper has gone, so we can play!\"\n\nDad had hired a housekeeper, the large mid-fifties lady that put up with no shit from either of them and in doing so provided only temporary respite from Debs torturing sibling. \n\nDebs just knew what father thought especially when his Golden child Harry said it. \"You'll say FUCKING NOTHING!\" He slapped her face one last time to get his message home, \"no one will believe you any fucking way, I mean,\" his voice dripped scorn, \"who'd think I'd be interested in a fucking ugly dog like you? Hmm?\"\n\nShe couldn't speak such was her terror.\n\n\"You already know that Dad won't believe you, Mrs Moffatt definately won't; she already thinks you are a stupid stuck-up, smart-arse bitch, she told me.\"\n\nThat was a lie and Deborah cursed herself later for not believing something that obviously made up.\n\n\"You're 18 years old and legally allowed, you're my little playing thing now Deborah and don't you EVER FORGET IT!\" he kissed her red cheek, she almost screamed. He broke the terrifying silence by laughing and slapping her cheek again.\n\n\"I should have put my coat on and gone straight to the police there and then but...\" she sniffed and took the tissue that Dave handed her, \"But Harry was right, Daddy would have done anything to save the family name and to make sure that Harry got into the army. So I repaired my blouse, put cold flannels on my cheeks to bring down the redness and cried myself to sleep hoping that the redness would be gone by the time Mrs Moffatt got back.\n\nI hoped that he would just get bored with me and go out with Julian like he normally did two or three nights a week,\" she shook, just once, \"but no, he stayed in, and Dad thought it was fantastic that he was showing so much dedication to his studying. Sadly it was me he was studying, and in great detail.\n\nHe did his homework well, looking at Dad's porno mags he'd found under his bed, and learned all kinds if things about female anatomy that he could then check out on m...\"\n\nHer face screwed up in misery, and she had to look away from her caring confessor as the memories that had been haunting her for twelve years flooded back.\n\n\"He ripped my nightdress off and mauled my boobs, he stuck his fingers into my... vagina, he was so... brutal that in just that moment he broke my hymen and I bled. I phoned Ellen in tears and tried to tell her, but I was just too ashamed of what I'd let him do to me.\" She hugged herself tighter rocking slightly, \"he told me constantly that no one would believe me, that I was so fucking worthless that it was actually my fault...\"\n\n\"What did your sister say?\"\n\n\"Nothing, I think she just thought it was poor little Deborah still crying about Mum, so she told me it would be OK and that she had to carry on with her studying.\" She steadied her breathing again, \"next night him came into my bedroom with a box of condoms... and he... he...\" she gulped, forcing herself to confront her memories, \"he made love to me.\"\n\n\"NO!\" said Dave, looking into her face, \"don't confuse what he did to you with love!\" He put a hand to her face, \"that bastard fucking raped you Debs.\"\n\n\"But...\"\n\n\"Did you want him to?\"\n\n\"Of course not,\" she spluttered.\n\n\"Then that psycho bastard raped you honey, nothing less.\"\n\nShe took a deep breath, her hard fought realisation giving her some strength now, \"He raped me,\" she said, her sad face taking on a new firmness. She set her jaw angrily, \"that bastard fucking raped me.\" She wiped her face, \"and he went on to do it five more times, always when Dad and Mrs Moffatt weren't around...\"\n\nIt was agony and had none of the passion that the films and TV had led her to believe. It was just pain and misery, and she learned that first time to lay there and let him get on with it.\n\nThe next night he came back dragging her nightdress off over her head and this time getting her to lay on her hands and knees like he'd seen on the internet porno he'd watched on Julian's laptop.\n\nAfter that one she begged him to stop, pleading that they were brother and sister and this kind of thing was against the law.\n\nHe slapped her face again in fury, as if her pointing out the obvious truth to him was ruining his leisure and pleasure. She pulled away from him and his now soft condom covered dick, and he looked concerned as if the ramifications of his abuse of her had finally come home to him and the kind if shit he could get into.\n\nHe stood, collecting his PJ's and throwing her nightdress at her, babbling that he would tell their father that she had asked him to do it; after all who would actually WANT to screw such a Fuck ugly bitch like her. He then threatened that he would then tell everyone at the school he had gone to as well what a fucking whore his sister was and because everyone thought he was such a great guy they would believed him while she'd just be the slut that had gotten her own brother to fuck her.\n\nShe was in so much fear of him that she actually did believe that it was her fault for letting him do it to her and that she was as worthless as he told her she was.\n\nHe did nothing for another week but the lack of punishment from anyone made him bold again, and the moment Debs heard Mrs Moffatt's car pull away he was pushing her bedroom door open and standing before her again, naked, aroused and with that terrifying look on his face.\n\nHe raped her twice more that week, having to stop when their father was home for the weekend, but recommenced his attacks on the Monday evening by which time Mrs Moffatt could smell a rat, or at least the mess he made when he raped his sister.\n\nThe next night he left a note for Debs telling her not to wear a nightdress ever again because it meant he could use her whenever he felt like it, '24/7 - 365' -- another of her Father's stock phrases. Fortunately for her she kept it.\n\nShe did what the note said, throwing the clean one put out for her straight into the laundry basket unworn, something else to make the housekeeper suspicious. \n\nHe paraded into Debs bedroom like a prize fighter preparing for a match, telling her to get her arse in the air. He tore the condom open throwing the packet at his victim with a cackle, not seeing half of it fall down beside the bed. This was to be the next piece in the puzzle. \n\nAs he began what was to be his final violation of her he pushed a finger in her arse insisting that the next night he'd put his cock up there and have his first anal, no condoms needed, just Vaseline and there was plenty of that in the medicine cabinet. Just the thought of that act making him come very quickly, quicker even than his usual half a dozen short strokes, and he pulled out the condom slipped dripping his semen onto the edge of her bed.\n\nIt was the housekeeper that finally put a stop to it. Being a lady of a certain age she could detect the odours and marks left by sex and felt that they shouldn't be appearing in a just eighteen year old girl's bedroom - especially one as quiet and mousey as Deborah. The final clincher was when making beds she found half of a tiny foil packet marked 'Durex' so carelessly thrown aside by the user and now caught between the mattress and the base. A search of her brother's bedroom and the top of his wardrobe showed not the box, but a paper bag from a chemist and a receipt for two boxes of contraceptives.\n\nShe confronted Debs who said that she didn't know anything about it at first. Mrs Moffatt could only see fear in that pretty young face, not deceit.\n\nThen under more intense questioning (the housekeeper was a mother and grandmother and well versed in such things) Debs broke down and confessed that Harry had been abusing her for almost three months and had finally forced her to have sex with him.\n\nSat in the poor weeping girl's room hearing of her torture, the housekeeper took Debs into her arms, seeing the shock and the hurt and promised her it would be OK. She took Debs to her father as soon as he returned two hours later and told him what Debs had told her. Harry was noticeable by his absence, knowing that with Dad and Mrs Moffatt at home, there wasn't going to be any fun to be had, that was for sure. \n\nHer father was angry and disbelieving but Mrs Moffatt didn't give a fuck if he had dropped into the jungle from a helicopter, had killed Iraqi soldiers with his bare hands, had been presented with the Distinguished service order AND the Military Cross from the Queen herself, the truth was his son had been systematically abusing Deborah for months.\n\n\"Rubbish!\" he snapped arrogantly, as if such a thing was impossible. \n\n\"His crappy hand writing, yes?\" Mrs Moffatt held up the nightdress note. The Colonel gazed at it, squinting without his glasses.\n\n\"Looks like it,\" he said matter of factly.\n\n\"Read it...\" snarled Mrs Moffatt.\n\n\"What does it...\"\n\n\"FUCKING READ IT!\" screeched his petrified daughter.\n\nHe snatched it from the housekeeper's hand, looking angrily at his daughter after her outburst and lack of respect, but decided not to take her to task on it until this rubbish about his son was sorted out.\n\n\"This... this could mean almost anything...\" said her Father. \n\n\"\"Yeah,\" said Mrs Moffatt, \"perfectly natural for a brother to write a note telling his sister she must go to bed naked so he can get to her whenever he wants to, must have had HUNDREDS OF THEM...\" she snarled.\n\n\"IF that's what this means,\" said the Colonel re-reading the four lines of scruffy text desperate to find an extra meaning over the obvious 24/7 365 quote He shook his head and handed the note back, \"could mean anything...\" he said.\n\n\"And this receipt for condoms in his bedroom, and this wrapper, I expect young Harry took his girlfriend into Deborah's room perhaps?\"\n\n\"He might well have done,\" he snorted grasping at this straw, \"How do you known he didn't? Huh? Huh? Answer for that one?\"\n\n\"Oh for fuck's sake,\" the now fuming housekeeper put her arm around the weeping girl.\n\n\"Why didn't she damned well tell me?!\" he demanded, \"I'm not that much of a monster!\"\n\n\"You fucking are!\" said Mrs Moffatt.\n\n\"Get out of my house!\" he demanded, \"you're fired!\"\n\n\"OK,\" she said, \"But I'm taking your daughter with me.\"\n\n\"How dare you!\" he snapped.\n\n\"She needs protecting!\" snarled the angry housekeeper.\n\n\"And you obviously don't think that I'm capable of doing that?\"\n\n\"Not been so bloody brilliant at it so far have you?\"\n\n\"IF what Deborah says is true...\" he began.\n\n\"FUCKING IF?!\" screamed Mrs Moffatt.\n\n\"Get out!\" Daddy snarled again.\n\n\"I don't think so Colonel Conroy, it worries me that after everything you have been told, you're still more worried about getting me out of the house than checking on her wellbeing.\"\n\nIn the biggest but thankfully final act of ridiculousness in the whole thing, her father stepped forward and checked from Deb's shoes, up to her face and neck, smiling at her as if that inspection would be sufficient.\n\n\"People rarely get raped via their feet Colonel Conroy,\" said Mrs Moffatt.\n\n\"Is this true Deborah? Did Harry ra... did you and Harry have sex?\" Debs was crying, and nodding her head.\n\n\"JUST LOOK AT HER YOU FUCKING IDIOT!\" screamed Mrs Moffatt, \"does she look like she consented to that idiot thug son of yours?\"\n\n\"How dare you!!\" Dad snapped again.\n\n\"Oh for God's sake,\" she said, \"Debs, come with me sweetie, I'll take you to the police station.\"\n\n\"You'll do no such thing!\" said her father standing up and standing over the fuming Housekeeper, \"Get out of my house!\"\n\n\"Not without Debs,\" she said, the first person ever to stand up to her Daddy since her mother had died, those terrible months since.\n\n\"GET... OUT!\"\n\n\"NO!\" The housekeeper was face to face with the Colonel and not about to back down. Her father took a firm grip of his daughter's elbow and she flinched. The impasse was not looking good and the Housekeeper decided to up the ante just a bit. \"OK Colonel,\" she said, \"I'll leave, but the police will be here in an hour, forty five minutes if I speak to an inspector, they'll call the Military Police of course and then... well... we'll just have to see won't we?\" The room was silent, \"Well Colonel?\"\n\n\"Perhaps it's better if she goes away with you for an evening or two while I get to the bottom of this. I'll speak with Harry and see what he has to say about this... this matter.\"\n\n\"Come with me honey,\" said Mrs Moffatt putting an arm around her and leading her out, picking up the already packed bag in the hallway.\n\nWith his father home there was little opportunity for Harry's latest pastime, so he stayed later at college, hung around the shops now being too old to be at the cadet hut, or stayed with Julian who was home from the University he was now studying at. This day was no exception and the Colonel had waited in all day to speak with his son.\n\nHe was busy re-reading some training schedules when there was a knock on the door.\n\n\"Mr Conroy?\" said a woman he recognised but could not for that moment put a name to. The mother of the children's friends he guessed, after all that was always his wife's department.\n\n\"Yes?\" he said with his best commanding officer smile.\n\n\"Err... I'm really not sure how I should put this, my name is Hawtson, Michelle Hawtson, Julian's Mum?\"\n\n\"Oh yes, Julian, Harry's best friend! Talks about him all the time!\"\n\n\"Yes,\" she said guardedly, \"Look, Mr Conroy... can we talk about something... err...\" she looked flustered, \"might I come in for a moment?\"\n\n\"I suppose,\" the Colonel stepped back into his oak panelled hallway.\n\nShe took a deep breath,\n\n\"I was about to take Julian's laptop computer to have the CD drive repaired,\" she held up the offending machine, \"my own fault, I was using it to watch a DVD in the kitchen and it broke down, well...\" she tried to smile but gave up, then took another deep breath, \"I was just about to back it up to our main PC when I found these pictures,\" she opened the laptop and pressed a few buttons, and within seconds there were several shots of a naked young girl he didn't immediately recognise in a room he did. Perhaps this was the girl that Harry had...\n\nSuddenly he recognised the girl as well; pale, thin, red eyed and red cheeked, there was his youngest daughter Deborah, scared eyes miserably peaking out from under heavy eyelids.\n\n\"But... that's... that's Deborah!\" he said in disbelief, adding, \"my daughter Deborah,\" as if that aspect had only just come to him. \"What the hell has your son...\"\n\n\"It's not just my son Mr Conroy; trust me, it gets worse...\"\n\nShe handed him the laptop and he took it, reading the poorly written and spelled blocks of text above, below and around the pictures of his daughter, and the words he read were so much like his own, right up until he got to 'slutty teen whore Debbie after I finally got a grip of her...'\n\n'Get a grip'; like '24/7 -- 365', it was one of his favourite motivational phrases and one that Harry had cultivated the use of since he'd pulled on his army cadet uniform some seven years before. \n\nThe written word got worse as the narrator laid out his plans for this girl's future and it read like a porn story -- a porn story he recognised. It was almost word for word one of his favoured passages from a book from his collection safely hidden under his bed, or not perhaps.\n\nLieutenant Colonel Henry Conroy MC DSO, mostly unsung hero of the nation, fighter of wars on many fronts for his Queen and Country moved back to the staircase and slumped on the bottom few steps, the laptop computer slipping from his hands to land two steps down but undamaged, the face of the girl he loved so much staring miserably out of the screen at him naked, hurt and, as Mrs Moffatt had pointed out to him not 24 hours ago, fucking terrified.\n\nAnd he had ignored it. In the picture she had a black eye with the slight cut, the one that had Harry had told him she'd got from a fall from his bike in the garden when she was trying to learn to ride the thing, not having one herself. Harry had added the interpretation that it was man's bike and she should have tried riding Mum's old bike in the garage, with a 'bloody women' added for good measure.\n\nHe of course had lapped it up with a giggle and told his injured and abused daughter to 'man up and get over it', sick of her constant whining and attempts to get Harry in the shit every time she so much as broke a fingernail.\n\nThat was just three weeks before when his regimental band had been 'beating the retreat' at Horseguards Parade in London and he'd stayed at the Army and Navy Club. He'd had a proper session in the bar with all of the other senior officers, when his son had been enjoying himself at home evidently and 'beating his sister'. \n\nHe thought his heart would break; his son, his boy, his hope for the family name and his regiment had done those things she had accused him of and worse, and here was proof of his lying, cheating savagery to his own flesh and blood and it made him feel sick to his stomach.",
        "He thought about his last words to his wife and his promise to watch over her Deborah, their baby girl. She had not been planned but was as much loved if occasionally slightly more spoiled in the early days than her older sister and brother and he realised that he had for some time, since her mother's death perhaps, somewhat resented the less self-reliant child and had treated her differently, as the Mummy's Girl struggled to come to terms with the loss of her Mummy. \n\n\"Mr Conroy?\" said the woman, \"are you OK?\" he felt her hand on his shoulder and he came around with a start, looking down and picking up the offending computer and folding the lid shut against those pictures, those words, his words from his son's mouth incestuously against his own sister.\n\n\"Thank you for bringing this to my attention, Mrs Hawtson,\" he handed her the laptop, \"if I can rely on your discretion, I will deal with my son if you can assure me that Julian will remain silent on this matter?\"\n\n\"That is Debbie isn't it,\" she said.\n\n\"Yes, I'm rather afraid that it is,\" he looked up and made eye contact with the woman that had destroyed his world, \"those pictures were taken in her bedroom some weeks ago,\" he sighed and had a rather sad smile, \"now I know why he was so keen to have a new digital camera.\"\n\nThe lady let out a long held breath, \"Julian has only got back from University a week ago,\" she straightened up, happy that her son wasn't involved in what she'd read on his computer as he had already stated, \"Don't worry Mr Conroy, Julian won't say a word, and I'll have this hard drive,\" she tapped the back of the folded computer, \"totally wiped clean.\"\n\n\"Thank you Mrs Hawtson, I'm in your debt.\" He looked down.\n\n\"I'm so sorry Mr Conroy,\" she said, and took a breath, \"will you be contacting the police?\"\n\n\"I'd rather not if that's OK with you, much easier to keep it in the regime... keep it in the family I should say.\" He said. He straightened his back, his face losing expression for a moment, \"Harry will be punished, don't you worry about that...\" his voice tailed off.\n\n\"No problem,\" she said putting a hand on his shoulder, \"I'll see myself out.\"\n\nThe Colonel went to his son's room and switched on the PC. He would never have classified himself as any kind of expert but navigated the machine to such a point as he was able to check through all of the files and was able to search through the pictures. After a few moments he found several files that were password protected, and after nine or ten attempts he settled on tearing the machine open, locating the memory chips and hard drives -- something the army had taught him -- and ripped them out.\n\nNext it was the turn if the digital camera and that too had the SIM card removed. He took the camera with him down to the work shop in the garden and with the biggest hammer he could find he destroyed all of them, mashing the computer hard drive so hard that one of the metal corners was forever etched into the concrete floor. Taking the remnants including the camera he had purchased not three weeks ago from the catalogue store, the shape of the hammer head driven into the case, he went back to the house to wait.\n\nHe sat drinking mug after mug of rich, dark coffee, scalding hot from his favourite mug. Thinking about his sneaky son, he moved his car, parking it three streets away and walked home. \n\nSchool had finished and both Harry and Deborah were waiting for exam results, their terms ended some days ago. Deborah would head off to take over her soon-to-graduate sister's rooms at Keeble College, Oxford while it looked like Harry would have to spend ANOTHER year at the local college and make good on the poor exam results that were expected for him for the third year in a row.\n\nAt a little after six Harry was home, rubbing his hands together in evil delight seeing that the old man's car wasn't on the drive. He would definitely have her arse tonight that was for sure!\n\nHe looked around him seeing things as they normally were, for once there was no sign of that interfering fucking housekeeper, and Harry was delighted. Perhaps Dad had finally sacked the old bitch which would save him some work, he had been setting the scene about stuff being stolen for a few days now and was almost ready to spring that one; Dad was SUCH a sucker!\n\nHe'd then have the whole summer to play with his sister before she went off to University, and to find a way to make sure that she kept quiet about their 'activities' while she was away. As he carried out a cursory check of the house he thought about how he might bully her into not actually going; how fucking cool would that be! Beat her into staying home and getting some menial fucking job as a cleaner, on the fries counter at McDonalds! He grinned at that thought, that would fucking teach her to get good results, thought she was so much cleverer than him, a fucking woman!\n\nHe stopped and thought on what he would need to do achieve that, she was so much under his spell that it was definitely an option, and he clenched his punching fist as he opened his bedroom door to get the new three pack of condoms he intended to use that night. He thought about the pictures and that document on Julian's laptop -- if threats and violence didn't work, there was always good old fashioned blackmail.\n\nVaseline! He stopped himself, and turned going back to the bathroom, forgetting that he was having her arse that night in the excitement of what he was going to do that summer and how he was going to re-arrange all of their lives for his benefit. He got the Vaseline and put it in his pocket.\n\nOn his arrival in his room he only just noticed the smashed up camera out of the corner of his eye. Closer inspection showed the hard drive and other computer components he could not recognise.\n\nHe snatched up the camera forgetting the condoms and thought about the last time he'd used it, taking pictures of his naked sister. He'd already clenched his fist was ready for another black eye and he began thinking on what shit he could pass on to his idiot father who had taken all of his other nonsense excuses with such readiness.\n\n\"You'll pay for trashing my new camera you fucking bitch...\" his snarling rage was cut short by the sight of his father sat in the desk chair he'd originally tortured his sister in.\n\n\"Harry!\" said his father indicating the bed, \"please, won't you sit down?\"\n\nLieutenant Colonel Conroy MC DSO was trained on how to carry out quick and dirty interrogations and his son wasn't. He asked Harry why he thought his electronics might have been trashed?\n\nFeeling some concern at his father's new air, one that was quite new to him his response was guarded.\n\n\"Err... no Dad, I'm quite sure I don't...\" he was in Deborah's room, he thought for a moment, \"it wasn't Deborah was it? She has been acting a little peculiar of late...\"\n\n\"Kinda...\" said Dad, \"so keep it going then, why do you think your computer hard drive is in thirty pieces and why there is a hammer shaped dent in the front of your brand new digital camera?\"\n\n\"Don't know...\" he said, then feeling a real struggle about to come on, \"Daddy...\"\n\n\"Spoken to Julian or his Mum recently?\"\n\n\"No,\" said Harry, now really starting to feel that it was all seriously about to hit the fan.\n\n\"Imagine this Harry if you will, I'm home on a rare weekday afternoon, and a lady comes to the door and introduces herself as Julian's Mum.\" He leaned forward closer to his son, giving out that air of disappointed anger, another trait that Harry had been copying since he'd been given his first stripe as a cadet, \"she then asks if she can come in and 'have a chat' as she put it.\"\n\n\"Ooohkay?\" said Harry. This looked far worse than any of his previous parental bollockings and his mind started to race now.\n\n\"She hands me Julian's laptop computer...\"\n\nHarry's brain started to scream FUUUUUCK at him but he stayed in control.\n\n\"Riiiiight...\"\n\n\"Next she's showing me pictures of my daughter, sat right where you are...\" he leaned forward to growl into his son's ear, \"NAKED!!\"\n\nHarry's mouth flapped open and closed a few times, and he mouthed, \"naked?\"\n\n\"Yes Harry, naked...\" the colonel stood up, pulling his stunned and stupefied son up to join him.\n\n\"Julian...\" Harry stammered, coming up with a defence he'd had in the back of his mind for a while now, \"Julian must have...\"\n\nHis father shook his head,\n\n\"A good try Harry,\" he said shaking his head, \"But it was pictures taken three weeks back, when she had a black eye and a cut cheek -- Julian was at University.\"\n\n\"Perhaps... He must have come home for the weekend,\" said Harry with a long practised air of self-righteousness. \n\n\"From Edinburgh?\" Harry was really struggling now, \"and when I was at home? That's not the spineless, squeaky little Julian that I know Harry.\" Harry had been manipulating his best mate for so long now that even he knew it was a losing battle. \"Does my job mean nothing to you Harry?\" said the Colonel.\n\n\"J...job?\"\n\n\"I've raised you as best as I could for over nineteen years, and I thought I was doing a good job,\" taking a firmer grip on his son's polo shirt and sweat shirt raised him off of the ground, \"Do you honestly think... HONESTLY THINK that that they make colonels into brigadiers whose son's rape their own sisters?\"\n\n\"Not... not rape Daddy,\" he mewled, \"it was her...\"\n\nFortunately their house was detached and in it's own grounds so no one heard the thumps and bumps as the boy was thrown around his sister's room, out into the corridor, down the stairs and out into the garden, bouncing into pieces of furniture as he went.\n\nAfter an hour of quietly laying in the garden hugging his sides and his probably cracked ribs, Harry dragged himself to his bruised knees and shins and to the thankfully low fence that would lead to another half dozen of the same, a garage area, four more fences and then an alleyway that would give on to a back garden and a short tree climb up into Julian's bedroom.\n\nHis usual leap and roll became a pained crawl and he was in agony, and instead used that person's side gate to get back out onto the main road holding himself along on garden walls as he stumbled, heading for his friend's house. He saw a police patrol car, and fearing the worst he let go of the wall he was holding on to, falling hard into a front garden hitting the stone path rather than the beautifully mowed lawn he'd aimed for.\n\nHe hit his face and what was a broken nose, possibly cheek bone, a testament to his not so gullible father's rage and as his tears took him he lay there and tried to think what had blown the mission.\n\nHe had uploaded the pictures from his camera straight into a secure file on Julian's laptop, a hundred times clever than his and his sister's desktop PC's that Dad would upgrade every now and again. \n\nHe'd written the story laughing at Julian's nervousness and had ignored his warnings and gesturing, and carried on typing despite his best friend saying that he wasn't happy for that shit to be on his laptop, the one he took to University for his projects and everything. \n\nHarry had been halfway between begging and threatening the boy he'd been mates with for almost ten years. He'd gone as far as putting a password on the document and locking it down so even the laptop owner couldn't bin it.\n\nThe password; Julian must have watched him type it and then gone in and opened the file. Julian admitted that he used the laptop most for watching porn. Julian must have opened the file for a crafty wank over pictures of his naked and recently fucked best mate's hot looking sister, along with the story of what he had done and what he planned to do to her in the next few weeks and over a long summer.\n\nJulian had almost stood up to him; almost, that was the thing, and Harry had told him that as the computer owner he was an accessory to anything on it.\n\n\"You're fucking sick Harry...\"\n\nHarry had pinned his friend to his bedroom wall for that, with the added threat that he had also taken part in their joint assault on her in the street some years back and he was brave enough then. Julian backed down, worried that no one would employ an accountant with a criminal record with assault and sexual misconduct on it.\n\nHarry had laughingly waxed on that the story would be printed and shown to her just to make sure that she towed the line from now on. Failure to do so would see the document pinned to school and University notice boards and sent to websites and social media. It had all been easy, soooo easy...\n\nHe woke up at three that morning better rested but still in agony. He hobbled to his friends house slipping through the always unlocked garden gate and was temporarily blinded by the security lights that had never been switched on in all of his visits.\n\nJulian's bedroom window opened Harry stared up through the blinding white light.\n\n\"Harry? Is that you?\" it was Julian's Dad, not who he was expecting.\n\n\"Oh,\" Harry shaded his eyes, \"Yes Mr Hawtson, is...\"\n\n\"We'd rather that you stayed away from Julian Harry, he's told us lots of things about your relationship with him that we aren't really happy about, good night Harry, and please shut the gate on your way out.\"\n\nThe window closed and Harry realised that despite being battered and bloodied, he was unlikely ever to be welcome here again.\n\nHe staggered home and found that all of the doors were locked, even with his key. Eventually, and as the sun crept into the sky he rolled on to the swinging seat that had been one of his Mum's favourites and he thought for a moment that he could smell her perfume on the thing. He cried, he slept. \n\nHis father allowed him back into his room and he was able to shower and eat something for the first time in more than twenty four hours. His re-occupation was on the understanding that he never mentioned this to anyone, if he so much as looked at either of his sisters again the police would never find his body.\n\nDeborah had some counselling organised by Mrs Moffatt and stayed with her on an off until she went to Oxford that September. On the occasional days that she came home Harry was given a bergan rucksack and enough kit to live off of for 48 hours and sent on his way. His father didn't care nor want to know where, although it was usually a local army training area and he had never been discovered.\n\nHis college results were as bad as his sister's were good and the Colonel said he wasn't wasting any more time or money on his education and he would need to get a job. Being the accomplished bullshitter that he was he quickly got a job selling mobile phones, after all he knew his father too well and he wasn't going to feed and clothe him, just because he couldn't be bothered to try hard at school like his two sisters had.\n\nWith his hopeless educational record his Father managed to get his son into a reserve battalion of his infantry regiment as an officer cadet, but it soon became evident that he was wholly unsuited to the regiment and the military life. Raised to believe that this would be his life Harry soon discovered that the army that his Father had prepared him to join since he could walk no longer existed. \n\nBritish soldiers were now black, Asian and even of Arabic descent despite two wars in Iraq and one in Afghanistan. Many were Muslim, wore turbans, some were gay and the bloody women were allowed to be bloody lesbians and there was nothing anyone could say or do about them or to them. A single joke or burst of banter would see the snowflake complain about ill treatment to the very highest level, no matter that comedian's father was a senior colonel and former special forces.\n\nAfter one incident where Harry had taken the piss out of a fat girl, the battalion Regimental Sergeant Major took Officer Cadet Conroy to one side and said that while everyone admired his spirit and that he was without question his father's son, unless he started to significantly shut up, listen and above everything else wind his fucking neck in, he would find himself released from his reserve commitments very quickly. \n\nHarry started with a real classic Conroy \"How dare...\" but the RSM even quicker stuck his pace stick under the young boys chin threatening him that right there and then he would have no hesitation in dropping the young man on his arse, happy in the knowledge that the Colonel would not only understand him doing so but wholly approve -- Harry wouldn't be his first and was unlikely to be his last arrogant little twat that needed to be taught the ways of the world.\n\nHarry huffed and puffed, his frustrations evident to the older wiser man.\n\n\"The Officers Mess is just there Mr Conroy, why don't you go and bubble me to your Daddy, see just how you get on with that...\" The RSM grinned evilly, \"you see your Dad and I cut our teeth on the same rocks and stones, and he was a scabby arsed second lieutenant when I was a grunter so we know just how this shit works.\"\n\nThinking on his feet for the first time in uniform, Harry shut up, stood to attention and looked straight ahead.\n\nA few months after that Harry spent his first weekend at Sandhurst for the start of his reserve officer training and everyone hoped that it would be the making of him, and initially it was. His reports showed the he had knuckled down, did what he had to and asked 'how high?' when necessary.\n\nAfter two years he was commissioned a second lieutenant and Daddy breathed a sigh of relief. He was made a platoon commander and given a section of some of the older and more mature infantrymen with a section sergeant that let him know from the start that while he appreciated that he bore the Queens's Commission he wasn't going to put up with any of his shit. But even then Harry still managed to annoy lots of people, and word reached Regimental Headquarters.\n\nThe smarmy, bullying attitude to the rank and file he'd assumed would gain him respect got him beaten up on his first two week training exercise by big lads all wearing CBRN suits and respirators and completely unrecognizable. \n\nHis efforts to find out who it was the next day got him laughed at. The entire Battalion, cooks and all, knew that 2Lt Conroy had gotten a good and well deserved smacking the night before, and he couldn't stand the mockery.\n\nHe attended his first regimental dinner with the remains of a black eye, and was annoyed to see troopers and quite junior non-com's with a chest full of medals while his dinner jacket held nothing but a white handkerchief around the pocket.\n\nHe rarely spoke to his father these days but at the dinner did ask him if there was anyway he could get a year's attachment to one of the regular battalions heading out to Afghanistan. \n\nHis father liked that, mistakenly admiring the boy for wanting to take the life more seriously rather than his desire to get a medal on his bare chest. Daddy said he would see if he could get his mobile phone salesman son into the regular army as a transferee at the end of the tour if he behaved himself.\n\nHe didn't make enough effort during his pre-deployment training or take it anywhere near seriously enough and only his father's intervention got him cleared for the seven month tour.\n\nIt was on his third week and still a week shy of qualifying for his campaign medal that he started to show off and ended up getting killed on a simple IED job that wouldn't have held up the convoy more than twenty minutes and some very simple engineering tasks that were second nature to the specialists deployed with him.\n\nHe was flown home in a flag draped coffin to Brize Norton and the inevitable military funeral, his ashes spread on the same spot as his mother.\n\nThe greatest annoyance to his father was the formal coroners hearing where it was announced to the world by the driver of his the first truck, the sergeant in charge of the IED team and his company commander that if Second Lieutenant Harry Conroy had done what he was told by his lance corporal driver, the convoy leader and virtually everyone else he'd talked to walking towards his destiny he would still be alive. ",
        "Lieutenant Colonel Conroy asked about a medal for bravery.\n\n\"But Henry,\" said the Regimental Colonel, \"he didn't do anything brave.\"\n\n\"What about a Military Medal, Queen's Commendation for Bravery?\"\n\n\"Like I said Henry, there's too much press on this one my old friend,\" the Regimental Colonel put his hand on his old comrade's shoulder. \"he was killed because he disregarded instructions, the army can't give decorations away for that kind of thing.\" \n\n\"And that was that,\" said Debs looking out over the cloudless Caribbean starlit sky, \"Dad was of course beside himself and I think blamed both himself and me.\"\n\n\"You?\"\n\n\"Well yeah,\" she said sipping her mug of tea that he'd made for her, \"He got drunk at Harry's wake, and was sent home in a staff car, once home he started to reflect on what might have been. The biggest of which was him saying that if I'd been born a boy, Harry would still be alive.\"\n\n\"But he still would have been an arsehole and gone to Afghanistan and got killed, it's just that you wouldn't have got raped by him.\"\n\nShe looked thoughtful for a moment.\n\n\"Yeah...\" she said, as if it had never struck her, \"I would still have ended up sailing around the world in memory of my dead brother wouldn't I?\"\n\n\"What? Oh yeah, the Harry Conroy Sailing Association, forgot that bit,\" he thought about that for a moment, \"A bit nasty of your Dad to make your life's work about the man that raped you wasn't it?\"\n\n\"It's just Dad,\" she said, \"he doesn't think like that, don't forget that he was a career soldier, life is for getting on with, that which doesn't kill you makes you stronger.\"\n\n\"Even your brother systematically abusing you then raping you?\"\n\n\"Yep,\" she grinned, \"That's my daddy,\" she dropped her voice a few tones, \"raped Deborah? Oh well, all better now, time to move on and find something positive from all this'.\"\n\n\"Positive? From... from all of that shit?\"\n\n\"Yep, oh, don't get me wrong, I reckon that if he'd been the person that Harry was raping, he still would have found something positive out of the whole thing.\" She smiled at that.\n\n\"Fucking hell,\" said Dave, \"I mean...\" he took a breath, \"I mean... fucking hell!\"\n\nDebs laughed at him, long and hard, like he hadn't seen her laugh in the months he'd known her and in the weeks that they'd been sailing together,\n\n\"Thanks Dave,\" she said wiping her eyes, \"I'll take that as a complement?\"\n\n\"Good,\" he said returning her smile, \"because that was how it was meant.\"\n\nShe became quieter for a moment and looked more thoughtful,\n\n\"Thank you Dave,\" she stood up in the well, stretched, leaned forward and kissed him, \"thank you listening and encouraging me to get it off my chest, it's...\" she smiled again with just the saddest edge to her demeanour, \"it's been a long time coming and I feel well rid of it.\" She kissed him again.\n\n\"You're most welcome honey,\" he said, and kissed her back, seriously now, like they hadn't done since those few nights in bed. He stopped and brushed another tear from her cheek, \"now for the next part of the cure,\" he pulled her to sit next to him, \"time you took control of your life and stopped living for Daddy and the memory of your martyred brother, it's Debs turn now, what do YOU want to do?\".\n\n\"What?\n\n\"It's your turn now sweetie,\" he said moving closer, \"when you selected the exams you wanted to take at high school, what did you want to do?\"\n\n\"I wanted to be a school teacher like my Mum, more so after she died.\"\n\n\"So what' stopping you doing that now?\"\n\nShe laughed, \n\n\"Eerrrr... I'm twenty nine!?!\"\n\n\"Not good enough Miss Conroy.\" He said, \"Must try harder, really.\"\n\n\"But I'm not qualified.\"\n\n\"You have a degree?\"\n\n\"Yes.\"\n\n\"In?\"\n\n\"Geography, from Keeble College, Oxford.\"\n\n\"Makes sense;\" he said leaning in closer, \"Think about it -- think about learning Geography from a woman that has actually sailed around the world! All of it!\"\n\nShe giggled,\n\n\"Yeah, but...\"\n\n\"But nothing, all you have to do is enrol at your local University and sign up for a post-graduate certificate in education, which should take you about a year, and you'll be teaching within months of that, they'll even give you a bursary.\"\n\n\"Do you think?\" she said biting her bottom lip.\n\n\"I'm a human resources officer Debs, I don't think -- I KNOW!\" \n\n\"But what about Worldsail, I'm signed up to them for a years contract.\"\n\n\"It's May now, you'll finish with Worldsail International next March which gives you time to get everything in place and save some money.\"\n\nShe looked out to sea,\n\n\"My Dad will be none too pleased,\" she said, \"he was a bit pissed that I came south and signed on with Worldsail and wasn't living at our house and getting ready for more sailing with veterans.\"\n\n\"It's your life Baby,\" said Dave, leaning forward and stroking her hair, \"You aren't the Harry Conroy Veterans' Sailing charity, you're the gorgeous Debs Conroy, former round the world yachtswoman, motivational speaker and now captain of industry.\" He leaned forward again, \"It's your turn Honey, your dad has lived his life, he can't live yours vicariously because your brother died of... pig-headedness!\"\n\n\"You mean stupidity...\"\n\n\"S'pose.\"\n\n\"You're right of course,\" she said, \"but...\"\n\n\"No buts Debs, you've done your time, now it's your turn.\" He stopped, \"Shit, if you had murdered him you'd have been released by now!\"\n\nShe laughed again but still looked pensive, she still had to tell Colonel Sir Henry Conroy MC DSO that she was going back to University to study again. He had cajoled her into not doing her Masters and into 'helping him with those poor wounded veterans' careful not to mention her dead rapist brother in all of the discussion. After all, he had said, she'd had already three years off...\n\nHer elder sister Ellen had studied for four years and had gained her Masters degree in international politics, not 'had three years off' like Debs. Once graduated Ellen had gone to work for the foreign office straight away and had married a very promising career diplomat Edgar. She was never asked to give up that to start a sailing charity, perhaps if Harry had raped her as well...\n\nBut then Ellen would have beaten the shit out him no question, she was her father's daughter and raised in his image while Debs was Mummy's girl. What to do about Daddy...\n\nDave looked thoughtful for a moment, \"We've got two week to set you up for that particular discussion.\" He grinned, \"Stick with me sugar, I'll see you right.\"\n\n\"Thanks Dave!\" her smile was infectious and he couldn't help but respond to it. It was her turn to lean forward now, and she kissed him.\n\n\"Thanks Dave,\" she said again, sitting on his lap and kissing him.\n\n\"You're welcome,\" he replied, kissing her back. He pulled her onto his lap and into his arms and they had a further great kissing session, both feeling the passion rise in the other.\n\nHe felt her relax into his arms in a way that she never had before, despite the couple of times that they had done this; he thought about those times and how nervous this gorgeous girl had been, and he leaned back to look at her face. He thought about Sally his late wife and the fact that this was the first time he'd seriously done anything like this in quite a few years himself.\n\nThey were one big mess of sea born arms and legs intertwined and each running hands over the other. Feeling brave Dave put his hands to the bikini clasp and with a gentle finger and thumb motion released the clip and the brightly coloured nylon that had been supporting her and holding her boobs in place. She gasped as she felt them release, and he froze as he realised that this was a bit of a boundary he was crossing. \n\nShe giggled and smiled so he thought that perhaps this would be OK. He eased the soft cloth from her shoulders and pulled it away from her dropping it to the cushion next to them. He looked into her smiling face and kissed her again. For response, she gripped the hem of his T-shirt and pulled that over his head, and their naked flesh touched for the first time.\n\nHe laid a gentle hand against the side of her breast and held it softly, remembering what she had said about the brutal way that her psycho brother had mauled them. Her nipple extended out and into his palm and he thought about how she had told him of his brutality to those sensitive buds. \n\nThis had to be about pleasure, total and absolute. That fucking savage had ruined that act of lovemaking for this poor girl for all of her adult life and it was up to him to make sure that he taught her how real men made love to their chosen partner.\n\nSo he just stroked them, the right one then the left, running his thumb in a teasing circle around the now rock hard nipples as their tongues played together in another passionate oral embrace.\n\nShe smiled at him again, flinching but this time with the tingling pleasure he was creating in her. He lay back down on the cushion pulling her down over him, happy that if she didn't like what he was doing she could pull away and wouldn't feel trapped under him. \n\nShe went with him and as she tried to stay over him it was as if it was planned her right nipple arrived on his cheek and he needed only to open his mouth for the nipple to come into his reach. \n\nHe gently closed his lips over it and licked around it, aiming the for the semi-soft flesh around the dark red puckering of her hard nipples, and he felt her gasp and tremble at each swipe of his tongue. Finally he draw hard on the flesh sucking it into his mouth with a gentle gusto tonguing her the same way that his late wife had told him to all those years ago. It obviously worked now.\n\nShe cried out but with great pleasure and he saw that she was arching her neck back and pushing her breast further into his mouth. Her hand was caressing his cheek in tender thanks as he paid her this great attention.\n\nHe pulled his mouth away and she gave a bit of a squeak silenced only by a soft purr as he took the other nipple in his mouth and carried out the same exquisite attack and within moments she was panting in this unaccustomed pleasure. She put an hand to the side of her breast stroking it and his cheek as she encouraged him to nurse from her.\n\nIt was really nice and he could feel that she was grinding her loins against his thigh in an effort to stimulate that part of her body as well, to scratch the itch that he'd started there.\n\nHe put a hand to her bottom, sliding it across her curvy flesh then tucking his fingers under her bikini panties.\n\nThere was an angry screechy whine from one of the electronic devices just inside the cabin and she swore.\n\n\"Excuse me for a moment Dave,\" she made to get off of him, laughing as she removed one of his hands from her body then the other, only to find the first back on her again. \"That's the navigation computer Dave!\" she pushed off of him and bent down to kiss him one more time.\n\nThe checked the computer and found that the wind had changed and it was now blowing them off course. Dave stood and came across to stand next to her, \"We just need to reset the sail the tiniest bit,\" she said pushing back into his warm body that had been so close to his in the last few moments.\n\n\"Let's get to it then Captain,\" he said, then we can get back to what we were doing before.\"\n\nDebs grinned and wrinkled her nose to let him know that she didn't have a problem with that at all. They set the sail and thought about heading back to what they were doing when their radio crackled into life.\n\n\"...Montego Bay, Montego Bay this is Worldsail Caribbean, are you receiving over?\"\n\nDebs snatched up the radio and replied.\n\n\"Worldsail this is Montego Bay reading you loud and clear over.\"\n\n\"Montego Bay we have you on our system and see that you are about a days sail for the Florida coast, how are you planning to sail into Jamaica, over?\"\n\n\"Worldsail, we're hoping to skirt Key West then north of Cuba and down to Jamaica in four or five days if this wind keeps up, over.\"\n\n\"Thanks Montego Bay, please feel free to call into Worldsail Key West dock for fuel, water and more food if you wish, they know you are local, over.\"\n\n\"Might do that Worldsail, my crew mate wants roast chicken...\" she grinned at him.\n\n\"Thanks Montego Bay, back on air at 0800 local time tomorrow, speak to you then.\"\n\n\"Montego Bay out.\" She said clipping the radio back to its holder.\n\n\"Debs, I don't mind not stopping if you want to go all the way.\"\n\n\"That's the thing Dave,\" she said with a soft smile, \"I do want to go all the way, but tomorrow morning all being well, we shall enter the Caribbean proper and the chances of you and I getting somewhere warm, soft and cosy to go 'all the way' is virtually zero as the water is too deep for our skinny little anchor and we'll be dodging cruise ships and other sailing vessels.\" She turned to face him and put her arms around his waist, and he reciprocated. \"How's this, we bring in the sails and start the engine and cruise from here to Key West. It'll be quicker and there we fill up with everything and then motor to Jamaica. It'll be the quickest way to and it means I... we can...\" she stopped.\n\n\"It means you can allow me to make love to you,\" he said.\n\nShe blushed but still beamed a smile at him.\n\n\"Yes Dave,\" she said, her cheeks a gorgeous red colour, \"I'd like that, very much.\" She kissed him, \"but...\"\n\n\"But?\" said Dave, \"you want to through a 'but' in here?\"\n\nShe laughed again and gently bashed him.\n\n\"But, after all this time of waiting, I want it to be perfect... and I know that with you... well I know that you'll make it perfect.\" She kissed him, deeply strongly and with great passion, \"I don't want to be rushed, I don't want alarms going off, I don't want creole bum boats coming over to see what's going on and why no one is on deck. I want...\"\n\n\"I get it baby,\" he said, \"I will make sure that's how it happens.\"\n\nShe kissed him again,\n\n\"Thanks Dave, I really mean that.\"\n\nThey struck the sails and started the engine which meant that one of them had to be sat or stood by the large steel wheel to steer and they had to watch the navigation computer. It was back to four hours on and four hours off as they headed to Key West following the Florida coast, the movement of the land on the horizon giving them some indication of their speed and progress.\n\n\"Worldsail Kilo Whiskey, this is Montego Bay over?\"\n\n\"Montego Bay, this is Kilo Whiskey receiving over.\"\n\n\"Kilo Whiskey we are about four hours away from you, will someone be on site to welcome us over?\"\n\n\"Sadly no, Montego Bay but don't worry, we have set up everything for your arrival, if you head to Marina dock four, bay three the lockers are there waiting for you and the fuel pump, the code for the fuel lock is your crewmate's child's birthday, while for the other container it's the child's middle name, over\" Dave laughed quietly and nodded.\n\n\"All received Kilo Whiskey, we'll see you tomorrow.\" Debs replaced the handset again, \"There you go Dave, all set?\"\n\n\"Perfect,\" he said with a genuine smile, \"this means we have to get dressed again doesn't it.\"\n\nShe looked disappointed,\n\n\"Fraid so Dave,\" she moved closer and pressed her still naked boobs against his still naked chest, \"Just for a little while though.\" She kissed him again.\n\nIn the fading light they sailed into Key West and reached the Marina dock and there among a collection of Worldsail yachts, none as large or grand as the Montego Bay, but Worldsail none the less. Debs eased the boat to the dock and gently stopped it, Dave leaping ashore with the ropes and tying it off. Debs killed the engine. It was absolutely silent for the first time in days and Dave was amazed that the pier he stood on wasn't moving. The last thing he did was plug in the mains power.\n\nHe remembered Kathy's birthday and refilled the half empty fuel tanks while he explained that Kathy's middle name was Lara so that Debs could break out the food.\n\nThere was fresh food and wonder of wonders - bread, fresh that day.\n\nHe created a veritable feast of something she had confessed as a favourite. Having sailed the Adriatic regularly she was a fan of Italian food and wines so he cooked up a nicely steaming meal of meatballs and spaghetti, with slices of garlic bread. He even had a couple of bottles of beer on the table.\n\n\"Oh this is lovely,\" said Debs, not wondering how he could create such delicacies after all those weeks at sea.\n\n\"It's a Dad thing,\" he said, \"have to get fussy children to eat, go to cooking school, simple. No wine sadly Debs,\" he said, \"Needs a nice fruity white, not this Budweiser stuff.\"\n\nShe grinned,\n\n\"Stay there.\"\n\nIn moments she was back with two large tumblers and a bottle of prosecco.\n\n\"Stuart gave it to me before we left,\" she said, \"I got a bit of a taste for it when I was down in the Adriatic and he remembered. Gave me three bottles.\" She opened the bottle with a pop pouring the pale fizzy wine into both glasses. Their meal improved somewhat as they sipped the cool wine and it eased their minds and raised their spirits.\n\nTheir discussion continued and it was obvious she was getting a bit squiffy. Their meal finished it was back out into the warmth of the evening and the well deck, both with large glasses of wine and listening to the town coming to life around them.\n\n\"I filled up the water tanks,\" he said, \"if you'd like a shower before...\"\n\n\"Before we make love.\"\n\n\"Well I was going to say before we go to bed, but yeah, I can go with either plan.\"\n\n\"I'll go first,\" she said, standing up and walking down the steps. He had also connected the boat to the shore power supply so the lighting and the shower and everything was working to it's most effective.\n\nShe showered and her head appeared at the top of the hatch way, her hair wet.\n\n\"I'm finished Dave,\" she said dropping back down again.\n\nHe secured everything as best he could and stepped down and past the double bed she had started to make, wrapped in a towel with a hint of what lay beneath. He headed into the shower and was impressed at how mains power improved the thing, and he even shaved.\n\nOnce dry he was back out to the main cabin and there she was, laying back on the bed propped against the pillows and the duvet pulled up just over her breasts.\n\nFor most of the journey he had seen her in her bikinis and then latterly when she had taken to not wearing the top part, but now there was the suggestion of her beautiful and naked beneath the bed clothes.\n\nHe walked to the bed, removing the towel to stand naked before her, and raising the duvet to slip under it. She smiled at him, pleased that he could be so comfortable with her.\n\nShe moved closer to him and they kissed again. Not that they hadn't done this for the last few days but it hadn't been like this. They hadn't been able to share a bed and get closer than a well deck cuddle but this was special.\n\n\"I don't want this to sound corny Dave,\" she said breaking eye contact for a moment, \"but... please make love to me.\"\n\n\"Of course Debs, it would be my honour.\" He stopped. \"Do you have condoms?\"\n\n\"No need,\" she said, \"I've been on the pill for the last six weeks, bit of a trick to stop me coming on too badly during a long voyage. So... err... No need for contraception, we can...\"\n\nHe took her in his arms and kissed her again, running hands all over her, reacquainting himself with her boobs, and finally running hands along her naked body, down her hips, across her bottom and finally across he flat belly and the short wiry pubic hair that was growing there. She flinched at his touch.\n\n\"It's OK,\" she said with a soft, embarrassed giggle, \"It's just because this is all a bit new, and I... well I have been waiting quite some time.\"\n\n\"Perfect, lovely Debs, I want you to be on top this time, so you can control the pace, the depth and all that.\"\n\n\"Awwwww Dave! How sweet!\" she put her hand to her mouth and the squeak in her voice suggested that she was on the verge of happy tears. She recovered, \"Dave,\" she said now an almost fluorescent pink, \"Am I... err... am I wet enough? I don't know you see, I feel pretty wet down there.\"",
        "He giggled and kissed her again, dropping his hand further to her groin and slipping a single finger against her puffy vaginal lips, finding the inside very wet and ready for him.\n\n\"Climb aboard honey,\" he said, \"you're perfect.\"\n\nShe did so, taking his large cock and bringing it level with her very wet puss. He looked up at her as she straddled him, looking gorgeously naked in the half light of the cabin. She slowly settled down feeling him slowly enter her.\n\n\"Fucking WOW!\" she said she dropped down on him, \"Oooh yeah, that's so nice Dave,\" she stopped and settled comfortably on him fully inside her. She rode up and down on him setting her own pace and he saw her boobs flex with her as her muscles tightened and relaxed as the moment took her.\n\n\"That's prefect Debs,\" he said, \"like I said,\" he looked her naked body up and down again, \"You're perfect.\"\n\n\"Tan lines,\" she panted touching her groin and the thin white lines around her waist and the triangles front and back.\n\n\"Still perfect honey,\" he said, conscious that her panting was speeding up as was her activity.\n\n\"Oh Dave...\" she hissed and dropped down onto him their mouths meshing together in a bit of a wine fuelled mess. After a few moments of well-meaning silence interspersed with gasps as they kissed, they fell into a bit of a rhythm with Dave pushing up and Debs pushing back and it soon became obvious that she was getting into what they were doing, \"Oh yeah, that's so nice... oh Dave...\" she gasped, pushing her cheek against his, \"Thank you, ooooh thank you!\" \n\nHe felt the moisture between their faces and guessed that she was crying.\n\n\"Hey baby,\" he said moving back a bit so they could look into each other's faces, \"you OK?\"\n\n\"Yeah,\" she breathed, her big smile proving that she was, \"This is so lovely, I can't tell you.\" He kissed her.\n\n\"Talking about a long time coming, I'm barely holding off the inevitable here, I'm not sure I can...\"\n\n\"Oh Dave!\" she flushed with a giggled sigh, and rolled to one side pulling him over her, \"fuck me Dave,\" she hissed, \"Fuck me and make me come, I'm so close...\"\n\nHe rode her harder, timing his thrusts with her gasps, her cry became a rather surprised warble as, he supposed, she was reaching orgasm?\n\nHe worked on that fact she was and fucked into her as hard as he could and her warble became a single cry as he felt her entire body tremble and then strain as she pushed up into him as he came into her.\n\n\"Oh Wow! DAVE!\" she said her beaming smile into his face, \"that was fantastic, you are just the best!\" she kissed him again as he settled between her legs resting his weight on his elbows, \"Is it always that good with you?\"\n\n\"I don't know,\" he said kissing her back, \"we should try again in a little while and see.\"\n\n\"Definitely,\" she chuckled, running her hands through his dark hair.\n\n\"Thank you.\" She said pulling his face down to hers again.\n\n\"Oh no Debs, thank you. That was incredible.\"\n\n\"No... I mean thank you FOR EVERYTHING,\" she wriggled he face the tiniest bit, \"For listening to me, for putting up with my moods, for being my friend when I needed one.\" She caught her breath, \"For making love to me so wonderfully.\"\n\n\"You're worth it Debs.\" He said. He took a breath, \"I must confess that I had thought about throwing you overboard five or six times a day for the first week but then I'd never have made it back to dry land but then after you had that first bad dream and you told me about you Dad and your brother, well it all sort of made sense and I... well... I just saw this injured girl that I had to rescue.\"\n\n\"From what?\" she said, her pretty face looking intrigued.\n\n\"From the past, from the nightmares, from people that had ruined her life for too long.\"\n\n\"Oh Dave,\" she hissed and pulled him into a hug, \"I'm so glad that YOU found me!\"\n\n\"Hard not to on a boat this size,\" he grinned at her.\n\n\"No!\" she snapped play-bashing him on his shoulder with her fist, \"I've had several boyfriends before, lived with one of them for eighteen months, and I never told him one tenth of what I told you in that first night after my bad dream, and that was just after you cuddling me to sleep a few times.\"\n\n\"Was ex-boyfriend a soldier?\"\n\n\"Yes,\" she said, \"Army officer lost his leg from the knee down from an IED in Afghan,\" she closed her eyes, \"We made love a few times, but it was never like that, not ever.\"\n\n\"Don't tell me,\" said Dave with a grin, \"I bet he spoke Squaddie language didn't he.\"\n\n\"Yes!\" she said, \"he did, all of the time.\"\n\n\"And I bet your father approved of him?\"\n\n\"Took to him almost straight away, I was waiting for those words 'like the son I always wanted', he gave me such a hard time after I stopped seeing him.\"\n\n\"That explains that then,\" said Dave rolling off of his lover to lay beside her.\n\nShe took the opportunity to get up and waddle to the bathroom before any mess was made, and he could hear the flushing of the WC and her washing her hands.\n\nShe reappeared and walked back towards him, the first time he'd seen her completely naked and she took his breath away.\n\n\"What?\" she said wiping her hands on the towel in their kitchen and looking down at herself.\n\n\"You're gorgeous,\" he said, \"simply gorgeous.\"\n\nShe walked back to the bed,\n\n\"Aww you're juust saying that because we've made love and are going to do it again as soon as you get your breath back.\"\n\nShe knelt back on the bed and then lay next to him, he couldn't stop looking at the naked woman next to him.\n\n\"Making love,\" he said carefully, \"I kind of get the feeling that you... err... how can I put this... know what you like.\"\n\n\"WHAT!?\" she giggled with a slight screech.\n\n\"I get the feeling that you are a prolific masturbator.\"\n\nHer face flushed and she bit her bottom lip.\n\n\"Guilty as charged sir,\" she said.\n\n\"Vibrator?\"\n\nShe went quiet and still biting her lips nodded her head very quickly,\n\n\"Hell yeah!\" she turned to her side, giving another great view of her great breasts, \"In my bag, you... you... didn't hear it did you?\"\n\nHe desperately wanted to say yes, but just laughed.\n\n\"No honey, I really want to say yes, but I really didn't!\" She was laughing fit to burst now, he took her hand and kissed it, and she slowed. \"I just get the feeling that while making love to a man has been a bit of an issue with you, making love to yourself has been a staple for some time?\"\n\nShe caught her breath,\n\n\"Discovered wanking at University,\" she said, \"Read some Mummy Porn a friend lent me and got so into that I found myself in my rooms and on my sofa at three in the afternoon with my jeans and panties round my ankles bashing my clit to bits when I should have been at a seismology lecture.\" She put her head on her pillow and closed her eyes. \"I guess that I was able to separate masturbation from everything else that happened to me. Harry...\" she stopped for a second as she considered, \"I think that Harry was always about his pleasure and his power, never anything in it for me; and that gap meant that I could enjoying wanking I suppose.\"\n\n\"Good,\" he said, \"And the seismology lecture?\"\n\n\"Borrowed someone else's notes. It was nowhere near as morally uplifting and educational as the Mummy Porn.\"\n\n\"Tell me about the Mummy porn,\" said Dave stroking his large hand down her soft, tanned body.\n\n\"Usual shit,\" she said, \"Pretty professional, busy woman, meets rich businessman, investor, competitor sort of thing. They end up in bed...\"\n\n\"Doing what?\"\n\n\"Everything!\" she said taking his hand and pressing it to her boobs, \"and I mean everything.\"\n\nDave leant across and whispered directly into her ear,\n\n\"Tell me,\" he said, \"Tell me what he did to her...\" She closed her eyes.\n\n\"There was this one passage,\" she said her chest heaving with the recollection, \"He pushes her back on the bed and gets between her thighs and... licks her.\"\n\n\"Like this?\" He quickly rolled between her thighs and gently pushed them apart.\n\n\"Dave no!\" she said, \"You've only just fu... Oooh shit!\" she gasped as he mouth went straight to her labia and his tongue forced a passage through to her clitoris and proceeded to attack it with gusto, \"Oh Christ,\" she gasped sinking slightly in the bed and spreading her thighs more, her fists grasping the sheet either side of her as she writhed in her pleasure, \"Oh fuck Dave, YES!\" she howled as he sucked and pulled at her clitoris with his lips and tongue. \n\nRemembering how his wife and succumbed to orgasm after orgasm this way he kept going, happy that this was at least going to be a first for his present lover and he came up for air a second time after Debs stopped pulling his clean shaven face into her pussy.\n\nThe following morning, they woken by a knock on the cabin door, and he pulled on his shorts and took two steps to it. He opened the door to smiling faces all in Worldsail uniforms and a lady from US customs and immigration. After some very speedy showing of passports and him pointing into the cabin to the still snoozing naked girl with just a sheet over her.\n\n\"I do need to check Mr Ross, can you wake Miss Conroy please?\"\n\n\"Of course,\" he said and dropped down into the boat, giving her a gentle shake. She came round, looking in his smiling face.\n\n\"Hey lover,\" she said, \"good morning!\" she pulled his face down to kiss her.\n\n\"The authorities are here honey,\" he said, \"just want to check you are who you say you are!\"\n\n\"Of course,\" she sat up, naked stretching in the first rays of sunlight coming in through the open hatchway. She stood and pulled up the sheet to wrap it around herself, a couple of times in fact, tucking the lose end into her cleavage, before pulling at the bottom to mount the few steps out into the daylight. \"Oh,\" she said, seeing the smiling Worldsail staff in their new uniforms, \"Company.\"\n\n\"Good Morning Miss Conroy,\" said the first, \"a pleasure to meet you at last, I'm John Preston, Caribbean manager,\" he extended a hand. \"Good trip?\"\n\n\"John!\" she said taking his hand, \"A great trip,\" she tried not to make smiling eye contact with her lover, \"Quite splendid, good time and with no great drama involved.\"\n\n\"Excellent,\" he looked from her to Dave and then back again, \"We'll just check everything over and top up and empty out, just before you head off for the last stretch. Can I introduce my good friend Mandy who'll check out your passports and everything?\"\n\nShe had already finished with Dave so he dropped down into the boat with the Worldsail crew and once inside, after the fresh air of the bright Florida morning the musty smell of him and her was noticeable in the large cabin.\n\nHe started to put pack the bed away and figured that with windows open that would soon clear. It was, however, extremely clear to anyone that had smelled the particular smell before precisely what the UK Operations Manager and the Corporate Manager had been up to on those long boring nights sailing across the Atlantic. The three Worldsail crew set to with a will and the boat was spotless in a very few moments, while the engine had been serviced, the sails and rigging checked, even the cooker, water boiler and oven checked and they even changed all of the filters.\n\nDave had a very quick shower and changed into his Worldsail Polo shirt and shorts seeing as he was now, technically, on the firms time. Above him he could hear two of the staff seeing to the various hoists and winches chatting, one English, one American.\n\n\"Did you see Debbie Conroy?\" said the Englishman, \"She's supposed to be one hell of ballbreaker but what the fuck?\"\n\n\"Fuckin' dream girl man,\" said the American, \"she could bust my balls anytime she wants.\"\n\n\"Do you think she knew that that sheet was leaving nothing to the imagination?\" said the Brit.\n\n\"I can dream man,\" said the Florida boy, \"I can dream, heaven must be missing an angel bud.\"\n\nTheir voices faded as the got back to their turn-around duties.\n\nDave laughed if only to himself, and left the shower room and headed for the deck. There was Debs still looking angelic in her white sheet wrapping sat in the well deck and sipping on a can of Coke.\n\n\"You have Coke?\" said Dave.\n\n\"In the Ice box honey,\" she said reaching down into a large cooler and pulling one from a mass of ice, \"Here,\" she popped it open for him, took and sip from the top and handed it to him with a big smile.\n\n\"Thanks,\" he said taking his first slug of his all-time favourite cold beverage in at least a month, adding an 'ooh yeah,' for good measure.\n\n\"My turn in the shower Dave,\" she said standing up, and pulling her sheet dress straight, and in doing so showed every line and curve of that perfect body he'd got to know so well the night before.\n\n\"OK Baby,\" he said, adding the affectation without even thinking about it.\n\nThe Customs and immigration lady had gone, while the Worldsail crew were finishing off, and Dave was working his way down his third Coke. So what if he had a bit of a sugar rush and didn't sleep again until August this was paradise. Just to improve things Debs appeared still wet from the shower and in her brightest bikini. The Worldsail crew were just finishing off when she appeared with a simple, \"Hi Guys!\" and trotting across to where Dave was sat to bend forward to kiss him. The two, the Brit and the Yank both looked down the boat at her fantastic bottom pointing directly at them.\n\nFuck but she was hot. That accountant sure was one lucky bastard...\n\nThey stayed that night taking the opportunity to get some essential laundry done and walking hand in hand through the vibrant and buzzing Key West to John Preston's place and dinner with him and his girlfriend. The ate great barbecue, beautifully prepared by John's girlfriend Becky, and chatted and joked, about the world, about sailing, about Key West and were two couples, without question.\n\nDave noticed at one point Becky taking Debs hand and leading her off somewhere.\n\n\"So, how has your trip been Dave?\" said John sipping his beer, \"Can Worldsail officially call you a sailor now?\"\n\n\"I guess so,\" said Dave, \"hated the first week or so, thought I would end up killing Debs...\"\n\n\"But you look like you're getting on fine now!\" said John.\n\n\"That we are, hate to admit it but yes; not sure who the Shrew was and whether it has been tamed but yeah, I think it's fair to say that we are 'getting along'.\"\n\nNo point in denying after all.\n\nBoth of the women reappeared Debs carrying of all things a large handbag.\n\nAs the clock ticked towards one in the morning Dave confessed himself done in and with lots of thanks and offers of a return visit if John and Becky ever found themselves in the South of England they started a slow walk back to their boat, and their bed for the night. \n\nHe unlocked the compound with the gate key, one that would open similar compounds across the globe, then unlocked the Montego Bay and stepped down. Inside it was to find the bed made, and the sheets littered with red rose petals, a glass of wine by each side of the bed and the bottle in a chiller. To top it all off their where two red candles in tall glass holders, one by each wine glass.\n\n\"John you reckon?\"\n\n\"Becky,\" said Debs coming down behind him, I wondered who she was talking to on the phone as we were getting ready to leave!\"\n\nDave took Debs in his arms and kissed her, running his hot hands across her back, bottom and her sides, pulling her T-shirt up to get even closer to her. Next he was unbuttoning her shorts and pushing them down, she stepping out of them and leaving them with her slip on sandals. He pulled her T-shirt up and off, leaving her in just her brightly colour panties and matching bra.\n\n\"Excuse me for a moment won't you?\" she said pulling free from him for a moment, \"girl has to do what a girl has to do.\"\n\n\"Ok Baby,\" he said and contented himself with a sip of the white fruity Californian wine they had been drinking most of the night with their new friends. He stripped down to his boxers, and lay on the bed, away of the sweet pungent smell of the rose petals all around them and the candles.\n\n\"Shut your eyes,\" came a voice from the bathroom.\n\n\"If you have all of my family in there to surprise me Debs this could be just a tiny bit embarrassing.\"\n\n\"Oh no,\" she said, closing the door, \"Good but not that good,\" he heard her walk around the room, \"OK Dave you can open them.\"\n\nHe looked across the bed and their she was in the most fetching white lace babydoll night dress with matching boy shorts.\n\n\"Sir likes?\" she said, with a hint of nervousness.\n\n\"Shit,\" said Dave, \"and I thought you looked amazing naked.\" She took a step forward. \"No,\" he said \"let me just look for a few more seconds.\"\n\nShe grinned,\n\n\"Sir obviously likes.\"\n\n\"Sir thinks you look amazing,\" he said, \"Right, come here and let me see if it's as nice to touch as it is to stare at.\"\n\nShe crawled on to the bed and pushed him back down,\n\n\"My turn to touch and play Mr Ross,\" she said pushing his shoulders down onto the bed. She tucked her fingers into his shorts and pulled them down, his large erection springing up to meet her. She took a gentle hold of him and gently pumped, she lowered her mouth down to him, \"Mummy Porn, don't fail me now...\"\n\nThey made love again, with him on top again encouraging her to play with her clit and he screwed her. She came, she came again, he came; perfect, they drank their wine and both sat staring at the other.\n\n\"So Debs,\" he said, \"I...\"\n\n\"Dave, are we going to have one of those 'it's been a great cruise and everything, but...' moments?\" she picked up her wine glass.\n\n\"No,\" he spluttered, \"quite the opposite in fact, I was rather hoping it was going to be one of those 'why don't you move in with me and Kathy while you raise money for your post graduate year' moments actually.\"\n\nShe smiled that wonderful smile to him,\n\n\"Really?\"\n\n\"Yeah really,\" he said, putting a hand to her cheek and leaning in to kiss her.\n\n\"My own room?\" she said.\n\n\"If you wish,\" he said, \"only trouble is it's my own room as well... and well... we'd have to share.\"\n\nShe kissed him back,\n\n\"Damn you drive a hard bargain Dave Ross,\" she sipped her wine now, \"Oooooohkay, seeing as you're only going to bitch and whine if I say no, aren't you!\"\n\n\"Might do,\" he said with a hint of petulance.\n\n\"What about Kathy?\"\n\n\"She has her own room,\" said Dave.\n\n\"You know what I mean!\"\n\n\"Kathy will just love you, she's been nagging me to date and get a girlfriend ever since she watched the 'Friends' boxset on Amazon.\"\n\n\"So long as you're sure.\" She leaned in and kissed him, \"thanks Dave...\" she giggled, \"I've been saying that quite a bit lately haven't I?\"\n\n\"Yeah, but you know what, I really don't mind.\"\n\nThey kissed, put their glasses down and he removed the lace babydoll that she was still wearing, although rather askew.\n\nThey began to make love again,\n\n\"Dave,\" she said, \"I'm having another Mummy Porn moment.\"\n\n\"Really? Do tell.\"\n\n\"Look, you can take me from behind you know!\"\n\n\"OK Debs,\" he said, rolling to one side, \"what happens in the Mummy Porn?\"\n\n\"He grabs her, flips her onto he hands and knees and fucks her from behind...\" she panted.\n\n\"That complicated?\"\n\n\"Yeah.\"\n\n\"Ooohkay,\" he said sitting back on his haunches, \"If I get lost somewhere along the way, just nudge me in the right direction will you?\"\n\n\"Oh yea...\" but before she could finish her sentence, she was flipped over onto her front and felt him take a firm hold of her hips and effortlessly slide into her, \"Ooooh fuck yeah!\" she gasped as he began to fuck her. Her exhortations were similar to those of the night before, and again she was playing with her clitoris with the occasional stroke of his balls when they were close enough.\n\n\"Please Dave, I'm nearly there, keep going, yeesss, keep go....oooooh shit!\" She came, and it was too much for him and he came too, pumping deep into her and feeling her final spasms as she toyed with herself for the last few moments.",
        "They slipped forward, him still laying partially over her with his cock still embedded. They slept.\n\nThey woke a few hours into the night, with him spooning her, his new erection pushing between her thighs. She reached between her legs, got the angle right and pushed back with a deep sigh. She said the next morning that this was probably the nicest lovemaking she'd ever encountered and being so sleepy, warm, being cuddled and screwed by her lover was just perfect.\n\nHer alarm went off at a bit before seven and she was up and into the shower. He woke, made coffee from the posh machine now they had mains power, and unmade the bed, opening the windows to let in the fresh air and let out the sexual fug from the night before. Thank God they had washed some sheets yesterday.\n\n\"Shower time,\" said Debs emerging in another of those sexy bikinis, \"I'll get your breakfast while you're at it.\"\n\n\"What breakfast are we talking here?\"\n\n\"What do you think Dave? After all that hard work of yours and seeing as I sleep so well, I can't do any less than eggs and bacon can I.\"\n\n\"Sold,\" he said and finished his coffee. \n\nShe picked up her phone and looked at it, something neither of them had done in the weeks they'd been at sea but he didn't think anything of it.\n\n\"And you need a shave,\" she said rubbing her chin, \"No rush Dave,\" she said, \"enjoy yourself in there. We're back to one every two days until we reach Kingston.\"\n\n\"OK,\" he said and did as ordered. After a few minutes he heard the radio come on and he was sure he could hear voices, perhaps John was back.\n\nHe emerged feeling clean and ready for anything the world could throw at him, this was improved by orange juice on the breakfast table and the smell of cooked bacon.\n\n\"Sit down Honey,\" she said, \"Breakfast is just coming.\"\n\nHe sat, sipped his juice and closed his eyes, this was definitely the life.\n\n\"Here's your breakfast Daddy,\" said Kathy.\n\n\"Oh thanks Baby,\" he said, then realised that his daughter was stood by the table in a bikini much like Debs with the exception that her skin was pale English summer white. \"KATHY!\" he shouted in delight, \"Baby, how did you get here!\" he stood and hugged his daughter that he'd missed so much.\n\n\"Stuart at the office arranged it before you even left, Nanny drove me to Gatwick, I flew FIRST CLASS! FIRST CLASS DADDY!\" she all but screamed, \"I was put on a shuttle at Miami International at silly o'clock this morning and this lovely lady called Becky met me and brought me here.\" She sat down, next to her father, \"Knackered to tell the truth!\"\n\n\"I can imagine sugar,\" he said, \"here, have my breakfast.\"\n\n\"There's plenty to go round Dave,\" said Debs putting another plate before his daughter, \"there Kathy, told you he didn't have a clue didn't I?\"\n\n\"Yeah,\" she grinned, \"That's my Dad for you.\"\n\n\"Don't tell me, you're both going to gang up on me now aren't you?\"\n\n\"What do you think,\" said Debs sitting down with her plate and the coffee jug.\n\nThey ate breakfast and at 'as soon as they felt like it' Dave cast off the lines, jumped back on board and Debs cruised the Montego Bay back out into the Caribbean for their short trip to Kingston, Jamaica. Debs plastered Kathy with sunscreen, and told her new friend about how long she should stay out until she had to cover up. \n\nBy mid-afternoon the teenager was starting to feel the effects of her flights and Debs showed her to her cabin and her bunk. She was asleep in moments.\n\n\"I'll wake her up in time for dinner,\" said Debs, \"don't want the poor thing to suffer jetlag.\"\n\n\"Thanks Debs,\" said Dave pulling on the stainless steel ships wheel the crew had tightened during their stopover, \"That was so lovely of you all.\"\n\n\"That's what Becky and I were off discussing last thing last night,\" she sat next to him with a Coke for him, \"that's also why she loaned me her sexy lingerie seeing as we'll have another passenger with us for the next few nights. I wanted last night to be special.\"\n\n\"And it was,\" he said slipping an arm around her, \"it was so lovely, but then you are lovely Debs...\" he leaned forward and kissed her, \"so lovely in fact I think...\" she looked like she was holding her breath, \"I think I'm in love with you.\"\n\nShe breathed out at last,\n\n\"That's just how it should be,\" said Debs.\n\n\"Really?\"\n\n\"Of course; I'm a little disappointed that it's taken you this long to realise Dave, but you got there in the end.\"\n\n\"And you?\"\n\n\"Yes,\" she said with a wicked grin in her eye.\n\n\"Yes what?\"\n\n\"I love me too.\"\n\n\"You... what?\"\n\n\"Oh for heaven's sake Dave,\" she moved closer to him, close enough to pinch a sip from his Coke can, \"I've been in love with you for weeks! When we first met at the office and I shook your hand, I had just the biggest crush on you. You were so handsome! You were a strong guy with your own opinions and you weren't a soldier!\" She shook his arm. \"When Stuart said that I had to sail here with you, I didn't know whether to be overjoyed or terrified. So I may have come across as a bit resistant at first.\"\n\n\"Just a bit.\" He said.\n\n\"Well, that night that I had the bad dream and you sat up with me and talked me through it, then tucked me in and cuddled me, I got it so bad for you! I really had to force myself not to be to obvious. I didn't know what to do. Then when we had a kiss and a cuddle I was beside myself, then I had the nightmare about Harry and I just knew I had to get past it. The truth I'd been hiding from the world and from me for ten years; you cleverly dragged it out of me with that falling in the sea stunt.\" He laughed, \"it wasn't funny!\" she snapped bashing him.\n\n\"But it worked baby,\" he said.\n\n\"Yes indeed,\" she said slipping an arm through his. \"You held my hand and gave me the confidence to at least start to come to terms with it;\" she stopped and her face and her chest flushed red, \"Shit but you made me horny. It was all I could do not to jump your bones that afternoon, if we hadn't been in so close to the sea lanes I would have dragged you to bed and had you.\" \n\nHe smiled,\n\n\"THAT'S the effect I have on women.\"\n\n\"Fuck off Dave,\" she said, \"But that was the effect you had on me, but I wanted you but I wanted it to be perfect, our first time had to be as romantic as it was. That's the reason I waited until we made it to Key West, and fuck but you were worth the wait Dave!\" Her eyes filled with tears, \"I still have a way to go yet I'm sure but...\" she had to look away from him, \"but then you asked me to move in with you!\" she shook him a bit in her excitement.\n\n\"You're so worth it Debs,\" he said kissing her.\n\n\"Oh get a rooooom you two,\" came a voice from the cabin, and a slightly bleary eyed Kathy appeared with a Coke and a glass.\n\n\"Sorry Sugar,\" said Dave, \"We used to have one but some bloody kid turned up and ruined it.\"\n\n\"Oh, is that a way to treat you only daughter that's flown thousands of miles to help you sail across the Caribbean and help you get a suntan?\"\n\nDebs laughed still with an arm through his, smiling at the other girl in his life.\n\n\"Want a go at steering Darling?\" said Debs, \"you can't do any worse than your Daddy here.\"\n\n\"Oh, thanks for that vote of confidence,\" said Dave.\n\n\"Oh you know I don't mean in Davie?\" she leant forward and kissed his cheek. In seconds Kathy was on the seat next to him and kissing the other cheek, both making loud slurpy noises as they did so.\n\n\"OKAY I surrender!\"\n\n\"and about time too, here Kath,\" said Debs indicating where his daughter should sit, \"Your turn.\"\n\n\"I'll go and cook tea I suppose?\"\n\n\"I love it when a man knows his place...\" Debs gave him a single glance looking down into her lap, where she liked him to be most of all.\n\nThey reached Kingston in very slow time, even hoisting the sails and letting Kathy get the feel of real sailing, and she took to it like a natural, within days having a tan almost as good as her Dad's.\n\nThe holiday was almost over and they had a few days to hang around on the boat in the Worldsail Marina. They visited 'Goldeneye' where Ian Fleming had created James Bond, ate lots of good food before flying home to the UK to be met by his parents with a car for all three of them and their luggage, extremely complimentary about Dave's weight loss and his fantastic tan.\n\n\"And guess what Nanny,\" said Kathy, \"Dad and Debs are an item!\"\n\nHis Mum reached across her granddaughter and took Debs hand,\n\n\"Oh how lovely!\" she said, \"Welcome to the family Darling, and thank you so much for looking after my boy for me.\"\n\n\"Oh, it was mutual looking after Mrs Ross, trust me.\"\n\n\"Call me Jean,\" said his Mum.\n\nShe moved in with him and Kathy, straight into his room and never slept anywhere else. Kathy talked proudly of 'Dad and Debs' and the ten thousand pounds they had raised for Cancer Research. The amount raised was more than that, but after a quiet word, Dave asked Stuart if half of it could be paid to the local women's refuge and the domestic abuse helpline they ran. Stuart was only too happy to do so.\n\nShe rang her father to tell him about the successful trip and that she was moving in with Dave and his daughter, and the Colonel was as she predicted, frosty and demanding to know how the hell he was going to run Har... their charity on his own.\n\n\"Pay someone,\" she said, \"there are bound to be some yachties that would jump at the chance to get bed, board and pocket money to spend their days sailing around the coast and the Med, trust me.\"\n\n\"You know there's very little spare money Darling,\" he said turning on the slightly annoyed army officer voice.\n\nDave had set her up for this.\n\n\"Yeah, well I don't want to do it anymore Daddy, I want to be a teacher, like Mum.\"\n\n\"Weeeeeeell,\" he said, \"All of those poor boys...\"\n\n\"Why don't you ask Ellen to give up everything she worked for to help you Daddy;\"\n\n\"She's very busy,\" he said.\n\n\"So am I but it seems that I can give up my dreams,\" he just went quiet at that, \"My dreams not so important as hers obviously.\"\n\nHe kept up his barrage eventually telling her that he expected her to fulfil her commitment to the family charity and he wanted her at Poole Marina at 0800 on...\n\n\"Dad, I'm not coming, like I said, ask Ellen to take some years out of her busy life to fulfil her commitment to the family charity. Who knows she might like it and after all, Harry never raped her did he... goodnight Daddy.\" She put down the phone, completely forgetting to give him her new address, the reason for her call in the first place.\n\nDebs signed up for her postgrad certificate in education and in no time flat was teaching geography at Kathy's school, Miss Conroy, the round the world yachtswoman with the medal who also happened to be Kathy Ross's Dad's girlfriend.\n\nAs she reached her thirty first birthday, she sat on the sofa hugging Kathy as they so often did and they systematically picked holes in Dave for his cooking skills and the quite splendid dinner he created for all three of them.\n\nOnce Kathy had retreated to her bed, Dave mentioned how well they got on,\n\n\"Oh she's an angel,\" said Debs, \"I love her to bits.\"\n\n\"Would you like a child?\" he said simply.\n\n\"But we already... Dave?\"\n\n\"Would you like to have a baby with me?\"\n\nShe turned in her seat,\n\n\"A...\" she stammered, \"A baby?\" she squeaked her answer.\n\n\"Yeah,\" said Dave, \"Trust me, it's just the best thing in the world. You'd be brilliant at it.\" She just sat there smiling at him, eventually nodding and hugging him. \"S'pose we'd better get married then, you think?\"\n\nFrom the hallway, there was a screech,\n\n\"Oh come on Dad, no fucking way;\" Debs looked round to see Kathy in her nightdress with a glass of water; she panicked, surely she... \"No way are do you just say to my mate Debs 'S'pose we'd better get married,\" she ran in and sat next to Debs, \"if you're going to propose then you do it properly, here,\" she stood and went to the large writing desk that stood in the bay window and withdrew a small red box, Kathy stood tall with hands on her hips looking more like her late mother than she would ever know, \"Now propose properly!\"\n\n\"You're right of course,\" said Dave taking the box from his daughter. He knelt before Debs, her eyes wide open, with a half smile on her lips, \"My darling Debs, will you marry me and be the father of my children that won't pick on me?\"\n\n\"Yes!\" she screeched, \"Yes!\" he slipped the ring on her finger and they all hugged.\n\n\"About bloody time,\" said Kathy kissing and hugging her soon to be step-mum. \"Night Debs,\" she said giving her another hug, \"don't worry about all of that 'children that won't pick on me' shit, he doesn't really believe that's ever going to happen.\"\n\n\"Night Darling, and thanks for steering him in the right direction, he does try.\"\n\n\"Yeah, fortunately we're here to keep him on course.\"\n\nThey married later that summer, in a church with lots of family and friends with Kathy as bridesmaid and given away by her father, who was allowed to wear his uniform and his medals. He confessed he quite liked Dave, more so his spirited daughter that seemed to treat her new step-grandfather with the same amount of respect she showed for her Dad, she even dragged him up and made him dance.\n\nThey honeymooned in Key West with their friends John and Becky, even taking Kathy with them. Their yacht was next up from the Montego Bay and named 'Debandave' in honour of their trip. Becky took Kathy under her wing and they shopped and partied in Key West for a few days while the newly weds sailed away. \n\nMr and Mrs Ross got as far as some buoys on the other side of the bay and tied off to one. Only getting out of bed for food and drink. \n\nWhen they got back to the UK two weeks later Debs didn't even bother with a pregnancy test. She went to her GP, got her prescription for folic acid and booked her three month scan. Their daughter Sally-Ann, was born six months after that.\n\n_______________________________\n\nDear Reader,\n\nI did lots of Wiki searches about sailing when Randi first suggested 'Siren's Song'.\n\nYou must forgive the holes in my story as I know NOTHING ABOUT SAILING. If there are misquotes or out and out sailing untruths, please 'will that suspension of disbelief' -- I write amateur fiction, I don't sail.\n\nThere are some dark matters in this story and I don't apologise for them, it's just how the story took me, honest -- but my heart goes out to the hundreds and thousands of victims of domestic abuse the world over, and my utmost respect goes to the volunteers and professionals that support them in whichever way they do, be it raising money through a bake sale to driving an escape car in the early hours of the morning, to bring those people out of the nightmare and into the light. \n\nAndrogynousother. "
    ],
    "authorname": "Androgynousother",
    "tags": [
        "sirens song story",
        "straight sex",
        "oral",
        "cunnilingus",
        "novella"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/androshorts-that-bloody-woman"
}