{
    "title": "The Leader",
    "pages": [
        "Hey everyone\n\nThis is a sequel to my award winning story, The Beast. To those of you who have read it, welcome back. To those of you who haven't, please go read that first. Minimal effort has been put in to explain the characters and situation from the previous book. This is NOT a standalone. \n\nOtherwise, enjoy, and know that I'm terribly, terribly sorry. But everything plays its part in the end. \n\n... Prologue... \n\nIt was a cold and stormy night... Not like I gave a shit, but that's hardly the point. The point is that for the first time in months, I had a reason to celebrate. It had been six months since I had helped the town drive back a goblin horde. Six months since I'd been elected mayor... Unanimously, mind you... And those six months had been busy. The goblin horde, in its wake, had cleared the land of all hostile forces and creatures. It made hunting a bit rough for a while and meat supplies were slim, but it helped far more. With a severe lack of, well, anything, I was able to start improving the town. With the help of Eila and Ally, we dug out a small mine from a rocky outcrop, a day's walk from the town. This stone was used to upgrade our wooden palisade walls, into real stone battlements. \n\nThere was talk of summoning the stone for a while, but I stamped down on that. I didn't want my magic immunity, or another troll attack, to nullify the stone and make it collapse. But magically moving real stone into place meant nothing, so long as I didn't touch it in transport. With the new wall in place, we were finally able to build out and encompass the nearby river. Apparently that was the original plan, but bandit raids, goblin and animal attacks forced town planning to dig in. It never really went anywhere else from that point. But now, with the river inside the walls, we had a real way to grow the town. \n\nI'll credit Eila for the idea. River access makes it easy to send transport barges into the larger towns to the east. Being on the river makes it harder for attacks, saving money on guards. Then we simply add town citizenship and town membership deals. Anyone can visit the town, anyone can stay in the town, anyone can use the town as a base of operations to hunt, explore and research the wilds of the west. But every container is checked before it leaves and if you're not a citizen or member, you pay a higher tax. As an added bonus, if you're a citizen or a member, you get discounted rates in all the local stores... Well... I say discounted, but I really mean normal. We just mark up the prices for anyone without. All in all, in the last month, there has been a large increase of temporary immigrants to our little town. \n\nWith the coffers filling, people moving, trade increasing, life had gotten pretty cushy. I'd taken the late Jurn's advice and designated most of the responsibilities to others. I didn't want anything to do with the day to day running of things, so unless it was important or time critical, I relied on my people to do what was necessary. Basically all my job seemed to be these days was for carrying out judgement on criminals who came through town. It was our major selling point. Crime was stamped out the moment it started. Drunks were locked up till sober. Violent offenders imprisoned or executed, depending on the crime. Thieves had the three strike process. First offence was a night in lockup and a fine. Second offence was a month in jail and a larger fine. Third offence was a branding on the hand and banishment from the town. Thankfully we hadn't had anything serious so far. Just a few drunks and some hunters had a spill in the street after cheating at a dice game.\n\nAll in all-\n\n\"Hey!\" Chit snapped.\n\nI cracked open my eyes, despite the falling rain annoying me. I stared up her slender body into her beautiful eyes. Her frown, hidden behind the mound of her breasts. The pale green of her skin filled my vision as lightning cracked through the sky. Her small tusks, only noticeable because she was growling at me. She was beautiful in a rugged, handsome way, despite her orcish heritage. \n\n\"Pay attention,\" she growled and rocked her hips, driving her clit into my mouth...\n\nYeah... I couldn't complain.\n\nSwirling my tongue inside her, I pushed it as deep as I could go. I felt the tip press against her cervix and ran my tongue around it. Chit's reaction was to shudder and groan. I'd have grabbed her by the hips to pull her in harder, but the rest of me was otherwise occupied. A quick glance to my left, told me Eila, my first Elfin wife, was in the grip of an orgasm, with my thick fingers buried inside her. A glance to my right, saw Ally, Eila's first love, in a similar situation. That meant Ita, my beautiful, shy succubus, was the one with my cock inside her. I wasn't sure exactly which orifice it was, she could pulse and massage internally, so sometimes it was hard to figure out. Not that it mattered. Hell, tonight was the first time we weren't having sex for energy in a while. Moving stone costs lots of energy. Energy is the life force of elfin beings. So it was just as well, that something my heritage is responsible for, made me an energy generator like nothing else. Whenever I reached climax, I passed a huge amount of energy into whomever was on the receiving end. From our estimates, I was basically immortal, and so were my wives, so long as I kept them... Supplied... \n\n\"HEY!\" Chit snapped.\n\nWith a frown, I looked up at her, before sucking her clit into my mouth and stuffing my tongue back inside her. I barely held back from laughing as her annoyed expression went blank and her eyes rolled back into her head. A moment later, warm fluid filled my mouth as her orgasm washed over her... Yeah... I couldn't complain...\n\n... Chapter One...\n\nI cracked my eyes open as the morning light finally hit my face. Eila was cuddled up to my side, facing away from the window. Chit was in her usual spot, directly on top of me. Ally was cuddled on my opposite side, hidden from the light by Chit's shadow. The only one not physically touching me was Ita. She was terribly shy, extremely submissive and perfectly happy cuddling up behind Ally most nights. Occasionally, she wanted more, but it was a mood thing. She spent months reassuring us all that she wasn't feeling left out. She was perfectly happy with her situation and made her wants and needs known as they came up. Out of all of them, she worried me the most. As a succubus, we had a contract. Our contract stipulated she was my wife, but also that either of us could cancel at any time. I always had that worry that one day, someone would say something rash in the heat of the moment, and she would leave. None of us were knowledgeable in summoning, so it wouldn't be possible to bring her back. So I just made sure she was as happy as my other wives and hoped for the best. After all, demons didn't die of old age, so we could be together for a very long time. \n\n\"Stop moving,\" Chit groaned as her eyes flicked open. \"Trying to sleep.\"\n\nI grinned and leaned down to kiss her softly, earning me a small, sleepy smile. \"But I'm so hungry,\" I moaned softly.\n\nChit just sighed and rolled her eyes. She was the housekeeper of my wives, and didn't appreciate when I went and messed up her kitchen. With a sigh, Chit sat herself up. I watched in awe of her figure as she stretched her arms up above her head. The grin she flashed me, told me she knew I was watching. So it was pretty surprising, when she swung her leg over, turned around and placed her mound on my chin.\n\n\"Eat up,\" she said, laying back down on my body.\n\nI almost laughed out loud, but managed to hold it in. Chit was, by far, the most demanding of my wives. What she says, goes and she didn't like asking twice. So I cowed to her demands and swirled my tongue across her clitoris and entry respectively. There was little I could do at this point. I knew how stubborn she could be when she wanted something. Alternating, slipping my tongue inside her and running it over her clit, she was moaning softly in no time at all. \n\n\"Here husband. Let me help with that,\" Ally whispered softly.\n\nI grinned and sucked softly on Chit's clitoris, as Ally positioned herself above me. As far as I was concerned, there was one thing hotter than watching a woman twitch as you sucked on her clit... It was watching a woman twitch, as you sucked her clit, while another woman licked her ass. \n\n\"Room for one more?\" Eila asked with a smile.\n\nBefore I could respond, her hand appeared above my face, as she slipped two fingers inside her sister-wife. Between the three of us, Chit screamed through her first orgasm, only to slam straight into a second. Her juices splashed over my face, taking me by surprise, but that didn't make me let up on her tender clitoris. \n\n\"Mercy!\" Chit cried as she trembled through her third orgasm in the same number of minutes. \n\nImmediately, we all backed right off and simply milked her orgasm till the end. As Chit finally began to relax, Ally moved away, Eila retracted her fingers and I released her tender clit. Chit slowly lifted a leg over my head, before slumping down onto the bed beside me. I quickly sat up, before scooping her into my arms. Lying back down, I laid her beside me properly and held her as she calmed. She couldn't help the smile as her sister-wives joined us.\n\n\"I'm hungry,\" Ally mumbled.\n\nI just grinned and rolled my hips back, exposing my erection. I heard a hungry little growl and a pair of lips slide down half my length. Chit twisted around and pressed her lips to mine as someone began massaging my balls. \n\nGods I loved these women...\n\n***\n\nBreakfast was a rushed affair this morning. We'd more than slept in after the events of the previous evening... Not to mention, breakfast. Either way, we were all running late. Chit was going to be busy with housework and a few clothing alterations she'd begun. Ita was our designated grocery shopper. Eila and Ally needed to fill and heat the baths. But I? I tried not to let out a small sigh... Today, being the first day of the week, meant I was available to the public. Basically, anyone with a minor problem, complaint, question, yada yada, whatever, was welcome to come speak to me. It was never an issue with Jurn as the town was small and somewhat stagnant. But with new growth and new citizens, new problems came.\n\nSo with a kiss from each of my beautiful wives, I made my way out of our little home. Jurn's home had been remodelled as a type of meeting house. It still contained the school, which was slowly increasing in attendance. That probably had something to do with my views on education. If you wanted a population that could look after itself, it needed to be educated to do so. Basic literature, numeracy were standard. But I also put emphasis on racial studies, work experience and local customs and laws. Basically, individuals of various races and industries would come in and speak with the children. Then as children began to develop skills and interests, they'd be taken away for work experience and eventually apprentice. I didn't want any women forced to work in the dollhouse due to lack of skills, or men living in the dirt like Darry was when we arrived. \n\nSpeaking of, that rascal was too busy smooching his new wife at the counter to spot my wave as I walked past. It was amazing what a chance for the future and some confidence would do. I just hoped when she fell pregnant, that they'd be able to find temporary replacements. We'd be in trouble if they took time off for any reason. Eila and Ally were already working an extra shift in the bathhouse. It used to be morning and evening, but we've had to open afternoons as well. It was that, or find a way to extend or build a second bathhouse. But Eila and Ally could only be in one place at a time, and extending would mean removing Darry's home and closing for weeks. Something would need to be done eventually, but not yet. \n\n\"Ew, look at its fur. It's so gross!\" A small voice called out.\n\nI paused, not liking the tone, let alone the words being used. I made my way around the side of a building. In the opposite direction to the market square, there was a small alleyway. Inside that alley, was a huddled group of children.\n\n\"Leave me alone! I never did anything to you!\" I squeaky voice called out. \"OW! Stop pushing me!\"\n\nWith a growl, I made my way closer to the group. \n\n\"What are you gonna do? Huh? Tell your parents?\" Another voice demanded.\n\nAs I got closer, I could see three figures. The first two, standing over the second. They were all children, no older than twelve or thirteen. The two standing were human, but the one on the ground was a fetz. The latter was crying softly with their head pressed into the ground. Sure enough, the fetz was dirty, but I had no idea why.\n\n\"What's going on?\" I asked, startling the three of them.\n\nThe two human children, a boy and a girl, spun around, staring at me in shock. I took a moment to memorise their faces. I was certain they were students who attended the school. Which just made things worse when I thought about it. The fetz were regular speakers at the school. They made excellent hunters and trackers and did very well in this town. \n\n\"You two, I want to see both of your parents before you come to class, next,\" I growled at the pair of them.\n\nThey both just nodded dumbly at me, before scurrying away. I turned my attention back to the small fetz, curled up on the ground. I made my way closer and bent down to examine them. They really were filthy, their fur matted and even missing in some spots. It was obvious this individual was homeless, which made me mad, as I'd taken measures to prevent that from happening.\n\n\"Are you okay?\" I asked softly, reaching out to touch their shoulder. The small figure froze at my touch, but didn't otherwise respond. \"It's okay now,\" I continued. \"Where are your parents, I'll take you home.\"\n\nThe figure just pulled into a tighter ball and cried. I put two and two together and remembered the deaths after the attack. There were a surprising number of fetz in the casualties. This child was likely orphaned, and being alone, hadn't known to come for help. So with a small sigh, I scooped them into my arms and made my way back home. The whole time, the small fetz in my arms trembled and cried, while hiding their face behind their furred hands. \n\nI made it to the house, just as the door opened. Ita paused in the doorway to give Chit a kiss goodbye, before they both stopped as they saw me.\n\n\"Husband?\" Ita frowned. \"What is that?\"\n\nI smiled grimly, before answering. \"I believe it is a casualty from the battle. They haven't spoken, but from what I can gather, they're orphaned and homeless.\"\n\nIta looked like she was about to cry, when Chit took charge. \"Ita, you can shop later. Go run next door and get our wives back here to run a bath. Tell them it's an emergency and to come now. Then I need you to put out some of last night's soup for our guest. Husband, follow me.\"\n\nIta dashed off as expected as I followed Chit inside. She gestured for me to set the fetz on the floor. They were so small, I had to bend down to do so, but they stood on their own. Chit dropped to her knees and started examining them.\n\n\"Your fur is matted to these rags you're wearing. I'm going to have to cut them off. Is that okay?\" She asked.\n\nThe fetz nodded, but otherwise didn't respond. Chit ducked into the kitchen and returned with a pair of scissors. She squatted before the small fetz and started gently snipping away at the fabric. It was as the front finally fell opent, Chit's expression dropped. She grabbed the ruined fabric and pushed it closed before turning her gaze to me. \n\n\"You need to go to work, husband,\" she said quickly.\n\n\"Are they okay?\" I asked, suddenly concerned.\n\nChit almost snarled at me when she replied, \"SHE, is fine.\"\n\nI must have had that stunned mullet look on my face a moment too long, as Chit's frown turned to a scowl. That was enough to snap me back to reality and I turned and left. At least I collected more kisses on my way out as Ita returned with an anxious looking Eila and Ally. \n\nThis time, as I made my way to the meeting house without interruption. I just nodded and waved as the individual sellers of the market called out their greetings. It was an odd sensation to be honest. I'd spent years living as a perpetual monster. Even when I first arrived at this town I'd been viewed with an air of fear. But now? Now it was the complete opposite. People viewed my passing with a sense of safety and security. I'd even had to put a stop to an overzealous artist, who was planning a statue to commemorate my closing of the gate. That one still made me chuckle. The young dwarf was another relative or Marge's, who specialised in masonry. Though, apparently wall building wasn't in his usual skillset. \n\nI chuckled and pushed my way into the meeting house, only to sigh, seeing how full it was. Today was going to be another long day. \n\n\"Morning everyone, sorry I'm late. I was dealing with an important matter. Please come in, in the order you arrived, I don't want to be settling disputes about line jumpers.\"\n\nA few people laughed, but most knew I wasn't kidding. I'd thrown a pair of traders outside the walls for an evening, after they raced through the doors and made simultaneous complaints about the other stealing their 'spot'. After a night outside the walls, they were much more reasonable. So with a strained smile, I made my way through the door into Jurn's... well... My office. Everyone knew the drill so far. I had just enough time to take a seat, before the door knocked.\n\n\"Come in,\" I said loudly.\n\n\"Thank you, Mr Mayor, Sir,\" the green scaled man said, entering the room.\n\nI frowned at first, not only for his use of words, but that I hadn't seen him as I walked in. He must have been waiting in one of the chairs off to one side or something. Either way... It wasn't normal for people to suck up quite this much...\n\n\"Good morning, I must admit, I've been meaning to track you down for a while now.\" I said evenly, before gesturing for the seat.\n\nThe green man paused, before taking his seat. He looked even more nervous as he said, \"have I done something wrong? Sir?\"\n\n\"No no, not at all,\" I smiled. \"Honestly, I just wanted to know more about you. I've never seen one of your kind. I don't even know your name.\"\n\nThe green man smiled, appearing relieved. \"Sir-\"\n\n\"Just call me, Frelser,\" I corrected. Honorifics made me grumpy. I'd never met someone with a title I actually respected. Baz was different, he earned his rank of captain.\n\n\"Right, Frelser, sorry.\" The green man took a moment to collect himself. \"My name is Ugoolde. I'm a Drarskk, member of the Ootung Clan. And I have come to ask permission for my family to join me in the town.\"\n\nI sat for a moment to take in what he'd just said. \"Ugoolde, why doesn't your family live here now?\"\n\n\"Sir... Frelser. My daughter is finally of age, she hasn't struck out in over two years. I am hoping to teach her a trade before she makes her flight.\"\n\nI just sat and stared at the Drarskk. I only understood a few words he said, but some of them sounded problematic. \"You'll have to forgive me. I know nothing of your people, your customs or what you mean by 'struck out.' I'm not saying no, I'm just wanting to educate myself.\"\n\nUgoolde smiled and nodded. Smiling also let me catch his pointed teeth for the first time. \"Well, Drarskk society is matriarchal in nature. The men are the workers, and the women are our fighters and leaders.\" I took in his physique and wondered how someone with his figure could be relegated as a worker. \"As children, we're volatile, dangerous and aggressive. We grow out of it as we age and become more social. It's a coping mechanism from our ancestors who would abandon our young shortly after birth. This leads our women and children to live away from other races, for their own protection. I have been sending all the money I can to my wife and daughter to make their lives easier. Now my daughter is of age, I want her to come here and learn some skills before she makes her flight.\" ",
        "I nodded along as he spoke. It sounded reasonable, if she was unlikely to attack anyone, she'd be welcome, same as anyone else. \"Ugoolde, your family, like any other peaceful person, is welcome here. Specifically, being your wife and daughter, they will be recognised as citizens.\"\n\nUgoolde smiled widely at my words before standing. \"Thank you, Felser. Thank you. I'll... I'll be a week or so. I will travel out to fetch them myself.\"\n\nAfter a quick shake of his hand, the Drarskk dashed out of the room. I assumed he'd be out of the city within the hour, if he wasn't packed to leave already that is. I wrote a note to remind myself of the details so I wouldn't forget. I just set down the pen as a gentle knock rang out. Before I could call out, the door opened and a woman stormed in with a Fetz woman behind her.\n\n\"Frelser, you must do something about her fur on my washing!\" The woman snarled.\n\n\"It's not my fur, Sir. I don't know what she's talking about, she never even spoke to me about it before,\" the Fetz woman replied.\n\n\"Liar! Your husband comes home covered in filth. You take his clothes outside and shake off all the dust and fur. It blows across the street into my washing!\" The woman was irate.\n\nI cleared my throat, catching her attention. \"Did you bring any proof?\"\n\nThe woman gaped, \"proof? What sort of proof do I need?\" She demanded.\n\nI just sighed and rubbed my temples a moment. \"You say your washing is covered in fur. If you want an official ruling, bring me some of your washing that is covered in this fur and I'll take action. But apparently, you haven't even taken the time to speak to your neighbour about it. So I'm not about to do anything about it now, just on your word.\"\n\nThe woman gaped at me a moment, before her face turned bright red. She spun on her heel and stormed out of the meeting. The Fetz woman turned and watched her leave, before coming back to me.\n\n\"Sir?\"\n\n\"Do you enjoy where you live, miss?\"\n\n\"Harty, Sir. And no, not really. Most of our neighbours ignore us, but nobody is particularly friendly either,\" she smiled sadly.\n\nThe racial divide in this town wasn't horrific. Groups still tended to stick with their own. But there were outliers, usually humans, who just wouldn't get along. \"Harty, if you'd like to move, I would be more than happy to help find you somewhere more comfortable. In the meantime, maybe shake your husband's clothing downwind of that harpies washing, just to keep the peace.\"\n\nHarty giggled before nodding. \"Thank you, Sir. I'll do that.\"\n\nI nodded and smiled as she turned to leave. Unfortunately that was as far as she got before the door burst in, knocking her to the floor. I was around the desk in a flash to help poor Harty up off the floor, as a large man stormed in. Before he could say a word, I grabbed him by the face and flung him back through the open doorway. Bending down, I took Harty by the hand and helped her up. \"Are you okay?\" I asked, checking her over.\n\nHarty just nodded and rubbed her nose. \"I'll be fine, Sir. Nothing's broken.\"\n\nI nodded and smiled, \"would you like to press charges? I'd be happy to witness it.\"\n\n\"Sir, if it's all the same. I think I'll let it go for now,\" she smiled.\n\n\"If you're sure,\" I said, patting her shoulder.\n\n\"No wonder your wives adore you,\" she giggled as she left.\n\nThat comment made me smile, but that was quickly wiped off my face as a pair of guards frog marched the man back into my office.\n\n\"Alright, care to explain why I shouldn't have you charged with assault?\" I asked the man.\n\nHe just sneered at me, before changing his mind. \"I apologize. I didn't know anyone was standing behind the door.\"\n\nI frowned at his weak excuse. He didn't even knock, there was something else going on. \"What are you here for then?\"\n\nThe look in his eye was dangerous, when he looked up at me. \"My daughter says you went after her this morning. Something about not being able to do her lessons until I came in?\"\n\nI groaned internally and tried to remind myself that I couldn't just eat my problems. \"Sir, your daughter was assaulting another child-\"\n\n\"Just a fetz,\" the man snapped.\n\n\"This town is inclusive of all races,\" I said evenly.\n\n\"So you say, but you don't have to live around the fucking things. My daughter was right to stand up to that bloody animal.\"\n\n\"What's the current market value of your home? Perhaps I can assist you in relocating.\"\n\nThe man's eyes lit up for a moment, before grinning. \"Sixty gold was the last offer I had. I'd be happy to move to an area less contaminated for that amount.\"\n\nOh how the whims of fate twist and turn... \"Very well, I'll just look up your writ and get this sorted.\"\n\nI got up and went to the filing cabinet, \"name?\"\n\n\"John Crawsbey.\"\n\nI looked through the 'C' drawer and found his writ. Looking at it, he'd only purchased the home a month before I arrived at the town with my wives. It also said that he'd only paid thirty gold. The 'offer' he'd received, if it ever actually happened, was probably from a visitor and therefore had the visitor tax applied. \n\nI turned the document around to show him, smiling as he nodded in confirmation I had the right one. I then spent a few minutes writing up a receipt for the sale. The property would be sold back to the town, for the sum of sixty gold pieces. Satisfied, I turned the document around and offered John my pen. The man with a gleam in his eye, scanned the document and signed at the bottom. The sale was final.\n\n\"Alright, let me get your money,\" I smiled, \"then we'll talk about the rest.\"\n\nTurning around, I unlocked and opened a chest behind me. It wasn't an official treasury, but it always held several hundred gold pieces. Counting out sixty of them I turned back and placed them in neat stacks of ten. As John reached out to take them, I grabbed his wrist.\n\n\"One moment, we have more to discuss,\" I said quickly.\n\nJohn frowned, but retook his seat. I glanced up at the guards who were keeping professional stances. But even I could see they were confused with how this was proceeding. They knew what happened last time someone barged in. This was much worse and I was catering to him and being blatantly ripped off in the process.\n\n\"Now, this here is the sixy gold from the sale of your home. Minus ten for assault.\"\n\n\"What?!\" The man yelled.\n\n\"Minus five for transport-\"\n\n\"Transport!?\" The man moved to stand, but the guards pushed him back into his seat.\n\n\"And another five for export tax, seeing as you've made a profit on the sale of your property.\"\n\nI scooped the twenty gold in fines back into the chest, before bagging up the last forty. Holding it out to the man, I smiled. \"This town is inclusive of all races and cultures. Your child is the direct result of your upbringing. Between her assault on another child, your assault on a Fetz, your blatant disregard for both and your poor attempt to swindle me, I hereby banish you from the town.\"\n\n\"WHAT!?\"\n\n\"Please escort him to his home to pack. If his family wishes to stay, I will allow it, but they will need to seek out a new home. If his wife wishes to leave him, she is entitled to half his earnings. Otherwise, stick him on the next merchant vessel with guards and send him off. Once you have done so, please ask Harty to come see me.\"\n\nThe man was pale as the two guards smirked and led him off. The guards in particular were exceptionally grateful to non humans. Ignoring my actions, Grah and Marge helped them hold the line while I did so. Elsewhere in the city, other dwarves armoured up and held positions within the town. The Fetz in particular helped weed out goblins that tried to hide in the town. Their sense of smell made a day of house to house sweeps go by in just a few hours. Since that night, many non humans had joined the ranks of the guards. With new recruits, our militia was looking more like a small army. Combined with the upgrades to the walls and the introduction of trading, our little town was soon going to be a small city. \n\nThe remainder of the day went about how I expected it too. Minor complaints, squabbles, a few people wanted permission to start businesses and wanted real estate. Someone even tried buying the rights to the wooded area to the south of the town, so they could hunt it exclusively. They weren't impressed when I laughed at them. I had two shakeups to my day. The first was a woman who brought in her son and made him apologise to me, and write a note to the fetz girl he attacked, apologising for that too. The second was a tearful Harty, who cried and threw herself over my desk for a hug, when I handed her an exchange for her home, to John's previous. If that wasn't bad enough, she almost kissed me when I handed her the gold to go along with it.\n\nEither way, I was damn tired as I walked back home.\n\n... Chapter Two...\n\nPushing open the front door, I was assaulted by the smells of Chit's cooking. I beamed as I staggered into the kitchen to the sight of my beautiful wives. As one, they all got up and came to me for a kiss. They always made me feel so very loved. I had a nightmare once that I woke up back in my cave as the gatekeeper... None of my wives complained, but they were all pretty tired the next day when I was finished with them. With that settled, I took my seat at the head of the table, before smiling at the addition of cushions. Chit was always keeping herself busy and liked making home improvements. It was as I settled into my seat, I spotted the young Fetz girl at the end of the table.\n\n\"Oh,\" I said, unsure of how to proceed.\n\n\"Husband, this is Benty,\" Ita spoke softly while she patted the girl's shoulder. \n\nI looked her over. She'd obviously been bathed at least once, probably more. Her fur was soft looking, brown and shiny. She was sitting quietly, trying not to make it obvious she was staring at the roasted meat in the centre of the table. I imagined it had been a while since she'd eaten regularly. \"Chit, can you serve Benty some dinner. We'll save the talking for later.\"\n\nChit's reaction was a small smile before doing just that. The meat was superb. A venison leg, seasoned with rosemary and garlic butter that gave the edges a golden crispiness that I loved. It seemed Benty loved it too as she purred softly as she tore into the meat like she was starving. Along with the meat was an assortment of roasted vegetables. These, Benty wasn't so much interested in, but I guessed that was a 'species' thing, not a 'kids and vegetables' thing. As usual, my wives finished up first, leaving me to devour the rest. My apparent magical stores had to be replenished somehow. That was when I felt the eyes. Glancing up, my wives were chatting softly with one another. But Benty, the expression on her face just about broke my heart. She didn't have it in her to ask for more, but I could see it plain as day she wanted it. So with a smile, I cut the remainder of the meat in half. Taking a portion for myself, I pushed the meat directly towards the young Fetz. Her expression turned to delight as she took the last piece and I watched in amazement as the small girl turned into a bottomless pit. I smiled at her reaction as I went to my meal, completely ignorant of the blatant stares of desire my wives were giving me. They'd never seen how I would react around children before, not that I really had either. \n\nAfter dinner, Chit got up to make tea, while Ita and Ally washed up. This left me with Eila and Benty. \"So, Benty. Where do you live right now?\" I asked.\n\nBenty frowned and shook her head, \"nowhere, sir. The house I lived in with Mama and Pa got wrecked in the attack... Water comes in when it rains and it was cold...\"\n\n\"Where did you come from before this town?\" Eila asked, stroking the child's hair.\n\nBenty leaned into her embrace a moment before replying, \"I was born here. Mama said she came from the north, but I don't know where.\"\n\nI frowned trying to think. \"What about friends? Do you know anyone?\" I asked.\n\n\"Mama had a friend. She made me call her Aunt Harty. Aunt Harty always brought over cookies... But... I haven't seen her in a long time.\" Benty said with a frown.\n\nI just froze... It was a hell of a coincidence, but what hadn't been since rescuing Eila. \"I'll be back,\" I said quickly and got up.\n\nDarting out of the house, I jogged back to the meeting house. It was locked up for the night, but there were still guards stationed here. They recognised me immediately and unlocked the door. One even followed me inside with a torch. It took me a few minutes to locate the copies of Harty's writs. The first was for her current home, the second was for the new one. I had no idea where she'd actually be, but her new home was closer, and now I had the address. Thanking the guard, I ran back out into the night and turned towards Harty's new home. It was only a few minutes before I skidded to a halt by the front door. I could see a light on inside, which made me grin. Knocking rapidly, I waited.\n\nThe door opened and a young Fetz man stood before me, \"Sir? Is something wrong? I though-\"\n\n\"Do you know a young girl named Benty?\" I cut him off.\n\nHe frowned and nodded his head, but Harty dashed into view, \"Benty? Oh my gods, is she alive?\"\n\nI grinned at her reaction, \"yes, I found her today, she's been homeless since the attack.\"\n\nHarty clutched her hands to her face in shock, before dashing back inside. I heard her rummaging around for something. Her, I'm assuming husband, just stood awkwardly while we waited for whatever it was she was collecting. A moment later, she appeared, holding a small bundle wrapped in a cloth.\n\n\"Take me to her, please. She always loved my cookies,\" Harty smiled, but in a manner that made it obvious it wasn't a request.\n\nHarty's husband kissed her on the cheek and closed the door. I tried to hide my smile as I led Harty back to my home. It didn't take too long, but felt far longer. Harty didn't seem to want to chat, wanting to get there as soon as we could, but without carrying her, I doubt she'd have kept up with my pace. Soon enough though, we came to my home. Pushing open the front door, I gestured for Harty to go in first. The moment she did, all hell broke loose.\n\n\"AUNTY HARTY!\" Benty screamed.\n\n\"BENTY!\" Harty cried back.\n\nI heard a muffled thump as I closed the front door and turned back to see them both burst into hysterical tears. They were both clutched to one another, kneeling on the lounge room floor. Harty was alternating from kissing the girls cheeks and licking the fur on her head. I smiled, thinking of how cats groomed one another. I could even see Benty's tongue licking the fur on Harty's arm. I just made my way past them and took a seat at the table. The moment I did, Chit dropped a mug of tea in front of me, before following it up with a kiss. I just nodded my thanks and tried to ignore my wives silently crying as they watched the two reunited Fetz. It was a few minutes later when I heard muffled talking. Harty and Benty were in a quiet, yet serious discussion. It was good to see Benty actually speaking, she'd been so quiet in the meantime. \n\nHarty quickly stood, pulling Benty up by the hand and led her towards me. \"Sir, what is your plan for Benty?\" She asked nervously.\n\nI just smiled and replied, \"we have a spare room here she can use until we can find a more permanent solution.\"\n\n\"I'll take her,\" Harty said quickly.\n\nI glanced down at Benty who was clinging to the Fetz woman. I saw the look in her eyes and the slight nod. Coming to a decision, I raised my eyes to Harty. \"I have conditions. Firstly, Benty comes to school. Second, payments for services to fostering a child are paid in baths, you are always welcome and you no longer pay. Thirdly, if you ever need anything, you come to me and I will do what I can to help you.\"\n\nHarty sniffed as a tear rolled down the fur of her cheek. In a flash, her arms were around my shoulders, while she mumbled the words, \"thank you,\" over and over again. I felt a smaller thump as Benty joined her.\n\nHalf an hour later I stumbled into our private bath after walking the two Fetz to their new home. I just smiled at the sheer dumb luck of the situation. If that stupid woman had picked a fight with anyone else, poor Benty would probably still be out there... With a sigh, I got comfortable, as my wives crawled into the water around me. Usually, they took turns sitting directly beside me, for snuggling. But getting me in the bath was also a good time for them to bail me up when they wanted something. So I stifled a groan as Eila crawled into my lap, as the other three pressed in close.\n\n\"What have I done wrong?\" I asked with a nervous smile.\n\n\"We're not pregnant,\" Eila said slowly.\n\nThose words hit me like a ton of bricks. We'd been having sex for months, all of us... Pregnancy wasn't even something I'd considered, and yet, she was correct. Surely, with how often I filled them up, one would be pregnant. But... I didn't really leave any mess behind either unless we had sex in the water... \n\n\"I... I see...\" I mumbled. \"Considering there's four of you, I would guess the problem is me then...\"\n\nI felt the four of them press closer. It comforted me, before Eila continued. \"Maybe there's something we're missing. When you fill us, there doesn't seem to be any mess afterwards. Maybe that has something to do with it?\"\n\n\"Sure, what do you suggest?\" I asked.\n\nEila grinned, \"I think we should run some tests. You've only ever come inside us. Maybe we should see what happens if you do it somewhere else. Or multiple times with the same partner, Ally would be a good one to test that. The cock hungry slut she is...\" I glanced at Ally who was licking her lips. \"I'll do some more research when I can. See if I can come up with other ideas.\"\n\nI just nodded, before Eila climbed off me. In a flash, Ally took her place, practically salivating at the thought of what Eila had planned for her. In no time at all, I helped lift her and immediately impaled her on my already throbbing erection. Taking Ally by the shoulder and hip, I knew what she wanted. All my wives had requested this at some point, but Ally practically begged for it. Gripping her firmly, I lifted her body and slammed her back down on my cock. Ally's only reaction was to squeal in pleasure as I used her as an elfin masturbator. As her third orgasm slammed into her, I finally found my own. The usual blue light filled her eyes as Ally groaned and wriggled in my grip. \n\nPicking her up, I stepped out of the bath, while keeping myself buried to the hilt inside her. I ignored the giggling from my other wives as they quickly dried us off, before I started walking back inside. Ally could do nothing but twitch and groan as she jostled and bounced with every step. Her eyes rolled back into her head as I got to the top of the stairs. I'd be a little concerned, except her tunnel clenching over my cock told me she wasn't in any pain. With a grin I carried her into the bedroom and lowered us onto the mattress without letting myself slip out of her. Bending down to kiss her softly, she mumbled incoherently. I just smiled, before withdrawing half my length and slamming it back inside her again. Sitting up properly so I was more comfortable, Eila and Chit ducked under my arms and took Ally's nipples in their mouths. I grinned at Ally's contorted expression and pressed my hand over her mouth to muffle her scream.\n\nAlly was always eager to fuck. She wanted nothing more than to be used. If I wanted to kiss her and love her slowly, she was happy. But if I held her down, or treated her like an object for my pleasure, she practically fell from the orgasm tree, hitting every branch on the way down. So pinning her down, preventing her from speaking or screaming, while I sawed my cock in and out of her... There wasn't much more I could do for her. Hell, as her sister wives attacked her breasts, Ally practically went cross eyes with pleasure. The sound of a jar popping open caught my attention. Ita was holding the jar of olive oil we used as lube. She grinned mischievously at me as she lubricated her fingers and re-sealed the jar. I watched as she climbed onto the bed behind me, which honestly made me a little nervous. I frowned a little as I felt her fingers brush against my balls, but I quickly realised what she was doing. ",
        "Ally did too, as her eyes went wide and she started thrashing around. \"Ally, bite if you want us to stop,\" I said, not slowing my pace.\n\nAlly's reaction was to press her tongue into my hand and start licking frantically. I just grinned and pinched the muscle between my fingers. Which turned out to be a mistake, because the moment her mouth was exposed, she started screaming. So with a sigh, I released her tongue again and pressed my hand over her mouth. Her tunnel had been constantly clenching and massaging my length since before Ita started playing with her ass. I could only barely distinguish the feeling of Ita massaging her sister-wife's insides, on the underside of my cock. Gritting my teeth, I exploded a second time. As expected though, Ally's eyes glowed blue as she absorbed the power I filled her with. Her entire body arched for a few seconds, before she collapsed limp on the bed. With a start, I pulled myself free, only to watch in amazement as Ita removed her entire hand from Ally's ass. \n\n\"She's fine. Just asleep,\" Eila said softly. I watched as she bent over and examined Ally's thoroughly fucked holes and sighed. \"Seems like it didn't work.\"\n\n\"At least it'll be fun trying,\" Chit mumbled, making us all laugh.\n\nWell, all except Ally, who was snoring lightly with a grin on her face. She had the right idea of it, so I cuddled up beside her. The others took a moment to get comfortable, before Ita swore and got up to blow out the light. I was already asleep and didn't feel her come back to bed afterwards. \n\n*****\n\nIt was early when I got up. Today, Chit wasn't far behind me. She grumbled as she climbed out of the mound of limbs that were our wives. There were a few affectionate touches as she climbed free. I had just enough time to see her smile and wiggle her ass as at me, before I pulled my shirt over my head. I waited for her to dress, before collecting my first kiss of the day, before following her downstairs. With a smile I followed her swaying hips into the kitchen and started getting a pot of tea ready. Right up until we were interrupted. \n\nKNOCKKNOCKKNOCK\n\n\"FRELSER!\"\n\nI looked at Chit, \"Sounds like Captain Baz,\" I said, heading for the door.\n\nI pulled the door open, just as Captain Baz went to knock a second time. The moment he saw me, he sighed in relief. \"Sorry, Frelser. There was an attack on a transport yesterday.\"\n\nI growled to myself. We'd had occasional issues in the past, but never an attack. \"What happened?\"\n\n\"A rower made it back at sunrise,\" Baz started. \"He was wounded, shot with an arrow. Said they were ambushed half a day downstream. He's stable, but not doing well.\"\n\nI nodded and gestured for him to wait. Ducking back inside, I rushed up the stairs to spot my wives already getting ready. \"Ita, I need you. A transport was attacked, we've an injured rower.\" Ita and the others gasped, before they made a mad scramble to dress. \"Eila, Ally, wait here with Chit. I'll be back when I have news.\"\n\nRushing back downstairs with Ita on my heels, Baz smiled grimly and led us to the infirmary. It was somewhere that we were relatively familiar with now. Ita's ability to use healing magic made her a common fixture after the battle. She couldn't heal bones or damaged organs. But stopping bleeding, closing cuts and preventing infection, were well within her abilities. She'd saved dozens alone from infection and was well liked within the town. Nobody even suspected she was the frail woman who lived with Gentar for all those years. Especially when she refused to hide her demonic traits. Though, that hadn't done her many favours with the men's wives. But anyone who spoke to her, knew she was as shy and quiet, as she was completely devoted to me. So she got along fine with or without me.\n\nAs we arrived at the infirmary, Baz led us directly inside. The infirmary was a decent size, and thankfully there was only one patient today. The man, middle aged and bald, had a bandage wrapped around his shoulder. Though, he was sweating and breathing rapidly, as a nurse spoke in gentle tones and wiped his forehead. \n\n\"Here,\" Ita said softly and approached, \"let's see what I can do.\"\n\nI watched and tried not to remember the day Ally nearly died in my arms as Ita worked her magic. The man's lips curled into a grimace as she worked, but his breathing evened out very quickly.\n\n\"There, I cleared out the infection that was setting in and closed the wound. You should take it easy for a while though, the arrow hit the bone and has done damage,\" Ita said.\n\nThe man groaned and shook his head, \"can't take time off.\"\n\n\"Why?\" I asked.\n\nThe man turned and spotted me for the first time. I was relieved when I saw the flash of recognition and the hope. \"Babies coming, need to buy things.\"\n\nI just nodded, \"you've been attacked while in service to the town, others lost their lives. I'll make sure your child has it's needs met.\"\n\nThe man smiled, \"thank you, Sir.\"\n\nI sighed again. I really didn't like honorifics. \"What can you tell me about the attack?\"\n\nThe man shuddered, \"We got to the crossroads half a day from town. That pisspot you kicked out was yelling and making a fuss. He was the first hit. Arrows flew out of the trees, everyone started screaming and trying to hide. I caught the arrow in the shoulder which knocked me overboard.\" The man sighed and rubbed his face. \"The boat exploded, I think they ripped it apart with magic or something. I managed to find a piece to float on and the river carried me away from them. Once around the bend, I crawled out, stopped the bleeding and came back. I didn't see anyone else out there, I think I got lucky.\"\n\nI nodded with a frown, \"Did... Did the banished man bring his family?\"\n\n\"That's some luck,\" the man chuckled. \"His wife left him at the dock. Said she was going to stay with her sister. Called him a lazy, rude, loudmouth layabout. He tried hittin her, but the guard stepped in and stopped him. With their help, she got her share of the coins and the guards put him on the boat.\"\n\nI nodded, feeling somewhat better. \"Alright, you take it easy. I don't want to see you working until the nurse says otherwise. If something comes up, come find me or one of my wives.\"\n\nThe man nodded as the nurse helped him stand. \"Will do, Sir. Thank you.\"\n\nI nodded and headed for home with Ita beside me. \"So what are you going to do?\" she asked softly.\n\nI just took her hand and frowned, \"two options really. I can wait and send out another transport. Chances are it was a random attack brought on by that idiot yelling. Or... I can take Eila, Ally and a few guards, and make sure it doesn't happen again.\" I took her hand, knowing she wouldn't have liked those options. \"Either way, I need to make an announcement after breakfast.\"\n\nWhen we arrived at home, I told my wives everything that had happened. They were as upset as I was. Things had just started doing very well here, and now we had a potential bandit problem... Ones with skills and magic... I dropped my head into my hands and groaned loudly...\n\n\"I'm sorry,\" Eila said as Ally cuddled her. Our wives just looked on in confusion.\n\n\"If it is, I'll kill him,\" I grumbled.\n\nEila nodded her head, \"I should have known my father wouldn't just abandon me...\"\n\n... Chapter Three...\n\n\"No, burning down millions of trees around the rivers just isn't possible. Even if it were and we could keep the fires contained. It would take armed guards, patrols and months, if not years to burn all the way to the plains.\" I called loudly as the man sat back down.\n\nI looked out over the members of the town that could fit inside the meeting hall. There was even more outside and someone at the door was repeating my words so they could hear. It stirred up quite the fuss originally. I've always had a first in, best dressed policy. All the nearby shopkeepers and workers got here first, so they were the ones seated comfortably. Those who dawdled or thought themselves important enough to be seated where they pleased, but took their time getting here, were left outside. There had been a lot of muttering at that.\n\n\"So, all those in favour of waiting and sending a second transport?\" I looked around the room as arms came up in ones or twos. It wasn't the most popular solution as it prevented us from conducting business outside the town. But it would potentially spare lives and injuries if I was wrong about my hunch. \"All those in favour of a surprise attack?\" Yeah... Just about everyone. I should be offended by the townsfolk's lack of concern over my welfare, but it was probably more likely they couldn't see a situation I couldn't handle. \"Right, we'll set off tomorrow with the morning transport. That will be all.\"\n\nI watched with a grim look as everyone began to depart. The only ones who remained were my wives, Captain Baz and the two guards that remained by the front doors when it was closed. I waited in silence as the room emptied itself and people went about their day. Then I turned to the guards.\n\n\"Make sure nobody comes within earshot.\" The two guards nodded slightly and moved to the door. Pulling it closed as they exited, I sighed. \"We leave in an hour. Eilla, Ally, Ita, you're with me. Baz, however many men you can recommend bringing. We also need some volunteers to actually sail. Leave that till last, if there's a spy in town, I want the word to go out first.\"\n\n\"I'm coming too,\" Chit snarled.\n\n\"Chit-\"\n\n\"NO! I'm not being left behind,\" she snapped. \"Do you know what it's like when you went to fight?\" She demanded as tears rolled down her eyes. \"I pace around the kitchen, drinking tea and going out of my mind with worry. I cried every time you left, even the first time when you left Darry behind.\"\n\n\"Chit, you're not a fighter. You don't even have a weapon or armour,\" I sighed, not wanting this conversation.\n\n\"I've been practicing with your mace. Besides, Ita doesn't wear armour,\" Chit mumbled.\n\nI was about to reply, when one of the guards knocked and opened the door to the hall. \n\n\"I'm sorry, Sir. Marge and Grah are both here. They say it's to do with the attack and it's important.\"\n\nI nodded my head and waved for them to come in. The guard stepped back as Marge entered hand in hand with Grah. Despite the tension of the situation, I couldn't help the smile that came across my face. For such a contrast, they did make a beautiful couple. \n\n\"We come bearing gifts, there's a cart outside,\" Marge said with a smile.\n\nI turned back to Baz and nodded my head. \"Alright, spose you should get on it. I'll see what they've got for us. I'll meet you at the dock in an hour.\" Baz nodded and quickly left to carry out my instructions. Turning my attention back to Chit, I pulled her into a firm hug. \"I don't want to see you hurt. I love you so much, it would kill me and you're the most vulnerable. So we'll talk about this later.\"\n\nChit sighed and nodded her head. Releasing the small Orc, we headed out to see what Marge and Grah had in store for us. Sure enough, there was a cart waiting. If I wasn't mistaken, it was the cart I saw Darry dragging around all those months ago. Over the cart, was a series of lumps covered by blankets. \n\nMarge was beaming, while Grah looked stern as we approached. It wasn't surprising that Marge was the first to speak. \"Now, it's not quite finished, but your plans have accelerated ours quite a bit. Grah and I were hoping to do this properly in a few more months, but... Here we are...\"\n\nTurning around, she grabbed one of the blankets and pulled it off one side of the cart. I positively beamed at what I saw.\n\n\"Now, this is what took most of the time. You're very large, Frelser,\" said Marge. With a small grunt and Grah's help, they picked up a grey bundle and unfurled it. I just grinned, knowing Grah had kept my sizes written down and this chainmail hauberk would fit like a glove. It looked like it would cover my head, to my knees and down to my wrists. I smiled at the memory of the goblins when they managed to overwhelm me. If I had been wearing this, it may have been a different situation. \n\nAs the two of them set the chainmail back in the cart, they gestured me over. As I looked over the other items, I couldn't help the grin on my face. Apart from the chainmail, was a steel cuirass and an open faced helmet. The helmet alone was going to be an improvement, but the cuirass... I honestly couldn't wait to try it on. \n\n\"Now, I don't know what you plan with my daughter,\" Grah said, pulling me out of my thoughts. \"But...\" He pulled off the second blanket, exposing a smaller, full set of plate armour. \"Usually I'd have passed this down to my eldest son, but Chit is the closest I have, without hammering this all into one piece for you,\" Grah chuckled in his gravelly voice. \n\nI felt a sharp elbow in my hip as Chit pushed passed me and into her father's arms. The armour would protect her from head to toe. Unlike mine, it wasn't shiny and smooth, it was darkened and angular. It was a piece designed for war at the exclusion of all else. I just sighed and reached for my chainmail...\n\n***\n\n\"I still don't like this,\" I grumbled as I stepped onto the boat. \n\nThey were wide flat bottomed things. They were designed to be slow and steady as they followed the current down stream. While remaining shallow and easy to paddle and push using long poles to get back upstream. This one had a ring of wooden crates stacked around three sides. It would be perfect to keep prying eyes off us as we moved into position and would give the sailors somewhere to hide. \n\n\"You're not leaving me!\" Chit snarled, spinning towards me.\n\nI couldn't see her face through her full helm, but I could feel her eyes. \"You want me off this boat, you'll have to remove me with force.\"\n\nI considered it a moment, before I spotted her thumbing the head of my mace. She was deadly serious about coming along. I knew without a doubt I could throw her off the boat, but it wouldn't be without injury. Not to mention, she'd probably never forgive me. Her sister-wives hadn't budged on their agreement of neutrality. They were as happy for her to come, as they were for her to stay. So that left only one real option.\n\nDropping to my knees I stared at a spot between her feet. \"Please stay behind, where it's safe.\"\n\nChit stepped closer, before unlatching her helmet. I didn't look up until her hand stroked my face, and then I wished I didn't. Her expression was cold and blank, apart from the tears that rolled down her cheeks. \"Now you understand how I felt, when you went over that wall,\" she sniffed, and wiped her eyes with her free hand. \"If I say behind, and none of you come back, then what?\"\n\n\"Chit, if something happened to you... It would kill me...\"\n\nChit smiled sadly and nodded her head, \"but at least you would know. You'd never sit there wondering if I was going to come back one day. You'd never have a doubt that I might have escaped.\"\n\nSurging to my feet I picked the small orc up in my arms. Twirling her around I kissed her like it was the last time. Putting her down gently, I sighed. \"You wear your helmet at all times. You follow my orders, even if I tell you to run away and leave me. I want you to stick by Ita, she won't be in direct fighting but her healing and spells will make her a target.\"\n\nChit beamed, \"yes, husband sir.\" \n\nI just shook my head and turned to face the others. Eila, Ally and Ita all had smiles. If they were happy with this resolution, how could I argue otherwise? \n\n\"Frelser, we're ready to go,\" Baz said.\n\n\"Wait, have we got a spare shield for Chit?\" I asked.\n\nBaz turned to the soldier on the dock and pointed, the man must have heard me as he handed the shield over immediately. I nodded my thanks at the man as Baz handed Chit the shield. Orc's, even armoured, usually carried two handed weapons. Shields weren't common amongst their people. But if she thought for a moment I would let her go without, she was sorely mistaken. So I was extremely happy to see her adjusting the straps to fit the shield over her vambrace. With a sigh, I nodded at Baz, who gestured to set off. I just glanced up at the sky and hoped the rain clouds were not a bad omen. \n\nThe river itself was rather peaceful. The water flowed at a decent rate and we were making good time. But it wasn't rough or choppy to make the ride uncomfortable. So that was the perfect time to see what Chit could do. Without a word I got up and moved to the centre of the barge. Picking up a spare push pole I snapped off a short length. I took a look at the sharp point and stuck it in my mouth. It wasn't too difficult to chew it off to make it blunt and I spat the remains of the wood overboard. With a stretch and a few swings I couldn't help the grin on my face as I felt how my new armour moved. Unlike my old chestplate, this was actually easier to move in. It was heavier, thicker in places and didn't cover quite so much of me, but it was superior in every way. Turning around, I pointed my stick at Chit, before banging it against my shield.\n\nChit looked at me through her helmet, before glancing at her sister-wives and back again. She drew her mace and stepped toward me, raising her shield in anticipation. I stared blankly at her as she slowly approached. Once she was within arms reach of me, I simply raised my shield and slammed it into her own. Taken by surprise, she fell flat on her back with a heavy thump. Chit was quick as she scrambled to her feet, but I made no move to attack while she was down. This time she moved a little quicker. When I tried the same move, she slipped around my guard and swung her mace at my chest. It was a good tactic, but I managed to step back out of the way in time to dodge. \n\nChit took a few steps back, which confused me. But before I could approach her myself, she suddenly darted forward. I tried another shield bash, only for her to use it as cover to move around me. So I changed direction and spun around, bringing my stick around fast enough to show danger, but slow enough I wouldn't kill her. What I wasn't expecting was for her to duck under the blow and come within inches of me. Before I could respond she jabbed the head of the mace into the space where my cuirass met my leg armour. Staggering back, I brought my shield in to grab her. But she rolled between my legs. Before I could spin around, an impact to the back of my knee dropped me on one side and a moment later Chit's mace lightly tapped me on the side of the helmet. \n\nBy the time I managed to stand, Chit's helmet hit the deck of the ship and I scooped her into my arms. It seems my little housewife had the heart of a warrior. Her orcish brutality combined with elfin grace would make her a serious hazard on any battlefield. I just hoped she coped when she killed for the first time.\n\n\"I love you,\" I growled, kissing her passionately.\n\nHer beaming smile was her reply as I pulled away. Dropping her to the deck, I shot a few warning glances at some of the men, as Chit went and kissed each of her sister-wives just as passionately. With their little celebration over, I got the same treatment, including a second dose from Chit. \n\n\"So, what is the plan?\" Baz asked, once we'd all calmed down.\n\nI waited until everyone was paying attention before I started. \"We'll pull the barge up to the bank before the sight of the attack. We all disembark and break into groups. I lead a third of the men straight in to where we think the ambush site is. You, Baz, take the rest and flank around the sides and rear. Eila, Ally, I want you two to spread out and pick off stragglers, archers and spellcasters. I don't want you engaged in the main fighting if you can help it. Ita, I want you to hang back and treat any wounded, including enemy soldiers. Chit, you're Ita's bodyguard. You keep her safe and tie up any prisoners she can save. I have questions and I want answers. \n",
        "The men nodded and even Baz seemed satisfied. I'd have prefered to keep my wives with me, but this was more likely a skirmish than a precision strike. We weren't just punching through to get from point A to point B. We were going to be in a battle. And I was extremely nervous. There was a lot riding on this. There was always the chance we'd run into a whole battalion that was sent out just for this reason. But then, it could also just be a small group of opportunistic bandits with a spellcaster in their midst. It wasn't likely, but it was possible. \n\nWith a groan, I lowered myself to the deck and leaned up against one of the crates. I smiled and opened my arms, allowing my beaming wives to cuddle up either side of me. I was going to take a quick nap, my leg needed rest after Chit smashed into it.\n\n***\n\n\"Frelser, we're here,\" Baz said, shaking my shoulder.\n\nI snapped awake, causing my wives to wake as well.\n\n\"We're pulling the barge over to disembark,\" he continued.\n\nI grumbled and climbed to my feet. The nap was important for healing and my leg felt good as new. But it still took me a moment to clear my head. A few moments later I felt the soft bump as the barge hit something solid. The sailors were digging in their poles to slow us down to a stop, but it was obvious that they probably needed a few more hands. So with a grunt, I leaped over the side onto the grass. Seeing my action, my wives followed only to be joined by Baz and the other men. We got a few nervous waves from the worried sailors as they pushed back to the centre of the river. \n\n\"Right, who's with me?\" I asked.\n\nImmediately, the closest ten soldiers moved towards me. The rest moved towards Baz. I examined the eclectic group. Humans, a couple fetz I'm pretty sure one is a fawn. It was good to see that volunteers were a mixed group. It showed that they respected one another enough to fight for all. Even if a few of the civilians thought otherwise. \n\n\"Let's get moving. If you want something to eat, do it while we move. We've gotta keep up with the barge,\" I said, turning to follow the river. \n\nWe had to jog in order to keep up. The river flowed steadily, and moving through the trees slowed us down. But we were nearing the crossroads where the river split. Movement caught my eye to my left and I turned to see Chit step around the far side of a fallen log. As she moved, she suddenly lunged and swung her mace in a wide arc. The dull thud of metal meeting flesh broke the relative silence and an arrow shot out from a bow that narrowly missed my face. Immediately, I rushed towards Chit, in case she needed help, but there was no further action.\n\n\"Spotted his aura,\" Chit said, pulling her mace free from her victim's face. \"Elf, I saw him a while off. Probably a scout. He was aiming his bow at you,\" she said, gesturing at me.\n\nI leaned forward and kissed the side of her helmet. I couldn't see, but I imagined she smiled nonetheless. \"Let's go, people. Chit, you spot any more, say something about the moon and point roughly in the opposite direction.\"\n\n\"The moon?\" she asked, as we kept moving.\n\n\"Well if you point at him and go, 'there's one!' You'll give away that you can see them.\" Chit just chuckled and nodded her head. \n\nIt was another few minutes before we smelled smoke. From my guess, we were right on track. Their camp was nearby. Probably camped right on the ambush site. Bastards are underestimating us. That or it was a massive trap designed to lure us in. But I was confident this was either a territory dispute, or more likely, something to draw me out...\n\nAnd as we heard the sound of laughter... \n\nI gestured for Baz to start moving around to flank. Eila and Ally moved up and split in opposite directions to circle the camp. I watched Chit give Ita a small cuddle and I led the soldiers closer to the camp. We weren't in sight yet, but we were close. We sat, patiently, just outside of view of the main camp. From the voices, I guessed there were probably a few dozen of them. That meant our chances for success were high. But I wanted a distraction, before we charged in. That would save more of my men's lives. And it wasn't long until I had one.\n\nA fireball screamed through the air in an arc. It's light piercing through the trees as it flew towards the camp. Several shouts went out, before a loud FWUMP followed by several screams of pain and shock. With a roar, I charged through the last few trees and into a scene of chaos. A clump of tents were ablaze. Even as I watched, two figures stumbled out of the burning tents and collapsed just outside. Elfin warriors ran around picking up buckets and running for the river. But as I exploded from the forest, they dropped what they were doing to face me. On the opposite side, I saw Baz charge through attacking the elfs from the rear. The first elf I met, I simply trampled, the soldiers behind me would put him down if he tried to get back up. But in a flash, I was amongst them all. Whirling my sword around, I hacked off limbs with ease. Their dying screams rang out even as their ineffective spells blasted over me without harm. I heard a shout behind me and I turned to see one of my soldiers go down with an arrow in their chest. Two more grabbed him and dragged him back from the battle. Where I saw Ita dash out to administer healing, with Chit at her side. \n\nSpinning back, I shield bashed an elf with all my might. Unlike with Chit, this elf was sent flying back into the wreckage of the burning tents, where he screamed his last. I'd have felt bad, but these were the same elfs who attacked a defenceless transport barge a day earlier. An elf appeared before me, this one older, more refined. Instead of fine armour, he wore a leather cloak. As he lifted his hand, flames burst out into my face. I couldn't help the grin as I swung my sword into an uppercut, taking his hand at the wrist. His blank, shocked stare was cut short as I followed up with my boot into his chest. He hit the ground with a heavy crunch and I moved to my next target. \n\nIt was all over a minute or so later. The last couple elfs threw down their weapons and surrendered. It was then I spotted Ally, standing over the elf I'd kicked earlier. The expression on her face was monstrous and the figure on the ground laughed at her. That was all I needed to approach the pair. The man's eyes snapped to mine as he saw my approach. Ally just looked ashamed and wouldn't look at me. I recalled her talk when we first made love and everything clicked into place.\n\n\"Ally, look at me, please,\" I said, moving to comfort her. Her gaze rose to mine and I could see nothing but pain. \"He's your... Trainer?\" I asked. Ally nodded slowly, glancing down again. This time I took her chin and pulled her face towards me. I kissed her softly, then kissed her again, making her smile.\n\n\"Pathetic,\" the elf coughed.\n\n\"Coming from food, that's a bit rich,\" I grumbled at the elf.\n\nTurning back to Ally, I kissed her softly before releasing her. Turning back to the elf on the ground, he simply sneered at me. I'd made my decision. There was one way to send a message. If they wanted to know where to find me... Well they found me... Raising my foot, I brought it down on the elf's pelvis. His shocked scream came out silently as his pelvis was crushed in an instant. Keeping my foot in place, I grabbed his remaining hand and brought it to my mouth. The sneering expression now replaced with one of horror. In a single bite, I took all his fingers and chewed them slowly. Usually I preferred not to eat bone, but I'd make an exception this time. Yanking him forward, he gasped in pain as his weight settled over his shattered pelvis. I pushed back his leather cloak, exposing his shoulder. Taking a bite of the muscle in his upper arm, I wrenched my head back and forth until his shoulder separated from the joint. He screamed in pain as the bones separated, but the skin failed to let go, so I bit harder and took a chunk of flesh as my second mouthful. Pushing him flat on his back, I grabbed his head and forced it backward. Leaning in, I bit into the underside of his chin, shearing off a good portion of his throat and ripping out his tongue in the same bite. The last sight he saw, was of me slowly chewing on the piece of meat that was his tongue. \n\nStanding, Ally handed me a waterskin. Splashing it over my face, I spat out the remainder of my meal, onto the partially eaten corpse. With the worst of the blood gone, I realised everyone was watching me with looks from horror to fear. I sighed, realised exactly what this must have looked like.\n\n\"Listen up, all of you. You've got to be blind, deaf and dumb not to realise I'm not quite human.\" I looked over at the men, seeing a few nod their heads. \"I'm actually not quite sure what I am. What I do know is that I'm not fazed by what I eat. This was the third person I've ever done that too. The first, tortured me for months, the second, tried to rape my wife, Eila and this one, did terrible things to Ally. This was personal and so I acted personally.\"\n\nMy wives moved in to support me as I finished my speech and I looked around. Most still looked a little disturbed, but they were all nodding their heads. Ally gripped my hand tightly even as I turned away from the remains of my meal. I just hoped she was okay, and that enough justice had been done. \n\n... Chapter Four...\n\nIn the end, we'd captured five. The two that surrendered, one that was knocked unconscious by Ally and two more that Ita had saved. One of which was brought down by Chit. He probably wouldn't ever be walking again though... We'd also taken a few casualties. One from my own group lost an arm. Two more from Baz's group were killed in a small ambush. Two elfin snipers were in hiding as they stormed the clearing. Ally was only a second too late, but managed to stop any further deaths. But the real surprise was their prisoners. Just on the outskirts of the clearing, there was a cage, just like the one they transported me in all those months ago. Inside were three of the sailors from the previous transport. There had been four, but one had been removed for interrogation... We found his corpse in the latrine. \n\nAll in all, we had answers, we had stopped the attacks and we were bringing three families back together. It was a shame that all of this was just the precursor to a greater conflict. They probably sent a messenger back every week or so. At best, it would be a week before the silence would provoke a scouting party. Then another few days before an army would be raised. At worst, some hidden elf in the trees escaped our notice and is already carrying away the news. Either way, conflict was on the horizon. All because some greedy bastard couldn't leave well enough alone... \n\n\"Alright, let's get back to the barge. We need to prepare the town for an attack,\" I growled. \n\nBaz barked a few orders and everyone started moving back towards the river. I held a silent vigil as our dead were carried on shields of their squad members. I couldn't help but wonder how many more times I would see this sight, before people would leave well enough alone. I said a silent prayer to whatever gods that were listening, that I'd never have to bare one of my wives on a shield. \n\nIt only took a few minutes to get everyone on board. The barge had managed to stop safely and without issue just a little further up-river. Without the added weight of the soldiers in the barge, they managed it on their own. They were, however, ecstatic at seeing their old friends coming back. Which was a good thing on it's own. With the three extra hands, we started making our way back to town. \n\n*****\n\nIt was dark as we made it back. The torches atop the towers, welcomed us back like moths to a flame. Baz pulled a horn from his pack and blew a series of notes in ascending order. I just smiled as I listened to the portcullis over the river, being raised. It had been a long day, and I wasn't looking forward to getting out and walking towards the nearest gate. \n\n\"Should we open the baths?\" I asked my wives as we passed into the town.\n\nEila and Ally just looked at one another and nodded. \"We think it's a good idea,\" Eila said with a smile.\n\nI just nodded and kissed them both. They'd probably throw themselves off a cliff if they thought I'd suggested it. But that just meant I had even more reasons to love and care for them. \n\n\"Alright, if you two want to run ahead and get that started, I'd appreciate it. Ita, can you run to the tavern. Ask them to get together whatever they can make a lot of, quickly. Let them know it's for the returning soldiers.\" I cleared my throat and caught everyone's attention. \"Alright everyone, get your kit off, get your families and come to the bathhouse. I'm having food brought up.\"\n\nI grinned as the men murmerred amongst themselves. A few minutes later we were docked, Eila and Ally darted off into the night with Ita on their tails. Chit and I stayed behind to help with the wounded and prisoners. The dead would be given burial rights in the morning, the living needed taking care of first. In the end, it was left up to me to escort our prisoners. We chained them to one another and I led them on a leash to the prison. An elf even had the audacity to complain about me doing so, until I cuffed him and reminded him about my own treatment. He shut up after that and the rest fell into step. They'd already been disarmed and stripped to their breeches. They still had access to their various forms of magic, but with their hands bound behind them, directing it would be difficult. Not to mention a few black eyes and bruised jaws from a pair that decided to test my magical resistance. \n\n***\n\n\"As Mayor, I condemn you five, to hang until dead. For the crimes of attacking innocent civilians carrying out their daily work.\"\n\nI hadn't planned on making their execution public. But Baz had made the suggestion that I and especially Eila and Ally be present for the public spectacle. The people needed to know what kind of stance I would take and understand that hatred of elfs in general was not tolerated. Not that Eila or Ally would complain if I decided otherwise. The men of their people were little better than slavers more often than not. Especially the wealthy or influential. The dull thunk of five bodies making a short drop with a sudden stop barely registered through my mind. They deserved their fate for attacking innocent and unguarded civilians. But... Things were worse than some elfin raiders on our doorstep.\n\nIt seems our battle with the goblins had attracted a lot of attention. The remains of the goblin armies broke up after the last battle and went their separate ways. Considering their tendencies to stick together in roving groups if they didn't have homes... Inevitably, some ended up being captured and interrogated. Goblins, being dumb as they are, couldn't give much more information than a general direction. But the description of a sword wielding giant... That would have been a rather obvious clue.\n\nPhaslo, that fucking prick, thankfully did not know the location of our town. At least not yet... A patrol spotted one of our barges on the river, so they posted camp to wait for a second. The information that they took from the sailors they captured, would reach Phaslo in less than a week. It will take him a few days to gather his forces and a week or so to march back. Less if he has horses and a direct route set up. Even less if he utilises the river, but Eila doesn't think that's likely. What we needed to do right now, was decide how to proceed. The town doesn't deserve to suffer for my wives and my personal issues. But there's always the chance that us leaving would only serve to leave this town undefended. Another option is to evacuate the town. The humans can go North into the human held lands, but the non-humans can only go west, further into the wilds and into more danger. \n\nI sighed in my frustration with the situation as my wives stood around me. No matter what, I needed to protect these wonderful, beautiful women. I'd happily lay down my life if it meant saving theirs. Though I'd probably never hear the end of it. Chit would most likely drag my soul back by the ear, ranting and screaming the whole way until I apologised and stopped being dead. Looking back to the now still elfs, I nodded my signal to Baz. I'd found him to be extremely trustworthy. One of my biggest concerns about a public execution was children. But he'd scoured the crowd and the children had been removed. The whole event was rather docile. There had been a few soft jeers and insults that I'd put a stop too. We weren't the monsters here. We were just the ones putting the monsters down. And the town needed to see that. So with the end of the five elfs, they were swiftly cut down and taken away to be burned. There would be no ceremony for them. \n\nAs the last body was carted away, I made my way to the stage. The crowd was so silent it was deafening. My footsteps were the loudest sound in the square, followed only by the soft patter of my wives as they escorted me to the stairs. But even these I climbed alone. \n\n\"Citizens, we have a decision to make,\" I started, grabbing the town's attention. \"The Elfin King, Phaslo, had a daughter. This daughter, he gave to a man, who beat, tortured and attempted to rape. Attempted, because I am the one who stopped it.\" I paused, seeing a sea of faces turned towards me. Their stares defiant as I felt that day when I fought against the elfs. \"The princess, if I may use that term, went on to become my first wife, Eila.\"\n\nA collective gasp went through the crowd at those words. Eila, like my other wives, was a well known and respected member of the town. Everyone knew her and everyone knew of her humble nature she had when dealing with others. Nobody in their right minds would have guessed she was royalty. \n\n\"King Phaslo,\" I continued, as the crowd fell silent. \"He knows the location of this town, he knows Eila is here and he will come for her.\" At this, several shouts went out, only to be hushed so I could continue. \"I can leave, I can take my wives and leave. But there's no guarantee that Phaslo will leave the town alone. We can stay, build up our defences and defend our homes, or we can evacuate the town and go our separate ways. Of course, anyone who wishes to leave regardless, may do so.\"\n\nAgain the town was silent, before a hoarse voice rang out, \"I stand and will fight!\"\n\nI turned and spotted the familiar green snarl of Chit's father, Grah. Immediately after, Marge yelled out the same. And like a great catalyst of fate, hundreds of voices rang out their oaths to fight and defend their homes. I just hoped it wasn't a mistake. So with the decision sorted, I headed into the meeting hall to discuss the town's defences with Baz, who followed after.\n\n\"A few will leave, mostly humans,\" he said, closing my office door behind him.\n\n\"Will we lose any guards?\"\n\n\"None of the smart ones,\" Baz chuckled. \"Anyone caught outside these walls is a dead man. Even the transports. With our new walls, staying here is the best option. We have the same battlements that would be in a city three times our size. Unless the Elfs bring siege engines, they're not getting over them in a hurry. The gate is the weak point, but you held that once.\"\n\nI nodded my head, \"I can't help but feel I've brought doom upon the town, though.\"\n\nBaz shrugged, \"the bastardry of elfs is well known. Yours is just a little more extreme than anyone would expect. Those who have an issue will leave. But I think you'll find, most will stay.\"\n\nWe spent the next few hours going over the logistics for the battle. We'd need to have more armour and weapons made. Which could be helped along with Eila and Ally's magic and the help from Grah, Marge and her family. My wives could heat the metal with magic, which was the part that took the longest. We'd also send out our hunters to collect sticks and branches to use as handles for clubs, shafts for spears and arrows and firewood in the case of a siege. It would be better if we had months to prepare, but a couple of weeks would have to do. I even added an overtime bonus for anyone who worked additional hours or provided additional stock for the town supplies. Any additional consumables not sold by the end of the day, were to be brought to the town hall. Here they'd be bought up and set for storage. Either way, there was going to be a lot of smoking, salting, drying and pickling going on. ",
        "It was early evening when I finally arrived back home. I was greeted at the door by the smell of Chit's stew. But by the time I closed the door, I was surrounded by my wives. Before I could speak, Chit pulled me down and kissed me. As she kept me distracted, the others began pulling off my clothing. All thoughts of food disappeared when I felt a set of warm lips engulf the head of my cock. I didn't know who they belonged to as Chit refused to let up, so I just groaned and kissed back. A few moments later, the lips came free with a soft pop, only for a second set to take their place. These lips bobbed slowly and I could feel the swirl of her tongue around the head. From my guess, it was Eila at first and Ally was second. Which meant... The third set of lips over my cock, basically didn't stop until her nose hit my crotch. Ita, my shy little succubus, was a sexual goddess. The things she did, reminded me daily she was the least human of my wives. Even Chit had limitations. \n\nWith Chit firmly occupying my lips, Eila and Ally helped lower my into a sitting position. Resting against the door, I could finally see my beautiful succubus, bobbing away on my cock. I watched in rapt attention as Ally lowered herself behind Ita and I groaned as Ita suddenly shuddered from Ally's contact. The vibrations of Ita's body did wonderful things to my cock, but I had my sight interrupted by Eila. Working herself in beside Chit, I kissed them both at the same time. Eila and Chit slipped their tongues into my own mouth, as often as they did one another. Seeing my wives loving one another set something off inside me and I leaned back.\n\n\"Coming,\" I grunted.\n\nAnd like that, Ita pulled off my cock. The confusion on my face must have been apparent as Eila and Chit both smiled. A moment later, the warmth of Ita's pulsing tunnel wrapped itself around my length. Firing my seed into her, I got maybe two pulses, before, I'm assuming Ally, ripped her off. A split second later another wet entry wrapped itself over my still pulsing cock. Two more pulses and Eila pulled her off as Chit impaled herself. The situation repeated as Eila took her place last, only this time she sat still and took what I had remaining. And just like every other time, their eyes lit up bright blue, shuddering through their power induced orgasms. This time though, they at least recovered quickly, only to pout in disappointment. \n\n\"Nope, have to try something else,\" Ita said softly. \"Though, it was probably a good thing that we didn't ALL get pregnant at the same time,\" she giggled. \n\nI just sat on the floor and wondered how different my life was in comparison to the last forty. It was a good feeling, being so loved. They were also right. It was time to create more love for ourselves. And I will do everything to ensure it happened. \n\n***\n\nThe stores were looking fuller every day. Some of the older women had teamed up with some of the younger, single, ladies of the town. They'd managed to create an assembly line of pickling produce. They'd spend an hour at each station so they wouldn't get bored. Some would cut the produce, others would make the pickling solution. Another group sterilized the jars, while another filled and heated them. If that wasn't enough, they'd worked out how to run everything in shifts so it ran all day and all night without stopping. It had taken three days for someone to come find me to ask for a hand. The men in charge of moving all the jars into storage couldn't keep up. With me on hand, I could move what several men could in one go. Even then, it still took most of the day to get everything packed away and I'd promised to return every second day to square things up. \n\nIt was the fourth day since the raid on the elfin outpost. Four days of preparation. Baz and I had estimated close to thirty people had left town. Most of those were visitors. Out of our citizens. Only one family had left to our knowledge. It honestly wasn't a surprise they were human. Most, if not all of the petty squabbles that happened in this city involved humans. Considering the lack of people in stocks for violence, non-humans weren't taking care of themselves outside the law. It just seemed they got along better. Maybe being pushed out of human lands generations ago, left them with a sense of kinship. Whatever the reason. I wouldn't hold it against anyone for leaving. I just hoped they got far enough away to escape the carnage before it arrived. \n\n\"Frelser!\" A voice called.\n\nTurning, I could see a guard, sprinting towards me. I'm sure you could always agree, that if a guard of all people is calling your name and running, it wasn't for a good reason. Putting aside my thoughts, I turned to face the... Woman... Fetz woman. Interesting, I didn't know we had female guards, but if she wore the uniform, Baz was satisfied with her. \n\n\"Frelser, we spotted something, coming up the river!\" She said quickly.\n\nWithout a word I started running for the river gate. Surprisingly, the fetz kept up with me. I didn't realise they could run so fast, but... Her armour was a little different. Lighter, maybe she had a different use. Food for thought, later. Rushing into the new section of town, I quickly located a set of stairs and climbed the battlements. Atop, was Baz, staring at... Well... I wasn't sure what it was...\n\n\"Any ideas?\" I asked, standing beside the Captain.\n\n\"None.\"\n\nIt was clearly a modified barge. Similar to the barges we used, wide, flat and using push poles to propel it slowly towards us. But... That's just about where the similarities stopped. This barge was clearly modified for war. It had enclosed sides and a roof made of slate shingles that would stop it from catching alight. The push poles were being operated by individuals we couldn't see. The real kicker was an unmanned ballista mounted to the front. What on earth are we going to do here?\n\n\"You, go get my wives, hurry,\" I said to the fetz. She nodded her head and darted off without a word. \"Baz, since when do we have women in the guard?\"\n\nBaz just shrugged his shoulders. \"There's a few now. We were short on hands after the goblin attack. One day she showed up with some other ladies. Some had lost husbands, others were from the dollhouse. After a bit of back and forth, they challenged a few of my boys to a fight. I gotta tell you, they were something else. I'm still not sure how many knives they carry on them. In the end, a few, like Lonty, wear lighter versions of the guards armour. We used them as messengers mostly. Others are plain clothed and do undercover work.\" I just cocked an eyebrow thinking what sort of undercover work would be needed in this town. \"Last week, one of the lasses caught wind of a fur trader who was trying to smuggle out a cache of gems he'd stumbled across. They're damned useful.\"\n\nI just nodded along and turned my attention back to the slowly approaching barge. It looked like it would be difficult to sink if they were hostile. But the lack of anyone on the ballista had me on edge. Was there something we were missing entirely. \n\n\"Oh,\" Eila's soft voice said behind me. I turned my head and saw Eila and Ally staring at the barge with small frowns. \"That messenger is getting the others. Chit should be here shortly.\"\n\nBefore I could respond, a loud thump, followed by a warm pressure told me of Ita's arrival. She rubbed herself gently against my side in one of her small gestures. Placing my hand on her shoulder she practically vibrated in content. It was odd that a demon was the softest of all my wives. But I wouldn't have it any other way. \n\nThe loud cunch of armour was the next sound that broke the atmosphere as Chit and Lonty arrived. Chit was in her full armour and Lonty seemed to be struggling to carry my sword. Both were panting heavily.\n\n\"Gods...\" Chit huffed, \"I got here as quickly as I could.\"\n\nI just gave the stout woman a grin. Forever trying to prove herself. If only she knew how much we all depended on her. Hers was the voice of reason and without her, we'd fall apart. \n\n\"Frelser,\" Baz called softly.\n\nTurning my attention back to the front, I spotted what he meant. The barge was just outside bow range. But that wasn't it. A hatch had been opened on the top and a small, stout figure was standing on top. He seemed to be holding a brown sack in one hand. Reaching in with the other, he pulled out the item and held it above his head. Honestly, if this was some sort of ruse, it was a very good one. \n\n\"Raise the portcullis,\" I muttered softly.\n\nClutched in the stout figures hand, was the head of an elf. As the portcullis began to raise, the figure bowed slightly and put the head down on the top of the barge, before going back through the hatch. A few moments later, the barge began pushing itself forward once again. It really was a big, slow, lumbering thing. But it was relentless. Plodding along at it's sedate pace without pause or break. \n\n\"Let's go greet our guest. Have everyone spread out, I want everyone ready, just in case,\" I ordered. We had no idea what he was hiding in that barge, but I wouldn't put it past Phaslo to provide an elf's head just to make a point. \n\nHeading back down the stairs, I followed my wives to the port. Here, we watched as the barge slowly waddled through the portcullis and came to a stop several meters from the bank. I kept an eye on it as the small figure climbed back up onto the top of the barge with a thick rope. \n\n\"Here!\" He called throwing it over to us. \"Pull us in, there's not enough room in here to steer this beast properly!\"\n\nI frowned as several guards caught the rope. If I wasn't mistaken, the figure was a dwarf. Quite short with a long beard. This one seemed older than even Marge. But the thing that made me pause, was his request to pull him across. If we were distracted trying to pull the barge to dock, who was inside with the push poles?\n\n\"Who else is in there?\" I called.\n\nThe figure frowned for a moment, \"Tis just I. I've no need for a crew with this machine.\" I frowned. I'd heard of the ingenuity of the dwarves. I'd even heard mention of some of their machines. Great revolving hammers, usually powered by mules, used to hammer enormous forging's into shape. But this... This was something else. Even if there were a few mules onboard, I couldn't see how they could operate push poles. \n\n\"Frelser, you can trust him,\" a firm voice called from the rear.\n\nWith another frown, not wanting to take my eyes off the dwarf, I glanced back and spotted Marge approaching the group of us. Wisely the nearest guards didn't stop her approaching. The look in her eye told me she wouldn't have appreciated it. \n\n\"Marjhonen!\" The dwarf called, \"it's been too long!\"\n\n\"Cut the crap, Jonharren, why did my father send you of all people?\"\n\nThe old dwarf seemed to pause and take a breath, \"he didn't lass. Orikhonen was ambushed by elfs. I was part of the warparty sent to find what happened to him.\"\n\n\"I... I see,\" Marge said softly. Turning to me, I could see the pain in her eyes as she composed herself. \"Please trust my cousin.\"\n\n\"Second cousin!\" The old dwarf called.\n\n\"It doesn't matter, I'm married!\" She snapped back, silencing him. \"As I was saying, I... I didn't expect him in particular, but he's trustworthy.\" Turning on the spot, she stormed away from us. I'd never seen her like this. But that only told me that Jonharren had some questions to answer.\n\n\"Pull him in,\" I nodded to the guards.\n\nAs a group, they began pulling on the rope, dragging the barge closer to the bank. It seemed difficult with the push poles still in position, and I still worried about something going wrong. But, within a few arm spans of the bank, Jonharren called for a stop and went back inside. Silently, I reached for the sword now strapped to my hip. We could hear the dwarf knocking around inside and I couldn't be sure what it was. But the guards around seemed to mimic my motion and take their weapons in hand. \n\n\"One sign of trouble, I'll rip that barge in half,\" Eila whispered softly. \n\nCLUNK!\n\nAnd with a series of softly clattering, the roof seemed to rock towards us. Gripping my sword tighter, I stepped away from the bank as the barge's roof approached. It was ingenious in a way. The roof was clearly designed to unfold and turn into a full length boarding ramp for the barge. But it was inside that I worried about. It had enough room for dozens of soldiers to be hiding. But all that seemed to be exposed was machinery and crates. And right in the middle was the old dwarf, standing alone.\n\nHe took in the sight of us and frowned, \"didn't trust me?\"\n\nI just shrugged and released my sword, \"would you?\"\n\nThat got a smirk out of him, \"I suppose not.\" As the machinery came to a standstill, the old dwarf crossed onto land letting out a low groan as he reached land. \"Honestly don't know how Orikhonen did it all these years.\"\n\n\"What happened anyway? Who is Orikhonen and who are you?\"\n\nThe old dwarf smiled grimly. \"Orikhonen was Marjhonen's father, he was a weapons merchant for our people. He received a letter asking him to deliver weapons to this town. Said you were having trouble with some elfs and... Well... What better way to earn some coin than by killing off those stupid...\" He blinked, seeing Eila and Ally standing behind me. \n\n\"It's fine,\" Eila smiled thinly, \"I'm well aware of my people's history with yours.\"\n\nThe old dwarf eyed her, \"then you'll ensure you and your husband keep your distance, eh?\"\n\n\"That will be difficult,\" I growled softly. \"I was hoping we could do business. After all, It's Eila's father who I'm assuming is responsible for Orikhonen's death.\"\n\nThe old dwarf went wide eyed and looked between us. \"Is... Are... Which one's are your wives?\"\n\nAs one, Ita and Chit, pushed Ally and Eila into arms reach of me and I took them under my arms. The old dwarf looked like he'd been slapped. Before bursting into laughter. I stood, waiting for him to collect himself, quietly enjoying my wives' touch. And as the old dwarf collected himself, he grinned. \n\n\"Princess, it's a great pleasure of mine to help kill your father!\"\n\n***\n\nThe negotiations were... Swift... Jonharren, after his fit, returned to the barge and collected a decanter of amber fluid. After leaving a few instructions to unload all the crates, he grabbed the first and dragged it over. Opening it up, he showed us the contents. I couldn't make heads nor tails of it, staring at the pieces, but he explained. They were portable ballista. Unlike the one on the bow of the barge, these had metal limbs. This meant they were smaller, but no less powerful. They could also be operated by a two man team and moved quickly into any position necessary. All together, he had twelve of them to trade. Aside from this, he also had fifty hand-held crossbows, several crates of hand held weapons and schematics for a trebuchet that could be scaled up or down as needed. All together, I was once again surprised by the enginuity of the dwarves. Marge could size rings at a glance as easily as forging armour fit for kings. Here, another had schematics and weapons of war beyond anything I'd seen before. In return, all he wanted was some gold and a place to stay for the time being. Being a man of war, he knew how to train up the town guards to actually use the equipment. Not to mention help with construction. Maybe there was hope yet?\n\n... Chapter Five...\n\nA stroke of luck indeed. I couldn't help but shake my head. Phaslo probably didn't think we had it in us to launch an attack of our own. It had been a week since we'd ambushed the elfin warparty on the river. I'd been leading a small team, one of a dozen on recon of the surrounding area. Eila, Ally and Chit were all at home. Much to their displeasure. Ita had accompanied me on the trip. Between her abilities in healing and flight, I figured at best she was useful and at worst a damn good messenger. It was actually her that spotted the search party. Now we were crouched in a similar clump of trees. The search party had come across the scattered camp we'd destroyed. We didn't bother cleaning up their dead. They left ours in a latrine... \n\n\"Quickly! Search for survivors!\"\n\n\"SIR!\"\n\nWe couldn't see them quite clearly. But we could spot their movement as they scrambled around each body and checked the few tents that survived the fire. There were a dozen of them. Far too many for our small team to take in a fight. At least not one I wanted to risk. With surprise, my strength and Ita's magic, we could probably do it. But there would probably be casualties. I had a small team with me. Lonty, the fetz messenger from the town was with me. With her were two others. Another male fetz, Gornty and Harri, a female human. All were swift, all were quiet and all carried a number of knives I hadn't actually managed to work out yet. This was despite their new dwarven shortswords they wore on their hips. \n\nI have to say those swords were perfect for the light guards. These were shortswords designed for dwarves. So while they were shorter than a regular sword, they were longer than daggers and heavy like broadswords. Combined with the quality of the metal, they were basically as useful cutting down trees as they were stabbing chests. They'd been sent to us with the expectation they'd be used as secondary weapons in combat. But the moment Baz saw them they went straight to the light guards. Speaking of, one was missing... Gornty... Always bloody Gornty... He was a good scout. Did his job, did it quietly, did it well... Unfortunately, he had a thing for Lonty, and Lonty wasn't all that interested. So he'd developed a bit of a complex... Especially with my nighttime activities with Ita. As a succubus, she relied directly on a constant stream of my lifeforce. At least that was the excuse she used to turn herself inside out, using whatever orifice took her fancy, multiple times, over the last two evenings. Not that I was complaining of course, I'm only... Well... Not quite human... But you get my point. \n\n\"Gornty!\" I hissed, looking around for the stupid fetz. No doubt he was out trying to get a closer look. What we should have been doing was falling back. Sooner or later they'll start checking the trees and I didn't want a fight. \n\n\"Over there,\" a small voice whispered. \n\nLooking over, it was Harri, pointing off to the left of where I was looking. Sure enough, there was Gornty, on his stomach creeping forward. I thought about breaking cover and dragging him out. Unfortunately, if I broke cover, the elf he was stalking would have spotted me. \n\n\"Don't do it you stupid bastard,\" I muttered to myself. \n\nThe soft scrape of weapons being drawn told me the others were ready. Ita would take to the sky as soon as possible. We'd already discussed what she should do in an attack. With no skills with a blade or experience in combat other than spellcasting, it was the safest bet for her. Bad enough I fought beside Chit. Eila and Ally were different. They were warriors before I loved them. And yes... I know I'm probably sexist and stupid. They're strong and capable in their own ways. I just wanted to keep them all safe... What would I do if I lost one of them? How could I ever forgive myself seeing one of the women I loved, die before me? Bah... Thoughts for never. Right now I had a dipshit fetz to watch...\n\nAnd watch I did. I was right, the elfs were spreading into the trees. At least they were spread far and wide. There was the one Gornty was stalking and another to my right. The others weren't in direct sight. \n\n\"Spread out. If dipshit over there takes one down. Take the others quietly. The more we can get before we're spotted, the better. I'm the only one here who won't be affected by magic, and assume all the elfs can use it.\"\n\nHarri, Lonty and Ita nodded. Ita moved back, while Harri pulled another knife from... Somewhere... Honestly I have no fucking idea. One moment she was holding a sword, the next she had a knife as well... I'd assume it was magic of their own, but Harri apparently had been tested by the mages guild as a child and was definitely not holding out on us. Lonty on the other hand, crept back and disappeared into the trees behind us. I trusted her a hell of a lot more than Gornty on the best of days, so I figured she was flanking around for the next target. ",
        "\"FORM UP!\" The elfin commander called.\n\nI breathed a sigh of relief as the closes elf turned. Only for Gornty to choose that moment to strike. Quick as a flash, he stood, leaped over a low bush and slammed his sword and a knife into the elfs back. Piercing both his lungs in a single blow, the elf made a soft gurgling sound and collapsed. The technique was floorless. It worked perfectly and Gornty was even able to help take his weight to stop his body thumping into the ground. There was just... One little issue...\n\n\"We're under att-!\" The second elf choked before Harri's knife slammed into his neck.\n\nBlinking, I gave Harri a glance and she shrugged, \"throwing it was quicker.\"\n\n\"Over there!\" An elf called.\n\nI waited until I heard the crashing of the nearest elf in the trees. Then I decided to turn their tables. If they were focussed on me, they were less likely to harm the others. Standing, with a roar of my own, I rushed towards the approaching elf. He was as surprised to see me as the goblins that attacked the town months ago. I didn't even pause as I trampled over his small form. The wet crunch of my boots on his chest let me know he probably wasn't getting up again. Almost immediately, I came across a second elf. This one hurled a fireball at me. Ignoring the flaming ball of death, I changed direction and stormed towards him. As the flames washed over my form, like a soft warm breeze, I watched his expression turn from amusement to terror in an instant. The expression on his face, forever frozen as my sword whipped around and removed his head in a single blow. \n\n\"It's the beast! Converge here! We must kill him!\" an elf with an ornate helmet cried. \n\nTurning to face what I could assume was their commanding officer, I was surprised by the thud of a crossbow bolt to my chest. Thankfully, my armour stopped it dead, but I could feel the tip of the bolt scraping my flesh. This new cuirass really was something. Turning to the elf with the crossbow, I watched him catch a knife in the ribs of his own. With him collapsing, I stormed right for the officer. Rushing forward, I made a vertical swing. But my blade passed by the elf as he danced to the side. He tried stepping inside my reach, but I swiftly changed direction and swung my sword horizontally, making him leap backward. By that time, we'd been joined by three other elfin warriors. One tried to blast me with a wave of pure force, hoping to knock me down. My only reaction was to quickly step into the blast as it staggered a fourth elf that appeared behind me. My sword passed through him so quickly, he had enough time to examine the stumps where his fingers were, before his intestines fell out of his stomach. \n\nIt was just as well, as the commander used the distraction to leap into action. His thin blade whistling through the air as I stepped back out of harm's way. But he pressed his advantage and kept coming. This was the one situation I wasn't prepared for. On the battlefield against dozens of enemies, there just wasn't the room to duel. One swing of my sword and I could cut three or four elfs into pieces. In small numbers like this, they could take it in turns, flank and dance in and out of reach as they saw fit. And while they didn't appear to have the same physical strength of a human, they were certainly quicker. If not for the chainmail hauberk, I'd be bleeding in several places right now as the commander again slipped my guard and slashed my shoulder. He'd need to slip that blade of his into my helmet or into the gaps by my legs if he wanted a chance. Unless he got really lucky and hit my hand... I really hoped Marge and Grah were working on gauntlets. At the very least, that would make it safer to punch this little bastard... Hmmm...\n\nQuickly taking two steps back, the commander moved to follow. The last thing he wanted was to get into my range again. So he was completely taken by surprise when I changed direction and advanced on him directly. In an instant, I was close enough to slam the hilt of my sword into the side of his head. The clang of the impact knocked him back a step, but the thud of my gigantic boot slamming into his chest knocked him flying. With forward momentum on my side, I rushed at the now three elfs standing before me. The first caught my blade in the face and went down with a scream. The second leapt out of range. The third spun around behind me. Like his commander, his small blade slid harmlessly over my armour where he tried to slash me. Spinning around, I backfisted his jaw, snapping his head around so far I was pretty sure his neck was broken. Turning back to the last elf, I frowned, as he collapsed to his knees with a knife in the side of his ribs. \n\n\"How is your armour so thin\" I asked.\n\nThe elf just glared at me, so I shrugged and stabbed him. The dull hateful glare finally receded as his corpse slid from my blade into the dirt. Turning, I saw Lonty, panting as a line of blood ran down her arm. \n\n\"You okay?\" I asked.\n\nLonty just nodded, \"I'll be fine. All the others are dead. Harri needs Ita though.\"\n\n\"Shit,\" I snapped. \"ITA!\"\n\n\"Husband!\" a soft, pained voice called from ahead. \n\nPushing into the trees, I quickly found my wife. She was busy directing her power on herself. Before her was the corpse of an elf. From the look of things, he'd hit her with some form of fire blast. Ita's shirt was half missing, and her pants were tattered. The only reason she wasn't completely exposed was the underwear she wore, seemed to be made of leather. But even it was blackened and cracked in places. But it was the dark, blistered skin that caught my eye. Her pinkish-red skin was more maroon and cracked in some places. The wound wept a clear fluid as Ita grimaced and directed her healing on herself. \n\n\"Oh, Ita,\" I crooned, moving to comfort her.\n\n\"Shit, is she okay?\" Lonty asked.\n\n\"I'll be okay in a few minutes,\" Ita frowned at the pain she felt. \"Stupid elf got me as I flew over. But I cursed his lungs to dry out, so we're even.\"\n\n\"Frelser, Harri might not have a few minutes,\" Lonty said softly.\n\nI was about to say something, when Ita beat me to it. \"Husband, carry me. I'll keep healing.\"\n\nNodding, I moved around to her good side and gently hoisted Ita into my arms. It was a little awkward trying to hold her without aggravating her burns, but I managed. Turning, I nodded at Lonty, who led me back across the field and into the trees on the far side. There we found a pale looking Harri with a bolt in her chest. Applying pressure to the wound was Gornty, gritting his teeth as he fought against her attempts to stop the pressure. It wasn't a good situation. She wanted the bolt out, he knew pulling it would cause her to bleed more. \n\n\"Bring me over, quick,\" Ita said.\n\nClosing the last couple metres, I put Ita down beside the injured woman. Grimacing in pain, Ita twisted around and began directing her power into Harri's wound. \n\n\"Don't give up,\" Gornty snarled. \"You hold on!\" And like that, Harri went limp. \"Harri?\" Gornty called. \"HARRI!\" Gornty hit the ground head first. I barely felt the impact through my knuckles. \n\n\"I've stopped the bleeding, we need to get her back to town. She probably won't wake up for a few days. I'll do more once we're safe,\" Ita said softly.\n\n\"Can you walk?\"\n\nIta shook her head. \"I don't have the skill and power to heal her completely either way. But I still need to heal enough to walk myself. I just need a few minutes.\"\n\nAs Ita turned her attention back to herself, I looked over Lonty. The wound on her arm didn't seem deep, but it was still bleeding readily. She was in the process of awkwardly trying to wrap the cut with a bandage she'd produced... Probably from whatever dimension she kept her knives. \"Here,\" I said softly and took it from her.\n\n\"Thank you, Sir,\" Lonty smiled.\n\nI just grimaced and started wrapping the cut. \"Call me Frelser,\" I said softly.\n\nI completely missed her blush and smile, too absorbed in my task. By the time I had finished wrapping her arm, Ita had climbed to her feet. That's when I realised I had a small problem. How was I supposed to carry two bodies?\n\n***\n\nFetz. Don't ever underestimate them. While the dwarves were ingenious, in their machinations. The fetz were practical and cunning in a whole different way. The walk had been a long one. Ita set the pace as she hobbled along. It was a double edged sword with her injury. The more she healed herself, the faster she could walk, but the more tired she would be. Lonty on the other hand, refused to let Ita even look at her wound once she'd noticed the bandage. Lonty for that matter, was the one I was currently praising. It took her a whole ten minutes to rush off into the trees and come back with some creeper vines. These she'd woven into cords and used to bind up Gornty. The dipshit fetz, had spent most of the trip, being dragged along behind me. After binding his wrists together, she'd gone through his armour and removed four more knives from various places. With her satisfied, she'd helped me lift Harri into my arms so I could carry her. Once standing, Gornty's bindings were tied to my belt and I got the pleasure of dragging him most of the way home. 'Most,' being the operative word. He'd woken up a few hours ago, and after whining about his throbbing face where I'd punched him, he'd fallen silent. Whatever chances he had with Lonty, as slim as they probably were, were practically non-existent now. I swore I even heard a hiss from her last time he spoke... Even if it was just to ask for water.\n\n\"I'll run ahead, get someone out here to help,\" Lonty said softly.\n\nI just nodded my thanks and she ran off ahead. We were almost back in the town. The walls were in view and we'd be spotted soon anyway. But I could see Ita was still in pain, and I'd much rather be carrying her than Harri. No offence to Harri, but she wasn't my wife. I just wished Ita had more skills in healing. She could heal flesh wounds well enough. But organ damage and severe burns were something else. She explained it as the difference between stitching two fabrics together, and trying to weave threads into a torn hole. It took a long time and a lot of effort to do it properly. And a burn was essentially a void of living flesh to weave back. \n\n\"I don't think I'll be able to clean the baths for a few days, husband,\" Ita mumbled softly.\n\nI just glanced at her. The expression on her face told me she wasn't kidding. She was genuinely worried about upholding her job. \"Ita, if you think you're getting out of bed until you're healed, you've got another thing coming,\" I grunted back. The surprised look on her face kinda stopped me for a moment though. \"What's with that look?\"\n\n\"I... Ummm... We have a contract... I'm supposed to work in the baths, to clean them...\"\n\n\"What?\" I asked. \"Ita, you're my wife. We don't have a contract!\"\n\nBut she shook her head emphatically. \"No husband. The only reason I'm still here is because we have a contract. Without a contract in place, I either have to return to my home plane, or find someone to gain lifeforce from.\" \n\n\"So... What happens if I cancel our contact and continue giving you the kisses you need?\"\n\nIta frowned, \"it would work, but I wouldn't be your wife any more...\"\n\nThis time I frowned. I was beginning to understand that Ita thought she was somehow different, or that the contract was what made our relationship work. \"Ita, what if I released you from your contract, and asked you to be my wife, again, with no contract AND I still kept giving you power?\"\n\n\"Why?\" Ita looked up at me. \"Why would you do that?\"\n\n\"Because I love you,\" I said simply. \"Eila, Ally, Chit and now you. I love all of you. None of you are here by force. None of you are here because you don't want to be. I love each and every one of you. I just want you to be happy.\"\n\nIta just stared at me, before a small tear rolled down her cheek and she pressed her good side to me as we walked. With Harri in my arms I couldn't hold her, but she didn't let that worry her. \"Husband, don't cancel the contract. I'll need it if ever something happens.\" \n\n\"Like what?\" I asked.\n\nIta just shrugged. \"If someone comes after your soul, somehow, I have a kind of claim on it. My contract will nullify other's attempts to take your soul by force. Not that our contract let's me actually take your soul myself. But I'm bound to it, making it mine by proxy and while I'm bound to you, I can't be taken away. And if something does actually happen to me and this body is destroyed, so long as I have the energy to reform in my home plane, I can follow the contract back to find you again.\n\n\"I was always told to get as much out of a contract as I possibly could. When you rescued me from Gentar, I was so happy... But when I saw you with your other wives... I felt lonely. I'm a succubus, I'm-\"\n\n\"You're a what?!\" I turned to see Gornty's shocked expression, staring at Ita in something between shock and fear. \n\n\"You'll shut your mouth, or I'll shut it for you. After the stunt's you've been pulling, you're hardly the one to talk,\" I growled at the fetz.\n\nHe frowned, but shut his mouth and Ita continued. \"As I was saying, I'm a sexual being. I need to be... Well... Not loved, but at least experience some form of affection. Gentar was quite literally starving me to death. Without the power to return home, when my body dies, I would have died a true death. So we're taught as children to take as much as we could get. And then I met you... And I was so desperate, I just agreed to whatever contract would save me.\" Ita paused in her talk to look up at me and smile. \"And now you say you love me? Really? Enough to free me and still give me what I need to survive, while continuing to love me?\" She shook her head, \"no, husband. Keep the contract. Because as long as it survives, I'll never want anything else.\"\n\nI couldn't help the stupid smile that broke across my face. I'd have hugged her if not for Harri still unconscious in my arms. Besides, if I wasn't mistaken, I could hear the clomping of armoured boots approaching. Sure enough, as the trees began to thin, exposing the plain outside the town, where we first fought the goblins, we were greeted by a small party of guards.\n\n\"SIR!\" They said in unison. Led by Lonty, there were ten of them. Four carried two stretchers between them. Gently as I could, I lowered Harri to the closest stretcher. When the men took her weight, they quickly turned and headed back for town. The next two moved towards Ita, but I scooped her into my arms before she could move. \n\n\"I've got her, the rest of you take this idiot with you,\" I grunted. Reaching back one handed I found the end of the slip knot and pulled it free from my belt. Handing the makeshift leash to the nearest guard, I started walking as Lonty moved in beside me. \n\n\"Sir-\"\n\n\"Frelser,\" I corrected her firmly.\n\n\"Frelser, Sir,\" she smirked. I just sighed. \"What are we doing with him?\"\n\nI just shrugged. \"Make a report to Baz, let him deal with it. I personally wouldn't want to see him on the front lines again, but so long as Harri recovers completely, I don't think we need another public execution.\"\n\nLonty just nodded, \"I'll make sure Captain Baz gets all the details.\"\n\n\"Thank you, Lonty,\" I said with a smile. I took this moment to glance down at Ita, snuggled against my chest. The burns on her midsection weren't cracked and weeping any more. But they still looked a little sore. But that wasn't what I concentrated on. It was her eyes. The way she looked up at me like I was her whole world. \"I really do love you,\" I said softly and kissed her. \n\nAs our lips parted, she snuggled in even harder, if that were possible. \"Never letting go,\" she murmured softly. \n\nThere was a lot going on in the town as I carried Ita through the gates. Atop the wall, there seemed to be a lot of construction going on. That meant the ballistae were being installed and ammunition was being stockpiled. Thanks in particular to the scouting parties we had ranging the area, the locals were helping where they could. I'd placed orders for the young people of the town to collect sticks and branches. Others in the town sorted them into bundles. Larger straight branches were turned into spears for the ballistae. Smaller were for arrow shafts. Whatever else was left was put aside to dry. And at worst would make for good firewood if we came under prolonged siege. \n\nAs I carried Ita through the main street, I got many waves and smiles. These people really did seem to take comfort in my presence. I guess saving the town a few times really does keep people's spirits up, in the face of a looming war. \n\n\"Frelser!\" Eila called. Turning, I saw her rushing towards me with a smile, but seeing Ita, her whole demeanor changed. \"What happened?\" She snapped, fussing over Ita's discoloured skin. \n\n\"I'll be okay,\" Ita smiled at her sister wife as they exchanged a soft kiss. \"Just a burn, it's mostly healed, but I'll need to take it easy for a little while.\"\n\n\"Just a burn?!\" Eila snapped. \"Honey, it covers you from the base of your ribs to your knee! What happened? Did you get hit with a fireball or something?\"\n\nIta just nodded, \"yeah... But I got him back, don't worry!\"\n\nEila just snarled softly to herself. \"Why were you fighting anyway? I thought you were just scouting! Just wait until Chit finds out about this!\"\n\n\"Whoa,\" I said quickly. \"We got dragged into it. Gornty, that bloody idiot was trying to prove how tough he was. We were hiding and he snuck off to go do something manly. Idiot got caught taking down an elf and dragged the rest of us into the fight.\"\n\n\"Gornty?\" Eila narrowed his eyes.\n\n\"He's a dead man!\" Chit snarled from behind me.\n\nTurning, I got to see my orc wife glaring daggers in the direction of the town jail. Beside her, was Ally, who quickly stepped past her to kiss Ita as well.\n\n\"Calm down my lovelies,\" I said, trying to sooth my wives. \"He's in the hands of Baz. His stupidity nearly killed Harri as well. Trust me, he's not getting away scot-free.\"\n\n\"Harri was there too?!\" Eila gasped. Ally had a look on her face that reminded me of the time shortly after we met, where she demanded to know if I'd hurt Eila. Chit was literally grinding her teeth in anger. Clearly I was missing something important. \n\n\"Eila?\" I asked cautiously.\n\nMy first elfin wife made eye contact with me long enough to say, \"don't forget I'm the one in charge of your wives.\" She shook her head a moment, \"don't worry about it. Let's get Ita home.\"\n\nHonestly, if my hands weren't full, I'd have saluted her. But I followed after her regardless. We quickly moved through town to our home at the far side. Most people paused in their duties and waved as I passed. Each of them had a concerned expression on their face when they spotted Ita cradled in my arms, but she made sure to smile and wave as we passed. This time as I headed past the bathhouse, I spotted Darry's expression of concern as I moved to our front door. Eila pushed it open and led us upstairs where I gently deposited Ita on the mattress.\n\n\"I'm okay,\" Ita smiled.\n\nEven so, I leaned forward and kissed her firmly. As our lips touched, I felt that familiar flow of power pass from myself to her. Unlike usual though, as the flow stopped, I continued kissing her. Her only reaction was a small moan before taking in more of my power. It pained me to see her hurt.\n\nChapter Six\n\nThe following morning, after a meeting with Baz, discussing our failed scouting mission, I found myself touring the walls. \n\n\"It's all coming together,\" I said.\n\nBaz nodded and led me closer to a ballista that was being used for target practice. \"The Dwarves certainly know their way around a machine.\" He paused as the men pulled a large lever. With a heavy thwang, the steel tipped bolt flew out faster than I could track. But I caught sight of it flying over the plain, slamming into a barn sized target just before the trees. \"A little to the left, lads. Though that could be the wind.\""
    ],
    "authorname": "Montgomery Quinn",
    "tags": [
        "battle",
        "elves",
        "harem",
        "heartbreak",
        "love",
        "orc",
        "romance",
        "siege",
        "unicorns",
        "war"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-leader-1"
}