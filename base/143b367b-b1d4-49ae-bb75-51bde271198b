{
    "title": "Three Square Meals Ch. 105",
    "pages": [
        "The Imperial Palace on Kinta was in a state of chaos, with flustered officials scurrying down corridors, their frightened faces reflecting the febrile atmosphere on the Kintark homeworld. Tamolith the Consort prowled down one of the grand corridors leading to the Emperor's throne room, her fearsome draconic features twisted into a scowl of contempt. Ever since the horrifying defeat at Terra, she'd been sensing an ugly feeling of resentment amongst the imperial subjects and she knew something had to be done, and done quickly, to avoid disaster.\n\nHer long claws dug into the granite floor, each footfall making a heavy thump, loud enough to warn the chattel to keep well out of her way. As she approached an intersection, a terrified courtier ran out into the corridor, looking back over his shoulder as he fled. Heedless of the red dragon in his path, he thumped into her enormous scaled forelimb, then bounced away to sprawl across the floor. \n\n\"Impudent wretch,\" she snarled, baring an enormous set of fangs. \"How dare you sully my magnificence with your filthy touch?!\" \n\n\"By Dirgisss the Merciful... I beg you...\" the junior official whimpered, cowering on the floor.\n\nTamolith sneered, then backhanded him with a huge forepaw, sending the screaming Kintark cartwheeling through the air. She watched him get some impressive ground clearance, then smiled as he slammed into one of the pillars lining the corridor with a sickening thump. When his shattered body crashed to the ground, the remaining courtiers fled in fear for their lives, much to her satisfaction. It was always good to remind the peons exactly where they stood in the pecking order.\n\nTurning down the corridor the rushing courtier had appeared from, she padded ahead, her gaze locked on the vast ornate doorway at the end. Each door was intricately carved, a labour of love that had continued for centuries, with spectacular stylised dragons in majestic poses. There were half-a-dozen Royal Guard standing guard outside, all that remained of the Praetorian forces that Baledranax had left behind to protect his mate.\n\n\"GET OUT YOU MISERABLE CRETINS!\" \n\nTamolith rolled her huge reptilian eyes as she heard Vilandrith's scream of fury. The Empress had been devastated to see her mate brought low at the hands of the Lion and had taken to raging at the palace officials in her grief. A flood of Kintark ministers bolted through the partially-opened doors, followed by the sound of tortured screams. When she reached the huge doors, she barged her way through, ignoring the guards who wisely scurried aside to let her pass. The doors clanged back into place behind her, closing with a thunderous crash as Tamolith prowled into the throne room. \n\n\"Is something vexing you, resplendent Empress?\" she asked, picking her way through the lacerated corpses that littered the vast chamber.\n\nVilandrith uncurled herself from the raised dais, her fearsome draconic features etched in grief. \"Why must these fools pester me in my time of mourning?!\" she sobbed, amber eyes filled with unshed tears. \"They should all be grieving the loss of their beloved Emperor! The Palace should be ringing with their lamentations!\"\n\nTamolith could feel the mood-altering pheromones pouring off the grief-stricken female dragon, the emotions varying wildly from anger to fear, then grief, and finally despair. Counting herself fortunate that she was immune to their debilitating effects, she approached the wildly temperamental Empress with caution. \n\n\"Vilandrith... my heart breaks for your loss, but the Empire is critically exposed,\" she warned her, keeping her rumbling voice to a non-confrontational purr. \"We must protect our borders, but we haven't got-\"\n\n\"Why should I lift a claw to protect those disloyal traitors!\" the Empress howled, eyes suddenly ablaze with fury. \"If they hadn't failed their Emperor when he needed them most, we would be reaping the spoils of victory! Let those worlds burn for all I care!\" She broke down again, wailing in her grief. \"This shouldn't be happening! Baledranax was so powerful, so mighty... he was an immortal god made flesh...\"\n\n\"I did warn him that John Blake wasn't to be trifled with,\" Tamolith murmured, thinking back on her return to the palace only a few short months ago. She immediately regretted her comment as Vilandrith shrieked, apoplectic with rage.\n\n\"That miserable little insect! My poor love had yielded and that heartless vermin butchered him like a... like a...\" she trailed off, collapsing in a shuddering heap, the vast dragon's resonant sobs of despair echoing around the high-arched audience room. \n\nTamolith watched the Empress as she wept, trying to determine the best course of action. The Empire would descend into a state of total anarchy before the week was through, and would not survive without someone taking firm control of the throne. \n\n\"I might have a solution to your problem...\" she tentatively offered. \"A way of giving you the necessary time to mourn mighty Baledranax, without constant interruptions from the irritating masses.\"\n\nLifting her head, Vilandrith looked at her sister-in-law with hope in her vertically-slitted eyes. \"What do you propose, Tamolith?\" \n\nTamolith absent-mindedly scratched a foreclaw across the floor, gouging a deep trench in the marble. \"Perhaps I could act as your regent... make sure that everything is running smoothly until you-\"\n\nThe Empress peeled back her lips from her huge fangs and hissed, eyes ablaze with anger. \"You dare to try and usurp my throne?!\" She hunched into a crouch, her long tail lashing behind her. \"I'm faced with treachery on all sides!\"\n\nDebasing herself in front of her fellow dragon, Tamolith lowered her head and neck submissively. \"Of course not, Empress! I will forever be in your debt for allowing me to return to the palace with my precious darlings... all I wish is to ease the burden on you in your time of need. Please forgive me that I misspoke and overstepped my position.\"\n\nAll the fight seemed to leech out of Vilandrith and she sagged back onto the dais again. The anger left her too, her draconic features twisting with despair once more. \"I-I overreacted Tamolith... you have been a loyal friend...\"\n\nTamolith straightened again, then padded over to join her fellow dragon. \"Come, Vilandrith... you should retire to the Imperial Quarters where these meddlesome gnats cannot bother you with their witless inanities.\"\n\nHeaving a despondent sigh, the Empress lurched to her feet and walked with dragging steps towards the Emperor's personal chambers at the rear of the throne room. \"My heart feels like it is made of lead... I have never known such agony,\" she breathed, her throaty voice communicating the depths of her pain. \"How could you stand to lose Kindralax, Tamolith?\" \n\nCarefully closing the huge doors behind her, Tamolith smiled as she recalled a pleasant memory. \"Ah, it was easy, Empress,\" she replied, her lips curling into a triumphant sneer. \"He'd grown dreadfully dull, so I made a bargain with an intriguing fellow to have him dealt with. I'll have to thank John Blake for dispatching your half-wit of a husband as well!\"\n\nVilandrith whirled around to gape at Tamolith in wide-eyed horror but was too late to react as the other dragon pounced, clamping down around her neck with those massive jaws. The Empress shrieked in agony as long fangs plunged through her scales and bit deep, yellow blood spurting from several vicious wounds. The two dragons crashed to the floor as Vilandrith thrashed to free herself, her foreclaws raking at Tamolith and leaving three bloody clawmarks across her muzzle.\n\nTamolith violently twisted her head back and forth, long teeth sawing through the other dragon's flesh and widening the savage gouges. Having attacked the Empress from behind, she was able to rake both her front and rear claws down Vilandrith's back, shearing through scales and tearing chunks out of the stricken dragon. \n\nFlailing wildly, Vilandrith tried to free herself from the death grip by slamming the traitor into the wall, but blood was pouring like a waterfall from the cruel wounds to her neck. She began to grow weaker, her struggles less and less effective as Tamolith tore into her. Her final keening wail was cut short in a bubbling gurgle as Tamolith managed to bite through, ripping an enormous chunk out of her neck. After spitting the bloodied flesh from her mouth, Tamolith bit down again, severing Vilandrith's scaly neck completely this time. \n\nBlood began to pool across the floor from the decapitated corpse and Tamolith roared in triumph as she stood over the Empress' body. She shook the dripping yellow blood from her fang-filled maw, then grinned as she surveyed her handiwork. \"Poor, trusting fool,\" she gloated as she studied the dead Empress, making sure she couldn't regenerate such a gruesome injury. \"Did you really think I'd forgiven Baledranax for banishing me to Xen-Nucheck with his loathsome brother?\" \n\nOf course, the headless body was in no position to reply, but Tamolith spotted movement deeper in the quarters, half-a-dozen sets of fearful orange eyes staring at her out of the gloom. Her ferocious draconic face twisted into a feral grin as she stalked deeper into the Imperial chambers. Tamolith's revenge against Baledranax was not yet complete...\n\n***\n\nJohn waited as the robotic limbs lifted armour plates away from his body, freeing him from the confines of the Paragon suit. Stepping out of his armoured boots, he smiled at Admiral Harris, who was gaping at the armour-equipping frame in astonishment.\n\n\"Not bad eh?\" John said with a grin, strolling past his friend towards his bedroom. \"Strapping ourselves into armour was taking way too long, so Dana came up with that little invention.\"\n\n\"I've never seen anything like it!\" Charles gasped, turning to hurry after him. \"You could make an absolute fortune selling tech like that!\"\n\n\"I'm not sure Fleet Admiral Devereux's going to have much money left in her budget, not after the incredibly generous bounty I'm expecting for the Hera,\" John replied, winking at the older man.\n\nCharles laughed and shook his head. \"I thought you said you didn't want it?\"\n\n\"Ah, maybe I'll hang on to it after all...\" John murmured, pretending to consider the idea. \"I could blast the crap out of it, then leave it in orbit around Terra, a bit like 'The Warning'. Do you think that would make anyone in the Admiralty think twice about messing with the girls?\"\n\n\"I think after what Alyssa did to Weber, they won't even risk looking at any of the Lionesses the wrong way...\" Charles replied with a wry smile.\n\nJohn hit the button to open the doors into the Officers Lounge, then nodded towards the sofas. \"Grab a seat, I'll get us a drink. Whiskey, right?\"\n\nThe Terran admiral sat down and smiled as he unbuttoned his jacket. \"As long as I'm not going to get a stern reprimand from Doctor Voss; I don't want her thinking I don't appreciate what she did for me.\"\n\nJohn placed two glasses on the bar, then poured out the amber-coloured alcohol, adding a handful of ice to each one. \n\n*Two vodka cranberries please,* Alyssa eagerly requested, as he put down the bottle of whiskey.\n\nCharles watched as John poured out two more drinks. \"Are we expecting company?\"\n\n\"Alyssa and guest,\" John replied with a grin, gathering up the glasses and returning to the table. He handed a whiskey to the older man, then sat down facing him. \"While we're on the subject of what Rachel did for you... how're you feeling now?\"\n\n\"Like a new man. I haven't felt this good in years,\" Charles admitted, with no small amount of wonder. \"It's funny... all those little aches and pains I'd been putting up with are gone. Rachel wasn't kidding when she said she'd give me another couple of decades; I feel like I've just turned thirty, not fifty!\"\n\nJohn sipped his drink and smiled. \"I'm very glad to hear it.\"\n\n\"It's just a shame she can't do anything about the grey hairs,\" Charles said, brushing a hand through his salt and pepper hair. He raised an eyebrow hopefully. \"Can she?\"\n\n\"They make you look distinguished,\" Alyssa said, as she entered the Officers' Lounge with Lynette at her side.\n\nJohn and Charles rose politely from their seats as the two women joined them, then the four sat together.\n\nLynette studied Charles for a moment, then smiled. \"Alyssa's right; you look years younger as it is. I think I'd struggle to take you seriously without those greys.\"\n\n\"Really?\" he replied self-consciously.\n\nShe nodded, lifting her glass from the table. \"I was going to mention it earlier, but then I got distracted by the meeting with High Command. You look like you've had a huge weight lifted off your shoulders... it's done wonders for you, Charles.\" \n\nHe smiled, unused to the compliments. \"Thank you.\"\n\nHer hazel eyes twinkled as she added, \"Maybe I should speak to Rachel too. What do you think?\"\n\nCharles looked flustered, then held his hand up as if in surrender. \"I think I see a minefield ahead, so I'm going to take the only safe course and full-reverse away from that one.\"\n\n\"Very wise,\" Lynette replied, her light-hearted laughter bordering on a girlish giggle.\n\nHer fellow admiral studied her curiously for a moment, his brows furrowing. \"You sound... different... Lynette.\"\n\nShe coughed self-consciously and quickly took a sip of her drink. \"Perhaps it was a side-effect of being healed...\"\n\nJohn put down his glass and quickly intervened, \"Charles, I hope you aren't going to leave me in suspense for much longer. I'm dying to know if you're going to make it worth my while to sell the Hera, or if I should turn her into Swiss cheese...?\"\n\n\"Ah yes, of course,\" the older man said, turning to give John a shrewd look. \"You did a superb job salvaging the dreadnought without it sustaining any damage, but unfortunately the Kintark have made all sorts of modifications. The cost of restoring the Hera to her original condition will have to be taken into account...\"\n\nShaking his head, John laughed. \"Nice try, but we both know they outfitted it with upgraded Brimorian shields and state-of-the-art heatsinks in those Plasma Cannon batteries. Irillith used it to rack up an impressive kill count, so if anything, it's worth a huge amount more...\"\n\n\"I tried, Fleet Admiral,\" Charles said, darting a smile at Lynette. \n\n\"It was a valiant effort,\" she noted, returning his smile.\n\nCharles leaned forward and said, \"All joking aside, John, bounty values are set at a fraction of the original manufacturing cost, or estimated cost for alien vessels. Even so, I'd like to offer you 850 million credits for the Hera... along with the earnest gratitude of the Terran Federation.\"\n\nJohn whistled, his eyebrows climbing. \"I think I'll have to give Irillith a raise!\"\n\nAlyssa nodded, her cerulean eyes flashing with amusement. \"I'm sure we can come up with a suitable reward for her.\"\n\n\"I accept, Charles, and thank you,\" John said with a grateful smile. \"That money will come in very useful... I'm actually thinking about setting up a new trade station of my own, on the border with the Maliri. We don't currently have a starport there, so all the trade has been going through Geniya station.\"\n\nCharles briefly glanced at Lynette, his expression turning sombre as he faced John again. \"I think we're all friends here and can talk freely... Are you talking about a trade port or a battle station?\"\n\n\"I don't want to mislead you... I'm considering something substantial,\" John replied, looking at the two Terran admirals in turn. \"I think we'll see a massive increase in trade coming from the Maliri Protectorate in the next few months; far more than Geniya is capable of dealing with. It would be prudent to make sure we have a safe harbour for all those ships, so we'll need to build adequate defensive capabilities. I'd also like to use it as a staging base if we need to launch Maliri fleets to assist the Ashanath, the Trankarans, and yes... the Terran Federation. The biggest base in Maliri Space is Genthalas station, but that's several days flight-time away from the border for their ships.\"\n\nLynette looked deeply conflicted and shared a concerned glance with Charles. \"A military base adjacent to the border is quite a statement... it would represent a huge projection of Maliri power into Terran Space.\"\n\nJohn paused to consider her point. \"I don't want to create a political shitstorm for you... What if we built it entirely on the Terran side, then you'd get the benefit of all the docking fee revenues?\" he suggested, with a hopeful smile. \"It wouldn't cost you a single credit to build or operate, but would bring in a huge tax haul, as well as stimulate even more trade at Olympus.\"\n\nLynette gave him an apologetic frown and shook her head. \"We could really use the money, but there's no way I could justify allowing an alien empire to build a military base within Terran territory. I have an incredibly strong mandate from High Command at the moment, but that kind of encroachment would severely erode any goodwill I have within the Admiralty.\"\n\n\"Straddling the border then?\" John countered. \"It would be Maliri run, but we could construct enough Terran-allocated docks to allow for a permanent Federation fleet presence. That way we could claim that it's a joint venture between the Maliri and Terrans?\"\n\n\"And would we still get the tax revenue?\" Lynette pounced, suddenly looking intrigued.\n\nJohn stifled a smile as he pretended to mull it over. *What do you think, my beautiful blue queen?*\n\nEdraele sent him a loving psychic smile before she replied, *All the Maliri Houses will make a fortune from selling their House specialities, so I think we could forego revenue from docking fees and the like. Being able to keep fully supplied Maliri warfleets right on the border would be well worth the cost of manning such a station with Maliri. As you said, we'd save days of travel time when sending reinforcements to our allies.*\n\n*Fantastic, thank you,* he said gratefully. John hesitated for a second before adding, *Is everything okay? You were quiet all the way through the meeting with High Command...*\n\n*I was fine, just listening attentively,* his Maliri Matriarch replied, sounding a little off-key.\n\n*Give me a few minutes, then we'll talk,* John said with concern, before quickly smiling at Charles and Lynette. \"That sounds like a reasonable compromise to me.\"\n\nThe two admirals grinned at each other, credit signs practically flashing in their eyes.\n\nLynette turned to look at John again and grimaced. \"I wish we genuinely could contribute to this starbase, but I think we'll need every spare credit we've got for our fleet refit and construction projects.\"\n\nJohn gave her a reassuring smile. \"Don't worry about it. I've already arranged for Trankaran ores to be shipped to Genthalas, where Maliri engineers will begin construction on the base modules.\"\n\nAlyssa nodded, looking excited as she said, \"I think we should be able to get a surprising amount built in just a couple of months!\"\n\n\"And in the meantime, it's far more important that you prepare Olympus to ramp up warship construction... The sooner we can start building more ships and fully upgrade the existing Terran fleets the better,\" he said, leaning back in his seat.\n\nAlyssa's blue eyes flicked to the brunette opposite. *Now would be a good time to announce your plans to relocate to Olympus...*\n\n\"That reminds me,\" Lynette said, turning to look at Charles. \"I was thinking that with our primary focus on rebuilding our fleet capabilities, it might be sensible for me to be based at Olympus for the foreseeable future.\" She smiled at him and quickly added, \"Don't worry, I have complete faith in your ability to manage the shipyard, I just thought it might be more efficient to be close by... in case you need Fleet Admiral approval for more funding or resources.\"",
        "He nodded thoughtfully. \"Actually, that's a great idea! I'd much prefer to be able to speak to you in person rather than trying to schedule holo-meetings. I suspected you'd want daily progress reports anyway.\"\n\n*A nice compliment to boost his ego and you made it seem like you're only moving to Olympus to help him... You're a natural at this!* Alyssa enthused, suppressing a grin.\n\n\"I'd like to be kept well-informed, but I don't want you to feel like I'm burdening you with unnecessary meetings. Perhaps we could meet daily for lunch?\" Lynette suggested, her tone accommodating. \"That way you can keep me updated on anything important and if there's no news... well, we still have to eat.\"\n\n\"That sounds perfect,\" Charles replied, visibly relaxing. He smiled warmly at her as he continued, \"Besides, the Citadel is in a right mess after the Kintark assault. I'm sure we can make you quite comfortable here at Olympus until you decide to return.\"\n\n\"Thank you for being so understanding, Charles,\" Lynette replied appreciatively. \"We'll be working closely together for the foreseeable future, so I don't want us to start off on the wrong foot.\"\n\n\"No problem at all,\" he said, his eyes flicking to John then back to her. \"I'm actually looking forward to having someone else around who knows what we're facing. Henry Voss has been a huge benefit to the refit program, but... he's a little eccentric.\"\n\nLynette raised her glass in toast. \"To close friends...\"\n\nJohn, Alyssa, and Charles all clinked glasses then sipped their drinks.\n\nAlyssa smiled benignly at Charles, while speaking telepathically to Lynette, *You handled that perfectly! Now you two can relax over a meal on a daily basis... and you've established yourself as his confidant!*\n\nLynette masked her grin by taking another drink, making eye-contact with the blonde over the rim of her glass. \n\n\"Speaking of Henry Voss, Rachel wanted a quick word... she's in her quarters,\" Alyssa said, while idly tousling John's hair.\n\nHe looked at her in surprise, then nodded and turned to smile at Charles and Lynette. \"Sorry, duty calls... If you'll excuse me for a few minutes.\"\n\nCharles waved away his apology. \"It's quite alright. I'll just finish this drink then I need to get going; Admiral Van Den Broeck asked to meet for dinner tonight so we could discuss her new role.\"\n\n\"The redhead?\" John said with a broad smile. \"Charles, you old rascal... she's very attractive.\"\n\nThe admiral laughed and shook his head. \"I know... her interest in me is quite mystifying. Still, I'm hardly going to object if a pretty woman wants to buy me dinner.\"\n\nThe two men finished their drinks and stood, missing Alyssa's scowl of frustration and Lynette's dejected frown.\n\n\"Thanks for the pleasant company, ladies,\" Charles said, inclining his head politely to their companions as they quickly masked their expressions. He smiled at Lynette and added, \"I'll arrange a new office and quarters for you here on Olympus.\"\n\n\"Much appreciated, Charles,\" she replied, nodding gratefully. \"Thank you.\"\n\nThe two men headed out of the Officers' Lounge, leaving Alyssa and Lynette on the sofas.\n\n\"Shit!\" Alyssa swore with a grimace. \"Lina's a fast worker.\" \n\n\"Never a good deed goes unpunished...\" Lynette muttered, her brow creasing with worry. When she saw the blonde's look of confusion, she continued, \"I actually felt sorry for Lina after eliminating all the divisions she was overseeing; that was why I assigned her to oversee the Olympus trade-hub expansion.\"\n\nAlyssa got up, then sat next to Lynette and put her arm around her shoulders. \"Don't worry. I doubt she'll sleep with him after their first date.\" She paused with a frown of concern. \"Unless she's a really fast worker...\" Seeing Lynette's look of alarm, she quickly continued, \"That means we've got one more day to make plans, then you'll have to start your charm offensive!\"\n\n\"Another day?\" Lynette asked in confusion.\n\nThe blonde reached over to pat the curve of Lynette's cum-filled belly, her hand disrupting the holographic projection. \"We'll be leaving tomorrow night... that means you've got another day of being stuffed full of John's cum while he changes you. After that you'll be a single girl and can start seducing Charles!\"\n\nThe older woman blushed and nodded, a smile of anticipation spreading across her face.\n\n***\n\nJohn waved goodbye to Charles as the admiral left through the Invictus' airlock. *Okay, Edraele, I'm all yours...* he said as he turned and headed for the grav-tubes. *So what's bothering you?*\n\nThe Maliri Matriarch hesitated for a moment, then let out a rueful sigh. *I was just thinking that I'd always considered the Maliri's long lifespan a gift and the short-lived life of a Terran to be a curse, but now I see that there's a certain... agency... that Terrans possess and we Maliri lack.*\n\n*The whiskey's probably making me a bit slower than usual,* John said with a smile. *Would you mind explaining that for me?*\n\n*In the four hours that Lynette has been Fleet Admiral, she's already completely revamped the Terran Federation interplanetary budget, given High Command a dramatic feeling of new purpose, all while inspiring and uniting the admirals behind her,* Edraele explained, sounding slightly awed. *I realised that with living shorter lives, the Terran willingness to embrace change and their sense of urgency is a profound strength.*\n\n*There's more to it than that,* he said intuitively. *I can tell that you feel ashamed about something... You wouldn't feel that way about the cultural differences you just mentioned, so what is it?*\n\n*Lynette's so focused on helping Federation citizens. Her plans to improve colony development will make a major difference to the lives of people in the Outer Rim systems.* She faltered as she continued, *I-I should be doing a lot more to help the Maliri... I'm ashamed that I've been so singularly obsessed with Fleet refits at Genthalas that I've barely considered my people.*\n\nJohn paused for a second as he considered his reply. *You've told me before that you lack experience with that kind of positive governance, so it's not surprising that you've overlooked that aspect of your rule. You also need to remember that you and Lynette are facing very different challenges. She needs to rebuild her fleet strength to defend Federation space against potential attacks, but you're making preparations for a war you know is coming... a war where I'm pushing the Maliri to shoulder the burden of the fighting.*\n\n*Yes, that's true but-* she attempted to protest.\n\n*I do hope you aren't interrupting your Progenitor, my devoted Matriarch?* John asked, keeping his tone light as he stepped out of the grav-tube on Deck Two.\n\n*Of course not, my Lord. Please continue,* she replied contritely, a hint of amusement in her voice.\n\n*You need to bear in mind that the Protectorate and Federation are at very different stages of development. The Federation is a relatively new civilisation that has gone through an unprecedented amount of growth in the last few centuries; all the outlying systems are severely lacking in infrastructure, so it's obvious what needs doing to improve the lives of citizens there. By contrast, from what I've seen of the Maliri worlds, they have excellent infrastructure and beautifully designed cities in place... you're just lacking the population to fill them.* He hesitated before adding, *In that regard, Lynette has a much easier job than you. Fixing the biggest problem affecting your people will take time... decades in fact.*\n\n*Thank you for always trying to make me feel better about myself,* Edraele said quietly. *I'm not sure I deserve it, but you do... every time.*\n\n*I love you, Edraele, I don't want you getting upset, especially when you haven't done anything wrong,* John said as he walked towards Rachel's quarters. *You've worked hard to support me in every way you can and I promise I truly appreciate everything you've done for me. I'll do my best to show you that when we return to Genthalas.*\n\n*It feels like so long since I last saw you,* she said wistfully. *It's only been a week, but it seems like a lifetime...*\n\nHe couldn't help chuckling at that. *Honey, I know exactly what you mean...* John paused outside the door to Rachel's room. *Will you give your girls a kiss and tell them I love them.*\n\nEdraele's playfully seductive tone came through loud and clear. *Just a kiss?*\n\n*To start with...* he replied, smiling as he imagined it.\n\n*I will do as My Lord commands,* she purred, sounding happy and contented once more.\n\nJohn hesitated at the door, considering knocking for a moment, then smiled when he remembered that they were long past the need for that. Pressing the button on the wall, the door swished open, revealing Rachel in a matching set of black underwear holding up long dresses in front of a mirror. She turned to look his way, a dazzling smile on her face, her obvious delight at seeing him filling him with happiness.\n\n\"Hey gorgeous,\" he said, returning her smile. \"Getting ready for a night out?\"\n\nRachel glided over to give him a sizzling kiss. \"Actually, that's exactly what I'm doing! My dad asked me to meet him for dinner.\" Her grey eyes glinted as she added, \"Dana's coming... would you like to join us?\"\n\nHe hesitated for a moment, torn between his desire to build a relationship with his future father-in-law, and his need to address some other important business.\n\nShe was surprised to see him pause and asked, \"What's wrong?\"\n\nHe grimaced as he replied, \"I need to talk to Jade. There are some things I have to sort out with her before we add her sisters to the group and I'm on a strict deadline... I'm sorry for letting you down.\"\n\n\"Hey, there's no need to feel bad, I understand,\" the brunette said, her soft fingers smoothing out his worry lines. She smiled at him, then walked back to her dresses. \"Having dinner with just Dana and my father might actually be a nice opportunity. I'd like him to see just how wonderful she is, and if you were there too, I know you'd be the focus of my father's attention.\"\n\nShe picked up the red and green dresses and held them against her chest, trying to decide which to wear. John glanced into her wardrobe and pulled out a mid-length sky-blue dress. \"Try this... it'll subconsciously reinforce you're a couple to your father.\"\n\nRachel turned to look at him quizzically, then her smile widened. \"Oh John, that's a lovely idea! I got that one to match her eyes.\"\n\nShe slipped it on, draping the silky material over her curves, then turned to check her reflection.\n\n\"You look stunning,\" he said, wrapping his arms around her from behind. One hand was drawn to her toned stomach and he gently caressed her as their eyes met in the mirror. Her gaze softened, showing nothing but love as she watched him. \"Now you look truly beautiful...\"\n\nRachel turned to face him, her expression shifting with a flood of emotions. \"Thank you... for everything. I was a lost soul when you rescued me all those months ago... but you managed to make life wonderful again.\" She bit her lip and those gentle grey eyes welled up. \"I never thought I'd get my father back, but he's so different now. He really loves me, I can see how much he cares... he was never that open with me before, even when my mother was still with us.\"\n\n\"I'm so glad that you're rebuilding your relationship with him,\" John said, carefully brushing his thumb across her cheek and catching a tear. \"You're a lovely girl, Rachel, you deserve this.\" \n\nShe threw her arms around him and hugged him tight, while John smiled and rubbed her back.\n\n\"Can I share the love?\" Dana asked with a warm smile as she glided into the room. \n\nJohn beckoned her to join them, \"Get over here, gorgeous.\"\n\nShe embraced her girlfriend from behind and John repositioned his arms so he was encircling them both. They stood quietly for a long moment, relishing that shared intimacy while Rachel got her emotions under control again.\n\nWhen they broke up the hug, Rachel turned to look at Dana, her eyes widening in surprise and delight when she saw the smoky-grey dress the redhead was wearing. \"You had the same idea as John!\" She glanced at him over her shoulder. \"You're both so in tune!\"\n\nDana blushed and admitted, \"Actually, blondie just told me what John had picked out for you. I was going to wear the green...\"\n\nThe three of them laughed together, then Rachel quickly put on some makeup and high heels. She gave John a brilliant smile, then stood beside her lover. \"What do you think?\"\n\n\"You both look incredible and it's obvious you belong to each other...\" he said earnestly, admiring the two visions of loveliness standing before him.\n\nDana frowned and shook her head. \"We belong to you...\"\n\nJohn reached out to caress them both, smiling as they leaned into his hands. \"That goes without saying.\"\n\nThey rewarded him with tender kisses, then accompanied him out into the corridor.\n\n\"Who's on guard duty tonight?\" John asked, raising an eyebrow. \n\nTashana stepped out of the grav-tube in a Paragon suit. \"That would be me.\" \n\n\"I thought you and Irillith had plans for Jehanna this evening?\" John asked, greeting the Maliri girl with a smile. \n\n\"We're going to postpone that until tomorrow,\" she replied, strolling down the corridor to join them. \"You've got a busy schedule tonight and there's no better way to finish off some girl-on-girl loving than having your belly stuffed full of cum. We're trying to convince Jehanna to retire with us, so we want this to be something she'll never forget!\"\n\nJohn leaned in to give Tashana a quick kiss when she removed her Paragon helmet. \"So, you like her too?\"\n\nShe nodded enthusiastically, then smiled at Dana and Rachel. \"We've both got a thing for Terran girls. You're all so exotic!\"\n\nThey walked back to the grav-tube, with the three girls chatting animatedly about dinner that evening. \n\n*Jade, would you meet me down in the Cargo Bay please?* John requested as he followed his nubile companions into the red anti-gravity field. \n\n*Give me ten minutes and I'll be right there!* the Nymph readily agreed.\n\n\"Have a great time tonight,\" he said to the girls, when they reached Deck Nine.\n\n\"I'm sure you will!\" Dana said with a cheeky grin. \"You're breaking in the Nymphs, right?\"\n\nHe laughed and shook his head at her choice of phrase. \"I wouldn't have put it quite like that... you know I'm just trying to help them.\"\n\nRachel smiled at him and leaned in to kiss his cheek. \"They're lucky girls... I wish I could see their faces when they realise you're genetically compatible with them.\"\n\nTashana put her helmet back on and said, \"We won't be out too late; Alyssa wants us to have a nap before the big showdown tonight.\" \n\nJohn parted ways with them at the Cargo Bay doors, waving goodbye to Dana, Rachel, and Tashana as they headed for the airlock. Striding across the huge room to the large crates full of refined metals, he removed the lids from several marked with a silvery-white icon. Concentrating on the shiny blocks of refined metal within, he beckoned them out, then merged them into a massive roiling orb. It was easy to lose himself in the steady rhythm of shaping then melting down the malleable metal, strengthening it each time until he was able to start creating deca-shaped plates. John found that he was comfortably able to create four at a time without overly taxing himself, so he quickly started building up an impressive stack of Crystal Alyssium armour. \n\nHe felt a light touch on his arm, rousing him from his methodical work, having not heard Jade's quiet footsteps across the Cargo Bay deck. \"I brought you some dinner, John.\" \n\nTurning her way, he grinned when he saw the big plate with two steak sandwiches she was holding. \"Those look amazing, thank you!\" he exclaimed, giving her a grateful peck on the cheek.\n\nShe grinned at him, delighted to see him so happy. They sat cross-legged on the deck with the plate between them, as Jade put down a couple of bottles of water that she'd kept tucked under her arm. John nodded his approval as he took a big bite, the food tasting as good as it looked.\n\n\"You'll need lots of energy for later,\" Jade said with a coy smile, before picking up the second sandwich and taking a bite.\n\nThey sat together in comfortable silence, watching each other eat. John took his time admiring the gorgeous verdant girl sitting before him, meeting her curious gaze as she studied him in return.\n\n*So what am I going to do with you, my naughty little Nymph?* he asked, giving her a level look as he took another bite of his sandwich.\n\nJade flushed with shame, her skin darkening with a beautiful lustre. *I'm willing to submit to any punishment you deem appropriate, Master.*\n\n*This is the problem I'm facing: You ran off on a whim, right before one of the most intense battles we've ever fought in.* He paused for a moment to let her process that. *You put Calara, Irillith, and Faye at huge risk, leaving the Invictus without our best pilot when we really needed you.* \n\nHer emerald eyes were filled with sorrow, and she was no longer able to meet his gaze. *I'm so sorry, Master... I have no excuse, I was just overcome with the need to protect my sisters. I still can't believe that I effectively disobeyed you, it goes against everything I hold dear.*\n\nJohn finished the final bite of his sandwich, then took a big drink from the bottled water. When he was done, he pushed the plate and bottle out the way, then beckoned her over. \"Come here, Jade.\"\n\nShe sat in his lap, curling her arms and legs around him and hugging him tight. \"How can I make it up to you?\" she whispered remorsefully, resting her head on his shoulder.\n\nJohn was quiet for a long moment, just stroking her back as she stayed wrapped around him. He leaned back a little so that he could tilt up her chin and look into her eyes. \"Jade, do you respect my judgement as our leader?\"\n\nThe Nymph looked mortified that he would think otherwise and nodded frantically. \"Of course! You've steered us to safety through so many disasters! There is nobody in the galaxy I respect more than you, John, I swear it!\"\n\n\"I understand it was an exceptional set of circumstances and that the Nymphs were in real danger. I'm also certain that you saved Jehanna's and Lynette's lives, as well as those of your four sisters, and you even helped bring Weber to justice. However, I can't have you running around doing whatever you like, not if it puts the rest of the team in danger,\" he said quietly. \"You need to promise me that you won't just go off-mission like that again, not without at least warning me first.\" \n\n\"I promise,\" Jade said earnestly. \"I really mean it, John.\"\n\nJohn brushed his fingers through her hair and cupped her head in his hands. \"I believe you... You're forgiven, Jade.\"\n\nLike bright sunshine chasing away stormy clouds, a radiant smile lit up her sorrowful face and she hugged him fiercely. \"Thank you, Master!\"\n\nHe returned her enthusiastic embrace, smiling at her when she finally pulled back. \"Now, shall we review you in action on Tartarus?\"\n\nShe blushed, obviously embarrassed about her solo rampage. \"If you want...\"\n\nBrushing his thumb across her cool cheek, he said gently, \"I said you were forgiven, Jade. I'm not suggesting we look at it to make you feel guilty, I'm just curious to see how you handled yourself in combat. I saw the aftermath when I visited Tartarus and it was... impressive.\"\n\nThe Nymph sat up straighter, her expression lifting. \"Okay then!\"\n\nGlancing up at the ceiling where he knew hidden cameras were located, John called out, \"Faye, can you project the Tartarus footage in here?\"\n\nThe purple sprite popped into existence, her gossamer wings fluttering as she bounced over to join them. \"Sure! That's no problem!\"\n\n\"I'm guessing you've compiled the relevant video into something we can watch?\" John asked with a knowing smile.",
        "Her elfin face sported a huge grin as she nodded. \"You know me too well!\"\n\nJohn glanced at the huge Crystal Alyssium orb, surprised to see that it was still slowly rotating without him having to hold it there with conscious will. He narrowed his eyes in focus, picturing the liquid metal in his mind, then began to shape another set of plates. With a satisfying sense of accomplishment, he watched as the sparkling white armour plating began to form without him having to make any gestures. \n\nTurning his attention back to the glowing holo-screen that Faye had conjured before them, he saw that the video began with an image taken from a camera in a big gloomy room. In the centre of the room was the black stealth shuttle he remembered from Tartarus' upper hangar. \n\n\"Do you want to talk me through it?\" he asked Jade who was still sitting facing him.\n\n\"Sure!\" She glanced over her shoulder and began, \"This must be when I first infiltrated the base. I changed into a spider and decided to walk across the ceiling to-\"\n\nHe laughed and shook his head as he interrupted her, \"You'll get a crick in your neck like that.\" He took a firm hold of her waist, then turned her around so that she was sitting in front of him. Placing one hand on her tummy and the other on her shoulder, he pulled her back so that she was leaning against his chest. \"There, that's better. Now, tell me what you did...\"\n\nJade let out a happy sigh as she relaxed in his arms, then continued to describe her use of different creatures and what she was thinking at the time. John listened in fascination as he watched her sneak into the base as a deadly-looking spider, then she made great progress as a snake until her unfortunate discovery. After that his eyes widened at the scenes of unrestrained carnage as she rampaged through everything in her path.\n\n\"How on Terra did you change into that dragon?\" he asked in astonishment as he watched her unleash a devastating energy blast from her maw. The camera filming her onslaught shorted out a second later and footage from a camera deeper in the facility picked up the mayhem.\n\nShe shrugged and turned slightly to smile at him. \"I remembered how effective that form was from our last astral battle. I needed more power from Alyssa to shapeshift into something so massive and those breath weapon attacks took a tremendous amount of energy. Hopefully, with a bit of practice I won't have to rely on her so much next time.\"\n\nJohn slowly nodded, his eyes flicking back to the video and watching as she shrugged off hundreds of Gatling Laser bolts, armour-piercing rounds, and even grenade attacks. \"Didn't that hurt? Getting shot by all that? It was your body they were hitting, not a suit of armour...\"\n\n\"Pain is all relative... I learned you can ignore it a long time ago,\" she said quietly, lost in thought. \"I suppose it hurt a bit at the start, but after a while I was able to just shut it out. All I cared about was rescuing my sisters.\"\n\nHe squeezed her a bit tighter and she began to purr, snuggling into his embrace. The footage continued, with Jade tearing through the soldiers as she stormed through the base. When she finally caught up to Weber in his salvaged destroyer, he saw Jade charge out across the maintenance platform to shield the four feline women from harm.\n\n\"Faye, stop the video!\" he called out, staring intently at the image.\n\nShe did as he asked and Jade looked at him in astonishment. \"I-I... never thought about that...\"\n\n\"What is it?\" Faye asked in confusion, looking at each of them in turn.\n\n\"When I first met Jade, she couldn't remember her original form, so she improvised and came up with the way she looks now... But all four of her sisters are there as catgirls!\" John explained, before looking down at Jade. \"I just assumed you must have shown them.\"\n\nShaking her head, Jade said quietly, \"No, they were already in their Lenarran form by the time I caught up to them.\"\n\n\"Weber ordered them to change to look like that,\" Faye helpfully explained. \"When he became their master, they all turned into identical blonde girls... it seemed to really freak him out!\"\n\n\"How did they know?\" John asked, looking confused.\n\nJade looked troubled as she replied, \"They don't have any other memories of their past... I spoke to them all and I'm sure they don't remember anything.\" Her expression flickered with concern. \"But if they can all remember their original shape, why couldn't I?\" \n\n\"Maybe Alyssa could take a look into your mind and theirs; perhaps she might be able to find out more?\" John suggested, knowing she would be able to hear every word.\n\n*I need to conserve my energy for now; I'll need as much power as I can get for the Astral Plane... but I can take a look tomorrow?* Alyssa replied, speaking to them both. \n\n*Sounds like a plan,* John replied, hugging Jade close.\n\nHe nodded to Faye and the video continued, showing the destroyer opening fire on Jade's massive draconic form, pounding her with salvos of Gauss Cannon slugs at point blank range. It was horrific to watch, with big craters being blasted out of her scaled green hide as she desperately tried to shield her sisters from harm. John flinched every time Jade was struck, until he finally averted his eyes.\n\n\"That's enough, Faye! I can't watch any more!\" he called out, unable to stand seeing his lovely Nymph being mercilessly torn apart.\n\nJade winced as she watched herself crawling mortally wounded across the maintenance gantry. \"Yeah, that really hurt...\" \n\n\"Sorry, John,\" Faye said quietly, turning off the holo-projection. \"It's gone.\"\n\n\"How the hell did you survive it, Jade?\" John asked, anguish in his voice. \"You were shot fifty, maybe sixty times with Gauss Cannon rounds!\"\n\nShe turned to face him again, with rapt devotion shining in her emerald eyes. \"Only because of you, Master. Your will made me strong enough to survive and I was determined not to break my promise to you...\" She leaned forward to gently brush her lips against his in a soft kiss. \"You have plans for me, remember? I failed you once against Shinatobe... I wasn't going to fail again.\"\n\nHe cupped her head in his hands and put his heart and soul into kissing her. They started tenderly, but quickly ramped up the intensity in a deep kiss, his tongue duelling with hers. Jade's cool skin began to warm up as she responded, the Nymph pressing her luscious body against him. For the first time, he could feel her consciousness merging with his, taking his breath away with its simple purity. Jade was a delicate, innocent presence that seemed tentative at first, until she realised what was happening. At that point she rushed headlong towards him, throwing her entire being into that melding of minds. When they finally pulled apart, they were both breathless with the intensity of the kiss, gaping at each other in shock.\n\n\"That was like our kiss before the fight with the Kirrix,\" Jade murmured, her vertical pupils growing to big round circles, as she gazed at him with nothing but love in her eyes. \"But so much more...\"\n\n\"Something's happening to you, Jade,\" John said, gently stroking her cheek. \"I've only been able to do that with Alyssa until now.\"\n\n\"Maybe you've been getting me ready... preparing me to be a Matriarch for my sisters?\" she asked, looking nervous but excited too.\n\nHe smiled at her, then stood up with Jade still wrapped around him. \"Shall we go find out?\"\n\nShe grinned and nodded, reluctantly uncoiling herself so that she stood beside him. \"I can't wait...\"\n\n\"John, be careful!\" Faye suddenly exclaimed, pointing a tiny purple finger at the towering pile of armour plates behind them.\n\nHe whirled around and gaped at the precarious stack, which had been piled high up to the ceiling and was now wobbling ominously. \"I forgot I was even doing that!\" he exclaimed unable to believe his eyes. \n\nThe ball of Crystal Alyssium was practically non-existent, the liquid metal having been shaped into scores of identical pristine armour panels. John gestured at the upper levels of the pile, carefully grasped a smaller stack of the spacecraft plating in a telekinetic grip, then lowered it to the ground. He repeated that several times, until it was safe again.\n\n*How the hell did you do that?!* Alyssa blurted out, sounding as astonished as John felt.\n\n*I've no idea... I just tried to do what the girls have been doing; you know, concentrating on two things at the same time. I just got distracted with Jade and forgot about the shaping...* John replied, quite mystified.\n\nThe blonde giggled with gleeful anticipation. *I've got to learn how to do that!* She sounded excited as she added, *Now come to bed! The Nymphs are waiting!*\n\nJohn nodded his thanks to Faye, then turned to leave hand-in-hand with Jade. All the way up in the grav-tube, she darted longing glances his way, her anticipation clearly building. When they walked into the bedroom, they found Alyssa surrounded by dark-green girls, the blonde busy French kissing Marika while the other three planted loving kisses on the teenager's body.\n\n\"Starting without us?\" John asked, giving the quintet a wry smile.\n\nAlyssa's eyes were ablaze with lust, her chest heaving. \"They were getting twitchy waiting... and I couldn't resist.\" She crooked a finger at him as the Nymphs peeled away, four sets of emerald eyes matching the sultry look the blonde was giving him. \"They've been really good girls and they need rewarding...\"\n\nJade grinned at him as she helped him quickly strip off his clothes, discarding her own dress afterwards with indecent haste. When he climbed on the bed, Alyssa slid out the way, moving over to the high-backed chair to watch. As John was welcomed to the bed by a bevy of yearning Nymphs, the blonde spread her legs and began to stroke herself. \n\n\"Alyssa was right,\" John murmured, putting his arms around the two striped Nymphs, while the spotted patterned girls hugged him from behind. \"You've all been very patient.\"\n\n\"Please, Master... this one needs you so badly,\" Leylira begged him, moulding herself to his body as she kissed him with a desperate hunger.\n\nJohn kissed her back, smiling as he felt her cool skin flush warm, her breath quickening with arousal. He pulled back then turned to meet Marika's kiss as she pressed herself against him. Betrixa and Neysa were quick to change places, eager to get their own kisses as soon as his lips were free.\n\n\"I'm going to take each of you in turn, then Jade's going to feed you my cum,\" he said, glancing around at the four panting girls, the Nymphs looking like they were in heat.\n\nHe could see the overwhelming need they had to be claimed by their Master and didn't want to torture them with waiting any longer. Embracing Leylira, he eased her back onto the bed, moving with her to lie at her side. With her dark-green skin and almost jet-black hair it was almost like holding Jade in his arms, but he paused to really appreciate the differences. He traced a finger along the thin viridian stripes that marked her torso, crossing back and forth as he explored the lovely contours of her body. \n\nHer breath caught as he circled each dark nipple, a soft moan escaping her lips as he kissed each erect point. Flicking his tongue out to lap at them, they hardened further, drawing a soft gasp from her in response. John smiled as he raised himself up to study her gorgeous face, admiring the sensuous pout of her lips, the slender lines of her delicate nose, and the long-lashed set of enchanting eyes that gazed back at him. John let his fingers glide up the graceful length of her throat, then followed the shape of her jawline with a fingertip. Leylira's eyes widened at that distinctive caress, one that Jade had introduced him to many months ago. \n\n\"Master?\" she asked, her expression caught between astonishment and joy.\n\n\"You're a very beautiful girl, Leylira,\" he said, giving her a warm smile. \"I'm going to make you mine, then set you free.\"\n\nShe shook her head vigorously. \"This one never wishes to leave you, Master!\"\n\n\"Don't be alarmed, I don't want you to leave either,\" he said quietly, stroking her to keep her calm. \"You won't understand right now, but eventually, I am going to give you that choice...\"\n\nLeylira was about to reassure her master that she would never dream of going anywhere without him, but he silenced her with a kiss, making her melt into his arms. He let his hand slide down her body, brushing over the firm oval of her belly and dipping lower. Her moans were muffled into his mouth as he explored her pussy with his gently probing fingers, finding her soaking wet and more than ready for him. Slipping his index finger into her silken folds, her inner lips welcomed him inside with a delicious snugness. He paused for a second with concern, wondering if he might need to feed her first before they made love; his finger was a fraction of the size of his cock...\n\nHe felt warm hands caress his back. *She can take everything you've got, John,* Jade purred, letting her fingers brush down his spine. *You don't have to be gentle, she just needs to be filled by you... however you want her.*\n\n*I want our first time to be special... hopefully something she'll remember fondly,* he said, trailing kisses down Leylira's throat, then across her chest. \n\nThe Nymph writhed against him, a look of startled delight on her lovely face as he kissed his way around her navel, before he shifted to lie between her parted thighs. \n\n\"Oh, Master!\" she gasped, her sensitive body quivering as he began to explore her silky-smooth labia. \n\nJust like Jade, Leylira was entirely bare, giving John unrestricted access to her slick folds. She tasted of mint too, a flavour he particularly enjoyed, and he attempted to show his appreciation with enthusiastic worship at her feminine altar. Her startled cries at his intimate exploration grew more vocal as he showed her everything he'd learned from his harem of lusty girls and it didn't take him long to draw out a thigh-trembling climax from the panting Nymph. \n\n\"Please Master, claim this one as yours!\" she managed to gasp, her eyes pleading.\n\nHe did his best to ignore the mewling moans of desire from her sisters, who were consumed by a lustful haze, keeping his full attention on Leylira. Repositioning himself over her body, he held his weight off her as he guided the head of his cock into position. She was hot, wet, and craving his length, wriggling her hips as if trying to impale herself.\n\n\"Just relax,\" he said, with a sympathetic smile. \"I'll give you what you need.\"\n\nLeylira bit her lower lip and held still, spreading her thighs as wide as they would go. She let out a low cry of triumph as he pushed forward, steadily impaling her for the first time. John groaned as her tight velvety grip enveloped his shaft and he watched her eyes widen as he penetrated her womb, her mouth falling open in wonder. \n\n\"There you go,\" he murmured, letting his stomach rest against hers and smiling as she wrapped her legs around him. \"Does that feel better?\"\n\nThe tension she was holding seemed to flow out of her and she relaxed, as if all her anxieties had been expunged. \"This one feels complete now, made whole with you here, Master...\" She slipped a hand between them to caress the bulge his girth had made in her tummy. \n\n\"I'm sorry you've had to wait,\" he said remorsefully, pulling back a few inches then sinking home, watching her long eyelashes flutter as she thrilled at the sensation. \"I didn't realise just how much you needed it...\"\n\n\"Everything's wonderful now, Master,\" she purred, letting out a blissful sigh.\n\nHe began to pick up the pace and Leylira's calm demeanour quickly evaporated. Her pupils flared as he drove his thick cock deep into her belly, and she began to meet every thrust with ones of her own. She let out sweet cries of pleasure, her body shaking with her mounting excitement, nails digging into his back every time he ground against her clit. He could tell just how close she was to her release and hammered her clutching pussy, making the tiger-striped girl arch her back as she humped back at him in a frenzy. Leylira let out a strangled scream of ecstasy, her body going rigid as she clamped down on him, her inner folds rippling in enticing waves along his shaft as though urging him to paint her womb with his cum. \n\nJohn was surprised but delighted to see how wildly she responded to him and smiled at her fondly as she thrashed through her climax. \"That's right beautiful, cum hard for me,\" he murmured in her ear as she pulsated around his girth.\n\nThe strength of her orgasm left her reeling and she collapsed back on the bed, with a languid smile on her face. \"Master... that was spectacular...\"\n\n\"We'll be doing that lots more,\" he said, giving her a kiss. Glancing down where they were joined, he smiled regretfully. \"I need to take care of your sisters too...\"\n\n\"Go... pleasure them as you have this one, Master,\" she said, giving him a sultry look.\n\nJohn eased out of her steamy depths, his cock bobbing angrily as if in frustration when he withdrew. \"Who's next?\" he asked, smiling at the panting girls.\n\nThey all darted frantic looks at one another, clearly equally desperate to be with him, but unable to decide between them. He settled it by reaching for the Nymph with large jaguar-like spots marking her verdant skin. \n\n\"Oh, thank you, Master!\" Neysa gasped gratefully, swooning in his arms.\n\nHe eased her down to the bed and began to explore the exotic patterns on her skin, feeling her body immediately warm to his touch. She groaned, writhing with every caress, her expression one of almost painful ecstasy.\n\n*John, don't tease her with foreplay,* Jade requested, her voice filled with concern. *They need you to penetrate them...* She sounded uncertain as she faltered, *I-I think it consummates our connection to you, fully establishing you as their new master.* \n\nHe glanced back and nodded his understanding, then quickly moved into position between Neysa's deliciously-smooth thighs. She was just as soaked as Leylira had been, so sliding inside her glorious body was like plunging into a skin-tight sleeve of liquid honey.\n\n\"Oh, Master!\" Neysa gasped, almost sobbing with relief. \n\n\"You're mine now, lovely little Nymph,\" he said, running his fingers through her lustrous hair.\n\nShe calmed straight away, her expression serene as she gazed up at him. \"Does that feel good for you, Master?\" she asked, a gentle caring smile on her face.\n\n\"Of course, you feel incredible,\" he replied, pulling back and sheathing himself inside her, his quad bumping against her rounded ass.\n\n\"This one wishes to make this as pleasurable for you as possible,\" she murmured, her expression turning thoughtful. With an adorable frown of concentration, he felt her pussy massaging the length of his shaft, like several oil-slicked hands carefully stroking his cock. \"Better?\"\n\nHe couldn't help groaning at the exquisite sensation, which brought a satisfied smile to her face. \"You'll make me cum really quickly like that,\" he said, then laughed when he saw her smile widen. \"You feel amazing, but we'll save that for later. For now, I want to see you cum for me, then it'll be your sisters' turn... okay?\"\n\n\"This one understands, Master,\" she replied, lifting her thighs a little and shifting her hips, so that with each thrust he'd be rubbing against her clit. \n\nJohn began to build up a comfortable rhythm, watching her expression as she reacted to their coupling. Neysa seemed demure and dignified as she gazed up at him, but he could tell by her heavily dilated pupils, flushed skin and heaving chest that she was very aroused. It was startling to see just how deeply the Nymphs needed to be with him for that first time, and he was fascinated to see their personalities emerge once that burning need had been quenched.\n\n*I don't remember you reacting like this,* John said to Jade, feeling her presence beside him and glancing up to see her beautiful face.",
        "Jade gave him a fond smile as she stroked his shoulder. *If I remember correctly, I didn't have time to get antsy... Within an hour of meeting you, I was on my knees with your huge cock throbbing in my throat.*\n\nHe blushed with embarrassment. *I did try to give you your freedom, but you weren't able to understand what I was offering you. I realised you needed a master, so I decided not to fight the inevitable.* He smiled at her self-consciously. *You were very hard to resist, Jade. You know I think you're gorgeous.*\n\n*I remember it all,* she purred with a loving caress. *You're the only man who ever considered my needs and desires, or tried to do what was best for me. I wonder if that's when I knew I'd met my soulmate...* \n\nJohn focused on Neysa, sharing a smile with her as the lovely girl drew closer to her climax. *I don't remember your personality changing once we'd been together, Jade. You were always so adoring and eager to please...*\n\n*I take great pride in my total submission to my powerful Master,* Jade replied, her emerald eyes glinting at the thought. *Although I have a feeling my sisters might have their own unique twist on things...*\n\n\"That's a good girl,\" John said encouragingly to Neysa. \"I want to watch your beautiful face when you come for me...\"\n\nHer mouth opened in a silent cry and the Nymph arched her back, trembling against him as she climaxed. She gripped his cock with pulsating squeezes, while she stayed frozen in ecstasy, her eyes rolling up as she crested that overwhelming surge of pleasure. John stayed still so he could appreciate the look of rapture on her face, feeling a sense of pride at coaxing such a powerful orgasm from her.\n\nShe sagged back on the bed and gave him a shy smile. \"Thank you, Master. You're very kind.\"\n\n\"The first of many,\" he replied, leaning down to give her a tender kiss.\n\nHe slowly pulled out, Neysa giving him a look of contentment before rolling away to make room for the next Nymph. John turned to face the last two girls and could see that Betrixa was practically climbing the walls, her breathing coming in short pants as she stared at him like he was a big juicy steak. He grinned at her and beckoned her over, then the leopard patterned girl practically flew into his arms. \n\nGuiding her down to her back, he manoeuvred himself between her obscenely splayed thighs, wasting no time in giving her what she needed. Betrixa shuddered with every inch, closing her eyes as her lovely features shone with euphoria. John sank all the way inside her, nudging the back of her womb with the blunt head of his cock. That contact drew a low moan from her, prompting Betrixa to slowly open her eyes.\n\nShe giggled, her emerald orbs sparkling with mischief. \"We're going to have so much fun, Master!\" Hooking a leg around his, she pushed at his chest, urging him to roll over. \"Let this one drive!\"\n\nSurprised but amused by her dramatic shift in behaviour, he did as she asked, letting her roll him over onto his back. \"Show me what you've got, honey.\"\n\nBetrixa purred as she rolled her hips, getting him well seated inside her. \"Oh my goodness... you have an enormous cock, Master!\"\n\nHe placed his hands on her hips and ground her against him, the contact on her clit making her moan wantonly. \"And you're deliciously tight and wet... I think we're a good match.\"\n\n\"Uh-huh,\" she crooned, walking her fingers over his chest. \"Mmm, big muscles too... how scrumptious!\"\n\nHe heard Alyssa laugh. *Oh, I like her...*\n\n\"Now, just let Betrixa take good care of you, Master,\" the Nymph said, giving him a flirtatious smile. Leaning forward a little, she began to rise up on his shaft, her pussy fluttering all the way. When only the head was left inside her, she dropped down, plunging him deep into her belly again. \"It's like getting fisted by an Ashanath!\" she marvelled, eyes wide with joy.\n\nHe shook his head in amazement at this surprising girl, not sure how to respond to that.\n\n\"This one is only kidding...\" She winked at him. \"Master's much bigger!\"\n\nNow it was John's turn to laugh, and he reached up to tweak her nipples, making Betrixa giggle. \"I think you're right, we are going to have a lot of fun... but just focus on yourself for now. I still need to take care of Marika; the poor girl had to wait till last.\"\n\nBetrixa shot a concerned glance at the tabby-striped Nymph, her smile wavering for a moment as she looked at her with sympathy. Turning back to John she carefully interlaced her fingers with his, then pushed them back, so they were pinned on the mattress above his head. She stared intently into his eyes, checking for the slightest flicker of disapproval, then grinned when he nodded his consent.\n\n\"Master's in for a treat,\" she murmured, her face only inches from his. \"This one can be very naughty...\"\n\n\"This is just about you tonight,\" he said with a smile, gently squeezing her fingers. \"Show me what a sexy little Nymph you're going to be for me.\"\n\nShe nodded, then began to gyrate against him, biting her lip as she stimulated all her sensitive nerve endings. John watched her in fascination, amazed at the hidden personalities they were revealing. He'd expected the four Nymphs to be slight variants of Jade's lovely nature, but they each seemed radically different. Betrixa rode his cock with consummate skill, her lithe limbs letting her ride him at a frisky pace. It was obvious from the cute look of concentration on her face that she was focused on following his orders, fully intending to make herself climax. \n\nScrewing him with a smooth, accomplished rhythm, John knew that this vixen would bring him to orgasm all too soon, unless she finished quickly. Fortunately, it didn't take much longer and she threw her head back, letting out a feral scream of release as her pussy clamped down on him in a vice-like grip. \n\nBetrixa eventually calmed, then gave him a cheeky grin as her inner muscles unclenched. \"This one is going to love being Master's slavegirl!\"\n\nHe paused and shook his head firmly. \"It's not like that, Betrixa, I promise!\"\n\nHis frown clearly unsettled her, wiping away her smile. \"This one is so sorry, Master! Betrixa never meant to give any offense!\"\n\nJohn sat up when she hurriedly released his hands, then wrapped his arms around her to hold her close. \"We'll talk about this later, but you aren't my slave, honey. Now that I'm your master, it's my job to take care of you and keep you safe... but I'll never make you do anything you don't want to.\"\n\n\"Okay,\" she said quietly, her lovely face a mask of confusion. \n\nHe sighed, then rubbed her back. \"I'm very happy with you, Betrixa, you did nothing wrong.\"\n\nThe Nymph smiled with relief, then leaned forward to rub noses with him. \"Riding you was super fun! Thank you, Master!\"\n\n\"You're welcome,\" he replied, returning her smile and helping her dismount. \n\nHe opened his arms for Marika and the tabby-striped girl rushed to him, longing for his touch. Knowing what she needed, he shifted position to cover her as she fell back on the bed, embedding himself up to the quad seconds later. As his cock slid deep inside her, Marika held her breath, goosebumps covering her whole body. John watched her face and couldn't help feeling like a child at Christmas, filled with anticipation as he waited to see what Marika was really like.\n\nHer eyes softened and she gave him an enchanting smile, her arms curling around his biceps and her velvety thighs moving slowly against his flanks. \"Please make love to this one, Master,\" she whispered, pulling him down for a kiss as she undulated beneath him.\n\nAfter Betrixa's larger-than-life personality, Marika's gentle tenderness came as a surprise, but a very pleasant one. Her flushed lips moved against his with a wonderful sensuality that made him feel like she was enveloping him in her love. Responding to her touch, he stroked into her at the same languid pace she had set, hearing her purr deep in her throat as she nodded her approval.\n\n\"Such a skilled lover,\" she murmured in his ear. \"So handsome, so virile... this one is so lucky to have been claimed by you...\"\n\n\"Is this what you like?\" he asked, gazing into her eyes. \"Slow and gentle?\"\n\nShe hesitated, a hopeful look in her eyes. \"Is that okay, Master?\"\n\n\"Of course it is, honey,\" he replied, cradling her in his arms. \"I always want you to enjoy whatever we do together.\"\n\nMarika seemed to melt into his embrace, then nuzzled into him, planting fluttering kisses on his neck. He felt like he'd been reunited with a long-lost lover, she was so tender with him, and he was astonished at how strongly he wanted to reciprocate those feelings despite barely knowing the girl. \n\n*They're very good...* Alyssa marvelled, the surprise quite clear in her voice.\n\n*So subtle...* Edraele agreed, sounding equally as astounded.\n\nWhen he glanced at Jade, he saw a strange expression on her face, one that he'd never seen before. *Are you alright? What's the matter?*\n\n*Love her, John, I'll tell you later,* she replied, giving him a wistful smile, before leaning in to kiss him.\n\nHe studied her for a moment, but it was clear she wasn't going to reveal more. Turning back to look at Marika again, he gave her a smile of apology. \"Sorry, beautiful. I should be giving you my undivided attention.\"\n\nThe tabby-striped girl flicked an affectionate glance at Jade, before shaking her head as she met John's look of concern. \"Master has nothing to apologise for.\" She traced a finger along his jawline and gave him a knowing smile. \"You love her; it's beautiful to see.\"\n\nThey kissed again and John was amazed at the way Marika seemed to open her heart to him, knowing he could easily fall for a girl so guileless in her desires. He wanted to protect these gentle Nymphs and try to ensure that they'd never be hurt or abused again, the thought of them suffering through years of torment at the hands of sadistic masters filling him with profound sadness. John dearly hoped that when these four lovely girls regained their lost memories, they wouldn't be as traumatic as the horrors Jade had been forced to endure.\n\nMarika's breathing quickened, tickling his neck between kisses as she murmured more loving endearments in his ear. He could feel that she was getting close and watched her face light up as she let out a breathy moan, her snug grip on his shaft turning to a fluttering ripple as she climaxed. The look of elation she gave him was tremendously satisfying and they shared a final kiss as she relaxed, her beaming smile reflecting her contentment.\n\nAfter carefully pulling out of Marika, he turned to Jade. \"Are you ready, honey?\"\n\nShe nodded, showing no trace of her previously-troubled thoughts, reassuring him with a glorious smile. \"I am.\" \n\nHe sat with his back against the headboard and looked at the four satiated Nymphs who lounged around him on the bed. Their feline eyes watched him without the previous intensity, but that smouldering heat had been replaced by genuine affection, which was alluring in its own way. John expected Jade to straddle him, but she paused to give him a naughty smile, then bent low to examine his glistening cock. She parted her lips and took her time sliding down his length, her long tongue coiling around him, cleaning him thoroughly as she lapped his shaft. \n\nShe unsheathed him from her throat, a coy smile teasing her lips when she sat up again. \"They taste delicious...\"\n\n\"I've always loved mint,\" he said with a grin, reaching for the playful girl and pulling her onto his lap.\n\nThere was something unreadable in her expression as she relaxed in his arms. \"I know.\" \n\n\"What is it, Jade? Something's obviously bothering you,\" he said, really starting to worry.\n\nShe placed a light kiss on his lips. \"Let's feed them now... then we'll talk, I promise.\"\n\nJohn glanced at Alyssa and she shook her head. *She's right, you need to hurry to keep to our schedule. We'll tell you all about it afterwards, but now's not the time.* \n\nRealising he wasn't going to get any answers, he held Jade's waist and carefully repositioned her over his cock. The Nymph slid down him like she had so many times before, but this time, her emerald eyes seemed to be studying every square inch of his face. It was almost as if she was searching for something... looking at him in a way she never had before. John was stroking her back as he watched her and was about to ask again what had so unsettled the girl, when he felt a rippling under her soft skin. He pulled his hands away as four green tentacles emerged from her back, curving through the air to approach each of the kneeling Nymphs. \n\n\"I need your help, sisters,\" Jade said softly, glancing at them over her shoulder. \n\nThe ends of the tentacles shimmered and reformed into exact replicas of John's cock, then slowly weaved towards four sets of dark-green lips. Rather than being shocked or afraid, the Nymphs leaned forward with no hesitation and opened their mouths. John felt the exquisite sensation of a pair of lips enveloping the head of his cock, but repeated four times as Jade mimicked the gentle pressure of their mouths on her phallic appendages. She pushed her tentacocks into four willing throats and John could only groan in response, feeling each blessed inch as their touch was faithfully reproduced by Jade's remarkable body. \n\n\"They're such lovely girls,\" Jade whispered, gazing deeply into his eyes. \"Thank you...\" She looked down for a moment, a flicker of emotions crossing her face before she lifted her head to meet his curious gaze. \"...for reuniting me with them.\"\n\nHe ran his fingers through her long hair, trying to focus on Jade while distracted by the incredible sensations he was feeling at that moment. The four Nymphs had started putting their all into the blowjobs, the gentle wet sucking sensation multiplied fourfold into an irresistible pressure to unload his quad. With their unnatural ability to manipulate their bodies to enhance his pleasure, John felt like he had hundreds of tongues lapping away at him, all urging him to reward them for their efforts.\n\nTaking a deep breath, he did his best to hold on, knowing the inevitable was soon approaching. *Your sisters are amazing...* \n\n*They'll be with us forever...* Jade murmured, her voice fluttering through his mind. *Mothers to a whole new generation of Nymphs...*\n\nHe groaned as she rocked on his lap, adding a thrilling extra dimension to the whirlwind of pleasure overloading his senses. *I-If that's what they w-want...* he struggled to reply, bucking back at her.\n\nShe kissed him passionately, her tongue flicking deep into his mouth. *You know they'll want that as much as I do! And I need it, John, with every fibre of my being! I want your beautiful babies growing in my womb!*\n\nThat thought had John crying out as he came, blasting deep into Jade's gorgeous body. Her pussy wrapped around him in a snug inescapable grip, then she began to milk him, drawing out huge spurts of cum as she set about thoroughly emptying his balls. The Nymphs were each rewarded with a thick jet of cum, Jade's tentacles throbbing in their throats. \n\nWearing almost identical looks of glee, the four Nymphs suckled eagerly as John's load was pumped into their stomachs. Split between the four of them, it was only enough to slightly round their midriffs, but as they began to absorb his cum, circles of light began to pulse out from their bellies. Lost in the throes of his orgasm, John was unaware of the spectacular lightshow, and just clung to Jade as he thrust reflexively inside her. \n\nWhen she'd got every last drop, he slumped backwards with a disbelieving laugh. \"I love Nymphs,\" he said, grinning at Jade. \"But five of you are going to kill me!\"\n\nJade wasn't really listening though. Her eyes were wide in amazement and she seemed to be staring at something only she could see. \"My sisters!\"\n\nAlyssa gasped, then sounded giddy as she exclaimed, \"Four Nymphs at once... God damn, what a rush!\"\n\nBefore he could ask either of them to explain, he heard the sound of sobbing from behind Jade and quickly looked over his shoulder. She had started to withdraw her tentacles, pulling them from her fellow Nymphs' flushed lips and snaking them back into her body. It was Marika who was crying, fat tears rolling down her cheeks as her hands went to her glowing stomach. Her sisters just looked stunned, gaping at each other in utter disbelief, before all turning to stare wide-eyed at John.\n\n\"Jade, let me up,\" John requested, slapping her lightly on the rump to rouse her from her bewildered stupor. \"Marika's upset.\"\n\nThe Nymph gracefully dismounted him and rolled aside, shaking her head as she murmured, \"No, she's overjoyed...\"\n\nJohn went to the tabby-striped girl, enveloping her in a comforting embrace. \"Are you okay, Marika?\"\n\nShe looked up at him but was unable to speak she was so overcome with emotion. With a low cry, she clung to him as though never wanting to let him go, hot tears splashing onto his shoulder, Marika trembling as she wept.\n\n\"Is it really true, Master?\" Neysa whispered, gaping at him in awe. \"Can this one really have babies with you?\"\n\nFeeling a surge of relief, he gave her a broad smile. \"Yes, we can... as long as you wan-\"\n\nHe wasn't able to finish his sentence as Marika showered him in kisses, her three sisters wasting no time joining her in surrounding him in a four-way hug. Glancing around at each of them, he saw matching looks of devotion in their emerald eyes and knew that Jade was right... there was no way that any of them would ever willingly choose to leave him. He was determined to eventually give them the choice though, as soon as they'd developed the free will to be capable of making that decision.\n\nNeysa pulled back a little and ran both hands over her glowing tummy. \"Master, this feels so good...\" Watching the vibrant lines pulse along her arms in awe she whispered, \"What are you doing to this one?\"\n\n\"He's making you stronger, little kittens,\" Jade said, her voice warm and gentle. \"You must be feeling tired... I know I always like a nap after getting a tummy full of John's cum.\"\n\nBetrixa let out a cute yawn, then giggled, nodding at her fellow Nymph. \"Yeah, that sounds like an amazing idea!\"\n\nGiving him final kisses goodbye, Leylira, Betrixa, and Neysa peeled away from John, then curled up together on the bed. \n\nMarika's eyelids were growing heavy but she gave John a wistful smile. \"When would you like this one to have your baby, Master?\"\n\n\"Get some sleep, beautiful, we'll talk about it later,\" he replied, stroking her back and releasing her from his embrace.\n\nShe nodded, then joined her sisters, Neysa beckoning her over to cuddle with her. In less than a minute, all four girls were fast asleep in each other's arms, the viridian waves pulsing across their bodies creating chaotic patterns across the ceiling.\n\n\"They didn't go into the trance,\" John remarked, watching the vivid kaleidoscope of light in fascination before focusing on the four girls once more.\n\nJade frowned for a moment, then slowly shook her head. \"I don't think I did either. That first time I wasn't sleepy until you told me to get some rest.\"\n\n\"It must have been the original bond!\" Alyssa exclaimed, looking surprised. \n\nJade turned to smile at John. \"The compulsion to obey you...\" \n\nAlyssa tilted her head to one side as if listening, then the light of understanding appeared in her cerulean eyes. \"Ah... that makes sense. Rachel reckons that Nymphs must already be accustomed to mental contact with a Progenitor; they were all originally owned by Mael'nerak.\"\n\nJohn stretched then glanced at the bathroom. \"I need a shower... and I think now's a good time for you two to explain what I missed back there.\"\n\nHe noticed the brief eye-contact they made with one another and knew they were reluctant to tell him something.",
        "Alyssa slid off the bed and held out her hand for him. \"Come on, we'll fill you in.\"\n\nJohn followed her into the bathroom with Jade beside him, then stood with his arms around them both as the hot water cascaded down. His muscles were tired after having sex with five girls without a break, so Jade and Alyssa began to wash him, massaging away his aches and pains.\n\nJade spoke up first, her eyes focusing on his shoulders as her dark-green hands caressed the contours of his body. \"After we fed them, I saw my sisters in my mind, each one appearing as a beautiful portrait. Their images were like mosaics made up of tiny stones, the Nymphs kneeling beside you and looking at you in wonder.\"\n\n\"I saw the exact same thing when we recruited Jade,\" Alyssa said softly, smiling at her friend. \"It looks like you've joined the exclusive club of John's matriarchs, congratulations!\"\n\n*It's already been a delight listening to your thoughts, Jade,* Edraele greeted the Nymph, her tone warm and welcoming. *I'm glad John decided to make it official.*\n\n*Thank you both so much!* Jade turned back to face John and slowly shook her head, an almost incredulous look in her eyes. \"Me, a matriarch, I never would have believed it... I still can't believe it's true.\"\n\nJohn smiled at her, pleased that they'd discussed this possibility beforehand. \"As I said before, I think you'll be perfect for this. You're kind and caring, and you've already experienced everything the Nymphs have in store for them.\" He cupped her head in his left hand and rubbed his thumb across her temple. \"You knew that Marika was happy... I take it you can feel their emotions?\"\n\nShe nodded, her smile widening. \"After having sex with their new master for the first time, then finding out that you can get them pregnant, it's probably not surprising that they're all ecstatic.\"\n\n\"They've suffered enough in the past,\" he said, his tone filled with sympathy. \"Let's try and keep them feeling that happy.\"\n\n\"I'll do my best,\" Jade said earnestly, receiving a kiss from John as a reward. \n\nHe glanced at Alyssa next. \"You mentioned something about a rush when the Nymphs joined... was that like the power surge that Edraele experienced after I was with the Young Matriarchs?\"\n\n\"Yeah, exactly,\" she replied, putting an arm around Jade and hugging her. \"They're powerful psychics, John. The extra bandwidth from them joining us will make a huge difference, especially if they grow as strong as Jade.\"\n\n\"Wait a second,\" John said, looking at her in confusion. \"Why did you feel that and not Jade?\"\n\nAlyssa frowned as she thought about it, her eyes glazing over. \"I can still see Jade in my mind, so I'm still connected to her. Maybe I'm in charge of energy management for the Nymphs, but I just draw it all through Jade?\"\n\nHe closed his eyes then focused on the images of all the girls connected to him in his mind. There were now three portraits directly connected to him: Edraele with all her Maliri, Alyssa with all the girls on the Invictus, and Jade who was linked to her four sisters. The connecting lines from Jade were dazzling in their intensity, but that energy was all diverted via Alyssa rather than coming straight to him.\n\n\"Looks that way,\" he confirmed a few seconds later. \n\n\"I guess it doesn't really matter,\" Alyssa said with a shrug. \"I've been handling energy management for most of the girls for months, I can easily handle loads more.\" Her playful wink made it quite clear what she was hoping for.\n\nHe chuckled and did his best to stop himself from rolling his eyes at her, but the blonde's smirk let him know she'd heard his every thought. \n\nJohn's expression turned serious again, and he cupped Alyssa's head in his right hand, looking into her eyes before turning to do the same with Jade. \"Alright, so we've discussed the interesting but harmless stuff. What's really bothering you two... three, I should say, because I know Edraele knows about it too.\"\n\n*I do,* she confirmed a moment later. Alyssa and Jade were both tense, looking at him with big eyes and clearly reluctant to reveal more. Edraele realised it was up to her, so she continued in a soft voice, *All three of us felt it... when you entered the Nymphs for the first time.*\n\n*You could feel me having sex with them?* he asked in confusion.\n\n*No, John. We felt them make contact with your mind... and you letting them in. They were looking for guidance,* she explained carefully. *It was extremely subtle; I can see why Alyssa missed it with Jade that first time around, but we're all much stronger now.*\n\n*Guidance...* John repeated, at a loss as to why the girls were being so cagey with him. *But I already showed them the form I wanted them to take, so that they could be my 'perfect woman'.*\n\n*Their physical appearance, yes,* Edraele said, her voice sympathetic. *But they wanted to know what personality you'd chosen for them too.*\n\nHis mouth fell open in shock, then he blurted out loud, \"So I just picked a bunch of different personalities for them and that's it... that's who they are now?!\"\n\n\"We wouldn't be your idea of a perfect woman if you didn't actually like us,\" Jade said with a sad smile.\n\nHis gaze snapped to the Nymph, his expression of disbelief turning to horror. \"Oh, Jade... not you too...\"\n\n\"Confident, fun, warm, friendly, caring, bisexual, submissive, not jealous, honest, open, compliant, appreciative, and eager to please. Do you remember? You told us what you liked months ago... and that's me,\" she whispered, a conflicted look in her eyes. \n\n\"I shaped your entire personality...\" he whispered, unable to believe what he was hearing, but instinctively knowing it was true.\n\n\"Is anything really me, John?\" she murmured, resting her head against his chest. \"I was so proud that I'd grown beyond my limitations... but was any of that true?\"\n\nHe rubbed his hand over his face, trying to gather his shattered thoughts. \"Yes!\" he suddenly gasped, desperate to find something to give her hope. \"The shapeshifting... the way you protected Calara on Gravitus and the way you've protected all the girls since then! I had no idea you could do any of that; I didn't even want you anywhere near combat, but you stepped up every time we needed you!\"\n\nJade brightened, a cautious smile on her face. \"That's true... I'll never let anyone hurt your mates if I can help prevent it. Growing those claws on Gravitus, then shapeshifting into a tiger to fight the Drakkar... I did all that purely by instinct.\"\n\n\"And you're obsessed with me getting every girl we meet pregnant!\" he exclaimed, on a roll now. \"That's not coming from me. I've been trying to cut down on the numbers, so I can be a good father to all my children.\"\n\nShe grinned, a sparkle in her emerald eyes. \"I can't help it... the thought of hundreds of Maliri with swelling tummies gets me so excited!\"\n\n\"Me too,\" Alyssa said, with a lascivious smile.\n\n*Four down, a billion more to go,* Edraele agreed, a note of satisfaction in her voice.\n\n\"You're all as bad as each other,\" John said with amusement, feeling a surge of relief as the mood lightened. He paused for a moment, lost in his thoughts, then gave Jade a gentle squeeze. \"I know you expected me to freak out when you told me this and it has come as a shock... but I'm not sorry it happened.\"\n\nJade studied him with a questioning look in her eyes but stayed silent.\n\n\"You're perfect, honey,\" he said, stroking her back. \"The Jade I know is a lovely, sweet girl, and I fell head over heels in love with her. I won't ever apologise for that, I can't imagine life without you.\"\n\nAlyssa turned to smile at the Nymph and kissed her on the cheek. \"He's right, you're an absolute sweetheart. We all love you.\"\n\nJade hugged them both and let out a happy sigh. \"I love you both too.\" She blushed and traced a finger along John's jawline, \"Thank you for the choices you made when we met; I like being me...\"\n\n\"It really was my pleasure,\" he replied, catching her hand and kissing her fingers. He hesitated for a moment, a thought springing unbidden into his mind. \"So how come your four sisters all have such different natures? If I created their personalities for them, shouldn't they all just be the same as you?\"\n\n\"Perhaps you've diversified a bit; you're not the same guy you were six months ago,\" Alyssa suggested, looking thoughtful. \"From what we've seen of the Nymphs so far, they seem like lovely girls. It'll be fun getting to know them better.\" \n\nJohn blew out his breath and smiled. \"So was that everything? No more shocks you ladies want to spring on me?\"\n\n\"That's all for now,\" Alyssa replied with a playful smile. Her expression turned serious as she continued, \"We actually timed that perfectly. Getting all that extra psychic energy from the Nymphs couldn't have worked out any better.\"\n\n\"Do you feel ready?\" he asked, studying her with concern.\n\nShe nodded, a look of confidence and determination in her cerulean eyes. \"Athena and I have worked out a plan. I'm going to go for it as soon as we're done in the shower... it's time to create my own pocket plane.\"\n\n***\n\nCalara let out a groan of despair and placed her head in her hands. \"This is impossible! How can anyone be expected to make decisions this complicated?!\"\n\nMaria stroked her daughter's back and gave her a fond smile. \"Callie... you just saved Terra from a Kintark armada, I'm sure you're quite capable of choosing bridesmaid dresses.\" She turned to look at the holo-catalogue floating in front of the sofa, hundreds of exquisite outfits on display in a bewildering array of pastel colours. \"These might be expensive but they're all beautiful...\"\n\nThe distressed bride shook her head, a wild look in her eyes. \"You've seen how many different coloured skin complexions my bridesmaids have! This would be hard enough with all the Terran girls, but green is out because of Jade, they can't wear blue because of the Maliri, Teal would wash out Helene and any shade of purple would look terrible on Faye!\" She shuddered and added, \"Don't even get me started on colours clashing with their hair!\"\n\nSakura was sitting on the other side of Maria and leaned forward to look at her friend. \"I thought the tradition was to make the bridesmaids look as terrible as possible so they don't outshine the bride? You can stick me in anything you like... it's your big day.\"\n\nCalara smiled at her and shook her head. \"I could never do that to you.\"\n\nMaria put her arm around Sakura and said with a hint of wry amusement, \"Actually, I don't think that tradition applies when the groom is already sleeping with all the bridesmaids. I'm sure John will want you all to look stunning.\"\n\nThe Asian girl blushed then gave her a shy smile. \"I can't believe how understanding you are about all of us and John.\"\n\n\"If I was single and twenty years younger, I'd be doing whatever it took to convince Alyssa to let me join the Lionesses...\" Maria said with a wistful smile.\n\n*How intriguing,* Alyssa purred to her girlfriend. *Perhaps you could ask Maria exactly what she has in mind? Then I could let her know how successful she'd be... *\n\nCalara groaned. \"Mom! She heard that!\"\n\nMaria's eyes twinkled with mischief. \"I know she did, dear. It's not just you and Jack that like blue-eyed blondes...\"\n\nCalara shook her head and laughed as she got up. \"I'll go and make us another drink while Alyssa has fun tormenting me. Would you like a tea or coffee?\"\n\n\"Tea please,\" her mother requested, with a grateful smile. \n\nSakura shook her head. \"No, I'm fine thanks.\"\n\nWhen Calara had left the lounge, Maria turned her full attention to her guest. \"Sakura, may I ask you a personal question?\"\n\n\"Of course.\"\n\n\"I've seen you with John and I know how much you love him... all of you do. So why is everyone taking a back-seat at this wedding for Calara?\" she asked with concern. \"I adore my daughter, but this wedding seems incredibly unfair...\" \n\n\"Please don't think this was Calara's idea,\" Sakura quickly replied, her eyes darting towards the door, then back to Maria. \"She adamantly rejected the plan at first, until we convinced her that her being his official wife was for the best.\"\n\n\"But why?\" Maria asked, brushing her fingers through the young woman's silky black hair. \"You're such a lovely girl, Sakura. You deserve to be the centre of attention on your own big day.\"\n\nSakura looked away, unable to meet the older woman's sympathetic gaze. \"Weddings are all about family. I would have loved a big wedding once... but that time is long gone.\" She swallowed around the lump in her throat. \"It's like that for all of us except Calara, so we just want to be there for her and make her feel special. Please don't say anything to her about it, she feels guilty enough as it is.\" \n\nMaria wrapped Sakura up in a loving embrace. \"I hope my daughter knows just how lucky she is to have friends like you,\" she said in a voice husky with emotion. \"Your parents would have been so proud of you.\"\n\nThe Asian girl began to cry into her shoulder, nodding as she said, \"They were... John brought them back to say goodbye.\"\n\nThe older Latina looked down at her in astonishment, but stayed quiet, stroking Sakura's back to comfort her instead. They stayed that way until Calara returned, placing two steaming mugs on the coffee table in front of the sofa.\n\n\"Alyssa's going to be starting soon,\" she said quietly, sitting beside her mother and cuddling into her. \n\nSakura nodded her understanding and pulled away from the older Latina, giving her a grateful smile. \"Thank you, I needed that.\"\n\nMaria gave her a warm smile. \"Any time, angel. Now, why don't you lie down here and have a rest.\" She patted her thigh to make her invitation quite clear that Sakura should use it as a pillow. \"From what you were telling me, you're both going to be worn out after Alyssa has finished.\"\n\nThe Asian girl lay down on the sofa and rested her head on Maria's lap, recalling cherished evenings lying like this with her own mother as they watched holo-movies as a family. She suddenly froze, staring up at the older Latina in shock. \"I thought it was just a coincidence you calling me angel! Alyssa must have told you that was my mother's pet name for me!\"\n\nMaria nodded and gave her a look filled with sympathy. \"She called while you were on your way to Jericho and told me all about your mother. Emiko sounds like she was a lovely woman, I wish I could have met her,\" she said with a wistful sigh, then met Sakura's shocked stare with concern. \"I hope I haven't behaved inappropriately. I meant no disrespect to Emiko, I just wanted to help you relive some loving memories.\"\n\nSakura's gaze softened and she shook her head. \"I wasn't offended, just surprised. It was a lovely thought.\"\n\nMaria ran her fingers through Sakura's raven tresses then began to gently stroke her head, watching the young woman close her eyes and relax.\n\nLetting herself be transported back 75 years to happy times on New Eden, Sakura whispered, \"Thanks, Mom, that feels nice.\"\n\nCalara let the tears roll down her cheeks as she watched Sakura's breathing deepen, her friend lulled into sleep by her mother's loving caress. She finally brushed her tears away and kissed Maria on the cheek. \"I love you so much, Mom. I'm so lucky to have you.\"\n\nMaria wiped away her own tears and nodded, hugging her daughter close. \"I feel the same way, Callie.\" She glanced down at Sakura slumbering peacefully on her lap. \"These poor girls... the things they've been through...\"\n\nCalara was about to reply, but she let out a sharp gasp instead, echoed an instant later by Sakura. Alyssa had thrown their connection wide open, tapping them both for huge amounts of psychic power.\n\n***\n\nJohn watched Alyssa with concern, his blonde Matriarch sitting cross-legged in the middle of the Observatory. She had her eyes closed and was surrounded by a brilliant nimbus of dazzling white energy, the radiance so bright that it was difficult to look directly at her. The rest of the Invictus crew were gathered around her in a circle, Dana, Rachel, Jade, and the twins immersed in some kind of trance.\n\n\"Are they all okay?\" Faye asked, bouncing nervously on her toes.\n\n\"I hope so, Faye,\" he replied, forcing himself to relax his clenched grip on the hilt of his sword. Glancing at Helene, Jehanna, and Lynette he frowned and shook his head. \"I still think it's a bad idea you three being here. If something goes wrong, I don't want any of you getting hurt.\"\n\nLynette didn't back down from his stern gaze, looking back at him defiantly through the clear-crystal of her Paragon helmet. \"If you have to start fighting, you'll need us here to pull the girls to safety. We've been over this already.\"\n\nJehanna nodded, her expression grim. \"We saw the Raptor footage of the portal monster that attacked you on New Eden. You can't fight something like that and protect everyone at the same time.\"\n\n\"We care about the girls, we don't want them to get hurt,\" Helene said with conviction, placing her armoured gauntlet on his shoulder. \n\n\"Okay, point taken,\" he said, forcing himself to smile, before looking at Alyssa again. *Edraele, have you heard anything yet? Has Alyssa said anything to you?*\n\n*No, John, nothing so far. You know that she would speak to you first anyway,* she replied quietly. *I just wish I was able to transfer my energy to her... I feel so helpless not being to assist in any way.*\n\n*I know, this is torture,* he grumbled, knowing exactly how she was feeling. *I need to keep myself distracted or I'll tie myself up in knots... Can you tell me how the fleet refits at Genthalas are going?*\n\n*As you already know, the second House Valaden fleet departed several days ago on its way to the Ashanath Collective. They will rendezvous tomorrow with the cruisers we diverted from the first fleet, then they should arrive at Ashana in five days' time,* Edraele replied, with a note of satisfaction. *The first House Loraleth fleet has also been completed, but I'm holding it at Genthalas until we've installed the new Brimorian shield generators.*\n\n*How soon until you can build the upgraded versions?* John asked, keeping a close eye on Alyssa.\n\n*We've been busy modifying our existing shield generator manufacturing facilities so that they can produce the new upgraded variants. The first batch off the production line will be for cruiser-class vessels and will be completed later tonight. Production should ramp up quickly, so the first House Loraleth fleet will be fully upgraded in two days' time. Modifying our heat sink fabrication from the first set of Kintark blueprints to their more advanced one was actually a relatively simple process, so we've already started installing those.*\n\n*It sounds like you're making great progress,* John said, pleased to hear how well the refit was proceeding. *Dana actually modified those heat sinks with Crystal Alyssium; perhaps your researchers could try something similar with Maliri crystals?*\n\n*Yes, she's quite the marvel,* Edraele said, the admiration quite clear in her voice. *After I suggested following her approach, my materials scientists were able to make a quick substitution with existing Maliri tech. Our expertise with crystals meant that we were able to see substantial improvements over the Kintark original.*\n\n*Excellent work, well done,* John said, suitably impressed. \n\n*Thank you, My Lord,* she said playfully. *Makaela has also been bringing more of the station online, including 26 new drydock bays. The second House Loraleth fleet should complete its refit in four days, with the first of House Aeberos' and House Naestina's fleets completed three days after that. Our current forecasts predict that we should complete the full upgrade of all House vessels within 23 days.*\n\n*That's incredible! I can't believe how quickly you've been able to turn those fleets around!* John exclaimed, feeling a huge sense of relief. *Charles would never believe me if I told him that every warship in the Maliri Protectorate has been fully upgraded in just over a month!*",
        "*Bringing so much of Genthalas back into service has made a huge difference, as has the scale of the recruitment programs for starship engineers,* Edraele replied modestly. *At the rate you've been supplying new schematics, being able to execute rapid refits will be critically important to keep the Maliri fleets up to parity with Thrall vessels.*\n\n*Not just up to parity...* John said quietly. *I've seen the kind of difference a tech advantage makes; we have to aim for just that kind of edge over the Progenitor's forces.*\n\nHe could sense his Maliri Matriarch's earnest agreement. *I'll do whatever I can to speed up our manufacturing processes. I'm hoping Dana might be able to suggest some improvements...*\n\nJohn turned to look at his Chief Engineer, the redhead sitting opposite Alyssa with a serene expression on her beautiful face. *I can't help feeling guilty for relying on her so heavily. She must be under tremendous pressure to meet the sky-high expectations we have for her.* \n\n*You haven't got any choice, John. Dana's the key to unlocking all the technology we need; you've made her the window into the Progenitor legacy encoded in your DNA,* Edraele said, her voice sombre. \n\n*Yeah, I know, but I wish there was some other way.* He sighed and glanced at Alyssa again. Squinting against the glare, he noted that her expression had shifted into one of intense concentration. \n\n*I believe my daughter might be on the cusp of discovering some new technology. Irillith's been making impressive progress on decoding the Vulkat tech archives. From what we know of their ships, at the very least we should anticipate some innovative improvements in-* Edraele's voice trailed off in a shocked gasp, her astonishment radiating over his empathic connection with her.\n\n*What is it Edraele?* he asked in alarm. *Are you alright?!*\n\nHis calls were met by ominous silence. \n\nFor a man grown used to having three talkative women chattering away in his mind, her lack of response filled him with a dark sense of foreboding. Alyssa's face was showing the strain now, her brow furrowed as she fought some kind of tense internal struggle. \n\n\"I think something's wrong,\" John said, darting a worried glance at his four companions. \"I just lost contact with Edraele!\"\n\n\"Is there anything you can do to help them?\" Faye asked, her big expressive eyes looking to him for answers.\n\nHe hesitated, his gaze returning to Alyssa. When he saw a flicker of pain in her taut expression, his heart ached with a terrible feeling of helplessness. \"Without Alyssa or Edraele giving me support, I'll never be able to get into the Astral Plane... the drag effect from my imprisoned Progenitor side is much too strong. Even if I could start a spirit walk, I'd be yanked back into my body in seconds and it would leave me completely drained of psychic energy.\"\n\n\"So we just wait?\" Jehanna asked, looking worried.\n\n\"I don't think I have any choice,\" John was forced to admit. \"The plan was for Alyssa to build her pocket plane, then for all the girls to sleep and recover their energy. I was going to feed them all late at night, probably about 2am, then go to bed and trigger the nightmare. The girls would be full of energy and ready for combat, then we were going to fight off the Astral monsters until Alyssa-\"\n\nHe didn't get to finish as Alyssa interrupted him with a wordless cry of anguish, then pitched over, clutching at her head. Around her, the five girls collapsed like puppets with their strings cut. John leapt over to the blonde, tearing off a gauntlet so he could feel for a pulse. \"Check the others!\" he yelled in alarm.\n\nThe thunderous pounding of his heart settled down to a raucous thump as he felt the fluttering pulse in Alyssa's throat. \"She's alive...\"\n\n\"Irillith's okay!\" Jehanna called out a second later, sounding greatly relieved. \n\nLynette was next to respond. \"Tashana too, but her heartbeat is very faint!\"\n\n\"Dana's pulse is weak, so is Rachel's,\" Faye said, her normally chipper voice on the edge of panic.\n\nHelene gasped in horror. \"Jade has no pulse!\"\n\n\"She doesn't have one,\" John said, holding his hand up to the aquatic girl in a calming gesture. \"Let me check...\" He quickly closed his eyes, checking the network of connections in his mind. To his eternal relief he saw that the Nymph was still present, nested under him as a matriarch. However, he didn't have an active connection with her, so was unable to tell if she was hurt. \"She's still alive... I don't know any more than that.\"\n\nThe Fleet Admiral pulled off her Paragon helmet and sat next to the unconscious Maliri girl, studying her with concern. \"Do you want me to call for medical assistance? I can get a team of doctors here in two minutes...\"\n\nJohn was busy checking Edraele and her girls, then let out a long sigh of relief when he found they were all still alive and connected to his Maliri Matriarch. He sat down on the bed and carefully brushed Alyssa's mop of golden hair away from her face. \"Thanks, but they won't be able to help. I think Alyssa tapped out all the girls... there's nothing medics can do to treat psychic exhaustion.\"\n\nHelene glanced over at him, sky-blue eyes tense with worry. \"John... what are you going to do if they don't wake up tonight? Will you face the bad dreams alone?\"\n\nHe met her anxious gaze, then looked at the three equally worried faces looking his way. Slowly nodding, he said quietly, \"I might have to...\"\n\n***\n\n\"That's it... they've stopped glowing!\" Faye called out from beside the bed, her luminous eyes fixed on the four Nymphs.\n\n\"Good. If they've absorbed all my cum, they won't be pulled in with me,\" John said, his expression grim as he sat cross-legged on the bedroom floor. He glanced at the ship's chronometer, watching time roll inexorably onwards as the display changed to 2:00. \"Are the girls stirring?\"\n\n\"No change,\" Lynette said quietly, checking each of the sleeping women on the bed. \"Pulse is there, but still weak...\"\n\n\"I don't like this, John,\" Jehanna said, her pretty face shadowed with worry as she squatted down next to him. \"From everything I've heard about the nightmares, you barely survived the last few times... and that was with ALL the girls with you.\"\n\n\"I've been relying on them too much, I see that now...\" John said, his voice distant but with an undercurrent of steely determination.\n\nHelene knelt at his side and placed a hand on his shoulder. \"Faye told me that you get your power from us... that you're stronger when you fill us before battle. Let me help you... I'm not afraid.\"\n\nJohn shook his head. \"You're a brave girl, but I can't let you do that. I'm not going to risk dragging you in there with me.\" He smiled at her and added, \"But I will take a kiss for good luck...\"\n\nShe tried to return his smile, but he could see that it was strained. Helene crossed her wrists behind his neck then leaned in to give him a tender kiss. \"Please don't leave me...\" she said softly when she pulled back. \"I've only just found you... I don't want to be alone again.\"\n\n\"You'll never be alone, the girls are your sisters now,\" John said, giving her a supportive smile.\n\n\"It's not the same,\" Helene whispered back, on the edge of tears.\n\n\"My turn,\" Jehanna said, dropping to her knees beside him. Helene moved aside, then Jehanna's dark-red lips were pressing against his with a frantic urgency edged with fear. \"You can't make me fall in love with you then not come back to me...\" she whispered, her brown eyes desperately staring into his. \"I can't survive that.\"\n\n\"Everything will be okay, I'll just be gone a little while,\" he said to them both, his voice filled with a confidence that he didn't feel. He glanced at the other two and saw they were both watching him, Lynette looking deeply conflicted, while Faye's cute elfin face showed how distraught she was. \"I want that first kiss tomorrow, Faye,\" he said with an encouraging smile. \"Nothing's going to stop me coming back for that.\"\n\nShe wrung her hands and nodded, but he could see she wasn't convinced by his bravado.\n\nHe Inhaled deeply, then stifled a yawn and closed his eyes. Centring himself and finding his focus came easily that night. Despite his uncertainty at venturing alone into the Astral Plane, he was convinced that what he planned to do now was the right course of action. His breathing slowed and his senses sharpened as he prepared himself, a host of new sounds and smells coming to his attention... the rapid beating of Jehanna's heart, Helene's alluring scent, and the barely audible song that Faye was singing under her breath to give herself courage. \n\nBlocking out all thoughts of the women in the bedroom, he concentrated his heightened awareness inwards.\n\n*It's just me and you now...* he thought to himself, feeling that lingering black presence in his mind. It was an ugly thing, malignant and cruel, with waves of hate pouring from the mental prison he'd constructed to bind his Progenitor guide. *You know what I'm facing and what's at stake... how strong is your sense of self-preservation?*\n\nGathering his will, he waited patiently for any sign that his malevolent other half had heard his challenge. The minutes ticked by, his breathing deep and slow as he bided his time...\n\nThen he felt a seething surge of resentment and there was a slight shift in his consciousness, Progenitor knowledge springing unbidden into his mind. John gained a sudden understanding of powerful eldritch runes... and how to form them into runic scripts that were ideal for the Astral battle he would shortly be facing. His Progenitor guide was still dug into his mind like a tic, but in that moment, John felt that implacable grip loosen for just a split-second. Tapping into months of tightly suppressed rage, John hurled it at the parasitical presence that had nearly usurped his very being. \n\n*Fuck you!* John snarled, riding a righteous wave of fury. *It's my mind, you bastard! You stole my birthright from me!* \n\nHe heard a howl of disbelief as his Progenitor guide was caught completely off-guard and hurled backwards, the slight shift in the mental boundaries between them becoming a tearing wrench. John gasped as he reclaimed a substantial portion of his mind, lifting a huge overbearing weight that he'd only subconsciously realised was there. His guide's startled cry turned into a scream of inarticulate rage, echoing without end in a mental prison designed to keep him locked away for eternity.\n\nJohn's eyes snapped open, lit by a blazing blue light as the secrets tumbled forth. Rising to his feet, he was barely aware of the girls in the bedroom as they stumbled backwards, staring at him in shock. Summoning his will, John imagined a wall of hexagons, the six-sided plates forming a perfect dome. He raised his hands to begin his psychic runecrafting, then paused abruptly and glanced down at his chest. He grabbed his shirt and ripped it open, buttons flying everywhere as he bared his torso... a far more suitable canvass for the battle runes he was about to inscribe. \n\nHolding his hands an inch from his skin, he watched the glowing runic script flowing across his chest, each runeword throbbing with barely controlled power.\n\nCourage to face the most terrifying of foes.\n\nStrength of a thousand to crush any that dare face my wrath.\n\nSpeed and precision to seek the heart of the beast.\n\nTemporal inversion to undo the cruel hand of fate.\n\nWellspring of power to sustain my fury.\n\n\"John, what is all that writing?!\" Jehanna gasped, her voice filled with wonder.\n\n\"Progenitor Astral battle runes,\" John said quietly, surveying the archaic phrases he'd just etched across his body. \"They'll start working as soon as I get pulled into the Astral Plane.\"\n\n\"Is there anything you need us to do?\" Lynette asked in a hushed voice, lifting her eyes from the elaborate glyphs on his muscular chest.\n\nHe glanced at the bed, his face reflecting his concern for the women sleeping there. Leaning forward, he whispered in her ear, \"If I don't make it, do what you can to help the girls. It'll hit them hard, but I've tried to keep things at a distance between the two of us... you'll be okay.\"\n\nShe shook her head and the torment was quite clear in her hazel eyes. \"I-I won't be... but I promise I'll do my best to take care of them.\"\n\nJohn sighed with regret and caressed her cheek, \"Thank you. I'm sorry if-\"\n\nLynette leaned forward, catching him by surprise as she cut him off with a kiss, her lips soft and responsive against his. She blushed when they parted and murmured, \"I had to do that... just once.\"\n\nHe smiled at her in understanding, then turned to lie on the bed beside Alyssa. Brushing his fingers through her golden hair he whispered, \"Be safe, beautiful...\" \n\nClosing his eyes, he succumbed to the exhaustion, letting himself be pulled down into sleep... and the nightmares lurking in the darkness. His perception went black then suddenly began to lighten, the curling wisps of misty cloudbanks edging around his peripheral vision, just as they had the other times he'd been sucked into the nightmarish sub-plane. \n\nThis time, however... he'd come prepared.\n\nHe could feel that insidious aura of fear, designed to fill the most stalwart of men with terror, leaving them cowering and helpless. John's chest blazed with a brilliant light and that oppressive feeling was brushed aside, filling him with hope and freeing him to act. Channelling his willpower, John was instantly covered in a gothic suit of gleaming white armour, the intricate scrollwork over the plates inscribed with fine runic script. He clutched a massive sword in an armoured gauntlet, the runes that sheathed the blade thrumming with the promise of formidable power.\n\nJohn's eyes shone with a fierce light as he crouched low and thumped the ground with a clenched fist, unleashing a blast wave of telekinetic force. The mists recoiled, swept backwards by that wall of psychic power, clearing a circle for a hundred-metres in every direction. Inhuman cries told of creatures caught in the backlash of his eldritch assault, their misshapen bodies hurled across the dreadful plane.\n\nMore of their foul kind lumbered out of the roiling fog, their nightmarish appearance starkly revealed now that he'd swept away that obscuring shroud. No two creatures were alike, each one a hideous amalgam of disgusting tentacles, vicious claws, and malevolent eyes, their fang-filled maws gibbering for a taste of his flesh. The horrific sight would be enough to drive any normal man to madness, but shielded by his runes and fortified by hard-won experience against these unholy monsters, John stood unbowed. \n\nTaking a firm grip on his two-handed rune blade, he faced the closest horror, a triple-headed monstrosity that charged across the open ground on a set of six wickedly-barbed hooves. Performing a whirling cross slash, a force projection blasted out of his blade, crossing the fifty metre gap between them and slamming into the stampeding beast. The rolling boom at the unleashing of so much destructive power was followed by an agonised scream, as John cleaved through all six legs and sent the monster crashing to the ground. \n\nLunging forward with his sword outstretched, a lance of psychic energy hit the next monster in its contorted face, melting through its sickening features and exploding out the back of its brutish head. John span around, hacking down the next wave of eldritch terrors that lurched out of the mists, dismembering them with a series of lethal scything cuts. Every savage chop with his runeblade sent another unstoppable wave of force across the glade, severing limbs and piling mangled corpses in a circle around him.\n\nNow that the fearful denizens of the mists had been alerted to John's presence, far more of them began to pour out of the billowing fog. Moving with fluid steps, John spun his sword around as he flowed through the kata he'd spent months learning with Yamamoto and refining with Sakura. Telekinetic arcs lashed out across the clearing, slicing through blackened hides and pustulent flesh, leaving glowing wounds in their wake. He felled one after the other, but their numbers were too great, swelling to a relentless horde of feral bloodthirsty beasts all champing to sink their fangs into his flesh. \n\nEyes widening in alarm, John spotted a stampeding monster in his peripheral vision, the squat six-legged abomination charging at him from his flank. He leapt aside to avoid getting flattened by its huge clawed hooves, but a flailing barbed arm clipped him as it passed, smashing his vambrace and sending a shooting lance of pain up his arm. The collision knocked him off balance, battering him towards the dripping maw of a particularly vicious-looking horror. John drove his sword deep into the ground as an anchor, jerking himself to a halt. The impact of the potent runeblade striking the obsidian sent a thunderous quake through the ground, the aftershock knocking the monster off its feet. \n\nJohn found himself only metres away from the contorted features of that disgusting beast. He could see the rows upon rows of serrated teeth that lined its huge mouth, as well as the razor-edge whip-like tongue that flickered over its enormous fangs. A dozen malevolent eyes locked onto his face, its gleeful hunger for his blood quite plain to see. The creature thumped the ground with legs as thick as tree-trunks and hauled its corpulent body aloft, its sickle claws rearing back to strike.\n\nChannelling his will through the runeblade, John unleashed rolling waves of blue flame across the cratered ground, the walls of fire spreading out like ripples on a black pond. The azure fire enveloped all the creatures in the clearing, licking up their limbs and immolating their foul flesh. He saw the look of anguish in the eyes of the four-legged abomination beside him, an agonised roar of torment escaping its enormous maw. The fire swept up and into that gaping hole, blistering blubbery lips and sizzling the thrashing tongue to a crisp. Painful cries turned to horrified whimpers as one eye after another popped, melted in its socket by the fiery inferno.\n\nAll around the clearing, hundreds of the Astral horrors writhed in their death throes, the dreadful smell of cooked flesh saturating the air. John surveyed the burning hellscape looking for threats, but the cascade of fire had consumed everything in sight, oily smoke pouring from the piles of incinerated corpses. He straightened and glanced down at his wounded arm, the pain fading as he healed himself, his armour unbuckling and straightening as it was repaired.\n\nThe runic well was helping to fuel John's psychic powers, but his personal reserves of energy would only go so far. John knew that time was not on his side and a protracted battle would only end one way. Hauling his gleaming sword from the ground, John faced the sinister wall of fog that surrounded the smouldering glade. \n\n\"Face me!\" he roared across the astral sub-plane, throwing every ounce of contempt he could muster into his brazen challenge. \"Or will you hide behind your minions like some pathetic coward?\"\n\n\"TOO LONG HAVE I SUFFERED THE INDIGNITY OF YOUR EXISTENCE. YOUR FOUL CORRUPTION IS AN AFFRONT TO EVERYTHING WE HAVE FOUGHT SO LONG TO ACCOMPLISH. YOU SHALL BLIGHT OUR PRESENCE NO LONGER, JOHN BLAKE...\"\n\nJohn felt the ground shudder under his feet and a gust of wind whipped past, a chorus of tormented voices echoing around him on that breeze. The swirling eddies quickly built into a howling gale, accompanied by a nerve-shredding cacophony of tortured screams that assaulted him in an endless dirge. The mists billowed away to reveal the endless obsidian plateau beneath his feet, only distinguishable from the blackness of the sky by the twinkling stars dotting the heavens. \n\nHe stared in mounting dread at the murky grey fogbank as it parted around titanic limbs, revealing something dreadful lurking deep within the mists. John gaped at the towering behemoth facing him across the plain, the staggering size of the immense creature revealing how laughably mismatched they were."
    ],
    "authorname": "Tefler",
    "tags": [
        "swallow",
        "cum inflation",
        "group sex",
        "group sex",
        "shapeshifter",
        "psychic",
        "bisexual",
        "alien",
        "nymph"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-105"
}