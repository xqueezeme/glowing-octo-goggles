{
    "title": "I Will Love You Forever Pt. 2 Ch. 14",
    "pages": [
        "Things were slowly returning to normal after Andrew Kelly was arrested and in jail. Everyone breathed a collective sigh of relief and looked toward the future. Patricia and Penny were excited to be going back to school and Patricia was excited to be going back home. Andrew's arrest wasn't the only cause for celebration, Nick and Hana's upcoming wedding added to the celebratory mood. \n\nSally was just beginning to show and was radiant. Diana and Eli seemed to be more excited than the expectant parents. Abby sat in the back yard watching the children play while preparations for the party went on. She watched Kenji and Patricia as they laughed together and occasionally hugged. They had been through so much and yet they were still able to laugh and love. Now Nick was going to marry Hana. The feeling that things could only get better arose in her. She had no doubt that there were still some hard times ahead of them, but she hoped that the worst of it was over.\n\nShe looked over at the children Ralph and Marie. Ralph was such a handsome little man and fiercely protective of his sister. He was very much like his father in looks and intelligence. Marie was Patricia's all the way. Intelligent, beautiful and strong willed. Of the two children, she was the one who got into trouble and needed disciplining.\n\nAbby felt an uncharacteristic pang of regret that she had never had children, but then she did she reminded herself. She had Kenji, Patricia, Joel and Penny. She had grown to love all of them as if they were born to her. She missed Ralph and wished that he were still with them. She knew that he would have been proud of all of them.\n\nJohn and Hattie arrived later in the afternoon when Nick went to get them. Patricia in particular noticed how much slower John moved. After Ralph's death she found herself looking at her parents and Abby more carefully. So much in fact, that Kenji spoke to her about it.\n\n\"Kirei you must relax.\" He said one evening. \"They all seem to be doing well.\"\n\n\"So did Ralph.\" Patricia replied.\n\nKenji didn't reply, but hugged her. There was no winning the battle so he let it be.\n\nPatricia watched as her parents made their way across the yard to Abby and the children. Of all the adults there, the only one that John hadn't made his peace with was Hiroshi. He was polite to him, but said no more than necessary. She had long given up on her father forgiving Kenji's father for his role in what almost happened to her. \n\nHer gaze left her father and went to her mother who hadn't seemed to age. She worked as hard as ever cleaning houses and doing the wash for rich white people. Patricia prayed that both of them would live long enough to see her graduate from medical school.\n\n\"What are you thinking about?\" Kenji asked.\n\nHe knew the signs when Patricia was thinking of something disturbing. She often stopped what she was doing and had a faraway look in her eyes.\n\n\"I'm fine.\" She said knowing why he asked the question. \"You know, I keep wondering what's going to happen next. I know that I should just enjoy the good times when they come, but ....\"\n\n\"Kirei, come with me.\" Kenji said taking her hand.\n\n\"But we have to finish getting the food ready.\" Patricia replied.\n\n\"It will wait.\" Kenji said tugging on her hand.\n\nA few minutes later, they were alone in one of the spare bedrooms. Kenji wrapped his arms around her and held her for a few minutes before saying anything.\n\n\"Kirei there are things that we cannot change no matter how much we may want to. We also cannot live our lives waiting for the next crisis to strike. We deal with those as they come and until then, we live our lives. Do you know what it is that helped us through the hard times?\" He asked. \"It was the good things that happened in between and sometimes during the bad times. Today is a day of celebration and not a day to worry about things that may or may not happen.\"\n\n\"I know,\" Patricia replied. \"I was just looking at my parents. They aren't getting any younger and I still have a long way to go before I'm done with school. I want them and Abby to be there. At the rate I'm going they won't be.\"\n\n\"I understand.\" Kenji replied. He had one more year to go thanks to the accelerated summer programs. \"Perhaps we can do something to hasten things. We can talk about it more after the party.\"\n\n\"I'm sorry.\" Patricia said as she laid her head on his chest.\n\n\"Why are you apologizing?\" Kenji asked.\n\n\"I'm not the same girl who was almost laughing when you helped her up from the ground.\" Patricia replied.\n\n\"The past few years have changed all of us.\" Kenji said. \"How could we remain the same? But Kirei, to me you will always be that girl whose eyes were filled with laughter and not anger that day. Even when things were at their worst, you were that girl. You are just a more mature version of her.\"\n\n\"So you don't think that I've become a cynic?\" Patricia asked.\n\n\"All of us are more cynical then we were before the war.\" Kenji said. \"Some of us more than others but that's not necessarily a bad thing.\"\n\nThey talked for a few minutes longer before joining the others. The last to arrive was Paul Mynt and he wasn't alone. He had been spending quite a bit of time away from home and didn't say why. On his arm was an attractive woman who was about his age. He introduced the woman as his fianc\u00e9e of a month, Carolyn Edwards.\n\n\"I'm sorry that I didn't ask permission to bring her, but I thought that this was a good time to introduce her to you. I also didn't want to bring her until that business with Andrew Kelly was over.\"\n\nAbby could see that Carolyn was nervous and took her under her wing.\n\n\"We have quite the family here don't we?\" She asked.\n\n\"I guess you could say that.\" Carolyn replied. \"I have to admit that when Paul told me about you, I didn't believe him.\"\n\n\"Paul is a good man.\" Abby replied. \"You're a very lucky woman.\"\n\n\"I agree and please pardon me if you catch me staring. I don't mean to be rude.\" Carolyn said as she looked around.\n\n\"I understand.\" Abby said with a smile. She liked Carolyn and her straightforwardness and had the feeling that they would become good friends.\n\n\"Paul told me about the struggles of the young couple Kenji and Patricia.\" Carolyn said. \"I find it amazing that they're still together.\"\n\n\"Kenji and Patricia aren't your garden variety young people.\" Abby said. \"You'll see that when you meet them... There they are now.\"\n\nCarolyn soon found out that it was as Abby said. Kenji and Patricia were an extraordinary couple and wished that she had more time to talk to them. \n\nThe party was over by nine. Everyone pitched in and helped with the cleanup. The women did the dishes while the men collected the trash and put the table and chairs away. At one point Hiroshi and John were in the garage alone.\n\n\"Listen here.\" John said. \"I want you to know that I still don't care for you, but I appreciate that you helped my daughter. Thank you.\" With that John turned and walked away. Hiroshi knew that his relationship with John Middleton was as good as it was going to get.\n\n*******\n\nAndrew sat on the bus that would take him to his new home, Alcatraz Federal Prison in San Francisco. He was glad for the distance because it meant that his parents couldn't come to see him. He looked down at his manacled hands, his prison uniform and finally his shackled feet. He was no longer Andrew Harlan Kelly, he was a murderer. For the next several months he would be the talk of the town and then he would be forgotten only to be remembered by his parents and the parents of Milton Vaughn. Even the melting pot would eventually forget him.\n\nHe felt a pang of sadness. Not because of what he'd done, he would do it again; but he'd do it differently. His sadness was for his parents and that he had caused them so much pain. He quickly wiped a tear away before any of the other prisoners saw him. He was going to have a hard enough time as it was because of his good looks. He looked out of the bus window as it pulled away and met the saddened eyes of his parents. He wanted to look away, but he couldn't even though his last memory of them would be the pain and disappointment in their eyes and faces.\n\n*****\n\nBecca could hardly stand up without help. She didn't have too much longer to wait before the baby was due. She still debated as to whether she should tell Ty when the baby was born, but she was leaning against it; especially if the baby was a boy. She already knew what her parents and Susan thought- he didn't deserve to know. Maybe they were right, but there was no need to make a decision now.\n\nWhen she heard about Andrew, Becca wondered if she would have been any better off with him than she had been with Ty. A murderer versus a murdering racist she mused. She had a thought that made her almost ill. She had wanted Andrew to hurt the melting pot. What did that say about her? Was she really any better than Ty and Andrew? The only difference between her and them was that she hadn't actually hurt anyone; at least not physically.\n\nThere were times that she thought about going to Patricia and Kenji, but she always backed out. What could she say? She knew that Ernie had made his peace with them and she admired him for it; but she didn't think that she was that brave. \n\nHer mind went back to Andrew. She still believed that he had had some feelings for Patricia and that was why he hadn't been as aggressive in dealing them. Now she was glad that he hadn't been more aggressive. She didn't think that she could have dealt with being partially responsible if anything had happened to Patricia or any of them.\n\nBecca thought about the time that she spent as Andrew's girlfriend. Why hadn't she seen that he was crazy? A moment later she realized it was because she didn't want see it. She had created a perfect world where she would marry Andrew and have his children. It hurt to realize that Andrew had felt nothing for her and had used her.\n\nShe struggled to her feet, waddled to the stairs and debated as to whether she really wanted to tackle them. But a nap sounded good. As her mother was constantly reminding her, soon sleep would be a rare commodity.\n\nShe had just taken the first step when a contraction hit. She stopped and tried to decide if it was the real thing. She waited for a few more minutes and then decided that it wasn't. By the time she made her way to the top of the stairs, her water had broken. She started to call for her mother, but then remembered that she was out shopping.\n\nBecca went to her parent's room, called the doctor and went to her room to change her clothes. Afterwards, she went back down the stairs to wait for her mother to come home. Her bag that had been packed for the past month was in the hall closet. She thought to go get it, but didn't think that's she could bend over far enough to pick it up. She wanted to sit down, but was too afraid that she wouldn't be able to get back up even with her mother's help. \n\nIt dawned on her that she could call her father and that she probably should. She called him and then Susan and resumed her wait. Her mother and father walked in about the same time. Her mother got her bag while her father ushered her to the waiting car.\n\nBecca's heart raced with the fear of the unknown as another contraction came and went. Her life was about to change once again.\n\nTen hours later, Robert Alexander Cartwright was born. He weighed in at eight pounds, seven ounces and twenty-one inches long. His tiny head was bald so Becca had no idea if he would have blonde hair like hers or dark hair like his fathers, but his eyes were blue. Becca held her baby in her arms gently touching his face and made a decision. She wasn't going to tell Ty that the baby had been born. What she was going to tell the baby when he was old enough, she didn't know. What she did know was that she wanted Ty nowhere near her or her baby.\n\nAs the baby nursed from her for the first time, Becca realized a few other things. If she was going to teach her child as she had been taught, she needed to at least apologize to Kenji and Patricia. Suddenly, she was exhausted. The baby had fallen asleep at her breast, the warmth of his tiny body comforting her.\n\nA few minutes later, a nurse came to take the baby to the nursery. Becca didn't want to give him up, but she needed sleep. She kissed the baby's head and handed him over to the nurse. A few minutes later, she was sound asleep.\n\n*****\n\nSaul was exhausted but he refused to go to bed until he completed the vocabulary lesson that Joshua had made up for him. There was a sheet of paper with ten words on it that he was expected to look up in the dictionary. Not only that, he had to write the definition, whether it was a verb, adjective or something else and use the word in a sentence. Later in the week Joshua would test his knowledge and ask him to spell the words.\n\nTaking into account his limited reading skills, Joshua made the words easy. Another part of the learning was that Saul had to read out loud from books designed for first graders. At first he was embarrassed, but when he saw that neither Joshua nor his wife was laughing at him; he relaxed.\n\n\"Not only do you have to become comfortable with reading,\" Joshua told him, \"You have to become comfortable with speaking as well. You must get comfortable with using the words that you are learning.\"\n\nSaul was amazed to find that he enjoyed the lessons and wished that he had been able to go to school. In the back of his mind he made a promise to his brothers and sisters back home; they would get an education. As with his promise to Jacob, he didn't know how he was going to make it happen; only that it would happen.\n\nThinking about Jacob saddened him. Jacob had been a good man who didn't deserve to die. Saul could still hear Jacob's voice ringing out loud and clear as he addressed the prisoners just before he was hanged. Saul didn't think that he had seen anyone carry himself as bravely as Jacob did with the exception of Joshua and his wife.\n\nIt still amazed him that they had taken him in even though they didn't know him. The fact that he was paying for his room was immaterial. It was the fact that Joshua had opened their home to him even though he had no money to speak of. The faces of the other black people he met on the train during his journey to California flitted across his mind. \n\nEach of them had touched him in some profound way whether it was by talking with him or sharing their food. He recalled the statement that one of the black women had made when she shared her meager meal with him.\n\n\"All gods' children hafta eat.\"\n\nOf all the conversations that he had with various people, that one stuck out. Even now whenever he ate a meal, he thought about that statement. Before he left South Carolina, Saul had never given serious thought to religion. He believed that there was a god and that heaven and hell existed, but that was as far as it went. He had stopped going to church when he was a child because it wasn't encouraged and he found it boring.\n\nHe always listened politely when Joshua and his wife read from the bible and prayed after dinner and sometimes, something that they read stuck a chord with him; but he was too shy to ask what it meant. He thought about asking to go to church with them, but held back. He figured that it would only make things uncomfortable for them.\n\n\"Who is really going to be uncomfortable?\" He asked himself the last time he thought about it.\n\nIt was Saturday night and somehow he had Sunday off. Dinner was over and the bible reading and prayer were done. As always, Saul helped clear off the table before going to his room to work on his reading. He was headed to his room when Joshua stopped him. \n\n\"You're off tomorrow aren't you?\"\n\n\"Yes sir.\" Saul replied. \"Do you have something that you need me to do?\"\n\n\"No son.\" Joshua replied. \"I think that you fixed everything that needs to be fixed. I was going to invite you to church.\"\n\nSaul hesitated. The excuse that Joshua and his wife would be too uncomfortable was no longer valid.\n\n\"You don't have to ...\"\n\n\"I would like that.\" Saul said interrupting Joshua. \"What time do we leave?\"\n\n*****\n\nIsadora crossed off another day on the calendar. In a few more weeks she would be going home for the holidays. She had already written a letter to her parents in the care of Mr. Whitman knowing that he would read it to them. Even though the trip was weeks away, she was so excited that she couldn't focus on the assignment sitting in front of her.\n\nFinally, she gave up and decided to sit in the back yard until she was ready to go back to work. Bella was in the kitchen baking bread for the carry in meal that was going to take place after church. Isadora stopped to talk to her.\n\n\"It sure smells good in here.\" She said when she got to the kitchen.\n\n\"A loaf will be ready in a few minutes.\" Bella said. \"I always make extra because between Lenny and the children, I wouldn't have any left for the meals at church.\"\n\n\"I can understand why.\" Isadora said sitting down. \"I'm just taking a break to clear my head. I'm so excited to be going home that it's all that I can think about.\"\n\nBella smiled at her understanding the feeling. She was actually glad that Isadora brought up the subject of taking a break. A young man at the church was asking about her and Bella thought that they might make a nice pair. \n\n\"Isadora, do you know who Theodore Stevens is?\"\n\nIsadora thought for a minute.\n\n\"I think so.\" She replied. \"Isn't he the one that takes care of the church grounds?\"\n\n\"Yes and he's also starting college in the fall.\" Bella replied.\n\n\"What about him?\" Isadora asked already knowing where the conversation was going.\n\n\"He's been asking about you.\" Bella said. \"I thought that it would be nice to have him over for dinner sometime.\"\n\nIsadora chose her words carefully. She had no desire to hurt Bella's feelings.\n\n\"I think that he would appreciate that.\" She said, \"But please don't do it on my account. I'm not interested and I can't afford any distractions.\"\n\n\"Well, it's not like you're going to marry him or anything.\" Bella replied. \"I just thought that you could become friends. He's here without his family just as you are and ...\"\n\n\"Alright.\" Isadora interrupted with a smile. \"One can't have too many friends can they? But Bella, if he says anything to you about wanting to be more than friends, tell him that I'm not interested.\"\n\n\"Good because I invited him for dinner next Sunday.\" Bella said grinning at her.\n\nIsadora grinned back, but she knew that Bella was trying to play match maker. She would talk to Theodore when she had a chance and make sure that he understood that she wasn't interested in any romantic entanglements with him or anyone else for that matter.\n\nShe talked with Bella for a few more minutes and went back to her room. She still wasn't ready to study so she did the one thing that always got her back on track. She closed her eyes and repeated the names on her list. As she said each name, she visualized the face that went with it starting with the ring leader. By the time she made it halfway down the list, she was back on track. She studied late into the night reading ahead in her textbooks. She has renewed her vow to finish school early and to take the first train home. She had people to confront.\n\n*****\n\nPatricia breathed a sigh of relief when she, Kenji and the children got home. It would feel good to sleep in their own bed and to be able to make love without fear of waking the children. She carried Marie while Kenji carried Ralph to bed. As soon as the children were tucked in, Kenji made tea for him and Patricia.\n\n\"It is good to be home.\" He said as he handed Patricia a cup of tea\n\n\"Yes it is.\" Patricia agreed. \"I was just thinking about Andrew's parents. I can't even begin to imagine what they must be feeling.\"",
        "\"Neither can I.\" Kenji replied. \"Kirei, we need to start thinking about schooling for Ralph.\"\n\n\"I know, I was thinking about that the other day. We need to start preparing him don't we?\" she asked.\n\n\"I wish that it was just the preparation for going to school.\" Kenji said. \"But there are others like Andrew Kelly in the world and Ralph needs to be prepared.\"\n\n\"Do you think that it will ever get better?\" Patricia asked.\n\n\"I think that it already is.\" Kenji said. \"Think about it. Lawrence Goodman was convicted in a southern court. My mother and Nick can now legally marry. But I also know that as long as there are people, there will be prejudice.\"\n\n\"But people can change. I mean look at your father and Sally.\" Patricia said.\n\n\"Yes, but Kirei; they wanted to change and that is where the key lies.\"\n\n\"You're right.\" Patricia conceded as she sat her teacup down. \"I am looking forward to going back to school.\" She said changing the subject. \"I would also like to figure out a way to take more than a class at a time.\"\n\n\"I will graduate in a year and then will start my internship.\" Kenji replied. \"I will be able to help more with the care of the children.\"\n\n\"You're going to be exhausted.\" Patricia said. \"I was thinking that maybe your mother, my parents and Abby could help out a little more. I know that they're already helping out a lot, but maybe they won't mind helping a little more.\" Patricia said as she laid her head on Kenji's shoulder. \"Can you believe how far we've come?\" she asked yawning.\n\n\"Yes, but our journey is not yet over.\" Kenji replied as he put an arm around her. \"I am still planning on taking you to japan.\"\n\n\"Do you think that Japan will ever completely recover from the bombings?\" Patricia asked.\n\nKenji hesitated. He tried not to think about the condition of his country too much.\n\n\"We can only hope.\" He replied kissing her head. \"You are very tired, let's go to bed.\"\n\nPatricia sat up and looked at him.\n\n\"Are you really going to let me sleep?\" she teased.\n\n\"I don't recall saying anything about sleep.\" Kenji replied as he pulled her back into his arms and kissed her.\n\n\"No you didn't.\" Patricia agreed. \"But I am tired.\"\n\n\"Are you too tired to make love with me?\" Kenji asked nuzzling her neck.\n\n\"I will never be too tired or too old for that.\" Patricia replied kissing him back.\n\n\"I am very glad to hear that.\" Kenji said. \"Go get ready for me while I take care of the dishes.\"\n\nPatricia didn't need to be told twice. She gave Kenji another kiss and practically ran up the stairs. On her way to the bathroom, she peeked in at Ralph and Marie. Both of them were dead to the world. She took a quick shower and inserted the diaphragm that she kept in the medicine cabinet in. Kenji was already waiting for her naked and erect when she got to the room.\n\n\"Kirei come here.\" He said softly.\n\nPatricia immediately moistened between her legs as she always did when he used those words. She slowly walked over to him and looked up at him. She noticed the lines of fatigue around his eyes and realized that he had to be exhausted. Taking his hand, Patricia led him to the bed.\n\n\"Lie down.\" She commanded her tone firm.\n\nKenji raised his eyebrows but he complied.\n\n\"Tonight I take care of you.\" Patricia said \"And don't argue with me.\"\n\nKenji had just started to argue when Patricia took the head of his cock into her mouth and sucked on it. Kenji's hips jerked forward and he moaned Patricia's name. \n\n\"Kirei... you must stop, I want to be inside of you.\" He said his voice strained.\n\nWhen she didn't stop, he moved so that she was beneath him. \n\n\"Cheater.\" Patricia gasped as he slid into her and stilled.\n\nEven after all of their time together, that was one thing that never changed. Kenji always stopped for several minutes after he entered her. Patricia usually waited, but tonight she was impatient. She began to move against him prompting Kenji to begin thrusting. Suddenly, Patricia wanted more than their usual gentle lovemaking.\n\nShe ground against him trying to convey her need without words. After a few minutes, he got it and began to thrust harder and faster his balls slapping against her ass. Kenji bent down and fastened his mouth to hers as the speed and force of his thrust increased. Their heads banged against the headboard, but they didn't notice. \n\nPatricia arms tightened around Kenji clinging to him as her orgasm and then his began. They came together taking in each other's breath. Afterwards, Kenji held Patricia tightly against him both of them breathing heavily.\n\nHe was immediately concerned that he had hurt her.\n\n\"Kenji I'm fine.\" Patricia said stroking his back. \"You didn't hurt me.\"\n\n\"What is it?\" Kenji asked when Patricia went silent.\n\n\"I was so scared of losing you.\" She said softly. \"I was scared when you went to the camps to, but this was different. Andrew could have killed you.\"\n\nKenji didn't reply. She was right, but he still would have made the same choices.\n\n\"It's over now.\" He said kissing her. \"Andrew Kelly is no longer a problem.\n\nThey made love again, but in the slow gentle manner that they usually did. For once, Kenji fell asleep first with his arms around Patricia and his chin resting on top of her head. As tired as she was, it took Patricia another half hour to fall asleep. She couldn't get Andrew's parents out of her mind.\n\n******\n\n\"Just think,\" Nick said as he and Hana got ready for bed. \"We can be seen in public as husband and wife! No more pretending that you're my housekeeper.\"\n\nHana smiled up at him. She hadn't believed that the day that she could legally marry Nick would come. She now understood how Kenji and Patricia must have felt when they found out that they could legally marry. Like Nick, she wanted to wait until after the first of the year to be sure that the law against interracial marriages wasn't going to be rescinded. \n\nCalifornia would be the first state to change the law and she wondered if any of the other states would follow suit.\n\n\"I know that Kenji and Patricia's anniversary is on January first,\" Nick was saying, \"Do you think that they'd mind sharing a wedding date with us?\"\n\n\"I do not think they would mind.\" Hana replied. \"That isn't very far from now.\"\n\n\"No it isn't, it's a few weeks away; can you be ready?\" Nick asked.\n\n\"I will be.\" Hana replied. \"I will need to go to the fabric store on Monday.\"\n\nShe was already thinking about how much white material she would need to make her wedding shiromuko-kimono. Her hope was that the silk wouldn't be too expensive. By her calculations, she would need at least fifteen feet of material.\n\n\"I'll take you before I go into work.\" Nick said \"And I want you to get whatever it is you want or need. This is our wedding. Where would you like to have the ceremony?\"\n\n\"Patricia has offered us the use of her and Kenji's home, but I wanted to talk to you before I accepted.\" Hana replied.\n\n\"Hana, we could get married in my office and I wouldn't care.\" Nick said hugging her. \"The where isn't important. The fact that we can legally marry is. So if you want to get married at Kenji and Patricia's house that's fine by me.\"\n\n\"Nick.\" Hana said and then hesitated. \"Are you going to invite your family?\"\n\nThat was a question that Nick had asked himself a hundred times even before the law changed. He swung back and forth between yes and no. The yes was because he wasn't ashamed of Hana and his unusual family; the no was because he already knew how his family would react. But still they had to be told. It would only be a matter of time before they found out.\n\n\"I'm going to call them and tell them.\" Nick replied. \"I already know what their reaction is going to be, but it's better to get it out of the way.\"\n\n\"Will you invite them?\" Hana asked.\n\n\"I don't know.\" Nick replied. \"We'll see, but Hana; no matter how badly they react you and the others are my family. I don't need them.\"\n\nHana took a moment to reflect on her own reaction when she found out about Patricia. She was going to receive the same treatment that she gave Patricia. She could only hope that she would be half as graceful about it as Patricia had been.\n\n\"I think that you should invite them no matter their reaction.\" Hana said. \"If they choose not to come then it will be their choice. They will not be able to say that you excluded them.\"\n\n\"You're right, but what if they show up and cause trouble?\" Nick asked. \"You've been through so much and I want this one day to be perfect.\"\n\n\"It will be perfect even if your family came and caused problems.\" Hana said. \"It would be perfect because we are getting what we want and we will be surrounded by all of those who love us. So invite your family and whatever happens, happens.\"\n\n\"It could get ugly.\" Nick warned.\n\n\"Things with Patricia got ugly.\" Hana said. \"I will always regret my part in what almost happened to her. I was just thinking that I hope that I am as graceful as Patricia was and is.\"\n\n\"You already are.\" Nick replied. \"You've accepted her, the children and her parents as family and you've agreed to let me go back to the agency even though it makes you nervous. I am a very lucky man.\"\n\n\"But you once thought as your family does did you not?\" Hana asked.\n\nNick hesitated. They had never really discussed his beliefs about other races.\n\n\"I did, but not to the point where I considered myself a bigot.\" Nick replied. \"In reality, I guess I was but Hana; Kenji and Patricia were a big reason for my change of attitude. Those two kids are among the bravest, smartest people I know and I'm glad that I know them. I'm glad that I know you and that in a few weeks we'll be married. I don't know about you, but I'm whipped.\"\n\nHana smiled up at him. Saying that he was whipped was Nick's way of saying that they were going to bed, but it would be a while before they actually went to sleep. She was in the process of removing her slip when Nick stopped her.\n\n\"Let me do it.\"\n\nHe ran his hands down her arms, over her hips not stopping until he reached the hem of her slip. Ever so slowly he began to pull the slip up as he kissed her lips before moving to her neck. Hana held on to Nick's waist to steady herself, her breathing quickening as he nipped and then sucked on her neck.\n\n\"I love you Hana.\" Nick said as he lifted her up so that she was eye level with him.\n\n\"I love you too.\" Hana replied as she wrapped her legs around Nick's waist.\n\nNick kissed her again and eased her down onto his waiting erection. Both of them sighed and then moaned at the contact. Nick walked to the bed, eased Hana onto it and began to thrust into her while looking into her eyes. He reached down and palmed a breast wishing that the slip was completely gone. Hana knowing what he was thinking slid the straps over her shoulders and with his help pulled the slip down baring her breasts. Nick pinched and rolled her nipples between his fingers making her writhe beneath him.\n\n\"Hana...\" was all that he got out before her orgasm began. Her orgasm triggered his release. Afterwards as they held each other, Nick wished that he was twenty years younger. But, he decided; there was more than one way to make love. \n\nHe moved back and helped Hana take off the slip that was bunched around her waist. When the slip was gone, he took a rose colored nipple into his mouth and suckled on it as he slipped his hand between her legs. His tongue alternately flicked, nipped and sucked the nipple as his fingers danced across Hana's swollen clit. Moments later, Hana cried out her second release of the night and was on her way to a third.\n\nNick held her trembling, sweaty body close to his and kissed her. \n\n\"Go to sleep now.\" He said and started to reach for the blankets.\n\n\"We are not done yet.\" Hana replied taking his semi-erect cock into her small hands.\n\nShe stroked him until he was fully erect, climbed on top of him and began to rock and swivel her hips rhythmically. She sped up her movements when she felt Nick's cock twitch and then grow in size within her. Nick screamed her name as he came for the second time that night. Finally exhaustion caught up with him. He was asleep as soon as Hana was situated in his arms.\n\n****\n\nHiroshi and Dai sat up talking long after everyone had gone home. The topic of discussion was citizenship.\n\n\"It is only a matter of time before we will be allowed to become American citizens.\" Hiroshi said. \"And I want you and the baby to become citizens when the time comes.\"\n\n\"But what about you?\" Dai asked. \"I do not want to become a citizen if you don't.\"\n\n\"Dai, I never should have left that camp. It is only because of an oversight that I am here with you.\" Hiroshi said. \"Nick has already spoken to me about this. If I attempt to become an American citizen, my past activities may come to light. I could be imprisoned or sent back to Japan. Who would care for you and Hiro if that happened?\"\n\n\"But you are no longer that man.\" Dai protested. \n\n\"They will not care.\" Hiroshi replied. \"They will only care about what I have done. As soon as Nick finds out what is required to obtain citizenship he will tell us. If there is any way that I can safely become a citizen, then I will. I have also transferred money into an account for you. If anything were to happen the house is paid for and is in your name. There is also a letter at the bank that will need to go to Kenjiro.\"\n\n\"Hiroshi, what is happening?\" Dai asked her voice filled with anxiety.\n\n\"Nothing, but I want to be prepared in case something does happen.\" Hiroshi replied.\n\nDai gave him an intense look as if assessing him for a lie. Apparently she saw none because she relaxed. What Hiroshi hadn't told her was that he had cash and was packed to leave immediately if anything happened. He had spoken to Nick about his plans during one of his visits to the house.\n\n\"I have no wish to do to Dai what I did to Hana.\" Hiroshi said. \"I have already paid for the house and put the bulk of the revenues from the business into an account for Dai and Hiro.\"\n\n\"I haven't heard that you're being investigated.\" Nick said, \"But I think that you're wise to have a plan.\"\n\n\"I also have a small bag packed and I have cash in case I should have to suddenly leave. I wish to ask a favor of you.\" Hiroshi said. \"I know that you have done many favors for me in the past, but this one is actually for Dai and Hiro.\"\n\n\"What is it?\" Nick asked.\n\n\"I ask that you help them if I should have to leave. Dai will be very frightened and she will not understand.\"\n\n\"Hiroshi, you, Dai and Hiro are now a part of this family.\" Nick said. \"If anything happens to you, you have my word that they'll be looked after.\"\n\n\"Thank you.\" Hiroshi said with a slight bow. \"I can now rest easier.\"\n\nThat conversation had taken place two weeks before the arrest of Andrew Kelly. During those two weeks, Hiroshi found that while he did sleep better; he also experienced feelings of remorse and regret. He had never really apologized to Hana for his treatment of her. For that matter, he had never really apologized to Kenji. He apologized to Patricia as he should have and tried to apologize to her father, but had neglected to apologize to his family. He made the decision to rectify that situation as soon as possible.\n\n*******\n\nSunday morning found Saul a nervous wreck. He hadn't been inside of a church for years and now he was going to an all-black one. He dressed in his best clothes, slicked his dark hair back and inspected himself in the mirror. He wasn't dressed to the nine's but it would do. He made the decision to buy one set of nice clothes for special occasions and church.\n\n\"It's time to head out!\" Joshua called into his room.\n\nSaul looked at his reflection one last time and left the bedroom. People in the neighborhood had finally gotten used to his presence and were for the most part cautiously polite. There were a few who resented his presence and made sure that he knew it. He had to wonder what the reaction would be when he walked into church.\n\n\"Nervous?\" Joshua asked when Saul met him at the door.\n\n\"A little.\" Saul confessed.\n\n\"Don't be.\" Joshua replied. \"After a few minutes they'll forget all about you.\"\n\n\"I'm ready.\" Joshua's wife said as she hurried into the small living room. \"Saul, could you get the cake off the counter and carry it for me?\"\n\n\"Yes ma'am.\" Saul said and went to the kitchen.\n\n\"He's a good man.\" Joshua said to his wife.\n\n\"Yes he is.\" She agreed. \"I'm glad that you brought him home with you.\"\n\nA few minutes later, the trio was walking to church. When they got there, Saul put the cake with the other food and looked for a seat in the back.\n\n\"What are you doing?\" Joshua asked.\n\n\"I thought that I'd sit in the back.\" Saul replied. \"I don't want to take anyone's seat.\"\n\n\"This is god's house.\" Joshua said. \"In here we're all equal now come on and sit with me and Cora.\"\n\nSaul nodded and followed Joshua to the front of the church. He felt eyes on his back as he made his way to the front and sat down. He had never felt so out of place as he did that moment and hoped that what Joshua said about being forgotten was true.\n\n*******\n\nIsadora was up and dressed early. She took the opportunity to study for an exam that was a little over a week away. She and Maeve were still studying together, but only at school. Maeve, by her own admission was having trouble with a paper that was due in a few days. Isadora wanted to ask Bella and Lenny if she could invite Maeve over for dinner so that she could help her; but for whatever reason shied away from asking.\n\nThe paper was due at the end of the week so time was getting short. If she was going to ask, she needed to do it soon. \"Why am I hesitating?\" she asked out loud. In that moment, Isadora realized that if she was going to succeed, she needed to say what she wanted and needed. She couldn't afford to be hesitant. She could hear Bella in the kitchen beginning to fix breakfast and went to the kitchen.\n\n\"Can I help with something?\" Isadora asked.\n\n\"You could pack up the bread before Lenny and the children get here.\" Bella replied with a smile.\n\n\"Sure... Bella, I would like to invite a friend over for dinner this week.\"\n\n\"What friend?\" Bella asked distractedly.\n\n\"Maeve, the girl I study with at school. She's having some trouble with an assignment and I would like to help her.\"\n\n\"What night would you like to have her over?\" Bella asked as she bustled around the kitchen.\n\n\"The paper is due on Friday so is Tuesday alright?\" Isadora asked surprised at how easy it had been.\n\n\"That's fine.\" Bella replied.\n\n\"Bella, aren't you concerned about me bringing a stranger here?\" Isadora asked. \n\n\"Should I be?\" Bella countered. \"Isadora, part of us getting ready for the change as Mr. Jackson calls it involves us intermingling with the white people not only on a business and academic level; but on a personal level as well. Besides, this Maeve has been a friend to you and we would like to meet her.\"\n\n\"Thank you.\" Isadora said as she packed the last loaf of bread.\n\n\"You're welcome... Isadora, just because we're being paid for you to live here doesn't mean that this isn't your home. We trust that whoever you bring through these doors means no harm to us, so please feel free to invite your friend Maeve over whenever you want, just let me know in advance so that I can plan dinner.\"\n\n\"The bread's already packed?\" Lenny asked as he walked into the kitchen carrying the youngest child.\n\n\"Yes and just in time!\" Bella teased. \"Where are the other two? We have to get moving if we don't want to be late.\"\n\nBreakfast was over in a hurry and the car packed with the bread. Isadora sat in the back seat with the youngest child sitting in her lap. She thought about Maeve and wondered if she would accept her offer of help and dinner. \n\nThe church was almost full by the time they got there. Lenny carried the basket of bread to the table while Bella and Isadora found seats which unfortunately were near the back of the room. To leave a seat open for someone else, Isadora continued to hold the youngest girl in her lap. When she was finally settled, she looked forward and froze.",
        "She looked at Bella to see if she was seeing the same thing that she was, but Bella wasn't paying attention. She stared at the back of Saul's head not believing what she was seeing. She then decided that her eyes were deceiving her. The person that she was looking at was more than likely someone of mixed blood. That would explain the hair texture.\n\nIsadora was distracted by the call to worship. She stood along with everyone else when the minister invited them to join him in prayer. Isadora closed her eyes and said a prayer of her own. She thanked god for giving her a chance to pursue her goals and for Lenny, Bella and their girls. She prayed for the safety and wellbeing of her family and friends back home. What she didn't pray for was for the capability to forgive those who had wronged her. She still needed the anger and hatred to keep her moving forward. She wasn't sure that she would ever be able to forgive them or even if she wanted to.\n\nThe song ended and the minister recited Psalm 122:1. From that point on, the service sped by. Before she knew it, they were singing the last song and saying the closing prayer.\n\n\"Now don't run off!\" The minister said after the prayer. \"There's a fellowship meal and from what I can see, there's plenty of food! I'm going to ask Brother Joshua to say the blessing and then we're dismissed.\"\n\nAfter the blessing for the food was said, the sound of many people talking filled the room. Saul stayed where he was and waited for Joshua and Cora. He found the church service enlightening and enjoyable. It was a far cry from the services that he attended as a child. To his relief, it was as Cora said; people soon forgot about him or they accepted the fact that he was there.\n\nAs the service wore on, he found that he was no longer thinking in terms of being the only white man in the congregation. Instead he felt as if he finally fit in somewhere. He had watched and listened to the minister and was impressed with the confidence in his voice and words. The minister wasn't as well-spoken as Joshua, Cora or Jacob, but his words and the conviction behind them were powerful. He found himself clapping and tapping his feet to the music. He liked it here, he felt at peace here even though there were those who didn't want him there.\n\nAs he waited for Joshua, the minister approached him.\n\n\"Good afternoon and welcome to the house of the lord!\" He said offering his hand. \"I'm Pastor Micah Rollins.\"\n\n\"Thank you sir.\" Saul replied accepting the man's hand.\n\n\"So you must be the young man that Brother Joshua took in.\"\n\n\"Yes sir, my name is Saul.\"\n\n\"Well Saul, it's a pleasure to meet you and I hope that you come back.\"\n\n\"Yes sir.\" Saul replied. He had already decided that he would be coming back every Sunday that he was off from work.\n\nFor the most part, Saul was welcomed to the church. There were a few who didn't try to hide their displeasure that he was there. They didn't say anything, they didn't have to. It was in the angry glares that they gave him when he looked their way.\n\n\"Let's get into line.\" Joshua said after he finished his conversation with another church member.\n\nSaul thought about going home, but his stomach was rumbling. Not only that, neither Joshua or Cora would have let him go. He stood in line behind them and tried not to look around too much. He didn't want to give the appearance that he was staring.\n\n\"I hope you're hungry.\" A voice from behind him said. \n\nSaul turned to the speaker to face a young man not much older than he was.\n\n\"My name is Lucas Walker.\" The young man said as he held out his hand.\n\n\"I'm Saul; it's a pleasure to meet you.\"\n\n\"Welcome to our church, but how is it that you're here?\" Lucas asked.\n\nSaul sensed genuine interest in the question and found that he liked the black man even though he had just met him.\n\n\"I live with Joshua and his wife.\" Saul replied. \"I happened to be off from work and they invited me to come to church with them.\"\n\n\"They're good people.\" Lucas said. \"By the way, make sure that you get a slice of my mother's sweet potato pie.\"\n\n\"Alright, but how will I know which one is hers?\" Saul asked.\n\n\"I'll tell you.\" Lucas said with a grin.\n\n**\n\nIsadora watched as Saul made his way down the food line. She had been wrong; he wasn't mixed; but all white. At first glance, she thought he was one of them. Her heart had begun to pound and she felt dizzy even though she knew that it couldn't have been him... he wouldn't be caught dead in a black church. But even so, she didn't begin to relax until she got a better look at Saul. Saul was bigger than he was in both height and build and Saul's hair was a darker shade of brown. Aware that she was staring, Isadora looked away and concentrated on serving potato salad to the next person in line.\n\n***\n\nSaul was so engrossed in his conversation with Lucas that he didn't notice that he was being watched by more than one person.\n\n\"What are you studying?\" Saul asked when Lucas told him that he was a college student.\n\n\"I'm going to seminary next year.\" Lucas replied.\n\n\"You're going to be a minister?\" Saul asked.\n\n\"I sure am!\" Lucas replied proudly. \"I hope to have my own church someday. What about you? What are you planning to do?\"\n\n\"I don't know yet.\" Saul replied evasively. He didn't want Lucas to know that he was still in the process of learning how to read better and that he hadn't graduated from school.\n\n\"Well, the world could always use another prophet of the lord.\" Lucas said. \"Oh hey we're in luck! There's still a couple of my mom's pie left! \"\n\nSaul looked in the direction in which Lucas was indicating and felt eyes on him. He looked around and saw the same men that were staring at him all morning, but they weren't paying attention to him. He continued to look around until he met the cool, but curious gaze of Isadora. He looked back at her, blushed and then quickly looked away.\n\nEvery so often he would look up and see that he was still being watched by Isadora. He was almost tempted to introduce himself to her, but didn't. For one, he didn't know how he would be received by her and two; he had no desire to create a problem.\n\nBy the time the meal was over, he was sneaking peeks at Isadora when he thought no one was looking. He had also begun to wonder about something else; his future vocation. He wanted to think about it a bit more before he talked to Joshua about it, but something that Lucas said had struck a chord with him.\n\nAfter the meal Saul helped clean up and put the tables and chairs away. Once he was close enough to speak to Isadora, but he didn't. It wasn't so much because of fear or nerves that he didn't speak to her, it was because he got the feeling that she didn't want him to speak to her. He gave her the briefest of nods and moved on not staying to see if she responded.\n\n****\n\nMonday morning had arrived before Patricia knew it, but she was anxious to get back to school. Abby was going to stay with the children until Hana arrived. When she and Kenji got back from school, they would talk to Hana about babysitting so that Patricia could take more classes. \n\n\"Come here pretty one.\" Kenji said to Marie who had just finished her breakfast.\n\nWhen the little girl reached him, Kenji bent down and picked her up.\n\n\"I want you to promise me that you will behave yourself.\" Kenji said gently but firmly. \"You are to obey Aunt Abby and grandma Hana. Do you understand?\"\n\n\"Yes papa.\" Marie said softly.\n\n\"Do I have your promise that you will behave?\" Kenji asked as he looked into Marie's eyes.\n\n\"Yes papa.\" Marie replied.\n\n\"Good.\" Kenji replied. \"I am trusting that you will keep your word.\"\n\nEven as young as she was, Marie knew that Kenji expected her to do as she promised. She threw her arms around his neck and kissed his cheek.\n\n\"I love you papa.\"\n\n\"I love you too.\" Kenji replied as he kissed her cheek.\n\nOf their two children, Kenji was most worried about Marie. She was the most impulsive and more prone to cause mischief. He loved her spirit and in so many ways she reminded him of Patricia; but her stubbornness could be and was often a source of trouble. \n\nHe sat her on her feet and looked for Ralph. His admonishments to the boy would be different than the one that he gave Marie.\n\n\"Be sure to help Aunt Abby and Grandma Hana.\" Kenji said.\n\n\"Yes papa and I promise to help look after Marie too.\" Ralph said.\n\n\"Thank you Ralph.\" Kenji said hugging him. \"I love you.\"\n\n\"I love you too.\" Ralph replied. \"Papa?\"\n\n\"Yes?\"\n\n\"Will anyone try to hurt you today?\" Ralph asked.\n\n\"I do not believe so.\" Kenji replied. \"Andrew Kelly is in prison.\"\n\n\"But doesn't he have friends?\"\n\n\"Yes he does, but I don't think that we need to be worried about them.\" Kenji replied as he reached for his wallet. \"Here is my handkerchief; will you keep it safe for me?\"\n\nRalph took the handkerchief, held it for a brief moment and put it in the front pocket of his jeans. He hugged Kenji again and went to the kitchen to say goodbye to Patricia who was waiting by the door leading to the garage. They left a moment later after once again admonishing the children to behave. \n\nPatricia was as excited as if she was the first time she had gone to school. She really couldn't explain it and felt no need to. Kenji reached over, took her hand in his and gave it a gentle squeeze. He was happy for the both of them, but still felt that caution was in order.\n\n\"Kirei, be careful. Just because Andrew Kelly is gone doesn't mean that there aren't others. We will proceed as we always have. You will wait for us in the library and go nowhere alone.\"\n\n\"I figured as much.\" Patricia replied. \"You and Joel watch yourselves too.\"\n\n*****\n\nErnie felt light hearted as he got ready for school. He felt bad for Andrew's family even though he was glad that Andrew was in prison. The visit with Andrew's parents had been one of the saddest things that he had ever encountered. He couldn't even begin to imagine how they felt. The lighthearted feeling evaporated when he remembered Andrew's mother asking if Andrew had really been the leader of a hate group. As much as he had wanted to soften his answer, he knew that he couldn't. They deserved the truth. \n\n\"Yes ma'am he was.\" He had replied. \"I know because I was a member of the same group.\"\n\n\"You were?\" Andrew's father had asked.\n\n\"Yes sir I was.\"\n\nErnie could still feel the oppressive silence that occurred after that revelation. When he closed his eyes he could still see the resignation on the faces of Andrew's parents. It was the last question that Andrew's mother asked that still brought a lump to his throat-\n\n\"You got out, why didn't you help Andrew?\"\n\nThe fact of the matter was, he was so relieved to be out of the group that he hadn't thought about helping anyone else. Then there was the matter of what Andrew would have done to him. He didn't answer the question, he had no answers other than that he had been relieved and afraid. \n\nThe visit lasted for almost an hour with his parents praying with Andrew's parents and offering support in any way that they could. Andrew's mother particularly appreciated the offer as none of her friends would have anything to do with the 'mother of a murderer'.\n\nAs they prepared to leave, Andrew's father finally spoke. He had said very little during the visit and if he did, his voice always had a tremor to it.\n\n\"Thank you for coming.\" He said. \"We appreciate the support.\" He then turned to Ernie and gave him a long, sad look. \"I understand why you didn't say anything to Andy- he would have killed you.\"\n\nThat absolution did little to ease Ernie's guilt, but Andrew's father was right; Andrew would have killed him. Now as he got ready for school, Ernie realized that he had a choice to make. He could go back to things as they were, meaning that he ignored Kenji and Joel or he could make a statement not in words; but in action. \n\nHe couldn't help but wonder about the rest of the group. Of the remaining core members, Duke was the most likely to succeed Andrew. It was a chilling thought. Duke was much more action oriented than Andrew had been. Had Duke been running the group one of the 'melting pot' would have been dead and he would have used Patricia to get to Kenji.\n\nErnie's mood changed dramatically at the realization of the new threat. It made his decision much harder to make. He finally decided that he had to do the right thing and that was to make his statement and hope for the best.\n\n*****\n\nIsadora packed up her books for school, ate a quick breakfast and waited for Lenny to give her a ride to school. She was anxious to find out if Maeve would accept her invitation to dinner. As she waited, she thought about the white man that she had seen at church. Apparently Bella and Lenny knew who he was, but had never met him until church.\n\n\"He lives with Brother Joshua and his wife.\" Bella told her when she asked. \"He comes from South Carolina.\"\n\n\"How did he meet them\" Isadora asked.\n\n\"He was on the same train as Brother Joshua and they started talking.\" Bella replied. \"He seems to be nice enough.\"\n\nIsadora didn't reply. She didn't care how nice he was, as far as she was concerned; he was an interloper. She immediately felt guilty. She had just done what the whites had been doing to the blacks for years. He had as much right to go to church wherever he chose as she did.\n\nShe then realized that issue wasn't so much that he was as the church; the issue was that he was a white man. She remembered her initial reaction when she saw him; the first person she thought of was... She pushed the name from her mind. She didn't need to remember him right now. She was on track.\n\n\"Are you ready to go?\" Lenny asked disrupting her thoughts.\n\n\"I'm ready.\" Isadora replied.\n\nThere was very little conversation during the drive to school. Each of them was lost in their own thoughts, but finally; Lenny spoke.\n\n\"Bella says that you want to invite someone over for dinner.\"\n\n\"It's the girl who helped me get caught up with school.\" Isadora replied. \"Is that a problem?\"\n\n\"No, not really.\" Lenny replied after a brief hesitation.\n\n\"I feel a 'but' coming.\" Isadora said looking at him.\n\n\"I just want you to be careful.\" Lenny replied. \"I'm sure that you think that this girl is your friend, but Isadora...\n\n\"Her name is Maeve and she is my friend.\" Isadora said interrupting him. \"She sat with me when no one else would. She helped me when no one else would.\"\n\n\"I understand that.\" Lenny said gently. \"I'm just thinking about the story of that white boy at school, the one who ran the hate group. I'm not saying that your friend is a part of something like that, but I am urging caution.\"\n\nIsadora's irritation diminished as she understood that Lenny was speaking as the protector of his family.\n\n\"I understand.\" She finally said, \"But Lenny, Maeve isn't a part of that group or any group like it. However, if it will make you feel better; I won't make the invitation.\"\n\n\"I'm not saying don't invite her.\" Lenny said. \"I'm just saying be careful. People aren't always as they appear.\"\n\nIsadora had to admit that Lenny had a point, but her gut was telling her that Maeve was a true friend.\n\n\"I agree with you there.\" Isadora replied. \"Thank you.\"\n\n\"Isadora, I know that Bella already told you this, but we consider you a member of our family. Our home is open to any of your friends and we're available if you want or need to talk about anything.\"\n\n\"I know and thank you.\" Isadora said softly. \"I consider you family too.\"\n\nThe drive ended with Isadora and Lenny setting a pick up time.\n\n\"Good morning!\" Maeve greeted when Isadora took the seat next to her. \"How was your weekend?\"\n\n\"It was fine.\" Isadora replied. \"Have you made any headway on your paper?\"\n\nThe expression on Maeve's face told Isadora what she needed to know.\n\n\"I don't know what the problem is.\" Maeve said. \"It isn't like I've never written a paper before.\"\n\n\"Maybe you're thinking about it too much.\" Isadora offered. \"I mean maybe you're making it harder than it really is.\"\n\n\"Maybe... but how do I stop doing that?\" Maeve asked. \"We've known about this assignment for a week and I haven't written one word. How about you?\"\n\nIsadora blushed. She didn't want Maeve to feel any worse than she did, but she couldn't lie.\n\n\"I'm finished.\" She said softly.\n\n\"Damn!\" Maeve exclaimed. \"How did you do that?\"\n\n\"Well, I not looking after my sick mother and helping to raise my brothers and sisters.\" Isadora replied. \n\n\"True.\" Maeve conceded. \"I would give anything for just one night to be able to study without interruptions.\n\n\"Maeve... would you like to come home with me tomorrow? We can work on your paper and you can eat dinner with us.\"\n\nMaeve looked at Isadora, but didn't reply for a few seconds.\n\n\"I... I don't know about that.\" She replied.\n\n\"Why not?\" Isadora asked. \"You just said that you would give anything for a quiet evening to study uninterrupted.\"\n\n\"I know, but what about the people that you're staying with? Won't they mind?\"\n\nIsadora was beginning to understand what was happening. Maeve was what her father called a 'sometime friend'. They were friends only when it suited Maeve.\n\n\"If you don't want to come home with me just say so.\" Isadora said her tone matter of fact. \"But don't give me a bunch of excuses.\"\n\nMaeve blushed as she tried to explain her position.\n\n\"It isn't that I don't want to come to your house, but Isadora haven't you been reading the papers? There's a racist group right here on this campus!\"\n\n\"So I've heard.\" Isadora replied dryly.\n\n\"I'm just saying why invite trouble? Maeve asked.\n\n\"Maeve, you sit next to me in class.\" Isadora said. \"We share our lunch; don't you think that people have already noticed? I think that it's a little too late to be worrying about inviting trouble.\"\n\n\"Yes but...\" Maeve started and then she began to giggle. \"I am such an idiot!\" she said between her giggles. \"I'm sorry. I know how my response must have seemed to you. But, you're right. I would love to have dinner at your house. Maybe we can get this stupid paper done.\"\n\nIsadora smiled, but was skeptical as to whether Maeve would really go home with her the next day.\n\n*****\n\nErnie walked into the classroom and looked around. It was decision time. When he saw Duke, he started go to his usual seat. He stopped, looked around again and saw Peter watching him. With a pounding heart, Ernie made his way to the empty seat to Kenji's right. To his surprise, neither Duke nor anyone else in the group paid him any attention.\n\nHe slid into the empty seat next to Kenji and nodded at him.\n\n\"Good morning.\" Kenji said softly.\n\n\"Good morning.\" Ernie replied noticing that Joel was ignoring him. \"Thanks for helping me the other day, it makes sense now.\" He said to Kenji.\n\n\"You are welcome.\" Kenji replied. \"As long as you remember what the basic concept is, you will be fine.\"\n\n\"But still... you didn't have to help me.\" Ernie said. \"You could have let me fail.\"\n\n\"To what purpose?\" Kenji asked. \"All that would have happened is that I would have denied the world a good doctor. But more importantly, it is time to let go of old hatreds and anger.\"\n\nJoel looked at Kenji when he heard the comment. He knew that Kenji was right, but Ernie and his friends could have ended his medical career if he had wanted to be a surgeon. On the other hand, he was awed by Kenji's capacity to forgive. Something that Kenji attributed to Patricia.\n\n\"It is she who taught me about true forgiveness.\" Kenji told him one day. \"She not only speaks of it, she lives it. If not for her I believe that I and my father would still be at odds.\"\n\nJoel then looked at Ernie and for the first time saw him differently. He didn't think that they would ever be friends, but he was beginning to understand something about Ernie. While he was a member of Andrew's group, he wasn't and had never been a true believer. If he had, he wouldn't have apologized to them at Milt's funeral and he wouldn't be sitting with them now.",
        "After class, Ernie stood up and then waited for Joel.\n\n\"Look, I know that you have no reason to believe me; but I really am sorry about what I did to you. I could have ruined your career because of something that I didn't really believe in. I just wanted to be accepted and yes, I know that isn't an excuse; but that's how it was. I'm sorry.\"\n\nJoel looked at Ernie and was going to walk away, but changed his mind.\n\n\"I understand wanting to belong somewhere.\" He said. \"I've spent most of my life wishing for that, but I didn't join a group whose beliefs consisted of hatred and I definitely never hurt anyone to meet that need. But you know; part of what happened to me was my fault. Maybe if I had stood up to you cowards it wouldn't have happened.\"\n\nJoel stopped, a look of realization crossed his face and then he chuckled.\n\n\"I just realized something.\" He said. \"I just called you a coward and that's exactly what I was. I was too afraid to stand up for myself and when I did, it was because I knew that Kenji was behind me. You're here alone... Look, we may never be friends, but let's move on shall we? I mean belaboring the past isn't going to change it is it?\"\n\n\"No.\" Ernie agreed. \"It isn't, but I just wanted to tell you again how sorry I am and to thank you for your help with this class.\"\n\n\"You're welcome.\" Joel replied and walked away feeling like a weight had been lifted from him. He hadn't realized how heavy the burden of anger had been.\n\n*****\n\nPatricia sat in her usual spot in class relishing the feeling of being back in school. Like before, no one sat with her; but she had gotten used to it. In fact, she had come to prefer it. With her luck she would have ended up sitting with a chatterbox who insisted on whispering throughout the class.\n\nWhen the instructor came in, he nodded at her and went about setting up for the class. When the class started, he made an announcement.\n\n\"In an attempt to give you all a real break from school for the holidays, I'm giving you a choice as to when you do your big paper. You can either do it early or you can do it over break, your preference. If you decide to do it early, remember the parameters that I gave you. If you don't recall, check your syllabus. If you will also remember, I told you that once the paper is handed in; it won't be returned so that you can modify it. Now, books and papers away; I have a pop quiz for you.\"\n\nEvery one moaned except Patricia. She loved the pop quizzes. To her they were part of a bigger game and a challenge. While the instructor passed out the quizzes, she thought about Kenji hoping that nothing too exciting was happening with him. The last time he had been in class Andrew Kelly had a gun.\n\nAfter class was over, she went to the library to study while she waited for Kenji and Joel. They had two more classes which gave her plenty of time to study. While she studied, she decided to see if she could get her paper done early. To have the holidays completely free of schoolwork appealed to her. The next issue was the topic. She took out a sheet of paper and began to compose a list of possible topics. After she had a list of ten topics, she began to eliminate the ones that she was sure she wasn't interested in. She stopped and looked around when she felt eyes on her.\n\n*****\n\nIsadora and Maeve decided to go to the library after class to do research for Maeve's paper. The subject of Maeve going home with Isadora hadn't come up again and Isadora had taken a wait and see stance. \n\n\"Maeve are you sure about your topic?\" Isadora asked. \"I'm not sure that you can get a five thousand word paper out of it.\"\n\n\"I'm sure and besides it's an easy topic.\" Maeve replied.\n\n\"Maybe that's the problem.\" Isadora countered. \"It may be an easy topic but it doesn't meet all of the criteria.\"\n\n\"What are you saying?\" Maeve asked.\n\n\"I'm saying that maybe we need to choose another topic. It isn't as if you have half the paper written.\" Isadora replied.\n\n\"I know, but I was hoping that Professor Clark would make an exception. He likes me you know.\" Maeve replied.\n\nIsadora rolled her eyes.\n\n\"Maeve the man is married and he's older than dirt. Has he ever cut anyone a break?\" Isadora asked. \"Remember when that student, what's his name? Anyway, he didn't get an assignment done because of a family emergency. When he told Professor Clark about it, what did he say? 'Young man, your personal troubles are not my business.' And then he failed him for not having the assignment done.\"\n\n\"Alright you've made your point.\" Maeve said with resignation in her voice. \"So what do you suggest?\"\n\n\"It needs to be something that you know about but also something that has all of the sources that he requires.\" Isadora replied.\n\nShe was going to say something else when she saw Patricia. She was so surprised to see another black female that she was briefly speechless.\n\n\"Who is that?\" She asked when she recovered.\n\n\"That's Patricia Takeda.\" Maeve replied.\n\n\"Takeda?\" Isadora asked still looking at Patricia.\n\n\"Her husband is Japanese.\" Maeve explained. \"It was them that the hate group was after.\"\n\n\"She was brave enough to marry a Japanese man?\" Isadora asked impressed.\n\n\"He goes to school here too. I think he's a medical student.\" Maeve said not noticing that Isadora had started walking away. \"Hey! Where are you going?\" she called when she realized that Isadora wasn't listening.\n\nIsadora stopped and waited for Maeve to catch up.\n\n\"Where are you going?\" Maeve asked again.\n\n\"I'm going to introduce myself.\" Isadora replied thinking that it was obvious what she was planning to do.\n\n\"You're just going to walk up to her and introduce yourself? Maybe she doesn't want to be bothered.\" Maeve said.\n\n\"You can go start figuring out what the topic of your paper is going to be if you want, but I'm going to introduce myself to her.\" Isadora said briefly looking away from Patricia to look at Maeve. When she turned back to Patricia, she was being assessed by a pair of warm brown eyes.\n\n\"Alright, I'm coming with you.\" Maeve said. The fact of the matter was, she had wanted to meet Patricia and didn't have the nerve to go up to her and introduce herself.\n\nMaeve followed Isadora to the table where Patricia was sitting and waited for Isadora to make the introductions.\n\n\"Hello.\" Isadora said with a smile. \"I'm Isadora Hughes and this is my friend Maeve.\"\n\n\"I'm Patricia Takeda; it's nice to meet you. Are you new here?\"\n\n\"Yes, I just started a few weeks ago. I hope that you don't mind me just walking up and introducing myself. It's nice to see another black woman and I wanted to meet you.\"\n\n\"Welcome and I'm glad that you introduced yourself. You're right, there aren't too many of us here. Would you care to sit down? I'm waiting for Kenji to get finished with his classes.\"\n\nA loud \"Shhh!\" From the librarian's desk momentarily silenced them.\n\n\"I would like to but we have to do research for a paper that's due on Friday.\" Isadora replied. \"Maybe we can talk another time.\"\n\n\"That sounds good and again, it was nice meeting both of you.\" Patricia said with a smile.\n\nIsadora walked away pleased. She didn't really know anything about Patricia, but she liked her.\n\n\"She was nice.\" Maeve said when they sat down at a table.\n\n\"Did you expect her not to be?\" Isadora asked.\n\n\"Well, I didn't know.\" Maeve replied. \"From what I hear, she's had a hard time especially with that lunatic Andrew Kelly and his gang.\"\n\n\"You'll have to tell me about it sometime.\" Isadora said. \"But for now we need to get going on your paper if you're going to get it done by Friday.\"\n\nPatricia was deep in thought for several minutes after Isadora and Maeve left. She had the feeling that she and Isadora were going to be good friends.\n\n*****\n\nSaul went to work as usual and did his job speaking to very few people. Even after being there for weeks he had made no real friends. The blacks ate lunch together leaving him to eat lunch alone. It wasn't that they were overtly rude to him, but they made it clear that he didn't belong. During his free time he practiced his vocabulary, spelling the word and then putting it into a sentence. \n\nThe day was progressing as usual until after lunch. A large family was disembarking from the train. One of the luggage men, a small man by the name of Harry ran up to greet them.\n\n\"Welcome, can I help ya with your luggage?\"\n\nThe woman of the family pulled the youngest child closer to her as if he was going to be snatched away from her. The other four children stared at him as if he were an animal at the zoo. They were intrigued but frightened.\n\n\"Sure boy!\" The man of the group said.\n\nSaul watched as the man kept adding bags to Harry's already overloaded arms. To his credit, Harry didn't complain until his arms began to shake from the weight.\n\n\"Beggin' your pardon suh, but I can't carry no more.\"\n\nThe man looked at Harry with a disgusted look on his face.\n\n\"I know what you're up to boy! You figure on making two trips so that I have to pay twice and tip you twice.\"\n\n\"No suh, I be glad to make another trip at no charge.\" Harry replied. \"Just let me take these to your car.\"\n\n\"Why? So you can run off with it?\" The man asked heatedly.\n\nSaul looked around wondering if any of the other luggage boys were going to offer any help. He was shocked to see that they had all averted their eyes not wanting to get involved. He started forward when he felt a firm hand on his arm.\n\n\"Leave it be.\"\n\n\"But he needs help!\" Saul said. \"He's going to drop the luggage and he'll lose his job!\"\n\n\"And you can lose yours if you get in the middle of it.\" Another voice said.\n\nSaul looked around and saw that some of them really wanted to help Harry, but was too afraid to, they all had families and needed their jobs. So did he, but right was right. He pulled away and ran toward Harry just as the first bag began to slide from the top of the pile in his arms.\n\nHe put on a burst of speed and just narrowly missed catching the bag; but was able to stop the others from falling.\n\n\"Look what you did!\" The man yelled.\n\n\"I... I'm sorry suh!\" Harry stuttered. \"It was an accident.\"\n\n\"You did it on purpose! I refuse to pay for your incompetence!\" the man yelled drawing attention to him and Harry.\n\nIn a flash of insight, Saul understood what was happening. It was the same thing that would have happened no matter which one of the black luggage boys went to help the family. The man had no intentions of paying. He knew that his word would be taken over that of a black worker.\n\n\"Sir, please allow me to help with your luggage. Between the two of us we can get it to your car in one trip and you won't have to tip or pay extra.\" Saul said.\n\nThe man looked at Saul as if seeing him for the first time.\n\n\"I'm not paying for any of it!\" the man sneered. \"He dropped our luggage...\"\n\n\"No sir he didn't.\" Saul interjected. \"It slid off and you kept adding luggage after he told you that he would make another trip.\"\n\nHarry looked on in shock as Saul jumped to his defense. No white man had ever done that for him.\n\n\"Where is your supervisor? And what is a white man doing in a nigger's job?\" The man demanded angrily.\n\n\"I'll be happy to get Mr. Bates and to bring him out here after I tell him that you deliberately gave Harry more than he could carry.\" Saul replied.\n\n\"Sam just pay them and let's go. The children are tired and hungry.\" The woman said softly.\n\nThen man stared at Saul for several long seconds before speaking.\n\n\"I'm only paying once and no tip.\"\n\n\"That's fine sir.\" Saul replied as he took some of the luggage from Harry and then picked up the piece that had fallen to the ground.\n\nIt turned out that there hadn't been much more and between the two of them they managed to get it to the family's car. The man grudgingly paid them as he muttered under his breath and then drove away.\n\n\"Thank you.\" Harry said quietly.\n\n\"You're welcome.\" Saul replied. \"I know that you need your job.\"\n\n\"So do you.\" Harry replied looking at him. \"Why'd you help me?\"\n\n\"I made a promise to someone.\" Saul replied. \"It was someone who helped me when he didn't have to. I guess you can say that I'm repaying him.\"\n\nFrom that day forward, Harry and Saul became a team and friends. During their lunch breaks, Saul began teaching Harry what Joshua was teaching him. What Saul didn't realize was that someone had watched the encounter with the passenger.\n\n******\n\nFinally it was time for Christmas break. Isadora excitedly packed her luggage while Maeve sat on the bed watching her.\n\n\"I wish that I was going somewhere.\" She lamented.\n\n\"Where would you go?\" Isadora asked.\n\n\"I don't know... maybe with you to see where you live.\" Maeve replied. \"I've always been curious about the south.\"\n\n\"I can tell you that there isn't a whole lot in Greenville, but its home and I miss it.\" Isadora said as she placed a small brightly wrapped package in her suitcase. \"What are you going to do with your time off?\"\n\n\"Nothing much.\" Maeve replied. \"I guess I'll get a jump on next semester's reading.\"\n\n\"That's a good idea.\" Isadora replied. \"I'm planning to do the same thing and who knows? I might even get a paper or two written.\"\n\n\"You work entirely too hard.\" Maeve said. \"Why don't you take time off and enjoy your family?\"\n\n\"I'll do that too, but I have goals.\" Isadora replied. \"If I want to graduate early and get into the law program, I have to keep pushing myself.\"\n\n\"I understand, but don't you want a social life?\" Maeve asked.\n\n\"I'll worry about a social life when I've reached my goals.\" Isadora replied. \"As soon as I'm done with law school I'm going back home.\"\n\nThat surprised Maeve.\n\n\"Really? I thought you liked it here.\"\n\n\"I do, but I have unfinished business there and besides; you can come visit me.\" Isadora replied. \"Are you going to Kenji and Patricia's for the Christmas party?\" she asked changing the subject.\n\n\"It depends on whether dad is working or not.\" Maeve replied.\n\n\"Are they still upset that we're friends?\" Isadora asked.\n\n\"Let's just say that we don't talk about it.\" Maeve replied with a small smile. \"I'd better get going.\" She said looking at the clock. \"Dad needs the car and I'd better not be late getting it back.\"\n\nIsadora walked Maeve to the car and hugged her.\n\n\"I'll see you when I get back.\"\n\n*****\n\n\"Kenji stop eating the cookies!\" Patricia said slapping at his hands. \"Between you and Ralph there won't be enough for the party!\"\n\nKenji grinned and snatched another cookie from the cookie sheet and then kissed her.\n\n\"It was nice of you to invite Ernie.\" She said kissing him back.\n\n\"He is lonely.\" Kenji said. \"And he has a good heart.\"\n\n\"Well, at any rate, it was still a nice thing that you did\" Patricia replied. \"After the party is over we need to sit down with your mom and Nick and ask what they want for the wedding dinner.\"\n\n\"I don't think that they will care, but we'll ask.\" Kenji replied. \"Are you prepared to study for three classes instead of one?\" \n\n\"I think so.\" Patricia replied. \"I have to admit that I'm nervous about the science part of it.\"\n\n\"You will do fine.\" Kenji said rubbing her back. \"Remember that you have me, Joel and Penny to help you. Also, much of it is memorization which you have no problems with doing.\"\n\n\"Just think, you'll be done next year!\" Patricia said. \"There was a time when this was all a dream that kept us going when things were bad.\"\n\n\"Yes, but we always believed.\" Kenji said. \"In a few short weeks we will celebrate another anniversary and a wedding. Both of which I am looking forward to.\"\n\n\"So am I.\" Patricia replied.\n\nThey were interrupted by shouts and then a cry of pain coming from the back yard. They looked at each other and took off running.\n\nRalph was sitting on the ground holding his head. Blood ran between and over his fingers. Marie was standing behind him and to the left of him holding a rock in her hand. A toy lay on the ground between them. \n\n\"Ralph?\" Patricia called as they ran toward him. \n\nKenji got to him first, knelt on the ground in front of him and gently removed Ralph's hands from his head.\n\n\"Let me see.\" Kenji said gently.\n\nRalph allowed his hands to be moved and tried not to cry.\n\n\"It isn't as bad as it looks.\" He assured Patricia. \"Head wounds always bleed more making them look worse than they are, but he's going to need stitches.\"\n\n\"What happened?\" Patricia asked. \"Why did Marie hit you with that rock?\"\n\n\"It doesn't matter now.\" Kenji said. \"Let's take care of Ralph and then we will get to the bottom of this.\"\n\nMarie had dropped the rock and was softly crying. She knew that Kenji was angry even though his voice was soft. Patricia took her by the hand while Kenji carried Ralph into the house.\n\n\"Kirei bring me some clean cloths and the small bag under our bed.\" Kenji said as he further examined the laceration. \"Ralph look at me.\" Kenji said. \"Do you feel dizzy?\"\n\n\"No papa, my head just hurts.\" Ralph replied.\n\n\"Alright,\" Kenji said. \"If you start feeling ill you must tell us even if you have to wake us up. Do you understand?\"\n\n\"Yes Papa.\"\n\n\"Good... Now you have a deep cut on your head and I have to clean it. It will hurt, but I must make sure that all of the dirt from the rock is out.\"\n\nMarie stood back watching. Tears ran down her face as she watched Kenji gently begin to clean the cut on Ralph's head. She hadn't meant to hurt him, but she wanted the toy that he had been playing with. He told her that if she would wait a few more minutes, she could have it; but she didn't want to wait.\n\nShe sobbed out loud when Ralph let out a cry of pain as Kenji cleansed the wound. Not knowing what else to do, she went to Ralph and held his hand. Instead of giving her an angry look for what she had done, Ralph tried to smile at her. That seemed to make what she had done even worse.\n\n\"How many stitches do you think he'll need?\" Patricia asked as she held Ralph's other hand.\n\n\"No more than four.\" Kenji replied. \"Kirei at the bottom of the bag there is a small bottle of numbing agent. Please get it out for me.\"\n\nWhile Kenji talked to Ralph about what he was going to do, Patricia got the suturing supplies out. She inspected each package to make sure that there weren't any tears or anything that would compromise the sterility of the instruments. Next she filled the sink with hot soapy water so that Kenji could wash his hands.\n\n\"Are you ready?\" Kenji asked a calmer Ralph.\n\nTwenty minutes later, Ralph was the owner of four neat stitches and Marie was sitting in Kenji's lap.\n\n\"Why did you hurt your brother?\" Kenji asked.\n\nTears that had stopped began again at Kenji's softly spoken but firm question.\n\n\"I don't know.\" She said after a moment. \"I didn't mean to.\"\n\n\"Marie,\" Kenji said. \"You could have hurt Ralph very badly. Do you understand that? I don't know what caused the disagreement, but it doesn't matter. What matters is that you hurt your brother. This is not to happen again.\"\n\n\"Yes papa.\" Marie said through her sobs.\n\n\"Now go to your room and do not come down until your mother or I say that you can.\" Kenji said.\n\nMarie climbed down from Kenji's lap and headed for the stairs. On her way she stopped by the couch where Ralph sat looking at a book having already recovered from the trauma of getting stitches.\n\n\"I'm sorry.\" She said through her tears.\n\n\"It's ok.\" Ralph said smiling at her.\n\nKenji and Patricia watched Marie go up the stairs and sighed.\n\n*****\n\nIsadora double checked her luggage to make sure that she had everything. She looked at the little box that contained the names as well as some other keepsakes. After thinking about it for a few minutes, she sat at her desk and wrote the names on a slip of paper and put it in one of her text books. She didn't need the paper to remind her of the names, but the visualization helped. ",
        "She put the latest copies of the law journals in her bag and pronounced herself ready to go. Her heart hammered with excitement at the thought of going home. Everyone was going to be there including her brother and his new wife who were supposed to be moving north. From what she could gather, the move had been delayed because of unforeseen circumstances as far as the living arrangements. The move wouldn't happen until the spring. In the meantime, her brother and wife were living with her parents. It would be crowded, but she didn't care.\n\n\"Isadora are you ready to go?\" Lenny called into her room.\n\n\"I'm ready!\" She called back as she picked up her carry on valise.\n\nTwo hours later, she and Noah were at the train station. Lenny was in the process of unloading the car when someone behind them spoke.\n\n\"May I help you with your luggage?\"\n\nIsadora turned around and came face to face with Saul. She had only seen him once since the first time he came to church and hadn't spoken to him the second time either.\n\nShe expected Noah to say no to the offer of help since there were three of them and was surprised when he accepted.\n\n\"What's your name boy?\" He asked.\n\n\"Saul sir.\" Saul politely replied.\n\n\"Are you aware that you're doing what is considered nigger work?\" Noah asked his tone matter of fact.\n\n\"That's what I keep hearing sir.\" Saul replied.\n\n\"Do you mind?\" Noah asked his voice holding an intensity that both Lenny and Isadora recognized.\n\n\"No sir, it's a job no matter who's doing it. I'll take that bag...\"\n\nAn hour later, they were on the train. Isadora found herself curious about the white man who on occasion attended a black church and now was doing work that most people considered menial and for black people. What impressed her was that he meant what he said and that he wasn't embarrassed by his job. \n\nIsadora glanced over at Noah Jackson and wondered what he was thinking. She almost asked, but decided not to. She wasn't in the mood for a game of verbal chicken.\n\n*****\n\nErnie was surprised by the invitation to the party at Kenji and Patricia's house. He only saw them at school and had never interacted with them on a purely social level. He was so surprised that he didn't immediately respond.\n\n\"It is an informal gathering.\" Kenji said. \"The students from the summer program will be there as well as a few friends.\"\n\nErnie thought that he had heard wrong. Had Kenji really used the word friend?\n\n\"It will start at five pm this Saturday if you would like to attend.\"\n\n\"I would like that.\" Ernie said, \"I would like that a lot. Am I supposed to bring anything?\"\n\n\"Just a dish to share and yourself.\" Kenji replied.\n\n\"I'll be there.\" Ernie said smiling. \"I'll ask my mom to make her pumpkin roll.\"\n\n\"Whatever you bring will be fine.\" Kenji said with a smile.\n\n****\n\nThe day of the party, Ralph and Marie were taken over to John and Hattie's house to spend the day and night. Since the incident with the rock, Marie had been more subdued. Kenji and Patricia weren't fooled. They knew that it was only a matter of time before she was back to her rambunctious self. Kenji and Patricia gave each child the usual admonishments to behave themselves before they left the house.\n\nWhile Kenji was gone, Penny and Joel arrived to help set up for the party. Penny helped Patricia in the kitchen while Joel started setting up the table and chairs.\n\n\"I'm going to be taking more classes next semester.\" Patricia said as she stirred the pitcher of lemonade.\n\n\"So I heard.\" Penny replied. \"If you need help with anything let us know.\"\n\n\"Thanks and I'll probably take you up on your offer especially where the science is concerned.\"\n\n\"No problem.\" Penny replied. \"Is Isadora coming?\"\n\n\"No, she's going home for the holidays but Maeve is supposed to be coming.\" Patricia replied.\n\n\"Patricia, what do you think happened to her?\" Penny asked. \"Isadora I mean. She's so intense.\"\n\n\"I don't know if anything happened to her.\" Patricia replied. \"I think that she's very focused on her goals as we all are and she wants to succeed. But why do you think something happened to her?\"\n\n\"I don't know.\" Penny replied. \"It's just a feeling, but maybe you're right. Maybe she is just focused. So what's left to do?\"\n\n\"The only things we're missing are the food that the others are bringing.\" Patricia replied. \"We could help Joel set up.\"\n\nKenji was back a few minutes later, shooed Penny and Patricia away and helped Joel with the set up. An hour later, the first guest, Maeve had arrived carrying a platter of fresh vegetables.\n\n****\n\nErnie nervously dressed for the party. Several times he almost changed his mind about going. It was one thing to go to school and sit with Kenji and Joel, but another thing altogether to see them on a social basis. Every time the thought occurred to him, he felt ashamed. He realized that on some level he was still afraid of being seen with them and that his attitude was racist even if he didn't mean it to be.\n\nFinally he decided to go. He found it odd that he jumped into a friendship with Andrew and stayed with it even after he knew what Andrew was about. Now he was hesitant to accept a friendship with people that he knew were good.\n\n\"Why is that?\" He asked himself out loud.\n\nIt was still a racial thing he realized. On one level he still thought of them as the melting pot. Ernie grappled with the knowledge that deep down he did have some of the same beliefs that Andrew did. It was a very uncomfortable feeling. That if anything was the reason why he decided to go.\n\n\"The pumpkin roll is in the fridge.\" His mother said when he came down the stairs.\n\n\"Thanks.\" Ernie replied.\n\n\"We're very proud of you son.\" His father said looking up from his newspaper.\n\n\"Why don't you invite your friends over for dinner sometime?\" His mother asked. \"We would like to meet them.\"\n\nThere it was again- that word-friends. It was the second time in a week that if had been mentioned in the same sentence as Kenji and Patricia. Not one to put a lot of stock in signs, Ernie took this as meaning that he needed to cultivate that friendship.\n\n\"I'll ask them.\" Ernie replied. \"I'd better get going.\"\n\nThirty minutes later, he was standing on the front porch. He took a deep breath and rang the doorbell. As he waited for someone to answer, he wondered why he was so nervous. It then dawned on him that by going into their home, the dynamics of their relationship would change. Once he did that, he was making another decision that there was no changing his mind on. He didn't have a chance to think about it any further. The door was opened by a woman that Ernie didn't know.\n\n\"Hello, are you here for the party?\" Maeve asked.\n\nErnie was suddenly tongue tied. He didn't say anything, but held out the pumpkin roll to her.\n\n\"I guess that's a yes.\" Maeve said with a pleasant smile. \"Come on in. Kenji and Patricia are in the back and I've got door duty.\"\n\n\"How do I get there?\" Ernie asked recovering from his brief speechlessness.\n\n\"Go through the living room and the kitchen. The door to the back is to the left.\" Maeve replied handing him the pumpkin roll. \"Give this to Patricia or Kenji.\"\n\nErnie made his way to the back yard where the final preparations for the party were in progress. \n\n\"Ernie!\" Patricia called. \"I'm glad that you came.\n\nKenji walked over and gave him a small bow before offering his hand.\n\n\"Welcome to our home.\" He said.\n\nWhatever reservations Ernie had about going to the party disappeared at those words. Later, he and Joel had a chance to talk.\n\n\"I didn't think that you'd come.\" Joel said.\n\n\"To be honest with you,\" Ernie replied, \"I almost didn't.\"\n\n\"Why did you change your mind?\" Ernie asked.\n\n\"The short answer is that I would have regretted it if I hadn't. I realized something about myself that I didn't like.\" Ernie said. \"I realized that to some degree I agreed with Andrew. I was going to let those beliefs destroy what could be a really great friendship.\"\n\n\"So you came so that you could prove to yourself that you aren't a racist.\" Joel said dryly.\n\n\"I would be lying if I said that that had nothing to do with it.\" Ernie replied. \"But the biggest reason why I'm here is because you, Kenji and Patricia are the kind of friends that someone would be lucky to have. I understand that we may never be friends, but-I would like to try.\"\n\nJoel was surprised by Ernie's honesty, but he wasn't ready to call him a friend just yet.\n\n\"We'll see.\" Joel replied and walked away.\n\n*****\n\nAndrew looked down at his prison uniform with a mixture of disgust and anger. The blue chambray shirt had his register number nine-two-seven stamped on the back of it. The blue and white trousers left nothing to be desired and web waist belt that also had his register number on it was the ugliest thing that he had ever seen. \n\nThe reality of what his life was going to be like didn't hit him until he saw the uniform. All of the things that he had taken for granted were gone including how to dress.\n\n\"These are your uniforms.\" The guard handing the uniforms out said. \"The shirt is to be buttoned up to the top. The sleeves are to be worn down and buttoned. The belt must be worn in such a way that your register number is in plain view. You may wear a cap and Jacket if you wish...\"\n\nAndrew's eyes burned as the guard continued with the list of rules. His life was no longer his own. A tear trickled down his cheek as he undressed and put on the prison uniform. He choked back a sob when the realization that he was no more than just a number sunk in. \n\nThis was now his life. He was now wondering if it wouldn't have been better to have died.\n\n********\n\nBy the end of 1949 bills were proposed to make lynching a federal crime and to end segregation in interstate transportation. Neither bill is brought to a vote in the Senate.\n\nThe Reverend Billy Graham has revival meetings in Los Angeles.\n\nTed Poston, one of the few Afro-American reporters working for a white newspaper wrote an article about \"The negro press\" In the Reporter.\n\nThe average price of a movie ticket was forty-six cents.\n\nMao Zedong announces the establishment of the People's Republic of China.\n\nHideki Yukawa is the first Japanese to win a Nobel Prize.\n\nMore than six million Japanese were waiting for repatriation in the ports of Asia and the Soviet Union. Many died due to lack of food, medical care and disease.\n\nJoseph Stalin tries to prevent the Korean War.\n\n********\n\nThank you all for your patience and to Donalde for beta-reading for me. I hope to have the next chapter done sometime in the next couple of weeks barring anything earth-shattering happening. Thanks again!!"
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "racism",
        "japanese",
        "black female",
        "post ww2",
        "interracial romance",
        "interracial drama",
        "historical",
        "historical romance",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-14"
}