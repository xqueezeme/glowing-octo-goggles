{
    "title": "The Bet Ch. 02: The Challenge",
    "pages": [
        "Disclaimer: Like most lit stories this one would fit in multiple categories. This story has exhibitionism, and light bondage. If those aren't your thing, stop now and find another story.\n\n*****\n\n(Michael)\n\n\"I never thought about it that way,\" I laughed. \"So tell me more EVA,\" I said, playfully emphasizing her name.\n\nWhat would you like to hear about MICHAEL?\" she said with the same playful emphasis.\n\n\"I want to know sexy stuff, talk dirty to me, tell me a fantasy. Tell me your best sexual experience.\"\n\n\"You don't ask for much do you?\"\n\n\"You're the one who started this.\"\n\n\"True enough. But you haven't told me anything. I think it's your turn to talk.\"\n\nI looked at her for a moment. Shrugging, I said, \"Oooooorrrrrrrrrr I give you a full body massage as you tell me more about you.\" She sucked in her breath as she looked at me.\n\n\"Damn, you know I have a weakness for massage.\"\n\nI raised my eyebrows at her.\n\n\"I hate you.\"\n\n\"Yeah I know, but it's a win-win. I get to molest you while pretending it's for a massage and I hear some sexy stories while you get the experience of my magic hands.\"\n\nRaising her eyebrows, \"Magic hands?\" she said doubtfully. \n\n\"I'm not saying I'm spectacular at giving massages, but I will say I've never had a complaint.\"\n\nShe rolls her eyes so I hop up from the couch and went to get a towel and massage oil. On the way back, I adjusted the lighting to a dull glow, and then laid the towel out on the floor of my living room. I walked over to her and held out my hand. She looked up as she put her hand in mine. I gently pulled her up to a standing position. At 5' 7\" she was a hand width below my six feet. For a moment we stood staring in each other's eyes. \n\n\"You ready?\" I asked.\n\nShe nodded, \"How do you want me?\"\n\n\"Naked and moaning my name in pleasure.\"\n\n\"What?\"\n\n\"Huh, oh, nothing, I said take off the shirt and lay down on the towel.\"\n\nShe eyed me for a moment, \"Yeah, I must be hearing things. I thought I heard something else.\"\n\nShrugging innocently, \"Nope.\"\n\nShe turned her back and quickly pulled off her white spaghetti strap tank top. With a quick glance over her shoulder, she laid down on the towel. \n\nFor a minute my eyes roamed over her, admiring her body, lingering on the curves and valleys. The soft light gave her tanned skin a golden glow. The only thing she was wearing was a white cotton thong, leaving her entire backside on display. She had impossibly long, well-toned, shapely legs. They reached the cutest little ass I'd ever seen. Firm and round, each cheek was beautifully defined, begging to be grasped while framed by the flare of her hips and the tight curve of her waist. There was a visible cleft between her cheeks and legs and her body had the musculature of someone who worked out hard and often. \n\nShaking my head, I couldn't believe my luck. She was one of the most gorgeous creatures I'd ever seen and she was half naked in my living room. \n\nI thought back to when I first met her. It had been at a party thrown by my motorcycle club, I had waited to talk to her because I'd just gotten out of a bad relationship, plus every guy there was hounding after her, so it had been months later that we'd finally talked. \n\nShe cleared her throat, \"You going to stare all day or are you going to massage me?\"\n\n\"Sorry.\"\n\n\"Yeah, I'll bet.\"\n\n\"Can you blame me for admiring the view? It's pretty incredible.\"\n\n\"Hmph, thank you,\" she said. \"Now get to massaging if you want to hear any more stories from me.\"\n\n\"Yes ma'am.\"\n\nI straddled her butt and poured some oil into my hands and spread it over her back. For a few minutes I worked in silence rubbing the oil into her skin. Her body was a strange mixture of hard muscle and soft skin, her muscles tight and rippled as I dug my fingers in. She moaned softly while I worked.\n\n\"I'll take that as an agreement of my 'magic hands.'\" \n\n\"Mmmmm, okay okay, I admit, they're awesome, they're great, all hail your magic hands. Don't stop.\"\n\nLaughing, I said, \"As long as you keep talking.\"\n\n\"Fine, what do you want to hear next?\" she asked.\n\n\"Tell me something crazy.\"\n\n\"This is between us, right? You're not going to tell everyone are you?\"\n\n\"Never, scout's honor.\"\n\n\"Okay, I guess I can trust you at this point. I'm something of an exhibitionist.\"\n\n\"Really?\"\n\n\"Yes, I like to wear sheer summer dresses and bright thongs. I like it when guys walk behind me and see that I'm wearing a red or pink thong or whatever color I happen to have on. I've had a few comments on it and it always makes me laugh.\"\n\n\"What do they say?\"\n\n\"Nothing crazy, mostly stuff like 'nice panties or something,' I'll look at them and wink, it's fun being naughty. I love showing off my ass,\" she said. \"I like wearing very short skirts and flashing my panties when I sit down.\"\n\n\"You like to show off your body, huh?\" \n\n\"I work out too much and too hard not to show it off,\" she replied. \"I also love wearing sexy panties. I like cute ones, sexy ones, sheer ones, I love saying the word 'panties' in conversation. Each has a different personality for when I wear them. I wear sheer ones with skirts so that if anyone catches a peek, they may see my racing stripe. I like wearing thongs and low-cut jeans so that when I bend over anybody to the side or behind me can see that I'm wearing a thong and what color it is. Sometimes I like bikini cut panties, they make me feel cute. I like wearing them with a white t-shirt or wife beater as I walk around my apartment. I like to wear the shirt tight, so that my nipples harden and poke out. I like to leave my curtains open a little, it turns me on a little to think I might get seen.\" \n\n\"Wow, that's sexy,\" I said. \"Ever had somebody see you?\" \n\n\"A few times, also there was one pizza guy ...\" she trailed off.\n\n\"Sounds interesting, tell me more.\"\n\n\"God, I can't believe I'm telling you this story. It happened while I was still active in the Marine Corps. I was a sergeant and had my own apartment out in town.\"\n\nAt that moment I scooted down her legs and dug my hands into her ass. She gasped and tightened her cheeks as I worked my fingers into them. She let out another low moan as I continued to massage her butt. I was getting hard so I shifted and worked on her sides pushing my thumbs into her cheeks, her hips flexed ever so slightly in time with my ministrations and her breathing became ragged. \n\nSeeing her caught up in the moment and wanting to test how much I could get away with I paused, reached for her waistband and without warning tugged her panties down to below her ass. I then resumed massaging as if I had done nothing out of the ordinary. \n\nShe froze for a second, but as I continued her massage, she resumed her happy squirming and enjoyed herself. Beginning her story. \n\n\"So one day, I finished running a marathon. It was early spring and the first one I'd ever done so I was dog tired. On the way home I decided to get a pizza for lunch and stopped by a local place called Michelangelo's. I ordered a pepperoni and jalapeno and the cashier told me it would be 20 minutes. I was exhausted and really didn't feel like waiting.\"\n\n\"I asked him if he would deliver it to my house. The cashier kind of looked at me funny, he was six-foot, dirty blonde, lean and good-looking.\"\n\n\"After a shrug, he told me no problem and I told him I'd see him in thirty.\"\n\n\"I winked at him as I left the store.\"\n\n\"I don't know what had gotten into me, but I was definitely in a mood. I went home, stripped and hopped in the shower. When I got out, I wrapped a towel around me and tried to decide what to wear. I wanted to tease him. I thought about answering the door naked, but was I worried that I might get raped that way,\" Eva laughed.\n\nI agreed, \"Yeah, I would have a hard time not raping you if you did that.\"\n\n\"I was thinking about how far I wanted to go. T-shirt and panties, bra and panties, a t-shirt, but I'm still in a towel and I guess I didn't notice the time because while I'm trying to decide the doorbell rings.\"\n\n\"I went and looked and it was him, so I decided to go with what I had on. It was a normal dark blue bath towel and when I pulled it tight and rolled the top it barely covered my butt.\"\n\n\"I opened the door and there he was with my pizza.\"\n\n\"I told him, 'Wait here, I'll get you a tip.'\"\n\n\"I grabbed the pizza and as I walked away, I practically felt his eyes on me, I made sure to bend over as I put the order on my counter and got money. He didn't know it but I saw his reflection in the window in my kitchen and he was staring the whole time. I felt the draft so I knew he had at least a partial view of my ass.\"\n\n\"It was a thrill knowing he was looking, it felt sexy and controlling. When I handed him the tip, I was a little surprised he talked to me.\"\n\n\"He told me, 'By the way, I'm Rick and if you ever want another pizza delivered call me directly, here's my number.'\"\n\n\"Then he handed me a paper with his number.\"\n\n\"You trusted him that quick?\" I asked.\n\n\"He seemed to understand the game, he didn't act rash and he didn't try to touch, he just looked. Since I knew where he worked and he'd already been to my house it seemed safe,\" Eva said.\n\nBy this time, I was on her side and rubbing her legs, I massaged her calves and she wiggled her butt a little.\n\n\"You going to pull my panties up or leave them like this all night?\" Eva asked.\n\n\"Actually, I was going to pull them down,\" I laughed. Eyes wide, she quickly looked over her shoulder at me. \"But I suppose if you'd prefer, I'll pull them up.\"\n\nI tugged her panties back into place on her hips, but I made a mental note that she'd made no move to grab them when I had said I was going to pull them down.\n\n\"Continue your story.\"\n\n\"After that it became a thing, every few weeks I'd text him directly for a pizza and he'd deliver it.\"\n\n\"The next time I called for a delivery was a couple of weeks later, I put on a white t-shirt and a pair of white cotton thong panties with little red hearts all over them. My t-shirt was a midriff and barely came to my belly button.\"\n\n\"When I opened the door, I played it cool like nothing out of the ordinary was happening. Then I did the same routine, grabbed the pizza and told him I'd go get his money. When I walked away, I put a little extra sway in my hips and made sure to bend over when I put the pizza on the counter and grabbed the money. I stayed that way for a second then I looked back over my shoulder. 'I only have twenties, do you have change?' Sure enough, he was staring at me again but he just smiled when he saw I'd caught him.\"\n\n\"Uhmmm, what?\" \n\n\"I said I only have a twenty, do you have change?\"\n\n\"Yeah, uh, I think so.\" \n\n\"He reached for his pockets as I walked back to him. 'Never mind, keep the change, for the tip.'\"\n\n\"I don't really need more of a tip ma'am.\"\n\n\"No ma'am's, at this point I think you can call me Eva.\"\n\n\"Eva it is.\"\n\n\"We never texted conversations or chatted by phone, but every few weeks I would ask if he was working and he'd tell me. If he was off or anything, I would wait till the next time he was working.\"\n\n\"We had fun with it and I kept escalating my outfits.\"\n\n\"Like what?\" I asked.\n\n\"One time I had a really thin and worn shirt, very see through, I'd tied a knot in it so it exposed my midriff and I played with my nipples right before I opened the door, they were nice and hard and poking out and I was wearing a tiny black string bikini panty that barely covered my ass.\"\n\n\"We chatted as I took the pizza and got the money. After the first time he didn't try to be clever, he would openly stare at me.\"\n\n\"'Love the shirt' was all he said when I gave him the money.\"\n\n\"How long did this go on?\" \n\n\"About six months, I got creative with the outfits too. I cut a wife beater till it barely covered my nipples, it showed a lot of underboob and the smallest bit of brown areola below my nipples. That got his attention, he made a point to talk to me for a while as I stood in my doorway wearing pink thong panties and a shirt that barely passed as a dishrag. We talked a little bit more each time, I'd chat with him while he checked me out. I texted him once if he had a request, so the next time with my pizza was a small package, he told me to open it after he left, inside was a red silk midriff babydoll and g-string with a note to wear this next time.\"\n\n\"So I did, he g-string was sheer so I shaved completely smooth for him. He saw everything, it left nothing to the imagination, that time he took his time talking to me, we chatted for 30 minutes or longer, I managed to top it afterward though, I answered the door wearing a towel like I did the first time except this time I was only holding it in front, I was wet haired and dripping so I told him to carry the pizza inside for me and put it on the table, and I turned around to lead him so my bare back and ass were on display. That really got his attention, when I went to give him the money, he refused, said he'd been tipped enough.\"\n\n\"I'll bet. Why did it end?\"\n\n\"Like I said, each time we'd chat a few minutes and he found out I was military. One time I texted him to see when he could deliver again. He replied, \"I have a confession, I haven't worked there the last two times you've ordered, I go pick up a pizza and bring it to you. I leave for boot camp on Monday, so this is my last free weekend.\"\n\n\"Is this my last delivery?\"\n\n\"Sorry, but yes, be proud though, you've inspired me to join the Marines.\"\n\n\"I am proud. Do you have any last requests?\"\n\n\"Aren't last requests whatever the person wants?\"\n\n\"Usually.\"\n\n\"I want you to wear a pair of black fishnet stockings and a garter belt.\"\n\n\"What else?\"\n\n\"Nothing.\"\n\n\"Oh really? I don't know about that.\"\n\n\"It is a last request.\"\n\n\"We'll see. I can't guarantee, but I can promise you won't be disappointed.\"\n\n\"What did you do?\" I asked.\n\n\"I gave him his last request. When I opened the door the only thing, I was wearing were black thigh high stockings and a garter belt. His eyes almost popped out of his head. I invited him in, and when he put the pizza on the counter and turned around, I attacked him.\"\n\n\"Really?\" \n\n\"Yep, I told him, 'Since it's your last night before your life changes forever I'm going to give you a night to remember.'\"\n\n\"After that... we'll say he left in the morning worn out and doing the walk of shame,\" she laughed.\n\n\"Wow, what'd you do to him?\" I asked.\n\n\"More like what I let him do to me, and it was everything. I let him do whatever he wanted, missionary to start, I left some scratches on his back for that, then I let him take me hard, doggy style as he pulled my hair, after that it was nice and slow as I rode him like a cowgirl, and then we took a shower together. I gave him a blowjob while in the shower, and when we finally got out of the bathroom we passed out. He woke me up in the morning by giving me oral and that really got me going so I rolled over and did sixty-nine with him. I mean really? Is there a better way to wake up?\" \n\n\"I went to the kitchen wearing a shirt to get us some cereal for breakfast, when he came in the room, I bent over the counter showing him my butt to tease him, he grabbed me and took me right there against my kitchen counter. That was the last one, after that he had to go. \"\n\n\"Did you guys ever talk again?\"\n\n\"No, the only thing I ever got was a letter, it had a picture of him after graduating boot camp, on the back it said 'You're my motivation.' I still have that picture in a drawer with some other photos. Thinking of him always makes brightens my day.\"\n\n\"You ever find another pizza guy?\" \n\n\"No, it was a one-time kind of thing, we happened to understand each other and everything clicked like it should. It wouldn't be as fun or the same if I ever did it again. Plus, in the weirdest sort of way I'd feel like I was cheating on him if I ever did that with someone else.\"\n\n\"That story is very sexy.\"\n\n\"You don't think it's bad?\"\n\n\"Hell no, I'm a freak, I love stuff like that,\" I said. \"If you were my girl, I'd love for you to tease and show off and flash people. I'd take you to a topless beach and have you wearing only a thong bottom.\"\n\n\"Really?\" she asked.\n\n\"Yes, I love it when the girl I'm with shows off her body.\"\n\n\"Most girls like it you know, look at all the websites out there. I don't mean porn, I mean showing off sites, the Chive, Instagram, Tumblr, and dozens of others. How many thousands of girls send in pics of themselves in their underwear? We like to feel cute and sexy and wanted.\"\n\n\"How could you ever not feel sexy and wanted?\" \n\n\"Here's a tip for you. No matter how hot she is, every girl feels insecure about something and we all have our moments when we think we're hideous cows.\"\n\n\"I'll remember that,\" I told her.\n\nWe were silent for the next few minutes as I concentrated on massaging her body. I'd finished her legs while she was talking and now was working her back. \n\nWith her eyes closed and her body relaxed, my hands pressed gently but firmly on her. Each hand separated, as I pressed up to her neck and down to the top of her thong panties, the only covering of her nakedness. Then I slid my hands across her back from side to side to her small groans and moans of pleasure.\n\nFinally she spoke, \"I've been telling you everything and you've told me nothing.\"\n\n\"What do you want to know?\" I asked.\n\n\"What's your favorite kind of sex?\"\n\nBarely pausing to think, \"My favorite position is doggy style and I like to dominate.\"\n\n\"Dominate?\" she asked. \"How do you mean?\"\n\n\"My absolute favorite thing is to tie a girl down and make her mine.\"\n\n\"Oh, so there's a little Fifty Shades of Grey in you, huh?\" \n\n\"Oh yeah, more than a little.\"\n\n\"Tell me.\"\n\n\"Okay, to begin with I'm not into latex or whips or anything, but I do like to tie a girl up. Either spread eagle to a bed or hogtied or even tied to a chair.\"\n\n\"Sounds sexy.\"\n\n\"I think so, once she's tied, I like to dominate. I like to give oral until she begs for mercy. I want her to know she's all mine. I want her to beg me to take her.\" As I talked, I'd massaged her butt and I noticed she shifted slightly again as I spoke about tying a girl up. \n\nPlaying a hunch, \"Have you ever been tied up?\" I asked.\n\n\"A few times,\" she replied.\n\n\"Did you like it?\"\n\n\"I like the idea, but I don't think the person that did it really knew what he was doing. The first time I was tied it was too tight and I lost circulation pretty fast. The next time it was too loose and I knew I could get free and that ruined the effect. The third time was somebody else and it was just right, but all he did was tie me up and then fuck me. No foreplay or teasing or anything. The whole incident lasted less than ten minutes.\"\n\n\"They were idiots. I promise if I tied you up it wouldn't be too hard or soft and it would last longer than ten minutes.\"\n\nLooking over her shoulder at me, \"I do admit to having a seriously kinky fantasy about being tied up.\"\n\n\"Really?\" I asked trying to keep my voice casual. \"Tell me about it.\"\n\n\"I want to be tied up by somebody who doesn't have the right to tie me up.\"\n\n\"Not sure I follow that.\"\n\n\"For example, if we dated and had sex and you tied me up that would be okay, I'd let you, but in my fantasy, I want to be tied up by somebody that I didn't let or agree to tie me up.\"\n\n\"Like a rape fantasy?\" I asked.\n\n\"Like that, but I don't want to be raped. I want a cute sexy guy to tie me up and strip me naked. Maybe somebody I met at a bar or something.\"\n\n\"But you don't want to be raped?\"\n\n\"Nope, only admired, I want to be helpless as he takes my clothes off. I want to feel as my panties are slowly lowered down my legs and I'm struggling but I can't do anything to stop it.\"\n\n\"That's pretty hot.\"\n\n\"I want to be on display, he can molest me a little but I don't want to be mauled. I want sexy touching.\"",
        "\"Good luck finding that.\"\n\nLaughing, she agreed. \"I know. The scenario would be pretty hard to make happen. A stranger who's hot, that only ties me up and molests me in a sexy way, that's pretty impossible to find.\"\n\n\"Maybe.\"\n\n\"What kinds of things would you do if I was tied up?\" she asked.\n\n\"Hmmm... oral, lots and lots of oral. I'd lick you until you screamed my name, then I'd gag you and keep on licking until you were thrashing around so hard, I'd be afraid you'd hurt yourself.\" Her breathing stopped for a second as I described the scene. She gulped and I laughed at her reaction. \"Like that idea, do you?\" \n\n\"Hmph.\"\n\n\"After that I might ungag you and rape your mouth, I'd lace my fingers in your hair and hold you in place until I cum.\"\n\nShe looked back at me and I had the satisfaction of watching her eyes go wide. \n\nI told her, \"If you were good, we might have sex then.\"\n\nHesitantly, she said, \"Wou... would you untie me first?\"\n\nLaughing, \"Why would I do that? I'd want to use you more after that.\"\n\nHer ass shifts more as we talk, she seems to be getting a little worked up by the idea. \n\n\"Would you do any...\" she cleared her throat, \"Anything else?\"\n\nI shift to straddle her butt again then silently reach over and grab her wrists and bring them behind her back. With one hand I pin them there and with my free hand I grab her hair, firmly but gently pulling her back and then twisting her head. I bend down and gently nip her right ear while holding her helpless. As I nibble her ear, she struggles unconvincingly but in the position I have her in she has no leverage and is helpless. She moans when I move from her ear to her neck. \n\nI lick and nibble at her neck as she sighs and continues to fight me. \n\n\"Not fair...anything else?\" she breaths. \n\nIn between my assault on her, I murmur things I'll do.\n\nI nip, she pants. \n\n\"Of course...\"\n\nI kiss, she groans. \n\n\"All sorts of things...\"\n\n\"I'd use ice on you...\"\n\nI ran my tongue along her skin, her breath quickened. \n\n\"I'd use a feather...\"\n\n\"Or maybe a rose petal...\"\n\n\"Oh god,\" she groaned. She struggled a little harder but my body locked her in place with my weight keeping her pinned. Her skin was warm pressing against me and I saw the flush of arousal on her body. \n\n\"I'd have you begging as I tortured you with pleasure all night long. I'd make you tell me you belonged to me before I'd give you any release.\"\n\n\"You'd tell me how I owned your body and you'd do anything I want as long as I took you,\" I said.\n\nI pulled a little harder on her hair and she whimpered. I looked her in the eyes.\n\n\"Somebody's turned on.\"\n\nBreathing hard, she glared at me. \"I wouldn't give up. I'd fight you.\"\n\n\"Good. That's half the fun,\" I replied.\n\n\"You can't just do what you want with my body.\"\n\n\"Want to bet?\"\n\nAt that moment I released her, but latched my mouth onto her neck, gently gripping her with my teeth. Even as she realized she could move she stayed still, her body's only response was to moan while her head sunk forward. After a minute, I let her go and got off her body and sat beside her.\n\nSlowly, she looked up at me. \"That was cheating.\"\n\nI laughed. \"Don't blame me because you're weak.\"\n\n\"Hmph... Like you could resist if I did that stuff to you.\"\n\n\"Well, pinning me wouldn't work for you. I'm a dominant, not a submissive.\"\n\n\"I mean if I went after all your weak points.\"\n\nI said, \"While I'd love it, if I decided it wouldn't work then it wouldn't work. I told you, I'm not like most guys. I have willpower.\"\n\n\"Yeah, right.\"\n\n\"I'm serious. When it comes to will, I'm in a class by myself.\"\n\n\"Easy to say, hard to prove.\"\n\n\"How do you want me to prove it?\" I asked.\n\n\"Let me think.\"\n\n\"Why do I sense another bet coming on?\" \n\nBiting her lip, she looked at me. She seemed to be contemplating, after a minute, I saw her eyes light up. \"Not a bet, a challenge.\"\n\n\"I'm listening.\"\n\n\"I think I can break you.\"\n\n\"Oh really,\" I said doubtfully.\n\n\"Yeah, so I get to see how worked up I can get you. I get to do whatever I want in order to get you to have sex with me. All you have to do is resist.\"\n\n\"WHY THE HELL WOULD I RESIST HAVING SEX WITH YOU?\" I exclaimed.\n\nShe laughed at my reaction. She held up one finger. \"One, to prove you're Mister Super Willpower.\" She put up another finger. \"Two, because you're going to put your bike on the line.\"\n\nI looked at her fingers. Mimicking her, I held up my hand, raising a finger. \"One, are you insane?\" Raising another finger. \"TWO, ARE YOU INSANE? Why would I do this? You're basically asking me to give you my bike for sex.\"\n\n\"So sell it to me instead. I have $6,000 saved. If I win, you sell me the Hayabusa in the garage for that,\" she replied.\n\nBrow furrowed I paused to think about it, I'd only bought the bike for $8,000 so it wasn't too ridiculous of a deal. \"Keep talking.\"\n\n\"Look at it this way, if you lose, you're going to have me doing anything you want,\" she said.\n\n\"Is that what you're putting up?\" I asked.\n\n\"Yes. If I win and you cave, I'll do anything you want me to do. Just think, you'd have a girlfriend that's willing to give you whatever you want.\"\n\n\"A girlfriend, huh?\"\n\nShe blushed bright red, \"Well... uhm... I meant...\"\n\n\"No, I like the girlfriend part.\" \n\n\"Of course, it kind of doesn't make sense. How is it if you win, I get whatever I want?\" I asked.\n\n\"Okay, so I get to tease you however I want and if you cave and have sex with me, I get your bike, BUUUUT you still get to have sex with me however you want.\"\n\n\"So basically, right now I could say 'fine you win,' and then I'd get to do whatever I want to you?'\"\n\n\"Yes, but if you did, we'd know that I am stronger than you.\"\n\n\"But if I have you doing whatever I want and am tying you up and molesting you at will, won't I be the top?\"\n\n\"Oh, you'll always be the top in public, but we'll know that between us, you're weak and that I own you,\" she growled. \n\nSmiling sweetly, she continued, \"We'll know that my pussy is the one thing you couldn't resist, that Mister Super Willpower, Mister I'm-all-discipline, Mister Badass Marine couldn't resist little ole me.\"\n\n\"Wow, using my pride against me, that's good\" I said shaking my head.\n\n\"You started it,\" she replied.\n\n\"I guess this means you belong to me.\"\n\nAt that, she looked down. \n\n\"I mean I guess, if you...uh...want,\" she mumbled.\n\nI reached over and grabbed her chin gently forcing her to look up into my eyes. \"I very much want that.\"\n\nShe tried to look away.\n\n\"But we still have some negotiating to do. You want to prove you're stronger, right?\" I asked.\n\nShe shrugged, \"I guess, why?\"\n\n\"Well you have to be up to the same challenge.\"\n\n\"How's that going to work?\" she asked.\n\n\"Every other day,\" I said. \"We each get a day. You get tomorrow, and I get the next day, and so on and so on. I get to do whatever I want to you on my days and you get to do whatever you want to me on your days. First one to break down is the loser.\"\n\n\"Wait I didn't ag \u2014\"\n\nI held up a hand and cut her off mid-sentence, \"I know it wasn't what you were thinking, but I'm not going to have you teasing me forever without being able to do something to you in return. That's the deal, take it or leave it.\"\n\nShe paused. \"I guess that means no seeing other people, right?\"\n\nI looked her in the eye, \"That's right,\" I said seriously.\n\n\"In that case... I can try it.\"\n\nConfidently I said, \"Besides, it's not like you're really putting up anything. If you lose only you and I know that you find me irresistible.\"\n\nShe glared at me, \"Oh hell no.\"\n\n\"Also, this way we don't have to have a time limit. The other way I would've only agreed to two weeks or so.\" \n\n\"This way we can go on forever and the first one to cave is weak,\" I pushed my face to within inches of hers. \"And that person will always know who owns who.\"\n\nLaughing, eyes bright, \"Oh, it's so on Michael. I'm going to have you begging me to fuck you.\"\n\n\"We'll see,\" I said. \"Where are you going to sleep tonight?\"\n\n\"I'll stay in the spare room tonight, but tomorrow, no holds barred.\"\n\nI stuck out my hand, \"Fine, then we start tomorrow, you'll go first, deal?\"\n\nBiting her lip, she looked down at my hand then back up at me, reaching out she grabbed my head and pulled me in close. \"Deal,\" she whispered, then her lips locked onto mine.\n\n*****\n\n\"Wakey, wakey.\"\n\nGroggily I opened my eyes to low morning light peeking through my curtains and...\n\nDEAR GOD!\n\nMy body jerked and I came fully awake in a heartbeat.\n\nEva was straddling my chest above the covers. While this in itself wasn't alarming, what got my attention was her outfit.\n\nHer dark brown eyes were alit with mischief and her black hair was combed and hung freely in waves past her shoulders with the ends reaching her chest. She was wearing a black camisole top that barely covered her breasts and was remarkably sheer. Her tits were full and round and strained against the material of her top, I saw her dark brown nipples and lighter aureole, they were quarter sized and clearly visible. Her nipples were erect, hard little nubs of flesh begging for attention and betraying her own excitement. My body reacted and in seconds I was as hard as a rock.\n\nWith difficulty I tore my eyes away from her chest and the magnificent view and continued my inspection. \n\nHer taut stomach had the barest muscle definition and a silver studded emerald was piercing her belly button. My eyes kept going down to the smallest panties I had ever seen. Her sex was about a foot away from me and I had a remarkable view of the same sheer black material as her top. The small triangle of fabric wasn't big enough to make a good post-it note and it didn't quite cover her neatly trimmed black pubic hair. The top of her racing stripe peeked above her panties in the most tantalizing way and I clearly saw her lips through her panties. I didn't think I could get harder, but my dick was so hard right then that it hurt. \n\nShe was silent the whole time I examined her, finally she started wiggling on my chest.\n\n\"Like my outfit?\" she asks. \"I wore these just for you; no other guy has seen me in these panties.\" \n\nWhile she talked, she hooked her thumbs into the sides and tugged them back and forth slightly teasing her lips in and out of view for quick flashes. She loved my attention, the acknowledgement of her beauty. I knew she could have anybody, but she wanted to show me.\n\nI groaned. \"I'm not quite sure those even qualify as panties.\"\n\nShe pouted, \"You don't like them?\" she asked in a little girl voice.\n\n\"You know damn well I love them.\"\n\n\"Good, since we're in full swing on our challenge I thought I'd give you a chance at some awesome morning sex.\"\n\nI groaned again.\n\nPulling the covers down to my waist, she leaned forward and put her hands on the mattress on either side of my head. Her face was inches from mine, I felt the warmth of her minty breath against my skin. Her nipples grazed my bare chest through the fabric of her top, it was electrifying.\n\nI watched her lips open slightly, soft and pink with the gleam of little white teeth behind them. This close I saw the pulse at the base of her throat beating softly. Her eyes locked on mine and she pushed forward to kiss me. Her lips were incredibly soft, and her tongue moved lazily inside my mouth. My senses were suddenly in overdrive, every neuron in my body aware of her and what she was doing; the pressure of her body against mine, the sweetness of her breath and the taste of her mouth.\n\nA slow rumble came from my chest as she broke our kiss.\n\nWith a devil's grin, she whispered, \"I hope you don't give up so easily, I've barely started. You wouldn't want me to think you're weak, would you stud?\"\n\nSteeling myself, I looked her in the eyes. \"I can resist.\"\n\nStill grinning, she said, \"We'll see.\" She pulled up and hopped off the bed, then turned her back and I saw the panties were a g-string. She bent from the waist and her legs were apart a little so that her ass was projected backwards.\n\nThe sight of her perfect apple shaped butt drove me insane but before I could grab her ass, she grabbed the covers and pulled them away. I reflexively pulled them back toward me. Her eyes widened and she growled at me as she slapped my hand away. \"Hey, I own you. You have to let me do whatever I want, got it?\"\n\nI stared at her, then resignedly let go of the covers.\n\nShe kept looking at me for a second, then she reached down and gave a quick scratch of her nails against the muscles of my chest.\n\n\"Hey!\"\n\nShe arched an eyebrow at me. \"That's for thinking I don't own you.\"\n\nI glowered.\n\nWithout taking her eyes off me she pulled back the covers.\n\n\"Oh my,\" she breathed, looking down. \"You sleep naked.\"\n\nShe admired my body for a few moments. As a Marine, I kept in shape and was leanly muscled with tanned arms and legs from spending a lot of time outdoors. Prominently displayed was my manhood, at attention, and as hard as an iron bar.\n\nReaching her fingers down she stroked my cock a few times, her hands were soft and warm and caused me to groan again.\n\n\"Hi there big fella, don't worry, the second we break Daddy, you and I are going to play. I'm going to take good care of you,\" she said.\n\nI involuntarily flexed against her hand as she stroked me and talked to my cock like it was a separate part of me.\n\n\"Oh, Daddy likes that,\" she said.\n\nBiting her lip, she looked back into my eyes and then crawled on top of me. She placed her panty covered mound right on top of my dick. \"Mmmmmm, I like that,\" she said as she wiggled a little bit.\n\nI was already so worked up that her wiggling damn near had me cumming right then. Quickly, I put my hands on her butt trying to keep her still. At this point I felt every inch of her soft, warm body pressed to me.\n\nOnce again, our faces were inches from each other as she let me hold her tight, the tension grew until it was almost palpable. She leaned forward and kissed the edge of my mouth.\n\nPulling her head back, she whispered, \"You want me.\"\n\nShe kissed the other edge of my mouth.\n\n\"You can have me.\"\n\nShe kissed my chin.\n\n\"All you have to do is tell me to fuck you.\"\n\nShe traced her slim tongue against the edge of my jaw.\n\nContinuing in her breathy whisper, \"Then we could have sooooo much fun.\"\n\nShe nipped my ear.\n\n\"We could fuck all day long...\"\n\nShe traced her tongue back along my jaw toward my mouth.\n\n\"Or make love, your choice, you'd own me...\"\n\nShe nibbled on my neck making me groan.\n\n\"Just think, you could tie me to the bed for our first time.\"\n\nShe traced her tongue to the opposite side and then gave me another nibble.\n\n\"I'd be helpless as you took me, or you could tie me up and lick my pussy as long as you wanted. I'd be begging you to fuck me.\"\n\nShe paused, looking me in the eyes. \n\n\"Imagine how sexy it would be. We'd spend all day in bed licking, sucking, loving... fucking.\"\n\nShe kissed my lips softly, \"I'd let you use my mouth.\"\n\nHer tongue darted out to trace my lower lip. \"After you took me the first time, you could leave me tied to the bed and then, when you're ready you could use my mouth...\"\n\nI swallowed, barely able to think straight as she kept up her verbal and physical assault. \n\nShe traced my upper lip with her tongue, \"I'd be soooo helpless, you could put it in my mouth and then hold my head in place like you own me,\" she growled. \"Then, as you slowly fuck my mouth, all I'd be able to do is moan and wiggle my ass. Maybe use my tongue as much as possible and when you cum I'd have to swallow all of it.\" She moved her mouth next to my ear, her soft breath tickling my ear as she kept describing what she wanted. \"God that'd be hot wouldn't it? I'd be yours, all yours. Don't you want to fuck me? Don't you want to lick my pussy?\" she whispered coyly. She ground against me, the soft skin of her cheek rubbing against my face while the strands of her hair brushed against my body.\n\n\"You know I do,\" I croaked.\n\nStill rubbing her body against me, \"Tell me, tell me you want me to fuck you and I'm all yours, whenever, wherever you want.\" She nipped my ear again. \"Tell me...\" she whispered.\n\nHer eyes flashed in the dim morning light as she seized a handful of my hair and levered me up so she could look me in the eye.\n\n\"TELL ME!\" she growled.\n\nI groaned at my weakness.\n\nShe let my hair go, leaned back, put her hands on my chest and looked me in the eyes.\n\n\"Tell me and I'll strip naked and ride you for the next hour. Then I'll spend the day naked, no matter who comes over. I'll be your naked little house maid, you can invite friends over and I'll serve dinner wearing only high heels.\"\n\nMy eyes went wide at her suggestion, she knew how to turn me on, and involuntarily I ground back at her. \n\n\"Somebody likes that thought,\" she said as my cock pushed against her. \"Take off my panties.\"\n\nI was a heartbeat from obeying her, but I knew if I did, I'd lose, so I froze.\n\nShe kept grinding against me for a few seconds before she realized I stopped.\n\nFinally, she stopped too. Looking at me she laughed, a throaty little sound that promised almost as much as the sight of her body does. \n\nClosing my eyes, I fought to get my emotions back under control. After a minute I looked at her, my breathing back to normal.\n\n\"Well, I'm a little surprised, I wanted you to give in, but I admit I'd be a little disappointed if it was that easy,\" she said. \"Looks like you'll make it worth my while.\" With those words she hopped off of me. She looked down at my dick and stroked it with one finger. \"Poor baby, maybe next time Daddy will let you play.\" She bent over and planted a quick kiss to the top of my shaft.\n\nTurning, she walked away, \"Get dressed, you're taking me to breakfast,\" she said as she opened the door and with a final flounce of her perfect ass she was gone.\n\nI took a few minutes to get myself under control after she left, getting up I threw on some shorts and a sleeveless gray USMC shirt. I walked to the living room and found her waiting for me. Surprisingly she was wearing black baggy sweat pants and an oversized gray sweat shirt.\n\nShe ignores my confused expression, \"Let's go, you're taking me to Ginger's, it's a little diner not too far from here.\"\n\nWe drove in silence, and when we got there, she dragged me to a back corner.\n\nFrom habit, I studied the area around me. Too many combat tours had me always checking my surroundings, studying everybody and looking for exits.\n\nThe diner was a medium sized place with old time rustic d\u00e9cor and was half filled with customers. She pushed me toward our booth where I sat against the wall with her facing me. A few seconds later a waitress came to get our drink orders. I snagged a menu but Eva put her hand on mine preventing me from opening it.\n\n\"I got this,\" Eva said looking at the waitress. \"Two orders of special French toast, coffee and...\" she paused to look at me.\n\n\"Milk.\"\n\n\"Coming right up,\" the waitress said.\n\n\"Trust me, they have the best cinnamon French toast in town.\"\n\n\"Sounds great,\" I said looking around some more while she talked.\n\n\"So, you seem surprised at my outfit this morning.\"\n\n\"A little,\" I admitted. \"I figured you'd be tormenting me with sexy outfits and stuff all day. I guess breakfast is neutral.\"\n\n\"Not quite.\"\n\nShe looked over her shoulders then back at me. Slipping her hands beneath the table I watched her wiggle around for a few seconds. Finally, she brought her hands up.\n\nAlarmed, my eyes widened, she was holding her sweatpants!\n\n\"Are you...?\"\n\n\"Yep.\"\n\nI looked around to make sure nobody was watching us. The coast was clear so I bent over and peeked under the table, her legs were completely bare.\n\nComing back up, \"You're wearing shorts or something, right?\"\n\n\"Look again.\"\n\nI did, she'd pulled up her sweatshirt to her midriff and the only thing she was wearing for bottoms were the sheer black panties.",
        "Coming back up I stared at her, \"Are you crazy?\"\n\nLaughing, she held up two fingers about an inch apart, \"Little bit.\" She threw the pants in my lap. \"Hold these for me till we get home,\" she said tugging her sweatshirt back down.\n\nI don't know why it turned me on but it was sexy talking to a girl that I knew was pantless in the middle of a public diner.\n\nWe casually chatted while waiting for our food but halfway through she pulled her arms into her sleeves without saying a word. She fiddled around for a few seconds and then pulled her head into the shirt.\n\nFinally breaking my chain of thought, \"You ok? You need any help or anything?\"\n\nHer head popped up a second later, \"Nope.\"\n\nShe stretched her arms back out into the sleeves back to normal.\n\nI had an idea what she'd just done but still eyed her warily, \"What was that?\"\n\nShe opened her mouth but paused as the waitress came with our food and took care of us. After making sure we had everything we needed she told us to wave her down if we needed anything else.\n\nI looked at the cinnamon French toast and Eva threw something dark at my chest. I grabbed it and held it up, it was the camisole.\n\nI hurriedly stuffed it into my pocket, \"I can't believe how crazy you are.\"\n\n\"You have no idea,\" she replied and tossed her panties to me.\n\nI laughed.\n\n\"Right now, the only thing you're wearing in this restaurant is that sweatshirt?\" \n\n\"Yep, now dig in.\"\n\nShe ignored me and focused on eating, I had a little trouble at first because I kept imagining her half naked body, but soon I was eating as easily as her. We kept talking and before long we'd finished our meal.\n\n\"What now?\" I asked.\n\nShe shrugged.\n\n\"You're going to walk out like that?\" \n\n\"Unless you want me to take off the shirt too.\"\n\nLaughing, \"As much as I would love that, we'll save it for another day. I meant what are we going to do the rest of the week?\" \n\n\"I don't know, you tell me,\" she replied.\n\n\"Well, you have the rest of the day to torture me,\" I said, making little air quotes on torture. \"But I'll be out of town tomorrow till Friday evening.\"\n\n\"I have to wait till Saturday to experience your day of torture,\" she said, making her own air quotes.\n\n\"I guess so.\"\n\n\"Well, let's get out of here so I can finish driving you crazy for the day,\" she smirked. \n\nWe stepped out of the booth at the same time. Facing each other, I looked in her eyes and saw her resolve together with other emotions...power, mischief, and excitement. For a moment longer she stood in front of me, her eyes on mine, and then, deliberately, she turned her back on me and reached behind her. She pulled up the hem of her sweatshirt to the middle of her back.\n\nWith her front to the crowd, nobody could tell that she was exposing her ass to me. I took it all in, the little curve under each buttock that defined the roundness of her cheeks, and the neat little crease where the crack of her butt began.\n\nBiting her lip, she looked over her shoulder.\n\nI rolled my eyes, then reached back and brought my hand forward.\n\nSMACK\n\nThe sound vibrated through the air to those closest to us.\n\nShe yelped, jumped and dropped her hands, closing off my view.\n\nA few diners looked at us as I moved by her toward the door. She ignored everybody and pretended like nothing happened but her eyes were wide and her lips were pursed as we left the diner. One man tipped his head as we passed him.\n\nOnce outside she rubbed her bottom while glaring at me the whole as we walked to the car.\n\n\"Oh my God, you're such a bastard,\" she said. \"I think you left a mark, cause my butt's burning.\"\n\nI laughed, \"Get used to it, if you like I'll check for you.\"\n\nWe'd reached the car, and she once again lifted the back of her sweatshirt. Her ass had a perfect red handprint on it, I pulled out my iPhone, snapped a picture, then showed it to her.\n\n\"That's so you remember you're mine now.\"\n\nHer eyes burned, \"Send it to me.\"\n\nThe rest of the day was spent at home. At first, I thought she was going to leave me alone to study and do schoolwork, and for the most part she did. Instead of copying her earlier seduction technique she waged total psychological warfare. \n\nI sat on the couch with a few of my law books to study. After a few minutes she came in wearing the camisole and thong panty and lay down on her belly on the carpet and played on her laptop computer. She pulled her ankles behind her butt and crossed them, swaying back and forth as she played. \n\nIt was distracting having a half-naked seductress right next to me throughout the day. No matter where I went, she followed, always half clothed and showing off her body. She took to stretching her arms above her head every time she stood. Each time her top would lift showing me lots of underboob. Once her nipple caught the cloth and I got a flash of her dark brown nipple before she noticed and slowly pulled her shirt down. Later, while watching television together she lay on the opposite side of my couch and kept one leg curled next to her and the other hooked over the top of the cushion. She left her legs spread wide open and stroked herself slowly through her panties for more than an hour. I had no idea the plot of the movie because I never took my eyes off her. She never looked at me, just watched the movie the whole time. \n\nFrustratingly, her plan was genius, get me worked up at the beginning of the day and then keep me in suspense all day long. I didn't think it was possible but I was hard the entire day and I had to fight to keep myself from grabbing and ravaging her, but I knew if I did, she'd never let me forget it. It was a battle of wills and I was determined not to lose. \n\n*****\n\nI thought I'd get relief being away from her for a few days but the next week was no different. She sent me a barrage of dirty texts and sexy selfies every day. Even though we technically were supposed to alternate days and I get mine at the end of the week we'd never said anything about cell phone use. I knew any arguments would be useless so I endured her cruelty.\n\nEvery day I got a picture of the panty and bra she was wearing, followed by her work outfit. Admittedly, it was sexy knowing what she was wearing, a black g-string, hose and garters underneath her pencil skirt and work blouse. A matching sheer red set and a sporty hot pink cotton thong and sport bra for her workout were used. I felt like I knew a dirty secret, like when you see a beautiful girl in a professional workplace and you wonder what she is wearing underneath and you find out its super slutty or sexy. One day she sent me pics of her bare thigh and texted that she was going commando and to think of her. That was when I knew I was dating Satan, it was driving me insane! \n\nSomehow I made it through the week and got back home Friday night to find her waiting in my driveway. Mercifully I was too tired to be teased and after a welcome home kiss we went into my house and straight to bed.\n\n*****\n\nI stood next to her bed wearing a pair of black sleep pants taking a moment to admire her beauty. She had beautiful long, dark eyelashes, sultry eyes, full luscious lips and high cheekbones, her breathing was deep and even and her hair was tousled from sleep so that she looked the picture of innocence. Asleep or awake her features combined to give her a radiance that filled a room. I knew better, I knew the reality of deviousness that she hid. \n\n\"Wakey, wakey,\" I said, mimicking the way she woke me days ago.\n\nHer eyes opened sluggishly and focused on me as her sleep deprived brain registered my presence. \n\n\"Murnin,\" she mumbled.\n\n\"Good morning to you too,\" I said. \"Time to start your day.\"\n\nShe blinked her eyes a few times and tried to sit up... To find she couldn't move. Frowning, she looked back and forth at her hands, they were pulled and tied to either corner of the bed with soft white cotton rope. She flexed her arms and struggled but found no give in the restraints. She looked down towards her feet and I saw watched the covers move and I knew she was testing her legs, finding out they were tied to either corner too. After a minute she realized she was securely tied and helpless. \n\nLooking at me, \"Damn! Why do I have the feeling I'm in a lot of trouble right now?\"\n\n\"You have no idea,\" I joked. \n\nWe stared at each other for a moment.\n\n\"I've waited a long time to do this.\"\n\n\"What? To tie me up?\"\n\n\"And to finally see you naked,\" I said. \n\nI reached down and pulled the comforter off of her. \n\nShe gasped and her eyes went wide, she fought against her bonds again for a few seconds again but gave up after realizing she could only wiggle her butt a little.\n\nI was proud, I had done a good job, not only was she was helpless she was completely naked! \n\nShe was a vision with a lean muscular body. She had tanned skin with lighter triangles on her body showing that she wore a bikini often. Her tits were a firm C cup with dark brown nipples that were hardening as I watched and she had a neat racing stripe of black hair on her sex.\n\n\"I'm impressed,\" she said still struggling. \"These are good knots.\" \n\nShe looked at her hand closest to me and twisted it. It was strong with no give but didn't cut into her skin.\n\n\"I told you when I tied you up that it wouldn't hurt,\" I said. \"For the record, you sleep like the dead. I was worried it'd be hard to do this without waking you but I was wrong, nothing wakes you.\"\n\nShe glared at me, \"Yeah, well I'm not really trained to wake up when I'm being stripped and trussed up.\"\n\n\"By the way, did you know you snore?\"\n\n\"I DO NOT!\"\n\n\"And drool.\"\n\nShe arched her back as she thrashed and pulled while trying to get free. \n\nPanting she looked at me, \"I DO NOT DROOL OR SNORE.\"\n\nLaughing I watched her chest heave, it was very distracting, \"Looks like I hit a nerve with that. Somebody else tell you the same thing?\"\n\nShe didn't reply but her lips compressed into a thin line.\n\n\"You should stop that, I love the look of an angry girl.\"\n\nI sat on the edge of the bed and reached my hand and grasped her hair and held her in place as I bent toward her. She tried to pull away but I held her firm and our lips met. She let out a little whimper as my tongue licked her lips. Her resistance melted and she kissed me back with passion.\n\nOur tongues played together, teasing, sliding, twirling. I gradually released my grip on her hair but she kept her lips locked with mine. \n\nWith my opposite hand, I traced the muscles on her stomach to the curve of her breasts. She moaned as I teased her. Her skin was warm and her breathing became heavier as I drew lines back and forth on her breasts, circling her nipples, then lightly caressing them. I gave one a small pinch and she whimpered. Finally, I broke our kiss and leaned back. \n\nShe swallowed as we stared at one another.\n\n\"Now for the fun stuff.\"\n\nI reached into my pocket and pulled out a black silk sash, her brow furrowed as she eyed it warily.\n\n\"What's that for?\" she asked.\n\n\"To gag you,\" I reply.\n\n\"Wait, wha...\" \n\nI slipped the sash around her and tied it firmly in place. She resisted as much as possible but in the end, I had her tightly gagged.\n\n\"In case you're wondering why I'm doing this since it obviously makes it hard for you to give up if you can't say anything right?\" \n\nShe twisted her head and let out a few unintelligible noises as she tried to loosen the gag but gave up and nodded her head in agreement while giving me a dirty look. \n\n\"It's because for the next hour or more I don't care if you want to give up or not. I plan on driving you wild no matter what you say.\"\n\nHer eyes widened as I lifted my eyebrows and gave her an evil smile. She watched as I moved to the bottom of the bed and slid between her legs. I was inches from her pussy, I smelled her arousal and her lips were engorged from excitement, still looking in her eyes I nipped her inner thigh.\n\nShe whimpered and wiggled her butt in response, trying to get away. I nipped the other side. Tracing my tongue slowly up her thigh to her sex, I moved to the other side and did the same. As my tongue touched her mound she groaned. \n\nI broke eye contact and began to trace her pussy, slowly up, over and down using the tip of my tongue. She threw her head back and whimpered as she thrust her butt up, trying to force herself against me. \n\nI continued to tease her pussy, staying on the outside, tracing her lips, licking, nipping and keeping light pressure against her. She was panting and kept trying to thrust her hips up as I licked her. I knew she wanted it harder but I kept the pressure light and teasing. She whimpered and wiggled her butt, and I saw her hands open and close grasping the air in frustration. Finally, I gave her a long slow lick and even gagged her moan was loud.\n\nI was unrelenting as I drove her wild with desire, her hips matched the rhythm of my tongue as she thrust against me. She increased her pace and her body tensed, I knew she was about to cum. I pulled back and sat up, her eyes were closed in concentration and her hips kept thrusting before she realized I'd stopped, after a couple of seconds her eyes snapped open.\n\nShe looked at me and tried to yell through the gag but could only make angry noises. She nodded her head towards her pussy trying to signal me to continue. \n\n\"No way am I letting you cum that easy,\" I said. \"I plan on keeping you on the edge for a long time.\"\n\nShe growled and thrashed against her bonds uselessly in frustration.\n\nI stood back and watched as she as she continued to thrust and twist in an effort to get off, eventually her struggles slowed, when she'd calmed down enough, I sat next to her. \n\n\"This time we're going to try something different.\" \n\nI pressed my hand against her and to tease her, she tried to ignore me but quickly responded to my touch. She was still wet and my finger slid into her easily. I made a motioning gesture with my finger, curling it and stroking her on the inside, she was panting again and pushed against my hand. Rapidly I worked her up again, like before I watched her breathing and thrusting get stronger and stronger and right as she was about to cum, I stopped and pulled away from her. \n\nShe cried out in frustration and strained against her bonds, her nipples rock hard, hair disheveled, and her body glistening with a fine sheen of sweat as she squirmed and tried to get free. From the hate in her eyes, I knew if she did get free, I was likely to be attacked if not outright killed for the torture I was inflicting on her.\n\nEight times. \n\nEight times I took her to the edge and backed off. Each time she threw more of a fit and struggled harder. I was worried that she was going to hurt herself.\n\nI varied my technique. The third time I brought out a small pink vibrator that I'd bought for the occasion. That one brought her to the edge so quickly that she almost orgasmed before I pulled it away. I teased her mercilessly for two hours with my tongue, hands and toys. By the end the sheets were soaked with sweat and in complete disarray from her thrashings. I had teased her constantly and she lay there, exhausted, panting and glaring at me with what could only be described as pure hatred. \n\nI left the room and came back with a bottle of water. I sat beside her a and undid the gag, she'd almost bitten through the material and soggy from her experience.\n\n\"Sip this,\" I said as I held the water to her lips.\n\nShe tilted her head up as held the water to her lips.\n\n\"Don't worry, I'll unite you in a minute.\"\n\nShe nodded and continued to drink.\n\nWhen her breathing slowed and she appeared normal, I untied her from the bed, after her restraints were off, she lay there, too exhausted to move. \n\n\"You know I'm going to make you pay for that right?\" she croaked. \"I'm going to beat you like a tetherball.\"\n\nI laughed.\n\n\"You think I'm joking but I'm not.\" Taking another sip of water, she went on, \"I know that was part of the bet and I have to take it, but that was by far the evilest thing I've ever had done to me. I don't know when or how, but I swear to god I will get you back.\" She sat up and swung out of bed. \"I'm going to go take a shower now.\"\n\nI admired her ass as she walked away.\n\n\"I'll join you,\" I said, hopping up to follow her.\n\nShe gives me a dirty look so I remind her, \"You have to let me or that means you've given up and can't handle it.\"\n\nI knew she wanted to protest but had no legitimate answer so she turned and walked to the bathroom.\n\nWhen we got into the shower together, I grabbed the soap from her hands and gently lathered her up. She stood under the water with her eyes closed as I massaged the soap into her back. I cupped her butt and she let out a small moan of pleasure, bending over I lather her legs and feet.\n\n\"Turn around.\"\n\nTurning so the water rinsed her back, I was suddenly eye level with her sex. I continued my attention and soaped the front of her body. She stood motionless, head bowed as I gently caressed and soaped her entire body. I softly kissed her lips when I finished and she looked into my eyes. Without a word she took the soap from my hand and proceeded to wash my body. Nothing was said as she lathered soap over my skin and afterward, we toweled each other off.\n\n\"What now?\" she asked.\n\n\"I got some clothes for you today.\"\n\nNaked we walked back into my room and I pulled out a small package from my dresser drawer. I held up a sheer violet thong and small white sundress. \n\nShe took the sundress from me and held it up to the light, \"I can see my hand through this.\"\n\n\"I know.\"\n\nShe shrugged, \"If it doesn't bother you, it doesn't bother me.\"\n\nShe slid on the panties and struck a modeling pose with one hand on her hip and the other running through her wet hair.\n\n\"How do I look?\"\n\n\"Magnificent, I wish I could keep you like that all day.\"\n\nShe let me get an eyeful and then slipped on the dress, \"This is probably the most see-through dress I've ever worn outside a night club.\"\n\nI looked down and had to agree, her thong was clearly visible through the transparent fabric. \n\nIt wasn't quite indecent but it was pretty daring, it also barely covered her. \n\nShe twirled and bent over and modeled it for me in various other poses. When the light stuck just right, I easily saw the color of her underwear. I also saw the hint of her nipples and when she bent over, her ass cheeks and thong came on parade. \n\n\"Do you like?\"\n\n\"I love,\" I replied. \"But the model is what makes it beautiful.\"\n\nHer cheeks reddened and came over and kissed me.\n\n\"For the rest of the day, we're going to stroll downtown and goof off, but I do have a surprise for tonight.\"\n\n*****\n\n(Eva)\n\nWe parked in the middle of downtown. It was a high scale area with lots of chic shops, galleries and expensive food establishments. We'd spent the day wandering around the city and watching passersby trying to see up my dress. It was funny to watch as men and women all turned when I walked by. I was thrilled to be showing off for my man and was even more delighted that he actually liked it. \n\nI was dressed in the same outfit but upon his request I had put up my hair in an elegant style that left my neck bare with a few stray wisps framing my face.\n\n\"You ready for this?\" he asked.\n\n\"If I knew what this was,\" I replied.\n\nLaughing, \"Come on.\"\n\nWe got out and he led me down the block, it was early twilight and the trees were lit with white Christmas lights, the feeling was almost magical as we strolled through the city. I reached out and took his hand in mine. Eventually we stopped in front of an art gallery. White curtains blocked the view inside and gold script on the window said 'Frank and Son's Fine Art Gallery,' a large sign below that advertised 'The art of the sensual.' \n\nMichael reached up and knocked on the door and a few seconds later a man opened it and let us in.",
        "Once inside the man turned around, oh my god! He was gorgeous, he looked like a model for an Abercrombie poster. He was wearing slim gray slacks and a loose white silk shirt that was half unbuttoned. He had light blue eyes and shoulder length blonde hair with a hint of pale stubble on his chin. \n\n\"Hello ma cheri, I'm Remy Labeau. Tu es beau,\" He spoke with Cajun accent, taking my hand he brought it to his lips and kissed it, causing me to blush with delight. \n\n\"Alright, alright,\" Michael said disengaging my hand from Remy. \"Try to restrain yourself, she's mine.\"\n\nRemy threw out his arms, \"Of course mon amie, I would never, you would not expect me to have bad manners in front of ma cheri, especially when she's such a wondrous beauty.\"\n\n\"Yeah, whatever,\" Michael said rolling his eyes. \n\nBreaking into a laugh they hugged each other.\n\n\"How are you?\" Michael asked.\n\n\"I've been fine...\" Remy said.\n\nI studied them as they chatted about their lives. They were a marked contrast, Remy was thinner with pale but healthy-looking skin. Whereas Michael was bigger and darker and while not huge he had a more muscular definition. Remy was much better looking but his features were beautiful, almost feminine, he reminded me of the elf, Legolas, from the 'Lord of the Rings' movies. Where Michael reminded me of Aragorn but with shorter black hair, he was good looking but his features were more rugged and manly. Remy was also casual, moving with an indolence and haughtiness, even out of uniform Michael moved with a straight bearing that practically screamed military.\n\nI looked around the gallery. There were separate rooms and each on had a name above the threshold. Jia Lu, Bill Mack, Chris De Rubeis and a few others. Each room held breathtaking works of art and I noticed immediately they all featured nude or partially nude women. The colors from each artist were distinct and each painting looked fantastic. Even my untrained eyes noted each artist was a master and each had a unique style. All were extraordinary and I could easily tell one style from the other. \n\nI realized the room has gone quiet, I looked over and found them staring at me.\n\n\"You like, ma petite?\" Remy asked.\n\n\"They're beautiful.\"\n\n\"Not half as beautiful as you,\" he said with a small bow. Michael rolled his eyes, making me giggle.\n\n\"Tonight is a gallery showing of some very famous artists and Remy also wants to display some jewelry he's been creating. He's a bit of an artist himself,\" Michael said.\n\n\"You're too kind,\" Remy replied.\n\n\"How do I fit in?\" \n\n\"Michael informs me that you have something of a fantasy, and that we're going to do our best to indulge it tonight while helping me out.\"\n\nMichael moved behind me and whispered in my ear, \"It's simple, you're going to model his jewelry tonight.\"\n\n\"That's the big surprise?\" \n\n\"Not quite,\" Michael said.\n\nHe reached down and put his hand on my thighs, sliding them up and slowly bringing my dress with it. I gasped and my eyes went wide and my breath sped up as I looked at Remy, I had a quick second of premonition where I knew what was about happen. Michael continued pulling my dress up and I reflexively lifted my arms as he slipped the dress over my head and off my body. Unexpectedly, I was standing in only my violet thong and black heels.\n\nMy body flushed pink and my nipples instantly got hard.\n\n\"Oh my god,\" I whispered.\n\nRemy chuckled, \"Don't worry ma petite, we will be here with you all night.\"\n\n\"Have you heard of 'Nyotaimori'?\" Michael asked.\n\nI shook my head no.\n\n\"It's the art of displaying sushi on a young women's naked body. She lies still while the food is displayed on her,\" Remy explained. \"I had the idea to do the same type of thing with my jewelry. People with money love this kind of foolishness.\"\n\nThey led me into the main room where there was an opulent lounge divan in crushed red velvet and black wood centered under a soft light. Michael moved to the back side of the divan.\n\n\"Of course, I want to modify the display a bit,\" Remy said. \"So I had this divan altered.\"\n\nHe pointed to three small metal rings in the cushions. He grabbed a small black bag by the base and reached inside, pulling out two silver wonder woman style bracelets, each about two inches thick. He moved over to me and brought my hands behind my back, I felt the cool metal surround my wrists and the click of it closing. \n\nI didn't try to hide my excitement, I was practically panting as I tested the bonds and found I was securely restrained. I looked at them, everything was happening so fast it was making me lightheaded. I felt I should say something, with the feeling of helplessness, the excitement of being displayed, I found I was strangely eager to do this. I had never done anything this wild and I knew that if I didn't do it, I would be disappointed.\n\nBiting my lip, \"I assume one of you will be next to me all night for protection.\"\n\n\"Of course cheri,\" Remy said. \"But we must hurry, the show starts in half an hour.\"\n\nI nodded. \n\nHe guided me to sit on the divan and then positioned the cuffs to the ring and attached them. Suddenly I couldn't get up without him undoing them. \n\n\"What's next?\" I asked. \n\nHe pulled out another set of thick silver cuffs, he set them next to my ankles.\n\n\"First we must take care of these,\" Remy said as he hooked his fingers into my panties and slid them down and off my legs. I groaned as a thrill went through my body and I involuntarily squirmed a little, Remy grinned knowingly.\n\nHe brought my ankles up on the divan and cuffed them, then did the same thing he did to my hands and locked them into the ring on the cushion. \n\nI closed my eyes and leaned my head back, I'm naked and helpless. The sensations are extraordinary, I finally notice light music playing in the background, I took a deep breath and smelled the musky scent of Michael and the clean, slightly citrusy scent of Remy. I wiggled a little to feel the smooth fabric of crushed velvet beneath me my ass and opened my eyes. \n\nNext Remy pulled out a large hinged silver ring, he reached up and placed it around my neck, once again he attached it to the divan. Now I was stretched out laying on the divan, well and truly helpless. \n\nI tested each cuff and found no give or movement in them. I had no idea how they opened so I couldn't try to get free even if I wanted to. The bonds at my neck, arms and legs held me in three tight positions against the divan, I could only squirm marginally. My arms behind my back had an enhanced effect of thrusting my chest forward. While I was always happy with my boobs, I had to admit they looked spectacular in this position. The nipples stood proud and erect and my chest was firm without any sag. Suddenly I was very grateful of all the hours I spent in the gym. My body was going to be on display and I wanted people to be impressed. \n\nRemy turned to Michael, \"I left the jewelry in the back, it's a black wheeled case, can you bring it out here?\" \n\nMichael left immediately.\n\n\"Now, we're almost finished getting you ready.\"\n\nHe pulled out a small bottle of baby oil. I watched as he poured some in his hands and then spread it over my body, he had no hesitation or shame as he spread it everywhere. He started at my neck but quickly spread to my chest, stomach and legs. He cupped and massaged my breasts making sure the oil was thoroughly rubbed in. He tweaked my nipples a little making me squeal. He laughed at my reserve and continued to rub, his hands felt good as he worked the oil into my skin so I closed my eyes and relaxed. Soon he traveled down and massaged my pussy; I couldn't believe how bold he was but I was helpless to do anything and to be honest I didn't want to stop him anyway.\n\nI had enjoyed the back and forth teasing with Michael but with Remy it was different. He oozed sexual conquest, if I let him, he would take me, ravish me, and no doubt move on to the next conquest by the end of the weekend. \n\nStill, I was getting very turned on!\n\nMy lips were parted and I know he noticed my breathing had gotten harder. I opened my as he continued rubbing the oil into my sex. Almost against my will I let out a moan, wishing I could spread my legs to give him better access. He traced my lips and stroked them up and down, his fingers magical. \n\n\"Ahem,\" Michael cleared his throat. \n\nMy eyes flew open and I saw Michael standing there, the black case next to him. I blushed in embarrassment and struggled briefly against Remy's fingers. \n\nRemy looked up at Michael but kept massaging me.\n\n\"I think she's got enough oil on her,\" Michael said.\n\nRemy looked at me and back up at Michael, \"I suppose so, what do you think, ma cheri?\" he asked me while still stroking my sex.\n\nI nodded dumbly, unable to trust myself to speak.\n\n\"Well then, I guess I will consider you ready,\" Remy said as he stopped stroking and then stood up.\n\nI let out a breath that I hadn't realized I was holding. They stood on either side of me, looking down at my oiled body. I was flushed and smelled my own arousal, it was a little embarrassing that Remy had managed to get me so excited and it was impossible not to squirm in frustration. \n\nQuickly, they grabbed some jewelry. Michael took out a large diamond and sapphire necklace and placed it around my neck. Remy had a variety of necklaces and bracelets that he artfully draped across my stomach. The metal slithered across my skin making me giggle and twist. \n\n\"Ma petite likes that,\" Remy said taking a bracelet he snaked it across my chest making me whimper.\n\n\"Remy,\" Michael whispered warningly.\n\n\"I'm just teasing the belle fille meuillar ami.\" Remy shrugged. \"You know it is my way.\" \n\nMichael rolled his eyes and shook his head.\n\n\"What did he say?\" \n\n\"He called you 'beautiful girl' and me 'best friend,'\" Michael said.\n\n\"He's very smooth,\" I replied.\n\n\"Isn't he,\" Michael said drily. He held up another stunning necklace, this one white gold with rubies. \"Last one.\"\n\nHe draped it on my pussy, the metal felt cool and wicked. \n\nFinally acknowledging my feelings, \"I can't believe you set this up and I really can't believe I'm doing this.\"\n\n\"Me either, I thought you might freak.\"\n\n\"But you still brought me here.\"\n\n\"Is that a question or a statement?\"\n\n\"I'm not sure,\" I said. \"You'll be right next to me?\"\n\n\"I promise I won't leave this room the whole night.\"\n\n\"How long will I be like this?\"\n\nHe looked at Remy.\n\n\"Three hours,\" Remy said, holding up three fingers. \"You will be the central display for tonight, and don't worry cheri, this is an invitation only event. All the guests are wealthy and dignified.\"\n\n\"How many guests?\" I asked.\n\nHe shrugged, \"Three hundred invited, more than 150 RSVP'd yes.\" \n\n\"How wealthy are these people?\" \n\n\"I expect to sell most of the jewelry and art tonight and the least expensive piece currently on your body will sell for $5,000 and the necklaces will go for $15,000 to $25,000,\" Remy said. \"The other artwork ranges from $4,000 to $75,000.\"\n\nHe inspected my body, reaching down he adjusted a bracelet on my breast and absently stroked my nipple as he talked, \"With all the bracelets and necklaces I've displayed on your body and nichon, and of course the piece de resistance on chatte piece de resistance...\"\n\nHe paused and did some mental calculations. \n\n\"You are currently worth more than $100,000.\"\n\n\"Wow,\" I said.\n\n\"One last thing,\" Remy said. \n\nHe produced a black silk sleep mask, bending down he placed it around my eyes.\n\n\"And now we must prepare, I see some people waiting to come in. Five minutes.\" he said and left. Before he walked away, I felt a small pinch against my nipple making me squeak in surprise. \n\n\"Remy...\" Michael said.\n\nI heard a laugh fade as Remy walked away.\n\nMichael shifted next to me, \"Your friend is quite the devil.\"\n\n\"Yeah, tell me about it.\"\n\n\"What did he say a minute ago?\"\n\n\"Hmm? Oh yeah, I forget you don't know French.\"\n\n\"And you do?\"\n\n\"Only the words that Remy uses most often,\" Michael replied. \"Nichon is boobs, and chatte is pussy. He said the masterpiece is on display on the masterpiece pussy.\"\n\nI laughed.\n\nMichael chuckled, \"Yes, he is quite the character, isn't he?\"\n\n\"Yes he is, he's very... playful.\"\n\nMichael snorted, \"You know I'm going to spank your little butt once we get out of here right?\"\n\n\"WHAT?\" I whisper shrieked. \"What did I do?\"\n\n\"Somebody was enjoying that oil massage a little too much.\"\n\n\"No fair, you can't blame me for enjoying something you set up.\"\n\nHe laughed, \"True, but I don't really need a reason to spank you so I think I'm going to do it anyway.\"\n\nI felt gentle pinch on my other nipple and I let out another small squeak he laughed again. \n\n\"That's not fair,\" I pouted.\n\n\"Is it really going to bother you?\"\n\nI blushed and didn't say anything, all I needed was for him to learn that I liked spankings and I was sure I'd regret it. \n\n\"That's what I thought,\" he said. \"So, are you ready for this?\"\n\n\"Yes.\"\n\nWith my eyes covered my other senses were heightened. I heard the front door being unlocked and the change in air pressure as the door was opened, the whispers of people moving inside and I sensed bodies all around me.\n\nOver the course of the next few hours I heard hundreds of people in the gallery. I felt their movements as they passed by me and the constant barrage of whispers and laughs. \n\n\"Oh my.\"\n\n\"Beautiful.\"\n\n\"Extraordinary.\"\n\n\"Exquisite.\"\n\nI heard men and women and as each passed me giving me compliment after compliment, boosting my ego. The voices were refined, polite, and in awe of my beauty. I was constantly blushed and felt a growing sense of satisfaction, I knew despite the other works of art all eyes were on me in admiration tonight. Jewelry was taken and put back on my body throughout the night and as each piece sold it was replaced with another for display.\n\nJust as satisfying were the touches, light feathery caresses and gentle traces all over my body. My legs, arms, and tits were commonly touched and some of the more daring would stroke a nipple. In my heightened state, each one sent a thrill of electricity coursing through me causing me to shift slightly.\n\nAfter a couple of hours Michael asked, \"Are you alright?\" \n\n\"I'm fine,\" I whispered back. \"But I would like to see for a minute or two.\"\n\nA few seconds later the blindfold was pulled back from my eyes. I tilted my head as best I could as I looked around the lobby, the gallery was filled with elegantly dressed people. The men were all wearing suits and the women were in beautiful dresses. As I scanned the crowd, I noticed one gorgeous redhead had noticed my watching. She winked at me, then went back to talking to her small group of friends. I watched her for another few seconds, she was younger and had a terrific body, she wore a sleeveless white dress that was accented with rhinestones and a thigh length split on the side with silver heels. While I watched she laughed at some joke by her friends. \n\n\"Are you happy?\" Michael asked, breaking my scrutiny. \n\n\"Very,\" I whispered. \n\nI rested my head back and let him re-blindfold me. \n\nA few seconds later I felt a presence, then the most daring touch of the night as a finger slowly traced back and forth over my sex. Instinctively I knew it was the red head. \n\n\"Hello lovely,\" she purred. \n\n*****\n\nTo be continued...\n\nNote: Comments always appreciated. "
    ],
    "authorname": "storm_usmc",
    "tags": [
        "exhibition",
        "thong",
        "tied",
        "gagged",
        "bet",
        "motorcycle",
        "public",
        "art",
        "helpless",
        "pizza"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-bet-ch-02-the-challenge"
}