{
    "title": "Breaking the Ice Ch. 08",
    "pages": [
        "Note: This chapter contains mention of rape. Please do not read if this is something that makes you uncomfortable or may trigger any unpleasant memories for you.\n\nAny rude or unnecessarily judgmental comments on this and future stories will be deleted and blocked. Constructive criticism is great! Rude comments are not. Feel free to shoot me an email.\n\n***\n\nApril\n\nAfter returning from Mexico our marriage seemed to be functioning better than ever. As much as I'd like to say we accomplished that step on our own it really was because of Dr. Owen. Shane started seeing the good doctor on a weekly basis like I was, one session alone and one couple's session together. We discussed, sometimes we yelled, on a few occasions I cried -- but more importantly we continued talking when we were home. On my part I did indeed take over when we got back home; I made sure I was home from the library or study group in time to have dinner with my husband, and by eight each night my books were tucked away so we could spend time together.\n\nThat was a significant issue that came up in one of our appointments -- Shane felt as if I wasn't making our marriage a priority therefore he didn't feel comfortable confiding in me when he really needed to. I felt horrible he felt that way, even more so because it wasn't the first time he'd felt that way in our relationship. I immediately made it my mission to turn it around. Sure, we still argued. Instead of bottling everything up we attempted to yell less and listen more. It was hard, some days it was really hard, but we were working toward becoming a semi-functioning couple who took some time to actually have fun with each other. Every day it got a little easier.\n\nAnother Friday night and I had just switched the oven off, letting the lasagna cool in its pan on top of the stove as I leaned over the countertop to finish logging in my planner. The jingle of my phone ringing interrupted my thought process but any irritation I felt quickly faded when I saw it was Shane. I picked up giddily. \"Are you really calling me right now?\"\n\nThere was a cacophony in the background of boos and jeers about him being whipped while he laughed. \"Trust me sweetheart, I'm not missin' anything. I've been to enough strip clubs to last a lifetime.\"\n\n\"Oh good, that's what every wife likes to hear,\" I teased. Shane's friend and former fellow fighter Vincent was getting married the following evening, choosing the night before to engage in some last minute debauchery. Shane was less than enthused about attending. \"You have to be the only man alive who complains about going to a bachelor party. Most married guys would kill to be where you are right now.\"\n\n\"Those men aren't married to your fine ass. I was just checkin' in. How was your doctor's appointment?\"\n\nI couldn't help but smile. In fact, I hadn't stopped smiling since I got home. \"It was good. Um, I'll tell you about it when you get home.\"\n\n\"Okay darlin', but it'll probably be late...shut up asshole, I'm comin'!\" he yelled at one of his friends, \"I gotta go, I love you. Let's have a date tomorrow afternoon before the wedding, okay?\"\n\n\"You got it, Mr. Thomas. I love you too.\" He hung up and I followed suit, getting back to my calendar. I skipped ahead to the end of the year and circled a very important date before closing the notebook and settling in for the night.\n\n***\n\nThe stench of scotch and cigar smoke assaulted my nose in the worst way the next morning, making my stomach queasy. Sitting up groggily I surveyed the room for the offensive odor and discovered the source was my husband straight passed out in our bed. I tried not to laugh at his disheveled appearance but it was hard not to; his black shirt was only halfway tucked in his pants and his dark clothes were covered in glitter and strong perfume. He hadn't even bothered to take his shoes off. I grabbed my phone from beneath my pillow and snapped a picture before rolling out of bed to get dressed. After I dolled up in jeans and a plain black tee-shirt I set some painkillers and a glass of water on his bedside table, kissing his forehead and heading downstairs.\n\nIf I thought Shane was in bad shape, I wasn't prepared for the six other half-naked firefighters taking up space in our living room.\n\nGreg and Paul were asleep at opposite ends of our couch. Robert was face down in the middle of the floor while Chris was passed out at the dining room table, his head resting on his arms. Vincent and Sam were shirtless and pretty much spooning next to the fireplace. Austin tiptoed between the men looking confused. Yeah, I know buddy, me too. I snapped a few more pictures, figuring a little extra blackmail couldn't hurt. I sent the one of Sam and Vincent to someone I knew would fully appreciate it, slipping on my flip flops, grabbing my sweater and keys on the way out the door.\n\nI sat in my car idling while I called the local coffee shop, offering to pay an exorbitant amount of money to have coffee and breakfast sandwiches delivered to the men in my house who were going to have one hell of a hangover. I was about to back out of the dirt driveway when my phone rang. I grabbed it and stated immediately \"Men are ridiculous.\"\n\n\"You lucky bitch,\" the hoarse voice answered, \"Do you know how many women would kill to wake up to a house full of hot naked firefighters? You do not deserve such a glorious life.\"\n\nAs always, Sydney made a good point. \"Are you still coming to the ceremony with Sam tonight? I was thinking of a spa day this afternoon if you're interested, my treat.\"\n\n\"Oh, shit. I forgot that was tonight. No, I'm...sick.\"\n\n\"You don't sound sick.\" She was oddly silent which was really out of the ordinary for her. \"Hey Syd, what's wrong?\"\n\n\"N-nothing, I...\"\n\nI heard what sounded like a sob and I kicked into high gear. \"I'll be there in twenty minutes.\" Peeling out of the driveway and down the street I drove like a bat out of hell to get to my best friend.\"\n\n***\n\n\"Oh my God, Sydney.\"\n\nAfter pounding on her door for five minutes she finally answered and the sight of her made me want to cry, and then murder someone. The swollen, bloody left eye and black bruises on her face and neck made my heart wrench painfully. She waved me into the apartment her and Sam shared, which was a mess of shattered glass, papers and clothes and tissues. She stopped in the middle of the living room and took a large swig out of a chardonnay bottle. \"What the hell happened?\"\n\nShe started to explain, then changed her mind and shook her head. \"Jeremy, he...it's been handled.\"\n\n\"Is he still breathing? Because if he is it hasn't been fucking handled.\" She took a step back from me and looked me dead in the eye. I recognized the look. It was the I don't want to talk about it, please don't make me look. The embarrassed look. The look of shame. I worked on calming my voice. \"Have you gone to the police?\"\n\n\"Yeah. Went to the hospital, pressed charges and filed for a restraining order. Thank God for growing up with lawyers for parents, huh?\" Her voice sounded strong even if she was anything but.\n\nI didn't know what to do or how to help, so I channeled from the one person who I knew would. Her. I went to put my arm around her shoulder and she turned away from me again, so I changed tactics and pointed to her bathroom. She followed behind me and after switching on the shower knobs I turned to her again. \"Shower, okay? And brush your teeth, your breath smells like Napa Valley's butt crack.\" She gave me a small smile and nodded. \"I'm going to make a couple of calls then order us some food.\" I backed out of the room and shut the door, leaving her in privacy. I stalked off to her kitchen, searching for trash bags and impatiently waiting for my husband to pick up his phone.\n\nAfter three rings, he did. \"Sweetheart, you are a goddess among women. If the guys didn't love you before they sure as hell do now. Where'd you run off to? I promise everything will be cleaned up by the time you get back.\"\n\nHis gravelly tone filled me with warmth for half a second before I remembered what I was in the middle of doing. \"I appreciate that. I'm at Sydney's. Jeremy hit her.\"\n\nThere was a significant pause. \"He what?\"\n\nI rubbed my hand over my eyes trying to gather my thoughts. \"God, he didn't just hit her, she is just...he beat the hell out of her, Shane, and I don't think that's all her did. I think he assaulted her, I think he...\" My throat filled with bile and I couldn't let those words off my tongue.\n\nShane's voice was eerily even. \"Do you need to come over there?\"\n\n\"No thank you, but I'm going to stay here as long as she wants me to. Can you give Vincent and Shelly my apologies for not attending tonight?\"\n\n\"Of course. I love you. Call me if you or Syd need anything, not that you'll need to because you know I'm gonna text you until you tell me to shut the fuck up.\"\n\n\"I will. I love you too.\" I ended our conversation and stood in the middle of the kitchen, completely lost. I didn't know how to help her. Very few people hate a clean home. Start with that. Focused on a mission I started tossing what I could, determined to make her space a little less cluttered when she came out.\n\n***\n\nWhen Sydney emerged from the bathroom I had all the bottles and broken glass swept up and into the recycling bin, her furniture put back in its place and the room aired out. I started going through her take-out menus when she came into the living room. \"What are you hungry for? Pizza? Chinese? There's that really great Thai place near campus.\"\n\n\"Actually, can you take me to my parent's?\" She pushed her hair back from her injured face, her eyes focusing on everything but me. \"I need to get the hell out of here and I'm not sober enough to drive.\"\n\n\"Yeah, of course.\" I grabbed my stuff and we left the apartment, Sydney moving slower than usual because of her injuries. I tried to help her down the stairs to the parking lot but she recoiled every time I reached for her. Once we got to the car she plugged her parents address into the GPS in the dashboard and we pulled off in silence. After a few minutes of fiddling with the radio she turned it off and started talking.\n\n\"Jeremy had been calling since I got back from Mexico, begging me to give him another chance. He kept saying he was going to get help and I...I didn't believe him but I thought he could use one friend who wasn't tweaked out, you know? He came over a couple nights ago to watch a movie and everything was fine until I told him about going to the wedding with Sam, and he just lost it. He kept calling me a stupid whore and then...then he...\" Tears started streaming down her battered face faster than she could wipe them away. \"If my neighbor hadn't called the cops when he heard me screaming...that bastard had the nerve to tell them we were just having rough sex and that I asked for it...I can't fucking believe this. I'm so stupid.\"\n\n\"Hey, you are not stupid.\"\n\n\"Do you know how humiliating it is to have a rape kit done? Having a bunch of police officers interrogating you for hours? I wanted to call you, or Sam...I'm so embarrassed I let this happened.\" When we pulled into her parent's opulent circular driveway she just sat and stared at the front door. \"This sick feeling is never going to go away.\"\n\nI took my apartment key off my keychain and pressed the metal into her palm. \"My apartment is paid through July, not that it's a matter of cost, but if you don't feel safe going back to your place you can stay there or come stay in North Haven with us. I know your parents are lawyers but if they need backup my dad's girlfriend is an excellent attorney, and he knows the district attorney and a few judges. I'll be here a much or as little as you want me too, okay? If you need anything -- I don't care if it's to rage at three in the morning -- you call me. But more important than anything? This is not your fault, not even a little bit. Okay?\"\n\n\"Thanks Tess.\" Syd sniffled as she got out of the car, briskly walking up the stairs to the door and stepping inside. I stayed parked for a few minutes, the nauseated feeling in my stomach matching the heavy ache in my heart for her.\n\n***\n\nAfter I dropped off Sydney and stopped by the house to take care of some business I drove to the Omni hotel where the wedding reception was being held. Once I turned the keys over to the valet I retrieved my sleeveless, antique silver floor-length gown from the backseat of the car; I wasn't sure if I would get there on time but I brought it just in case. After getting the key to our room from the front desk I made my way up to the eleventh floor. I approached our door but stopped short of unlocking it when I heard voices behind it.\n\n\"Dude, are you sure you don't need to go to the emergency room? It looks pretty bad.\"\n\n\"Nah, it ain't broken. Besides, I'm sure he's on his way there now and I don't need to run into that motherfucker again. I think he learned his lesson.\"\n\n\"I've never seen so much blood! I think he pissed himself too.\"\n\nThat statement was followed by a round of boisterous laughter. I unlocked the door to find Shane and Sam sitting on the king-sized bed and the group of merry men I'd left on my living room floor earlier in the day standing around them. They didn't notice me until I saw Robert and Chris wrapping both Sam and Shane's swollen, bloody fists with gauze. \"Shane Elijah Thomas what the hell did you do?!\"\n\nMy husband acknowledged my presence with a calm gaze, sipping from the glass of amber liquor in his good hand. The other guys at least had the decency to look guilty. \"Oh man, she middle-named him. He's in trouble,\" Greg whispered.\n\nI pointed to the door. \"Get out.\" The guys patted him on the shoulder when they walked past him, muttering \"Sorry Tess,\" as they vacated our room. I stared at Rambo Jr. and tossed my dress on the bed next to him, not knowing where to start. \"Are you kidding me with this?\"\n\n\"Tess, calm down.\"\n\n\"I most certainly will not calm down. Look at your hand! How did you even know where he lives? What if he presses charges? Oh my God,\" I gasped as I put my hand to my mouth to halt the incoming flux of nausea, \"You didn't kill him, did you?\"\n\nHe stood and set his tumbler by the TV stand before finishing the first aid on his hand. \"Jesus, woman, no. He's fine.\" Shane chuckled darkly. \"Well, he ain't fine, but he's breathing.\"\n\n\"Hey asshole, this isn't funny.\"\n\n\"No, that pussy-ass little bitch beatin' on a woman isn't funny. Look, you can be mad all you want, but he's lucky I didn't kill him and I don't feel bad about it. So if you're done I'm gonna go shower.\"\n\n\"We're not done talking about this!\" I yelled.\n\nHe walked past me and started unbuttoning his shirt as he headed to the bathroom. \"Actually, we are. You can either come fuck me in the shower or stay out here and bitch to yourself, either way I'm goin' in here now.\" He shut the door most of the way and I heard the shower come on.\n\nHis unbelievable arrogance pushed my anger over the edge and I abruptly blurted out \"Don't think you're going to act like this once this baby is born!\"\n\nThe shower turned off as quickly as it had started. Shane opened the door and stared at me incredulously. \"What did you just say?\"\n\nDamnit. It wasn't how I wanted to tell him but the cat was out of the bag now. I put my hand on my hip and sharply cut my eyes at him. \"I am not 'ride or die' chick. If you go to prison for doing stupid shit because you can't reign in your testosterone I will take this child and divorce your ass, I swear to God.\"\n\nHis hand flew to his chest as he inhaled deeply like someone punched him dead center, a pure smile stretching across his face. \"Are you...am I gonna be a daddy?\"\n\nI couldn't stop myself from grinning. \"I haven't decided if I'm going to let you live yet...but yes.\"\n\nIn a split second I was in his uninjured arm when he picked me up and swung me in a circle while I squealed happily. He put me on my feet and placed his hand on my stomach. \"But...I...how? I thought it took two or three months for the pill to wear off.\"\n\n\"My doctor says it's different for everyone and we had sex, like, ninety times in the last couple of months. My OB says I'm eight weeks...is it okay? I know you said you weren't ready anymore but it happened before Mexico, so...\"\n\n\"Is it...are you kidding me? You fuckin' wonderful, beautiful, magical woman.\" Shane kissed me a million times all over my lips and face and neck as my heart swelled with joy. \"God, Tess. I love you so much I could explode.\"\n\nI pushed him away from me and toward the bathroom door. \"I love you too, but can you explode in the shower? You smell like scotch and blood and it's making me want to hurl.\"\n\n\"Shit. Sorry.\" He kissed me one last time before heading back to the shower, pumping his fist in the air triumphantly. \"I'm gonna be a daddy. Whoo!\" I laughed at his enthusiasm, feeling grateful for some good news at the end of a bad day. I undressed and climbed onto the soft bed, pulling the sheets over my naked body and reaching for the remote. After scrolling through a few channels I found an old black and white movie to fill the silence. I took a moment to close my eyes and reflect on the news. I had been so preoccupied with how Shane would react that I hadn't really processed it myself.\n\nHappy. We're happy. Just be happy.\n\nMinutes passed, and when I finally opened my eyes my towel-clad husband was standing by the edge of the bed beaming down at me proudly. I propped myself up on my elbows but kept my breasts covered. \"You are just so pleased with yourself right now, aren't you?\"\n\n\"Darlin', you have no idea. Knockin' up my wife the second she stops taking the pill? I am all man, baby.\" I giggled lightheartedly as he dropped the towel and slid into the sheets facing me. I pointed to his injured hand and asked, \"Does it hurt badly?\"\n\n\"Fuck yeah it hurts. Skulls are hard and his took a serious beatin'. Sam threw in some broken ribs for good measure.\" I frowned, tracing the gauze with the tip of my pointer finger. \"Look, I get that you're mad, but any guy who beats the shit out of a woman, one of my friends -- and my wife's best friend -- is gettin' his ass beat. Schoolyard rules, that's just how it goes. He fuckin' deserved it.\"\n\n\"He definitely deserved it, but I still don't like it. You could get in some serious trouble. No more beating people up, Shane.\"\n\n\"Well you don't have to like everything woman, damn.\" I gave him a scolding look and he reluctantly agreed. \"Yeah yeah, I got it. No more beatin' people up.\" He made the X crossing over his heart before flipping me the bird.\n\n\"Oh that's real mature. God, I hope this baby is a girl, I couldn't handle two insane Thomas men in the house.\"\n\n\"You need to hope it's a boy, 'cause if it is a girl I'm killing everyone with a dick in the thirty mile radius.\" I stuck my tongue out at him as his hand returned to my stomach. \"How badly are you freaking out right now?\"\n\n\"I'm not.\" He waited for me to continue and I shrugged. \"I'm worried about a few things but for the most part I'm excited about it.\"\n\n\"Then let's get it out of the way so we can celebrate properly. Unless you're too tired, I know it's been a long day.\"\n\nI squeezed my thighs together, anticipating a much needed release. \"You are the world's best husband and I love you more than I can express.\"\n\nThe right side of his mouth lifted casually. \"Still not as much as I love you, sweetheart. Now talk.\"\n\n\"Okay. First and foremost is my medication. The new pills are working really well so far and I know there are probably alternatives I can take while I'm pregnant, but...I'd rather not take anything at all. I don't want anything to affect the baby but I don't want to dissolve into a big puddle of crazy either, especially with my hormones kicking into high gear. I'm not sure how it's going to work long term.\"",
        "Shane scratched his chin, thinking. \"Well. That's something to discuss with Dr. Owen. I get what you're sayin' but the most important thing is that you take care of yourself. You still have the rest of the school year to get through and you've got finals comin' up, so if being on something is gonna be more beneficial than not then that's what we gotta do.\" His hand grazed my chin and lifted my face to meet his. \"Hey. It's gonna be okay, we'll figure it out.\"\n\nI chewed on my fingernail when a sudden rush of nerves hit me. \"What if the baby's like me? What if I pass my depression or anxiety to it?\"\n\nShane pulled my hand from my mouth and kissed my gnawed-upon finger. \"Then we'll know what to watch for and handle it.\"\n\n\"What if I turn out like my mom?\"\n\n\"Impossible.\" His fingers traced a soothing line up and down my arm. \"You already love this kid so much you're worrying like crazy.\"\n\n\"How are you so calm right now?\"\n\n\"Because that's how we work. You get all nutty over the 'what ifs' and I calm you down, and I get pissed when I can't fix things and you calm me down. Look at today. Sydney needed you and you were supportive and loving and all of that sensitive chick shit that I don't get because I was too busy beatin' the bastard half to death.\" He shook his head. \"Our kid'll have two crazy parents, it'll be okay.\"\n\nI laughed while laying all the way back down on my pillow with a gentle thump. \"That's not very reassuring.\"\n\n\"Maybe not but we have some time to figure it out.\" He pulled the sheets away from us, displaying my nude body for him. \"Do you know how beautiful you are? If you thought I couldn't take my hands off you before...\"\n\nI covered my eyes with my left hand and giggled lightly when he tickled my thigh. \"Oh man, I'm going to get so huge you're not going to want anything to do with me.\"\n\n\"That's what you think, huh?\" He nudged my legs apart, stroking my dampened lips with his middle finger. \"A couple of weeks after I met you I was passing by the spare room while you were changin'. Which makes me a pervert, I know, but...just through the crack of the door, watchin' you slip on one of those short sundresses of yours I thought, 'Holy shit this girl is hot.'\" I held on to his forearm as two of his fingers penetrated me.\n\n\"Then when I saw you fully naked for the first time I thought, 'I need to see her naked every hour of the day'. When we had sex I thought 'Well now I'm not gonna get anything done 'cause I need to fuck her all day long'.\" He took his fingers away from my awaiting body and climbed on top of me, speaking low in my ear as he wet the tip of his cock with my arousal.\n\n\"The night we got married and I entered you as your husband I thought, 'This is my heart and my soul and it will never, ever be better than this'.\" He surged his hips forward, joining us together while he sank his teeth into the side of my neck, the dueling sensations sending my body into overload. The moment he bottomed out he raised his head, looking into my eyes with pride. Fear. Lust. Love. \"So now that you're pregnant with our child, my seed is growin' inside my heart, my wife...you are...I can't...there are no words. I have no words.\"\n\n\"Shane. I love you so much.\" I cradled his face in my hands, sliding my thumbs over his smile. He swallowed thickly, his voice uneven and shaky when he commanded, \"Say it again.\"\n\n\"I love you.\"\n\nHe hitched my right leg over his hip, giving me long, deep strokes. Like he never wanted this feeling to end, and neither did I. \"Again.\"\n\n\"I love you. I love you, I love you...\"I kissed him between declarations of love as he asked for it again and again.\n\n***\n\n\"Tess. Tess, sweetheart, wake up for me.\"\n\n\"Again, Shane? I'm growing a person here, I need sleep.\" I cracked open an eye when he didn't automatically start teasing me as he usually does. He was holding his cell phone in one hand and his face was ashen with worry. I sat up immediately, my head swimming from the sudden change in position. \"What's wrong?\"\n\n\"Well...okay,\" he looked me dead in the eye with an unwavering stare, \"I have to tell you something and I need you to breathe and stay calm, because I know you don't want to take your Ativan if you have a panic attack. Okay?\"\n\nMy heart started to race. Is someone hurt? Did something happen with his family? What if it's his dad? Or what if it's my dad? \"Just tell me.\"\n\n\"Okay.\" He held his breath and let it all out in a rush. \"Syd's dad found her early this morning; she swallowed a few bottles of painkillers. They got her to the hospital and pumped her stomach, she's fine but they're going to send her to a hospital upstate to get some help. She probably won't be back for graduation because they're talking at least three months.\"\n\n\"Oh.\" My heart shattered. It took me a second to find my voice. \"Is...is there anything we can do?\"\n\n\"I don't know. Sam says she won't be allowed to have visitors for the first few weeks but after that I guess it depends...Tess?\"\n\nI burst into tears. I wish I could say it was hormonal, but the whole situation was wholly unfair. It wasn't fair what that bastard did to her. It wasn't fair she felt so broken she felt she shouldn't live anymore. I wished I could do anything to help her. But at that moment, all I could do was cry.\n\n***\n\nDear Syd,\n\nYou've been away for a week now and I miss you like crazy. How are you? That sounds so stupid writing it out but your mom said you weren't accepting phone calls, so...how are you? I hope you're getting enough rest and that the weather is better up there than it is down here -- late April sucks. Everything is still mushy and grey but sometimes the sun catches something pretty...well, Shane is sending some photographs. \n\nThere's some little art stuff in the box -- paints and some canvas, and the comic books your dad held for you. Sam picked out the Iron Man bobble head because he wouldn't listen when I told him you think Iron Man sucks, but he insisted. Boys are dumb.\n\nThe journal's from me. I know they probably gave you one but this one has sparkly pugs on the cover, because we're roll dogs. I hope the food there is good, I went to a facility in Maine when I was nineteen and the food sucked. Shane picked out the snacks so I hope you like nothing but Kit Kats and Doritos. He has the palette of a twelve year old.\n\nI'm not sure what else to say except I miss you, and I know I said that already. But I do, so there it is.\n\nLove, Tess\n\nI doubled over the toilet bowl, emptying out the only food I had been able to stomach the past two weeks: chicken noodle soup and lemonade. Shane -- because he is the perfect husband -- was right there with me holding my hair back. \"There you go sweetheart, it'll be okay.\"\n\nI rested my arm on the seat and my forehead thumped on top of it. \"Is this the beautiful pregnancy part? Because this -- urk -- this fucking sucks.\"\n\n\"I know darlin', but the doctor said it should taper off in your second trimester. You're almost there, just a couple more weeks. You want me hop in the shower with you? I'll wash you real good.\"\n\n\"'Washing me real good' is how we got in this mess.\" I laughed despite my disgusting position and Shane joined me. \"I'm fine, you go. I'll be out in a few minutes.\"\n\n\"I'll go make you some tea.\" He kissed the top of my head before exiting the bathroom, once the door shut I sat back against the wall and tried to catch my breath. Miracle of life my ass. Only two and a half months in and I was miserable. I couldn't keep anything down yet I was already starting to grow out of some of my jeans. We were waiting for the three month mark to tell people but by the way I was filling out it wasn't going to be much of a mystery anymore.\n\nOn shaking legs I rose and turned on the shower. All I wanted to do was go to bed but I had finals coming up, a new job to start, and telling our friends and families...\n\nAll thoughts were forgotten when I had to visit the toilet bowl once more.\n\n***\n\nMay\n\nTess,\n\nI'm fine. Doped up. Tell Red cool ranch is better. Kit Kats are boss.\n\nSyd\n\n\"OHHHHH MYYYYYY GOOOODDDDDD!\" Shane had to pull his cell phone away from his ear while his mom screamed happily on the other end. \"Eli! Eli get your butt over here, the boy's finally done somethin' right and procreated!\"\n\n\"Jesus, Mom.\" Shane mumbled, shaking his head in his hand while I laughed at his misery. We'd gotten the all clear from my OBGYN and we decided to start spreading the joyous news, starting with his parents. A decision that Shane instantly regretted. \"Will y'all calm down? This isn't that big of a deal.\n\n\"Boy, don't you go lyin' to your mama,\" my father-in-law bellowed on the other end. \"How you feelin' Miss Tess?\"\n\nI grinned even though they couldn't see me, Shane squeezing my hand from across the table. \"Better. Not really sick anymore.\"\n\nEli chuckled. \"You were only sick because you got his ugly mug growin' in your belly.\"\n\n\"Goddamnit!\" Shane rolled his eyes while I fell into another giggle fit. \"Why? Why do I tell them anything?\"\n\n\"Shut up boy. Y'all got names picked out?\"\n\nMy sweet husband tickled my palm absentmindedly while I tried to catch his fingers in my hand. \"Not yet for a girl, but if it's a boy we decided on Elijah Adams Thomas.\"\n\nThey fell silent. Just as he looked at the screen to make sure we didn't get disconnected Mary Anne whisper, \"Oh Tess, that's beautiful. Y'all done made your daddy start cryin'.\"\n\n\"I'm not cryin', damnit! I got some damn dust in my eye. Shane... I'm proud of you, boy. Y'all gonna raise a beautiful family.\" It was my love's turn to start tearing up...until Eli followed up with \"You know the kid's initials are gonna be EAT, right? He's gonna be a little porker.\"\n\nShane growled and I started laughing again.\n\n***\n\nDear Syd,\n\nSorry I haven't written the past couple weeks, finals have been nuts...but I'm done! Your mom said your professors allowed you to take your exams via webcam and I know you kicked ass. I relayed the memo about snacks to Shane so enjoy your nine bags of Cool Ranch Doritos. \n\nI started working for my dad this week. It's not as nerve-wracking as I thought it would be, right now it's a lot of dull paperwork to file. I did get to sit in on a meeting for a merger which was...super boring, but it's all a stepping stone, have to pay my dues, blah blah blah.\n\nShane made a decision to flip houses again. He bought a duplex in New Haven to renovate, they started demo last week. He's so jazzed to be to be working; I think he was bored staying home all day. He's still toying with the idea of teaching but he's happy where he is now. I'll just be glad when he stops tracking mud in the house. He says the right side will be livable by the time you get back. It's by Windsor Lake and it's so pretty and peaceful at night. He's sending you a catalog of drawer pulls and light fixtures, he said pick what you want and he'll make it happen.\n\nSam said you were looking much better when he saw you last weekend and you even cracked a smile or two. I'm glad he got to see you; he has been a permanent fixture in our kitchen because he misses you so much. I'm sad you're going to miss graduation, but maybe when you come back we can take a celebratory girl's trip since we're pushing back the vow renewal. Anywhere you want to go, or we can kick Shane out of the house and veg for a week. Or something. Anything. I'm rambling, sorry. I hope you're feeling a little better. I can't wait to hug you.\n\nLove, Tess\n\nP.S. Shane wants me to ask you \"Why doesn't a Rabbi charge for circumcision?\" He's in a dad jokes phase, sorry.\n\n\"Damnit Tess, you're bein' completely unreasonable!\"\n\nI snatched a few tissues from Dr. Owens's glass coffee table and wiped my eyes angrily. \"It's not unreasonable for me to want my job and school! You can't just demand I defer for a year because I'm -- \"\n\n\"Pregnant, Tess!\" Shane interrupted rudely. \"I am all for the \"woman having it all\" mantra but you can't work full time, take a full course load, take care of our baby and take care of yourself! Something has to drop, whether it's school or working for Byron and believe me, I don't care which.\"\n\n\"Okay guys, hold on,\" Dr. Owen halted our screaming match. \"Let's set the emotion aside for a moment. Tess, can you tell Shane why completing graduate school and your internship at the same time is so important to you? I'll be honest, that is an exorbitant amount of work for anyone, and pregnancy will be added stress on both of you.\"\n\n\"It's not just important to me, it's important to us.\" I turned to a completely confused look on Shane's face. \"Before the fire happened, before Mexico...I had already decided to push school back a couple of years because I knew starting a family was important to you...us. Important to us, and had I done so at that time I would have ended up resenting you. I can't give up something in my life because you don't think I can handle it. I need you to stop preemptively looking for the next depression spell or panic attack. I know it comes from a good place, and I love that you love me so much but you need to trust that, occasionally, I know what's best for our family too. If I didn't think I could do it, I wouldn't be; and if it gets to be too much I'll pull back and we can reassess. Okay?\"\n\nMy husband blinked a few times and I braced myself for the incoming storm...but all he did was lean over and kiss me sweetly on the lips. \"Okay,\" he whispered.\n\nIt was Dr. Owens's turn to be confused. \"You're in acceptance of this plan, Shane?\"\n\n\"Yeah Doc.\" His eyes were still on mine while he explained. \"Besides getting married this is the only thing you've really put your foot down on. You were understanding when I quit the firehouse and slacked off the past couple months. If it's important to you it's important to me. If you decide you want to take any time off in whatever way I'll respect that, but I won't push it anymore.\"\n\n\"Thank you,\" I mouthed, my eyes welling up with fresh tears. He settled back on his side of the couch and I took a cleansing breath to calm myself for the other pressing matter I wanted to express today. \"Now, Dr. Owen, would you please tell my husband how unreasonable it is for a person to put his house up for sale without consulting his wife who is due in November?\"\n\n\"Oh, here we go with this shit,\" Shane rolled his eyes and started in. \"Do you know how many women would kill for their husband to build them a house from the ground up?\"\n\n\"Well then you can go get married to them because I don't want to live in construction zone with a newborn. All because you want some big wig media room. God, sometimes you are so selfish.\"\n\n\"I'm selfish? I'm selfish?! Look here woman, I'll tell you who's selfish -- \"\n\nDr. Owen settled back in his chair and silently observed the crazy couple arguing on his couch, no doubt counting the minutes until our session was over.\n\n***\n\nJune\n\nTess,\n\nBecause the Rabbi only takes tips? Red's so lame and I'm ashamed I laughed at that.\n\nSorry it took me so long to write back. I'm sure you heard about the trial from Sam or my parents (they love you, by the way). They say sentencing should be in a few days from now but Dad says not to get my hopes up since Jeremy is a white blue blood male that has family money and...I'd be lucky if he serves a few months. Guys have gotten less time with more evidence. Mom wanted to file a civil suit for damages but I don't really want to deal with it anymore. Either way the restraining order is good for a couple years so that's something, I guess.\n\nThank you for the flowers. Orchids are my fave.\n\nI heard the graduation festivities were killer -- it's just not a party until someone is arrested for throwing shoes at salty bitches. \n\nYale sent my diploma and their sincerest regrets I'm passing on law school. Dad says he understands but I'm sure steam shoots out of his ears every time he thinks of how much money he wasted. I don't know, maybe one day.\n\nI probably won't be back until the end of July...God, I can't believe it's been two months already. My friend Colin got me a job bartending near the duplex...tell Red I appreciate him letting me and Sam living there rent free? Maybe? One can hope. \n\nI'm off my meds now. I can't sleep but I'm functioning for the most part. Still don't like being touched so no hugs for now but a high five I can do. I miss you too. Sorry I haven't invited you to visit; I just don't want anyone to see me like this. The only reason I let Sam come up is because he feels guilty he wasn't there to prevent it, which is dumb but whatever.\n\nAnyway, that's all I got. Oh, and ask Red 'What do you call a fake noodle?\"\n\nMiss your face,\n\nSydney\n\n\"Sweetheart...oh fu...ahh Contessa, stop. Come up here.\"\n\nI threw the black and white checkered blanket off my head before sucking my way up his shaft, releasing the tip with a wet pop. \"What's wrong? Too much teeth?\"\n\nShane looked flustered as he stared up toward the ceiling; well, where the ceiling would eventually be. \"No, it was good...too damn good. But I can't have my pregnant wife givin' me a blowjob, doesn't feel right.\"\n\nI pouted while my fist curled around his dick and gave it a good squeeze. \"Come on Shane, this is the first time in three months I've felt anything close to horny. Are you really gonna puss out on me?\"\n\n\"Not a chance. Come up here, dirty girl.\" I pushed the blanket aside and gleefully climbed onto his lap while he held his steel-hard member upwards enough for me to slide down the length of him. Pleading whimpers escaped my mouth as I held on to vertical boards on either side of him for support. Shane wrapped his arms around my back to steady me, kissing down my chest until his lips connected with a hard nipple. \"These still hurt, sweetheart?\"\n\nI nodded my head and he took his time, tongue swirling around my areola before suckling the dark, stiff peak into his mouth with a content sigh. I took my time riding him, squeezing him possessively within my body while he tended to my right breast. I felt that familiar build-up but something was missing...\"Shane, my clit.\"\n\n\"Mmm,\" Shane moaned as he gripped my spreading hips in his large hands, pushing me down as his hips lifted up to meet my desperate sex with his. \"What was that, 'lil girl?\"\n\nI shrieked out suddenly when one of his thrusts hit me deep. \"Rub my...I'm so close...\"\n\nHe graciously put me out of my misery and straight into my orgasm, rubbing the slick button as I cried out into the night sky, tightening and releasing my pleasure around him. I panted heavily and he held me still, one hand around the back of my neck and the other on the side of my stomach. As I caught my breath a tiny nudge hit right where his hand was. Those emerald eyes went wide and round in surprise. \"Holy shit, was that...?\"\n\n\"Yeah. I told you, it kicks at the weirdest times.\" I pushed my hands through his auburn mane while taking in the unobstructed view of the stars above us. We were making love in the shell of a house -- our house. The frame was almost complete but there were no walls or windows or even a roof yet. It was the beginning of our home, the beginning of our lives of three. \"We should put in a skylight. You were right, this view is amazing.\"\n\nShane rested his hand on my cheek to grab my attention, his eyes as expansive as the night air. \"Yeah. My view is perfect.\" Our smiles and words faded naturally as we started again.",
        "***\n\nDear Syd,\n\nHe said 'An imPasta\". You two are ridiculous.\n\n***\n\nDear Tess, \n\nYou love us.\n\nAnd I love you. Shane too. Thanks for existing.\n\n***\n\nJuly\n\n\"Sweetheart, you gotta slow down.\"\n\n\"I can't slow down!\" I yelled while trying to jump my legs into my jean shorts,\" She's finally home! God I missed her so...wait...\" I tried to get the buttons to meet to no avail, groaning unhappily in the mirror. \"Aww man, not these too.\"\n\n\"Well, you're five months pregnant.\" Shane rubbed my swollen stomach while looking at me with a loving gaze that made me want to punch him in the face. \"Mom thinks you're havin' a boy, something about carrying low and your nose growin' or some old wives tale shit like that.\"\n\n\"Oh great, not only am I fat but so is my nose.\" He gave my neck a whisper of a kiss, completely immune to my moodiness at this point. \"I hope she's okay with this.\"\n\n\"Tell me again why you haven't told Princess yet?\"\n\nI shimmied out of my shorts and tossed them in the closet, standing in only my bra and panties. \"Because I didn't want to share the happy news with her while she was going through everything. It didn't feel like the right time.\"\n\nShane walked into the closet and began perusing my side, eventually coming out with one of the maternity dresses I bought last night and refused to wear. \"So you're just gonna show up and surprise her? That doesn't make any sense, and there's no hidin' that belly now. Arms up.\" I did as he asked and he slid the blue and white striped fabric over my head and down my body before busying himself with tying the sash in the back. \"Don't be nervous, I'm sure it'll be fine.\"\n\n\"I hope so.\" I turned around and faced him, my eyes starting to burn as my heart swelled with love and a hormone surge. \"You're the best husband and I...I-I don't deserve you...\"\n\nHe started wiping the enormous tears streaming down my cheeks. \"Aww, okay. I love you too Tess, but you gotta get out of here. It'll be midnight before you snap out of this mood swing and I got stuff to do.\" I smiled despite my intense emotional outburst and he drew me into a hug with several kisses on the top of my head. \"I'm defrostin' the catfish for supper. Okra still grossin' you out?\"\n\n\"Not if it's fried,\" I mumbled into his tee-shirt. He held me a little tighter and I sighed contently. He always knew what I needed even if I didn't. He was perfect like that.\n\n***\n\nI was restless the entire drive to Sydney's parent's house, nervously excited to see her. She decided she didn't want to move into the duplex until it was finished and Shane totally understood. It wasn't like he was charging her rent anyway so she had flexibility to occupy when she was ready.\n\nHer parents lived in the uber-wealthy Montowese neighborhood in North Haven; my family was rich, but judging by the massive 7,000 square foot mansion I pulled up to -- in addition to a valet kind enough to park my car for me -- her family was \"old money\" rich. You'd never know she was, mostly based on her hilariously vulgar demeanor and basic potty mouth.\n\nI rang the doorbell and waited a minute before it opened, but there was no one behind the door. I walked inside and looked to either side of me as the door closed behind me, probably on a remote control. \"Hello?\" I called out timidly, a little freaked at walking in someone's home unannounced. I heard a small noise to the right of the Imperial staircase behind a pair of pocket doors. I opened them carefully, hoping someone would be behind them...\n\n\"SURPRISE!\"\n\n\"Oh my God!\" My hand flew to my chest as my heart thumped hard at the shock. Sydney's whole family, her parents and her older and younger sisters, were blowing on paper trumpets excitedly. The entire floor of the massive dining room was blanketed in lemon yellow and leaf green balloons, streamers and tinsel lining the perimeter of the crown molding. On the twelve-person dining table were presents. Presents stacked on more presents surrounded by robin's egg blue boxes from Tiffany. I could barely see out the wall of tears in my eyes when Sydney skipped over to me with a tiara in her hands. \"Wha...how...\"\n\nA practiced smile spread on her face as she placed the jewelry on top of my curls, careful not to touch my hair. \"Girl you know I'm stealth, even in confinement. Plus your husband has a big mouth.\"\n\nI tried to keep it together and pretty much failed miserably. \"You didn't have to do this...\"\n\n\"Do what, spend money? I happen to be an expert at that.\" Mrs. James came up behind Syd and touched her shoulder, causing her to shrink into herself as her mom snatched her hand away like her daughter's skin burned her. She recovered quickly. \"Mom, this is Tess. Preggo, my mom Charlotte.\"\n\nSydney's mom looked like she just walked out of a magazine. Her blonde hair was perfectly coiled on her head, her slim frame poured into her diamond-hued party dress that illuminated the hue of her pale skin and strikingly clear blue eyes. She stepped forward and gave me a hug before whispering in my ear \"Congratulations, and...thank you for being so good to my daughter.\"\n\nMrs. James pulled back and dabbed at her eyes with a Kleenex that was tucked inside her sleeve. Sydney's father and sisters, Rachael and Carson, introduced themselves briefly and extended well wishes before leaving the room, sliding the doors closed behind them. Then it was just us two. I broke the silence first. \"This is beautiful, Syd.\"\n\n\"The James' throw a good party. This way they get an excuse to crack open the wine and we didn't have to do all that \"Guess the Baby Food\" bullshit.\" She pulled out a chair for me to sit and settled on the opposite side of the table with a hesitant smile. She looked healthy physically -- she gained her weight back but she was still a bevy of tight muscles and dangerous curves. She looked good, though I knew she didn't feel the same way on the inside. \"So. You're cooking a human. How long?\"\n\n\"Five months. I was already eight weeks when we went to Mexico.\" I fiddled with my fingernails, chipping away at the beige polish. \"I'm sorry I didn't tell you.\"\n\n\"Eh, don't be, I get why you didn't. But just because what happened...happened, doesn't mean I don't want to hear your good news. I get to be an aunt again, that's cool.\" She tapped her long fingernail on the mahogany, keeping my gaze. \"He got three years.\"\n\n\"I know. He deserved a lot more.\"\n\n\"Yeah. Look, I'm just gonna say this and then I don't want to talk about it ever again, okay?\" My lips twisted to the side but I nodded before she took a big breath. \"I was abused. I was...I was raped. That is not my fault. I am not less of a person because of it. It sucked...it really fucking sucked and I don't know if I'm ever going to heal from it but it's not the end of my story. It's just on pause.\" She raised her arm facing me, showing a small, black semi-colon tattooed on her wrist. \"Can we just be normal? Or at least fake it for a while?\"\n\nFor the first time since I got knocked up and bawled over the slightest thing, I didn't cry. My heart was wrecked for her and always would be; but she was still here. As long as she kept fighting I'd be right by her side. A teasing smile played on my face. \"Hipster.\"\n\n\"Bitch.\" I lifted my palm to her and she took a beat to prepare to make contact. She gave me the world's shortest high five before tucking her hand in her lap. \"God, that was fucking lame. So is it a boy or a girl?\"\n\nI grinned and leaned over the table slightly to whisper the sex to her. With a celebrated shriek we laughed and began talking a mile a minute about clothes and schools and how the baby had to take karate and ballet so it would be well-rounded. She told me about the characters at the rehab and I told her which accountants were screwing around at the firm. We naturally fell back into our relationship without missing a beat, even though we were consciously preparing for both our lives to change forever.\n\n***\n\nNineteen Months and Endless Sleepless Nights Later\n\nThe sharp wail of my son's cry through the baby monitor didn't even faze me anymore.\n\nAfter a year and a half of his wonderful existence on this earth we were pretty good at deciphering his cries. Staccato whining meant he was hungry. A long scream, followed by a dramatic pause then an even longer scream meant he needed to be changed. This one, the one that pretty much occurred at five every morning meant he was awake so we needed to be awake too. I rolled over onto my back and patted Shane's hard chest with my knuckles. He moaned sleepily, only waking enough to determine which one of us was vacating our warm, comfy bed. \"On three. One...two...three,\" He mumbled, not even bothering to open his eyes. \"What'd you throw?\"\n\n\"Rock.\"\n\n\"Hmm. What'd I throw?\"\n\nI sat up slightly to look at his hands. \"Something between a teepee and a gang sign. You know the rules; any incomplete signs is an automatic DQ.\"\n\n\"Damnit.\" Thirty seconds and his breathing started to even out, I knew I was going to be the one getting out of bed. All of a sudden the crying stopped and morphed into a happy squeal, a bright voice singing softly from his room down the hall:\n\n\"Different color my passport, <br >Instagram my stack load, <br >hashtag my day wear and your girl drank my day care and I'm born rich life ain't fair, <br >silver spoon coon, ho! <br >Ain't nobody sicker and my Fisker, vroom vroom ho, ain't nobody, <br >Fiskers don't make noise when they start up, just so you know...that's right, no they don't! Isn't that right my little hellbeast!\"\n\nI couldn't stop myself from laughing at the impromptu concert and neither could Shane when he picked up the little walkie-talkie and pressed the red button, \"Princess, I told you to quit rappin' to my son.\"\n\n\"Tell Daddy Childish Gambino is a God and it's important to be a well rounded musical genius isn't it?\" A gurgling coo was his reply and she laughed. \"You're right little man; Daddy is a basic bitch. Now let's move on to 2 Chainz. Four a.m. I'm just gettin' started, for my birthday I threw me a surprise party...\"\n\n\"Ugh. Okay, I'm going before she starts dropping the N-word.\" Shane grunted in response before grabbing his pillow and slamming it over his head. Grabbing my robe from the back of the en suite door I covered my naked body and made my way to my son and his impromptu music teacher.\n\nElijah Adam Thomas. My little bundle of love and light had completely changed my heart. I never thought I would love anyone as much as I love Shane, but after thirty-nine hours of labor and an emergency C-section he reluctantly came into the world, all ten pounds, one ounce of him, all fat cheeks and red hair. I was tired and sometimes forgot to shower for a few days and Eli's always going and going and I was exhausted...but it was worth it, because he was ours.\n\nThe person he changed the most was probably Sydney.\n\nA week after he was born Sydney effectively moved in and took on a nanny role, even with her working full time as a bartender in New Haven. Sixteen months later and he was the only person on earth she could have physical contact with. She said it was almost like an addiction to \"Mini-Hellbeast\" but he was healing her in ways none of us could. That was why this morning, like most mornings, I found them sitting in his rocking chair, him falling fast asleep in her arms. I watched them for a few minutes before interrupting, which I hated to do. \"Shane's going to take your key away if you keep it up,\" I scolded softly.\n\nSyd opened her eyes and pulled Eli's giraffe blanket over his arms. \"All little boys need to learn about trap music or else they're gonna get beat up on the playground.\"\n\n\"What playgrounds did you go to as a kid?\" She rolled her tired eyes and smiled wearily. She worked all night almost every night and came over most days to hang out with Eli while Shane and I went to work, even when we hired an actual nanny. Syd had burned the candles at both ends until they turned to ash but when we tried to get her to slow down and rest she waved it off. Eli was her happy place and eventually we just let it be. \"How did your shift go?\"\n\nShe shrugged. \"Apparently we have a new owner that's supposed to show up in the next week or two, some bigwig from London who owns, like, half of Europe. Why he'd buy a random bar in Connecticut I don't know, but something about it is giving me a weird feeling. Not bad, just...restless.\"\n\n\"You wear it well.\" She tipped her imaginary top hat to me in thanks. \"Want me to take him?\"\n\n\"Nah, I'm good. Go back to bed.\"\n\n\"Fine, but no driving until you take a nap.\" She brushed me off as usual so I left her alone. Making my way back to my room I paused in the doorway and was greeted by a pretty great sight. Shane was awake -- all the way awake -- lying on his side with a lascivious grin and some pretty great bed head. Morning sex was clearly on his mind and with our son taken care of we could spend some time in our happy place. And the best thing was we could take a nap afterwards. \"Hi,\" he rasped.\n\nI started untying my robe before I even shut the door, a blissfully happy grin easily parlaying my undying love and endless happiness. The silk fell from my body as I made my way over to the love of my life, nothing else needing to be said, except:\n\n\"Hi.\"\n\nThank you for reading my first story! This won't be the last of these characters: Shane and Tess' journey has ended but Sydney's is just beginning. So much love and peace to all those who stuck with me to the end!"
    ],
    "authorname": "Swig",
    "tags": [
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/breaking-the-ice-ch-08"
}