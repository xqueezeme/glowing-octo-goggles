{
    "title": "The Bra Salesman Ch. 06",
    "pages": [
        "Thanks for all the comments and votes! I appreciate every one of them! :)\n\nChapter 6: The Study\n\nWhat the fuck is wrong with me? Yeah yeah, I know people have been asking that about me for a long time, but I'm serious. Something is drastically wrong with me and I have no idea what it is. I'm on my way over to Tasha's right now, and I've had this weird feeling for several days now like I'm sick and rundown with a tightening around my heart. So as I'm walking over to Tasha's, I'm going through the last few days in my mind trying to figure out what might be going on. I mean, other than a severe need to be institutionalized for moral depravity.\n\nThat last session with Dave ended four days ago, and I swear every fucking day he gives me an earful about how much he wants to fuck her again, about how sorry he was for how he behaved, and could he please please please please fuck her again, blahbeddy blah blah blah. He even tried to buy me lunch the other day, which coming from a cheap bastard like him meant he was really trying to suck up to me.\n\nBut is that what's making me feel so weird now? Is that what's wrong with me? Y'know, I have to be honest with myself, cutting Dave off wasn't really about Dave. I mean, yeah I didn't want to keep taking those reckless risks, but it's more than that. Or is it? No, that's not what's wrong with me. But I don't know what it is. God, I'm less decisive than a teenager picking out what shirt to wear.\n\nSo what is wong? I mean, I'm taking advantage of her and fucking her every chance I get, and I let Dave take advantage of her as well. So why don't I want to let him fuck her again? What's the big deal? She's got enough tits for both us, that's for sure. And her ability to fuck both of us together simultaneously is nothing but extraordinary to the point of weirdly paranormal. Yeah, that bondage stuff was a little dangerous in terms of the whole scam. But the fact is, she really liked it and wanted to do it again. So why the hell don't I? What's the big deal with the two of us fucking her?\n\nSomething's going on with me and I'm not sure what it is. Ok, keep going through the last few days, I've still got some time before I get to Tasha's. Let's see, Dave's last night was four days ago. The next evening after that I went to Tasha's and sat down on the couch with her and said, \"Y'know, Tasha, you have made such amazing progress with these exercises that I don't think we need to continue with the super-duper ultimate-radical therapy sessions with Dr. Cooper anymore.\" And thank you oh so much Dave for forcing me to hear the phrase \"super-duper ultimate-radical\" spew out of my own mouth.\n\n\"Oh, ok.\" She seemed surprised but wasn't all that upset about Dave not coming any more. \"So... we're done with the therapy?\" I think she's concerned that maybe we were stopping the therapy too soon.\n\n\"No, we still have work to do. I just don't think the more rigorous intervention is justified anymore.\"\n\n\"Ok, I have to say I'm a little relieved. I like Dr. Cooper, but boy he can be rough sometimes!\" I don't blame you, after seeing that his idea of sex is pounding away at a woman's pussy as hard as he can until the blood vessels on his forehead burst. \"But I really like working with you, Albert. Thank you.\" She gave me a smile that made me feel warm. \"In fact, I wanted to ask you if there was anything I could do for you. For being so helpful.\"\n\n\"Actually, there is something.\" This is perfect, I had thought of something to get back on track with the whole scam. Since Tasha said she'd been talking to her neighbor, I figured I'd better come up with another excuse to do what we're doing, because the longer these \"exercises\" go on, the less sense they make. Like they made a whole lot of fucking sense to begin with. Still, I had an idea about where to go next. \"I'm going to be giving a talk at a lingerie symposium in a few months on how different types of fabric can have an effect on a person's libido. But although I have read all the literature, I want to have a particular example I can use, a series of personal anecdotes, so to speak. So I wanted to ask you if you would be willing to put on different lingerie each night before we did our exercises and rate how aroused you feel and how willing you are to have sex.\"\n\nIn preparation I had gotten some sets of lingerie in her size, and now I pulled one out for her to look at. She gave me a great big smile, snatched the lingerie from my hands, kissed me on the cheek, and walked into the other room to put it on for me. I don't know why she felt the need to get dressed in another room, it's not like I hadn't seen her naked a thousand times already, but I guess she wanted to do this properly in the name of science or something.\n\nWhen she walked out, I was suddenly unable to speak coherently. I mean, even more so than usual. I had given her a dark-blue polyester bra and panty set that didn't have very much ornamentation on them but had less cloth than typical lingerie. Her massive breasts were pressed together and formed a line of cleavage that seemed to run forever up her chest. The thong panty was so low in her crotch that some tufts of her pubic hairs peeked out of the top, and it didn't even bother to try to cover up her perfectly round ass.\n\nI gulped and said something profound like, \"Wow. You look amazing!\" She blushed and said thanks. \"So,\" I continued in the most professional voice I could muster, \"on a scale from 1 to 10, how aroused do you feel?\"\n\n\"I would say 8.\" Holy shit, she was so sexy. I can't stop looking at her smile. No, that's not true. It's not her smile my eyes are glued to.\n\n\"And, uh, how willing would you be to have sex?\" Shit, why am I so nervous?\n\n\"Right now, I'd say about 4.\" Her chin dropped a little and then she looked at me intently from under the strands of blonde hair draped across her face. \"Is that it? Is that the information you needed?\"\n\n\"Well, yes,\" I said, \"but it would really help if I could see first-hand just how aroused you are.\"\n\n\"What do you want me to do?\"\n\n\"If you don't mind me rubbing the lingerie against your nipples,\" I said, licking my lips and putting my hands on the fabric of her bra, \"I can examine how that affects your level of arousal and add that data to my research statistics.\"\n\n\"Oh sure, go right ahead!\"\n\nAs I massaged her heavenly breasts, I asked, \"Does this help with your level of arousal?\" Because I have to tell you, I find this amazingly helpful to the erection in my pants right about now.\n\n\"It certainly does,\" she told me. \"I'd rate this about a 6 now.\" Did her apartment just turn into a sauna? Or is it just me? \n\n\"And what about this?\" I reached down and stroked the fabric of her panty. She leaned in and moaned softly in my ear, \"And now it's a 10.\" \n\n\"I see,\" and then gulped audibly, which made her giggle.\n\n\"So that's what you needed for your research?\" she asked while taking a step backwards.\n\n\"The numerical ratings are all very helpful,\" I said smiling but a little sadly, \"but collecting some qualitative data would be enormously helpful.\" Normally this is the time when I would worry about going too far, failing miserably, blah blah blah. But I think the time for worrying about that is long past.\n\n\"Oh sure, I...\" her smile morphed into a look of confusion, \"uh, what does that mean?\"\n\n\"Well, it means measuring your level of moistness, how engorged your bosom becomes, the time it takes to stimulate you into orgasm, your willingness to give oral pleasure, things like that.\" I've seen the wide-eyed look of shock on your face before, don't worry I've got plenty of bullshit ready to go.\n\n\"Hrmm... that all sounds kind of... y'know... like sex.\" You bet your smooth, round, scrumptious ass it is.\n\n\"Oh it definitely is, and I don't want to make you uncomfortable. But given the intensity of our exercises up to this point, I had hoped you would be amenable to supporting this scientific endeavor. Remember, this isn't sexual per se, rather this about collecting a series of data points that will maximize the scientific benefit of the study and establish a baseline that all future research could be based upon.\" I told you I had a shitload of bullshit ready to... wait, that was a stupid metaphor, shitload of bullshit. Never mind, just keep going.\n\nShe thought about it for a second, \"Well, since it's all for science and it's not about sex, then that's ok.\" And with that, she hugged me and wrapped her supple legs around me as I carried her into the bedroom and threw both us down on the bed. \n\nI unclasped her bra as she tore my shirt off, then I pulled her thong off as she clawed at my pants. We were like a blur of teenager arms trying to take off our own clothes and the other's clothes and not knowing what to do first. But it didn't take long before all our garments were aimlessly scattered across her bedroom floor and furniture.\n\nShe spread her legs wide apart as I put my throbbing cock into her wet pussy and began slowly sliding in and out of her. She groaned in pleasure as I bent down and bit her erect nipple. Within minutes, I was squeezing her breasts as hard as I could and thrusting forcefully into her dripping wet cunt.\n\nBut right before I climaxed, she slid out from under me and playfully pushed me down so that my back was leaning against the headboard. She turned around and straddled me, with her back to me, and slid her moist pussy over my erection. She then proceeded to bounce up and down on top of my cock as hard as she could. She gasped each time she came down as her breasts shuddered uncontrollably from side to side.\n\nI watched in amazement as this gorgeous goddess with gargantuan gazongas pummeled my cock for a few minutes. Yeah yeah, sometimes I talk in alliteration when I'm horny, like I fucking care. All I'm saying is that it took a few moments before my wad of jism exploded inside her. \n\nShe kept humping my still erect dick for another minute before she let out a groan of contentment and slowed down. Now that we were both finished, she leaned back, rested against my body with a smile on her face, and let me play with her tits for a long time as my drained cock slowly deflated.\n\nThat was the first night of my \"research,\" and I guess I should use air quotes around that. Well, you're reading this, so I guess I can use actual quotes. At any rate, that was fucking terrific, so nothing wrong there. \n\nWhat about the second night? Let's see, next I brought her a dark purple negligee that barely extended down to her thigh with no additional bra or panty. She eagerly put it on as I casually looked at the pictures and diplomas she had on the wall, as well as all the photographs she had spread throughout. When she came back out, I asked her about her level of arousal and willingness to have sex. She answered me as she led me over to her bedroom. \"Let's see, I would rate my arousal at... 5. And my willingness to have sex at... hrmm, I'd say 9.\" And with that she pushed me down on top of her bed so I was lying down. \n\n\"And... uh.. how about your willingness to perform... oral stimulation?\"\n\n\"Oh, I would rate that as very high. Like a 9. Do you need me to show you?\"\n\n\"It would be helpful, if you don't mind.\" I watched her bend over me and grab my penis. She smiled as she rubs up and down a few times, and I became nearly erect. Then she leaned over, her hair falling over her head and onto my stomach, and I felt her put her soft, wet lips around the tip of my penis. As she slowly moved her head over the top of my shaft, my erection was complete. \n\nI reach out and pull her hair to one side so that I can get a good look at her face and what she's doing with that succulent mouth of hers. She moved her head up and down a few more times and I could feel her spittle has moistened my entire cock. \n\nWhen she puts her head all the way down so that the tip of my penis is halfway down her throat, I can feel the intense throbbing of my cock against her neck and mouth. Oh my fucking god, she is maestro of cock sucking, and I tell myself that I should make a commemorative plaque that displays that title to give as a gift to her before I remember that is a stupid, fucking idea.\n\nShe lifted her head and smiled at me again, and then she climbed on top of me on all fours still wearing her negligee. I reached up and squeezed her tits through the fabric which made her sigh with arousal. Soon she just slid her hips over my crotch and put my already erect cock into her damp pussy. She moaned as she rocked back and forth, and I grabbed her chest to hold her tits steady, which with no bra support were already swinging above me inside her negligee.\n\nAfter a few minutes, she sat up and pulled the negligee off her beautiful body so she was naked. I tried to reach up to grab her, but she held my hands firmly in hers and kept fucking me. She laughed playfully as I tried to free myself, but I couldn't help but laugh as well. She interlocked her fingers in mine, and I was powerless to free myself. Not that I would, mind you. \n\nI have stood on mountaintops reveling in the majestic view of a horizon more spectacular than words could hope to describe. I have gazed into a starry night sky so clear that I could visibly see the remnant haze of the entire Milky Way too immense for my mortal brain to comprehend. I have seen works of art that have literally brought me to tears with their beautiful insight of the human soul. So believe me when I tell you that all of this pales in comparison to watching the wondrously huge tits of this woman bouncing in front of me while using her drenched pussy to fuck my throbbing cock. \n\nShe was slamming herself on top of me harder and harder, her thighs slapping against my groin, and breathlessly whispered, \"yes\" with every plunge. \"Yes! Yes!\" I wanted to touch her so bad, but with my hands held back, all I could do was watch her, \"yes.\" I watched her skin jiggle with every thrust, \"YES!\" I watched her tits shudder as she crashed her body into me, \"YES! YES! YES!!!\" \n\nEven after I unleashed my load of cum into her, she continued slamming herself down on me harder and harder. I could feel her soft, cum-soaked vaginal walls enveloping my dick and swelling with dampness. I would even say she caressed my dick with jism-covered happiness, and as weird as that may sound, I totally believe at that very moment her happiness was indeed covered in jism.\n\nWithin a few minutes, she let out a groan of complete gratification and then collapsed on top of me, and I held her for a long time until her gasping eased into a peaceful sigh of contentment. I know I said \"complete gratification\" on her part not knowing if that's true or not, but that's what I like to think, so just let me have my moment, ok?\n\nSo anyway, is that what's wrong with me now? Nah, that second night of \"research\" was fucking fantastic, no problem there either. But something is most definitely wrong with me now. I have this weird feeling of dread that I can't shake, this nervousness that screws up my thinking. So something must've happened at some point. Ok, keep going, maybe it'll come to me.\n\nLast night was the third night of my \"research,\" and I gave her a ruby-red bra and panty set with beige-lace trimming that was so thin you could see everything through it. So when she walked in wearing that set, I could see that her dark nipples were erect and I could practically count every hair in her crotch.\n\nAs we walked towards each other, I asked her my research questions and she answered, \"I give these an 8 in arousal, and a 10 in willingness.\" When I asked her if she felt especially sexually eager, she said, \"Most definitely!\" and wrapped her arms around me and pulled me close while I buried my head in her neck and lightly bit her. Ok, maybe it was more than lightly. \n\nAnyways, she moaned in appreciation, and I ran my hands all over her body. By the time we reached the bed, we were both already naked. I don't even remember how we got each other's clothes off. All I remember is throwing her down on the bed cover and pushing her legs apart to get at that wonderful pussy of hers. I could tell she was already drenched with arousal, so I held her legs apart as I carefully shoved my cock inside her. She didn't resist me at all, in fact she put her arms over her head and let me knead her tits and nipples with my hands as I moved in and out of her wetness.\n\nI squeezed her breasts and held her body down as I shoved myself into her harder. She gasped \"ungh\" with a huge grin on her face. I shoved into her again even harder, and she screamed, \"OHH!\" There is something about that sound, that loud \"UNGH\" that she unleashes when she's reaching orgasm which makes me crazy with... I can't even describe that terrific timbre with a touch of titillating... I told you, I alliterate when I'm horny, get over it.\n\nI let go of her naked chest, already glistening with perspiration, and dug my fingers into her luscious hips so I could propel myself into her as hard as I could. She gasped in appreciation with every thrust, and her breasts shook with each impact.\n\nWithin a few thrusts, I heard her scream \"UNGH!\" in orgasmic pleasure, but I wasn't done yet. I continued to pummel her body, and she wanted me to keep going. As I watched her body writhe and her tits tremble with excitement, she screamed again with another orgasm. This time, I soon followed, as warm cum filled her damp chasm.\n\nShe rolled me over so that I was underneath her now. She was on all fours on top of me and she pressed her sweaty breasts against my chest. Then she slid her body down, continually pressing her massive chest against me. She used her hands to push her huge tits into my body and rub them against my skin. She was smiling as she used her breasts this way for a couple of minutes, and then I realized she was giving me a tit massage. For another ten minutes, she rubbed her massive bosom all over the muscles of my appreciative body.\n\nAfterwards I reached up and massaged her tits in return. As I squeezed and tugged on her nipples, she moaned and gasped. I put my mouth on her erect nipples and sucked as hard as I could, and soon she was screaming \"YES! YES! YES!\" When I felt her entire body tremble and shudder, I realized that she had achieved orgasm simply from my playing and sucking on her tits. I didn't realize she could orgasm through nipple stimulation alone, maybe the tit massage had put her in the mood. At any rate, she collapsed on top of me exhausted and my head was buried underneath her chest.\n\nYeah, that was REALLY fucking awesome! Three nights of \"research\" so far, and all of it was fantastic, nothing onerous anywhere. So that's what's happened for the last several days, and I am no closer to figuring out what's wrong with me. Ah well, I'm at her apartment now, so I guess I'll knock and figure this out later. \n\nShe greets me at the door with a smile and invites me in. \"Ooooh, what do you have for me tonight?\" she asks as she closes the door behind me.\n\nI hand her a set of ivory lingerie with a paisley design. Along with the bra and panty, I give her some ivory stockings and an ivory choker. \"Try this on and see what you think.\" She grinned and went into the back room.\n\nI was idly scanning the books on her bookshelf and admiring the variety of authors when I heard the door open behind me. She walked in wearing the ivory choker and stockings, and nothing else. I gulped audibly as she walked up to me. \"You, uh, you forgot the bra and underwear,\" I said nervously. Good lord, why the fuck am I so nervous? What the hell is wrong with me?\n\n\"The underwire was digging into me, so I didn't put them on. I hope this doesn't mess up your research.\" \n\n\"It's fine, we can discuss how the stockings and choker feel. How aroused do you feel?\"\n\nShe giggled, \"10. But I think it might be because I don't have any other clothes on.\"",
        "\"I see, and how about your willingness to have sex?\"\n\n\"Oh, I am definitely at 10. Maybe more.\"\n\n\"Really? What do you mean?\"\n\n\"It's like, we've done all these great exercises over the last few weeks, and they've been great. And after breaking up with my boyfriend, they've been almost as good as having sex. But now that I'm wearing these stockings and nothing else, I just want to have sex. I want to rip the clothes off your body and just have sex for hours and hours. No exercises, no therapy, no anything. I just want to have as much sex with you as possible for as long as possible. I want you to do whatever you want to my body. I want you to kiss me and touch me and do anything you want. That's what I feel right now.\" \n\nAnd then she kissed me. \n\nDuring all the fucking and licking and grunting and squeezing we have been doing for a few weeks, not once, not one time did we ever kiss on the mouth. And now that we were kissing, I had no earthly idea why we hadn't done this before. This was not a quick peck on the mouth. No, this was a long, lingering kiss where you could feel every trembling inch of her moist, perfect lips. It was the sort of kiss where you wanted to explore her entire mouth with your tongue and you did. I don't know how much time passed, and I don't know how long we stood there, but we kissed and it was beautiful and magical and spectacular.\n\nFUCK!! I know exactly what's wrong with me now! Goddamnit!! Shit!! I see it now! I am such a fucking idiot!! Now I get it! I'm fucking falling in love with her! How the fuck did I let this happen? What kind of goddamn fucking moron falls in love with a woman he's lying to in order to fuck her pussy? Jesus fucking Christ, I must be the dumbest man alive! I can fuck this woman any time I want, however I want, and what do I do? I fall in love?!? Good Lord, I'm a dolt! No, I'm worse than a dolt, I'm a dolt in love!! That's just fucking perfect! Now I've ruined everything! Oh shit, does this mean I'm going to get a fucking conscience now about what I'm doing? Fuck, this is a disaster!!\n\nBut by now, I am too mesmerized by her kiss to think of much else. At some point, our lips break apart and we keep our faces less than an inch apart. I look into her eyes and she is gazing back at me. \n\nSoon she is ripping my clothes off. I don't mean metaphorically, I mean she grabbed a fistful of my shirt and literally tore it apart. As in, I'm walking out of here later and will shell out additional money to replace the rags wrapped around my neck that I used to call a shirt. But in this moment, I couldn't fucking care less.\n\nWe pull off my pants together and it's not long before we are both standing there naked, aside from the stockings hugging her flawlessly curved legs. I can feel her arms around me, and I pull her hips towards me so that our bodies are in as much contact as possible. Then I reach down and kiss her, and we use our hands to explore each other's bodies further.\n\nWe don't even make it to the bedroom. Somehow we make it to the couch, I don't even remember how. I honestly can't even tell if I'm on top or she is. Our lips are connected and our bodies are together, so nothing else really matters. My fingers are in her hair, her hands are on my back pulling me close, one of my hands is clenching her ass, her thigh is lifted up into my hip, my teeth are biting her nipple, her breasts are being pushed into my face, my cock is throbbing inside her, her pussy is drenching wet, and together we are writhing on the couch in a single mass of flesh and arms and legs and hair.\n\nShe positions herself on all fours on the couch, her elbows resting on the arm of the couch, as I enter her from behind. I gently rub her shoulder with one hand as I use the other to guide her stunning body over my anxious cock. And I don't mean anxious as in full of anxiety, I mean anxious as in so SO ready to fuck.\n\nI can hear her moan as I softly rub the tip of my penis against the nub of her clitoris. I know she's wet already, but I want her to enjoy this. I move myself up and down against her slit, giving a slight nudge inside her every so often. When at last I put my hand on her ass and delicately push myself inside her waiting cunt, she grunts and shakes her hips to help ease me in.\n\nSoon I am moving in and out of her, and she is rocking her body in motion with mine. Her lovely breasts sway underneath her and my mouth waters at the thought of putting my mouth on her huge tits again and covering every inch with my tongue. She shoves her hips backwards into my groin, and she gasps \"yes.\" When she plunges back harder with another \"yes,\" I have to hold her hips so that we don't lose our balance on the couch. \n\nShe is pounding her body back harder and harder into me, slapping her ass against my body, \"YES! YES!!\" and the veins of my cock are pulsing and filling with cum. \"YES! YES! YES!!!\" Her blonde hair is flailing wildly now, and she is desperately panting for breath with every scream, \"YES! YES!!\"\n\nI am ready to climax now, but she slides off my hardened cock before I reach that point. She positions me so I am sitting down on the couch and then she straddles my body and presses her gorgeous chest into my face. I use my hands to lift her tits, and my fingers sink deep into her tender flesh as I wrap my lips around one of her erect nipples. \n\nI hear her giggle as she pushes her body towards me. Her hips are hovering just over my cock that by now desperately wants to ejaculate, and she teasingly rubs the outside of her pussy around the tip of my penis. I thrust my groin upwards, but she doesn't let me enter her again just yet. You know what's weird? If she had teased me like this a few days ago, it would have annoyed the shit out of me. But now I find myself laughing at her play. Laughing? What the fuck are you laughing about, dickwad? Oh I am in deep deep trouble.\n\nAt first I run my tongue over her perky, sensitive nipples and then I suddenly bite down on them, which makes her body shudder with pleasure. I softly lick her tits again before gnawing hard on them again, and her body shakes again. \"YES!! YES!!\" I take the opportunity to push her hips down and both of us gasp as my cock drives deep into her wetness. \"UNGH!\" She grinds herself up and down and my dick is grateful to finally feel the heat of her soaking wet cunt again. \"UNGH! UNGH!!!\" \n\nAgain and again she drives my stiff shaft deep into her \"UNGH!!\" Her beautiful body is writhing in contentment \"YES! YES!! UNGH!\" My teeth bite down on her nipples again and she excitedly screams \"UNGH!! UNGH!!\" smiling and gasping. It doesn't take long before I shoot streams of warm jism deep inside her soft, welcoming pussy. \"OOOOOOH!!!\"\n\nBoth of us sit there panting, feeling my throbbing cock against her soft, swollen vagina, until our heart rates eventually slow down. Her hair is beyond disheveled, and the sweat from our bodies is making us stick to each other as we feel our bodily fluids mixing and blending inside her. We look into each other's eyes and then together press our faces forward and kiss. \n\nOur lips are barely open, tongues dancing in each other's mouths, crescendoing into a passionate embrace. When our mouths eventually part ways, we smile at each other. \"So,\" I say.\n\n\"Yeah,\" she giggles. She bends her head down and lays it on my shoulder, and I mindlessly twist one of her nipples between my fingers. \n\nSuddenly she sits up on top of me, my cock losing its erection within the clenched muscles of her pussy, \"I hope you don't mind the kiss, I just... I've wanted to do that for a little while. I'm sorry.\"\n\nI laugh, \"You don't have to apologize.\"\n\n\"I just.... You've been so good to me, Albert, helping me with all these exercises. I know it wasn't sex to you, but... well, it's meant a lot to me.\" Hearing my fake name suddenly makes me feel awful, and thinking of all the lies I've told about the exercises makes me feel even worse. \"I hope that doesn't sound weird. I don't want to make anything weird between us. You've been very professional and I... I'm sorry, I don't want to cross any lines.\" Great, I was feeling really happy there for a second and you had to go and ruin it for me by reminding me what a horrible person I am. Thanks.\n\nI start speaking, \"You didn't. I...\" Don't you do it, you prick. Do not be a slave to your hormones. You've got the girl, you can fuck her, you don't have to do anything else. You don't need to bring anything stupid like emotions into this equation. \"I confess our sessions have meant a lot to me too.\" God, you are such a fucking slave to your cock. Jesus. \n\nShe smiled, and I find myself feeling all gushy inside. Because you're a fucking hormonal jackass, that's why. But I love seeing her smile. \"I'm glad,\" she says. \"In fact, if you ever want to take a break from the exercises and just... you know...\" she leans in close and whispers, \"fuck,\" and giggles with a blush. \"I'm just saying, I'd be ok with that.\"\n\nThis is the time to stand firm and do not let your emotions run wild here. What are you going to do? Stop the exercises and then do what? What are you going to do that's different from fucking her? What is going to be the difference between the bullshit exercises you've been scamming her into doing and the loving fucking you want to do, huh? What's the difference? And what is she going to do when she realizes they're the same thing? Come on, dickhead, think.\n\nI hear myself reply, \"So would I.\" Oh my god, my brain cells must be located in my sperm because I transform into the stupidest fucking person in the universe after I let those boys go.\n\nI hold her shoulders and push her gently down so she is lying on the couch. \"And here is something I have wanted to do for a while,\" I tell her as I kneel beside the couch and tenderly spread her legs apart. She gasps and smiles and I press my face into her crotch and start licking her wet pussy. \n\nY'know, it's weird. During this whole time, I can't count the number of times she sucked my cock or let me fuck her, but not one time did I even think about doing anything like this. God I am a selfish prick. But now that I taste her, I want to bury my face in her hairy crotch for hours. I want to move my tongue up and down and sideways and in and out until she begs me screaming to stop. And then I'll say fuck you, I'm not stopping.\n\nI reach up and start kneading her breasts as my tongue presses against the lips of her juicy cunt. I hear her grunt \"ungh\" as she spreads her legs farther apart to let me get even deeper. She starts grinding her pelvis around and moaning, so I press down with my elbows to keep her groin in place. She laughs but continues to grin against the bed as my tongue dances around her entire pussy, \"UNGH!\" her luscious pussy, \"UUUNGH!!\" her drenching wet, succulent pussy \"UUUNNNNNGH!!\" \n\nBy now, her body has been converted into a convulsing mass of orgasmic excitement, so I have to use all my strength to keep her from moving, \"YES!\" I press my tongue as hard as I can against her clit and her body continues to tremble. \"YES! YES!!\" My hands are spread fingered and gripping her breasts firmly so I can keep her groin still. \"YES! UNGH!\" Then I thrust my tongue as far into her wet pussy as possible. \"YES! YES!! UUNNNGH!!\" Her pelvis is still trying to thrash around \"UUUNNNGH!\" but I manage to subdue her.\n\nFinally I feel her entire body relax and slump into the bed with exhaustion. Her heavy panting causes her considerable chest to move up and down alluringly. I kiss her pubic hair, and then I kiss her navel. I can hear her moaning with appreciation as I slide my tongue up the center of her stomach and into the soft underskin of her tremendous breasts. \n\nI open my mouth wide and take in as much of her soft mammary flesh as I can, as she arches her back and groans, and then put my teeth around her erect nipples and lightly chew. My hands run up her arms and into her hands, where I interlock my fingers with hers. Then I run my tongue zigzag across her chest and into her neck where I hold her firmly in my teeth.\n\nThis is the time when I push my cock, now throbbing with another erection, into her pussy newly flooded with moisture. I can feel how engorged her vagina is as I move inside her, sliding myself in and out of her. In holding myself up over her, the weight of my hands are pinning her down on the bed so that she cannot move, but she doesn't resist in the slightest. \n\nI pull my head away from her neck and stare at her beautiful face. And then she opens her eyes and gazes back at me grinning. As our bodies slowly grind into each other, we are now moving together, breathing together, holding each other together. I have never seen her smile more, and although I cannot see my own face, I know that no one has seen me smile like this either. \n\nAnd yet I know, deep in the pit of my stomach that I am seriously fucked. Yesterday I was \"fucking the shit out of her,\" and today I am \"moving together, breathing together.\" My hormones may be falling sickeningly in love, but I realize that I am falling for someone I have lied to over and over and who doesn't even really know my name or what I do. I know, I know, this is an absolute fucking disaster. As much as I am enjoying this moment, I guaran-fucking-tee this is going to bite me in the ass. Isn't that right, \"Albert?\""
    ],
    "authorname": "bobrobertson",
    "tags": [
        "lingerie",
        "busty",
        "breast",
        "con",
        "scheme",
        "lying"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-06"
}