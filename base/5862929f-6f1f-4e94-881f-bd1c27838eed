{
    "title": "The Succubus Babysitter",
    "pages": [
        "Thomas Reynolds stared at his computer screen in complete shock; the code his bosses had outsourced, the code that would contain sensitive financial data for hundreds of customers, was complete dog-shit. He was stunned, whatever kid in his parent's basement did this deserved to be shot, God, they hadn't even followed basic syntax! \n\nThomas threw his glasses on the desk and rubbed at his tired, blood-shot eyes. He knew, he just fucking knew his boss would e-mail him about this and ask when they could launch. As if on cue, his phone vibrated and an e-mail notification flashed across the screen.\n\n\"Hey Tom, did you get a chance to look at the code yet? We're shooting to go live this Thur\u2014\"\n\n\"You stupid mother-fucker...\" Tom hissed, there was no way this thing would be ready to launch by then. It would take weeks to go through the code and vet it properly.\n\nHe could explain it to them, but whenever he started talking about security infrastructure and how important it was to vet code, before going live, the eyes of his superiors would glaze over. It would inevitably lead to a two hour Zoom call, with them finding new and inventive ways to say they understood his concerns, but they needed it ready anyways. Fuck it, he could work through the week, deliver something half-functional and go on vacation Monday morning.\n\nTom slid his phone into his shirt-sleeve, sighed and lifted himself out of his office chair with a bone popping groan. If he was going to get this thing delivered on time he needed to make some arrangements. He looked at his watch, 12:30, Jake would be home from school soon. He took out his phone, dialed his wife's number and waited.\n\n\"Hey good-looking,\" he said cheerfully. He walked into the hallway outside his office.\n\n\"Hey babe, what's going on?\"\n\n\"Work just unloaded a real mess on me at the last minute and they're shooting to go live this Thursday; I know you're on your little retreat, but do you think you could call and arrange a baby-sitter for Jake?\"\n\n\"Again? I thought after the Miller project was finished you'd have some time off.\"\n\n\"I know, Mindy. I thought that too, but remember the outsourced code we got?\" Tom put his fingers to the bridge of his nose and squeezed. \"Well, it came back and surprise-surprise, they did a terrible job. If I can get this one cleaned up, I'll take you and Jake on vacation next week; no computers, no phone, no boss, no expectations, just some fun in the sun together as a family, how about it?\"\n\n\"That does sound nice. How long do you need?\"\n\nTom threw his glasses down on the kitchen counter and picked up the coffee pot. \"You're at the retreat until Friday, right? Then you're home?\"\n\n\"Yeah, the flight is booked for 1:30. I should be back in town by 7:00. You know some babysitters do overnight care, right?\"\n\n\"Really?\"\n\n\"It costs extra, but it sounds like you need all the time you can get. Want me to call?\"\n\n\"God yes, you're an angel.\" Tom tipped cold coffee into his mug and stirred in a massive load of sugar and cream.\n\n\"Thank me with a couple bottles of wine and a nice dinner, Tiger. I'll have the sitter call you when she's outside.\"\n\n\"You're the best. I love you, be careful up there. Text me when you've made it to the hotel, ok?\"\n\n\"I love you too, try not to scream at the computer too much, you'll scare the sitter.\" Mindy laughed.\n\nTom smiled, hung up the phone, sipped at his cold coffee and retreated back to his office. He threw open the blinds to get some actual sunlight for a change and sat down in front of his digital prison.\n\nTom's body, for all intents and purposes, entered power saving mode as soon as he sat down in the chair; mechanically he would read a line of code, say out loud what he thought it was trying to do, make it function like it was supposed to, then repeat. It was hours later when a knock at the door brought him back to reality, he blinked, looked at his watch, checked his phone, took a peek at the lack of progress on screen, wrote a small note in the code to save his place and got back up.\n\nHe walked down the hall, setting his empty coffee mug on the kitchen counter as he passed into the living room. When he peered through the peephole, his brain shutdown completely for the first time that day. Tom opened the door for the baby-sitter and she was nothing like he expected.\n\nShe was the definition of knock-out in any language; tall with flowing blonde hair, with an icy blue streak at the tips, she had deep green eyes and a figure that was cut from a wet-dream.\n\n\"I...uhhh...hmm...h-hello?\" Tom stammered out.\n\n\"Hi, Mr. Reynolds. I'm Selene, the baby-sitter, your wife called and said you needed some help. I'm sorry, is this a bad time?\"\n\n\"Oh God, no. I'm sorry, I've been busy with work and just forgot how to talk to people. Call me Tom! Please, come in, can I help you with your bags?\" Tom looked down at the concrete landing and wished he hadn't; her blue sundress was strained to the breaking point around a massive bust. The dress hugged her body like a wet-suit, revealing smooth toned curves that rolled into shapely hips.\n\nSelene's red lips stretched into a dazzling smile. \"I'm good, just brought the one bag and my purse.\"\n\nTom swept his hand in a broad gesture and opened the door all the way. \"Well, you're welcome to use the laundry here anytime you want. Thanks for coming on such short notice, I really appreciate it.\"\n\nSelene stepped inside carrying a small leather purse and a duffle bag. Tom couldn't help but notice how the sundress pulled against her luscious backside as she walked.\n\n\"Not a problem. Where will I be staying?\"\n\nTom shut the front door and led Selene down a long stretch of hallway past the kitchen, opposite from his office. \"Our guest bedroom,\" he said. He opened a door at the end of the hall and gestured. \"Here you go, home sweet home.\"\n\nSelene stepped inside and placed her purse on the double bed, framed in dark wood. A small, pine bench sat at the foot of the bed, facing the door. \"Your wife said you'd be in your office all week? Just let me know what time you and your son want to eat tonight and I'll have it ready.\"\n\n\"Jake usually eats around six, bed by nine. He's a pretty sound sleeper so I hope you've brought a book or two. Also, feel free to watch the TV or play some games in the living room, we've got about every streaming service and game you can think of.\"\n\n\"In bed by nine and sleeps through the night? What kind of wonder child do you have?\" Selene asked with a playful laugh, she sat down on the bench and raised her arms across the top; the movement bunched the fabric of her sundress against her chest rather distractingly.\n\nTom had always been a boob-man. His wife was a solid 36DDD and it drove him crazy, but Selene was something else, her size was stupidly big, like a GG or something, Tom guessed. How did such a tiny body get so top-heavy? He thought he could see the outline of her nipples through her dress...if only he could get a closer lo\u2014Tom caught himself and turned around quickly, a bulge had formed in his shorts. His cheeks went scarlet. When had he gotten hard? Did she notice?\n\n\"Oh, Jake is awesome, you guys will get along famously,\" Tom said in a stumbling rush. \"I'm...I'll be in the office.\"\n\n\"Will do, Mr. Reynolds,\" Selene said with a wry chuckle.\n\nTom hurriedly walked down the hall and shut the door to his office.\n\n\"Get a hold of yourself, man, fuck,\" he hissed. He slapped the side of his head and sat down in his office chair. God, he was painfully hard. He looked down at his shorts, watching the tip of his bulge strain against the material. He groaned, there was no way she missed it. He fumbled through several apology scenarios in his head, trying his best to explain his behavior, but each one led to an awkward place he didn't like.\n\nTom began to read the lines of code out loud again until his thoughts fell back into the comfortable depths of mindless, mechanical repetition. Occasionally he would find himself thinking about Selene and the delicate fa\u00e7ade of concentration would crack like glass. Her body was incredible...tight, shapely hips, thick red lips, and breasts that defied the laws of nature; his cock ached to be touched, how long had it been? Two months? Three? Between Mindy's business trips, his work and taking care of Jake, they just never found the time to be alone anymore, it was frustrating.\n\nTom looked at his watch, 3:15, Jake would be home any minute. He put a small note to himself in the code to keep his place and got up. Selene was in the kitchen when he walked in, preparing a tray of fruits & vegetables. She looked up at Tom with those gorgeous green eyes, threads of icy blue-gold hair formed a perfect frame around her delicate features.\n\n\"I hope you don't mind, I figured you could use a snack. Your son isn't allergic to anything, is he?\"\n\n\"Nah, Jake will love this. He's a big fruit fan.\"\n\nSelene grinned and slid the snack tray across the counter.\n\nA key slid home in the front door and it swung open. \"Dad, I'm home!\" A boy with mossy brown hair shouted.\n\n\"About time, I was starting to get lonely,\" Tom called from the kitchen. He came around the counter and swept his son up in his arms, giving him a big hug.\n\nJake giggled and kicked his feet wildly. \"No, dad, your beard itches! Stop!\"\n\nTom set him down and put an arm affectionately across his shoulder, \"Hey bud, I got someone for you to meet.\"\n\nSelene waved and walked into the living room, bending down at the hip to get face to face. \"Hi Jake, I'm Selene, your dad said we can play together for a few days.\"\n\nJake looked up at his father speculatively, \"Are you going somewhere too, dad?\"\n\n\"No, bud. I'll be here, work just asked me to do a couple of things for them and I'm trying to get it all sorted out so we can go on vacation next week.\"\n\n\"You're in the 4th grade aren't you, Jake?\" Selene asked.\n\nJake nodded.\n\n\"And what do you like to do for fun?\"\n\n\"Swim!\" Jake shrieked, he jumped up and down excitedly. \"Dad, can we go swimming? Please, please, please?\"\n\n\"Your mom told me you liked to swim on the phone and it just so happens I brought my swim-suit, just for the occasion!\" Selene flashed a dazzling smile and turned her eyes to Tom.\n\n\"Have any homework?\"\n\nJake shook his head.\n\n\"Then it's fine by me.\"\n\nJake shrieked again and slung his book-bag to the floor. He ran down the hall to his bedroom.\n\n\"You've just become his favorite person,\" Tom said with a laugh. \"You'll never get him out of the pool now, hope you like to swim.\"\n\n\"Oh, don't worry about me, I love the water. Nothing better than some sunshine, a cold drink and a nice bikini.\"\n\nThe thought of Selene in a bikini made his knees weak. There's no way she could wear something like that without displaying an obscene mountain of cleavage.\n\n\"I'd better go get changed before he leaves me behind,\" Selene said. She walked down the hall to the guest bedroom and closed the door.\n\nTom grimaced and shook his head, he couldn't think like this. If he got hard every-time the baby-sitter came around he'd end up with a broken marriage and slapped with a sexual harassment charge. He looked down at the platter to take his mind off Selene and his stomach growled angrily. He suddenly realized that he'd forgotten to eat again. He pulled out his phone and responded to work emails while he munched on whatever he could get his hands on without looking. He'd just taken a bite of a carrot when Selene came back down the hall with a towel draped around her shoulders. His imagination hadn't come close to what she would look like. Tom gaped.\n\nMounds of bronze colored flesh spilled from the cups of her black bikini top, barely held in place by thick bands that crested over her lithe shoulders. Her long blonde hair ran down her bare back and spilled to the luscious curve of her barely covered ass. The woman was pure fantasy from a waking wet-dream.\n\n\"This will be my first time swimming this summer, \"Selene giggled and bounced excitedly. Her huge breasts clapped together. \"Are you going to join us, Tom?\"\n\nJake ran around the corner. \"Yeah,\" he yelled excitedly, \"come swim with us.\n\n\"I can't right now, little man, I have too much work to do.\"\n\n\"Okay, but you have to swim with me sometime,\" Jake replied. The little boy opened the door to the deck and stepped outside. \"Come on, Selene, let's go play submarine!\"\n\n\"Submarine?\"\n\n\"You throw stuff in the water and he rescues it,\" Tom answered with a knowing grin.\n\n\"Ah, we just called it search & rescue back in the day.\" Selene held a bottle of sunscreen out to him. \"Do you mind, Mr. Reynolds? My skin is just so sensitive.\" She turned around and lifted her hair over her shoulder.\n\nHer back was an olive-colored waterfall that fell against the basin of her thick, juicy ass. Her bikini bottom was tightly cinched at the side of her hip with thin black strings tied in a cute bow. The top was tied the same way...just one yank and it would all come unraveled.\n\nHe grabbed the sunscreen from her without a word -- not trusting himself to talk right now -- and lightly rubbed a generous dollop into his palm, warming it up; he began at her slender neck, rubbing in smooth, circular motions along the well-toned muscles, then he moved to her bare shoulders and followed the line of her collar-bone with his fingers. Her skin was hot to the touch, as if she'd spent hours lounging in the sun already. It took every shred of will-power Tom had to stop when his hands brushed at the painfully soft well of her cleavage.\n\nSelene groaned appreciatively as his fingers retreated back across the apex of her shoulders and began to follow the line of her spinal erector muscles. Tom's breath caught in his throat as his thumbs smoothed the skin, so tantalizingly close, to her scantily clad ass. He could bend her over right here, right now in this kitchen and no one would be the wiser.\n\nSelene stumbled backwards and her sumptuous backside slipped against his hips.\n\nTom gasped in hot pleasure that crawled up his spine. His fingers moved to the strings at her hip before he'd realized it, he needed to cum so fucking bad, he needed to tear her bikini-bottoms off and bend her over the kitchen counter.\n\nSelene turned around with a laugh, \"Sorry, Tom, it felt so good that I lost my balance. You've got really nice hands.\" Her eyes trailed pointedly to his shorts where the swollen bulge of his cock was clearly visible, \"Amongst other things...\"\n\nShe stepped into him, massive breasts crumpling against the muscles of his chest, causing the overflow to bulge out the sides of her top. Those dreamy green eyes stared deeply into his and their lips moved together; her hard nipples glided across his chest as he pulled him down to meet her mouth.\n\nThe kiss was pure electricity.\n\nSelene's pillow lips captured him, enthralled him by how soft they were, but something didn't feel quite right about her; the kiss itself was pure passion, the need of two consenting adults, but the texture of her lips, how her tongue felt against his, wasn't right.\n\nHis lips were starting to go numb. Tom tried to push her away but she grabbed his hands and pinned them to the wall. Her eyes were staring into his, watching him with feverish intensity.\n\nThen, everything became white-hot pleasure. His mind melted from the feel of her lips, from the heat of her body, from the softness of her breasts contrasted against her hard nipples. Her hips ground against his cock, trapping the head within the heat of her soaking wet thighs. He groaned against her mouth and knew there was nothing to be afraid of. After some time she let go of his limp hands and they fell uselessly by his side.\n\nSelene pulled back an eternity later and broke the spell with a satisfied smile. His hips moved forward on their own, seeking out that wet heat once more. She looked into his eyes and with an almost tender kiss to the corner of his mouth, whispered, \"I'll see you tonight, lover.\"\n\nAnd just like that, she walked out to the deck as if nothing happened. Tom slid against the wall, heart pounding in his chest. A tiny drop of sweat beaded against his temple and rolled down the side of his face. His shorts were soaked with her musk and every labored breath he took filled his nose with her scent. It was intoxicating.\n\nWith an effort, he stumbled back into his office, shut the door and stripped completely naked. He collapsed on the hardwood, hands curled around the fabric of his shorts, pressing the scent of her against his nose. His cockhead throbbed and swelled with every breath he took and a tiny river of pre-cum branched across the network of veins on the skin of his shaft, pooling over aching balls.\n\nHe was so sensitive that it felt like the slightest touch would send him over the edge and leave him in a sea of blissful ecstasy. No matter how hard or how fast his fingers pumped across his cock, the orgasm never came. He was left on the desperate edge for an hour until he finally laid back against the floor, a sticky, defeated mess. He couldn't cum. God, he wanted her so badly. He showered, put on a fresh change of clothes and sat back down to his computer chair while Selene & Jake played outside.\n\nLike clockwork, the kid fell asleep a little after dinner and Tom was left alone in a house with the sexiest woman he'd ever met. He sat in his office, pretending to work, until the frustration built up and he had to call it quits finally. His whole body ached from the events of the day and he decided the best thing, the healthiest thing to do was blow off some steam. He changed into a pair of swim-trunks, grabbed a towel from the adjoining bedroom and went outside to enjoy the peaceful summer night air.\n\nTom soaked in the heated water of the pool, watching the stars wheel overhead in a fiery dance; twinkling white light carried across the shimmering water, lending the backyard an almost ethereal air. It was exactly what he needed, just a place where he could work out his thoughts alone. Could he tell Mindy about the kiss or could he live with himself if he didn't? He shut his eyes and let the warmth of the water soak to his bones while he contemplated an answer.\n\n\"Mind if I join you?\" a husky voice asked.\n\nTom opened his eyes and peered over his shoulder. It was her.\n\nSelene stood by the door, hand at her waist with her hips cocked out. She had changed back into her black bikini and the top was tied even tighter than it had been that afternoon. The silken cloth of her cups dug against the sides of her massive breasts and pushed them together enticingly, forming a well of shadowy cleavage. The starlight kissed her blue-gold hair and set it aglow in a wash of gentle light that highlighted delicately carved features and lips made for kissing.\n\n\"It's all yours, I'm done for the night,\" Tom replied. He straddled the deck and pulled himself out of the water, letting it run down his body. He couldn't possibly be alone with her after everything that had happened today, not now, not in this state. He wanted her too badly. He wrapped his towel about his shoulders and moved to go inside.\n\nSelene caught his arm as he tried to pass. \"Afraid you won't be able to keep your hands off me?\"\n\nTom froze and glared at her. \"Excuse me?\"\n\n\"Don't deny it,\" she began, taking a step closer; her massive breasts squashed against the muscles of his chest, \"I know you want me. I know your dirty cock has thought about me all day long.\"\n\nThe heat of her was intoxicating; her body was so soft, all plush curves and sinuous muscle wrapped into one beautiful package. He throbbed against her hips.\n\n\"No,\" Tom growled. \"I'm married and I can't betray my wife like that.\"\n\nSelene chuckled darkly, her voice a throaty purr, \"You've already betrayed her, look at yourself.\" She wrapped her hands around his back and pulled him close -- her hips rolled forward, sliding against his trapped, aching manhood. \"Don't you remember our little kiss in the kitchen? What would your wife think about that?\"",
        "Tom groaned, her closeness set a fire in his flesh. The scent of her filled his nostrils and he felt the need to cum, the need for pleasure, well up inside his body again. His hands went to her side and he forced her back half-heartedly.\n\n\"You're not being honest with yourself, are you, Mr. Reynolds? Even now you can't stop staring at my breasts, can you? Aren't they the most wonderful things you've ever seen?\" She folded her arms at the elbow and crushed her breasts together.\n\nTom gaped and then realized the smell of her wet sex permeated the air, filling his lungs with every breath. It made his blood boil. His cock grew and tore at the confines of his trunks, aching to be set free, aching to be touched by her.\n\nSelene's chest was heaving with excited little breaths, she watched him carefully, lips turned up into a predatory smile. \"I can feel your resistance slipping, you want me so badly you can hardly stand it,\" she moaned.\n\nSelene shook her head and released a throaty, growling cackle. \"You can't possibly understand what you've let into your house, Mr. Reynolds. You're going to throw away everything you ever loved and do you know why? Because deep in your heart, you know you can't resist me.\" She undid the tie to her top and let it fall to the deck. She flattened her palms against her bust, letting her fingers plunge into the ample flesh.\n\nHer tits were perfect. There was no other word for it. His body burned with absent need, like a fire being stoked to a roaring crescendo in his loins. His pulse pounded in his ears. Her skin had been kissed by the sun and turned to a warm olive-color, but her nipples were pale, pink dots that she squeezed between her fingers.\n\n\"What was it you were thinking about earlier, Mr. Reynolds? Bending me over the counter?\" Selene released a soft, low moan of pleasure. The moon and the blue garden lights made her skin glow with an otherworldly light.\n\n\"How could you possibly know that?\" Tom asked under his breath. He couldn't stop staring at her enormous breasts. Each squeeze made a well of perfect bronze cleavage. He wanted nothing more than to suck on her round, hard nipples and let his lust take control.\n\nSelene smiled and cupped the side of his cheek almost tenderly, her fingers ran through Tom's brush of black bristled, damp hair. She pulled him down to her ample bust. \"Give in to your desire. I can feel how desperately you want this, how desperately your dirty cock wants me.\"\n\nTom didn't care anymore. He opened his mouth and his tongue flicked across the tip of her nipple. Her taste was exquisite, rich and hot. He needed more. He closed his lips around the tip and sucked.\n\nSelene moaned and gripped the back of his head gently, twining her fingers into his hair. She pulled him down into a reclining pool-chair and wrapped her legs about his waist. The taste of her melted what little resistance Tom had left; the heat between her legs washed over his cock. A flood of pre-cum dripped against his thighs.\n\nHe whimpered as Selene pulled her nipple away from his searching tongue.\n\n\"I think it's time we lose some of these clothes, don't you?\"\n\nTom nodded, his eyes completely glazed over. He stood up and pulled his swim-trunks down to the deck; his cock was glistening with fresh cum that spilled down the veins of his shaft. She undid her bikini bottom, revealing pink, glistening folds.\n\nSelene's breathing became labored; she leaned forward and wrapped delicate fingers, one by one, around the full length of his 8 \u00bd inch shaft. Both hands pumped simultaneously, moving the folds of his skin up and down in a teasingly slow motion, gathering the pre-cum underneath his throbbing crown.\n\n\"I have a confession to make...\" she said with a heated whisper.\n\nTom's legs were shaking from her ministrations, he groaned at how her nimble fingers slid right to the head of his cock and then fell back down to the root in torturously slow motion. A steady stream of pre-cum flowed down her fingers until every motion she made elicited a squishing, wet sound. Selene stared into his eyes, her nose softly sweeping above the head of his thick cock taking in the smell of his cum.\n\n\"I'm a succubus, Tom, and tonight I'm going to drain you.\" Selene ran her long, forked tongue against the crown of his cock, taking a white glob of cum into her mouth.\"\n\nSelene began to change; her deep, emerald eyes darkened and the outer portion of her pupils faded from a pristine white to emptiness. Thick, black horns emerged from the top of her golden hair and curled behind her head.\n\nFear clawed at Tom as he watched her change; this was no woman, this was a monster, yet...he was oddly excited too. Her touch on his cock was perfect, every pass of those fiery warm fingers coaxed more cum from his shaft and sent his body into a spiral of ecstasy.\n\nThe demon's pouty, cum coated lips sank over the head of his throbbing cock. Her mouth bounced in time with her pumping hands up and down his length. Selene moaned in rapturous lust.\n\nHer lips burned for the first few seconds when they touched his skin, but it faded into a gentle numbness a few agonizing seconds later. His dick pulsed against her wet tongue and flooded her mouth with hot seed that she lathered over his head.\n\nTom's legs buckled as the numbness turned to mind-shattering pleasure. He fell to the deck with a hard thud that should've sent a jolt of pain through his body, but he didn't feel a thing, only intense, overwhelming pleasure; Selene rode him to the ground, lips never letting go.\n\nTom screamed as his mind melted away. The succubus pushed his legs apart with her shoulders and took him to the root with one deft motion that made his entire body convulse. Her massive tits pressed into his thighs, filling his balls with impossible heat. His fingers wrapped around the demon's horns and pulled her down to meet his thrusting hips.\n\nThe succubus released a muffled moan that sent vibrations running up the length of his shaft. Her lips squeezed and bobbed at the stem; at the top, her well-trained throat contracted around his girth, encasing the tip and a few inches of his length in a tight, burning hole to which there was no escape. Her forked-tongue wrapped lavishly around his middle, soaking him in spit with the texture of hot oil.\n\nTom's hips wouldn't stop, they pounded her throat mercilessly and each thrust brought him closer to the brink. He needed release; his heart pounded in his chest like a drum and his body glistened with sweat.\n\nThe smell of her wet sex pulled at his sanity, unraveling every thread of resistance until he was nothing more than a vessel for cum. Selene's chest heaved, her excitement growing in concert with her hunger; the flavor of his broken will, of his betrayal, filled her with intense pleasure. Tom's hands seized and fell to the deck, his body just couldn't reconcile what he was feeling -- every corded muscle, every fiber of his being stopped responding to his commands.\n\nSelene pivoted her body slowly, never letting him leave the confines of her skillful mouth; her lips continued to bob expertly on his cock, taking him to the root and back in smooth motions, even as her hips sank against his face. Her arms and legs pinned his body to the deck.\n\nThere was nowhere to go now. The hunt was over, now it was time to feed.\n\nInstinctively, his tongue slid against her glistening, wet folds and it was the sweetest thing he'd ever tasted. He had to have more. His hands wrapped around her luscious ass, pulling her against his tongue. He sucked and licked, like a man tasting his first drop of water after years of thirst.\n\nThe succubus ground her hips against his face, mewling in pleasure.\n\nTom pulled her folds apart; the tip of his tongue rolled against her clit and the more he lapped and sucked, the sweeter her flavor became.\n\nSelene picked up the pace. Her lips were a blur on his cock, squeezing, sucking, and pulling him deeper into her throat. Their bodies were entangled in a delicate dance of mutual pleasure, but the succubus was hungry and had thousands of years to practice her technique. She wanted his cum, now.\n\nTom's body coiled at her renewed vigor. A deep, tingling sensation pooled in his balls and bubbled to the surface. He tried to struggle, but her legs pinned him to the ground. Every inch of his thick cock was at the mercy of her luscious mouth.\n\nThe tip began to throb deep in her throat, he was close. Selene trembled in anticipation, she loved the feeling of the first feeding; the thrill of breaking someone's will; the little game of trying to resist, it made her achingly wet. His flavor was so pure, he was a man whose entire life was built on the foundations of faith and devotion, but that's what made the sin of his fall so sweet.\n\nTom roared and his eyes rolled into the back of his head; his cock burst and with it came everything. He gripped her butt with desperate strength and moaned against the folds of her wet sex. His body convulsed, a slave to indescribable ecstasy; thick ropes of hot cum poured down the demon's eager throat in a sudden flood. When he thought the tide of his orgasm would stem, the monster would tap a new well of pleasure that made him burst all over again with greater volume & intensity.\n\nSelene kept swallowing, never wasting a drop. Her lips squeezed the root of his cock tightly and as when he tried to pull his hips away, she would fall back down to his hilt, injecting more of her potent venom.\n\nThere was no greater flavor than cum from a pure soul. Her eyelashes fluttered and she reveled in his corruption, his descent into sin. Suddenly, the succubus was coming. Her hips bucked against his mouth, grinding against his tongue. Her excitement spilled against his mouth, filling him with a sweet flavor like ambrosia. Her throat collapsed around his girth, forming a tight prison he would never leave. She moaned, low and deep, her body shaking torturously.\n\nThe demon longed to take his soul, her thighs burned with wet, unfathomable heat as she thought about filling her belly with him, but a pure vessel was a rare treat meant to be savored. There were still new heights of corruption she could lead him to, new subtleties to his flavor that she could explore by staining it with sin.\n\nSelene took a few more greedy swallows and placed a practiced hand at the base of his cock, choking off the flow of cum. The succubus' lips pulled teasingly slow up his length, taking as much of his essence as she could before releasing him from her mouth with a soft pop.\n\nHis unconscious body slumped against the deck.\n\nSelene's deep, black eyes stared intently at his penis. Her tongue crawled out from between her lips and curled beneath the head; his pure flavor filled her mouth and she moaned desperately. It was so good.\n\n\"Mmm...\" she whispered, \"not yet...\" Selene got up and stared down at his naked body, \"tomorrow is going to be so much fun, Mr. Reynolds. I can't wait.\"\n\n \n"
    ],
    "authorname": "SuccumbToMe",
    "tags": [
        "succubus",
        "busty",
        "huge tits",
        "huge boobs",
        "oral",
        "deepthroat",
        "demon",
        "nonhuman",
        "erotic horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-succubus-babysitter"
}