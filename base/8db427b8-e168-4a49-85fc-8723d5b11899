{
    "title": "Apprehended Ch. 06",
    "pages": [
        "It had been a week since Ethan kept me in his cabin. A week for me to think things through; to rationalize. I was no closer to understanding my situation than I was a week ago. Ethan took care of me as promised, but I could tell that he was spending too much time with me...watching me. His, 'clan,' needed him. I eavesdropped on his phone calls several times, catching bits of the conversations he had with a multitude of people I didn't know. \n\nI was sure of this-something big was happening. I didn't know what it was, but Ethan was becoming impatient. It involved a neighboring clan. I tried to snoop for details, but Ethan was careful. He never spoke in-depth whenever I was within distance. His tone was always hushed, and his words were clipped; to the point. \n\nEventually, whatever the issue was boiled over and Ethan could no longer ignore it. \"I have to leave,\" he said abruptly. \n\nI grabbed the remote from beside me on the couch and muted the television. \"What?\" \n\n\"I have to leave,\" he repeated. \n\nI gathered that. \"Where are you going?\" \n\n\"Neighbors,\" was all he said. \n\nI made a face. \"Neighbors?\" \n\nHe nodded tightly. \n\n\"How far are they? Can I leave too?\" \n\n\"You're not leaving, Annie. Must we go through this again?\" \n\n\"I know that, Ethan,\" I said through gritted teeth. \"But what am I going to do here? Hobble around until you decide to come back? Whenever that might be.\" \n\n\"Of course not,\" he said. \"Gavin will be looking after you.\" \n\nMy brows shot up. \"Gavin? Who is that?\" \n\n\"My beta.\" \n\nI nearly choked on my saliva. \"What?\" \n\n\"My beta,\" he repeated. \"Second in command.\" \n\n\"I don't know him.\" \n\n\"I do. You'll be perfectly safe with him.\" \n\n\"No, Ethan. I'm not going to stay here with some man I don't know. No.\" \n\nHe growled. \"Gavin is family. Like a brother to me. In fact, he's more trustworthy than Edwin. Hence why he is my beta.\" \n\nI shook my head vigorously. \"No, Ethan.\" \n\nHe approached from the kitchen, kneeling in front of me by the couch. He was so tall that even on his knees, he towered over me. \"It's only for one night. He won't lay a finger on you in harm, mea vita.\" \n\nI scoffed. \"No.\" \n\n\"Don't make this difficult. Otherwise, I'll have to alter my plans.\" \n\n\"And do what?\" I asked. \n\n\"Take you with me.\" \n\n\"I already suggested that.\" \n\n\"To another wolf den?\" he specified. \n\nI felt my face pale. Shit. \"Ummm...\" \n\n\"Exactly. Though our clans have a binding agreement, the unmated wolves will hover, Annie. Seeing as you are my mate, but have not been fully claimed, problems will arise.\" \n\nI gulped. \"What kind of problems?\" \n\n\"Put it this way,\" he said, gently tucking hair behind my ear. \"If another wolf so much as looks at you the wrong way, I'll be forced to protect you at all costs. Unmated wolves are hard to control around unmated females. No matter the fact that you're human. I do not feel comfortable having my mate around hungry, lustful wolves. My wolf will become protective and my instincts will override reason.\" \n\n\"Can't you control it?\" I asked. \n\n\"No. My wolf stands by his proclamation that you are ours. Anything that puts you at any type of risk is more than enough incentive to set him off. I won't have control. I will kill anyone or anything that is deemed a threat towards you. Including the sexual desires of other wolves. If that happens, it will be the same equivalent as declaring war against said neighboring clan. I cannot afford to have them as my enemy. We need to stand together.\" \n\nI absorbed this. At least, I was trying to. \"So, I'm trapped here?\" \n\n\"I'm coming back, Annie.\" \n\n\"How long? And when can I get some fresh air?\" \n\n\"I'll be gone for one night. I'll be back before you wake. I will take you outside then.\" \n\nMy eyes widened. \"I have to spend the night with Gavin?!\" \n\nHis face hardened. \"Do you want the rest of the males to assist? Since you're being so difficult.\" \n\n\"No.\" \n\n\"Good, then its settled,\" he said, getting up and shoving his hands into his jeans pockets. He jerked his head towards the kitchen. \"Gavin is here. Introductions are in order.\" \n\n\"Now?\" I asked, turning my head in horror. \n\nThe sliding door opened. A man-just as huge as Ethan-walked in; wearing a black tank top, ripped jeans and a backwards cap. Like the others, he was barefoot. I realized that they didn't need clothing for protection. It was more of a formality than a necessity. \n\n\"Alpha,\" he said with a wink. He padded across the wooden floor; his weight heavy as he clobbered. He stopped beside Ethan and they clapped hands; doing some sort of bro handshake. \"This must be Sol Luna,\" he said, turning to face me. \n\nI swallowed the sudden lump that formed in my throat. He was just as intimidating. Underneath the cap, I noticed that his blonde hair was cropped short. He had a beard, which was a dirty blonde. His eyes were just as captivating as Ethan's. A sparkling Caribbean blue. From the people that came by the cabin throughout the week, I noticed that their eyes were abnormal. Every single one of them. Including Dina's, which were an odd hue of brown. Like diamonds or neon, their eyes glowed or sparkled, revealing the animal hidden within. \n\nGavin smiled at me, revealing a dimple that looked curiously related to Ethan's. I scrunched up my nose. \"Are you guys related?\" \n\nGavin barked out a laugh. \"A smart one.\" \n\nEthan was trying to hide a smirk, but it was noticeable. So was his damn dimple. Ugh. \"Cousins, love. We're cousins.\" \n\nI knew it. \"Oh,\" was all I could muster. \n\nGavin kneeled on the floor, taking up the exact same stance Ethan had just performed minutes before. It was a little eerie. \"Nice to finally meet my Sol Luna.\" He offered a large hand. \"I'm Gavin Dune.\" \n\nI don't know why I did it, but I looked up at Ethan before shaking his hand. Ethan finally smiled and nodded his head in approval. I slid my fingers into Gavin's. It engulfed my palm. \"Annie Bell,\" I muttered, looking away from his intense eyes. \n\nHis smile widened and he lifted my hand to his lips to press a warm kiss across my knuckles. \"Luna,\" he whispered. \n\nEthan growled. \n\nGavin chuckled and released my hand, rising to toss a muscular arm around Ethan's broad shoulders. \"What do you need me to do, Alpha?\" \n\n\"Watch her.\" \n\nGavin nodded without hesitation. \"How long?\" \n\n\"Till tomorrow morning.\" \n\nI nearly jumped off the couch. If I wasn't healing, I would have. \"You're leaving tonight? I thought you were joking.\" I squeaked. \n\nEthan gave me a look. \"Yes. I have no choice. I've neglected my duties for far too long.\" \n\n\"Can't you wait until tomorrow night?\" I whined. \n\n\"Can't, bellula. But, do not worry. I'll be back before you know it.\" \n\nI was about to protest but Ethan raised a single finger to silence me as he focused on Gavin. \"I don't need to warn you, do I?\" \n\n\"No, Alpha.\" \n\n\"Good, but I'll do it anyway. You know the rules. She stays indoors unless I say otherwise. No outside visitors are allowed. Only you. And remember,\" he added, \"if I find so much as a fucking hair harmed on her head, I'll-\" \n\n\"Kill you,\" Gavin finished. \"Got it. But honestly, E. Do you think I'd hurt my future Luna?\" \n\nEthan was not in the joking mood. \"Gavin,\" he snapped, his voice a growl. \n\n\"My word, Alpha. I will protect her with my life.\" \n\n\"Good,\" spat Ethan. \"Now give me a minute with my mate.\" \n\nGavin winked at me before heading up the stairs to leave us alone. I looked up at Ethan nervously. \n\n\"You will not do anything stupid whilst I am gone, will you, love?\" \n\nI shook my head. \"No.\" \n\n\"Good girl. And you will listen to Gavin. Won't you, mea vita?\" \n\n\"Yes.\" \n\nHe smiled again, revealing the sharp fanged teeth I was becoming all too familiar with. \"Good girl,\" he repeated. \"One night. That's it. Stay inside. Gavin will be sleeping in the room adjacent to ours. If you need anything-and I mean anything-you call him. Is that clear, female?\" \n\nI wanted to roll my eyes. \"Yes, Ethan.\" \n\nI was reminded that when he was gone, I'd be alone in the room. He had been sleeping on the floor beside the bed like a gentleman; giving me my space and respecting me. But now that he was leaving, I couldn't help but feel a little fearful. I was going to be alone in his room for the first time. It was still a strange, unfamiliar place. Somehow, not having him around to hover felt weird. Almost like a loss. Like a piece of me was going to be missing. \n\nI didn't say that, however. It turned out that I didn't need to. Ethan had been hovering over me long enough to gauge my emotions, my expressions and my behavior. It was like he knew whenever something was bothering me. I still didn't know whether I was bothered by that or not. \n\nHe took a seat beside me on the couch. \"What's wrong, love?\" he whispered. His warm breath tickled my ear and I shivered. \n\n\"Nothing.\" \n\nHe wasn't buying it. \"Tell me,\" he pressed, softly. He reached out and lightly brushed his fingers underneath my chin to turn my face towards him. \"Talk to me.\" \n\nI sighed. \"I don't want to be alone,\" I muttered. \n\nHe laughed. He actually had the audacity to laugh at me. There was nothing funny about kidnapping me and leaving me to the wolves while he took care of some errands. \n\nPun intended. \n\n\"Will you miss me, my sweet?\" he asked. \n\nI scowled. \"It's not funny. And I never said anything about missing you,\" I clarified. \n\nAmusement twinkled in his eyes. \"Oh, of course. But I wasn't laughing at you. I only find your denial humorous.\" \n\n\"What?\" I asked, incredulously. \"Denial? What denial?\" \n\nHe lightly tapped the bottom of my chin. \"Your feelings for me. You're going to miss me.\" \n\nI snorted even though it was a little true...okay...somewhat true...fuck...who was I kidding? I had become attached to the bastard. I was comfortable. He was safe. Gavin was not. I wasn't going to admit that to him either. \"It's just...I don't know him,\" I said, quietly. \n\nEthan frowned in confusion. \"Who?\" \n\nI leaned into him and put my lips near his ear. \"Gavin,\" I whispered. \n\nHe chuckled. \"Whispering is pointless, my Luna. He hears you anyway. Our hearing is more than acute. It's perfect. But, you are worrying for naught, female. Gavin is here to protect you. Not hurt you.\" \n\n\"Are you sure?\" I asked. \n\n\"I won't do that to you!\" Gavin shouted from upstairs. \"Ethan will cut my balls off!\" \n\nI couldn't help it. I really couldn't. I laughed. \n\nHard. \n\nEthan followed suite. When I was sure that my healing ribs could take no more, I had to stop myself and calm down. Ethan's eyes sparkled as he looked at me, his eyes going over every inch of my face. It felt odd being under the scrutiny of such a powerful man. Especially one as handsome and burly as Ethan. It still befuddled me...how a man such as him could ever look at someone as ordinary and plain as me. \n\nThe fat girl. The one guys ignored. \n\nOnly...Ethan wasn't ignoring me. Which was hard to accept. The only other man who showed even the slightest of interest was Jerry. \n\nLook at how well that turned out. \n\n\"Stay here, love,\" Ethan said, his voice gentle. \"Don't leave. You'll be safe, I promise you. If you need me, I'm a phone call away.\" \n\nI frowned. \"You would let me use the phone?\" \n\n\"Gavin has a cell. Ask and he'll call mine. For whatever reason. I mean that, Annie. Even if you're scared, you call me. Lonely? Call me.\" He tucked another strand of hair behind my ear. \"That is what I'm here for, bellula. You. Even if you simply want to talk, I will answer. I'll stay on the phone with you all night until you fall asleep.\" \n\nShit. He knew. He already fucking knew what was bothering me. Sure, Gavin bothered me too. But not having Ethan here was the main issue. He was the foundation of this ordeal. The one who solidified the crumbling pieces. The leader. The shot-caller. His leadership kept everyone in line. They respected him. Everyone in his clan obeyed him. Not having that security was frightening. I was literally in a fucking den. A human with no way to protect herself. My only defense was Ethan. \n\n\"Okay,\" I whispered, swallowing back my fear. \n\nI knew Ethan could smell it. He frowned and pressed a kiss to my temple before getting up. He took out his phone from his back pocket and showed it to me. \"Call me, sweetheart. I mean it.\" \n\nI nodded. \n\nHe winked and called out to Gavin, letting him know that he was leaving. I hated to admit that it hurt to watch him leave. He turned one last time to offer me a smile before slipping outside...into the night. \n\n*** \n\n\"So, what do you want to do?\" asked Gavin, securing the door after Ethan's departure. He walked over to me and plopped onto the couch, causing me to bounce a little. It was something Ethan did countless times. \n\n\"I don't know,\" I shrugged. \"Watch a movie?\" \n\nHe shook his head. \"Nah. Let's play a video game.\" He grabbed the remote, switched the input on the television and snagged the system controller. He handed another one to me. \"Here. Racing. Edwin will be over with Jared in ten minutes.\" \n\nI stared at him in horror. \"What? Ethan said-\" \n\nHe waved a hand in the air to cut me off. \"I know what the Alpha said. But what he doesn't know, won't kill him, now would it?\" \n\nTwo more men were coming over without Ethan's knowledge. One of which I wasn't too fond of. Jared gave me the creeps. So did Edwin, but Jared was worse. Sinister. \n\nI tried to play video games and focus, but I was too lost in my own head. Like a mantra, I kept thinking about being alone. Alone. With three men in total. In Ethan's house whilst he was gone. It was more than troubling. It was downright disturbing. \n\n\"Are you losing on purpose?\" asked Gavin, stealing a glance at me. \"I've never seen a female suck so badly. Even Dina-who doesn't do too well-does better than you.\" \n\n\"Fuck you, asshole. Try saying that shit to my wolf next time.\" \n\nI turned, catching sight of Dina, Jared and Ethan entering via the sliding door in the kitchen. I swallowed the sudden lump in my throat and quickly resumed my driving fails. I was never a good driver. Nor did I play video games consistently enough to be considered decent. Overall, my skills were lacking. \n\n\"What are you doing here?\" Gavin bit out, his vehicle flying by me during a drag race. \"I didn't invite you.\" \n\nShe snorted and took a seat right next to me, effectively sandwiching me between her and Gavin. For the first time, I noticed her up close and personal. In comparison to a human female, she was huge. Though not as big as her male counterparts; she was still frightening. I turned away when her burning gaze sheared into my line of sight. Even her stare was menacing. Like she was unhinged and on the verge of ripping something-or someone-apart. I prayed that she didn't set her sights on me. \n\nBoy, was I wrong. \n\nJared and Edwin mumbled a quick hello and took a spot on the floor, each grabbing their own controllers to jump in the game. \n\n\"I invited myself,\" Dina said. \n\nGavin growled. \"Well, Ethan made it explicitly clear that he didn't want you here, female. Now leave.\" \n\nShe clucked her tongue. \"Don't be rude, Gavin. The Alpha isn't here. I can come and go as I please. Besides,\" she said, leaning into me and grabbing a lock of my wavy hair, \"someone needs to keep an eye on the human weakling. She may kill us all in our sleep.\" She gave my hair a hard yank, causing my head to jerk roughly to the right side. \n\n\"Ow!\" I said, moving away from her. I pressed myself closer to Gavin. \n\n\"What the fuck, Rodina?\" he spat, angrily. \"What's your problem?\" \n\nShe smiled, revealing her own set of sharped, fanged teeth. It made me shiver. \"I thought it would be obvious,\" she replied, her eyes fixated on me. \"I don't fucking like her.\" \n\nI opened my mouth to tell her off, but Edwin interrupted. \n\n\"She's your future Luna,\" he added, his tone neutral. \"Ethan would kill you if you hurt her.\" \n\nThat was not reassuring. \n\n\"Key word being, 'future,'\" she spat. \"This is the present. He hasn't claimed her yet.\" \n\n\"He doesn't need to,\" snapped Gavin. \"You know of the bond. She's already considered his. His wolf and his human deemed it so. There is nothing anyone can do-not even him-to alter that. If she dies, he goes with her.\" \n\nI snapped my head in Gavin's direction. What? \"What do you mean, he goes with me?\" I asked. \n\nHe froze. \"He didn't tell you?\" \n\nDina barked out a laugh. \"See? He isn't even honest with the bitch. He's probably afraid she'll run off and leave him for dead. Or-in her pathetic case-die from fright. We all know how weak humans are. Especially human females.\" She reached out and snagged another lock of my hair to pull it. \n\n\"Stop!\" I said, moving away from her. I grabbed my head in pain. \n\nShe laughed again. \n\nGavin growled, the sound threatening and deep. \"One more time, Rodina. Touch her one more time and I'll slit your fucking throat, so help me.\" \n\nShe directed her gaze at him with the intention of defiance. \n\n\"I'm not any clan member,\" he added. \"I'm your fucking Beta. Alpha is not here. Which means that it's my word. My. Word. My law. Keep your claws off of your future Luna. I will not repeat it.\" \n\nThe defiance drained from her eyes instantly and she lowered her head, having no choice but to comply. \"Fine,\" she mumbled. \n\n\"Good,\" he spat. \"You,\" he said, looking directly at me. \"Sit over here on this side.\" He pointed to his left-away from Dina. \n\n\"Uhhh...I can't really walk yet,\" I whispered. I knew they all heard me, but it felt better to whisper my weaknesses rather than blurt them out. \n\n\"Fine,\" Gavin said, tossing the controller momentarily to scoop me up, slide me across his thick, wide lap, and settle me on the opposite side of him. \n\nHow he did that so flawlessly, I'll never know. \n\n\"Is she heavier than she looks?\" Dina asked, her eyes twinkling in mirth. \n\n\"Shut up, D,\" said Jared, looking at the screen. \"You don't know when to just keep that fucking maw stitched.\" \n\n\"I'm only voicing the truth. Something you three assholes are terrified of doing. I mean, look at her,\" she said, gesturing to me. \"She's fat and ugly. Why the fuck would the Alpha even choose something like that. I would have been a better mate!\" \n\n\"And there it is,\" said Gavin, grabbing the controller once more to continue playing. \"Jealousy at its finest.\" \n\n\"I am not jealous of that disgusting whore!\" Dina spat. \n\n\"That's enough!\" Edwin nearly shouted, tossing the controller to get up and tower over her. \"I've had enough. No one invited you here, Rodina. No one. Get out!\" \n\n\"Me?\" she spat, getting up to poke Edwin's chest. He was bigger than her. She apparently didn't care. \"I'm in the clan. Me. Not this, low-life, rundown, hillbilly, third-world, weak, two-bit, slut-hussy! Me! I fight alongside you! Not her!\" \n\nI opened my mouth once more to give her a piece of my mind, but Edwin was already on it. Or rather, on her. He snagged out a hand quickly, wrapping his long fingers around her neck and squeezing. She made a whimpering sound in the back of her throat and I watched in horror as Edwin lifted her from the floor and began to walk. \n\nHe carried her by her neck to the back door; her fingers frantically grasping at his arms and hand. She couldn't breathe and she was turning red. I gasped when he opened the sliding door and threw her outside. She landed somewhere in the thicket of darkness, thudding on the ground with a resonating boom. \n\n\"Stay out!\" snapped Edwin, slamming the door shut. It moaned from the force. \n\nMy eyes were wide. Edwin calmly walked back in and took the same spot he previously occupied; seemingly at ease with the brutality he had inflicted on Dina. \n\nGavin noticed my expression. \"Are you okay, Luna?\" \n\nI licked my dry lips. \"Umm...yeah...sure...but you should be asking that question concerning Dina.\" ",
        "Gavin frowned. \"She's a wolf. Female wolves are very aggressive sometimes. A little nudge to show them who is in charge usually does the trick.\" \n\nWait. What? \"So...that's normal?\" \n\nHe nodded and looked at the screen again. \"Yeah. We males are the dominant gender here. Rodina constantly needs reminders of it. She needs to be kept in line.\" \n\nI didn't know how to feel about that. \n\n\"Nothing you need to worry about,\" added Jared, casting me a look over his broad shoulder. \"You're not a female wolf.\" \n\nAgain, I wasn't sure if this was some sort of gender issue. I was about to ask more questions but was interrupted. \n\n\"So Ethan didn't tell you that he'd die without you?\" asked Gavin. \n\nI focused on the screen and realized that I was in last place. \"He mentioned it, but he never elaborated.\" \n\n\"I see,\" said Gavin, furrowing his brows. He shrugged absently. \"It's not that difficult to understand, Luna. Now that he has found you, losing you would cause him to die. Either losing you by death or you choosing to leave him. He'd die no matter what.\" \n\nI inhaled sharply. \"What? How is that even possible?\" \n\nHe pressed a few buttons on the controller really fast and shouted at Jared. \"You cheating, bastard! You deliberately crashed me into that fucking fence!\" \n\nJared and Edwin laughed. \n\nGavin scowled as he answered. \"You are connected, Luna. You are his balance. When he is shifting, you are the force that drives it. When he is angry, you are the calm that eases him. When he needs guidance, he will look to you. The balance. Mates share that. The bond is so strong that if the wolf loses the mate, he or she cannot live without them. They wither and die. It is long, slow and agonizing. The loss becomes too great. You are his beating heart. For the man and the wolf. He lives for you. He lives because of you. His purpose is you.\" \n\nI stopped playing momentarily, my car careening into a nearby divider. Jared said something about my game-playing skills, but I was too absorbed in my own head to focus on the banter. \n\nIf I left Ethan, he would die. If I left Ethan, he would die. \n\nLike a mantra, I repeated that over and over in my head. He needed me to live. Which meant that there was no chance of escape. Ethan would never let me go. Never. At this point, knowing how well he treated me, could I even escape? Did I want to? \n\nI sighed and turned to face Gavin, who was now staring at me. \"If I left, would he find me?\" I didn't know why I needed to know that. Perhaps it was because I was looking for hope. A hope for freedom; because a small part of me still wanted to have a choice. The choice to be with Ethan. Not be taken by him. \n\n\"Always. He knows your scent,\" replied Gavin. \"He'd find you anywhere. He won't stop looking for you if you did that. Which I don't advise.\" He said the latter as a warning. \n\n\"Why?\" I inquired; my curiosity peeked. \n\n\"He'll go mad with the need for you. The wolf will hunt you. He'll go to the ends of the earth to find his mate. And once he does, he'll take you, Luna. In more ways than one. I haven't heard much lore about wolves with human mates, but I know that his instincts for you are stronger than it would have been had you been a wolf. That's because female wolves are more than capable of protecting themselves. But you?\" He shook his head. \"You're humanity gives him reason to fear anyone or anything that could end your life. You'd be defenseless. And if you die-\" \n\n\"He dies,\" I finished. \n\nHe nodded and turned to focus on the game once more. The rest of the evening went by in relative silence. Once more, all of this information made my head hurt. I felt like my world of reality was imploding; crushing me with its weight. Never did I feel more isolated. I had no choice. Ethan already took me. He wasn't going to let me go. Escaping was pointless. He'd find me. I didn't even want to think about his wolf finding me. \n\nThe hunger in its eyes. The madness. \n\nIt made me shiver. \n\nI thought about actually living here for the rest of my days. Would Ethan keep me confined in the cabin? Surely, he wouldn't. Would he? Would I be considered his prisoner forever? Could I live like that again? In a relationship that was dominated by yet another man? I just walked away from that. \n\nAnd what about Ethan's inability to be honest with me? He never gave me full details. Which he should. This was my life. I had the right to know. \n\nI stopped playing video games after that realization. Gavin, Jared and Edwin played well into the night; eating snacks and drinking beers. At some point, I grew tired and yawned wearily. I tried to keep my eyes open and focus on the countless video games the men went through, but my head grew heavy and I felt it loll to the side. It landed on something soft yet firm. I snuggled into it and fell asleep. \n\n*** \n\nI awoke with a frightened start, sitting up on the bed in Ethan's room so abruptly, I almost screamed. My mouth was open in horror and I quickly covered my tear-stained face with my hands. \n\nA nightmare. A bad one. It involved Ethan. \n\nI had been running in the forest and calling out for him. At first, he didn't reply. I called out again and was dreadfully rewarded with Ethan's groan of pure agony. I followed the sound like a lifeline, passing tree after tree. Until I finally found him...bleeding on the snow-covered ground; his body cold and lifeless in a puddle of his own blood. \n\nI cried out and ran to him, stumbling until I finally collapsed to my knees before him. Just as I reached out to grab his hand, I woke up. \n\nAnd felt sick. \n\nI looked out the window and realized that it was still dark outside. I shifted uncomfortably and was going to try to go back to sleep when something hard touched my fingers. I grabbed the cold object and brought it up to my face in the darkness to get a better look. \n\nIt was a cell phone. \n\nI frowned and flipped it over. It had a case...and a pop-socket. Wait. Wait. \n\nThis was my cell phone! \n\nI smiled in delight and pressed the main button. It lit up and made me wince. I quickly lowered the brightness and moved to my home screen. From there, I went to my contacts and nearly screamed in anger. \n\nEthan deleted all of my contacts! \n\nDamn him! \n\nI seethed when I noticed only one number. His. Ugh. I debated on whether or not I should call him and tell him off...curse him out...verbally bash him... \n\nOnly...I was worried. Worried about him. That nightmare didn't bode too well with me. Dreaming of him hurt had me feeling all kinds of fear and anxiety. I wouldn't be able to live with the guilt if something did happen to him. So, I decided to just do it. With trembling fingers and a mental curse, I pressed his number and called. \n\nIt took a while to ring, but I waited. It seemed to go on for quite some time and I was about to hang up, but the ringing stopped rather suddenly, and I felt my mouth go dry when his voice pierced through the receiver. \n\n\"Yes, baby? What's wrong?\" \n\nI shivered at that blasted endearment. It made me feel all kinds of weird. Especially when he said it with such a deep voice. It was thick and a little raspy, like he had been sleeping. \"Did I wake you up?\" I asked, my own voice thick from lack of use. \n\n\"Yes. But that's alright. What's wrong, love?\" \n\nHow did he know that something was wrong? \"I had a nightmare,\" I said, not bothering to hide it. \n\nI heard him shuffling. \"About what?\" \n\nI played with a string on the comforter. \"You.\" \n\n\"What about me?\" he asked. \n\nI shrugged even though he couldn't see me. \"You were hurt.\" \n\nHe went silent for a minute. Then he sighed deeply and said, \"I'm okay, mea vita. What about you?\" \n\nMe? \"I'm fine,\" I mumbled, deciding to get comfortable again and lay back down. \n\nHe didn't buy it. \"Are you frightened, sweetheart?\" \n\nDammit. Damn him. It was freaky. He knew things about me without me having to utter a single word. I hated that...but I also loved it. Ugh. \"A little.\" \n\nI was expecting him to chuckle, but he didn't. \"I'm sorry that I'm not there to comfort you, my petal. But I can assure you that I am unharmed. Merely tired. I'm more worried about you.\" \n\nHe was being considerate of me again. Always putting me first. \"The dream wasn't about me,\" I clarified. \n\n\"It doesn't have to be. It frightened you. That's more than enough incentive for me to comfort you, my Luna.\" \n\nI didn't know what to say to that. So instead, I said, \"You deleted all of my contacts.\" \n\nThis time, he barked out a laugh. \"I did,\" he admitted. Even in his voice, I could tell he was smiling. \"My number is the only one you will ever need.\" \n\n\"I doubt that,\" I grumbled. \n\n\"In time, you will come to realize that I will be enough.\" \n\nSpeaking of realization. \"Why didn't you tell me that you could literally die if I wasn't with you?\" \n\nHe went silent for a while. I heard him mutter a curse. \"Gavin told you.\" It wasn't a question. It was a fact. \n\nI said, \"yes,\" anyway. \n\n\"He had no right, Annie. That right is mine.\" \n\n\"Why didn't you tell me?\" I asked. \n\n\"I tell you on my terms. Whenever I deem you ready to receive it.\" \n\n\"That's not fair,\" I said. \n\n\"I'm not arguing with you,\" he snapped. \"Not now. It's late. We will discuss this in person in the morning when I get back. I want to look at your face. For now, drop it.\" \n\nI felt tears sting the back of my eyes. I hated men bossing me around. Jerry's domination was enough to scar me. I didn't need Ethan adding on to that. \n\n\"Annie,\" he cooed, softly. \n\nI ignored him. \n\n\"What's wrong, love?\" he asked, his tone coaxing and alluring. \"Talk to me, baby.\" \n\n\"Don't call me that,\" I whispered. The way that it made me feel was evidence of the bond that I knew we had. The one that connected us even now over a long distance. What Gavin said must be true. If my feelings were this strong, I could never fathom Ethan's. \n\n\"Why not?\" he asked. \"You don't like it?\" \n\nI did. I most definitely did. That was the main reason I felt he should stop. All of this-everything-was happening too fast. My mind was a whirlwind of confusion. I was questioning him, myself, life and even reality. His endearments made it that much harder. Because despite them, Ethan still took me against my will. He took away my ability to choose. Feeling anything other than anger would go against that. It would be the same equivalent as betraying my own self-worth. \n\n\"You don't like me calling you my princess, either,\" he added. \"Now I respect you. But I don't like you taking away my feelings for you.\" \n\n\"You took away my freedom. Call us even,\" I snapped, bitterly. I knew it was a cheap shot. I mean, me removing simple endearments did not compare to my loss of freedom. But I wanted him to feel a small slither of the pain he inflicted upon me. Was it cruel? Absolutely. Did I give a fuck at this point? No. \n\nHe kept his secrets. I had a right to keep my own incapacitations. Right now, there were too many to count. \n\n\"You act like I did it to wrong you, Annie,\" he replied, his tone just as bitter as my own. \n\n\"It was selfish,\" I snapped. \n\n\"Selfish? Do you honestly believe that if I approached you and asked you to be with me, you would have said yes?\" \n\n\"No,\" I answered in complete honesty. \n\n\"Exactly. I could not risk my fate on some skittish female.\" \n\nMy mouth fell open and I gaped even though he couldn't see me. \"How dare you, Ethan! Have you even seen yourself?\" \n\nHe went quiet for a few tense seconds before answering. \"Yes. What does that have to do with anything?\" \n\n\"It has to do with everything. You're the size of a bulldozer-\" \n\n\"Meant to protect you,\" he cut in, sounding bored. \n\n\"You're eyes are-\" \n\n\"Capable of keeping you safe from danger at any light-including the night,\" he interrupted again. \n\nUgh! He was infuriating. \"Let's not forget your overbearing, overprotect-\" \n\n\"All for you,\" he cut in again. \"Everything I was built for. Everything I am. For. You. I don't see what the issue is. You feel the bond, Annie. I know you do. I feel it so strongly, that even now it physically hurts to be away from you. It's like more than half of me is missing. It's such a vital piece, that I can barely function without it. Without you. So, deny it all you want. To yourself. You cannot deny it with me. And I simply took you because let's face facts: you belong to me. You will always be mine. Mine. \n\n\"And you want it just as much as I do,\" he continued. \"You are connected to me so deeply, that the mere thought of me leaving put you on edge. You knew that you would feel not only alone but unprotected without me. Because Gavin will always be a poor substitute compared to me. No one will ever take care of you the way that I do. The way that I will continue to do. You merely need to accept it. Accept us. Deep down, you know you are not my prisoner. You never were. You're not a guest. You're not a fling. You're not an acquaintance. You're my fucking mate. I cannot hurt you. I cannot mistreat you. All of that would hurt me because of our bond. So, what is the problem here, baby?\" he finally asked, stressing that particular word. \n\nI was speechless. What could I possibly say to that? To him? He didn't treat me like a prisoner. But he didn't let me go either. Before I could conjure up some useless babble, he spoke. \n\n\"You have no answer because you can't find a viable excuse to deny what you feel for me. But because you are my mate, I will compromise with you. Firstly, I will call you whatever name I fucking want. That is my right. Secondly, I will give you free rein of the clan grounds. You can go anywhere you wish. Hell, I'll even throw in the town. You want to go to the store to buy something? Go ahead, baby. If I can't go with you to protect you, another male will. Not to make sure you don't run away. Strictly to protect you.\" \n\nI frowned in confusion. \"Why are you willing to give me that much freedom?\" I asked. \n\nHe answered without hesitation. \"Because you're my mate. I only ask for one thing.\" \n\nI swallowed loudly, feeling my heart thump so violently, I thought I was going to have a fucking heart attack. \"What?\" \n\n\"You make a vow to me, Annie. A vow to never leave me. To spend all of your days with me by my side as my mate. I give you my trust; you give me your word.\" \n\nI thought about that. \n\nHe waited patiently, and when I didn't say anything, he spoke again. \"I'll give you time to think about it. A friendly reminder-I take care of what is mine. I won't do anything other than protect you, love you and care for you for as long as I breathe. But if you should agree and break the terms of said vow, you must also know this: I won't stop looking for you. My wolf won't stop looking for you. A claim is permanent. It cannot be undone. If you agree, there is no turning back. We will always find you.\" \n\nI thought about what Gavin said. About the wolf taking me in more ways than one. Another thought-unbidden-came to me. I had to ask, \"what if I choose not to agree?\" \n\nHe took his time answering. When he did, it made my blood run cold. \"You can agree and live life as my mate happily. Or disagree and be my mate unwillingly. However, should you choose that decision, know that I will not give you my trust. Either way, I will have you.\" \n\nI pulled the phone away from my ear and bit back a cry. I had no choice. He was going to be with me either way. I roughly cleared my face of tears and sniffled lowly before putting the phone to my ear again. \n\n\"Take that whichever way you want,\" he added, gently. \n\nMore tears fell from my eyes and landed quietly on the pillow. I had no words right now. \n\n\"Why are you crying, sweetheart?\" \n\nWas he serious? He basically made the decision for me. Along with a threat. \"I'm tired,\" I whispered, not wanting to talk anymore. \n\n\"I didn't ask you if you're tired. I asked you why you were crying.\" \n\nI bit my bottom lip hard, tasting the tangy, metallic flavor of my own blood on my tongue. At this moment, I welcomed the pain. Pain was all I had left. \"Why are those my only options?\" I asked, my voice unsteady. \n\n\"I have to have you, Annie. I do not want to do so under bad terms. But I will if you force me to. So make this easy. For you. For me. I'll give you until tomorrow morning to decide.\" \n\nMy eyes widened. \"Tomorrow morning?! That's not enough time!\" \n\n\"You've had a week to assess me. I didn't lay a finger on you in harm. Nor will I ever. I took care of you. I always will. You won't have to work. Money is of no consequence. I can provide for you. The real problem is this: choosing between giving me your heart and living as my mate without a single worry. Or, not giving me your heart and living as my mate with so much worry that it eats away at you. Make it easy on yourself. You know you want this just as much as I do. Why are you fighting it? Why are you fighting me?\" \n\nI couldn't answer. \n\n\"Think about it. I'll talk with you in the morning. In person. For now, we both need rest.\" \n\n\"But-\" \n\n\"Goodnight, bellula,\" he interrupted before the line went dead. \n\nI pulled the phone away from my ear in a daze. How could he do this to me? How could he give me no options? As if I had no rights as a human? As if my life meant nothing? It grated on me. It made me see red. It made my blood boil. \n\nI'd leave if I had to. No one could ever love someone enough when they treat their significant other in such a dehumanizing way. Jerry did it. I wouldn't allow Ethan to do it either. Though his form of punishment was not physical; it was emotional and mental, nonetheless. \n\nI stood frozen on the bed, staring off into the darkness of the room. I was willing to wait until I got better. I was willing to decide for myself. On my own terms. Because this was my life. Not Jerry's. Not Ethan's. And I'd be damned if another man took away such freedoms from me again. \n\nBond be damned."
    ],
    "authorname": "AnnieBaebee",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/apprehended-ch-06"
}