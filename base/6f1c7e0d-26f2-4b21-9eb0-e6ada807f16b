{
    "title": "The Ultimate Sacrifice Pt. 01",
    "pages": [
        "Prologue\n\nThe rain was blinding and the wind was blowing at near tropical storm strength. Bob, his wife and daughter were returning home from a family weekend at the beach. The Semi tractor-trailer came out of nowhere and t-boned the Ford 150, crashing into the passenger side and sending it tumbling through the air. Bob remembered hearing his daughter and wife screaming and then nothing.\n\nHe woke up in the ER, looking down at his body on the operating table. Doctors and nurses were frantically working to save his life. One doctor had two paddles in his hands and jolted him. None of it made sense and yet somehow Bob wasn't concerned. He was above the table just looking down with detached interest.\n\nThen he felt a pull from behind. Turning he saw a bright light, in the distance. He thought he heard his daughter call, \"Dad, hurry up, mom and I are waiting for you. Hurry dad, it's beautiful.\" Leaving his body behind, without a thought, he ventured toward the light. The closer he got the more clear his daughter's voice, \"Come on dad, hurry!\"\n\nHe almost reached the light, his wife and his daughter when another, different voice said, \"Hector...it's not your time. You have no idea how important you are.\" Then he felt himself violently pulled back towards his broken body.\n\nWhen he woke, the pain was almost unbearable. He screamed, \"NO!!\"\n\nThen he heard someone scream, \"HE'S ALIVE!!\"\n\nSomeone else yelled, \"HOW IS THAT POSSIBLE?! HE'S BEEN DEAD OVER 10 MINUTES!\"\n\nThen darkness came again, but this time there was no light and he could no longer hear his daughter's voice.\n\nWhen Bob woke again he discovered he was in a hospital bed. He could hear the beeps from the machines. He couldn't move and all he felt was numb. He looked around trying to clear his vision. When the nurse came in, her eyes went wide and she ran out. The nurse returned with a doctor and another man. She gave him a little water and then some ice cubes. His mouth felt like sandpaper. The doctor checked him out and asked a bunch of questions. The doctor informed Bob he had been in a coma for three months. He assured Bob he was out of the woods and would recover, in time.\n\nThe other man was a priest. He told Bob his wife and daughter had died in the accident.\n\nChapter One -Dinner\n\nFeels good to finally make it to my hotel room. Could that flight have been any worse? 45 minutes late; stuck in the middle seat for three and a half hours with a guy sitting in the isle seat who needed two seat extenders. Granted, I'm not a small man, but geez, at least I still use the basic seat belt. Ever since 9/11 \"they've\" just sucked all the fun out of flying. You know, the imperial \"they.\" The government and the airlines. Between the increased security and the airlines reducing not only leg room, but also the width of the seats, it would almost be less stressful to drive. Oh well, I'm here. Need to focus on my presentation tomorrow. I figure a relaxing, quiet dinner and a good night's sleep should adequately adjust my attitude.\n\nCrystal City is busier than in past trips to the DC area. I guess bringing the Amazon Hq here is good for business. I just hope Ted Montana's isn't too busy. My mouth is really looking forward to that medium rare ribeye. I decided to walk along Crystal Drive instead of through the underground shops. A beautiful fall night in Virginia. It was a perfect evening until I walked through the door and was immediately faced with a room packed full of people. Sighing, I thought well Ok, time to go into patience mode. At a snails pace I inched closer to the hosting station.\n\n\"Good evening and welcome to Ted Montana's. How many in your group.\" Asks the young hostess.\n\n\"Just one, thanks. How long is the wait?\"\n\n\"It's looking like about an hour.\"\n\nA soft voice behind me asks, \"Would you like a dinner partner tonight?\" I turned around and was face to face with the most beautiful woman I'd ever seen. Long black hair, so black it looked blue. Caribbean blue eyes, that penetrated mine like she could see into my soul. I might have been concerned but her smile was disarming bordered by rich full lips. She possessed the look of a classic Greek goddess. My initial assessment had her in her early 30s, about 5 feet 9 inches, athletic build. Well honestly the last part was hard to tell because she was dressed in a business suit. The suit did its duty to mute her feminine assets.\n\n\"I'd love the company, but wouldn't you be bored out of your mind with a old geezer like me?\"\n\n\"Not at all. You look like you have an interesting story and I would love to hear it.\"\n\nI turned to the hostess and said, \"I guess that will be a table for two then.\" A slight smile grew at the edge of her mouth. \"It will still be about an hour wait.\"\n\nI replied, \"No worries, we'll be in the bar.\"\n\nI turned back around to my new dinner companion, offering my hand, \"I'm Bob.\" She took my hand and instead of shaking it, caressed my palm and back hand, \"I'm Jill.\" Her eyes were mesmerizing, drawing me into her like a siren. Refocusing, \"Since it will be awhile until our table is ready, would you allow me to buy you a drink?\"\n\n\"Not only old and interesting, but also a gentleman. I would love a drink, Bob, thank you.\"\n\nOur first break of the evening came when a couple's name is called and two seats, at the bar, became available. \"What's your poison?\" Jill laughed, \"I haven't heard that in decades. How about a cosmopolitan?\" I tell the bartender \"a cosmopolitan for the young lady and I'll take a JD Tennessee Honey on the rocks.\" Jill says, \"straight to the whiskey eh?\" I reply, \"yeah, rough flight and I thought you were more of a scotch and soda type.\" Jill chuckles and says, \"I like something sweet every now and then.\"\n\nFlirting? Ok now I'm just imagining things.\n\nOnce we were served Jill asked, \"So Bob what's your story?\" I replied, \"I'll apologize up front, it doesn't have a happy ending. I lost my wife and only child in a car accident, five years ago.\" I looked down at my Jack Daniels, raised my glass and took a strong pull of good bourbon.\n\nJill had a very concerned look and said, \"Bob, I am so very sorry for your loss.\"\n\n\"Not the kind of story one expects. I've spent the last five years buried in my work. It was either that or buried in a bottle.\"\n\n\"What brings you to the nation's capital?\" She was persistent, I'll give her that.\n\n\"I represent a group of first responders in Texas. I'm here to meet with a lobby group about some legislation we need passed. But enough about me, what about you?\"\n\n\"I'm boring. I'm an attorney representing a manufacturing group from the Midwest. We're finishing up the final touches on a contract with the Pentagon.\"\n\nI take another sip of Jack and smile, \"Well normally I'm allergic to lawyers, but they're typically not as pretty as you.\"\n\n\"Why Bob you sly goat, are you flirting with me?\"\n\n\"I would if I thought there was a snowballs chance in hell of success.\" I was serious, I hadn't been flirting just teasing.\n\n\"Hmm...you never know, the night is young.\" She said as I almost dropped my drink.\n\nWhy would this gorgeous successful young lady flirt with a middle aged, broken down guy from Texas? I'm the cynical type and something was a bit off, but who the hell am I to argue. My ego was getting stroked and for the first time in five years I kinda liked it. I found it odd that I also felt a little guilty.\n\nWe chatted about nothing of import; work, weather...ya da...ya da...ya da. Finally I hear my name called and I pay the bar tab. The hostess sits us at our table and we proceed to have a very normal dinner. Nothing out of the ordinary, except that Jill seems easy to talk too and the steak was exceptional. Well, the steak part wasn't out of the ordinary, just was worth mentioning. But the conversation was way too comfortable, like we've been friends for years. Only problem is, I just met her and she's at least 25 years younger than me. However, she possessed a maturity well beyond her years. Aside from the fact that she's drop dead fucking gorgeous and I'm average, at best. Something just wasn't right, no matter how right it felt.\n\nThe waitress brought the check and I went to grab it, but Jill was faster.\n\n\"I've got this,\" she said.\n\n\"Nonsense, remember I'm old, chivalry and all that, I would like to buy you dinner.\"\n\nShe chuckled, \"Bob, remember, I'm a lawyer, I can definitely afford it and besides you were kind enough to agree to have dinner with me.\"\n\nI laughed, \"Jill, I'm the lucky one here. How many middle aged men get asked by a young gorgeous woman to join her for dinner?\"\n\nShe blushed, \"I don't know. You think I'm gorgeous?\"\n\n\"In those immortal words...Duh! My only regret is that it's come to an end.\"\n\nShe looked at me for what seemed like an eternity, but was probably no more than five seconds, \"It doesn't have too. Would you like to go for a walk on this beautiful evening?\"\n\n\"At the risk of being repetitive....Duh! Let's go and Jill... Thank you for dinner.\"\n\n\"You're most welcome Bob,\" she said with a genuine smile.\n\nSomething is definitely off. I know the \"getting along\" part is genuine. Our conversation was very easy, but it's her filtration. It feels like she's targeting me, but for the life of me I can't figure out why. I don't have anything anyone would be interested in. Nor do I know the kind of people who could do favors. As she signs the bill I decide to let this play out and see where it goes.\n\nWe work our way through the crowded restaurant into the cool evening air. You can feel the fall in the air; crisp and cool. As we stroll down the busy sidewalk, Jill slides her arm under and around mine. I hear a soft quiet moan escape her lips.\n\n\"Jill can I be bluntly honest with you?\"\n\n\"Of course, I wouldn't want you any other way.\"\n\n\"What's really going on here?\"\n\n\"Do you really want to know?\"\n\n\"I wouldn't ask if I didn't.\"\n\n\"Be careful Bob, don't ask questions you may not be prepared for the answers.\"\n\n\"Jill, let's put our cards on the table. I'm guessing you wanting to have dinner with me was not a chance occurrence. So let's just cut through the bullshit and you tell what this is all about.\"\n\n\"Ok you asked... I'm here for you.\"\n\n\"Excuse me?\"\n\n\"Bob, how old do you think I am? Honestly, and don't come up with a number and then subtract five years to make me feel good. How old do you really think I am.\"\n\nWithout hesitation I say, \"You look like you're in your mid 20s, but that's not possible based on your profession and basic knowledge of life. But no way you could be more than 35.\"\n\n\"You and I share the same birthday. Only, you'll be 61 and I'll be 1,601 years old on June 21st.\"\n\nI stop in my tracks and turned to face her. She could obviously see the doubt on my face.\n\n\"What the fuck are you talking about!?\"\n\nThat little outburst caused a few people, on the sidewalk, to turn their attention towards us.\n\n\"Before I explain, we need some privacy.\"\n\nJill guided me down the sidewalk to an empty loading dock. She didn't drag me per say, but I could feel a strength that didn't match her body type. In an instant we were surrounded by what seemed to be a bubble or screen of sorts. I could still vaguely see the other pedestrians on Clark Street, but couldn't hear any of the sounds associated with the busy commercial area. In fact, there was no sound at all. Dead quiet. It was like we stepped into an enclosure, safe from outside interference. I moved toward the side walk. The \"enclosure\" moved with us. People didn't run into us or walk through us, they were just \"on the outside\" regardless where we moved.\n\nJill was the first to speak, \"I guess the best way to describe where we are, is a dimensional phase. You can still see what's going on, but no one can see or hear us.\" Also, you're not occupying the same space, at the same time. Well maybe the same time, just not the same space or in the same dimension.\n\n\"I'm guessing you're not really a lawyer.\"\n\n\"Well, I really am a member of the Indiana Bar, but it's not my full time job.\"\n\n\"Ok you have my full attention. What's this bullshit that you're 1600 years old and you're here for me?\"\n\n\"No issues with us sharing the same birthday?\"\n\n\"Should there be?\"\n\n\"No, that's just a coincidence. Bob, do you believe in destiny?\"\n\n\"I did five years ago, but not so much now.\"\n\nJill hesitated and then, \"What do you mean?\"\n\n\"I died five years ago. My soul was heading for the light to be united with my wife and daughter.\"\n\nI paused and suddenly became very sad. I stared at the people walking around us, enjoying the evening. As I stood there all I could see was my wife and daughter. I could still hear my daughter calling me, \"Hurry dad, we're waiting for you.\" Tears began to freely run down my face.\n\nJill touch his arm, \"What happened Bob?\"\n\n\"A voice told me it wasn't my time, that I was too fucking important. Up until about five minutes ago, I thought I hallucinated the whole thing?\"\n\n\"What do you think now?\"\n\n\"I'm not sure, but this dimensional phase thing can't be a coincidence.\"\n\n\"What if I told you, you didn't have a hallucination and you could meet the voice that spoke to you?\"\n\nI smiled for the first time in what seemed like forever, \"Then I'd say you were planning to murder me.\"\n\nJill smiled back, \"Not quite that dramatic, but to meet that voice you would have to leave your current life behind. Are you willing to do that?\"\n\nI looked hard at her, \"What exactly do you mean, leave my current life behind?\"\n\n\"If you travel to meet him, you can't come back to this life.\"\n\n\"Well where the hell is he?\"\n\nJill smiled again, \"Right now about 1.2 of your light years from Earth.\"\n\nMy eyes must have been so wide, they were in danger of popping out of my head, \"Are you telling me you're an extraterrestrial?\"\n\nJill was serious, \"Well I'm half, my father isn't from Earth, but my mother was.\"\n\nInteresting how she referred to her father in the present tense and her mother in the past.\n\nJill continued, \"Remember I told you I was 1600 Earth years old? I was born just after the fall of the Roman empire. My mother died of the Black Plague when I was three. My father came for me and raised me, off planet. I've been back for the past 200 years. He wanted me to get acclimated to my home world. That wasn't easy after 1400 years. Earth, in many ways, is quite primitive and barbaric. Even now, humans haven't figured out how to get along or solve problems without killing each other. But that's another conversation for another time.\"\n\nI was more than curious, \"How old is your father?\"\n\n\"Oh geez, I have no idea. All I know is he came to this planet for the first time about 15,000 years ago.\"\n\nI almost stumbled, \"15,000 years ago? That's before the Sumerians. Man was still a hunter/gather society. Why would he come here then?\"\n\n\"If you come with me, you can ask him.\"\n\n\"Was your father the voice I heard that made me go back to this life?\" I said with some heat in my voice.\n\n\"Calm down big guy, no he is not the voice, but he has been looking for you too.\"\n\n\"Why would your father be fucking interested in me?\"\n\nJill look embarrassed, \"Bob, I'm sorry, truly I am, I've said too much. If you want the answers to all your questions, come with me.\"\n\n\"But I have to leave my life behind...\"\n\nJill's answer was simple yet absolute, \"Yes.\"\n\nI turned my back to Jill. Looking out of the dimensional enclosure, I thought about what I would be leaving behind. No family to think of. I had closed myself off, from the world, since the accident, so no true friends either. Would Texas first responders get the legislation they needed without me? I was sure they would. What did I have to lose? More importantly, what did I have to gain? At minimum, I would gain answers and possibly answers I had been seeking for five long years.\n\nI turned back and faced her, \"Ok.\"\n\n\"Ok? You'll come with me?\"\n\n\"Yes.\"\n\nShe laughed, \"Damn, it takes you awhile to get there, but once you're there, you're there.\"\n\n\"Yep.\"\n\nChapter Two -- A Second Death\n\n\"Before we go, we need to fake your death.\"\n\n\"I knew you were planning to murder me.\"\n\nJill smirked, \"You caught me. I think it would be best, if there were no lingering questions. A massive heart attack, caused by the stress on your body since the accident, should suffice.\"\n\nIn the next instant the enclosure was gone and we were back in the hustle and bustle of the real world, or at least what I had always thought was the real world.\n\nJill said, \"Follow me.\"\n\nWe walked up the street towards my hotel. She led me into the hotel's parking garage, to a black panel van, parked in a remote spot. There wasn't another car within 10 spaces of the van. Jill knocked on the side door. The door opened and a giant of a man stepped out. He had to be at least six foot seven, and weighing well over 300 lbs., but not one iota of fat, muscle on muscle. I'm just over six feet tall and felt like a small child next to this man. His hair was very curly and jet black. His hair and full beard famed two eyes that were the most penetrating I'd ever seen. They say the eyes are the gateway to the soul. His eyes expressed the oldest soul I'd ever encountered. They were alert, yet kind; however ready to defend an attack with whatever force was necessary. I have seen this look on a handful of men in my life, either in combat or the police force, but his look put them all to shame. This was a man you didn't want to fuck with.\n\n\"Bob this is Hank. He's my partner in your murder.\"\n\nI was really beginning to like Jill. She just dropped a couple of gigantic bombs on me, changing my entire life and still had a sense of humor.\n\nI extended my hand to Hank, \"It's a pleasure to meet you.\"\n\nHis hand completely enveloped mine, his touch was firm, but not overpowering. He exhibited a kindness within his handshake. \"It's great to finally meet you.\"\n\nFinally meet me? Man did I have a lot of questions.\n\n\"I'm not going to lie to you, this procedure is somewhat dangerous. Hank will do a complete body scan of you, then we'll create a carbon copy. Next we'll have to transfuse a sufficient amount of your blood to make a coroner believe it's actually you. Then Hank will place the body in your hotel room and stage it to look like a heart attack. Questions?\" Jill just stood there looking at me.\n\n\"You said it was somewhat dangerous. What part of the procedure would you classify in that category?\" I was bewildered.\n\n\"We'll need to draw about two and a half liters of blood from you. That's right at the point where you may or may not survive.\" Jill was almost clinical.\n\n\"And if I die, will my soul be returned to my body, like the last time?\" I said with more than a little acid in my voice.\n\n\"No. This time you'll be dead. But the odds are in your favor you'll survive.\" Jill wasn't sugarcoating anything.\n\nA slight smile appeared on my face, \"Hank, what odds would you give me?\"\n\nHank kinda shrugged his shoulders, \"How would I know, I've never done this before. But and this is the big but... I trust Jill.\"\n\nThey both just looked at me. I stood there and thought about life in general, then the light and my daughter's voice calling me. \"Oh what the hell, I should have died five years ago. Let's get this done. Do I need to sign release forms or anything?\"\n\nJill and Hank looked at each other and then broke out in laughter. Hank replied, \"Forms? We don't need no stinking forms.\"\n\nDid he just play off a scene from Mel Brooks \"Blazing Saddles?\"\n\nI looked at him dumbfounded, \"Screwing with movie quotes just before you kill me? What the fuck?\" We both broke out in laughter again. I really hope I survive this, cause I really liked Hank and wanted to get to know him.\n\nHank asked me to step into the van. I guess more accurately I stepped through the van. It was actually a doorway to another room. This room was more like an operating room or laboratory. There were two tables and all kinds of equipment that looked \"alien\" to me.",
        "\"Do I even want to ask where we are?\"\n\nHank replied, \"Nah, it would take to long to explain. Let's just get this over with. If you would be so kind as to remove all of your clothing.\"\n\nJill walked into the room just as I was removing my shirt. I heard a slight gasp. \"I didn't know what that accident actually did to you. I am so sorry Bob. The pain you must feel.\"\n\nShe was looking at a back that was scarred and burnt. It was truly a hideous sight and I knew it.\n\n\"The pain is constant. It's amazing what humans can get use to.\" I sighed and in an almost whisper added, \"It's the pain on the inside that hurts the most.\"\n\nShoes, socks, pants and finally underwear. Military service and months in a hospital erased any sense of modesty. I did notice Jill was checking me out, but also trying not to get caught.\n\nHank broke the ice, \"Yo Jill, puts your eyes back into your head girl.\"\n\nJill turned about five shades of red quickly looking away. After she got past the scars, she obviously notice that I'm somewhat well endowed. Thank gawd I didn't get an erection.\n\nOnce Jill regained her composure she instructed me to step into an area on the floor, in the middle of a painted circle. \"Bob, if you would please stand perfectly still.\"\n\nA light then proceeded to engulf me. I assumed it was mapping my entire body structure. This process took about ten to fifteen minutes.\n\nOnce the light vanished, \"Ok, you can step out of the circle and lay down on the table here.\"\n\nI laid down and looked over at the other table in the room. A machine started at the head and as it moved down the table, recreated my body. Like a 3D printer on steroids. My hair was completely gray, some darker gray, some white. I had a 60 year old body, except my stomach was flatter than most. My skin was pale. It looked like me, but a very dead me. When my body double was complete, Jill and Hank ran a blood transfusion between me and my doppelg\u00e4nger. There was a point where I started feeling weak. They had me connected to some equipment, although wirelessly, so I knew they were monitoring my vitals. The next thing I knew I was back in the van, on a more comfortable bed and the van was moving. I started to sit but a hand to my chest pushed me back down.\n\nJill said quietly, \"Slow down cowboy, you need to relax and recover. You're going to feel weak for a while. We're pumping fluids back into you, but it still takes time. You're going to need time to recover. Just lay back down and rest.\" Although her touch didn't hurt, the slight pressure she put on my chest, I could tell she was much stronger than she looked...much.\n\nI fell into a peaceful sleep. I awoke when the van came to a stop. Hank called back, \"We're here. I'll go unlock the door, turn on the lights and make sure everything is alright.\"\n\nChapter Three -- The Hills of Kentucky\n\nJill was still sitting next to me. \"How do you feel Bob? Think you can get up in a moment and walk to the cabin?\"\n\nI was a bit disoriented, \"And where would this cabin be?\"\n\n\"We're in a secluded place somewhere in the Appalachian Mountains of Kentucky. No one will disturb us here while we wait for our ship to arrive. That will give you some time to recover and get to know us better.\"\n\nHank opened the van's side door and said, \"All good inside. Does he need some help getting in?\"\n\nJill responded, \"I've got this.\"\n\n\"Ok, I'll park the van.\"\n\nI realized I had different clothes on, sweatpants and a t-shirt. Jill helped me out of the van and up the stairs to the front porch. I couldn't believe how weak I was. She got me settled into the most comfortable bed I'd ever been in. Just that short walk took all the energy out of me. Within seconds I was out, in a deep sleep.\n\nI have no idea how long I was asleep. I woke up thinking the whole damn thing was a dream. Only one problem, I wasn't in my hotel room. I laid there trying to get my bearings. Last night couldn't have been real. First thing I noticed was I was completely nude. The bed was extremely comfortable and the weighted blanket was warm and made me feel safe. Then I realized I was hooked to an IV. Well, I guess that answered my question, last night was not a damn dream. The sunlight was coming through the wood framed window, suggesting I was well into the new day. \"New day,\" now that carried a different meaning. Everything from now on would be new. I guess I have a choice, I can either be afraid of the future, or face it head on. I've never been an afraid of the future kind of guy. Granted, when I woke up from the coma and found out my family was gone, I didn't look forward to the future, but I've never been afraid of it.\n\nI suddenly realized I had to piss, so I removed the IV needle from my arm and stood up. I almost fell down, my head was spinning and my legs felt like jello. I sat down on the edge of the bed to let my equilibrium settle down. After a few minutes, I tried it again. This time I was more stable and the earth was standing still. I saw an en-suite to my right and took a step in that direction. Damn...I felt like I'd gone a couple of rounds with Mohammad Ali and he landed all the punches. Slowly, I finally found the toilet. Shit now I had to deal with my morning wood. It took some time, but the erection deflated and I was able to relieve myself. I'll take minor victories at this point. Back in the room, I found some clothes. With some effort I got them on and now to find out what's on the other side of the door.\n\nHank looked up from his phone, \"Hey. How are you feeling?\"\n\n\"Like I've been run over by a Mack truck. What did y'all do to me that took so much out of me?\"\n\n\"You take that much blood from someone, it takes a whole bunch out of you.\" Hank replied.\n\n\"I get that. I feel like a vampire sucked me dry.\" I paused for a moment, trying to adjust to my new surroundings.\n\n\"Does this place have any coffee?\"\n\n\"Yeah...there's a Keurig over there, have a seat and I'll fix you a cup.\"\n\nI sat down on a bar stool. When Hank placed a steaming cup in front of me, I said, \"Can I ask you a question?\"\n\nHank looked up, \"Sure, fire away.\"\n\n\"Back in Virginia you said it was great to finally meet me. What did you mean?\"\n\nHank scratched his beard, \"I probably shouldn't have said that. I'm not trying to be coy, but I can't answer that question. Others will give you those answers. You can ask me anything about me, or this place. Will that suffice for now?\"\n\nI took a sip of my hot coffee, \"I guess that will have to do.\" I thought about how to phrase questions that would lead to more questions and thus to more answers.\n\n\"Ok, so how do you know Jill?\"\n\nHank sighed, \"Jill told you her father is not from this planet. She's my half sister. We have different mothers, but the same father. I'm her older brother.\"\n\nI almost hated to ask, \"How much older?\"\n\n\"Roughly 2,000 years older.\" He just looked at me to see how I would respond.\n\nI'd had enough bizarre occur in my life during the past 18 hours that I was starting to take additional bizarre in stride. \"So...who was or is your father?\"\n\n\"A very old space traveler. Well at least by your standards.\"\n\n\"So where were you born, on or off earth?\"\n\n\"Haha, I'm an earthling...kinda. I was born in what is today northern Greece.\"\n\n\"Hmm...let me guess...your father was a Greek god.\" I was kidding, I didn't believe the myths.\n\n\"Got it in one Bobby boy.\"\n\nYou could have knocked me over with a feather, \"Really? Which one?\"\n\n\"Now that's a question that will be answered at a later time.\"\n\n\"Your father's name is some galactic secret? Not many of the Greek Gods had human offspring. If I was a guessing man, I'd say your dad is...Zeus.\"\n\n\"One and the same. But I didn't tell you.\"\n\n\"Your secret is safe with me. Wow, your father is the King of the Gods. So you're a demigod?\"\n\n\"I was born a demigod, but after a very troubling start to my life, I ultimately became something else.\"\n\nI was really wishing I'd paid more attention in high school, during the semester on Greek mythology. A demigod who had a troubled life and then became something else. Only thing one could become was a god or human. I stood up, running any possibility through my feeble mind. About that time the light went off, \"Hercules?\"\n\n\"Guilty as charged, but to be precise it's Heracles. Hercules is the bastardized name the Romans called me.\"\n\nThe earth started spinning again and I had to sit down, \"Holy shit.\" Was all I could muster.\n\nI just sat there trying to take all of this in. I was sitting in the same room with the legendary Heracles. The strongest, most powerful man to ever walk the Earth. 30 seconds ago he was just a myth, a story told in literature. Now he's sitting no more the three feet from me. Ok, I was a little afraid of the future.\n\n\"Why on earth would the most powerful hero of all time, be interested in meeting me?\"\n\nHank said, \"We've been informed that you are the most important human for the last five years. We've all studied you and I have to tell you, I'm really impressed by the way you've handled adversity and kept your honor.\"\n\n\"What are you talking about?\"\n\n\"Well for starters, in high school you had a reputation for protecting those who weren't cool or strong. You were stronger and smarter than most of your classmates and you wouldn't allow anyone to bully anyone else. I really admired your one week suspension for breaking the quarterback's nose after he intimidated one of the school nerds.\"\n\n\"Yea...it was a dumb move on my part. I could have handled the situation differently...better.\"\n\n\"Really? Did that kid ever get bullied again? The answer is not only NO, also no other, quote, nerd was subject to ridicule that year. I'd say you handled it perfectly.\"\n\n\"In college you saved a young co-ed from getting gang raped by a bunch of frat boys.\"\n\n\"And got the ever living shit kicked out of me in the process. No good deed goes unpunished.\"\n\n\"Then there was that time in the Marine Corp...\"\n\nI interrupted, \"Don't go there Hank!\" I might have been a little forceful with not wanting to go down that particular memory lane.\n\n\"Sorry Bob, but you sacrificed yourself and saved a whole lot of people. Never be ashamed of that.\"\n\nMaybe, but it was what I had to do, to save them, that I didn't want to relive.\n\n\"One thing I'll say about your career as a police detective, you never took a kickback, you also fought for the innocent, even to your detriment, and you never, ever compromised your integrity. For example, the time you spent undercover and exposed a major sex trafficking ring. 27 young girls owe you their lives.\"\n\nI was getting very uncomfortable. Yea, I saved 27, but what about the hundreds that have to endure the abuse for the rest of their young lives?\n\n\"Heracles, you can relate.\" Hank looked perplexed at my use of his real name and the comment.\n\n\"Sex trafficking rings are like the Hydra, you stop one and two rise up in their place. What about the hundreds, maybe thousands of young girls I didn't save.\" That was actually the heart of the legislation I was in DC to try to get passed. Cops needed better tools to combat global sex trafficking rings.\n\n\"Bob, you're one man, you can't save them all. But you saved more than most. There are a lot of people still alive today, enjoying life, because of you.\"\n\nThere was an incredible sensitivity to this giant... this legend. He was immortal and yet he had an enormous respect for protecting those who need protecting. This was a man, a being, who had the ability to absolutely rule this planet yet he was content sitting here with me, talking to me as an equal. It was a tad overwhelming.\n\n\"Ok..ok, enough about me. What have you been up to the past 3,000 plus years?\"\n\nHank sat and pondered if there was enough time even for the Readers Digest version. Finally, \"After I completed the infamous 12 trials, the gods of Olympus gave me a second chance. I've been trying to just live life. I know this sounds clich\u00e9, but I'm trying to be the best person I can. Bob, the so-called gods are flawed creatures just like humans. Some are mostly good and some are very bad. I'm sure over the time you're with us, you'll learn a great deal more of why that is. I can't speak for others, I can only control me. I didn't always do a good job of that...\"\n\nI knew he was probably referring to murdering his wife and children. But the story says he was under Hera's spell when he committed those murders. Oh well, let it be, if he brings it up, then maybe we can talk.\n\n\"How have you managed to hide from history for so long?\"\n\n\"Well first off, I haven't resided on Earth full time in that 3,600 years. When I do, I've mastered the art of staying off the grid. Since I have no desire to impact human history, I can just quietly sit back and watch, well until now. I'm sorry you won't have the same opportunity.\"\n\n\"BIG BROTHER...THAT'S ENOUGH!\"\n\nJill was standing in the doorway, with her arms crossed, looking none-to-happy. Even pissed she was the most beautiful woman I'd ever laid eyes on.\n\n\"Sorry Jill, I got taken by the moment.\" Hank sheepishly said.\n\n\"Whoa! You can't make a statement like that and then just drop it!!\" I was getting really close to some of the answers I was looking for.\n\n\"Oh but we can and we will. So I suggest you forget he said that.\" That was not a request, but a statement.\n\n\"Well good morning to you too. Are you always this chipper first thing in the morning?\"\n\n\"I'm sorry Bob, a girl needs her first cup of coffee.\" She walked over, totally naked, to the Keurig and started a cup. I took a moment to check her out. She was truly the vision of a goddess. Golden skin, no tan lines, perfect breasts, probably C maybe a small D, but sitting firm and proud, nipples any child would be lucky to suckle, a sculptured tummy, legs that wouldn't quit, and the cutest ass I'd ever seen. Her womanhood was completely bare and formed the most perfect peach. In my eyes she was perfection. Now my cock was erect because of her. Then it dawned on me, I was checking out Zeus' daughter. What the fuck! What could I do? So I reverted to my smart ass nature.\n\n\"So I take it this is a clothing optional resort.\"\n\nJill looked down, immediately blushing, \"Oh shit! My bad, I didn't even think when I woke up and heard you and Hank here talking.\" She turned and ran back to the bedroom.\n\nI yelled back, \"Don't get dressed on my account!\" Hank just shook his head.\n\nHank said to me, \"You must be hungry. Interested in some breakfast?\"\n\n\"Famished is probably more accurate. So the great Heracles cooks?\"\n\nHank cocked his coal black eyebrow, \"Yea, I sew too, any issues with that?\"\n\n\"Nope, none whatsoever.\"\n\nJill came back into the room dressed in jeans and a flannel shirt. I never thought jeans and a flannel shirt could look so sexy.\n\n\"Do you want some help big brother?\"\n\n\"Nope, I've got it. Bacon, eggs and toast ok with you two?\"\n\n\"Being a native Texan, anything involving bacon is way ok,\" I responded.\n\nJill added, \"Sounds good.\"\n\nGot to hand it to the big guy he can cook breakfast. As we were finishing up I said, \"Outstanding breakfast Hank!\"\n\nHe replied, \"Just wait until you try my fried chicken, mashed potatoes and gravy.\"\n\nI took my plate over to the sink, rinsed it off and placed it into the dishwasher.\n\n\"Any problem with me checking out my surroundings?\" I asked no one in particular.\n\nJill replied, \"Nope we're going to be here for awhile, so you might as well get familiar. We own roughly 20 square miles, so try not to get lost.\"\n\nI looked at her closely, \"Something tells me getting lost really isn't anything I should be concerned with.\"\n\nThey both laughed. Ever considered what it would be like to hear Heracles laugh? The most tortured soul in history. It was a deep...sincerely happy laugh. One that tells you somewhere in 3,600 years he found peace with things. It was a good laugh, but not anything I would have thought would come from him. It made me even like him more.\n\nI walked out onto the front porch. The cabin was sitting the side of a hill, or mountain. I could see peaks on all four sides. The landscape was covered with luscious trees whose leaves were starting to change with the fall season. At the bottom of the hill was a large lake, the water just as peaceful as the morning. The sound of the wind and an occasional bird, completed the picture. This was a slice of heaven on Earth. It was then that I noticed the air was crisp. Feeling a chill, I turned to go back inside.\n\nJill was sitting at the bar with Hank sipping on a fresh cup of coffee. Hank was the first to speak, \"That didn't take long.\"\n\n\"I forgot what time of year it is. Shouldn't have gone out without a jacket.\"\n\nHank frowned, \"Shit...I'm sorry Bob, we're not as temperature sensitive as humans. I should have gotten you a coat.\"\n\n\"Hank, I'm a grown ass man, mortal or not, I should know better. Do y'all have any jackets?\"\n\nJill responded, \"I think we can round you up one cowboy.\"\n\n\"Hank, while I find a suitable jacket, why don't you grab the AKC and let's give Robert a tour of the grounds.\"\n\n\"AKC?\" I asked.\n\n\"Yep, Ass Kickin Craft.\"\n\n\"Is that different from an ATV?\"\n\n\"This one is a tad different.\" Jill found the jackets in a closet rarely opened. Eventually she identified one that might just fit me. \"We're not going to be here long enough to need a new wardrobe. This will do.\" Hank pulled up a rather ordinary ATV out front. I had already experienced the ordinary being anything but. I climbed in next to Hank, Jill climbed into the back seat. \"You might want to buckle up Bob.\" As soon as I clicked the seatbelt, Hank put the vehicle into drive. I felt the AKC go vertical versus horizontal. We rose to the tops of the large Piney oak and Montane oak trees. I could clearly see the mountains surrounding a large lake. Jill leaned forward, \"The lake was created by a meteor strike about two million years ago. It makes a perfect base for our off planet operations.\"\n\nI was confused, \"Base? Off planet operations?\"\n\n\"Hank, you want to show him?\"\n\nHank pushed the steering wheel forward and the AKC took a nose dive, right for the center of the lake. I knew they wouldn't put me in danger, but the vehicle didn't have any windows! Needless to say, I had a death grip on the console. I expected to enter the water with a huge splash and jolt. After all when a large object going at a high rate of speed makes contact with water, it causes a huge splash...right? Wrong, we sliced through the water like butter. Also, we were still bone dry. No water inside the vehicle. I didn't realize it, but I was holding my breath. I loudly exhaled air from my lungs and then took deep breaths. Apparently Jill and Hank found some amusement in my distress and were laughing heartily.\n\nI looked at both like they had lost their fucking minds. I then turned around and watched the water around us, but none inside the vehicle compartment. Out of total curiosity I stuck my hand out the window. It sliced through the cold lake water, splashing some inside.\n\n\"Hey! Stop that!\" Jill yelled.\n\nI pulled my hand back into the vehicle, \"Serves you right for not warning me and then laughing at me.\"\n\nJill wiped her gorgeous face, smiled at me and said, \"Maybe.\"\n\nHank dove for what felt like forever.\n\n\"How deep is this lake?\" I asked.\n\nHank responded first, \"At least two miles deep.\"\n\n\"Shit!\" was all I could think to say.\n\n\"Yep, everyone thinks the deepest fresh water lake in the world is in Russia. Our lake is almost twice as deep.\"\n\nThe farther down we dove the darker the water, until is was completely black. The only light coming from inside our vehicle. I wondered how cold the water was. I was tempted to stick my hand outside of the vehicle again, but resisted the temptation. During the first part of our descent we saw fish swimming around, even a school of bass. But as we dove deeper, the fish became more sparse until there weren't any at all, just blackness. Eventually Hank slowed down and turned the vehicle from a more vertical orientation to a horizontal one. We finally came to stop.",
        "Hank then said to no one in particular, \"Request permission to come aboard.\"\n\nThe look on my face had to be priceless. But it developed a new form of priceless when someone responded, \"Permission granted great Heracles.\" The vehicle then descended slowly, entering a landing bay and gently touched down. There wasn't an opening of a door, no water came rushing in. One second we're in the lake, the next we're entering the landing bay.\n\nJill must have noticed my confusion when she said, \"It's similar the the dimensional phasing, except this allows us to move through sold objects.\"\n\nChapter four -- The Greys\n\nLooking around the bay, I see two small figures approaching. They are the perfect description of \"Greys\" I've read about. They appear to be about four feet tall. As expected their skin was grey, thus the name. Neither had a nose, ears or mouth, which was interesting because they had a somewhat large head and disproportionately large black eyes.\n\nWe stepped out of the AKC and Jill approached the two aliens. I could hear them talking, but couldn't figure out how they were speaking.\n\nI saw one turn his (or her, they weren't wearing clothing but neither had any sex organs) head towards me and say, \"We do not communicate verbally.\"\n\nAt that point I realized they communicate via thought or telepathy, which means they could read my mind. That unnerved me a bit. I then heard the alien say, \"I am Bron and I promise none will invade your inner thoughts. You honor us with your visit to our base of operations.\"\n\nI figured when in Rome...\"I'm Bob and thank you for allowing me aboard.\"\n\n\"Please allow us to give you a tour.\"\n\n\"I'd love one,\" I communicated through thought.\n\nBron and his companion, Thret, proceeded to give me the nickel tour of the facility. It was immaculately clean, but somewhat sterile. Thret told me they were a minimalist society. They didn't have an appreciation for art or things like humans. Living quarters resembled barracks more than apartments. Both assured me they were very comfortable with their living conditions. There was no eating facility and they explained they absorb nutrients through their skin. It was fascinating. The facility had three landing bays, two small ones and one very large one. I was curious what kind of crafts used those bays. Bron assured me I would see very soon.\n\nFinally we ended up in the control center. Jill and Hank didn't take the tour but met us there. Another dozen or so \"Greys\" were manning various stations. The side walls and ceiling was one giant liquid monitor. It was currently focused on a location in space. Thret told me it was the dark side of Io, one of the planet Jupiter's larger moons. He explained this was where most extraterrestrial civilizations staged their observations of Earth.\n\n\"Is Earth constantly under observation?\" I asked out loud.\n\nJill answered for the group, \"Earth has been under constant observation since before the Egyptian Pharaohs.\"\n\nI looked at Bron, \"Was the Roswell crash one of yours?\"\n\nBron responded telepathically, \"Yes unfortunately we made the mistake in making our presence known to your government.\"\n\n\"So the US government knows this facility exists?\"\n\nJill answered again, \"Oh hell no! They know the Greys exist but they think Roswell was a rare encounter. It did kick off various DOD projects to try to identify more extraterrestrial encounters, but we're pretty good at not exposing ourselves. Another unfortunate result in Roswell was it scared the hell out of the government. They've used it as an excuse to build weapons to protect the Earth from an alien threat. There are two major problems with that line of thinking. One, not all \"quote\" aliens are a danger and two, those who are, humans are hilariously inadequate to protect themselves.\"\n\nI was getting more afraid of the future by the minute.\n\nSuddenly I was very tired and weak. I dropped to my knees, not able to stand anymore. Hank was immediately at my side, supporting me. I felt like an infant in his arms.\n\nJill rushed over to me with concern written all over her face.\n\n\"All of a sudden I'm very tired.\"\n\n\"We pushed you too hard so soon after the transfusion. Hank, let's get Bob back to the cabin and back in bed.\"\n\nI looked over at Bron and a Thret and telepathically said, \"I'm so sorry. It was an honor meeting you. Thank you so much for the tour. Hopefully we'll get to spend more time together soon.\"\n\nBron responded, \"The honor was all ours. We look forward to our next encounter. Please get well soon. We all very much need you. You are very important to us all.\"\n\nGeez, I wish everyone would quit saying that.\n\nHank carried me to the AKC. I must have passed out from exhaustion, because the next thing I remembered was waking up in the cabin bed.\n\nChapter five -- The Wait\n\n \n\nIt took me a couple of weeks to get back to feeling 100%. I slept a lot. When I wasn't sleeping, I walked through the forest, kayaking on the lake, even spent time with the Greys under the lake. More importantly, I got to know Jill and Hank much better. Hank turned out to be quite the chef, but then again, Jill could hold her own in the kitchen. I still didn't know why everyone thought I was so damned important. They all asked me to quit pushing after I'd asked for say...the thousandth time. I also watched Jill and Hank go through their workout routines. Jill liked to run...fast. The first day I caught her running, Hank and I were sitting on the cabin porch. I saw a blur moving through the trees. I asked Hank if he knew what it was. He told me it was Jill going for her morning run.\n\n\"She runs about 200 miles every morning.\"\n\n\"What? How long does it take her?\"\n\n\"Oh about an hour.\" Hank said matter-of-factly.\n\n\"Close the front door! That's 200 miles an hour!\" I exclaimed.\n\nHank shrugged his shoulders, \"Yea, I keep telling her to quit jogging. Slacker.\"\n\nI gave him a look like he had three heads. He just snickered.\n\nWhen she was finished she hadn't broken a sweat and her breathing was normal. Maybe she was a slacker. That was a frightening thought.\n\nBut if Jill's speed made me uneasy, Hank's strength was earth shattering. I watched him carry around 10 ton boulders like they were pebbles. Maybe he was slacking too.\n\nOne day when we were sitting around having drinks I asked Hank, \"I've noticed you're not struggling during your workouts. Are you holding back?\"\n\nAgain Hank shrugged his shoulders, \"There isn't anything on the property that can really challenge me. If I want a good workout, the Greys have some machines that replicate the appropriate weight that I need for a good workout.\"\n\n\"What would that look like?\"\n\nHe took a sip of whatever he was drinking, \"The planet.\"\n\n\"Under Earth gravitational conditions, you could dead lift the planet?\"\n\n\"Yeah,\" was all he said.\n\nWhat was I doing here?\n\n\"Is Jill as strong as you?\"\n\n\"She's much stronger than the strongest human, but no, she isn't close to my strength. But, I'm not nearly as fast as her either. Each of us have our own gifts. Even though we shared the same father and therefore our gifts are extreme by human standards, our specific gifts appear to come from our mothers.\"\n\n\"The more I get to know y'all, the more I wonder how you can think I'm so damned important.\"\n\nHank looked at me for what seemed like hours and then said, \"It's because your gift is self sacrifice. You'll do whatever you have to in order to protect those that need protecting.\"\n\n\"Hank, can you just shut the fuck up?\" Jill came around the corner. \"We're not authorized to discuss this!\"\n\n\"Jill, we yank this man from his life, after the tragedy he has endured and he's expected to just wait until our father decides what he should know? That's not fair to him!\"\n\nJill just stared at her brother and after what seemed to be an eternity, her face began to soften. I thought about how hot she looked when she was mad and then how beautiful she was when she calmed down.\n\nShe thought for a moment. Zeus told her to make contact, ascertain if he was willing to meet, bring him to the cabin and wait for their arrival. He never said they couldn't talk to him or what they could talk about. She knew the bombshell they were going to drop on him should come from the ancient ones. She decided to try to explain some but not too much.\n\n\"Bob, you're desperately needed for gifts you not only possess in this life, but in past lives. During your first talk with Hank he cited several examples how you saved and protected those who couldn't, in this life. Even those Marines needed you in that moment. I know you had to do things and people died, but it was the bad people that died and you saved the good ones. These gifts are ingrained in your soul. In your past lives you have exhibited other selfless acts of bravery. Please don't ask me to detail them. When you meet with Zeus, Apollo, Athena and Hades I'm sure they will give you a clearer picture. Just know this world is going to need you as much as it's going to need Hank and me and some others. Will that suffice for now? Will you stop trying to pry more information from us?\"\n\nI was kinda stuck on the \"past lives\" comment. Did that mean reincarnation was a reality? I thought about what Jill had just said. Finally, \"The two of you have treated me with nothing but respect, kindness and friendship. I'm sorry I keep pushing. I'll try to be patient and back off.\"\n\nHank walked over to me, picked me up and gave me a great big-o bear hug. \"Uh Hank, I can't breath.\"\n\n\"Oops, my bad.\" Hank said as he put me down.\n\nJill walked up to me, gently put her hands on each side of my cheeks and gave me a deep and sensual kiss. When our lips parted Jill simply said, \"Thank you.\" My erection said \"Thank you\" back. She look down at me and then back up with a smile. I thought I was too old to be shocked by a woman's kiss. Guess not, besides in all fairness Jill is a demigod. Maybe it was one of her gifts, you know like a siren or something. Then again maybe I've got the hots for her. I thought about our age difference and that made me laugh.\n\n\"What's so funny?\" Jill said a little confused.\n\n\"I was just thinking I was too old for you. Then I thought nope, I'm probably too young.\"\n\nAll three of us enjoyed a chuckle. Any tension there was had vanished.\n\nFor the next week, we settled into a routine, sleep, eat, workout and talk. I sensed we were becoming very close. I hoped they felt the same. I looked up to Hank. He embodied the kind of man I always wanted to be. Strong, secure, independent yet caring and sensitive. It was the sensitive part that I had always struggled with. Maybe it took Hank 3,600 years to discover it, who knows.\n\nJill was something completely different. She had all of Hanks personality traits but add a huge dose of sexuality to the mix. How could any man not be attracted to her? I was trying to keep the relationship respectful, but each passing day seemed harder. She didn't make it easy. Ever since our \"kiss\" she touched me more. When I caught her looking at me, she would shyly smile and turn away. She could literally have any man she wanted, yet she was flirting with me. I don't know maybe it's like the song said, \"If you can't be with the one you love, love the one you're with.\" That made me think, in 1,600 years had she ever been in love? Maybe to another god, maybe in the last 200 years, a human. No way a human has a happy ending. And what about children? She's never mentioned any.\n\nThe next time Hank and I were sitting on the front porch, drinking our coffee, I asked, \"Has Jill ever been in love?\" Hell why not just come right out with it.\n\nHank took a sip of hot Joe before he answered, \"Good question, I don't really know. She's never talked about another man. To be honest, she's flirted more with you than anyone else I think of.\"\n\n\"Thanks, at least now I know my flirt-dar isn't broken. But why would she flirt with me?\"\n\nHank smiled then took another sip of coffee, \"Because my friend, Jill is in love with you.\"\n\nI wasn't expecting that response. It rocked me to my core. \"Sorry, I don't get it,\" was all I could say.\n\n\"Granted, she won't admit it to herself, but she is,\" he looked at me waiting for a response.\n\n\"Why are you telling me this?\"\n\n\"Because, my friend, you're in love with her, you just won't admit it either.\"\n\n\"Are you Heracles or Eros?\" Smart ass was in my DNA.\n\n\"Oh I don't need to be that little turd to see two people who love each other.\" Hank has a bit of smart ass in him as well.\n\n\"Hank I loved two women for over 20 years. I lost my wife and daughter five years ago. In the end I couldn't protect the two people I loved most, in this world. I don't deserve that kind of love again. Besides, I'm over 60, I know Jill would outlive any human, but geez, I'm already used up. And while we're talking, this crap about me being so important because of my so called gift of self sacrifice is a total crock. I've been in the wrong place at the right time, several times in my life, and just reacted. Thank my parents for raising me with solid morals, not something that's hardwired into my soul. This conversation was a real mood killer.\n\nHank sat there and just stared at me for what seemed like hours, but in reality was only about 30 seconds. He abruptly stood up and said, \"Don't move, I'll be right back.\" All I can say is when Heracles says \"don't move\" I'm not going anywhere. Hank walked into the cabin, abandoning me to the serenity of the front porch. It was a little weird. Hank was gone about 15 minutes, when he came back out and stood in front of me.\n\n\"Bob do you trust me?\"\n\nI looked up (way up), \"Completely.\"\n\n\"Then stand up and take my hand.\" I did as instructed, all of a sudden we were standing in the underwater base operations control room.\n\n\"So I guess using the AKC was just for fun.\" Hank just shrugged his shoulders.\n\nThere was a recliner in the middle of the room. Bron asked me to take a seat.\n\nThe monitor then began playing a newscast. I recognized it as a local station in Dallas.\n\nThey had just come back from a commercial and the anchor led off, \"Tonight we have an unexpected unsung heroes segment. Several days ago an anonymous call came into the station strongly suggesting we send a camera crew and reporter to a local funeral. The funeral was being held for a Mr. Bob Davis of Dallas. If you've never heard of him, neither had we. We almost didn't go, but in hindsight, we're very glad we did.\"\n\nThe female co-anchor took over, \"When our crew arrived at the Richardson United Methodist Church they found over a thousand people there to pay their respects. To give you some background Bob Davis was a retired Marine Corp. Gunnery Sgt, a retired Dallas PD detective and was currently representing first responders with Congressional legislation. Mr. Davis tragically lost his wife and only daughter when their truck was struck by a commercial semi, five years ago, during a severe rain storm. Mr. Davis was seriously injured in the accident, spent three months in a coma, and ultimately surrendered to his injuries while in the nation's capital last week.\"\n\nThe Greys must have recorded this a week after I arrived.\n\nThe male anchor continued, \"Obviously we wanted to know more about this man. Our reporter, Jake Simpson, talked with many who were in attendance. Their stories of Detective Davis' heroism and sacrifice are too great to cover in this short segment. We do however, want to show you a few that represent a consensus.\"\n\nI was paralyzed but wanted to run as far away as possible. I didn't want to watch this and inside, my flee for fight syndrome was waging a world war. Ultimately I couldn't \"not\" watch it, so I guess fight won.\n\nThe video switches to a tremendous crowed inside and outside the church. Jake is talking to a man who is about 60 years old, \"What is your name and how do you know Mr. Davis?\" Jake starts off.\n\n\"My name is Pete Peterson and I was a high school classmate of Bob's. I'm sad to say Bob and I lost touch after high school. He went to the Texas State and I went to Baylor.\"\n\nI sat more upright in the chair. I hadn't seen or heard from Pete in over 30 years.\n\nJake continued, \"What kind of impact did Mr. Davis have on your life?\"\n\nPete looked down, paused, then regained control over his emotions, \"I was a nerd in high school. The football team looked at me as their favorite toy to bully. Bob protected not only me but anyone who was unjustly treated. That included other nerds, girls who were constantly harassed, even teachers who were targeted. It cost him a week's suspension once for punching out Sean Broadman, the starring quarterback. The world is a lessor place without Bob Davis in it.\"\n\nThe man standing next to Pete spoke up, \"I'm Sean Broadman. Thanks to Bob, Pete and I have become friends and actually run a website together to combat bullying. Taking a hit from Bob Davis was probably the single best thing that ever happened to me. He really woke my ass up to what kind of jerk I had become. My only regret is I never got a chance to thank him.\"\n\nJake thanked Pete and Sean, next he spoke to an attractive female also about the same age, \"Can you please tell me your name and why you've come to repay your respects to Mr. Davis?\"\n\n\"My name is Vivian Black and Bob and I were classmates at Texas State.\"\n\nVivian paused for a moment, wiped her eyes with a Kleenex tissue, \"our freshman year, Bob was with a friend at a party hosted by one of the fraternities. I was there with another friend. Late in the evening, one of the frat boys slipped a date rape drug into my drink. I don't remember much of it, but from what I was told, they got me into one of the rooms with the intentions of gang banging me.\"\n\nI shifted uncomfortably in the chair.\n\nVivian continued, \"Apparently Bob had just used the restroom and was headed back downstairs when he walked by the room and saw the gathering. When he figured out what was going on, he burst into the room, fought a couple of frat boys and got me out and back with my friends. We were able to escape, but Bob didn't make it out until they had given him a beating. He literally saved my life. How could I not be here?\"\n\nJake simply said, \"Thank you.\"\n\nHe continued, \"There is also a contingent of up to two hundred former members of the Marine Corp. and their families. All they would say is that they owed their lives to Gunnery Sgt Davis, but none would go on camera or provide any more details. Also police officers and retired officers from all over the metroplex are here to support their fallen comrade.\"\n\n\"Finally I talked to the father of a young girl who was victim of sex trafficking.\"\n\nThe camera then switched to somber man in his 40's, \"I'd rather not say my name or my daughter's. Detective Davis saved my baby girl and 26 others from sex traffickers, six years ago.\" The man broke into tears, \"If it hadn't been for him, my baby would be dead now after years of being raped. I'm so sorry he is no longer here. Who will protect them now?\"\n\nJake thanked the man and the camera turned on just him, \"Gunnery Sgt, Detective, husband, father, friend. Bob Davis accepted all these roles not to gain favor or fame but to protect those who desperately needed protection. He never did it for recognition or financial gain. The Bob Davis' of the world help to make it a safer place... there just isn't enough of them. This is Jake Simpson with channel 8 news.\"\n\nThe camera switched back to the station showing both anchors dabbing their eyes with a hanky. All the female anchor could get out was, \"We'll be right back.\" The station then broke to a commercial.\n\nThe monitor turned off. I sat there, stunned, my face drenched in tears. \"I could have done more, I should have done more.\"\n\nHank put his enormous hand on my shoulder, \"The good guys always say that. Your life's not over, there's still more to do.\"",
        "I looked at Hank and was just getting ready to ask him to explain, when Thret announced, \"The delegation is inbound and should be arriving within the hour.\"\n\nHank looked at me, smiled and said, \"Maybe we should get you cleaned up and presentable. You don't want to meet the gods of Olympus looking like this.\"\n\nTo be continued...\n\n \n"
    ],
    "authorname": "Homer21stC",
    "tags": [
        "fantasy",
        "science fiction"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-ultimate-sacrifice-pt-01"
}