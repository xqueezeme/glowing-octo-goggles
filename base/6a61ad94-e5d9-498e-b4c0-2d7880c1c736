{
    "title": "The Making of an Ass Man",
    "pages": [
        "This story is written as a 'companion piece' to my 'Spinal Meningitis is No Joke' series, but it can be read as a standalone tale. It is based on an idea contributed by Ciguardian, and my thanks go out to him for his suggestions, as well as for his editing of the resulting story.\n\n*****\n\nJeannie Conrad was both an excellent nurse and the embodiment of stunningly beautiful sensuality. She was nearly six feet of curvaceous woman, with mane of lustrous, dark hair that fell nearly to her waist when she left it unbound, and a face that would likely have put most of Hollywood's most glamorous leading ladies to shame. Though serenely confident \u2013 both in her job skills and in being blessed with a body that any centerfold model would have easily envied \u2013 she had not always been thus. \n\nShe had been very shy in her youth, feeling painfully awkward throughout her junior high and high school years. She had been one of the tallest students in every one of her classes and, even though she wanted desperately to fit in, her hopes were in vain. Her stature intimidated every one of the cute boys, while her buxom curves brought only jealous \u2013 and sometimes cruel \u2013 envy from the girls in her classes.\n\nShe was smart as a whip, though, and her lack of a social life gave her plenty of time to devote herself to her studies. Her resulting good grades made it easy for her to get the medical schooling she desired, following her high school graduation. \n\nIt was college, though, that had changed her life forever.\n\nJeannie found nursing school to be a lot of hard work and studying\u2014but only in the classroom. The steel-trap mind she'd cultivated in her lonely high school years allowed her to assimilate the material in her texts and the lecture sessions with ease, requiring little study-time outside the lecture halls and hands-on labs.\n\nShe had gained admission to the nursing college at Johns-Hopkins University, in Baltimore, with its campus adjacent to one of the nation's most renowned medical institutions. Its cancer center \u2013 endowed to the tune of hundreds of millions of dollars by a Saudi oil sheik \u2013 attracted top-flight specialists, and patients, from all over the world. Its cardiac care facility, expanded and funded by James Bond film-producer Albert 'Cubby' Broccoli, was one of the finest in the world, as well. The nursing students found plenty of opportunities to learn, in this rich environment.\n\nIn college, Jeannie finally gained a group of honest friends. The girls in the nursing school were at an age where they had gained enough maturity to see and understand the loving, caring woman beneath the imposing exterior, and they adopted her with an easy grace into their circle of friendship. If nothing else, they knew that her stunning looks would draw boys in droves, and they could easily have their pick from among her 'leftovers' \u2013 the men she turned away.\n\nHer college years were also an eye-opener, for Jeannie, as her new girlfriends were women who liked to party hard, when they let their hair down after a grueling week of classes. Jeannie got drunk for the first time in her life, gained her first serious boyfriend, and finally lost her long-despised virginity, all within the span of her first two weeks on campus. She enjoyed the partying \u2013 and the sudden availability of all the sex her nubile and eager body could handle \u2013 immensely but, when two of her fellow nursing students were summarily dropped from the program for low grades, she made sure she kept her studies on track and the drinking in check.\n\nThe thing that did slip out of control was the sex-life that suddenly blossomed before her \u2013 a time of carnal pleasures beyond her wildest dreams and anticipations. Her first boyfriend, Jeff, was a decent enough fellow. He was a patient and skilled lover, and taught her a great deal about the pleasures available to a woman with a body such as hers. She had let him take her virginity after only four dates. She had broken her own hymen, shortly after turning eighteen, with a sex-toy 'borrowed' from the drawer of her mother's night table, so her first penetration by a live cock hadn't been painful for her, at all. Instead \u2013 with her nubile pussy well used to penetration by her mother's toy, the interlude was pleasurable in the extreme, to her. As the echoes of her very first man-generated orgasm faded away, she rolled him onto his back and let herself take charge. She rode him, hard and long, moaning and groaning out her pleasure to his obvious delight, and really got off when at last he came inside her. The heat of his discharge \u2013 and the sheer feel of it, as it impacted against her cervix when he ejaculated \u2013 were like nothing she had ever felt, before.\n\nA few nights after that, things began to get even more interesting. She lay next to him on the bed, with her head on his chest, after another steamy session of sexual abandon. She watched his cock, coated with the thick white froth of their combined juices as it lay on his stomach, twitching gently with the aftershocks of his ejaculation and slowly oozing a last gobbet of his creamy seed onto his abdomen. Jeannie had never taken a cock in her mouth, before, but she'd heard several of her girlfriends talking in glowing terms of the pleasures that could be had by a woman, from sucking on one. She wondered \u2013 not for the first time, as she gazed at his gently twitching appendage \u2013 what it would be like, to take the thick stalk of flesh between her lips or run her tongue lovingly along its length.\n\nJeff was pleasantly surprised when she slid her mouth closer to him and began licking and sucking at his dick. He was blown away when, after those first few tentative, exploratory moves, she pressed her mouth further along the shaft, eventually swallowing it in its entirety. For her part, Jeannie was na\u00efve enough that she hadn't even heard the term 'gag reflex,' before. She was unaware that it was a truly rare talent she had, to be able to effortlessly take a man's throbbing erection straight down her gullet. She simply loved the feel of it, and the taste \u2013 when she'd sucked him back to maximum hardness and coaxed another ejaculation out of him. She loved it, and became almost instantly addicted to sucking cock. The savory essence of a man's seed became a newfound delicacy that she sought out at every opportunity.\n\nThanks to Jeff's big mouth, however, word got around campus quickly. She broke up with him when she found out that he'd been the one who had pinned the nickname, 'the deep-throat queen of Baltimore County,' on her.\n\nMen were practically lining up to ask her out after that, though. Her next two boyfriends were very attractive frat boys, and she began receiving invitations to a whole new kind of party \u2013 where she was, more often than not, feted as the center of attention. At her second frat party, she sucked off seventeen pledges in a row, while her boyfriend cheered her on as he slowly fucked her from behind, the entire time. Many of the pledges were every bit the virgin that she, herself, had been only a few weeks earlier, and it was a source of secret pleasure to her, to know that she'd taken at least the oral 'cherry' of so many young men. \n\nAt other parties, she was not the only girl on her knees, with a line of guys waiting their turn to sample oral skills that were fast approaching the point of becoming a local legend, but her 'line' was by far the longest one. Jeannie loved the attention, loved the power she had over a helpless frat boy whose cock was lodged deeply in her throat. She came hard when her boyfriend fucked her roughly from behind and played with her ass while his friends deposited burst after burst of thick, creamy, delicious baby batter in her mouth and throat.\n\nAfter Jeff, her dates became quite casual in nature. She would meet a man, and they would date for two or three weeks \u2013 nearly every night \u2013 and then break up amicably after lots of wild sex. Then she would immediately be asked out by someone new, and the pleasurable cycle would begin anew. She became the central fixture at the wildest and most talked-about parties at the frat and sorority houses off campus. It was at one of those out-of-control sex parties, with her head held firmly in place and a nice stiff cock in her throat, that she lost her anal virginity. She never even got the chance to protest. And, only thirty seconds into the sudden spreading of her back door, she was ever so glad that she'd been taken without warning.\n\nThe man had been fucking her \u2013 hard and fast, just the way she liked it \u2013 from behind, while she was servicing the third boy in line with her mouth. It felt good when she felt the first teasing touch at her sphincter. It felt even better as a finger began entering her back door. Someone poured lube generously down the crack of her ass, and then she moaned around the cock in her throat as two fingers started opening her behind, eventually becoming three fingers that probed deeply and delightfully into her nether passage.\n\nShe finished the man in her mouth, and another stepped up to take his place. This frat brother had a nice big one, and it felt amazing in her mouth and throat. He was obviously experienced with such things, as he held the sides of her head \u2013 gently yet firmly \u2013 and slowly slid his length in and out, literally fucking her face so that she had the brief mental image of being 'spit roasted' between the two cocks. Then, suddenly, she felt the fingers and the cock withdraw from her other end. \n\nShe was about to groan in protest at the suddenly-empty feel of her pussy and ass, when \u2013 just as suddenly, to her relief \u2013 she felt her ass being spread wide open, again, this time by something with a larger girth than the three clustered fingers had previously provided. It felt absolutely in-fucking-credible! She moaned \u2013 around the cock fucking itself into her mouth \u2013 at the magnificent feeling that assailed her as the thick and mysterious invader slowly and inexorably pressed its way deeper and deeper into her bowels!\n\nIt really didn't occur to her, for those few moments, that her ass was being fucked by a thick, hard dick. When the truth of what was happening finally registered, in the dim recesses of her sex-fogged brain, she groaned at the sheer pleasure she felt. In the next moment, both men being pleasured by her were surprised as she pulled free of the cock that plumbed her mouth for just long enough to scream, \"Hell, yes! Fuck my ass! Fuck my mouth! Fuck me, both of you!\" \n\nShe absolutely loved it, and she knew \u2013 in that instant \u2013 that she would always crave the feel of her asshole being split by a hard, thick cock, just as her tongue would always crave the taste of a man's seed.\n\nShe never even saw the face of the man who took her anal cherry, but she came harder than she ever had, in her entire sexual experience, when he erupted in her ass. Before her legs had stopped shaking with that first anal orgasm, the man pulled free and another lover took his place, inserting his stiff cock into her suddenly insatiable back door. On and on it went, and she wasn't entirely sure how many men she'd taken in her various holes, or how many times each of them had fucked her. Eventually, the men were so spent that they could no longer sustain their erections, and the pleasuring ceased. The circle of cheering onlookers \u2013 male and female, alike, judging by the sounds of the voices she'd heard urging her on \u2013 faded as the partiers moved away. The night's entertainment \u2013 the spectacle of a consummate cock-whore displaying her skills \u2013 appeared to have ended. \n\nShe rolled onto her side on the blanket that had been thrown on the floor as she'd dropped to her hands and knees and invited the first of the frat brothers to avail themselves of her, circulation slowly returning to her numbed knees, hands, and wrists, and glanced at the watch that every nursing student wore. She'd glanced at it, briefly, when the 'festivities' had begun, and she was shocked to find that she'd spent nearly two full hours on her knees on the floor, pleasuring men and being pleasured by them.\n\nShe stumbled \u2013 wearily but contentedly \u2013 back to her room in the wee hours of the morning, load after load of cum from an unknown number of men slowly oozing from her well-used pussy and rectum, flooding the gusset of her panties. \n\nShe was a little sore, after that first time, but she was eager for more.\n\nShe was now as 'hooked' on anal sex, as she had been on both oral and vaginal copulation, and the 'ultimate' in sexual pleasures had been hers on at least three occasions \u2013 the utterly wonderful and delightful feeling of cocks simultaneously plunging into and out of her pussy, ass, and throat, while at least two mouths had attached themselves to her nipples, adding an extra bit of pleasure in the moment.\n\nOver the course of her college career, she learned a great deal. Despite her late-night escapades, she excelled at her studies, becoming a skilled and competent registered nurse. She also learned the downside of the reputation she'd acquired, on campus: a size queen with mad deep-throat skills and a cock-hungry ass. The men she saw no longer treated her with the respect that she felt was any woman's due, and they were often callous toward her, and somewhat abusive. She'd found that she sometimes even 'enjoyed' being spanked, when she was on her knees and had a man in her pussy or ass; the sharp sting of the slap was a strangely enjoyable contrast against the pleasure of the cock inside her, and there was also the strange psychological sensation of being spanked for being such a bad girl. But, sometimes, the frat brothers could get carried away, with it, leaving her bruised.\n\nFortunately, shortly after her second year at Hopkins began, she'd made the acquaintance of Craig Simons. Craig was a somewhat atypical geeky young man who'd crashed a party on a dare from two of his also-geeky friends. She regarded him as 'atypical' because he was fairly handsome, and his geeky and socially inept exterior concealed the heart of a romantic, the mind of a dreamer, and a cock of truly prodigious proportions \u2013 one that delighted her no end, once she'd coyly persuaded him to unveil it for her. \n\nShe made sure to spend some time chatting with him, sitting on his lap on a plush chair in a corner of the room that night \u2013 uncaringly naked, trading tongues and swapping spit with him like a girlfriend would \u2013 while the rest of the frat boys were taking a break to 'recharge their batteries' for another go at her. In the midst of their conversation, she dropped the hint that she would be more than happy to follow him to his tiny off-campus apartment, once the party came to an end, and teach him how to use the formidable weapon Mother Nature had endowed him with, to pleasure any woman who was smart enough to see past his shy demeanor and let him in.\n\nThat night had proved to be a watershed event in Craig's life, as the delightful vixen had taught him \u2013 over the course of the next few months \u2013 every little nuance and ploy that her various boyfriends had used to charm their way into her panties. Craig was an apt student, slowly coming out of his shell and mastering everything she presented as a part of his 'extracurricular education.' \n\nEventually, Craig had come to her and suggested that their time together needed to end. He had used what she'd taught him \u2013 over the Christmas holiday break \u2013 to slip past the 'defenses' of a girl in one of his classes, a girl-geek named Connie Trevellen, who was stunningly lovely in her own right.\n\n\"You told me to be careful who I used what you taught me, on,\" he smiled as they sat across the table from each other at one of the off-campus coffee shops, where they'd arranged to meet, \"because, once she'd had me, she'd never want to let me slip away from her. I took your advice to heart, and she and I are never gonna let each other go!\"\n\nHe pulled his iPhone from its belt clip, opened the Photos app, and brought up a picture. It was a faces-only shot, showing Craig, Connie, and his left hand holding hers. A diamond sparkled on her ring finger.\n\n'Hmmm; learned well, you have, young Padawan,\" she teased him, giggling, in her best 'Yoda' voice. \"I can see why you want to stay true to her, too. But I better get a damned good 'goodbye' kiss, when we leave here, in a bit.\"\n\n\"I'd favor skipping the kiss, entirely, for the moment,\" he flashed an infectious grin. \"If you'll follow me back to my place, I've got a bit of a surprise, for you.\"\n\nThey left the coffee shop and she followed him back to his apartment, where \u2013 it turned out \u2013 he had prepared a gourmet dinner for her as a 'thank you' for all she'd done, for him. The meal was followed by the absolute best two hours of 'break-up sex' she would ever have.\n\nCraig also repaid the kindness she'd shown him by lending her an occasional hand as both of their sojourns at Hopkins wound down to an end, that spring. He was majoring in computer forensics, and he was a skilled hacker. Fifteen times over the course of Jeannie's remaining time at Hopkins, he painstakingly tracked down and destroyed lengthy videos taken by various frat boys, identifying her by her real name and showing her displaying her prodigious skills at parties \u2013 videos that had been posted to various sites on the Internet.\n\n\"Fortunately, the owners of those sites weren't terribly careful about safeguarding their servers,\" he told her when he gave her the last report. \"I managed to track down everyone who ever downloaded the files to their local computers, hack into them, and remove the files. I couldn't tell if they'd saved a copy to something like an SD card, or a thumb-drive, but I've destroyed every copy I could find.\"\n\nWorse than the attitudes of the men with whom she coupled, though, was that of the other women she knew. Even some of those girls she'd thought were her closest college friends gradually began to dissociate from her, treating her as though she was a common whore. In a moment of clarity, driving home from Craig's apartment after a night of helping him work on his stamina in the sack, it came to her that she had become the very sort of cock-whore she had once, herself, despised.\n\nFortunately for Jeannie, graduation day was only a short span of days away at that point in her life. And, when she was offered a full-time nursing position on the other side of the country, she snapped it up in a heartbeat. She took it, vowing to somehow turn her life around \u2013 shed her past reputation as the 'in demand' campus party girl, and start off fresh in a new city.\n\nAt first, it was difficult in the extreme, for her to lock that part of her \u2013 the party-slut who craved cock in every orifice in her nubile body \u2013 in chains and cage her away in the deepest recesses of her soul, but she managed it. Though it was not without many a night spent in the fevered pumping of a pair of sex toys into her two most often-used holes, trying to pacify the part of her that screamed at her to go out, find a man, and get herself well and truly fucked.\n\nFortunately, Jeannie immediately made a friend at the new hospital \u2013 another new nurse from out of state, named Sarah. The two of them got an apartment together. They both dated when their busy schedules allowed it. Unlike Sarah, however, Jeannie completely abstained from sex, and the only alcohol she consumed was an occasional glass of wine with a meal at the apartment, or later in the evening, in front of the television. She was carefully avoiding the reputation that had hurt her so much, in college. The longer she persisted in her efforts, the easier it became for her to maintain her new, sex-free lifestyle.\n\nJeannie's life changed, again, when she began dating Steve Conrad. He was the complete package Jeannie had been seeking, ever since the fantasies of her early high school days. He was ruggedly handsome and charming, he treated her with respect, and he shared her quirky sense of humor. ",
        "He also had a nice, big package in his pants and, when she finally let him show it to her, he proved that he knew damn good and well how to use it, to provide his woman with all the pleasure she could stand, and then some! \n\nLuckily, he loved her as much as she loved him, and they moved from being 'an item' to becoming terribly serious about each other very quickly. It was with an enormous sense of relief that she could finally welcome a man back into her bed and her famished pussy.\n\nSteve never pushed for anything beyond vaginal sex, from her, in the bedroom. He adored Jeannie, loved spending time with her, and their sex life was the best he had ever had. He'd never met a woman who seemed to treat sex as an Olympic event, a competition from which both contestants were supposed to come away with gold medals. Jeannie hadn't even had the chance to show him what she could do to a man, with her amazing throat and eager asshole, when Steve proposed to her.\n\nSarah was overjoyed for her friend and roommate, and she was honored to stand at Jeannie's side at her wedding. Only a few months later, both women jumped at the chance when two positions opened up in the hospital's coma ward. They had only worked occasionally, before that point, but now they could work together all the time.\n\nAs soon as they started their new positions, they became aware of a bit of a \"situation\" in the coma ward. It all swirled around a young patient named Joshua Thompson. The senior nurse who took charge of them was a very friendly woman named Gretchen. At the start of their very first day on the ward, Gretchen took Jeannie and Sarah aside, handing them Joshua's thick medical history folder. In a roundabout way, she informed them that both of them would need to be very careful around this particular patient.\n\nThe medical file of Joshua Thompson did not immediately give away the reason for this caution. Shortly after starting his junior year of high school, he had contracted bacterial meningitis. He had not sought medical attention for the condition, thinking \u2013 as so many teens did, when they contracted the illness \u2013 that it was merely a mild case of the flu. A few days, he thought, and the ailment would have run its course. His parents were terrified when he collapsed at home. By the time he had been rushed to the hospital, he was in critical condition with swelling in his spinal fluid. He was treated and stabilized, but he had been in a coma, at that point in time, for seven months. The bacterial infection was long out of his system by the time Jeannie and Sarah came to the ward, but it was uncertain if \u2013 or when \u2013 he would ever awaken from his coma.\n\n\"So, Gretchen,\" Jeannie said, mystified, when she'd finished reading the file, \"What's the deal, with this particular patient? Why do we need to be any more careful with him, than we'd already be, with any other patient? I can't see anything, in his file, that would indicate such a need.\"\n\n\"That's because the reason isn't in his file, Jeannie,\" the head nurse told her, with a soft smile.\n\nGretchen took the two young nurses to the young man's bedside and pulled the privacy curtain around his bed. She pulled his sheet aside and lifted the hospital gown. Both women gasped. Rising from his groin was an enormous, completely erect penis. It was the largest such appendage either woman had ever seen \u2013 and, given the veritable 'Sears catalog' of cocks Jeannie had seen, in her days at college at Hopkins, that was saying something, indeed! After covering Joshua back up, Gretchen quietly explained.\n\n\"Joshua had all sorts of weird growth spurts \u2013 side-effects of the various medications the attending doctors ordered, to combat the swelling along his spinal column and in his brain,\" she explained to them. \"For several months, both his hands and his penis were disproportionately large. \n\n\"Now, I will be the first to admit that his penis \u2013 his cock, if you will \u2013 is the sort that just about any woman would love her boyfriend or husband to have,\" she told them with a soft smile \u2013 and in a very hushed voice. \"You may have noted the absence of pubic hair at the base of his penis. We keep our patients shaved clean, in their genital region, since it makes it much easier to clean them when they soil themselves. Joshua tends to become erect quite often, and he's been known to discharge while some nurse had hold of the appendage to shave around its base.\n\n\"I will admit to having voiced some somewhat envious joking comments regarding the appendage nature and genetics have given Joshua. If that boy ever wakes up, and is able to eventually resume something closely resembling a normal life, he's going to make some lucky woman very happy, indeed. However, I've kept my comments restricted to being made in the staff lounge, which is soundproofed so that patients' family members can't overhear us discussing a patient's prognosis or treatment regimens. \n\n\"The two nurses on the ward before you made the mistake of joking about hanging Christmas decorations on the young man's penis. Unfortunately for them, his mother happened to be here, at the time, and she overheard their attempt at humor. Now, don't get me wrong, she's not some heartless ogre, or anything. She could easily have had those nurses fired, but she didn't. She simply suggested \u2013 in a very terse manner \u2013 that they take steps to get themselves reassigned elsewhere in the hospital. They did. That's why the two of you are here.\"\n\nJeannie and Sarah both understood. Later that evening, they met the boy's mother for the first time. Jennifer Thompson took a liking to Sarah and Jeannie, immediately. Even though her son had been in a coma for over half a year, she still came to the hospital at least three times a week. Her husband joined her in those visits, on the weekends. \n\nBoth Jennifer and her husband were extremely considerate of the nursing staff. Jennifer was also a real estate broker, with her own agency, and she helped Jeannie and Steve get their first house. A couple months later, she got Sarah and two of her nursing friends a nice three-bedroom rental that suited their needs perfectly. When those girls, Heather and Charlene, replaced Gretchen and Louise a few months later, the four women quickly developed into an exceptional nursing team. They were also all good friends.\n\nHowever...\n\nJeannie felt increasingly isolated from the three other nurses. Her workmates all lived together and were single. She was married and, at home, she had hit a major snag with her dreamy husband. As has been mentioned earlier in this story, Jeannie had not had the opportunity to show Steve what she could do, to a man, to bring him exquisite pleasure with her talented mouth and throat, or her eager backdoor, before he proposed marriage to her and she accepted. \n\nOnce that happened, Jeannie found herself a bit embarrassed to simply suggest either oral or anal activity to him, especially the latter. She knew that, in the way most modern men seemed to, Steve had intuitively understood that he was not the first man she'd ever been to bed with. He'd met her too late in her life, for that to be even a remote possibility. And, like a great many men, he had no wish to accidentally discover that he came up short in any way, in a comparison with her former lovers, so he had never asked her about her sexual past. He had simply accepted her prowess in the bedroom, and the loving ferocity that she brought to their lovemaking once it began, as the joyful things they were, and was glad of it \u2013 regardless of where or how she might have come by those mad skills she displayed as she rode him in wild abandon, night after wondrous night.\n\nShe finally managed to figure out a way to suggest to him that she might be open to adding a little 'variation' to the activities they indulged in, in the bedroom (not to mention on the couch, in the shower, on the kitchen table, and in a few other places they'd discovered) but it was by a somewhat convoluted method. Charlene, as it turned out, owned a rather sizeable collection of adult DVD's. She'd inherited them after her parents had both died when their sailboat was caught in a sudden 'white squall' off the California coast. Over a period of a few weeks, Jeannie borrowed videos \u2013 starting off with simple 'innocuous' ones involving straight vaginal sex only \u2013 from her friend, suggesting that she and Steve watch them over weekends. Doing so \u2013 she suggested \u2013 might prove to enhance their overall arousal level, as well as potentially suggest some new positions or locations they might experiment with. Steve was quite okay with the idea, and watched the videos avidly, with her. \n\nThen came the fateful weekend when Jeannie brought home a DVD that contained some extremely (to her mind, at least) hot and well-contrived scenes of oral and anal sex. It was after the video ended, and the two of them discussed \u2013 as they usually did \u2013 what they'd thought about it, that Steve surprised her... and not in a good way.\n\nIt turned out that Steve was adamantly opposed to any oral or anal sex. Jeannie had merely thought he was shy about asking for it, early on in their marriage, but now he had made his position clear. He had, in fact, drawn a starkly graphic comparison: the idea of oral or anal sex was, to him, like being forced to eat a cockroach. The suggestion, alone, was enough to make him nauseous. \n\nTo a woman with Jeannie's skill set and appetite, this was devastating. However, outside of that peculiarity, Steve was the perfect husband. She didn't feel comfortable talking about any of this with her coworkers. Days stretched into weeks, and weeks became months without the taste of a cock, or sperm, and without the delight of feeling a cock stretch her nether opening and pummel her forcefully. She was fast approaching her wit's end when Jennifer Thompson stepped up in her life, in a huge way.\n\nJeannie was at work, with Sarah. It was late afternoon, and she was distracted with thoughts of her husband and the plight in which they both found themselves \u2013 she, craving anal and oral sex, and he, wanting no part of it, whatsoever. She was performing the mindless, repetitive task of logging medical supplies and patient medications when Jennifer approached her.\n\n\"Jeannie, you are one distracted woman,\" Jennifer said in a low voice, \"What's on your mind?\"\n\nJeannie looked up at the sympathetic face, from where she crouched, inventorying the stock in a lower cabinet. She thought carefully before answering. \"Jennifer, it's really personal \u2013 not the kind of thing I can talk about at work, with anybody.\"\n\n\"Oh, I can understand that. There are some things that I've gone through, these last few years...you really have to have a good friend you can trust, to get through that.\" Jennifer searched Jeannie's eyes for a bit before continuing. \"You're off tomorrow, right? Let me take you out for coffee. Maybe I can be that friend, for you.\"\n\nJeannie hoped she didn't sound desperate as she said, \"That sounds great.\"\n\nWhen Jeannie got off shift, the next morning, Jennifer was there at the hospital. They walked down to the hospital cafeteria together and sat down with coffee to chat. Jennifer made a face after the first sip from her cup of the steaming concoction.\n\n\"Yuck! This is awful. Please tell me you girls have better coffee, on your ward, than this.\"\n\n\"It's a little more bitter, here \u2013 I think the machine, here, is on its last legs \u2013 but this is the same coffee we have everywhere in the hospital. Sorry.\"\n\nAs the owner of her own real estate brokerage \u2013 and one who hadn't stopped being actively involved in both obtaining and showing listings, despite the fact that she had employees who could handle those tasks with ease, Jennifer practically lived on coffee, during her workdays. If these four women \u2013 she'd come to know all of them quite well, over the last several months \u2013 were going to be caring for her son, they deserved to have something far better than the 'bargain basement' swill provided by the hospital for all its coffee machines, even if she had to supply it, herself! It wasn't like she couldn't afford it \u2013 not with what she earned on her own, and with her split of the commissions earned by her sales staff! Meanwhile...\n\nJennifer took one more sip and then set the coffee down. \"I know a great coffee shop, only a couple blocks from here. Come on; it'll be my treat.\"\n\nJeannie was a little nervous, but followed Jennifer to her car. They drove to the coffee shop, got cups of a fragrant and delicious brew, and just talked for an hour. The coffee was much better, Jeannie had to admit. And Jennifer's soft, reassuring presence made for excellent company. She felt relaxed for the first time in a week. She was just not relaxed enough to talk about her deeply personal marital issues. Still, it was really nice, and she felt close to Jennifer. They were able to talk about other facets of married life, and that was so refreshing.\n\nWhen Jennifer dropped her off at her pickup truck, in the hospital's employee parking lot, Jeannie gave her a hug and a sincere, \"Thank you so much. I really needed that.\"\n\n\"You know, Jeannie, so did I,\" Jennifer replied, smiling. \"We need to do this, again, very soon.\"\n\n\"I agree,\" Jeannie nodded.\n\n\"Well, catch me any time I'm in, visiting, and let me know \u2013 if you're in the mood to go somewhere and be just two women letting our hair down, to each other!\"\n\nLater that evening, Jeannie got a text from Jennifer, with an image attached. The photo was of the coffee station in the coma ward's nurses lounge \u2013 only it now boasted a brand new 'Bunn' restaurant-grade coffee maker with three pots and a warming plate, plumbed into the water line permanently, and a variety of really good coffees. The caption read, \"Looking forward to sharing coffee with my friends, here.\"\n\nOver the next three weeks, the women shared more and more personal stories over coffee. Then, one morning, Jennifer invited Jeannie for coffee at her house, and that became a regular thing. It was a safe place, a place where strangers couldn't overhear their exchange of problems and sympathies \u2013 a place where they could talk about anything at all. \n\nSurprisingly, Jennifer was the first to really open up about her problems.\n\n\"You know, there's only one thing I really miss, these days,\" she sighed. \"I hope you don't think badly of me, but I used to enjoy good anal sex, back when I was in college. Unfortunately, my husband just has no interest in it, at all.\"\n\nJeannie couldn't help but gasp out loud when she heard that. Jennifer started to blush, so Jeannie hastily blurted out, \"Oh! Forgive me, Jen! That gasp wasn't over what you just told me. It's just my surprise \u2013 and my shock, too, I suppose \u2013 because I thought it was only me! That is exactly what's been killing me! I love the taste of a man's seed, and I'd love to feel Steve's cock stretching me, back there, but the very thought of either thing seems to turn him right the hell off, for some reason or other \u2013 something he either can't, or won't, tell me.\"\n\nBoth women's eyes lit up, and soft smiles suffused their lips, as they realized the odd kinship that bound them together. Morning coffee that day went on for five hours, that day, as they were able to truly open up about this peculiar demon that had been plaguing both women's marriages. \n\nJennifer was perhaps more fortunate than Jeannie, as her husband engaged in at least a little bit of oral sex, with her, both giving and receiving, but it was always perfunctory \u2013 \"a lick and a promise,\" Jennifer grinned wryly \u2013 a tiny bit of foreplay before he moved into position to fuck her.\n\n\"Don't get me wrong,\" Jennifer went on, \"He does a fantastic job of satisfying my pussy with that thick cock of his. I just wish sometimes he'd let me enjoy it more, in my mouth. I think he's afraid that \u2013 at his age \u2013 he's more of a one-shot man than he really is. He's worried that, if he cums in my mouth, he won't manage to get hard again, to give my pussy a good fucking. I can't seem to get him to understand that it's possible for a woman to achieve an orgasm just from the feel and taste of a man erupting in her mouth \u2013 and that I'm one of those women who can do exactly that!\n\n\"As far as anal sex is concerned, he really can't get into that, at all. One time, I thought I could get him to consider it. I picked out a porno for us to watch together, one with a really well-done anal scene. I was stroking his rock hard cock...and then the anal scene started and he went limp in my hand.\" A sad look flitted across her face as she dredged the memory from the recesses of her mind.\n\n\"You're lucky, believe it or not,\" Jeannie consoled her friend, a grim expression on her face. \"Steve looked physically ill, whenever I brought up the idea of either oral or anal. I don't even bring it up, anymore.\"\n\n\"And, with the body that Mother Nature gave you, I bet you get eyed-up and maybe even propositioned by men, practically everywhere you go,\" Jennifer suggested.\n\n\"I do,\" Jeannie admitted, sighing. \"I can't seem to take a trip to the grocery store or the damned Walmart, without some guy or other flirting with me. And every fucking time it happens \u2013 excuse my French \u2013 I have to fight the temptation to give in and go with the guy, if he's at all good looking and has a nice bulge in his trousers, just to have one more time where I can indulge those other little passions I have!\"\n\n\"It's a pity that Steve works days, all the time, and that you can't somehow subtly arrange for him to follow along behind you, at a distance, on a mid-morning trek through the grocery store. It'd do him good, to watch the men who try to pick you up for a romp in the sack,\" Jennifer commiserated with her. \"Maybe, then, he'd at least break down and tell you why he's so adamantly opposed to experimenting with those other sexual pleasures...\"\n\n* * *\n\nOf course, Steve was not unaware of his wife's desires. What she didn't know, however, was that he was had become quite sympathetic to her plight over the months they'd dated and the year that they had been married, thus far. He'd heard enough 'locker room' talk, in his high school and college years, and over drinks after eighteen holes at the golf course, to know and understand that there were both men and women in the world who thoroughly enjoyed both anal and oral sex. He realized that his wife was one of them, and that his own problem was depriving her of something that she truly loved and craved. And, truth be known, he felt absolutely miserable, knowing that he constantly failed her, in that regard.\n\nThis was a problem on more than one level, he realized. In his wedding vows, he had promised her to be all that she needed or wanted in a life-companion and, in this one area, he had been sadly lacking. Too, he'd heard enough tales of woe and misery from the few men he knew who'd ignored their wives' needs and desires in the bedroom, only to have them seek solace in the arms \u2013 and bed \u2013 of another. One of his co-workers \u2013 a fellow named George, at the Cleveland office of the company, whom he'd worked with quite often \u2013 had just been plunged into a divorce by his wife, Marcy. He, too \u2013 as it turned out \u2013 had been less than enthused by the notion of anal sex. He'd come home from a road trip, a day early, to find his wife sharing their marital bed with a man who obviously had no qualms about fucking a woman in her ass.\n\nThe talk he'd heard and overheard had been sufficient to convince him that there were plenty of single \u2013 and married \u2013 horn-dogs in the world, men who wouldn't think twice about taking a tumble in bed with an otherwise-married woman who had the sort of 'mad' oral skills and anal cravings his wife had hinted at possessing. And he had no desire to see his marriage to Jeannie end the way George and Marcy's had.",
        "Too, he only had to take one look at her \u2013 or to remember his thoughts, the first moment he'd ever laid eyes on her, in that coffee shop, a couple years back. Jeannie was apparently unaware how her outgoing and genuinely ingratiating personality \u2013 coupled with her absolute dynamite body \u2013 caused her to 'ooze' sex from every pore, or how hot she'd appear to those eager, horny Lotharios who prowled the grocery stores and shopping centers looking for bored or unfulfilled housewives. As attractive as Jeannie was, she likely couldn't take a trek through the local grocery store, or the nearby Walmart, without at least three or four such men trying to flirt with her and pick her up. Heaven forbid she should be in an exceptionally weak state of mind, one day, and actually give in to one of them!\n\nHe truly loved her, and he knew that she loved him back with a boundless and joyous love. And he was worried that his wife's unsatisfied desires could pose a serious obstacle to their long-term happiness \u2013 that, one of these days, she'd grow so desperate for the sexual pleasures his problem caused him to deny her, that her resistance to all those overtures she normally turned away would ebb to a point where she'd actually give in to one of those offers. And it might only take one such time, to set her on a path that their marriage would not survive, intact!\n\nTo counter the problem, he had, in fact, begun going to counseling without telling her. He went through a dozen clinical psychologists until he found one with whom he was comfortable enough to discuss his issue. Steve was surprised that it was a woman only a few years older than his wife, who was able to put him at ease.\n\n\"So, basically our problem is that my wife wants oral and anal sex, and the thought of either one makes me physically ill,\" Steve finally laid it out for her. It was his third session, and Dr. Camilla Hamilton just nodded. She'd suspected there was a personal issue bothering this patient, imagined it to be something sexual in nature, and hadn't rushed him into it. Instead, she'd let him take things at his own speed, realizing that his level of comfort with her was the key to their getting anywhere near solving his problem.\n\nThere was an awkward, long silence.\n\n\"Well?\" Steve finally asked.\n\n\"Well, what?\" Dr. Hamilton replied, \"Why is this such a problem for you?\"\n\n\"I want to make my wife happy, Doc,\" he sighed plaintively. \"I'd give anything within my power to give, to be able to offer her what I know she craves, but I just can't seem to do it. I can't tell you how many times I've tried to 'psych' myself up, to do just that, only to fail, miserably, long before I could get into bed with her.\"\n\n\"Is there some reason that it makes you physically ill?\"\n\nSteve sighed. There was, but he had never told anyone.\n\nDr. Hamilton asked softly, \"Did someone do something to you, when you were younger? Were you molested?\"\n\nSteve looked horrified, \"Oh, no; nothing like that! Well, I mean, I wasn't molested.\"\n\nHe sighed again, and looked at Dr. Hamilton. It was time to let it out.\n\n\"When I was ten, we went on a camping trip as a family. My older brothers were very interested in women, but I hadn't figured out the fascination yet. They kept going on and on about this girl who was a few years older than me, who was camped some short distance from our family's campsite. I could recognize that she was pretty, but they had apparently seen her ass. They raved about how sexy it was.\n\n\"I was curious about it, of course, and decided to take a chance and try and get a look at her ass, myself. I followed her around for a couple of days from a ways off, and figured out that there was a spot she went to relieve herself. The next day, I crouched down in the bushes just a couple feet behind her, to watch her pull down her panties. Unfortunately, she had diarrhea, and it was really bad. It was absolutely disgusting and, of course, I couldn't move without making noise and alerting her to my presence. So I had nowhere to go to escape the sight or the smell.\" He shook involuntarily at the memory, feeling the bile rise in his throat.\n\nDr. Hamilton recognized the trauma in the story, and in Steve's reaction to telling it. This might take a long time for him to get past. He wasn't done talking, though.\n\n\"Later on, when I got to high school, there were a bunch of guys I hung out with. One of them commented that a particular girl in our school had a really nice ass. When all the other guys said it was merely 'okay,' the one guy who had brought it up looked at everyone else like they were nuts. He said something like, 'Are you kidding me? That is one amazing ass! I would love to eat my lunch off her backside!' Just the thought made me sick to my stomach. But then the other guys all started giving him grief. At least two of them said, 'Butt stuff makes you gay.' So that just reinforced what I already thought \u2013 that it was disgusting.\"\n\nDr. Hamilton made a note, but talked calmly to Steve while she wrote. \"Look, Steve, I can tell you that those friends of yours were wrong. But you already know that, don't you?\"\n\nSteve nodded. \"Yeah. But it's still stuck in my head, playing over and over \u2013 like an old vinyl record with a skip in it. I know that my wife has a nice ass, objectively speaking, but I can't look at it without feeling uncomfortable\u2014and that presumes she's dressed. I can't even have vaginal sex with her, from behind, if the lights are on. What can I do, Doc?\"\n\nDr. Hamilton thought about it for a few moments, before answering his desperate question. On a purely personal level, she wasn't an ardent fan of anal sex. She engaged in the act, from time to time, to satisfy her own husband's occasional penchant for it, but it didn't sate her sexual desires the way having her pussy filled did. She understood that some women, and a lot of men, really did enjoy anal sex \u2013 some, to a greater degree than others. Judging by what Steve had told her, his wife \u2013 Jeannie \u2013 was one of those women who enjoyed the feel of it immensely. She pursed her lips, as her mind went through the various treatments and therapies that could help this patient overcome both the initial trauma and the resultant aversion it had created within him.\n\n\"I'm not going to lie to you, Steve,\" she continued. \"What you're dealing with is a major childhood trauma. This sort of thing can take a really long time to work through; otherwise you risk being further traumatized and making things worse than they already are. Is there any chance that your wife can attend these sessions, with you?\"\n\nSteve looked horrified again, \"Oh no! No, that would just be way too embarrassing. I really don't want my wife to know that every time I see her naked behind I picture...you know, nastiness shooting out of it.\"\n\nDr. Hamilton looked at him speculatively for a bit. \"Here's what I don't understand, Steve. You said 'oral and anal sex' earlier. Why the aversion to oral sex?\"\n\nSteve sighed. \"I can't put my face down there. It's too close to her ass. I'm afraid I'd throw up, and that would just...\" He shook his head sadly.\n\n\"Didn't you say your wife wanted to perform oral sex on you, though? Why is that a problem?\"\n\n\"Well, doc, if she does it for me, then I'd be obligated to do it for her. I just can't.\"\n\nCamilla knew that his answer demonstrated some seriously flawed thinking, on his part. Given what he had related to her, about her cravings and desires, it was highly likely that what she craved the most was the taste and feel of him ejaculating in her mouth. On a personal level, she understood that desire, in Jeannie, because she'd experienced exactly that in her own past sexual relationships. She could very nearly orgasm, when her husband filled her mouth with his thick cream...\n\nIn the paperwork that Steve had filled out, prior to his first session with her, there was a question that asked if he'd ever consulted with any other therapists, regarding the problem he sought her help with. He'd listed an even dozen clinical practitioners in the response block, and she'd spoken briefly with a few that she knew on a personal or professional level. She'd learned that he'd broken off his sessions with them before they had even achieved this breakthrough point \u2013 the revelation of the root trauma behind his problems. She didn't want to risk pushing Steve too fast, this early in their sessions, and so she refrained from asking him the most obvious question \u2013 had he ascertained that she would, in fact, require him to reciprocate if she took him in her mouth.\n\nIt was unfortunate that he was so adamant about excluding his wife from the sessions, but \u2013 even in that \u2013 she understood the compulsion that drove his notion. Steve felt bad enough, that he felt that way about any part of his wife's body, to begin with. He couldn't bear to have her actually discover that he felt that way.\n\nStill, it was a shame. If she could just talk with Steve's wife, if Jeannie understood the problem her husband was dealing with, they would have a much easier time working through the situation together. She was, however, obligated to maintain doctor-patient confidentiality, so long as he was adamantly against bringing his wife into the picture in any deeper way.\n\nDr. Hamilton began to explain the course of therapy she recommended, and also gave Steve several alternative therapies to consider. It was a very informative session all around. Steve left the session at the end of their hour together, hopeful that he could overcome his problem.\n\n* * *\n\nOne week later, it was Joshua Thompson's eighteenth birthday. His sister, Beth came to the hospital with Jennifer and Phil. They brought in a birthday cake \u2013 though they skipped any candles due to the presence of so many oxygen lines, on the floor \u2013 and all four nurses came in for this odd celebration. Two of the doctors who had been overseeing his care also attended, and one of them pointed out that \u2013 according to the record of the EEG machine to which he was hooked \u2013 his brain activity had become elevated when they'd all sung 'Happy Birthday' to him.\n\n\"Clearly, he can hear you. I'd say it's just a matter of time and enough of the right stimulation, and he'll be back with us.\"\n\nJeannie and Jennifer became ever closer as friends. They often joked \u2013 privately \u2013 about finding some young, well-hung stud and then kidnapping him, forcing him to satisfy their oral and anal cravings. Neither woman would ever follow through on such a hare-brained scheme; it was merely a diversion to enable them to joke about their unique shared problem and the cravings that were at the root of it. \n\nA few weeks after Joshua's birthday party, Jeannie started to feel her former roommate, Sarah, was drifting away from her. Something was clearly bothering Sarah, but she was downright skittish whenever Jeannie tried to talk to her about the situation. Another two weeks passed, and the same was suddenly true of Heather, as well. Since Sarah and Heather were the two nurses with whom she most often worked, the situation on the ward became increasingly uncomfortable for her. She felt as though her friends were all 'in' on some kind of joke or secret, and she was the one being left on the outside, all alone. It was not at all a good feeling.\n\nThere was another reason for her discomfort, though. It was Joshua himself.\n\nJeannie had been working late with Heather, one night. It was Jeannie's turn to clean the coma patients. At the time, there were three patients in the ward. Every night, after visiting hours, one of the nurses would give the patients their sponge baths. It was generally an unpleasant task, so they made sure to take turns doing it, to keep it fair. The patients were also kept shaved of body hair, so cleaning them was faster. Occasionally, this meant that Jeannie needed to shave patients when she bathed them.\n\nThis night, she did have to shave one of the patients. It was an older gentleman named Robert. She shaved him carefully and then cleaned him up. She changed his bed linens and moved on. Finally she came to Joshua. His eyes were moving beneath his eyelids, which wasn't unusual for him. She wondered \u2013 not for the first time \u2013 if coma patients dreamed and, if so, what Joshua was dreaming about in his coma. She hoped, for Jennifer's sake, that he would recover.\n\nJeannie had, as usual, drawn the privacy curtain around the young man's bed. She pulled off the bed linens covering him and tossed them out into the linen cart. She managed not to gasp out loud, shaking her head softly when she saw Joshua was erect and throbbing beneath his hospital gown. His penis was easily the largest she had ever seen. \n\nJudging cock sizes without a workable gauge was never an easy thing, but she knew that the distance from the tip of her thumb to the tip of her little finger, with her hand splayed at its widest stretch, was a trifle over seven and a half inches. Placing her thumb so that the tip touched the base of his cock where it melded with his groin, its length exceeded her splayed fingers by at least an inch \u2013 if not more. And its girth was every bit as thick as the cardboard roll from a tube of paper towels. Truly, it was a cock designed to pleasure a woman royally, and \n\nshe couldn't help the fact that the mere sight of that massive appendage, standing tall and 'at the ready,' made her mouth water, her pussy grow wet, and her sphincter twitch.\n\nJeannie rolled him onto his side, untying the hospital gown and sliding it in front of him. She efficiently cleaned his backside, and noticed his thighs and buttocks were looking noticeably more toned than the last time she had cleaned him. The physical therapy he'd been receiving, even in his coma, was obviously working. She turned him flat on his back, and washed his face and neck, then worked her way down his torso.\n\nShe started to get distracted, that evening, which was unusual. She had, like her fellow nurses, been very careful to pay as little attention to the massive cock on her young charge as possible. Somehow, it looked somehow bigger, that night. He seemed harder; his cock was just throbbing before she even reached it. It also had a very large drop of clear liquid that had oozed out of the slit at its tip. She couldn't take her eyes off of that. Her mouth was watering, and the scent of his pre-cum was a tantalizing, tangy aroma in her nostrils.\n\nIt had been so long...\n\nThat gleaming drop of precious nectar and the throbbing, delicious cock head grew larger and larger until they filled her vision. She wasn't even truly aware that she'd been moving her head closer, or that she had opened her mouth after licking her lips, until that solitary drop of clear liquid caressed her tongue. Jeannie suppressed a shudder at the familiar taste. The aching emptiness in her mouth was finally being filled once again with a wonderfully thick cock.\n\nJeannie realized with a start that she had moaned out loud around the fat dick in her mouth. She pulled up off of it with a slurp and her eyes shot open. \"What have I done?\" she wondered to herself. Her hands were shaking as she hastily finished cleaning Joshua, dressed him in a fresh gown, and changed his bed linens.\n\nFor the rest of the night, she couldn't make eye contact with Heather without feeling herself blush. Somehow, Heather didn't even notice. As for Jeannie, she was so distracted that she completely missed it, two hours later, when Heather went into the coma ward to check on the patients and emerged a half hour later with a small trickle of white at the corner of her mouth...\n\nThe next morning, after she got off work, Jeannie drove her truck over to Jennifer's house for their normal morning coffee. By that time, she had managed to calm down about what had happened. It would never happen again, she was sure. Jennifer invited her in with a hug. The coffee and the conversation were as great as ever. They laughed and had a nice hour together before Jeannie headed home.\n\nSteve looked preoccupied that evening. Whatever was bothering him, he definitely didn't want to talk about it, and Jeannie didn't push him. Later, she wore a sexy nightie and sat in his lap, the two of them exchanging kisses which began softly and grew steadily more heated, while they watched a movie on television, together. After the movie, she undressed her sexy husband and then slithered back into his lap, facing him. Rising up, she slipped him inside her steaming tunnel and then proceeded to ride him hard, enjoying the feel of his hot mouth on her turgid, distended nipples, swollen with her arousal, as his thick cock filled her wet pussy. After a good, hard ride, he filled her with a massive load of hot cum, right there on the living room couch \u2013 and another load in their bedroom, afterward.\n\nHe also did one of her favorite things, that night. It began when he left the bed to turn off all the lights in their bedroom.\n\n\"Oh, Baby!\" Jeannie groaned in pleasure as he positioned her on hands and knees on their bed and slipped in behind her to fill her aching, empty pussy once more.\n\nIt was really good, for Jeannie.\n\nIt was good for Steve, too, but he was really struggling to keep it together. His desensitization therapy was really pushing him, three months into his weekly sessions. Doctor Hamilton had given him a file to load onto his smart phone, containing pictures of very clean women's asses, and he had looked at them several times each day, for week upon week.\n\nHe had looked at them, again, that afternoon, and had managed not to throw up, this time, but it had still been really rough. He contented himself with the knowledge that \u2013 though progress was slow \u2013 he was nonetheless moving forward with the therapy. Every photo that he managed to look at \u2013 and every time he glanced at a woman's buttocks as he passed her on the street \u2013 without feeling his gorge rise was a triumph, however small. If he continued at this rate, he was certain that he would eventually reach a point where he would be able to give his wife that which she craved.\n\nAfter making love to Jeannie for the third time, that night, he held her sexy body in his arms.\n\n\"This is why I'm doing this,\" he told himself as he felt the warmth of her naked skin against his own. \"She is why I'm doing it, and she's worth it!\"\n\nThe next time it was Jeannie's turn to bathe the patients at work, she was a complete professional about it. She was pleased with herself and relieved that this wasn't going to be a problem. She was smiling to herself at the nurse's station desk. Sarah was working with her that night and noticed her improved disposition.\n\n\"What's got you so happy tonight?\" Sarah asked her long time friend.\n\n\"Oh, I was thinking about Steve,\" Jeannie replied. \"I love him so much. He said the funniest thing yesterday...\"\n\nAt that point, Sarah had basically tuned her out. Sarah was trying to figure out how she would be able to get alone time with Joshua, so she could get another taste of that young man's magnificent dick. It was so much easier when she and Charlene were on at the same time. Each knew that the other was helping herself to a taste of the young man's thick, creamy seed \u2013 an act which they viewed as giving a whole new meaning to the idea of 'taking care of the patient' \u2013 and they would take turns covering for each other. But Charlene had some sort of activity to attend, with her parents and a younger sibling, that night, and Jeannie was filling the hole thus created in the schedule.\n\nThe next time Jeannie was tasked with the sponge baths, she knew she was in trouble before she even got to work. Steve had been painfully erect that morning. Jeannie had awakened with her head pillowed in its usual place \u2013 on her husband's chest \u2013 to the sight of that glorious, delicious looking pillar of man meat just two feet from her watering mouth. She couldn't help herself. She slid down the bed and licked the tip of his cock, her whole body shivering in delight at the taste of the single drop of pre-cum that had seeped from its head. It was so damned good! Her lips eagerly took in the head, reveling in the taste and texture.",
        "She moaned around the mouthful. Steve stirred at the feel of her mouth on him, and she hastily slid up and mounted him. By the time her husband was awake enough to realize what was happening, his cock was buried in his wife's insistent, soaked pussy as she rode him for all she was worth. \n\nIt was very good, of course, for both of them.\n\nOn the drive to work, that morning, however, Jeannie was thirsting for cock. The brief moment she'd had, with Steve's cock in her mouth, had only been a tease, to her. It had only served to rekindle an appetite she'd been denying for a very long time. Now, she wanted a nice mouthful of eager, bucking dick meat, and she knew it was her turn to wash a perfect specimen. In complete privacy. With someone who would never complain, or even know what had happened. \n\nBy the time she parked her truck at work, the gusset of her panties was already moist from the fetid heat of her clamoring arousal.\n\nTo her credit, Jeannie managed to control her hunger. She carefully avoided looking at Joshua, at all, while she went about cleaning and shaving the other patients. Eventually, she had completed her tasks with them, and it was now Joshua's turn to receive her attention. She controlled her breathing and didn't look at his penis when she undressed Joshua and washed his back, his face, his chest. She might have made it, might not have given in to her desire. Unfortunately, Joshua's crotch clearly needed to be shaved again.\n\nJeannie sighed as she maneuvered his body into position with his legs spread near the foot of the bed. She lathered him up and began to stroke the razor around the base of that glorious cock. It might have been her imagination, but his balls looked slightly swollen, so packed full of tasty cum. This time, she was completely aware of what she was doing when she guided that cock into her mouth. It was so much better than she had even imagined.\n\nJeannie was in full control as she slowly slid the cock into the back of her mouth. She savored every second as she finally swallowed him into her throat. She did feel stretched, more so than ever before, but that just made it more spectacular for her. She didn't even have to touch herself; she was trembling in orgasm from the sheer stimulation of having her long-denied oral fixation sated, at last. Joshua was providing her with the dream dick her mouth and throat had been craving.\n\nIt took only a few minutes before he erupted in her throat. Jeannie's eyes rolled back in her head at the familiar sensation. She swallowed the first urgent shots right down, before pulling back and savoring the rest of his surprisingly sweet load on her tongue. She had expected it to be bitter, because of the cocktail of antibiotics in his IV. It was not. Jeannie was then delighted to see that this virile young cock barely softened after she had drained that sweet treat. She was able to give her throat five good minutes of fucking before she let him go and finished cleaning and dressing him.\n\nSomehow, over the next three months, Jeannie never got caught sucking Joshua's hard cock at every opportunity. She was so preoccupied with getting her fix, and not getting caught in the act, that she somehow missed completely the fact that all of her fellow nurses were doing the same thing \u2013 sucking him off at each and every opportunity. It was deeply satisfying to have her oral needs fulfilled. \n\nAt the same time, she was guilt-ridden and terrified of getting caught. Worse, she now had a problem that she definitely could not share with her best friend, Jennifer. She was also becoming obsessed with figuring out how to get that satisfying dick buried in her hungry asshole.\n\nEvery time Jennifer would bring up the running joke of finding a big dick to satisfy their asses, Jeannie couldn't help but picture Joshua's big dick in that role. Her new all-consuming fantasy was to slide her unconscious patient to the end of his bed, bend over and back her ass right onto him. At home, she had taken to fucking her ass with a large dildo in her husband's absence. She'd begun that indulgence, picturing her husband at the other end of the toy that pleasured and plundered her rectum, but \u2013 lately \u2013 her fantasies had shifted and, despite the 'trouble' that it should have signaled, for her marriage, she had begun imagining it was Joshua's cock, taking her, filling her hungry ass and transporting her to paradise.\n\nShe even got to the point that she always carried a small bottle of lube in her purse. She'd found a generic bottle on the Internet, ordered it, and transferred part of the contents of a bottle of Astroglide to it, so that it wouldn't arouse suspicion in her purse. She was prepared, though, for if and when the opportunity ever presented itself to her, at work. For a long stretch of months, however, that opportunity simply never came.\n\nWhile Jeannie was getting into this quagmire at work, Steve was finally making some real progress in his desensitization therapy. He had been relieved that Jeannie had stopped bringing up requests for oral or anal sex, and their sex life was still fantastic. Now, however, he kept catching himself staring at her ass \u2013 and smiling.\n\nPart of his therapy\u2014probably the most painful part at first\u2014had been increasing exposure to pictures of women's asses. These started off as clothed women, but eventually there were naked bottoms. Doctor Hamilton had given him a little SD data card, with a file of images on it, and had him load it onto both his computer at home, and his smart phone. \n\n\"I want you to look at the entire file \u2013 every image \u2013 at least six times each and every day,\" she had told him, regarding the strange 'prescription.'\n\n\"How long do I need to continue the regimen?\" he had asked her, then.\n\n\"Until the images are no longer repulsive, but enticing \u2013 perhaps even arousing,\" she'd replied.\n\nThey were always meticulously clean bottoms, but still...it was a major milestone when he could get through all thirty pictures without throwing up. \n\nOnce he reached the point of not even being nauseous, Dr. Hamilton had him continue his therapy on his own, with only monthly hour-long follow-up sessions in her office. In between those sessions, he'd stop into the office every Tuesday, and she would swap out the SD card in his possession for another, filled with a new set of images culled from various places on the Internet.\n\nThe images were no longer innocuous photos of simple naked buttocks. Over time, they'd become more and more explicit \u2013 close-ups of pink sphincters, and then video clips of naked women, bending over and spreading their cheeks while they gazed at the camera with 'come hither' looks on their eager faces. Occasionally, she'd slip in a 'surprise' image of a sphincter that gaped open, an inch or so, with a thick gobbet of creamy white liquid oozing out of it. Over time, he managed to get through each set of pictures with no ill effects whatsoever. And then came the day when he came upon her latest 'surprise' photo \u2013 an image of an open sphincter with an erect cock poised next to it, covered in slick juices and with a rivulet of cum seeping from the open portal \u2013 and he was surprised, even more, to find himself thickening slightly in response to gazing at the picture!\n\nIt was time, he knew, to move on to the next phase of therapy \u2013 one that he'd come up with, on his own. \n\nLate one night, with Jeannie off at work on the night shift at the coma ward, he had forced himself to watch an anal sex video that he found, online. He had to admit, it wasn't horrible at all. He wasn't aroused by it, but he wasn't repulsed, either, and that was \u2013 he thought \u2013 a very good thing.\n\nHe'd gone back to that particular website, again and again, searching out other such video clips, clips of women baring their lush asses so that their men could insert their massive cocks and stroke away until they reached the point where they achieved a mutual orgasm.\n\nNow, he was finding his wife's ass sexy, and he didn't know what to do about it. Should he continue to look at the videos until \u2013 like his wife \u2013 he ached for such contact, or should he go ahead and try it at his earliest chance? Before his preoccupation could become an issue, though, his work intervened. His employer got a major construction contract, and he was suddenly as busy with his work as his wife was, with hers. For six fateful weeks, they barely saw each other.\n\nIt was a week into this period that Jeannie finally made her move. She went into work early one morning, and grabbed a handful of condoms from the hospital lobby. There were always baskets full of the things, given away to promote safe sex. She tucked them into her purse and made her way to the coma ward. When she got there, she thought she heard the shower running in the nurses' bathroom, and she saw Charlene walking away with a cart full of dirty linens.\n\nShe absent-mindedly picked up a clipboard and made her way into the main coma ward. It would take Charlene a little over five minutes to drop off the laundry. That wasn't enough time, was it?\n\nKnowing how little time she had, she strode into the room holding their patients...and gasped when she saw Joshua's empty bed. Her mind immediately jumped to that worst of places. Joshua was dead. She tried not to cry as she sat on the empty bed. What about poor Jennifer? Oh, this was just terrible! Her aching, eager little bottom was forgotten in that moment. She wiped her face with her hand and walked out of the room on shaky legs.\n\nCharlene was soon approaching with the now-empty laundry cart.\n\nJeannie couldn't restrain herself any longer. \"Joshua's gone!\" she blurted out, \"Did he...\" she choked a bit.\n\n\"No, no!\" Charlene reassured her, \"He woke up! He's in the recovery room behind you.\" \n\nJeannie slowly turned around. Joshua Thompson was indeed awake. He was looking right at her. She didn't know how to face him. He was so handsome, now that he was alert. The small vibrating butt-plug she had left in her ass reminded her that she would have slid his huge dick into her that very night if he hadn't awakened. Her mind felt lethargic as she tried to process this seismic shift in her life, and in her plans. \n\nJeannie followed Charlene into Joshua's private room, to stand by his bed while Charlene introduced him to the one remaining member of his 'care team' that he hadn't met, yet \u2013 at least, in a conscious condition.\n\nHe kept looking at her, she noticed. Was it because he considered her attractive, or did he know, somehow, what she had done with him? Had he recognized her soft voice as the one that had told him, time and again over the last couple months, \"Now you just lay back and relax, Joshua, while Nurse Jeannie relieves all that pressure in those swollen balls of yours. I promise you, I'll make you feel so very, very good...\"\n\nShe blushed a little at the thought. She was a little afraid to be alone with him. Charlene picked up his medical chart and began reading off the recent events. He had come out of his coma during the previous evening. Both Jennifer and Phil Thompson had rushed in to see him and talk with him \u2013 for the first time in nearly a year and a half \u2013 later that night. In fact, the nurses on duty had 'ignored' the usual visiting-hours protocols so that the two parents could spend some time with their newly awakened son, given that he'd regained consciousness so late into the shift.\n\nA lot of these details got past Jeannie, in her befuddled state, but when Charlene referred to him as \"Josh\" that got her attention. As long as she could remember, everyone had called him Joshua. \n\nShe found that he was looking at her again, and looked down. This was going to be tough.\n\nSarah joined them not long after that, and the three of them gave him a sponge bath together and changed his bed linens. He was still terribly weak, of course. He was also terribly embarrassed and kept trying to cover his crotch. Jeannie got him a towel to cover his eyes so that he didn't have to watch the process. \n\n\"Honey,\" Charlene leaned in and told him softly, \"Don't feel embarrassed. We've been bathing you, this way, for months, now. We're all used to seeing you, like this.\"\n\n\"But I'm not used to it, yet,\" Joshua had protested weakly.\n\n\"Sweetie, I know you've missed out on, like, the last year-and-a-half of your life \u2013 and locker room talk after gym class, and other things,\" Sarah told him, allowing a soft giggle to creep into her voice as she hoped to allay his nervousness and embarrassment, \"but that little appendage you used to have, down there, isn't any too little, these days. And, one day \u2013 before too very long, if we can get you recuperated and on your feet, again \u2013 it's going to bring you and some very lucky girl some immense pleasure, let me tell you! Don't you ever be embarrassed about having a woman catch a good look at that thing! She may not say a thing, to you, but I guarantee that she'll be getting wet between her thighs and the voice inside her head will be saying, 'Be still, my heart!'\"\n\nThey finished up their bathing tasks and walked away \u2013 to let Joshua relax and recover from having had three very attractive women caressing his entire body with cleanser-laden sponges \u2013 Sarah turned to Jeannie, who would have the ward on the overnight shift, that night.\n\n\"Josh will definitely need to be shaved, tonight,\" she commented. \"I'd do it now, but his parents will be in, as soon as visiting hours start.\"\n\nJennifer was aglow when she came in to visit her son. She seemed to practically float into the ward. Her husband, Phil, was beaming and just couldn't get the smile off his face the entire time he was there. Jeannie realized with a start that Joshua\u2014Josh, she forced herself to remember\u2014was the spitting image of his dad. She wondered idly if Jennifer's husband was equally well-endowed. Jennifer was so lucky, she thought. That thought at least put a smile on her face. Jennifer deserved this.\n\nAfter visiting hours had ended, Sarah went into Josh's room and pulled the privacy curtain. She was going to shave him. Jeannie could hear that they were talking quietly, but couldn't make out anything that was said. Jeannie was struggling to get her share of the work done, distracted as she was by her thoughts. The vibrator still in her lubricated ass was also a constant distraction, but she couldn't bring herself to remove it.\n\nSarah finally emerged from Josh's room and pulled the privacy curtain back open. She flashed Jeannie a smile as she approached. \"Well; that was fun. Time to get back to the comatose patients.\" She went in and pulled the curtain around the first patient as she got started.\n\nJeannie was seated at the nurse's station when she saw Josh begin masturbating in his bed. He had a sheet pulled over him, but what his hand was doing, under it, was obvious. For once, he wasn't looking at her. Jeannie couldn't help but slide her hand into her panties as she watched him slowly stroke his hard cock under that sheet. She heard him groan in frustration, then. She was shocked when the buzzer sounded at her desk.\n\n\"Oh my God!\" she thought. \"He does know! He's buzzing me over to give him another blow job!\"\n\nShe pulled the privacy curtain closed behind her, unbelievably relieved that he knew, and that he apparently didn't have any objection. Of course, what teenage boy would object to having a bevy of hot, lovely nurses eager to assist him, that way?\n\n\"Would you like a little help with that, Josh?\" she asked him in a soft voice as she gave him a winsome glance.\n\nHis nod was barely perceptible, but the smile that came to his lips at her tawdry question could not be mistaken for anything but an affirmative answer.\n\nShe pulled the sheet down, and his rampant cock stood straight up, like a missile on a launching pad, ready to blast off. Oh, there was no doubt that he was ready to blast, and she was just the woman to assist him.\n\n\"Oh, my, Joshua; what a big cock you have!\" she told him in a heated murmur, her lips close to his ear so that he could easily catch the 'heat' underlying her words.\n\nShe leaned in and licked the drop of pre-cum that had oozed from the slit in the end of his massive shaft. The smile on his face was amazing, as he watched her roll her eyes at the taste of his fluid.\n\n\"In case you missed it, Baby, that was your cue to say, 'All the better to fuck your throat with, my dear,'\" she gigged softly as she adjusted her position and took the wondrous appendage straight down her throat. It was so different, so terribly arousing, to have him actually watch her do it! And to know that she was giving him some of the most intense pleasures he'd likely ever received \u2013 given his age and the way he'd spent the last seventeen months \u2013 was thrilling beyond belief, to her. It was almost as great a thrill as the one she, herself, was receiving as she fucked her mouth with his cock!\n\nShe pulled the drawstring of her scrub pants loose and rubbed herself to a nice orgasm while she deep-throated his magnificent cock. She saw his open eyes pop wider as he gazed at her ass.\n\n\"You like my ass, Josh?\" she pulled him from her mouth and throat just long enough to ask the question. \"I'll just bet that you're imagining slipping this big, thick cock of yours into my ass and fucking me six ways from Sunday, with it, aren't you? Would it surprise you to learn that your hot little Nurse Jeannie is thinking about exactly the same thing? I wish you could do it, right now, but I'm afraid we don't have the time for it, tonight. Instead, we're both going to have to be content with me \u2013 sucking your luscious cock down my hot, eager throat \u2013 and you, giving me the tasty load of cum I'm just dying to swallow...\"\n\nShe winked at him and blew him a little kiss, then settled her mouth around the head of his cock again and inhaled him straight to the root. In no time at all, his cock was pulsing streams of tasty cum down her throat. Jeannie's eyes rolled up into her head as she came. She had feared she would lose out on Joshua's big cock, now that he was awake. It was such a blessed relief \u2013 \n\n\u2013 and then the curtain was yanked open behind her and her world felt like it was crashing down. Jeannie turned her cock-filled face and saw Sarah staring at her. Sarah was specifically staring at the toy \u2013 the vibrating butt plug \u2013 that was barely protruding from Jeannie's clutching sphincter. Jeannie squawked as she released the cock and tried to speak, but nothing coming out of her mouth made sense. She knew her career was over. Her reputation was ruined. Her marriage might be over, as well.\n\nThen, Sarah was hugging her, reassuring her. \"It's okay, Jeannie. It's okay. I completely understand; I really do! Nobody's going to tell on you. You're fine.\"\n\nWhen Jeannie had stopped shaking, Sarah held her at arm's length and looked in her eyes. Her reassuring smile was contagious. \"I have to know, though,\" Sarah said, \"How long has this been going on?\"\n\nJeannie looked down and mumbled, \"Three months. It's been eating me alive.\"\n\n\"Actually, I think you're the one who's been eating him alive,\" Sarah giggled, then. \"But, just so you know, I beat you by three weeks.\"\n\nJeannie's astonished expression was absolutely priceless. \n\nEverything fell into place that night. Sarah called Heather and Charlene, and they rushed to the hospital. The four women shared the wonderful coffee that Jennifer had provided, while they talked about the wonderful cock that her son had unknowingly been providing \u2013 and was now apparently willing to provide, of his own free will. They had all been so worried about getting caught. Now, of course, it was their secret. No one else could know, ever. But now they could all share openly with each other.\n\nJeannie felt as though a crushing burden had been lifted from her. She was so happy and relieved. For the next month, it only got better.",
        "Unlike Jeannie's husband, Josh was eager to learn how to please her tight asshole. At first, she fulfilled her fantasy. At her suggestion, Josh acted as though he was still unconscious while she rolled a condom onto his massive erection, lubed it, and backed her hungry little hole onto it. She was unaware \u2013 until he told her, near the very end of her 'ride' \u2013 that the condom had broken. When she heard him whisper that his naked cock was inside her, she exploded in a long-anticipated orgasm.\n\nAfter she recovered, she kissed her young lover passionately, finding that the condom had failed spectacularly. The tattered remains of the latex around the base of his lubricated shaft somehow had her more turned on than ever. Josh managed to surprise both of them with his talent for dirty talk.\n\n\"Next time I'm balls-deep in that tight little ass of yours, I would loveto fill you with my cum.\" She growled in her throat at the thought. \n\n\"Just make sure you tell me before we start fucking, Baby,\" Jeannie giggled, sealing their bargain with a passionate, tongue-filled kiss. \"I want to enjoy the moment as much as you'll be enjoying it!\"\n\nShe had a moment's brief smile as she recalled her time spent in transforming Craig Simons from an awkward virgin into a confident, self-assured lover. This was going to be a lot like that, she thought to herself. Only, with four hot, horny nurses virtually at his beck and call, young Joshua was going to be a very skilled lover, indeed, by the time he was ready to be discharged. He had awakened from his coma, it was true, but there was still the matter of their nursing him back to health and getting him to the point where he could \u2013 at least in theory (nobody walks out of a hospital; a wheelchair ride is mandatory) walk out of the hospital under his own steam. That was likely to take just a little while. \n\nJeannie's hands were shaking as she quickly got rid of the broken condom and rolled a fresh one on. She practically leapt onto the waiting, lubricated cock. This time, she felt it when the condom gave way. She felt his pulsing erection inside her and fought off his attempts to get her off of him. Another mind-bending climax ripped through her as he filled her ass with hot cum.\n\nAfterward they showered together. She had to help him walk to the shower, but was surprised that he could stand without assistance once they were there. It was a marvelous, intimate experience showering with him. Better still, he was as hard as ever and took her ass, yet again, standing in the shower.\n\nAs Josh got stronger, he also got better at satisfying Jeannie. He was getting really good at satisfying all four of the nurses. Increasingly, they were sharing him at the same time, and they all got at least a little something out of the experience. \n\nHeather and Sarah \u2013 who both turned out to have a little 'bi' streak, buried in them \u2013 loved eating Jeannie's pussy while her ass was being filled with Josh's hard dick as she rode him in reverse-cowgirl fashion. For Jeannie's part, she couldn't get enough of all the oral attention she was receiving, after nearly two years of not feeling a skilled tongue gliding across the slick folds of her heated pussy. \n\nJosh was quite the student of cunnilingus, telling each member of his little 'harem' that the taste of the juices that leaked from their heated pussies was rapidly becoming his favorite flavor. \n\n\"It's just about every 'straight' man's favorite flavor, Honey,\" Charlene giggled, after he'd told her that during a late-night 'session' with her that had begun with a mutually satisfying 'sixty-nine.' \"Hell, if someone could ever figure out how to make pussy-flavored candy, she'd make a fortune!\"\n\nSarah became an eager student of taking cock in her ass as well. She'd watched, time and again, as one of the other three nurses eagerly took Josh's thick shaft deep into their nether passages, wondering what the major attraction was, with it. She wondered right up until one night, when she and Jeannie had the ward. As Sarah rode Josh's cock to a satisfying vaginal orgasm, Jeannie had pulled her bottle of lube from her pocket and dribbled a little down the crevice of Sarah's ass, across the anus, and then began to gently probe it with one fingertip. As Sarah got used to that intrusion \u2013 and it became pleasurable for her \u2013 Jeannie upped her game to two fingers, and then three. \n\nBefore the night was over, Jeannie got the honor of holding Josh's lubricated cock steady as Sarah sank her asshole onto it for the very first time.\n\nOf course, now that he was awake and alert, one of the hospital's staff of physical therapists came for him on a daily basis, taking him down to the therapy room and putting him through a grueling session designed to work on his recovery of the strength and stamina he'd had, before his hospital stay began. What the daytime crew didn't know was that \u2013 every single night \u2013 Josh was receiving another sort of 'physical therapy' that was no less energetic and strenuous than the daytime regimen. It was, however, a hell of a lot more pleasurable, for patient and therapist alike.\n\nThus, Josh was soon able to walk around on his own. Technically, he was still not supposed to be out of bed for any reason without a wheelchair and a nurse to push him, but they tended to let him get away with it because they were so pleased with his recovery to that point. They got fringe benefits from their tolerance, as well. On the days when his bed-linen was changed, it wasn't unusual for him to walk up behind the nurse \u2013 be it Jeannie or one of the other three \u2013 pull her scrub-pants down, and bend her over the bed, slipping himself easily into a wet pussy or an ass that had been well-lubricated in advance, just in case Josh was in 'one of those moods' that night. \n\nJeannie seemed to occupy a special place in his affections, though. He would often walk up behind Jeannie, as soon as visiting hours were over, and tease her throbbing butt. He would whisper naughtily in her ear when no one was looking. He was filling her dreams, her mouth, and her ass, exactly the way she had wanted for so very long.\n\n***\n\nIt was Charlene, who'd been the instigator, of course. She'd supplanted her 'walking around money' during her own nursing school days by doing a bit of wedding photography and videography, on the side, and she still had all of the equipment she'd accumulated in the process. She was the one who'd conceived of the idea.\n\nWith Josh steadily on the mend, all four of the nurses realized that \u2013 altogether too soon to suit any of them, really \u2013 there would come the day when someone in hospital management would evaluate Josh as having recovered sufficiently to be discharged, and sent home for his continuing convalescence. Wanting to give him \"...a little something to remember his 'harem,' by...' she had come up with the notion of 'the video.'\n\nIt hadn't taken much effort for her to smuggle the tiny, hand-held video camera and the collapsible tripod into the hospital and stash them in her locker. Nor was she adverse to slipping into the hospital on her nights off, to handle the camera work and play 'director' to record some cutely-scripted scenes. The four had talked it over and come up with some good ideas for a few little 'vignettes' apiece.\n\n\"I think he'd get a kick out of watching a scene that's a lot like the first time I did him, once he'd woke up,\" Jeannie told the other three, one early afternoon when they all met at the house that three of the girls shared.\n\n\"I played my 'dialog' a bit from 'Little Red Riding Hood.' 'Oh, Joshua \u2013 what a big cock you have...' 'All the better to fuck your throat with, my dear...'\n\nOf course, they needed to have a plausible reason to give Josh, as to why they were doing it, so that he'd go along with their idea.\n\n\"Did you ever wonder what you looked like, when you're fucking one of us?\" Jeannie countered, when he asked why Charlene was setting up the camera across the room from his hospital bed, the first night. \"Well, so do we. What does the expression on my face look like, when you're pounding that gorgeous cock into my hot little pussy, and I'm like four seconds away from an earth-shattering orgasm? What does Heather look like, slurping that creamy baby-batter out of your dick? We all have inquiring minds, and inquiring minds want to know! Don't worry, though. We'll let you see some of the footage, before it's all said and done, and we all promise you that nobody but us four will ever see anything we tape, here.\"\n\nThough Charlene had been the primary instigator behind the little project, it had been Sarah who had come up with what they thought was the absolute perfect way to 'frame' the entire series of 'episodes.'\n\n\"We're all nurses,\" she reminded them as she broached the idea, \"and nurses are supposed to be angels of mercy. So, why not call this little production 'Josh's Angels'?\"\n\nThe notion was an instant hit with the other three, and so development of the project began in earnest. The main 'filming' took place over a series of several night shifts in the hospital \u2013 so as to have Josh capable of maximum performance with each of his four sexy co-stars \u2013 and then the main portion of the work was over. They 'borrowed' the office of the hospital administrator for about fifteen minutes, one night, to do part of the scene for the video's opening sequence. A few days later, the four nurses put on their sexiest bikinis and drove the 120 miles to the nearest beach, where other bits and pieces were taped, for the 'opening credits' sequence of what turned out to be probably an hour-long video. Then, Charlene sat down at her desktop computer, with its suite of video-editing software, and pushed things through the final 'post-production' phase. When the four sat down to watch the final edited version on the big-screen television at the apartment, they all agreed that it was worthy of rivaling any episode of 'Charlie's Angels' (and they'd shamelessly borrowed the theme music to the old 1970's television series!) \u2013 only their little production was utterly X-rated!\n\n***\n\nDeep down, they'd all known that their time with this wonderfully sexy young man was all too good to last. Josh was recovering so quickly that he was going to be released early from the hospital. Jennifer was overjoyed \u2013 as she should be. The nurses were all devastated, but none more than poor Jeannie. She was at home when Heather gave her the news on her phone. The next night, after Heather had taken her turn having sex with Josh, Jeannie couldn't get his fat erection into her lubed and ready asshole fast enough. She rode him hard, grunting loudly until she came.\n\nAll this time, Jeannie had been careful to keep Josh's cock out of her pussy. He understood, and certainly never pushed. That was reserved for her husband. Steve had been away so much, lately, that her pussy felt like it was starting to grow jealous of all the attention her mouth and ass had been getting. Josh was so strong now, that once she had come he was able to easily able to lift her up and turn her onto her knees in front of him. He leaned down and bit her neck as his cock started to penetrate her tight little hole.\n\nOnly, it was the wrong hole. She managed to clamp down her vaginal muscles with just the head of his cock inside her. \"Josh,\" she hissed, \"that's not my ass! You can't fuck my pussy.\"\n\n\"Oh! Sorry!\" He said. He meant it, too. He just couldn't bring himself to pull out. He froze like that, not moving a muscle\u2014unless you counted the involuntary throbbing of his cock.\n\n\"Ohh...\" Jeannie moaned. They both felt her tight little pussy spreading around his thick, throbbing cock head. \n\n\"Josh, you can't take my pussy,\" she whispered, even as her hips \u2013 as if they had a will of their own \u2013 were pressing back and forcing more of him into her. She whimpered, \"That's only for my...oh, God...my...\" Half of his cock was now inside her.\n\nJosh knew that if he just stayed still, she would soon have him fully inside her. He also knew that he would be shooting uncontrollably into her unprotected pussy. He cared for her too much to let that happen. He grabbed her ass cheeks firmly, and she groaned in surrender. Then with every ounce of his self control, he pulled out of that hungry, sucking little hole.\n\n\"Thank you,\" she moaned out as he sank back into her ass.\n\nThere was a dark part of her, that had wanted him to take her pussy. Even the thought of ruining her marriage to carry Josh's baby...it was terribly wrong how turned on she got at the thought.\n\nAnd, of course, she had to explain it all, to Josh, lest he misunderstand.\n\n\"I know it sounds silly,\" she told him, \"but my pussy belongs to my husband. I let you enjoy my mouth and my ass, because he's not interested in fucking either of those, and I love both.\"\n\n\"Is he fucking nuts?\" Josh asked her, then. \"Your ass is out of this world! And, don't get me started on the amazing things that mouth and throat of yours can do! Neither Charlene, nor Heather, nor Sarah, can manage anything even close!\"\n\n\"I suppose it's poetic justice \u2013 or karma, or whatever \u2013 coming home to roost,\" Jeannie sighed plaintively. Then, seeing Josh's mystified expression, she continued.\n\n\"Back in nursing school, I discovered sex \u2013 and what my mouth seemed to be able to do, all on its own, with no practice like most women have to go through \u2013 and I kind of went hog-wild. I was a party-girl, and I didn't really give a damn how many people watched while I sucked or fucked some guy \u2013 or group of guys \u2013 into oblivion. I enjoyed vaginal sex, but I really got off, feeling a guy fuck my ass or throat. I guess this is just a fitting punishment, for all those indiscretions back then \u2013 to fall in love with a guy who isn't the slightest bit interested in anything except my pussy.\n\n\"So, maybe it's wrong, but I've let you have my mouth and ass, since you seem to enjoy them so very much, Honey. I guess I rationalize things by saying that my pussy belongs only to my husband. Only he gets to put his cock in that hole. If he doesn't want to shove it into either of my other willing holes, I'm free to let you do it to your little heart's content. It's probably wrong, and I'll have to face the music someday, but \u2013 for now...\"\n\nShe let the rest hang.\n\nJeannie was assigned to work the last two nights Josh was there. All four nurses took turns with him, after visiting hours, with Sarah and Charlene both coming in on their nights off, to steal an hour of time with him. Jeannie broke down, crying, the last night, and Sarah drove her home. She lay in her bed and cried for hours. The other nurses could have Josh over to visit. They could still have him.\n\n\"And I can't,\" she wailed miserably.\n\nA part of Jeannie hated her husband. She had barely seen him, over the course of the last month, and then only briefly on weekends \u2013 most of which he spent in the local office, anyway \u2013 before he went back out of town to the job site. They hadn't even been married a year, for pity's sake! Fortunately, the rest of Jeannie was rational enough not to hate Steve. He was a really good guy, and he loved her like crazy. He was also hot as hell. \n\nAs for Josh, the boy was barely eighteen and, to borrow a phrase, his destiny lay along a different path from hers \u2013 with a girl whose name he probably didn't yet know, whose face he'd likely not yet seen. He couldn't be there, for her, for the rest of her life. \n\nShe was desperate enough to continue seeing him, though, that she came up with a crazy plan. She called on Jennifer in her office, the next day. This was at the real estate brokerage, where \u2013 as the owner \u2013 Jennifer had her own private office. She closed the door behind Jeannie and they sat to talk.\n\n\"I want to buy a house in your neighborhood,\" Jeannie blurted out.\n\nJennifer was not only a great friend, but she was also far smarter than Jeannie had given her credit. She knew that something had been going on, at the hospital. She'd seen that 'tent' under her son's hospital gown and bed-sheet often enough, during her visits, to have grown curious. So she'd lifted the gown, one afternoon when her husband was not there, and found herself drooling over the formidable pleasure-probe that Mother Nature \u2013 or genetics, or whatever \u2013 had seen fit to bestow upon him. She'd found herself entertaining thoughts of how \u2013 if they were at home, instead of in that hospital, where anyone could simply walk in on them \u2013 she, herself, would be quite tempted to climb onto it and go for a wonderful ride. And she was his mother, for crying out loud! It was impossible for her to think that at least three of the nurses \u2013 the ones who were footloose and fancy free \u2013 could possibly see that monster day after day as they sponge-bathed every inch of his body, and not be tempted in a similar fashion. And she wouldn't have put it past the married nurse, in the group, either!\n\nSo, Jennifer had a very good idea why Jeannie would want to find a house in her neighborhood, and the sort of sordid story the poor woman was about to unfold, and she could empathize completely with her. She was gracious enough to let Jeannie tell it, though. \n\nJeannie had expected her to be mad, but she was entirely sympathetic and supportive. It felt like Jennifer was getting turned on as the details just poured out of Jeannie's mouth. When she had finally gotten everything out, Jeannie apologized.\n\n\"I am so sorry, Jennifer. You're my absolute best friend. I should have told you I was having an affair with your son...but I just couldn't stand the thought of losing him. Now, though, I have lost him. I don't know what else to do. If I can convince Steve to move, so we live closer to you, at least I can sneak over.\"\n\nJennifer had grown so turned on, as Jeannie had related the entire story, that her panties were absolutely drenched. She regarded the desperate look in Jeannie's eyes. When she finally spoke, she was surprised at how calm her voice sounded.\n\n\"Jeannie, I completely understand. But, please, don't do anything as foolish as moving.\" She handed Jeannie a tissue so she could dry her eyes, and gave her a smile before continuing, \"You've become my best friend, after all. Nobody is going to expect us to stop having our morning coffee and girl-talk sessions, just because my son is no longer in your care. I look forward to having you over, on your next day off. We'll have a nice cup of coffee, and some great conversation.\"\n\nHer voice had some heat in it when she whispered, \"Of course, I expect you'll want to have a nice, long 'visit' with my son, and he, with you. Maybe the two of you will even let me watch.\"\n\nJennifer leaned back in her office chair, realizing the cushion itself was now soaked with her juices. She smiled at Jeannie and, in a more pleasant, conversational tone said, \"Now, doesn't that sound like a much better plan?\"\n\nJeannie's legs shook at the thought. The phrase, 'morning coffee' had just taken on a whole new meaning!\n\n\"Watch, hell!\" she snorted, giggling. \"I'll put a bug in his ear to ask you to join us, on the bed. After all, every young man's first 'crush' \u2013 and his only real unrequited romantic love \u2013 is his own mother. How could any son resist that sort of offer?\"\n\n***\n\nThe day had come altogether too soon to suit any of the four nurses, but it was time to pack Josh up and send him on his way. All four consoled themselves with the fact that their 'time' with Josh was no longer a secret, at least as far as Jennifer was concerned. They kept Josh in the dark, about that little fact, for the first time they dropped by the house to surprise him.\n\nThey held a little impromptu 'ceremony' to discharge him from the ward. Heather brought in a plate of home-baked cupcakes with just enough to go around, and the four presented him with a gift-wrapped box. Inside was a print \u2013 on proper photo paper, done at a professional processing lab \u2013 of a screen-grab from the video they'd made. The shot depicted the four nurses on a beach, in skimpy bikinis, all making 'kissy-faces' and waving at the camera. Above each girl's head was printed her first name, and above that was the 'Joshua's Angels' caption.",
        "\"We figure this is at least a somewhat decent payback for the humiliation we put him through,\" Heather explained to Josh's father. \"For the first five weeks after he regained consciousness, he wasn't strong enough to really be out of bed \u2013 so he had to put up one of us four undressing him and giving every square inch of his body a sponge bath. Even after he was technically strong enough to stand in the shower and wash himself, one of us had to put on a bathing suit and be there, to watch him, lest he slip and fall. It's only fair that he gets to see a little more of our skin, too.\"\n\nThen Josh stood up and, one by one, the four nurses came into his arms and gave him what they termed 'a proper goodbye kiss.' In reality, what they gave him was what the British would call 'a proper snog.'\n\nPhil Thompson stood by, trying to keep from chortling about what his son must have been thinking, as each of the nurses clamped a major lip-lock on him and did their level best to molest his tonsils with their tongues. After all, Josh was eighteen \u2013 and, in the nearly year-and-a-half he'd been in the hospital, the boy had missed out on one hell of a lot of dates and opportunities for kisses. And these 'girls' \u2013 women, really \u2013 were all as pretty as they came! Truth be known, he was just a tad jealous.\n\nThe nurses caught his facial expression, though, and realized at least some of what he must have been thinking. They wondered what his thoughts would have been, had he even the foggiest notion of the sort of 'attention' they'd been lavishing on his son, over the last few months...\n\n\"These are just to whet his appetite, for when he finally gets back to school and has to deal with all those pretty little coeds who'll be 'warm for his form,' Charlene laughed, before she moved into Josh's arms for the third of the four kisses.\n\nWhen it was Jeannie's turn, she kissed him soundly and then murmured into his ear.\n\n\"I'm really going to miss you, Honey,\" she told him. \"And, when you're home and finally alone in your room, you might want to take the cardboard off the back of that photo for a few seconds. We tucked a 256-gig SD card in there, with a copy of that little video you helped us record... I hope you enjoy it, because the four of us sure as hell enjoyed making it, with you \u2013 making the video, that is, though I guess you could say we all loved 'making it' with you, too...\"\n\nThey escorted him down to the main entrance to the hospital, standing and chatting with him and Jennifer while his father went and fetched the car. Then, they each gave him one last quick kiss, before he climbed into the car for the drive home.\n\n\"Don't you forget about us,\" they all giggled.\n\n\"How could I possibly forget the four of you lovely ladies?\" he asked, chuckling and blowing them a kiss.\n\nThey watched until the car was out of sight, down the street.\n\n***\n\nMeanwhile, Steve was starting to get really frustrated. He was good at his job, but all this time away from home had him worried about his marriage. He had barely even seen Jeannie, during the past six weeks, and she had seemed uncharacteristically distant when they had managed to spend time with each other. He had not had sex with her, at all, during the past three weeks, thanks to their heavy work schedules.\n\nFortunately, the work he was doing \u2013 for his employer's big construction contract \u2013 was drawing to an end. There were only four more days, remaining. His boss had promised him some 'comp time' to make up for the many weekends he'd worked. He planned on taking every last day off that he'd been offered, asking Jeannie to take a few of her accumulated vacation days, so that they'd have some precious time to reconnect.\n\nHe pictured her in his mind, her perfect naked body eager to take him. Increasingly, he was picturing her naked bottom in his mind. Now, the image of her on her knees, spreading her ass cheeks invitingly, had him hard in moments, as did the wild thought of dipping his tongue into the well of sweet-smelling (he assumed they would taste equally as heavenly as they smelled!) juices between her spread thighs. He had to shake his head to focus on work.\n\nJeannie was at work late at night when she received a phone call that would change her life once again. It was Jennifer, and she sounded out of breath and excited.\n\n\"Jeannie, I just had an inspiration,\" the call started. \"Have you and Steve ever tried any light bondage? Could you get away with tying him up \u2013 like to the headboard of your bed?\"\n\n\"Well, we've never done it, but it is something we talked about trying, sometime,\" Jeannie replied.\n\n\"Picture this,\" Jennifer said, \"You get your husband a little tipsy, and you tie him up. You tease him\u2014maybe blindfold him so you can use your mouth on him. Bring him close to orgasm again and again, backing off until he's desperate for release. Then you ride him for a bit with his cock in your pussy\u2014and then switch to your ass. Or, maybe, you go straight to taking him in your ass. Just tell him that \u2013 with all that extra work he's been doing, lately \u2013 it's been so long since your pussy's been stretched by him that it's liable to seem really tight, at first. \n\n\"Either way, once he gets a feel of how hot and tight that ass is, and how exquisitely it hugs every inch of his cock while you ride him, maybe he'll change his mind about the notion of anal sex. What do you think?\"\n\n\"I think you've got me wet just thinking about it,\" Jeannie murmured into the phone. She really didn't want to be overheard by Heather. \"I'll need to think that over, Jen, but that's one hellof an idea.\" Jeannie had, quite honestly, given up on Steve ever fulfilling her hunger for anal sex. However, she hadn't considered that she might be able to trick him into it. Once he had a taste of it, maybe he would be interested in more. Perhaps Jennifer had really had something, there.\n\nJeannie thought back to her first time. She had pretty much just been taken, and she had loved it. If someone had asked her to have anal sex before that, she probably would have declined. Maybe, just getting Steve's hard cock into her ass once would be all it took, and she could convert him into the ass-man she craved.\n\nOf course, she was completely unaware that Steve was already well on his way to being that very man already. He was almost aching for the opportunity. His desensitization therapy had perhaps gone too far. After work, in his hotel room, he was now watching anal sex videos almost exclusively \u2013 though he was watching oral sex clips, too, in order to get some idea of what Jeannie would like done to her, in that regard. He had reached the point that he found it extremely arousing, particularly if he could find one with a woman who resembled his sexy wife.\n\nJeannie was nervous as she waited for her husband to arrive home. She was dressed in a clinging pink negligee that looked like it was designed specifically for her body. It emphasized every curve of her lush form. It also provided ready access to her eager pussy and the asshole she'd spent ten minutes seeing to lubricating fully.\n\nBecause Jeannie was not confident in her ability to bring Steve to the brink of orgasm without taking him too far, she had added her own embellishment to Jennifer's plan. On the way home from work, that day, she'd stopped off at a store and purchased a small bottle of champagne \u2013 just enough for about three glasses. After pouring herself a glass, she had spiked the remainder of the champagne with a hundred milligrams of powdered Viagra \u2013 obtained in pill form through a 'connection' in the hospital's pharmacy, and then painstakingly ground into powdered form when she got home. Grinding it into powder ensured that the drug would dissolve readily, in the champagne, and then move rapidly into her husband's bloodstream. Half an hour after Steve drank that \u2013 as she planned to have him do \u2013 he would be virulently erect for hours.\n\nOn the phone, half an hour earlier, Steve had growled that she should be prepared for a long evening, as he was going to make up for lost time. Both of them were primed for a night they would never forget.\n\nAs he pulled into the driveway, Steve saw the lights were on in their bedroom. He was already aroused as he unlocked the front door and let himself in. Jeannie kissed him passionately at the door, handing him a glass of champagne and taking his hand to guide him to the bedroom. She looked so damned sexy in that negligee. Steve's eyes took in her firm breasts, her hard nipples, her exposed, glistening pussy lips. He practically drooled when she turned to lead him to the bedroom and her sexy bare bottom was right in front of him.\n\nThe champagne was very good, he thought as he drained the glass. It did have a slightly bitter aftertaste, but that was a very minor thing, indeed. Jeannie smiled at him as she emptied the remainder of the bottle into his glass. They toasted.\n\n\"Here's to an amazing night, with my sexy husband,\" Jeannie said.\n\n\"Here's to making up for lost time,\" he replied.\n\n\"I hope so, Baby,\" she giggled. \"I'm so horny, tonight, I think my nipples could cut glass!\"\n\nSteve drained his glass, and Jeannie drained hers, and then set their glasses on the nightstand. She stood in front of her husband and kissed him again, pressing her body against his and grinding her mound tightly against the hard bulge in his trousers, growling mischievously as she did so. He wrapped his muscular arms around her and pulled her into him. She could easily feel his big, hard cock pressing into her mound, through his pants. She shivered in his arms.\n\n\"I need to stick to the plan,\" she thought.\n\nPulling back, Jeannie softly whispered, \"I wanted to make this night special, baby. Would you mind if I take charge, tonight?\" She started unbuttoning his shirt.\n\nSteve was so hungry for her that he was tempted to just throw her on the bed and ravage her. He wanted her so badly. But he liked the way this was going. He could always just take her later. Probably several times, he thought. He smiled and kissed her again.\n\n\"Whatever you desire, my sexy queen,\" he leered. \"Let me know how I can serve you, tonight.\"\n\nJeannie sighed as her husband's muscular chest and arms emerged from his shirt. The thick slab of his shoulder was just irresistible. She bit gently into it as she reached for his pants, unbuttoning and unzipping them. His boxer briefs revealed a massive bulge that she couldn't wait to uncover. Her mouth watered, as she knelt and pulled down his underpants.\n\nShe managed just enough self-control to get her husband completely undressed, and then had him lie on his back, on the bed. Jeannie crawled sexily up his body, straddling his abdomen. Steve started to reach for her hips, but she stopped him.\n\n\"I really want to be in charge, tonight, Steve,\" she reminded him softly, \"Here, let me see your hands.\"\n\nSteve held up his hands, and was a bit surprised when his wife tied his wrists to the head posts of the bed with a pair of his older neckties. They had talked about trying this sort of thing, on quite a few occasions since they'd become lovers, but had never managed to get around to it. His cock throbbed against her bottom as Jeannie leaned forward to secure his hands in place.\n\n\"That's not too tight, is it? I don't want to cut off your circulation,\" Jeannie looked adoringly down at her husband.\n\nSteve tested the bonds. They were secure, but not painful. \"I don't think I can escape, and it doesn't hurt,\" he said. \n\nGod, she looked so sexy, looming above him.\n\n\"Perfect,\" Jeannie replied. She then got a third necktie and started to blindfold him. Steve balked, at that.\n\n\"Please, don't, Baby,\" he pleaded with her. \"I want to see everything. You're in charge, and I promise you can do whatever you want. It's just that I haven't seen my gorgeous, sexy wife in so long, and I don't want to miss a thing.\"\n\nJeannie was a little nervous at that. It was a departure from the plan. Still, he had said she could do whatever she wanted...She bit her lip and nodded, setting the second tie aside.\n\n\"Steve,\" she said huskily, \"I wanted to blindfold you so I could lick and suck that gorgeous fuck-stick of yours. I've ached to do that, ever since the very first time we made love to each other!\"\n\n\"You really want it, that much?\" he asked, giving him a smile that looked mischievous, only she couldn't figure out why it might be so. \"So much, so, that you'd set up something like this, to get it?\"\n\n\"Baby, you know you weren't my first,\" she told him, blushing beautifully, \"but the feel of a man's cock in my mouth and throat, and the taste of sperm... It really turns me on \u2013 really brings out the animal, in me, to a degree that even you haven't seen, yet! Sometimes, I get to the point where I crave it, like an addict craves his next 'fix!'\"\n\n\"Then, I guess it's about time I let you have what you're craving, lover,\" he smiled up at her. \"And I can't fucking wait to watch you do it!\"\n\n\"You really mean that, Baby?\" she asked, gasping in sheer unbelief.\n\n\"I do, Jeannie; I really do,\" he nodded emphatically. \"Only, turnabout is fair play \u2013 so, before you indulge yourself in what you've been craving for such a long time, I want you to bring that pussy up here and sit on my face with it. I want the taste of your sweetness lingering on my lips and tongue, while I watch you satisfy all those long months of craving my cock in your oh-so-sexy mouth.\"\n\n\"Who are you, and what have you done with my husband?\" she asked, allowing just a hint of sexy smile to curl her lips.\n\n\"There's time enough to talk about all of that, later, when we're both far too exhausted to do anything but talk, Baby,\" he shook his head. \"For now, just accept the fact that I'm still the man who fell madly in love with you, the first time I saw you. Only, I'm the man who loved you enough not to let myself be the one who denied you what your heart and mind and body apparently crave, so much. Now, come up here and sit that pussy down on my lips, and make me fucking taste what I've been so stupidly missing out on, for so very long, you hot, sexy little minx!\"\n\nHer head still whirling in amazement at the change that had come over her husband, she knee-walked upward along his body, settling her drenched labia into place over his waiting mouth, and the first slithering touch of his tongue on her most intimate of places sent her through the roof. The touch of that same tongue, as it lashed at her clit a half-second later, had her screaming in ecstasy.\n\n\"Oh, fuck, Baby!\" she squealed. \"Don't stop, please? I love it... love you!\"\n\n\"I have to stop, Baby,\" he told her, shaking his head. \"I promised you that you could do whatever you want, with me or to me, tonight, and you've already informed me how much you're aching to taste me. Get on down there, and have your wicked fucking way, with me!\"\n\n\"I can turn around, and we can sixty-nine, and do each other at the same time,\" she suggested.\n\n\"Your body would be in the way of my seeing you, sucking on my cock the way you crave,\" he shook his head. \"and I told you that I want to watch, and not miss a thing. We'll sixty-nine another time, I promise you \u2013 like maybe tomorrow morning, before we get out of bed. I've discovered that I love the taste of you, and I truly wish I hadn't spent the last year and more in avoiding it! But, tonight is for you, Baby.\"\n\n\"You're sure?\" she slithered around and slipped into position between his spread thighs, her mouth poised over a rock-hard cock that was already leaking its sweet fluid for her to taste.\n\n\"Wrap those luscious lips around me, and find out how much I mean it, you sexy creature!\" he told her, his voice an animalistic growl. \"Go for it! Turn your 'inner slut' loose, and show me what I've been missing, all these months!\"\n\nJeannie was stunned. It showed on her face. It took a good ten seconds before she cleared her head and dove onto her husband's straining erection - slowly licking it up and down. Steve moaned appreciatively, and got even harder as his wife took the tip into her mouth while her eyes burned into his.\n\n\"Oh, that is so fucking hot!\" Steve gasped out as she took his throbbing cock head into her eager mouth and lavished it with attention, with her tongue.\n\n\"Baby, I'm just getting started, here,\" she told him in the sluttiest voice she could muster. \"If you think that's fucking hot, just wait until I really get going!\"\n\nIt seemed too good to be true, but Jeannie was not about to question her good fortune. She gobbled her husband's straining dick deep into her mouth. His eyes shot open when she swallowed him whole. He had never imagined that was even possible. He shook helplessly as Jeannie made a meal of his thick cock.\n\nSteve was worried now that he would cum far too soon. He hissed out, \"Jeannie, that's way too intense! I won't last long at all if you keep that up!\"\n\nJeannie was enjoying this so much that it was really difficult for her to stop. When she felt her husband's cock swelling in her throat and heard him gasping desperately, she did manage to back off. She kissed the tip softly and licked up the tasty clear drop that he had provided. Steve just stared down at her in disbelief.\n\n\"Oh my God, Jeannie, that was incredible! How...\" he said. She grinned up from between his spread thighs before she sexily licked up his shaft and slowly swallowed him again. Steve was panting in sheer lust as she deliberately took him into her throat again, inch by inch. He strained against his bonds, flexing his arms as he squirmed helplessly. Not only had she swallowed his entire shaft again, but her tongue was now licking his balls as her throat muscles milked him.\n\nOnce again, he gasped as he got close to orgasm. Once again, she slid his twitching cock slowly back out of her mouth. This time, he was pulsing hard in the air in front of her face. Pre-cum was drooling out of the tip of his saliva-coated dick. Jeannie gave him a minute to simmer down before her tongue lapped up his tasty juice.\n\nThree more times, Jeannie took him right to the edge of climax. After the first two, it was far easier than she had expected. Steve was putty in her mouth\u2014rock hard, pulsing, throbbing, eager and manly-tasting. After that last teasing release, though, Steve was starting to look a little too desperate. He looked as hungry as her pussy and asshole felt.\n\n\"I'm not stopping, this time, Baby,\" she cautioned him. \"I want every bit of your sweet cream, and I want it now!\"\n\n\"But, Jeannie,\" he pleaded. \"I want to feel my cock in your pussy, tonight, too!\"\n\n\"And you will,\" she giggled, knowing what he was getting at. \"You'll cum in my mouth, now, if you know what's good, for you! I told you what the taste of a man's seed does, to me, and I know that \u2013 deep down inside that horny little mind of yours \u2013 you're just dying to find out what it'll feel like when your prim and proper loving wife turns into a fuck-hungry little demon, and spends the next couple hours having her wicked way with you!\"\n\nShe paused, silent, while she let him consider the options facing him.\n\n\"You're right,\" he admitted, half-panting. \"I would love it. Only, I'm afraid that if you suck me dry, now, the way you're aching to, I'll wind up being too limp for you to wrap those pussy-lips around me and go to town.\"\n\n\"Baby, any tendency you might have, to go limp on me, is swimming upstream against the hundred milligrams of Viagra I ground into powder and dissolved in the champagne you drank. It ought to be slipping into your system, by now. For the next few hours, if the wind blew up your pants-leg the wrong way, you'd get good and hard. And, for every last minute of that time, your little minx is going to do her dead-level best to keep you rock hard and fucking me six ways from Sunday. Got it, mister?\"\n\n\"I don't deserve a woman like you, Baby,\" he sighed, smiling naughtily up at her.",
        "\"Baby, you love me and I love you,\" she told him. \"And if you've really been working to overcome whatever problem kept us from fulfilling all of each other's wildest fantasies, before tonight, then I love you even more, for it, and you absolutely deserve a woman like me! And I'm just about to show you how much! Prepare yourself, lover! Your little slut is about to do things to you that you've never even fucking dreamed were even possible!\"\n\n\"Tell me, Baby,\" he pleaded. \"At least, give me a hint?\"\n\nShe dropped her mouth to the throbbing stalk of rigid man-flesh, and took him all the way down her throat again in one smooth stroke, causing him to nearly scream with the pleasure her tight lips and throat brought to him as her tongue lashed at the sensitive spot on his underside, right at the base of the shaft.\n\nDimly, through the haze of her lust, she heard the sound. Was it her real voice, screamed against the shaft of his cock and vibrating the air in her sinus cavities, or was it the scream of the overjoyed cock-whore she'd kept locked and chained inside her for so many months, set free at last to express her wicked self again in full-blown lust \u2013 but only with this man to whom she'd pledge the rest of her life and all of her love? \n\nIn the end, it didn't matter, nor did she really care. She reveled in the sensations, and in the knowledge that she was rocking the world of the man beneath her \u2013 rocking his world as she hoped he'd be rocking hers, shortly. \n\nHis cum was the sweetest nectar in the universe as she let her throat muscles send the first blast on its way straight to her stomach, and then pulled back to let the remainder pool in her mouth, bathing her tongue in the long-forgotten taste. All along, she hadn't taken her eyes off of his \u2013 as though some sort of invisible 'laser-beam' of lust connected them. The rapt ecstasy \u2013 and joy \u2013 at her pleasure, that she read in his eyes thrilled her to the very core of her being. This was it! This was what their lovemaking had been missing, since that first night \u2013 but would never again be absent, between them!\n\nShe pulled her mouth from him, careful not to spill a drop of the precious fluid, and then opened it carefully to show him his pearlescent offering, a lake surrounding her tongue, just before she swallowed it all.\n\n\"Did you enjoy that, Baby?\" she goaded him, grinning gleefully. \"Did you enjoy watching your own personal little slut suck the cum out of you and swallow it as though it was the sweetest beverage she'd ever tasted? I hope so, because \u2013 let me tell you \u2013 I sure as fuck enjoyed it! And I hope it won't be the last time you feed it to me, like that!\"\n\n\"It won't be, Baby,\" he managed a groan before she sealed her lips to his and flooded his mouth with her eager tongue. \n\nHe tasted his seed in her mouth and, strangely, found it enjoyable \u2013 transformed by her tongue and saliva into some sort of amazing 'love-potion-number-nine' that had him half delirious with lust, for her, eager to do any and every little thing her heart desired, for the rest of the night.\n\n\"You want a hint, Baby?\" she teased him. \"Try this on, for size. I'm going to spend the next little while in working you up to an absolute fever pitch, and then turn you loose, to see what you do to me! Sound good?\"\n\n\"Sounds wonderful, Baby,\" he nodded emphatically. \"Go for it!\"\n\nJeannie slid up her husband's trembling, muscular thighs. Her sopping pussy was overjoyed to reunite with her favorite cock. Steve was unable to control himself. He started thrusting up into that hot wet little hole as soon as it slurped him in. Jeannie's eyes lit up at that. It felt so good, but she needed to control him, a bit longer.\n\n\"Ah-ah-ah,\" Jeannie said softly. She reached back and held his thighs, digging her nails slightly into his flesh. \"I'm still in charge, Baby. Remember?\"\n\nSteve moaned, but forced his hips to be still. He kept his buttocks flexed as she began to ride him. It was so amazing that he couldn't help but thrust back, occasionally. Each time he did, she would moan softly and dig her nails into his thighs. It was not vicious, just a reminder that he'd left her in charge, and so he was obligated to obey her commands. He would groan loudly and force himself to hold still. It was such sweet torture, of the sort that he simultaneously wanted to end and yet never end! He could not remember ever being as hard as he was, just then.\n\nThen she slid all the way up until his cock was completely out of her, just touching her engorged pussy lips. Jeannie's breathing was ragged. She teased her hungry pussy with just the tip before sinking back down with a long moan. The moan was from both of them. When Steve was once again balls-deep inside her, she held her hips still and leaned down to bury her tongue in his mouth. They kissed passionately as she slowly moved her hips forward and back.\n\nJeannie broke off the kiss and sucked in a breath as she once again slowly rose up. Her pussy muscles clenched him involuntarily all the way. This time, he popped completely clear of her pussy when she was kneeling above him. Jeannie reached back and held his shaft. It was time. She looked into his eyes as she fed that throbbing cock head into the eager ring of her sphincter.\n\n\"You're just beginning to get a glimmer of understanding, aren't you, Darling?\" she goaded him. \"It's only just sinking in, the truth about the perverted little slut you've given permission to ravish your body, all night long. Do you think you can handle it \u2013 handle me, Baby?\"\n\n\"I'll force myself,\" Steve groaned out loud.\n\nFuck! She was so hot, and so damned tight, as she took him back in. Her muscles gripped and squeezed at his cock-meat, deliciously. This time, Steve managed to hold still. He had never known her to have this level of control over her internal muscles. The tightness was extraordinary. Her eyes were glazed over as she moaned continuously. He felt her juices dripping out of her pussy onto his stomach, and that was when his eyes opened wide in disbelief.\n\n\"How does it feel, Baby?\" she whispered heatedly to him as her nether passage began to swallow his cock. \"How does it feel, to have that magnificent fuck-tool of your buried in your hot little wife's ass \u2013 the ass you've managed to stay out of, for over a year? Feels pretty good, doesn't it?\"\n\n\"Feels damn good, Baby!\" he groaned. \"I wish to hell you'd thought of something like tonight, a long time ago! Now, if you're dead set on telling me what a little bitch you are, don't you think it's about time you helped me fuck the shit out of you \u2013 literally?\"\n\nShe had put him in her ass! His cock was sliding up into his wife's sexy backside. The thought alone almost made him lose it, and a spurt of pre-cum shot out of the tip of his trembling dick.\n\n\"Jeannie,\" he growled up at her, \"what did I tell you?\"\n\nThrough her haze of assgasm, Jeannie managed to mumble, \"What?\"\n\n\"I said, 'I don't want to miss a thing.' Now you need to lean back and let me see my cock sliding up into that heavenly ass of yours!\"\n\nJeannie tried, but wound up just collapsing backward as the anal orgasm exploded through her body. Steve raised his knees, propping her up enough that he could clearly watch. She could see his eyes \u2013 plainly read the awe and sheer delight in them \u2013 as he thrust his hips upward and skewered that eager ass with his thick shaft.\n\nNow it became his turn, to goad her.\n\n\"You've wanted this, haven't you, Baby?\" he asked her, making sure that each word of the question was accompanied by another hard, forceful upward stroke of his shaft as he hammered it into her rectum. \"You've ached to feel my cock in your ass, admit it!\"\n\n\"Oh, fuck, yes, Baby!\" she groaned, riding him for all she was worth, trying to keep her anal muscles tightly wrapped around his shaft in order to maximize the pleasures they both were feeling. \"Fuck me, you stud! Fuck your little bitch's ass, and don't you dare fucking stop, until you fill it with your hot cum!\"\n\nShockwaves of orgasm ripped through Jeannie's helpless body as she found her husband driving up into her. She could see he was watching while he ass-fucked her. She felt the telltale swelling of his shaft, and then he launched the largest explosion of cum into her eager little bottom that she could ever recall. No other man before him had pumped such a big, boiling blast of baby-batter into her bowels, as her loving husband did, in that moment! They both cried out as the intensity of that moment shook them to the bone.\n\nJeannie collapsed forward, sobbing at the sheer pleasure of that shared moment. Steve leaned forward and bit her lip, then he kissed her lips hungrily. Their mouths opened and their tongues danced sensuously as his cum continued to spray inside of her.\n\nThey stayed that way for several minutes, kissing languidly as Steve's cock bucked and came inside her ass. He finally broke off the kiss, whispering softly, \"Jeannie, would you please untie me now?\"\n\nIt took a while for her to do it. Her hands shook and she fumbled with the knots with her outstretched arms. She just couldn't bear to let that hot cock out of her still-hungry asshole.\n\nWhen his hands were finally free, Steve wrapped his arms around his wife's sexy back and hugged her fiercely. He was still completely erect, inside her spasming butt, which surprised him, despite the fact that she'd tipped her hand about the Viagra. That had been the most intense orgasm he ever had, and it was certainly the most he had ever cum. Clearly, his dick was in the mood for more of that sweet ass.\n\nHe rolled them over onto Jeannie's side of the bed. Steve sat back, and lifted her legs wide open. Her pussy looked like a plump little clam, clutching just above the unbelievable sight of his thick shaft protruding from that stretched muscle-ring of her anal opening. He looked back up into Jeannie's loving eyes.\n\n\"I hope you don't mind,\" he said as he lifted her sexy calves up so that her heels rested on his shoulders, \"but I'm going to take charge for a little while, now.\"\n\n\"Oh, fucking hell, yes, Baby!\" she groaned. \"Fuck the shit out of your wife's ass!\"\n\nJeannie could only gasp as her sweet husband opened her legs wide and started to fuck her in the ass for the first time. His insatiably hard, thick shaft drove deep into her well-lubricated little hole. Her ass was opening up for him like a hungry flower, inviting him to take her harder and faster. He quickened the full-length strokes he was giving her, when he felt that.\n\nSoon they were both grunting and moaning continuously as he pounded her needy bottom. Jeannie could only shake uncontrollably when she felt him growing thicker inside her again, and felt him unload another massive volley of sperm deep into her. Steve watched in fascination as he slowly withdrew from her clutching little asshole. A deluge of his cream poured out of that stretched little hole and onto the bed sheets.\n\nHe couldn't believe he was still completely hard. Jeannie couldn't believe it, either, when he rolled her onto her side and slipped his cock back into her ass. She gasped and her wide open eyes rolled back to look at him over her shoulder. He was insatiable! Oh, God; it was so fucking good!\n\nHe was gently stripping away the negligee while his hips pistoned back and forth. At that angle, his throbbing cock head was just pummeling her g-spot with every thrust. Jeannie was babbling as climax after climax crashed through her body. Her pussy was drooling continuously now. The pleasure was so intense she feared she would black out.\n\n\"Oh my god, Jeannie,\" Steve moaned, \"Your tight little ass looks so fucking sexy! I can't believe how hot it is, to take you like this!\"\n\nFully fifteen minutes, they fucked in that position, and then he pulled free of her.\n\nShe groaned as she felt her nether passage go suddenly empty.\n\n\"I'm not done with you, yet,\" he informed her, grabbing her and positioning her so that she was bent over and leaning on the mattress, with her feet planted firmly on the floor next to the side of the bed. He'd used this position only once \u2013 with the lights off \u2013 to fuck her pussy from behind, and it had given him the maximum 'leverage' he needed to impart immense power into his every stroke. It was similar to fucking her, doggie style, on hands and knees, but using the floor as a stable base let him put far more power into each and every stroke than trying to do so with his knees on the relatively unstable mattress.\n\n\"Take that, woman!\" he growled in mock savagery as he began to pound away at her. \n\n\"Oh, Baby, yes!\" she screamed. \"Give it to me! Give it all to me!\"\n\nAlmost three hours later, Steve's artificially enhanced erection finally gave out. He collapsed on Jeannie's back, kissing her neck softly with his softening shaft still buried in her tender, but very satisfied, bottom. They'd taken a few periodic rest-breaks throughout the lengthy fuck-fest, but his erection had remained nearly constant until this point. He supposed that the sildenafil citrate \u2013 the active ingredient in Viagra \u2013 had mostly been filtered out of his system, by then. He didn't care. They'd both achieved their purposes for the night, and their marriage would never again be the same.\n\nAs she rolled over in his arms and kissed him like there was never going to be a tomorrow, the thought slowly penetrated her sex-fogged, fucked-out brain that she was going to have to do something about her promise to Jennifer \u2013 that she'd find time to come over for morning coffee, and a nice little session with Josh. Something was going to have to change, in that \u2013 at least, if Steve had every intention of never going back to the person he'd been before that magnificent evening of pleasures.\n\n'Maybe I can go over, and sweet-talk her into stripping and joining us on the bed,' she thought to herself. 'Once I've got her fucking him, she probably won't notice that I'm not bothering to. If nothing else, I can always tell her the truth \u2013 that, whatever Steve's problem was, he's somehow overcome it, and now, with the way he's fucking me, I've got all I can handle, and then some. As for Josh, he's still got Charlene, Sarah, and Heather, all wanting a piece of that lovely fuck-stick of his...'\n\nThey fell asleep together, like that, and woke up the next morning in the same position. They never did get around to the 'sixty-nine' he'd promised her, for that morning, but Jeannie didn't mind. Her newfound ass man was already hard, for her, when she awoke \u2013 his cock-head poised at her pucker and pressing into her, just the way she loved it...\n\n\"You won't mind if I start our day off by fucking you in that hot little ass of yours, will you, Baby?\" he murmured the question into her ear.\n\n\"I can't think of a better way, to start the day, my love,\" she cooed contentedly. \"Only, when you get close, why don't you pull out and cum in my mouth?\""
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "anal",
        "deepthroat",
        "nurse",
        "teasing",
        "first time anal",
        "anal sex",
        "first time"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-making-of-an-ass-man"
}