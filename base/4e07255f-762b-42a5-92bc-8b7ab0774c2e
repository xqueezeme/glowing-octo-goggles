{
    "title": "The Shepherd's Crook Pt. 02",
    "pages": [
        "Author's Notes: \n\n'A Shepherd's Crook' is a new tale in the Chronicles of Ben Shepherd. The chronological order of the stories is: \n\n<ul> <li> The Shepherd of Ashburn Court -- Parts 1 - 5 \n\n</li>\n\n<li> A Shepherd in France -- Parts 1 &amp; 2 \n\n</li>\n\n<li> A Shepherd Afield -- Parts 1 - 5 \n\n</li>\n\n<li> The Shepherd's Crook -- Part 1 &amp; 2 \n\n</li> </ul>\n\nMinimal effort is made in this tale to explain the backstory, so please read the other stories first. \n\nAll characters engaging in sexual relationships or activities are 18 years old or older. \n\n******** \n\nA Shepherd's Crook -- Part 2 \n\n******** \n\nChapter 9 \n\nAs he flew through the skies in another of Sky Shepherd's sleek black jets, surrounded by the happy chatter of the beautiful women accompanying him to LA, Ben's sense of reality slipped, just a little. \n\nThe changes his life was undergoing in recent days seemed to be accelerating. \n\nIt had only been, what, less than two weeks since Captain Kendricks presented the condition for his continued interaction with the US Military's Engineering Teams. \n\nA live-in security operative. \n\nSergeant Killcade was a one-woman Seal team and a blue-eyed angel of death, according to one of her former teammates. Ben spoke to the soldier when he visited David in Washington, DC to finalize the arrangements. \n\nThe fact that he'd received unanimous agreement from all of his neighbors when he'd called a meeting to discuss bringing the Sergeant into their midst spoke of their trust in him, and that affected him deeply. He was still getting used to having the ladies in his life showing him their devotion. Having the Wilson, McKellan, Brown, King, and the extended Hernandez and Sellini families backing him as well was overwhelming. \n\nBen's chair was swiveled to face down the aisle, so he looked to the far seat to see the Sergeant gazing out the window. She didn't appear to be relaxing back in the jet's decadently plush chair. As if feeling his attention, she immediately turned her head to look in his direction. Her startlingly blue eyes locked on his as she raised a brow in question. He just responded with a small shake of his head and a smile then looked away. \n\nEver attentive, ready to act on his every command, the Sergeant was doing her very best to prove her value in his household. He had to admit; she was an excellent administrative assistant. Much to her delight, he'd set up a workstation for her in his lab. She'd already organized his filing system and implemented a digital repository for all of his previous work, searchable by many intuitive attributes. He couldn't fault her work. \n\nIf only she wasn't so... intense, and fixated on him. He'd tried to dispel her notion of his genius, but she just smiled at him knowingly, like they were sharing a private joke. \n\nHis eyes moved to take in the happy faces of his other guests on this shopping trip; Trish sat next to Catherine with Lisa and Lori facing them in a quad of seats. The four were talking animatedly. Tina and Lucy sat facing him, their babies at home, being well cared for by Daphne and the assistants who'd been arranged and vetted by the Sergeant. \n\nThe trip was only for a few days, and he thought they'd appreciate the short break. They certainly seemed happy as they grinned at him. \n\n\"We're going dancing?\" Tina asked in delight as she overheard Lisa talking about an LA dance club for which she'd read reviews. \n\nBen smiled at her. \"I don't see why not.\" \n\nThe twins cheered, and Ben saw smiles on the faces of Trish and Catherine. \n\nHe didn't have any fixed plans for this visit which, after his visit to Europe, he appreciated. \n\nNope, this was a shop 'til you drop visit. Part one, at least. He promised a second trip for the ladies who couldn't join him on this shopping spree. He recalled Gabriella suggested New York City for the next one. She'd be traveling back to the big city in a week or two. Her business was growing quickly, and he was so damn proud of her! \n\nHis eyes moved to Catherine whose fundraiser had once again pulled in a healthy contribution. He saw Tina was smiling at him and somehow he was sure she knew what he was thinking. \n\nThe petite Korean beauty filled his life with joy. Combined with Lucy, they were a formidable force to be reckoned with. \n\nNow the two of them were giving him sexy knowing smiles. \n\nThis led his mind to the sleeping arrangements for the trip. Tina had booked the hotel, after getting his approval for the ridiculously expensive rates, but he couldn't recall the details of how many rooms she'd arranged for them. He remembered what happened during their last trip to France, specifically when visiting Gabriella's cousin's B&amp;B in Saint Pierre d'Albigny. \n\nHe'd been unaware that the ladies worked out a schedule to share his bed, or rather have him visit them in theirs. As he'd been traveling with eight women who all craved his attention, he'd been more than a little exhausted when it was time to leave the B&amp;B. \n\nThen Gabriella surprised him on the last evening with a request for him to spend the night with her cousin Stephanie. The woman was a brilliant artist, but as she was also blind and chose to live a somewhat reclusive life, she'd confessed to her cousin that she missed the touch of a man. She'd been flirting with him throughout their visit, Ben wasn't immune to her beauty and charm, and he truly liked her, so he'd agreed. She'd more than made up for her unintended celibacy that evening, wearing him out so thoroughly, he'd had difficulty waking the following day. \n\nNow he was looking at a couple of nights in a fancy hotel with six women who might have expectations. He wasn't sure how this was going to work. He looked closer at Tina's mysterious smile, but she was giving nothing away. \n\nBen pushed those thoughts aside. He'd have time to get an answer from her soon enough. He settled back and closed his eyes to recharge his batteries. \n\nJust in case. \n\n-=- \n\nThe Beverly Wilshire hotel was every bit as posh as Ben expected. One of the ultimate Hollywood experiences for their brief visit to the west coast. It had the bonus of being steps away from their main shopping destination. The ladies were all smiles and giggles as they checked in. The staff was friendly and efficient and the reception clerks greeted Ben with broad smiles. Their familiarity with celebrity and wealth prevented them from gawking too much at Ben. Some of the other guests weren't quite as discreet with their attention, but Ben did his best to ignore this. \n\nThey had four rooms, two sets of adjoining rooms just across the hall from each other. Tina eventually explained that Trish would share a room with the Sergeant for their stay. She'd had Ben all to herself on the trip to Europe so she'd just enjoy being with him during their daytime outings. \n\nBen would have company in his room on the three nights they were staying in the hotel. \n\nBy the time they'd settled into their rooms, there wasn't much daylight left, so dinner was their next order of business. \n\nOnce more Tina worked a miracle and snagged a table for them at Spago which had a last-minute cancellation on a large table. Ben's name sealed the deal, and the table was theirs. \n\nThe ladies slipped on their sexy cocktail dresses, the Sergeant opting for her dress uniform, and Ben wore his usual dark suit which sent tingles through Tina and Lucy when he posed for them. \n\nThe restaurant was only a brief walk from the hotel. Ben was annoyed to find a small crowd on the narrow sidewalk outside. He managed to get his group through them and inside, but the flashes from the paparazzo's cameras were dazzling and unwelcome. \n\nFinally, they were inside standing by the hostess desk. Ahead of them, a bearded man was speaking to the hostess in exasperation. A second gentleman, slimly built and wearing a rumpled suit, had dark skin and salt and pepper hair. He waited at his friend's elbow with a resigned look on his face. It was difficult to avoid overhearing that there was no record of their reservation. Tina was all smiles as she recognized the speaker. He'd been in so many movies and was one of the lead actors in a new crime drama series on TV she and Lucy binge watched. She looked hopefully at Ben. He nodded. \n\n\"Excuse me, Mr. DeMonte?\" Tina said touching the man's elbow. \n\nThe actor turned to look down at Tina's smiling face. \"Yes?\" Then his eyes rose up to see Ben's smile. Recognition flared in the actor's eyes, and he froze. \n\nTina continued. \"We're a party of eight at a table for ten, so you are welcome to join us.\" \n\nHe looked to his partner who was also watching Ben in delighted surprise. He smiled and nodded, so Phil turned back to Tina. \"Thank you. That's very nice of you. We'd love to.\" \n\nBen held out his hand. \"Ben Shepherd.\" \n\n\"Yes- uh, Phil DeMonte. This is Eric Thompson,\" the actor said as he shook the big hand. Ben shook the other man's hand as well then turned to the ladies with him and made the introductions. The hostess spoke to some busboys who adjusted their table to have the additional two place settings added once more. \n\nOnce Ben completed the intros, a hostess guided them to their table and Tina moved Ben to the chair at the end and their guests to either side of him. The remaining seats were filled quickly with Trish, Lisa, and Lori next to Phil and Catherine, Tina, and Lucy next to Eric. \n\nThe Sergeant was pleased to take the chair at the other end of the table as this gave her the best vantage point to the rest of the restaurant, a clear view of Ben, and those behind him. \n\n\"I hope we aren't interfering,\" Ben suggested tentatively. \n\nPhil and Eric shook their heads with smiles. \"No, we were just in town for a meeting with a studio to discuss a new project proposal. The studio was to set up a reservation for us, but it seems they dropped the ball on that too,\" Phil grumbled and got a frustrated nod from Eric. \n\n\"I'm sorry to hear that. It's nice you could join us though!\" Ben offered and got smiles from everyone. \n\n\"What brings you to Beverly Hills?\" Eric asked. \n\n\"Just a little sightseeing and, of course, shopping,\" Ben said. That made the ladies grin and giggle. \n\n\"Don't forget the dancing!\" Tina said happily. Ben nodded to her. \n\nThe waiter arrived, and at Ben's prompting, Catherine ordered a couple of bottles of good wine. \n\n\"As our guests, dinner's on me,\" Ben said as he smiled at the actor and his friend. \n\n\"Oh!\" Phil traded a look across the table, but Eric just smiled happily. \"Thank you!\" He leaned a little closer to Ben. \"I feel like we should be treating you as you're getting the lion's share of attention in the media these days.\" \n\nBen sighed wearily. \"Yeah, no matter how hard I try to stay out of the damn spotlight.\" \n\nPhil snorted. \"You're in the wrong town for maintaining anonymity.\" He looked around at the surrounding tables and saw more than one guest looking their way. \"You're in the wrong restaurant for that matter.\" \n\nBen nodded agreement with a shrug. \"Yeah, but I promised them a shopping trip, and they chose to eat here,\" he said. \n\nEric nodded then looked to Ben. \"There's been a lot of speculation. Are you planning to tell your story at some point?\" he asked, clearly intrigued by the notion. \n\n\"To the public? No. It's for family only. Besides, I'm just a mechanical engineer! My life isn't interesting enough to be... entertainment,\" Ben scoffed. \n\nTrish snorted then delicately dabbed her napkin against her nose with the smallest smile on her lips. Phil and Eric understood her meaning and caught the skepticism on the other lady's faces. Then the actor noticed the secret little smile on the Sergeant's face. \n\nHe caught Evelyn's eye. \"You don't agree?\" \n\nShe shook her head then answered in a matter of fact tone. \"Mr. Shepherd isn't just a mechanical engineer. He's a brilliant mechanical engineer.\" \n\nThe actor turned his smile to Ben who shrugged as he shook his head slightly. \n\n\"Still. Not a public story,\" Ben insisted. He decided to push the conversation back to his guests. \"Can you tell us what your project is?\" \n\nEric nodded to Phil, and it was his turn to shrug. \n\n\"Eric brought this idea to me, and we've been working on it for a little more than a year. We want to shine a light on some brave young people in a documentary style movie. A series of stories based on kids that slipped through the cracks of society but found a way to make it on their own.\" \n\nBen's chest felt a little tight as that story was a little too close to his own life, but he took a deep breath and moved on as he looked to Eric. \"Documentary style but fiction?\" \n\nHe shook his head. \"No, these are true stories about real people and the content will be raw and profoundly evocative. We met the kids. Most indicated they don't want to be in front of the camera, but they agreed to let us tell their story. For those unwilling to portray themselves, we'd use unknown actors. This will add an edge of reality in their performances. \n\nBen thought about that for a bit. \"The studio wasn't interested?\" he asked quietly. \n\nPhil shrugged. \"We've shopped this around. No one is interested in doing it-\" \n\n\"Our way,\" Eric clarified. \"They won't do it our way. It's not a guaranteed money-maker without the well-known talent in it. The studios are risk-averse at the best of times. I suppose it was a long shot.\" \n\nWhen the wine arrived, Ben indicated he'd pass and asked for some bottles of spring water for the table. A second waiter arrived with the water immediately behind the first. Ben filled his glass and looked up as the others had raised their wine glasses for a toast. Everyone looked at Ben. \n\n\"Ah, me. OK. Uh, here's to a successful visit; shopping for us and success in finding backing for your project,\" Ben finished, looking to the group. \n\n\"Cheers!\" \n\nOnce the glassware was back on the table, Phil turned to Ben. \"What exactly does a Mechanical Engineer do? You must be doing well to spring for a shopping trip in this town!\" \n\nBen shrugged. \"I invent solutions for engineering issues. Sometimes these inventions can be used across multiple industries or have multiple purposes. I own the patents and license their use, or I sell the patent. I invest carefully, and I live frugally... well, most of the time.\" \n\n\"Would I know anything you invented?\" Phil asked. \n\nBen shook his head. \"Not likely. My last invention was a radioactive particle filter for uranium mining trucks at a company in Melbourne. This design adapts easily for buildings, hazmat suits, whatever, so I kept the patent to license it. I have a contract with a company in Texas to manufacture them and a contract with the Uranium mining company to market them. The US military is purchasing them for its use, and that generates revenue.\" Ben saw Eric's expression darken. \"Hang on! I'm not overbilling the government. I keep the unit cost low and focus on volume. That way the filter's base price can remain low enough to expand its marketability. They're getting them for a decent price.\" Eric seemed to accept that. \"I have many patents for all kinds of different things, none of which you'd recognize or be impressed by seeing first hand. They work and eliminate an issue someone reported on an engineering chat board. For me, they're puzzles, and it's deeply satisfying to solve them. But, nothing is exciting there for the general public to be thrilled about.\" \n\nThe waiters returned and took their orders. \n\nBefore Phil could ask Ben his next question, he caught the motion of someone approaching their table. He looked up, and up, into the smiling face of Dwayne Johnson. Next to Dwayne was a heavyset man with a broad smile. \n\n\"Phil! What a strange coincidence, bumping into you today!\" the muscular actor said. \n\nPhil glanced at Ben awkwardly then shook the offered hand. \"Hi... Dwayne. Coincidence?\" \n\n\"I don't mean to interrupt your dinner, but I was just here with Steven Koch- have you met Steven?\" He brought the man forward to shake Phil's hand, but Steven kept glancing at Ben. Then Dwayne continued. \"Steven contacted me today to offer me the lead role in a new movie, playing... Benjamin Shepherd.\" Dwayne turned his smile to Ben but didn't see the smile he expected. His eyebrows went up. \n\nPhil jumped in to fill the tense silence. \"Speaking of strange coincidences, Ben here just finished telling me he doesn't believe his story is worthy of a movie and that it's for family only.\" \n\nDwayne nodded thoughtfully. He looked at Ben. \"Understood. I respect your desire for privacy, and I wasn't aware that you were so opposed to the idea of a movie. That said, one of the studios is going to make this movie. Someone is going to portray you. I believe I would have enjoyed playing that role very much.\" \n\nBen sighed as he knew the man was right about the studios. He'd done his research, and while he was a private citizen, he'd been involved in publicly reported events for which he could expect no privacy. Events the public was intensely curious about. He looked up at the big man. \n\n\"I'm sorry I can't be more supportive. I truly want nothing to do with turning my very private life into some public spectacle. I know there've been moments where I was very much in the public eye, but some of them were exceptionally painful for me. I don't need to relive those moments. They're always with me.\" He saw the disappointment on the actor's face. \"For what it's worth, there's a waitress in Melbourne, Australia who mistook me for you, so I get there's some physical similarity between us. I mean, aside from your tattoos and my scars. I don't know you, but you seem to present yourself very positively as an outgoing, confident, and dynamic personality. I'm an Engineering nerd. Shy, quiet, and a homebody. The only reason I'm here is that I promised these ladies a visit... and I truly enjoy being in their company.\" \n\nDwayne looked down the table and fixed his eyes on the Sergeant. She blinked at the intensity of his look. \"I'm just his personal security detail,\" she blurted awkwardly. \n\nThe actor's eyebrows rose in surprise, and he looked back to Ben for confirmation. \n\nBen sighed. \"She's also my admin assistant and liaison for the work I do with the US Military and other government offices.\" \n\n\"Damn, your life doesn't sound as dull as you make it out to be,\" Phil said with a grin. \n\n\"I know, right?\" Trish chimed in with a grin of her own. \n\n\"Trish!\" Ben said, giving her a stern look but he couldn't diminish her delight. \n\nDwayne sighed. \"More and more I'm intrigued by the role.\" \n\n\"Listen, I'm not saying you shouldn't do it. I'm just saying I'm not going to get involved or sanction a movie about me in any way. Nor will I watch it,\" Ben said reluctantly. \"My lawyer will, and if the result is libelous, I'll sue the studio.\" He turned his eyes to Steven, and the man's smile dimmed. \n\n\"Well, I'm glad I got to meet you,\" Dwayne held out a hand and Ben shook it. Catherine used her cell to take a picture of them shaking hands as Steven took one from the other side. \n\nWhen their visitors left, Phil looked at Ben with a raised eyebrow. \"Someone is making a movie about you? I wonder if it's just going to be about the stuff we've seen on the news.\" \n\nBen shrugged. \"I want to believe that's all they have.\" He looked to Trish. \n\nShe shook her head. \"None of us would ever spill your naughty secrets.\" Ben gave her an exasperated look. \n\n\"They'll probably give the movie a huge budget,\" Eric said. \"They could make an action film based on the rescue of those kids from the slavers.\" \n\n\"Do you ever wonder how they're doing now?\" Phil asked with a small smile. \n\nBen grinned. \"The two I adopted, Karen and Penny, are doing well in school. I think Karen's looking into continuing her education into the Culinary Arts when she graduates, but Penny hasn't decided yet. The Russian twins are happy and growing up quickly too. Mika and Rosa are taking gymnastics and are the top students in their classes. I don't know what happened to the French girl.\" ",
        "\"I didn't know you adopted two girls!\" Eric exclaimed. \n\nBen nodded. \"They were twenty-four and had been in the custody of the slavers from a young age. They missed out on so much and had no link to their previous lives. No identities. Adopting them gave them something to build upon. I got them enrolled in school and bought a neighbor's house to renovate it into a home for them. \n\nPhil was looking at him with his mouth open in surprise. Finally, he found his voice. \"You went above and beyond for these girls.\" \n\nBen frowned and shook his head. \"I did what I could because I could.\" His frown slipped away as he recalled Gabriella's words. \"A beautiful woman, currently back home, once told me I couldn't save everyone. She was right. I spread myself too thin, and I have to turn a blind eye on some situations I come across. I couldn't do that with Karen and Penny. They'd lost too much and were unable to cope on their own when I found them. Taking them in worked out.\" \n\n\"Ben is an excellent father!\" Tina said with a proud smile which Lucy mirrored. \n\nEric glanced to them and looked at Ben questioningly. \n\nThe food began arriving sparing Ben from having to answer. Catherine leapt in to steer the conversation to the similarity between arranging funding for a movie project and fundraising for a charity, aside from the tax breaks charities get. She was very interested in hearing about the kids that found a way to make it. She related a story of some inner-city kids that set up a counseling and tutoring service which her charity was partially funding and how it helped some kids break free from the cycle of poverty. \n\n\"That meshes beautifully with what we're trying to convey in our project,\" Phil said. \"If we get a backer for the movie, do you think they'd be willing to have their story included?\" \n\n\"I'm sure they would!\" Catherine said with a grin. \n\nBen perked up. \"If you're unable to find a studio to back your project let me know and I'll see what I can do,\" he said to Phil. \n\nPhil sent a careful look across the table to Eric before smiling at Ben. \"I thought you said you were a Mechanical Engineer. Just how lucrative is that field?\" \n\n\"I do ok. I don't know what kind of investment you are seeking. I know nothing about the movie industry. I've heard movie budgets can range from less than a million to tens of millions. Independent movies cost less; don't they?\" Ben asked. \n\nPhil and Eric traded looks and nodded. \"We're looking at something a little larger than an indie film but not the budget a studio would give for a movie about you,\" Eric answered. \n\nBen shook his head as he stared at Eric as he still had no idea of the cost. \n\nPhil saw his bewilderment and hit him with the numbers. \"Eight to ten. Million.\" \n\n\"Oh!\" Ben said. \n\nPhil nodded and shrugged as he smiled at Ben. \n\n\"I can probably swing that.\" \n\nPhil's smile dropped away in shock. He found his voice again. \"You- you understand this movie isn't likely to have a large box office draw? The return on your investment may not recuperate your costs.\" \n\nEric snorted. \"Don't sugar coat it, Phil. The movie will likely lose money, but it's a story that needs telling. These kids are an inspiration for others in their circumstances.\" \n\nBen nodded. \"That's the thing that caught my attention. I think their stories need telling as well.\" He looked into Catherine's eyes and saw her love for him there. She knew his story followed the same path these kids were taking, but she kept that fact to herself, respecting his wishes. \"I'll talk with my finance guy, and you can send me the proposal.\" He took out his cell and displayed his home address and number for Phil who added it to his address book. Ben took Phil's details as well. \n\nThe actor grinned across the table at his partner. \"I certainly wasn't expecting dinner to turn out like this! Not after the shit day, we've had!\" He quickly glanced at Tina contritely. \"Oh! Please excuse the profanity.\" \n\nShe grinned at him. \"It's ok. While it's not often, we have shit days too.\" \n\nThe table burst into chuckles hearing the profanity from Tina's mouth. \n\nThey settled in to enjoy their meals. The conversation centered on the movie they were planning and Ben felt more and more at ease with the idea of backing it. While he wasn't comfortable sharing his own story, these kids would be an inspiration for others. \n\nThey had a few more people drop by the table to greet Phil and fish for an introduction to Ben. After the third one, Phil spoke to Ben to apologize. \"Normally I get a nod or a wave. These interruptions are nuts! How should I be introducing you? As an investor?\" \n\nBen shook his head with a smile. \"Just say friend. No need to link my name to the project. I'd be a silent partner.\" \n\n\"Somehow, I thought you might say that,\" Eric said with a smile. \n\nThey finished dinner with only a few more visits and made their way outside. Flashes exploded the moment they exited. The paparazzi were waiting for them as word had gotten out. \n\nA shuttle bus from the hotel swooped in and, with a final wave to Phil and Eric, Tina got their group loaded onto the bus. \n\n\"Who ordered this?\" Ben asked with a smile and Tina wiggled her cell at him. He kissed her on the forehead for her quick thinking. \n\nThe shuttle made a quick circuit of the neighborhood and dropped them off at the front door of the hotel. \n\nTina and Lucy joined Ben in his room for night one. They were content to cuddle, and that suited Ben just fine. \n\nAs he relaxed with the two soft women breathing gently against his chest, the activities of the evening scrolled through his mind. Phil's words, about how this town wasn't the place to come searching for anonymity, returned to him. From the burst of flashes the moment they left the restaurant, Ben knew the city was aware he was here. Tomorrow he'd be following the ladies up and down Rodeo Drive, and he hoped they'd manage it without being chased all day. \n\nChapter 10 \n\nBen and Evelyn returned to the sidewalk caf\u00e9 in front of the hotel after dropping off everyone's shopping bags in the appropriate rooms. It had been a long but highly successful day of shopping, and everyone was feeling very pleased. As they approached the tables, Ben was surprised to see Trish giving a hug and air kisses to a tall and slim, mocha skinned beauty. Ben immediately recognized the big man standing behind her as Killah D, and the woman at his side, Brooklyn. With a happy smile on his face, he shook hands and bumped chests with the rap artist and gave the man's girlfriend a warm hug as well. The beauty with Trish was La'Shia and Ben hugged her too. Then he did the introductions for the rest of his group as he discovered the artists had just arrived. Lisa, Lori, Lucy, and Tina were all dazzled by La'Shia, and she looked very pleased. \n\n\"What an amazing coincidence!\" Ben gushed then caught the look in La'Shia's eye. \"Oh, not a coincidence?\" \n\nThe beauty laughed gently. \"Actually, no. We heard through the grapevine that you were in town rubbing elbows with celebrities. It's all over the entertainment news channels. The story even mentioned where you were staying.\" She gestured over her shoulder, indicating the paparazzi on the opposite sidewalk snapping shots of them with long lenses. Ben had been ignoring them as he'd done all day. \n\n\"We came by because we're having a party tonight at the house we're renting up in the hills and wanted to invite you- all of you,\" she added as she looked to the excited faces. Ben realized his group was on board with the plan, so he nodded. \"Sounds like fun!\" \n\nLa'Shia gave Ben the address, and he added it to his cell. \"We'll see you around 9 PM?\" \n\n\"Sure!\" \n\nThe singer moved a little closer to Ben and looked up into his eyes. \"The last time we met wasn't the best of circumstances, but it's good to see you're feeling better now.\" \n\nBen gave her an appreciative nod. \n\n\"Would it be possible for you to show Brooklyn and I some of those dance moves of yours tonight?\" she asked quietly and bit her lip nervously. \n\nNot a coincidence at all then. They wanted something from him. He recalled telling La'Shia she should have just asked him instead of falling victim to that barracuda of a reporter. Well, here she was, asking. \n\n\"Yes, sure.\" La'Shia's face lit up with her excitement, and Brooklyn's expression picked that up as well, so he knew the choreographer was in on the request too. Killah gave Ben a questioning look, but he just shrugged. \n\nCatherine was close enough to have heard the singer's quiet request and gave Ben a look of concern. She'd spoken about what happened at her wedding with Gabriella and was aware of how recalling Margaret Cosburn affected him. He lifted her hand and kissed it. \"It's ok,\" he said to her quietly. \n\nLa'Shia waved to the group as she moved away. \"See you tonight!\" Killah and Brooklyn waved as well before getting back into the limo idling in the hotel's loading spot. \n\nBen sat in the chair Catherine saved for him, and the Sergeant took another which allowed her to keep an eye on the street. \n\nThey enjoyed a drink as they relaxed and watched the people walk by. The ladies talked about what they'd found on their hunt for fashion today. \n\nBen caught Lisa and Lori smiling at him as they admired the beautiful gold and enamel bracelets he'd bought for them earlier. Their smiles turned sultry as they recalled that night, Ben was theirs. He caught the look and felt himself begin to stiffen, so he turned his attention to the traffic driving by until he calmed. \n\nThey had reservations at the restaurant in the hotel, so they enjoyed another exquisitely prepared meal, without visiting celebrities, before heading up to their rooms to prepare for the party. \n\nBen chose pants that had some stretch to the fabric as he'd be dancing later. His deep blue silk shirt flowed as well. He sadly smiled as he remembered how much Margaret loved wearing silk when she danced. He pushed those thoughts aside and took some deep breaths. \n\nTina and Lucy looked gorgeous in the new cocktail dresses they'd found today. Lucy was wearing a pink off the shoulder dress that clung to her body, and Tina's emerald and black lace dress fit her like a second skin. Ben gave them both kisses as they moved their bags into the adjoining room. Lisa and Lori traded places with them as they entered his suite with their luggage. \n\nBen was once more dazzled by how lovely the twins looked in their matching black cocktail dresses. The fabric was slightly iridescent, like wet snake-skin, and followed the curves of their bodies. Subtle windows cut in the dresses hinted at their cleavage and tight stomach muscles. Both wore black chokers around their smooth necks. \n\nHe wondered how they were able to style their long red hair so quickly to tease it up into a cascade of curls that hung down to the tops of their shoulders. \n\nThe twins gave him delighted smiles as they saw his enraptured state. They took his hands and pulled him out into the hall to meet the others. \n\nThe first person he noticed was the Sergeant. She'd switched to her black fatigues which was an aggressive look for a party. Frankly, she looked badass. \n\n\"If I'd known we were going to a party tonight I could have bought you some casual outfits,\" Ben said. \n\n\"I'm on duty. Security duty. Is- am I inappropriately dressed? I only have uniforms-\" she stumbled. \n\n\"No! It's fine for tonight! You look- perfect!\" \n\nEvelyn's face lit up in a broad smile then her cheeks turned deeply red, so Ben looked away to the others entering the hall. \n\nTrish was wearing a tight crop top showing off the subtle cage of muscles on her toned tummy and tight black leather pants which did incredible things with the muscles of her butt. She gave him a grin telling him she caught him checking out her ass. She gave it a little wiggle for him, and he had to look away but not before she saw his smile and snorted gently. \n\nCatherine was a vision in her red off the shoulder cocktail dress with white pumps. \n\nThe ladies were very pleased that they'd mesmerized Ben. The Sergeant continued to blush. \n\nThe group headed downstairs to speak to the concierge. The man quickly arranged for a stretched limo to take them up the hill to the address La'Shia gave them. \n\nBen admired the homes and the scenery as they made their way up the hills until they pulled into a driveway which led to a sprawling mansion. Ben paid the driver then exited with the ladies and took a look around the grounds. Well-groomed privacy hedges blocked the view of the home from the street. A gorgeous modern fountain sat in the middle of the circular driveway and caught the light from the last rays of the setting sun. \n\nThey could already hear the faint thump of music from the party within the large house. Before they could press the doorbell, the door opened, and Ben saw Tilisha standing there with a delighted smile on her face. One of La'Shia's crew, the dancer was bouncing on her toes excitedly as she grinned at him. The deep scoop neck on her glittering silver top was threatening to display her delightful bosom. \n\n\"Ben! You're here!\" she squealed happily. \n\nSlightly dazzled by the jiggles she was sending through her cleavage, Ben finally managed a smile and reached out to hug the woman. She purred happily in his embrace, and when he pulled back, Ben went through the introductions for his party. \n\n\"La'Shia told me we are going to get to dance with you tonight! She and Brooklyn are also going to film it to study your moves!\" the woman gushed. \n\nBen nodded with a faint smile. So the ladies made plans for his visit. He didn't have any objections to their request for a dance or three, but he wasn't going to push himself for them. As he'd promised Gabriella, if it became too much, he'd walk away. \n\nTilisha guided them forward towards the back of the house and Ben was impressed with the build of the home. He heard subtle gasps and giggles coming from behind him and glanced back. Lisa, Lori, Lucy, and Tina were all smiles as they looked into the rooms they were passing. Excitement gleamed in their eyes. Ben took another look into the dining room they were walking by and saw the people gathered there. He thought some of the faces looked familiar, but he was no expert on celebrities. He assumed they were in the music business like La'Shia and Killah D. \n\nThey arrived at the back of the house in a large entertainment room. It could have been a family room, but it was enormous, and the back wall was open to the patio outside. A DJ was set up in one corner of the room and music was playing for a few guests dancing in a large open area. Other guests were standing or sitting at the edges of the room talking and drinking. \n\nTilisha led the ladies over to the bar to get a drink as Ben stopped at the entrance. There was a face he recognized standing in a group nearby. Mr. DeMonte! He smiled and nodded to the man who immediately left the group and approached. Ben held out his hand, and they shook. \"Phil! Fancy meeting you here! Do you travel in these circles too? Is Eric here?\" Ben quickly scanned the room for the man's business partner, but it was too crowded to spot him. He looked back at the actor. \n\nPhil smiled, but Ben could see some tension in the man's body language. \"Is something wrong?\" Ben asked. \n\n\"Hi, Ben. I don't normally attend these parties, but I got a call last night from La'Shia's publicist inviting me. She called shortly after we had dinner together when it hit the news. Eric had to head back to New York.\" He paused to take a breath. \"As proven, news travels insanely fast in this town, so I wanted you to hear it from me first. I was... indiscreet last night when I was speaking to the studio exec who turned us down. He called me shortly after I left the restaurant. Someone called him to tell him who I had dinner with. He said some rude things and I got angry,\" Phil said uneasily. \"I might have mentioned you were considering backing the project.\" \n\nBen was truly amazed at how quickly the grapevine functioned here. He waited for the actor to continue, but that seemed to be it. Phil was watching him nervously for a reaction. Ben let him off the hook. \"I don't know what that means, but it doesn't seem like a big issue to me. When I said I wanted to be a silent partner, I just meant my name shouldn't appear on the final product or be used in any marketing. I hope you can restrain yourself from blurting my name in anger in the future,\" he said with a smile and saw the tension drain away. A smile reappeared on the actor's face. \n\n\"Should we hug it out?\" Ben asked with a grin. \n\n\"I'm good!\" Phil said holding up his hands as he grinned. \"Besides, I'm already getting a crazy number of calls since that report on us dining together. If people heard we hugged, I might have to get a new unlisted number!\" \n\nBen shook his head in wonder. \"I don't get it.\" \n\nPhil leaned in to speak privately with a grin. \"They think I have an inside line on the mysterious Ben Shepherd.\" He glanced back at the group he'd been speaking with and saw a few frowns sent in his direction. \"To defuse that, why don't you come to meet some of my colleagues before they lynch me.\" Ben sighed and nodded, following the actor over to the waiting group who were all trying to appear cool and relaxed. Phil looked over his shoulder at Ben and snorted. \"Actors.\" \n\n-=- \n\nIt was getting late in the evening, and some of the crowd was leaving which was ok with Ben because his cheek muscles were getting tired from all the smiling. \n\nHe caught a glimpse of the Sergeant as she patrolled the room, watching for threats. He'd seen a few men approach her, likely in an attempt to get to know her but each time she'd quickly scanned them with her eyes and moved on without a word. The effect this had on the men was both amusing and painful to watch. So far none had gotten angry, and he hoped none did, for their sake. \n\nHis mind went back to earlier in the evening when the twins rescued him from a dull conversation to guide him out on the dance floor. He'd enjoyed that, especially when Tina and Lucy joined them. Ben got to dance through some songs, enjoying the excitement on their faces until he left the dance floor to get some water, only to be captured by another group eager to talk with him. \n\nAfter a short time, he managed to slip away from the group and headed over to the far edge of the property to look out over the city below. The view was lovely, and Ben took a few deep breaths of the evening air to center himself. \n\n\"Mr. Shepherd?\" \n\nBen considered pretending not to hear, but the accent caught his attention. He turned to look back at the source of the question. \n\nStar of the big screen, song and dance man extraordinaire, and heart throb to millions, Lawrence Manning smiled as he approached Ben and held out a hand to shake. Ben gripped and shook it. \n\n\"Hello, Mr. Manning.\" \n\n\"Please, call me Lawrence,\" he offered with another charming smile. \n\n\"If you call me Ben.\" \n\nLawrence nodded to him. \"Ben, I heard you met with Dwayne Johnson. He's being offered the lead role in a movie about you.\" \n\nBen looked the man in the eye and nodded. \n\n\"It's being said that you're endorsing him as-\" \n\n\"No. I spoke with the man. I shook his hand, as I shook yours. That's all,\" Ben said firmly. \n\nLawrence gave him an evaluating look then nodded. \"Fair enough. All cards on the table, I've been offered the role as well. If they want to make another action hero movie though, I'll bow out.\" \n\n\"Have you seen the script?\" Ben asked, anxious to know just how much of his life they were going to expose. \n\nThe actor smiled. \"Not yet, but even if I had, I couldn't tell you anything about it. Not if I wanted to work in this town again.\" \n\nBen nodded as he realized a non-disclosure agreement made sense. ",
        "\"Haven't the studios spoken with you about it?\" Lawrence asked. \n\nBen shook his head. \"No one's approached me about a movie and, if they did, the answer would be not interested.\" \n\nThe Aussie's eyebrows went up; then he leaned closer with a sparkle in his eyes. \"What if it was a musical?\" \n\nBen snorted in amusement then the smile slipped away as he realized the actor was serious. Finally, he shook his head and walked away. \"Have a good evening, Mr. Manning.\" \n\nHe made his way back inside and went through the gauntlet once more. He fielded a few offers for visits to private tropical islands, guest appearances on TV shows, bit parts in movies, and even one bid for a wild night of passionate sex. He turned down that fellow as quickly and gently as he could. \n\nHe'd gotten to dance with Trish and Catherine a few times as well, but mostly they were caught up in conversations with Mr. DeMonte and Killah D's crew or one of the other men in attendance. Maybe they were celebrities. The ladies were certainly smiling a lot. \n\nFrom La'Shia, he'd only received the briefest of attention. A kiss and a hug shortly after he'd arrived then she was off. Even Brooklyn was keeping her distance. Tilisha became scarce as well. They seemed to be watching for someone, but he couldn't tell who it was. \n\nAs the night progressed, Ben began to wonder if he was going to teach them any dance moves. When he was out on the dance floor with one or more of his party, he was letting the beat move him without using the skills he'd learned. \n\nComing back to the present, he walked to the bar for another bottle of water. He saw Phil DeMonte preparing to leave so he walked over to shake his hand again. \n\n\"We're good?\" the man asked Ben, with just a hint of anxiety. \n\n\"What?\" Ben replied in confusion then recalled his concerns from earlier in the evening. He smiled and pulled Phil into a hug and patted his back. When he stepped back, he grinned at the surprised look on the actor's face which quickly became a smile. \n\n\"I knew we should have hugged it out earlier. You feel better now, don't you!\" Ben said. \n\nPhil looked up at him and had to nod. \"Actually, I do.\" His eyes caught the motion of some of the guests taking videos of them. \"Shit.\" He gave Ben a crooked smile. \"I have a couple of meetings with potential backers in New York, but if that doesn't pan out, I'll give you a call?\" \n\n\"Sounds good! I wish you luck with your contacts in New York. Maybe this stupid attention in the news will do some good this time and make them take your project seriously,\" Ben replied. \n\nPhil laughed and waved as he headed out. Ben turned back towards the bar. \n\n\"Fuck. You don't like the attention?\" \n\nBen stopped to look at the woman who asked the blunt question. She was pretty with light brown skin showing a number of odd tattoos. A fair amount of expensive jewelry was on display as well. Her eyes were glassy, so he guessed she'd had a few drinks. \n\n\"No, I don't.\" \n\n\"What the fuck are you doing here then? What the fuck am I doing here?\" she grumbled, and he realized she was talking to herself. With a final look of distaste, she turned and stumbled away. A man glided up to her side, and the two walked from the room. \n\nNot long after she was gone, La'Shia was at Ben's elbow at the bar. Brooklyn rushed up to her side. \n\n\"They just drove away. They're finally gone,\" the choreographer sighed in relief. \n\nLa'Shia looked at Ben. \"I'm so sorry I was acting so cold all night. We couldn't let Arialla see how important you were to us! She couldn't be allowed to see your dance moves. She'd steal them for herself.\" \n\n\"Oh! Why did you invite her to the party then?\" Ben asked in surprise. \n\n\"I didn't. She crashed it,\" La'Shia growled as she thought of her nemesis. \n\n\"Killah and his crew are ensuring the rest of Arialla's people have left,\" Brooklyn said. Just then, the big man walked through the entrance way and nodded to his woman. \n\nBen shook his head in disbelief. This was drama beyond his comprehension. \"Are you ready to do it now?\" Both ladies grinned excitedly and nodded. \"Where are we going to dance?\" \n\nLa'Shia pointed to the space he'd been dancing on all night. He noticed the crowd had diminished significantly. Perhaps Arialla began the exodus? That and Killah's purge. He spotted the faces of a few celebrities Phil had introduced him to earlier and some remaining music types, so he was going to have an audience. He shrugged that thought away. \n\nThe excited singer took his hand and led him onto the floor as she raised her hand. The music faded to silence as a spotlight focused on them. \n\n\"If I could have your attention, please! Could everyone move to the outer edges of the dance floor? We have a special treat for everyone,\" she said with an excited smile. \n\nKillah's crew was moving to the four corners of the big room with high-resolution video cameras on tripods. They weren't taking any chances of missing any of the action this time. \n\n\"Can I see the playlist? There are some songs I... won't dance to,\" Ben asked. She looked at him in surprise then walked him over to the DJ's booth. La'Shia asked to see the playlist, and the man turned his laptop's screen towards Ben who read through the list. As his eyes went down the screen, his mind picked up the titles with little jumps of his heart. He stopped on one as the pressure was too much. He turned his eyes to the DJ. \"Please don't play this one,\" he said pointing to the song. The man looked to La'Shia, and she nodded, so he removed it from the playlist. \n\n\"Are you ok?\" La'Shia asked Ben as he closed his eyes for a moment. He opened them to look at her and nodded with a slight smile. He gestured for her to return to the center of the floor. \n\n\"For the first dance, your partner will be Tilisha, if you don't mind. She danced with you to this song,\" La'Shia said as she nodded to the lovely woman waiting for Ben. \n\nHe nodded and walked out to meet her. When he stood before her, he could see she was trembling slightly. \n\n\"Deep breaths,\" he teased gently. \n\nHer responding smile was huge and lit up her face. The first notes of Lena Horn's Stormy Weather began and Ben took Tilisha's hand in his as his other rested on her hip. A shiver ran down her spine to feel his big hand on her. \n\nThen they were moving, and she had no time to think of anything. She was watching his face, and his eyes had a dreamy quality to them. Once more she naturally flowed with his motions and felt herself becoming light as air in his arms. The dip took her by surprise again, but her heart soared. His hand on her lower back shot tingles throughout her body. She gasped, then she was back on her feet once more, momentarily braced against his large frame. Sparks flew between her intimate places as another gasp was pulled from her, then the dance continued. \n\nThey moved slowly, sensuously, swirling and gliding across the floor effortlessly. Then, as the song reached its end, he surprised her by lifting her against his chest, his mouth almost brushing hers as her eyes widened and locked on his, seeing the heat there. Her lips tingled with her need to feel his kiss. Before she could, he spun gracefully to set her back on her feet, stepping back as he bowed over her outstretched hand, his lips poised to caress its back but never quite touching. \n\nThe guests burst into enthusiastic clapping and cheering as the spell was broken. \n\nTilisha gaped at Ben as he seemed to come back to himself. \"You- you didn't dance like that at the resort. I mean, you did, but there was much more heat to it this time.\" She touched her lips unconsciously. They were still tingling even though he hadn't actually kissed her. \n\nHe held her eyes with his as he thought about that. He realized it made a certain sense to him. Now, he was more aware of bringing those skills to the front of his mind. Before, he'd just been reliving the moment from the perceptions of a twelve-year-old Ben. \n\n\"I'm... different now.\" It was all he could say. \n\nLa'Shia joined them out on the floor, and she was grinning excitedly. \"That was beautiful!\" She glanced at Tilisha and saw something in her eyes. \"What? What's wrong? That looked perfect!\" \n\nThe dancer glanced at her boss and smiled faintly. After a deep breath to calm herself, she fixed her eyes on La'Shia's. \"Yes, it was. Better buckle up, baby. This ride ain't for kiddies anymore.\" \n\nShe prowled off the dance floor, enjoying the deep tingle running through her body. \n\nLa'Shia blinked at her dancer then put the odd words out of her mind as it was her turn. She smiled at Ben. Julie London's 'Cry Me a River' began and Ben glided forward to take her hand in his. Then she was pressed against his body, and they were moving. She was once more thrilled to experience their perfect synchronicity. Quicker than last time, she was able to match her motions to his until it felt like Ben was controlling both of their bodies. \n\nThey swept across the dance floor dipping and swaying to the sultry voice, and La'Shia began to feel a little faint. Her breath was coming in gasps, yet her steps never faltered. Ben guided her effortlessly and smoothly as they moved together. She bit her lip as she realized she was getting turned on. She never wanted the song to end, but she was becoming desperate for a release. Ben wasn't blatantly grinding himself against her as they danced. It was subtle touches of his hip or thigh to hers, his hands touching her. He dipped her, and for that glorious moment, his pelvis was pressed tightly against hers and bliss flared in her body. Then she was pulled close, her breasts squeezed against his muscular chest, and she felt her nipples stiffen with the tingles coursing through her. He spun her then slowly dipped her again, almost to the floor. The pressure against her pelvis caused her to moan and bite her lip as her eyes fluttered closed. He lifted her, and she felt the hint of his lips close to hers then her eyes opened to see him stepping back from her slowly. She blinked in confusion as the thunderous applause rolled through the room. Her hands were clasped together before her as her arms squeezed her tits. This also hid the visible points of her nipples pressing against the fabric of her slinky dress. Fuck, she was so turned on! SO close too! But the song was over. \n\nBrooklyn joined her on the floor, giggling with glee. \"Holy fuck, that was sexy! Kind of old school but hot!\" \n\nLa'Shia nodded, but she couldn't speak, and Brooklyn finally caught on as she saw the heat on her friend's face. She looked over to Ben. \"Did you-\" \n\n\"NO! Uh, no, he was a perfect gentleman... but there was something in his dancing this time.\" Her eyes found Tilisha's looking back at her from the side of the room, and they nodded to each other. La'Shia understood now. \n\n\"Are we done? Did you get what you needed?\" Ben said, his voice a deep rumble as he calmed himself. \n\nLa'Shia squeaked as she turned to look at him. Brooklyn gave her friend a closer look then turned to Ben. \n\n\"Where did you learn to dance like that? The economy of motion. No wasted movements, yet such elegance, grace, and so much passion... I've never seen anything like it!\" Brooklyn exclaimed to Ben. \n\nHe looked to the two women, and his smile cracked a little as his heart remembered the loss too sharply. He pushed the pain down and looked into Brooklyn's eyes. He imagined how it might have been if a young dancer from France had been able to live her dream of stardom as La'Shia had. The injustice of Marguerite's anonymity and the brutal extinguishing of her bright promise cut through him. He felt the need to do something to repay the debt he owed the woman. \n\n\"Her name was Marguerite Durand. When I met her as a young boy of twelve, her name was Margaret Cosburn. She was my foster mother and the most beautiful woman I'd ever met in my life. It wasn't her looks that captured your eye. It was how she moved. Every step she took, every gesture she made, was an exquisite celebration of motion.\" He sighed. \n\n\"She'd been a young dancer in France, just beginning to spread her wings when the war came. She was forced to flee her country. To get on a ship bound for the states, she married a man she didn't know. Her new husband was a jealous brute who forbid her the one thing that gave her joy. So, she learned to dance with every movement. I'd never seen anything so graceful, yet so sad. One day, when she thought she was alone, I saw her dancing. It took my breath away. She decided to teach me in secret. I was beginning to grow into my current size and was awkward... but not with her. She reached something inside me that was able to match her movements. We danced every day. It was exhausting, yet so exhilarating. She pushed me to learn everything she knew... until one day, I did.\" \n\nBen's throat closed up with the pain of his memories. Tears ran down his cheeks, unfelt. \n\n\"What happened?\" La'Shia asked, and fresh pain ripped through Ben's heart. \n\n\"He killed her.\" \n\nThe women gasped. \n\n\"Drunk. Jealous. Vicious bastard. He beat her to death with his fists. Just because she wanted to dance,\" he growled. \n\nCatherine was suddenly at his side and pulled him into a tight hug. \"Enough!\" she said, head turned to face the two women. Her voice sounded too loud in the now silent room. \n\nBen hadn't realized he'd had everyone's attention when he'd told them of Mrs. Cosburn. \n\nCatherine led Ben off the floor into the arms of the other women waiting for them. \n\n\"I have to get past this,\" Ben said quietly to Catherine as his muscles trembled with unspent adrenaline. His reactions felt exaggerated and overpowering, like those of a twelve-year-old. \n\n\"You don't need to do it here and now. Take your time,\" Cat replied gently. \"Maybe you should speak with Dr. Granger again when you get home,\" she said, and Tina held his other hand. \n\nHe nodded. \"I think I'd like to head back to the hotel if it's ok with you. You're welcome to remain at the party-\" \n\nHis friends loudly set him straight on that. They went where he went. \n\nHis emotions were off the rails, so he pulled them in for kisses which they returned with love. \n\nIn his emotion-driven confusion, he found himself planting a solid kiss on the surprised lips of the Sergeant who'd approached to find out what was happening. She didn't resist, but her face went bright red when he released her from the hug. \n\n\"Oh my god! I'm so sorry!\" Ben blurted after he realized what he'd done. \n\nEvelyn couldn't speak, so she just shook her head as she touched her lips which tingled madly. Her eyes were locked on Ben's lips as he'd taken her first kiss! Her body felt so hot, yet she was shivering! \n\n\"Are you ok?\" Ben asked gently, and she nodded rapidly. \"We're, uh, going back to the hotel now.\" \n\nTina was on her cell ordering the stretched limo as he spoke. \n\nLawrence Manning approached Ben once more, this time with a determined expression. \"Sorry to interrupt but after what I just witnessed, I'm convinced we should insist the studio makes your movie a musical. I would love for you to teach me how to move as Madam Durand taught you! That was truly inspiring!\" \n\nBen scowled. \"It's not my movie! I don't want to be involved in any way! I'm also not a dance instructor.\" \n\n\"Told you,\" Ron Leopold said as he walked up to their group. Another of Hollywood's hottest and sexiest leading men and a friend of Lawrence, he turned to face Ben. \"I'd still like to offer you a role in my next movie. You could play someone whose super power is...\" He looked deeply into the Sergeant's eyes, his voice deep and sexy. \"...he loves too much!\" \n\nHer face threatening to burst into flames, Evelyn stiffly marched away towards the front door. \n\nBen looked at the actors in frustration then moved to follow the Sergeant. The ladies went too, glancing back at Lawrence's unhappy frown and waving to Ron who grinned and waved back. \n\nLa'Shia and Brooklyn rushed to meet them at the front door. \"I'm sorry, Ben! I had no idea!\" \n\nHe turned to the singer and her choreographer and sighed. \"I know. It's ok. The memories of... that night, of all of it, were buried deep in my mind for so long. Decades. When they finally came out, it felt like it just happened. The pain hasn't had time to dull. Again, not your fault. Thank you for inviting us to the party. We had a lovely time.\" \n\nLa'Shia kissed him on the cheek as did Brooklyn. Their eyes still looked sad. \n\nBen shook Killah's hand when the rapper came to see him off. \n\n\"It was good to see you again, Ben. Don't be a stranger,\" the big man said to him. \n\n\"It was great seeing you too. Same goes for you. If you ever want to escape from under the microscope and get a little peace and quiet, you're welcome to visit us,\" Ben responded. \n\nThe rapper laughed and patted him on the back as they stepped outside. The limo was waiting, so they piled in and, with a final wave, headed back to the hotel. \n\nWhen they got back, they went up to the rooms and ensured the proper distribution of their purchases. Ben gave everyone kisses good night, except the Sergeant who beat a hasty retreat to her room. He shared a look with Trish as she followed Evelyn. \n\nLisa and Lori took his hands when they closed the door to their room. \n\n\"If you'd rather have Catherine with you tonight, we'd understand,\" Lori said. \n\nBen froze and looked into their eyes. Both were hiding their nervous expressions. This wasn't good! His earlier sadness and melancholy was wiped away by a wave of distress. \"Where did this come from?\" \n\nLisa squirmed. \"Catherine was the first one to recognize you were having an emotional reaction to the dancing. She came to your aid first.\" \n\nBen stepped closer to them and wrapped his arms around them pulling them tight to his chest. They rubbed their faces against him. He knew what he had to do to restore their confidence. \n\n\"I love Catherine. I love you. I recently told this to Tina and Lucy, and I'm telling you as well. You're mine, but I'm yours too. Let's get ready for bed.\" \n\nHe released them after giving them each a kiss, and they went to their bags to collect their sleepwear. Ben undressed and folded his clothes as he went. He left his black silk boxers on as they would suffice for sleeping. The twins had disappeared into the bathroom to dress and brush their teeth but returned shortly in sexy white satin baby doll nighties. They purred when they saw Ben's choice of sleepwear. \n\nBen approached them and ran his hands over the smooth fabric as he smiled approvingly. He stepped into the bathroom to brush his teeth; then he joined them in the bedroom. The ladies were sitting on the bed, and he noticed they'd added collars to their outfits. They were white leather straps with silver metal loops on their front. He wondered if his claiming them as he had anything to do with this. They were smiling at him as they'd noticed his attention on their necks. He prowled closer, and he saw them tremble with excitement. He stood before them and admired their beauty for a moment. \n\nThen he reached out to grip the loop on Lisa's collar. She made an involuntary happy squeak and looked up at him in amused embarrassment. Ben pulled, and she moved to follow, but he tugged down, so she had to move to her knees before him. He released her collar and stood tall before her. \n\n\"Pull them down.\" \n\nLisa's eyes flicked up to his then back down to his underwear. She slipped her fingers under the waistband and tugged them down to his ankles. His adolescent-minded cock was already waking for a little fun. \n\nLisa's eyes locked on the movements of his heavy cock. \n\n\"Take me in your mouth.\" \n\nShe immediately moved forward to begin licking the length of him. Ben rumbled his approval, and she slid the head of his cock between her lips and into her mouth. ",
        "\"Ahhh, yes. That feels good, Lisa. More.\" \n\nShe was already beginning to pant with her excitement as she forced more and more of his cock into her hot wet mouth. \n\nBen looked to Lori who was fidgeting on the bed. She looked at him eagerly. \n\n\"Come here.\" \n\nShe was immediately off the bed and kneeling next to her sister. \n\n\"No, up here,\" Ben directed. \n\nShe looked up in surprise then stood. He immediately took hold of the ring on her collar with his left hand and pulled her in close for a kiss. She softly moaned as he caressed her lips with his. When his right hand slid down her back, she sucked in a sharp breath. His fingers slipped under her panties and continued down to discover the jeweled top of the butt plug she was wearing. \n\nLori's eyes watched him for his reaction, and he smiled as he gently pressed on the toy. \n\n\"Oooo fuck!\" she moaned gently. \n\nBen's lust was surging as Lisa struggled to get more and more of him inside her throat. He took a grip on her hair and began to fuck her mouth slowly. She clung to his ass and pulled with every stroke into her mouth. \n\nLori was trying to drive her tongue deep into Ben's throat as his fingers dipped into her pussy while he rocked the toy in her ass. Her body was trembling as she approached her release. \n\nLisa suddenly surged forward, and Ben's cock slipped past her mouth and pushed deep into her throat. She made an odd squeal sound around the obstruction but her nose pressed against Ben's stomach. \n\nHe pulled back from kissing Lori, and they both looked down to see Lisa choking on his cock. Lisa's hand was rubbing her clit in frantic circled as she came. \n\nBen pulled himself completely clear of the woman's mouth. She gasped in a deep breath as if starving for oxygen then wailed through the final surges of her orgasm. Lisa continued to cling to his ass, leaning her cheek against his hip as she came down from her high. When she finished, Ben eased his fingers from her sister's wet depths and sucked them clean as he stared into Lori's eyes. She moaned softly. \n\n\"Lie down on the bed. Remove your panties,\" Ben said to Lori, and she moved. \n\nBen lifted the spent sister and carried her to the bed, gently setting her down before slipping her panties off as well. Lisa's eyes opened as she gazed down at him. When his mouth fastened onto her pussy, she cried out as her last orgasm had just waned and she was still sensitive. Thick fingers drove into her pussy, and her cries went silent as new bliss crashed through her mind. Ben gave her no mercy as he teased her ass with the toy filling it, finger fucked her quivering pussy, and thrashed her outer lips and clit with his tongue. \n\n\"FFFFUUUUCCCKKKK!! Lisa finally screamed as her muscles locked up. When Ben eased back, she flopped to the bed, eyes closed as she panted, her muscles trembling in the afterglow. \n\nLori watched her sister's return to Earth with wide eyes. She heard a noise and saw Ben returning from the washroom. She hadn't realized he'd left. Her eyes dropped to the heavy cock bobbing between his legs, and she knew that was for her. She softly gasped as he crawled up the bed to position himself over her body. She eased herself back down onto the mattress, and he lowered his face to kiss her tenderly. She was surprised there was no taste of her sister on his lips. He'd taken a moment to freshen up for her! Her passion for the big man swelled in her chest, and she eagerly pressed her lips to his. \n\nShe felt his hard cock begin to press down on her pussy and she gasped into his kiss. Rocking his hips, he slowly ground himself up and down against her, transferring her slick wetness to his cock, stoking her fires. It felt too good! It was such a tease! She tried to move her hips to bring the head of his cock down to her hot opening, but he slipped away each time. \n\n\"Fuh! Please! Please, Ben! I need it. Put it in,\" Lori begged. \n\nOn the next stroke, Ben pulled back the extra inch and the thick head slipped down to press against her lower lips. \n\n\"AH! Ah! Oh! So hot!\" she sighed. Then her jaw dropped open as she felt Ben slowly forcing her open in tiny strokes. Her brows dropped as she concentrated on the sensation. She was having a little difficulty getting him inside this time. Was he thicker? Her eyes shot to his. \n\n\"Sorry, just a little over-excited tonight,\" he said softly. \"We don't have to-\" \n\n\"Yes! Yes, we do!\" she insisted as she wrapped her arms and legs around him. This position allowed him a little more room for his hips, so he began a little rolling motion that stirred her insides with his cock. \"Oh fuck yes!\" she squeaked, drawing a smile from Ben. \n\nIt took some time for Ben to give her his entire length. \n\nLori was clutching at him and biting her lip as sparks shot through her abused flesh. She felt so incredibly full, yet she needed more of him. She was desperate for it! When he finally came to rest on her, he continued to rock his pelvis but now the motion was directly teasing her clit, and her jaw dropped as she cried out. \n\n\"Oh fuck! Oh yes! Like that! Fuck! So- Oh fuck! I- I'm close!\" \n\nBen looked at her in surprise. She was close? For all his over-excitement, he still had a ways to go. He smiled at the look of bliss on the beauty's face. So be it. He continued the rolling motions and listened to how her breath was catching on each roll. He increased his speed slightly on each rotation, and this did the trick for her. \n\n\"Omigod! It's here! I'm- Fuck! CUMMMINNGGGG!\" she cried as her muscles went into quakes. \n\nBen pressed her down against the mattress, and she hissed in a breath as the pleasure peaked. When he sensed her trembling was slowing he eased the pressure until he was able to slip his hard cock from her body. \n\nLori was spent and mumbled something incoherent as her eyes closed. \n\n\"You're still hard?\" \n\nBen glanced over to Lisa who was watching his cock bounce with his pulse. \n\n\"It's ok; it will go away.\" \n\n\"NO! I mean, I want it inside me. I need to feel it,\" she said breathily. \n\nGlancing once more at Lori's peaceful expression, he saw she was out for the night. \n\nBen eased himself across the bed and Lisa smiled up at him. He leaned down and kissed her, tasting her tongue in his mouth. She was pretty excited. \n\nWhen he pressed his cock against her pussy, she moaned and rocked under him. He picked up that motion and soon they were rubbing each other almost feverishly. \n\n\"Please! Put it in!\" Lisa begged. \n\nBen eased back, and Lisa reached between them to guide him to her opening. He sighed at the feel of soft lips caressing the head of this cock. Then he pushed forward, and she grunted. \n\n\"Fuck! You're thick!\" she exclaimed. \n\nHe froze. \"Too much?\" \n\nShe shook her head. \"Give it to me. You know what I need.\" \n\nBen smiled with a nod. He pushed forward and Lisa's mouth opened in an O of surprise. He pulled back and slammed forward again and again until he was all the way in. Then, with a final glance at Lisa who nodded to him, he began to pound his cock into her faster and faster. She clung to him with all her strength, a constant stream of whispers coming from her lips. \n\n\"Fuckmefuckmehammerme! Ohfuckthat'ssogood! Yesyesyes- fuckmefuckmefuuuuckkkmmmeee!\" \n\nHe was getting close quickly, and her chanting was fanning those flames. \n\nShe was bouncing on the mattress under every thrust and hit her release just moments before Ben's exploded within her. He gasped as his body fired stream after stream of heat into the panting redhead's depths. \n\n\"Mmmm, that feels good!\" Lisa purred, closing her eyes and basking in her pleasure. \n\nBen eased himself off and settled onto the mattress between the sisters. They cuddled in, and he kissed them both. \n\nHe saw their faces no longer held any of the nervousness they'd shown earlier and he was grateful for that. Those emotions might have led to something far worse. \n\nJealousy. \n\nChapter 11 \n\nThe twins were moving a little slow and seemed dreamily distracted at breakfast. Trish took the opportunity to tease them unmercifully until Ben asked her to stop. \n\nThe Sergeant was quiet but took this in with wide eyes. She kept glancing at Ben in confusion until he decided enough was enough. He stood and walked to her chair. \n\n\"May I speak with you in private for a moment?\" he asked her quietly. \n\n\"Yes, sir,\" she responded automatically. \n\nBen sighed internally. \"You don't need to call me sir. Ben is fine.\" \n\nShe gave him a nervous glance, so he led them a few tables away from the other diners. \n\n\"Serg- May I call you Evelyn?\" he asked quietly. \n\nShe nodded. \n\n\"Evelyn, you seem to have become uncomfortable around me. Especially when I'm affectionate with the women in my life. Maybe you have questions-\" \n\n\"How many?\" she immediately blurted. \n\nBen blinked at her in surprise. \"Oh, uh, well there's,\" He paused to think about it for a moment. \"...eight women I consider myself currently in a relationship with. A few others have... expressed an interest in occasionally sharing my bed. I typically turn down such offers as I have a difficult time with casual encounters. I get emotionally involved too easily.\" \n\nHer hand went immediately to her mouth. \"You kissed me last night!\" she squeaked. \n\nHe smiled and gestured for her to be calm. \"That was just a mistake brought on by my being a little overwhelmed emotionally.\" \n\n\"Oh,\" she said with a subdued tone. \n\nBen looked closer at her. \"Did you think-\" \n\n\"NO! I didn't! Me? That's silly! I'm your security detail and your admin assistant! Anything more would put the first two at risk!\" she asserted forcefully. \n\n\"Ah! Ok, good,\" Ben said, relieved for once. \"So you understand that I may show physical displays of affection to these women and why?\" \n\n\"Yes, but-\" she looked uncomfortable once more. \n\n\"But?\" \n\n\"How? How are you able to manage multiple, intimate interpersonal relationships successfully? I haven't been able to manage one!\" Her face flashed to red, and her eyes went wide in embarrassment once the words were out. \n\nBen couldn't prevent a smile from reaching his lips. \"The truth? It's them. It's the amazing women with whom I've fallen in love. They know I love them. Completely. If they weren't secure enough to accept that and discard all notions of jealousy, then it would all come crashing down. So the success is entirely on them.\" His smile slipped a little as his gaze focused on nothing. \"There are times, like now, when it hits me how unworthy I am to have so much love in my life. I can only do my best to let them know how grateful I am.\" He gave himself a little shake then flashed a weak smile at the Sergeant as he realized he'd overshared. \"Does that answer your question?\" \n\nShe nodded. \n\n\"Again, my apologies for the uninvited kiss last night. I'll try to keep a tighter rein on my emotions in the future,\" he said contritely. \n\n\"It's ok,\" she said quietly. \n\nShe didn't seem happy, but Ben didn't know how to address that. With a nod, he headed back to his seat but only managed a few steps when his cell rang. He glanced at the screen and saw it was his lawyer. \"Good morning Walter! What's up? How's Daphne?\" \n\nThe man chuckled at the last question as Ben was their matchmaker. \"Good morning to you. Daphne is completely delightful. We're going to a comedy club tonight.\" \n\n\"Great to hear!\" Ben said with a satisfied smile. He wanted to see both of his friends happy, and they were such a good match. \n\n\"As for why I'm calling, I received a call from the manager of the shipping container storage facility demanding you come to the site as soon as possible as the authorities want the container you had shipped from Australia opened in your presence. The DEA and the FBI intend to have agents on site for the opening. The late Mr. Hahn is attracting a lot of attention.\" \n\nBen scowled as he didn't need this kind of attention. He knew it was likely fallout from his visit to Russia. He sighed as he rubbed a hand over his face. Concerned eyes at his table turned in his direction. \"Where is the facility?\" \n\n\"In San Francisco. I'll send you the address,\" Walter suggested. \n\n\"That's not too far away, I suppose,\" Ben grumbled. More concerned looks from Tina. \n\n\"Can you go today?\" Walter asked. \n\nBen looked to the table and saw everyone was looking back at him now. The plan was to do more shopping today, but he supposed he could slip away to do this. He sighed. \"Yeah. I need to arrange a flight there and back. Our jet won't be back to LA to pick us up until tomorrow. I'll do that and call you back with the itinerary.\" \n\n\"That's great! I'll wait for your call,\" Walter said with a smile in his voice. \n\n\"Enjoy the club tonight and give Daphne a hug for me!\" Ben said. \n\n\"Will do! Bye, Ben.\" \n\n\"Bye, Walter.\" \n\nHe finished walking to the table and let himself drop into his chair. \n\n\"What did Mr. Greyson want?\" Tina asked anxiously. \n\n\"Just another nuisance courtesy of Rainor Hahn. The shipping container of all his stuff from the condo in Australia is in a storage yard near San Francisco. The authorities want it open as they believe it contains contraband. It very well might. I wasn't there when it was packed up and shipped here. We now know he was a criminal, involved with some of the worst people.\" \n\n\"His dirty shit isn't going to stick to you, is it!\" Trish asked in concern. \n\nBen grimaced at her choice of words. \"No, I have an alibi for the time this stuff was packed and shipped,\" he said shaking his head. I'm going to arrange a quick flight there and back, but it looks like you guys are on your own today. I'll be back this evening.\" He looked to Tina and Lori. \"You still have the bank cards, yes?\" They nodded. \"That should cover any purchases you make. Keep any other receipts, and I'll settle up when we get home. Sorry to do this but Walter indicated it was important and I'm close enough.\" \n\n\"Who's going with you?\" Tina asked. \n\n\"I am,\" Evelyn said immediately. \n\nBen smiled and nodded. \"Evelyn will.\" She smiled. \n\nThey finished having breakfast as Ben made a few calls. The jet service had no planes in the region, but he arranged a charter for Ben. He called Walter and let him know when he expected to be there. \n\nThen he wished the ladies luck, gave them kisses, and hopped into a taxi with the Sergeant to head off to the airport. \n\nBen found the charter jet service and they were ushered on board quickly as they had to meet their departure window. Ben looked around and realized how much more luxurious Sky Shepherd was. He wondered if Dennis had purposefully selected this charter company as it made his fleet look so much better. He smirked to himself. He wouldn't put it past the man. \n\nThe flight was short, and the pilot was aware that they were to wait on Ben for the return flight to LA. He and Evelyn grabbed a taxi and gave the address of the shipping company. They settled back and watched the scenery. \n\n\"Have you been to San Francisco before?\" he asked Evelyn. \n\n\"No, sir- Ben,\" she said correcting herself at his raised eyebrow. \n\n\"Me neither. Looks like an interesting place. Maybe next time, I'll arrange to stay a few days.\" \n\nShe nodded and looked out the window. \n\nThe drive only took twenty-five minutes to get them to Oakland. The driver left them at the front door of the low rise building with the company logo above the door. \n\nThey went inside, and he spoke to the receptionist, gave his name, and the woman asked them to take a seat. \n\nForty minutes later a heavyset bearded man in a wrinkled suit with a clipboard in his hand walked into the waiting area. Ben looked up from his cell when he heard the man call out his name. \n\n\"That's me,\" Ben replied as he walked towards the man, the Sergeant following. Ben saw a name tag on the man's jacket. It said Mike. \n\nThe shorter man looked up at Ben then glanced to the soldier at his elbow. \"I need to see some ID,\" he mumbled, so Ben showed him his driver's license. \n\nNodding, Mike gave it back then handed Ben a pen. \"I need you to sign here as permission to open the container.\" \n\nBen signed the form and handed the pen back. The man used it to tap his name tag. \"Name's Mike. Please follow me.\" \n\nThey went through a door next to the receptionist then down a long hallway to a back door, stepping outside. There was a large white storage container a short distance away with a group of people waiting by the doors at its far end. Ben's eyebrows went up as he counted at least a dozen. He knew the DEA, and the FBI would be on site, but he'd only expected one representative of each. \n\nWhen they approached the group, three people stepped forward and glanced at each other; two women and a man. Only one of the women was smiling, which made everyone else uncomfortable. \n\nA slim woman, blond hair in a blunt cut that reached her jawline, standing maybe 5' 9\", and wearing a dark blue suit, lifted her hand first. \"Agent Montrose with the FBI.\" Ben shook the hand. \n\nThe male agent had a stocky build but looked like he worked out. He immediately reached out to shake Ben's hand before the other woman could move. \"Agent Nelson, DEA.\" \n\nFinally, the third agent stepped forward and extended her hand. She was probably 5' 7\", attractive with sharp features, and dressed impeccably in a tailored wine-colored suit and white silk blouse. Her smile never faltered throughout the display of jurisdictional dick measuring. \"Agent Stephanie Russo, CIA.\" \n\nBen's brows rose in surprise. \"CIA?\" \n\nHer smile widened as the other two agents scowled. \"Yes. The press got pretty excited when you showed up in Los Angeles, so we expected these agencies to make a play for the late Mr. Hahn's items in the shipping container. And they did-\" \n\n\"Why are you here?\" Agent Montrose interrupted. \n\nShe turned her smile towards the other woman. \"In good time. I'm speaking to Mr. Shepherd now.\" She looked to Ben once more ignoring the angry snort from the FBI agent. \n\n\"Did you pack the shipping container behind us?\" she asked Ben. \n\nHe shook his head. \"No, that was arranged by Margaret Dawson, a lawyer in Sydney, months after I left. She also arranged the sale of the condo for me,\" he explained. \n\n\"Do you know what's in the container?\" she asked. \n\nBen looked at it then back to the woman. \"I expect the contents of the condo. I wasn't paying too much attention to the d\u00e9cor as Rainor had just died and Gretchen was in a precarious emotional state.\" He looked closer at the agent. \"What are these questions for?\" \n\n\"One final question I promise, then I'll explain myself,\" she said, and he nodded cautiously. \n\n\"When did you become aware that you were the sole heir to Gretchen Hahn's estate and she'd signed everything Rainor Hahn owned over to you?\" Agent Russo asked. \n\nBen frowned as a shot of pain went through him. \"After. After she was... After she died.\" \n\n\"My condolences,\" the woman said sympathetically. She turned to the two other agents and handed Montrose an envelope. \"I have a writ from the Supreme Court which protects Mr. Ben Shepherd from criminal prosecution based on items or information found within the effects of the late Rainor Hahn. Additionally, any items inherited by Mr. Shepherd will remain his property except for any illegal drugs or weapons which will be confiscated by the appropriate government bureau. So, aside from those two exceptions, everything inside this container belongs to Mr. Shepherd.\" She handed Ben a second envelope. \"This is your copy.\" \n\nBen stared at the envelope for a moment then slowly tucked it into his pocket as his mind spun. He was stunned by the implications of this... and damn curious why the CIA would have done it. Maybe cautious was a better word to describe how he was feeling at the moment. \n\n\"Can we get on with opening the container? I have other things to do today,\" Mike grumbled. ",
        "Agent's Montrose and Nelson were casting suspicious looks at Ben as they read the writ. \"Are you ready?\" Russo asked. They nodded and walked off with Mike to break the seal on the container. \n\n\"Why is the CIA doing this for me?\" Ben asked Russo quietly. \n\nShe smiled at him. \"You recently made some people in Washington very, very happy. The Agency... is returning the favor.\" Her smile became sultry as she panned her eyes down his body. \"Until we meet again, Mr. Shepherd.\" She walked back towards the building having delivered the writ. There was just a hint of sway in her hips as Ben watched, puzzling over her words. She glanced back, and her sexy smile returned when she saw his eyes were on her. \n\nBen gave himself a shake and shared a bewildered look with the Sergeant. They moved to the entrance of the shipping container where Mike gave him a frustrated glare before cutting the seal with bolt cutters. He took the broken seal and marched back to the building. \n\nMen from both agencies began removing items from the container as Ben stood next to Agent Montrose and Nelson. Ben noticed two agents were making a video of the items removed. \n\n\"Hahn like white leather and chrome,\" Nelson commented. \n\nBen snorted, and both agents looked to him. \"His Berlin condo was decorated with the same furniture. Cold and impersonal. Like the man.\" He didn't mention that furniture was destroyed. \n\n\"What are you going to do with this stuff?\" Montrose asked. \n\nBen shrugged. \"Donate it to charity, I suppose.\" \n\nSix flat crates were carried out and carefully opened. Inside were oil paintings. They looked like very old, oil paintings. \n\nAgent Montrose looked at Ben. \"Our records on Rainor Hahn indicated he might have been trafficking stolen art. These are likely stolen property.\" Her expression soured. \"Now, according to the spooks, they belong to you.\" The agent walked away to look in the other crates. \n\nBen wanted nothing to do with the stolen art. More and more Rainor proved he was a truly repugnant human being. \n\nHe thought about how he might reverse the evil that man brought to the world. He looked back towards the city as he had an idea. He pulled his cell out and did a little web search for museums in San Francisco. When he found one that sounded promising, he dialed its number. It was picked up on the third ring. He navigated his way through the answering service to a live person. \n\n\"Hello, I need to speak to a curator. I want to donate some paintings I've recently inherited to the museum,\" Ben said with a friendly tone. \n\nThe woman's voice on the other end was also friendly and promised to put one on. Two minutes later she returned and apologized for the wait and transferred the call. \n\n\"Hello, this is Valerie Desmond, a Senior Curator at the museum. Who am I speaking to?\" \n\n\"Hi, this is Ben Shepherd. I've recently come into possession of six-\" Ben stopped as he saw the agents carrying out six more crates from the container. \"Damn. Sorry, twelve paintings. I have reason to believe these are originals and may have been stolen from galleries or private collectors. The man who obtained these died and I inherited his estate. We opened the shipping container and found these paintings.\" \n\n\"Mr. Shepherd, we do not deal with stolen art! We will not purchase them from you!\" she asserted. \n\n\"I'm not looking to sell them. I don't want them, but they should be handled by someone who knows how to protect them. I know nothing about handling art. If it helps you, I have a writ from the Supreme Court of the United States indicating the property rights of the inheritance is legally mine, regardless of original state.\" \n\n\"How- how did you get the Supreme Court to do- Wait! This is a hoax, isn't it! I should have known when you said your name! Ben Shepherd? Really!\" \n\nHe sighed. \"Do you have a cell phone with video call capabilities?\" \n\nShe paused her blustering. \"I- yes.\" \n\n\"Take this number down and call me back with the video chat app on your cell. You'll be able to see me, and I can show you some of the paintings. How's that?\" Ben offered. \n\nShe was quiet for a moment as she considered. \"Not sure what you're trying here... but all right. Give me the number.\" \n\nBen said the digits and goodbye. He hung up and walked over to the row of painting crates. Montrose walked back to speak to him. \n\n\"Twelve paintings. That's all of them. Congratulations,\" the woman scolded. \n\nBen's cell made a weird warble, and he answered it to see the cautious gaze of an older woman in a dark jacket. Her expression changed immediately to shock. \n\n\"It is you!\" she gasped. \n\nHe smiled and nodded. He turned his body, so the FBI agent appeared in the shot for the woman. \"Yes it is, and this is Agent Montrose of the FBI who's with me at the storage container facility. Agent, say hello to Valerie Desmond, Senior Curator at the Legion of Honor Fine Art Museum. I've asked her to take a look at some of these to determine if they are possibly the real deal. I'd like her to accept them as a donation to the museum. They can show them while they try to find the owners. That seems like the right thing to do with this art, doesn't it?\" \n\nAgent Montrose looked like she'd swallowed her tongue and Ms. Desmond's expression was a close match. \n\n\"Let me show you some of the paintings,\" Ben said moving to one of the open crates. \"Evelyn, can you lift the paintings from the crates so I can show them to this nice lady?\" \n\nThe Sergeant moved into the picture and carefully lifted one after another so Ben could aim his camera at them. \n\n\"That's sufficient!\" Valerie called out, so Ben turned the cell back to his face to look at her flushed features. She seemed very excited. \n\n\"Did you recognize them?\" Ben asked. \n\n\"Oh my yes! Are you serious about donating them? They may be worth a sizable fortune!\" she breathed. \n\nBen frowned. \"I'm serious. If you want them, they're yours. You'll need to come get them as soon as you can.\" \n\n\"Oh! Now?\" \n\n\"Do you have a truck at the museum for moving art? I can text you the address. It's in Oakland,\" Ben explained. \n\n\"Oh! Oh! Yes! Uh, let me... I just need to arrange a few things! I can probably be there in an hour, two at most! Thank you, Mr. Shepherd!\" the woman exclaimed. \n\n\"Ben. I assume you have a receipt form for me to sign over the ownership to your museum,\" he suggested. \n\nShe nodded and beamed a smile at him then gave him her cell number so he could text her the address. \n\n\"See you soon, Ben!\" \n\n\"Thanks, Valerie! See you soon.\" Once he hung up, he hammered off the text. \n\nHe looked up from his cell, and Agent Montrose was watching him with a confused scowl. \"She just confirmed they're probably worth a fortune and you're giving them away?\" \n\nBen frowned in frustration at the agent. \"Which is it, Agent Montrose? You're disgusted with me for inheriting stolen art, or you're disgusted with me for not profiting from it?\" \n\nAgent Nelson was standing nearby and barked a laugh at the FBI Agent's frustration. The DEA agent walked over to Ben. \"No drugs or weapons found. No contraband at all. Nothing for us to do here.\" He looked back at the items they'd removed from the container. \"I know a great local charity if you were serious about donating the furniture and contents.\" \n\nBen was nodding when excited noises came from inside the container, and an agent rolled a dolly out with a filing cabinet on it. The agent looked to Montrose with a delighted smile. \"Ma'am! We've got documents showing Rainor Hahn arranged massive money transfers for Don Solerno!\" Montrose rushed over to look at the documents in the filing cabinet. \n\nBen recalled how thorough Rainor's files were. He kept notes on everything. Liliya had been right when she'd said she hadn't known Rainor well enough to understand him truly. She'd said that he didn't like paper records, but Ben knew differently. When he'd been looking for the man's will the day after Rainor died, he'd gone through a filing cabinet filled with extensive notes on investments and business dealings. If he was doing illegal business with this Don Solerno fellow, Ben didn't doubt every transaction would be carefully annotated. \n\nRainor had absolute confidence in himself. He knew he was smarter than everyone else. It was inconceivable to him that his files could be used against him. Considering he died before that happened, maybe that confidence was justified. He did manage to con some underworld figures successfully. \n\nAgent Montrose looked at Ben with her mouth open, but no sound came out. \n\n\"The files are yours. Take the cabinet too,\" Ben offered. The agent had the good grace to nod her thanks. \"Who's Don Solerno?\" \n\n\"Head of the East Coast crime syndicate. The Mafia?\" Montrose clarified for Ben's curious expression. \"To date, he's been untouchable. We got wind of him meeting with the heads of the other East Coast families. It was unprecedented cooperation with large capital transfers from each family to him but what their end goal was for that money was never discovered.\" She frowned as she looked at the documents. \"We need to get these files back to headquarters.\" She nodded to the agent who'd made the find. \"See if there are any other cabinets.\" \n\nBen picked up a couple of dining room chairs and set them down next to each other, out of the way of the working Federal agents. He gestured for the Sergeant to sit as well. They sat together and watched the activity. \n\nEvelyn leaned closer to speak. \"Why did you have to be here for this?\" she said quietly. \n\nBen smiled at her. \"I suppose the storage company might have needed my signature to let them off the hook contractually and the FBI agents might have wanted to press charges against me if they found illegal goods. My new friends in the CIA neatly handled that last reason.\" His smile diminished. \"Not sure how positive that relationship will prove to be. Hopefully, it's just a one-time thing.\" \n\nThe Sergeant nodded as she also had reservations about the benefit of being friends with the spooks. \n\nThey sat watching the agents move back and forth as they emptied the container. \n\nA large truck entered the yard behind them, and the agents stopped to see who it was. Ben got the impression that the FBI agents were feeling a little nervous now that they had their hands on what could be decisive evidence against this Mob boss.  \n\nAgent Nelson waved to the men and Ben saw Agent Montrose and her team relax. The DEA agent walked over to the truck and had them back it up facing the items removed from the freight container. Then he walked over to Ben. \n\n\"Are you sure there isn't anything you want from the container?\" he asked. \n\nBen shook his head. \"Just the painting crates. The museum curator will be by for those later today. I want no reminders of Hahn in my home.\" He stood, and Evelyn did as well. \"You can take these chairs too.\" \n\n\"It's ok. We'll get those last. Thanks!\" The agent nodded with a smile and went back to direct his men to begin loading the truck. Ben ensured the twelve painting crates were set aside and sat back down. \n\nA second filing cabinet was discovered, but it only contained Rainor's personal finance documents from his non-criminal activities. He'd compartmentalized his life into the two distinct income streams. His personal investments had already been transferred to Ben's accountant, so these documents were just trash. He recalled receiving an envelope from the lawyer in Sidney containing Rainor's unfiled paperwork. There'd been pages for each deed. These were currently in a locked cabinet in Walter Greyson's office, and he'd been given instructions not to mention them until the legal ownership issue had been resolved. \n\nBen dumped the cabinet's contents into a dumpster behind the building, and Agent Nelson loaded the empty office furniture into the truck. \n\nA second truck drove into the yard, and once more all activity stopped as the agents watched the newcomers drive close. Ben waved to the woman sitting in the passenger seat as he recognized Ms. Desmond. She got out with the driver and joined Ben next to the crates. She looked timidly at the agents. \n\n\"They are an intimidating group,\" she said. \n\n\"Good thing they're the good guys then,\" Ben replied with a smile. \"Nice of you to come on such short notice.\" \n\nThe woman's face lit up with a smile of her own. \"Shall we take a closer look at this art?\" \n\nBen nodded and went to the first crate. He carefully lifted the painting out so she could see it. \n\n\"Oh my! That's lovely.\" She peered closer and made odd noises as she studied it. \n\nShe leaned back, and her eyes were twinkling with excitement. Ben smiled and lowered the painting back into its crate. He went on to the next one. On the seventh, it looked like the woman might faint. \n\n\"Are you ok?\" he asked cautiously. \n\nShe raised a hand to her forehead. \"Yes, my apologies. I- I believe this one was originally thought to have been lost to the Nazi's in world war two. A remarkable discovery. It hasn't been seen since then. This one must have been in a private collection.\" \n\nBen gave her an impressed look then moved on to the next painting. \n\nWhen they finished, it looked like the lightest breeze might blow the curator away. \"This is beyond generous, Mr. Shepherd.\" \n\n\"Ben, please. And it's just a good idea to have someone who knows how to handle the art properly, take care of it. I trust you're willing to do so?\" \n\nShe smiled broadly and pulled some paperwork from her purse. \"Could I take a picture of that writ you mentioned before?\" she added pulling her cell phone out. \n\nBen extracted the letter and held it up for her to take a picture. He took one with his cell too while he had it out. Then he signed her paperwork, and she gave him one of the forms once she'd signed it. Ben helped carry the crates over to the back of the van and shook the woman's hand once more. \n\n\"Thank you so much, Ben! I'm so glad I took your call today!\" she gushed. \n\nHe grinned back at her. \"I'm glad I was able to convince you it wasn't a hoax. If you'd hung up on me, my next call would have been to the Museum of Modern Art.\" \n\nShe gave him a scandalized expression then slapped his arm playfully when she saw his teasing smile. She burst into surprised giggles at her boldness in hitting him. \n\nWith another wave, she climbed into the van with her driver, and they drove out of the yard. Ben walked back to the Sergeant who was standing, as the chairs were in the truck. He walked over to the container, and there were only a few items left. It looked like boxes of linens. Agent Montrose walked up to him. \"Thank you, Mr. Shepherd, for your assistance today. My apologies for the rocky start.\" \n\n\"It's fine. Good luck with your case against the Mafia boss,\" Ben returned. \"I guess I can go now?\" \n\nMontrose nodded as she looked to Agent Nelson who also nodded. \"Thank you for the donation of the furniture and household items.\" \n\n\"My pleasure,\" Ben said with a smile. \n\n\"You're the only one walking away empty-handed,\" the FBI agent said with a grin. \n\nBen extracted the writ from his pocket. \"I have this.\" \n\nMontrose shook her head in confusion. \"Yeah... but you gave away a fortune in art and kept nothing from the container.\" \n\nBen just smiled at the two agents as he tucked the envelope back into his pocket and turned to leave. He waved over his shoulder as the Sergeant walked with him. Ben pulled out a cell and ordered a taxi as they made their way to the front of the building. \n\nWhen they were alone, the Sergeant looked up to Ben. \"Captain Kendricks informed me that you inherited a safe deposit box in Berlin as well. Are the contents of that covered by the writ too?\" \n\nBen nodded. \"I think so, but I'll get confirmation. According to the wording of the writ, all items included in the inheritance are legally mine. It doesn't specify the geographic location of the inherited items.\" \n\n\"There was a memory stick in the box which led to the issues with the Russian industrialist. Was there anything else in the box of value?\" \n\nBen smiled at Evelyn and nodded. Then his smile slipped a little. \"I wonder if the CIA was aware of the contents before they arranged for the writ.\" \n\nHe pondered that while they waited for the taxi. Once it arrived, he called the charter flight pilot to let him know they were on their way back. \n\nHe called Walter to let him know how it went. When Walter heard of the writ, he was over the moon excited. On his return from Germany, Ben talked with Walter about his trip and made him aware of the deeds. He told him he still had to determine the legal ownership rights. Now it seemed that question had been answered. \n\n\"I'm going to send you an image of the writ once I hang up. I got it as a favor from the CIA, so I need you to confirm just how ironclad it is and the true scope of its coverage. If you determine it is sound, I'm probably going to ask you to sell some of the property. I'll work with you and Jerry to invest that income under a new business entity.\" \n\n\"Ben, if that happens, we'd be moving into real estate, and I'd need to expand my practice to manage this. I have someone in mind. A real wizard I've worked with before. I'd bring him onto the team. Also, Jerry's been talking about the need to expand his operation too,\" Walter advised. \n\nBen nodded. He suspected this would probably happen sooner or later, considering how his estate had been growing in recent days. \"That's fine with me. If you and Jerry need me to sign anything, I'll be available in a few days.\" \n\n\"Thanks, Ben. Sure can't say working with you is dull!\" \n\nBen chuckled. \"We live in interesting times.\" \n\nWalter laughed at the reference to the subtle curse. They said their goodbyes then hung up. \n\nBen looked to Evelyn who was staring back at him with wide eyes. \n\n\"Properties?\" she asked quietly. \n\n\"Deeds to extensive plots of prime real estate in seven different countries,\" Ben said, equally quiet. His mind was forming a plan. He couldn't see all of it yet but it was looking like it might be the most ambitious project he'd ever taken on. \n\nThey rode in silence until they reached the airport. The flight wouldn't be for another hour, so they grabbed some food and relaxed. Ben had a few people approach him for autographs which he turned down, but he posed for photos with them. He was grateful when they were finally allowed to board the plane and soon after they were on their way back to LA. \n\n\"We should get back to the hotel a little after 7 pm. When we land, I'll see what the others are doing for dinner.\" \n\n\"What are you going to do with the money you're going to make from the property sale?\" Evelyn blurted. \n\nHe looked closer at the woman. She seemed earnestly curious. \n\n\"I'm going to invest it.\" \n\n\"So, you'll make money from the money. But what are you doing with the money?\" Evelyn pressed. \n\nHe smiled. \"For a period of time in my life, not that long ago actually, I was in the situation where I was making money just for the sake of making money \u2014 growing the nest egg. Then Gabriella and Catherine came into my life. And Tina. And Trish. People in my neighborhood I could help with those savings. Money without a purpose is a terrible thing. Soon I discovered I was investing in people and making a difference in lives. The money finally had a purpose!\" Ben exclaimed. \n\n\"I have a... need to help, and sometimes it gets out of control. Gabriella brings me back down to earth. She, of all of the women I love, gives me the firmest foundation in reality. She reminds me that I can't save everyone. I spread myself too thin. Too much until I begin to do myself harm. She protects me, from me.\" He happily sighed as he thought of the gorgeous brunette. \n\n\"With this new income, I'm going to be able to help others on a much broader scale, but I'll need Gabriella and the others more than ever to help keep me centered and focused on the important things. Family, friends, and the little corner of the world I've made my home.\" He turned his eyes to the window once more. ",
        "Evelyn turned her face from him to stare out her window while her thoughts turned inwards. \n\nShe was trembling. Her emotions were flaring wildly, and she didn't know what to do. She clasped her hands together to control their shaking. \n\nBefore, when the only exposure she had of Ben was her review of his submitted engineering solutions, she'd been in awe of the man's brilliance and the unique way his mind worked. \n\nMoving into the house he built for his adopted girls was eye-opening. He honestly cared for the two young women and had taken on the role of father and guardian for them when they needed it most. Her awareness of the man's compassion grew significantly. \n\nHaving joined him on this trip, she'd been confused by his ability to have so many sexual partners, but he treated each of them with respect and love, and it was clear they loved him in return. She still found their relationships confusing but... it worked. \n\nShe hadn't truly grasped his financial situation until this trip, but she could see money wasn't important to him. How it was used, was. \n\nFinally, he danced like a dream and his kiss! Just the memory sent tingles down her spine. \n\nHe matched her ideal of a mate. \n\nOf course, she looked nothing like the women in his life. They were so lovely, and she was... not. \n\nWorse, he'd be repulsed by how easily she killed. The two previous men she'd selected and approached to discuss beginning a relationship had clearly stated how easily she took a life made her unacceptable. She knew it was a double standard. Men were seen as more if they could do it, but women were seen as less. It was so unfair. It was just part of her job! A tremble ran through her body. \n\n\"Are you ok?\" he asked her as she was frowning. \n\n\"Mmm hmmm.\" \n\nBen looked closer. \"You're sure?\" \n\n\"Yes. I think I'll rest my eyes,\" Evelyn said in a subdued voice and closed her eyes, so she didn't have to see his concern. She didn't want pity. Besides, what she'd said before was true. Becoming emotionally involved with the one she was protecting jeopardized the mission. She'd have to put those ideas and feelings away. She could be a professional. \n\nBen sat back and watched her for a moment, struggling to grasp the nature of exactly what was wrong. He knew something was, but he had such a difficult time reading her. The Captain said he might. He turned his eyes to the window again and let his mind relax as, without some additional pieces to this puzzle, he wasn't going to be able to solve it. And sometimes you had to let the puzzles solve themselves. \n\nThey landed on time, and Ben got them a cab back to the hotel. They shared few words on that journey as the Sergeant seemed to be keeping herself occupied, watching for threats. \n\nBen sent a text to Tina letting her know they were on the ground and heading to the hotel. She texted back that they had dinner plans for 9 PM, so he had time to get cleaned up when he got back. He was eager to return to his friends as he needed to speak with Catherine about the plan he was formulating. \n\nWhen the taxi arrived at the front of the hotel, Ben paid then frowned when he saw a group of paparazzo crowding the sidewalk just outside his door, waiting. Before he could open his door, the Sergeant was out her side, slamming the door closed. She rushed around the back of the taxi, charging at the men blocking the sidewalk with her hand resting on her holster. Ben watched in surprise as they jumped back to avoid her. She opened his door, and he stepped out. Glancing at her fierce expression, he understood their apprehension. He ignored the paparazzo and walked into the hotel with the Sergeant following. \n\n\"Are you ok, Evelyn?\" he gently asked once they reached the lobby. \n\nShe glanced at him in surprise. \"Yes- I'm fine.\" \n\n\"You just seemed a little angry back there,\" he continued. \n\nShe gave her head a brief shake. \"Sorry. I- they're so disrespectful.\" \n\nBen nodded but gave her a small smile. \"Agreed, but that's their job. Thank you for getting me through them. Please don't give them a reason to press charges against you.\" He held her eye, and she nodded as a small smile slipped onto her lips as well. \n\nThey went up to their floor and walked down the hall to their rooms in quiet. He was sure there was still something on the Sergeant's mind, but he wasn't going to pry. She'd speak if she felt she could. \n\nTheir doors were opposite of each other, so they used their keys to open the doors. \n\n\"See you at dinner,\" Ben said and she nodded as she ducked inside. He caught a glimpse of Trish at the far side of the room then the door closed. \n\nMaybe Trish could get to the root of the Sergeant's concerns. \n\n-=- \n\nEvelyn closed the door and leaned her forehead against it as she took some deep breaths. \n\n\"The big guy's getting to you?\" Trish said gently. \n\nEvelyn squeaked in surprise as she spun to face the redhead sitting in a chair next to the windows. \n\n\"Sorry, didn't mean to spook you,\" Trish apologized. \n\nHeart beating rapidly, the Sergeant raised a hand to indicate it was ok. She looked across at the woman and gave her an evaluating look. Of all of the ladies she'd seen Ben with, Trish was the most like her. She had hard muscles from being diligent with her exercise, and she had a nose-with-character as Uncle Davis called hers. She was certainly no model and preferred physical hobbies involving fitness. Evelyn slowly walked across the room and took the chair across from the redhead and struggled with what she... should say. \n\nTrish smiled. \"So he is getting to you.\" Seeing the woman's hesitance, she smiled softly. \"Whatever you say to me will remain confidential. Just between us.\" \n\nEvelyn eyed her cautiously then nodded. \"It's true, but I can't get emotionally involved. It jeopardizes our working relationship. I'm his admin assistant and more importantly, his security detail. Emotional involvement is out of the question.\" \n\nTrish nodded and looked away for a moment as memories crowded in her mind. A smile slipped across her lips. She tucked it away as it might appear inappropriate with what she was about to say. \n\n\"When my husband died with the others from our neighborhood, Ben worked with those of us left behind and showed us how we could and should rely on each other to get past the grief and anger. I thought he was a great guy and I was attracted to him as well, but I was hurting pretty bad from the emotional baggage my husband's cheating left me. I wanted nothing to do with love or any emotional involvement, just pure physical gratification. I had a very physical relationship with my husband, and with that gone I turned to Ben. He wasn't comfortable with a casual fuck, but he knew I needed that kind of connection and kept his emotions to himself.\" She looked over to the Sergeant and saw wide eyes looking back at her. She chuckled. \"Sorry for the overshare. My rambling point is this. I thought I could maintain my emotional distance from Ben, to protect myself. But the more I was around him, the less possible that became. He's a sweet man, very physical too, and completely giving of himself. If you have any emotional capacity in you at all, eventually you'll become attached.\" \n\nTrish saw the Sergeant was thinking about this and looked upset. \"Will that interfere with your admin assistant position, I highly doubt it. Your security detail duties? Are you telling me you wouldn't be able to resist his advances during the times you need to focus on his safety? If so, that would be an indicator you aren't very good at your job.\" She watched the Sergeant bristle at the comment and smiled. \n\n\"I'm not saying Ben is willing and eager to let another woman into his heart. He has quite a number already sharing his time, and I've seen him struggle to accept that fact. He still has trouble from time to time accepting that he's worthy of our love.\" Evelyn glanced at her sharply, and Trish nodded sadly. \"He's dealing with a lot of emotional damage from his childhood.\" She was silent for a moment as she collected her thoughts. \n\nEvelyn waited patiently until Trish finally spoke again. \"I will say this. Ben doesn't need drama in his love life. If you choose to stand by him and you find yourself falling in love, accept the fact that you may need to keep it to yourself. If he shows no signs of reciprocating, you'd only be doing him harm by mooning over him.\" \n\nThe Sergeant sighed. \"I don't think it'll be an issue. Ben wouldn't see someone like me as someone he could love. I can accept that fact right now.\" \n\nTrish leaned back and looked curiously at the woman. \"What makes you think that?\" \n\nEvelyn shrugged. \"Ms. Lee and Ms. Bennett, they're both young and beautiful. The McKellan twins are young and beautiful. Mrs. Wallace, Mrs. McGovern, and yourself, you're all lovely, and I've seen his love for you.\" \n\nTrish snorted in amusement. \"I don't kid myself that my looks match up to any of the others, but Ben loves me deeply. Don't assume Ben's eye is captured by beauty alone.\" \n\nEvelyn's eyes dipped down briefly to Trish's tits, and the redhead's grin grew wider. \"Yeah, he likes my girls, but it's not just a physical attraction for Ben. He fucking likes me. We click, madly!\" \n\nThe Sergeant's eyes dropped to her hands resting on her lap, and she considered them. When she spoke, her voice was quiet, and she didn't look up. \"I asked Ben how he managed so many relationships when I haven't been able to start one! Previously, there's only been two men I found to be acceptable as a potential mate. When I approached them to discuss beginning a relationship, each one expressed extreme distaste at the idea. One was very vulgar in his responses. Both indicated I made them deeply uncomfortable with how easily I killed my targets.\" She frowned angrily. \"But that's not fair. It's my job! It's not like I get a thrill from killing. It's just something I was trained to do, and I want to be the best I can be. Besides, this isn't something you can take lightly. Otherwise, you're the one who ends up dead.\" \n\nTrish nodded. \"Go all in or go home.\" \n\nThe Sergeant's eyes lifted to lock on Trish's with a slow nod. \n\n\"You think Ben might share their opinion?\" Trish asked softly, and the woman nodded. \"I've killed, in self-defense. Cat has as well. Do you see Ben treating us any differently?\" Trish asked with a raised eyebrow. \n\nEvelyn's jaw dropped as she stared at the redhead. She shook her head as Ben showed no revulsion or unease around the women. \n\n\"Again, I'm not telling you that Ben is ready to accept another relationship. I just wanted to dispel the misconceptions you have about the man. He's made of stronger stuff than the two men you set your sights on. Ben doesn't judge women like that. What's in your heart is what counts.\" \n\nTrish looked at the time and saw it was getting on. \"I'm going to take a quick shower and get dressed for dinner. I'll be out of the bathroom momentarily.\" \n\nEvelyn nodded gratefully to the woman and let her mind spin around their conversation. Trish had cleared her misconceptions, but now she was left with more questions. Should she ask Ben point blank if he might be interested in a relationship with her? Historically, that approach had miserable results. Alternatively, she could settle with the status quo and see how things developed. \n\nShe thought about the current state of things and realized she was in no hurry. She loved her new job, her new living quarters, and being able to interact with Ben in what might be the closest relationship she'd ever had with someone of the opposite sex. \n\nWaiting seemed to be her best option. That didn't mean she was going to give up on the possibility of a relationship should the opportunity present itself. \n\nSimply put, she'd wait and see. Evelyn could be patient. \n\n-=- \n\nAs Ben stepped into his room, he saw Catherine was relaxing in the chair by the window with the curtains thrown wide to let in the warm rays of the setting sun spill inside. A broad smile spread across his face. \n\n\"Just the beautiful woman I wanted to talk to!\" he said. \n\nShe stood and rushed over to squeeze herself against his chest in a tight hug. He breathed in the wonderful scent of her shampoo as he enjoyed the warmth of her body. She turned up her face to his, and he kissed her soft lips tenderly until she purred. Once she pulled back, he saw her eyes were twinkling happily. \n\n\"How went shopping day number two?\" he asked. \n\nHer smile widened. \"So much fun! The twins are a scream! Especially teamed up with Trish!\" \n\nBen could easily see how they might be. He grinned. \"But were you successful in finding something nice for yourselves?\" \n\n\"Yes, Ben. We did pick up some lovely clothes. You're spoiling us!\" she said, poking him gently in the chest. \n\nHe pulled her in for another hug and kissed her temple. \"I'm allowed when you're all so deserving. Can we sit for a moment? I want to talk to you about something.\" \n\nNodding, she led him over to the couch by the window. They sat, and she looked at him attentively. \n\n\"This project Phil DeMonte is working on; it's about telling the story of young people who've found a way to pull themselves out of the cycle of poverty and despair. Self-propelled success stories. I keep thinking about that.\" He paused to consider his next words. \"While it's too soon to go into details, I was wondering if you might be amenable to expanding the scope of your charity.\" \n\nCatherine blinked in surprise at Ben as his words sank in. \"Expanding how?\" \n\nHe shook his head. \"It's still just the seed of an idea, but I was considering setting up a foundation to support these young people \u2014 the ones who are honestly striving for a better life. Your organization helps them with their education, and that's key. If they can get the education they need to succeed, they're halfway there. I want to assist with the second half. Healthcare, affordable housing, occupational training, life counseling, financial planning training... whatever it takes to give them a foundation to grow from.\" \n\nShe looked at him with wide eyes. \"That's a very ambitious plan. Generating the funds you'd need to get such a foundation off the ground-\" \n\n\"Initially, I wouldn't be looking at external funding,\" he insisted. \n\nCatherine stared at Ben. \"What?\" \n\n\"If Walter confirms some information I asked him to look into for me, I'll be able to cover the costs for the start-up myself,\" Ben explained. He didn't mention to Cat that even if the news from Walter was negative, he intended to set up the foundation. He'd just be doing it at a much smaller scale and local only. This, he would be paying for himself, and he'd have to up his creative output to pay for it. \n\nShe felt goosebumps rise over her entire body. \"Oh my god, Ben! That's amazing! There's some space in the building I work out of to set up an office for the people we'd need to hire to manage the program.\" Her mind was already thinking of the people she could contact to assist with this. The hiring pool in the city might be a little lean for the skillsets she was thinking of so they might have to place ads in nearby cities. \n\nBen smiled at her excitement. \"Remember, we still need to get confirmation from Walter. That will likely take a week or so. Right now, it's all blue sky ideas.\" Catherine nodded rapidly. \"One more thing... if I get good news from Walter, I'm going to expand my plan to set up foundation offices in six different countries. We'd be going global.\" \n\nCatherine's eyes went wide, and she made a choking sound. \"Ben! That's going to cost a fortune!\" \n\nHe nodded. \"I expect it will, but if Walter gets confirmation, it's all going to be paid for by a new income stream. It won't come out of my personal savings at all.\" \n\n\"How- what new income? Did you get a new contract with the military?\" she gasped. \n\nHe grinned. \"No, no new contract. Let's wait to hear what Walter says. At the moment, it's just a pipe dream. But just in case this dream looks like it will come true, I'd like you to consider what it might take to make this foundation happen. I'd like you to run it, to be its face. If you're interested.\" \n\nShe froze once more as what he was asking shook her world. \"You want me to run a global charity?\" \n\nBen looked at her nervously. \"I don't want to pressure you into anything. If you don't want that kind of responsibility that's perfectly fi-\" \n\nCat jumped onto Ben's lap and kissed him deeply, her fingers tangled in his hair. \n\nHis hands settled down on her back, and she moaned happily into the kiss. His grip slid down to her ass, and he squeezed her firm cheeks. Her kiss became more passionate. \n\nBen was surprised when she pushed off to stand and rushed over to her suitcase. She smiled back at him over her shoulder as she dug into the case. \n\n\"Get those pants off!\" she growled playfully. \n\nHe snorted softly yet moved quickly to follow her orders. Down went his pants and boxers. He heard her make a happy sound as she pulled the tube of lube from her case. Then she immediately set about wiggling out of her pants. \n\nBen tugged his shirt off and watched her prance back to the couch with a happy grin on her face. She pulled her shirt up and slipped her bra off to press her body against his, her lips finding his once more. The skin to skin contact sent tingles through both of them. When his big hands were back on her body again, she moaned and squeezed tighter against him. \n\nCat wanted Ben so badly. His body was so intensely sexy for her, and he loved her so much, the combination always got her motor revving. When she discovered how much he believed in her by offering her the top position in his new foundation, it rocked her world. \n\nEven if Walter's news made it impossible, the fact that Ben believed she could take on such an enormous challenge meant so much to her. She'd witnessed Ben's faith in Gabriella's ability to succeed in her business, and while she wasn't jealous of her friend, she'd wondered how that would feel. Ashraf certainly hadn't shown any faith in her abilities through their years of marriage. Chanel loved her deeply, but their relationship was still in the honeymoon phase, so their awe in each other was too fresh. \n\nBut Ben, with just a few simple words, demonstrated the incredible scope of his faith in her. She felt like she might float out the window- Her eyes suddenly caught motion on the roof of the building across the street. Their room was on the fifth floor, facing west and the setting sun. She had a clear view of someone on the roof of the opposite building. He was holding something large and black and pointing it at their window. Her smile dropped away. \n\nBen noticed Catherine's attention swing to something over his shoulder, so he turned to look out the window. He saw the silhouette of the man on the rooftop across the way. Was that a gun? \n\nA second person suddenly appeared behind the man and struck him on the back of his head. They grabbed something on his collar as he tipped forward and went over the edge of the roof to fall out of view. Catherine gasped as Ben stared at the shape of the woman backlit by the bright sunset. She was tall and svelte and holding the strap of the man's camera dangling from her hand. The camera's lens was quite large so a telephoto for shooting distant subjects, like hotel rooms. That's what the fallen man had been pointing at them before the woman knocked him from the roof. \n\n\"Liliya?\" Ben said quietly as her shape was similar. Close to the same height with sleek curves. The woman waved then turned to leave. \n\nLong ebony hair caught the fading rays of the sun as she walked towards the southern edge of the rooftop. It wasn't Liliya unless she was wearing a wig. The woman did something to the camera and casually tossed it back near the spot where the man fell. Then she suddenly sprinted forward at full speed. Ben and Cat heard popping sounds from across the street. They rushed forward to peer out the window to see where she went and caught sight of a blonde woman dashing after the brunette. Then they were both gone. "
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "erotic coupling",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-shepherds-crook-pt-02"
}