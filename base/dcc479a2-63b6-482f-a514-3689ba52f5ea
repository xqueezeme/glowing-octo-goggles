{
    "title": "Faye Fellatio Prequel 01: Halloween",
    "pages": [
        "This story is dedicated to Faye Skylark - the inspiration for this story and a terrific fellow author.\n\nAll characters in this story are aged 18 or above.\n\nPart 01 (Faye Does Halloween)\n\n\"Trick or treat!\" Faye sang out as the door opened. The supercute brunette flashed the householder a huge smile as she held out a small plastic bowl, shaped like a pumpkin, and hanging from some string. But inwardly she admitted to herself. I'm getting too old for this...\n\nFirstly, the Vampiress costume she'd had for the past four years was waaaaaaay past its prime. The long, flowing midnight purple and fiery orange sleeves were somewhat tatty. The eight or nine inch high collar that rose up behind her head had started to curl over and just wouldn't stand up straight.\n\nIt was also getting rather tight - especially around the top. The last time she'd worn the outfit she definitely hadn't been a very healthy C cup. And her legs had definitely lengthened since then, too, making the dress length positively indecent. Although Faye had to admit that those last two points might be helpful on this occasion...\n\nThe only thing that was new was the set of cheap plastic fangs she had in her mouth.\n\n\"Fu... u... ayyeee...\" the voice at the door seemed to switch words half way.\n\n\"Hi, Mr Johnson!\" Faye greeted her near neighbour warmly. \"Trick or treat!\" she repeated, almost as enthusiastically, waving the pumpkin hopefully.\n\n\"H... hhhiiiiii, Faye,\" the thirty-something driving instructor couldn't stop himself slowly looking the gorgeous 5'6\", 18 year old up and down. He took in her lovely bob of dark hair, cute freckled face, swelling bosom, fine slender form and finally stopped - for some time - at her fantastically long and shapely legs. \"W... what can I do for you?\"\n\n\"Trick or treat!\" Faye tried again, not quite so enthusiastically this time. The pumpkin dropped a little. She felt it was losing its impact. Third time lucky! she hoped as the driving instructor continued to openly ogle her legs. I've heard of guys talking to a girl's tits before, but never her legs, she continued to herself, silently.\n\n\"That is a wonderful costume,\" Mr Johnson went on before finally dragging his eyes up to Faye's own.\n\n\"Thank you,\" Faye replied. \"Most guys... er... people seem to like it.\"\n\n\"Er... Faye...\" Mr Johnson peered forward, looking more closely at Faye's cutely freckled face and seeing several creamy white splotches... \"You seem to have...\"\n\n\"Face cream!\" Faye blurted out in a hurry and looked around a little nervously. \"I er... have to look after my skin. I probably just put on a little too much. I er... have a habit of getting a lot of cream on my face.\" That didn't come out quite how I intended it, she thought, glancing up at the Heavens for a moment. But it is accurate, she added to herself with a smile. Using her right forefinger, Faye scooped up the errant cream and deposited it into her mouth. \"All gone?\" she asked innocently after swallowing.\n\n\"Yyyyyessssss...\" Mr Johnson thought for a moment and dared himself to ask, \"You... eat... face cream?\"\n\n\"Er... yes...\" Faye thought carefully, having dug herself in deeper than she'd planned. \"It's a special edible kind. It's really good for my skin!\"\n\n\"I see...\" Mr Johnson didn't see why anyone would make edible face cream, but what did he know about the subject?\n\n\"Is... Mrs Johnson at home?\" Faye asked, trying to put a disinterested tone in her voice.\n\n\"No... She's at her sister's,\" Mr Johnson replied. \"Did you want to see her about something?\"\n\n\"No... no...\" Faye assured him. \"Actually it's you I wanted to see.\"\n\n\"Oh... really?\" Mr Johnson became hopeful. Perhaps she wanted driving lessons? Oh... how I'd love to teach that little minx a thing or two, he thought to himself. Then he stopped, stared, and hoped desperately that he hadn't said that out loud. \"Er... What about?\"\n\n\"Trick or treat,\" Faye announced for the fourth time, this time with practically no enthusiasm at all. The moment was long passed. Nevertheless she ventured a gentle wave of her pumpkin, just in case it helped get the message through.\n\n\"Oh... right...\" Mr Johnson thought for a moment. \"I... er... think we have some candy somewhere. Can you hold on a moment?\"\n\nFaye risked a quick look about. The street looked empty. \"Actually... Mr Johnson, would you mind if I come in for a moment? It's awfully cold out here.\"\n\n\"Well... I... er...\" Mr Johnson wanted to say yes so badly. But what would Mrs Johnson say if she found out? She wasn't the easiest of women to live with at the best of times. If she found out that he'd had young Faye in the house...\n\n\"You see... my legs are getting awfully chilly...\" Faye knew what the driving instructor was thinking and knew just how to cure that kind of indecision. She kicked up her right leg, just like a Can Can dancer, and rested her dainty foot on the doorframe just beside Mr Johnson's head. \"See...?\"\n\nMr Johnson slowly looked down the length of Faye's perfectly formed right leg, all the way down to her, now-revealed, tiny purple panties. \"Y... you'd better come in...\" he offered and stood back.\n\n\"Gee! Thanks, Mr Johnson!\" Faye sang as she dropped her leg down. Then, swinging her pumpkin bowl enthusiastically, went into the house.\n\nHer increasingly nervous host followed Faye's example and peered outside, looking quickly up and down the street before breathing a sigh of relief that no one seemed to be around. Then he shut the door behind her. \"P... please go through...\" he invited her.\n\nAs Faye made her way to the living room, Johnson followed behind, his eyes squarely on Faye's beautifully peach-shaped ass. Fuck! Look at that move! Johnson marvelled at the way Faye's rear end swayed and wiggled as she walked. Mrs Johnson never walked like that... \"T... take a seat, Faye,\" he invited when they reached the front room. \"I... er... I'll just get that candy...\" and he started to make his way to the kitchen.\n\n\"Actually...\" Faye interrupted, looking at him longingly. \"I was wondering if you could help me out with my college fund?\"\n\n\"Oh...\" Johnson stopped.\n\n\"You see I'm 18 now and I'll be going to college next year.\" Faye explained. \"But my college fund is still waaaay too short...\"\n\nAt the word 'short,' Johnson peeked involuntarily down at Faye's tiny skirt and its hopeless quest to cover her long, long legs. Word association? he wondered as he snapped his eyes back up, hoping he hadn't been caught.\n\n\"... So I wondered if you'd consider making a donation?\" Faye continued smiling inwardly at his pathetic efforts at covering up his staring.\n\n\"Oh... well... I...\" Johnson stammered. He hadn't expected that.\n\n\"Of course, if there's anything I can do to convince you...\" Faye's voice was smoother than chocolate. \"Perhaps handle any little tasks that Mrs Johnson might do if she were here?\" She added helpfully, hoping he'd take the hint.\n\n\"Oh... er...\" Johnson had expected that even less. Is she suggesting... No way... She's not... Is she...?\n\nFaye reached out her delicate right hand and began running over the front of Johnson's pants, right where his cock was beginning to harden...\n\nShe is! Johnson finally concluded. Holey Moley!\n\n\"So...\" Faye continued as she began to lightly massage Johnson's cock through his pants. \"Do you think I could persuade you into... giving me a donation?\"\n\n\"Ohhhhhhhhhh... ohhhhhhhhh...\" Johnson's mind was racing. Oh yes! Please! His mind was crying. But... I couldn't... Johnson had his eyes tight shut but he could feel Faye unzipping his pants. Well, I shouldn't... he tried to hold out against the inevitable. Faye's hand reached in, pulled out his very impressive, and now rock-hard, nine inch dick, and gently began to play with it. He was lost... \"Hell, yeah!\"\n\n\"Oh, Mr Johnson!\" Faye was so please she actually bounced slightly in the air, causing her C cups to do nice things to the top of her aging dress. \"I'm so happy! Thank you so much!\"\n\nJohnson looked at her with an interesting mix of bashfulness and desire.\n\n\"Well, I'd better lose these, I suppose...\" Faye sighed as she used her free hand to take out the cheap plastic fangs and throw them onto the sofa.\n\n\"Oh... why?\" Johnson asked, confused.\n\n\"Vampires might need them to suck,\" Faye explained playfully. \"But I sure as Hell don't!\"\n\n\"Oh...\" Johnson replied, bemused, and then realized what Faye was saying. \"Ohhhhhhhhhh!!!!!\"\n\n\"It's what pretty girl Vampires do, Mr Johnson... Suck...\" Faye grinned and then sank to her knees in front of him. \"Only I don't much care for blood. Not when you have something so much tastier in these.\" And she used her left hand to massage his balls for a moment. \"Mmmmmm... yes... I can tell these have a real treat for me... Now... let me show you my trick!\"\n\nFaye removed her right hand from Johnson's dick and leant forward. Opening her mouth wide, she let her head swoop down on top of it, sinking her ruby red lips all round it...\n\nShe slid forward as the pink rod passed between her teeth.\n\nShe slid further forward as the thick cock passed over her tongue.\n\nShe kept sliding forward as his solid manhood reached the back of her throat.\n\nAnd she only stopped when she ran out of cock and had a good six inches of Johnson's dick wedged down her throat. Her lips were now pressed tightly up against his balls.\n\n\"Oh fuck!\" Johnson was impressed. No one had ever deepthroated his cock before. And she did it so easily.\n\nTime to go to work, Faye thought to herself as she began to bob up and down on Johnson's johnson. Fortunately, at that point, his knob was back up in her mouth so that when she laughed gently she didn't choke. I'm sucking on Johnson's johnson! She laughed inwardly to herself. Wait until the girls hear about this!\n\nBob...\n\nBob...\n\nBob...\n\n\"So...\" Bob... \"Mr Johnson, how much...\" Bob... \"do you think you can contribute...\" Bob... \"to my...\" Bob... \"college fund?\" Faye asked innocently while expertly deepthroating Johnson's not-inconsiderable cock. Schhlluuuppppp! While she waited for an answer, and with all nine inches of man-meat in her mouth and throat, Faye reached out with her tongue to massage the undersides of Johnson's balls.\n\n\"Oh... fuuuuuuu...\" Johnson's attention appeared not to be on money. He had other, better things to think about. \"Oh... shit... I don't.... Oh, God! That's good! Don't kn... know...\"\n\nSchlup! Faye slid Johnson's cock out of her mouth for a moment and looked up at him thoughtfully. \"My art teacher gave me $50. He said I was the most talented girl in school.\" Faye announced proudly.\n\nBob...\n\nBob... Schluuup!\n\nBob...\n\nDon't want him going off the boil, Faye thought to herself before continuing, \"And my French teacher gave me $80. He said I gave the best oral performance he'd ever had... er... heard.\" Oooops!\n\nBob...\n\nBob...\n\nBob... Mmmmmmfff!\n\n\"Mr Pratt, my sports ed teacher, he said I have the legs of a thoroughbred!\" Faye replayed the scene in her mind. \"And Mr Williams, the athletics coach, said I had a really good set of lungs too. They were sooo kind. They gave me $100 and literally drenched me with compliments behind the sports hall.\"\n\nBob...\n\nBob...\n\nBob... Yummmmm!\n\n\"And Mr Koychek, the music teacher, gave me fifty when I bet him I could hum the national anthem better than Kathy Richards could sing it. He said I gave... sorry was... the best hummer ever!\"\n\nBob...\n\nBob...\n\nBob... Hummmmmmmm!\n\nNothing wrong with a little demonstration, Faye thought. And guys always seem to like me humming around their dicks...\n\n\"Oh shhhhiiitttt!\" Johnson was about ready to burst.\n\nHummmmmmmm!\n\n\"Oooooooooooooohhhhhhhhhhhhhhhhhhh! Arrgghhhhh!!!!\"\n\nSounds like he's close... Faye thought to herself. I'd better keep him safely down my throat. I can't afford any more slip ups like next door. Fancy walking out with cum all over my face!\n\nHummmmmmmm!\n\nAnd... Here he comes! Faye continued to herself, still humming.\n\n\"Fuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuccccccckkkkkkkkkk!!!!!!!!!!\" Johnson shouted out at the top of his voice as his balls began to unload.\n\nSpurt!\n\nSpurt!\n\nWow! Faye could feel the splashes of cum whitewashing the inside of her throat. Mrs Johnson hasn't been taking care of him properly...\n\nSpurt!\n\nSpurt!\n\nI should be charging her for taking care of her husband for her!\n\nSpurt!\n\nSpurt!\n\nStill going... she marvelled. Well done, Mr Johnson! I didn't know you had it in you. Of course it's in me now... Faye giggled at her joke, causing her to force much of that last recent splash of cum up into her mouth. Oooops... she thought, swallowing it back down. Careful... Don't spill any. Must try not to giggle with several inches of exploding cock down my throat! Mmmmmm... he tastes nice too...\n\nSpurt!\n\nSpurt!\n\nJohnson finally wore himself out. After his initial outburst he'd been silent apart from some grunting. He'd just stared down at the pretty bob of brown hair seemingly affixed to him groin in a state of disbelief. The neighbour's daughter had just swallowed him whole, produced the most amazing, indescribable sensations in his dick and balls, and vacuumed up his loads like a pro. What was she? 18? And she sucked cock better than anyone he'd ever met.\n\n\"Fuck... Faye...\" Johnson was lost for words. \"That was...\" He couldn't think what to say.\n\nFaye finally slid her head back and looked up at him with her cute, freckled face. \"Did I do OK?\" she teased him.\n\n\"OK?\" Johnson was still struggling to describe the ride he'd been on. \"That was... That was... just... amazing!\"\n\n\"Awww... Gee... Thanks, Mr Johnson!\" Faye had always been a sucker (Figuratively and more recently factually) for compliments. \"That would have been a great deposit for my face cream fund, too, but I seem to have swallowed it all down...\" she laughed. \"I told you it was edible.\"\n\nJohnson laughed as he realised what it was that he'd seen on Faye's lovely face.\n\n\"Now...\" Faye became more business-like. \"I'm sorry to have to rush you, Mr Johnson, but there's the matter of my college fund... Only it's getting late and I still have the rest of the street to er... do...\"\n\nJohnson was gobsmacked. \"How many houses have you done already?\" he asked nervously.\n\nFaye looked thoughtful for a moment. \"I... think... you're... the...\" she tried remembering her movements. \"... the ninth...\"\n\n\"Ninth!\" Johnson gasped.\n\n\"Plus six or seven at school today,\" Faye concluded with an involuntary burp. \"Ooops! Pardon me! I knew I shouldn't have bothered having dinner this evening...\""
    ],
    "authorname": "brian358",
    "tags": [
        "halloween",
        "deepthroat",
        "oral",
        "legs",
        "blowjob",
        "teen",
        "swallow",
        "cum"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/faye-fellatio-prequel-01-halloween"
}