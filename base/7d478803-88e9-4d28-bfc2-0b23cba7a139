{
    "title": "Tales in Slavery Ch. 06",
    "pages": [
        "She took me into her bedroom. Spartan, like my own, the large black and burgundy covered bed dominating the room. She sat down on the bed, her hand still engulfing mine, gently pulling me down to sit beside her. She'd left the door open, and in the near silence of the house, we could hear Cid and our Master speaking quietly in the living room.  \n\n\"You saved me,\" I whispered to her, as I sat on the bed, relaxing the grip I had on the blanket wrapped tightly around my small frame. \"At the sale, if you hadn't reached for me our Master wouldn't have noticed me.\" I looked at her, meeting her eyes bravely, as I worked out the events of the sale. I was slow in realizing the debt I owed her.   \n\nShe shook her head. \"No, I didn't save you.\" She told me with a quiet laugh. \"You got his attention all on your own, when you screamed in that vampire's face...It was like you put all of you pain and hate into that death-like scream, and then you lay limp as if you had died. Our Master stopped mid-stoke, he shrank inside me, and he watched you. He placed the collar around my neck, and then he all-but ran to the sale room. He must have paid a lot for the two of us, because he talked with some other vampire for a long time. And finally, he handed over his entire bag of silver coins. By the time he got everything worked out, the candle was almost burnt out.\"\n\nI lowered my gaze and impulsively turned, letting the blanket fall into a pool of crimson around me, and hugged her. \"If you hadn't reached for me, I wouldn't have screamed.\" \n\nHer arms came around me, and she nuzzled my check affectionately. I hadn't intended for her to return the hug. My brain exploded in a typhoon of scenarios of how this girl would hurt me, I clenched my eyes and I fought not to pull away. \n\nI could recall several times when another female slave had cornered me, and taken their aggressions out on me. Some of those scars were better defined on my damaged skin than any given by my vampire Masters. My sides and stomach bore three-sets of anger driven fingernail valleys, and my upper thighs and mound of Venus were covered in jagged circular teeth-made craters where other female slaves had sought to inflict their pains on someone else. I feared that this girl would leave scars much deeper than any before her.\n\nFinally, she released me, her eyes wide with concern. I must have grown rigid in her embrace. I shook my head, ignoring the girl's mute distress. Panic had started to churn in my gut; prelude, in the past, of torment and destruction. I turned away from her and curled into the fetal position, battling to hold back the sobs threatening in my throat.\n\nSilently, I chastised myself for my inability to remain passive. 'What's happening to you?' The part of myself that had been murdered and resurrected hundreds of times screamed silently in my head. 'You've grown so weak in a matter of days. Toughen up, or your new household will tear you apart.'\n\n\"I just want to take the pain away, even if it's only for a few minutes.\" She whispered, her voice edged with the same tears as the ones filling her eyes, as she curled around my backside. Her arms came around me, as she refused to let me face my demons alone tonight.\n\nAs she whispered, I realized that her lips did not move as she pressed them against the back of my neck. She spoke telepathically, into my mind. My senses sprang to life, as I felt her body pressed firmly against mine. She was cold, the length of my life tale had cooled the heat that had radiated from her. 'Vampire,' the voice in my mind whispered.\n\nI pushed the voice away. Surrendering to the kisses she planted on my shoulders. But acceptance didn't stop the sobs, and I became victim to their iniquitous assault. I was broken more completely by the comparative perfection of this household, than by the torture of five years in Hell. \n\nThe thick wall I'd begun building the first night as I watched Hitomi taken by a creature of nightmares crumbled to dust as I cried clutched tightly in the arms of the golden haired angel. She kissed my back and shoulders, moving to my neck and ears. Pacifying me with the soft meaningless words she whispered, as she gently rolled me over.\n\nI looked into the forest of her eyes, seeing the tiny differences that confirmed she was not the human slave I'd mistaken her as. Fresh tears overflowed my eyes fearing she would manifest into that nightmare monster from my past cackling in triumph. \n\n\"Vampire,\" I whispered, shattered, but unable to summon the strength to hide it. I let my eyes fall closed turning my head away, baring for her more than just the vein. 'What a cruel game,' I thought to myself. 'Befriend you, love you...then their kisses cut so much deeper.' The thoughts continued as I waited for her to freeze my heart. \n\nShe never leaned down to claim my throat as her prize. \"No.\" She said quietly, and turned my face back to hers with gentle force. \"I will never take your blood.\" Her lips brushed lightly across mine, seeming to pull the tension from me. \"I am not the creature you think I am.\" Again the feather-light touch of her lips, this time taking the last of the fight from me. \"Though I am not so different from them. But I am as much a slave as you.\" \n\nI opened my eyes, shaking my head slowly. \"I don't understand...\" She leaned down to touch my lips again, my eyes fell closed once more, as I fell into the tranquility her kisses brought.\n\nMy consciousness fluttered, as her hands moved over my broken body, never truly touching but soothing away the tiny pains I had learned to ignore. Her mouth worked tenderly against mine, coaxing me to open for her. \n\nWhen I opened my mouth to her, and our tongues touched I cried out in relief that was near rapture. There were no tiny fangs to pierce my tongue, only human teeth and a soft tongue to dance with mine within the warm confines of our mouths. \n\nHer hands continued to move over me, brushing my throat, my shoulders, then down across my nipples. In their wake, electric tingles remained. The puckered and scarred flesh grew warm as the tingling sensations faded. Every time her fingertips touched warm, once deadened flesh, intense bolts of pleasure shot directly to my core. \n\nSomehow, she had brought feeling back to the heavily scarred flesh of my shoulders. Her hands seemed to move randomly, staying mostly over my shoulders, but occasionally they strayed to my throat, or down over my breasts. I whimpered against her mouth, moaning, as I never had, my hips pumping the air gently.\n\nShe broke away from my lips. \"Keep your eyes closed.\" She whispered as she tenderly kissed my eyelids. \"Focus on the pleasure. I'll take away the pain.\" She kissed down the side of my face, her mouth warming with the slight friction from our kisses. \n\nShe moved so that her body covered mine, her leg pressed against my core. I rocked my hips, coating her thigh with wetness. Moving slowly she covered my jaw with her lips. When her lips touched my throat the pleasure that erupted from the soft, human-like kisses sent me into a convulsive orgasm. It was as if she had buried her face between my legs, and not in the cleft of my shoulder. \n\nShe kissed away the lingering numbness of the scars that covered my throat, working down slowly. The final long held tension slid away as she moved down, taking a tiny, erect nipple between her teeth. Her tongue brushed the inert flesh waking my nipple from its long torpor. \n\nAs I writhed under her intense suckling, vivid colors flashed behind my closed eyelids. In my mind, I pictured her feeding from the old pain; her tongue like a magical cloth slowly wiping even the scars away. \n\nThe pleasure she gave no longer traveled down to further excite my already dripping pussy, but seemed focused entirely on the nipple she slowly swirled her tongue around. Building an orgasm that felt as though it would burst from the very tip of my throbbing areola. When I felt that I would have to beg her to stop, she would move to the other teat, and began her nursing anew.\n\nI floated on the waves of felicity as she fed on the damaged flesh, moaning loudly as she moved from breast to breast. Her fingers played over my face and neck, tantalizing the newly awakened nerves. \n\nI wanted to touch her, return the pleasure; as hungry for her as she seemed to be for me. I touched her side, sliding my fingers over her warming flesh, the passion we shared warming her as blood would warm a vampire. \n\n\"No,\" she said around the nipples still in her mouth. \"When I have taken all I can....\" She continued speaking, but her words were lost on me, as she brought a hand down to grasp my other nipple between her thumb and fore-finger. The difference in texture, the damp softness of her tongue as she spoke, and the dry, comparably, rough touch of her fingers, coupled with the new sensations of my enlivened skin rocked my consciousness. \n\nI cried out, biting my lip to keep from screaming, as the secret muscles in my pussy clenched in on themselves. She timed the flicking of her tongue, and the gentle rolling pinch of her fingers with the contractions of the orgasm. Expertly dragging the climax out much longer than it should have lasted. When I thought it was starting to end, she'd lick my nipple, or squeeze my tit, sending me screaming to near unconsciousness.\n\nI never passed out, but clung remarkably to awareness. The rainbow dancing behind my eyelids grew erratic until she brought me slowly down the zenith. When she reluctantly pulled her mouth from my conflagrant tit, I was wheezing, trying to gulp air into my pleasure weakened lungs. \n\nI slowly opened my eyes to look down at her, as she rested her forehead in the tiny depression between my tits. Tears of vehement gratitude streamed down my cheeks.\n\n\"...I can't take any more...\" She murmured into my sternum. \"I know there is so much more,\" she raised her head meeting my clouded gaze, a devious smile slowly curling her plump lips. \"But we have time to take it all.\"\n\nI look down at my swollen nipples, and shook my head trying to clear the fog from my vision. The scars were gone, both of my breasts, as well as what I could see of the rest of my chest were free of the blemishes that had marked me as less. \n\nI wanted to voice my awe, my thanks, but I chose to show her. To, at least, try to give her a fraction of the pleasure she had given me. I pushed her back gently, as I sat up. Crushing her lips to mine in a clumsy, but earnest embrace. As we kissed I pushed her back further, until her back lay in the softness of the blankets, and I lay on top of her. Our breasts were pressed tightly together, her firm healthy globes pillowing my small but, now, almost beautiful half moons. \n\nShe broke the kiss, breathing hard. \"You don't have to do this,\" she breathed, her eyes flashing with something I could only interpret as fear. \n\nI frowned down at her. The fear in her eyes told me she was just as much slave as I was, even though she had just proved that she was so much more. She feared the injuries she'd taken from my skin. She also somehow knew that a few of scars that still remained on my yet untouched stomach and those between my legs had been caused by other slaves. \n\n\"I would never hurt you,\" my voice nearly echoing hers earlier. I leaned down and kisses her lips gently. \"Let me give back some of what you gave me.\" I waited for her to respond, unwilling to rape her, even though the need to see her dance and moan under my fingers and mouth was excruciating.\n\nSlowly she nodded, mute as she closed her eyes, her head turning to the side. \n\nI rolled off of her, the flesh between us feverish from the intense heat radiating from her still form. I let my eyes wash over her, taking in the elegant beauty. Her skin was perfect, lightly tanned and nearly free of any scar. My eyes were drawn to a tiny blemish just at the base of her sculpted throat, two tiny punctures where she had been bitten a long time ago. \n\nMy fingers moved to stroke the slightly raised pinholes, and she shuddered, breathing a long sigh. I continued to look over her, as my fingers danced over the yielding skin of her shoulders. Her tits fell naturally away from the center of her chest, still holding most of their firm shape as they raised and fell with her gentle breath. Her stomach was tight and muscled lightly. As my eyes came to rest on the tangle of trimmed dark blond curls at the junction of her thighs, my breath caught in my throat. \n\nI wanted to explore their until she screamed with senseless abandon. But I knew if I drove between her legs, she would at best tolerate my attentions, and never feel the ecstasy I wanted for her. I leaned down, and kissed the flesh under my fingers, breathing the clean jasmine scent of her skin. \n\nI moved down her collarbone, trying to cool the inferno that was her body with my breath. I inched down, leaving a trail of wet kisses, until I encircled her left nipple, showing it loving attention. I took her nipple in my mouth trying to work the same magic she worked on mine, but her flesh hadn't been covered in long numb scars. \n\nI worked slowly, not wanting to rush, but longing to taste the fragrant honey below the dark blond curls. I moved my lips further down her chest, my tongue snaking over the faint ridges of her ribs, and then into the valley of her abdomen.\n\nAs I ventured further, she raised her knees, and opened her legs. Inviting me silently to taste the nectar of her nether-lips. I moved so I was half kneeling, half laying between her legs, my mouth still moving in languid circles above her pelvic bone.\n\nTaking a long deep breath, I relished in the musk of her, it had undertones of citrus like a lemon verbena plant. Not unpleasant in any way, but so different from my own unique scent, which seemed more bitter, like ginger, to my nose.\n\nI paused to look up at her face, her eyes closed, a slight impatient frown creasing her forehead. For a long moment, I was still, enjoying the vision as I looked up at her. \n\nShe rocked her hips once, drawing my attention back to the treasure a few inches from my chin. I smiled, reassured that she wanted this, then began to kiss the inside of her upper thigh. She moaned softly, as my lips moved closer to her pussy, my cheek just brushing the sensitive edge of her outer labia. \n\nShe'd been almost silent as I worked over her neck, chest and stomach. But the closer to her slit I got, the more she moved and wordlessly told me to continue. I lay down, taking her folds into my mouth, and running my tongue over the subtle ridges. I moved over the outer-lips slowing my mouth to tease her and to savor the intoxicating citrus and honeysuckle musk that rose to embrace me. \n\nI'd been so obsessed in my pilgrimage, I'd missed Master Julien and Cid's silent entrance into the room. Slight movement diverted my attentions, and I watched uncaring as both of them slid down the wall, sitting to watch our lovemaking. The much quieted voice in the recesses of my mind warned that I should do more than simply glance at my Master, but I was willing to do no more than that, accepting that I may face consequence later. I wasn't sure how long they had been watching us, but I was almost certain it had been a long while.\n\nShe wiggled her pussy across the side of my face, a long desperate whine flowed from her lips, and I turned back to her slit, dismissing the two voyeurs seated just inside the room. Her hands clutched at the sheets, curling and uncurling impatiently. Again, I smiled as I hovered above the tiny hood that partially hid her clit, unfurling my tongue to snake across its underside. \n\nShe recoiled from the rough touch with a sharp cry. I kept my head between her legs but raised my eyes to silently question her. Her eyes fluttered, and she relaxed as I licked across her labs again. \"Sensitive.\" She muttered apologetically, raising her head enough to look down at me, unaware of the onlookers. \"It's been a long time since I've had a woman kiss me there.\"\n\nI nodded in understanding, turning my attention back to the bloom. I focused on the petals, and the seeping aperture at their center, only stroking the true heart of the blossom occasionally. I wanted to make her scream, but in pleasure not because the intensity of my tongue caused pain.\n\nPressing my mouth firmly against her sex, I lapped at the juice leaking slowly from her hole, then pressed my tongue into it. I kissed the cat's tongue of ripples and ridges at the roof of her pussy for a long time. Pushing my tongue inside and then pulling it back into my mouth, licking hard across the tender ridges. \n\nShe pumped against my face, fucking my tongue. Her hands moving to cup the back of my head, holding me tight against her. She hissed as her cunt spasmed, then moaned as the first stage of her orgasm rolled through her clenched abdomen. Her fingers tangled in my hair as she ground wildly on my spearing tongue. She no longer let me toy with her sex, but used my tongue to build herself into an explosion. The resulting scream echoed through the house, and left my ears ringing when it finally died. \n\nAs she released her death-grip on my head, I returned to lapping softly at the outer edges of her dew drenched petals. My tongue ached delightfully, the sturdy muscle trembling with fatigue. I gave her pussy a few lingering kisses, then rested my check against the inside of her thigh.\n\nI watched in awe as her pussy shuttered every few minutes, aftershocks of the ear shattering earthquake, her hips rolling gently. \n\nImpulsively, I covered her sex again, sucking the button of her clit into my mouth. Her hips rocked up to meet the soft prodding of my trembling tongue. \n\nShe started to cry out, but it was cut short as the bed shifted, and we were joined by our Master. \"May I?\" He asked, his voice slow, and thick with lust. \n\nI looked up at him, my tongue still dancing over the smooth surface of her bud. Breaking reluctantly away from my prize, still hungry for her to shudder under my lips. \"If you insist,\" I whispered, with an exhausted smile, the smear of drying honey cracking on my cheeks . \n\nI glanced over at Cid still seated against the wall, questioning if he was planning on joining us on the bed as well. He shook his head, and raised his hands in surrender. \"I'm spent.\" He mouthed, obviously content for a time to watch.\n\nThe girl's eyes were on me still as I backed out from between her leg. She eyes were clouded with lust, still hungry for sex, but no longer for the shallow inexperienced caresses I could give her. I knew that I should withdraw from the bed, and give our Master his space, but I wasn't ready to retire from the night's games just yet.\n\nI slouched back against the wall, glaring hungrily as Master's head moved to cover the space where mine had been just seconds before. His tongue moved between the girl's legs, licking her quickly into another orgasm. \n\nI fought with myself, wanting to push him out of the way and take possession of the honey-glazed slit I felt was mine. Never had I ever wanted something as bad as I wanted to take this girl again and again, until she begged me to stop. I wanted to fuck her until the sun rose and fell again. I knew that it was almost impossible for the two of us to hold out that long, but I wanted to try. Her taste still coated my tongue, and it seemed that our sex had begun to heal even my broken psyche.\n\nAs her screams reached that mind shattering pitch, he moved quickly driving his hard cock into the wet juncture where my lips had been playing. He moved in long, hard strokes, coaxing the screams and the orgasms from her. \n\nHe stared down at her, his face a mix of sexual hunger, and awe. \"Sidhe,\" he whispered once, as her screams turned to quiet moans. Her eyes shot open, and her face took on a dark, sad half-smile. She said nothing, but rocked her hips, drawing him back into their fucking.",
        "His ass flexed as he bottomed out deep inside her, then relaxed as he withdrew until only the tip was still sheathed, and flexing as he buried his length again. Causing her to let out short squeals and gasps. He moved faster, his balls slapping off her drenched taint and in a few short minutes had her screaming through another orgasm. \n\nI was still glaring as her screams began to quiet, and Master began to slow his thrusting. He looked down at her, a frown creasing his forehead and gave final thrust, the girl whimpered beneath him shaking her head no, mouthing, \"No. No more.\" \n\nHe pulled out of the girl as she whimpered that she couldn't take anymore. He turned, his steel eyes still full of fire and falling to take in my drenched slit, then making the slow track up to my face. \n\nLust driven, I met his eyes boldly. The molten fury of boiling iron almost enough to make me lower my eyes in submission. But the fire of my own passion gave me the strength to meet his eyes as he moved away from the writhing girl, and crawled up my body. \n\nHis lips covered mine, devouring my tongue with a hunger I still had not grown accustomed to. His fangs scraped across my lips as he worked my tongue with his own. Blood welled up in the rivets his fangs made, only driving our kissing into a frenzy. \n\nI tasted the girl's honeysuckle sex in his mouth, mingled with the dull copper that I knew to be my blood. I wanted to take the taste of her from him, and covet it within myself. I pushed against him, and he allowed me to roll him onto his back. Our mouths still moving together, as I climbed atop him. Unable to taste the girl on his tongue, I pulled back, looking down into his eyes.\n\n'Where is the broken child?' He whispered into my mind, his eyes falling closed, as he anticipated where I would take my fevered kisses next. \n\nI smiled darkly, the elixir of the girls sex driving me down the length of his body, my attention on the erection coated in her juices. \"She's gone.\" I told him, my voice sounding alien to my ears. I licked the tip of his chilled cock, moaning, as I smelled the light citrus aroma of her. \n\nI pulled his entire length into my mouth, fighting the urge to gag as the cock pushed against the back of my throat. Determined to cleanse her taste from his skin, I forced my eyes closed against the tears the filled them, refusing to be defeated. \n\nHe let out a long moan, as I sucked his cock, hungry not for him but for the taste that covered him. His hand rested lightly in my hair, his fingers tangling in the fine black strands, not forcing me to move or be still, just encouraging me to continue. I growled, unhuman and muffled, feeling the vibrations move through his dick, as I roughly licked against the underside.\n\nIn the past, I had been forced to suck Masters off, but never had I covered their cold cock willingly. I'd never felt so driven to give a Master that kind of pleasure. Even now, I did not suck my Master's dick purely for his pleasure, I was taking pleasure in his subtle but salty taste mixed with the honey of the girl, that even with my efforts I could not fully pull from the silky flesh. \n\nI opened my eyes, not to look up at the face of the vampire moaning as my lips and tongue worked the length of his dick, but over at the girl. Her eyes were only half open, as she watched me as I worked the cock in my mouth. She was quiet now, the waves of her orgasms no longer battering her, her hand absently moving between her legs. She offered me an exhausted smile as her eyes closed, and she began drifting into euphoria driven seas of sleep. \n\nI kept my eyes on her dozing form, as my tongue began lashing the underside of Master Julien's throbbing erection, his moans driving me to suck as much of him into my mouth, and continue to flick my tongue against the bundle of nerves on the underside of his glands. \n\nMaster began to buck, his long fingers gripping my hair tightly, forcing me to take his length until my nose was buried in his sparse tangle of pubic hair. I growled again, running my teeth over the smooth length, not to inflict any damage, but to change the sensations, to either quicken the coming flood or to stall it. I wasn't sure which, my mind was lost in the vehemence of this night's lovemaking.\n\nI bobbed my head over his dick, running my tongue along the bottom then across the glands and over, touching the defined edge of the glands on the top of his penis, then back down again. I ran my teeth lightly over the flesh every third of fourth repetition. I forced my gaze from the girl, turning my head to better take all of his prick into my mouth. I eyes fell closed, as I concentrated on keeping the rhythm.\n\n'I'm so close,' his voice whispered telepathically, a long moan issuing from his lips. His entire body quivered under my insistent mouth, the rhythmic slide-flick-slide-suck had him teetering on the brink. \n\nI sped my assault, trying to prepare for the icy flood about to fill me. But he shuddered almost immediately, almost gagging me with the cold jizm. I swallowed it down, my lips still around the girth of his spasming cock. The odd feeling of having swallowed an ice cube caused me to swallow again and again, milking the last of the semen. \n\nI had guessed his cum would be tinged with her taste, and I was right. I smiled as I licked the last of his seed from my lips, moving from between his outstretched legs. I lay down between Master Julien and the girl, looking to see that Cid was still sitting against the wall.\n\nHe smiled at me, his eyes flickering down to the hard cock bobbing to the beat of his heart. Almost asking me if he was next. I smiled and patted the bed, inviting him to join us. Not telling him 'yes,' but willing to entertain the possibility.\n\nI turned my attention from Cid, and watched Master's face, as he recovered. I couldn't help smiling, it had been so long since I'd willingly brought a man orally. Strangely, I felt a little more whole feeling his seed slowly warm within me.\n\nMaster Julien turned his head, his eyes quieted and returning to their usual soft grey. 'Thank you for that,' he whispered in my mind. 'You surprised me.' He smiled, sated by the pure human pleasure. \n\nI lowered my gaze, not slavishly, but respectful. \"I surprised myself,\" I told him in a hushed tone. The empowerment I felt fading, pulling my arousal with it. I felt content to bask in the afterglow of Master and the girl.\n\nCid slipped up onto the bed, distracting both Julien and I, and rousing the girl. He curled up on the bed, content to simply snuggle with us. His hand cupping his erection, stroking it gently as it began to shrink.\n\nThe girl sat up slowly, pulling Master Julien's attention. She looked down at him, as he frowned. \"I'm not what you think,\" she told him. \"I -\"\n\n\"\u00c1ine.\" He interrupted, he pronounced it 'Awnya', as he sat up, meeting her eyes.\n\n\"Not for a very long time, I lost that name, and those powers when I was raped and taken by one of the night creatures...\" She kept any accusation from her voice, almost like she grouped the other vampires, and our Master separately, though they were the same. \"It thought that it would be able to survive direct sunlight after it turned me, having taken all of my blood, only giving me a few drops of its own. That my seeming power over light and the sun would rid him of the curse of the dark...\" She sighed. \"It did not. I watched him burn in the morning sun.\"\n\n\"But you are not a vampire.\" Master said, sitting up, and frowning. \"You don't taste like one, you don't move like one, and obviously don't feed like one.\"\n\n\"No, I am not. Blood does not sustain me. And the sun does not burn me. What I was before changed the magic of the blood.\" She turned away, her voice cracking. \"I was foolish to have stayed out past sun-set, believing that my sway over the summer sun would ward off any evil. But as a goddess I was foolish; knowing only love, the miracles of growth and healing.\"\n\n\"When I was raped, I tried to used my magic against him, and stop his heart as I had done when some drunken king had forced himself upon me, but this creature was immune to my magic. And soon had forced himself upon me, and changed me into something that would never be welcome within Cnoc \u00c1ine...\" She sobbed quietly. \n\nShe wiped the tears and turned back to Master Julien, shaking her head angrily. \"I was taken, by another night creature from my homeland, and later sold as a slave. I passed as some exotic fey-human hybrid. My sweet, and intoxicating blood made me a specialty. That I can be drained and survive spared me from the usual slave treatment. I have been a slave for centuries...so many that I have lost count...\"\n\n\"I feed from the pain and love from humans.\" Her hand coming down to move across my healed chest, as I lay between she and Master. She looked down at me for a long time, the silence between she and Master Julien thick with unspoken words. \"I will understand if you want to take me to the next sale, because I threaten your territory. Once-goddess or not, I am still your slave.\""
    ],
    "authorname": "inka",
    "tags": [
        "vampire",
        "lesbian",
        "slave"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/tales-in-slavery-ch-06"
}