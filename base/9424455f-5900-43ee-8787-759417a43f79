{
    "title": "Time Rider Ch. 04",
    "pages": [
        "Disclaimer: All characters portrayed engaging in sexual activity are 18 years of age or older. Actual historical figures or living people represented are done strictly for context and humour, I lay no claim to them. If you had trouble following the plots of Pulp Fiction or Four Rooms because of the back-and-forth timelines, just turn around and leave now, as this fic will make you butthurt. As always, critiques and reviews all welcome, illiterate flames will be snickered at. Enjoy! \n\nChapter 4- Cirrhosis Of The Louvre \n\nMark blinked as he stared at the young woman who had just sauntered in. About his age, she was rather short, but cute in a quirky kind of way, with wavy dark hair that reached her jawline and cheerful brown eyes, over which she wore small round spectacles. Her green dress looked like elegant and well-maintained peasant wear. She seemed rather surprised to see him as well. \n\n\"A new playmate, mistress?\" she asked in French, clearly not surprised to see Lady Alexandra naked on her knees and stroking Mark's cock. \n\n\"For now,\" Alexandra said easily, smiling at her servant. \"He actually is an associate of Monsieur Edgeworth and needs our help.\" \n\n\"Oh, not that pain-in-the-ass again,\" muttered the girl named Lisette as she walked into the dimly-lit room, clearly put off by the mention of Chester Edgeworth. Her accent was distinctly different from Lady Alexandra's, more coarse and unsophisticated, even to Mark's untrained ears. His translator device was having trouble keeping up. \"Like our lives are not difficult enough.\" \n\n\"Perhaps, but we have time for some fun, I am happy to say.\" Alexandra pointed out, not at all bothered by her servant's mutterings. \"You will be delighted to know that in helping this young man, we will be putting the spurs to the Red Duke.\" \n\n\"Well, there's that at least,\" Lisette admitted, dropping the linen bags she had been carrying and coming toward them, beginning to shed her dress and underthings without batting an eye. \"This one is tall, Mistress. And he has a blank expression about him. English? A colonial?\" \n\n\"Close enough, my love,\" Alexandra giggled, watching as her beloved servant removed the last vestiges of her modesty, standing naked before them now, except for her spectacles. Her breasts were small, her figure trim and devoid of fat, but not skinny. Living and fighting alongside her Mistress meant Lisette had no time for being indolent. She was probably also the best marksman outside of the Sun King's army with a caliver. \"He is indeed from the colonies.\" \n\n\"And probably from some other time, if he's involved with Edgeworth, but I have learned not to care,\" the brunette sighed as she joined Alexandra in kneeling in front of Mark. \"Very well, let's fuck this one, before he gets killed like the others.\" \n\n\"Wait, what?\" Mark asked, his eyes widening and his erection threatening to retreat into his abdomen and his translator bud did its job. \n\n\"Ignore her,\" Alexandra said easily, smirking at her companion. \"She is just being salty about a boy she liked to fuck down at the market no longer being available.\" \n\n\"He die of dysentery or something?\" Mark asked. \n\nAlexandra shrugged. \"No, he got married.\" \n\n\"I'm still going to fuck him the next time I see him...\" Lisette said sullenly. \n\n\"Oh, sorry,\" Mark said, somewhat embarrassed. \"I guess I'm in the habit of assuming that you're the only person in this time I'm ever gonna meet who isn't riddled with a pox or sexual disease.\" \n\n\"A fair assumption, my friend...\" the blonde woman cooed as she began kissing along the length of his shaft and making him shiver. The fireplace kept the room warm and also gave it an amber glow that was so comforting and conducive to their current activities. Lisette nestled in closer, smiling and fondling his sac gently while watching her mistress pleasure their new plaything. \n\n\"He is large, Mistress,\" she mused, smiling slyly. \"Nearly the size of Buckingham, I think.\" \n\n\"Mmmmm, the men of days to come do indeed seem to be gifted,\" Alexandra murmured as she tilted his hard cock up and traced the tip of her tongue along the vein on the underside. \"Mark here is no exception, 'twould seem.\" \n\nLisette's surprisingly well-kept fingernails grazed along his thighs while she edged inward, wanting to be closer to her mistress. Alexandra now swirled her tongue around his throbbing head before putting it inside her warm, wet mouth. She opened her eyes and looked up at him before slowly sliding down his length in one slow, steady motion. Mark shuddered in pleasure, feeling her tongue swirling around his length, even as she kept her mouth on him. \n\nHis fingers found their way into her lush, golden hair, kneading at her scalp, and steadying himself while she began to bob back and forth expertly. In the back of his mind, he realized that she was as good as any girl from his own time at sucking dick. He shouldn't have been surprised, but sex seemed to be the one human endeavour that didn't really progress as time moved forward. People were either good at it, or weren't, and the best techniques had probably been around for thousands of years, needing no refinement. \n\nAlexandra was living proof of that theory. \n\nLisette moved in and began kissing her mistress' neck and collarbone, her hands now wondering and caressing the noblewoman's body with a practiced ease. Alexandra continued to suck on Mark's cock readily, not at all distracted by her servant's touch, but rather excited by it. She squirmed as her pussy grew moist, yearning to feel this man's tool inside her. \n\nLisette's mouth now joined Alexandra's in sliding up and down his length before they kissed around his cock, tongues flickering and sliding wetly as they moaned. His hands were on the back of their heads and he shivered again, lost in the unreal sensations. He felt the brunette girl take over sucking on him, while her blonde mistress nipped at the skin of his waist. \n\n\"Mmmm, he has a big tool, mistress,\" purred Lisette before bobbing along his shaft again. \"A pity he will not be available to us regularly.\" \n\n\"I think my friend is pleased with you, Mark,\" Alexandra said, smiling up at him slyly. \"Do you wish to fuck us both?\" \n\n\"That... sounds great...\" he grunted, closing his eyes and concentrating on not cumming so damn quickly. These two were a wicked tag team. \"But what if one of you...\" \n\n\"Fear not, cher, we will not,\" Alexandra assured him. \"I am classically trained, including in Roman medicines and can prevent unexpected complications from arising. Or our bellies.\" \n\nMark didn't know exactly what 'Roman medicines' had to do with contraception, but she was the expert in this time, so he'd take her word for it. From what he'd read, the alternative in this era was a condom made of linen, which wasn't even meant to prevent pregnancy so much as inhibit pleasure. Hell with that. \n\n\"Are you any good with that tongue, man of the New World?\" she asked now, smiling at him wickedly. \n\n\"Becky seemed to think so.\" Mark replied, trembling as he fought to hold on. He would welcome a chance to lick pussy if it would keep him from embarrassing himself before he had properly fucked either of them. \n\n\"Then Lisette will continue to see you your needs down below, while I become acquainted with your face.\" Alexandra breathed. Mark sighed as Lisette stopped sucking on his cock long enough to retrieve several large, plush pillows and lay them on the floor near the fireplace. He was almost in a daze as the blonde noblewoman led him to the scarlet and gold oreillers and then rested him on top of them. Without more ado, she nestled over his face, looking down his body, allowing him to examine her while Lisette knelt between his legs and resumed wrapping her lips around his member loudly. \n\nHe marvelled at her shining, slippery pussy, so tempting in the flickering orange light of the hearth. He had now fucked a few girls in this time period, along with Becky, and they were all completely natural, often unusually hairy between their legs. This glorious woman, however, kept her slit completely smooth, a total aberration from the norm. Lisette was almost shaven clean, which he could only assume was at her mistress' behest. He could see Alexandra's tiny, pink clit just peeking out from under its hood, begging for attention. The wet, exquisite heat of Lisette's mouth made him groan, and he pulled the blonde down onto his waiting mouth, needing to distract himself. His tongue snaked between her wet netherlips and inside her. \n\nAlexandra sighed shamelessly and squirmed on his mouth while fondling her opulent breasts. His fingers gripped her thighs tightly, flexing into her delicate flesh. She was not kidding about taking care of herself compared to her contemporaries. Her scent and her taste reminded her of Becky more than anything. He pushed his tongue deeper inside her, massaging her walls and core and making her gasp and shudder in delight. \n\nShe pulled at her nipples as she rocked back on forth on Mark's mouth, enthralled by how skilled he was proving at pleasuring her orally. He was quite possibly as good as Lisette, which was no small feat in her opinion. Her calves pressed in around his ears, her pert derriere bumping against his face. Mark's tongue flickered inside her and he buzzed his lips on her, sending jolts through her whole body. \n\n\"Mistress, he is ready for you,\" Lisette said, puling her mouth off his cock and looking up at her lady while pumping her tiny hand along his shaft. \"Would you like to fuck him now?\" \n\n\"Non, ma couer,\" breathed Alexandra, her body now showing a sheen of sweat. \"You may fuck him first. I assure you he will bring you bliss. I am fine where I am for now.\" \n\nLisette nodded and moved to straddle Mark's hips, facing her mistress. She took hold of his cock, biting her lip as she toyed it against her pussylips and clit. Finally, she pushed down, taking the head inside herself. She sighed while Mark shuddered as he penetrated her. She then groaned loudly as she sank down, taking him all the way inside herself. She was very tight and Mark made an incoherent sound into Alexandra's slit, making her gasp and shudder violently, cumming suddenly. She leaned forward and grappled onto Lisette, kissing her greedily as she came. Mark could feel her wetness soaking his face, the heady aroma enthralling him. \n\nEnveloped in a type of pleasure he had probably never experienced before, even with Becky, he simply fought to control himself, lashing Alexandra's inside with his tongue while Lisette squirmed up and down on his cock, fucking him. Her pussy flexed and clenched expertly around him. He made a guess about the blonde noblewoman above him and took hold of her ass cheeks, pulling them apart before sliding a finger through her puckered knot. \n\nAlexandra wailed in unexpected delight at the intrusion inside her back passage, pressing down and back against his finger and face. She rocked wantonly, genuinely thankful for the meddlesome Chester Edgeworth on this occasion. Mark showed no signs of relenting in his carnal assault. Whatever courtesies men of days to come were taught about a woman's pleasure, she envied the recipients. \n\n\"Gnnnn, mistress,\" whimpered Lisette as she squirmed on his cock. Alexandra could see the burgeoning shaft splitting her servant-girl's pussylips wide, glistening now with her wet desire as she squeezed around him. \"Mistress, he's going to make me cum!\" \n\n\"Then cum, my dearest,\" Alexandra cooed, eager to see her beloved Lisette in the throes of unbridled passion. \"And then I shall fuck him and we can cum together, non?\" \n\nThe mere mention of cumming with her mistress made Lisette moan loudly, gyrating on Mark's cock with wild abandon. She was fairly bouncing as the liquid heat washed through her, followed by the unreal tingles of la petit mort. She leaned forward and kissed her mistress passionately, her pussy clamping around Mark like a silken vise as she came. \n\n\"And now you, mistress!\" she panted as she regained control of her body, sliding off Mark's throbbing tool to make room for the blonde woman. Someone reluctantly, Alexandra pulled her gooey pussy away from Mark's mouth, shivering as his finger popped out of her ass. She moved down his body sensually, leaning over to take his cock in her mouth, moaning in pleasure as she tasted Lisette's cum on his rigid staff. \n\nHer mouth left his dick and she smiled back at him while she stroked his length. \"Perhaps you could take me from behind, my friend? It has been some time since I have felt it done properly.\" \n\nMark nodded and clambered up to his feet, moving around while Alexandra arranged Lisette, lying the brown-haired girl on her back. She then sank down onto her, their arms wrapping around one another and they kissed deeply and passionately, the mere sight of it driving Mark wild. They were so total in their devotion that he wondered if they were in love. \n\nLisette then moved around deftly, so that her mouth was beneath her mistress' dripping pussy, while the blonde woman hovered over her servant's on her hands and knees. Mark stood behind Alexandra and settled onto his knees.Lisette confidently reached up and took hold of Mark's pulsing cock, guiding him closer, until he was holding Alexandra by the hips. She placed the knob of his cock against her mistress' netherlips, teasing it up and down for a few moments. Alexandra's response was to sigh and kiss her servant's pussy lovingly, making her shiver. \n\nMark pursed his lips as Lisette finally guided him inside the aristocrat's womanhood, with a slow, steady push. Already wet and ready, Alexandra's pussy yielded before him easily, but he soon groaned as he realized she was as tight, if not tighter, than her servant, who was considerably smaller in frame. Alexandra moaned into Lisette's pussy while Mark trembled at the exquisite, wet heat. Once he had sunk in right up to the hilt, he paused for several moments, adjusting to the wicked sensation. He already understood he was no match for this woman's sexual prowess, and he was thankful for her indulgence. \n\nOnce he was inside her, Lisette released him and wrapped her hands around her mistress' thighs, holding them firmly while she began kissing devotedly at her pussylips, clit and Mark's visible shaft and balls. Clearly she intended to facilitate their mutual climax and make sure they both experienced as much pleasure as they could handle. Knowing not to wait any longer and to simply take cues from Lisette, Mark made sure he had a firm grip and began pushing back and forth inside Alexandra, using long, slow, and deliberate thrusts to begin. The blonde moaned in appreciation of his efforts. \n\n\"Mmmmm, you are very good with your tool, my friend,\" she sighed, smiling back at him before returning to kissing Lisette's pussy and sliding a slender finger inside her. \"You do not just fuck, like so many men of this day, but you know how to make love. Your Becky is a lucky girl.\" \n\n\"Thanks...\" he managed to say, praying for endurance as he felt her rhythmically squeeze herself around him with every thrust, even while she pleasured her servant girl. This woman was a succubus. Hadn't she said she was an agent of Anne of Austria? She'd be formidable indeed. And if she was one tenth as good with a sword or pistol as she was at fucking... \n\nAlexandra giggled at his inability to speak in full sentences, resolving to go easy on him and simply enjoy herself. A small allowance, perhaps, since she was obligated to help him. She pushed back slightly until her ass cheeks met his hips and her wet pussylips pressed against his skin, enveloping his cock entirely. Beneath her, Lisette kissed and slid her tongue all over them, lost in a dutiful reverie. \n\nShe realized Mark could take guidance and instruction without words, if she made her intentions known. She made him fuck her a little faster now by not only moving back and forth, but by squeezing him inside her more quickly, a technique she had taken years to perfect, but always to advantage. Soon, he was sliding in and out of her rhythmically, almost pulling his cockhead out of her before pushing all the way back in. Given his ample length, this was a wicked delight for her- fucking his cock was even better than sitting on his tongue! \n\nLisette was not only pleasuring them, but helping to regulate their coupling, something she could now do instinctively. Her devotion to her mistress was total. If Alexandra was fucking a man, Lisette was not jealous (usually), but simply played her part in making sure everyone enjoyed the experience as much as possible. They were practiced lovers who knew one another's needs and desires completely, and Lisette now fulfilled her role in the tryst with sublime skill. \n\nMark shuddered as he felt Lisette's fingers massaging beneath him, along his balls and even his taint. To his surprise, it served to help distract him from the unreal pleasure if being deep inside Alexandra, allowing him to last longer than he had any business hoping to. He began pushing in and out a little harder, asserting himself and making the blonde moan in pleasure. \n\nSoon, Mark was slapping his hips against her ass cheeks loudly, increasing the tempo to the place where Lisette couldn't readily use her dainty fingers on him. She instead continued lapping at her mistress' clit and massaging the split lips as he fucked her. She trembled as Alexandra pushed two fingers deep inside her now, finding her pleasure points with unfailing skill while she sucked on her servant's clit, moaning around it. Alexandra squirmed back against Mark lustily and onto Lisette's mouth, panting in delight. \n\n\"Oui!\" she gasped, gyrating her pelvis expertly, the rings of her pussy muscles rippling along Mark's throbbing dick. \"Right there! So good!\" \n\nMark was finding his body trembling, the familiar tingle starting to well up within him. His thrusts were faster but less controlled now, his hips performing an almost shoving and scooping motion as he dug inside the French noblewoman. Lisette was massaging her Mistress' pussy eagerly, delighting in the mingling taste of desire on her two lovers. She watched as Mark's glistening shaft slid back and forth, pulling wetly at Alexandra's netherlips. \n\n\"Gonna cum!\" he grunted, stiffening, trying to hold on while making sure that was what she wanted. \n\n\"Yes!\" Alexandra purred, her body flushing with warmth at his words. She heard him groan and press as hard as he could against her. She obliged by pushed back against him and squeezing for all she was worth. She sighed loudly, sliding her fingers as deeply into Lisette as she could, shivering in pleasure as her orgasm blossomed through her. Her wanton pussy fluttered around Mark's cock as she felt it pulsing and spurting his pearly cum deep inside her. \n\nThey heaved and ground against one another for nearly a minute until Mark sagged back on his haunches, while Alexandra slowly laid forward, his cock sliding out of her with a wet pop. She rested now on top of Lisette, who busied herself by tilting her head up between her mistress' legs, kissing her pussy and then lapping at it hungrily, her tongue finding the creamy globules of Mark's cum inside her, thrilling to the tangy taste. Alexandra sighed in contentment, her eyes closed, squirming gently. \n\nNot long had passed before the dutiful girl had cleaned her mistress thoroughly, ending her task with loving kisses of devotion. Alexandra rolled gently off to the side while Lisette got on her hands and knees, moving between Mark's legs. Without waiting for any particular permission (not that any was forthcoming or needed), she took hold of his still-swollen but softening cock and laved it with her mouth, once again thrilling to the taste of his cum mixed with her mistress'. She cleaned him off readily, loving how responsive he was to her touch. ",
        "Finally, Alexandra rose to her feet and came to stand beside them. She pulled Lisette to her feet and wrapped her arms around the girl, kissing her deeply and lovingly. Lisette melted into her embrace, submitting completely and with reverence. The kiss finally ended, and the patrician smiled down at Mark before offering her hand to help him up. \n\n\"I found Lisette in Provence maybe three years ago, trapped in a tiny chapel and being disgraced by a priest. I ran him through with my blade and took her under my wing.\" \n\n\"Mistress has had my undying devotion and unconditional love since then.\" Lisette added in very thick English, the first sounds of it she had offered. The phrase sounded almost practiced or rehearsed to Mark's ears, then he realized it probably was. Alexandra had taught Lisette what to say about herself once she had initiated a beginning statement she'd recognize. It was how they protected her in English, because it demonstrated the depth to which they were devoted to one another- Alexandra would kill a man of God for Lisette, and there was nothing in creation she would not do for her mistress. \n\n\"I believe it,\" Mark replied, nodding. \"I'm glad she saved you, Lisette, and Alexandra's lucky to have you.\" \n\nLisette was taken off-guard by what Mark had said once her blonde mistress had translated for her, and she blushed and looked at the floor. It occurred to Mark that she probably wasn't used to anyone aside from Alexandra expressing any concern about her life or safety. She was just another peasant, after all. \n\n\"Let us clean ourselves lightly and then prepare for a light meal and then bed, shall we?\" Lady D'assaut suggested. \"Mark, I do not know if you are a man of faith or not, but Lisette and I usually have about an hour of devotional time just before we turn in. You may join us or do as you please, as long as you're respectfully quiet.\" \n\nMark nodded and joined the pair in going to another room that was clearly dedicated to bathing, something he doubted was all that common in this time and place. Lady Alexandra really was out of the ordinary. \n\nHe watched with interest as Lisette helped her mistress into the large, round wooden tub, under which a contained fire was glowing. Easily big enough for the three of them (no doubt by design, he thought), he allowed himself to be helped in before the two women began washing him, giggling as they used tiny packets of powdered soap and their bodies to make sure he was clean all over. \n\n\"Normally, to come across water like this is rare and expensive,\" Alexandra explained as she knelt patiently and looked at him while Lisette squeezed her breasts into her mistress magnificent orbs, lathering her. \"But this particular building has an underground stream running below it, so retrieving water from a well in the courtyard is comparatively simple. And I do love to be clean.\" \n\n\"I can get behind that.\" Mark agreed. \n\n\"Maybe in the morning.\" Alexandra quipped readily, winking at him. They finished bathing and then Lisette dutifully dried them both off. Linen shifts were provided and then Mark sat with his host in the study while Lisette prepared a light meal for them all. He'd never eaten a pigeon before, but it was surprisingly good. Small nibs of sweetened chocolate comprised dessert, and of course there was the wine. \n\nOnce they had finished, Alexandra and her companion excused themselves and went into another small room to say their devotionals for maybe an hour. Then they invited Mark to come and sleep with them in Alexandra's massive, plush bed, covered in crimson sheets threaded with gold. Everyone removed their linen shifts and clambered into bed. Alexandra and Lisette kissed one another and then Mark goodnight. \n\nIn spite of having two naked women nestled into his sides, he slept surprisingly well. \n\n*** \n\nThe moon was a bright white orb overhead as Rebecca looked out the window from her stately bedroom. A tear glistened on her cheek, as it had every night since her abduction and arrival in Paris. Not only was she stuck here, in the Sun King's France, with no method of returning home, but she was the unwilling 'guest' of Cardinal Richelieu, who was seeing her trained to serve Queen Anne. \n\nWorse still, and what truly broke her heart, Mark was dead. Killed be the Cardinal's men and no doubt still lying in that fateful field, his body ravaged by scavengers. \n\nShe bit her lip as tears started to roll down her face, willing herself not to break into sobs that everyone on this floor of the palace would hear. \n\nShe buried her face in her hands and surrendered to the grief, shuddering as she wept, not caring about the moon framing her in rays of silvery light. \n\nShe was so alone. \n\n*** \n\nMark had to exercise patience that morning, since they were eating a leisurely breakfast and casually discussing matters. But the matters were nothing of import, at least not from his point of view- they were not improvising plans to save Becky, which was foremost on his mind. \n\nAlexandra was well aware of the agitation just under his calm surface and she finally sought to allay it. She smiled and put a hand on top of his as she sat next to him at the table. \n\n\"My friend,\" she said gently in her impeccable English. \"Worry not for your Rebecca.\" \n\n\"How can you say that?\" he asked, trying to keep any exasperation out of his voice. \"It's all that really matters to me, not that I'm not grateful, of course. But I feel... I feel like we are dawdling.\" \n\n\"I understand,\" she allowed, smiling her beautiful smile that would drive the clouds away. \"But I assure you, she is in no immediate danger, now that she is in the Louvre. And as you have already noted, she has been there for a month. We cannot simply rush in and storm the palace, because we would be risking her life, along with many others, not the least of which is my queen, Anne.\" \n\nHe sighed and nodded. \"But you are helping me rescue her, right? As in, we free her from the palace and she and I can get away, find my time machine and go home?\" \n\nShe smirked and nodded. Maybe she didn't blame him for his suspicions. \"Yes, Mark. That is the only end here. I cannot remain indebted to our mutual associate Chester Edgeworth, especially not since this is one of his temporal matters. I want nothing to do with them, so leaving- oh, what is the term... 'loose ends', if you will, does not suit me. It pains me to say so, since I like you, but with any luck, I will never see you again once we have rescued your Rebecca.\" \n\nShe smiled and squeezed his hand again. \"Please trust me. And exercise patience. I already have a plan in mind, I just need more information from the palace.\" \n\n\"O-okay,\" he said finally, hoping he wasn't being unreasonable. \"Just out of sorts, I guess. Not a lot of experience with the Baroque Period.\" \n\nShe tilted her head slightly and smirked. \"Baroque Period? Is that what people in your time refer to this era as?\" \n\nMark shrugged. \"Yeah, I dunno why.\" \n\n\"In my language, baroque refers to an oddly-shaped pearl,\" she mused. \"You might have a better understanding of my time and history than I do, in retrospect.\" \n\n\"I doubt it,\" he chuckled, put at ease once again by her gracious manner. \"I never really had much of a head for history. Might actually be pretty skewed, since everything I know comes from movies and novels written by people from your future.\" \n\n\"I don't know what a 'movie' is, but I think it's best I not either,\" she mentioned, stroking his wrist. \"Once Lisette has finished serving dejeuner, she will proceed to the palace to see what she can find out. While it is known that I am back in Paris, I do not want to appear just yet for my royal duties. Maybe later today or tomorrow. While the Cardinal cannot absolutely confirm that I am more than a lady-in-waiting for the Queen, I wish to not give him any reason to start looking.\" \n\n\"Fair enough,\" Mark allowed. \"So, what'll we do until then?\" \n\n\"While I could indeed provide endless hours of pleasant discourse for you, I think that would not be the best idea, since you are a man of tomorrow.\" Alexandra pointed out. \"And, to be honest, I am rather smitten with your lovely cock at the moment. So, I was thinking that we might continue to fuck one another until it is time for us to undertake your mission.\" \n\nMark laughed. \"Yeah, I'm good with that. \"Becky'd think I had gone totally stupid if I didn't agree to kill time that way.\" \n\n\"I do not know her yet and I think I love her,\" Alexandra mused, smirking. Her sapphire eyes glittered with delight. \"We shall make the most of our time together.\" \n\nThey went back to eating their breakfast, prepared by Lisette, and if Mark found the fare unusual, he certainly couldn't complain about the taste. Sausages, hearty bread, along with some vegetables and a broth. A new delicacy to the Sun King's France, Chantilly cream, rounded out the meal, and she promised him that later they would share of bottle of a very special new type of wine, from the region of Champagne. \n\nLisette had dressed and excused herself, heading off to the Louvre to find out information for her Mistress. This left Mark alone with Alexandra, and if he was feeling any awkwardness, she certainly wasn't. She smiled and shed her clothes, exposing her glorious body. She took him by the hand and led him back to her bedroom, smiling at him. \n\n\"Not to seem indelicate, Mark, but... have you ever fucked a girl in her behind before?\" she asked. \n\nHe nodded. \"Done it with Becky more than a few times recently. And yeah, I'd really like to fuck yours.\" \n\nShe smiled, pleased with his response. \"Excellent, it has been a while for me, at least since a man has done it to me.\" \n\n\"Lisette certainly has her uses.\" Mark chuckled. \n\n\"More than you can ever know, my friend,\" she agreed as she stood in front of him and helped remove his clothing. She was close enough that her breasts pressed to his chest, her hips touched his and her pussy was nestled against his cock, which was beginning to swell. She looked up into his eyes, her own glinting with desire. \"I look forward to feeling you in my ass, Mark.\" \n\nShe put her arms around him and pressed her lips to his, kissing him deeply. He was thrilled by her assertiveness, even if she wasn't being dominant. His own hands rested on her hips before starting to wander around her divine form, finally finding her ass cheeks, squeezing and massaging them, making Alexandra moan. \n\n\"What I am starting to appreciate about you men of the future is that you enjoy lovemaking and carnal activity for its own sake,\" she purred, one of her hands now sliding down to find his cock and stroking it. \"You seem free of the confines of the church's strictures, proscribing pleasure through sexual activity.\" \n\n\"Not much point in doing it if you don't enjoy it,\" he agreed, shivering as her nipples poked against his chest while she squirmed her breasts around. She bit his lower lip and tugged back on it, wiggling her ass cheeks against his hands. \"And you seem to enjoy it a lot for someone from this time.\" \n\nShe broke their kiss to look up at him again, her eyes flashing with her growing to fuck. Her hand was fondling his cock, which was now rigid and pulsing. \"In my service to the queen, sex is often a weapon I employ. I am required to be proficient in its use to defend her and the realm.\" \n\n\"Lucky me,\" he breathed as she knelt in front of him, dragging her opulent breasts down his torso before arriving at his member. He shuddered as she began kissing his cockhead before slowly sliding him into her mouth and down her throat. \"Gnnnn, God. Beck- I mean, Alexandra.\" \n\nShe giggled and pulled her mouth off his cock to look up at him in amusement, her hands still stroking. \"Our techniques are that similar? It took much training for me to be this good, if the women of your time are this competent with ease, then I am jealous.\" \n\nShe buried his member in her mouth again, bobbing back and forth lustily and making him shiver and grasp at her golden locks. Her own hand snaked down between her legs and began playing with her increasingly wet pussy, teasing it. She knew they had at least a few hours before Lisette's return and she intended to make the most of them. \n\nMark groaned and fought to control himself, little or no match for her exquisite technique. He knew he'd have to fuck her soon, or he'd be cumming in her mouth. And he was really looking forward to fucking her ass, as she intended. \n\n\"Mmmmm,\" she purred, popping her mouth off of his cock and smiling slyly while sliding her tongue up the underside as she held it up. \"Would you care for a chance to reciprocate, lover?\" \n\nHe nodded, and she stood before pulling him onto the bed. She laid him on his back and then crawled over him, facing down his body. She didn't suck on him again, so much as she toyed with his cock to keep him hard, while allowing him to kiss and lick her slick, pliant womanhood. Mark buried his tongue inside her and Alexandra moaned loudly, pumping his dick. \n\nMark slid his tongue in and out of her, marvelling at her taste. He also began teasing her little knot, slipping the tip of his finger into her ass, making her groan shamelessly. She wriggled back against him, her glorious behind swaying above his face while her pussy pressed to his mouth. \n\nHis finger pushed further inside her ass, wiggling about, exploring her. He gently added another and she keen as his fingers stretched her knot, preparing her for his cock. She was gasping now, her body incredibly warm and her skin flush with desire. She lunged his cock back into her mouth again, bobbing up and down hungrily. \n\nShe pulled herself off his tongue and fingers, squirming down his body until she was straddling his cock. She eagerly slid his throbbing member inside her pussy, causing him to stiffen and arch his back. She rode up and down lustily on him, while reaching back and pulling her ass cheeks apart. Mark took the hint and began fingering her puckered hole again, making sure it stayed limber and ready to receive him when she was ready. \n\nHe shuddered as she squeezed herself around him, rippling her pussy wickedly until they were both sweating and shaking. Then she looked back at him and he nodded. She pulled off his cock and spun herself around, now facing him. She put on hand on his chest to steady herself, while the other reached back and took hold of his tool, helping to guide it to her quivering notch. Her felt it press against her ring, slippery with her pussy juices and then popping through readily. Alexandra sighed as she slowly but steadily settled down, taking him inside her back passage. Within seconds, he was buried to the hilt inside her. They both sat still for several seconds, just reveling in the feel of their union. \n\nAlexandra began slowly moving up and down, Mark's cock sliding inside her ass. She pulled up until only the head was inside her, then sank back down, taking him all the way back in. Mark's hands moved up to her opulent breasts and began caressing and squeezing them. She murmured in pleasure at his touch and clenched her cheeks, squeezing him tightly inside herself. \n\n\"Yes, I will certainly miss this,\" she breathed, her eyes closed. \"You are so deep inside me.\" \n\nHe pushed his hips up and down in rhythm with her movements, his fingers now rolling around her nipples, pinching and tugging on them, the sting sending taboo thrills lancing through her. Her fingernails pressed against the skin of his chest before she leaned down and kissed him heatedly, their tongues tangling. The change in the angle of penetration meant she rocked back and forth along his length now. His hands moved down to cup her ass cheeks again, massaging them in circles and pulling them apart, making her whimper in delight. \n\nTheir bodies churned and writhed against one another heatedly, mingling in pleasure. Their kissing became more fevered as tingling warmth enveloped them both. Then panted through the kiss, with Mark bracing his legs to thrust himself up deeper inside her while she braced her hands outside his shoulders and pushed back against him, burying his cock deeper in her ass than ever. Sweat shone on their skin as she pulled back from the kiss and started down into his eyes. \n\nMark shook uncontrollably and groaned loudly, pushing up with all his might. Alexandra sighed and sat up tall, sinking onto him as he began pumping his cum into her ass. Her knot clenched greedily, throbbing around him as he filled her tight confines with his essence. She massaged her pussy frantically, her fingers flying over her clit. She bathed his groin with her cum. Colours swirled behind her eyes as the climax permeated her being. She couldn't remember the last time a man had made her cum so hard. \n\nNot since... \n\nShe shuddered and collapsed on top of Mark, trembling. He lay beneath her, his hands tiredly coming to rest on her lower back. They lay in exhausted bliss together, unwilling to move. His cock throbbed in her ass, which gripped him possessively, unwilling to relinquish his prize. He showed no sign of softening, which she was thankful for, since she was deliciously pinned to him. \n\nA full hour-hour passed before they stirred. She smiled down at him before kissing him again. She rocked on his stiff member before slowly pulling off and then laying on her side, pressed to him. She kissed his jaw, whispering words of gratefulness to him. \n\nShe felt the need to do so, since there was a distinct possibility that these might be his last days alive, given the danger they would face in rescuing Rebecca. \n\nAlexandra had sworn to try and help him, and she would do everything she could, so long as it did not compromise her service to the queen. She couldn't tell him exactly how much planning and detail this required as a result, since letting the silly boy know the extreme danger he was about to face might make him balk at a crucial moment and then death was inevitable. She could only hope that his excellent physical health and desperation would see him through. It was all they had. \n\nLisette would be back soon, and it would time to plan their mission. \n\nGod help us all. \n\n*** \n\nRebecca sat in her chair at the small desk of her bedroom, scowling as she drained her glass of red wine, the fourth she'd had in the past hour. She knew she was drunk, but she was too sullen and angry to feel it. She'd done little except drink since she'd been brought to the Louvre. Except for when she was heading to bed, she was rarely alone, surrounded by women who dressed her as a lady of the court and attempted to train her in her duties. \n\nShe proved predictably reticent, although she had stopped punching her handlers over the last week or so. It wasn't their fault, after all. A few of them seemed worried about her well-being if she continued to prove so difficult, but Becky was mostly beyond caring. \n\nWhat did she have to look forward to, now? Life amongst these backward, stymphian midgets? She had a distinct feeling she was better off dead. \n\nShe sighed and opened another bottle, pouring her fifth glass of the evening. Oblivion in wine was all she looked forward to. \n\n\"Oh, there you are. I was hoping to meet you...\" lilted an attractive voice from her door. \n\nFacing away from the entrance to her room, Becky looked up into the mirror on the wall, and saw a striking silhouette standing in the entranceway. A tall woman in a burgeoning gown stood there, apparently waiting for permission to enter. Slowly she turned around, hoping her eyes weren't too bleary with wine and grief. \n\nShe rose from her chair and stood quietly, holding her hands primly in front of herself. She dipped her knees slightly in a curtsey, just in case this was Anne of Austria. \n\nThe figure came into the room slowly, approaching her. The lamps and candle finally illumined her, and Becky's breath was taken away- the woman was stunning! Golden blonde hair spilled down her back, while her sapphire eyes gleamed with a sensual intelligence. Her face was classically beautiful and her impressive bust sat high inside her dress, the cleavage prominently displayed, as was typical of the court. Becky felt a tingle inside herself as she approached. ",
        "\"You are Rebecca, oui?\" the woman asked, her voice glorious in Becky's ears. She stopped in front her and smiled dazzlingly before returning the curtsey. \"I am Alexandra D'assaut, one of her majesty's ladies. I am pleased to finally meet you.\" \n\n\"I... it is a pleasure to meet you, too, my lady.\" Becky said falteringly. This woman was more beautiful than she thought possible for someone of this era. \n\n\"I know you are new to the palace, and it is rumoured that the circumstances of your arrival were less than ideal,\" continued Alexandra. \"You are even more beautiful than I have been told, Rebecca, and I sense a great sadness in you.\" \n\nShe stepped even closer to Becky, who bit her lip and swallowed slightly. Their breasts were almost touching, and she could feel her heart thumping in her chest. \n\n\"But I say to you now, my friend, despair not and take heart,\" Alexandra said in a voice barely above a whisper, as if what she was saying was a secret meant only for Rebecca. \"The days to come will give you hope.\" \n\nBecky didn't know what this woman meant, but she wanted to believe her. The ache in her heart lessened slightly. They stared into one another's blue eyes quietly, lost in what they saw. \n\nAnd then Alexandra leaned in and pressed her lips to Becky's, kissing her gently. Becky did not retreat from the kiss, although it was a second or two before she could react. She then moaned slightly and returned the kiss. The two women moved closer, breasts pressing as they held one another by the arms and continued to kiss. Becky trembled, thrilling to the intimacy they shared. \n\nAlexandra pulled back from the kiss, a tempting strand of desire hanging between their lips. They both breathed as they stared, but she finally smiled and delicately used her finger to wipe the strand from their lips. \n\n\"You will see me again soon, my friend,\" she cooed, her fingers gently caressing Becky's cheek. \"I look forward to our reacquaintance.\" \n\nShe backed up two steps and curtseyed gracefully, compelling Becky to hastily do the same, before she turned and glided out of the room, like a vision. Becky unsteadily sat back in her chair and let out a heavy sigh. Her heart was still pounding, and for the first time in weeks, she felt something other than heartache. \n\nBecky turned back to her bottle, trying to distract herself from the unexpected throb in her loins. \n\n*** \n\n\"Your majesty.\" Alexandra said reverently, her curtsey deep and formal. \"I have come to speak with you about a matter of some concern.\" \n\nSitting in an ornate chair in the lavish boudoir, Anne of Austria, probably the most famous woman in Christendom, smiled at her trusted servant. \"You have only just returned from Spain, my dearest Alexandra, and you have yet another matter to bring before me?\" \n\nAlexandra nodded humbly, her hands in her lap. \"Yes, my queen. Though it pains me to do so, I must beg a boon and ask you to trust me.\" \n\n\"My trust in you is implicit, Alexandra D'Assaut, and needs no confirmation. Has it ever?\" the queen intoned, gesturing for Alexandra to approach her, while waving for her attendants to live them alone. The two women curtseyed and exited quickly. Alexandra knelt in front of Anne and put her hand on the queen's knee in supplication, not looking up. \n\n\"Your majesty, a beautiful young woman has recently been added to your retinue, and is set to enter your service within the next few weeks.\" \n\nAnne smiled and nodded. \"I have not met her, but I am told she is quite possibly the only woman in France who rivals you in beauty. Her name is Rebecca, oui?\" \n\n\"Just so, my queen.\" Alexandra confirmed. \n\n\"Do you wish for her to serve directly under you as a lady of the court?\" Anne asked, knowing full well that Alexandra also enjoyed the company of woman, not merely men. \n\n\"She is indeed breathtaking to behold, my queen, but no, that is not my request of you. The girl, Rebecca, do you know how she was brought to Paris?\" \n\nAnne considered. \"The rumour is that she was found by the Cardinal, who was convinced she would make a magnificent addition to my household. She did not come willingly, initially, and has proven somewhat intractable since.\" \n\nAlexandra nodded. \"It is as you say, your majesty. But I know something about this woman that not even the Cardinal knows or can begin to guess at.\" \n\nThe queen frowned slightly. \"She is not a danger to us, is she?\" \n\n\"Not as such, no,\" Alexandra admitted. \"But please accept my word on faith that we have no right to her and must not keep her.\" \n\nAnne tilted her head. \"Is she secretly a member of a royal family?\" \n\n\"Not at all, no, but her presence in Paris, in France, is a source of complication that even I could not save us from.\" Alexandra said, her voice betraying the seriousness of her words. \n\n\"And you feel I would be best off knowing what this danger is,\" mused the queen. \"Do you need to kill her, Alexandra?\" \n\nAlexandra finally smiled and looked up at the queen. \"No, your majesty. But I will tell you now, that I must spirit her away from Paris, and the Cardinal will not take kindly to this action. The next few nights in the palace may be... tumultuous.\" \n\nAnne could not help but smirk. Though the Queen and Cardinal were both devoted servants of the king, they were not allies and frequently at odds. Few things brought Anne more joy than to cause consternation for Richelieu. \n\n\"Do what you must, by beautiful Alexa,\" she said finally. \"As in all things, you have my trust and blessing.\" \n\n\"Your majesty, thank you...\" Alexandra said, taking the queen's proffered hand and kissing it reverently. \n\n\"Go on, then, silly girl,\" Anne giggled. \"We mustn't keep the good Cardinal waiting.\" \n\nAlexandra stood and curtseyed deeply, before backing up and then turning and exiting the room. The queen sat quietly for some time, wondering what danger was posed by this girl her most trusted agent had mentioned. She was aware that Alexa knew things that few people alive were privy to, and for her to ask for total trust was no small thing. \n\n\"God bless you and protect you, Alexandra,\" she thought, sighing at how helpless she felt. \"Where would I, where would France be, without you to defend it?\" \n\n*** \n\n\"What you need to understand, Mark, is that Lisette and I will be aiding you in every way we can,\" Alexandra explained as she helped dress him in his attire meant to get him into the palace. \"But we cannot be seen fighting for you under any circumstances. Not only would it jeopardize the queen, but it would not benefit your cause any, because the Cardinal, in his wrath, would call all of Paris down on our heads. Our one hope lies in misdirection and confusion.\" \n\nMark nodded, holding his arms out to the sides while his host and her servant fixed the ties on his sleeves in place. He had been relieved when Alexandra informed him that she'd found Becky and she was fine, if desperate to escape. \"You're dressing me up as a musketeer? Aren't they a little too famous for me to pull this off?\" \n\nAlexandra smiled. \"The history and propaganda of your own era seems to have idealised them beyond their actual station, my friend. The Musketeers, as you seem to know them, are a junior regiment in the king's service, known for their boisterousness and elan, but hardly socially prominent. No, the palace itself is watched by the Garde-du-Corps and the Cent Suisse. And trust me, Mark, you do not want to get on the wrong side of the Swiss Guard.\" \n\n\"So if I'm a nobody, how do I prevent any somebody from giving me a very thorough anal probe?\" he asked, watching as they fixed a colourful sash around his waist, along with a baldric. \n\n\"You will be given two missives, one with the royal seal of the king, and another with the seal of the Cardinal,\" she explained. \"If anyone stops you, do not speak, simply show them one letter or the other, depending on whom you are confronted by, and act impatient, as if they are holding up your mission. Let the seals do the work for you, Mark.\" \n\n\"Okay, that sounds good in theory, but...\" \n\nShe nodded. \"No battle plan survives contact with the enemy. If things 'go to Hell', to borrow a phrase from your time, I assure you, Lisette and I will be ready. I will teach you some helpful phrases, to be used if necessary. Your only goal at that point is to reach Rebecca, who will be in the room I have shown you on the map of the palace, and then to make it to the Cour Caree, where a non-descript carriage will be waiting to take you to a safe place of mine.\" \n\n\"Wait, what's gonna happen to you and Lisette?\" he asked, clearly concerned as they fitted him with a belt now. \n\nAlexandra smiled and touched his cheek with her hand. \"You needn't worry, Mark. We have been in tighter fixes than this, I assure you. My determination to be free of Chester's debt is motivation enough to make sure this plan succeeds in a spectacular manner.\" \n\nThey had gone over the plan she'd devised, and she had made him memorize the route he would take through the palace, once he had been admitted. She had taught him some basic bur essential French phrases, making sure that he spoke them flawlessly, all on the hope he would never need to use them. So much of this depended on Mark's willingness to stick to the initial plan. Could this undisciplined boy from the future be trusted to do so? \n\nLastly, they fitted him with his tabard, the blue trimmed with white and the fleur-de-lis, indicating his membership in the Musketeers. She deemed it unlikely he would run into any actual Musketeers inside the palace, since their own headquarters was some blocks away on the Rue de Siene. \n\n\"Cool, I get a rapier and a pistol?\" he remarked in excitement as they slid the sword into its scabbard and a wheellock pistol into a holster. \n\n\"With any luck, you will not need to try and use them,\" she answered somewhat grimly. \"Because I am willing to bet that even the most junior scullery maid in the royal kitchens would prove better with a blade than you, my friend.\" \n\nMark grunted and looked put off, but he needed to hear the truth. These were not meant to be weapons, except as a very last resort. They were props to get him to Rebecca. \n\n\"Now,\" Alexandra said, standing in front of him and smoothing any wrinkles out of his shirt. \"What is your name?\" \n\n\"Mark.\" \n\nShe closed her eyes for a moment before speaking again. \"No. What is your name that I have given you for this little caper of ours?\" \n\n\"Oh, uh... Benat.\" \n\n\"Yes,\" she confirmed, thankful that he had remembered at least that much. \"You are Benat du Ferres, of Soule, from the south of the realm, near the Spanish border, which accounts from your almost incomprehensible accent when you speak. With any luck, it should annoy people you speak with so badly that they'll dismiss you quickly and send you on your way.\" \n\n\"Mademoiselle From Armentiers.\" Mark mused, smirking. Alexandra gave him a quizzical look. \"Nothing, just a song from my own era.\" \n\n\"Wildly inaccurate, then, since I have been to Armentiers and there are no ladies to be found, I assure you.\" Alexandra sighed. \"Anyhoo, we are about as ready as we can be without over-planning. I still have a few matters to prepare on my own behalf, so Lisette will see you down to the carriage that will take you to the palace.\" \n\nShe embraced him now, her arms holding him close and her mouth on his neck, giving him a kiss. Mark stiffened for a moment but then returned the hug. \n\n\"Have faith, Mark,\" she whispered. \"All will be well. If I have my way, Lisette and I will see you and Becky before you return to your own time.\" \n\nShe released him and turned to walk into her study. Lisette put a gentle hand on his shoulder. He turned to look at her and she smiled prettily. \n\n\"Let us go, young master,\" she said, tilting her head toward the wall where a secret door was already opened. \"Adventure awaits us.\" \n\n*** \n\nThe non-descript carriage had indeed made its way through Paris' winding streets, taking well over an hour to finally stop in front of the palace and allowing Mark to get out of the cramped cab before it rattled off. The sun had set some time ago, and night hung over the city heavily, the cloying air of Paris carrying the city's growing pains to his ears. Even at night, the city was not silent. \n\nMark adjusted his outfit and marched toward the outermost gate of the vast palace, its arms spread wide and encompassing a massive courtyard. Two men wearing ornate red uniforms and holding pikes crossed their weapons at his approach, barring his entry. One of them gruffly asked him to state his business. \n\nTrusting to the plan, Mark said nothing, but merely held out one of his sealed letters, this one bearing the emblem of Richelieu. The guard examined it for several seconds, consulting with the other guard before handing it back and then opening the gate. Mark shot them both a dirty look for holding him up in his errand and then swept inside, doing his best to look haughty and full of bravado, which is what the Musketeers were apparently renowned for. \n\nHe couldn't help but reflect that they seemed a lot less heroic than history let on and were more dickbags than anything else. Oh well. Faking being a dickbag was probably significantly easier than pretending to be a hero. \n\nHe passed through another gate that got him closer to the palace, this one also manned by the Swiss Guard. He arrogantly presented them with the Richelieu missive, which once again satisfied their scrutiny and he was allowed to pass. He forced himself to not look around in wonder at his surroundings, instead heading straight to the great doors that would give him admittance to the palace. \n\nAlex once again presented his letter, but this time the guards squinted at him suspiciously. \"Qui es tou?\" demanded one of them. \n\nHis throat was dry, but he answered as readily as he could, trying to sound authoritative and even haughty. \"J'mappelle Benat de Ferres, of Soule, Second Company of the King's Musketeers under Monsieur de Treville. Let me through.\" \n\n\"Fucking Basques and Gascons,\" muttered one of the guards in irritation. \"Why would a musketeer be bringing a missive to his excellency, the Cardinal?\" he demanded to know. \n\nMark concealed his anxiety by looking pissed and rattling off one of the phrases Alexandra had given him, hoping it had the desired effect. \"I have an idea, why don't we all go ask the Cardinal and you can fucking explain to him why you held up his envoy on an important errand? Does that sound good to you?\" \n\nThe two men looked at one another warily- the visitor was certainly obnoxious enough to be a Musketeer and a Gascon. Sighing and shaking his head in defeat, the one man handed the sealed letter back to Mark and they opened the doors, allowing him entrance. He swept by them, calling them shitheads in Spanish before the doors closed behind him. \n\nHe knew he shouldn't, but he couldn't help gawking as he stared at the palace around him- its splendour was beyond anything he had imagined. Walls of white plaster, carved in exquisite shapes and edged in royal purple, along with gold filigree, and incredible paintings and artifacts lined the walls. Endless numbers of servants scurried by, hardly noticing him. He shut his eyes for a moment and composed himself, remembering the details Alexandra had shown him, the way through the palace. He turned and began his search for his teacher. \n\n*** \n\nLisette walked primly through the halls of the palace, bowing her head deferentially to just about everyone who passed her. Wearing an elegant gown, she seemed to almost glide along the hallway, walking with a practiced ease that her mistress had taught her. She had, in three years, only been in the royal presence twice before, in attendance to Lady Alexandra. The king had barely noticed her, but Lisette didn't mind one bit, because this was far more of a life than she ever could have hoped for. \n\nShe had, of course, spent much more time in the presence of the queen, because her mistress served Anne directly. Anne of Austria seemed mostly amused by Lady Alexandra's quirky servant, but she was kind to Lisette, often sending her home with gifts of chocolate. Her devotion to the queen, while not equal to her fanatic love for Lady Alexandra, meant she would die in Anne's name if necessary. She hoped it wouldn't come to that tonight, but she had made her peace with God and the Lady Mary all the same. \n\nAlexandra had set her with the task of removing or distracting every guard she could from the route Mark would take through the palace. She was not to kill anyone, nor was she to be seen in the mayhem, if at all possible. If things went wrong, she was to retreat to the queen's quarters and be seen protecting her. It was the best alibi she could hope for. \n\nA guard up ahead. He was a sullen-looking brute, not carrying the long pikes of the gate guards, but a much more practical halberd, along with a short rapier on his belt. She knew he'd be trouble. She ducked into an alcove and pulled a small phial out of her cleavage, drinking the strong red wine from it and sloshing it around in her mouth, to make sure the aroma was on her breath. Replacing the phial, she lurched back out into the hallway and sauntered toward him lazily. \n\n\"Hello, beautiful,\" she said drunkenly, giving him a lopsided smile. \"You mus' be off-duty by now.\" \n\n\"No, I am not,\" he grunted, not looking at her. \"Go away, slut.\" \n\n\"C'mon,\" Lisette persisted, leering at him as she leaned against the wall to his left. \"We could be having fun. Don' you like fun?\" \n\n\"Duty is not meant to be fun.\" \n\n\"But these are fun,\" she drawled, as she stepped in front of him and leaned forward, using her hands to pull down the front of her bodice and exposing her perky breasts to the man, whose eyes went wide at the sight. \"These are all the fun you'll need...\" \n\nHe didn't stop her as she sidled up to him, stood on her tip-toes and put her arms around her neck. Her breath was sweet with wine, her dark eyes glassy with the lack of inhibition it brought on. Her breasts pressed to his chest, her hips flat to his crotch. \n\n\"Take me into that room and fuck me...\" she breathed huskily, her lips no more than an inch from his. \"I want to feel you inside me...\" \n\nThe man was rather pale at her suggestion, but nodded readily and turned around to open the door. The parlour behind was empty, the perfect place for a rendezvous with this slattern. She took him by the hand and led him inside, closing the door behind them. \n\n*** \n\nMark walked down the hallway, trying to not look like he was hurrying, and staying alert. He was entering a difficult part of the operation, because he was no longer in an area of the palace that led to either the king's quarters or those of Cardinal Richelieu. If anyone stopped him now, he would probably be redirected rather forcefully, and he had precious little time to waste. \n\nHe walked by a door, from which he heard a moaning noise. Then he heard a familiar woman's voice, gasping and urging someone on. His translator bud wasn't close enough to hear what was being said, but he was fairly certain he knew what was happening. He subtly pushed the door open and peered inside. \n\nMark gaped as he watched Lisette, leaning over a small table, panting while a member of the House Guard fucked her from behind, her layered skirt bunched over her ass as he pushed in and out of her. The guard remained oblivious, but she noticed the door open and flicked a glance his way. She gave him an annoyed look and jerked her head, indicating that she had this covered and he needed to keep moving. He nodded and pulled the door shut quietly before heading down the hall again. ",
        "He turned a corner and then headed up some stairs, leading up to the next floor, which was apparently where Becky was being kept. He was so busy thinking about what he needed to do next that he blundered right into two guards, who grunted and then glared at him angrily. \n\n\"Stupid shit!\" the one man he had smacked into spat. \"Watch where you are- who are you?\" \n\nMark went wide-eyed, not having expected them. His mouth seemed to work, but no sounds came forth. They blocked his ascent and continued to glare at him. \n\n\"Who... are... you?\" the man demanded again. \n\nMark regained control of his voice and tried to speak. \"My name is... my name is Benat...\" \n\nFuck, he'd forgotten his last name. \n\n\"My name is Benat DeFlepard,\" he managed to say. \"I am from Sully and I have-\" \n\n\"What sort of name is DeFlepard?\" snarled the one guard. \n\n\"I have sealed orders,\" Mark interrupted, not liking where this was going. \"From the Cardinal!\" \n\n\"Is that so?\" sneered the man. \"Let's see them!\" \n\nMark handed him the sealed missive scroll. The man examined it and frowned. \n\n\"This is the king's seal,\" he growled. \"What is the meaning of thi-\" \n\nBefore the man could finish his query, Mark punched him in the face and then pulled his cr\u00e8me-coloured tabard over his head and threw him down the stairs. The guard cursed loudly as he rolled at least two floors. \n\nMark was too late to stop the other man from drawing his short rapier, but managed to grapple onto him, keeping himself from being run through. Mark might have been taller, but the guard was a veteran of many wars, strong and cunning. It wasn't long before he had Mark's back pressed against the wall, both men fighting for balance on the stairs. \n\n\"Little shit!\" he shouted, trying to press the edge of his blade against Mark's throat and slit it. They tussled, and Mark managed to wedge his arm between his neck and the rapier, feeling the sickening cold pain of the keen edge creasing his forearm. His free hand, however, snaked down to the pistol on his belt, twisting the leather until the muzzle pointed down... \n\nThe stairwell echoed with a thunderous crack as Mark pulled the trigger and discharged the weapon, the iron ball punching a hole in the guard's boot and then his foot. The man groaned and staggered, releasing Mark. His ears ringing, Mark managed to shove the man down the stairs, following his comrade. He shook his head and began sprinting up the stairs, knowing the whole palace would be coming down on his head any second now. \n\n*** \n\nAlexandra was concealed in a secret closet in a parlour not far from the queen's quarters, listening carefully. She was wearing the red uniform of the Cardinal's personal guard, her impressive bust flattened and pulled tight with linen straps. Her golden hair was held in a ponytail while a black mask concealed her facial features. Her rapier sat on her hip and three customized pistols were concealed around her person, along with several knives balanced for throwing. \n\nShe heard the discharge of a firearm, followed by shouts of alarm and fright. She hung her head and sighed. She'd been hoping it wouldn't come to this, but there seemed to be nothing for it. She would see her obligation met. \n\nAlexandra crossed herself and exited the hidden space, heading toward the Cardinal's quarters, determined to cause a distraction for Mark as he went in the opposite direction to rescue Rebecca. It was all in God's hands now. \n\nAll she could hope was that Mark had remembered what his name was. \n\n*** \n\nMark raced down the hallway, ignoring people who poked their heads out of various rooms and parlours to see what all the commotion was, before closing their doors and locking them in panic at the sight of him. He had his sword in one hand, his pistol in the other. Having discharged his shot already and having no idea how to readily and safely reload the damn thing, the pistol was mostly for intimidation purposes at this point. Thankfully, if he pointed it at people, they tended to make themselves scarce. \n\nA guard rushed around the corner, his halberd in hand, but Mark smashed the ornate swept hilt of his rapier into his mouth, which dissolved in a welter of blood, lips and gum before he burbled and fell over. Mark kept running. \n\nHe shoulder-blocked his way past another guard, but then found himself confronted by a small group of angry servant girls, who kept swearing in French and throwing bread rolls and potatoes at him. Covering his head, he sprinted past them, resisting the urge to take a swipe at the uppity wenches. \n\nThere was the room! \n\nHe raced up to it and tried to open the door, but it was locked. Given the amount of noise and commotion he was causing, he shouldn't have been surprised. He stepped back and then slammed the heel of his sturdy boot into the door with all his might, knocking it out of its frame and falling to the floor. He rushed inside, looking around for his teacher, but she was nowhere in sight. \n\nThat's when the heavy vase smashed into the back of his head. \n\nHe was on his face on the floor, reality swimming around him. He heard someone hissing at him as he was handled roughly by his neck and his tunic. He was turned onto his back and someone was straddling him now, their supple legs on either side of his throat and their heavy skirt bunched up between their legs, allowing him to goggle up at his assaulter. \n\n\"Becky! Stop! Stop, I- OW! JESUS! QUIT HITTING ME! IT'S ME, MARK!!\" \n\nThe flurry of fists halted and then there was a pause thick with confusion. He felt his cheeks being gripped tightly, immobilizing his face and then his neck pulled up so that whoever was sitting on him could look at him. \n\n\"Mark?\" Becky exclaimed in disbelief. \"Mark! Oh my God!\" \n\nShe began smothering him with feverish kisses, still straddling him. Still dizzy, he was in no particular shape to stop her, in spite of the fact the whole palace was on its way to kill him. His eyes finally managed to focus, and he looked up at her. \n\n\"I've missed you too, Becks, but can you let me up, please?\" \n\nBecky blinked and then jumped off him hastily, helping him to his feet. She still seemed stunned to see him, not that he blamed her. \n\n\"How?\" she asked, her eyes wide with disbelief and wet with emotion. \"You- you were.\" \n\n\"Dead? Yeah, kinda.\" \n\n\"The how are you here?\" she asked, trembling. \n\nHe shrugged. \"To quote Neil De Grasse-Tyson, science, bitches.\" \n\n\"Oh, it doesn't matter,\" she exhaled, crushing herself to him and hugging tight, her body shaking with raw emotion. \"You're back, Mark. You came back for me...\" \n\nHe smiled and hugged her back, his hand on the back of her head. \"Well sure I did. You're my time-travelling partner, aren't you? Can't leave you here with these smelly savages.\" \n\nShe laugh-choked back a sob and look up at him, her eyes leaking tears onto her scarlet cheeks. \n\n\"And we're gonna get out of here and- Becks, are you, like, really drunk?\" \n\nHer expression of delight warped into a scowl at his query and she pushed herself away from him. \"Well what do you expect? I only spent the past month trying to kill myself with alcohol while you were taking your unscheduled nap, you jerk!\" \n\n\"I'm sorry,\" he faltered, knowing that this couldn't possibly be the right time to make her angry, on so many levels. \"Let me get you out of here and then I'll explain everything.\" \n\n\"Hang on...\" she huffed, stomping over to a table and grabbing her bottle of wine, tilting her head back and taking a stiff pull from it gulping loudly. Mark make a wan face and fidgeted, acutely aware of the time they were losing. \n\n\"Becks, no offense, but I'm pretty sure every guard in Paris is looking for me right now, and I-\" \n\n\"Sounds like more of a you problem than a me problem,\" she grunted, attempting to drain the bottle with several loud glucks. \"Nobody was trying to kill me while I was here.\" \n\n\"No, you seem to have that covered...\" he said dryly. She shot him a nasty look, but didn't stop drinking. \n\n\"Look, we need to go,\" he insisted. \"Pretty sure Alexandra's risking her neck to make sure I can-\" \n\n\"Alexandra?\" Becky interrupted, stopping drinking to look at him pointedly. \"The gorgeous blonde I want to fuck?\" \n\n\"I... sure,\" Mark replied, trying to keep up. \"Pretty sure she and Lisette are-\" \n\n\"Who's Lisette?\" Becky asked suspiciously, lurching toward him. She was quite a bit drunker than he'd initially thought. \n\n\"It doesn't matter,\" he declared, determined to get moving before Richelieu arrested and shot his ass again. \"We need to get-\" \n\nMark winced in fear as she surged toward him, the bottle raised over her head. She flew by him and smashed the bottle down on the head of a guard who had barged into the room. His eyes rolled up into his head and he went to sleep. \n\n\"Weren't you drunk moments ago?\" Mark asked in disbelief. \n\n\"Looks like you're the one who need rescuing.\" Becky shot back. \"You were half a second away from having an exit wound the size of an airport runway in your chest just now.\" \n\nAnother guard sprang around the corner. Becky, who was closest to the door, kicked him savagely between the legs. The man staggered to a stop and stiffened, but didn't fall over, the impact of her foot cushioned by the many layers of baroque skirt she was wearing, not to mention the dainty, padded slipper. As the man gaped at her, she kicked him between the legs again, but her skirt interfered, softening the blow to the place where he merely doubled over from the ache. \n\nBecky snarled angrily, lunged in, grabbed him by the neck and DDT'd him. This time he stayed down. \n\n\"Jerk!\" she muttered, glaring at the man. Without a second thought, she used a knife on the man's belt to tear layers of skirt away, leaving herself clad only in the bodice and skimpy underwear, with garters holding up the silk stockings she wore. She knelt on the unconscious man's back and pulled his boots off, replacing her slippers with the sturdier footwear. She then stripped his rapier and pistol from his person before turning to look at Mark. \n\n\"You ready now?\" she asked pointedly, standing there in what basically amounted to negligee and musketeer boots, while holding a rapier and a wheellock pistol. He gaped at her for a moment, unable to say anything. \n\n\"You have no idea how stupidly sexy you look right now, Becks.\" Mark managed to say. \n\n\"I'll believe it when Alexandra says it to me,\" she sniffed, turning and heading out the door. \"Let's go, hero.\" Mark sighed and trotted after her, leaving the two men lying on the floor in a spreading pool of wine and broken shards of glass. \n\n*** \n\nLisette made sure the guard was arranged comfortably in the plush chair, snoring, his breeches still around his ankles, his soft cock oozing cum all over his balls. She shook her head in exasperation as she rearranged her skirts- no sooner had the man cum than he yawned and began to fall asleep. She'd been nowhere close to climaxing when he'd finished. Typical male. \n\nAt least the boy from the future liked to make sure she came first, even if he was a dolt. \n\nShe left the door open, to make sure his shame was on display and then hurried down the hallway, holding her skirt up and allowing herself to run. The palace was ringing with shouts of alarm, anger and panic. Everything seemed to be going as planned, whatever that entailed. She just trusted that Mistress knew what she was doing. \n\nGuards from various regiments were racing around now, getting one another's way and shouting orders angrily. She passed through them virtually unnoticed, merely a servant girl looking for shelter. She made a beeline right for the queen's royal apartments, and she was stopped by no one, since she was known to the guards and stuff. She nodded hastily as she passed two guards outside the ornate doors and headed inside the boudoir. \n\nAnne of Austria looked up from a book to see Lisette scurry in, closing the door behind herself and then pressing her ear to the door, ignoring everyone else in the room. She then saw the queen, blinked, curtseyed hastily, and went back to eavesdropping on the frenzy of activity outside. \n\nThe monarch shook her head wearily and went back to reading her book. \n\n*** \n\n\"You may not pass through here!\" shouted the house guard, blocking Alexandra's passage forward. She had identified herself as a member of the Cardinal's guard, using her well-practiced man's voice to give credit to her guise. Thought he believed her, the man remained unmoved, barring her way. \n\n\"I told you, I need to reach the Cardinal!\" she insisted, knowing full well he would not let her through. \n\n\"That is no concern of mine,\" he said coldly, glaring at her, his hand on his sword, ready to draw it. \"Find another way to reach your Cardinal, because if you come another step closer, I will run you through.\" \n\n\"So be it!\" she growled as she lunged in, her own rapier flashing in her hand. The man drew his weapon and thrust at her, but she parried and then drove the point of her blade through the shoulder of his sword arm, pinning him against the wall. He groaned as his sword fell to the ground, but then her foot slammed into his face while she pulled her rapier from his shoulder. He was unconscious, but he would live. She had no cause to kill these men. \n\nShe ran down the hallway, listening all the while to the commotion hat echoed through the Louvre. A young guard barred her progress at a juncture in the hallways, and before he was even ready, she struck him across the head with the basket of her rapier, knocking him out. \n\nAlexandra continued along the corridor, but then saw several guards rushing into the other end of the hall, outside of an ornate door that led to the king's royal apartments. Upon seeing her, the six men pointed their muskets at her, three kneeling while the other three stood behind. A series of barks shook the area as she ducked around a corner hastily, avoiding their barrage. She could hear them shouting orders to reload. She leaned her head back against the wall and sighed. Idiots. \n\nBefore they had reloaded, she had pulled a small device made of two pieces of flint out of her pocket, along with a tiny clay pot out of the other. From the hole in the top of the pot hung a thin strip of rigid paper. She held the pot by its flat bottom and snapped the flint pieces against one another, producing sparks that caught on the paper and began to burn. \n\nAs the flame made its way down the paper wick, she counted slowly and calmly before leaning around the corner, tossing the pot, which skated on its flat bottom along the floor toward the guards who opposed her. She then ducked back, waiting grimly. There were shouts and the sound of boots stampeding, but then an unreal hissing shriek and a bright, flaring white light as the magnesium powder inside the container ignited. Cries of pain followed. \n\nTen seconds later, the light died, and she rounded the corner and strode down the hallway. Four of the six guards had fled before the grenade went off, while two were writhing on the ground, clutching at their eyes from the flash blindness. She stepped between them and kicked in the door toward the king's apartments before turning around and walking away, knowing that this would create additional confusion as they sought to find the assassin in the red tabard who sought to slay the Sun King. \n\nThere was more chaos to sow. \n\n*** \n\nMark and Becky sprinted down the hall, ignoring the pell-mell going on around them. Inevitably, though, they were confronted by a soldier of the Cardinal, one that Mark recognized. It was the captain who had shot him. \n\nMarks teeth clenched as he rushed forward, ready to run the sonofabitch through, but Becky was faster. She threw herself into a skid, sliding along the polished floor, hurtling straight toward the man. He gaped at her in disbelief, but by then, she had slammed her foot into his crotch, doubling him over with a grunt of unreal pain. With a roar, she surged to her feet, grabbed the man around the middle from behind and yanked him over backwards, suplexing him with a noisy crash. Mark had by now skidded to a halt and watched in disbelief while his teacher stood over the supine officer and kicked him in the ribs. \n\n\"Bastard!\" she raged. \"Teach you to kill my students!\" \n\nShe knelt and yanked his head up, making sure his eyes were open as she pointed at Mark, her voice dripping with vitriol. \n\n\"See that?! He's alive! You can't even kill something right! Your life means nothing! Nothing!\" \n\nShe smacked his head off the tile floor and gathered up her weapons before looking at Mark, composing herself now. \n\n\"Sorry,\" she said with a flush of embarrassment. \"You probably wanted him, didn't you? I thought you were dead, so if I ever saw him again, I'd have to avenge you.\" \n\nMark shrugged. \"No harm done. Except to him, and I don't really-\" \n\nMark stopped talking and stared down the hallway behind Becky. Three men in flamboyant uniforms, trimmed in blue and white like himself were now approaching them. One had a grim, patrician air and about him, the second a handsome boyish charm, while the third towered over the others by a head and shoulders, a contemptuous smirk on his face. \n\n\"That can't be good...\" he thought. \n\nBecky didn't even blink. Without turning around, she pointed her pistol backwards over her shoulder and pulled the trigger. The bark of the shot echoed around the palace and the giant staggered backward, eyes wide in shock, before he fell over like a redwood. The other two gaped at her in astonishment as she turned around to glower at them. They hastily took hold of their downed friend and hauled him out of sight, their duty to the king forgotten. \n\n\"That's right, ladies, run!\" Becky called out, her chest heaving. \"How's it feel to get beat up by a girl?!\" \n\n\"You are so sexy right now, Becks.\" Mark chuckled, approaching her. She turned back to face him- covered with gunpowder smudges, scratches and the occasional bruise, she'd never looked more attractive to him. \n\nHeedless of their surroundings, she threw herself against him and kissed him shamelessly. His hands found her butt and squeezed as he returned the kiss and she moaned into his mouth. If there'd been a rhino horn on his crotch, he'd have been impaled on it. She broke the kiss and looked at him hungrily, her eyes smouldering with desire. \n\n\"I'm so glad you're not dead, Mark,\" she breathed. \"I can't wait to prove it to you when we get the fuck out of here.\" \n\nMark took her hand and pulled her down the hallway, breaking into a run. They weren't out of danger yet. \n\n\"What're you laughing about?\" she asked, scowling while she allowed him to lead her through the palace. \n\n\"I think that was Porthos you shot,\" he said almost cheerfully. \"Becks, you ganked Porthos.\" \n\n\"Oh, I did not,\" she hissed, trying to not feel disgust at her student's lack of historical knowledge and basic temporal mechanics. \"Porthos doesn't die until 1670. So if that guy dies, it wasn't Porthos. If it was Porthos, he isn't dead. Read a book, Mark.\" \n\n\"Ha, you said bookmark!\" he laughed as he pulled her around a corner and down another hallway, trying to reach the point Alexandra had designated. \n\n\"Gawd!\" Becky groused. \"Why was I so damn happy that you lived?! I swear, Mark, I- ACK!!\" \n\nThey both whirled in panic and threw themselves back around the corner as a withering hail of musket fire peppered the plaster of the walls where they'd been standing mere seconds before. They scrambled to their feet and began running back the way they'd come, determined to not die in some baroque version of Bullet Hell from the Matrix. ",
        "\"Fucking shit!\" Mark yelped, yanking her around another corner as more soldiers appeared and filled the hall with musket balls. \"This sucks!\" \n\n\"Y'think?!\" she hissed as they kept running, their options becoming increasingly limited. \"I'm in this too, Mister Spotlight!\" \n\n\"Yeah, well at least you don't have the Goblin City Battle music from the Labyrinth soundtrack stuck in your head while they chase us around and try to kill us!\" \n\n\"I do now, you fucker! Thanks a lot!\" Becky raged. A lone house guard skidded to a stop near them and prepared to fire. Mark flung his pistol at the man, striking him in the head before knocking him aside as they continued down the corridor. \n\n\"What did you throw your gun away for, dumbass?!\" she exclaimed, wondering if blood loss after getting shot had permanently damaged Mark's brain. She hoped he could still get it up, if they made it out of here. \n\n\"It had no ammo in it.\" Mark grunted, trying to get his bearings, thinking back to the plans of the palace Alexandra had shown him. \n\n\"Why were you carrying around an empty pistol?!\" Becky asked in disbelief. \"Intimidation purposes? Were you gonna hold it sideways when you pointed it at people, hope you looked all ganster?\" \n\n\"I plugged a guy on my way to find you, okay?\" he sighed as they kept running. \"The first shot fired that started this whole mess, it was me shooting some jackoff in the foot as I tried to find you.\" \n\nBecky skidded to a stop, halting Mark's flight as well. She looked into his eyes and then hugged him in relief. \n\n\"Thank you, Mark,\" she said quietly. \"You came for me, after you nearly died, and we both could today. You're very brave.\" \n\nWhen she ended the hug, Mark found she had put her own pistol in his hands. He frowned in confusion. \n\n\"Why'd you give me your pistol?\" he asked. \n\n\"Because let's face it, I'm a lot more likely to snag another one than you are,\" she sighed. \"Let's go, I'm done with the Sun King's France.\" \n\nOut of breath, they settled for trotting down a hallway, surrounded by the echoing sounds of chaos. Things had gotten so confused that the guards were all fighting one another now, thinking the enemy in their midst. \n\nPanting, the pair stopped suddenly as they came to a major intersection of hallways. Not far away, a confused brawl consisting of house guard and the Cardinal's guard blocked their passage. Upon their appearance, though, both sides paused in their fight and stared at them. Then a captain raised a call to kill them. Without even thinking, Mark pointed his pistol at the huge iron chandelier over the soldier's heads and fired. The plaster ceiling broke as the iron ball struck at and the chandelier plummeted, crashing into the dozens of men before while clouds of plaster dust filled the hall. \n\n\"I can't believe that worked!\" Mark laughed as they ran down another venue. \n\n\"Yes, it was very impressive, Gene Kelly,\" Becky sighed, shaking her head. \"Next, you'll be swinging from the damn chandeliers or using your knife to ride down tapestries.\" \n\nSoldiers surged around the corner, charging into the couple. Mark shouted in fury as they tried to skewer him while they attempted to wrestle Becky to the ground. He dodged a blade and slashed his foe across the arm before leaping back to try and give himself room. He looked around in a panic and saw Becky kicking a soldier in the nuts before punching another in the face, her eyes flashing with fury. \n\nSomeone slammed into him from behind and he tumbled forward, scrambling to gain his feet. More bodies joined the fracas and he realized that they were not only trying to kill him but fighting one another as well. \n\nIt was difficult to breathe. There were too many bodies smothering him. He gasped in panic and strained to find room for himself. His shaking hand gripped a sword and she shoved it forward indiscriminately, feeling something soft give before him. He focused all his effort on crawling forward, finally emerging from the churning pile of men, locked in combat. He dragged himself along the floor but then grunted in pain as something speared into his thigh from above and behind. He turned to look, his eyes watering in pain, seeing a man in red, glaring at him, raising his rapier for another strike. \n\nThen a sword point burst through the man's chest from behind. His eyes widened, and he dropped his sword and crumpled to the ground. The man who had killed him was already moving on to another target. \n\nExhausted and dull with pain, Mark dragged himself to a wall and slumped against it, looking around for Becky, but she was nowhere to be seen. \n\nNo. Not again. \n\nHe ignored the maelstrom of violence and pushed himself to his feet, limping down a hallway, sword held loosely in his hand as he went to find his teacher. \n\n*** \n\nAlexandra strode down the hall with purpose, her senses keen for trouble. She had caused as much trouble as she could, all the while keeping the fray well away from the queen's quarters. She regretted that men would die today, due to their poor judgement, but she understood that the girl Rebecca could not remain here in Paris. A deep foreboding warned her that almost any price was worth paying to see her safely away. \n\nLamentable. \n\nShe stopped as a lone figure came into view, blocking her way down the corridor. He wore the blue of the king's mousquetaires, his young face etched with determination. His hand rested on the hilt of his rapier while he observed her. \n\n\"So,\" he began, tilting his head. \"You must be the cause of all this mayhem, oui?\" \n\n\"I am not who you seek.\" Alexandra said plainly. \n\n\"I do not truck with liars and I do not appreciate being lied to!\" the young man snapped. \"I would have your name before I run you through in the king's. Are you an agent of Buckingham?\" \n\n\"No.\" \n\n\"Charles of Spain?\" \n\n\"I have no time for this,\" Alexandra said testily, putting her hand on the hilt of her blade. \"Move aside and let me complete my task, musketeer!\" \n\n\"Then it is death you crave!\" he hissed, his rapier flashing in his hand now. \"I shall happily give it to you in the queen's honour!\" \n\nAlexandra drew her blade as her foe rushed forward. She parried his initial thrust and then counter-thrust, which he swatted aside. A flurry of thrusts and ripostes followed, the two warriors measuring one another, vying for advantage in the narrow hallway. Steel rang and flashed. Alexandra's sword point tore a vent in one of her foe's sleeves, and she followed up with a swipe at his eyes, but he dodged away nimbly. \n\nHe lunged in with the speed of a striking serpent and she caught his blade on hers before it pierced her stomach, turning it aside. They pressed blade-to-blade, moving around one another in a slow, deadly circle, their eyes locked. He danced away again as a main-gauche flashed in her hand, nearly shearing his throat open. He spun around her next attack, and when he was facing her again, a pistol had appeared in his free hand. At point blank range, he pulled the trigger. The thunderous bark of the firearm rattled her teeth as she bent backwards, the bullet passing harmlessly overhead. \n\nAlexandra somersaulted backward gracefully, coming to her feet with her rapier guarding against a follow-up attack. A lot of bemusement crossed his face. \n\n\"Very pretty, good sir,\" he said. \"But it will not save you.\" \n\nHe darted in again and another furious exchange of swordplay followed. His blade kissed the top of her thigh, leaving a shining crimson thread on her skin. She paid him in kind with a nick across his cheek, followed by cutting the red plume from his hat. He was nearly as fast as she was, and his recklessness made him dangerously unpredictable, even to one as skilled and experienced as Alexandra. \n\nTheir blades grated as they strained against one another, teeth clenched and eyes flashing in fury. With a cry of effort, she shoved with all her might and threw him back. He kept his feet and remained on guard, irritated by his foe's grit and skill. \n\n\"D'Artagnan!\" shouted Athos as he and Aramis dragged the unconscious Porthos across the hallway behind the combatants, disappearing from sight. This distracted the Musketeer, who turned to look behind himself in confusion and then disbelief. He glanced back at his foe and then sighed, sheathing his blade. \n\n\"Until next time, enemy mine...\" he said, before darting around the corner to catch up with his comrades. Alexandra waited some seconds after he was gone and then sagged against the wall, sighing heavily. She rubbed her face for a moment before returning her rapier to its sheathe and continuing on. She had to find Mark and Rebecca. \n\n*** \n\nThe door to the room swung open and Mark staggered inside, panting in pain. His entire leg felt like it was on fire, and it was maddeningly sticky. He had lost his sword while searching for Becky, but it mattered little if he couldn't find her. \n\nHe tumbled into a sitting position, propping himself up on his hands and trying to breathe. Everything hurt now, and it was getting to the place where he couldn't move. His head throbbed and he was getting dizzy. \n\nWith extreme effort, he managed to tear one of his sleeves off, and tied it around his leg, hoping it would act as a tourniquet and perhaps staunch the bleeding. It stung like fucking Hell and to his distress did nothing ease his pain. \n\nHe sat there panting, when a solemn figure in red moved slowly by the door. There was a pause and then the person came back into view, peering at Mark quizzically. Clad in red robes and a little red skull cap, his tight, lemony features creased in recognition and then disbelief. \n\n\"I know you,\" the Cardinal murmured, his eyes never leaving Mark. \"Yes, you are the boy from the field, the one who claimed to be a Spanish noble and had the pretty girl with him.\" \n\nHe stepped closer, still scrutinizing Mark, who tried to move backwards, his body screaming in protest. \n\n\"But you died,\" the elderly man stated. \"My captain shot you. You died in that field. What witchcraft is this?\" \n\nAnnoyance flashed in the Cardinal's eyes now. \"So, you are the cause of all this tumult. The girl I was to give to the queen, she is missing and now I know why.\" \n\nHe pulled a pistol from within the voluminous folds of his red robes and cocked it before pointing the muzzle down at Mark's face. \n\n\"I think it is time I dealt with this problem myself, once and for all.\" \n\nToo hurt and exhausted to fight back, Mark squeezed his eyes shut... \n\n\"I KICK YOU IN THE NUTS, RICHELIEU!\" shrilled a voice from the doorway behind the Cardinal, the shout followed by a sickening thump as a musketeer's boot appeared beneath Richelieu's groin. The man stiffened for a moment in confusion, but then his eyes crossed, and he bit his lower lip as his skin turned a sickly shade of green. \n\nWhile Richelieu slumped forward and then fell on his side, trembling and holding the family jewels, Mark goggled up at Becky, who stood indignantly in the doorway with her hands on her hips, glaring down at His Eminence. \n\n\"Asshole...\" she muttered as she stepped over the Cardinal and came over to Mark, who was shaking with the effort of holding himself up. Her eyes welled with emotion as she knelt next to him. \n\n\"Oh, Mark,\" she said in a gentle voice. \"Look at you, you got stabbed, baby. I'm so sorry...\" \n\n\"I'll be alright,\" he managed to say as she hugged him to her. \"At least you still look amazing, no matter how badly your ass has been kicked.\" \n\nBecky's laugh choked back her sob and she smiled at him, tears in her eyes. \n\n\"Smart-ass,\" she murmured. \"C'mon, let me bind your boo-boo properly and then we'll get out of here, before everyone in Paris is dead.\" \n\nShe fixed his makeshift tourniquet and then helped him stand. Once he was upright, he took a deep breath and smiled at her. \"I think I can walk, I was just in need of a breather, y'know?\" \n\nShe giggled. \"How the Hell are we gonna explain a rapier wound through your thigh when you get home?\" \n\n\"With any luck, Chester'll have a little somethin' to fix me right up.\" Mark replied. \"Let's go. If we are where I think we are, then our ride isn't that far away.\" \n\nThey walked cautiously down several smaller hallways, avoiding any and all encounters. They chaos seemed to have abated, at least for now. Alexandra had predicted that if fighting broke out, there was be lots of confused violence, followed by the various guard companies withdrawing to their assigned wings of the palace, to directly protect their charges, such as the king, queen and cardinal. \n\n\"Bet the Cardinal's guards are gonna be upset,\" Mark chuckled. \"He's nowhere near his quarters, and they let him get kicked in the freaking balls.\" \n\nBecky giggled as she walked alongside him, her arm through his. \"You have no idea how good that felt, Mark. A girl could get used to that. Maybe we should visit Berlin, see if I can kick Hitler in the nuts.\" \n\n\"One grand adventure at a time, teach...\" he said wearily, causing her to laugh. But her mirth was brought up short when a solitary figure appeared in front of them, wearing red and clad in a black mask, a rapier and several pistols on their belt. Becky scowled, getting ready to step in front of her student, when Mark seemed to sigh in relief. \n\n\"I am glad to see you are both well,\" said the person, walking forward, pulling their golden hair our of its ponytail and removing the mask. Becky's heart leapt as she came face-to-face with Lady Alexandra once more. \"Thank the Lord.\" \n\nShe stepped in and embraced them both, all three of them trembling at being reunited. Alexandra finally smiled at her friends and nodded. \"We must still get you out of here, before the guards return to some sense of normalcy. Mark, do you still have the place name I gave to you?\" \n\nMark smiled wearily. \"I... it's in the little pocket in my pants here, but it's probably pretty red and unreadable by now.\" \n\n\"It's a good thing, then, that I wrote a copy, non?\" Alexandra lilted, pulling a small piece of vellum out from beneath the sash she wore and handing it to Becky. \n\n\"Go to this place,\" the noblewoman instructed. \"By carriage, it should not take more than three days. It is a sanctum I use on occasion and it will be safe. Lisette and I will find you there a day or two after you arrive.\" \n\nShe then handed two small, round jars into Becky's palm as well. \"Use these to salve your wounds, until I arrive. I promise you, they will work.\" \n\n\"How can we thank you?\" Becky asked, staring at Alexandra, enchanted. \n\nThe French woman smiled and then pulled Becky to her, kissing her deeply and passionately. Becky shuddered and moaned, her arms wrapping around Alexandra and returning the kiss passionately. Mark smiled as he watched the blondes make out for almost a minute before Alexandra reluctantly pulled away. \n\n\"We need to stop, or we will be fucking right here in the halls of the palace,\" she breathed, wiping at the corner of her mouth with a finger. \"We will see one another soon, and celebrate then.\" \n\nShe turned to Mark and smiled before leaning in and kissing him gently. \"You are a brave man, my friend. Never doubt it, no matter what travails Heaven provides.\" \n\nShe walked them through several secret passages now, until they emerged into a small courtyard, under the cover of night. Standing nearby, a non-descript carriage awaited them. Alexandra wrapped Becky in a cloak and then spoke to the driver while the clambered inside. His instructions were clear, and he would not deviate from them. \n\nBecky and Mark looked out a small window, smiling and waving at Alexandra, who held up her hand to bid them farewell. The carriage exited the Louvre via a small gate where the guards asked no questions, and then they were on their way through Paris. Mark sank back into the surprisingly plush seat and sighed heavily. \n\n\"Try not to get kidnapped again, Becks,\" he said lazily. \"I'm not sure how much more of this my body can take.\" \n\n\"But being rescued by you is one of my favourite reasons to use tawdry sex as a thank you,\" she protested, turning to smile at him and tracing a fingernail up and down his chest. \"You wouldn't deprive me of that joy, would you, hero?\" \n\n\"Perish the thought, teach...\" he chuckled tiredly. \n\n*** \n\nMark had Lisette pinned beneath him and rocked back and forth on top of her, his cock plunging in and out of her molten pussy, while she groaned in pleasure. It felt so good to have this boy's tool inside her again. Her legs were wrapped around his strong waist and her hips moved in time with his, taking him in as deep as she could. \n\nLisette rarely kissed anyone who wasn't her mistress, but in this case, she was making a willing exception. Their tongues tangled wetly as they fucked, exploring one another. The tingling heat was overtaking her, and she knew it would not be long now. She crossed her ankles behind him and she bit at the skin of his chest, shuddering in delight. \n\nMark arched his back, pushing as deep inside her as he could, before shaking and allowing himself release. Her wanton pussy gripped his cock while he came deep inside her, his whole being awash with unreal pleasure. They moaned through a frenzied kiss and then sagged together, spent and sated, at least for now. \n\nMoans, pants and sighs of bliss attracted Mark and Lisette's attention and they looked off their side- also on the huge bed with them, Becky and Alexandra were sitting together, with their arms and legs wrapped around one another, kissing hungrily as they squirmed their slick pussies together. Their matching golden hair was damp with the sweat of their exertions, skin slick and shining. The greedy smacking and sucking sounds their slits made as they mingled made the four lovers shiver in delight. \n\nAlexandra and Becky were groping and fondling one another with unreal need, their nails leaving red marks and their fingers gripping tight enough to leave welts. Neither relented, though, desperate to cum together. The moans became groans and they were panting as they gyrated their hips, churning rhythmically in a sensual dance of bliss. \n\nThey pulled tighter against one another, clenching their teeth and craning their necks as they peaked, then crying out and pressing their molten, gooey pussies as they came. More feverish kissing punctuated the climax and the finally both collapsed backward, chests heaving, their legs still scissored together. Steam seemed to be rising from their bodies, skin flushed pink. The four lovers lay silent for some minutes, just basking in their shared bliss. Mark finally pulled himself out of Lisette and then knelt over her face, allowing the dark-haired girl to slide his cock into her mouth, cleaning their mingled cum from his member, which she did with great delight. \n\nBecky and Alexandra finally clasped wrists and pulled themselves up into a sitting position, hugging tiredly, but not willing to relinquish their most intimate contact. They kissed deeply and contentedly, fondling one another's breasts. Lisette looked over at them and giggled. \n\nAlexandra looked over at her servant, her eyebrow raised. \"What is so funny, girl?\" \n\nLisette turned on her side and rested her head on her hand while Mark spooned in behind her. \"I was just thinking, Mistress... you and Miss Rebecca look so much alike. What if you are her ancestor?\" \n\nBecky and Alexandra both thought about that, looked at one another for a moment, shrugged and began kissing again, their tongues tangling loudly. \n\n\"And if that was the case, think about what we discussed the other day,\" she continued, smirking mischievously. \"You said you had wondered what it would be like to Monsieur Mark's child, yes? Wouldn't that also make him Miss Rebecca's ancestor?\" ",
        "Mark burst out laughing while Becky choked on her shock, interrupting the kiss she had been so enjoying. She looked at Lisette in disbelief. Alexandra just sighed and shook her head, used to her servant's twisted humour. \n\nThe moment of metaphysical terror passed for Becky and they all cuddled together in the center of the bed, kissing tenderly and caressing. Alexandra had told Becky all about Mark's efforts to find her and reach her, what he had undergone and risked. Becky's eyes shone as she looked at Mark at promised to make sure he was properly thanked until the end of time. \n\n\"I wish you could stay,\" Alexandra almost moped, regretting that she had to give her new friends up. \"I enjoy your company, and I am not ashamed to say I love you both.\" \n\n\"Feeling's mutual, Alexa,\" Becky lilted, tracing a fingernail across her generous breast. \"But maybe we needn't end our association. If we designate a consistent place, when you know you are available, you can leave a message there. Mark and I will check for messages, and when we see one, we can visit you at the appointed time. No conflicts or dangers presented, as long as we're all certain of the clear lines of communication.\" \n\n\"I like that idea,\" Alexandra said, grinning. \"And I have a gift for you both.\" \n\nShe climbed off the bed and went to retrieve something. She returned shortly with two bottles, which she presented to them. \n\n\"A new type of wine, invented in my native region of Champagne,\" she said, kneeling on the bed as they examined the bottles. \"Twice fermented and sweet on the tongue, not unlike my darling Rebecca.\" \n\nBecky blushed and Mark grinned. \"You'll be glad to know that in our time, champagne is one of the most expensive and sought-after drinks in the world, used in every important celebration.\" \n\n\"That does please me, Mark.\" Alexandra said, nodding her head and deciding to not chide him this time about telling her the future. \n\n\"And now that I think of it, literally, I've got a present for you, Alexa.\" Mark mused, getting off the bed. The three women watched as he walked into a large closet, rummaging around loudly. When he returned, he was holding what appeared to be several unusual books, which he handed to Alexandra. \n\n\"What are these?\" she asked, puzzled. \n\n\"Well, the graphic novel is a pictorial history of Wonder Woman, who you may recall I told you a little bit about,\" he explained, sitting on the bed again. \"And the other three books are all written by a man named Alexander Dumas and are fictional works about the Three Musketeers. I figured they'd be humorous reading for you.\" \n\nShe looked up at him incredulously. \"But... why were they in my closet here in my chalet?\" \n\nHe grinned again. \"Well, just a moment ago, I decided to give them to you. So in a few days, I'm gonna gather them up, bring them here to just before Becky and I arrive, and bury 'em in your closet, where I know they are. That way, I don't run into any of us. And clearly it worked.\" \n\nBecky made a wry face. \"Y'know, I'd say you're getting the hang of this whole temporal travel thing, but I'm pretty sure you're only getting the hang of abusing it.\" \n\nMark smirked at her and pinched her nipple, making her shiver and bite her lip. He then looked back at Alexandra. \"And when you're done with 'em, you can just leave 'em in our drop-off spot and Becks and I'll pick them up. That way, there's no anachronistic copies of nineteenth-century novels or twentieth-century comic books lying around to be discovered by archaeologists.\" \n\n\"I take back what I said just now, you're gonna get us all clock-hammered right out of existence.\" Becky sighed, causing her lovers to laugh. \n\n*** \n\nMark and Becky lay side-by-side in her bed and holdings hands, back in their own time and generally none the worse for wear. They'd learned some valuable lessons and had made some important contacts along the way. \n\n\"D'you really think Alexandra's my ancestor?\" Becky mused, looking at her bedroom ceiling. \n\nMark shrugged. \"You sure look a lot alike, and you're both Hell on wheels. I'm still amused by the notion of me being your great-great-great-whatever grandfather.\" \n\nShe sighed and shook her head. \"I can handle the notion of fucking and falling in love with my great-whatever grandmother, but the notion of you as my whatever grandfather gives me the jibblies. Just promise me you won't impregnate Alexa and make that come true, Mark.\" \n\nHe chuckled. \"I promise. I have no idea how trans-temporal alimony or visitation rights even work.\" \n\nBecky giggled and turned in to face him, cuddling close. \n\n\"So, who're you gonna save me from next, hero?\" she purred, nipping at his earlobe and making him shiver. \n\n\"Oh, God, Becks, can we start out with some really ferocious kindergartners from the Roaring Twenties taking you hostage? I can probably handle that right about now.\" \n\nShe giggled again and crawled on top of him, staring down into his eyes and kissing his nose while she squirmed her breasts against him. \n\n\"Take me to New York in the Twenties and I'll show you how liberated a flapper girl I can be,\" she whispered. \"Deal?\" \n\n\"Deal.\" Mark replied, pulling her down and kissing her soulfully. \n\n*** \n\nAuthor's Notes: Well, this was one helluva chapter, clocking in at just over eighteen thousand words, making it roughly fifty percent bigger than an average chapter. But I was having so much fun writing it that I didn't want to end, and as you probably know by now, I'm pretty stuck on doing exactly what I want, right? \n\nThere was quite a bit of sex, and I counter-balanced it with lots of action and humour. I have to admit, the part I most looked forward to writing was Becky screaming 'I kick you in the nuts, Richelieu!' and then hoofing him in the beanbag. God, I've been waiting for that. \n\n*snicker* DeFlepard... \n\nBefore any zoilists out there begin bitching, yes, yes, I'm perfectly aware that sparkling wine was not conceived in the region of Champagne, and that Dom Perignon was not its inventor. This is a work of fiction. Fark off, I do what I want. \n\nAs mentioned in Chapter 3, Alexandra D'assaut is the subject of another series of erotic stories, I just felt like including her and possibly getting some people's (useful) feedback about her. You know what to do. \n\nI hope you folks have as much fun reading this chapter as I did writing it. Any time I get to flex my humour muscles and penchant for weird science fiction is a good time in my book. \n\nLet's see what time has in store for our intrepid couple next, shall we? \n\nWell, I already know, I just don't feel like sharing. So nyah. \n\nKeep your stick on the ice! \n\nManagement"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "humour",
        "historical fiction",
        "time travel",
        "violence",
        "lesbian",
        "drama"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/time-rider-ch-04"
}