{
    "title": "Victoria Pt. 05: The Gift of Lilith",
    "pages": [
        "Rick was against the wall powerless to stop the woman he loved from choking him to death. He thought back to when he was doing this to Nessira and began to wonder if this was her way of getting back at him. He struggled to catch his breath as Victoria looked at him with glowing red eyes but just as he was about to black out he saw her expression change and her grip loosen before he fell to the floor struggling for air.\n\n\"Oh god... Rick?\" She said in her own voice unsure of what had just transpired.\n\n\"Cough!\" All Rick could do was cough and try to catch his breath.\n\nHe was on all fours trying to steady himself as he felt very light headed and hurt from her attack. He looked up at her and tried to reassure her he was alright though the look on his face said otherwise as she fell back on the bed with a look of confusion on her.\n\n\"Victoria...cough... are you alright?\"\n\n\"What is going on, what happened?\"\n\n\"Long...story...\"\n\n\"Oh my God Rick,\" she said dropping to the floor to check on him. \"I am so sorry!\" She said throwing her arms around him.\n\nFor a moment Rick forgot about everything that had happened. In her embrace he felt her warmth and breathed in her scent and had forgotten about everything with Nessira and the woman downstairs in the refrigerator. Everything was perfect again as he had the woman he loved in his arms.\n\n\"Please, let me make it up to you.\" She said before planting her lips against his.\n\nShe tasted just as sweet as always and he could feel himself getting hard. He kissed her back placing his hand on her cheek as he wanted nothing more than to take her right here and now. Things began to get hot and heavy as they both fell to the floor as she pulled her shirt off before reaching for his pants pulling them off as she slid her hands in to his underwear. The feeling of her hand caressing his swelling member sent a chill through him until he remembered what was done to him.\n\n\"Wait... wait wait wait... we can't.\" He said pulling away from her.\n\n\"But I want you so bad right now!\" She said kissing him again unsure why he was resisting her.\n\n\"No seriously, we have to stop.\"\n\n\"Why?\"\n\n\"Because there are things you don't know.\"\n\n\"Like what?\"\n\n\"Like I am human now, having sex with you could... well kill me.\"\n\n\"What? That doesn't make any sence, how is that even possible.\"\n\n\"Because Nessira... She did this to me, and she's... she's alive in you.\"\n\n\"What?\" Victoria said as she thought back to the last thing she remembered.\n\nShe could hear the laughter followed by flashes of different things. She saw herself having sex with Rick, followed by images of some Red Headed woman whom he fucked to death. She saw him choking her at some point as well which she enjoyed a little bit they were just flashes and not solid memories.\n\n\"It wasn't a dream was it?\" She asked.\n\n\"No, it wasn't, and it gets worse.\"\n\n\"What did she do?\"\n\n\"It's what I did.\"\n\nShe looked at him with a worried look in her eye's unsure of what he was going to say to her. \"What did you do?\"\n\n\"I killed an innocent woman, I fucked Nessira thinking it was you, then she took my power before she tricked me again in a dream and she... we fucked again.\"\n\nVictoria looked at him and he could see the anger building in her eyes until it changed to a guilty look. Rick wasn't sure what she had to be guilty about but now he wasn't sure how to feel or how she was feeling as well.\n\n\"Rick I... I need to tell you something.\"\n\n\"Anything.\"\n\n\"I killed someone as well.\"\n\n\"What? When?\"\n\n\"The night we used that spell on the Johnson's, I went and invaded some guys dreams and... sucked the life out of him.\n\n\"Why?\"\n\n\"Because I had to, I was starving and what we were doing wasn't working, I had to so something.\"\n\n\"Why didn't you just tell me?\"\n\n\"Because I didn't want to let you down, I don't want to be a killer, I don't want either of us to kill but it's what we are, and I didn't want to put that burden on you, I have killed before and you hadn't.\"\n\n\"I think we both have plenty to be sorry about, but about Nessira.\"\n\n\"That bitch is going to pay, nobody tricks my man and fucks him.\" She said standing up with fire in her eyes. \"I will cut the bitch out of me if I have to.\"\n\n\"Well first we have to so this ritual, that woman I killed is in the freezer downstairs.\"\n\n\"Oh, you found that?\"\n\n\"I'm assuming it was for me?\"\n\n\"Um...\"\n\n\"Yeah I figured as much, anyway there is a ritual we have to do that will separate you two and place Nessira in to her.\"\n\n\"And then we kill her again!\"\n\n\"Well...\"\n\n\"Well what?\"\n\n\"Nothing, I just don't know what's going to happen when this is over.\"\n\n\"The ritual is pretty standard, as long as the symbols are correct it should be short and sweet.\"\n\n\"How do you know that?\"\n\n\"Because I've done it before.\"\n\n\"What?\"\n\n\"I don't want to talk about it.\"\n\n\"No, no more secrets, what happened?\"\n\n\"You know what happened, I told you about the girl.\"\n\n\"The girl?... oh, the soul you used to know how to act young?\"\n\n\"Yes, she's still in there, her name, her family, her friends, it's all a part of me now, and I don't want Nessira to become a part of me.\"\n\n\"She won't, we will figure this out and get her out of you.\"\n\n\"Then what?\"\n\n\"What do you mean?\"\n\n\"There is going to be victims as long as we are alive.\"\n\n\"What are you saying?\"\n\n\"I'm saying that if I die then Nessira dies with me, you're human and you can go an have a normal life, away from all this danger, I'm sorry I ever got you involved with all of this.\"\n\n\"I am going to pretend I never heard you say that.\"\n\n\"I... I'm sorry, for everything.\" \n\n\"Don't be, like I said we'll figure it out, all of it, one problem at a time.\n\n\"You're right, one problem at a time.\" She said as she kissed him before her eyes turned red and she stared into his.\n\n\"Victoria, what are you...\"\n\nRick began to feel strange but it was a feeling a remembered from before. He closed his eyes as he felt like his mind was being invaded. It was strange almost like he was being violated but when he opened his eye's he was still in the bedroom but everything felt different. The moonlight was shining through the window lighting up the room with a blue glow. It was a scene he had known very well from some of his best memories of having this dream with Victoria. He jumped to his feet and looked around until he saw Victoria laying on the bed smiling at him wearing a very sexy very see through sheer nighty waiting for him.\n\n\"No no, I'm not falling for that again Nessira.\"\n\n\"It's me Rick, and if she wants you she'll have to go through me.\"\n\n\"I think that's her plan, but this is how it started last time, I'm sorry Victoria but I don't... I can't trust you.\"\n\n\"I see, are you sure?\" She said as she stretched out on the bed bending her leg getting him turned on.\"\n\n\"God dammit.\"\n\n\"Trust me, God can't help you from what I want to do to you.\"\n\n\"Victoria I want this so badly, you have no idea how bad I want you right now.\"\n\n\"Then why fight it?\"\n\n\"Because, I've been tricked before.\"\n\n\"Maybe I can convince you otherwise.\" She said sliding her hand on to the front of his pants feeling his growing cock.\n\n\"I think you should give her what she wants.\" Another woman's voice said from behind him.\n\nRick turned and saw Nessira standing in the doorway smiling at him. Victoria sat up surprised to see her as well but before she could get out of bed Nessira raised her hand causing Victoria to fall back moaning as she seemed to be experiencing some form of physical pleasure.\n\n\"What are you doing to her?\"\n\n\"Rick, I don't have a problem sharing if she doesn't.\" She said walking up behind him and wrapping her arms around before sliding them down feeling the lump in the front of his pants as Victoria continued to writhe in the bed. \"It really was her doing this you know, I just decided to join the fun.\"\n\n\"Why are you doing this, just let me have her, you will have your own body soon enough.\"\n\n\"Ha, haven't you learned a thing about me? I want it all, and I think I've had a change of heart\" Nessira said before letting him go and climbing into bed with Victoria.\n\n\"What do you mean?\" He asked as Nessira ignored him.\n\nVictoria was still writhing as she felt sexual stimulation flowing through her body. Nessira climbed on top of her and began to kiss her while Rick stood by and watched unsure of what to do or feel. She waved her hand causing Victoria's nighty to disappear before Nessira began to kiss her body tracing her lips down licking Victoria's breasts. Rick listened to them both moan out enjoying each others touch as he watched the woman he loved and the woman he lusted for in each other's embrace. He had never been more turned on than he was right now.\n\n\"I think Rick over there is ready to pop don't you think?\" Nessira said as she looked over at him.\n\nVictoria looked over at him as well with the same red glowing eye's as Nessira. She smiled as if she was no longer herself or under some sort of control. Her and Nessira continued to rub their hands all over each other as if trying to turn Rick on as he stood there unable to move his feet.\n\n\"I think I have an idea.\" Nessira said as she looked back down at Victoria who was still under her sexually charged trance before Nessira planted her lips to hers again.\n\nRick tried to move but couldn't when he noticed something strange happen. As Nessira continued to seduce Victoria pressing her lips to hers savoring the flavor. Victoria seemed to be losing herself to the lust but what was even stranger was the fact that Victoria's hair had begun to change color.\n\n\"What are you doing to her?\" Rick asked still unable to move.\n\nNessira ignored him as she continued to assualt Victoria kissing her body moving her lips down between her legs. He watched with his cock buldging in his pants as Nessira began to eat out Victoria making her moan out loudly and thrust her hips forward. Her beautiful blonde hair had begun to darken and change a shade of red. Her eye's glowed with the same fiery passion of Nessira's.\n\nRick suddenly jerked awake laying in the bed confused. He took a moment catch his breath as he was covered in sweat and not sure what had just happened. He felt a pain in his hand that had him confused but it was mild compared to the thoughts rushing through his head after what had just happened. As he sat up he suddenly felt Victoria's hand slide across his chest as if trying to comfort him. He noticed something else that he thought was strange looking down at her arm.\n\n\"It's okay baby.\" She whispered in his ear before he looked over and was shocked by what he saw.\n\nHe saw Victoria looking at him but something was very wrong. She looked like herself but her hair was bright red like Nassira and her eyes were no longer the same as they used to be. She was covered with symbols all over her body that looked like they were painted on with blood. He looked down and saw his hand bleeding and knew where the blood had come from.\n\n\"Oh my god! Nessira, what have you done\"\n\n\"I am both Victoria and Nessira, now you have the best of both world's.\"\n\n\"Nessira what are you doing, we have a body for you, as soon as we do the ritual you will be free, stop this!\"\n\n\"Change of plan, we did our own ritual while you were distracted and now you can have us both, if you can handle us.\" She said before she pulled him down on top of her and wrapped her legs around his waist.\n\n\"Don't do this Nessira.\"\n\n\"Rick, Victoria is here too, you don't want to ignore her feelings do you? Maybe you should call me Vesirra!\"\n\n\"Victoria you have to fight this, Nessira will destroy and consume you.\"\n\n\"Maybe I want to be consumed, maybe this is the only way we can all be happy.\"\n\n\"Well I'm not!\"\n\n\"What a shame, too bad you don't have a choice.\" She said suddenly pushing Rick down on to the bed and climbing on top of him. \"I suppose we'll just have to have our way with you anyway.\"\n\n\"Please don't do this.\"\n\n\"I don't think you'll be saying that for much longer.\" She said grinding herself against the growing bulge in his pants. \"You know what we can both do and now we are the same person.\" She added before she leaned down laying on him and pressing her lips to his.\n\n\"Oh shit... I... we shouldn't do this.\"\n\n\"Don't worry, we promise not to drain you too much.\"\n\nRick couldn't deny he was very turned on at the moment. Victoria looked as sexy as ever even with the bright red hair. He had wanted her badly since he lost his power and even though it was still risky he couldn't control himself much longer. He also knew he was not strong enough to resist them both so his options were limited at best.\n\n\"That's it, just relax and give in, not many men can say they've been with two succubi at once and lived to tell about it.\"\n\n\"Wasn't exactly something on my bucket list.\"\n\n\"Ha, trust me, with us you won't have a bucket list anymore.\"\n\nShe shoved her tongue into his mouth again as she wiggled on top of him. Her hands slid down and opened up his jeans before sliding underneath. Rick jumped feeling her hands on his cock as she gently caressed him sending jolts of pleasure through him before she grabbed his shirt and ripped it open. \n\n\"Holy fuck!\" He said.\n\n\"You haven't seen anything yet.\" She said before she traced her tongue down his stomach.\n\nAs she approached his underwear she slid them down quicker than he could even see. When she moved she seemed to blur as if his eye's couldn't focus. There seemed to be two women sharing the same place in time but were not completely in sync with each other. He blinked a dew times as he was starting to get dizzy until he felt a pair of lips wrap around his cock but as her lips slid down his shaft he felt a second pair slid down tight after. He couldn't describe the feeling as it seemed reality was blurred as he was getting sucked off by two woman at the same time. He felt a tongue wiggled on his tip while a pair of lips continued to slid up and down. It wasn't possible to feel this but it was happening as she seemed to blur even more.\n\n\"Holy shit!\" He said.\n\nHe couldn't handle the pleasure as it wasn't natural. His eye's could not focus on her at all as the blurring was making him dizzy and sick so he shut his eye's. Suddenly he felt one of them change position as he felt his cock slide inside a warm welcoming pussy that engulfed his quivering member. As she bounced up and down on his cock which felt amazing but he also still felt a mouth and tongue playing with him at the same time.\n\n\"How the... Oh God... I can't!\"\n\nHe was having trouble processing all this at once as it felt so good he was sure he wouldn't survive the end of this. He felt a tail wrap around his cock squeezing it while the mouth and the pussy still milked him. The pleasure was destroying him as he felt two voices together moaning out of sync with each other as he held on for his life. \n\nHis cock was seconds away from erupting as all the attention happening at once was too much for his mortal body to handle. He held his eye's closed and screamed as he orgasmed hearing them both moan out and his cock begin to spray his cum wherever it was going. Everything just felt strange as he felt a pleasure he was sure was going to destroy him. His body felt like it was about to rip in half when he felt hands wrap around him holding him though they seemed to come from behind him. Rick wasn't sure what was happening as he was surrounded by darkness as to arms held him from behind and he began to hear a whisper like he had the other night. He felt a warm feeling like his body was starting to relax as his cock twitched and squirted a few more times. The whispering got louder and Rick was no longer in the bedroom as was just shrouded in darkness. He turned around and saw that woman again with two bright blue eyes staring at him and still whispering in a language he couldn't understand.\n\nThere was a bright flash and he opened his eye's shooting up as the mix of Nessira and Victoria straddled him as he wrapped his arms around her not even sure what had happened. Victoria took a deep breath too as her hair returned to its beautiful blonde and her eye's returned to normal as well.\n\n\"Rick, what just happened?\"\n\n\"I... I don't know, I... I really don't know.\"\n\n\"I'm sorry, I didn't hurt you did I? I didn't have control, at least not completely.\"\n\n\"I don't think so. I feel alright, but what about you?\"\n\n\"I feel fine and I think Nessira's gone.\"\n\n\"What, how?\"\n\n\"I don't know, I dont feel her presence anymore, Its just a weird feeling.\"\n\n\"Did you see her?\"\n\n\"Who?\"\n\n\"The pale woman, with the blue eye's, she was whispering something strange.\"\n\n\"I... I'm not sure, I felt a presence that seemed... unnatural but I didn't see her.\"\n\n\"She must have done something but who is she?\"\n\n\"I don't... Rick what happened to your hand, what is all over me?\" She said looking at the symbols that had been drawn on her naked body.\n\n\"I think Nessira did that, Don't know why she used my blood though.\"\n\n\"The ritual requires the blood of a virgin.\"\n\n\"But I'm not a virgin?\"\n\n\"Well technically you have only had sex with a succubus so yeah you kind of still are.\"\n\n\"What the fuck, wait what about Cindy?\"\n\n\"You were an Incubus when you fucked her so no still doesn't count.\"\n\n\"Who the fuck made up these stupid rules? You're telling me I will be a virgin forever?\"\n\n\"Does it really matter right now?\"\n\n\"I suppose it really doesn't, but still.\"\n\n----------\n\nDownstairs in the basement the freezer that had been closed with the body of the woman Rick had killed still inside. All had been quiet but then something started banging from inside. It was loud but not loud enough for Rick and Victoria to notice. The banging got louder until the top of the freezer finally opened and the young woman climbed out and fell to the floor holding herself as she was freezing cold. She kept taking deep breaths and shivering as her lips were blue.\n\nConfused she looked around the room until she saw a blanket on a box nearby which she grabbed and wrapped herself up with. She was not sure what had just happened and wasn't even sure where she was. After a few minutes she pulled herself up off the floor and began looking herself over. As she began to warm up she saw a mirror nearby and moved over to see her reflection.\n\n\"What the... I'm in here, how?\" She said confused by what had happened. \"But how, we hadn't, how the hell did I?\" She kept saying out loud until she saw a bright blue light shine from behind her.\n\nNessira slowly turned to see a woman standing there with pale skin and dark hair. Her eye's were blank white with a blue glow and she had wings that looked like angel wings. Nessira soon began to realize who this was and was afraid for a moment.\n\n\"You've been a bad girl Nessira.\" The woman said.\n\n\"I um... I didn't...\"\n\n\"Shhh, you have to atone for your actions.\"\n\n\"Lilith please, you don't understand.\"\n\n\"Ha! You think I don't understand, the moment they killed you it got my attention and I was prepared to take my revenge but then I saw what happened, how much they loved each other, and what you did and that was when I realized you broke the rules.\"\n\n\"I didn't know she loved him, I thought it was just some silly crush and I was so close to being set free.\"\n\n\"Uhuh, and do you remember why I trapped you in that statue to begin with, you have a tough time following the rules.\"\n\n\"Mother, I am so sorry, Please don't kill me.\"\n\n\"Do you think I would have given you this new body just to kill you? No no, I have a new purpose for you.\" Lilith said holding up a small brass key.\n\n\"You have got to be fucking kidding me.\"\n\n\"Oh no, you are going to help them with their little feeding problem.\"\n\n\"What about me?\"\n\n\"You can feed, as long as they don't have to worry about it you can do whatever you want.\"",
        "\"Oh really?\"\n\n\"With one exception, you cannot kill anyone!\"\n\n\"WHAT!\"\n\n\"What, is there a problem with that?\"\n\n\"No, its just... where's the fun in that mother?\"\n\n\"Fun?\"\n\n\"How will I survive?\"\n\n\"Well you need to learn your lesson, oh and by the way don't call me mother, you are no longer a Daughter of Lilith!\"\n\n\"What? Oh no, please no don't do this to me!\"\n\n\"Its the only way to teach you, I revoke your title and I'm giving it to Victoria!\"\n\n\"You can't, please I beg of you, I will do whatever you ask of me!\"\n\n\"Actually.you will do whatever they ask of you.\"\n\n\"Bitch!\"\n\n\"WHAT DID YOU JUST SAY TO ME?\" Lilith said as a blue fire formed around her as she began to tower over Nessira \n\nNessira began to cower in fear. \"Forgive me, I... I just... I'm sorry!\"\n\n\"You will do what you are told because you know what I am capable of, and after everything you've done to them and to others you must earn your redemption.\"\n\n\"Yes Lilith, whatever you want.\"\n\n\"That's better, now go.\" Lilith said as the fire dispensed and she calmed down. \"Take this key and fine a good spot, I'll be by to see it when it's done.\"\n\n\"Yes Lilith, I will do as I am told.\" Nessira said as she spread her wings.\n\nLilith walked over and took her hand for a moment stopping her before she said \"I am doing this for your own good Nessira, don't think of it as a punishment.\"\n\n\"Then what is it?\"\n\n\"Think of it as an opportunity.\"\n\n\"I guess so.\"\n\n\"Trust me, I have a plan for you.\"\n\n\"Great, because they've worked out great for me so far.\"\n\n\"Nessira, I am sparing your life, but don't think I won't destroy you if I must.\"\n\n\"I'm sorry, may I go now?\"\n\n\"Go.\" Lilith said as Nessira vanished in a red flame.\n\nLilith looked around the basement before hearing Rick and Victoria upstairs. She headed to the living room.\n\n----------------\n\n\"Are you sure she's gone?\" Rick asked as he wrapped up his bloody hand and then helped Victoria clean the blood off before getting dressed and heading down to the living room.\n\n\"I really thinks she is gone, I don't know how to explain it I just... Woah! Who are you?\" She said as she got to the bottom of the stairs and saw a woman sitting in the living room.\n\nShe was pale with raven black hair and she was wearing a white dress as she looked over at her and smiled. Rick was right behind her looking at their guest just as confused as Victoria as the woman looked at them both with beautiful blue eyes\n\n\"Hello you two.\" The woman said standing up and walking towards them.\n\n\"Um... who are you?\" Rick said standing in front of Victoria trying to protect her.\n\n\"Look at you, you don't even have your powers and you still try to protect your woman even though she is a powerful being.\" She said tracing her fingers along his shoulder.\n\n\"Who are you?\" Victoria said standing behind Rick.\n\n\"I am Lilith.\"\n\n\"What? Like... the Lilith?\"\n\n\"The one and only my child\" she said gently caressing her hand along Victorias cheek.\n\n\"I um, what can we do for you?\" Victoria said feeling nervous.\n\n\"Relax Victoria, I'm here to give you something.\" She said gently pushing Rick aside and standing in front of her. \n\nVictoria was not sure what she was doing or what her gift was. She was even more surprised when Lilith suddenly pressed her lips against hers. Rick was even more confused as he watched Lilith kissing Victoria as blue flame began to form around them both. Victoria's hair began to blow as they embraced each other joined at the mouth. He wasn't sure what to do or think as he watched until Lilith removed her lips and the flames disappeared.\n\n\"What... wow... what just happened?\" Victoria asked feeling strange.\n\n\"You are now a Daughter of Lilith.\"\n\n\"What? I'm... What does that mean?\"\n\n\"What it means is you are now a Goddess among succubi, you can control your powers much better, create other succubi or incubi, and you will only answer to me, besides I need you both to look after Nessira for me.\"\n\n\"What, she's still alive?\"\n\n\"Yes, and you have to help her, I have given her a task that will help with your feeding problem.\"\n\n\"Ahem, excuse me Miss, or your highness.\" Rick said walking towards her. \"I don't have my powers so, I'm just not sure my role in all of this.\"\n\n\"Oh yes, I forgot about that.\" She said suddenly grabbing him and pressing her lips to his.\n\nRick was surprised but he felt this strange warmth suddenly seep in to him. Victoria watched but showed no signs of anger or jealousy. He wasn't sure how to feel but he saw the same blue flames begin to form around him as well. It didn't last too long before she removed her lips and the flames disappeared.\n\n\"Wow, I don't... what just happened?\"\n\n\"You have your powers back silly.\"\n\n\"I um... wow what?...\"\n\n\"You two are so cute together, and I want you two together, I haven't seen this kind of love in a long time, I only wish Nessira could learn to love.\"\n\n\"If I may.\" Victoria asked. \"What exactly is Nessira doing, and how does it help us.\"\n\n\"I gave her Lilith's key, it creates a little, well a way to help out our kind, a way to collect energy from people so we don't have to feed as often. And it will help you both directly, on top of making some money.\"\n\n\"Is it a strip club or something?\" Rick asked.\n\n\"No its more of a shop, a shop that sells products that are... sexual in nature.\"\n\n\"Okay, will it hurt anyone?\" Victoria asked.\n\n\"Only if people misuse the products, but if anyone dies it will be by there own doing.\"\n\n\"I'm not sure how I feel about that.\" Rick added.\n\n\"Rick, Incubi and Succubi are not evil, is a lion evil for killing a gazelle, is a spider evil for killing a fly? It is nature, its the only way for us to survive. People are told what to do and not to do, if they misuse the products then they die very happy.\"\n\n\"I guess you're right.\"\n\n\"Don't worry, and don't worry about Nessira, she is under your control now, but please help her, I want her to learn a lesson out of this.\"\n\n\"I'll teach her a lesson.\" Victoria said.\n\n\"Please Victoria, I want her to change, to grow, to learn to love even, I made you a Daughter, now please show her mercy.\"\n\n\"I will try my best Mother.\"\n\n\"I know you will, just remember that I chose her as a Daughter of Lilith once before and I know that version if her still exists deep down, be patient with her.\"\n\n\"Listen Mother, we can't thank you enough for everything you have done for us, but may I ask why?\" Victoria said.\n\n\"Why am I helping you? That is simple my dear, when you killed Nessira I awoke to kill you and take revenge.\" Lilith said s Victoria took a gulp feeling nervous. \"But when I saw what had happened and why it happened I began to understand, I placed her in that statue for a reason and unfortunately she hadn't learned her lesson yet, and besides the two of you are special, I haven't seen a love like this in a long time and it's something I hope for all my children.\"\n\n\"Oh, wow, listen if there is ever anything we can ever so for you.\" Victoria said feeling grateful.\n\n\"Actually, there is something I want, something I want from you both.\"\n\n\"Anything.\" Rick added.\n\n\"Well.\" Lilith said walking over to Victoria and kissing her again.\n\nThere were no flames this time as she just began to make out with her as Rick watched from where he was confused by what was happening. Victoria began to feel very turned on as Lilith started to undress her slowly caressing her fingers along her body. Rick was getting turned on as well watching this but still wasn't sure what was happening or what he should do if anything.\n\n\"Oh yes, I need this.\" Lilith said whispered before she looked over at Rick who was standing there with a confused look on his face. \"Come here.\" She said with a smile as Rick slowly walked over.\n\nLiliths dress seemed to disappear before she grabbed Ricks hands and pulled them around her stomach while still pressing her lips to Victoria. Rick pressed up against her back feeling her skin which was soft and warm and almost made the hairs on his arms and neck stand on end when he touched her. He slid his hands up cupping her breasts as she moaned and leaned her head back on to his shoulder as if she was enjoying his touch. He began to kiss the side of her neck while Victoria leaned forward and started to suck on Lilith's perky breasts.\n\nRick was getting hard as a rock but was still wearing jeans and could not take them off as his hands were busy caressing Lilith's skin. She began to move her ass and rub against the bulge in his pants teasing him as he was the only one still with his clothes on. He couldn't help but notice how perfectly shaped her ass was. Her whole body was perfection in and of itself and he wasn't exactly sure why but both Him and Victoria gave themselves to her willingly and with no question. She was a Goddess and the mother of all Succubi and Incubi, and they considered it an honor as if they're loyalty to each other was never in question.\n\n\"I'm not sure those pants can withstand much more.\" Lilith said still teasing him.\n\nRick wasn't sure what had happened but when he opened his eye's they were no longer in the living room. He looked around and realized they were in a bedroom but not their own and not like the one Nessira used in his dreams. This one seemed to be a large room with stone walls like a castle. The windows were like that as well but there was no outside just darkness. He also could feel the smooth skin of her ass lightly caressing his cock as he realized he was naked but the three of them were still in each other's embrace. Every touch against his member sent shocks through his body. He understood why no mortal man could survive a night with Lilith as he wasn't sure he could either.\n\n\"Oh God.\" He said as she continued to rub against him.\n\n\"I see you are enjoying your gift.\" She said before she pushed Victoria down on the bed which was covered in what appeared to be blue satin sheets. \n\nHe watched as Lilith crawled down spreading Victoria's legs before she started to lick her thigh. Victoria moaned as if her tongue itself could induce pleasure as she got closer to her sweet spot. Lilith lifted her ass and spread her legs inviting Rick inside her as she pleasure his girlfriend. He didn't hesitate for long before he walked up behind her. His cock was fully erect even dripping from its end as he prepared to slide it inside her. Looking down as Lilith shoved her tongue between Victoria's legs seeing her writhe as if she was feeling a pleasure she hadn't thought possible, she looked into his eye's as if she wanted him to join in.\n\nRick shoved his cock in to Lilith as her pussy seemed to grab a hold of him. He let out a moan as the feeling was almost too much for him to handle. Every atom of his cock was tingling with pleasure as he started to thrust himself in and out of her. He slid his hands around her pale peach shaped ass before sliding them up to her breasts as he bent over to get a better grip on them. Every thrust made him want to blow his load right then and there but she must have been using some sort of power to keep it from happening. He felt as if every time he slid his cock deeper inside her it took every ounce of his being to keep himself from exploding.\n\nHe could hear Lilith moan as if she was enjoying herself which made him feel even better knowing he could pleasure this Goddess. Victoria was letting out screams off passion as Lilith continued to eat her out unmercifully. Neither one of them knew if they could survive this but it didn't matter anymore. This was a pleasure worth dying for and they wanted to feel every bit of it. \n\nRick felt something slide across his stomach before he looked down and say a tail sprout from Lilith's tailbone. it was long and curled around her front before she lifted her head and let her tale snake its way inside Victoria. VIctoria let out a scream as she was being fucked by Lilith's tail. She squirmed on the bed moaning over and over as Lilith leaned back against Rick turning her head back to kiss him as her hand slid up the side of his head. He squeezed her breasts as their lips connected.\n\nLilith's moans grew louder but she did not stop pleasuring Victoria. Rick continued to thrust harder and harder hoping she would let him cum at some point. Each thrust sent a surge of energy through him and in to Victoria as if all three of them were connected in a cloud of euphoria. He could feel his balls begin to boil as if it was almost time and with one final thrust time seemed to slow down. He felt his cum start at his balls and begin to flow up his shaft as if every second was a minute long. His whole body tingled like every cell was struggling to hold themselves together. He couldn't even see Victoria anymore as he was so distracted by his own pleasure he could only imagine what she was feeling. The cum bubbled to the surface before it finally exploded form the tip of his cock filling Lilith with everything he had to give. The sensation was nothing he could describe as he let himself go. He could hear moans of passion and pleasure but he couldn't distinguish his own from either of them as his juices drained from him. His orgasm seemed never ending as time was still slowing around him as he enjoyed every second.\n\nHe began to feel light headed before he saw a bright light filling his eyes. He suddenly began to feel himself fall forward not sure what was happening. There was a sudden soft thud as he landed. He tried to catch his bearings before he realized he was laying on top of Victoria who was covered in sweat and breathing heavily like she was just as confused as he was. He looked around and saw they were back in their own bedroom and Lilith was gone. They stared at each other for a moment not sure what to do or say as they both felt euphoric. Rick just kissed her as she wrapped her arms around him. He wasn't sure how long they kissed before they both passed out still in each other's embrace.\n\n---------------\n\n\"Holy shit, Kate, I don't know how much more... Oh fuck!\" Eddie said as his corrupted girlfriend unmercifully fucked him again.\n\nShe was like a woman possessed who wanted nothing more than to fuck him again and again bringing him food to keep up his strength but not letting him leave the bed. She would come and and start to play with his cock getting him nice and hard before jumping on to him and fucking him like crazy. Each time was a pleasurable experience but he could feel himself slipping away a little more each time.\n\n\"Oh yeah, thats it!\" Kate said biting her lip as she continued to massage his throbbing cock inside herself.\n\nShe leaned down and kissed him and shook her breasts in his face. She told him flat out this would eventually end with his death but she made sure he enjoyed himself every time as if he tasted better if he was more stimulated. Each time felt better and Eddie had begun to accept his fate realizing there worse ways to die and if he was to be fucked to death by a beautiful woman he would be okay with it.\n\n\"Oh god, I want to...\" he said trying to loosen himself from his binds so he could touch her.\n\n\"You want me to untie you?\" She asked with a smile.\n\n\"Very much so.\"\n\n\"Well if I untie you I may have to finish you, are you ready for that?\"\n\n\"If I have to go, than I would rather go like this.\"\n\n\"Very well, I have enjoyed our time together but now I suppose all good things must come to an end.\" She said loosening his binds as he slipped them out.\n\nHis wrists were scarred and bloody but he didn't care. He mustered all the strength he had left and pulled himself up wrapping his arms around her kissing her before before he worked his way down her breasts. She tilted her head back enjoying his touch and moaning out loud. Eddie enjoyed her scent and her taste as he continued. He felt light headed and weak but he didn't care as he wanted to enjoy his final fucking.\n\n\"Oh, fuck, oh god, give me everything you have left!\" Kate said holding him tightly as she moved her hips milking the life out of him.\n\nEddie could feel his cock start to twitch as he was getting ready to cum for the last time. He got closer to the end and tried to enjoy every moment of it as she moaned and sweat in top of him making him feel better than he thought possible. As he was about to blow his load there was a sudden blue flash that blinded him a little but Kate did not seem to notice. He hsd no idea what had just happened but he could hold on no more as his cock exploded in to her as he leaned back and enjoyed the feeling as she drained his balls.\n\nAs his orgasm went on he didn't feel anything unusual like he had before. The orgasm felt amazing but that was all that happened before they both fell back onto the bed. She laid on top of him for a moment just catching her breath before she started looking around with a confused look on her face.\n\n\"Eddie? What... What happened?\"\n\n\"Huh, what are you talking about?\"\n\n\"How did we get here? I remember going to your friend Ricks house and then you guys went to play pool and... how did we?\"\n\nEddie breathed a sigh of relief as Kate seemed to be her normal self again but he wasn't sure how to explain what had happened. He put his arms around her and kissed her on the forehead.\n\n\"I think you had too much to drink Babe, why don't you get some sleep.\" He said as she laid down on top of him and went to sleep.\n\n--------------\n\nOn the edge of town almost off the beaten path was a small building that had been empty for years. People would drive by it and almost forget it was there but suddenly one day Samantha noticed that there was a business in there now as she drove by. She wasn't even sure why she noticed it this time but something triggered in her mind to stop and take a look inside. \n\nShe parked the car on the side of the road and got out before heading to the front door. The sign simply said \"Lilith's\" which confused her a little because with a name like that her first thought would be some sort of sex toy shop but when she walked in she saw something quite different.\n\nSamantha looked around and saw many strange things. There were bags of what looked like powder or spices. There were small bottles of what looked like oils and strange statues all around. It seemed like a shop you would find in parts of the country where witch trials happened years ago.\n\nShe saw a woman with a small bag in her hand turn from the counter and walk passed her. She was tall and athletic with beautiful blonde hair. She was wearing a dark coat that covered most of her except for her long smooth legs. She was wearing sunglasses but slid them down as she walked by her smiling as she seemed to be checking her out. The woman walked past her and headed for the door smiling at her one more time but Samantha was a little confused and even shocked when she noticed the woman seemed to have fangs for a moment. Samantha blinked once or twice and they were normal looking teeth again before the door closed and she was gone. Not sure what she had just seen she turned back towards the counter.\n\n\"Can I help you?\" A woman's voice said making Samantha jump a little as she wasn't expecting someone to be that close to her.\n\n\"Oh god! I'm sorry, you scared me.\" She said seeing a very attractive red head smiling at her.\n\nShe was wearing a small red dress that showed off every curve she had. She had a smile on her face as her skin shined a little and she had a very satisfied look on her face. If Samantha had to guess the woman almost seemed like she had just gotten laid which didn't make much sense. She had never been attracted to women in the past but even she was getting a little turned on by this woman.\n\n\"My apologies, I forget how quiet I can be, now what brings you in today?\"\n\n\"I... I'm not sure, I saw this place and I just had to come see it, have you been here long?\"\n\n\"Actually we just opened this week.\"",
        "\"Oh, so what do you sell here?\"\n\n\"That depends, what do you need?\"\n\n\"I'm not sure what you mean?\"\n\n\"These are all natural supplements and things that help with, shall we say issues.\"\n\n\"What kind of issues?\"\n\n\"Well let me see.\" She said stepping close to Samantha and getting a close look at her as she walked around her. \"Ah yes, boyfriend troubles?\"\n\n\"What? No I have a boyfriend but he's amazing.\"\n\n\"But he's not satisfying your every need is he?\"\n\n\"Um... what are you talking about, that's a bit personal?\"\n\n\"Listen you walked in here which tells me you need something and I have just the thing for you.\" She said walking over behind the counter and picking up a small bottle from the shelf and handing it to her.\n\n\"What's this?\" Samantha said reading the label that said \"Essence of Succubi\" in an old english style text.\n\n\"Something to spice things up between the sheets.\"\n\n\"Wait, what?\"\n\n\"This place is called Lilith's, what were you expecting?\"\n\n\"Honestly, whips, chains, lingerie, some battery operated toys.\n\n\"Ha, here we deal with sex on a natural level, a more primal level even, trust me you will enjoy this, just be careful.\"\n\n\"What do you mean, what do I do with this?\"\n\n\"This is a very special massage oil, take a dab of it and place it right on your clit before you and your lover get going, it will enhance your experience greatly but don't use too much and also don't use it more than once a day.\"\n\n\"Really, why?\"\n\n\"Lets just say there could be side effects, one dab is all you need.\"\n\n\"This all sounds a little weird.\"\n\n\"I'll tell you what, if you aren't satisfied with the effects, bring it back and you can exchange it for something else, at Lilith's we guarantee satisfaction.\"\n\n\"Well, okay how much?\"\n\n\"For you, how about $1.\"\n\n\"Really, $1, how does a bottle that cheap solve problems that big?\"\n\n\"You're a first time customer, and once you see what a little bottle of $1 massage oil can do just imagine what the more expensive items can do.\"\n\nSamantha stared at the bottle and then back at the redhead behind the counter for a moment before she took out her wallet and paid the price for the tiny bottle of massage oil in her hand.\n\n\"Thank you for your help Ms...?\n\n\"My name is Nessira.\" She said putting her hand out and gently shaking hers.\n\nSamantha felt a warm feeling when their hands touched. She wasn't sure why but she was suddenly getting turned on by this mysterious woman. She stared into her eye's almost losing herself in her gaze as she was still holding on to her hand.\n\n\"Nessira? That is a beautiful name, mine is just Samantha.\"\n\n\"Samantha, that is a lovely name, you are a lioness, a goddess, and now you will go and show your lover just who you are.\"\n\n\"I um..\" she said finally releasing her hand and feeling a little awkward. \"Thank you for your help, have a nice day.\" She said before she turned and headed out the door.\n\nNessira walked over to the door and stared at Samantha as she got into her car and drove off. A smile came across her face knowing exactly what she had given her and what was going to happen when Samantha used the oil. She also knew what was going to happen after she used too much of it and couldn't wait to enjoy the after effects."
    ],
    "authorname": "maestro84",
    "tags": [
        "demon",
        "lilith",
        "succubus",
        "possession",
        "transformation",
        "3 way",
        "bonded",
        "incubus",
        "corruption"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/victoria-pt-05-the-gift-of-lilith"
}