{
    "title": "The Devil's Inheritance Ch. 04",
    "pages": [
        "His discovery of her in the millpond overwhelmed Sophia's thoughts. As she had touched herself, her mind had swum with the dark fantasy of James taking her there in the still water. Without warning her vision became real as he had dragged her down over his swollen cock and held her trembling form in his arms. She fought back these thoughts, angry and fearful that James would take her behavior to mean that she needed him.\n\nBut in that swirl of conflicting emotions the truth was inescapable. She did want and need him. Powerfully. Sophia went to her room and stripped off her rumpled wet chemise, using it to towel-dry her wet hair.\n\n\"Why are you in here?\"\n\nSophia shrieked and startled turning to face James, dropping the chemise, naked as the day she was born. His mouth curled upward in amusement before his eyes narrowed at her once more. She looked at him, confused and bewildered, \"I'm here because this is my room. Why?\"\n\n\"This isn't your room, its Katje's and Aletta's room.\"\n\nShe straightened up, her heart racing. Was he throwing her out now that he was done with her? A chill crept up her spine as she imagined her dim future as a ruined and penniless woman, \"What do you mean?\"\n\n\"Your room is upstairs. You are mistress of this house.\"\n\nShe looked at him aghast, trying to form words, \"I not mistress of anything. I am an indentured servant of this farm\u2014\"\n\n\"No. You are bound only to me, and I will not have you sleep in the servants quarters,\" he said folding his arms. Sophia opened her mouth to protest but was cut off by James, \"Your purpose here is to warm my bed and to keep it warm in my absence.\"\n\n\"So that is why you sent them; to keep me in your bed? You could have at least written me to let me know they were coming instead of them show up on the doorstep.\"\n\nJames raised an eyebrow at her, \"You can read?\"\n\n\"Yes, I can read! That's hardly the point,\" she stopped herself too late. If he knew she could read, it would arouse his suspicions. If he suspected or knew of the letter at all, then he knew that she would be seeking it out. She silently cursed herself. Now she would have to move ever more carefully around him.\n\nHer statement took James aback. A country servant girl knowing how to read was unheard of. He would ask about this later but for now his eyes scanned her nude body, flaxen tresses her only covering, and advanced forward ready to take her here and now, silencing her protests once and for all. They both startled as they heard the gate screech open outside. In a single motion he grabbed her by the wrist, and scooped up her cast off chemise, dragging her out to the foot of the staircase, \"I'd love to continue this conversation with you, dear, but it seems our servants have arrived home early. Now go upstairs.\"\n\nHe playfully smacked her on the bottom. Sophia shrieked as she scampered up the steps before stopping at the landing, \"I have no clothes!\"\n\n\"I hardly see that as a problem,\" he said, waving her cast off chemise back and forth in his hand.\n\nJames watched her give him an adorable look of indignation before she darted into the room and shut the door behind her. Outside she heard the muffled sounds of the clinking of coins and James speaking to Katje in Dutch as she tried to avoid the front windows. Sophia gave up and climbed under the bed sheet, listening to the language. She had guessed he would be educated. He'd already spoken to her in a little bit of French, she recalled blushing, so she wasn't terribly surprised he also knew Dutch. She looked out the window next to the fireplace to see Katje taking his horse to the barn as James walked in with a long flat box.\n\nMoments later, she heard the staccato of his feet ascending the stairs. The door opened. James burst through with the box under one arm before spying her in the bed, the sheet pulled up demurely under her chin. He couldn't stop chuckling, \"You're a little premature Sophia.\"\n\nShe wrinkled her nose, \"I had to cover myself up somehow since you stole my chemise.\"\n\n\"Well I've solved both of those problems. Here,\" he said heaving the box onto the bed, \"Try this on.\"\n\nShe let the sheet fall, giving James an unintentional full view of her breasts as she crawled over to the foot of the bed and examined the box. Sophia undid the satin ribbon and pulled the lid off. James didn't expect the flummoxed look on her face as she pulled out its contents. She examined the dress, a pale green and cream paisley gown with loose box pleats in the back from the collar to the hem. The front sloped in a low square cut, edged in white lace. The sleeves cut off at the mid arm, framed with the same white lace from the plunging neckline. She looked in the box to find a coordinating white sleeveless chemise in the finest silk she had ever seen with delicate lace straps and neckline, and below that a light green silk and cotton herringbone set of stays, with gently curved boning and the satin ribbon already loosened.\n\nHer eyes glittered and a smile curved her lips before looking up at James, his arms folded and his countenance triumphant as he watched her open the box. Where there was once a whirl of delighted expressions crossing her uncensored face, her expression tightened when she realized James was observing her. The disdainful crinkle returned to Sophia's nose, \"When exactly do you expect me to wear this? While I'm cleaning the soot out of the hearth?\"\n\n\"You will wear it when we dine together. Tonight,\" he said as Sophia looked at him with feigned disregard. She saw something in his eyes, and it wasn't anger or lust. Was it hurt?\n\n\"Dine with you? Why would you want me to\u2014\"\n\n\"As our part of our bargain, you agreed to let me have you where I want, when I want, for as long as I want. And tonight you will dine with me downstairs before I take you to bed. Unless of course you would prefer to sleep at the crossroads,\" James stiffened and glared at her, his eyes once more betraying nothing.\n\nHe turned on his heels and walked out of the room, slamming the door behind him. His departure quelled any protest she may have had. Before trying and failing to bed the blonde whore at the Rose Tavern, he had taken her as a model to measure for Sophia's dress. She had been more than happy to oblige for an extra three shillings she didn't have to lay on her back to earn; never mind the sack of guineas he'd thrown the tailor when the dress was completed.\n\nJames had watched the look of excitement course over Sophia's face when she saw the dress and realized that it was the first time he had seen her genuinely pleased. He had seen Sophia angry, frightened, sad, solemn and in the throes of passion, but never content. He felt himself swell seeing that look on her face, and not just below the waist. But her happiness has disappeared when she looked up at him. James just shook his head. She hated him.\n\nSophia slumped after he shut the door. She looked at the dress again, confused as to why he would give it to her. The careful, fearful side of her said that it was because he didn't want to admit to having a lowly indentured servant for a mistress, so he was dressing her up like a fantasy doll. The hopeful, vulnerable side of her, which she hadn't acknowledged for longer than she cared to admit, said that this was a gift, an act of tenderness, perhaps even the best apology a man like James could offer for his initial treatment of her.\n\nShe heard more Dutch conversation downstairs and watched Katje climb back into the empty milk cart with Aletta and drive off again toward Ashford. They were alone in the house now. She half expected James to come upstairs again and decided to put some impediments between her naked body and his desire for it.\n\nShe slipped the chemise over her head. Cool silk hung on her curves, caressing her skin. She hadn't felt something this soft since the fine dresses she had worn as a young girl. Those memories were quickly pushed to the back of her mind where they belonged as she slid the stays over her head. Sophia grasped at the ties in the back and realized that she couldn't string it together herself properly.\n\nShe opened the door and tiptoed out, seeing James stop in his tracks at the base of the staircase. He looked up at her coldly, waiting for the shrew to speak.\n\n\"James?\" Sophia said meekly, almost surprising him with her soft demurring voice.\n\n\"Hmm?\" he responded cautiously.\n\n\"Can you please help me with this?\"\n\nHe locked his eyes to her and walked up the stairs slowly, watching her tense as she held the front of the stay to her breasts, the strings causing it to sag around the rest of her figure. She backed up as James silently followed her into the room, standing with her in front of the mirror. He had removed plenty of stays in his lifetime but had never laced one up. The dressmaker had insisted on James buying one despite the reservations he had about restraining Sophia's beautiful curves. He had thrown such a fit over the possibility of the gown not fitting correctly that James had finally given in and bought the sodding thing.\n\nUsing his knowledge to reverse his more familiar motions with these contraptions, he carefully pulled the loops from the center to the top and from the center to the bottom, giving each loop in front of his fingers more slack on the strings. With one quick snap he drew the strings out tight, causing Sophia to gasp to gain back the air that had left her lungs momentarily. His hitch of the lacing brought her back against him, her shoulders crashing against his chest as her back arched from the snug fit, not crushing but hugging her from hip to breast.\n\nJames was treated to a full view of her large uplifted breasts spilling over the top of the stays as he looked over her shoulder and back at her face in the mirror. With another quick tug in back she gasped again and let out the slightest moan he had ever heard. He gently pushed her forward so she wouldn't feel how that sound had quickened him. The bottom string looped over the last zigzag of the satin as he tied it firmly, then did the same to the string at the top. Eyes still locked to hers in the mirror, his hands came to her waist as her intake of breath swelled her breasts even further.\n\nThe shadow of her areola poked up over the stay behind the thin chemise. James stood behind her in the mirror and smoothed his hands up the side panels of the stay, her hands instinctively drifting to his shoulders and up to the back of his neck as he raised her arms up, his hands covering the mounds of flesh above the line of the busk.\n\nIn the mirror they looked like two perfect apples on a tray. James pulled a nipple over the border of the stay, teasing it to a point through the silk. Sophia gasped and leaned against him, the stay containing her pleasure and forcing it down the length of her body, straight to her core. He leaned close to her ear and inhaled deeply before whispering, \"I could get lost in your hair, your scent...\"\n\nSophia felt warmth start to unfurl between her thighs at his words. James reached around to brush her hair aside before nipping at her earlobe, then lightly on her exposed neck under the lobe. He watched her reactions in the mirror. Her lips parted slightly and her eyes had narrowed to slits as he kissed down her neck, turning her toward his body before kissing her full on the mouth, his tongue twining with hers as his thumbs ran in circles over her nipples. She moaned softly into his mouth and ran her hands down his muscular back through his shirt.\n\nHe broke the kiss and smiled at her, seeing the need in her eyes as his thumbs continued their slow circle. Sophia tried to bring her lips back up to his but James tilted his chin up at the last second and kissed her on the tip of her nose, \"After dinner, my dear.\"\n\nShe silently gaped at him, wide eyed with surprise as her body reeled from his absence.\n\n\"Rest up until then,\" he said smiling, bringing his hands away and giving her a wink before striding across the room like a conquering king and closing the door behind him. The look of unrequited lust and surprise on her face was worth the blood pooling painfully in his loins.\n\nSophia stood there for a moment and wandered back to the bed, laying down and panting from the compression of the stays and the ease with which he could make her body respond. She let herself get used to the material holding her snuggly and laid back on the pillows, shutting her eyes momentarily. It seemed so long since she had slept peacefully. The moment stretched on until she slipped into a fitful sleep, lost in a dream.\n\n\"Papa!\"\n\nSophie ran in her little gold embroidered gown, her tiny silk strands of blonde hair coifed back in an intricate comb, lace falling over the back of her hair. Her dainty child's shoes trampled the grass underfoot as she ran toward a tall man dressed in black with a blue sash and a long curly brown wig on his head, faced away from her. The sky was a brilliant blue and the towers of Pembury Castle stood in the distance.\n\nShe had been here before. Countless times.\n\n\"Papa!\" she called out again but her father did not turn around.\n\nShe kept running toward him but the harder she ran the more distant he became until he faded onto the horizon. She felt hands reach out and pull her back. Sophie looked down at her dress, the beautiful frock now replaced by the gray uniform of the orphanage, the manor's mason stones and grass melting into the dull cobblestones of Ashford's church square and twenty girls dressed just like her.\n\n\"Sophie!\" The head of the orphanage, a harsh woman with gray hair and pinched features voice called her back in line to keep her head down as she walked.\n\n\"Miss Sophia!\" Katje shook her as she whimpered in her sleep.\n\nSophia bolted up with a start, gasping in air, a hard feat in the bonds of the stays.\n\nIt was growing dark outside, the late summer sky cloaked in dark violet and pinks as the sun started to set. How long had she been asleep? She looked up at Katje. The room was awash in candlelight, illuminated by far more tapers than she knew she even had in the house. Was this his doing? The smell of rosemary and cooked game hens wafted through the room from the kitchen below.\n\nKatje twisted her fingers as she often did when trying to find the right words to use, \"Master James said you coming down to dinner soon?\"\n\n\"Y-yes,\" she said, trying to shake the recurring dream and come back to reality. James was waiting downstairs for dinner. She looked down at the tight stay she wore and remembered the dress, now laying on the chair, spread out in all its glory.\n\n\"Katje, can you help me with my\u2014\"\n\n\"Master James says I help you put on the... the... Franse robe?\"\n\n\"The dress. Yes, thank you Katje.\"\n\n\"You're welcome Miss Sophia!\"\n\nKatje lifted the garment and rolled the edge of the hem as if she had done this a thousand times. It suddenly occurred to Sophia that perhaps she had. She didn't know if James was married or not. She felt a knife go through her at the thought then chastised herself for caring.\n\nAnd what if he was? Sophia knew from the way he could manipulate her body like a finely tuned instrument that he must have had several dozen women, most likely one in every city, town and hamlet he ever visited. She wondered how many of those women were just like her: a convenient bedmate to which he had made an offer they couldn't refuse. Even at that, the thought made her realize that apart from knowing that he was Mr. Farthing's nephew, she knew nothing about James.\n\nShe lifted her arms over her head and felt Katje straighten out the laces flounces just below her elbows. The neckline fell softly on her breasts and the pleats spread out from her shoulder blades, flowing downward in vertical waves of silk. Sophia stared forward in the mirror and hardly recognized herself.\n\n\"Oh!\" Katje clasps her hands together and smiled broadly admiring her handiwork, \"U kijkt buitengewoon! So, so beautiful, Miss Sophia!\"\n\nSophia looked at the woman and couldn't help but echo her smile. The dress seemed so out of place on her but if it pleased this sweet mothering woman, then it made Sophia happy. A corner of her mouth turned up as she realized that her hair was not coifed high up as was the fashion, she wasn't wearing a padded farthingale, nor did she have any shoes to match the dress.\n\n\"Come! Come, Miss Sophia. Dinner is ready!\" Katje said, motioning at the door before trundling down the stairs ahead of her. Sophia gathered the hem of her dress and descended, the wide pleats stretching behind her like wings, each step sending a wave up the fabric as she made her way down the steps.\n\nJust as James started to wonder what was taking so long, one lithe bare foot descended a step, followed by another. Damnation, he forgot to get her shoes! He snickered to himself. Perhaps that wasn't half bad; it would be an excuse to carry her up the stairs later. His attention turned from her bare feet as more of her was revealed to him. Her gown billowed behind her, the pleats moving down the stairs at her back as she gracefully carried herself like a queen. Her blonde curls fell down her back and across her shoulders and her face was lit angelically in a shy half smile. When her eyes met his, her face turned solemn and withdrawn.\n\nSophia was afraid of him. Of course she's afraid of you, you fool, James thought to himself. You committed rapine; stripping her of home and maidenhead as you made her your slave. What other emotion could he ever expect? And why did he want more? James felt this thought flit across his expression before returning himself to solemnity and smiling at her as she stopped in front of him, \"You look beautiful.\"\n\nSophia demurely curtsied, \"Thank you, but the compliment belongs to the dress, not to me.\"\n\n\"I would beg to differ,\" he had seen women of all stations. Some years back he had been the plaything of a countess, and had kept mistresses for a few months at a time before learning that it was easier and more to his liking to bed doxies and courtesans instead. Of all the women he could remember, none compared to her.\n\nA blush ran across her face, before it was replaced by her previous anxiety and confusion, \"James, why did you do this? Buy me a dress and invite me to dine with you?\"\n\nJames ran the back of his hand down her cheek, \"Because I desire to know you better.\"\n\n\"Why? I am your... your whore. You don't need to know me, I can be anything you want me to be,\" she stared down at her dress. Sophia was sure that if she ever went out in public in this thing she would be put in the stocks for dressing above her station. She was convinced he had her wear it to ease his revulsion at taking a girl who gets up at dawn to milk cows into his bed.\n\n\"The dress only enhances your beauty. It doesn't change you or make you something else. I don't want you to be anything else; I desire you as you are,\" James pulled out a chair and motioned for her to sit, \"As such, I want to know all of who you are.\"\n\nSophia smoothed out the folds of her gown beneath her as James pushed her chair in. She flicked the napkin and delicately smoothed the cloth in her lap as if she had done this a thousand times. Katje brought out two mouth-watering plates with Cornish game hens and fingerling potatoes with a sprig of rosemary each.\n\nJames tucked his napkin into his shirt over the cravat and started cutting into a potato before realizing that she wasn't doing the same. Her eyes were shut and her head bowed. James was just about to swallow his first bite, then quietly, guiltily put down the knife and joined her in silent prayer, winking open one eye every so often to see when she was finished. Sophia prayed, though she knew not to whom. God most certainly wasn't listening to her prayers; she was damned and fallen for the bargain she had made with James. Still, she had bowed her head in prayer before each meal since she was a child...",
        "James heard her clear her throat and opened his eyes. Her fingers lightly picked up the fork and knife and carved a piece off of one potato before drawing it into her mouth, setting her fork down without a sound as she chewed without hardly moving her jaw. James watched her. How was it that a simple natural born country servant would know how to correctly curtsy, have the table manners of an aristocrat... and read?\n\n\"Sophia,\" he said between bites, startling her as she looked up at him, \"I am curious about something you said earlier today.\"\n\nPlease don't let it be about reading... please, God, don't let it be about reading...\n\n\"How is it that you learned to read? Do you also write?\"\n\nShe blanched. He must know. He wouldn't have asked her so pointedly and enticed her with a dress and a meal, her payment for giving away the location of the letter and her right to the farm. Her memories also surfaced. Her stolen childhood came flooding back to her and she fought back the hot tears welling up in her eyes.\n\n\"What is the matter with you? It is just a question, a curiosity of mine. Where did you learn how to read?\"\n\n\"Yes, I also write. I learned from my father,\" she said, looking away.\n\nJames raised his eyebrows at this. So she wasn't just the indiscriminately sewn wild oat of an aristocrat. Everything fell into place as he pictured her early childhood, the babe of a beloved dead mistress given all the fineries of life, only to have it all taken from her as she was shut away at some godforsaken orphanage before ending up... here. His felt a vise close around his heart, knowing that he was just the latest in a string of misfortune for this woman, \"Don't worry about it. I'm sorry I upset you.\"\n\nSophia looked at him quizzically. He had no compunctions about her crying two weeks ago when he ravished her, but was concerned for her now? She counted her blessings. At least he wasn't pressing the matter any further, and it gave her the opportunity to change the subject, \"Can I ask something about you?\"\n\nJames smiled, \"Of course.\"\n\n\"Where did you find Katje and Aletta?\"\n\n\"Well,\" he began around a bite of game hen, \"My mother's family had several holdings with the farms in the Netherlands, and after her death during the great frost five years ago they passed to me. The De Groot family worked one of those farms. During a blizzard, Mr. de Groot and his two sons went out to the barn to check on their cattle and never came back.\"\n\nSophia felt her chest tighten thinking of that sweet Dutch woman losing her husband and sons in one night, \"That's terrible. Poor dear Katje...\"\n\n\"Which was exactly what I thought when I arrived after the weather cleared to find a barn full of cattle frozen solid and a starving mother and child. So I sold their farm and hired them on to come with me, putting them to work at my townhouse in London. Given the threat to my Dutch holdings from the French forces, and that the frost had deadened the land, I certainly couldn't keep them there in good conscience. Katje missed the ways of the farm and detested the bustle of the city; I could sense it. She was delighted when I told her that she was to go to Ashford.\"\n\nSophia smiled, even showing some teeth before bringing her hand to her mouth to hide it. The tears returned to her eyes.\n\n\"What is the matter now?\"\n\n\"Nothing; nothing at all. That's just a beautiful story. It took me a bit by surprise is all. I hadn't expected you\u2014\" She caught herself short but he finished the sentence for her.\n\n\"\u2014to be anything but a heartless rake? Though I believe 'loathsome coxcomb' was your exact wording...\"\n\nShe sat bolt upright, \"I didn't mean it, James. I\u2014\"\n\n\"Don't apologize. You are right, I am a heartless rake,\" James said, as she relaxed back into her seat. He watched her face brighten once more. James paused a moment, realizing that he had actually seen Sophia smile. He had never seen her smile before and the look of her eyes lighting up like that made him melt.\n\nSophia couldn't believe what she had just heard. In a round about way, did he just express regret for ravishing her when they first met? It couldn't have been. Sophia gave him a rueful look, accepting it as the only apology this man was most likely capable of giving her.\n\n\"You probably wonder how someone like my uncle would ever entail his holdings to someone like me.\"\n\nSophia blanched again. This was where he was going to lower the boom, assert his rights to this place and demand she tell him about the letter so he could destroy it. She was caught in his web, and stared down at her food as she talked so as not to give her hand away. It was all she could do was to play along, \"No, but why did he?\"\n\n\"I'm sure you're well aware that Uncle Davi\u2014 my uncle was... fond... of the love that dare not speak its name.\"\n\n\"Yes. But we never talked about it but once. He and I had a pact. I wouldn't ask about that as long as he didn't ask,\" she lowered her eyes, \"about my childhood.\"\n\nJames nodded, \"Needless to say he never produced any heirs. My father was dead in an accident before I was born and my mother merely unloaded me from her body so she could go in fruitless search of a new husband in London, Amsterdam, Brussels, Paris before the war, wherever her affairs and dalliances would take her. My uncle and I had a falling out unfortunately when I grew to become a man, but for part of my formative years, he raised me here in this house; hired the best tutors money could buy, taught me the violin\u2014\"\n\n\"You know how to play a fiddle?!\" Sophia blurted, planting her hands on the table, her deep green eyes wide.\n\n\"Violin.\"\n\n\"I know it's called a violin, but Dav\u2014 Mr. Farthing always called it his fiddle. He would play it often in the evening, and I would dance.\"\n\n\"Really! Well, it is neither here nor there, but yes, I can play; somewhat.\"\n\nSophia's eyes danced and she licked her suddenly dry lips. She didn't dare ask him.\n\n\"Take me to where it is.\"\n\nSophia leapt up from the table and kissed James on the cheek. He was taken aback and shocked for just a moment but as she began to dart away, James caught her mid stride, grabbing her hand and wheeling her to him. He kissed her full on the mouth, his tongue parting her lips as he brought her against him. Sophia's hands rested on his shoulders, feeling the soft wool of his frock and the tensed muscles underneath.\n\nShe broke away, a teasing smile curling her lip, \"The fiddle?\"\n\n\"Violin,\" he said, returning her mischievous grin.\n\n\"Fiddle,\" she said quietly. He kissed her on the tip of her nose.\n\nShe grabbed his hand and led him up the staircase, innocently, her mind fixed on her goal. James followed, his mind on his own goal, intending to take this exactly where her path ended. She skipped into the bedroom and flung open the wardrobe in the corner, still hung with Mr. Farthing's clothes. Her heart wrenched for a moment mourning her friend before she turned back to her task. At the bottom was a long, thin, black leather case. She bore it carefully across the room and set it up on the dresser, moving a candle aside before backing away.\n\nJames walked over and unlatched the case, folding back the dark red velvet swaddle around the instrument and bow. He put it on his shoulder and played the high A, then tuned the D before tuning the last string and working back up in fifths. He raised the bow to play, watching her tilt forward in anticipation. He paused, \"This comes at a price, you know.\"\n\nSophia wrinkled her brow at him.\n\n\"If I play, you must dance.\"\n\nSophia gave him another wide smile, blushing and hiding her teeth with the back of her hand. What James would give to see that smile on her always...\n\nLifting the bow once more, James started playing the agonizingly slow beginning of Jenny Plucks Pears. Sophia's grin grew even broader when the tempo picked up. Play 'somewhat' her left foot! He closed his eyes deep in the music, touching and fingering the strings, making them sing to her as his bow raked across the frets. Sophia clapped her hands in time to his playing.\n\n\"Dance!\"\n\nShe jumped back in surprise as his playful command. He opened his eyes looking at her as she picked up her skirts and made the first sashay around, twirling, her curls bouncing as she shimmied across the rug, turning and bending, unconsciously flirting to the music. James turned with her, watching her turn the reel as she whirled a circle around him.\n\nThe tune slowed again and she curtsied deeply to the motion of the steps, locking her eyes to his, watching them go dark with passion. The tempo picked up again and she sashayed around one more, her skirts picked up in front of her feet. The music came to a sudden stop mid verse. As she swung around to ask why he had stopped playing, she felt his body crush against hers, fingers tipping the bow away from where they laced through her hair and a hand holding the neck of a violin against her back as his lips possessed her.\n\nHer fingers laced around the nape of his neck bringing him closer, mating her tongue with his as she moaned against his mouth. He walked them backwards and set the violin and bow on the chair before holding her against him by the waist, his hands wrapped around the pleats of the gown. His fingers started pulling upward, hand over hand through an eternity of fabric before he reached the hem.\n\nSophia raised her arms and let him lift the dress off of her. It fell slowly to the rug, pooling at their feet, ignored as James drew his attention to her uplifted breasts. He smiled. This was the part he was familiar with when it came to these stay contraptions. He began by kissing her neck and gliding around her to her back, whispering lustful praises into her ear as his left hand danced lightly across the top of her breasts. His right hand unstrung the bottom of the stay, then the top, loosening it until it too was able to fall down the length of her body to her feet. He lifted Sophia into his arms out of the stay on the floor and delicately laid her on the bed.\n\nThe silk chemise clung to her curves, free of the bonds of the stay. In the glow of the room's many nearly-spent candles, the peak of her breasts created almost no telling shadow, but James was fixated upon them, desiring them in his mouth the way a man in the desert would desire a drink of water. He stripped off his jacket and waistcoat as one, yanking at his cravat before kicking his shoes and stockings to the other side of the room. Sophia lay there watching as he disrobed quickly, the awkwardness of his impatient undressing making her giggle.\n\nHe threw his shirt over his head and opened the placket of his breeches before pushing them off his waist. He watched her face turn sharply from simple amusement to desire. The last time he had undressed in front of her she had crawled to the other side of the bed like a frightened animal. Now as she lay there, her breathing became ragged and her pupils dilated in lust and memory of what pleasures his cock had wrought on her aching body. He raised first one muscular leg then the other, crawling over top of her, before lying beside her, the heat and hardness of him pressing into her thigh.\n\nHis mouth came down on hers once more as a hand kneaded a breast, forming and shaping the liquid flesh in his palm. His thumb and forefinger rolled up to pinch the nipple as Sophia arched her back up toward him, her thigh undulating against his cock. James grabbed her under her shoulder and rolled her on top of him, quickly pulling up the chemise and casting it to the floor, the last to join the pile of cloth now surrounding the bed.\n\nShe lay with her head against his shoulder watching the rise and fall of his chest, tracing a finger over its hard surface, down his tensed stomach and into the line of hair just below his navel. She watched his manhood jump as her hands moved, her fingers reaching out to caress him. James groaned as she moved her head down onto his chest, taking in the sight of the ruddy crown staring up at her with a pearl of fluid glistening at the tip.\n\nThe tips of her fingers made a furtive run over its length as James struggled to maintain his control. Her hand gripped him and she felt his body writhe. She curled her fingers around and stroked the shaft with purpose, feeling him thrust up into her hand, mimicking the motions of their joining.\n\n\"I need your mouth on me,\" James whispered hoarsely.\n\nShe looked up at him, stopping her hand, and stared into his heavily lidded eyes, his mouth partially open.\n\n\"Please...\" he whispered.\n\nIt wasn't a request. He was asking her. Sophia looked down at his engorged flesh and turned to look back up into his eyes, \"I don't know how.\"\n\n\"I trust you. Just kiss it at first; at the tip. Please, Sophia, I need you...\"\n\nHis beseeching was the most erotic thing she could imagine hearing, his need and vulnerability evident. This didn't feel like the demand and conquering she had experienced a fortnight ago but the gentle plea of a lover. Sophia knelt between his legs, overwhelmed. She held his flesh in her upright palm before closing her fingers around the head, stroking downward. A low growl rose from his throat as she brought his organ upright off his stomach and toward her waiting lips.\n\nShe bent forward and kissed the tip with just her lips before making her first descent, imitating her favorite part of how he kissed her mouth. She laved the head with her tongue. Pleasure shot up his spine. James tilted his head back, sucking air in through his clenched teeth. Every fiber of him wanted to thrust deep into the back of her throat but he remained still, his hands at his sides. He wanted to run his fingers through her hair but knew that he wouldn't be able to stop himself from pushing her head down further if he did. Instead he let her explore.\n\nShe let the head disappear into the chasm of her mouth, watching James arch his hips, \"Oh God, Sophia...\"\n\nPulling back, she watched him pitch forward. The peppery taste of his skin mixed with a spice she couldn't name made her hum in enjoyment, his cock twitching in her mouth as the blood in him pumped just below the surface. She remembered when he had his mouth latched on her; how the room had spun and realized that he was experiencing near the same. He needed her in this moment just as fiercely as she had desired him.\n\nHer hands worked the length of his shaft as her mouth bobbed on the crown in rhythm to the rising and falling of her hand underneath. Her motions echoed their coupling. Saliva and the salted moisture that kept slowly forming at the tip eased the path of her hand as it stroked against his shaft. She watched him writhe under her.\n\nJames couldn't believe what she was doing to him. He felt himself coming undone in the recesses of her mouth, the tongue lashing out over the rim of the crown, the gentlest grazing of teeth, and the powerful drag on his flesh each time her lips pulled up, swelling him in her hot mouth before she torturously descended again. The sight of his cock disappearing behind the veil of her lips again and again was too much for him. Through the haze of passion he managed broken words to warn her, \"I'm going to come, Sophia... my seed will release into your mouth... please don't stop...\"\n\nShe tightened her hand around him and descended further, enticed by the control she now had over his pleasure. Her eyes met his, treating him to the consciously erotic sight of her devouring his cock.\n\n\"I'm coming... oh God, my love I'm coming!\"\n\nMomentarily shocked by the word he just used, Sophia steadied and felt him involuntarily jerk upward; his eyes squeezed shut and his face contorted in his cry. She felt two bursts of hot thick liquid hit the back of her tongue before she released him from her mouth, feeling it trickle down her throat. The last pearlescent jet oozed out over her fingers and she brought them up to her lips, licking away the salty evidence of her triumph over his body.\n\nHer tongue rolled over her smiling lips before James grabbed her and pulled her body up to rest on his, capturing her tongue in his mouth and tasting the faintest remains of his seed at the back of her throat. He gasped for air once more, her head resting on his shoulder.\n\nShe looked up at him. His eyes were still shut, \"Do you want to go to sleep now?\"\n\nJames heard a twinge of disappointment in her voice, thinking that he would just leave her unsatisfied, \"No, absolutely not. Tonight has only just begun. I need to recover for a moment. That was incredible; you were incredible, Sophia. Thank you.\"\n\nHe kissed her forehead and stroked her hair. She played with a few of the sparse curls on his chest, listening to the drum of his heartbeat start to slow down.\n\nHe let out a long slow sigh and turned he head toward her, \"So I have a question for you that's been gnawing at me all day...\"\n\n\"Mmm?\" she answered.\n\n\"How often do you go out to the millpond and touch yourself?\"\n\nShe blushed, but straightened up and answered truthfully, \"That was the only time.\"\n\n\"Touching yourself or going to the millpond?\"\n\n\"Going to the millpond,\" she said with a smirk.\n\nHe lazily ran a hand over her exposed breast, tracing the curve as it peaked toward the center and turned over her, parting her thighs with his knee as she rested on her back, \"So while I was gone, you found a way to... console yourself at night?\"\n\n\"Yes,\" she said watching him pinch and roll his fingers over the puckering areola.\n\n\"And what specifically did you dream about on those nights?\"\n\n\"When your mouth was on my... my...\" she hesitated, her cheeks turning bright red and flushing all the way down to her breasts.\n\n\"You have no idea what that beautiful part of you is even called, do you?\"\n\n\"It's a sin to even do... this, much less speak of these things.\"\n\n\"There is no sin in celebrating what God designed us to do.\"\n\nJames moved down for a kiss and felt Sophia's lips part for him with a sigh. His hand cupped her breast before descending to rest on her womb, his fingers trailing over her soft skin, making it jump at his touch. Sophia pulled back, \"I was never told what to call... it.\"\n\n\"Well, we need to call it something, otherwise you won't know what to ask for when you want me to touch you.\"\n\n\"What do you call it, then?\"\n\n\"Well the Latin is too formal... vagina. It takes far too long to say in the throes of passion. And the Germanic is too rough for so tender a place,\" he said, kneading and stroking her lips, his fingers tangling through the sparse blonde down as she throbbed underneath his teasing caress.\n\n\"What is your favorite?\"\n\n\"I prefer the French. La chatte has such a delicate ring to it.\"\n\n\"What does it mean?\" she asked, panting as he traced a finger into her folds.\n\n\"Pussy.\"\n\nHe watched her eyes widen and a smile curl her mouth then took the opportunity to renew his kiss, locking his lips to hers as his finger wiggled inside her. Her slight giggle at the word changed into a moan as he silenced her with his exploring tongue and hand before moving across and teasing her earlobe with a gentle nip of his teeth.\n\n\"Now,\" James whispered, \"What was it that you needed?\"\n\n\"I need your mouth on me,\" she said, echoing his words.\n\n\"Where on you?\" he said, reaching up to run his thumb in a lazy circle over her tightened bud.\n\n\"On my...\" she looked up at him shyly.\n\nJames withdrew his hand completely as Sophia shuddered and crumpled forward trying to rock herself back to his waiting fingers. He whispered against her neck, \"You must say what it is...\"\n\n\"On my pussy! Please, James,\" the word didn't feel nearly as dirty as she'd imagined. She wasn't embarrassed to give him direction now, knowing that he knew the way but that her words of gentle encouragement were just as erotic to him as they were to her when her mouth was squeezing around the head of his cock.",
        "Not stopping anywhere in between, his body sprang back over the sheets as Sophia spread her knees apart allowing him access. The moves of their dance together were synchronized. As Sophia brought one long leg up, James dove underneath it, his mouth stopping only once to kiss her thigh before latching onto her flesh.\n\nJames drank in her essence and her cries of pleasure, feeling her writhe beneath his tongue, his hands prying her thighs further apart as he suckled her hardened bud. She quaked around him feeling each electrifying scrape of his tongue, every sweep of his lips over her flesh. When she came her hands tangled in his hair, pushing him down as her back arched up fully, her head thrown back as he held her body through its spasms.\n\nThe room was darkening as the candles started snuffing themselves out, their wax spent. James moved up quickly, lying astride of her, hot, fully aroused and aching once more by her keening cries. The flames of Sophia's desire for him remained unabated, burning out of control. Her body strained to be closer to his as he took his position over her.\n\nJames looked down at her eyes, dilated and lidded, heavy with passion for him. He guided himself to her gate, relishing in the heat pouring out of her. Her legs instinctively came up against her waist, opening herself for his possession.\n\n\"I want you inside me,\" she whispered breathlessly, bringing a hand up to stroke his face, \"Now.\"\n\nJames turned and kissed the palm of her hand. He went slowly, guiding just the head in, giving her the first inch before stopping. She whimpered in frustration, her insides aching to be filled. He steadied himself and held her at the hips to keep her from thrusting them upward. Leaning his head down, he paused and looked deep into her eyes, \"This is how I should have taken you the first time. Sophia, can you forgive me?\"\n\nShe strained against him, \"James, I'll forgive you if you stop this torment and just take me now. Please...\"\n\n\"No,\" he said, fighting tooth and nail to not give in to her demands, \"First, I want you to feel every moment of how I should have done this.\"\n\nHe sunk into her yet again, entering her with one more inch. The velvet heat of her contracted around his head, pulsing against the top of the shaft and beckoning him onward. Every nerve and vein in his wake was on fire within her. Sophia gasped, mewling out a cry of pleasure and frustration as he touched that blinding sweet spot within her and then torturously drew back the width of a hair, \"James...\"\n\nHe lowered his body, fitting it over hers and brought his lips to her ear, \"Do you forgive me?\"\n\n\"YES!\"\n\nJames thrust forward, feeling her rock backward and cry out in delight as his hips crashed into hers. Fingers raked lightly across his back and feet locked together around his waist as she clung to him. He slowly withdrew and pitched forward again, feeling her hips fasten against him. He nipped at her neck and shoulder, rocking forward rhythmically inside of her. Sophia felt his body brush over her as he stroked through her, clinging to his shoulder blades.\n\nA new sensation built deep inside of her. It wasn't the same as when he would touch her heated nub. This came from a place lower, deeper and far more powerful as she felt her body tightening like a spring, her insides coiling around him. James caught her with his hand by the nape of the neck and lifted her head. He captured her lips, their moans vibrating through each other as Sophia felt her entire being lifting higher and higher still. Sensing her urgency, he increased the speed of his thrusts, wanting them to arrive at their peak together as one.\n\nSophia felt him quicken, drawing back and forth, into her, pulling out, driving in once again as she met him thrust for thrust, her tightening walls grasping and releasing his cock with each push of his hips. He rose above her angling upward and rubbing deliciously against her so that she didn't know where she ended and he began. The rapid tempo James reached plunging into her depths grew unsustainable, but it wouldn't be long.\n\nThe spring snapped within her, a shrieking cry exiting her throat as her eyes rolled back in ecstasy. Her body rose up to his of its own volition; the tips of her breasts rubbing against his chest as he made what he knew were his final thrusts. She felt every muscle of her body clench at once and release, and then clench again, her voice calling out to him, her sheath milking his shaft as he crashed into her one last time, crying out her name. She fell back to the sheets, taking him with her, both gasping for air as their breathing started to become one, rising and falling in unison.\n\nAn eternity passed before he slowly began to roll his hips back. Her legs closed around his torso and he felt her hands tense and pull at his shoulder blades, \"Don't go...\"\n\nHe opened his eyes and tenderly looked down at her in surprise. She truly wanted him within her. His lips brushed against her neck and traced the underside of her jaw as he complied, resting on his elbows so he didn't crush her. He listened to their uneven breathing start to regain its rhythm as her limbs relaxed. Her eyes stayed shut and her legs fell away followed shortly by her arms. He stayed within Sophia until he felt himself soften completely, gently pressed out of her by her tight channel.   She was asleep. James slowly rolled to the side to keep from waking her and in the fading light ran his hand over her curls, smoothing back her hair from her face and stroking her forehead. This woman was changing him. Everything felt different; better, when she was beside him. His city ambition as a struggling nouveau riche son of the gentry, the separation of class, their differences meant nothing to him when she lay beside him. James could let his guard down around her and trust her with his true self. He was simply a man, and she his woman. There was no pretension, no barrier.\n\n\"I love you.\"\n\nHe barely whispered it, unconscious of saying the words until they left his lips, unsettled by their implication. But he did love her. He couldn't picture himself with anyone else and wanted to learn all of her wants, her desires, and her secrets. He knew so little about her, but every small piece of her puzzle he had put together only made him love her that much more.\n\nOne fading candle remained lit in the room and James surveyed the strewn clothes. He didn't want her to trip in case she needed to get up to use the chamber pot in the middle of this moonless night. He carefully rolled out of the bed and stepped around her stay and dress, picking them up as he went and laying them beside the wardrobe along with his clothes. Coming back to the chair, he soundlessly picked up the violin and bow and tip toed over to the dresser.\n\nJames paused, carefully opening the leather case to lift out the red velvet shroud and wrap the instrument before putting it away. He stopped, eyeing a white folded paper underneath. Lifting it in the light of the last candle, he read the name of the addressee: George Whitcomb, Esq. The barrister? It was in his uncle's handwriting.\n\nPuzzled he opened the paper and read the first lines.\n\nTo Mr. George Nathaniel Whitcomb, Esquire:\n\nMy dear old friend, I hope you are well. It has been too long since I communicated with you about my last will and testament or even less official matters. Everything remains as it was on our last correspondence barring one significant change.\n\nI write you this letter expressing my intentions to bequeath my farm at Ashford to Ms. Sophia Latwicke de Grey..."
    ],
    "authorname": "sushi_taco",
    "tags": [
        "bodice ripper",
        "1700s",
        "blonde",
        "big tits",
        "historical",
        "violin",
        "teasing",
        "missionary",
        "ravish",
        "mdom"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-devils-inheritance-ch-04"
}