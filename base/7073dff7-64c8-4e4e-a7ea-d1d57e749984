{
    "title": "The Call Girl and the Businessman Ch. 10",
    "pages": [
        "Author's Note: Dear readers, the story of Lila and Matthias has come to an end. Thank you so much for being with me throughout this writing journey. I can only hope that it lives up to its predecessors. With lots of good wishes for Christmas and the new year, Lily \n\n*****\n\nChapter 10 - Happiest When I Am With You\n\nIt was the low rumble of his deep breathing which I heard as a soothing hum; stirring my eyes open to the new world. The storm had ceased and the world was basking in the aftermath of the storm. It was neither dark nor bright; it was somewhere in between. The first subtle lights of dawn had yet to glaze the atmosphere with its tingling warmth. It was a world with unexplored boundaries; a world which was neither Heaven in nature nor Hell in form. \n\nIt was a world where the spirit encompassed the whole of who I was. It was free yet it had never been trapped, except of its own volition. The spirit dwelled deep in the crypts of my heart because it feared life but would not die; it feared death, but chose not to fully live; to let go of control. It embarked on life with feelings of apathy towards the potential of its existence. It had raged within itself; discontent yet it would rather be subservient to the mind. Reasoning was the cornerstone of the mind; and the more the mind reasoned; the more I adhered to the logic of standard rules. \n\nThe spirit in me was drawn to the life force of the man who had lain by my side. Now awakened fully, it had slowly but cautiously arisen from its dwelling in the crypts of my heart; the enclosure of its own volition. The man's deep breathing and the heaving of his chest against his striped linen pyjamas made the still bedroom air feel like home. His scent; the musky saturation enveloped me in a blanket of warmth. Mr. Boardmann's head was turned towards mine, in what looked like an uncomfortable angle. His eyes were closed; now they had not the power to pierce me with all the intensity which he alone possessed. His lips were slightly parted; brushing against the soft fabric of the velvet pillow. \n\nTenderly, I took him upon my gaze. He looked as vulnerable and as harmless as could be; and to think that I had been afraid of him! I knew he would never willingly harm nor hurt me. I knew that I had gained his trust and he had cared for me in his own unique way. Yet while I gazed at his sleeping profile, there was something about him which caused my heart to thump a little faster; almost in fear. There was an unease in my heart; I was now afraid for him; the untrodden paths which he would walk alone in the future where I was no longer by his side. \n\nHe was simply beautiful; in all ways a man could be structured in physiognomy. In my old, colourless world, I had seen him as a contrast of facial misnomers. His facial expression had been ghastly and menacing to me then. I wondered how so much could have changed in my perspective of him. This wondrous feeling called love had awakened me; no longer was I an automaton who saw the world in black or white. Now everything about him was endearing; even his bouts of temper and that masculine arrogance of his. \n\nHe had been right when he said that I would not have stayed the night had he not been overbearing. I would resist him half-heartedly; but deep down my spirit knew better how I really felt for him. I had to put up some semblance of resistance to placate my mind that it was actually easier not to protest. I was nevertheless grateful because he had been overbearing. It was because of this trait of his that I need not beg him to take me in for the night. I had this little ounce of pride left in me. \n\nGazing at him fondly beside me, I saw that he was asleep with his arms splayed upon my breast and stomach. Gently I raised his arm, placing it by his side. He fidgeted a little but his eyes stayed shut. I gazed at him, feeling calm; just absorbing how his lean body had curled up towards mine; how his legs had crouched upwards and his arms reaching out to claim me as if I belonged to him. Mostly I observed his face; fair but slightly rough at the edges, and his rather striking features; all these I thought I could never forget had I lived a hundred lifetimes. \n\nWe had started the night with the same duvet overlapping over our bodies. Whilst I was content to keep it there, he became unbearably warm later in the night. In his sleep he had started kicking the duvet down to his legs while I tried to pull it upwards for myself. Finally I had just taken the whole duvet for myself. For someone as warm-blooded as him, he could have gone to bed in the nude. Blood flowed to my face when I thought of it. I suddenly felt warm myself. Thank goodness for his unyielding preference for those long-sleeved, striped linen pyjamas. \n\nI headed to the bathroom, freshened up and wore the same dress I did last night for want of other attire. I was light in my footsteps, having no wish to awaken him as it was much too early. I wanted to leave but not without saying goodbye because he had been very particular about it. I wrote him a note instead and placed it on the piano. It could do as a farewell message; at least he would be informed that I had left. \n\nMr. Boardmann, I will always treasure the times we had together. Your little minx\n\nI saw that my piano book was on top of the piano so I took it along with me. I took one last look of the furnishings of the penthouse suite and headed to the door. Cautiously, I opened the door so as not to make a sound, remembering how loud it could be. I hesitated before I could bring myself to close the timbered door. Finally at the count of three, I managed pull myself away to quietly shut the heavy door behind me. \n\nWalking down along the grand corridors, I thought of how surreal the moment seemed. Barely a few hours ago, the avant-garde beams had greeted me, and now they constituted my passage to an unknown world without him. In the elevator, I thought of his future with Clara. In the lobby, I thought of my own future. \n\nHenry was there at the lobby; greeting me with the most professional smile I had ever seen yet. \n\n\"I had pleasant memories here.\" I said.\n\nI tried to mimic his smile but my voice came out rather wobbly. \n\nHenry noticed that I was wearing the same evening dress from last night. He looked at my hands, partially covered by my shawl, as though he was trying to discern what I held underneath. I had the piano book in my hands, and automatically I flipped the shawl aside to show him the book. \n\n\"There are plenty more fish in the sea.\" He said, in a friendly voice. \n\nI looked at him, not comprehending a word. As I had expected him to say something related to books or music, it took me some time to realize what he was hinting about. \n\nI had not taken his words seriously before; that doormen did know everything; and now he was like one of the biblical three wise men before me. \n\n\"It was never my intention to be saddled with one.\" I replied.\n\nI answered cryptically as well but I was aware of how ridiculous my answer seemed. \n\nHenry took my hands lightly in his; completely ignoring the book before him. \n\n\"I know who you are.\" He said. \n\nHis voice was low, and I saw a look in his eyes which I had never seen before. Not quite professional anymore. \n\n\"Pray, who am I?\" I asked, feeling jittery. \n\nI tried to straighten myself up and to speak in a composed voice worthy of my elegant evening dress although it was barely an hour before the sun would rise in the horizon. \n\n\"Eight years ago, there was a vagabond tramp who got himself involved in a gang fight. In the midst of it, he accidentally caused grievous bodily harm to an innocent bystander.\" He said. \n\nI looked at him politely as I waited for him to continue, but inside of me, my heart was raging like a storm. I did not like suspense. They were worse than surprises. If he were indeed a wise man, then this was his parable for me. Try as I could, I could not catch the moral of the story. \n\n\"You got me acquitted, Lila, or should I say Ms Yuennan, as you were then known?\" Henry said, finally breaking the air of suspense for me.\n\nThere was a long look of finality in his eyes. \n\nMy eyes widened. I remembered dabbling in Iegal aid services for those who could not afford legal representation. However I could not remember him at all. I had seen far too many people in his situation. \n\n\"I am sorry that I do not remember you. I should have.\" I said. \n\nInstantly I felt bad about it. \n\nI had volunteered pro bono services under the Bar Association's legal aid department because I needed variety in my work. Even then, I realised that too much company law made me cranky. I took a few criminal cases now and then. Each time a different accused stood in court, but the facts were almost always identical- it was either assault, battery or theft.\n\n\"It's alright that you do not remember me. After all, I was just another face you saw among the many crooks.\" Henry said. \n\nHe smiled kindly at me but his eyes were shrouded with a sudden gauzy film. \n\nI was touched that he was not the least offended that I did not remember him. The fact that he was being emotional about it made my chest feel heavy. \n\n\"You gave me a new lease in life. Had you not defended me, I would be in for a jail term, and ex-convicts face a hard time at the job market.\" He said. \n\n\"Henry, I am glad that you were acquitted. Has life been treating you well?\" I asked. \n\n\"Yes. After my acquittal, you told me that things can change. You needn't have to, but you went out of your way. You put various organizations in touch with me, and the rest was history. Here I stand before you today.\" He said. \n\nHe spoke with appreciation for something which I had done in the past and which I could not remember. The gauzy film in his eyes was still apparent. He ignored it but it moved me to see. I had made an impact in his life. In the course of my legal aid work, all I remembered were different people accused of different crimes and it was the offences which I remembered more than the personalities behind them. I worked like clockwork then. Case in, case out...\n\nI started to stare at Henry. A realization came upon me then. He was more than the offence he committed. \n\n\"Wait, didn't you use to have long hair which you tied up in a ponytail and a full beard?\" I asked.\n\n\"Yes, I was the homeless, dishevelled Santa.\" He said. \n\nHis smile was genuine and the gauzy film in his eyes gave way to a single tear which he rapidly blinked away. \n\n\"I guess I do remember you.\" I said, also with a smile. \n\nFor a while, we stood looking at each other. Then we looked around us in the empty lobby and beyond the glass panels. Autumn was cold and stormy; there was barely light outside; yet a streak of faint glow tremored in the darkness. It yearned to break free from the darkness. Dawn was sieving through the atmosphere; subtly and unobtrusively. \n\n\"Why did you not say a word?\" I asked. \n\n\"I wondered if you wanted to be reminded of me. I figured that since you did not recognize me and were in a different line of work now, maybe I should just keep it to myself.\" He answered.\n\nHe looked at me with an empathetic expression on his face, neither forcing an answer nor seeking one. \n\nYet it was always kindness which took my heart away. \n\n\"I thought I wanted to have nothing to do with the past, but now I'm not sure what I want to do anymore.\" I said, as a matter of fact. \n\nThere was a stillness around me suddenly. I absolutely had no idea what I wanted to do now but I realized that what the future held for me depended on the path I set for myself. Possibilities were there if I trusted myself to take a leap of faith. \n\n\"Lila, I am living testimony to your deeds.\" Henry said.\n\nThere was a firmness in both his eyes and voice. \n\n\"Thoughts must have crossed your mind about this path I have chosen for myself.\" I said. \n\nI spoke haltingly without intending to. This was a difficult subject for me. \n\n\"Yes.\" He said.\n\nHis answer was a dignified monosyllable but it sounded harsh to my ears. \n\n\"I fell upon hard times. I have a defect of reason.\" I said. \n\nStrange that I would start using legal definitions now that the past came flooding into me in gushes; in waves; finally they rose into a huge tsunami which could not be held back. I was pleading so hard for the defence of insanity upon myself. \n\nHenry looked at me kindly. \n\n\"You think too much. Back then and now.\" He said, in a serious tone of a voice. \n\n\"How would you know how I think?\" I asked. \n\nA wary smile formed on my lips. Even the wisest man could not possibly know how complex my thoughts were. \n\n\"From my own experience with you, I saw how much you fussed over me, thought about everything, even making contingency plans when I should not even concern you at all. Don't get me wrong; I do owe my wellbeing to you. In fact, I think you are doing the same for that client of yours; Mr. Boardmann.\" He said.\n\nHe spoke as a matter of fact, but his eyes were just full of kindness.\n\nI did not answer because it was true, and I did not know if he took it as an ideal characteristic to have. I looked down because his eyes were too kind for me to take in. It made me feel bouts of emotion, all churning in my heart. \n\n\"You are an angel, Lila.\" He said. \n\nAgain that word associated with celestial beings. \n\nI had allowed Mr. Boardmann to call me his angel. Could I allow another to call me the same?\n\nBut I decided not to argue. If two people were calling me angel, there must be some truth in it, or maybe both had a defect of reason. If it were the former, then I should do well to keep my mouth shut. If it were the latter, then there was no point in me arguing with the insane. \n\n\"Whatever your name, however you want to be called, you're still the same person. What matters is you see your worth, no matter what you do.\" He said. \n\n\"I sleep with rich men for money now. I get more than I do from a law firm without having to crack my brains. That must be worth something.\" I said. \n\nI did not know why I said that. It sounded crude, but yes, it was what I was doing now. And why was Henry speaking in this manner? It made me think unnecessarily. I had always wanted to know, did not like to be kept groping my way out of an ambiguous statement. In the past, I needed answers; and better still- standard answers. Now I tried hard to avoid thinking about the validity of anything which I had to say. Needless to say, it was difficult trying to control my thoughts. \n\n\"Do that- continue sleeping with men, or do anything you want, it doesn't matter really. As long as it gives you joy.\" Henry said. \n\nJoy. It was a strong word. \n\nMy mind went blank. \n\n\"I should be going now.\" I said, feeling uneasy.\n\n\"Where to?\" Henry asked. \n\n\"To the sea.\" I said. \n\n\"Wait till the sun comes out. It's still dark. There is frost on the boulevard. It froze overnight despite the storm.\" He said. \n\nI shook my head. \n\n\"I'm used to sneaking out on clients. I can find my way around in the dark.\" I said.\n\nI bid Henry a farewell for the present, even though I would never see him again. I wished him all the best for the future. He smiled, raised my hands to his lips and gently planted a perfunctory kiss on them.\n\n\"That's a novel way of saying goodbye.\" I said. \n\nI smiled as I commented on his gesture. \n\n\"To me, you never left, Lila. That's why I still remember you.\" He said. \n\nMy eyes widened while my heart sank; partly in sorrow and partly because the spirit within was moved beyond words. \n\n\"Thank you, Henry, for your kind words. I won't ever forget you now.\" I said. \n\nAs the words left my lips, I toughened my heart to stay on track. One last glance at Henry, one last glance at the penthouse suite, and then I was a miniscule creature below the grand marble arch entrance of the penthouse suite; the residence of the wealthy in the suburbs. \n\nThen I took a few steps further to the boulevard ahead of me. I dared not turn back for I might just change my mind and run back to Mr. Boardmann's suite; knocking like crazy on his door, begging him to let me in.\n\nWith some effort, I climbed over the barrier separating the boulevard pavement and the shore. It was difficult to lift my feet in the dainty evening dress which restricted my natural movement. The soft hue of light guided me, making contours of shapes visible but for the rest of the journey which sloped down to shore, I walked according to feel rather than sight. I had taken this route many times to the extent that I could picture my beloved surroundings with my eyes closed. There were many rocks and I was careful not to jag the edges of my flowy dress against them. \n\nThe breeze became more volatile the further I left the boulevard. I walked amongst the sturdy willows; saw the herons in their nests and a few destroyed nests from yesterday's storm. I saw no dead herons; I would like to think that they had escaped. Quietly as not to awaken the sleeping ones, I walked towards the coastline. Sand made its way into my ballet flats, causing my skin to feel its rough friction against my flats, but I was too determined to be distracted by it. \n\nI placed the book on a high rock. Then I walked towards the rising tide. I saw waves; its crests subtle and light in movement. How much the weather had changed since yesterday. When it hit shore, the waves ebbed gradually away; leaving masses of foam which was strikingly bright against the dark landscape. The foam was bubbly and white, and I thought I had never seen such an intense shade of white before. Before I proceeded further, I flung off my ballet flats towards the willows should they get soiled.\n\nNow, at the edge of land and sea, I looked ahead of me with my gaze on the horizon. The sun had yet to shine and the moon yet to fade away. Earth was neither dark nor bright; it was somewhere in between; they were shades of grey which eclipsed me from sight; also the same shades of grey which unobscured my view. Nature was transitioning and these were the moments between spaces of time. They were devoid of categorization. Only tousled, romantic poets succumbed to describe fleeting moments; along with the neurotic in me who felt like a poet but could not describe. Only the neurotic could feel more than the poets. Too much detail made classifications a burden; and words were a burden when all one could do was feel. \n\nI felt that I was here; I knew I was here; I could feel my joy and my sorrow; everything and nothing flashed before me. I brushed the flapping shawl away from my chest and touched the icy cold moonstone at my neck. Where I touched with my hands, my skin flinched. My hands were cold; always had been. The low temperature and the frosty sand did not help. Against the breeze, I lifted my hair with one hand and with the other, tried to unlatch my moonstone necklace.\n\nIn my palms, the moonstone gleamed a little in the light that was neither dark nor bright. I pressed my lips against it; thinking of nothing but the present moment; I felt my bare feet in the shallow waters; at one with the cold waves. I felt how the shawl flapped against the wind; hitting me back at my arms. I felt how my hair blew straight into my face; obscuring my view. I felt the weight of the world in a tiny moonstone; a stone which had been with me throughout my life, dangling in front of me like a sacred pendant. \n\nGazing at the stone, I knew I could no longer keep it. That time had passed. I wanted to move on, and the stone reminded me of all that was; the pain, the joy, the sorrow. It was too heavy a symbolic weight to carry around with me. I stared at it, jolted back to the day I bought it from the market for a few baht. I remembered asking the peddler what kind of stone it was; he said that that it was a replica of a moonstone. I was Duanphen; named after the full moon. I ought to have it, I thought. ",
        "Now I could not bear the burden of the past any longer. With one last gaze, I clasped the moonstone tightly; flinging it as far as I could into the sea; into the horizon which would let it disappear for good, or at least not to let me come across it again. I watched as the moonstone with its black stringed necklace swept up above me only to have the wind blow it back in a concave angle. It had not gone far; just a few metres in front of me.\n\nThe stone would not disappear from my sight; nor would it sink to the depths of the ocean either. It must have been the string which gave it its buoyancy; it must have been the cascading tides which propelled it towards me; I did not know. My mind was too distressed for any principles of physics. Enough of those standard rules; those principles of what ought to be and what should be. All I wanted to do was to rid myself of a stone. Why was the universe making it so difficult for me to lose a stone? \n\nI walked deeper into the sea. I no longer bothered about my dress. At first I held the skirts up gently, careful that they should not get wet in the water, but now my mission to get rid of it was the only thing on my mind. I saw it floating gently; gracefully even, on the undulating waves; as if teasing me, as if beckoning me to take it back because I belonged to it, and not the other way round. As I moved closer towards it; I felt a sharp stab at the soles of my left foot, causing me to stop in my tracks. I winced; the pain was gnawing at me. I must have stepped on something; a rock perhaps. I looked down but the water was too dark for me to see anything except its shades of grey. \n\nThe waves were now at my knees; I still had one more step to make. And I got the moonstone back in my grasp. Barely looking, I threw it again, as hard as I could and as far as my arms would yield, deeper into the ocean. Again I watched in dismay as it landed no further than a few metres away, still floating daintily; the waves pushing it back towards me. I waddled, rather than walked, deeper into the ocean. It had become more difficult to move with the waves constantly hitting at my body. \n\nI heard some background sounds, of waves mingled with the wind; of sorrow mingled with joy and something else far away at shore. My heart knew what it was; who he was. The man who possessed that voice; he who made me cry; he who made me smile. \n\n\"Lila!\" He cried out.\n\nAs I turned, I saw him frantically lapping across the distance from the rocks to the willows, and the sand to the sea. \n\n\"Come back here right now!\" He yelled. \n\nHis voice was transported by the wind; loud and bellowing against my ears.\n\nBut distances had mounted between us. Had he not realized it? \n\n\"The stone would not go away!\" I yelled back at him. \n\nI willed my feet further into the ocean. The pain in my foot served as a reminder of my failure to make the burden disappear. \n\nI did not know if he heard me; for he made no reference to it. Knowing that my voice was not as powerful as his, I tried to make gestures with my hands. I touched the area below my neck and made a throwing action at him. \n\nThen my eyes were on the stone which gleamed in front of me; only a few steps ahead. I pulled my foot forward; the pain excruciatingly ignored. I could do this, and I did. I was now waist deep in the water. I bent down, clutching at the damn stone. The moment I caught the moonstone was the moment unforgiving waves lunged me further into the sea, causing me to go underwater for a few seconds. Swallowing the saltiness of the sea, my head bobbled up from the water; shivering from the icy cold. \n\nIt was then I realised that my feet could not touch the reassuring ground anymore. I could not swim had my life depended on it. I started to panic as the waves threw me further into the horizon. In my frightened state of mind, the moonstone freed itself from me finally, and I never saw it again. \n\nI tried to push back the waves with my arms flapping towards the coast but the waves kept me violently propelled in the opposite direction. \n\n\"Mr. Boardmann, I can't swim!\" I called out to him now, weeping and yelling at the same time. \n\nI could not see him anymore, and I wondered if something had happened to him too. Rationality crept in and I tried to paddle back with my arms swashing in the water like oars as another wave swept me underwater. I cried, gurgling out water and tears. My head barely bobbled above the water. I was in and out of the sea of grey. I could not breathe. Water in my mouth. Water in my nose and ears. So much saltiness. So much water everywhere. \n\nThis was it then. The abyss of no return. This time it was for real; for the final goodbye. \n\n\"I love you, Matthias!\" I cried, in between sobs as salt water splashed into my mouth. \n\nHe should know. Thoughts crossed my mind. Did he come for me? Of course he came for me. I was his little minx. I had wanted to let go of the past; the stone now seen as a burden. But the past had swallowed me in with it. \n\nA strong undercurrent pulled me downwards. I did not even see darkness; I saw nothingness. It gnawed at me to the bone; chilling me to the core. \n\nThen I bobbled up again. \n\n\"I love you...\" I cried again. \n\nI could not keep afloat; my head was pulled into the water; my hands squirming about, paddling and trying to reach out to the sky. One foot was practically useless; the other kicking frantically at the currents which pulled me downwards. \n\nAs a huge wave took me underwater, my thoughts were about how much I wanted him to be well; how much I wanted him to be happy. Everywhere was nothingness; the shades of grey long ceased to exist. There was water in my eyes; causing me to see blurred shadows. There was water in my mouth; causing me to choke. \n\nI saw and felt the clutches of the tall, dark shadow of death looming all around me. I fought for our love; my dear life came in second. I kicked the darkness with the leg which would still move; I pushed away at the murky shadow which held me. I could not scream; my primordial survival instincts kicked in with all my limbs flagging and tossing in the water.\n\n\"Lila, let me help you. Stop resisting me!\" \n\nThe voice which yelled at me; it had not been death.\n\nI was resisting the man I loved. Squinting in the nothingness, I saw then his face; hard and unyielding, the determination in his eyes; fiery and wild. My strength drained for a moment; I collapsed as our gazes locked. My eyes frightened against his fiery blaze. The grey wolf had come to me. \n\nWhen the moment of realization was over, I tried to grab hold onto him with my flailing arms. \n\n\"Lila, don't move. Let me grab you. Trust me.\" He yelled. \n\nHis voice was now a little lower now, but the urgency of the situation was inherent in his voice.\n\nI heaved in a deep breath as I consciously stopped all movement. In a swift manoeuvre, he grabbed my shoulders and locked my arms in between his. He tilted my head back so that my face was out of the water. \n\n\"Lila, you must calm down. Lie on me.\" He said. \n\nThe sea of grey came back to me; waves hitting us every few seconds. \n\nI tried my best to obey his instructions, trying not to resist the tide. He placed my back on his chest. I felt his brute strength and force as he started swimming us back in this position. My head was above water; supported by his lean chest. My arms were entwined with his. \n\nAs he swam us back to the shore, I turned sideways to glance at him. I saw resolute determination on his face. Looking seriously straight ahead, he was the epitome of a man who would not fail; a will of steel branded in him. \n\nIt seemed that we were swimming for a few minutes before he spoke to me. \n\n\"Are you alright, Lila?\" He asked, in a softer voice. \n\n\"Yes.\" I said. \n\nGently he released our intertwined arms and with his strong hands; cupping my head with both his palms as he spoke to me. \n\n\"The water is shallow enough for you to walk now.\" He said. \n\nDazed, I nodded as I looked into his eyes; still fiery and wild. He propped me onto the ground. The water level was now at my hips. I winced as my left foot touched the ground. I tried to ignore it. It was no big deal. I tried to hobble back; placing more pressure on the right foot. \n\nHe noticed; and without asking any questions, he swept me up in his arms like a child. One arm cradled me while the other went around my back. I did not protest but only pulled him closer to me with every step he took to shore. I hid my face in the warmth of his neck. \n\nOnce we had reached shore, he placed me on the sand where he looked at my left foot. There was an ugly gash at the sole and it seemed that the blood had not quite clotted. I shook when I saw the extent of my own injury. It looked worse than it felt. \n\nHe ripped his shirt off and before I could ask him what he was doing, he had my bloody wound bandaged in his white linen shirt. \n\n\"You'll require stitches for the tear. I'll have to carry you up to the boulevard.\" He said.\n\nHe spoke in a stern voice, and instinctively I lifted my arms so that he could cradle me again. He did not say more nor did he turn to look at me. Instead he had a very concentrated gaze where his line of sight was purely in front of him. As we made our way uphill to the boulevard, I was aware of nothing else but of him holding me in his arms. \n\n\"What in Heaven's name did you think you were doing?\" He asked, in a hard voice.\n\nHe was striding straight ahead, his eyes kept to the boulevard; his grasp on me increasingly constricting my movement. \n\nHot tears started to fill my eyes. \n\n\"I wanted to rid myself of the moonstone necklace. It was too heavy a burden to bear. I threw it into the sea but it came back to me. I wanted it gone, as far as possible. I did not realize that I went too far out.\" I said, softly. \n\nMy voice was incoherent, and if he were going to get mad at me now, I would start crying uncontrollably. \n\n\"My little minx, why did you not call me along? I would have gone with you. Instead you chose to do what you do best which was to leave me all over again.\" He said.\n\nHis voice was still hard and although the fire in his eyes had smothered down somewhat, embers still simmered in the background. \n\nI struggled slightly in his clasped arms. \n\n\"I didn't want to say goodbye again.\" I said, in a small voice. \n\n\"Then don't.\" He said, in a voice which was equally hard and final. \n\n\"Don't be mad at me.\" I said. \n\nMy voice was breaking now. I rubbed my eyes before the tears could fall. \n\n\"Look at me, Lila.\" He said, his voice somewhat more controlled and stifled now that he was aware of it. \n\nI obeyed him. I turned to look at him. His breath I inhaled, his muskiness I scented.\n\nHis eyes glared at mine with a fiery spark of grey. \n\n\"Why on earth were you leaving me again?\" He asked. \n\nHis voice was gruff, and he did not soften it for my sake. \n\n\"It must happen sooner or later.\" I said. \n\nI rubbed my eyes with my hands again. I willed myself not to cry; at least not to let him see me cry. \n\n\"What nonsense are you talking about?\" He asked.\n\nThere was an exasperated tone in his voice, which served to make me flinch involuntarily. His eyes pierced mine like the first day he saw me at the restaurant. \n\n\"It is for the best. For the future.\" I said. \n\nNow the tears rammed down my cheeks like hard, pouring rain on the glass panels. My hands could no longer prevent their flow. \n\n\"So you're also playing clairvoyant now; in addition to everything you've hid from me.\" He growled. \n\nIt was not a question. Rather it was a blunt statement. \n\nI did not want to look at him anymore. I hid my face at the nape of his neck while I sobbed silently.\n\n\"What about love, Lila?\" He asked. \n\nI heard his voice; cold and calculated to draw me into a duel of words.\n\nI shifted in his tight clasp. I did not answer, but I tightened my arms around his shoulders.\n\n\"What was it about drowning and you crying out that you loved me?\" He asked. \n\nHis voice was unyielding, and he sounded very grim. \n\nMy chest rose and fell with every word he said. I felt as if all air had been sucked out of me. My whole face was plastered with tears. I was not sobbing so as to be heard, but my irregular breathing gave me away.\n\n\"What about yesterday night when you whispered that you loved me?\" He asked. \n\nHis question was curt; his voice threatening me for an answer. So he had understood me when we had lain together last night. \n\nYet it was as if I had lost my voice to the Sea Witch. I had become the weird mermaid who could not swim. \n\n\"What in God's name is going on in that strange and mysterious head of yours?\" He asked. \n\nHe bellowed out his words; he raked through my hair but ever so gently he eased me forward so that I faced him again. \n\nHis piercing eyes gripped me. His hard, agitated countenance made me weep. His voice; raspy and rough, sent shudders to my heart. \n\n\"I love you so damn much, Lila. So damn much.\" He said.\n\nHis voice was full of a passionate rapture which would not go away. It zapped into my ears; yanking me into a delirious frenzy. But his eyes; they never wavered on mine; they pierced right into my soul. The grey wolf was resolutely making his way into the depths of my heart. \n\nI was expecting a lecture on how foolish I was. Not expecting his sudden declaration of love, I could only gaze at him foolishly and wordlessly. \n\n\"I thought I was going to lose you all over again and I could not have lived with that.\" He said.\n\nHis eyes were ablaze with fire once again as he pierced into my eyes; into my soul. \n\nMy body responded quicker than my words could take flight. Tears continued to stream down my face. I was not sure if they were tears of joy or sorrow; relief or exhaustion.\n\nI lifted my hands to touch his face. My grubby hands were all over his cheeks, his lips, and his haunting eyes. \n\n\"Do you hear me, Lila? You are the only woman I love. There is no one else but you in my life. No one else whom I would rather be than with you, my angel; my miracle. My little minx.\" He said.\n\nHe looked at me tenderly now; his gaze warm. He was still bellowing out at me, loud and clear. I felt his throbbing heart on my very own as he cradled me. Its beats were rapid and hard; chugging at my very own for a response. His voice was deliberately rough as if he did really want to lecture me on my foolishness.\n\n\"I love you too, Mr. Boardmann; so very much that it hurts me to leave you.\" I said.\n\nGazing into his eyes, my words came pouring out like rain. Plain and clear. No more masks; no more shrouded veils. Gazing into my eyes, he made an animalistic sound of exultation; of this strong word called joy. \n\n\"I thought I was going to drown, and I would never have had the chance to tell you how much I loved you.\" I said. \n\nI touched his cheeks as if for affirmation that I was still alive and kicking. I touched him not gently but rather ungracefully with my grubby hands. I looked into his eyes and I saw a glorious light in them. How they shone like a beacon of hope in the nothingness. \n\n\"Do you know much it means to me that you can finally tell me that you love me?\" He asked, clutching my hands so that he could squeeze them with his regular brute force. \n\nI shook my head. \n\n\"You put me through so much agony, my little minx. Until last night, you told me you loved me in your own ingenuous way.\" He said. \n\nHe had understood me. I blushed hard until I thought all blood must have gone to my face because I felt very hot despite the freezing temperature. \n\n\"Mr. Boardmann, why let me get away with it?\" I asked. \n\n\"You seemed intent on keeping it a secret. I thought eventually you would tell me but then I read your note, and I realized that you had no intention of coming back to me.\" He said. \n\nHis voice was now a little forlorn when he recalled the sequence of events leading to this moment. \n\n\"How could I when Clara was the one you gave the moonstone ring to? The woman whom I had thought you loved. I was only second best.\" I said. \n\n\"I never gave her the moonstone ring. And Lila, you are never second best. You are the most important thing in my life.\" He said firmly.\n\nI blushed. I had now been reduced to a thing, but in a good way.\n\n\"But Gerald and I saw you showing the ring to her and we could see that she was delighted.\" I said, confused. \n\n\"She thought that it was for her, but I had merely shown it to her; to tell her that it was all over between us and that you were the one whom I desperately wanted to give the ring to.\" He said. \n\nA soft gasp escaped my lips as I looked into his eyes; and I saw him take out the jewellery box from his trousers pocket. It was a miracle that it was still lodged inside despite him coming out to my rescue at sea. \n\n\"The day we bought the rings together, I took the ring back to have your name engraved on it, Lila.\" He said. \n\nHe fished out the moonstone ring from its narrow slit and handed it over to me. \n\nIn the inner shank of the ring, I saw the engraving.\n\n\"Lila; my angel; my miracle.\" \n\nI was deeply moved. \n\nI gazed at him lovingly as tears of joy streamed down my face. I made no attempt to wipe away my tears now. Neither did he. \n\nEver so tenderly, he took back the ring from me, only to slip it into my finger as our gazes locked. When I looked down at the moonstone ring on my hands, I felt as though I belonged to him, and I cherished this feeling. \n\n\"Can I take this as my proposal to you?\" He asked. \n\nHis voice was low and husky now; his eyes filled with desire. \n\n\"You mean...\" I said, but felt it too obvious to continue. \n\n\"I'm an impatient man, Lila. Will you marry me?\" He asked. \n\nHis voice was now a little unsteady and there was a slight change in his gait as he stood cradling me. He could not go down on bended knee any more than I could stand straight. Yet his grasp on my body was hard and unyielding. He was like a solid wall that I was leaning against. He was my backbone, and I was the limpet which clung to him for my dear life. \n\nHis eyes burned with trepidation; his heart beat ninety to the dozen. His eyes bore the will of steel to have me as his. The determination etched on his countenance was crystal clear as dawn, now awakening earth with her subtle light. \n\n\"Mr. Boardmann, I will marry you.\" I said. \n\nMy eyes fluttered to his shyly but happily. This was joy; pure joy.\n\n\"My little minx. Call me Matthias, please.\" He said.\n\nHis voice was commanding and dangerously seductive. His eyes were glinting with embers of love. \n\n\"Matthias, I will marry you.\" I said. \n\nFrom beneath my fluttering eyelashes, I willed myself to gaze towards him. Gazing downwards, he saw me then, for all that I was; all that I am, and all that I was going to be. \n\n\"Thank God you're not being difficult.\" He said.\n\nHe had to smile though, and he did smile the purest and most natural smile I had ever seen. Abruptly he crushed his lips against mine and I scented his musky saturation mingled with the saltiness of the sea. He pried my lips apart, feeling me thoroughly. I did not resist; I gave him full access to the body which bound me; and to the senses which let me feel him in all his entirety the way God had made him. \n\n\"I'm not that difficult to handle, you know.\" I said. \n\nI was breathless after our kiss. So was he, I could tell. \n\n\"You speak now as if you were my property. I am very possessive. You have been forewarned.\" He said, lightly planting a soft kiss on my forehead.\n\nHe gazed at me tenderly, his eyes dark with desire.\n\n\"I do want to be yours; the same way I want you to be mine.\" I answered, with a rapture only inspired by passion. \n\nI spoke from my heart. The spirit within was released into the world; it was free to roam. \n\n\"My dear Lila. I am always yours.\" He said huskily. \n\nTime stood still as we gazed at each other. He kissed me again; on my eyelids when I gazed down shyly; on my cheeks when I turned towards him; on my nose when I wiggled in playfulness.",
        "The pain in my left foot was forgotten until Henry came up towards us. \n\nHe was taken aback when he saw the state we were in. Matthias (oh, how nice it was to be able to call him Matthias!) was rugged and bare-chested, cradling me in his arms. My empire dress of muslin and lace was torn at its layered skirts. Only the butterfly sleeves remained somewhat presentable. I finally had to admit that he was right in calling it a flimsy piece of clothing. \n\n\"What happened to you, Lila?\" Henry asked. \n\nThere was concern in his voice.\n\n\"She cut herself on a rock, and then she was swept under the current. She nearly drowned.\" Matthias said. \n\nIn his embrace, I felt his body momentarily contracting into spasms. It worried me greatly. I observed him then, only to realize that he was thinking about the inevitable had he not been there in time to save me.\n\nA sudden realization swept through me. \n\n\"You saved me. Had you not came to me in time, I would not... have made it.\" I said. \n\nI shuddered as I thought of what could have happened and how fleeting life was. \n\n\"Thank goodness you found her.\" Henry exclaimed.\n\nA deep rush of relief was apparent in his face. His gaze was on me though, although he spoke to my dear Mr. Boardmann; my Matthias. \n\nI wanted to protest that it was not exactly how it happened but I let it be. Yes, I did cut myself on a rock, but at that point, I was not drowning yet. I ignored the pain and went deeper into sea to throw the moonstone necklace into oblivion. Then it happened. But now, I could afford to be less precise about things. I was well taken care of. I had people who cared for me. I did not need standard rules. I could be me without deferring to rules. \n\nMatthias looked at me tenderly, his eyes brimming with love. He was beautiful really, both on the inside and outside, and I felt like I was falling in love with him all over again. \n\n\"Of course I had to save my little minx who ran away again.\" He said, in a deep voice.\n\n\"In my defence, I thought that you and Clara were getting back together.\" I said.\n\nThere was actually circumstantial evidence to prove that in a court of law. The fact that the ring was shown to her was an inference to connect it to the conclusion that they were actually getting back together. I stopped myself just there. Do not think too much, Lila, I reminded myself. \n\n\"I see that look in your eyes. You are thinking about something; going through it in all scenarios.\" He said. \n\n\"I am trying not to think. It takes time to stop my thought process.\" I replied. \n\nI looked at Mr. Boardmann. I wanted him to be aware of who I inherently was. \n\n\"But that's who I am. I'm always going to think a lot, over-analyse stuff. That's always going to annoy you.\" I said. \n\n\"That's right. You have annoyed me quite a bit and I suspect it's an ongoing thing with you.\" He said. \n\nHe was smiling though. There was a twinkle in his eyes. \n\nI looked at him incredulously. Sometimes I cannot understand the thought process of this man; the same way he cannot understand mine. Yet I had felt what he had; deeply and profoundly. I accepted him as he was, and he accepted me as I was.\n\n\"You like to be roused into annoyance by me.\" I said, figuring it out for myself. \n\n\"Well, I know my way around you, little minx. There's nothing about you that I cannot handle.\" He said, with a wink in his eyes.\n\nHenry cleared his throat. Our attention was on him again.\n\n\"I called Mr. Boardmann to tell him where you were, Lila. I thought it dangerous to go down to sea in the dark especially after the storm yesterday.\" Henry said. \n\n\"You're indeed a wise man, Henry.\" I said.\n\n\"Huh?\" Henry asked. \n\nI smiled sheepishly. I wanted to give him a hug but I could not walk so Mr. Boardmann carried me to him and I hugged him while still perched on his arm. \n\n\"I'm so grateful that you called me, Henry. Otherwise I would have lost the love of my life.\" Mr. Boardmann said.\n\nBoth men had their gazes on me though. \n\nGood, old Henry offered to carry me back to the boulevard but my stubbornness of a man refused to relinquish his grasp on me. Finally we walked amongst the willows and then I was gently assisted over the barrier. Mr. Boardmann drove me to the nearby hospital where my wound was stitched up. It was a painful process. Nevertheless it was a short-lived experience. He was there with me, holding my hand, telling me to be brave, until I felt a little shy with all the attention he showered me and concentrated on that instead. \n\nMy stubborn man insisted that I stay with him until the wound healed, because I could only hop about on one foot, or wobble at best. I could get into more trouble, according to him. He did not want to let me out of his sight. I was happy enough to oblige. While I was convalescing at the penthouse suite, he drove to my place at the other end of the suburb and he practically moved all my clothes into the penthouse suite. He left me nothing to wear back home. \n\n\"It's only going to be for a few days till my wound is healed.\" I said. \n\nI now rested my face on his shoulders. We were both on the settee, side by side, looking out at the balcony, over an autumn night sky. The moon was shining brightly. It was rather dark because of the fog, but the stars all around were twinkling away. \n\n\"I was thinking about you moving in with me.\" He said, murmuring into my cheek which was on his shoulders. \n\n\"Shouldn't you ask me first before taking the liberty of transporting all my clothes here?\" I said. \n\nI now faced him, trying to look as stern as I could, but instead the more I tried to look stern, the more I broke into laughter. \n\n\"Although I cannot read your mind, I can feel your emotions, Lila. To me, it's like our emotions exist on a shared plane.\" He said with a smile, taking my hand in his and placing it on his heart. \n\nThat night, as we lay in bed, we finally made love. Despite the intense strength and brute force which came naturally to him, he was surprisingly gentle with me. He idolized every nook and corner of my body; every curve and scar. The scars on my back were like flowers to me now, because he kissed them there the most. \n\nWe stood as God had created us; equal but different; the same way Adam and Eve stood before each other. I saw his body in full glory the same way he saw mine. Limb upon limb; flesh upon flesh. I inhaled his scent; the musky saturation. He inhaled my very own. \n\n\"The scent of dew combined with a sweet freshness. The scent of you.\" He whispered. \n\nHe pressed me against his whole body. I leaned against him; for want of support, although I could not wholly tell if it was because of my bandaged foot or because I was utterly and inexplicably seduced by him. \n\n\"This is the body behind the man. You already know the man; no doubt.\" He said.\n\nI nodded; blushing in awe at his chiselled body. His taut chest tempted me. I saw the length of his male appendage; hardened by desire for me. I felt a tingling in my sex; an arousal between my legs. \n\nHe had started by kissing me gently on my cheeks and then my lips. His kisses grew more incessant and passionate till I was breathless. Then he felt the weight of my breasts under his palms; feeling them as they were. His long fingers toyed with them skilfully but he gazed directly into my eyes. My lips parted to say something intelligent; but there was nothing intelligent about how I felt. Instead I heaved out inarticulate whimpers. Carnal desire had engulfed me.\n\n\"Matthias...\" I said, whimpering. \n\nI finally managed to say something coherent. \n\n\"Allow me, Lila.\" He said, in a husky voice. \n\nHe smiled a smile only a seductive, dangerous man could. \n\nHis mouth now took charge of my breasts while his hand moved downwards to caress me at my sex. I whimpered more as my body naturally plunged into him. I felt strange and greatly aroused. He was slowly taking his time as he pleasured me. I had never felt the intensity of a slow seduction before. \n\n\"I don't think I can take this.\" I whispered.\n\nHis dark eyelashes fluttered at me; his eyes full of desire. \n\n\"I think you can, Lila.\" He said softly and he nibbled at my ear. \n\nIn one swoop, he carried me to bed, placing my head on the velvet pillow. He moved on top of me. I saw the magnificence of his body towering over me. I knew this was the moment we would consummate our relationship. \n\n\"May I?\" He whispered. \n\nHis eyes burned with control. His voice sounded stilted. \n\n\"Yes.\" I said. \n\nSlowly he moved his whole length into me; I felt him throbbing as he completely filled me. His tender eyes gazed at mine with molten desire, but he stayed there; still and unmoving. \n\n\"Can you feel me, Lila?\" He asked.\n\nHis voice was a little hoarse. He exerted great control over his faculties. He did not fully let go; he had been afraid of hurting me with the raw strength and brute force which he could not control had he lost himself. \n\n\"I feel you, Matthias.\" I said, in a whisper. \n\nUpon hearing my words, he started thrusting slowly in me. I watched his face; darkened by desire. I reached my hands out to touch his chest. His body was already damp with sweat. \n\nI rarely had an orgasm since I entered the escort industry. Sex was pleasant but I was never pleasured in a way that I could feel an intensity so strong; a longing so great for release that nothing else mattered. I never lost control. I was always in touch with my rational mind. With Mr. Boardmann; my Matthias (I noticed that I had been alternating with how I called him) I wanted to let go of my inhibitions and allow myself to surrender to him now that he was mine. \n\n\"Let go, Matthias. Let go. I'll be fine. We'll be fine.\" I said, in a husky voice, only reserved for my lover. \n\n\"What if I get too rough on you? You will tell me, won't you?\" He asked. \n\nHe lightly brought his hands to the sides of my cheek, gently caressing my skin. It tingled under his touch. His warmth set me ablaze. \n\nI saw his worried eyes and I knew from the tone of his voice that he exercised rigid control over the faculties of his movement.\n\n\"I'll let you know when it's too rough.\" I said, raising my head to his and planting a kiss on his neck. \n\nI nodded, giving him the reassurance he needed to continue. \n\nMy words were what he needed to hear. He let go of all semblance of control. Piercing me with a fiery intensity in his eyes, he started thrusting fervently into my body; deep and hard as he held my gaze. I felt him pulsate and throb within me, causing me to clench my sex around his involuntarily. Almost as quickly, I too lost my sense of control. I was no longer thinking. I had surrendered completely to him. \n\nI heard a woman cry out, as if in pain; only to realize that it was my own voice reverberating in the dimmed lightning. I heard a man groan; making animalistic noises, only to realize that it was the man I loved. I felt the clouds coming down to form rain; I scented the musky saturation in the air. I scented then; my Mr. Boardmann. My Matthias. His breath became mine. I was no longer breathing on my own. He had possessed me. \n\nI cried out his name again; I arched my hips towards him; giving him full access to me. He wrenched my thighs apart; trying to go deeper until no deeper could he go. He pounded into me with vigour but he kept his eyes on me. My muscles clenched all over him, without any control of what I was doing. It was then he reached his peak. He made a sound; something between a moan and a groan.\n\n\"Lila.\" He said hoarsely. \n\nMy name was peppered with the intensity of love-making. His voice was saturated with nothing but primal arousal. He looked at me straight in the eyes; his pierce intense; his grey eyes dark with desire. His muscles contracted hard and then he surrendered to me. I felt him fill me with his passion. Then his body became limp as he collapsed onto me; his head snugly between the valley of my breasts. \n\nI stroked his head; caressed his damp, thick brown hair. With effort, he raised his head and looked into my eyes with love and concern. His face dripped with sweat; his lips moist and tender. \n\n\"We could do that again.\" I whispered. \n\nHe said not a word, but the look in his eyes was enough to tell me how relieved he was. With a mischievous grin, he started to kiss my lips and idolize my body all over again. He was the perfect lover and I realized how fortunate I was to have him; to be the recipient of his love as well as his love-making to unravel into a woman who was flushed from passion. \n\n\"Let me pleasure you too, Matthias.\" I said. \n\nHe let me take the length of his arousal in my hands. I kissed him there; my cheeks nuzzled against him. I took him with all my senses. My hands caressed him, my lips skittered over him and my mouth tasted him. I gazed at him; only to see him looking at me with such thunderous passion that I felt a lightning bolt must had struck me. I took him in me until he could hold it no longer; he finally filled me with the saltiness of his essence. \n\n\"Lila, ik hou van jou.\" He said, almost growling out the words in Dutch. \n\nHe grabbed me roughly with his brute force; enveloping me in his arms.\n\n\"Matthias, chan rak khun.\" I murmured in Thai; the very same three little words I had uttered to him in secret last night. \n\nI heard my own voice. It was the voice of a woman so much in love that her voice trilled with passion. We lost track of time; and all worldly concerns. We made love until spent, we lay in each other's arms; completely satiated. \n\nI woke up sometime in the god-forsaken hours of the night. I heard his heavy breathing and knew he was sound asleep. I gazed at him. His face still glowed from the aftermath of our love-making. The duvet was tangled at his feet again, and I could not help but smile. His body looked majestic but endearing at the same time. My warm man. Why did he ever bother about the striped linen pyjamas? \n\nI got into my dressing gown and quietly tiptoed out of the bedroom. I went to the living room and let my gaze fall beyond the clear glass panels. There had been a storm again, and I had not realised it until I saw droplets of rain on the panels. We had been too engrossed in our own world of desire and passion. We knew only of the other and nothing else. \n\nI scented the musky saturation in the air; in the penthouse suite and strangely directly behind me. Instinctively I looked behind me. \n\n\"Lila.\" He whispered.\n\nThe living room was dark except for the lights beyond the horizon. In the dimmed lighting, his silhouette was like a sculpture of an archangel from the Renaissance. He strode right up to me, his arms clasping me from behind. Starkly naked, he pressed himself against me. \n\nI turned towards him, arching my head to him for a kiss. \n\n\"I am the musky saturation you hold dear.\" He said, whispering into my ears.\n\nHe had already known.\n\n\"Yes.\" I said. \n\nMy voice was soft; trembling a little. \n\n\"And your composition \"Scent before Rain\" was dedicated to me.\" He said tenderly.\n\nI nodded shyly because he had already made me reveal so much about my love for him. \n\nHis arms tightened around my waist. \n\n\"Ever since an arrogant, rude and condescending man stared at me at the restaurant with those piercing eyes, my life changed forever.\" I said.\n\nYet I did want to admit that much to him. However I could not help the use of certain qualities to describe him properly. \n\nHe turned me around so that I faced him. He tilted my chin upwards with his warm fingers. \n\n\"The first time I laid my eyes on you, I saw an angel and she was my miracle.\" He said. \n\nI was mesmerized by the knowing gaze in his eyes. \n\n\"I loved her right from the start. She healed me; made me see the fault of my ways. I am the best version of myself because of her.\" He said. \n\nHe drew me closer to him. Feeling shy, I looked down at the marble floor. He kissed my eyelids ever so gently; symmetrically on both sides. \n\n\"You made me believe again in the loftiness of my youthful ideals. Remember my childhood dream? You had asked me to chase my dream and make it happen. \" He asked. \n\nI nodded. How could I forget his dream to build the most beautiful house ever? \n\n\"What do you think about a mansion in the suburbs? I want to build one from scratch.\" He said. \n\nIt was good to see him enthusiastic about his childhood dream again. He looked so boyish and young.\n\n\"It sounds like a good idea. I love vast space and fresh air. To be honest, I don't want to live in my empty house anymore. It reminds me of another time in my life. I have since moved on.\" I said. \n\n\"And I thought I was the one who needed the scale of emptiness.\" He said with a chuckle. \n\n\"I look forward to your most beautiful house.\" I said. \n\n\"Lila, it will be our project. Our most beautiful house.\" He said, correcting me. \n\nI smiled at his insistence on terminologies. Was it not my domain previously?\n\n\"What about this penthouse suite? I am rather fond of it now. It played a part in how we first met.\" I said. \n\n\"Who says that we can't have more than one place of residence?\" He asked. \n\nI smiled. He was my millionaire businessman. Why did I forget that? \n\n\"You seem to forget that I am actually a very eligible bachelor with bright prospects after my success in South East Asia.\" He said. \n\n\"Your money does not attract me, Mr. Boardmann.\" I said. \n\n\"What does, Lila?\" He asked, lovingly. \n\n\"All that male arrogance, stubbornness, kindness, lovingness...\" I said. \n\nThe list went on really. \n\nHis roving hands rose from my waist to the contours of my breasts. He tugged apart the soft fabric of my dressing gown, revealing my body to him. He led me to bed and we made love again. Bodies splayed upon each other, I had never felt so much love and passion in my life before. This was Heaven on earth.\n\nThe next few days passed quickly. Matthias kept to his word. He barely left my side. He said that he needed to take care of me because of my wound. We did however keep ourselves very occupied holed up in the bedroom. \n\nBy Saturday, the wound was fully healed, the stitches removed and I was able to walk normally again. We went to Lucas's house together. The three of us bonded well and we were able to be ourselves in each other's company. I played some hits from the nineties on the piano while Matthias sang to my playing; with Lucas chipping in now and then. We told Lucas about our engagement, and he was ecstatic to hear the good news. \n\nWith Matthias by my side and holding my hand, I had a long talk with Lucas about the past three years. Lucas became teary-eyed when he heard about what I had gone through. \n\n\"You are like a daughter to me, Duanphen. I wished I had reached out to you more.\" He said.\n\nI finally had the courage to tell him that I had bought him a suit for Father's Day as he was the closest I got to having a father. Yet I dared not present it to him for fear of being rejected. It had been the same suit that I gave Matthias to wear when he spent the night at my place. He had then mistaken it as a memento of a lover I had mourned. \n\nLucas hugged me tightly. \n\n\"I insist you give it to me the next time I see you.\" He had said. \n\nThe tears which welled up in his eyes started flowing down his weather-beaten face. I cried too; I had never felt so much love around me. \n\nA day later, Matthias and I attended Gerald's wedding. It was a lavish ceremony. Both the bride and bridegroom looked radiant. When they heard that we were engaged, they proposed a toast for us as well. So much attention from the people around me that I was reeling from love. This life I have now; I could not believe that it was real. I was afraid that if I blinked for a second, all would be gone. It was all just a lovely dream. Yet Matthias assured me that this was real; this life I now lead. I trusted him with all my heart. ",
        "In the months which followed, I started to work as a legal advisor for the newly formed South East Asian legal division of Matthias's company while freelancing at my old law firm; Everett & Myers. I continued my legal aid work as well because I was inspired by Henry's story. In the past, it had been mostly a distraction from company law, but now my motives were different. I wanted to help others; the same way that Henry had shown me how deeds; however small can make a big impact in the lives of others. He remained my wise man. \n\nToday I was working late. Most of the employees of the company had gone home. Since its inception, the legal division had been tasked with cross-border contracts. I found it quite a challenge to navigate the conflict of laws between the two continents. It gave my creative mind an outlet though, and I did feel the utility of my purpose here. Furthermore finding the exact term which accurately described the circumstances was a challenge which I enjoyed. \n\nI heard a knock at the door. Three hard knocks on the heavy, wooden door. No one in the whole company could knock that hard with their knuckles except for one man who always got what he wanted when it came to business. \n\n\"Do come in.\" I said, with a smile. \n\nIt was late and I was actually thinking of leaving the office now but for the tall, lean man with striking features who appeared at the door. The first two buttons of his white linen shirt were left undone. His hair was tousled. I knew he had been raking through his hair when he was deep in thought, going through tediously-worded contracts. \n\n\"Ms. Yuennan, I see that you're working late hours again.\" \n\nHe spoke as a matter of passing but there was a wink in his eyes. \n\n\"I have deadlines to meet. I have to submit these contracts to my boss.\" I said in reply. \n\nI spoke professionally. I was a stickler for deadlines.\n\n\"What if your boss insisted that you get some rest right now?\" \n\nThere was a commanding tone in that deep voice and a tinge of amusement in his eyes. \n\n\"Well, only if he would practice what he preaches and get some rest too.\" I said.\n\nMatthias laughed heartedly. He bridged the gap between us, and took me in his arms. \n\n\"You are duty bound to placate and flatter your boss, Ms. Yuennan. Do be reminded that I had hired you for your services.\" He said. \n\nHis eyes pierced into mine seductively causing my heart to flutter towards him. \n\n\"Mr. Boardmann, you had hired me to give my honest opinion on legal matters.\" I said. \n\nI dared myself to pierce back into his deep-set eyes; challenging him. \n\n\"There are though office rumours, Ms. Yuennan, that you are seducing the boss. That's very unprofessional of you.\" He said. \n\nHe trailed his finger along my lips. I shuddered in anticipation of his touch; of more than just that. I gazed at his shirt, and towards where his taut chest was visible through the gaps. \n\n\"I would say that it was the other way round, Mr. Boardmann.\" I said. \n\nHis hands now moved downwards, lightly brushing my cleavage. Without thinking, I pushed myself closer to him. \n\n\"You have to get your facts straight, Ms. Yuennan.\" He replied. \n\nHis arms went all around me now as I sighed in contentment, my body moulded against his. \n\n\"Perhaps we should consider the possibility of both parties having equally contributed to the situation at hand.\" I said. \n\nI nuzzled my face on his neck, scenting him. I could never get enough of his scent. \n\n\"What are the consequences, Ms. Yuennan?\" He asked. \n\nHis lips were on my cheeks now; his hands raking through my wavy hair. \n\n\"Well, it seems that...\" I said, but I could not possibly continue in this state. \n\nToo impatient for an answer, his lips had already crushed mine with a sudden velocity and raw desire. I writhed around him, letting him possess me. The day had been long and although we worked together, we barely spoke due to a clash of schedules. We only met at meetings which were very formal ones with other heads of division. \n\n\"It seems that they are both engaged and about to be married soon.\" He said, murmuring into my cheeks. \n\nHis breath was so warm. \n\n\"When exactly? I was not aware of it.\" I said, in a soft voice.\n\nThere was really no need to speak louder. It was just us in the office. \n\nHe distanced his head from mine so that his piercing eyes could see straight into mine. I welcomed his pierce; made no resistance to challenge his darkened gaze. \n\n\"That's what I want to discuss with you, Ms. Yuennan. It should be a mutual agreement.\" He said. \n\nHe looked serious and greatly in earnest. The spirit in me, now free, reached out to him, prompting me to kiss him lightly on his cheeks; symmetrically as was his golden rule. \n\n\"As your legal advisor, I think it proper that we discuss another issue first before setting a date for your wedding, Mr. Boardmann.\" I said. \n\nI spoke seriously too, but his eyebrows had risen substantially. \n\n\"How difficult can it be to set a wedding date with you, Ms. Yuennan?\" He asked. \n\nHe sounded rather annoyed but was patient enough to hear me out. There was a hint of awe in his voice. \n\n\"It goes without saying that you are a wealthy man. It is advisable that you get your fianc\u00e9e to sign a prenuptial agreement so that you can preserve your property in the event the marriage ends.\" I said. \n\nI had said it. It did not sound nice to me, but I was his legal advisor anyway so I had a duty of care to inform him. To be honest though, even if I were not, I would have wanted to protect him in any way I could. \n\n\"You're going overboard, Ms. Yuennan.\" He said. \n\nHis voice was rough and curt but tenderness was etched all over his face and I saw the spark of love for me in his eyes. \n\n\"I don't think I am, Mr. Boardmann. It is standard practice among the wealthy.\" I said, in as composed a voice I could. \n\nHe tried to read me like a book, which was something he could not do, but he observed me thoroughly. He could sense my feelings for him. \n\n\"Whatever I own is yours, Lila. I wouldn't want it any other way. And I do not want a piece of paper to remind me what's left of me if you decide to leave me.\" He said.\n\nHis voice sounded strained and there was hurt in his eyes.\n\n\"That I could never do. I cannot tear myself away from you now, Matthias.\" I said. \n\nHe was taking my good intentions all the wrong way. I took his hands in mine, and I grasped his lean fingers tight. I felt for him, so very much that I was at a loss of words because I did not know how to console him. I felt his love for me; it was always generous. He was my one and only love. He knew that, of course. \n\n\"Because, Lila, everything else is worthless.\" He continued.\n\n\"Matthias...\" I whispered.\n\nIt was impossible to go on. \n\n\"If you should decide to leave me, you can take whatever property you want with you, because it wouldn't matter to me anymore.\" He said.\n\nHe looked at me, and I knew he meant every word he said. I was afraid of what he could do when he was upset; what he did do when Clara left him made me shudder in fear. \n\n\"Please don't say that, Matthias.\" I said. \n\nI felt terrible. \n\n\"Do you know my greatest fear, Lila?\" He asked.\n\n\"It is me leaving you, isn't it?\" I answered. \n\nI need not hear the answer. I could feel him. We both could not comprehend the logic of the other's mind, but we could both feel each other's emotions very well. And sometimes we interpreted the emotion to correspond with an erroneous logic. \n\n\"You have left me twice before and they say the third time's a charm. If that happens, you'll never come back.\" He said. \n\nHis voice was controlled, but he did not mince his words. His eyes were hurting. The grey wolf inside was insecure. \n\n\"That's not fair, Matthias. Circumstances were different then. I was your call girl and I was afraid of love. But now I am no longer afraid to love and be loved by you. And I know that you love me a lot, and sometimes I wonder if our love is equal. I wouldn't want to love you any less than you love me.\" I said.\n\nHe looked at me in astonishment as I poured out my deepest fear. I wanted to be honest with him. I wanted to leave no stone unturned.\n\nI felt fire and ice in me; fear of not loving enough; fear of losing love. \n\n\"What I fear the most now, Matthias, is that I do not love you as much as you love me, and I cannot bear to live with that. And because of this, I fear I am not worthy of you. I also fear that if something were to happen to me, you would attempt suicide again, just like you did when Clara left you. I don't want you to fall the abyss of no return. Not again, not ever. Do you hear me?\" I said. \n\nHe looked into my eyes. I let him see me, in all my turbulent emotions. \n\nTears streamed down my face. I let them fall on my lilac blouse. My hands were still grasping his; I would not let go.\n\n\"Listen, my little minx. You are worthy of me. Don't overthink love. Love just is. Sometimes we love more, sometimes we love less, but we still love. And you want to be with me; that's all that matters.\" He said.\n\nHe looked at me tenderly. His eyes were glowing with a strange light and the lilt in his voice held nothing but affection. \n\n\"Really; just that, Matthias?\" I asked.\n\nHe nodded. A warm glow lighted up his face and I realised that the strange light in his eyes was none other than love. \n\n\"You are very honest with me, Lila. The fact that you tell me this proves to me that you love me to bits. You care right up to the smallest details. Why does it matter who loves who more, Lila, as long as we know we want to be together?\" He said. \n\nHe wriggled his fingers which were trapped by my iron grasp. Belatedly I wondered if I held him too tightly. I let go of his fingers. \n\nHe wiped my tears away with his white linen handkerchief. Just as quickly, I hugged him tight. \n\n\"My dear love, Lila.\" He whispered, bending his head downwards. \n\n\"Promise me one thing, Matthias.\" I said.\n\n\"Just one? I could do with more.\" He said, with a slight smile. \n\n\"I'm serious. If anything were to happen to me, you must promise me that you will never attempt suicide again.\" I said. \n\nI found the words attempt suicide too painful to say for the second time but I wanted to be clear. He loved a lot and much as I revelled in his love, I was afraid of what he might have done if circumstances tore us apart.\n\nHe looked at me in a deep and profound manner. He gazed at me through a film of tears. \n\n\"I promise, Lila. I promise.\" He said. \n\nI heaved a sigh of relief. As tears streamed down his harsh features, I wiped them with my fingers; gently grazing his skin, caressing the love of my life. \n\n\"But I would do anything in my power for us to live a long and wonderful life together. I don't ever want to lose you.\" He said. \n\nHis voice filled my ears with the most passionate tremor I had ever heard. His eyes loved me to the core of my existence. \n\n\"You'll never lose me. I'll always be with you, for now, for always, forever more. I intend to be with you till death do us part.\" I said. \n\nMy voice equally trailed with a passionate rupture which tore through every fibre of my soul. \n\nOur gazes locked. His eyes pierced mine with flames of eternal love. \n\nWe did set a wedding date to be held in six months' time. We could not wait any longer. \n\nEpilogue - Happily Ever After and A New World Beckons Us\n\nWe had an intimate wedding by the sea where only our loved ones and their loved ones were present. Cherie, Penelope, Lucas, Henry, Gerald, Sara, Mrs. Potts and Mr. Collins and their families were there with us, sharing our joy and love. \n\nWe read our vows; seeking to love and cherish each other for the rest of our days. \n\nMatthias had given me a new moonstone necklace as his wedding gift for me. This moonstone matches the periwinkle blue of our wedding rings. It glows mysteriously as if bringing me closer to the vortex of my soul. \n\n\"For the future; for new memories.\" He had said, while clasping the necklace around my neck.\n\nCherie has found love. She is now dating the mayor. Penelope and I still keep in touch although I have left the escort agency. I visit Lucas regularly every week now. Sometimes Penelope tags along, and I wonder if they share more than just friendship together. Henry is a single man; and I want to play matchmaker for my wise man. We go out for meals quite often with Gerald and Sara as we are roughly within the same age. Mrs. Potts is a very warm, elderly woman who treats Matthias like her son; although she does not say it in too many words; nor does Matthias acknowledge it in words. However he does respect and care for her a lot. Mr. Collins and his wife are an easy-going couple whom I look up to because although they argue a lot, they have eyes only for each other. \n\nWe have travelled to Bangkok a few times for business purposes. At first it was bittersweet to be back due to my scarred past, but we did make new memories and they have been happy ones. Matthias had been my rock and confidant whenever I felt emotional. Eventually I could think of my past with calmness and acknowledgement. I was not defined by it anymore. \n\nWith Matthias's wealth, I was able to start a foundation to help women in the sex industry. I know that I could not help all women, but I wanted to do something about it. Thailand was already notorious for its sex industry and the least I could do with money was to offer education and training to women so that they had choices. They were free to choose. They could determine their own future. \n\nSometimes in the comforts of our penthouse suite, I scribble on bits of paper recording the sequence of events of how Matthias and I met. He smiles at me now, asking me why I bother to do this. He jokingly asks if I am setting standard rules for myself. His piercing eyes engulf me with love. \n\n\"No more rules. No more standard answers.\" I say. \n\n\"Pray, why is it so, my love?\" He asks, with a smile. \n\nBut he knows why anyhow. He just wants me to say it out loud. \n\nThe grey wolf looms over me, causing me to abandon my writing at the desk. His voice warms me; his eyes lull me into a deep serenity of knowing. \n\n\"Love transcends all rules. Love transcends all boundaries.\" I say. \n\nHe looks at me, mesmerized. He bends down at the desk and brushes my lips with his fingers.\n\n\"I don't know though what to call our story.\" I say, seeking my husband's expertise. \n\nHe does not bat an eyelid when his beautiful eyes pierce mine.\n\n\"The Call Girl and the Businessman.\" He says. \n\nI do not nod nor do I speak, but he understands me just as well by looking at me. \n\nAnd that shall it be.\n\nOur future is bright; because of our love for each other. I had never expected love; but I have found it. Love is my guiding light now; my beacon of hope. It is my source of strength and my realm of desire. \n\nIf our story lingers a little longer in your mind than it should or just perhaps you have been inspired or annoyed by our idiosyncrasies, then I have fulfilled my goal with my jottings. No standard rules, no standard notebooks; just a strange and mysterious creature who is loved so well by an intense man with strange, wolfish eyes. I am happy that I have yet to know the depths of love. It grows each passing day; my feelings for him mount higher and higher each step of the way. I feel unstoppable; I feel me; I feel him. \n\nHe is my Matthias Boardmann. He is also my musky saturation; the scent before rain. \n\nI see the moon's subtle light illuminating his warm face and body as he sleeps. The duvet is again tangled at his feet. But all I see is my angel; my miracle. And I know all is well. \n\nTHE END"
    ],
    "authorname": "subtlekiss",
    "tags": [
        "call girl",
        "businessman",
        "moonstone",
        "scent before rain",
        "musky saturation",
        "troubled",
        "neurotic",
        "feelings",
        "romantic",
        "emotional"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-call-girl-and-the-businessman-ch-10"
}