{
    "title": "The Warmest Winter, Day 09",
    "pages": [
        "Thanks to everyone for their feedback on the previous chapters, with a special thank-you to my real-life editor. Remaining errors, if any, are mine. Reading the chapters of this story in order is highly recommended. All geek culture references are properties of their original copyright holders.\n\n*****\n\nCassie woke up once again to the sound of her cell phone alarm and turned it off. She flipped off the covers and lay in bed for a while, convincing herself to get up. Making breakfast was fun, after all. On the other hand, she really wanted to stay in bed and touch herself, thinking about Mike. She'd been with him a few times now, sexually, and each one made her want more. Jenny and Veronica would be downstairs soon enough to ask questions if she was late making breakfast. Maybe just a little self-pleasure.\n\nGrabbing her dildo from her nightstand, she lay back down on the bed, face-down. She didn't dare use any of the vibration settings, as the others might hear it if they roused early. Positioning herself over it, she began to shift and adjust her hips with small, slow motions -- her little secret. Her past lovers and her present friends marveled at her hip control. This was how she stayed in practice. Holding the dildo in position just so, she could tease herself to crashing orgasms with just her hips.\n\nHowever, that was not for today. As soon as her pussy juices had lubricated the toy, she glided back and forth on it, making sure it hit all the right spots inside her. Every time Cassie slapped her pussy against the hilt of the toy, she recalled Mike's explosive climaxes. Slap -- on her ass. Slap -- down her throat. Slap -- in her pussy. Slap -- on her ass.\n\nThe soft, rhythmic sound couldn't have been heard through the door to her room, and before long, Cassie didn't much care. She flipped onto her back and began roughly fucking her pussy with the dildo until her climax hit. Cassie's whole body tensed and shook, her eyes shut, and she caught her breath in her throat to keep from calling out.\n\nAs soon as the glow faded, she burst into action to make up for lost time. She put the dildo in a plastic bag, reminding herself to clean it later, and put it back into its drawer. Then she got dressed for the day.\n\nFeeling flirty, she went for a set of light pink panties and matching bra. Ankle socks, to accentuate her legs, and a denim cheerleader-style skirt. The way Mike had reacted last time she wore such a skirt, she was hopeful for today. To up the ante, she wore on of her \"party\" shirts. Black, with somewhat elastic fabric, and the perfect neckline. Low enough to show a decent portion of her chest, but not so much as to be obvious.\n\nMaybe she was a bit paranoid about her chances with Mike. Cassie had always felt second-string next to tall beauties like Jenny and Veronica, especially Veronica. Men liked to see her as the \"cute\" one, and she was getting tired of it. A few times before, she'd gotten so disheartened trying to compete with her friends for men's affections that she'd given up.\n\nRight then, Cassie decided to keep after Mike until she or Mike said otherwise. Even if she had to do so right in front of her friends. She'd prefer not, of course, but it was time for a change.\n\n*****\n\nAs Jenny got ready for her morning shower, she heard Cassie head down the stairs to make breakfast, with a steadiness to her step that Jenny had not noticed before.\n\nIn the shower, Jenny had plenty of time to reflect on her friends' behavior while she shaved. Today was an \"everything-below-the-waist\" shaving day. She took her time, so as not to irritate her skin, or leave bumps or hairs. She knew Veronica waxed, and Cassie had shaved the previous day. That's what had reminded Jenny to do so.\n\nCassie and Veronica. They, like her, had not gone casual, entirely. That was a huge indicator that they were all still interested in Mike. She knew she shouldn't be trying to keep tabs, but everything a person did said things, and she was trained to pick up on them. She couldn't help it, to a degree.\n\nCassie, at least, was sure. She'd commented, as a joke, that they should all jump Mike at once. And Veronica had gone along with the joke, come to think of it.\n\nJenny paused and considered the idea herself. She'd never thought about having sex with a guy at the same time as one of her friends, let alone both of them. Would she need the guy there? Yes, definitely. But could she appreciate the physical pleasures of sex, no matter the gender of her partner or partners? She really didn't know, but the idea still tingled in her head, and she thought she might like to find out someday.\n\nAs she dried off, she focused on the more immediate issue of Mike. She decided to try an experiment: neutral clothing. Underneath was whatever she wanted, which is this case was a bright white bra-and-thong set. But over the top, she wore a \"Psych Majors Do It In Your Head\" t-shirt and jeans with a belt. She even put on her watch and her pink fuzzy slippers.\n\nLet's see how Mike reacts to this ensemble.\n\n*****\n\nVeronica finally caught her breath. She'd just barely heard Cassie masturbating through the closet doors, realizing that her nearly-adjacent bedroom was just out-of-sight-out-of-mind enough for Cassie to have apparently not considered it. Veronica so badly wanted to finger herself to an accompanying orgasm, but stopped herself.\n\nNo. She truly did want to get her libido under control. If she couldn't, she'd be a man, and that just wasn't an option. So Veronica lay in bed, gripping the edges, sometimes shaking as she struggled for control of herself, but eventually, it passed, and she could get up now.\n\nSo, how did she want to proceed with the day? Did she want to go for Mike again, or take it easy? Maybe she would just take it easy, but not object if he pursued her. That's the ticket.\n\nTo that end, Veronica picked out a bikini swimsuit top and bottom to wear. Bikini tops tended to be perfect for her to perk up her larger-than-average breasts while not shoving them in anyone's face. So to speak, that is. The bikini bottom was so that she matched. What's the fun of being a girl if you can't treat completely arbitrary fashion decisions as if they were immutable laws of the universe?\n\nPlanning to not step a foot outside the house today, Veronica donned a pair of shorts with the word \"Perfect\" across her buttcheeks, and a Tweety Bird t-shirt. Add socks and her watch, and she was down the stairs for breakfast time.\n\n*****\n\nThe machine-gun lyrics naming various newsworthy tidbits of the mid-twentieth century rattled across Mike's consciousness until he turned off his radio alarm as it blared \"We Didn't Start The Fire\" by Billy Joel. He woke up with a hard-on, but that was becoming the norm this past week. Unlike previous days, however, he had no inner struggle whether or not to satisfy himself right away.\n\nToday, he had a plan. He'd thought of it right before going to sleep, and now he could spend his whole workday ironing out the details. He was ahead of his remaining deadlines for the moment, and usually he'd either double-check his conclusions or present his findings early. If he had time left, he still may.\n\nBut his three gorgeous, sexy houseguests, all of whom had been driving him wild for the last week-plus, must not suspect anything until it's too late for them to care. To that end, his usual ensemble would serve him well. Black boxers were a given, as were his jeans, watch, socks, and belt. For a t-shirt, he picked a Polo shirt that was just the slightest bit snug around his chest and shoulders. He smiled to himself at what the ladies would think, if anything.\n\nAll that would be later, so for now, it was just another morning in their crazy semi-snowed-in situation.\n\n*****\n\nBreakfast passed normally, with the four friends chatting, especially about how good Cassie's cooking skills were. She wasn't blushing nearly as much at the compliments lately. Topics wandered, from their future as business partners, to fun anecdotes from their lives, to games, movies, and anywhere else the conversation happened to wander. They seemed to be able to discuss virtually anything, but each of them knew quite well there was at least one elephant in the room.\n\nMike, at least, had an idea in that regard. He went to his office to \"work,\" shutting the door behind him as always. The others didn't suspect a thing. Veronica went to exercise, followed by a shower. Jenny and Cassie got dressed for cold weather and went outside to bring in some firewood, now that the snow no longer covered the supply in the backyard.\n\n\"It'll be kind of weird going home after all this, won't it?\" Cassie asked as they carried short log wedges up to the back porch of the house.\n\n\"Sort of,\" said Jenny, \"But where is home, exactly? We paid for our apartment through the end of the lease, but what then? We knew we were moving, but where are we going?\"\n\nJenny threw her head back and her laugh echoed back from the huge wall of the house. \"We're sorting out so many details of an operation, and we don't even know where it'll be!\"\n\n\"How about Denver?\" Cassie asked quietly.\n\n\"Denver?\" Jenny repeated with surprise.\n\n\"I've been giving it some thought,\" Cassie continued, \"Even at its densest, the Denver area has a lateral urban sprawl. That means they built out, not up. It's a large enough city to provide whatever resources we'll need, but it's isolated enough from most of the country to seem like a getaway for clients, even if we're just in the suburbs. Mike already lives in the area, so we'll know people right away, the local higher education is pretty good, and if we want to get higher degrees elsewhere there's a lot of purely online Master's and Doctoral programs.\"\n\nJenny's mouth was open and she stared at Cassie.\n\n\"Plus, as you know, I'm a Broncos fan.\"\n\nThat snapped Jenny out of it. \"Right. I should have known.\"\n\n\"So what do you think?\"\n\n\"I think it's worth a look.\"\n\n\"Come on, you think it's a great idea. You're just playing it cool because you don't want to let on that you're still into Mike.\"\n\n\"And if I am?\"\n\nCassie shrugged. \"No big deal. I am, too. So's Veronica, if I know her at all. You know, Mike told me something interesting the other day.\"\n\n\"What was that?\"\n\n\"He said that if he we counted our time with him as dating, we've all gotten, like, a dozen or so dates from him already. 'Cause we're together all the time here. Assuming a date per week, that's three months, as of a few days ago.\"\n\n\"What's your point?\"\n\n\"My point is, we've never all been interested in the same guy for this long before.\"\n\n\"Yeah, you might be right.\"\n\n\"The Rules were never meant to last this long.\"\n\n\"What do you think we should do?\"\n\n\"I dunno, but I'd bet Mike can't be having a good time juggling us all and keeping it separate and secret. Well, okay, he could easily be having a good time, obviously,\" Cassie giggled. \"But what I mean is it can't all be a good thing.\"\n\n\"I guess. We'll keep an eye out, then, and we'd have to talk with Ronn- damn it, Veronica- about what changes, if any, we should make.\"\n\n\"Agreed.\"\n\nOnce the firewood was spread out on the deck, they left it there to dry out in the sun. They could bring it in easily enough from the back door. From the kitchen through the hallway into the front room with the fireplace was wood and linoleum- easy to sweep up, no problem. Their morning work done, they hung out in the living room, until Veronica and Mike would join them.\n\n*****\n\nVeronica was downstairs at the kitchen island, sipping fruit punch Kool-Aid that Jenny had made that morning, when Mike walked in, holding his cell phone.\n\n\"Okay, hold on, let me put you on speaker.\"\n\nJenny and Cassie got up from their seats and came closer.\n\n\"Hello again, ladies,\" said the voice on the speaker, \"It's Stan, the mechanic. I finally got a look at your SUV about noontime, and I'm afraid the news isn't good.\"\n\n\"How bad?\" Jenny asked.\n\n\"It's totaled. The engine block cracked.\"\n\n\"How can it be totaled?\" Cassie asked, \"It looked fine!\"\n\nMike answered. \"These days, Cassie, 'totaled' is another way of saying that it would cost less to replace than to repair. With technology being what it is, totaling is getting easier to do.\"\n\n\"Can't the crack be fixed?\"\n\n\"No,\" Jenny shook her head, \"The engine block is what holds the pieces of the engine together. It's basically the next-strongest part after the frame that keeps the people safe. If it cracks, the engine can't fit together. It's like putting a puzzle into a frame vertically without having the pieces supported by anything.\"\n\n\"Gorgeous and they know about cars,\" Stan said, \"Mike, you lucky bastard.\"\n\n\"Now don't go starting rumors again, Stan,\" Mike chided, \"They are my guests. Besides, remember what you said about Dave and the new grocery store girl?\" Mike looked up and mouthed \"Long story,\" which the gathered women suppressed giggles at.\n\n\"All right, I'm just joking,\" Stan said, \"Not about the car, though, sorry.\"\n\n\"So what do we do?\"\n\n\"Nearest airport's nearly four times farther away than Mike is, and in the other direction, and there's no car dealers around here.\"\n\n\"And I only have my Hummer,\" said Mike, \"And even I am hesitant to use that much gas. I have to get Dave to drive me to where I can get a cab, which will take me to a rental car place, which will get me to the airport. We'll work something out. Stan, what can you do about the SUV?\"\n\n\"Any personal possessions in it you ladies want saved?\"\n\n\"Yes!\" all three stated without hesitation.\n\n\"I'll keep it in the lot until you can get a look inside and grab your stuff,\" Stan said, \"After that, I'll get a guy to haul it to a CarMax and get what you can for it. I'll just bill you or give you the difference.\"\n\nJenny whispered to Mike. \"How can we trust him?\"\n\nMike laughed, and responded aloud, \"How can we trust him? First of all, Tina'd kill him if he even thought about it, and believe me, she'd know it before he did. Second of all, the man's the best in the state. You don't get a rep that good for ripping customers. He'll give you every penny your truck is worth, and not charge you a dime more than he feels is fair.\"\n\n\"A penny's less than a dime,\" said Veronica.\n\nStan roared with laughter over the phone, so loudly the speaker distorted the sound. \"And don't you forget it!\" he said.\n\n\"Seriously, though, thank you,\" said Mike.\n\n\"You're welcome. Gotta go now,\" said Stan.\n\n\"Bye,\" said the women\n\n\"See ya,\" said Mike.\n\nWhen Mike returned from putting the phone back in its charger in his office, Cassie was already coming back downstairs from getting her phone.\n\n\"Where's your phone?\" she asked. Mike gave her a confused look. \"Well, go get it!\" she prodded, pressing buttons on hers.\n\nMike came back out and she dialed a number from her phone's address book.\n\n\"What's going\" is as far as Mike got before Cassie shushed him.\n\n\"Hey, Nate! Glad you could talk,\" Cassie said when the call was answered, \"Listen, I need a favor... No, nothing like that, he's been nothing but great... yes, I mean a great gentleman.\" Cassie rolled her eyes. \"Can you listen for a sec?... Okay, we got the car to a mechanic finally, but the engine's busted and can't be fixed. We're out in the middle of nowhere, almost literally. I need a huuuge favor... Can you come pick us up?... Me, Jenny, and Veronica... Okay, thank you... I love you, too. Bye-bye.\" She ended the call and handed Mike back his phone.\n\n\"Nate is...\" Mike remembered the name, but he had forgotten from where.\n\n\"My brother,\" Cassie replied, \"NYPD, straight outta high school.\"\n\n\"Right!\" Mike said, recollections collating, \"I remember now. Two years older than you, three inches taller. Also a Broncos fan. I've been meaning to ask: why?\"\n\nCassie shrugged, \"A college roommate he had turned us onto the game, and he was from Pueblo. We picked up the fandom from him.\"\n\n\"Fandom of sports? No way,\" said Veronica.\n\n\"Oh, yeah. Superstars, superheroes; sports stats, comic book numbers; archnemeses and rivalry teams,\" said Jenny, \"Shall I go on?\"\n\n\"So jocks are really...\"\n\n\"Closet geeks.\"\n\n\"Wow...\" said Veronica, \"That explains a lot...\"\n\n\"Except the rest of the phone call,\" said Mike, turning back to Cassie.\n\n\"He's gonna talk with his captain during his lunch break in an hour or so and see how soon he can use his vacation time to drive up here,\" she said.\n\n\"I couldn't ask him to do that,\" said Mike.\n\n\"You didn't. I did,\" said Cassie.\n\n\"You're a mean sister.\"\n\n\"Hey, we've been pretty close since Mom and Dad died. A chance to see each other? Not to be missed.\"\n\nThe conversation spun onwards and outwards as they had lunch. It continued to fascinate Mike that other than the obvious Rule-inhibited subjects, anything was fair game. There was a ten-minute argument over whether or not dust bunnies should be classified as dust rabbits instead. (Dust bunnies won, of course.)\n\nBy the time everything from lunch was cleared and cleaned, Nate called back.\n\n\"Hello?\"\n\n\"This is Nathan Fox. Who am I speaking to?\"\n\n\"Mike Evans. Your sister called you on my phone. It's the only one with reception out here.\"\n\n\"Well, that's a time-saver. It's you I need to talk to, really. I can start out on Friday, probably getting there on Saturday. I need more specifics. For example, your address.\"\n\n\"Funny thing,\" Mike said, \"This house doesn't have one.\"\n\n\"Come again?\"\n\n\"It's twenty miles from a main road. The local postal office sent me a good-humored personal letter telling me that; while, quote, 'they assure me that rain, sleet, and gloom of the night are not impediments to their duty, a forty-bloody-mile round trip for one stinkin' house is,' unquote. Word-for-word, I swear. I still have the letter around here somewhere.\"\n\n\"So how do I get there?\"\n\nMike gave him an address in town. \"Go here, and tell them your name. I'll call them and tell them to expect you. They'll give you a map and directions.\" Mike heard typing on the other side of the line.\n\n\"Okay, I think I see the address on MapQuest.\"\n\n\"Twenty-two miles from there. And you'll have to drive it slow. It's twisty and bumpy.\"\n\nNate was quiet, except for murmuring a few numbers. \"Mid-to-late afternoon Saturday, barring unusual traffic. I'll call this number when I get to the address.\"\n\n\"Sounds good. See you then.\"\n\n\"Yes you will. Can I talk to Cassie?\"\n\n\"Sure.\" Mike handed the phone over.\n\n\"Yeah?\" Cassie said, \"I'll be fine... Really. Love you, too. See you Saturday.\"\n\n\"Good brother,\" Mike said.\n\n\"Overprotective, but yeah,\" said Cassie, \"You'd like him.\"\n\n\"Oh?\"\n\nAfter that, Mike suggested they all go downstairs to play Mario Party 4. The women agreed, but only if they could switch it to Super Smash Brothers Melee, another GameCube game.\n\n\"And why don't you have a Wii again?\" asked Jenny.\n\n\"I kick it old school with gaming. Shoot, I've been looking to get a D-and-D game going back in Denver. Which reminds me...\" He went out of sight. As the ladies got settled in to pulverize one another's cartoon avatars, they heard Mike do something upstairs and then come back down.\n\n\"What was that all about?\" Veronica asked.\n\n\"It's a surprise. Everyone remember the rules?\"\n\nThey did. Mike had them try various configurations of teams, to \"reinforce their cooperative efforts,\" which would come in handy for being business partners.\n\n\"Dude, you already sound like a bureaucrat,\" Veronica laughed.\n\n\"No, if I was a bureaucrat, I'd call it 'team building' and we'd be around a campfire, singing.\"\n\n\"I think I'd prefer the campfire right about now. How do you get your Pikachu to do all those crazy moves?\"\n\n\"The yellow C-stick. Here, I'll show you.\" Mike came over and put his arms around her, so that his hands were over hers on the controller.",
        "\"Every character has moves like these,\" he explained as he demonstrated on the screen, \"Up is usually some kind of bicycle kick, good for keeping opponents in the air. Left and right are powerful lateral attacks. Down is typically a good defensive move. But none of them are instant, so timing is important.\"\n\n\"Thanks,\" she said, breathing somewhat heavier. Her friends noticed the change.\n\nThat moment stirred in Cassie's head for a while, so that some time later, she said:\n\n\"Hey, Mike, can we partner up again? It's been a while.\" She realized only afterwards the double meaning her question had, and smiled at the happy accident.\n\n\"Sure.\" He came over and sat next to her on the couch. At this point, they'd switched to Mario Kart Double Dash, a racing game with two players in each car.\n\n\"Where do you want to sit?\" Mike asked.\n\n\"I want you behind me,\" Cassie said, \"On top.\"\n\nUnseen by the others, Jenny's eyebrow briefly raised, but she said nothing. The whole afternoon passed by. They'd play rounds with just two or three of them, when others went to get snacks or use the bathroom. During one such break, Jenny and Mike were alone in the basement when Cassie and Veronica both wanted to get Kool-Aid from the kitchen.\n\n\"You seem quite at ease today,\" Jenny ventured.\n\n\"Yup,\" Mike answered simply, giving away nothing.\n\n\"So, nothing's bothering you?\"\n\n\"Nope. Should there be?\"\n\n\"Maybe. We're all planning some pretty big life changes together. For us, it's getting a direction, a good thing. For you, it's a complete change of direction, which good or bad, can be tough to handle.\"\n\nMike saw his opportunity, and came over to where Jenny was sitting. Kneeling in front of her, he took her hands in his, controller notwithstanding, and look into her eyes.\n\n\"I appreciate that you care about me, and that's not just a line, I really do.\" Mike placed one hand gently against her face. Jenny's eyes half-closed. \"I'm going to be okay. And it's because I have friends like you.\" He got up and kissed her forehead before going back to his seat. They went back to racing until Cassie and Veronica returned.\n\n\"What did we miss?\" asked Cassie.\n\n\"Jenny still sucks at Rainbow Road,\" Mike answered.\n\n\"You distracted me!\" she retorted.\n\n\"Singing 'I've got a lovely bunch of koopa shells' is not a distraction,\" Mike insisted, \"If anything, it's fair warning.\"\n\n\"Well, I've got a blue shell! Take that!\"\n\n\"Nooo!\"\n\n*****\n\n\"I didn't know I'd even bought the ingredients for a meal like that,\" Mike commented, turning on the water to start washing the dinner dishes. \"Especially after all the other meals we've had.\"\n\n\"Necessity is the mother of invention,\" Cassie said cheerfully. She was laying on her stomach on the living room floor, reading one of Mike's coffee table books. She had her feet in the air and her arms pressed her breasts together, showing her cleavage. Her skirt hiked up a little when she lay down, showing off just a bit more of her ass. Mike ran his hands directly under some hot water to kill his sudden urge to take her right there, in front of her friends.\n\nNot. Yet, he thought to himself.\n\nAfterwards, the women stayed in the living room, chatting, and Mike suddenly became a mysterious busybee. When they asked, he just said it was a surprise, but the box he was carrying around looked heavier every time they saw it. They heard clinking, but couldn't see what dishes he was putting into the box from the kitchen, or what we pulled out of the refrigerator. And then... was that his office door? The basement door? What was going on?\n\nAnd then they heard him making a racket downstairs, then nothing they could hear. Finally, he popped his head around the corner and said, \"The surprise is ready. Please join me in the basement?\"\n\nTheir curiosity won out, so they didn't even ask. They all just followed.\n\n*****\n\n\"I call it Ultimate Truth Or Dare,\" Mike explained. They were seated now around a square card table Mike has set up in the basement, having folded up the Ping-Pong table to make room. The box Mike had filled was next to his chair, still closed.\n\n\"While I explain,\" Mike went on, \"I need a volunteer to pour drinks.\"\n\nVeronica's hand shot up. Mike reached into the box, and retrieved the first item, the one he had retrieved from the fridge.\n\n\"This is a two hundred milliliter bottle of fifty-something-year-old Eiswein. It's German for ice wine, and among the finest dessert wines you can buy. The grapes are picked while ripe and frozen, hard to make. Anyway, Veronica, you need to pour into these shot glasses up to the half-ounce mark. There should be thirteen half-shots, with a little extra. Pour that into the thirteenth glass.\" He handed her the glasses, and she opened the bottle to start pouring.\n\n\"When did you start drinking?\" Jenny asked.\n\n\"Hang out with my lawyer long enough, you get a taste for it in self-defense. Anyway, speaking of business connections... what we need between us, as friends and as business partners, is trust, and the honesty to deserve it. To that end, I think Truth Or Dare is in order. No one has to play, though.\"\n\nNo one volunteered to leave.\n\n\"Okay, then. What I've done is add some other stuff to the game. Every round, we'll add a new rule, which I will describe. I'll also go first each round, to demonstrate, in case it's unclear.\"\n\nWith that, he reached into the box, and started pulling out paper, a pen, funny-looking dice, a digital timer, and a set of index cards, which he unclipped.\n\n\"I'm starting to get nervous about what these new rules are,\" Cassie said.\n\n\"You can leave the game at any time and no one can dare you to stay,\" said Mike.\n\n\"Besides,\" said Jenny, \"It's three against one. If one person goes too far, the others can gang up and make them regret it.\"\n\n\"Hopefully, we won't have to do that,\" said Mike. \"Thank you.\" This last part was to Veronica, who had handed him the bottle back. He put it back into the box.\n\n\"Everyone take three shots,\" he instructed, \"And by 'take' I mean 'put in front of you.' We're not drinking them yet.\"\n\n\"How much alcohol is in these?\" asked Veronica, who had forgotten to check the label.\n\n\"About halfway between dinner wine and tequila. A little more. Call it forty percent.\"\n\n\"Forty percent!\" exclaimed Jenny, \"My liver just cringed.\"\n\n\"That's why it's only three half-shots apiece. Plus, we just ate. Full stomachs. Shall we get started? Okay. The first round is straight-up Truth Or Dare. I'm first, so: Jenny. Truth or Dare?\"\n\n\"Truth.\"\n\n\"How many men have seen you naked, ever?\"\n\nJenny sat back, and thought for a while. \"To the best of my knowledge, it's at least a dozen. Maybe more.\" Cassie and Veronica were bug-eyed. The number was a lot higher than they expected. Jenny laughed at their reaction. \"He said, 'ever,' right? I'm including my infancy. There were at least five men in the room when I was born, right there.\"\n\nMike chuckled. \"Well played, Jenny, well played.\"\n\nCassie asked Mike, \"Truth or Dare?\"\n\n\"Truth.\"\n\n\"Who are you physically attracted to the most in this room?\"\n\n\"Going off of Jenny's technicality precedent, I'd have to say myself.\" All three women groaned as Mike smiled. \"Without gravity's physical attraction, I'd disintegrate. You meant 'sexual attraction,' I think.\"\n\nCassie responded by sticking her tongue out at Mike.\n\nIt was Jenny's turn. \"Mike, Truth or dare?\"\n\n\"Truth.\"\n\n\"Who of the female gender are you most sexually attracted to, of the people in this room?\" she asked, then added, \"Smart ass.\"\n\n\"That's like asking me to decide between my favorite time of day, my favorite movie, and my favorite ice cream flavor.\" Jenny just folded her arms. \"Okay, fine. Cassie, but only because she's dressed to advertise today. Your question only concerned the present tense. Usually, it's an even split.\"\n\n\"Diplomatically said,\" complimented Veronica, \"Well done. Cassie: Truth or Dare?\"\n\n\"Truth.\"\n\n\"How did it make you feel when Mike picked you?\"\n\nCassie blushed and looked down, suddenly very self-conscious.\n\n\"I felt suddenly very, very turned on,\" she said softly, \"And sexy.\"\n\n\"And you should,\" Veronica let slip, \"Mike, your turn.\"\n\n\"New round,\" he said. \"See? A whole round of Truth. Interesting, but not as much fun as we could be having. This round, we add Spin the Bottle.\"\n\nMike placed the Eiswein bottle on its side in the center of the table, then read the top index card of the stack:\n\n\"From this point forward, spin the bottle to see who you are going to ask Truth or Dare. You also spin for the objects of Dares, as appropriate. If the spin result is impossible, respin.\"\n\n\"I didn't get all of that,\" said Jenny.\n\n\"Let's say I want to Dare someone to, let's see, kiss someone else on the back of the neck. I spin to see who gets kissed. If it's the same person, they can't well kiss the back of their own neck, so we respin.\"\n\n\"Got it.\"\n\nMike spun, and it came up to Cassie. She picked Truth again.\n\n\"Have you at any time in your life fantasized about each other person in the room?\"\n\nCassie's eyes widened at Mike's boldness, but her determination began to come back. \"Yes.\"\n\nNow it was her turn to spin. It came up to Jenny, who surprised everyone with the first Dare of the game.\n\n\"I dare you to show Mike your tattoo.\"\n\nMike objected. \"Wait! You have to spin to see who gets shown the tattoo.\"\n\n\"That's no fair,\" Cassie said, \"You're the only one who hasn't seen it.\"\n\n\"Rules of the game.\"\n\n\"Hmph.\" But she spun anyway. The bottle rested on Veronica. Jenny got up and motioned for Veronica to scoot back, then lifted up the back of her shirt until it revealed the ink. Jenny sat back down, and now it was her turn.\n\n\"Cassie,\" she said after the spin, \"Truth or Dare?\"\n\n\"Truth.\"\n\n\"When was the last time you fantasized about each of us?\"\n\nCassie blushed furiously. \"You, a couple of years ago. Veronica, a few months ago. Mike, this afternoon.\"\n\n\"Yeah, girl!\" Veronica whooped, offering her a high-five. \"Everybody gets curious, don't be shy. My turn.\" She spun and it came up on Mike, who chose Truth.\n\n\"I was watching you when Cassie dared Jenny just now. Did you or did you not already know what Jenny's tattoo looked like?\"\n\nMike sighed. \"Playboy Bunny, back of her left shoulder.\" Veronica put her fist up in triumph. Cassie's mouth dropped open. Jenny smiled a tad sheepishly at Mike, who looked back at her with a shrug.\n\n\"New rule,\" he announced again. \"This is what we call a 'd-twenty,' D for die, twenty for the number of sides. Every time you're asked Truth or Dare, you roll this die. If the result is a one, you must pick a Dare. Oh, and the die goes one size smaller every round until we reach the smallest size.\"\n\nMike spun the bottle, and it pointed at Jenny. She stared at her Dare Die result.\n\n\"Oh my God!\" she exclaimed, picking it up and looking at the other nineteen sides. \"I got a one!\"\n\n\"It happens. Okay, Jenny, I dare you to switch t-shirts with...\" He spun the bottle. \"Ha! Me!\"\n\nJenny took off her shirt, revealing her white bra against her skin tone. \"What are you waiting for?\" she asked Mike, who hadn't moved.\n\n\"The dare is for you to do the switching. I'll lift my arms to help, but the rest is all you.\"\n\nJenny came over and peeled off Mike's polo shirt, and then slid hers down his arms. Along the way, Mike could feel her breasts on his back for a second, long enough to tell how hard her nipples were. She sat back down, not bothering to button up the collar of Mike's shirt. He could catch her scent from the fabric, and judging by the look on her face, she was in a similar spot.\n\nCassie spun. \"Myself. Do I dare myself, or what?\"\n\n\"Just respin,\" said Mike, \"For now.\" That got everyone's attention, but Cassie respun.\n\n\"Veronica, Truth or Dare?\"\n\nVeronica rolled, and said, \"Truth.\"\n\n\"When was the last time you fantasized about each of us?\"\n\n\"What makes you think I have?\"\n\n\"You said, 'Everybody gets curious.' And if you haven't, you could say 'never.' Well?\"\n\n\"This morning.\"\n\n\"For who?\"\n\n\"Everybody.\"\n\nCassie, Jenny, and Mike all burst out laughing. Veronica had said it so despondently, it was hilarious. Eventually, Veronica cracked a smile and joined in.\n\nJenny spun, and then had to respin to ask Cassie. She rolled, then picked Dare.\n\n\"I dare you,\" she said, \"to kiss Veronica for a full minute, lips to lips. Oh, damn, I have to spin for that kiss, don't I?\" She spun, and it stopped at first Cassie, but then respun to...\n\n\"ME?\" Jenny said.\n\n\"Hazard of the spin,\" Mike said, \"Certainly makes the game more interesting.\"\n\nCassie leaned over and met Jenny halfway.\n\n\"And... go.\" Mike had set the timer, and they kissed when they heard the beep.\n\nAt first, it was just a smooch, like Europeans may do to one another's cheeks. But before long, Cassie started gently caressing Jenny's lips with her own, which Jenny ultimately responded to. Cassie's tongue flicked gently out, causing them both to softly gasp. Mike wanted to see how Veronica was reacting, but would rather have burned the forest to the ground than looked away. He was rigid under the table. Jenny slipped her tongue out, and had just begun to explore Cassie's lips when the timer beeped.\n\nEveryone jumped, and snapped out of it, breathing heavily. Veronica let go of the table and stretched her fingers.\n\n\"Your turn, Veronica,\" Mike managed. After the spin and the roll, Cassie selected Truth.\n\n\"How was it?\" Veronica asked simply.\n\n\"Good,\" Cassie replied, \"I mean, I'm not turned lesbian by it, but it was still... very good. I guess being with a girl isn't a turn-on or turn-off, for me. But the kiss itself was nice.\" She stopped talking when she realized she was babbling.\n\n\"Thanks,\" Jenny said softly.\n\n\"New rule,\" Mike announced once again. \"This one's simple. Before your turn, you drink a halfshot. That's three shots each over three rounds. The thirteenth one is a third more in the glass. That's the Big Shot, and whoever is the last person clothed has to drink it.\" He drank, spun the bottle, and Cassie rolled a six on the d12, since the d20 round was done. She picked Truth.\n\n\"Who were you hoping you would kiss for that minute?\" Mike asked, \"No offense to Jenny if it's not her, of course.\"\n\n\"Veronica. Apparently, we've both fantasized about each other so... I'm curious.\"\n\n\"And you ruined it!\" Jenny said.\n\n\"No, your spin did. The rules are the rules,\" Mike replied.\n\n\"We can break the rules. They're our rules,\" Jenny countered.\n\nMike's eyes sparked as he said, \"I was hoping you'd come to that conclusion.\"\n\nSilence fell over the table.\n\n\"Oh, you sneaky bastard,\" Jenny said.\n\n\"High praise, coming from you.\"\n\n\"I'll get you for this.\"\n\n\"Only if the spins go your way. Cassie, your turn.\"\n\nCassie drank slowly, apparently liking the sweetness of the icewine. She smacked her lips as the bottle came to rest on Veronica, who picked Dare without rolling.\n\n\"You missed out on a kiss,\" Cassie said, \"Spin to see who you kiss on the lips for one minute.\"\n\n\"Not myself, I assume,\" Veronica said, and respun. \"Cassie!\"\n\nThe two stood up and leaned over the table. Mike started the timer again, and watched. Veronica wasted none of it, and before long the two were Frenching across the card table. Mike was hard again, and knew this one minute would keep him warm for months. Jenny, however, was watching him, not the kiss. By the time the minute was up, Cassie and Veronica were moaning softly around one another's tongues.\n\n\"That is pretty good wine,\" Veronica said. Cassie licked her lips.\n\nJenny drank, spun, and got Mike, who rolled a five and picked Truth.\n\n\"When was the last fantasy you had about all three of us at once?\" she asked.\n\n\"I can't think of the word for time increments that small,\" Mike said, \"That answer your question?\"\n\nVeronica drank, then ended up asking Cassie, \"Who kisses best?\"\n\n\"Mike,\" she replied.\n\n\"I meant Jenny or me, but okay.\"\n\n\"You were both good, but neither of you knows how to kiss a girl. He does. He really does.\"\n\n\"Thanks. New round, new rule,\" Mike said. \"From now on, all clothing that is removed must remain off until the end of the game. Obvious exceptions are glasses and piercings and such.\"\n\n\"Holy crap, I just realized we're all still dressed,\" said Veronica, \"I never had this much fun with my clothing on before.\" The group laughed.\n\nMike drank, and spun back to himself, and then to Jenny, who picked Dare without rolling.\n\n\"I dare you,\" said Mike, \"to remove one article of clothing of their choice from...\" He spun the bottle. \"Veronica!\"\n\nVeronica held out her arm. \"The watch.\" Cassie and Mike booed comically while Jenny removed it and tossed to a corner of the room.\n\nCassie drank her second halfshot, spun back to herself, and then got Jenny again, who rolled a 4 on the d10 and chose Truth.\n\n\"How many times have you had sex with Mike?\"\n\n\"WHAT?\" Jenny exclaimed.\n\n\"That's my question.\"\n\nJenny glared at Cassie, but appeared to forgive her before saying, \"Once... You'll pay for that.\"\n\n\"Don't worry,\" said Mike, \"It doesn't take up a whole lot of your time.\"\n\n\"We'll see,\" said Jenny, drinking her next glass and spinning. It landed on Veronica, who picked Dare.\n\n\"Remove the pants of...\" Spin. \"Mike! Haha!\"\n\nMike stood up from his chair. Veronica came over and eagerly unbuttoned and unzipped his fly. Keeping her face inches from his crotch, she slowly teased the denim down around his half-erection, which was becoming a larger fraction by the second. Once the pants were around his ankles, he stepped out of them, and picked them up. Mike started removing his belt.\n\n\"What are you doing?\" asked Jenny.\n\n\"You said pants, not anything else.\"\n\n\"Ah, but the rules only state that all clothing removed stays off. We had to remove the belt to get to the jeans, but the rule applies.\"\n\n\"True.\" He threw his jeans and belt over with Veronica's watch.\n\nVeronica drank, and spun the bottle. Mike asked for Truth after his roll.\n\n\"How many times have you had sex with Cassie?\"\n\n\"Hey!\" Cassie objected.\n\n\"Fair's fair, hon,\" Veronica said. \"So how about it, Mike?\"\n\n\"Once. Guess what? New round, new rule. From now on, the next Dare with a time limit is set at one minute, and it goes up by one minute for every timed Dare afterwards. I'll keep track with pen and paper.\" He drank his last shot, spun, got himself, then respun and got Cassie. Cassie rolled a seven on her d8 and picked Dare.\n\n\"I dare you to do a striptease for us, for one minute. And it doesn't count as a striptease unless you remove at least one article of clothing.\"\n\nCassie went over to an open part of the room while Mike set the timer. Jenny went over to the stereo system and put on a record. After a couple of tries, she found the spot she was looking for, and gave Mike the thumbs up to start the timer.\n\nPink Floyd's \"The Great Gig In The Sky\" wailed in the basement again, and the four of them started laughing. Cassie still managed some pretty impressive dance moves, though, and with deft foot moves, slid out of both of her socks. When the minute was up, she held them up for all to see and tossed them into the clothing pile. It was now her turn.\n\nAfter the drink, the spin, the respin, the roll, and the question, Cassie got to dare Jenny.\n\n\"I dare you,\" she said, \"to masturbate in front of us, for what is now two minutes.\"\n\nJenny sighed in resignation. In for a penny, in for a pound. She slid a hand into her pants and grazed her wet clit. She stiffened at the touch, which is when Mike started the timer. She worked her finger around slowly, not wanting to do too much too soon. She was wet enough and turned on enough she might be in danger of climaxing.\n\nMike drank in the sight. Jenny sat across from him, eyes shut in pleasure. He was rock-hard again; he lost count of how many times tonight this made.",
        "Jenny was relieved when the timer beeped. If it had gone on any longer, she would have broken down and fingered herself to orgasm, to Hell with the game. As it was, she was buzzing with excitement, and now it was her turn.\n\nJenny spun and got Cassie, who picked a Dare instead of rolling.\n\n\"I dare you to remove the t-shirt worn by...\" Spin. \"Me. Oh, well.\"\n\nCassie reached over and pulled Mike's shirt off Jenny, who now sat in her bra, her nipples visible through the thin fabric. Mike got a good look and did not care who knew it.\n\nVeronica drank the last half-shot, then spun and got Jenny. Jenny chose a Dare again.\n\n\"I dare you to take off an article of clothing, of your choice, from...\" Spin. \"Drat. Yourself.\"\n\nJenny stood up and tossed a single fuzzy pink slipper onto the clothing pile. Everyone else booed her, as before.\n\n\"New round,\" Mike said.\n\n\"New rule,\" they all joined in.\n\n\"Okay, so there's only the Big Shot left, for the last person naked. The Dare Die is down to a d6, or standard six-sided cube-y game die. Wow, that ice wine is good. Makes me glad I acquired a taste for alcohol. Anyway, what was I saying? Right. The new rule.\"\n\nHe smiled.\n\n\"We add Seven Minutes In Heaven. From now on,\" he started reading from the next index card, \"any time you spin to see who you're asking Truth or Dare, and you spin to yourself, that's seven minutes, adding three for each additional spin to yourself. After that, the next person it points to, joins you in seven, or ten or thirteen or whatever, minutes in heaven.\"\n\nThe ladies tried not to show how excited this idea made them, but the booze was making that difficult. Nobody was drunk, just noticeably tipsy.\n\n\"The two people will go to my bedroom on the third floor. The timer will be started as soon as the upper door shuts. The third person will stand at the bottom door, and call up when time's up. The fourth person can hang out at the bottom of the stairs on the first floor to keep the third person company. If the time is exceeded, by more than a minute, giving the first two time to collect themselves, the third person comes up to help them back into the game downstairs.\"\n\n\"Sounds like fun,\" Veronica said, \"Let's go already.\"\n\n\"Oh, and this doesn't count towards the Timed Dares, but is the whole turn for the person.\"\n\nMike spun the bottle, and got Veronica, who chose a Dare.\n\n\"I dare you to remove one article of clothing of their choosing, using only one hand, from...\" Spin. \"Jenny.\"\n\n\"At this rate, I'll be naked first, not last,\" she retorted, \"Take the other slipper.\"\n\nAs the fuzzy pink footwear sailed into the pile, Cassie spun with a thoughtful look on her face. \"Veronica.\"\n\n\"Dare.\"\n\n\"I dare you to... let someone take off your t-shirt.\"\n\n\"Clever girl!\" Jenny cried, \"Up top!\" They high-fived. With a smile, Cassie spun. Mike got the honors. When he lifted the shirt off, he reveled in the sight of Veronica's double-D breasts, barely concealed by her choice of bra. No, wait, that was a swimsuit top.\n\nJenny spun, and it stopped at Mike, who chose Truth.\n\n\"Roll, then.\"\n\n\"One. Crap.\"\n\n\"I dare you, Mike, to use only your mouth to remove an article of clothing of your choice from...\" Spin. \"Cassie!\"\n\nMike looked over at Cassie and gave her a light smile. Then he dropped to underneath the table.\n\n\"Don't you dare look!\" Cassie said, wide-eyed. Her hands were flat on the table, and she looked nervous suddenly.\n\n\"You know you'll have to help him,\" said Veronica. \"Otherwise they'll rip.\"\n\n\"Iknowthatpleaseshutup,\" Cassie replied. She shifted in her seat every so often, using her hip control to make sure her panties didn't get damaged. Cassie took a sudden and sharp intake of breath, stifling a cry.\n\n\"Is he using his mouth?\" Jenny asked knowingly.\n\n\"Y-yes...\"\n\nHer intense arousal seemed to pass as Mike got the panties down her legs. The whole table could tell how horny she was by how strong her scent was in the air now. Mike came up and tossed the pink panties onto the clothing pile.\n\n\"Sorry that took so long,\" he said. \"I had to do some maneuvering to get a grip on the panties. It's Veronica's turn, isn't it?\"\n\nVeronica spun.\n\nIt pointed at herself.\n\nSilence fell, except for the sound of the bottle spinning on the table for the second time.\n\n\"Cassie again!\"\n\nVeronica beamed, and Cassie looked nervous again. Sensing her hesitation, Veronica took her by the hand and started leading her upstairs. Mike and Jenny followed.\n\nOnce into the open hallway on the first floor, Mike said, \"Remember, all clothes that come off, stay off. Unless you want Jenny and I to know exactly how far you went, keep everything on. Besides, it's more fun that way.\" He started up the stairs after them when Jenny cut him off.\n\n\"Uh-uh. You stay down here, lover boy. Gimme the timer.\" Mike didn't argue. He was having the time of his life anyway.\n\n*****\n\nOnce in Mike's bedroom, Veronica shut the door and immediately went in for another kiss from Cassie.\n\n\"So... all we do... is kiss?\" Cassie managed when Veronica let up a little.\n\n\"Whatever,\" Veronica said, \"Whatever we want. That's the point.\"\n\n\"I see,\" Cassie said as Veronica spent some time on her neck.\n\n\"Can I...\" Veronica started.\n\n\"It's okay to ask,\" Cassie said.\n\n\"Can I.. explore you, a little? With my hands?\"\n\n\"Uhh... sure...\"\n\nVeronica groaned, and started lightly running her hands up and down Cassie's body. When she reached Cassie's ass, she slid her hands under the skirt, and squeezed the firm muscles.\n\n\"Oh, god!\" Veronica gasped in a stage whisper. \"You are so hot!\"\n\nOn instinct, she started grinding Cassie, their inside legs against one another's wet pussies. Cassie adjusted her hips for mutually better angles, and they kissed against the door, grinding one another with Veronica's hands on Cassie's toned ass.\n\n\"Time!\" they heard Jenny call from downstairs.\n\n\"Damn it,\" Veronica muttered, forcing herself away from Cassie. \"You okay?\"\n\n\"Yeah, just... wow. That was intense.\"\n\n\"Sorry. I... didn't think I would be like that.\"\n\n\"I'll, uh, I'll take it as a compliment.\"\n\n\"Thirty seconds!\" Jenny called.\n\nThey straightened out their hair and clothing, and went back downstairs.\n\n*****\n\nSeated once again at the card table, Mike announced the new round, and read from the next index card:\n\n\"From this point forward, every person must remove one article of their choice before taking their turn. This is in addition to any taken off during the course of the game.\"\n\nMike removed his watch and flung it onto the clothing pile. He spun, and when it landed on himself, all three women got very quiet. The re-spin stopped at Jenny.\n\n*****\n\n\"Seven minutes! You know what to do!\" called Veronica as they shut the bedroom door.\n\n\"I've wanted to do this for an hour,\" said Jenny, bringing Mike is for a kiss. Without another word, she dragged him back to his own bed, where they spent the whole time liplocked and hiplocked, with the occasional roll across the California-king-sized mattress, which is about a foot longer than a regular king-size.\n\n\"Whatever else happens tonight,\" she whispered between kisses, \"I want it.\"\n\n\"Want what?\" Mike whispered back, taking the opportunity to get a close-up view of Jenny's soft, smooth cleavage.\n\n\"Your load. In me. Tonight. I want it.\"\n\n\"The lady with dibs gets it.\"\n\n\"Be serious. If you're gonna, promise me.\"\n\n\"If it's in my willpower to control, you got it. Promise.\"\n\n\"Good enough, now bring that tongue back here.\" Their tongues and bodies continued to wrestle until time was up. They made it to the lower door with six seconds to spare. Jenny's hair, however, was still a telltale mess.\n\n*****\n\nBack downstairs, it was Cassie's turn. She took her shirt off, revealing her pert breasts in their pink brassiere. Mike, still hard from seven minutes with Jenny, felt his mouth watering at the sight. On Cassie, the look was innocent and naughty at the same time. It made him very badly want to get her to lean to the naughty side of life. Seeing his reaction, Cassie gave him one of her special smiles, the ones that let him know exactly where her mind was.\n\nShe spun the bottle, and it landed on Jenny, who was still trying to fix her hair as she said \"Dare.\"\n\n\"I dare you,\" Cassie said, spinning the bottle again, \"For three minutes, to French kiss the person, while one of you sits on the other's lap. Their choice.\"\n\nShe looked at the bottle. \"You can't sit on your own lap. Respin.\" Then, \"Veronica!\"\n\n\"On my lap,\" Veronica instructed.\n\nThey would have been tentative earlier in the evening, but by now the hormones and the hooch had done their jobs to keep things rolling. When Mike saw Jenny and Veronica both open their mouths in the kiss, he let out an audible groan. Deciding to give him a show, Veronica reached around and groped Jenny's ass through her jeans. Mike stared so hard his vision blurred for a second. He was very conflicted about the timer when it beeped.\n\nBefore sitting back down, Jenny removed her belt and flung it onto the pile. She spun the bottle. \"Mike, Truth or Dare?\"\n\n\"Truth. I don't think I could take a Dare right now.\"\n\n\"Roll.\"\n\nThe tetrahedron clattered on the table.\n\n\"One! Dammit!\" The ladies roared with laughter.\n\n\"Okay, I'll go easy on you. Just this once. Remove an article of clothing of your choice from...\" Spin. \"Cassie.\"\n\n\"Me again?\" Cassie complained. \"All right.\"\n\nWith a start, Mike realized she only had two more items on. He decided to be merciful and take her bra off. Crouching behind her, he planted a small kiss on her back as he unhooked the clasp. She shivered -- the others thought she was just cold.\n\nCassie tossed the bra onto the pile, which was fairly large now, and folded her arms in front of her now-bare chest, but not before Mike got a glimpse. His hard-on was threatening to be painful now.\n\n\"You call this easy?\" Mike asked Jenny.\n\n\"I'd say it's rather hard,\" she retorted with a grin.\n\n\"Ha ha. Veronica, your turn.\"\n\nVeronica held up her clothing item, a single sock, to the booing of the others. Her spin landed on Cassie, who wanted a Truth question, and since she rolled a four, she got it.\n\n\"Cassie, what's the first position you and Mike tried?\" asked Veronica.\n\n\"Mmmm... sex itself or just in bed at all?\"\n\n\"Sex itself.\"\n\n\"Cowgirl in his office chair.\"\n\nMike put his head in his hands. Why was he suddenly embarrassed?\n\n\"Mike, what are you doing?\" Veronica asked, \"It's your turn.\"\n\n\"Right,\" he said, looking up, \"New round. From this point forward, you must answer a Truth question unless you roll a one or spend time in Heaven.\"\n\nNext, Mike stood up and presented both of his socks.\n\n\"I hate feeling unbalanced,\" he explained as he tossed them aside.\n\nHe spun, and got himself.\n\n\"Again?\" Jenny threw up her hands.\n\nMike spun again,\n\n\"No way! That's ten minutes, now!\" Veronica said, excited.\n\nThe third spin stopped at Cassie.\n\n*****\n\nWhen Mike's bedroom door was shut, Cassie brought his head down for a kiss, then said, \"I need this. I won't let you come, but just give me this.\"\n\nAs she knelt down as shifted his boxers to retrieve his rigid cock, Mike answered, \"Five minutes, and then it's my turn.\" As his luck would have it, the digital clock beside his bed had just turned minutes. Easy to keep track of.\n\nThe next five minutes of Mike's life were torturously sweet. Cassie kept her word, never letting him get too close to climax, but god, how he wished she would. He ran his hands through her thick brown hair as she worked her mouth up and down his shaft.\n\nWhen the five-minute mark came, Mike reluctantly pulled Cassie away, and then picked her up, carrying her to his bed, where he flipped up her skirt and dove in.\n\nMike was very glad she kept herself shaved. Hair down below may be a sign of sexual maturity, but on a practical level, frankly, sometimes it tickled distractingly. For the same reason, he kept himself as trim as he could manage, even during the long months he spent in this house. It's good to keep up the habit. Cassie was rediscovering this firsthand.\n\nWhen Jenny called \"Time,\" Cassie was gasping, and nearly burst into tears when Mike stopped, she was so close to an orgasm. Before Mike could open the door to go back downstairs, Cassie roped him in for one more kiss, and then said, \"You owe me one.\"\n\n*****\n\nBack downstairs, it was Cassie's turn. Having only one item left on her body, she slipped off her skirt and tossed it onto the pile. Mike openly grinned, and Veronica gave a wolf whistle.\n\nSitting back down, Cassie spun the bottle. It landed on Mike, so he rolled. It was a three.\n\n\"Truth.\"\n\n\"Okay, Mike. How many orgasms of yours are the three of us directly responsible for? Masturbating to your fantasies doesn't count.\"\n\n\"Oh, geez. Hang on.\" Mike sat back and counted on his fingers. \"Eight, and damn close to nine, especially now that you're naked.\"\n\nThe women all looked at one another, trying to do the math to figure out who had caused how many. Mike suppressed a smile.\n\nOn Jenny's turn, she took off her watch, to another chorus of booing. Her bottle spin pointed at Cassie, who rolled a one.\n\n\"I dare you,\" Jenny said, \"to pleasure someone by hand for four minutes.\" She spun the bottle. \"Lucky you. It's yourself.\"\n\nThe booze must have been stronger than Mike thought, because he half-expected Cassie to go around the corner, on the technicality that Jenny failed to specify where she had to complete her dare, but Cassie just pushed her chair back and closed her eyes. Mike absentmindedly started the timer.\n\nCassie first just gently stroked her pussy lips, but soon seemed to forget she was being watched. With her other hand, she massaged her breasts and pinched her nipples. When she first dipped a finger insider herself, she bucked, which caused Veronica and Mike, and even Jenny, to jerk in their seats in response. Playing a hunch, Mike looked at the timer, and told her softly, \"One minute left.\"\n\nThis put Cassie into overdrive. Both hands were at her pussy now, the first still pumping her fingers furiously in and out, the other rubbing her clit, while her hips gyrated in the cloth of the chair, grinding against both hands. With ten seconds left, she cried out and her whole body shook. Cassie jammed her fingers into her pussy, bucking with each thrust, each wave of her orgasm. The alarm beeped for thirty solid seconds before Mike had the presence of mind to turn it off. She opened her eyes, then pulled her chair back up to the table like nothing had happened.\n\n\"Your turn,\" she chirped to Veronica.\n\nVeronica wanted nothing more than to be naked at that moment, but the damn rules were in the way. Oh, well. She held up her remaining sock, tossed it aside, then spun the bottle to Cassie, who rolled a two. Truth.\n\n\"I didn't know you had that in you,\" Veronica confessed, \"How long have I been wrong?\"\n\n\"It's been a gradual thing,\" Cassie said, still catching her breath. \"But years, at least.\"\n\n\"Oh. Sorry.\"\n\n\"It's okay.\"\n\n\"Mike? New round, new rules.\"\n\n\"Actually,\" Mike said sheepishly, \"There aren't any new rules. the game's complicated enough as it is. We'll just keep playing the same way, the rest of the game.\"\n\nWith that he finally took off Jenny's t-shirt and put it on the pile. While he stood up to do so, all three ladies got a front-row seat to Mike's erection. He spun the bottle.\n\n\"Three rounds in a row?!\" Veronica exclaimed, \"How do you do it?\"\n\n\"It's random,\" Mike said, \"That's how random works. I'll explain some other time.\" He spun again. \"Jenny. Seven minutes, you and me again.\"\n\n*****\n\n\"I want that cock, now,\" Jenny said the second the door was closed.\n\n\"Keep your jeans on,\" Mike said, \"Here, kneel in front of me.\"\n\nWhen Jenny had done so, he pulled down his boxers enough for Jenny to suck on him a bit. Once she had gotten him nice and wet, he pulled away and repositioned, giving her a titfuck.\n\nJenny kept her hands on either side of her breasts, holding them in and squeezing Mike, to his pleasure. The whole seven minutes, they kept their eyes locked onto one another's. A speck of dust floating between them would have spontaneously caught fire.\n\nAround the fourth minute, Mike had to stop. He was getting too close to climax, and he didn't want to just yet. So he pulled his boxers back up and settled for snogging a beautiful, sexy, horny half-Latina wearing nothing but a bra and jeans.\n\n\"Time!\" came the call, several eternities later.\n\n*****\n\n\"I've been thinking,\" Cassie said, \"Can we hear that mandatory clothing removal rule again?\"\n\nMike found the card and read, \"From this point forward, every person must remove one article of their choice before taking their turn. This is in addition to any taken off during the course of the game.\"\n\n\"Aha. That's what I thought. We assumed it meant our own clothing, but that's not what the rule says. As the first person naked, I get to choose whose clothing is next.\"\n\n\"Let's keep it to our own clothing,\" said Mike, \"If we can. But if you're out, you can pick.\"\n\n\"Okay. Veronica, off with the shorts.\" Veronica obliged, and tossed them at Cassie. \"Hmm, 'Perfect' indeed,\" Cassie joked, then put them on the clothing pile. She spun the bottle, and it landed on Jenny, who rolled a one for a dare.\n\n\"You have to provide oral pleasure for someone, for...\"\n\n\"Five minutes,\" Mike supplied.\n\n\"Five minutes, without letting them cum,\" Cassie continued, then spun. \"Mike!\"\n\nJenny got under the table with a smile, then Mike felt his boxers be pulled down once again. Jenny's earlier frenzy was gone, and she took her time. Mike lay his head down in his arms on the table, focusing on anything but Jenny sucking his cock. His tax returns, a sick labradoodle, Stan doing a hula, anything. It only sort of worked, but it was enough. When Veronica called time, he was breathing heavily, but no closer to climax.\n\nAnd now it was Jenny's turn, and she opted to remove her jeans. That sight did bring Mike just a bit closer to climax, but he calmed himself down again. Jenny spun, and it landed on Veronica, who rolled another Dare.\n\n\"I would have said dare anyway,\" she shrugged.\n\n\"Okay, Veronica, I dare you to do absolutely nothing for six minutes while someone does whatever they want to you. You move, they stop, and you have to strip naked as penalty.\" Jenny spun the bottle. \"Cassie!\"\n\nWithout hesitation, Cassie came around the table and sat in Veronica's lap, one leg to either side. As he started the timer, Mike remembered the position from their tryst in the office chair. Cassie then proceeded to kiss Veronica all over her bare skin, while rocking slowly back and forth on her lap. Veronica had been smart, though, and had gripped her seat tightly the moment she saw Cassie get up. She was shaking and moaning, but she held still.\n\nCassie slid gently off of Veronica's lap, careful to avoid the table edges, and then buried her face in Veronica's cleavage, eliciting a loud moan. Kissing and licking, Cassie explored Veronica's breasts, even sliding her tongue just inside the fabric every so often.\n\n\"One minute left,\" Mike croaked. Even Jenny was biting her lip and shifting in her seat. Cassie slid down even further, and slowly planted kisses down Veronica's abs, lower and lower, and then shifted to kissing the inside of Veronica's thighs. Veronica herself was in tears at the exquisite torture.\n\nThe timer beeped, and Veronica grasped Cassie by the head and kissed her, hard. It was only for a few seconds, but it left Cassie reeling as she took her seat again.\n\nFor her turn, Veronica removed her troublesome bikini bottoms, then spun the bottle. It landed on Cassie, who rolled for a Truth question.\n\n\"The dare was whatever you wanted,\" Veronica said, \"How long have you wanted to do that?\"",
        "\"Exactly that?\" Cassie replied, \"It was just going with the flow once the dare was called.\"\n\nVeronica seemed a little disappointed by this, but said nothing.\n\nMike took off his boxers, to the cheers of the ladies. They looked sad when he sat back down.\n\n\"Guess the Big Shot ain't for me,\" he said. After the spin and the roll, he asked Veronica, \"Truth question: How many women have you ever been attracted to, more than just out of curiosity?\"\n\nVeronica looked directly at Cassie as she replied simply, \"One.\" Cassie appeared to have gotten the message.\n\nOn Cassie's turn, a gleam hit her eye, and she said, \"Veronica, lose the top.\"\n\nAs Veronica untied it, Mike roared, \"The Big Shot! Jenny, bottoms up!\"\n\nJenny looked around and realized that, with both bra and panties still on, she was the only clothed person left.\n\n\"Sl\u00e1inte,\" she said, the traditional Irish toast, and downed the sweet Eiswein in one gulp.\n\nCassie spun the bottle, and it came up to herself. Then, to...\n\n\"Me again?\" Jenny asked, incredulous. \"Let me see that bottle.\" She snatched it off the table. \"Oh, my god! Do you know how expensive this stuff is?!\"\n\n\"I bought it, so, yeah,\" Mike said.\n\n\"Damn, I wish I'd made it last longer!\"\n\n\"Well, you can share the bit on your lips with Cassie for the next seven minutes.\"\n\n*****\n\n\"What are you doing?\" Veronica asked from the second floor. Mike was in the bathroom on the first floor, running water in the sink.\n\n\"I'm running pure cold water over my hands,\" Mike replied, \"If that doesn't work, I'll grab myself suddenly with them.\"\n\n\"Ooh,\" Veronica said, wincing.\n\n\"Don't worry; it's working. My hands will warm up in a couple of minutes, and I will be able to last much longer now.\"\n\n\"Good to know.\"\n\n*****\n\n\"I wonder what they think we're doing,\" Cassie asked.\n\n\"Who knows? We know we're just kissing.\"\n\n\"You're pretty good at it now.\"\n\n\"Thanks for the lessons.\"\n\n\"Okay, try again, only this time, use slower motions. Like this,\" and Cassie demonstrated.\n\n*****\n\nBack down at the table, it was Jenny's turn, and so she removed her bra, to everyone's delight.\n\nShe spun.\n\n\"Seven minutes,\" counted Veronica.\n\nJenny spun again.\n\n\"TEN minutes.\"\n\nShe spun again.\n\n\"Thirteen minutes!\"\n\nShe spun again.\n\n\"Thirteen minutes... with Mike!\"\n\nVeronica and Cassie congratulated Jenny, who just rolled her eyes like it was no big deal. Mike said nothing, but had a familiar glint in his eye.\n\nCassie sat on the bottom step, while Veronica was at the top, near the lower door to the third floor.\n\n\"I don't think I'll ever forget tonight.\"\n\n\"It's not even over yet,\" said Veronica.\n\n\"Oh, good.\"\n\n*****\n\nNo sooner had Mike's bedroom door shut than Mike had wrapped his arms around Jennifer. They both immediately parted their lips to allow their tongues to swirl and dance. Jenny could feel Mike's prominent erection pressing into her, and responded by pulling herself into him even more tightly. His hands found their way to her waist, then down and around to the curves of her tight ass. He caressed and gently massaged her there, all the while keeping her on her toes with his kiss.\n\nMike held nothing back. The more he felt her respond to him, the more he gave. Her smooth skin in his hands, the chain of sparks between their lips, her succulent breasts crushed against his chest, Mike could feel himself drowning in the pure sensuality. Everything about Jenny only turned him on more.\n\nJenny pulled her head back to catch her breath, only to have it driven out again as Mike changed his focus of attention. Raising one arm to behind Jenny's back, Mike repositioned himself to drop his head to her breasts. In this pose, he had one leg supporting her weight, and his other balanced him with her legs on either side of it. Jenny felt Mike's cock against her panties, and started to grind involuntarily, small movements to take the edge off.\n\nMike continued to kiss as fervently as before, only now he spread the love to Jenny's D-cups. He loved how she responded to touch almost anywhere. When he drew the tip of his tongue up the line of her cleavage, she would throw her head back and groan. When he kissed the flesh of her breasts, she would hold his head more tightly. When he flicked her nipples with his tongue, she would breathe heavily, and when he pulled one using suction, she would gasp and grind harder into him.\n\nBefore long, Jenny could not stand it any longer, and pulled Mike's face back towards hers, a burning heat behind her dark eyes. She kissed him again, madly, passionately, until he thought he would break down and take her right then. As luck would have it, his thumb caught on her panties, breaking just enough of the moment for him to regain his faculties.\n\n\"Hang on,\" he said while they paused for air, \"We forgot something.\"\n\nHe dropped to his knees, and pulled Jenny's panties down as far as they would go. Jenny closed her legs, allowing them to slip off the rest of the way. She was completely nude, like Mike, who was closing in on her now-naked pussy.\n\n\"Oh, no, you don't!\" Jenny said, playfully running away towards the bed, \"I still want that cock in my mouth.\"\n\n\"Later,\" said Mike, chasing her. He caught her just before she got onto the mattress, and held her hips as he knelt again, planting kisses on her ass cheeks before spinning her around.\n\nMike swooped in and began to do for Jenny what he had done for Cassie earlier that evening. Jenny felt like objecting, a little, until Mike began to softly hum. She gasped and held his head between her thighs. Her knees began to shake, and she moaned until he had to stop for breath. For as long as he could, Mike kept his lips clamped over Jenny's pussy, his tongue pirouetting around all of the places he knew she would like. And he kept humming, varying pitch and volume in small ways to complement what his tongue was doing.\n\n\"God, I'm so close...\" Jenny said, but managed to get a grip on herself. She tightened her thighs on Mike's head, forcing him to pull back. He was highly aroused by how strong her legs were.\n\n\"We're almost out of time,\" Jenny said, \"Now switch places.\"\n\nMike obliged, and before he could even compliment her on how she had tasted, Jenny drove all reason from his head. She pounced on his cock. There was no build-up, no easing into it. Jenny went from zero to industrial piston in a flash. Mike was able to get a grip on the footboard of the bed, and on Jenny's shoulder, but then held on for dear life. Jenny braced herself with her arms against the bed, so Mike knew it was all just by mouth, which was incredibly erotic. The sheer surprise put him off enough, otherwise, he'd have blown his load already.\n\nJenny was finally satisfied. Nothing had made her hotter the entire night than experiencing Mike's reaction to her mouth around his hard cock. Whenever it stiffened further, she felt it, and it spurred her on. She heard Mike breathing rapidly, glanced up to see his eyes closed.\n\n\"Hey, save some for us!\"\n\nJenny and Mike parted, whipping their heads around to see Veronica, who had spoken, and Cassie.\n\n\"Your time was up, like five minutes ago,\" Veronica continued, walking slowly towards them. \"We called, and you didn't answer. It's okay. We pretty much figured why. But don't think you're getting him all to yourself tonight.\"\n\nWhile Veronica spoke to Jenny, Mike's eyes found Cassie's. They burned hotter than Mike had ever seen them. Cassie was also a little flush, head to toe, and Mike remembered how hot her skin got during sex.\n\n\"Okay. Your turn,\" said Jenny.\n\n\"Wait, don't I get a say?\" asked Mike, smiling.\n\n\"No,\" all three women said in unison.\n\nBefore Mike knew it, he had been laid flat on the bed. After another short makeout session with Jenny, she knelt over his head, facing the headboard, away from his crotch. Mike took his cue and lifted his head to suck on Jenny's sweet juices again, while she brought her hands up and played with her own breasts, squeezing and pinching them.\n\nVeronica and Cassie laid on either side of Mike, facing in towards his cock. They leaned in and began to kiss one another through it. Base to head, they kept their lips on Mike's erection, using their tongues across it, and feeling the electric jolt whenever they touched one another. Every so often, they would wrap their lips and tongues around the head of Mike's cock, and slowly tease it, swirling their tongues together.\n\nCassie and Veronica were French kissing each other and giving Mike a double blowjob at the same time. As soon as Mike realized what they were doing, the thought exploded in his mind. He deflected the excess sexual energy by rapidly tonguefucking Jenny, which made her throw her head back and gasp sharply. Before she could climax, however, Mike pulled back and said,\n\n\"Cassie won the game, right?\"\n\n\"We're still playing?\" Veronica asked. Cassie giggled.\n\n\"Yeah, I'd say Cassie won,\" Jenny said, \"Although it could be argued that you won.\"\n\n\"So, Cassie,\" Mike asked, a little muffled by Jenny's crotch, \"Truth: What do you want done to you?\"\n\n\"Fuck me, Mike,\" she replied instantly, \"Fuck me now.\"\n\n\"Yeah, girl!\" Veronica cheered.\n\nJenny got up from over Mike and he saw Cassie assume a position. She perched above him, and steadied herself. They were both well-lubricated, as Cassie had been touching herself as she and Veronica worked Mike's cock. Looking straight into Mike's eyes, she pushed her hips down and back, causing everyone to groan. Mike and Cassie groaned in pleasure; Jenny and Veronica groaned in jealousy.\n\nCassie closed her eyes and rocked slowly back and forth. She let her hands roam freely, through her hair, around her breasts, down her slim waist, across her full, round ass. As the others watched, she brought a hand away, then with a smack squeezed her ass again. She wasn't quite spanking herself, just grabbing herself a bit roughly. She continued to caress her own body, eyes closed, her lips closed onto one pinky in her mouth, as she steadily rocked Mike's world.\n\nVeronica decided to get in on the action. She and Jenny had been touching themselves, watching, but now Veronica crawled across the bed. With one hand, she propped herself up, and the other joined Cassie's own in caressing her warm skin. As Cassie bent her head down to look, Veronica bent her head in, then snaked her tongue to Cassie's clit.\n\n\"God, yes!\" Cassie suddenly cried out. She began to shake as she quelled the temptation to quicken her pace. Not only would that make things not last, it would make Veronica stop. Mike was a little disappointed that Veronica was blocking some of his view of Cassie, but that faded any time Veronica happened to graze his rigid cock.\n\nJenny was fingering herself -- she couldn't help it. Watching her friends have sex was unexpectedly arousing. She locked eyes with Cassie, who only held up one hand and gave her the \"Come here\" gesture. It was Cassie's turn, after all, so Jenny obliged. Kneeling on Mike's left, because Veronica was on his right, Jenny faced Cassie, who pulled her into a kiss.\n\nCassie wasn't teaching Jenny how to kiss a girl this time -- she was demonstrating. She even pulled out a few tricks she hadn't had time to teach Jenny yet. Jenny couldn't help but respond to Cassie's incredible technique. Cassie still rocked back and forth on Mike's cock, but now she and Jenny wrapped their arms around one another, and with their breasts smashed together, they continued the kiss with still-mounting enthusiasm.\n\nMike was, needless to say, looking at paradise in his rearview mirror. Every so often, just to keep Cassie guessing, he'd either shift his hips a little, or flex the muscles that made his cock twitch. Either made Cassie react with renewed passion, and he reveled. At first, he'd have preferred reverse cowgirl, to see Cassie's ass, but now he was very glad indeed. For a start, both Jenny and Veronica had their flawless asses towards him now, and he eagerly groped them to occupy his hands. When his eyes weren't shut in pleasure, he was treated to the sight of Jenny and Cassie making out.\n\nDear Penthouse... No, this was too good to share.\n\nCassie was shaking more and more as she became more overwhelmed with the sensations across her whole body. She was trembling so much that if Mike hadn't had his cock deep inside her pussy, he wouldn't have noticed the transition she made into her orgasm.\n\nAt first, Cassie's rocking motions became a little more staccato, then she groaned into Jenny's mouth. Cassie drew her hand down to Veronica, who took the cue and began to suck gently on Cassie's first two fingers. Cassie's other hand reached back to her ass again, her tongue still being sucked on by Jenny. She started shaking even more, until her hand drew Veronica away enough. When she felt Veronica shift her weight, Cassie gave another groan and began riding Mike hard, and fast. Even Jenny was taken aback by Cassie's sudden ferocity.\n\nAs Cassie slammed her pussy down onto Mike again and again, she tightened her grip on her ass. One more time, she drew back, and then roughly grabbed her ass again. She timed it to match one last, deep thrust, and then pulled her head away from Jenny and gasped.\n\nCassie's breath caught in her throat, so she made no sound as she came. Her whole body shook with the force of the orgasm, her face contorted in the intense waves of pleasure. Mike had to breathe carefully to avoid climaxing himself, Cassie's pussy acting so much like a vibrator around his cock. Plus, Cassie was beyond hot when she came. She was incandescent.\n\nFinally, Cassie's lungs forced more air into her body, and she fell onto her hands, catching her breath. Her eyes were wide in surprise at the magnitude of her climax.\n\n\"You want to know the best part?\" she whispered into Mike's ear when she was able, \"I feel a bigger one building. I think I've wanted to let go for a while now.\"\n\n\"Glad I could help,\" Mike whispered back. Aloud, he said, \"Veronica? Truth: What would you like done to you?\"\n\n\"Oh, goodie,\" Veronica replied. She laid down on the bed, face-down, then gestured for Cassie.\n\n\"How do you want me?\" Cassie asked, all shyness banished for the time being.\n\n\"I want that pussy in my mouth,\" Veronica said. Cassie scooted over, and Veronica pulled her in by her hips. Veronica knew she's be sensitive after fucking and cumming so hard, so she made delicate strokes and took her time. Cassie sighed and leaned back, content for now to enjoy Veronica's talents, shutting her eyes and absentmindedly massaging her tits.\n\nAfter she got settled with Cassie, Veronica took the next opportunity to spread her legs a bit, arch her ass into the air, and tell Mike, \"You know what to do.\"\n\n\"Bossy, aren't we?\" he said dryly. He lined up over Veronica, then propped himself up on one arm. He used his free hand to guide himself to Veronica's slick slit. Knowing how she'd like it, Mike thrust in completely right away. He was rewarded by Veronica's squeal of delight. He made slow thrusts as he finished getting himself settled in, using the opportunity to also keep gazing at the gorgeous sights of Cassie and Jenny. Cassie was still off in her oasis of pleasure, and Jenny had gone back to slowly fingerfucking herself, her eyes drinking in the scene.\n\nAs Mike began to pick up the pace with Veronica, he asked her, \"What about Jenny? I think her pussy's feeling lonely.\"\n\n\"Mmmm,\" Veronica pondered, incidentally humming into Cassie's pussy, making her writhe. \"I think I want to see what Cassie's fingers can do.\"\n\nCassie opened her eyes at this, then reached a hand over to Jenny, who repositioned to give her more comfortable access. Jenny caressed her own tits as Cassie began to explore her pussy.\n\nMike continued to pound away at Veronica, feeling her athletic ass against him with each thrust. He slipped one arm under Veronica's torso, allowing him to support himself on one elbow, and that meant he now had a hand free for other things. Mike guided Veronica's blonde locks to one side and began to kiss her on the back of her neck.\n\nTo Veronica's tongue, Cassie was sweet and just a little tangy. It was intoxicating, even more than the Eiswein. It felt wild, touching her friends like this. Veronica could feel every one of Mike's inches as he fucked her, his hips clapping softly against her ass with each thrust. She could feel his lips on her neck, his hand appreciating her curves. And she wanted more.\n\nCassie felt Veronica grow more insistent, but by now she wanted more anyway. When Veronica slipped a finger into Cassie's hot pussy, they both gave a small cry. What's more, Cassie felt Jenny get a little wetter at the same time.\n\n\"Mmm, Cassie,\" Veronica said, \"you are so tight.\"\n\nCassie smiled. She'd known for some time that Veronica liked dirty talking.\n\n\"God, Mike, you feel good,\" Veronica continued, \"Keep fucking me, just like that... Cassie, you like watching him fuck me? Just like he fucked you?\"\n\nShe saw Cassie nod, her eyes half-closed.\n\n\"God, it made me so hot watching up-close as you rode him... bouncing that fine ass of yours up and down on his hard cock.\" She grabbed Cassie's hip with a free hand for emphasis, and began fingerfucking Cassie's pussy. Cassie started writhing in pleasure and pounding her own fingers into Jenny's slit. Jenny clutched the beddings, her hair falling in sweaty tendrils over her face.\n\n\"Mike likes it when he hears me talk about you,\" Veronica said to Cassie. \"That thick brown hair, those dark eyes... Your perfect tits beg me to suck them.\"\n\nCassie caressed her tits with her free hand, wanting to hear more.\n\n\"I can't get enough of you swinging around this beautiful ass, Cassie,\" Veronica rasped. Mike was slamming into her harder now. \"And still I'd rather just keep tasting your sweet... sweet... pussy ohhh God...\"\n\nWith a sudden motion, Veronica pulled Cassie further underneath her, and Mike had to move his arm to make way. Veronica then attacked Cassie's tits, eliciting moans from them both.\n\nMike readjusted so that he was kneeling, and would still be able to fuck Veronica. Cassie's legs were to either side of Veronica, and Mike did not miss the opportunity to follow them down and grab Cassie's ass. It really was a beautiful ass. Jenny crawled over to Mike and started kissing him, her sweat-covered body against Mike's. He took one hand and picked up where Cassie left off in fingerfucking Jenny, who showed her appreciation with her lips.\n\nCassie decided to be just a bit naughtier. So Veronica liked dirty talk and had fantasies about her? All right.\n\n\"That's right, suck those tits,\" Cassie whispered, \"Put that mouth all over me while Mike fucks you.\"\n\nVeronica's eyes snapped open, and she looked at Cassie, who returned her gaze.\n\n\"Now's your chance, hot stuff,\" Cassie continued.\n\nWith another groan, Veronica pulled Cassie down just a little more, enough for her to kiss Cassie's neck, which she did. Cassie arched her back, pushing her chest into Veronica's, driving them both wild. With one hand, Veronica reached down and resumed fingering Cassie, prompting Cassie to wrap her legs around both Veronica and Mike, as much as she could.\n\nMike was at a solid but steady pace now. He was using every trick he knew to help himself last longer. Jenny was out of breath so badly she couldn't even kiss him anymore. She just laid her head on his shoulder and let herself be manipulated.\n\nSoon there was a point where Cassie and Jenny happened to cry out at the same time. That pushed Veronica over the edge. She pulled her lips away from Cassie's neck and began screaming into the beddings. Mike felt her hand rub Cassie's clit furiously, and he responded by doing the same for Jenny, who gasped.\n\nVeronica screamed even louder when the orgasm itself hit. Mike had to pinch his lip between his teeth to keep from coming. She pushed back onto his cock, burying him deep inside her once more. She screamed, and came, and screamed some more, all the while still frigging Cassie's clit, until she, too, climaxed.",
        "When she saw Cassie climax again, while Veronica's was still in full swing, Jenny couldn't help herself and came, moving her hips over Mike's fingers involuntarily.\n\nMike pulled away. He had to; he was too close again, and he wanted to last as long as he could.\n\n\"Jenny's turn,\" he managed.\n\n\"How you doing, Mike?\" Cassie asked.\n\n\"Just fine, thank you,\" Mike grinned.\n\n\"Want a break?\"\n\n\"No, I want to fuck Jenny.\"\n\nEveryone but Jenny got off the bed, to stretch their limbs as much as to give Jenny room to get into position. On her hands and knees, she threw a look over to Mike that said what Veronica had to use words for: \"You know what to do.\"\n\nIndeed, Mike did, and had been looking forward to it. Kneeling behind Jenny, he guided himself into her, and penetrated her with long, slow strokes. By the sounds she made, she'd been looking forward to it for just as long. Mike had to be honest with himself and admit that Jenny's pussy felt the best out of the three. In no hurry, the pair settled into a marathon rhythm.\n\n\"God, that is so hot,\" Veronica said, \"You two should make a video.\"\n\nJenny laughed, which only contrasted the feelings from her pussy.\n\n\"Come here, Cassie. I want to kiss you a little more.\"\n\nCassie would have gone, even if it wasn't Jenny's \"turn.\" She settled in under Jenny, who bent low to take Cassie's mouth with hers.\n\n\"Mmmm,\" Jenny said between kisses, \"You taste like strawberries.\"\n\n\"Shut up, you know that's my lip balm.\"\n\n\"Hey, Veronica?\"\n\n\"Y-yeah?\" Veronica had been masturbating frantically on the side of the bed.\n\n\"Grind Cassie's pussy with yours. You two are such a turn-on to watch.\"\n\nMike, for the uncountable time that night, could hardly believe his eyes. His hands gripped Jenny's hips, and he had an unrivalled view of her ass as he pounded her. He could just catch glimpses of her breasts swaying with the rhythm. All four of them, but especially the ladies, were by now covered in sweat, their hair in matted tendrils. He could see Jenny and Cassie still making out like teenagers, Jenny with one hand on Cassie's chest, Cassie with hers on Veronica's hip and pussy.\n\nVeronica now interwove her legs with Cassie's, angling so that their pussies could press together, and began rocking back and forth, much as Cassie had on Mike earlier. Cassie rubbed Veronica's clit with her thumb, while Veronica kissed Cassie's outstretched calf.\n\nFully satisfied for the time being, the quartet held this position for some time. Mike would occasionally run a hand or two over Jenny's smooth back or down her legs. Veronica would grab her breasts every so often. Cassie sometimes thrust back against Veronica, garnering renewed vigor despite the impending exhaustion.\n\nNo one had the strength or wherewithal to hold back and be quiet anymore. Grunts, groans, and moans filled the bedroom. Even Veronica was beyond words, not that she didn't still try. The only word she kept repeating the others could make out was \"Fox,\" Cassie's last name and perhaps a comment on her sexuality.\n\nMike was close, and everyone knew it. They were feeding off of one another's intensifying arousals. Even their ragged moans started to sync up, until everything they did became one rhythm of increasing tempo.\n\nJenny and Cassie had to break their kiss completely, they were breathing so hard. Cassie grabbed her tits in both hands, while Jenny used hers to keep from collapsing. Veronica's eyes were shut in concentration, her face red but looking pleased.\n\nJenny bent low so that she could whisper into Cassie's ear.\n\n\"You know you're the hottest one here, right?\"\n\nThe comment was calibrated as only Jenny knew how, and Cassie went nuclear. Her legs wrapped around Veronica and she bucked her hips, trying to fuck Veronica's pussy. She gripped her tits so tightly the surrounding skin turned white, and this time she was not silent. She wasn't screaming, but her moans were quite loud as she was bowled over by an orgasm that nearly made her pass out.\n\nSeeing Cassie's abandon, Veronica came with a cry of her own, and the two slowly ground their hips together, extending the pleasure. Under the right circumstances, a woman can go from orgasm to orgasm without much of a valley between the peaks, and the pair seemed set on a world record.\n\nThe tiniest thought managed to peek through the haze of Mike's perception, which was that Jenny was getting more turned on watching Cassie and Veronica than he was, and he'd have thought that was impossible. She liked watching. Really liked it.\n\nNow that Cassie and Veronica were satisfying each other fully, Mike turned his complete attention to Jenny. He pulled one last trick out of his bag.\n\nWith a smooth shift of his weight and a quick grab with his arms, Jenny was kneeling in front of Mike, with his cock still deep in her pussy. He thrust more slowly now, which allowed him to stave off orgasm for almost a full minute longer. With one arm just under her breasts, he held her upright, and the other lightly circled her clit. This kept her fully aroused as he slowed to an agonizingly slow pace.\n\nJenny could feel Mike approaching his climax. His cock may has well have been made of steel, he was so hard. His hand on her clit kept her on the edge of her own completion. All she needed was his hot load shot into her, and she'd be there.\n\nThey both felt it at once, that slight shudder right before a man comes. Jenny braced as Mike made one quick, final thrust, and then they both lost it.\n\nMike slammed his cock into Jenny's pussy as far as it would go, filling her even before his load sprayed out. When she felt each shot, Jenny's orgasm renewed itself. His climax seemed endless.\n\nMike wrapped his arms around Jenny, and they called one another's names as they continued to cum together. They completely lost track of time, and never knew how long they had stayed there, locked into mutual pleasure. For Mike, it was the closest he ever came to an out-of-body experience.\n\nAt last, they finally drifted back down to the bedroom, and when they had sufficient breath, shared a passionate kiss.\n\n\"I repeat: That was hot,\" said Veronica. Cassie just nodded slowly, stunned both by the sight and her own orgasm.\n\nJenny smiled and Mike took a small bow\n\n\"Um,\" Jenny said.\n\n\"What?\" Mike asked softly.\n\n\"I need to clean up a little.\"\n\nCassie and Veronica looked down, and saw Mike's load already slowly beginning to leak out of Jenny's pussy, mingled with her own juices.\n\n\"I got it,\" said Cassie, \"I haven't eaten anyone all night.\" She then darted forward, flipping onto her back.\n\n\"What are you... oh, my God!\" Jenny braced herself. Cassie was lapping up everything hungrily. Mike wished desperately he could have stayed in position and enjoyed it more, but he had to pull out. Cassie ate Jenny with further gusto after this, until Jenny felt herself empty out again.\n\n\"Mmmm,\" Cassie said when she had finished, \"That was good.\"\n\n\"That was... interesting,\" Jenny conceded.\n\n\"That was hot,\" Veronica repeated with a wide smile.\n\n\"Yes, we get it, everything's hot,\" Mike teased.\n\n\"Tonight? You're damn right.\"\n\nExhaustion hit them all within minutes. They didn't even bother to get under the blanket. Nestled together, they kept each other warm all night."
    ],
    "authorname": "TooCleverByHalf",
    "tags": [
        "truth or dare",
        "foursome",
        "three women one man",
        "stripping",
        "oral",
        "romance",
        "experimentation",
        "voyeurism",
        "girl on girl",
        "masturbation"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-warmest-winter-day-09"
}