{
    "title": "The Fundamentals of Friendship Pt. 02",
    "pages": [
        "Hello!\n\nI'm finally done with PART 2! This here was a hard child to bear.\n\nFirst of all, let me say thank you for all the nice comments and encouragements I received with PART 1. I'm always very, very glad to receive your thoughts about it, the positive and the constructive criticism too. \n\nI understand some people didn't like part 1 all that much, thought it too lenghy and overly stretched. I hear you. Thank you for letting me know where I could do better. I just felt the need to set a good foundation for this story. I didn't feel like I could go on without explaining the characters. Who they are. Why they are. Where they were, etc. \n\nAnyway, to those of you who didn't like it (I imagine you won't be coming back) thanks for not being mean about it.\n\nAh! And about an editor. I tried to get one with the 'English being only a second language thing'. No one ever wrote back to me.\n\n@fawnsage, you're always reading my stories, so let me give you this warning: I'll hurt people. Sorry. I'm mean, you should know that by now. In the end everyone's happy, though. Promise\n\nAnyway, part 2 is full of action. And it sets the tone for the parts to come.\n\nI hope you like it. Forgive any mistakes. \n\nXOXO, \n\nNana.\n\n*****\n\nLAURA\n\nStealthily, I swung my legs out of bed, put on my robe, and tiptoed my way out the room. I cast one last lingering glance at Rocco, sound asleep in my bed. His olive skin, contrasting beautifully with the white silk bed sheets tangled around his legs, begged me to crawl back in with him. He was snoring softy. A rhythmic, deep sound synchronized with the risings and fallings of his chest. My fingertips itched with a desire to touch the little curly hairs covering it. He made my bed warm, full and inviting. As tempting as the invitation was, though, I had to tend to my dinner otherwise there would be no dinner to speak of. I closed the door and walked down the stairs, leaving Rocco to his much deserved sleep. \n\nHe arrived yesterday. Since then we had dined, talked, fucked, then fucked some more. Not necessarily in that order. The talking part was probably the longest. Or at least it had felt like the longest part, at the end of which we reached an agreement. We would give this thing between us a fair chance. We would try and see where that would lead us. Once upon a time I had thought the long distance thing to be a mistake. Now I was going to do it. \n\nStill, an uncertainty was gnawing at me, like the tiniest of stones in my shoe. Rocco was everything I could ever want. The perfect man. I had no reason to complain or wish for more. Nor the right to do it, either. Hadn't I told Riley I wanted to have someone in my life only a month ago? And now here was Rocco, offering it all to me. In spite of that my mind insisted in enumerating all the reasons why, in the future, our relationship would perish.\n\nHe lives an ocean away! He travels too much! You can't leave the bistro! You'll be more apart than together!\n\nYou haven't even told him you want children, yet. What if he doesn't want them?\n\nLook at you! This has barely begun and you're already doubting it will work!\n\nHow do you even feel about him? Are you in love with him?\n\nNot in love. I wasn't in love with him. Not yet, anyway. I liked him very much. Attraction, and not just physical, was what was drawing us together. Rocco was...well, he was perfect! No other word for it. He was everything I wanted. Everything I had visualized when I had imagined my faceless and handsome future.\n\nBut wasn't it Freud or one of those guys who said something about how when people have all they ever wanted they get bored and depressed? Because, once you have it all, you have nothing else to wish for. You become a wantless, ambitionless creature. You get bored. Empty.\n\nDon't be stupid, Laura. \n\nIn my kitchen, I focused on preparing my lamb ribs to blot those useless thoughts out. I tossed the meat, some shallots and poured most of the contents of Rocco's Merlot into a casserole. There were about three fingers of the burgundy liquid left in the bottle. The ticking clock on the wall told me it was way too early to be drinking, but I paid it no mind. I was a nerve wreck. I needed the dinner party I was throwing for Rocco to be perfect. After weeks of building him up I finally had the opportunity to introduce him to my sister. And to Riley. At the thought of him I raised the bottle to my lips.\n\nRiley who had, seemingly, disappeared. \n\nWhenever I called him, if he happened to pick the phone up, he'd say he was busy writing, Class A bulllshiter that he was. His damn writing and creativeness were always the excuses he employed. He never wrote anything at his apartment though. Mostly, he wrote at the bistro. And the last time he had been at the bistro, about two weeks ago, had been weird, to say the least. He just sat there without his computer, talked about little, meaningless things like \"Oh, looks like rain.\" and stayed for scarcely one full hour. If I happened to ask \"What have you been up to lately?\", he'd answer \"Oh, nothing, just trying to write.\"\n\nHe was avoiding me. And I was letting him.\n\nI told him I wanted babies and someone. Now he was all weird. I had no idea what his problem was. Actually, I kind of did. I had surprised, even scared him with my revelation. I could put myself in his shoes. I probably would have reacted the same way he did had the woman I currently slept with, my best friend, told me she wanted children in the next five years. Although how that would concern him so much was beyond me. I hadn't asked him to do it.\n\nCould that be what was wrong with him, then? Did he think I wanted him to have my baby?\n\nOn that same night I returned from Paris, about two months ago, he had, according to Clementine, been at the bistro with a very beautiful woman. A beautiful woman I have never heard about. \n\nBut then again, why do you think you should've heard about her? She is most likely just a friend. Riley is allowed to have them. You don't have exclusive rights in that department, you know. He is not obligated to tell you every damn thing he does! \n\nAnd even though I knew all that, I couldn't shake the feeling that that very beautiful woman might be the reason why he had disappeared for an entire month. Or at least one of the reasons.\n\nThe other reason might be that I had wanted him to.\n\nThe understanding that we needed time away from each other became the elephant in the room after I finally acknowledged to him my future aspirations. Telling him all that had felt to me like confessing to murder. That he surely wouldn't be at the bistro the next day was an unspoken consensus between the two of us. \n\nWe've known each other for too long, we were together all the time so, naturally, this kind of thing had happened before. The avoiding each other. The needing some time apart. Albeit never quite like this, nor for such a long time, either. I had seen him once, only once, the entire month. An entire month after I had spent thirty whole days in another continent. So, in total, I had seen my best friend twice in sixty days. \n\nI missed him so much I was going insane.\n\nI was used to seeing him every day. It was strange to peek from the kitchen into the bistro's main area and not find Riley's gleaming glasses behind his computer, his fast fingers incessantly hitting the letters on his keyboard. I was used to his presence. Missing him wasn't natural. It almost physically hurt.\n\nAs I placed my casserole into the oven, my eyes fell on the old, stubborn stain that maculated a section of the tile. Ever since Riley broke a bowl of tomato sauce that stain had been there. A constant reminder of him. A reminder of that night I had been too busy with my hands on him to mind cleaning it before it permanently marked my spotless floor.\n\nNo more of that. I had no need for casual sex with my best friend anymore. I had Rocco now. Riley might, or might not, have someone himself. That remained to be seen. The last time I had called him he had promised me he'd come for dinner. The avoiding was coming to an end. We would have to talk, there was no postponing that any longer.\n\nAll I could do for the time being was to make sure dinner was flawless. So I proceed to worry over which china set to use, focusing on plates and glasses other than who Riley would bring as his date or if he would bring someone at all.\n\n***\n\n\"Rocco? Can you do me up, please?\" I offered my back to Rocco who planted a soft, warm kiss on my nape before sliding the zipper of my dress up.\n\n\"You look stunning, bella.\"\n\nI whirled around to face him. \"Really?\"\n\n\"Really.\"\n\nNot believing him, I turned to check on my reflection again. I ran insecure hands down my body, trying to find something wrong with the fifth dress I was trying on.\n\n\"Laura, you're perfect.\" His voice had that mildly annoyed tone men use while shopping with their wives. He wasn't to blame. He'd been watching me try on dresses for the past hour or so.\n\n\"Am I, though?\" To say I was anxious was an understatement.\n\nRocco laughed, coming to stand behind me, resting his chin on my shoulder and snaking his arms around my waist. \"What's all this insecurity for? You're as beautiful as ever.\"\n\nI put my hands atop his, trying to calm myself down. \"You need to make a good impression on Sophia. She's the boss of me.\" I lied because, honestly, I couldn't care less what Soph would think of Rocco. She was half in love with the idea of him already. It was Riley's opinion of him that concerned me. I wanted -needed- them to like each other. I couldn't tell why, but I felt that was imperative. \n\n\"I'll do my best.\" Rocco said.\n\nI rotated in his arms until I was facing him. He looked sinfully handsome. Fit to be a model for Armani suits. One more time, I mentally scolded myself for having the slightest doubt I should be with him. What else could I want? I was being capricious.\n\n\"I can't wait for dessert.\" I said giving him a teasing little smile.\n\n\"Desert? What are we having for dessert?\" I loved his accent, a confusing sexy thing that couldn't decide between being a little French or too Italian. \n\nI laced my fingers together on his nape and brought his head down so I could kiss him. \"Oh, I know what I'm having.\" \n\nRocco's mouth welcomed the intrusion of mine. I could smell his expensive aftershave. A scent that spoke of fancy dinners, expensive wines, comfort. Security.\n\nI exhaled and drew back. I searched his dark green eyes, hoping they'd pull me out of my head and into his kiss. He looked confused, surely wondering what the fuck was my problem. I was in the arms of a gorgeus, lovely man. All I had to do was enjoy him. I kissed him with renewed purpose. Leisurely, he undid his earlier job, unzipping my dress so he could ran his hand on my naked back. I shivered and kissed him more hungrily, forgetting about any nonsensical doubts that insisted on seeping into my thoughts.\n\nRocco's lips had travelled to my neck when the doorbell rang. I ignored it, fisting my hands on his hair and bringing his mouth back to mine. He started walking me backwards, towards the edge of the bed, but the sound of the doorbell only became more insistent. \n\nI pulled away from him, groaning in frustration. \"Agh! Sophia! It has to be her!\" \n\nSmiling, Rocco ran his thumbs around my lips to brush away the smudges of my lipstick. \"Go. We can finish this later.\" He zipped my dress shut again then moved to the bathroom to rearranged himself. \"I'll follow you in a second, bella.\"\n\nI had time to take one deep, and not at all relaxing, breath before Sophia pressed her incessant finger to the bell again. I rushed downstairs, almost tripping on the steps. \n\nBehind the open door was my baby sister's big, annoying grin. \"Where is he?\" Was her hello.\n\nSophia was one of those people. You just could not dislike her, no matter how annoying she managed to be. \n\n\"Hello to you too, Sophia.\" She hugged me briefly, but warmly enough, then stepped inside darting little glances here and there, searching for Rocco. \"He's upstairs, you idiot.\" I said to her. Then, finally acknowledging my poor brother-in-law, I turned to him. \"Hello, Todd. I'm so glad you could make it.\"\n\nTodd had the look of a man who slept very little thanks to my nephew, little Tommy. \"Wouldn't miss it for the world.\" He placed a platonic kiss on my cheek. \"How are you, Laura?\" \n\n\"Better than you. I'm not the one who has to put up with her everyday.\"\n\nTodd gave me the smile that had convinced me to like him when Soph introduced him to our family some six years ago. He joined her in the living room just as Rocco was coming down the stairs.\n\n\"Hello. Forgive my tardiness, I had a problem with my...\" He darted me a sensual look. \"My suit.\" \n\nSophia was instantly struck by Rocco's dazzling smile, that much was clear to whomever looked at her face. \"Oh, that's alright. Isn't it, Todd darling?\" She didn't even take her eyes away from Rocco as she reached a hand behind her to tap her husband's chest as though he were a secondary character in a Jane Austen's movie adaptation.\n\nFrom behind Rocco my eyes popped out a little when I mouthed \"What the fuck are you doing?\"\n\nTodd's cheeks bloomed with color. He was clearly struggling with an urge to laugh at his wife as she made a fool of herself.\n\n\"I'm Sophia. I'm Laura's sister.\" She stepped forward offering Rocco what seemed to be her entire arm in greeting.\n\nRocco, ever so gracious, took her hand to kiss the back of it. \"I'm delighted to meet you, Sophia. I see beauty runs in the family.\" \n\nShe was left an oozing puddle at Rocco's feet when he turned his back to her to greet an almost laughing Todd.\n\nGreat. Now Rocco probably thinks all the women in the family are stupid.\n\nOnce Rocco's back was turned to us, Sophia took the chance to let me know what she thought of him, because she couldn't be bothered to wait until we were alone. \n\n\"I like him!\" Her silent moving lips informed me.\n\n\"Stop it!\" I mouthed back to her.\n\n\"He's so hot!\" She pointed at his ass, standing a feet away from her, as if I hadn't noticed he had a magnificent backside.\n\n\"Stop it!\" My flat hand gesturing at my throat froze. The sound of laughter made me shift my attention back to Rocco and Todd. Both men had been staring at Sophia and I while we made nonsensical gestures at each other.\n\n\"Don't worry, man. This is normal. You'll get used to it.\" Todd patted Rocco on the back with that gesture of male comradeship. \n\nRocco only nodded, eyeing me with a tender smile on his broad mouth. I could only smile back at him as if saying 'Sorry my sister is weird.' Sophia, though, had already made her impression on Rocco. The same impression she made on everyone. That she was a little crazy.\n\nTodd and Rocco, already deep in some conversation, were pulled to the bar by that magnetic attraction bars seem to exert on men. As soon as they were out of sight Sophia rushed me to the nearest sofa.\n\n\"Lo, he's glorious! Marry him now!\" Her enthusiasm was palpable. Was I half that excited about him?\n\n\"Control yourself, Sophia.\" \n\n\"Oh my god, Lo! Rocco is really Perfect Rocco! You should be fucking him right now.\" She exhaled dreamily, sounding like a teenager in love. \"God, if I had a man like that I'd be fucking him right now.\"\n\n\"I'm sure Todd would like to hear that.\"\n\nShe rolled her eyes, no doubt the exact same way I did it. \"I love Todd, but I fuck him everyday. I'm allowed fantasies.\"\n\nI rolled my own eyes back at her. \"You should stop embarrassing yourself.\"\n\n\"Ah, speaking of embarrassment,\" I braced myself for the rest of her sentence. \"where's Riley?\"\n\nIf ever came a time in life when I decided to forget Riley existed, Sophia wouldn't let me.\n\n\"He's coming.\" My voice didn't sound convincing enough to my own ears, so I tried again. \"He said he'd come.\"\n\n\"Do you really think he'll come?\"\n\n\"Why wouldn't he?\" Maybe because he still doesn't want to see you?\n\n\"Well, if I were him I wouldn't be so excited to meet the competition.\"\n\n\"Competition? Oh, shut up, girl.\"\n\n\"Yeah.\" She nodded energetically. \"Competition for Laura's pussy.\"\n\nI had to put my face in my hands and groan. \"Sophia! Be quiet right now, please!\"\n\n\"But then again, if I were him-\"\n\n\"If you were him I would never be friends with you.\" I interrupted her.\n\nShe went on talking as though I hadn't said a word. She did that. \"If I were him I would come. Just to know what I'm up against.\"\n\nI held up a hand to her. \"I won't dignify your comments with a reply.\"\n\n\"If he does come it's going to be weird.\" She said, side eyeing me. \"Do you think he'll bring the girl Clementine told you about? Is he dating her?\"\n\n\"Sophia-\" I was going to tell her to shut up for good, but the ringing of the doorbell saved her.\n\nMy heart jumped in my chest. Sophia and I both looked at each other wide eyed. It was Riley, of course. The only other person I had invited. Clearing my throat I got to my feet, ran nervous hands down my dress, and walked to the door. Before I had even opened it completely I was smiling. The prospect of seeing Riley again made me happy, however rocky our relationship had been lately. But then, when the door was completely open, my smile dropped out of my mouth as if pulled down by gravity.\n\n\"Ells,\" Riley said, his face was still wrinkled from a laugh he wasn't quite recovered from. \"This is Suzanne.\"\n\n\"A very pretty woman.\" Had said Clementine.\n\nThe woman to whom the waist Riley's arm was wrapped around belonged was surely very pretty. Very, very pretty.\n\n\"Hi!\" And that was my very first fake smile of the night.\n\n***\n\nBecause when it rains it pours, Very Pretty Suzanne and Perfect Rocco knew each other. The world really is a fucking small place.\n\n\"Mr. Foscari!\" She'd enthused.\n\n\"Miss Evans!\" He'd said, all charming smiles.\n\nAnd they had laughed and hugged each other as old acquaintances do. The question I had been asking myself ever since Clementine told me about Suzanne was answered. Riley was seeing her. She wasn't just a friend. \n\nA twinge of instant dislike towards her dominated me. It was absurd. I knew nothing about Suzanne. She could be the best person in the world for all I knew. I had no reason whatsoever to dislike the woman. It made no sense for me to do so. No sense at all. In fact I hadn't even talked to her yet. I might even like her. We might call ourselves the best of friends by the end of the night. Nonetheless, it bothered me that Riley hadn't told me about her beforehand. He just showed up at my door with his arm around her.\n\nFor the sake of hospitality, I forced myself to express joy of her presence, however tenuous. \"Oh, look at that! You two know each other! What a crazy coincidence!\" I felt like a poser. Fake. Ridiculous. I was never any good at pretending to like people.\n\nRemember you have no reason not to like her, Laura. I kept telling myself.\n\n\"Yes, it is!\" Suzanne said, all authentic smiles and beautifully tanned skin. She didn't have to fake anything. If she was faking, she was rather good at it. \"Mr. Foscari is my client at the firm!\"\n\n\"Yes.\" Rocco agreed, smiling so brightly at her I felt another twist of that venomous feeling in my gut. \"Miss Evans and I have worked together for years. Her firm deals with my business in Napa Valley.\"\n\n\"Napa Valley?\" I asked, wishing the little dots that had started to make connections in my brain didn't reach the destination I suspected they would.\n\nSuzanne pointed her all-white-teeth-smile at me. \"Oh, yes. I was transferred here only a month ago!\"\n\nA month ago. Coincidently when Ry had disappeared.\n\n\"So...you're from California, Suzanne?\" My strenuously wide smile was about to crack my bottom lip.",
        "\"Yes! In fact, I met Riley at Stanford!\" \n\nMy voice came out dry, without that false amity I had been using so far. \"Oh, right. Stanford.\" I tried not to let on that was a novelty to me. I was pretty sure I didn't succeed.\n\nSeemingly oblivious to the distaste in my voice, Suzanne continued to smile her perfect smile at Rocco. Between the two of them it was hard to decide who showed more teeth. Just then, Riley finished saying his hellos to my sister and brother in law and came our way.\n\n\"Riley.\" Suzanne's excited voice collided with my unpleased one. She broke into laughter. The woman could star in a toothpaste advertisement.\n\nRiley stopped, looking from Suzanne to my scowling self, as though trying to decide which one of us to chose. Of course he went to her, and wrapped his arm around her waist the way you return something to where it belongs. Another fake smile moved my mouth. \n\n\"Ry, this is Rocco.\" I said, gesturing to Rocco. Then, pointing to Riley, \"Rocco, this is my best friend, Riley.\" \n\nThey both smiled, said their respectives \"Nice to meet you\" and \"Heard a lot about you\" until they ran out of pleasantries to say to each other. Suddenly, we were four people feeling like children in their first day at a new school. Me under Rocco's arms, Suzanne around Riley's and silence between us.\n\n\"So, Riley,\" Rocco began, breaking the ice. \"I hear you're a writer.\"\n\n\"Yes, I am.\" Riley answered politely. \"And Ells says you own a wine company.\"\n\n\"Ells?\" Rocco smiled down at me, lifting a quizzical eyebrow. I simply forced my facial muscles to pull the corners of my mouth up. \n\n\"I do, yes.\" He said, looking back at Riley.\n\n\"Ells loves wine.\" Said Riley.\n\n\"Yes, she does.\" Said Rocco.\n\nAwkward silence again. \n\nI would have given a kidney to disappear in a puff of smoke. I chanced a glance at my sister and, as I expected, found her studying the scene with acute attention. She held up a thumb and I could see her lips forming the phrase \"Everything ok?\" to which I just shook my head infinitesimally \"Not ok.\"\n\n\"Would you like a drink, Riley?\" Rocco offered, startling all four of us. The sound of his voice felt strange interfering with the silence standing as a fifth presence in our midst.\n\nRiley didn't drink much. That didn't stop him saying, \"Yes, I would.\" \n\nHe was being weird. He felt kind of weird. Uncomfortable, rigid. Standing there as though he had a stick up his neglectful ass. And accepting a drink from Rocco? He rarely drank. \n\n\"Would you like something?\" Riley asked Suzanne, almost whispering into her ear. As if I was watching everything through a magnifying glass and in slow motion, I saw his bottom lip brush her ear lobe and the shiver the contact caused in her. The gesture was so intimate I winced internally. \n\nWhat's wrong with you, Laura? Why do you care if his lips touch her ear? They clearly have been everywhere else in her body.\n\n\"No, thank you\" She smiled at him.\n\nI only shook my head when Rocco asked me whether I wanted something. Then he and Riley were gone towards the bar, leaving me alone with Pretty Suzanne. We stood there hyper aware of each other. Me, feeling as comfortable as a fish in the sand, and she, just smiling radiantly as if she were having the best time of her life.\n\nDoes she ever stop smiling?\n\n\"So,\" Suzanne started, because I couldn't think of a thing to say to her. \"You're Lucky Laura.\"\n\n\"Excuse me?\" I thought my ears might have heard her wrong.\n\n\"I used to call you Lucky Laura. It's silly, I know. But I always thought you'd have to be really lucky to have Riley so you love with you.\" She gave me a little closed mouth laugh. \"He's a pretty great guy.\" She added with a pinch of that explanatory note in her voice.\n\nIf anybody in this damn wide world knew how great Ry was, that person was me.\n\nAll of a sudden, my throat felt a little dry. \"He is a great guy, yes.\"\n\nShe looked around, setting her eyes on Riley. I was starting to think that maybe, just maybe, Suzanne was actually a nice person and all that antipathy was coming from myself alone when she opened her mouth to disabuse me of that notion.\n\n\"Seems you're at a disadvantage, Laura.\" Her eyes were still on Riley when she spoke to me using a voice that wasn't as honeyed as it had been only a second ago. There was something about the way she said my name that almost made me shudder.\n\n\"At a disadvantage?\" Maybe it was just me. My prejudice and predisposition to dislike Suzanne for no apparent reason. But something seemed to have changed in her the minute she was left alone with me. She seemed to have stopped trying to be so nice.\n\n\"Yeah.\" She continued, wearing the deceitful smile of a cat about to jump on an unsuspecting bird. \"You see, I know all about you. You, on the other hand, know nothing about me.\"\n\nI scoffed out a laugh. \"You know all about me?\"\n\nShe lifted both her eyebrows and I half expect her to inspect her nails like a caricatured villain. Of course I saw myself as the good girl. \"Riley told me all about you.\" She said all-so-casually.\n\nHer smile grew larger as her words worked the desired effect on me. My face was burning hot and I had never been so damn glad for being black, otherwise I'd be as red as a tomato.\n\nRiley had told this Suzanne, who he's known since college, all about me when I had never heard a thing about her until ten minutes ago? Goddamn him, the son of a bitch. \n\nAlso, fuck maturity. I didn't like her. Not one bit. \n\n\"You're right. I know nothing about you. Riley never bothered to say anything about you.\" I hated how petty I sounded. Bickering with another woman over fucking Riley.\n\nSuzanne's lips quirked at the corners with something that seemed to me like self-assurance. \"Well, Riley told me about you.\" Her tone of voice changed again, became nicer, although still sarcastic. Anyone who happened to look our way would never think I was about to claw her eyes out of their sockets. \"I expected you to be less attractive. I'm disappointed. This will be harder than I thought.\"\n\nI blinked several times. \"What the fuck did you say?\"\n\nRiley, and only Riley, came back before my conversation with his girlfriend had a chance to go on.\n\n\"Riley!\" Suzanne said, hooking her arm in the crook of his. \"Don't you feel good about yourself standing between two gorgeous ex girlfriends?\"\n\n\"Ex-girlfriends?\" My voice was too loud. At once, that little puzzle I had been putting together in my mind since Suzanne admitted she was from California was complete.\n\nRiley's dark eyes had a particular look to them I knew all too well . It was the kind of shameful, guilty look he put on before one of us starting yelling at each other.\n\n\"Yeah! Riley didn't...Oh! He didn't.\" Suzanne made her face express that kind of confusion that is quickly followed by sudden understanding. \"I guess I'll just go stand over there.\" She marched towards where Rocco was standing, talking on his phone. Riley and I just watched her go to avoid looking at each other.\n\nUnderstanding suddenly struck me. I laughed a bitter sound. \n\nOf course.\n\nSuzanne had played me. And I, silly as a duck, fell right into her net. She knew well enough I didn't know she was Riley's damn ex-girlfriend. I didn't even know she existed before he imposed her on me, bringing her into my damn house.\n\nOfficially. I didn't like her at all.\n\nPutting aside my childish behavior just long enough to drag my eyes up to Riley's face, I saw he looked a bit embarrassed. He opened his mouth, and I, out of pure and simple caprice, turned my back to him and marched to my kitchen; the place where I could always find some peace. \n\nLeaning on the cool surface of my fridge, I tipped my head back and took deep breaths that weren't enough to soothe my nerves.\n\n\"Laura?\" I snapped my eyes open to see Riley standing in front of me, raking his fingers through his unruly hair.\n\n\"Ry.\" I said back, using a very condescending tone of voice. \n\nHe ran another hand over his hair, looking down at his feet. \"I dated her in college. After we broke up.\" \n\n\"For how long?\" I asked.\n\n\"A while.\" \n\n\"You never told me about her, Riley.\"\n\n\"No, I didn't.\" \n\n\"Why? Why didn't you?\" I pulled myself straight, crossing my arms over my chest.\n\nWhen Riley looked at me it was almost comical what a boy he was, staring briefly at my bulging breasts before blowing an annoyed breath and saying, \"I don't have to tell you everything do I, Laura? Just because you're my best friend doesn't mean I am obligated to tell you everything. We're not children anymore!\" He turned his back to me, quickly whirling back around. \"Why do you care so much anyway? Are you jealous?\"\n\n\"Jealous?!\" I released a breath that was accompanied by a humourless laugh. That feeling that was twisting my guts and raising the little hairs on my nape at the mere thought of his Suzanne wasn't jealousy. I refused to call it jealousy. \"Riley! You met her at Stanford! You dated her after we broke up! Time in which I dated someone else, and told you all about it. And you,\" I pointed a finger at his face. He hated when I did that. \"You always said you were still single!\"\n\n\"Well, I wasn't, Laura.\" He hissed.\n\n\"Then why the fuck did you say you were?! Why did you lie?\" I realized that, as exasperated as I felt, I was whispering-yelling at him afraid the people, mostly Rocco, standing a room away might hear us. \n\nHe only stared at me for several minutes. His eyes were more unsettling than usual; those eyes as dark as the bottom of an ocean. He regarded me with an apprehension that made me think maybe he was about to confess he'd buried a body in my garden or something terrible like that. \"I didn't...I wanted...I-\" He sputtered. \"I didn't tell you because,\" He pressed his lips together, exhaled through his nose, then let it out. \"I didn't tell you because I didn't want you to know, Laura.\"\n\n\"What?\" I shook my head skeptically. \"Why, Riley? I told you about Jordan. Why didn't you tell me about Suzanne?\"\n\nHe opened his mouth to speak and didn't, releasing a long breath instead. I couldn't fathom what kind of thing would be so difficult for him to tell me. Whatever it was though, it seemed to almost physically weight on him. \"Because I thought...\" He trailed off. His expression was so miserable I clasped my hands behind my back so the friend in me wouldn't reach out to hug him. \"I thought we'd get back together, Laura.\" His defeated shrug was followed by a slumping of his shoulders. \"After college, when I came home. I thought we'd get back together.\"\n\nI had that sensation you get when you dream you're falling and you wake up with a little startled jump. You still have two or three seconds there where you don't realize you're awake, that maybe you're still dreaming and you're still falling. \n\nI said nothing back to him. I didn't think I could've.\n\nHe sighed deeply, running yet another hand over his tousled dark hair. A sign he was nervous. \"Suzanne was really important, Ells. She helped me a lot.\" He spoke of her with such softness it stung me. \"But you and I we...we never fought. We didn't stop talking. We didn't hate each other. We just...we ended. We still loved each other when we broke up, didn't we?\"\n\nIt took me a few seconds to realize that conversation was really happening. When I did, I nodded, giving him the only existing answer to that question. \"Yeah. We did.\"\n\n\"I didn't want to, Ells. I wanted to forget you, then Suzanne came along.\" He winced like he was mad at himself for not expressing his words quite right. \"I wanted to be with you, but I knew things weren't working with the distance and everything.\" He raised both his brows, looking at me from under his upper eyelashes as though asking Do you see what I mean? \"Today, when I look back, I think we were right to break things up. We wouldn't be friends today had we allowed the romantic side of our relationship to eat away at our friendship too. And I can't imagine not having you in my life, Ells. So I just...I broke up with her before graduation. About a month ago I bumped into her and we just fell prey to old habits, I guess.\"\n\nRiley's brows were drawn together. He had a kind of pained look on his face that tightened my chest. I never knew he had wanted to get back together all those years ago. When he came back I was still dating Jordan, who Riley actually developed a limited friendship with. He never said anything then. But listening to him admit to me he had those feelings once upon a time forced me ponder on the what if of it all. What if he had said something? \n\nIf he had, you would have said yes, Laura. You know you would have.\n\nI lowered my eyes and when I blinked a hot tear ran down my cheek. I promptly wiped it away, but another quickly followed. \"I'm sorry, Ry.\" I forced my head up. \"I never imagined you...I'm sorry, I just...I wish you would've told me.\"\n\n\"I know, Ells. I'm sorry, too.\" He shook his head, pinching the bridge of his nose. \"There's so many things I should've told you. But I guess it's too late now.\" I didn't press him into telling me what other things he should've told me. I supposed he had had enough revelations for one night. \n\nWe lapse into silence though our eyes didn't leave each other's. As I looked into his disturbingly dark ones I wondered if I had hurt him while I rubbed my then boyfriend under his nose. I swallowed the urge to ask him exactly why he hadn't asked me to get back together then. Or why he was choosing to say it now, when nothing could be done about it. Anyway, I was glad that stone was out of the path. I was tired of fighting him, avoiding him, missing him and doing whatever stupidity we were doing to each other.\n\n\"I missed you, Ry.\" I wasn't sure who spoke. If the present Laura, or the Laura of some fourteen years ago. \"I miss you.\"\n\n\"I miss you, too.\" He said, softly.\n\n\"Is it over? This time out between us? Can we stop now, please? I want my best friend back.\"\n\nRiley smiled wanly, spreading his arms in a wide invitation. \"I'd say it's about time it's over.\" \n\nI allowed myself to step into the embrace he offered me. I had missed him so, so much. It was a relief to have him back. I blew a long shuddering breath on his shoulder, wrapping my arms tightly around him. My crying slowly subduing.\n\n\"Don't ever do this again, Riley. Don't leave me alone again.\"\n\n\"I won't.\" He said, kissing the top of my head. \"I can't.\"\n\nFeeling the soothing tips of Ry's fingertips fondling my hair and his arm around my middle, I was beginning to feel that drowsiness that followed crying or heavy emotions. The relief alone was tiring. Knowing I could stop wasting all that energy in missing or being mad at him was a gift. I heard Riley's breath change and the brush of his mouth against my ear when he opened it to say something. The voice I heard wasn't his though.\n\n\"Laura?\" At the sound of Rocco's voice, Riley and I disentangled ourselves as though we were infidel lovers caught in the act.\n\n\"We were just...\" I felt an urgent, overpowering need to explain myself.\n\n\"...talking.\" Riley blurted, sounding just as guilty as I felt.\n\nRocco frowned, looking between the two of us. \"Suzanne wants some water.\" He spoke to Riley, but kept his green eyes on me. I could almost feel them burn my skin.\n\nRiley darted one last apologetic look my way. I nodded, then he left for the living room not stopping to get Suzanne her water. In the back of my mind, a little voice told me she wasn't really thirsty. She had sent Rocco there just to see what Ry and I were up to.\n\nI wiped my face with the backs of my hands, sniffling, standing there like a child waiting to be scolded. But Rocco, surprising me, walked towards me and hugged me instead.\n\n\"Are you alright?\" He enquired, his breath hot in my hair.\n\n\"Yes.\" I said into his chest. \"Just...\" I pulled away wanting to look him in the eyes as I explained myself. \"Riley and I haven't been seeing each other eye to eye lately. We had a long overdue talk.\"\n\nRocco gave me what I supposed he thought was an understanding look, but to me it felt like sternness. \"I understand.\" He let me stay in his arms for a while longer. I felt strange, like a cheater somehow. One minute I'm in one man's arms. The next in another's. \"Let's go.\" Rocco said, pulling away. \"I'm dying to try your Lamb ribs.\"\n\nAfter a few more moments to recompose myself I served dinner resolved to behave perfectly well until the end of the night.\n\n***\n\nThe clinking of cutlery against china was the predominant sound during dinner. It was a quiet experience, to put it mildly. No one seemed to have much to say. Suzanne and Sofia tried to start a conversation once or twice, but soon gave that up having received no encouragement from the rest of us. Rocco wouldn't so much as look in Riley's direction. Any words I threw his way were met with grunts instead of actual answers. Riley only opened his mouth to allow his fork in and out. And I was dreaming of the past with too many unasked questions swirling around in my head to bother saying much.\n\nI was still trying to understand Riley. As hard as I tried I couldn't stop thinking of what he'd said. I thought we'd get back together. The more I thought about it, the more I felt a little resentful of him for keeping that from me. He should've told me. He should have. All those years ago he looked so fine, so at ease around me and my new boyfriend I never believed he wanted me back. Of course I had had entertained the idea. Secretly, I had wanted to get back together as well. But he never gave me any indication of wanting the same. I was dating another guy and he didn't seem to mind that as well so, eventually, I forgot about it. I convinced myself that we were definitely over. Happy enough that he at least felt like he could still be my friend.\n\nAfter dinner, I tried once again to be alone with Ry. I simply wanted to talk to him after two months of neglectfulness. When I found him though, he was huddled up in a corner talking to my sister. That sight alarmed me. If Sophia said to him half of the stupid things she said to me, I had good reason to be worried. I settled for a chat with Todd who could talk about nothing else but his son, reminding me what a wonder it was to have children and how I didn't have one. Rocco and Suzanne were in another corner sharing their perfectness.\n\nIn the end, everyone commended me on the cooking. Dinner was not much of a party, but at least everyone was satisfied with the food. Riley and I said our goodbyes in good terms once again. And he promised me he'd be at the bistro the next day. Suzanne and I lied to each other, saying it was nice to meet, when it clearly wasn't. I suspected Rocco and Riley did the same.\n\nMy sister, though, gave me a strangely long hug. \"I love you, Lo. All I want is for you to be happy, ok? Just be happy.\" She left before she could explain to me what the hell she had meant. \n\n***\n\nWhen everyone, except for Rocco, had left, I dropped my body onto my couch reveling in a sense of mission accomplished. Dinner hadn't been perfect, but at last it was over.\n\n\"Oh, thank god that's over!\" I voiced my last thought, raising my hands to the ceiling.\n\n\"What's your story with Riley.\" Rocco asked me out of fucking nowhere.\n\nI sat bolt upright. \"What?!\"\n\n\"You and Riley.\" He repeated, standing in front of me. \"What's your story?\"\n\nI glanced up at him, flabbergasted. Where the fuck was that coming from? \"Ahhh...well, we...we met in school. As kids. I've told you that, haven't I?\"\n\n\"What about the rest of the story?\" He insisted, casually burying his hands on the pockets of his trousers.\n\nI sighed, annoyed. My expectations that Riley and Rocco would sympathize with each other went down the drain. Riley was a kind of hipster writer and Rocco was a businessman, some good years older than Riley and myself. They had nothing in common. And Rocco, after the scene in the kitchen, didn't even try to be civil to Riley.",
        "\"We dated for six years or so when we were kids.\" I said, avoiding Rocco's heavy gaze. \n\n\"Why did you end it?\" He asked. His voice didn't betray the slight surprise at my confession.\n\nI raised my eyes to his. \"Why do you assume I was the one to end it?\" He didn't answer me. \"We ended it when we were in college.\" I continued. \"He was in the West Coast, I was in the East. It wasn't really working. So we broke up, but remained friends.\"\n\nHe pressed his lips into a rigid line, nodding slowly. \"Were you still in love with him?\"\n\n\"What?\" It was hard to believe all the things I was hearing in one single night.\n\n\"When you broke it up, were you still in love with him?\" He repeated the question slowly, as if I were retarded and needed slow paced words to comprehend speech.\n\nRocco was cunning. A successful businessman. Just like with Miss Lawyer Suzanne, I would have to remember to be careful with my words and actions around him.\n\n\"Yes.\" I answered him sincerely. Rocco could read people well, lying to him wouldn't be smart. \"We didn't fight or anything. It was just hard, you know, to be apart. We didn't deal well with the distance.\"\n\nHe gave me that annoying nod again. The kind of nod you get from disappointed people. \"Why didn't you mention your past relationship when you told me about him?\" He asked, brushing a thumb on the corner of his mouth.\n\n\"Why didn't I tell you I had dated my best friend when we were drinking wine and having our first date? I don't know, Rocco. I just didn't!\" I threw my hands up, feeling the need to stand on my feet. \"That was 14 years ago, Rocco. He's my best friend. He's always been there when I needed him. We had no reason not be friends after the relationship ended.\" My blood was boiling, but my words came out smoothly enough. The night had been long, I was tired enough to collapse. I just desperately needed it to be over. \"I don't go around introducing him the ex-boyfriend, you know. He's my friend. He's like a brother. I don't know what you want me to say.\"\n\nRocco just stared at me in silence for a few seconds. \"Alright, bella. I understand. I was just surprised, that's all.\" He finally said, wearing a flimsy mask of calmness. He reached a hand to stroke my cheek. \"I think you are a beautiful, intelligent woman, Laura. I can see myself with a woman like you. But I need to be sure you can see the same future I do. I can't afford to waste my time.\"\n\nAs gentle as I could be, I brushed his hand away. \"Waste your time on me, you mean?\"\n\n\"I'd hate to waste my time on anything.\" He said with indifference.\n\n\"Right.\" He wasn't wrong. He was being honest. He was plainly asking me not to string him along. \n\nSo far Rocco had been nothing but good to me. Then he caught me in a warm embrace with a man I had deliberately not told him was my ex-boyfriend. He had a right to want an explanation. I owned him an explanation. I realized I had done to Rocco the same thing Riley had done to me. Riley had, voluntarily, not told me he had dated Suzanne. And I, in turn, had hidden from Rocco my past relationship with Ry. \n\nI was a gigantic hypocrite, that's what I was.\n\nI took one of Rocco's big hands in mine. \"I'm here, Rocco. I like you. I want to try this if you're willing. But don't ask me to chose between you and my best friend.\"\n\n\"Because you'd choose him?\" He blurted.\n\nI flinched, dropping his hand. \"No, Rocco. I wouldn't choose anyone, because there wouldn't be any choice to me made. He's my damn friend. You are my-\" I stopped. What was he? At this point I wasn't sure he was anything anymore.\n\n\"I'm your what?\" He asked, challengingly.\n\n\"What do you want to be?\" I asked boldly, raising my chin.\n\nHe actually pointed a finger at my face and could not have sounded more latin a man when he said, \"I'm your man.\" Then his expression softened, but not enough to lighten the heavy aura between us. \"Riley is your friend. And I would never dare ask you to choose between us. I simply sensed some hostility coming from him.\"\n\nI groaned, if in frustration or exhaustion, I couldn't say. \"He's just being my friend, Rocco. He just wants to make sure you're as good to me as I told him you are.\" I waited for his reply, but he gave me none. I assumed he had nothing else to say on the matter. \"I'm really tired. Can we, please, go to bed now?\"\n\n\"I'm not sleeping here tonight.\"\n\n\"What? Why?\" \n\n\"I have an early meeting with Miss Evans and you need to rest. I'd hate to wake you up so early in the morning after all the work you had today. We'll both be more comfortable if I sleep at my hotel.\" He placed two fingers on the crinkled spot between my brows. \"I'll stop by the bistro when I'm done so we can have lunch together. Is that alright?\"\n\nHis meeting was nowhere near the reason why he wouldn't stay, but I had no energy for another discussion, so I agreed. \"Ok.\"\n\nHe gave me an unfeeling, antiseptic kiss on the mouth. \"Bye, Laura\". Laura, not bella.\n\nI waited until the door was closed behind him to let my nervous tears flow. As tired as I was I knew I would never be able to sleep. Luckily, I had an entire dinner party worth of mess to clean. There's nothing like cleaning to take one's mind out of problems.\n\n***\n\nRILEY\n\nSometimes you say things without really knowing why you said them. The words just come stumbling out of your mouth. Sometimes people say I love you without really feeling it. It's automatic. It's part of being human, I suppose; to say things you don't really mean. Sometimes the current is too strong. It drags you in until you're neck deep in water then, soon enough, It's over your head. And you're drowning.\n\nUltimately it all came down to one single mistake. The mistake I made the morning after my 30th birthday when Laura asked me what had happened the night before. I should've told her then. I should've told her the truth. \n\nI still love you. I still want you. That's what happened.\n\nInstead I lied. To Laura and to myself. I convinced myself that she'd been too drunk, completely out of her face, to really mean what she had said. \n\nI love you, Riley. She said it all the time. You're my best friend and I love you. But because she constantly said she loved me as a friend I knew the difference. I knew that when she said those words on my birthday, high and drunk as she was, she had meant something else. That was the kind of I love you I used to get when she was mine.\n\nThose words scared the shit out of me. I tried to tell her she was drunk, she didn't know what she was talking about, but she kept telling me over and over again I love you, Riley. I love you, Riley until she kissed me. She kissed me for the first time in 8 years. And when she did I found I had wanted her to kiss me. I could've stopped her. I was sober enough to know what I was doing, I remember everything about that night in graphic details. I remember Laura moaning my name, encouraging me to go on, to touch her. I remember the sex had been so good, so intense that she even came this one time with me hardly touching her. Just with my mouth latched onto one nipple.\n\nHow insane was it? I made her come just by sucking on a fucking nipple and now I was losing her. Losing her might not even be the right term. How could I lose something I didn't have? \n\nI took Laura for granted.\n\nI lied one of those lies you just tell without even thinking, without a reason. I have no idea what happened, Ells. Guess we just drank too much. She believed me. She had no reason to think I was lying. Every second that passed after that lie left my lips was torture. I watched her search for her clothes, put them on, not at all minding my watchful eyes. Why would she? I had seen her naked too many times to count. She sat on the bed and asked \"Are we ok? This isn't going to be awkward, is it? Was just a silly mistake.\" She thought it was a mistake. I thought it was the best thing that could've happened to us. But she thought it was a mistake, so I had agreed with her. I believed her as she had believed me. \"Yeah. It was a mistake. We were drunk.\"\n\nThe mistake was not telling her what I really felt. What I really wanted. I settled for a situation I wasn't happy with. Other opportunities knocked on my door. There was a second, a third chance. But I didn't speak up when I should've. That mistake came back to bite my ass. Of all the stupid things you believe in when you're young, to think you have unlimited time and you can sort your shit out tomorrow might the stupidest of them all. \n\nI was out of chances. Now Rocco had stepped in. \n\nTo say taking Suzanne to Laura's dinner party was another mistake was an understatement. To say going at all was a mistake didn't even begin to cover it. On the bright side, I had finally met Mr. Perfect and was relieved to find he wasn't perfect at all -or I liked to think he wasn't. I could understand his appeal, though. He was handsome, charming, rich, perfect. One of those man with everything in their favor. The kind of man any woman would want to have a relationship with because it would be safe, biologically desirable. \n\nHe sure would have beautiful, healthy babies. I cringed at the thought. He wasn't even Laura's type. However perfect he seemed to be, he also was a conceited jerk who gave himself airs.\n\nAt some point during the night he invited me for a drink I would've loved to have refused. Laura never told me if she had mentioned our past, or even current, relationship to Rocco. Regardless of her informing him or not, he seemed to have understood things on his own; what he made, if not clear, implicit as soon as he got the chance.\n\n\"So, Riley. I understand you and Laura are best friends.\" His tone of voice had been even, though I could've sworn I heard some contempt poured into the last couple words. His smile was the kind only a businessman could give you. Feigned, but bright enough to make you think it was real.\n\n\"We are.\" I hand't troubled myself with fake amiability.\n\nRocco had only nodded. I could tell, he was the kind of guy who nodded a lot.\n\nThe situation was clearly going to be a competition rather than a conversation. So I had used what little ammunition I possessed. \"I've known her since we were kids.\"\n\nHe'd poured whisky into two glasses, not bothering to ask me whether I cared for the drink or not. \n\nI didn't.\n\n\"She's a beautiful woman.\" He'd offered me the glass which I had accepted in spite of my dislike for its content.\n\n\"Yes, she is.\" I'd agreed because, seriously, what else could I have said?\n\n\"Miss Evans is quite lovely, Riley.\" He'd lifted his glass, pointing it in Suzanne's direction, where she stood talking to Laura. \"You're a lucky man.\"\n\nThere is an unspoken rule to the kind of conversation between two men who have their eye on the same woman. He had managed to be alone with me so he could mark his territory. Make clear he'd won. He'd won her.\n\n\"How long are you staying for, Rocco?\" I'd blurted the question, diverting the subject from my luck to him.\n\nHe'd turned his calculating eyes on me. \"I'm not certain, but I am staying, Riley.\" He'd stated that as though it were set in stone. Fated to happen. \n\n\"Right. So, where is it that you live, exactly?\" I'd asked, moving my index finger in the air as if trying to pinpoint his habitat on an invisible map. \n\nRocco had spun to me then, and our parallel tall frames put us face to face. I had thought perhaps he'd punch me or something. By the look on his face he would've liked that. \"I have means to live anywhere I wish to.\"\n\nThe perks of being a rich son of a bitch.\n\n\"But Laura-\"\n\n\"Laura and I,\" He'd objected. \"We have talked about such things. She understands our particular situation.\"\n\nA wave of anger swept through me. He talked about her like he would a prize he'd won at a fair. He didn't know her, not like I did. Yet, I had to admit he had earned the right to say that, hadn't he? Laura and I. It was Laura and him. Even if I believed myself to be more deserving of her, he was the one who had her. The one who had fought for her. \n\nI had stood there with my chest puffed and my head high, wearing a mask of pride as I gazed directly into Rocco's eyes. \"Look, Rocco. I don't mean to sound rude nor territorial, but I fear my position in Laura's life demands it.\" His eyes studied me with anticipation. \"I love her. She's my best friend. It's my job to take care of her.\" \n\n\"Laura doesn't strike me as the kind of woman who needs taking care of.\" \n\n\"Well, she doesn't. But I know her better than you.\" His eyes narrowed. \"I hope you're as good to her as she thinks you are.\" My words had sounded more like a threat than I had hoped, betraying my petty jealousy.\n\nRocco had sipped his whisky, making a point of looking me in the eyes as he spoke, \"Don't worry, Riley. I mean to take very good care of her. I wouldn't want to know what it feels like to lose her.\"\n\nI had drank the foul burning whisky to aid in the descending of my pride down my throat and left that conversation with my tail in between my legs.\n\nThe memory of my little time with Rocco made my grip on the steering wheel, while I drove Suzanne back to her apartment, hard enough to white my knuckles. She was sitting right beside me while I swallowed my jealousy over another woman. And I wanted to think Rocco was the jerk. The irony.\n\nThe night had presented me with one surprise after the other. One of the biggest surprises, though, had been Rocco's acquaintance with Suzanne. Of course she also thought he was perfect. And what a small damn world.\n\nBut the biggest surprise of all had been Laura's behaviour towards Suzanne. For a moment there I thought she'd jump at her throat and her rip her jugular with her teeth. If I didn't know her so well I'd say she was jealous. Or maybe I had wanted her to be jealous. Maybe, deep down, that was the reason why I had taken Suzanne to that dinner. To make Laura jealous. Now that would be awfully conceited of me, wouldn't it? \n\nSuzanne's reappearance in my life had been a blessing. We spent the whole month together, reminiscing old times, reconnecting, remembering the old and getting to know the little new things about each other. The thing about Sue, the thing that eventually made me infatuated with her at university was that, when I was around her, I forgot I missed Laura. I didn't look at Suzanne and wished she was Laura. I didn't compare her to Laura. I was able to see her for who she was and not who I wanted her to be.\n\nWith everything that had happened; Laura's time in Paris, her meeting Rocco, telling me she wanted children and a steady relationship with someone within the next five years of her life, plus my unexpected encounter with my college ex-girlfriend; I needed some time. \n\nIt was a silent understanding between Laura and myself, after the heavy talk we had had that night, that we would both need some time apart. I hadn't intended for it to be so long, though. Later, from some dark, unknown place, came a burst of courage or maybe just sheer stupidity, that made me admit to her half of the truth. I could've easily told her all of it. Told I loved her then and still loved her now.\n\nI had missed her. Terribly. But Sue was back in my life. I had allowed her to settle back into her old position. A buffer for my feelings for Laura, which wasn't fair to anyone, most of all to Sue herself. I was, once again, being a such a coward I was disgusted with myself. \n\nAnd, anyway, I was later than ever. Telling Laura I loved her now, with Rocco and Suzanne in our lives, wouldn't be fair. Nor right. Calling Sue just a buffer or a rebound was the worst of all. She was more than that. I had almost loved her once. \n\nBe all that as it may, I couldn't shake the insane urge to turn the car back around and drive back to Laura's to finally tell her all I felt. All I wanted. I had Sophia to blame for that. Of all the dinner's eventualities, my talk with her was the craziest peak of the night. That girl has always been crazy. Some point after dinner, I had found myself alone with her.\n\n\"You and my sister are like mouths, Riley.\" She'd said, starting that conversation the way she always did, picking out some subject and just throwing it right into the middle of another.\n\n\"Mouths?\" I had laughed at her. \"What the hell does that mean, Sophie?\"\n\n\"It means your mouths are right under your noses but you can't see it. You know it's there but you don't fucking see it.\"\n\n\"What?\" \n\n\"What do you think of Rocco?\" Sophie could really confuse a man. She'd change subjects really fast, always talking about what she wanted, not really caring about whether you were listening to her or not. She has always been funny. Her 'I give a fuck switch' was constantly off.\n\n\"He's alright, I guess.\" I had lied very badly.\n\n\"It's ok, Riley.\" She'd said, purposely nudging me.\" You can say you don't like him, he's your competition.\"\n\n\"My competition?\"\n\n\"If I were you, Riley, I'd tell her soon.\" That was the moment the conversation took a strange turn. \n\n\"Tell her what?\" That was a dispensable question. Of course I knew what. Although I never expected Sophie to know it too.\n\nShe had dismissed me as if I'd said nothing. \"I really love my sister, like not even you can imagine. But she's not very smart when it comes to man. Laura's a little slow. Remember when you two were 15? She was crazy about you, you were crazy about her, but she thought you'd never care for the likes of her so she made you believe it, too. Remember who showed you the light?\"\n\n\"You did.\" Not even if I lived a hundred years would I forget the day when the 13 year old Sophia called the 15 old me out for being a blind idiot.\n\n\"I was 13 and already smarter than the two of you put together. Laura never could tell when a guy was into her.\" At that point Sophia set her drink down, put her hands on my shoulders and looked at me with a seriousness I never knew she was capable of mustering. \"Now, because I love my sister and because I happen to like you too, I'm going to give you another advice, Riley.\"\n\n\"What advice?\"\n\n\"Tell her you love her before you lose her for good, because Rocco means business.\" She had fixed the deep brown she shared with Laura in my shocked face. \"Don't just stand there hoping she'll see the light for herself because she can't see her mouth under her nose. You have to tell her it's there. She might know you really well, but she can't read your mind. She's not a fucking Jedi, you know. Tell her you love her Riley. Tell her or you'll lose her and she won't even know you ever wanted her back.\" Casually, as though she hadn't even stirred the deepest shit I hid, she picked her glass up and took a calm, long sip. \n\nI always thought I was so damn subtle. That no one knew. That no one could, because I hid it well.\n\n<if>Someone knows it though, Riley. It's not a secret anymore.\n\n\"You see everything, don't you, Sophie?\"\n\nShe'd given me a tender smile. \"Riley. I want Laura to be happy. I don't really care who makes her happy. You or Rocco is all the same to me, but not to her.\"\n\n\"You're saying she pref-\"\n\n\"I'm saying you should tell her how you feel about her. You still have time.\"\n\nWas it so obvious how I felt about Laura? Could everyone see? Could she see it? \n\n\"How did you know, Sophie?\"\n\nShe'd given me a look that all but said I was an idiot for asking her that. \"How did I know? The same way I know the sky is blue, the leaves are green and all that shit. I have eyes.\"\n\n\"It's that obvious, huh?\" \n\n\"It is to someone who knows the two of you well. Now go over there before Lo murders your pretty date.\"\n\nWhether Sophia knew the hope she'd just given me or not, I felt an enormous sense of gratitude towards her. Enough to compel me to hug her. \"Thanks, Soph.\" ",
        "\"Just so you know, I'm on your team, even though Rocco's hotter.\" She'd said, then walked towards her husband while my mind went into a turmoil.\n\n****\n\n\"Riley?\"\n\n\"Yeah?\" Suzanne's voice yanked me out of my reveries. I turned to see her smiling on the passenger seat. \n\n\"Are you alright? I've been calling your name for the past minute.\"\n\n\"Yeah, yeah. I just had an idea for the book.\" I said and, my god, my excuses were shit. Lost in my own head, recalling the conversation I had had with Sophia, I hadn't even noticed when I parked the car in front of Suzanne's building.\n\n\"Write it down, or you'll forget it.\"\n\n\"Yeah, I will.\"\n\nShe leaned in to give me a warm kiss I didn't have enough concentration to return properly. She pulled away, frowning. \"You sure you're alright?\"\n\n\"Yeah, sure. Don't worry.\" I squeezed her hand to reassure her of my life.\n\n\"So what did you think of dinner?\" The girl was as canny as a cat. It was clear my opinion of dinner wasn't what she wanted to know. Not really.\n\n\"Was fine.\" \n\n\"Fine?\" She enquired, cocking a brow.\n\n\"Yeah, fine.\"\n\nShe was quiet for a few seconds, then blurted. \"Laura's very beautiful.\"\n\n\"Yeah, she is.\" Absentmindedly, I agreed with that irrevocable statement for the second time in one night.\n\nSomewhere in the back of my mind I heard Suzanne's deep sigh. \"See you tomorrow?\" Her voice was a little low, uncertain. \n\n\"Are you sure you don't want me to go up?\" I offered her again, trying to make up for being a bad date. She had an early meeting with Mr. Perfect Rocco and had subtly suggested I sleep at my own place.\n\n\"I have to be up very early tomorrow, Riley.\" \n\n\"Ok.\"\n\nShe kissed me again. \"Bye, handsome.\"\n\n\"Bye.\" I waited for her to go in and lock the door behind her. \n\nReflexively, I reached into the front pocket of my jeans lookin for my phone and didn't find it. I mentally retraced my steps to the last memory of having it with me. It had been in my hand when Sophia approached me.\n\n\"Shit.\" I had left it at Ells.\n\nI turned the engine on and made my way back the road I had come from. Back to Laura's. Where I unconsciously had been wanting to go.\n\n***\n\nI had a key, but Laura never did remember to lock the little garden gate by the side of her house. It was all too easy for me -or anyone who cared to try- to sneak in. \n\nJust as I had suspected, the lights in her kitchen were on. She was pissed at something. Probably me. Cleaning or cooking were her ways of letting some steam off. The door connecting the kitchen and her garden was open too. I kept telling her not to let the damn door open at night, especially at this hour, some pervert might creep in -just like I had. She never listened, though. She said she liked the fresh air of the night.\n\nI leaned on the door, watching her drying the dishes, rubbing a cloth on a glass like her life depended on its cleanness.\n\n\"What did that glass ever do to you?\" Before I had completely closed my mouth she screamed, and the glass in her hand turned to shatters.\n\n\"Fuck, Riley! One of those days you'll give me a heart attack!\"\n\nLines of liquid ruby started running down her hands. \"Shit, Ells!\" I rushed to her, taking her bleeding finger and putting it in my mouth. She winced, and I noticed her eyes were unusually sad and red rimmed. She had been crying.\n\nWe both slid down to the floor, backs against her green kitchen cabinets. \"I really hope you don't have any STDs.\" I pulled her finger out of my mouth, still tasting the rusty saltiness of her blood.\n\n\"If I have any, I got it from you.\" I studied her voice for signs of imminent tears, but she sounded tired more than anything else.\n\n\"That's very probable.\" That made her smile a little and I was content to be the cause of it. \n\n\"Why are you sneaking into my house at this hour, Riley?\" She kept her eyes down, avoiding mine.\n\n\"I forgot my phone. Didn't want to wake you.\" I put a finger under her chin to force her to look at me. \"Is Rocco asleep?\" I asked, hoping he wasn't to blame for her blotched eyes. I wasn't his biggest fan to start with, so he better not be making the woman I loved cry. \n\nLaura brushed my hand away, casting her eyes down once more. \"He's not here. Went to his hotel. He's got an early meeting with Suzanne.\" Her small voice confirmed he really was the reason why she was crying. But she didn't even want me to notice she was crying, who's to say talk about it.\n\n\"Oh, right. The meeting. How crazy is it that they know each other?\"\n\n\"Where's she?\" She asked, ignoring my remark.\n\n\"Her place.\"\n\nShe nodded, sinking her teeth on her lower lip. Trademark move for when she wanted to say something she was afraid to.\n\n\"I was about to have some comfort Oreos. It's a good thing you're here, you can eat the filling.\" I doubted asking me to eat the filling of her cookies was the thing she really wanted to say. I wondered what made her need comfort ice cream and cookies to begin with.\n\n\"Chocolate?\" Ever since we were kids Laura loved to have Oreos with chocolate ice cream. She loved the cookies, but hated the filling, so I always ate them for her, remarking on how the filling was the whole point of Oreos.\n\n\"You bet.\"\n\n\"Sure, let's have it. I can't believe you still eat this stuff. Remember your 10th birthday? How much ice cream we had?\" To this day, my stomach still lurched when I recalled the 10 year old versions of us, puking our guts out all night long due to excessive amounts of ice cream and cookies.\n\nAs I watched her get up and walk to her fridge I noticed she was wearing my Star Wars t-shirt. There were several holes in it. That shirt was maybe ten years old, if not older. No. Older. Definitely older. I had that shirt when I was in college and had given it to her a few months before we broke up. She still slept in it. I felt a smile stretching my lips. Then, sudden and uninvited, parts of the talk I had with Sophia crushed back into my mind. Tell her you love her before you lose her for good. You still have time.\n\nI shook my head to physically try and make the idea go away. I couldn't do that. That would be a jerk move. I had Sue, Laura had Rocco. I had had my chances, it wasn't fair to Laura to do it now. I had no time. Not anymore.\n\nShe returned with the ice cream bowl and the pack of cookies. She sat down like she used to as a child; with her legs streched in front of her, forming a V. She raised one spoonful of the icy stuff to her mouth so forlornly that I put an arm over her skinny shoulders. \n\n\"What's wrong, Ells?\"\n\nWithout looking at me she sat her spoon down, taking several minutes to give me what I knew to be a dishonest answer. \"Nothing. It was just a long night. I'm tired.\"\n\n\"I could go-\"\n\n\"Don't!\" She clutched my arm with such force her nails dug into my skin. \"Don't leave, please.\" Her eyes were wide, terrified. There was no way in hell tiredness was all there was to it.\n\n\"I'm just kidding, Ells.\" I took her hand, carefully making her lose her grip on me. \"You're sure you're ok? You don't look so good.\" I asked her, opening the cookie pack.\n\n\"I'm fine, Ry.\" She lied again.\n\n\"Hey,\" I pulled her to me, and she willingly rested her head on my shoulder. \"You're clearly not fine. Talk to me.\"\n\nShe took my hand, squeezing down on it. \"I don't want to talk right now, Ry. Maybe later.\"\n\nShe didn't want to tell me what was wrong. Not yet. She wanted me to leave it alone, so I did, focusing instead on eating the filling of her cookies. She'd tell me in her own time. She always did.\n\n\"Do you really have to lick my cookies, Riley?\" \n\nMy tongue froze flat against one dark little chocolate disk. \"Lick your cookies? I remember a time when you didn't mind me licking your cookies.\" I joked only to have her blush and elbow my ribs. \"What do you care if I lick 'em?\" I asked.\n\nShe wrinkled her nose, considering her answer. She was the last person in the world who could complain about my tongue or where it had been. Too late for that. \"They get wet. It's disgusting.\"\n\n\"You're dipping them on ice cream, Laura. They're bound to get wet.\" I gave a cookie a dramatically long lick and dropped it into the ice cream bowl. \"There.\"\n\n\"Jerk.\"\n\n\"Don't worry, Ells. You have antibodies against me.\"\n\nWe both stood quiet for a few minutes, focused on Laura's favorite childhood meal. The only sounds were the crunching of our teeth against the cookies and the clicking of the spoon against the glass bowl. For such old friends as ourselves silence wasn't uncomfortable. On the contrary. We could seat beside each other for hours without saying anything and not feel the need to speak, or to fill the air with meaningless small talk. Not because we didn't have anything to say, but because sometimes we didn't have to say it.\n\nI knew she was upset. She knew I knew it. She didn't want to talk about it, yet. And she knew that, when she felt like talking, I would gladly listen and do whatever was in my power to help her.\n\n\"Ry,\" She called in a small voice, disturbing the silence. \n\nI looked at her expectantly.\n\n\"What did you and Rocco talk about tonight?\" She asked.\n\nAnd sometimes I lied to her. To protect her. \"Oh, not much. Just man stuff.\"\n\nShe arched a brow \"Man stuff?\"\n\n\"Yeah, you know.\"\n\n\"No, I don't.\"\n\n\"Just-\" Shit. I didn't want to talk about fucking Rocco. \"His business and...you.\" Shit.\n\n\"Me? What about me?\"\n\nI didn't have a way of answering that. I wasn't about to tell her Rocco and I had had a pissing contest over her. \"You're dating him, right? I mean, officially. Exclusively.\"\n\n\"Yes. I suppose I am.\"\n\n\"But,\" My next words would stir shit out and maybe start a discussion I shouldn't want to have. \"He lives in France, doesn't he?\"\n\n\"Well, we,\" She frowned. \"We've talked about how we can make it work.\"\n\n\"Long distance?\"\n\n\"There's no other way, Ry.\" Her voice betrayed some guilt. The same guilt I had heard the night she told me about wanting a child. \n\nI locked my jaw, literally biting down on my tongue. Problem is, I never knew when to say what I had to and when to shut up. \"I thought you didn't believe in long distance relationships, Ells. It didn't work for you before, remember?\"\n\nShe gave me a hurtful look, as if I had slapped her. \"It was different back then Riley.\"\n\nIn the interval that took one second to become another, we were 21 again. Quarrelling the way we did when I could've shutted her up with my mouth.\n\n\"Different? What was different?\" \n\n\"I was younger. I didn't know better.\"\n\n\"And if you'd known better?\"\n\n\"I didn't.\"\n\n\"But what if you had?\"\n\nShe proudly held her head back, pointing her chin at me. I braced myself for her next words, half expecting them to throw more wood into the fire and give me a reason to throw my resentment at her face. Why him? Why are you trying it with him and didn't try it with me? Why?\n\n\"Did you, Riley?\" She asked. \"Did you know better? It takes two to tango.\"\n\nWith reluctance, I admitted she was right. I could've tried harder too. I, even more than her, could've have changed things by simply telling her. \"Yeah. I guess we were just a pair of dumb kids.\" I said, giving up.\n\nShe reached for my hand, squeezing down on it. \"Water under the bridge, Ry.\"\n\n\"Yeah.\" Troubled waters, tough. Probably under a broken bridge, too.\n\nTaking the spoon, Laura stuffed her mouth with too much ice cream. A strategy to avoid more talking. I was being an asshole. She was already tired and upset and I was only making it worse.\n\n\"What did you think of Sue?\" I asked for the sake of curiosity, as well as to change the subject.\n\n\"What?!\" She startled.\n\n\"Suzanne,\" I repeated. \"What did you think of her?\"\n\nShe grimaced, avoiding my eyes. \"Oh. She's nice. Very pretty.\" \n\n\"Nice and pretty?\"\n\n\"Yeah.\"\n\nA little poisonous joy winked at me. Was it jealousy I heard on her words? From what I had seen, Laura had behaved as a perfect hostess to Sue, but she had worn fake, forceful smiles all dinner long. She wasn't the jealous type, had never been, but maybe Suzanne had changed that. Maybe she was jealous after all. Sophia herself had hinted at that possibility. I had to restrain myself from entertain the notion. I liked the idea of Laura's jealousy too much for my own good. \n\n\"We had a nice talk tonight. Sophie and I, I mean.\" I clarified when Laura gave me a puzzled look. \"Been awhile since I chatted with Soph. She's still crazy, uh?\"\n\nLaura's face lit up the way it always did whenever she talked about her sister. I had always been a little envious of their relationship. Being adopted, I never had any siblings myself. Laura was, in an incestuous way, the closest thing I had to one. \"Crazier, I'd say. It worried me a little when I saw you two talking.\"\n\n\"Yeah, she gave me an advice.\"\n\n\"Oh, oh. I smell trouble.\"\n\nI smiled without humor, wondering what were the odds of Sophie being right about the time I still had. \n\nYou will never know unless you tell her, Riley.\n\n\"I thought I should listen to her. It worked the first time.\" I made that decision right there as I spoke the words. \n\n\"First time?\" Something in my tone must have alarmed Laura, because her voice lost its bantering mood. \"What did she say to you, Riley?\" I didn't answer her, internally panicking for a second. Should I tell her? I have to now. No way out. \"Ry?\" She called again.\n\nThe ice cream bowl lay forgotten on the floor. The chocolate was melting, turning into a warm, liquidish cream. The cookies swimming in it.\n\n\"Do you remember my 30th birthday party?\" I blurted, bringing my eyes to level with hers.\n\n\"Are we really going to remember every damn birthday we had? That's like 70 between the two of us.\" She had her eyebrows raised and a fibble smile in her mouth. I had shifted into a different mood, though. I had to grab the sudden burst of courage -or madness- that had hit me before it left me. \"I remember tequila shot number 3, then...then I remember the next morning. Waking up. Your bare white ass was the first thing I saw.\" She said, her smile fading.\n\n\"Did you put weed on the cake?\" My question made her laugh again, though I hadn't meant to be funny. It was a simple curiosity I've had for years.\n\n\"Well...Maybe. I might have mistaken it for vanilla.\"\n\n\"Don't you remember what you said to me?\"\n\n\"Ahh...\" She frowned, looking at me like I was crazy. \"Happy birthday?\" \n\n\"No, Ells. Before.\"\n\n\"Ry, I ate a lot of cake.\" Again, she laughed a weak, unconvincing sound. \"I...I remember nothing, buddy. Sorry.\" \n\nI remembered everything. I would, very likely, never forget what she'd said to me that night. And for at least a couple of years I believed she remembered it too. But that had only been wishful thinking. Somehow I knew that, if she had remembered what she'd said, I wouldn't be needing to have the talk I was about to have with her.\n\nI turned to her, took one of her hands in mine and, like a man about to jump off a ledge, I told her what I should've told her 5 years ago, surprising even myself. \"You said you loved me.\" She didn't express any particular emotion at that. She didn't understand what I meant, so I made it clearer. \"You kissed me and you said you loved me. I tried to stop you, but you said you loved me, Ells. And you meant it. How could I have fought against that?\"\n\nShe started to shake her head. \"No, I don't...\"\n\nEvery other chance I came across, I had allowed to slip away through my fingers because, deep down, I knew I'd have another. I knew she'd come back to me. She always did. But this time there was Perfect Rocco. I couldn't bear to be her friend while he lived the life I wanted beside her. I wouldn't just sit and listen to her tell me she had fallen for him. That she loved him. I couldn't let that happen.\n\n\"Listen to me, Laura.\" I moved even closer to her, our thighs touched. She flinched, brown eyes terrified. \"I'd hate to lose you, but I won't spend the rest of my life wondering what if. I know my timing is awful. I'm sorry to do this to you now you've met Rocco, but I just can't lose my fourth chance. I have to do this.\"\n\n\"Fourth chance? What are you...?\" She shook her head again. She looked more than confused. Lost. Like she couldn't believe she was actually awake. My courage wavered for a second there.\n\nIf you don't tell her this time, Riley, you won't have another chance. Tell her. Lose her or win her, just tell her.\n\nI looked down at our joined hands, swallowing dryly. Earlier, as I parked my car in front of her house, the last thing I imagined I would be doing was what I was about to do. Now I had to do it. I had to. It was an urge so strong, so raw I wouldn't have been able to resist it even if I tried. It was also terribly selfish and wrong. But I had to do it. I was aware of the great, and very real, possibility that I might lose her faster this way than if I actually waited for Rocco to sweep her off her feet, put her over his shoulder and take her to fucking France, or Italy or whatever it is he's from. \n\nBut I was going to lose her one way or the other, wasn't I? Wouldn't it be better to lose her knowing that I had at least tried? That she at least knew she had another place to run? Another option?\n\n\"I used this time away from you to think things through, and it almost drove me crazy not to see you everyday.\" I breathed deeply, staring intently into her eyes so she would know I was serious. \"Rocco seems like a nice guy. He sure is perfect, but I'm me, Laura. I'm Riley. I've always been here. I'm the one who's always been by your side, I'm the one who's...\" I paused, taking a breath before letting the words out. The words that would change everything. The words that might win me, or lose me, the love of my life. \"I'm the one who's been in love with you for twenty years.\"\n\nShe was so still I wasn't sure she was breathing. \"What are you sa-\"\n\n\"I love you, Ells.\" I said. \"Like I always have. And I'm asking you to, please, come back to me. Let me be the guy by your side 5 years from now. Let me be the father of all the children you want to have. I don't care if you want to have ten of them, I'll do it. Just let me do it. We're us. We're Riley and Laura. We belong together.\"\n\nMy throat was dry like the desert as I waited for her reaction. She was silent for what felt like an eternity. \n\n\"You...you...\" She sputtered\n\n\"Yes.\" \n\n\"But, Ry...you never...you...\"\n\n\"I love you, Laura.\" After the first jump, the rest was easy. I could've said it a million times over. \n\nHer hand was still in mine. She retrieved it, leaving mine feeling clammy and lonely. \"Wh-Why now? Why are you saying this to me only now?\"\n\n\"Because this time I might really lose you.\"\n\nHer brows gathered together in a look both sad and disoriented. \"You would never lose me, Riley. Never.\"\n\nI smiled wanly at her. \"Yeah, I would. If I just sit here and watch I'll lose you to Rocco, and I won't do that. I can't do that.\"\n\nLaura got up to her feet, needing to grab the edge of the marble counter to do so. I remained on the floor, watching her as she paced back and forth. She stopped, pressed the heels of her hands to her eyes and groaned. The sound was deep and angry.\n\n\"Why didn't you tell me the other day, Riley?!\" She yelled. \"When I told about wanting a steady relationship with someone? Fuck! Why didn't you tell me while you were fucking me through all those years?! Why the fuck didn't you tell me that when you came back home??? I would've left thim for you!\" She sucked air in through her mouth making her whole body shake. \"Why now? WHY?!\"\n\nShe was, understandably, mad. Of course she was. She had the right to be. It wasn't her fault it took me almost fifteen years to tell her I wanted her back. Once I had already made my bed I had to lie in it, though.\n\n\"I got scared.\" There. I voiced it. The truth. \"I didn't know you were having those kinds of thoughts. It just scared me how serious you were. It made me realize I didn't have much time. And I always thought you loved Jordan!\" From where I sat on the floor, the view I had was of a larger than life Laura. She glared down at me like a giant from a greek myth. \"As for the sex,\" I continued, standing to my full height. \"I just...That way I could have you, Laura. I was afraid to say something and lose that as well as the best friend I ever had. I was afraid to scare you.\"",
        "And you think she isn't scared now?\n\nShe rubbed a thumb and a forefinger on her eyes, exhaling tiredly. \"What about Suzanne, Riley? What about Rocco?\"\n\n\"Suzanne is an incredible woman. But she's not you.\" I had just dropped Sue off at her apartment. Technically, I was still seeing her, but now here I was, professing my love for another woman. Jerk move, yes, but I had to do it. This time I had to or else I'd lose Laura for good. And I had a feeling that losing her this time, and to Rocco, would mean losing my best friend as well as the love of my life. I had been a yellowed back idiot for long enough. \"And Rocco? You don't love him, Ells. You know you don't.\"\n\nLaura's eyes were wide and glossy. I could see the lump in her throat moving up and down as she tried to swallow it. It was her turn to say something, I had already done my damage.\n\n\"Ry\" She risked one single step my way. \"I'm not the same anymore. I'm not that 15 year old girl you fell in love with. I'm not the 21 old girl you used to date.\" She said carefully, treating her words like they were made of glass. I had known her for long enough to understand what she was trying to do. She was trying to convince me I didn't know what I was talking about. \n\nMy feet advanced me towards her. She stood still, until she decided I was close enough. She held up a hand and I froze in place. \"I know that. I know that, Ells.\" I said, carefully. \"I'll always love that girl. Always. But she and I broke up 14 years ago. Now, I love this woman you've become. Not the girl you were. Not the girl who loved me back. But the woman who said she loved me on my 30th birthday and almost went crazy with jealousy over Sue today. You. Not her.\"\n\n\"I wasn't...\" She started, then gave up whatever it was she was going to say. She turned her back to me. I saw her shoulders lifting, her body shaking slightly. I heard her sniffling, and the heavy breath she exhaled. \"Riley, I can't...This is just...\" She spun around to face me, crying. \"It's too much information to process, Ry. It's too much for one night.\"\n\nI felt an overwhelming urge to put my arms around her and hold her to me. \"I know. I'm sorry about all this, but I had to do it, Ells.\" I had just dropped a bomb on her lap. The least I could do was explain it to her, then give her time to try and understand it. Think it over. \"I tried to control it. I thought that if I just didn't say it out loud, that if I tried to get involved with other people I'd forget about you eventually. But it only made things worse.\"\n\n\"Ry, I had no idea you were...that you felt...\" She laughed very loudly, but the sound was humorless, miserable. \"That you felt all this things!\"\n\nThe ticking of the clock on the wall was uncommonly loud. I saw that I had been in her house for almost two hours. Funny, I thought to myself, how the hours always dragged themselves when I was with her. To give me more time with her, maybe. More time to say what I just had.\n\n\"Look, I think you need some time to think about this. You need to rest. We can talk more tomorrow.\" Leaving her for a few seconds, I walked to her living room, where I had left my phone. When I came back she was wiping her tears with the backs of her hands. \"I think I better go now.\" I said.\n\nShe just nodded, standing as far away from me as the width of her kitchen would allow her to.\n\n\"Alright, I'll leave you alone. Bye.\" I made to leave the same way I had come. I was already outside, in her garden, when I heard her call me. I turned around, all hopeful.\n\nMaybe this will like those Hollywood romantic bullshits. Maybe she's calling to tell you she loves you too and you'll wake up in her bed tomorrow.\n\nShe took the few steps necessary to close the space between us with painful cautiousness. She put her arms around me, resting her head on my shoulder. The contact was the last thing I expected. I stood rigid for a few seconds then I fully hugged her back, registering the warmth of her body against mine. She pulled away too soon. \"I do love you, Ry.\" She said. \"Like crazy. You know that, don't you?\"\n\nShe didn't mean it the way I wished she had.\n\n\"Yeah.\" I kissed her forehead. \"I know you do.\"\n\nIn a move I didn't anticipate, she took both my hands in hers, fixed her big, doe eyes on mine and said, in an unmistakably supplicant tone. \"I'll see you tomorrow, right? You won't disappear again, will you?\" I heard a million insecurities implied in her words. \n\n\"I wouldn't even if I wanted to, Ells. I don't think I can anymore.\" I told her. \n\nShe hugged me again. \"I'm sorry, Riley.\" She said, her voice muffled in my shoulder.\n\n\"It's not your fault, Ells.\" The fault was all mine, and I had to own it.\n\nThis time, I was the one to pull away. \"Go to bed, Laura. You need to rest.\" I said. \"And lock this goddamn door, for fuck's sake.\"\n\n\"I will.\" She said giving me a sad smile. \n\n\"Bye, Ells.\"\n\n\"Bye, Ry.\"\n\nFor fear I might lose her, I hadn't told her I loved her in the past. Now, because I had told her, I might lose her anyway. Walking back to my car I wondered if it was possible to lose the same thing twice. Specially considering you never had it to begin with.\n\n*****"
    ],
    "authorname": "Nanaya",
    "tags": [
        "best friends",
        "interracial",
        "romance",
        "black woman",
        "white man",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-fundamentals-of-friendship-pt-02"
}