{
    "title": "The Old King and the New Bride Ch. 02",
    "pages": [
        " Hello, again! Nice of you to come back! As you can see, I've used the story same title for each chapter of the story. Much easier to find, isn't it? Anyway, I hope you've enjoyed reading about poor Michelle's adventures so far. I know I enjoy writing them (with a little help from my friend, Matt), so take a seat and read on.\n\nChapter 2: Queen of the Underworld. . . Finally\n\nDad and I sit in the hard plastic seats of the stadium, cheering the teams on with the rest of the crowd. It's a beautiful October afternoon, and dad's scored some prize tickets to postseason game. It's the Padres versus the Astros, and the Astros are getting crushed. The stadium is huge; it's packed to capacity and people are going nuts over every play. Even the announcer is hyper today.\n\nI've got a hot dog in one hand and a Coke in the other, alternating between watching the game and inhaling my food. Dad's opted for a cold beer and a plate of nachos. We watch the game closely, waiting for that magical moment when the underdog rises from the ashes and dropkicks the winning team.\n\nI love this. It's the only time I get to spend some quality time with my dad. Usually, he's out of town on business, but he makes up for it every month by taking me to games and trying to beat me at air hockey. For a businessman, I've got a freaking awesome dad.\n\nI turn to smile at him. He's beaten me to the punch, grinning at me with his signature smile and warm hazel eyes. My eyes. I smile back through a mouthful of hotdog, excited and relieved to be here. We're alone for a few precious hours. Just us and the teams fighting for our attention. It's a rare treat.\n\nThere's a crack down in the field. As we've guessed, the Astros are starting to gain ground. It's only the sixth inning. They still have time to catch up...\n\nCool fingers brush my shoulder. Warm breath tickles my ear.\n\n\"Michelle.\" \n\nDad's phone goes off. Hi's smile fades and he rolls his eyes as his fishes his blackberry from his pocket. His infamous scowl has arrived as he answers the phone.\n\n\"Yes?\" He pauses. \"Hello, honey.\"\n\nI drop my head and scowl at the dirty stadium floor. Of course it's mom. Who else would call at four in the afternoon because she's feeling lonely? God, she's so needy! I'm surprised that she's even able to watch us walk out the door before having another false alarm. \n\n\"Yes, yes I know.\" Dad's as irritated as I am. \"Lisa, we've talked about this. Michelle and I have one day a week where we get to hang out together. We'll be home in a couple of hours.\"\n\nI set my food aside and cup my chin in my hands. I love my mom, I really do. I mean, she's my mom. But she has a fantastic ability to ruin every single good time I'm having with my dad. Today's interruption is especially irritating: dad's just come home from a business meeting in Boston, and it's our first father-daughter quality time in two months.\n\n\"Lisa, please calm down. This is a tradition we've had for years. Please don't ruin it for us.\" \n\nOut of the corner of my eye, I notice dad has caught sight of me. He's seen my scowl, my eyes. He knows how upset I am. He's been dealing with mom's behavior since long before I was born. How he stands it, I'll never know.\n\nDada takes in a deep breath. \"Lisa, I'm sorry! I'm not going to rush home and waste time I could be spending with our daughter on another one of your panic attacks. We'll see you at home!\"\n\nHe disconnects the call and shuts his phone off, grinning at me. I'm smiling so wide my face should be splitting in two. He's managed to grow his spine back and shut mom's neediness down for the moment. I'm elated.\n\n\"What did she want?\" I can't help but be curious.\n\nHe shrugs. \"She said Mrs. Hoppen was harassing her again. Wanted me to come down and talk to the old lady.\"\n\nI roll my eyes. \"She does know that if she'd stop stealing all of her tomatoes, Mrs. Hoppen would stop complaining.\"\n\nDad gives a wicked smile. \"Somehow, I don't think she cares.\"\n\n\"Michelle.\"\n\nThe fingers become more insistent, traveling down my shoulder and spinning teasing circles around my breasts. I groan and shift slightly, rolling onto my stomach so I can dream in peace.\n\nThere's another crack of the bat. The batter goes flying down the line, racing past the first baseman and rounding the corner to second.\n\n\"Why do you think-\"\n\n\"Your mother complains about fighting with neighbors when she's the one who starts them? No idea, kiddo.\" Dad sighs and picks up another nacho. \"It's something about your mother that's driven me nuts for years.\"\n\n\"Then why don't you get divorced?\" The question comes out before I can stop myself. I'm horrified, and I clap my hand over my mouth and hang my head.\n\nDad's silent for a moment. \"Is that what you want, Michelle?\"\n\n I'm almost in tears. \"No. I'm sorry, I-\"I can't even finish. I'm grounded for sure.\n\n \"Hey,\" Dad loops his arm over my shoulder. \"It's okay, kiddo. I know what you're thinking.\"\n\n\"Michelle.\" Those cool hands slide under my body and cup my breasts gently.\n\n I groan softly. \"What?\"\n\nIcy lips press against my neck. \"Time to get up, my queen.\"\n\nI groan louder and bury my face in the pillow. \"Why? It's only eight.\"\n\nMusical laughter echoes in my ears, wrapping around my mind and caressing it awake. \"You only wish. It's nearly ten.\"\n\nTen? Shit.\n\nAnother chilled kiss brings me further into the waking world. \"Believe me, I'd love to stay here in bed with you, my dear. But there are things that need to get done. The faster you get up, the faster we can do them, and the faster we can go beck to bed.\"\n\nI give a muffled sigh. \"Fine.\"\n\nI roll over and push the thick blankets off my body. My body's still groggy, so my motions are slow and jerky. Still, I manage to wriggle out of my husband's enticing embrace and push myself up. I roll my neck, setting my vertebrae back into place.\n\nI feel the bed shift behind me. Seconds later, Lucifer walks into my line of sight, smiling at me with bright eyes. I'm still slightly stunned by him; I don't think I'll ever get used to how he looks. He's just as beautiful as he was yesterday, all chiseled perfection and glowing splendor. I could be married to him for a thousand years and never stop being entranced by him.\n\n\"Let's get you dressed.\"\n\nHe walks over to an enormous carved oak armoire that's been pressed up against the far wall. He grips the twisted iron handles and flings the massive doors open, revealing endless racks of clothing inside. A menagerie of dresses and corsets line the inside, all of it silk, lace and leather. Fit for a queen of the damned, I suppose.\n\nLucifer starts rummaging through the forest of clothing, tossing elaborately tailored gowns and perfectly acceptable corsets aside. I sigh and push myself off the bed. He's never had a queen before, maybe not even a girlfriend, so having him dress me will most likely end in disaster. I need to intervene before he tries to clothe me like a cheap hooker. Or worse.\n\nI slip off the bed and step lightly onto the tile floor. I take one step towards him and wince in pain. Fuck, I'm sore! All that magnificent sex last night rendered my body almost useless. Who knew losing your virginity like that could be so painful later? I bite my lip and straighten my spine. I have to fight through this. If I don't, my clothing choices will be reduced to nothing.\n\nI take one tentative step after another, slowly but surely closing the distance between us. Finally, after many aching minutes, I stand just behind him, watching as he tosses more inadequate clothing aside. His wings shift slightly with every twist and turn of his shoulders, the muscles of his back flexing gloriously as he seeks out my attire for the day. A small spark ignites in my belly, and I have to clamp down on my cheek to stifle the burn.\n\nEasy, tiger. Have patience.\n\n\"What are you looking for exactly?\" I scan the growing piles of discarded clothing. \"You're rejecting a lot of stuff.\"\n\nHe still, and turns to look at me. \"Some thing appropriate for a queen.\"\n\nI glance back at the piles of luxurious fabrics. \"There's a lot here that could fall into that category.\" \n\nHe glances down and grimaces. \"Not what I'm looking for.\"\n\nI sigh. \"Here, then. Let me help.\" \n\nNodding, he steps aside. I step forward, wincing as I do, and start sifting through the remaining racks of clothing.\n\n\"Sore?\" he chimes in my ear.\n\nI huff slightly. \"No thanks to you,\" I tease.\n\nOne cold palm caresses my ass, making me jump then shiver. \n\n\"Careful,\" he whispers. \"I'll put you in much more discomfort if you cop and attitude.\"\n\nI scoff and roll my eyes. \"Attitude. I think you could out-attitude me every single day.\"\n\nHe smacks my ass, making me jump again. \"True, but still uncalled for.\"\n\nI reach down and brush his hand away. If I'm going to be dressed up as his queen, I need to concentrate. I'll never find suitable clothing with him teasing me constantly. \"What exactly did you have in mind for me today?\"\n\nHe pauses, taking a moment to collect his thoughts. \"Something that's regal, yet seductive. You need to be respected, but I still want to see you.\"\n\n\"Regal yet seductive...\" I mumble to myself as I rummage through the racks. \"Quite an interesting order to fill.\"\n\n\"I don't care what it is or how it looks, really.\" He steps behind me, reaches around my waist and cups my breasts again. \"I just want to make sure these are put on display.\"\n\nI have to stop and catch my breath. His touch is icy, but far more seductive than any contact I've ever felt. I shake my head to clear it of all the delicious memories of last night. I can think about those later. Right now, I need to focus. I take another deep breath and dive back into the sea of clothing.\n\nOkay, so he wants a queen who's also eye-candy. Let's see...\n\n\"Do you have a color preference?\"\n\nHe pauses again. \"Nothing to bright or cheerful. You're the queen of the underworld. There's not much to celebrate here.\"\n\n\"Okay. That eliminates anything yellow, green or orange.\" I start pushing anything that's light and cheerfully colored aside. \"Anything else?\"\n\n\"Black and red, mostly. We are in the darker part of the world.\"\n\nI nod. \"Any clothing type you're looking for? Dress? Corset?\"\n\nI feel him shrug behind me. \"Don't care. As long as I have a fair view of your tits, I'm happy.\"\n\nWell, at least he's direct.\n\nI sift through the racks again, feeling as if we're getting nowhere. There's tons of beautiful stuff here, but nothing that fills his requirements. I sigh and start preparing to let him have a shot. I stop suddenly when my eye catches something in the back. Curious, I reach into the racks to get a better view of my score.\n\nWhat I pull out is incredible. It's a floor-length ebony silk ball gown with red lace panels at the sides and black lace bell sleeves. The dress is nearly backless except for a few corset-style lacings of red velvet that weave through small silver hoops. The front is cut deep, the opening spearing nearly half way down the bodice. Along both sides of the cut are several silver grommets held together with slender chains. It's a beautiful piece, with just the amount of sex appeal he's looking for.\n\nScore! \n\nI squirm out of his embrace for a second time and spin around so he can see my find. \"How's this?\"\n\nHis gold eyes widen an inch, and a sly smile crossed his perfect lips. \"Where was that when I was in there?\"\n\n\"In the back,\" I shrug.\n\nHis smile widens another inch. \"Yes, that will do perfectly.\"\n\nI give him a sarcastic half-smile. \"Only because my boobs will be spilling out.\"\n\n\"Indeed.\" He's grinning now. \"Shall we get you dressed?\"\n\nI raise one eyebrow. \"I have a choice?\"\n\nHe smiles. \"The easy way or the hard way.\"\n\n\"Easy.\" I don't even want to think of what the hard way might entail.\n\nHe reaches forward and grabs the dress from my hands, and I watch as he methodically unties the velvet laces in the back. A second later, he holds the dress out for me, opening the back and lowering it so I can step in. It looks like a tight fit, so I grip the edge of the armoire to steady myself as I slide one leg, then the other, in. He carefully pulls it up my body, pausing so I can slip my arms in the sleeves.\n\nAnother gentle tug and I'm nearly dressed. I hold the front of the dress to my chest as Lucifer steps around behind me to tie the back. There's quite a few silver hoops to be threaded, so I have to stand perfectly still for longer than I'd hoped. \n\nIt doesn't take too long, though. He pulls the ribbons through the last hoop and ties the off, tapping my shoulder to let me know he's finished. I drop my hands and spin around once. The skirt of the dress flares out a bit as I twirl, making me feel like a little girl again. Lucifer is grinning at me, though I'm sure it has to do more with the amount of cleavage showing than my childish freedom.\n\n\"Would you like to see?\" he asks.\n\nI nod, and he grips my hand and leads me to an enormous freestanding mirror framed by dark carved wood. He gently ushers me forward so I can see myself as a queen for the first time.\n\nThe woman in the mirror looks like me, but she's far too regal looking to actually be me. Her dress is perfectly fitted, hugging her every curve to perfection. The deep cut in the front of the dress barley contains her enormous chest, but the slender silver chains that hold the front together help a bit. Her soft hazel eyes are offset by the blacks and reds of the dress, her dark curls almost blending in with the fabrics.\n\nDamn...I look good!\n\nLucifer steps up behind me and loops his arms around my waist. He pulls me back against him, pressing his cold chest against my bare shoulder blades. His lips caress my neck as he stares at me in the mirror. \n\n\"You look delicious,\" he whispers against my neck.\n\nI tremble from his touch, but manage to regain my balance. \"Thank you.\" I glance down at his ripped jeans, the only clothing he's wearing. \"Nice of you to dress up.\"\n\nHe scowls softly at me in the mirror. \"These are my good jeans.\"\n\nI raise my brows. \"Your good jeans?\"\n\nHe shoots me a triumphant smile. \"You should see my bad ones.\"\n\n\"No. I'm scared.\" I'm just barely able to hold back my smile.\n\nHe gives me a playful jerk against the waist. \"I'll show you another time. Right now, we have to get going.\"\n\n\"Oh? And where are we off to?\" I tease back and rock my hips so they grind against his abdomen.\n\nHe laughs softly in my ear. \"No teasing. We have work to do.\"\n\nHis restriction prompts me to play. I swing my hips once more, savoring his soft groan. \"Why not?\"\n\n\"Because I'll toss you onto that bed, fuck you till you stop breathing, and ruin your dress.\" His voice is low, threatening yet irresistibly seductive.\n\nNot a bad proposal...\n\nHe pulls away from me, cutting off my blossoming sexual fantasies. He is right, though. He's the king of Hell, so there must be tons of mundane things he has to do. Maybe the fuck-you-till-you-can't-breathe part should be saved for a later time.\n\nHis icy hand grips mine, gently tearing me away from the mirror, he leads me toward the elaborately carved door, opening it with so much grace and ease it almost seems impossible. He steps back, allowing me to pass through before him. He follows closely behind me, slamming the door closed behind us.\n\nThe monstrous hall is as empty as before. It's lighter now, with rays of warm sunlight pouring in from the glass panel ceiling. The flames in the sconces have been extinguished, and the arctic wind that usually owl through here have lessened a bit.\n\nLucifer steps up to me, then proceeds to lead me down the hallway. \n\n\"Where are we going exactly?\" I ask distractedly.\n\n\"The main foyer. It's where all the important stuff happens.\"\n\nI nod. \"I didn't know there was so much bureaucracy here. I thought you died, got sentenced, and burned.\"\n\nHe laughs. \"Well, yes. That's the main basis of things, but there is a form of paperwork. We have to keep track of who people are, why they're here, where they go. The usual read tape.\"\n\n\"You also seem very...diplomatic,\" I say quietly.\n\nHe turns to me cocking his head. \"Me diplomatic? How so?\"\n\n\"Well,\" I start, \"I haven't seen you fly off then handle or incinerate anyone yet.\"\n\nA dark smile crosses his lips. \"Yet.\"\n\nWell, he's got a point there.\n\n\"So what's on the schedule for today?\" I try to divert his mind elsewhere.\n\n\"A whole list of things. I've got deals to make, meeting with royalty to arrange... And then there's your presentation.\"\n\nShit, I'd forgotten about that. Tonight is my official indoctrination into my place as Hell's queen. I'll be watched by every demon, damned soul and fallen angel in this place. My gut twists slightly, and I start praying to myself that I don't royally screw it up.\n\n\"Deals?\" I ask.\n\nHe nods. \"Yep. That's where we're heading right now, there's a group of human here to see me and possibly sell their soul in exchange for my word.\"\n\nI glance up at him. \"So, who are these people?\"\n\nHe sighs. \"They're everyone. Princes, farmers, popes, peasants. I get a different mix every day.\"\n\n\"And what do you do with them?\"\n\n\"Deals, mostly. Though I'll admit, the exchange rate isn't too good here.\" He offers sly smile.\n\nI scoff. \"Oh, yes. A marriage into the royal family in exchange for three hundred years of servitude or your daughter. That sounds like a wonderful bargain.\"\n\n\"She'll pay her debt sooner than you think.\" His voice is low, and there's a wicked gleam in his eye.\n\nI nod. \"The demons who came to collect me said she wasn't getting off so easily.\"\n\nHe shakes his head. \"She isn't. The deal is in her name, not yours, so she still has to pay despite your welcome substitution.\"\n\n\"Why do you do that? Make people do stuff like what my mother did? Is it a rush?\" I ask as calmly as I can. It seems so vicious to trick people into paying off a debt they can't afford.\n\n\"No, it's not exciting for me. It's the way of the world. People will always sacrifice one thing for something else. They just need to have the right circumstances.\" He shrugs his muscular shoulders. \"I don't make people do what they do. I just give them the opportunity to do it. And then I run them through the ringer for it.\"\n\nI short softly. \"You're awful.\"\n\nHe gives me a wicked grin. \"It's who I am and what I do.\"\n\nThe end of the hallway comes quicker than I'd thought. Just a few feet ahead of us, two massive twin doors signal the entrance to they foyer. They're nearly thirty feet high and elaborately carved with more dancing demons and screaming souls. There are gems and thick bands of silver and gold imbedded into these doors, giving them a more regal presence that the ones in the hallway.\n\nAs we approach the, they swing open, welcoming us with open arms to the main meeting area. Already, I can hear the thunder of demonic voices and the tinkle of succubae laughter. I'm nervous about going inside, frightened that one of these hellions won't approve and attack me for being a human. I slow my pace a bit, trying to prolong the inevitable, but Lucifer presses a hand to my back and urges me forward through the doors.\n\nWe're greeted by a mass of demons milling about the colossal room. Each wall is nearly a hundred feet long and set with huge slabs of veined marble. More Greek columns extend up towards a plate-glass ceiling that lets in rays of warm sunlight. An enormous set of carved granite stairs stretches across the back wall. Two carved stone and iron thrones await us at their peak. \n\nIt's very much like the great halls of the kings of old, but much more sinister.",
        "In the center of the room is a considerably large group of humans, maybe thirty at least. They're dressed in a variety of clothing, from the fine linen of the wealthy to the torn rags of the destitute. They're here to see my husband and barter their soul for a promise. My heart breaks for them. They'll never get out of that bargain even if they tried.\n\nI'm lead towards the thrones, the sea of demons parting as we walk. They bow their heads in respect to us, even me. My gut tells me they have to; either they bow or they burn. The humans notice us as well, scurrying back as we pass by and ducking their heads to avoid my gaze. I avoid their gaze, my fear of being judged as a traitor suddenly bursting to the surface.\n\nAs we make our way to our thrones, I spot Leyna standing beside the far wall, chatting away with a group of succubae. I suppress a grimace. That man-eater is annoying as shit. She's conceited, vain and relentless when it comes to my new husband. She's been trying for centuries to catch his attention, and hates me because I caught it instead of her. If I weren't queen, I'm sure she'd try to kill me. \n\nLeyna sees me as we draw closer to our seats. She shoots Lucifer an overly-flirtatious smile. He answers with a dark glare. She giggles girlishly and brushes aside his rejection, a response that literally drives me nuts. When she spots me, her spine straightens and a look of enraged jealousy comes over her face. That makes me smile. It's nice to know that having my status as queen is enough to piss her off and keep her in her place.\n\nWe climb the steps of the staircase, with Lucifer right at my side. The thrones he's commissioned are quite beautiful actually, if you're willing to look past their dark presences. They're made of solid black iron, twisted and sharpened in accordance with Lucifer's own eccentric tastes. A multitude of black spikes radiates out from the crests at the top. The backs and arm rests are encrusted with jewels of every color and shape. Thick velvet seats have been sewn in to make sitting a bit more comfortable. They're a perfect blend of opulence and wickedness.\n\nLucifer steps aside and lets me sit first. I sweep the gown around me feet as I sit, smoothing the skirt over my knees. I hear the soft squeak beside me as Lucifer takes his own seat. He leans over to one side of the chair, resting an elbow on the armrest and cupping his chin in his hands. He stretches his free arm out and flicks his fingers at the mass of demons surrounding us. \n\n\"Out!\"\n\nThe herd of demons turns to him for a second, then scatter in all directions from the room. The chamber empties in seconds, leaving only the small group of humans behind. Two armor-clad guards stand behind them guarding the main doors. As the last of the demons exit, I catch a glimpse of Leyna leaving the hall. She whips her head around, gives me one last withering glare, then vanishes.\n\nI roll my eyes and focus half-heartedly on the humans that are left. I try my best to ignore Leyna, but her constant jabs and stares are starting to get on my nerves. My rational mind begs me to talk to Lucifer and see if he can put out a restraining order on her, but my own personal ego won't allow it. I don't want to go crawling to my husband at every mean word and nasty glare aimed towards me. That will make me look like I can't handle holding my ground as a queen. If she wants to fight me, then she can.\n\nThe hall is completely empty now except for me, Lucifer, a few guards and the mass of humans. The huddle together slightly, terrified to be here and to be standing in front of my infamous husband. If I was them, I'd be freaked out, too. But I'm not. I have a different perspective than they do being married to him. It's a bit like living in a glass house: they're on the outside looking in, and I'm on the inside looking out. Our perspectives will never match.\n\nLucifer turns to me and smiles softly. \"You can tune this out if you want. It's all selling souls and making promises.\"\n\n\"You should have told me to bring a book.' I smile back.\n\nHe snorts a laugh. \"I could find other ways to entertain you.\"\n\nI pause, pondering the prospect. I reject it, though. As much as I look forward to another round of mind-blowing sex, I'm no exhibitionist. I have no intention of having these poor souls watch me fuck minutes before they make a deal.\n\nMight put a bad taste in their mouth.\n\nI flick my eyes to the small crowd. \"Later.\"\n\nHe sighs and nods. He turns his attention back to the crow of humans. \"Which of you is first?\"\n\nThey shift uncomfortably, looking at one another as a sense of horror envelops them. My heart breaks for them. They have no idea what they're getting into. I want to warn then, to jump out of my seat and yell for them to run away, but I hold myself back. Get between Lucifer and the acquisition of new souls? Even for a queen, that's suicide.\n\nFinally, an old fisherman steps up to the plate. He's a wizened old scarecrow, with sunken black eyes, thin lips and a full grey beard. Time has not been on his side.\n\n\"Your name?\" Lucifer asks thoughtlessly.  \n\nHe coughs for a moment, then answers in a harsh, raspy voice. \"Michael Hasen.\"\n\nMichael...oh, boy. This won't go over well.\n\nLucifer nod politely. \"And what's your request, Michael?\"\n\n\"The catching's been slow this year. Those damn sea pirates on the Wendigo are catching every crab in the ocean. There's almost nothing left for my crew!\" he cries.\n\nThat's it? That's why you're selling your soul?\n\nI sigh and turn my attention to the elaborate stained-glass window above us. People are nuts.\n\n\"Michael, you know I can't just create more crabs in the ocean. That would upset the natural order of things.\" As if I really care about keeping order.\n\nHe nods vigorously. \"Yes, I know. But can't you do something?\"\n\nLucifer nod. \"I suppose the Wendigo could have a minor accident at sea.\"\n\nMichael's beady eyes light up. \"That would save my ship!\"\n\nAnd screw you into the ground, old man. Oh, you poor baby.\n\n\"You're really ready to sell your soul just to have your competition knocked out of the race for a few months?\"\n\nDo you really have to ask?\n\nHe nods again. \"My ship and my crew are all I have. If we lose this, we'll have nothing.\"\n\nLucifer stares at him impassively. \"You do know the price for having me do this for you?\"\n\nHe drops his head. \"Yes, sir. It's a risk I'm willing to take if it means saving my business and my men.\"\n\nMy heart twists again. Oh, this poor old fart. He's selling his soul for a few years of good fishing so he and his crew can survive. Not for power or money or sex, just to survive. I stare harder out the window, doing my best to ignore the situation. If I keep watching, I'll break my silence and try to scare him off so he can save himself.\n\nLucifer smile at him. \"Consider it done, then.\"\n\nMichael perks up, staring at us jubilantly. \"You're certain?\"\n\n\"Of course. When have I ever backed out of a deal?\"\n\nThe old man breathes a sigh of relief. \"My God. Thank you, sire.\"\n\nI keep my smile plastered to my face as Lucifer waves him out. He turns to me as his next victim steps forward. \n\n\"How are you?\"\n\n\"Fine. A little bored. But fine.\" I'm lying through my teeth, but I don't want him to see the pain this causes me.\n\nHe shrugs. \"There's a lot of boredom with this part. Yes?\" He turns to face our next customer.\n\nThe next couple of hours pass by quickly, albeit heartbreakingly.. Darren, a father of two sick girls, bargains his soul for their cure. Natalie, a lonesome secretary, wants the looks of a supermodel. Brian, an underappreciated employee, wants his corrupt boss chucked out the top window. It's tiring, really, having all these people walk through our doors just to help themselves to something more. At least Darren had a noble reason to sell his soul. The rest just wanted what they themselves were too cowardly to chase after.\n\nFinally, the last customer steps up. He can't be older than twenty four and he's quite the looker, with full lips and bright green eyes. Dressed in an immaculately tailored navy suit and black tie, I'm sure he makes quite the impression on women. His short blond hair is plastered to his head with two gallons of hair gel, his nails are cleaned to perfection, and there's not a single blemish on his face. He's every part the shark he's perceived to be. What could he possibly want from my husband?\n\n\"Your name, boy?\" Lucifer calls out.\n\nThe young man looks indignant for a moment, then regains his composure and clears his throat. \"Bradfield Pellistar, sir.\"\n\nWell, that's a high-born name if I've ever heard one.\n\nLucifer has a similar reaction, but only shows his feelings toward the man in his eyes. The rest of his face is warm and welcoming. \"And what deal did you plan on making today?\"\n\nBradfield gives a sly grin. Those bright green eyes find me, narrowing as he focuses in. my gut twists slightly. I have a bad feeling about this one.\n\nHe laughs, a move that actually surprises me. \"Nothing that the others would want. No wrecked ships, no superhuman looks, no dead bosses. I make enough, and look good enough, not to worry about those things.\" He smiles, showing of two rows of perfectly straight teeth.\n\nCocky little bastard. What's he after?\n\n\"Again, Bradfield, what's your deal?\" Lucifer's as irritated as I am by his attitude.\n\nHe shrugs. \"Something out of the ordinary, I suppose.\"\n\nLucifer scowls. \"How so?\"\n\nHe smiles again. \"I've noticed your pretty little friend.\"\n\nOh no.\n\nI flick my eyes to Lucifer, my stomach twisting tighter as I do. There's a look of horrified outrage on his flawless face, something I'd never thought could exist. He looks ready to launch himself at this cocky little wannabe politician, but he manages to hold himself back...just.\n\n\"You're referring to my queen, I suppose?\" He grits his teeth.\n\nBradfield's eyes light up. \"Queen? I never read about you having a queen in the Bible.\"\n\nLucifer narrows his already burning gaze. \"New addition to the family.\"\n\nBradfield's smile grown an inch. \"Well, that certainly makes things a bit more interesting?\"\n\nHe's caught my attention now, and I'm just as curious as Lucifer is to know what he wants. At the same time, I'm scared to find out.\n\n\"Interesting in what way?\" Lucifer's words are methodically chosen.\n\nBradfield shrugs. \"Royalty's always a better score.\"\n\nOh, he's fucked now.\n\nI look at Lucifer to see his reaction. I can practically see steam pouring out of his ears.\n\n\"A better score?\" My husband's composure is held together by some glue, a lick and a promise.\n\n\"They're harder to get to, so getting the chance to fuck any royal, even one from the underworld, is a great achievement.\" His voice is smooth, his tone even. He's done this before. \"And by the looks of your queen, you've scored in the fucking department.\"\n\nLucifer takes a long, slow breath. I can see him nearly shaking from rage, but he holds it back. I can understand his fury. As much as I appreciate the compliments, I'm not interested. Men like that make my skin crawl. That, and I'm really not in the mood to get incinerated by a jealous husband because someone else touched his toy.\n\nLucifer manages a small smile. \"Quite lovely, isn't she?\"\n\nBradfield grins back. \"Got a hell of a chest on her.\"\n\nWell, aren't you subtle?\n\nFor a moment, Lucifer's able to calm down a bit. He glances at me, his eyes flicking down to my generous cleavage, then back up to my face again. \"I'll have to agree with you on that. She's got a fantastic rack on her.\"\n\nI smile back shyly. An idea pops into my mind then: a playful, devilish idea that will drive this unwelcome guest nuts. I decide to go for it. I feign absentmindedness and pluck at the chains that hold the front of my dress together. The action causes my breasts to giggle a bit, making my more-than-generous cleavage all the more enticing. From the corner of my eye, I watch Bradfield's eyes widen in shock.\n\nLucifer catches on almost instantly. He smiles back at me, a glint of mischief in his hypnotic eyes. He's as tired of this asshole as I am, so blowing off a little steam by making him squirm will help both of us.\n\n\"Alright,\" he whispers. \"Let's play.\"\n\nI smile back, and he reaches out to caress my face. His touch is icy, but calming. \n\n\"How is my queen doing? I hope you're not too bored with this process.\"\n\nI shake my head. \"I'm fine.\"\n\n\"Are you sure?\" He stars at me intensely.\n\nI start to answer, then stop. His fingers have gone from arctic to hot, and the heat is spreading over my entire body. I'm not sweating at all, and there's no alarm bells ringing in my head, so I'm technically fine. I'm confused for a moment, until I start feeling uncomfortable in my gown. I'm sweltering now, and I long to undo the chains at the front and relieve myself...\n\nI almost burst out laughing. I know the game now, and I'm more than in the mood to play along.\n\n\"I am feeling a little warm. Would you mind if I cooled myself off a bit?\" I ask in the most innocent voice I have in my arsenal.\n\nHe grins at me. \"Of course, my queen! I wouldn't want you to feel uncomfortable in your new home.\"\n\nI smile back shyly, the lean back from his touch and settle into my seat. My high school drama classes kick in, and I start acting like it's July back in Phoenix. I tug at the top chain of my dress, happy that it comes undone relatively easily. The front of my dress pulls apart another inch, revealing even more of my awesome cleavage. Is grin to myself and look down at our unwelcome guest.\n\nBradfield's jaw has smashed through the tile floor.\n\nLucifer turns his attention to Bradfield. \"Now, where were we?\"\n\n\"Dear sweet God,\" he whispers.\n\n\"Mister Pellistar?\" Lucifer feigns annoyance.\n\nThe young leech shakes his head a bit, tearing his gaze from me and reluctantly going back to my husband. \"Forgive me, sir. I just-\"\n\nLucifer waves his hand. \"It's nothing. She can be quite an exhibitionist at times.\"\n\nI smile back, toying with the free chain.\n\n\"Now then. What was the deal you wanted to make?\" Lucifer leans forward an inch, gazing at the man with barely contained joy.\n\nBradfield manages to center himself again. \"With all due respect sir, I was wondering if I could make a deal about your queen.\"\n\n\"A chance with my queen? Why on earth would I allow that?\" There's a sly smile on those perfect lips. He's relishing this.\n\nBradfield's gained his balance again, and his cocky attitude has resurfaced. \"I figured, since she's going to be stuck here with you for so long, she might need a bit of real company.\"\n\nLucifer's smile fades replaced by another scowl. Bradfield's made the fatal mistake of accusing Lucifer of being a less-than-passionate lover. From what I've experienced so far, that's a damn lie. But now he's set himself up for annihilation, and as annoying as he is, I don't want to step over a giant bloodstain every time I walk in here.\n\nThe asshole shrugs. \"I only figured she might like a real man have a chance at her. Who knows how long it's been since she's had a good, long fuck. Maybe she'll actually enjoy-\" He stops and stares at me.\n\nI've unclipped another chain on my dress, my chest now nearly bursting out of the fabric.\n\nWhoops. Silly me.\n\nLucifer turns to look at me, the first hints of a smile touching his lips. \"Michelle!\" he admonishes me sternly. \n\nI look at him, genuinely afraid I've gone too far with this game. \n\nHe gives me a look of exasperation. \"We have a guest! Control yourself a little.\" \n\nI drop my head and pout, convinced I'm screwed up. From the corner of my eye I catch him staring at me. We lock eyes for an instant, and he smiles softly. His gaze slips down to the third chain of my dress, then back to me. I catch his game and smile back, reaching down the play with thin metal hook cautiously.\n\nHe grins, then looks back at Bradfield. \"Forgive her. She hasn't learned to control herself around others.\"\n\nBradfield shakes his head. \"It's no trouble at all.\"\n\nLucifer's warm tone disintegrates. \"For you it is.\" He rises from his chair, glaring down at the mortal below him. \"You come into my house, insult me, upset my queen, then demand a night with her?\"\n\nOur adversary takes a step back. \n\n\"You honestly thought that I would ever allow a maggot like you to even touch my queen?\" he roars. \"How dare you, you insignificant little piece of sewer shit!\" \n\nBradfield has stumbled backwards, nearly tripping over his own feet. He's staring at us, petrified with fear. Although it serves him right, I know Lucifer is nearly about to lose control and kill him. I rise up from my own chair and race toward him, catching his arm just as he starts to descend the stairs.\n\n\"Lucifer, don't!\"\n\nHe turns to look at me, confused fury in his eyes. The fury is for Bradfield, the confusion is for me.\n\n\"He's a stupid young man,\" I try to calm the situation. \"He's an idiot with an oversized ego and a tongue that isn't attached to his brain. He's insulted us, yes. But let this be a lesson to him so he can gain a few brain cells.\"\n\nLucifer's rage has eased a bit, and Bradfield has steadied himself again, grateful for my intervention.\n\n\"Let him go. He doesn't have to be killed just because he's pissed me off. I've dealt with hundreds of jerks in my life and you haven't killed any of them.\" I grip his arm a little tighter. \"Please. Give him one more chance to knock a few of the rocks out of his head so he can learn.\"\n\nLucifer sighs and looks away fro a moment. \"Fine. He can go.\"\n\n\"Thank you.\" I let go of his arm and lean into kiss his cheek. I turn to glare at Bradfield. \"And you! The next time you come down here, have an actual deal for us instead of wasting our time with your pathetic insults. Go!\"\n\nHe nods and scrambles backwards, racing out the main doors of the room and never looking back.\n\nLucifer pulls me back to our seats. He collapses into his, staring up at the ceiling, annoyance still marring his flawless face. I take my own seat and collapse into it, still reeling from having to save that jerk's ass. Still, the games we played with him were hilarious. Seeing his face when I undid that last chain was perfect.\n\nI start laughing, cupping my face in my hands so I can muffle the sound. Lucifer stars laughing, too, a musical sound that resonates off the marble walls and wraps around my skin.\n\n\"So my little queen has a just hand!\" he calls out. \"Oh, Michelle, you're something else.\"\n\nI lean back in my chair, barely able to breathe. \"That was fun!\"\n\n\"Yes, the cocky ones are always a joy to fuck with.\" His voice is lighter now and I'm relieved that he's calmed down.\n\n\"Oh!\" I drop my hand to my sides and stare up at the ceiling. \"I want to do that again! That was such a fun game!\"\n\n\"Every day, my dear. There's one of them every day.\"\n\n\"And his face!\" My laughter starts all over again.\n\n\"That was a cruel little trick you pulled.\" He looks over at me. \"I don't know if he'll ever get that image of our tits out of his mind.\"\n\nI smile back innocently. \"Poor baby. And you had to watch, too.\"\n\nHe sighs and leans back in his chair. \"I got a fantastic view.\"\n\n\"You're welcome,\" I grin.\n\nHe looks back at me, his eyes bright. \"You keep those two top chains undone.\"\n\n\"Why would I ever put them back?\" I ask. \"It's way too hot here to ever have my dress fully closed.\"\n\nHe laughs again. \"Good.\"\n\n\"What now,\" I sigh.\n\n\"We wait.\"\n\n\"For?\" I'm curious. Why wait for anything? We rule the place don't we?\n\n\"Your presentation. You're going to be officially inaugurated tonight. The staff is finishing up the last few details now, so all we have to do is wait for a few hours and we can start the show.\"",
        "A flurry of nerves rushes through me. \"What will I have to do?\"\n\nHe shrugs. \"Just recite a few coronation words and stand still so everyone can see you. I'll be presenting you, and no one is going to challenge me, so you don't have to do much.\"\n\nA bubble of laughter escapes me. \"Leyna might.\"\n\nLucifer shorts. \"You have a point. Though there's not much she can do about it.\"\n\nI lean forward in my seat, turning to stare at him. \"You're sure?\" \n\nMy voice is shakier than usual, but for good reason. Leyna's rubbed me the wrong way since the day we met. She always looked like she was out to get me, even before my marriage to Lucifer was announced. If she's going to attend my coronation, I want a guarantee that she can't come after me.\n\nLucifer sits up straight in his chair and turns to stare at me. \"I know what you're thinking. That woman is a man-eater if there ever was one. She's been after me for centuries.\"\n\nYeah, kinda figured that with the way she was flirting with you back there.\n\n\"So why haven't you ever taken her? She's gorgeous, powerful... God, Lucifer, you could do anything to her and she'd never complain.\" \n\nThere's a mixture of jealousy, curiosity and protectiveness swirling inside me. I want to know why he's never taken her up on the offer; at the same time, I want to protect what is mine.\n\nHe shrugs. \"She's just never appealed to me. None of those women have. Don't get me wrong, she is gorgeous, but she's not really my type.\"\n\nOh?\n\n\"And what is your type?\" Me, please say me.\n\nHe smiles. \"You. Someone innocent and sweet. Someone I can corrupt and make completely my own. You've got almost no experience here, Michelle. That's exactly what I want. I want to show you my world, to make you my queen, to have you whenever I feel like it.\"\n\nOh. Not the most flattering answer in the world, but at least it keeps Leyna off his radar.\n\n\"You're...welcome?\" I chew my lip, unsure if there's even a reasonable answer to a statement like that.\n\nHe grins at me. \"More than welcome.\"\n\nI lean back in my chair, relieved. So he's not attracted to Lenya at all. That's good. Point number one to my team. \"Anything you want to do for the next few hours?\"\n\nHe's still for a moment, his brow creased in concentration. I stare at him silently, suddenly regretting my decision. He could say anything, maybe suggest we go for a swim in the boiling rivers below us or take a ride on one of those freaky-ass mine cart rides they have at carnivals. God, he could even ask me to sing!\n\nOr...more sex, maybe?\n\nI relax a little. Okay, so that wouldn't be too bad of an option. \n\nSuddenly, he launches himself from his seat, spinning around and grabbing my wrists. He jerks me out of my seat and starts to drag me down the steps. There's a wicked smile on his lips and a mischievous glint in his eyes.\n\n\"I take it you have an idea.\" I say as we stumble down the steps.\n\nHe grins at me. \"I want a bath.\"\n\nA bath? How random can your mind get?\n\n\"A bath,\" he calls out as we enter into the main hallway. \n\n\"Seriously? A bath?\" I ask.\n\nHe turns to me and smiles. \"With you.\"\n\nAh, yes. Another chance to see me naked.\n\nI'm dragged down the hall a lightening speed. The mass of demons milling about barely have time to dodge out of the way. They try to bow in respect, but we've flown past them by the time they dip their heads. I'm fairly sure Usain Bolt couldn't have caught up to us if he tried.\n\nWe reach our room in record time. Lucifer grabs the handle and throws the door open, nearly ripping it off its hinges. He pulls me inside and slams the door behind us. He slams his hands together once, and a flurry of my personal maids comes rushing in. They literally run through the walls and screech to a halt, staring at him with wide eyes.\n\n\"I said a bath!\"\n\nThe girls take off, leaving us alone. Lucifer grabs me by the shoulders and spins me around. I can feel his fingers fly against my back as he rips the laces apart. He pulls the back of my dress away, pushing down on the shoulders so it slips off my skin. He ushers me out of my dress, picking the heaps of fabric up and tossing it on the bed. \n\n\"Sire,\" one of the girls has returned. \"Your bath is ready.\"\n\n\"Perfect. You may go.\" \n\nHe steps forward and scoops me up in his arms. The action throws me off balance, and I wrap my arms around his neck to steady myself. He carries me across the room to another set of double doors. They're carved with swirling, twisting flames engulfing enormous oak trees. As we get closer, they swing open on their own, revealing Lucifer's private bathroom.\n\nThe bathroom is another work of art. The floor is made of grey marble interspaced with slabs of multicolored coral. The walls are marble as well, with panels of carved granite slabs mixed randomly within. There are no Grecian columns here, but towers of solid rock carved into the shapes of demons stretch up to an elaborately paneled glass ceiling. A massive plate-glass window stretches along the far wall, giving a lovely view of the Fire Pits below.\n\nA lone tub stands in the middle of the room. Carved from a single slab of black onyx, it's large enough to hold three men. The fixtures are solid silver, and the carved feet of the tub have tiny silver claws imbedded in the rock. The tub itself is already filled with steaming water.\n\nHot damn! I could get used to this.\n\nLucifer walks over to the tub, holding me just inches away from the steamy surface. Gently, he lowers me, dipping me slowly into the water. It's almost heavenly. I groan softly as I sink in, leaning my head back against the rim.\n\nLucifer pulls his hands away, letting me float in the water. I hear the sharp snap of his zipper and the soft rustle of denim, feel the first gentle ripples in the water as he joins me. The water rolls around my skin as he settles in, sitting across from me and grinning like a madman. His wings flare out around the edge tub, the tips barely brushing the floor.\n\nHe lifts one of his hands, crooking a long finger at me. I smile and nearly have to swim across the enormous tub to reach him. His hands wrap around my hips and he pulls me into his lap. I feel his cock twitch against my thigh and it makes me jump. His hands slide up my back, pushing me forward as the climb. My breasts are crushed against his bare chest, and a flurry of delicious shivers races through me. I follow his lead and lean in. He mirrors me and tilts his head up, capturing my lips with his.\n\nWhat follows is exactly what I've been craving: a good, long, eat-your-face-off make-out session. Our hands are everywhere at once, and I feel an insane desire to stay here for the next ten years. It's one hell of a combination: hot water, deep kissing, hands everywhere...mom would have fainted if she saw this.\n\nLucifer pulls away suddenly, grinning as he holds me close. \"God damn, woman! You've got a fantastic rack one you.\"\n\nI smile shyly. \"Thank you. They're my pride and joy.\"\n\nHis grin turns wicked. \"What are you?\"\n\nI shrug nonchalantly. \"36D. Homegrown and silicone free.\"\n\n\"Fuck, I've scored.\" He cups my chin in one hands and stares into my eyes. \"Leyna's only a 34C. You've beat her by a mile.\"\n\nI smile proudly. I've beat Leyna in the boobs department, too. Michelle, two. Leyna, zero.\n\nHe chews his lip for a moment, and I can see the gears spinning in his head. \"You have the perfect body for a titfuck.\" His eyes have gone misty.\n\nI blush. \"Seriously?\"\n\nHe nods slowly. \"Damn straight. You'd be perfect.\" His eyes flick up to me. \"Interested?\"\n\nI pause, pondering the question. I've only ever watched a titfuck once, and it was in some crap porno movie. It looked amazingly fun, but I never thought I'd be any good. Of course, this was way before my hormones exploded and blessed me with the chest I have now. Back then, I looked like a damn boy. Still, the prospect always seemed exciting and new, something my rebellious teenage brain craved.\n\n\"Possibly,\" I murmur.\n\nHis eyes light up a bit. \"Come here.\"\n\nHis hands slide up to my shoulders and he pulls me forward. I relax against him as our bodies are melded together, resting my head on his cool shoulder. His hands caress my back slowly, and I'm so comfortable here it's almost frightening\n\n\"Michelle, I have no doubt that you've heard a few tales of my less-than-spotless reputation,\" his voice is soft, almost strained. \"You need to know that most of what you hear is true. I am the rebellious son who turned against his father and became the cruel, manipulative, vengeful tyrant your pastors know and love. I am ruthless, I am selfish, I am a lair.\"\n\nI freeze, my heart nearly skipping a beat. He's bearing his soul \u2013 or what's left of it \u2013 to me. Knowing his past, it must be agonizing to admit his faults to another person. I stay quiet, not wanting to ruin what may actually be his confession.\n\n\"Contrary to what you may have been told, I do feel guilt. I feel remorse everyday for what I've done to my father and my brothers. I feel like shit every time I think back to the happier points in my existence, because I know I've ruined them.\" He takes a long ragged breath, and I can almost feel the tears that must be welling up inside him. \n\n\"But I feel rejected. I've apologized endless times to my father, and he turns his back to me. My own brothers refuse to look at me, and it only deepens the wounds I already have. It seems like the more I try, the less they accept me.\"\n\nI sigh softly and reach around to stroke his shoulders. My poor husband. Rejected by his own father and brothers for not adhering to one rule. They're more screwed up then my family.\n\n\"I suppose all that rejection left me bitter and angry. Angry enough to want to prove my dad wrong. To show him the humans were weaker and more volatile than us angels. So I became a tempter, a trickster, a stealer of souls to show him how flawed your race was. And I was right. You're very easily seduced by money, power and sex.\"\n\n\"Why are you telling me this?\" I mumble against his skin.\n\nHe sighs. \"You must understand. I never meant to become like this. I only did as an act of retribution for being cast aside. But I am the monster I have created, so I do my best to make sure I do my work well.\" He takes another shaky breath. \"I am a liar and a trickster, but I will never lie or trick you, Michelle.\"\n\n\"Why not?\"\n\nHe sighs. \"Because you've given me a chance to prove myself. I need that, I need someone to stand beside me and help me when I fall. To help me stand up again and brush off the old dirt and bad blood that's clung to me for centuries. I need you. Hell, I'll risk it \u2013 I love you. And for that, I promise I'll do my best to be a good husband.\"\n\nHis soul session has rendered me speechless. To hear someone of such a dark, disgraceful caliber tell me about all the bad things the he's done and gone through...my heart actually aches for him.\n\nI take a deep breath and center myself. Slowly, I push myself away from his tight embrace. I kneel up in his lap, staring at him and chewing my lips. He stares back, concern and pain in his golden eyes. I've never seen him like this, never imagined he could have an expression fill with so much fear and worry. God, he's an enigma.\n\nI reach out and cup his face in my hands. \"Listen to me. I do know your reputation, and I only know a few pieces of your life story. And I'm sure what I've been told has been watered down or simplified.\"\n\nHe gives a weak smile and nods.\n\n\"I'll be honest, I am scared of you. Of who you are and what you do for a living. I'm constantly pestered by thoughts that you'll turn against me or leave me for someone who's better than me or isn't human.\"\n\nHe shifts, rising up an inch, his eyes wild. \"No, Michelle, I-\"\n\nI press my fingers to his lips and shake my head. \"I'm still a little afraid of you, but I've been with you long enough to know you're not just anger and misery and hatred. You've got love and loyalty and empathy in you somewhere. It's been buried for a long time; you've covered it up with all your pain and anger, but it's there. Stuff like that never leaves.\"\n\nHe settles back against the tub, watching me silently with slightly warmer eyes.\n\nI take another deep breath. \"This wedding was never my choice. If I had my way, I'd be back in my room studying for finals and planning Kelsey's birthday with my friends. But I'm here with you, and I'm honestly willing to give you than chance you need. I'm willing to stay here with you and give you the support you need. I'm willing...I'm willing to try loving you for who you are if you're willing to do the same.\"\n\nI exhale loudly and sit back in his lap. I've said my piece, so the ball's in his court now.\n\nLucifer's vibrant smile returns, he reaches out a hand and cups my cheek. \"How did I get you?\"\n\nRelieved, I smile back and shrug. \"By screwing over my mom, I guess.\"\n\nHe stares at me, offended. \"I did not screw her over! She backed out!\"\n\n\"That's not what she's going to say,\" I counter. \n\nHis smile returns. \"True. Your mother does have a habit of spinning the truth a bit.\"\n\nAn idea comes to my mind. \"How long do we have until my ceremony?\"\n\nHe pauses, thinking. \"An hour or so.\"\n\nNodding, I slide off his lap and scoot back to the far edge of the tub. He watches me with dark, confused eyes. I respond with my own brand of a devilish smile. I crook my finger at him, beckoning him over. He laughs and obliges eagerly, crawling across the length of the tub towards me. I grin and spread my legs as he crawls closer, welcoming him as his icy body presses against mine.\n\nHe settles in against me, pressing his cool chest against my breasts. His dark wings flare out around the tub, cloaking us in half-shadow. He grins down at me, so painfully handsome and powerful it's hard to imagine I can call him mine. Smiling, I reach up and loop my arms around his shoulders, casually stroking the tender skin at the nape of his neck.\n\n\"We've got an hour.\" I slip down another inch and hook my knees over his hips. His cock presses hard against my inner thigh. \"Make it good.\"\n\n\"Yes, ma'am.\" He bucks his hips forward, driving into me with all his might.\n\nI tilt my head over the rim and gasp sharply. God, that feels good! I suddenly don't care if he's evil or manipulative. All I care about is how he feels against me, how his body manages to set mine on fire. I tighten my legs around his waist, preparing myself for the delicious onslaught that's coming.\n\nHe doesn't disappoint. He shifts into the motions immediately, slamming his hips against mine with brutal force. I cry out and squeeze my eyes shut, savoring every thrust and pull he has to offer. My hands slide to his shoulders and clamp down, holding him in place as he forces his way in.\n\nPleasure swirls in my head, making me almost giddy. I love this. I crave this. I never want this to stop. Oh, this is fantastic! Exactly how I'd pictured it in my fantasies. There's also a benefit to this kind of raw, savage sex. It's a great way to release a lot emotion tension while losing yourself. Of course, that's not the only reason I initiated this little game. I've been drooling over him for hours, and this is the perfect way to satisfy my ravenous libido.\n\nA good, sharp thrust along the inner wall of my pussy send me reeling. He's found that perfect little target that send me spinning in circles, and I intend to milk this moment for all it's worth.\n\n\"Oh, God!\" I say the word without thinking. \"Yes, that's it! Right there! Ooh, right there!\"\n\nAbove me, Lucifer laughs and tilts his hips an inch higher, driving his cock against me sweet spot. I cry out sharply, begging him to continue, pleading for him not to stop. He never does, and keeps that pace going until my bones start to melt and my minds starts spinning.\n\n\"Sire!\" A deep, thunderous voice yells from outside the bathroom door.\n\nNo! Damn it, go away!<br> Lucifer never falters, slamming into me despite the interruption. \"What?\"\n\n\"The queen's coronation is in forty minutes, sire.\"\n\n\"Leave!\" He growls in annoyance. \"Interrupting this for a fucking time check?\"\n\nI dig my fingers into his shoulders. \"Doesn't...matter...don't stop.\"\n\n\"As you wish, my lady.\" He grins and quickens his pace.\n\nI lose my breath for an instant; a thunderstorm of bliss blasts through me so hard it knocks me off balance. My grip on his shoulders slips a bit, and I have to claw at his skin to regain my equilibrium. Lucifer smiles at me and reaches down to grip the small of my back with one hand. He lifts my hips another inch, and another bolt of fire races up my spine.\n\nCatching my balance again, I lean my head back over the rim and close my eyes, relishing in every thrust and pull he makes. I moan his name softly, and I feel a shiver run down my spine when he laughs in response. He lowers his lips to mine, inducing another round of ravenous kissing. I don't know how I was ever scared of this creature. He's a lover and a fighter. How could I ask for more?\n\nHe gives one final thrust and I'm lost, screaming into his mouth as my body tenses against him. A burst of fireworks explodes in my head, rendering me incoherent and oh-so-relaxed. I melt into the warm stone of the tub, warm, calm and damn satisfied. I want that again, but I'm too exhausted to ask.\n\nLucifer follows in my footsteps, giving one final thrust and burying his face in my neck. I can feel his muscles tighten under my fingers as he comes, spilling his seed inside my tiny, fragile body. I don't know how I'm able to take him. He's huge and thick as a damn tree trunk. This is the second time we've fucked and it takes almost no effort for my body to welcome his. I hope I never lose that skill.\n\nSeconds later, he collapses on top of me, tearing our mouths apart so we can breathe. His cheek nuzzles my neck softly, and I respond by running my hands up and down his leanly muscled back. My fingertips glide over his smooth skin, feeling the rippling and twitching of the iron strength beneath. God, even here he's perfect.\n\nHis cool lips press against my neck. \"That was fun.\"\n\n\"Yes, it was,\" I whisper. \"I'd ask you to do it again, but I don't think we have time.\"\n\nHe sighs. \"Unfortunately not. We need to get you dressed.\"\n\nCan't I just go like this? Nobody's going to mind.\n\nI know the answer, but I really don't feel like getting dressed all over again. I'm far more comfortable laying here with Lucifer. Honestly, I can't think of a time where I was ever more relaxed and content. I want to be here with him. I feel like I belong here. Maybe there's something to be said about soul mates...\n\nA knock at the door startles me out of my musings.\n\n\"Sire! The queen is to be presented in fifteen minutes.\"\n\nLucifer sighs and pushes himself up, rolling his neck and glaring into space. \"Damn it.\"\n\n\"I know.\" I lean my head back and stare at the ceiling.\n\nHe pulls away from me, releasing my body from his heavenly embrace, it's almost painful to let him go, but there's no time to argue. I have a presentation to make, and being late, even while being married to Lucifer, won't please anyone.\n\nReluctantly, he steps out of the bath and straightens himself, turning and extending his hand to me. I sigh again and take his hand, using him as a counterweight as I haul myself out.\n\nHe jerks his head towards the bedroom. \"Come on.\" He's as annoyed as I am.\n\nI nod and follow behind him. Idly, I wonder how we're going to be ready in time. My hair usually takes a good hour to dry, so even with a blow-dryer fifteen minutes won't do. I suppose we'll have to head out soaking wet and rosy-cheeked from our few minutes of play.\n\nWon't that be subtle? I'll bet they'll never guess.\n\nAbsentmindedly, I run my hand through my hair and stop. It's nearly dry already! Even my body is starting to dry off. I look down at the floor, seeking any kind of answer. I find it. I watch one drop of water slide off my finger and onto the tile. It dissipates immediately into the marble, never leaving a trace of its existence behind.",
        "That is awesome.\n\nThe closer we get to the bedroom, the dryer we get, until there's not a drop left by the time we exit the bathroom. Lucifer makes a B-line for the bed, and I follow after him eagerly. I may not get to stay naked with him, but my peep-show dress with be more than enough to make me feel desirable.\n\nHe pulls my dress off the bed and turns to me, holding the lacings open so I can step in. I place my hand on his shoulder for balance as I slip into the fabric, grateful that he's so patient with my human clumsiness. I help pull the dress up, holding it in place while he laces me into the fabric. \n\nHe sweeps my hair away from my face, letting it cascade down my back. \"I've always liked it down. Makes you look less rigid and icy.\"\n\nI scoff. \"Icy and rigid my ass. I'm the sweetest, kindest thing you've ever met.\" He steps up behind me, looping on hand around my waist and the other cupping my chin. \"And with a mouth to match,\" he whispers. \n\nI giggle. \"You're welcome.\"\n\nWe're interrupted yet again. \"Sire!\"<br> God damn. Go away already.\n\nLucifer growls behind me. \"Yes, we're coming!\"\n\nHe steps away slowly, his hands lingering on my waist for an instant. We're both very annoyed, but there's nothing we can do mow. My coronation starts in just a few minutes, so we need to haul ass to get me there on time.\n\nLucifer's icy hand grabs mine, gently pulling me towards the door. \"Come on, your majesty,\" he winks. \"Let's get you crowned.\"\n\n\"After you, your highness.\" I smile back.\n\nI follow eagerly, holding onto his hand for dear life as we race out the door and towards my new beginning. Or my doom.\n\nWe race down the now empty hall, with Lucifer practically dragging me down the corridor. It might be easier for me to just let my feet slip and have him haul me the rest of the way, but my legs won't listen and I try to keep pace with him. We zip past the numerous door that line the hall. The doors of the foyer open just in time to let us in before slamming shut. Skidding to the right, we bolt through another set of doors and down yet another cavernous hall. We're moving so fast I'm surprised there isn't a line of fire behind us.\n\nNear the end of the new hallway Lucifer starts to slow down, going from an Olympic sprint to a steady jog. I can keep up with him easily now, and I race beside him and match his pace.\n\nHe smiles sat me. \"Ready?\"\n\nI swallow. \"I guess.\"\n\nHe smiles wider. \"You'll do fine.\"\n\nThe hallway dead-ends into a marble wall. On either side of us in another hallway, slimmer and darker than the ones we've just raced through. Lucifer slows his pace again to a leisurely walk and steers me into the left hall.\n\nIt's nearly pitch black in this hall; no sun-lit windows or welcoming guards to show us the way. The only light comes from the soft flicker of the sconces embedded into the marble. The lights make our shadows dance and sway as we walk, making it seem as if they don't really belong to us. At the end of the hall I can see a hulking guard demons standing beside another carved wooden door, but I can't make out the design. Beyond it, I can hear the growing chants of demons and damned souls as they await their new queen.\n\nWe stop just outside the enormous door. The chanting is as clear as crystal now: they want us, they want Lucifer, they want to see me. My heart is pounding so hard my ribs start to crack. My lungs have stopped working, and I have to shake myself to restart my breathing before I pass out. I've never been this nervous. True, I'm a teenage human girl about to be presented as the new queen of Hell to hoards of demons, but I've never felt this truly terrified in my life.\n\nI can do this. I can do this. I can-\n\n\"You okay?\"\n\nI jump at the sound of Lucifer's voice. \"Not really.\"\n\nHe smiles at me and brushes a stray strand of hair from my face. \"You'll be just fine. Follow my lead and you'll get out of here in one royal piece.\"\n\nI nod shakily and stare at the door. My fate \u2013 queen of the underworld and wife to Lucifer - lies just beyond that hulking mass of wood. At this moment, it feels more like a guillotine than a door.\n\nHe smiles at me one last time, and then turns to the guard and nods. The guard nods back and turns, grasping the handle of the door. He pulls it open, revealing a red velvet curtain behind it that blocks us from view. Trust my husband to spare no expense on theatrics.\n\nLucifer turns back to me and cups my face in his hands. \"I go first. Taros here will motion when it's your turn.\"\n\nI nod. \"I'm nervous.\"\n\nHe nods back. \"Good. I'd be terrified if you weren't.\"\n\nHe spins on his heels and strides through to door, pushing the velvet curtain aside and stepping through. There's a roar of cheers and screams as demons and damned souls praise and condemn their king. Lucifer starts to speak, his rich voice drowning out the roars of the crowd.\n\nI can't hear what he's saying. My heartbeat is thundering in my ears, drowning out all sound. My breathing is faltering again, and I turn away from the door to collect my self. I do my best to take calm, even breaths, to slow my thinking and ease my twisting stomach. Slowly, my body acclimates to the shouting crowd and the idea of standing in front of demons. This really shouldn't be that hard or frightening. I've already held my ground with Bradfield, haven't I?\n\nThat bastard was more terrifying than mom on a panic bender. If I can handle him, I can handle this. \n\nI feel a soft tap on my shoulder. I turn to see taros staring at me expectantly. He steps back and motions toward the door, bowing his head respectfully. I nod and curtsey in response, the n turn and take tentative steps toward the curtain. I pause just before it, listening to my husband speak to the crowd and taking a few last calming breaths.\n\n\"I am ecstatic, elated actually, to introduce our new queen!\" he roars to the crowd.\n\nThey cheer back at him, announcing their excitement.\n\n\"On your knees, worthless maggots, and hail your new queen!\"\n\nTaros gives me a gentle shove. I straighten my spine, square my shoulders and pause the edge of the curtain aside. I stride through the velvet shield, entering a world of celebration, wonder and pain.\n\nI step onto an enormous white granite balcony, almost five feet wide and fifty feet long. The banister has numerous posts of marble carved into the shapes of various demons and succubae. To my right, Lucifer stands at the edge of the balcony, grinning g at me broadly and holding out his hand. I smile back and step forward, taking his hand as he leads me to face the waiting crowd.\n\nBelow me is the infamous Fire Pits, an endless desert of liquid fire rivers and screaming souls. A swarm of demons and succubae kneel on the banks of the rivers, staring up at me expectantly. They're seated accordingly, with the highest ranking demons and fallen archangels knelling closest to us. Behind them, the princes of Hell's many torture circles, followed by their children and the lower ranking demons. Kara and her lovers are in the fourth row, grinning up at me with true honest joy. Claire and her demons are in the row behind them, all giving me the same elated expression.\n\nI smile back, relieved to see a few people I know here. I feel slightly less alone.\n\nI pause suddenly, peering out into the crowd. Within the row of human servants, hiding amongst the virile beauties and lithe young men, is my mother. Dressed in rags and chained to iron hoops in the ground, she's taken one hell of a fall from her previous position as a member of royalty. On her arm, I see a brad emblazoned into her flesh, a twisting, swirling mark of black and gold that denotes a servant of Lucifer himself. \n\nI almost giggle at the irony. Two days ago, she marked her status as part of English royalty. Now, she kneels amongst other damned souls, doomed to serve the royals who live here. Man, karma's a bitch.\n\nLucifer turns to me, tapping my shoulder so I snap back to reality. I turn and face him, nearly getting lost in his infectious smile and bright eyes. He's so excited he's almost giddy. I'm certain that he'd be bouncing right now if it weren't for the formality of the occasion. I don't think I've ever seen anyone this happy, but with Lucifer especially, it's a wonderful sight.\n\n\"Michelle Harlowe,\" he grabs my hand a lifts it, pressing his palm to mine, \"You now take on the role of the Hellion queen.\"\n\nI nod. \"Yes.\"\n\nHis brows rise an inch. \"You're prepared to take on such a demanding, arduous task? Many human souls have passed through these gates, all thinking they could best me. All have failed. You think you can master such a role?\"\n\nI square my shoulders. \"I can handle it.\"\n\n\"You have one last chance to turn away and renounce your duty here. Will you take that chance?\"\n\nI shake my head. \"No. I will take my place as queen and rule as I see fit.\"\n\nHis grin has nearly split his face in half. \"And so you shall.\"\n\nHe turns away again, leaving me standing completely still and staring blankly at him. He faces me again, holding a beautiful crown in his hands. It's made of solid black iron that twists and winds around itself to form the base. Pure gold leaf and multicolored jewels cover every inch of the black band, giving it some since of royal worth. Thirteen razor-sharp twisting spires rise from the knotted band, each nearly five inches in height and topped with a glittering black jewel.\n\nDamn. Princess Kate, eat your heart out.\n\n\"Michelle Harlowe, I now crown you as the Hellion queen.\"\n\nHe lifts the crown and places it gently on top of my head. It's surprisingly heavy, but nothing I can't handle. I straighten my spine and smile at him, solidifying my choice.\n\nHe grins back and turns to the crowd. \"On your feet, worthless pieces of shit! Show some respect you your queen!\"\n\nThe mass of demons shifts as they stand, each inclining their head s in respect to their master and new queen. The succubae follow their lead, inclining their heads regally. I can see Leyna seething below me, her bright yellow eyes locked on mine. She looks like she's about to explode from rage, and I do my best to suppress my smile. Between me being Lucifer's female preference, my boobs and now my crown, I've beaten Layne three different ways and solidified myself as a worthy adversary. \n\nHuman? Yes. Queen? Fuck yeah.\n\nLucifer grabs my hand and lifts it high, turning me so we can watch as our admirers cheer us on. Once again, I'm sure most of the applause is forced. Their lives are probably at stake here. If they don't perform well, Lucifer might have them tossed into the rivers. I smile at them, silently promising that I will try to treat them with as much respect and kindness as they deserve.\n\nWith one final cheer from the crowd, Lucifer takes my hand and gently pulls me through the curtain and out the door. Taros closes the door behind us, and we fly down the darkened hallway again. Lucifer's dragging me down the hall again, bursting through on room after another and practically leaving a trail of smoke behind us.\n\n\"What's the rush?\" I call out. I don't understand. I'm queen. Why is he so hurried? \n\nHe smiles at me over his shoulder. \"You may have been crowned as queen, but we still have to solidify your status!\"\n\nI stare at him, confused. \"Solidify my stat-\"\n\nMy heart nearly skips a beat. I know that devilish grin. We're going back to bed for round...God, what round of sex are we on? Twenty? I don't care at the moment. All I care about is that we're heading back for another session of ravenous, animalistic sex.\n\nI nearly burst out laughing and regain control of my feet. Lucifer's been running at an easy, steady pace, but the mention of sex has made my body become very impatient. Shifting gears from \"Just been crowned\" to \"Time for bed\", I kick on my afterburners and race ahead of him, grabbing his hand so he doesn't lose grip. As I burst forward, I catch a glimpse of him staring at me in shock.\n\nI shoot forward, now almost dragging him behind me. \"You promised me sex. Let's go!\"\n\nMusical laughter fills the hallway. \"Michelle, have a little patience.\"\n\nI shake my head. \"Not for this! Let's go, you pussy tease! You're making my hormones pissed.\"\n\nI hear his laughter again before I feel his hands on my skin. Swiftly and smoothly, he manages to slide his hands around me and lift my body off the ground, cradling me in his arms as he takes off down the hallway. I burst out laughing and loop my arms around his neck, kicking my feet up and lying in his arms as a flurry of dust is kicked up in our wake.\n\nThe door to our bedroom swings open milliseconds before we rush in, slamming shut in the same amount of time. Lucifer sets me down on the floor and quickly steps forward, throwing me off balance and forcing me to stumble backwards into the cool marble wall. He steps up and braces his hands against the wall, pinning me in place and preventing me from escaping.\n\nAs if I'd actually want to leave. I'm on fire now, my hormones raging deep inside my gut. I want him. No, I need him. My body has been craving this since our bath; the small flickers of flame buried themselves deep inside my head, just waiting to be reborn. They got their wish. My breathing heavy, I launch myself at him and wrap my arms around his shoulders, holding myself in place as his arms slip around me and we start another session of eating each other's faces off.\n\nIt's strange, but I honestly love being kissed like this. It's wild and passionate and unrestrained, like neither of us care about the world around us. A stampede of demonic elephants could charge through our room and we'd never notice.\n\nIcy fingers starts to undo the laces at my back, pulling the velvet threads apart and letting me breathe. I answer back by skimming my hands down the taught lines of his back to the edge of his jeans. I slip my fingers inside the bad, tracing them around to the front and slowly begin to undo his pants.\n\nI fold the edges of his fly over and slip my hands beneath the soft denim of his pants. My fingers glide over the sharp lines of his muscled abdomen. In a moment of pure lust-fueled courage, I slip my fingers lower, following his treasure trail as far as I can go until my fingers are stopped by his tight jeans. Lucifer moans into my mouth and bucks his hips against me. I stifle a laugh and kiss him harder. Knowing I can turn him on like this is one hell of an ego boost.\n\nFinally, his fingers undo the last of my dress laces. His hands slide to my shoulders and push the fabric away from my skin. It pools on the floor as Lucifer picks me up and carries me over to our bed. I cling to his shoulders, hooking my legs over his lean hips. Through it all, our kiss never breaks. It slows, but our lips never separate and our breaths start to coalesce as one. I inhale as he exhales, as if the two of us have become one person in two bodies.\n\nThe cool sheets caress my back as he leans forward to lay me down. He pulls his hands away from me just long enough to slide his pants over his hips. His hands return soon enough, stroking and exploring every inch of me. I mirror him, running my palms over the lean muscles in his back.\n\nIn some rational part of my mind, it feels strange to be kissing and touching this dark, broken fallen angel so passionately. But my irrational heart and body want nothing more. I feel so comfortable lying beneath him, his enormous weight above me, his hands all over me. I feel like more than just his queen or wife. I feel linked, as if by fate we were draw together and connected like this. It's how my heart feels. And it feels good.\n\nShit...I love him.\n\nIt's a blast of dynamite to my once unlovable ego. What was so strong and impassive has melted away and freed the warmth and passion hidden within. I do love him, and he's mine to love all I want. This cold, dark, hollow creature is mine to hold and love and cherish. And I will. I swear I will. I'll treat him like the king he is. Like the ruler his is. Like the lover he is.\n\nHe shifts forward an inch, rubbing his stiff erection against my thing. I smile against his lips and arch my hips, signaling that I have no issues with whatever he wants. He smiles against my mouth, and angles his hips against mine, his cock pressing against my sex. My fingers dig into his skin, and I can barely hold back my excitement. Finally! After all those interruptions in the bath, I need him to relieve me of all this pent-up energy.\n\nHe doesn't disappoint. He takes aim and drives in harder then ever before. It's wonderful, a burst of fire that flies through my veins and melts my bones. My heart is racing and my body rejoicing. I imagine him driving into me like a wildman and sending me high out of Earth's orbit. \n\nHe doesn't go berserk. Instead, he pulls back slowly, leaving me slightly confused and starving for attention. He gives another brutal thrust into me, and more delicious fire flows into my veins. Again he pulls away slowly, forcing me to feel every inch of his cock as it drags against the walls of my pussy. It feels beyond incredible, and I shiver beneath him.\n\nHis slow game is torturous and wonderful at once. It's steady and even, without any hurried franticness or unnecessarily quick finishes. It's the epitome of slow and steady, and it's all I've ever wanted. If I could choose one way to send the rest of my life, this would be it.\n\nSomehow, I manage to retain most of my thinking mend. I decided that while his new sex trick is wonderful, I feel distant from him. Gently, I pull at his shoulders, trying to coax him down to me. He comes easily, his arms collapsing under him as his body settles against mine. He's icy cold, solid as a rock and heavy, but nothing I would ever sacrifice. I can still breathe easily against him, and the feel of his chilled skin against my own is heavenly.\n\nCautiously, I pull my mouth away from his, tilting my head back and gasping for air. My arms encircle his back as he grinds against me. I accidentally dig my fingers in too far and he bucks hard against me, making me lose my breath for a moment. It feels so good I contemplate doing it again. No, his steady, knowing pace feels much better in the long run. I run my fingers over where I clawed him, soothing his cool skin. He responds my nipping my neck and drawing a soft groan from my throat.\n\nDespite his slowness, my body responds quickly. There's already a bonfire burning in my belly, and it's just a matter of time before it explodes. I close my eyes and hold on, biting my lip as more bursts of fire explode inside me. Honestly, I feel like I should be getting arrested. Pleasure like this should be illegal.\n\nMy body erupts before I'm ready, but it's not disappointing. It's a slow burn, coursing through my veins one inch at a time. I bit down on my lip as the fuse burns, then disintegrates. There's no wild screams, no reckless clawing at skin. My body tightens around him as I gasp silently feeling a rush of power and life flow through me, rendering me speechless for an instant. It's beyond beautiful, and I want to lie back and roll around in this feeling forever.\n\nAbove me, Lucifer tenses. He's hushed as well, only letting out a soft groan as he climaxes. I feel the gallons of his seed flow into me, filling me to the brim and solidifying our bond. King and queen, master and mistress, we're bound together in this endless circle of damned souls and dark demons. Just us, and no one else.\n\nHe collapses on top of me, his breathing slow but strained. I giggle softly and run my hands over his back, soothing his chilled skin and thanking him for such a wonderful gift. His hands slide under my back and hold me flush against him.\n\n\"That was good. Different, but good.\" I whisper.\n\nHe laughs against my neck. \"I'm glad you approve.\"\n",
        "I nuzzle his soft hair. \"Always.\"\n\n\"Michelle.\"\n\n\"Hmm?\"\n\n\"Thank you.\"\n\nI giggle again. \"Don't you worry your pretty little head. I'll be right here whenever you need me.\"\n\nHis arms tighten around me. \"Promise me you won't leave.\"\n\nI scoff. \"Like I have a choice?\"\n\nHe laughs again. \"Touch\u00e9.\"\n\nHe sighs and unwinds his arms from my waist, pushing himself up away from me. I stare up at him and smile softly, unbelievably glad that I get to call him mine. Angelina can keep Brad for all I care. I have my own dark angel to sleep with.\n\nSmiling down at me, Lucifer rolls over and slides off the bed, standing up and making his way back over to armoire. I push myself up onto my elbows, silently admiring his ass as he walks. \n\nHe'd look fantastic on a runway.\n\nHe flings open the doors, rummaging through the racks of clothing once more. I wonder what he could possibly be looking for. Another sexy dress, maybe? Or a tantalizing corset? My mind spins with wicked possibilities, and I can hardly wait to see what he picks.\n\n\"Ah! Here we are!\"\n\nHe straightens and kicks the doors closed as he turns back to me. He carries an elaborately carved black oak box in his hands. Black and red jewels are imbedded in the deep cuts of the box, and a small silver latch keeps whatever is inside from flying out.\n\nWhat's this?\n\nHe takes a seat next to me, setting the box down on the bed between us. I watch him carefully, slightly concerned yet fascinated as to what this box is for. He grins and reaches forward, undoing the latch and lifting the lid.\n\nInside, rows and rows of tiny metal rings and studs cover a rich black satin lining. Gold, silver, platinum, even steel hoops are artfully separated according to color, size ad design. Some of the studs are solid metal. Others have small jewels attached to them by chains. Still others have a small gemstone at the very tip. They're all beautiful, but so confusing.\n\n\"What's all this?\" I look up at him with questioning eyes.\n\nThere's a dark smile on his lips, and his eyes are full of mischief and malice. His evil smile never falters for an instant, a detail that suddenly makes me nervous. I pull back an inch, not frightened that he'll hurt me but of what might be going on in that twisted, damaged head of his. This is, after all, Lucifer. He could do anything.\n\n\"Now then, my queen,\" his grin almost splits his face in two. \"About those nipple rings...\"\n\n* * *\n\nAnd that's chapter 2. It's long, but there are a lot of ideas going through my mind and I need someone to dump them on. Congratulations, I've picked you. I hope you like them.\n\nDisclaimer: I am a current college student, which means I must deal with an endless supply of exams, papers and lectures for the next few months. I apologize if I take a long time to type out some chapters, but I promise I'm doing the best I can. Have patience, children. Chapter 3 will be out as soon as I can type it."
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "hell"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-old-king-and-the-new-bride-ch-02"
}