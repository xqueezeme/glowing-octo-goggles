{
    "title": "La Vita Dolce Ch. 11",
    "pages": [
        "The light stung her eyes after staring for hours into complete darkness. Natasha groaned and her arm over her eyes as Colin leaned in her doorway and flicked on the light switch. \"Rise and shine, sweetheart,\" he drawled. She could hear the smile in his voice.\n\nShe peeked at the alarm clock under her arm. The red digital numbers read 5:34am. She pulled the covers up over her head and curled into fetal position. She heard Colin come to stand over her. \n\n\"We're going on a little road trip.\"\n\nNatasha lifted her arm from her eyes and stared up at him dumbfounded. \"You have got to be kidding.\" \n\nColin shook his head. \"C'mon, Tash, up.\"\n\nNatasha nearly snarled at him as she threw back the covers and swung her legs over the side of the bed. She looked up at Colin. \"Does this have anything to do with what you and Gianni were talking about?\" \n\nColin merely shrugged. \n\n\"And you're not going to tell me anything?\" Natasha ventured. \n\nAnother shrug. \n\n\"Fine,\" Natasha said with a sigh as a deep frown marred her brow. She stood brisky and brushed by him, her voice rising. \"Everyone seems content to plan my life for me and keep me in the dark, why shouldn't you join in on all the fun?!\"\n\nShe felt his large hand close tightly around her wrist and she was yanked back against him. The breath whooshed from her lungs as she was crushed against his chest and he glowered down at her. Her mouth dropped open in shock. \n\nHis voice was low, an intensity in it that she had never heard from him before. \"Stop it. This isn't a game and seems you obviously have no idea what's good for you.\" He gave her a small shake. \"Now pack a bag and let's get going.\"\n\nLacey sat in the front seat of the Range Rover and stifled a yawn before she fished into her oversized Fendi spy bag and pulled out a nail file. She tilted her head and examined her nails as she heard a Natasha's high pitched and obviously angry \"NO!\" from the house. Lacey grinned to herself. Things were always more entertaining when Natasha was home. \n\nHer brows lifted as she glanced up as she heard the front door open and saw her brother striding out, a duffle bag in one hand, a struggling and furious Natasha slung over his shoulder. He opened the back door of the SUV and tossed the bag inside. Natasha was dumped unceremoniously in the backseat before he slammed the door behind her. He turned to head back to the house and lock the front door when she opened the door to the SUV to get out. \n\nHe turned and glared at her as he pointed, \"Stay.\"\n\nTheir eyes held a moment, dark azure clashing with light cornflower blue. She frowned, pouted and slammed the car door, slumping dejectedly in the back seat. \n\nLacey didn't turn around but Natasha could hear the smile and laughter in her voice. \"Morning, Tash!\" Lacey quipped brightly. \n\nNatasha grumbled something unintelligible in the back seat as Colin climbed behind the wheel and they pulled out of the driveway. \n\nNatasha watched the city of Los Angeles melt into the distance as they drove north and further inland. Natasha stared bleakly out the window. They drove for hours and hours, the sun coming up and the early hours of the morning turned to midday. Colin stopped only for gas and to get some breakfast for the girls before he continued driving north. \n\nIt was going on ten o'clock when Natasha found herself falling irresistible asleep in the backseat. \n\nShe didn't know how long she slept when she felt the car jolt to a stop. She lifted her head from its uncomfortable position to gaze out the window. Her eyes widened. Tall evergreen trees filled her vision and peeking between the slender trunks was the vivid blue of a lake. \n\nColin and Lacey stepped out of the SUV and Natasha followed. \n\n\"Cool, huh?\" Lacey stretched languorously and nodded to the cabin that was positioned facing the lake. \n\n\"Wow,\" Natasha breathed. To call it a Cabin was like calling a Mazerati a mere sports car. The ski chalet was a massive structure built out of the very trees that surrounded it. It was truly a beautiful house. She almost forgot her anger at Colin keeping her in the dark. \n\nColin was pulling the girl's bags from the car and trudging towards the front door. He unlocked it and the girls followed him inside. The lower floor of the cabin was all one room. A large sunken living room was flanked by a full kitchen with granite countertops. Floor to ceiling windows graced the eating area which overlooked a deck and a spot where the trees had been cleared to offer an unobstructed view of the waters of Lake Tahoe. \n\nColin dropped haphazardly the bags in stone entry way. Natasha glanced at him. He looked exhausted and about ready to pass out right there. She felt a pang of remorse for the trouble she'd given him as he moved toward the stairs that lead to the upper levels of the house. \"Don't leave the house. I'm going to bed,\" he called back over his shoulder. \n\nNatasha wandered over to the tall windows overlooking the lake. Lacey came to stand beside her. \n\nNatasha gazed in awe at the picturesque scene that lay before them. \"Where did you guys find this place?\"\n\nLacey smiled faintly. \"Dad's company owns it. He brings clients up here sometimes and he had a last minute cancellation.\" She shrugged. \"So the place is ours for a little while. The kitchen is stocked and everything.\" \n\nNatasha nodded absently and stifled a yawn. \n\nLacey linked arms with her best friend. \"Bed?\"\n\nNatasha nodded. \"Bed.\" And the two girl tramped up the stairs to find their own bedrooms. \n\n***\n\nIt felt like mere minutes that she had been asleep before Natasha was woken by the intense rapping at the door downstairs. She lay face down in her pillow contemplating the sound a moment before she rose and padded downstairs. To her surprise it was well into nighttime and Lacey sat on the couch flipping through a vogue magazine, ipod earbuds in her ears. \n\n\"Lace?\" Natasha questioned. When Lacey didn't answer, Natasha shouted over the loud banging at the door. \"LACEY!\"\n\nLacey jumped slightly and looked at Natasha as she removed the earbuds from her ears, a quizzical look on her face. \"What?\"\n\nNatasha stared at her. \"You didn't hear the door?\"\n\nLacey shrugged. \"I already looked. I'm not answering it and Colin's passed out cold.\" \n\nNatasha's brows rose incredulously as she went to the door and carefully put her eye to the peephole. There was a redheaded woman illuminated by the light on the porch looking decidedly angry. Natasha frowned pensively. She looked vaguely familiar. \n\nThe woman's screech reached her ears with little difficulty. \"COLIN REYNOLDS! YOU OPEN THIS DOOR RIGHT NOW OR I SWEAR TO G\u2014\"\n\nNatasha opened the door and the redhead gave her a momentary appraisal before pushing by her and into the foyer. \n\n\"COLIN!\" \n\nNatasha rolled her eyes and followed. Lacey was gone, nowhere to be seen as Morgan Pierce stood fuming. Natasha blinked attempting to figure out the woman's ensemble. The redhead was wearing skin tight boot cut dark denim over black cowboy boots and a lacy white camisole which her ample cleavage nearly overflowed. A black cowboy hat was perched upon her wavy red locks. \n\nNatasha folded her arms over her chest. \"Hi, to you too Morgan,\" Natasha said dryly. \"Nice outfit.\"\n\nMorgan whirled on her pointing an angry finger. \"Don't you dare try to flatter me you whore-bag. Where's my boyfriend? COLIN!!\" She commenced yelling. \n\nIt was starting to give Natasha a headache. \"MORGAN!!\" she shouted. \"SHUT UP!!\" \n\nMorgan halted and stared at her open mouthed. \"Don't you dare\u2014\"\n\n\"He's upstairs sleeping.\" Natasha sighed, although she doubted he would have slept through the commotion his girlfriend was causing. \n\nMorgan's pretty face twisted into a sneer. \"Oh, I bet, after you two have been at each other all day.\"\n\nNatasha looked at the other girl blankly. \"Morgan...the what hell are you talking about?\"\n\nMorgan strode to stand toe-to-toe with Natasha. \"Oh, I bet you thought I wouldn't find out didn't you, Miss perfect.\"\n\nNatasha blinked at her. \n\nMorgan tossed her hair over her shoulder and lifted her chin haughtily. \"Don't think that you can go off and have some little tryst with my boyfriend and watch me look like an idiot.\"\n\nNatasha glared at her and opened her mouth to retort when she spotted Colin coming down the stairs over Morgan's shoulder. He looked more than a little apprehensive. \n\nMorgan turned to follow Natasha's gaze and in moments she was striding across the distance between herself and the stunned looking Colin. Suddenly the redhead was beating at him with her fists, words punctuating her blows. \"You---jerk...what the hell did you think you were doing....asshole!! After---everything\u2014I've\u2014done for you!!\"\n\nNatasha stood rooted where she was standing as she found herself caught somewhere between amusement and alarm. \n\nColin straightened suddenly and took hold of the enraged redhead's wrists. \"Christ, Morgan, stop it!\"\n\nBut Morgan wasn't listening. She was staring at Lacey who had just descended the stairs. Her gaze switched between the siblings. For the first time, her voice softened and she seemed slightly uncertain. \"You brought your sister?\" \n\nLacey smirked. \"Why wouldn't he bring his sister?\"\n\n\"What are you doing here, Morgan?\" Colin was losing his patience. \n\nMorgan had the decency to look abashed as she glanced up at Colin from beneath thick lashes. \"I heard you were going out of town and taking Natasha with you.\" She shrugged. \"And you brought me here once...\" her voice turned hopeful. \"So you're not up here on a romantic getaway or something?\"\n\nColin sighed and rolled his eyes toward the ceiling. \"No, I'm not, Morgan.\"\n\nMorgan brightened immediately. \"Oops.\"\n\n\"What's with the outfit?\" came Lacey's sarcastic query. \n\nMorgan lifted her chin haughtily. \"I'm being rustic, thank you.\"\n\nLacey's lips twisted in a sardonic smile. \"Of course.\"\n\n\"Lacey,\" Colin warned, \"C'mon, we need to talk.\" He took Morgan's hand and led her upstairs. \n\nLacey shot Natasha a look and shook her head. \"That girl...\" she sighed before turning and heading upstairs to her own bedroom. \n\nNatasha blew out a breath of air and reached up to tussle her springy dark locks before she headed to the sliding doors and stepped out into the cool night air. \n\nThe moon was lemon slice in the night sky, its light casting a white-yellow path across the surface of the lake below. \n\nShe leaned on the deck railing, taking in the scenery. \n\nShe heard the creak of the deck and a felt hard male body come up against her back. Arms enfolded her and she dropped her head back to rest against his shoulder. \"Hey, baby,\" she breathed. \n\n\"Bella,\" Gianni purred against her ear. \"You make it entirely too easy to get you alone.\" \n\nNatasha sighed and sank into his embrace as his arms tightened protectively around her. \"Well,\" she mused, \"I would never have met you had I not tried so hard to be alone.\"\n\nShe felt the soft chuckle reverberate through her chest. He dropped a kiss on her shoulder. \"Indeed.\"\n\nSighing contentedly she turned in his arms to face him. She watched a smile curve on his sensuous lips and she lifted her hands to comb through his dark hair, brushing it from his brow. His gaze on her was serious as his eyes searched her face, his voice husky, \"I love you, Bella.\" \n\nA smile stretched across her own face as she stood on her tip toes to press a kiss to his lips. \"Of course, you do.\" She grinned mischievously and grabbed his hand and pulled him towards the house. \"C'mon, let get you inside.\"\n\nShe felt him tug on her hand and she turned to face him. Light streamed from the kitchen windows. He looked pale and draw. He looked ready to collapse. \n\n\"Natasha, there's something I should\u2014\"\n\nShe shook her head, \"Shh,\" and stepped closer to him. \"Not tonight, baby, please?\" she pleaded. She kissed him again, brushing her lips teasingly over his own. \"I love you too,\" she murmured. \"Now please, you look like you really need some sleep.\"\n\nGianni looked grim but his voice was light, \"Are you sure you're just not trying to get me into bed?\"\n\nNatasha laughed and led him into the house. \"Well, that too. But not tonight. We both need some sleep.\"\n\nHe swatted her butt. \"But where's the fun in that?\"\n\nNatasha scowled at him in mock sternness. \"I mean it. Sleep.\"\n\n\"Fine,\" Gianni shrugged as they entered her bedroom and he pulled his black t-shirt over his head. He quickly unbuckled his jeans and stepped out of them. Natasha stared as he moved to stand by the bed in nothing but his black boxer briefs. \n\nHe lifted one ebony brow as she gawked at him. Natasha remembered to force air into her lungs as she pondered whether she'd ever tire of seeing him undressed. His dark hair was mussed and falling over his brow. His silver-grey eyes were lit with amusement and a smile curved on his full lips. Broad muscular chest and shoulders tapered down into a slim waist. The taut muscles in his abdomen rippled as he pulled back the covers and slid into bed.\n\nStill smiling, he crossed his hands behind his head and gave her a smugly expectant look. \"Coming?\" he yawned. \"Come to think of it...I am exhausted.\" \n\nNatasha shook her head incredulously. The man was unbelievable; trying to seduce her and knowing full well he was looking damn fine lounging half-naked in her bed. She glared at him as she wrenched back the covers on her side of the bed. \"Go to sleep Gianni,\" she said, though with less conviction. \"You look like hell,\" she lied.\"\n\nHe ignored her comment and eyed her closely. \"A little overdressed aren't you, Bella?\" \n\nNatasha glanced down at herself. She wore a white spaghetti-strapped tank top over a pair of navy soffee shorts. \"Pardon?\"\n\nHe shrugged. \"Well, I'm in my underwear. I just think we should be even.\" \n\n\"Oh, really?\" She crossed her arms over her chest, unconscious of how it made her breasts swell enticingly over the neckline of her tank top. \n\nHis gaze darkened and he pursed his lips slightly as he studied her. Her hair was falling in spirals around her shoulders. Her hair was free of make-up yet seemed to glow. The woman seemed truly unaware of the affect she had on men. He nodded slowly, \"Yes, really.\"\n\nHer lips twisted into a smirk as she lifted her shirt over her head and wriggled her hips out of the shorts until she stood next to the bed in naught but her white cotton underwear and bra. She tilted her head and smiled coyly, \"Better.\" \n\nGianni was rethinking his ideas about her as his eyes roved over her lithe golden-brown body. Perhaps she was completely aware of the power she held over him. \n\nShe slid into bed, turned off the bedside lamp pitching the room into darkness, and settled on her side facing away from him. \"Goodnight, Gianni.\" \n\nThere was silence. She could practically feel him awake and staring at her in the darkness. The mattress shifted and she felt his arm sliding under her neck and the pillow, his other arm encircled her waist and pulled her into the cradle of his body. He sighed as he brushed her hair back from her face and pressed a lingering kiss to the side of her throat and inhaled her scent. \"Goodnight, Natasha.\" \n\n\"Hmm,\" she moaned, already sinking into the warmth of his arms and surrendering to sleep. \n\n*** She woke up before he did. The room was bright. She'd forgotten to close the blinds before she had gone to bed. Now the room was filled with the bright light of day. \n\nShe and Gianni shifted during night. He lay on his back, she on her side pressed against him, one leg across his thighs, one slim brown arm across his torso. \n\nShifting slowly, so as not to wake him, her thigh came into contact with his erection. \n\nNatasha stifled a giggle as her eyes flew to his face. So this was \"morning wood\". She leaned her head on one hand as she gazed down into his face. \n\nHis face was impassive in sleep. She drew her fingers lightly through his dark hair, the silken strands sliding through her fingers. Dark eyelashes fanned against his cheeks. She tilted her head slightly and traced the tip of her finger down the straight slope of his nose, then brushed her fingertips over the fullness of his lips. A small contented smile curved over his lips though he did not wake. She wondered at how beautiful he was in sleep, almost pretty, though in waking he was something fierce and wholly masculine. \n\nShe made to draw herself from the bed when his arm tightened around her and he shifted yet again, this time bringing is erection in contact with her thigh. She smiled mischievously. Even in sleep, Gianni was oversexed. \n\nShe tentatively brushed her fingertips over his collarbone, then growing bolder she laid the flat of her palm against his chest to feel his heart beating strongly beneath her hand. Her fingertips stroked drown 1across his chest, her fingers gliding over his over his flat male nipples. They hardened under her fingers and her hair brushed over his chest as she lowered her lips to one nipple, swirling her tongue around the small flat bud. \n\nHe groaned in his sleep. Natasha lifted her head to watch his face as her hand slid across his abs. The muscles flexed and rippled under her touch as she traced the v where his hips met his thighs. It was always her favorite part on a man. \n\nHer fingertips toyed with the waistband of his boxers as she watched his face intently. She slid her hand inside and wrapped her fingers around the thick heat of him. He arched his hips as his cock jumped in her hand. \n\nNatasha slipped his arm from around her as she rose to straddle his hips. She did not rest her full weight on him but rather kept herself held aloft on her hands. She felt the heat of him pressing against her even through the partition of their clothing. She lowered her head to press her lips against his smooth brow, the brushed her plush pink lips over his eyelids and cheeks, lingering to trace his mouth from corner to corner but not kissing him fully. Those same lips roved over his chest and stomach before hovering over his boxer clad cock which strained against the fabric. She allowed the heat of her breath to fan against him through the cloth before she carefully pulled back the waistband of his boxers and his engorged cock sprang free. \n\nGianni was in exquisite agony. Natasha's heady scent invaded his senses. He dreamed he could feel the silken locks of her hair trailing down his chest and her fingertips trailing over his abdomen. His cock ached with need as he felt heat envelope his hard length. His fingers tore at the bed sheets as he his hips arched up off the bed and a low groan rumbled through his chest. \n\nNatasha knew the instant Gianni was awake. His hands were gently sifting through her curls to reveal her face and she looked up with wide azure eyes as she continued to lathe the length of his cock with her tongue. His eyes were heavy-lidded with sleep. His lips parted as he breathed heavily. He looked to be unsure whether he was waking or still dreaming and Natasha thought he looked beautiful. \n\nGianni groaned, his abdominal muscles bunching as she took the length of him into the heat of her mouth. She swept her hair back from her face with one hand so he had an unobstructed view as she lowered her mouth onto him, taking him until the head of his cock nudged the back of her throat. Her other hand circled the base of him and began stroking in unison with the administrations of her mouth. She pressed the flat of her tongue against him as she pumped his cock in and out of her mouth. He clutched at the bed sheets as he fought not to thrust too deeply into her mouth. \n\nEvery so often her dark thickly lashed lids would sweep upwards to meet his enthralled gaze. He wondered at how she still managed to look so coyly innocent as her plush lips were wrapped around his cock. \n\nShe moaned as she went down on him, the vibrations sending new waves of pleasure through him. ",
        "\"Baby, I'm gonna cum,\" he rasped, reaching to drag her up his body but she pushed his hands away. Instead she hallowed out her cheeks and increased her pace, twisting her mouth around his cock near the base of the head. \n\n\"Shit,\" Gianni hissed as his hips arched up off the bed. His cock twitched and his body seized with the force of his orgasm as he came. Natasha swallowed it greedily. \n\nWhen she finally sat back on her heels between his splayed thighs she nonchalantly flipped her hair over her shoulder. Her intense blue gaze met his as she brought one fingertip to dab at one pearl of his cum that clung to her lips. Smiling demure smile she slid that finger into her mouth to lick it clean. \"Mmm, good,\" she purred. \n\nGianni's mouth dropped open slightly. \n\nShe blinked at him innocently and patted his thigh as she hopped off the bed. \"I thought you'd slept enough.\" \n\nGianni watched her underwear clad body as she went to the bathroom off the bedroom and closed the door behind her. The sound of the shower running reached his ears and he stared at the door in consternation, a frown marring his brow. \"What the...\" he growled as he swung his legs over the side of the bed and stepped out of his underwear. \n\nHe didn't knock as he stepped into the bathroom. Steam was already swirling in the air. Her bra and underwear were discarded upon the floor and he could make out the exquisite outline of her body through the frosted glass of the shower. \n\nHe wrenched open the shower door and she shrieked, pressing herself against the wall of the shower. \"Jesus, Gianni,\" she gasped, pressing a hand between her heaving breaths. \n\nHe glowered down at her as he stepped into the shower, crowding her into the corner. His voice was low and dangerous. He took her chin between his thumb and forefinger and lifted her face to his. \"So you think you can just wake me up with your pretty little mouth around my cock, blow me, and then just leave?\"\n\nHer eyes were wide with shock, \"Uh...\"\n\nA predatory smile curved on his lips. \"I'm not done with you yet, girl.\"\n\nShe sputtered \"Girl\u2014\"\n\nHe cut her off as he took her head and her hands and kissed the breath from her. His tongue roughly parted her lips and delved into the sweet depths of her mouth as his hands ran brazenly over her body as water streamed over them. \n\nHis cock was hard again and pressing against her stomach. His hand's gripped her backside and pulled her harder against him. \n\nHer hands clutched at his shoulders as he continued to plunder her mouth. When he pulled back his face was still serious though his eyes shone with mirth. He took her wrists in his hands and pinned them above her head. He transferred her small wrists to one hand as he continued lowered his mouth to hers once more, the other hand free to roam over her breasts and stomach and to caress the curve of her ass. His mouth left hers to trail down her throat with gentle nips and licks. He moved to her breasts, testing their weight in his hand as he flicked his tongue over her nipple. \n\n\"Oh God,\" she gasped as he took one nipple into his mouth and then the other. His hand trailed downward and pushed her thighs apart. \n\n\"Do you like this, Bella?\" he asked as his strong fingers traced her folds. \n\n\"Yes,\" she breathed. \n\nHe smiled then, a wicked smile that would have put the devil the shame. \"And this?\" as he brushed his knuckle against her engorged clit. \n\n\"Yesss,\" she tilted her head back and closed her eyes. \n\n\"What about this?\" he slipped his fingers past her slick silken folds to press into her heated sheath. She tightened around his fingers and he felt a spasm of pleasure take her. \n\n\"Gianni, please,\" she whimpered. \n\nHis wicked smile broadened. \"Turn around, Bella.\"\n\nHer eyes flew open and she stared at him. \"What?\" \n\nHe released her wrists. \"I said, turn around.\"\n\nShe did as he told her, turning tentatively. \"Gianni, what\u2014\" \n\n\"Shh,\" he soothed as he took her wrists and placed her hands flat against the shower wall. \n\nHe surveyed her without touching her. Her hair hung in dark wet rivulets to the middle of her back. Her slender hips blossomed into a beautiful set of hips and the most perfectly shaped ass he'd ever seen. He lightly ran his fingers over her wet locks and down the curve of her back. \n\n\"Gianni?\" she whined turned over her shoulder to glance at him. \n\nHe smacked her ass, the sound echoing though the bathroom. She jumped. \"Patience, Bella,\" he warned. \n\nHe stepped closer to her, allowing her to feel hardness of his cock against her ass. He reached around her to cup her breasts in his hands, his thumbs playing over her hardened nipples. She dropped her head back and moaned. \n\nTaking his cock in his hand, Gianni slid the engorged head up and down her slit, pausing to press his head into her and then withdrawing to rub up and down her folds once more. \n\n\"Gianni,\" she gasped, \"I need\u2014I need...\"\n\nHe leaned over her, his lips near her ear. Amusement tinged his voice, \"You need what, Bella?\"\n\n\"I need you inside me, please!\" she whimpered. \n\n\"Mmm,\" he moaned. He took her hips firmly in his hands and lined his cock up with her pussy. He thrust forward hard, pulling her hips back against him at the same time as he slammed into her. \n\nNatasha cried out and her hands splayed against the wet tiles as he entered her forcefully. He withdrew slowly then pressed back into her again, more gently this time. He leaned forward to press a kiss between her shoulder blades. \"Is this what you wanted, Bella?\" He was moving tortuously slow. She groaned. He slowed his pace. \"No?\"\n\nA sob gathered in her throat. She thought she'd die from the pressure building inside her. \"Please, harder. Faster,\" she begged. \n\nA deep chuckle sounded behind her as Gianni gripped her hips tightly once more and pulled back nearly to the point of withdrawing before ramming his hips against her. Pulling her hips back against him he pounded into her, the sounds of their flesh meeting filling the small bathroom. \n\nNatasha cried out with the force and pleasure of each thrust as he took her hard. Gianni groaned as her sheath gripped him, the sound of her gasps and moans driving him even faster. \n\nNatasha exploded at her core, and she came with a scream as wave after wave of pleasure surged through her. Her knees weakened and she would have fallen had Gianni's arm around her waist caught her. He withdrew quickly only to hoist her in his arms. Her legs went around his waist instinctively as he pressed her back against the wall. She wrapped her arms around his neck and clung tightly to him as he impaled her on his cock. Her tight channel still rippled and pulsed around him with the aftershocks of her orgasm. He thrust into her hard before feeling his own release take him. A low growl escaped his throat as he emptied himself within her. \n\nShe lowered her heels to the ground and slipped her arms around his broad back to pull him against her. He was breathing hard and his chest heaved against her as he looked down into her upturned face. His dark lashes were spiked with water and his hair was wet against his brow. The size of him filled up her whole vision. \n\nA tender smile curved over his lips as he pushed the clinging dark locks back from her flushed cheeks. \"God, you're beautiful,\" he murmured and she lay her brow against his chest. \n\nShe giggled. \"You're not so bad yourself.\" \n\nHe traced his hand down her side to cup her hip. \"You okay?\"\n\nShe nodded even as her stomach complained of its hunger in a loud grumble. \n\nHe laughed. \"Hungry, luv?\"\n\n\"Starving,\" she groaned then gazed up at him and grinned, her white teeth gleaming against her brown skin. \"This was a good idea though, had we stayed in bed we would have definitely needed to shower first.\"\n\n*************************\n\n**These five people in one house, there are bound to be fireworks and they are bound to receive some unwelcome visitors in the next chapter which I will post tomorrow. Thanks for all your feedback and encouragement, luvs.\u2014the dusky girl** "
    ],
    "authorname": "theDuskyGirl",
    "tags": [
        "interracial novella",
        "interracial drama",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/la-vita-dolce-ch-11"
}