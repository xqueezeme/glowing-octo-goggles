{
    "title": "Hose and a Hard-On Ch. 02",
    "pages": [
        "He looked down and saw both of their faces looking up at him. \"You want to cum Alex?\" he nodded, \"Then you have to do something for me first. I'll let you into my panties, but first I want to watch you suck Adam's cock. I want you to lick it, stroke it, make love to it until he cums in your mouth. Will you do that for me Alex? It's my biggest fantasy and you can make it come true right now.\" There was a pleading in her eyes that was irresistible. He looked at Adam who still had Alex' cock in his hand. Adam was a good looking guy, and Alex had been wondering what it would be like. \n\n\"All right,\" he said, \"but I have one condition.\"\n\n\"What's that?\" Lori replied.\n\n\"I want to wear your stockings while I suck his cock\"\n\n-----------------------------\n\nLori and Adam's eyes opened wide and they both smiled and looked at each other.\n\n\"Agreed!\" said Lori.\n\nAdam got up and went back to his chair as Lori moved over to the edge of the bed. Alex got off the bed onto his knees and got between her legs. He reached up and slowly unfastened the garter clips from the tops of the stockings. Then starting with her right leg he slowly started removing her stockings. They slid off her smooth legs and Alex loved the feeling of both the stockings and her milky white legs in his hands. As he slowly removed the stockings he began kissing her legs as they were revealed. He got to her feet and kissed and began licking her toes. Lori looked down at him and spread her toes as he licked each one individually.\n\nStanding up, Lori removed her garter belt and helped Alex put it on. Alex kept glancing at Adam who was watching them and busily playing with himself. Alex' heart was beating fast, he was so nervous. \n\n\"Do I really want to do this?\" thought Alex. He knew he wasn't gay. More than anything he wanted to fuck Lori, but the idea of sucking that big cock was turning him on more and more. Lori turned him around and had him sit on the edge of the bed. She lifted his leg and slowly started to put the stocking on him. She finished with the other leg and had him stand. She reached around and clipped the stockings to the belt clips. \n\n\"There you are,\" she said, \"Very pretty! How do they feel?\"\n\n\"They feel fantastic!\" said Alex as he ran his hands up and down his legs, then \"Oh, I almost forgot, Lori will you get something out of my jacket pocket?\"\n\nLori looked at him quizzically and walked over to his jacket. Reaching in she pulled out the panties that Alex had absentmindedly put in his pocket at the beginning of the evening. Lori brought them to her face and sniffed, \"You naughty boy!\" she exclaimed, and walked back to the bed. \"You want to wear these too don't you?\"\n\n\"Yes,\" replied Alex as she tossed them to him. Alex put the panties on. They were tight, especially with his hard-on poking against them.\n\n\"OK, now I want you to do what I say,\" said Lori, \"Get on your hands and knees and crawl over to Adam.\" Alex dropped down and crawled until he was face to face with his first hard cock. \"Keep your hands on the ground and lick his balls.\" He reached out and licked. They were hairy and tasted slightly salty. The odor was manly and it turned Alex on. He licked first one and then the other with the flat of his tongue getting them wet with his saliva. \n\nLori's hands were caressing Alex' ass through the panties and rubbed his balls from behind. Her face was close to Alex' as she watched her husband's balls being licked. \"Oh, God that is hot,\" she was practically drooling at the sight. \"Now rub your face on his dick,\" Alex moved up and pushed his face onto Adam's cock. It was so HOT, literally hot against his face. He rubbed it against his cheeks, nose, eyelids and lips. \n\nHis heart was pounding, he knew that soon she would want him to take it into his mouth. She was teasing both of them, loving every second. A drop of pre-cum appeared at the tip of Adam's cock. Lori grabbed ahold of the base of Adam's penis and pointed it at Alex. \"Lick it off\" she said. Alex reached out with his tongue and licked. It was slick, salty but otherwise not a strong taste. He looked into Lori's eyes and she bent down and kissed him. Releasing his lips she pushed his head down and merely said \"It's all yours, make him cum.\"\n\nEyes closed, Alex started licking up from the base to the tip. He licked up and down both sides, loving how hard and yet soft Adam's cock was. He brought a hand up and lightly stroked as he licked. Finally he opened up and took the cock into his mouth being careful not to touch it with his teeth. He let the top of his tongue rub lightly on the underside of Adam's penis and sucked lightly. Slowly at first, he took Adam deeper and deeper in his mouth, getting it wetter and wetter with each stroke.\n\n\"That's it! Suck his cock, God, that turns me on!\" Lori said as she rubbed her leather-clad panties with one hand and played with a nipple with the other.\n\nAlex was slowly blowing Adam, up and down, in and out, getting his dick wetter and wetter with his saliva. The front of Alex' panties was wet now with his own pre-cum, the feeling of the material on his cock and balls was heavenly. \n\nHe looked up to see Lori and Adam kissing, their tongues intertwined, hands caressing each other. This turned on Alex even more and he started increasing the pace on Adam's cock. The feeling of Adam's cock in his mouth was, well, powerful. Alex felt in control, he thought he could make Adam cum any time, but most of all Alex felt sexy. The stockings, garter and panties felt so wonderful, and it felt good that the lovely couple he was with were also turned on. He found that he was eager to have Adam cum in his mouth. He had tasted his own cum before, so he knew what it would generally taste like, but what would it feel like? He hoped he wouldn't gag, but he was determined to swallow as much as he could.\n\nUsing his hand, Alex slowly stroked Adam's cock as he sucked the head and licked under the helmet. He felt Lori move down and her face close to his. She started licking Adam along with Alex as her hand felt along Alex' spine and came to rest on his panties. Their tongues played together as they both licked and sucked Adam, who was squirming in his chair. Lori began playing with Alex' ass through the panties with her fingers moving up and down the crack of his ass, lightly brushing his asshole. Alex flinched, but din't back away. Her finger felt so good through the panties! Emboldened, Lori began rubbing Alex' asshole with the tip of her finger all around the rim. Alex responded by pushing his ass out further and taking Adam as deep as he could into his mouth. He wasn't able to take his cock into his throat, but he tried.\n\nAs he squirmed his ass on Lori's finger Adam started bucking up and down, literally fucking Alex' mouth. With one hand on Adam's balls, one holding the base of his cock Alex slurped and sucked for all he was worth. Suddenly Adam groaned and stopped bucking. With a last shove he pushed his cock deep into Alex' mouth and erupted spurt after spurt of cum. The feeling of it shooting into his mouth nearly made Alex cum as well. He swallowed and swallowed, tasting and savoring as much as he could as the gooey liquid filled his mouth. He almost choked but finally swallowed it all down.\n\n\"Lick his balls, baby, he likes his balls licked when he's done cumming\" whispered Lori as she moved back face to face with Alex. Alex released Adam's cock and licked his balls. He could tell they were sensitive, and Adam groaned as Lori took his cock into her mouth, rolling it around, sucking the remaining cum out of it as it slowly deflated.\n\nAlex sat back on his knees and watched as Lori slowly sucked and nibbled on Adam before finally kissing him passionately. Finally she got up and without a word took Alex' hand and led him to the bed. She laid down on the bed and pulled Alex on top of her. He crawled up and kneeled over her face. He sat slowly down and rubbed is aching balls on her face. She sniffed and licked his panties, still able to smell the scent of the woman they came from. Moving lower he rubbed his hard cock on her face and she moaned. He didn't want to cum yet so he stopped and moved down her body some more. \n\nGrabbing the strings of the leather thong Alex slowly pulled them off of her revealing a lovely red bush, trimmed in a Landing Strip style, shaved at the sides but nice and bushy down below. He got on his knees, ass in the air and moved his face down to her pussy as she lifted up slightly to meet him. He tasted her and was overcome with the combination scent and taste of leather and pussy, it was exotic, erotic and just incredible.\n\nA minute or so later Alex felt hands rubbing the panties that still covered his cock and balls. Turning around he saw Adam behind him. Arching his back and spreading his legs, Alex allowed Adam easy access as he continued to explore Lori's pussy. Adam slid the panties off of Alex and pulled Alex' cock down and began licking him from behind, from the tip of Alex' cock, over his balls and to his ass. Adam lingered on Alex asshole, licking 'round and 'round the rim, teasing the little hole as he stroked Alex' cock. Alex was loving it. The feeling of a tongue in his ass was wonderful, he never wanted it to end, and Adam seemed to be getting into it as well. Lori was getting very wet as she watched her man pleasing Alex, and she began grinding her wet slit into Alex' face as she pinched and twisted her nipples. Alex put first one, then two fingers into Lori's pussy and started finger-fucking her as he sucked and nibbled her clit. This put Lori over the edge and she arched her back in orgasm.\n\nAlex started moaning as Adam's tongue got his cock, balls and asshole wetter and wetter. Lori didn't want Alex to cum yet, so she pulled his face up out of her cunt and said, \"Fuck me Alex, fuck me hard. I want to feel you spurt into me.\" \n\nAlex smiled and slithered up Lori's body, their combined sweat mingling together. He entered her without hesitation and without effort, she was so wet, and slowly began pumping in and out of her as Adam sat close by watching, alternatingly sniffing Lori's leather thong and Alex' discarded panties as he played with his hard dick and balls. Lori smiled as she watched her man, then abruptly rolled Alex over and got on top of him in a reverse cowgirl position. \n\n\"Come over here, baby,\" she said and motioned Adam between their legs. Leaning back she said, \"Lick us, lick his cock as it goes in out out of my pussy, lick my clit, lick his balls, lick us, honey, I want to feel your tongue!\"\n\nAdam dove in and did as he was told, licking and sucking as they fucked in front of his face, periodically pulling Alex' cock out and sucking it deep into his throat, cleaning off his wife's juices, then putting it back in her cunt. Alex reached around and played with Lori's breasts as she ground onto him. It was getting to be too much, he knew he couldn't hold out much longer. His breathing became faster and he started bucking into Lori. She got into it too saying, \"Oh, yeah, like that, fuck me hard, I want you to cum inside me! Adam, I want you to eat all his cum from my pussy, baby! He's gonna cum soon, lick his balls as he cums!\" and Alex came. Hard. Pulling down on Lori's tits as he shoved his cock deep into her he came and came as Adam licked his balls slurping them in and out of his mouth, licking under and over them as they pumped seed into his wife. Alex yelled out in ecstasy, he'd never cum that hard before and nearly blacked out. It was amazing.\n\nSlowly lifting off of Alex, Lori slid back and Adam cleaned up Alex's cock, swallowing the combined juices as he licked Alex clean. Lori rolled off of Alex and lay back on the bed, lifting her legs in the air for Adam. Adam got between her legs and slowly licked her pussy lips as he waited for Alex's seed to flow from her. Lori relaxed, loving the feeling of her man's tongue washing her clean. He pushed his tongue inside her, wiggling in and out, side to side, teasing the cum from her cunt. Finally it began to flow and Alex looked closely to see Adam lapping it up as it dribbled out of her and down into the crack of her ass. This was one of Lori and Adam's fantasies, licking another man's cum from her pussy, and they were both loving every second. Adam lapped and licked, swallowing some and holding some in his mouth until her pussy was all clean. Adam then crawled up and kissed his wife, pushing some of Alex' cum into her mouth, their tongues playing with it as they kissed. Finally they both swallowed and lay back on the bed smiling, lightly touching and caressing each other as Alex lay close by watching. \n\nAfter a few minutes of silence Alex could tell that they had fallen asleep. He got up quietly from the bed and put on his clothes over the stockings and garter. He took Lori's leather thong, as well as his own panties, and stuffed them into his pocket as he slipped out of the room. With a grin a mile wide he rode the elevator up to his suite..."
    ],
    "authorname": "TaraJean",
    "tags": [
        "panties",
        "cross dressing",
        "bi-male",
        "threesome",
        "panty sniffing",
        "cream pie eating",
        "loving wife"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/hose-and-a-hard-on-ch-02"
}