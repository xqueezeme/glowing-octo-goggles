{
    "title": "Everybody Needs a Hobby Ch. 14",
    "pages": [
        "Part 14\n\n**Late Saturday afternoon**\n\nGina stood in the doorway of the master bedroom, not particularly surprised at the sight, but very envious. Her two best friends, Britt, the blonde bombshell and Kate, the petite pixie with the jet-black hair, were sprawled across my king-size bed. I was naked, on my back, in the middle of the bed. Face down on either side of me, with their heads resting on my chest, were the two women, equally naked; with one hand each resting on my flaccid cock. All three of us snored lightly and if you can smile while you sleep, then that is what I was doing.\n\nWhile she toiled all day in John's beachwear shop helping persnickety tourists shop for swimsuits that they really shouldn't be wearing in public, Kate was posing for a calendar that Britt and I were shooting for a local auto body shop. \n\nOh yeah, and while she and Britt slept last night in the guest bedroom after having spent the day moving out of their water-soaked rental house, little Kate got her first real cock. During the past year, Gina and Britt had taken her virginity with all forms of fake penile implements, fingers, and the like; but I was her first real deal. \n\nThe three roommates had decided early on to keep their sexual adventures in-house, assuring them of a drama-free first year of college. Gina had had one boyfriend who had left her an emotional wreck and she had sworn off the male species until just a couple days ago. Kate came from a family atmosphere that virtually assured her virginity until she found a way to get out of Dodge. Her family promised her that she had a first class ticket to purgatory if she even thought of sex until she was properly courted and married. Britt took both girls under her wing and even though she had no fears of the opposite sex, she could take them or leave them and was more than willing to wait until the right man came along.\n\nAnd he did; 'twas I, George.\n\nSo here we all were, under one roof, at least for the time being. It was fairly obvious to Gina and Kate that this was the real deal for Britt, and me for that matter. I would do anything this woman asked me to do, short of murder. Britt is the same way and has a loyalty to those she loves that is boundless. Britt is also quite secure in her own sexuality and in her heart she somehow knew that I would never do anything to hurt her, so it only made perfect sense to her that she and I should do whatever needed to be done to help her friends over whatever hurdles life had thrown in their way. And if that meant me fucking them until they were walking funny, then well, that's what would happen. \n\nIt was no secret to all the girls that I was about as nervous about this arrangement as they were; at least Gina and Kate. Britt seemed to have all the confidence in the world that this was the best path and as we progressed, everyone became more at ease. The question now was where was this leading?\n\nThe aforementioned flood at the house they had rented had put us all under the same roof. No one had spoken about a long term solution, but it was an even bet that we were all thinking along the same lines. The question was; who was going to bring it up. Odds are it would be Britt.\n\nAnyway, Gina stood there for a few more moments, taking in the erotic view, wishing she was part of the landscape. She decided that maybe she would just surprise everyone and go ahead and get dinner started. But before she did anything else, Gina pulled her cell phone from her purse and took a couple pictures.\n\n**30 minutes later**\n\nGina took a quick shower in the guest bath and pulled an old baseball jersey on and went out to get started on dinner. She remembered seeing the makings of a spaghetti dinner and with a good salad and a bottle of wine, they'd be set. Barefoot, the little one with the long black hair didn't hear Gina enter the kitchen as she scrounged in the refrigerator for something to drink. She shrieked and nearly jumped into the icebox when Gina goosed her from behind, grabbing a handful of butt cheek.\n\n\"Jesus Gina,\" the naked nymph squealed; \"you scared the shit out of me. I didn't know you were here.\"\n\n\"I'm sorry,\" she told a Kate as she hugged her and gave her an apologetic kiss. \"So...tell me everything. Was it everything you thought it would be?\"\n\nKate took Gina by the hand and led her to the living room couch and they snuggled up as Kate gave a blow-by-blow account of her first time with a man. They were both getting turned on as Kate talked and Gina asked for more detail. Both were absentmindedly strumming their clits and when the little one switched to the tale of the photo shoot and the three-way that followed. Gina had heard enough and quickly had Kate in a 69 on the couch. Kate found herself on the bottom with her head on a pillow, Gina's wet pussy planted firmly on her mouth as Gina hunkered down to feast on the little one's well-used snatch. Spreading Kate's legs wide, she stabbed at her pussy and ass with her tongue as Kate reciprocated, her tongue dancing over Gina's clit as her little fingers delved at her tight ass. \n\nMeanwhile, woken by the loud moaning coming from another part of the house, Britt and I snuck out of the bedroom and peeked around the corner, watching the two dark-haired women pleasure one another. Britt stood in front of me, her hand reaching back to stroke my re-awakened cock as I had a firm grasp on both her tits, pinching her nipples as I nibbled on the nape of her neck. We had a view that favored Gina's backside; \"Gina's got a great ass, doesn't she?\" Britt whispered as she coaxed me to my full potential. \n\nI dropped my hands from her breasts and took hold of my lover's firm cheeks and gave them a squeeze; \"I really prefer this one,\" spreading the two halves. \n\n\"Hmm...good answer,\" she purred as I continued to nuzzle her neck. Pushing back slightly, she guided me between her moistened lips, my cock parting the way. We joined silently, careful not to ruin our friend's fun. The girls continued to put on a show as I worked my way in slowly. We didn't feel the need to fuck; we just wanted to be as close to each other as possible. I don't know how we could have been much closer.\n\nThe girls turned up the volume, Gina grinding on the little one's face as Kate fought back, two fingers now up the statuesque brunette's back door. Gina was evidently doing a pretty good job too as Kate was nearly bucking the bigger girl off and onto the floor. I pulled Britt closer, burying myself deeper as she wiggled her hips and twisted her own nipples. \n\n\"Oh god, oh god, oh god,\" Gina cried, her hand now taking up where her mouth had been. Kate picked up the pace, slamming three fingers in and out of her roommates ass. Kate stiffened as she climaxed, nearly driving her entire hand home. Gina wailed in orgasm, her feet pushing against the armrest of the couch as she flooded Kate's mouth.\n\nI watched, enraptured as I felt a small climax rumble through Britt, rolling up and down my length. I hugged her tighter, flexing in reply. \n\nAs the girls caught their breath, still layered on the couch, Britt and I parted and stepped from our hiding place; applauding the performance we had just been afforded. The two stars of the show turned their heads to the audience and smiled, both eyeballing the wet stiffness before me. Britt bounced over to the couch and got a pussy-enhanced kiss from Gina as the little one beckoned me over and promptly licked Britt's juices off my dick, giving me the opportunity to check Gina's moisture content, slipping a couple fingers in her drenched pussy. \n\nGina finally called off the fun, announcing that she had intended to have dinner ready for us before we woke from our nap. I went back to the master bath to take a leak and put on a pair of boxers and came out to find the girls, now all 'dressed' in t-shirts, skipping around the kitchen, getting dinner put together. There were plenty of cooks already in the kitchen, so I sat at the island and listened to the girls banter back and forth. They didn't come right out and talk about the fun and games the girls and I had on the MG after the photo shoot, but there were plenty of innuendos and raised eyebrows. \n\nDinner finally made it to the table and it was some of the best spaghetti I've ever had, but I honestly think my dinner company had a lot to do with it. About half-way through the meal, Britt as I had predicted, brought up the future living arrangements.\n\n\"So lover,\" she said as she ran a hand up and down my thigh under the bar; \"I guess we're going to have to find another place to rent. Do you know of any place where three innocent girls from out of town can find a reasonable place to move into?\"\n\nBetween the utterance of the word 'innocent' and the fact that she now had my half-hard cock in her hand, I nearly spewed red wine out of my nose. The girls laughed at my response as I tried to recover.\n\n\"Well, \"I said, nearly recouped and winding some more pasta onto my fork; \"I know the rental market is pretty tight right now, even with school out for the summer and all.\" I took a bite and chewed, pondering their dilemma. \n\n\"I do have this guest room, but I was really hoping a couple buddies of mine would come to town this summer and they'd have a place to stay.\" I paused as I took another sip of my Merlot. \n\n\"And,\" I continued, \"I've been a bachelor so long, you know, being able to bring a girl home and not having to worry about some roommate getting in the way; I just.....\"\n\nNext thing I know, I am off the stool, on the floor; a fiery-eyed blonde is straddling my chest as the other two pinned my arms to the floor...I clearly said something wrong. I smiled up at Britt, backpedaling a bit; \"Well you do know I was referring to you as the girl I'd bring home; right?\"\n\nBritt smiled a devilish grin as I felt two hands straying down my stomach, creeping under the waistband of my Fruit-of-the-Looms. Gina and Kate had the same demonic smirk as their leader and I felt their hands converge, firmly taking hold of my prized possession. Britt ran her hands through my hair as I stared up into her beautiful, dark blue eyes. \n\n\"So baby,\" she winked as her cohorts ran their finger tips up and down my length; \"don't you think we would make the perfect tenants? I mean really; we would help with all the household duties, you know, like cleaning and shopping and cooking.\" \n\nI felt little Kate's hand slip down and begin to palm my balls, rolling them between her delicate fingers. Gina meanwhile had me in a full grip, tightening and loosening her fingers sequentially; it was nothing like I had ever felt before; a digital undulation.\n\nBritt continued, her hands now pushing her shirt up, her beautiful taut belly exposed as she played with her nipples just under the shirt; \"think of the other perks too. No more having to jack off when you get a little horny. I'm sure one of us would be more than happy to give you a handy or a BJ if you just needed a quickie to get you by. And you'd never have to sleep in a cold bed or wash your own back. I think you'd really benefit by having us as your roommates.\"\n\nI couldn't suppress the moan as Kate and Gina continued to manipulate my main vein and just to make sure they had my attention, Britt lifted up a bit off my chest, revealing her wet pussy, her inner lips puffy and red. As the landlord, I thought I better get my two cents in; \"You know, there are going to have to be a few house rules that you three will have to agree to.\" I felt Gina tighten her grip in anticipation of my demands.\n\n\"First off, there'll have to be some kind of dress code.\" Gina's grip got tighter yet; \"Except when I have visitors or clients here, you three will wear as little clothing as is possible, depending on the temperature, etc.\" That got me a little stroke and Britt settled back on my chest and rocked her hips back and forth a couple time. \n\n\"Second; if I am available, I will be given first rights to all leg and pussy shaving and also hair washing and drying.\" Britt moaned as she rocked a couple more times, leaving a snail trail of pussy juice on my chest. Gina gave me a couple more welcome tugs as the little one draped her long hair over my face and gave me a quick buss on the lips.\n\n\"Next,\" I said, straining at Gina and Kate's ministrations; \"we will have weekly movie nights and, oh yeah, we will also have scheduled 'Naked Days.' \n\n\"Um, fuck yes,\" Gina grunted as I noticed a hand between her legs moving frantically. Britt leaned to her side and kissed Kate, their tongues stabbing at one another. \"So,\" Britt said as soon as Kate would let her; \"are there any more house rules you can think of?\" as she rose up on her knees and inched forward; her pussy nearly within striking distance of my tongue.\n\n\"Well,\" I said as my arms were released by my captors and I grabbed Britt's sweet ass firmly in both hands; \"if I ever need a little snack, I would like to think that there would be at least one pussy available for me to partake in;\" at which point I pulled my blonde lover's slick snatch to my lips and proceeded to devour her. Meanwhile, the other two co-conspirators had pulled my boxers down my legs and I saw them fly across the room out of the corner of my eye. I felt my legs being spread to the limit and I believe it was my petite one who crawled between my legs and began sucking my balls into her mouth, her fingers busy playing with my asshole. That left Gina to inhale my cock, the feeling familiar as I felt her nose nestle my groin, my cock reaching for the back of her throat. \n\nThe two dark-haired beauties took turns sucking my length and I listened as Gina gave encouragement to Kate as she tried to take all of me in her mouth; \"Come on baby, you can get that big thing in there. Fuck that's sexy baby...suck it...c'mon, swallow his cock Katie!\" The little one gurgled and moaned on my cock while her cheerleader ran one hand up and down my belly and chest, the other tickling my balls.\n\nBritt meanwhile was riding my face, her hands on both sides of my head and rocking her drenched cunt up and down my face, grinding her clit on my nose as my tongue ventured deep inside her steamy cavern. \"Ohh fuck, eat me god damn it... Fuck my pussy with your fucking tongue... Shit, you can eat my pussy anytime...\" Britt's appreciative acknowledgements continued as she lap-danced on my lips. My hands migrated north and soon were full of firm titty, her nipples as stiff as my dick. \n\n\"Oh Jezzus baby....I'm cumming baby...gonna fuckin' drown you...ahhhh....fuuuucccckkkkk!!!!\" Britt bucked and writhed on my face, her pussy sliding around like a kid on a slip-n-slide. I held her upright as I sucked her cream from between her swollen lips. She visibly vibrated as orgasm after orgasm rocked her until her body gave in and she collapsed on my face, a delectable smothering. \n\nDelectable at any other time except when your cock is about to explode and you want to cry out in ecstasy. Britt found the strength to drag herself up my face enough to give fair warning of the impending eruption...\" Fuck, fuck, fuck...\" I spewed both verbally and orgasmicly. Gina and Kate both squealed with delight as they fought over the fountain of cum. I came hard a half dozen times, so hard my butt cheeks hurt from clenching. \n\n\"Mmmm,\" they uttered as their tongues licked and slurped at the creamy mess. Britt found the strength to turn around and join them, all three tongues now lapping at my tender tool, causing me to flex which brought more giggles of glee from the trio. \n\nContent with their cleanup efforts, they joined me there on the floor, my butt now numb against the cold limestone tile. We hugged and petted, hands drifting from body to body, Britt purring with contentment. \n\nAbout the time I decided that I'd better get up while I still could, Britt crawled up my torso until we were eye to eye. Gina and Kate pulled up alongside as Britt asked; \"so, when can we move in?\"\n\nI actually teared up a little and hugged them all tight to hide it and managed to squeak out; \"Welcome home girls.\"\n\nI could feel the dampness as they peppered me and each other with kisses, whispering 'thank you's' softly and personally into my ears. I couldn't have been much happier than I was at that moment and realized what a lucky guy I was; screw the lottery, this was the big prize.\n\nWe helped each other off the cold floor, complaining about aching backs and knees. \"Next time we do that,\" said Gina, \"we'll aim for the carpet,\" pointing to the living room about five feet away. We all laughed and went back to cold spaghetti, but it mattered not as the warmth and happiness we all shared was all the comfort we needed.\n\n** Too early, Sunday morning **\n\nBritt and I were soundly sleeping in our patent-pending spoon position; my morning wood firmly ensconced between her butt cheeks, peeking at her pussy just around the bend, my right hand full of warm c-cup and my face pillowed in a nest of soft blonde hair, breathing warm air on her long neck.\n\nBritt was sleeping soundly, her heart beating through the soft flesh of her breast. I was content as I'd ever been and daydreamed about the future. The fantasy was interrupted as I felt movement on the bed. The sheets rustled at the foot of the bed and soon, two naked subterranean trespassers slithered up on both sides of us. I felt hands, lips, breasts, and legs follow my backside and could see a form below the sheets tracing along the front of my bedmate. Simultaneously, two dark-haired interlopers poked their heads out from under the sheets.\n\n\"Good morning,\" they whispered as Gina kissed my shoulder and played with my butt. I reached back and gave her an awkward hug, my hand on her butt cheek. \n\n\"We got up to snuggle before we went into the shop this morning, but John sent Gina a text and said he had a family emergency and that we should go ahead and stay home today,\" Kate whispered. \"He said he's leaving a sign on the door and Sunday's can be slow anyway, so I guess you have to put up with all of us today,\" throwing me an air-kiss and a wink.\n\n\"I hope everything is okay,\" I replied.\n\n\"I don't think it's a big deal,\" Gina said as she nibbled at my neck. \"He said he'd call later and let us know what was going on.\"\n\nBritt grumbled in her sleep as Kate kissed her softly on the nose. I sighed as Gina wrapped her leg over my hip and I could feel her warm wetness. I pulled her in tighter, my hand at the bottom of her ass cheek and she now sighed into my ear. I closed my eyes and drifted back to where I left off in my dream.\n\n** Probably around an hour later that morning **\n\nI was awoken by Britt squirming around, trying to roll onto her other side so that she was facing me. Her blue eyes, still heavy with sleep stared into mine and then asked; \"who the fuck are all these people in my bed\"; smiling slightly.\n\n\"I don't know,\" I answered; \"I thought they were friends of yours,\" smiling back.\n\nThe sleepy one dropped her hand between us and encountered another hand; but not mine. She stared back at me and said, \"Must be friends of yours, since she has her hand on your dick.\"\n\nI was sleepier than I thought and I hadn't realized that somehow Gina had managed to coax me out of the confines of Britt's comfortable ass crack and had assumed a healthy hold. We heard a snicker from the buxom brunette as she caressed my cock. \n\n\"Would you guys be quiet,\" the little one muttered, now hugging Britt's backside; \"I'm trying to sleep here.\"\n\n\"You are, huh?\" as the blonde reached back and petted the dark-haired pixie. \"I thought one of you had to go to work today.\"\n\n\"John had some sort of family emergency,\" I said, bringing Britt up to date. \"He said he'd call the girls later on, so it looks like we're stuck with them for the day.\" That comment just got me a couple pokes and another tug. \n\n\"Anyway, we,\" I said giving my girl a kiss, \"have to go through yesterday's shoot and pick out the shots of the MG and Kate for the calendar. You girls may as well get settled in and you can sort through all the stuff you brought. There'll be some things you brought that you don't need like kitchen things since I already have all that. We also need to do some grocery shopping today, so maybe I can talk you two,\" making eye contact with Gina and Kate, \"into doing that chore.\"",
        "Gina gave me another loving squeeze; \"Yeah, that'll work. We can swing by the farmer's market first. Kate loves the farmer's market, don't cha' sweetie?\" she said with a smile.\n\n\"Eww god, really?\" griped the little one, still comfortably nestled into Britt's backside; \"I hate the farmer's market. All that walking around and the crowds and you never know what they have; why can't we just get it all at the store?\"\n\nBritt and Gina laughed at their friend, enjoying irritating her. \"They have much fresher fruits and vegetables,\" said Britt, \"and they have someone there that always has fresh pineapples and we have to make sure that lover boy here always has his pineapple.\"\n\nBoth Gina and Kate looked at me and Britt quizzically and I felt myself start to blush a little. \"So, our new landlord has a thing for pineapples?\" asked Gina.\n\n\"No,\" laughed Britt as she stared deep into my eyes; \"I do because it makes his cum taste good!\"\n\n\"Well shit,\" declared Kate as she jumped off the bed and headed toward their room; \"let's get to the fuckin' farmer's market Gina!\"\n\nThe rest of us busted up laughing as the little one's perky butt and long black hair disappeared around the corner. \"Well, I guess it's time to get up,\" Gina said, giving me one last caress and a kiss.\n\n\"I suppose,\" I said, glancing at the clock; \"but the market doesn't open for another couple hours. Let's go scrounge up some breakfast and we'll put together a shopping list.\" I gave both the girl's a squeeze and we forced ourselves out of the comfortable bed.\n\n** Mid-morning, Sunday **\n\nWe managed to put together a good breakfast and thankfully there was some pineapple which Kate hand fed me throughout the meal. After a playful meal, we put the list together and got the girls on their way. Britt and I cleaned up and then headed upstairs to the studio/office to download yesterday's shots. It was nice and warm upstairs, the sun streaming through the big glass skylights. I had on a pair of shorts and a t-shirt while Britt wore a bikini bottom and a little crop tee. Her long bare legs were tucked under her as she sat next to me at the desk, intently staring at the pics of Kate and the MG.\n\n\"These came out really nice lover,\" Britt commented as we scrolled through them. \"For a pretty unexciting car, you and Kate made it look pretty special,\" as she reached over and placed her hand on my thigh.\n\n\"Yeah well, I think we have to give a lot of credit to you. Your coaching really brought the best out of her. She just really came to life after you put her at ease,\" I said. I continued to run through the shots, \"One thing I notice is that she can easily go from innocent little girl to seductress; it's a great quality for a model.\" \n\n\"She's done that a lot in real life lately. When she moved in with us at the beginning of the school year, she was a little prude. Now she can get down-right dirty,\" Britt exclaimed.\n\nTiming being everything, just as Britt finished that last statement, we came up to the 'private calendar' shots that Kate took of Britt and I. We sat silent as we scrolled though the shots, perfectly framed and sharp. We both gasped as a close-up of my hard cock slipping into her mouth took over the entire screen. Britt's hand strayed up my thigh until she had a firm hand on my cock. The next few shots of us sprawled naked across the back of the car were erotic as hell and then another porn shot; my fingers spreading her slick snatch wide, ready to probe her depths. The wet redness, clearly focused, was rude, but made my dick throb; Britt felt my response and squeezed her reply. \n\nToo quickly we came to the end of the pics as this was where Kate joined in on the fun and I somehow managed to blow a load into both of these beautiful women and watched in awe as the innocent one consumed the cum-cocktail from Britt's freshly fucked pussy. It was a threesome that I won't forget anytime soon.\n\nWe sat quietly for a minute staring at a blank screen, my blonde lover's hand softly caressing me, our breathing audible. I finally broke the silence; \"well, Kate really has a pretty good eye. A couple of those shots were calendar worthy.\"\n\n\"Yeah,\" answered Britt as she reached under the waistband of my shorts and got a good grip on the situation; \"but some of them looked like they came right off a porn site. Pictures like the one of you spreading my pussy open usually don't do much for me, but because I knew it was me I guess, well fuck, I'm so wet, I could float a boat. And the one of me taking your cock in my mouth and that was all you saw; shit; I just want to blow that one up and look at it all day....Fuck I'm horny!\" \n\nWe were instantly all over each other as I sat her on the desktop and attacked her mouth with mine while my hands strayed all over her sublime form. She struggled to push my shorts down over my ass as she squirmed on the lacquered wood top. My hands settled on her ass, tucked in between her and the desktop and I pulled her tight to my burgeoning cock, now free to wander. \"Bed,\" she moaned through our kiss.\n\n'Good fuckin' idea,' my dick told me, so I carried her to the bed and not so gently bounced her on the mattress. Britt squealed with delight as she pulled the skimpy shirt over her head; \"Get your camera,\" she said, her eyes dark with desire. Ever obedient, my dick and I grabbed the camera off the side table next to the desk and turned to see my love lying back on the bed with her legs spread and her little bikini bottoms being eaten by her pussy. Her outer lips hugged the tiny blue triangle, dark from her juices.\n\n\"Close-ups,\" she murmured as she drug her index finger up the great divide. I dropped to my knees and zoomed in, focusing on glistening puffy lips and scant, saturated fabric. I followed her finger, shot after shot as she played with the cloth, tucking it deeper till her pussy nearly swallowed the itty-bitty bottoms. Finally, the troublesome piece came off, leaving her pussy bare and vulnerable. I glanced up from the camera as her gaze bore down on me, her eyes black with want and her tongue licking her lips in anticipation.\n\n\"Open it,\" I whispered in a commanding tone. A shiver ran through her as she spread her pussy lips apart, exposing her pink core. I stared at her open sex, the soft, wet interior my cock so loved. \"Fuck,\" I said under my breath as I remembered to take the shot. Britt shivered again as she repositioned her hands, rocking back a bit to show her perfect pink star, shining bright with the run-off from her stimulated snatch. Her pussy now gaped exposing a deep tunnel of love and it took all the willpower I could muster not to drop the camera on the floor and fill that gap with my cock that was throbbing with desire.\n\nI managed a couple more shots, standing over her, looking down at her obscene pose, legs spread wide and tucked back, her pussy gaping wide and an asshole asking to be plundered. I stepped back and took one wide shot, capturing her in her pornographic entirety. To say she looked ready to be fucked was an understatement and my cock wasn't willing to wait much longer.\n\nI stepped back up to the foot of the bed and looked down at my babe's x-rated display. I sat the camera to the side on the bed and placed my hands on the insides of her spread, tense thighs, looking up to see her lustful look. \"Eat me,\" she said breathlessly, her chest heaving with each breath. Obediently, I dropped my head down to her crotch and inhaled deeply, her erotic aroma stiffening my dick and resolve just that much more. \n\nEver the tease, I raked my tongue over her winking pucker and skipped over the deep cave before latching onto her distended clit, sucking it between my lips. Britt stiffened as her first orgasm overtook her, \"FFFFUUUUUCCCKKKKK......\" she bellowed as her cunt convulsed. I continued to bathe her sex with my tongue and lips, tickling her asshole with my tongue as it pulsed, trying to coax me in. Lost in the joy of giving her pleasure, I heard the shutter release of my Nikon, and I glanced up to see her holding it, shooting wide with the camera above her head, hoping for the best from the auto-focus. I went back to what I was doing, drawing another climax from deep within her. \"Jeez....ahh...Shit...\" she moaned through another orgasm. \n\nBritt was clearly in need of a respite, so I backed off and let her legs back down onto the bed and slid up beside her, not snuggling as she was warm enough as it was. She laid there on her back, her eyes closed with the occasional shiver running up her body. I traced patterns up her arm, across her chest and contemplated playing with her nipples. She anticipated my move and took my hand and held it down on her belly, still trying to catch her breath. She turned her head to look at me, her eyes now a deep blue; \"You're incredible,\" she said softly, squeezing my hand in hers.\n\n'Thank you' didn't seem appropriate, so I simply scooched closer and kissed her shoulder and whispered, \"I love you.\" A tear began to form in her eyes as she turned away; I kissed her shoulder once more. Turns out, she turned to locate the camera which she handed me and slid over till we were shoulder to shoulder. Her hand released mine to allow me to operate the camera. Her hand now found my cock as we reviewed the pornographic images on the little two inch screen. Even at that size, the images were startlingly graphic. I could hear Britt's breathing quicken as we perused explicit shots of my tongue probing her ass or lapping the inside of her gaping pussy. \"Fuck,\" she repeatedly murmured as she stroked my stiffening member.\n\nRested and ready, she let go of my cock and sat up, giving me a quick kiss. \"Scoot back to the head board,\" she said as she stood up next to the bed and shook her bountiful head of blonde hair, bending over and running her fingers through it, a cursory brushing. I sat against the upholstered headboard and admired her, wondering how I got this lucky. Britt caught me staring and leaned over to give me a deep kiss before reaching back to the bedside table and retrieving something she quickly tucked under the pillow.\n\nSlipping up onto the bed, she gave me another kiss as she straddled my belly, nestling my cock in her ass crack. \"So lover, are you ready for me to fuck the shit out of you?\" as she reached back, tucking my cock into her crack, rocking back and forth. I simply smiled and nodded in the affirmative as my hands ran up her sides, settling on her firm tits, thumbing her stiff nipples.\n\n\"Okay then, get that camera ready,\" as she backed over my dick, spreading her juices along the length until it sprang up, free and slapping me on the belly. Britt straightened up and ran her hands up and down her torso, squeezing her breasts, twisting her nipples. Snapping pictures, I watched her raise up on her knees and bend back slightly, reaching down and showing off her pussy, spreading her lips, dipping the occasional finger in for a sample. Tasting herself, she gave a smile of approval and reached down for my cock. I watched through the viewfinder as she ran the tip of my cock through her wet lips, gathering her essence. Slowly, she let me in as I captured my advance, slowly watching my cock disappear. Unhurried, she slid up and down, occasionally reaching down to spread herself, exposing her stiff clit riding along the top of my shimmering member. \n\nI was more than content to let her ride me until I gave her my gift, but my lovely assistant had other poses in mind. She slowly dismounted; my slimy cock slapped my belly in retaliation. Britt smiled as she gave me a quick slurp before turning her back to me and reassuming the position. She leaned forward, reaching back and spreading her ass for me. I took a couple shots of her tight ass and open pussy which was dripping onto my balls. Satisfied that I had enough shots of that particular pose, she reached between her legs and took my cock in hand again, aiming it at her sweet snatch. \"I'll bet that looks nice,\" she said as I zoomed in to capture the moment as she captured me once more. Her ass winked at us as my cock slipped further inward until we were safely home. Britt rode me for a minute before straightening up and reached back to retrieve whatever it was that she hid beneath the pillow. \n\nI didn't catch what it was, but I had my suspicions. Britt leaned forward again to deal with whatever she had gathered, so I took the opportunity to run my hands over her ass, my thumbs playing with her asshole. Britt moaned as I played and then swatted my hands away. Picking the camera back up, I watched as she probed her ass with lubed fingers, one, then two; slipping and sliding beside my cock still enjoying her tight pussy. Next, a bright pink vibrator showed up, shining with lube and quickly replacing her fingers. Like watching a private porno, I captured images of Britt pleasuring herself with my cock buried deep in her cunt while she plundered her ass with the vibrator.\n\n\"Oh my god that feels fucking incredible,\" she groaned as she filled her ass with the vibe and I filled her pussy with my cock. Her pace quickened and I figured we were close to the crescendo when she suddenly stopped and let a small orgasm roll through, trying to push me and the anal intruder out. Giving herself a second, she inhaled and then slowly retracted the pink invader. Her asshole gaped as I took another shot, my cock still firmly parked in her pussy below her open back door.\n\nBritt sat back upright, back straight and she flexed to realign her muscular back. She turned to look at me and asked;\" Are you ready baby?\"\n\n'Ready for what,' I wondered. The answer came as she handed me the bottle of lube and raised herself up, freeing her favorite toy. You didn't need to give me detailed instructions as she leaned forward slightly and spread her ass wide. I quickly squeezed a healthy amount of the cool lube on the head of my cock, like syrup on a sundae. Picking up the camera and shooting with one hand, I pointed my greased pole at her open rear portal and chronicled the advancement of my cock as it was consumed by her greedy ass. \n\nOnce I was completely covered, my cock gone from sight, I made a management decision and called the photo shoot finished and a smashing success. Now it was time to get down to real business and fuck my lovers ass until we both passed out. Setting the camera aside, I grabbed her by the hips and set a rhythm, slowly with full strokes, letting her ass get used to my full girth, which was getting bigger by the minute. \n\n\"Oh fuck me,\" she moaned, grabbing my ankles and ratcheting herself up and down my cock. I stared intently as my cock advanced and retreated, the tight skin of her ass drawing outward with each thrust. After what seemed like an eternity, my cock began to numb and Britt was clearly tuckered out. We slowed until we stopped, seemingly defeated; but there was no way I wasn't going to give this girl a load up the ass she would soon forget.\n\nI pushed her off my dick, much to her surprise and it showed in her face as I stood beside the bed and grabbed her legs and flipped her onto her back. She got that devilish look back when I drug her to the edge of the bed and she watched as I squirted a healthy amount of the lube onto the length of my throbbing, angry member. I pushed her legs back, lifting her butt and slipped a pillow underneath and then anointed her still open ass with a healthy dollop of the sex grease. Handing her the pink vibrator, I winked as I slid my dick home, fighting the compression afforded by the tight fit. Obscene sucking and farting sounds followed the pistoning of my cock in her ass as I drove for home. Sweat dripped off my nose and I heard the vibrator hum and then felt the vibrations as she ran the vibe around the outside of her pussy, teasing her own clit, waiting for the pivotal moment. \n\nThe extra lube and change of position was just what the doctor ordered. Along with that, the looks on each other faces carried us to the end. Britt's eyes grew big; as I'm sure mine did as we felt each other reach the peak. We reached the top simultaneously; my cock exploding, seemingly endless amounts of molten cum jetting into her pulsating ass. Britt convulsed, as if having a seizure, her ass milking my cock, pushing and pulling, unsure of whether to expel me or take me in further.\n\nBritt lost control of the vibrator and it rolled off her, settling on the bed, humming to no one. I only had the strength to wrap my arms around her legs, pulling them together and then lean on them, the bed and her, the only thing keeping me upright. Little aftershocks rolled through her, coaxing out what little cum I had left. Eventually, I found my way to the bed and we lay side by side, breathing hot air into each other's faces as we drifted off to sleep. \n\n** A little bit later **\n\nI woke to whispers and soft giggling. I opened my eyes just enough to see Gina and Kate standing beside the bed where Britt and I lay naked and spent. Kate held my 35mm Nikon and was scrolling through the pics, both of their eyes wide; \"God, look how big his cock looks in her ass,\" Kate whispered to Gina as she glanced down at my now, less than expansive dick. \"I thought I wanted him to fuck my ass, but now I'm not sure,\" the little one continued. \n\nGina's right hand was in her shorts, obviously getting off to the digital display; \"Oh, I definitely want that cock in my butt. I want to watch his face as I fuck him till he cums in my ass,\" she said in a stutter.\n\nKate let out a little squeak and looked at me as my cock gave away the fact that I was awake and listening to their conversation. She gave me a little covert wink and said, \"You know what would be fun?\"\n\n\"What's that?\" Gina responded, her fingers still diddling her pussy as she stared at the tiny images.\n\n\"While George is fucking that sweet ass of yours, I could put on the strap-on and I'd fuck your pussy at the same time. Or, we could have Britt fuck your pussy while I took pictures.\" Kate paused and looked down at me, still pretending to asleep, and my cock jumped once more. Kate couldn't contain her giggle, giving us away. Gina stared into my now open eyes, still playing with her pussy as Kate took a shot of Britt and I naked on the bed, a fitting closing shot. \n\nGina managed a small orgasm, her eyes never leaving mine. Kate took a couple more shots, even a wide one that captured Gina standing over us, her hand rapidly working her pussy inside her shorts. Putting the camera back on the table as Gina got herself put back together, the little one said, \"Gina and I'll put away the groceries. See you downstairs in a couple; we have some BBQ from the market for lunch.\" \n\nI managed a smile as I hugged Britt closer, tempted to close my eyes and drift back to sleep. I could hear the girls downstairs, busily dealing with the shopping, so guilt finally got me to my feet. Getting Britt up was another thing all together. She moaned and grumbled as I gently tried to wake her. Soft caresses got me nowhere, and it wasn't until I resorted to nipple pinching that I got a response.\n\n\"Mmm,\" she groaned as she stretched her arms up; \"I was dreaming that that we were lying in a field of clover, making love and you... Ohh!\" she winced as she stretched her legs. \"I guess it wasn't all a dream. I dreamed that you were overcome with lust and you ravished me, violating my pussy and my ass with your big cock, telling me how much you loved me as you fucked me like an animal. It was the most erotic dream I've ever had.\" She paused as she looked up at me with those deep blue eyes; \"You don't suppose we can find a field like that any time soon, do you?\"\n\nI leaned down to kiss her and help her sit up; \"I'll do my damndest to find that field, even if I have to plant it myself,\" I said, kissing her softly. Britt wrapped her arms around my neck, trying to pull me down and start round two; \"We better get up lover,\" I said with the proper disappointing tone; \"Gina and Kate are back and they brought lunch; they're getting it ready now.\"",
        "A twinkle of concern showed in her eyes; \"Did they see us....?\"\n\n\"We were asleep when they came upstairs to let us know they were back.\"\n\n\"The camera,\" she asked, looking for it on the bed.\n\n\"They were standing here by the bed and looking at the pictures when I woke up.\"\n\n\"Did they.....?\"\n\n\"Did they like them? I'd say yes; Kate was drooling and Gina was fingering herself while they looked at them.\"\n\nBritt smiled as she got up and scurried over to the toilet and unabashedly sat and relieved herself. \"The least you could do is turn around,\" she sighed as the splashing sound echoed throughout the studio. I turned and gathered up my clothes, trying to ignore what was happening behind me. \"Uhmm,\" she groaned, \"Nothing like a jizz enema...fuck George, it feels like you came a gallon,\" as the noises continued.\n\n'Good lord,' I told myself as I pulled on my shorts, 'this girl is really something.' Then came snickering and giggling from the bottom of the stairs, followed by Gina yelling; \"Lunch is ready, you pervs!\" and the laughter of the two could be heard all the way back into the house. \n\nI looked over and gave Britt an annoying look which she answered with a shrug of her shoulders as she reeled off a couple yards of toilet paper; \"What can I say, they're your roommates,\" she said matter-of-factly.\n\n'What have I done?' I asked myself as I turned to walk downstairs. As I was about to walk through the front door, Britt hit the bottom of the stairs, holding what little she had been wearing, still naked as a jaybird. Reading my questioning look, she said, \"I need a shower, okay?\"\n\nI couldn't help but smile as she skipped past me through the open door, giving me a glancing kiss. I managed to give her a little swat on the ass as she skipped toward the bedroom. \"Hi girls,\" she said as she passed them on the way. The two didn't reply; their eyes following her bouncing butt as she disappeared into the master bedroom. They went back to making lunch, giggling to one another; \"a gallon? Can you imagine?\" followed by more snickering.\n\nI chose not to enter into this particular trap and opened the fridge to get something to drink; \"Smells good ladies, and thanks for doing the shopping. Britt and I got a lot done while you were gone.\" I instantly regretted that last line and prepared for the comeback.\n\n\"Not a problem,\" said Kate, \"but I still hate going to the Farmer's Market;\" and then catching my eye; \"I think we're going to have to alternate who has to go shopping and who gets to stay home,\" giving me a wink and getting a poke in the ribs from Gina.\n\nBefore Kate could retaliate, Britt emerged from the bedroom, her hair wet from the shower, wearing the skimpiest pair of panties known to man and nothing else, which drew catcalls and wolf whistles from the other two. She glanced at me with my deer-in-the-headlights look and said nonchalantly, \"you said one of the rules is that we were to wear as little as possible and it is getting warm, so....\" And she did a pirouette showing off her beautiful form and a butt I'd lay my life down for.\n\nThe other two laughed hysterically and before you could blink, shirts and shorts flew until all three wore nothing but the briefest knickers. I laughed and shook my head in disbelief, heading toward the bedroom; \"I'm going to take a quick shower; don't wait lunch for me.\"\n\nI managed a quick, refreshing shower and as I toweled off, I listened to the none-too-private conversation between the three about what transpired while Gina and Kate were shopping.\n\n\"Kate, when we came to the shots you took of George and me, I was instantly horny, like you'd flipped a switch, \"said Britt. \"And the close-ups of him in my mouth or the one where he was spreading my pussy open; fuck, those are so nasty, but I fucking love them. I know guy's get off on that, but I never had that reaction; maybe because it was me or something.\"\n\n\"It wasn't just because it was you,\" Gina chimed in; \"I was creaming my panties looking at them too; I think because I knew it was you and, well, you know, been there, done that. I just really got into it. I stood there and fingered myself while your boyfriend watched me!\"\n\n\"Well you know how turned on I got watching you two go at it,\" Kate giggled, \"but I've always liked porn and all those close-ups of girls spreading themselves and stuff. You guys know I like porn, you've seen me get off on it on the computer more than once, but you didn't know that I tried to shoot my own pictures of myself with my phone. They didn't come out very well, but when no one's around, I look at those and finger myself silly.\"\n\n\"God Kate,\" exclaimed Britt, laughing, \"and you called me a perv.\" More laughter ensued as I stood and listened, out of sight.\n\n\"Britt, do you\" Gina began, hemming and hawing as she played with her food; \"do you think that Geor... well, would you be okay.... I mean...\"\n\n\"Jeez Gina, just spit it out,\" Britt teased.\n\n\"Okay,\" she said, taking a deep breath; \"Well I got so turned on by those pictures this morning that I wondered if ...... well fuck it! I'd like to have some photos like that for me so that when I get horny and no one's around, I can get off on them! There I said it; I want some nasty photos of me and George and even you guys that will be private, just for me...and well, I guess you could have copies too, if you want them.\" She paused; \"God, is that weird? I feel like a fuckin' teenage boy collecting porn to jack off to, but fuck, those shots of you and George just really turned me on.\"\n\n\"Aww,\" I heard Britt say, as I peeked around the corner. She and Kate stood next to Gina and wrapped their arms around her. \"That's not weird at all sweetie. I have a collection going of George and I from some of the other car shoots, and when he's not around and I get horny, I do a whole slideshow on the computer and bang myself till I cream all over his chair. Fuck, I've done it three or four times in a day when he's at work.\" \n\nMy dick responded, imagining Britt fidgeting on leather upholstery as she got off re-living our love making sessions. Britt continued as she and Kate played with Gina's aroused nipples, nibbling at her neck; \"Fuck, if I had photos of you guys with George or even just us girls; god, I might never get anything done. Damn it Gina, you've got me all worked up again.\" She turned Gina's face to hers and kissed her hard; I could see their tongues battling for position as Kate, on the far side of the couple, began suckling on the busty brunette's D-cup while her hands roamed from Gina to Britt. \n\nBy now, I had a hard-on that wouldn't quit. I thought about just walking out there naked, with my cock leading the way, but then that might be a little crude, and someone here had to be the grown-up. I stepped over to the dresser and dug around in the drawer, taking inventory. There at the bottom, in the back, was this, well I guess it's like a jock strap that the girls had bought me when I first met Gina and Kate and we had our first photo shoot together. They insisted that because they had to wear these skimpy outfits that the photographer ought to do the same. It consisted of a silk sack; I compared it to a sack that a kid would keep his marbles in, and a few strings that held it up. 'Perfect,' I told myself as I somehow managed to stuff myself into the bag and arrange the butt floss. I glanced over at the mirror and I didn't think I could have looked any fucking sillier, but figured, 'what the hell?'\n\nThe noise had subsided until I turned the corner; \"What's for lunch ladies?\" Little Kate shrieked with delight and Gina's eyes grew as big as saucers while my favorite blonde spewed iced tea out her nose trying to contain herself. I stopped and gave them a 360, like a model on a catwalk, drawing a round of applause.\n\n\"God babe,\" Britt said as she wiped up her mess on the counter;\"I figured you threw that away,\" eyeballing the tightly packed bag between my legs.\n\n\"Are you kidding?\" I kidded as I retrieved the ice tea from the fridge. \"I wear it all the time when no one else is around.\" The girls whistled as I stretched to get a glass from the top shelf, giving them a good view of my backside. \n\n\"What a butt,\" I heard one of them whisper to the others\n\n\"Yeah,\" said another; \"If I had a dick, I'd definitely take that for a ride.\"\n\n'Oh shit,' I thought to myself, 'let's not go there.' I'm all for the occasional finger up the ass, but I think I draw the line at a cock, real or fake up my tight virgin hole.\n\nI turned back to face my roommates; \"I just figured that if you got to wear next to nothing, why shouldn't I?\"\n\nBritt walked around the island and stood in front of me, eye to eye, tit to chest; \"Oh I don't think you'll get any argument out of any of us,\" she said as she grabbed a handful and gently caressed the material, smiling as she felt my cock strain. \n\nShe turned and got me a plate and served me up some of the barbecue that they had picked up at the market. The remaining empty stool was between Gina and Kate, so I took my seat and started eating. The girls went back to their lunch, yammering back and forth as though sitting around half-naked was just as normal as could be. The occasional hand did find its way onto my leg, eventually working its way to my bag of marbles. Pretty soon, the snake had found its way out of the bag, relieved to not be bent double and being charmed by two soft and attentive hands. \n\nThe girls talked about spending the rest of the afternoon sorting through all the belongings they had stacked in the warehouse and deciding what to do with it all. Lunch finished, Britt gathered the dirty dishes and continued the conversation, leaving the other two to torment my cock. Finished cleaning up and ready to get to sorting, the girls stood and headed toward the door, looking back at me, wondering why I hadn't jumped up to follow. All three looked down with devilish grins as I spun the stool and stood, my cock stiff and pointing to the ceiling. \n\nI looked down, weighing my options as the girls giggled in delight with their accomplishment. After a brief confab with myself, I slid the little apparatus down my legs and kicked it toward the living room; \"Screw it; I declare the rest of the day 'Naked Day!\"\n\nAll three beauties yelped and whooped with joy, bouncing up and down as they stripped off what little they wore and added it to the small pile of apparel I had started. All three then grabbed me and we hugged and kissed; hands everywhere, groping and playing. \"We love you,\" Britt said as she kissed me, her hand, I think it was hers, wrapped firmly around my cock.\n\n\"I love you too,\" kissing her back and swatting two, maybe three butts; \"Okay, let's get to work.\"\n\nThe threesome giggled and jiggled their way out to the warehouse, me in tow admiring the view. I watched for a couple minutes as three gorgeous, naked women picked through the enormous pile of belongings, commenting and cavorting, but really making zero progress. I finally had to step in and try to get them somewhat organized. \"Ladies,\" I said from the sidelines, my hands on my hips in a authoritarian stance that only brought more giggling and no respect. \"I think what you need to do is make three categories; one is items that you need and would like to have in the house. Two would be items you want to keep, but don't need everyday. If we need to, I can build some store rooms or closets out here to keep everything clean. The third category would be things that you don't need, would never use and can pitch or donate. Does that make sense?\"\n\nBritt, the organized one of the trio quickly agreed and took control. She soon had three areas designated and the girls went at it with me helping shuttle things to the appropriate spot. A lot of groping and griping went on. Kate was the worst at making up her mind and numerous tug-of-wars ensued, Britt being the one who was the best at snap decisions was usually her opponent. Poor Gina found herself trying to be the diplomatic one; I knew better than to get involved. While one of the debates was in full swing over whether or not to keep a questionable looking crock pot, I spotted the box I had unloaded earlier that I knew contained a veritable plethora of sex toys. I grabbed the box and turned toward the argument and all went silent. Their eyes all grew big as they recognized the box I held and I gave Britt a knowing glance. Britt laughed and said, \"Hell girls, we've all fucked him, we're standing her naked in a big warehouse arguing about worn out appliances; I really don't think we need to be embarrassed about our toy collection; do you?\"\n\nThey nodded 'No' in agreement and I tried to look innocent and ignorant, asking \"What kind of toys: dolls and stuffed animals?\" Britt gave me a look and tried to contain herself as I sat the box down and began to lift the lid off. Quicker than the Flash himself, Gina and Kate flew over and had their hands on the box lid, holding it down. Britt couldn't hold it any longer, laughing and sidling up behind me, her arms around me; both hands on my awakening cock. \n\n\"Give it up ladies, he already knows what's in the box; I could tell by the look in his eyes. He was trying to get a rise out of you, but look; the jokes on him,\" she said, moving her hands up and down my dick; \"we got a rise out of him,\"\" laughing at her own humor. I reached back and grabbed her butt, pulling her tighter to my backside. \n\nKate stared at my hard-on and then flipped the lid onto the floor and rummaged around until she came out with a flesh colored dildo, anatomically correct. Walking over she dropped to her knees in front of me and as Britt held my stiffness parallel to the floor, Kate held the synthetic schlong beside mine and beamed, \"See; I told you it was about the same length.\" Then wrapping her little hand nearly all the way around mine, she smiled even larger; \"You're right Britt, his is much bigger around. Now I really don't know if I want him in my butt or not.\"\n\nWe heard a soft moan and glanced up to see Gina still standing near the toy box, staring at my cock, biting her lower lip and furiously rubbing her pussy with her fingers. Britt smiled and whispered in my ear as she pumped my cock with Kate's still firmly attached; \"I think Gina still wants to give you her virgin ass, baby.\"\n\nIt was my turn to moan as the little one ran her tongue over the crown of my cock, cleaning up a drop of pre-cum dangling on the tip. I was in danger of losing it if this kept up and the thought of my cock deep in the tight ass of the buxom brunette was all I needed to bring me to my senses and re-assert my command. \"Okay ladies,\" I said, slipping from the grasps of the blonde and the pixie; \"back to work; we can play later.\" With that, I walked over to the box of bawdy playthings and placed it in the stack of items that they girls would want in the house. \"I assume this is the correct pile,\" I asked. Britt and Kate nodded in the affirmative while Gina still had her hand between her legs, staring at my dick. I snapped my fingers and waved my arms to break her reverie. She looked up at me and blushed as the other two laughed and turned back to do some more sorting. \n\nBack into the routine, the girls were making pretty good headway as the one large pile soon became three more manageable piles. Another argument was taking place over a very ugly lamp that Kate thought was wonderful; I had to side with Britt on this one; it was butt ugly. Gina meanwhile was digging around on the other side of the pile, bent at the waist, her incredible legs and ass on display. With the others still bickering about the lamp, I took the opportunity to step over next to Gina and bend over as though consulting with her on whatever had caught her interest. Situated between her and the others, I clandestinely placed my hand on the small of her back and let it wander over her butt, fingers sliding through the ravine. She shivered, never speaking or looking over at me and consciously spread her feet apart more. \n\nI moved items around with one hand, playing the part of inquisitive helper as my other hand helped itself to her hungry pussy. She wiggled her ass, grasping at my fingers with her swollen pussy lips. Britt and Kate were still in a heated mediation as I plunged two fingers in and out of the Gina's luscious snatch. It wasn't going to take much to bring her to the brink and she found a box to lean on, ready for the finale. Switching up fingers, I let my middle and ring fingers massage her interior as my wet index finger poised itself over her asshole. As I felt her pussy contracting, her orgasm ready to peak, I leaned closer to her and whispered as my pointer probed her pink pucker; \"Next time, it'll be my cock sliding into your ass,\" as I buried my finger to the second knuckle. She let out a growl and cursed softly as she fought to stay upright and quiet, her body trembling as she came on my fingers. \n\nI remained bent over next to her, pretending to pick through the pots and pans until Gina was somewhat composed. Kate had won the battle of the ugly lamp and was proudly walking it to the appropriate area while I approached from the opposite direction, pots and pans in hand and rigid dick proudly leading the way. Kate looked at it suspiciously, probably wondering why it had grown interested again. I caught her staring and simply shrugged my shoulders; \"Three gorgeous women running around naked; what do you expect?\" turning back to get another load. I could feel Kate's stare burning a hole on my butt, and I gave it a little shake, earning me a snicker.\n\nQuicker than I thought possible, even with the occasional grope and feel, we had our three piles. Britt went into the house and grabbed us some beers and we retrieved some chairs from the 'keep' pile and sat back and took in our accomplishment. \"I'm proud of you girls,\" I said, taking a pull on the long-neck. \"I think I'll just build a storage closet against the outside wall here and you can get to it whenever you want.\" Glancing at the pile that was destined to move into the house, I said, \"I was a little concerned that that pile,\" tilting my head in that direction, \"was going to be much bigger, but I think we can manage all of that,\" taking another sip.\n\n\"Well, none of us are real clothes horses,\" said Britt as she played with the cold bottle against her stiff nipples, \"and it looks like the only time we'll even need clothes is when we're not here,\" glancing back and forth over all of us. We all clinked bottles, seconding that motion, \"Here, here!\" we said in unison, laughing loudly.\n\nBefore we got too comfortable, we gathered up the belongings that were moving in with the girls. I quickly grabbed the sex toys and marched them into the house with the girls close behind, commenting on my butt, trying to draw my attention away from the box. Once in their room, I'm sure the girls thought I would just set the box down and leave it to them to put things away; only Britt suspected I couldn't leave well enough alone and she hung at door, ready for the show. I carried the box straight to their bed and unceremoniously dumped it onto the comforter. Gasps and yelps, followed by a furious floundering of both Kate and Gina; trying to keep the objects of sexual gratification out of my view. Like brave soldiers hurling their bodies on a live grenade to protect their fellow combatants from harm, the two went face down, butts in the air, legs akimbo, pussies and asses on glorious display. \n\nBritt and I both laughed out loud as the girls scurried to hide the embarrassing items underneath them; reminding me of a mother hen trying to keep her inquisitive chick safely tucked away under her protective feathers. Satisfied they had their bases covered as it were, a game of keep-away ensued as both Britt and I reached under and around the squirming naked forms, grabbing toys and body parts. Eventually we were all too tired to resist one another and we collapsed onto the bed, breathing hard with big smiles all around. I wiggled my way toward the center of the bed, lying back with something poking me in the shoulder. I managed to twist around enough to grab the amazingly heavy object. On my back again, I held the object up for inspection; \"Wow!\"",
        "Britt lay beside me and looked up at my hands, \"Pretty, huh?\"\n\nAnd it was pretty, but it also looked imposing. I held an 18\" long glass, double-ended dildo. Swirls of color and spiral textures gave it an art-like appearance. Except for the obvious phallic notes, it could easily be called a piece of art, and maybe on some levels, regardless of its intended use, it really was art. I didn't see it going on my fireplace mantle anytime soon though, even if I had a fireplace. \n\nThe girls relented to my curiosity and even turned the tides as they proudly showed off each toy and explained its use, wanting to demonstrate on me, even if they were all pretty much gender specific. I made sure to keep my butt down and my legs together. I made a mental catalogue of the items; you never know when you might need to borrow a tool...or a toy. Finally inventoried and repacked, I realized I was pooped and ready for a nap. \n\nI sat up and announced my intentions; \"Well I'm tired from working all day,\" which drew jeers and tickling; \"So,\" scooting toward the end of the bed, \"I'm gonna take a shower and take a little nap.\" I was the last one in the shower.\n\nThe mention of 'shower' was the trigger that emptied the bedroom like the bed was ablaze. By the time I gathered up towels and stepped through the glass door, the rain was falling, the stars were shining and three angel's bodies glistened as they began to wash each other's hair, a daisy chain of follicle cleansing. I managed to slip into the middle and worked on various and sundry body parts, the excess shampoo, my hands and their undulating bodies worked to clean one another. My persistent hard-on kept getting hung up as I tried to rotate as the spindle of this feminine flesh roller. Various slick hands helped me on my way as I caressed and cleaned every square inch of supple shapeliness I could find. \n\nMany gallons of water later, we emerged from the simulated spring rain and toweled each other off, raining soft kisses on one another. The girls had previously perfected the synchronized hair drying and brushing routine; the unlucky one facing Kate's backside, the shortest, with the longest hair. I elected to help Gina tackle this chore. I stood alongside her, working my half and felt her eyes on me. Her brown eyes sparkled with a happiness that radiated outward. Pursing her lips, she leaned over for a kiss, which I was happy to render. Long and tender, the brushing never ceased and a soft hand caressed my butt; Britt's loving caress. \n\nThe hair drying was a bit haphazard as we were anxious to crawl under the covers. Without word or question, we all converged on my bed, snuggling up, hands searching for something to hold, legs intertwined; soon there was nothing but contentment and occasionally, Britt's cute little snore.\n\nI slept like the proverbial log, swaddled in soft, warm female flesh. Waking and turning my head to the left, I spied a small, dark nipple, begging for attention. With a little effort, I had my lips around it, nursing softly, eliciting a pleasurable humming from Kate as she tried to get me to take in more of her delicate breast. Soft hands and lips played with my cock as my hands search for something to keep them occupied. A mystery hand guided one of mine to a pair of protruding pussy lips, wet with anticipation. Spreading, probing slightly and extracting sweet nectar, I explored the area, searching for clues as to the owner of this particular pussy. A guttural groan gave it away as Britt's pussy tried to suck my fingers inside.\n\nMy uncanny power of deduction told me that it was Gina whose lovely lips were wrapped around my cock. I managed to reach down and run may fingers through her hair, her head bobbing for cock. \n\nEven the covering of silk sheets became too much as our combined body heat rose. The sheets finally found their way to the floor, leaving me still ensconced in the middle of the bed, face up where I started. The little one was to my left, her right tit lost in my mouth as she rubbed her crotch on my hip. Britt was to my right, staring at the back of my head, groaning as she held my right hand to her pussy, riding my fingers as she nibbled on my shoulder. The long, tall Gina must have had most of her legs off the end of the bed as she lay between my legs, sucking and stroking happily. \n\nLost in the moment, a shooting pain radiated from my shoulder. Kate yelped as I responded by nipping at the nipple, pulling herself out of harm's way. I turned to Britt as she rode out her orgasm, trying to shove my hand inside herself and I tried to pry her jaw loose from my shoulder. Succeeding, she stared at me through hooded eyes, smiling as her orgasm continued.\n\nThe cock-sucking had stopped as Gina watched her blonde lover writhe on my digits. She ran her hands lovingly up and down Britt's long legs, sharing the vibrations that still ran up and down her body. Kate meanwhile got up on her knees beside me, leaning over me to give her blonde roomie a kiss. I nuzzled her belly as she passed over me. The little one giggled as I tickled her with my lips and tongue until she was too distracted to continue making out with my girlfriend. Kate slowly moved back, allowing my tongue to trail up her body until she stopped long enough to kiss me, her long black hair hiding us from the others. \n\nI turned back to Britt who had found the strength to roll up and kiss me, my hand still firmly held in her greedy cunt. \"Fuck, you've got good fingers,\" she said, nibbling at my lips. I wiggled my talented tips causing another tremor. \"Fucker,\" she groaned, rocking her hips on my hand, biting on my chin. \n\nExhausted, Britt rolled back onto her back, releasing my captive hand which was quickly captured again, this time by Gina. I watched as she sucked on my fingers, relishing the taste of her girlfriend. My dick responded as though it was the recipient of her loving lips. \n\nSuddenly my view was blocked as a familiar, girlish slash hovered above my face. Little Kate's pussy was that of a young girl, just a smooth slit on a soft mound of flesh, shiny with anticipation, her inner lips waiting within. Gina had finished cleaning my fingers just in time as my natural instinct is to grab the nearest ass cheeks whenever possible, and here were two of the smallest and firmest in the land, just waiting to be held. \n\nI heard Gina utter something about \"good idea,\" as I pulled the intoxicating young pussy to my lips. I sensed Gina knee-walking up the bed, her right leg rubbing against my side as she, I assumed, matched the riding stance of her little friend, straddling Britt's face. I heard Gina moan as I imagined Britt's talented tongue dancing inside the buxom brunette's sweet snatch. \n\n\"Pay attention,\" Kate demanded as she put her hands under my head and held it against her as she rode my face, slipping and sliding as I kneaded her butt cheeks. My tongue parted her outer lips, slithering inside, teasing her inner lips and tickling her shy clit. Pulling her forward by the butt, I forced my tongue into her depths, licking inside her as my nose nuzzled her stiffening love button. Kate moaned as she rocked her hips as my tongue slurped her free-flowing juices. \n\nThe sounds to my right left little to the imagination as Britt growled and made sucking sounds as she devoured Gina's tasty twat. \"Oh god, eat me Britt! Fuck, your tongue feels so fucking good... oh yeah, suck my clitty baby... eat that pussy...I'm gonna cum all over your face baby...fuck...oh yeah, right there!\"\n\nKate was close, so I decided to switch it up a little, you know, prolong the pleasure. I reached up and grabbed her by her tiny waist and slid her down onto my chest. She stared down at my pussy-soaked face and gave me that 'how-dare-you' look. Before she could utter a verbal complaint, I grabbed her hips and spun her around until that enticing ass was facing me. She glanced over her shoulder at me as she threw her long tresses over her shoulder, giving me a clear view and unencumbered access. \n\n\"Lean forward baby,\" I said as I pulled her a bit closer and tucked a pillow under my head. I massaged her taut butt cheeks, pulling them apart, exposing her pink pucker. I ran my hands down to the inside of her thighs, spreading her legs. \"You have the sweetest pussy baby,\" as I ran a finger up one side of her lips and down the other, sending a shiver through her. \"Do you want to cum baby? Do you want me to eat your sweet pussy until you cum all over my face?\"\n\n\"Uh huh,\" she moaned, her face resting on my belly, shrouded by a blanket of long black hair.\n\n\"Spread your ass for me baby. I want to play with your ass while I eat your little pussy. Would you like that baby, would you like me to finger your ass while I fuck your pussy with my tongue?\"\n\n\"Oh fuck me,\" I heard in two-part harmony as Kate reached back with both hands and spread her ass cheeks, giving me an obscene view of her playground. I glanced up at the source of the other voice to see Gina's eyes wide, both I presume from the view of her petite roommates pornographic pose and her other partners talented tongue dancing around her pussy. \"Eat her,\" she mouthed, sucking in air as Britt found a sensitive spot.\n\n\"Fuck me Britt, I'm cumming baby,\" Gina cried as she held the blondes head and ground her sex on her best friend's face while staring at mine. \"Oh my god,\" she moaned as her body rocked back and forth, her orgasm having its way with her. \n\nMeanwhile Kate had managed to inch her way closer, undulating her way up my torso as she kept her hands in place, displaying herself to me. I spread her legs further, her pussy now gaping; her bright pink pussy interior beckoned me. Kate groaned, envisioning my view and she pulled her ass cheeks even further apart, her asshole staring me in the eye. \"You are so fucking nasty,\" I proclaimed as I sucked her entire pussy into my mouth, exploring her insides with my tongue as my nose poked at her asshole. \n\n\"Jeezus,\" she moaned as her tongue mimicked mine, licking at my stomach. I sucked and probed, licked and nuzzled, trying to cover all the bases. Fingers ran through my hair as I realized Britt and Gina now lay beside me and watched as I feasted on their friend. Britt ran her hands over Kate's back and butt as I brought her closer and closer to the end. Gina had evidently tired of the show at this end of the bed and I soon felt her soft lips once again on my neglected cock. \n\nI also felt a hand on my forehead, seemingly pushing me downward. I opened my eyes and managed to focus on Britt hovering over us, her hand on the little one's ass between Kate's who still spread herself open to the world. \"I'll take her ass baby,\" Britt whispered as her middle finger slipped into Kate's wet snatch, gathering some lube. \"You concentrate on her pussy and I'll finger her ass.\"\n\nKate moaned her agreement to the deal as Britt slowly inserted the tip of her middle finger; short, wet, tight strokes. I couldn't focus this close to the action, so I went back to my assignment. It didn't take but another minute until Kate was in the throes of a body-racking orgasm. \"Uh..uh..uh..uh....Ohhhhhhh.....\" was all she could utter. Her pussy juices flowed, filling my mouth as I tried to swallow all I could.\n\nConveniently already face down; Kate collapsed the rest of the way, exhausted and breathing hard, her hot breath blowing on my belly. Britt and Gina abandoned their posts to care for their friend, moving her long hair to the side, and blowing on her back, trying to cool her down. I did my part by massaging her now outstretched legs which straddled my head, moving from her feet to her butt, working the tension out.\n\nFinally back amongst the living, Kate spun on top of me, the girls ducking out of the way. She crawled the rest of the way up, until we were face to face. Her eyes glistened and the emotion showed. Knowing she didn't need to speak, she kissed me softly at first; then tasting herself, she kissed and licked my face until she was satisfied that I was clean. One last kiss, and she hugged me, dropping her head beside mine, whispering softly; \"I love you too.\"\n\nI felt a couple kisses on the side of my cock and then drifted off to never-never land.\n\n** Who knows how much later **\n\nI woke up alone in bed, the tittering of female voices coming from the kitchen. I struggled out of bed, stretched and wandered into the bathroom to take a leak. Un-interrupted, I rinsed my face and brushed the now-not-so-sweet pussy taste out of my mouth. I went back onto the bedroom to find my three comely roommates perched side-by-side on the end of the bed, legs crossed and looking beautiful. \"Why don't I have a camera with me at times like this,\" I said as I approached them.\n\nKate smiled and reached behind them and came up with my Nikon, happily handing it to me. I took it and gave each one a quick kiss before stepping back and taking a couple shots. All three are absolutely gorgeous in their own way and with their long hair brushed out and just a hint of make-up, they are all perfection and my cock told them so as I looked at them through the viewfinder. They all carried coy smiles as I sat the camera on the dresser. \"So?\" I inquired, knowing something was up.\n\n\"Oh,\" said Britt as she stood up and turned to the bed, bending to get something, showing off her beautiful backside, her pussy sneaking a peek out at me. \"We just figured that Kate's pussy wasn't all that filling, so we made you a little snack. Here, sit back on the bed,\" directing me back to the head of the king-size bed. \n\nI sat back, leaning back on pillows and the headboard, Kate on one side and Britt on the other. Gina stayed at the foot of the bed, standing with her legs slightly spread, her hands on her hips. The other two fed me bits of fruit and bread, interspersed with kisses and caresses. Distracted, I felt movement on the bed and looked out to see Gina, her long brunette hair hanging over each shoulder, inching her way up the bed toward my feet. She stopped there, on her knees and began to massage my feet and calves; it felt wonderful and I told her so. She smiled as the she continued, spreading my legs apart to work her way closer, the others trying to keep my attention with food and their lips on mine. \n\nGina soon reached what I assumed was her final destination, and laid face down between my legs and inspected my stiffening cock. My view was breathtaking; her long lean body prone between my legs, her bubble-butt standing proud with her long legs stretching forever. Her tongue traced little paths up and down my length as her fingers wandered around my balls. Kate was busy running her tiny hands over my chest, weaving her fingers through my hair, tweaking my nipples. Britt meanwhile continued to kiss me, nibbling at my neck, her tongue exploring my ear. She tugged at my earlobe with her teeth, causing my cock to twitch, bopping Gina in the nose, causing her to giggle and grab it to gain control.\n\nBritt stayed at my ear as I watched Gina, who was watching me, take the tip of my cock between her lips and suck lightly, her tongue playing with the pee hole. Britt whispered softly, but loud enough for the others to hear; \"George lover, I thinks it's time to give that big cock of yours a little relief, and we were all talking and, if it's alright with you, we think it's time to let Gina feel how good it is to have a real cock in her ass. What do you think baby, after the teasing you gave her this morning, don't you think it's only fair that you give her the real thing?\" \n\nMy cock was now bottoming out in Gina's throat, her big brown eyes looking for an answer. Kate had a firm grip on one of my nipples and Britt's tongue was driving me to the brink playing with my ear. Gina worked her way back up my cock, her teeth dragging up the length until they hit the bottom of the crown where she stopped and looked me in the eye once more, biting down just a bit, teasing. We both knew what my answer would be, but I evidently had to verbalize it for them all to hear; \"I would like nothing better than to feel Gina's tight ass on my cock, feeling her cum as I fill her with mine.\"\n\nGina visibly shivered at the thought and released my cock, kissing the head before she moved up to give me a real kiss, her warm tongue dancing with mine. Britt and Kate left the bed as Gina and I rolled onto our sides, making out like high-schoolers. My hands roamed her backside, grasping at her butt, massaging her back. Her hands also wandered, pulling us tight, her pussy grinding on my rigid member. Nearly out of breath, we broke and now noticed that Kate had my camera in hand, a small flash attached and Britt had her back to us at the dresser, fooling with something. \n\nNot really caring about what the others were up to, I pushed Gina to her back and kissed my way up her long legs. I wasn't going for the marathon foreplay session this time; we were both clearly worked up enough; I just couldn't resist paying homage to those long beautiful limbs. Kate was snapping shots as I made my trek. Her pussy was soaked and I didn't even try to compete with the pussy-licking she had just received from Britt, but I had to have a small sample, running my tongue deep inside her. She clinched her pussy on my tongue, letting me know who was boss. I withdrew and gave her a little nip on the inside of her thigh. \n\nKate continued to click away, and I could only imagine how the shots would turn out. I turned to her and asked, \"Babe, could you hand me a pillow please?\" She quickly filled my request and took her position beside us once more. Gina was staring at me as I folded the pillow and pushing her legs together and then back, I lifted her butt off the bed and tucked the pillow underneath. Satisfied, I scooted back and grabbing her ankles, I made my wish, spreading her legs lewdly, all her treasures revealed. She sucked in her breath, aware of how exposed she was. If she hadn't been, she would be in a second as Kate chimed in, looking through the lens; \"Fuck that's hot, hold that for a second,\" as she started firing off shots, testing the limits of the flash.\n\nGina's eyes bored through mine as she chewed on her bottom lip. Our connection was broken as the pornographer, naked as her model, bounded up onto the bed and straddled Gina, standing over her with her back to her, staring straight down at Gina's open sex. \"Play with her pussy,\" Kate directed. I had other ideas and leaned down, running my tongue over her tight pucker and up over her pussy, settling at the top, sucking her clit between my lips. Gina quivered, reaching between Kate's legs and pushing my face deeper into her pussy.\n\nI know it wasn't much of a shot, the back of my head between two outstretched gams; but I wasn't in it for the art at the moment, I was there to pleasure Gina. The brunette let me catch my breath as I lapped at her pussy, working my tongue in and around her lips. I felt a tap on my shoulder and looked to the left; \"Here, try this,\" said Britt, handing me a small tapered butt plug, pre-lubed.\n\n\"Thanks,\" I said, giving her a wink. Turning back to my work, we made eye contact again, bracketed by Kate's spread legs. Gina watched intently, as did the others as I slowly worked the bright blue plug into her backside. Gina hummed softly as I slowly stroked it in and out until it was bottomed out. I pushed against it lightly, rocking it back and forth as I leaned in again and teased her pussy with my tongue and ran my hands up and down the inside of her thighs. I backed off and teased the butt plug a bit more, rocking it inside her, her pussy contracting, searching. \n\nI felt the taping on my shoulder once more. My lovely assistant had a bigger plug in her hand now, nearly twice the diameter and longer too. I worked my fingers under the flange of the small plug and slowly drew it upward, but not without some resistance. Her asshole gaped open momentarily and Kate and I raced for it, her to take a picture and me to probe her opening with my tongue. I'm not sure who won the race, but Gina moaned her satisfaction as I rimmed her ass. Feeling a little bad for probably ruining Kate's shot, I spread Gina's ass wide, her secrets now all bared. ",
        "\"Fuck, that's nasty,\" Kate groaned as she zoomed in, snapping multiple shots of the obscene display. I turned back to Britt and took the bigger plug from her but not before pulling her down to me and giving her a big kiss. Back to work, I caught Gina's gaze once more and winked at her as I set the tip of the bigger plug on her nether hole, now snuggly closed. I pushed gently, bouncing it against the resistance, slowly making progress. Holding steady, I looked back to her as she was locked on to the plug trying to make entry when something caught both our eyes. It took but a second when it happened again and we were more focused now and Gina felt it on her belly. \n\nWe watched with fascination as a droplet formed on Kate's distended pussy lips and then hung momentarily until Newton's law took effect and a droplet of Kate's excitement dripped onto Gina's belly once more. My dick jerked at the sight, but more amazingly, the butt plug that just moments ago fought for position suddenly free-fell into place. Gina shivered at the sensation, a small climax rushing through her.\n\nBritt too had been taking in this whole scene; \"Come here Katie,\" she said, reaching for her and helping her off the bed on her wobbly legs; \"You're just getting in the way.\" She sat the little one down and dropped to her own knees and attacked the little pussy with her tongue, sending waves of pleasure though the young one's body. Meanwhile, I took another stab at Gina's pussy, working the plug with one finger while I licked her soaked snatch. \n\nGina was now just about beside herself and as I enjoyed myself, I pondered my next move, wondering if Britt had anymore toys at the ready. I lifted my head and saw Britt and Kate embracing one another, caught up in their own scenario. I looked up at Gina, one hand working her tits, twisting her nipples as the other worked its way toward her pussy. I grabbed the approaching poacher, intent on keeping this pussy to myself. Her eyes had a look of desperation as I denied her. With a guttural groan she croaked, \"Fuck me; fuck me please.\"\n\n'Hell of an idea,' I thought. I pulled the pillow out from under her and assumed the position, resting the tip of my pulsing cock at her entry. Gina reached for me, grasping my shoulders, trying to draw me inward. On my knees, I watched my rock-hard cock spread her pussy lips, sneaking a peek inside. My cock pushed down slightly on the flange of the plug, still planted firmly in her ass. I leaned forward, my arms holding me up above her, and face to face we watched one another as my cock made its way into the steamy depths. Her pussy was tight as the intruder in her ass pushed against my cock, separated by a thin wall of flesh and nerve endings. \n\nGina's lips formed an 'O' as I filled her completely. Crotch to crotch, I did a little hula move, stirring her insides, my cock tip kissing her cervix, my balls slapping the end of the butt plug. \"Oh my god, \"she moaned as I fucked her to and fro, in and out, my cock re-stretching her with each cycle. Gina's eyes grew large and she reached up around my neck and pulled me down for a kiss as her pussy grabbed my cock and hugged it tight. Her hips rocked as her orgasm overtook her, nearly suffocating me as she tried to inhale through our kiss.\n\nThe distraction of Kate's camera flash probably helped me from just giving in and unloading inside the amazons' cunt, but the thought of replacing that foreign object inside her tight ass with my own kept me in line. I pushed myself back up on my knees, giving our photog a better view, which she took advantage of. Britt was at the head of the bed, kissing and comforting Gina as I slowly backed out, Kate chronicling each inch of progress. My cock exited with an audible 'pop', leaving her pussy empty and open. Kate nearly pushed me off the bed to grab the shot; Gina's well fucked pussy, gaping and dripping onto the plastic probe below.\n\nBritt ran her hand over Gina's brow, brushing the few stray hairs from her face. \"Are you ready baby?\" she asked her best friend. Gina looked up at me with a wanting look like I had never seen on a woman's face before and if we had held the stare much longer, I might of cum then and there, just thinking of plundering her virgin ass. \n\nGina nodded in the affirmative, never losing eye contact with me; \"How do you want to do it?\" Britt inquired.\n\nThis caught her off-guard and she turned to her friend, seeking her advice; \"You're the authority,\" she smiled. Pausing, both sets of wheels clearly spinning, Gina looked at me again and said, \"As long as I can see his face while we make love; that's all I want.\"\n\nBritt smiled and kissed her softly, whispering to her as they teased each other's breasts. Kate continued shooting like it was a documentary. Decision made, Britt instructed; \"Lover, you lay on your back and Gina's gonna' play a little cowgirl; how's that sound?\"\n\n\"Sounds good to me; nothing I like better than bein' rode hard and put away wet,\" I said in my best John Wayne.\n\nBritt laughed out loud at my attempt to impersonate the Duke, which was probably made just that much more ridiculous as I did it standing with my hands on my hips, legs slightly apart and Gina's essence threatening to drip off my cock and onto the floor. Kate quickly sized up the situation, but not before snapping a quick close-up of my slickened stiffness and then proceeding to lick me clean.\n\nI took my spot on the bed, a pillow under my head. Kate, the art director jumped in the middle of it; \"Here Gina, get up on all fours next to lover-boy with your butt facing him.\" Gina complied, her eyes riveted to mine as I ran my hand over her firm butt. \n\n\"Okay guys, turn a little to the right so I can sort of shoot over George's shoulder, okay?\" My dick jumped a little as I envisioned the Point-of-view shots that Kate was looking to take; 'I like how this girl thinks,' I thought as I scooched over a little.\n\n\"Okay, Britt, can you get beside her and spread her ass for me?\" \n\n\"Oh God,\" Gina moaned as Britt sidled up next to her and pulled her ass cheeks wide; Britt winked at me and threw me a little kiss.\n\n\"Perfect, okay stud, slowly pull the plug on my girl's ass there,\" she giggled, her eye never leaving the viewfinder. Gina's never left mine as I slipped two fingers under the 'tee' of the plug and she moaned a bit as I pushed against the 'taint'; that fun spot between the asshole and pussy. A little pressure here, on a girl, or me for that matter is always welcome. Enough anatomy; through squinched eyes, Gina watched me slowly extract the toy, its ever-widening diameter sending little jolts of joy through her. The camera shutter clattered in my ear as we reached the largest diameter, near the center of the 6\" long toy. Gina moaned as I held the plug steady, keeping her retracting bunghole from shooting the plug across the room.\n\n\"Okay, pull it out,\" I was directed, \"I want to see her open ass,\" Kate whispered in my ear. Gina groaned, imagining the sight of her open ass and still-dripping cunt, framed by her best friend's hands spreading her ass lewdly. I pulled the toy out the remaining three inches leaving a gaping hole that just didn't look right. What I mean is, I'm a visual kinda guy, and I don't think anything is much sexier than a woman's ass, but this wide open was almost too much. \n\nAnd to Kate, this was evidently a wondrous sight; \"Ah, fuck Gina, that's hot,\" she moaned as she continued to burn up the megabytes. Britt leaned around; her hands still secure on Gina's ass, and lightly blew into her open hole. Gina giggled at the sensation, her pussy lips contracting too.\n\n\"Okay,\" Britt said, letting the brunette's ass cheeks take a break and letting them go; \"Let's do this. First, let's get our dick good and hard, shall we?\"\n\nWith that, all three bent down, descending on a cock that I thought was already pretty fucking hard, but what do I know, right? I took the camera from Kate and held it up above my head, shooting down at the three lovelies taking turns slathering my cock, licking and sucking until I had to call them off. \n\n\"Okay baby,\" Britt said to Gina, \"let's get you lubed up.\" Kate took possession of the camera again and snapped away as Britt had Gina kneel between my legs. Handing Gina a bottle of oil; \"Here, you get that cock all slicked up and I'll work back here,\" giving Gina a little slap on the ass; \"stick it up here girl,\" she ordered. Gina quivered as she drizzled the lube on my cock, already plenty wet, as Britt ran oil down her girl's ass crack, following it with her fingers. \n\n\"Umm...\" Gina moaned as Britt worked a couple of oil saturated digits into the tight orifice. Gina's grip tightened as Britt worked more oil deep inside her. My cock visibly throbbed, the head beginning to turn purple....if this didn't happen soon, I couldn't be held responsible. My low groan caught Britt's attention and she quickly shifted gears. Pulling her fingers free, she pushed Gina up onto her knees and worked one long limb after the other over my legs until the leggy brunette was straddling me, hovering my shimmering shaft.\n\nBritt laid down between my legs, looking between Gina's thighs and latched onto my cock. Kate stood at the foot of the bed and captured the moment. \"Okay babe, settle down at your own pace.\" \n\nGina reached her hands out, and I reached up with mine, giving her support, our fingers interlocked, as were our eyes. Slowly she descended until we both felt the initial mating. My crown was nestled against her backdoor, anxious to come in. She smiled a grimaced grin as she let herself fall further, stopping abruptly as the head of my cock made entrance, snapping tight around my shaft. \"Ohh...\" she gasped as she felt the intruder pass. \n\nHer hands squeezed mine as Britt coached from behind; \"relax babe,\" as I sensed Britt's grip tighten also. Gina took a couple deep breaths, and then concentrating, she closed her eyes and slowly lowered herself, taking another inch or so. Despite Britt's grasp, I couldn't help flexing a little, causing Gina to groan and her eyes flew open, \"Oh fuck, that's good..,\" her eyes closing tight once more as she rocked up and down slightly, getting used to the feeling. \n\nKate was busy beside me, trying to find the next innovative shot. She bent over beside me, trying to find an angle to shoot up at our joining. Glancing over, I was afforded a perfect view of the little one's pussy lips, still dripping wet, and as she spread her legs slightly to get her torso down a bit lower, her tight pink pucker came into view. I tried to imagine how tight that little hole would be which only cause my cock to respond again.\n\n\"Oh my god....,\"Gina groaned as she suddenly captured another four inches of my cock. She nearly broke my wrists as she pushed back, giving up the six inches she'd already claimed. Opening her eyes, she stared into mine and slowly reclaimed the six, determined to get it all.\n\n\"Just a bit more babe,\" Britt coached, her hand now resting on my balls, her head resting on my thigh, watching Gina's virgin ass consume me. Gina slowly settled down until her pussy lips kissed my pubes and she rocked slightly, seating my cock firmly inside her. Britt caressed my balls as she ran her other hand over Gina's taut cheeks. \"Feel good baby?\" she asked.\n\n\"Fuck yeah,\" we both responded in unison. \n\nBritt and Kate giggled at our synchronized reply. Britt sat up and came around to our side; bending back over to give me a soft kiss before leaning in and giving Gina a kiss so deep I could feel it all the way to my cock. Britt ran her hand down over Gina's belly, sliding south. Gina's ass clinched my cock harder, anticipating Britt's hand arriving at her anxious pussy. She pulled up short, holding her hand flat against her lower tummy and then ran her other hand down the backside until it had a firm grasp of the tall one's ass. Britt burrowed through a tangle of hair until she found Gina's ear. Running her tongue inside, Gina tightened her anal grip once more, quivering at Britt's fondling.\n\nGina's hips continued to move ever-so-slightly, the most delicate and minute fucking I've ever had. Her weight on my groin and her hands in mine kept me from grabbing her by the hips and getting on with the show. Finally, after she had had enough play-time, I heard Britt whisper in Gina's ear; \"Shall we fuck him now?\" \n\nGina moaned, her eyes on fire, burning a hole to my soul; \"I'm going to fuck you now,\" she exclaimed as she slowly slid up my pole. I could feel the cool air on my shaft and a finger, Britt's, grazing up the backside of my cock until we'd reached the top, Gina's tight pucker unwilling to release me entirely. \n\nWith Britt at the ready, her hands in position fore and aft, Gina mouthed 'I love you,' and then said matter-of \u2013factly; \"Fuck my ass lover...Let's fuck!\" She started a nice slow cadence, up and down, gaining and losing, up and down again. At one upstroke, she stopped, paused, closed her eyes and then she dropped until we were married completely once more, Britt's hand captured between my belly and her pussy; the combination triggering the first orgasm. \"Ohhh fuuucckkkk meee,...., \" she wailed as she ground her pussy on Britt's hand, her ass contracting up and down my length.\n\nA few minutes passed as Gina came back down to earth; Britt unable to reclaim her hand, caressed Gina's backside with the other. \"Oh, sorry,\" Gina said, as she felt Britt's captured hand between us and lifted up enough to let her escape. Still hand in hand, Gina leaned forward, pushing my arms back until we were face to face, her breasts nearly in the way. \"Thank you,\" she said softly as she brought her lips to mine. Gina lost track of my hands, releasing them to run her hands through my hair as we kissed. Lost in the moment, I startled her, nearly sacrificing my tongue when I pushed down on the small of her back as I arched mine, planting my still-excited dick a little deeper into her butt. \n\nGina lifted her head a bit and glared at me through a tangle of hair, clearly upset that I had interrupted a make-out session that she was thoroughly enjoying. \"My turn,\" I said and with one swift move, I had her on her back, my dick still in place. I hugged her tight, my head beside hers, nuzzling at her neck as I did a little dance, rolling my hips, working my cock back into the depths of her tight ass. Pausing when I'd gotten as deep as I could at this angle, I kissed her ear, running my tongue around the inside, causing her to squirm beneath me; \"Now I'm going to fuck your ass until you beg me to stop making you cum,\" flexing my cock, sending shockwaves through her. She dug her nails into my back as she arched hers, only forcing my cock deeper. \n\n\"Ffffuuuuccccckkkk....\" She stuttered. \n\n\"See baby,\" I said, pushing up and kissing her trembling lips. \"You're mine now baby,\" I said as I started off slow. Up on my knees, I held her long legs upright, running my hands and tongue up and down as I rocked my hips to and fro, plundering her beautiful butt. The camera continued to flash, close-ups taken of my veined shaft hiding, then re-appearing, only to duck for cover again as the camera sought it out. \n\nBritt moved up beside us, kissing me as she ran her hand up and down Gina's body, pinching her erect nipples, fingering her navel and teasing her blossoming pussy. Her clit stood erect, looking for some attention as Britt drizzled some more lube on my cock. A little of the cool liquid dripped on her trigger setting off a small explosion. Gina reached up and pulled Britt down, savagely kissing her, pulling her tight, breast to breast as Gina thrust her hips at me, looking for more.\n\nAs the two friends ravaged one another, I took the opportunity to slow it done a bit, taking long deliberate strokes. The moaning continued as Britt and Gina's hands assailed the other's tits as they continued to deep throat each other's tongues. Watching my cock moving deliberately, a small hand came into view, sneaking toward Gina's neglected pussy. As I looked up, Kate was in my face, her lips on mine, her hand on my butt, trying to plant me deeper into Gina's ass. \n\nGina managed an \"Oh my god!\" as Britt continued to ravish her. I felt the cause as Kate's hand slithered over Gina's pussy and her fingers straddled my cock. The little one, proving to be the nastiest of the trio, rested the palm of her hand on Gina's pussy, teasing her clit as her fingers rode my cock, pressing against her taint at the same time. Gina was soon nearly delirious as nearly every erogenous zone she possessed was under attack. \n\nBritt gave up on kissing Gina as the moans and writhing made it nearly impossible. \"Oh god, oh god, oh god....\" Gina groaned as her long, lean body seized momentarily and then, like a burning fuse coming to the powder keg, she literally exploded. \"Ahhhhhh.....\" she cried as her hips thrust upward, burying my cock and Kate's hand deeper and tighter. We held our ground as the convulsions continued, a flood of pussy juice coating my cock and Kate's fingers. Kate hugged me tight, hanging on for the ride, her hand still on my butt, making sure I stayed put, buried in an ass that rippled up and down my length, begging me to give up my load. \n\nI managed to hold my own, like a second wind, I wasn't ready to make my deposit just yet. Slowly, the aftershocks subsided and her two roommates backed off, letting Gina catch her breath and cool down. I remained in place, firmly ensconced, lovingly caressing her long limbs which I still held upright. Peeking out at her between her shapely calves, she rocked her head back and forth on the pillow muttering \"I never, ever, ever, ever....\" \n\nBritt and Kate laid down beside her and ran their hands through her long, dark hair, sprinkling little kisses on her face and shoulders until she finally lie still and gave a big sigh, like it was finally over. Britt glanced up at me and gave a wink and then turned back to Gina and said, \"Uh sweetie, George hasn't cum yet.\"\n\nGina's expression was hard to read, but she didn't give me time to give it much thought. \"C'mon lover,\" she said with a gravely growl, \"I'm not beggin' yet. Let's see if you can make me cum again before you blow your load up my tight ass.\" Gina clinched her ass on my well-used cock, egging me on. \"Come on George, let me feel your cock fill my ass with your hot cum baby. Come on stud, lube me up and fuck the shit out of me like you promised!\" There was an unmistakable fire in her eyes; she wasn't acting; she was calling me out. \n\n\"Alright then; Kate, grab that bottle of lube, and Britt, get me that pillow, would you?\" The girls quickly turned to, ready to follow my orders. Still holding Gina's svelte limbs, \"Babe, fold the pillow in two and tuck it under her,\" I said, as I pushed Gina back, my cock barely parked in her back end. \n\n\"Okay Sweetie,\" I said to Kate; \"lube us up,\" as I spread those long legs once more. I gazed down at Gina as we felt the cool liquid dribbling onto us. Gina jumped, startled, and I looked down to see Kate running her hand over Gina's pussy, her fingers dipping inside momentarily. Gina stuck out her tongue;\"Bitch,\" she smiled as Kate took one more little probe before working her hand around the bit of my cock that now showed. I pulled out completely, letting her have her fun and causing Gina to gasp at the emptiness. Kate giggled as she gave me a couple sloppy strokes and then guided me back.\n\n\"Okay ladies; grab a leg,\" I ordered. They both lit up as they faced each other on either side of us and ceremoniously spread this long-limbed, brunette vixen wide. My target was still a bit low, so I reached down, tucking it further up her back, her butt now cantilevered above the mattress. Inching back up, I placed the tip of my cock at her back door, and teased, bouncing lightly until I popped in. Inching forward and leaning back, ready for the final assault, I ran my hands up and down her inner thighs and asked as she shivered; \"Are you ready, baby?\"",
        "\"Just fuck me,\" she growled as she chewed on her lower lip, her hands down flat at her side, ready to push back. \n\nWithout further ado, I entered the forbidden zone once more, captivated by the feeling that encircled my cock; warm and slick, tight and welcoming. I wrapped my arms around her thighs as my cohorts held her legs hostage. I stroked slowly; full long strokes that made her gasp each time we mated completely; \"You are so fucking tight babe,\" I whispered as I concentrated on the feeling. Gina smiled, happy that she could return the favor. \n\nThe girls switched up hands, running their un-occupied ones either over Gina's front side or my backside. Random hands squeezed butts and breasts as Gina and I bucked at each other, obscene sounds emanating from our joining. \n\nIt wasn't a race or a competition, but neither of us would be satisfied until we were sure that the other would be. Knowing the end was near, we exchanged simple, one-word messages; \"Yeah?\"...\"Yeah\"...\"Okay?\"...\"Yeah\"...\"Better?...\"Uh-huh\"...\n\nUnbeknownst to us Gina or I, our two roommates were also carrying on a silent conversation. Wrapped up in each other, Gina didn't take note of Kate's hand parked precariously close to the top of her vulnerable pussy. I was likewise unaware of Britt's long fingers making their way toward my un-witting asshole. \n\n\"Oh fuck, oh fuck, oh fuck baby, I'm close,\" Gina moaned, her eyes closed tight and her hands threatening to rip the sheets off the bed.\n\n\"Me too babe,\" I mumbled as the sweat dripping was off my nose, just missing the back of Kate's hand.\n\nThe room was silent, save the grunts and groans as I pummeled her tight ass and she thrust her hips at me. \"Unnnnh...\" I groaned as I felt my cum begin its journey, outbound for glory. \n\n\"Ahhhhh...\" she cried as her climax began deep inside.\n\nAnd then.....gasping for breath and bug-eyed, we both exploded, imploded; we didn't know what hit us as with perfect timing, Britt's long middle finger slid into 'my' ass and Kate squeezed the top of Gina's pussy, pinching her clit. \n\nI came and I came until I feared I would turn myself inside out, hanging on to all three women. Gina convulsed and cried tears of utter ecstasy. Gina's ass contracted until it finally forced out the intruder who had just flooded her to overflowing. Kate and Britt held me and guided me down, maneuvering me around Gina's quivering legs until we were side-by-side. We held each other as tight as physics and what little strength we had left would allow. Gina sniffled in my ear, whispering, \"I love you,\" repeatedly, kissing my neck in-between. \n\n\"I love you too,\" I whispered under the cover of her long brunette tresses, nibbling on her neck, my legs intertwined with hers.\n\nBritt and Kate eased off the bed, and stood with their arms around each other looking down at us, tired and spent. They managed to pull the sheets into shape covered us as we drifted off to sleep. Kate ran her hand through Gina's hair, uncovering my face which surely had a smile on it. Gina's face too was one of blissful content and Kate whispered to Britt; \"I changed my mind again.\"\n\nBritt put her finger over her lips, not wanting to wake us and led Kate out of the bedroom. \"What do you mean, you've changed your mind?\" as they walked toward the kitchen.\n\nKate giggled and then placed her hand on Britt's butt, her fingers slipping up between her thighs; \"I want to give George my ass too.\"\n\nBritt turned and kissed her hard and deep as they groped at each other ass, moaning and fantasizing.  "
    ],
    "authorname": "GeorgeDaBuilder",
    "tags": [
        "foursome",
        "anal",
        "roommates",
        "photography",
        "porn"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/everybody-needs-a-hobby-ch-14"
}