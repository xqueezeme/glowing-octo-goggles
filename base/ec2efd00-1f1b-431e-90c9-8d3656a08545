{
    "title": "Life as a New Hire Ch. 47",
    "pages": [
        "*Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells. A special 'thank you' to Mike this time around*\n\n*Although Love is both fire and shadow, we often forget to take comfort from the coolness of the memories when the burning flames are absent*\n\n*****\n\n{3:00 pm SUNDAY, SEPTEMBER 7th ~ LAST DAY}\n\n\"Now aren't you glad we tagged along?\" Pamela said loudly enough to draw attention from the onlookers. She was still beating me up for sending Juanita away and for running off with an avatar-Goddess of the Cult of the Jaguar. But we would have been drawing attention anyway. \n\nSee, I was in my least-favorite place to get beat up: the Full-blooded gym at Havenstone. Oh, the Amazons knew me by now. They knew Pamela too. It was my other four 'guests' which were drawing the attention/ire. Three were 'outsider' women: \n\nFBI Special Agent Virginia Maddox was known to a few of the Security Services and the Security Detail Amazons, who quickly spread the word about who she was. If they hadn't ... well her grey workout attire with yellow FBI lettering on it would have helped clarify any confusion.\n\nThe other two were New York Police officers Nikita Kutuzov and her mother, Larisa (aka 'The Desk Sergeant'). Those two were with me because Larisa had been insistent on coming and Pamela had publically announced it was a 'capital idea', there-by vacating my veto.\n\n\"I thought you were a bigwig?\" Larisa Kutuzov had accused me.\n\n\"I am, but she scares everyone,\" I'd shrugged helplessly. Larisa then looked to Pamela, who shrugged as if she couldn't understand why ANYONE would be afraid of her. So those two, dressed in navy blue workout attire labeled NYPD with golden lettering, were also accompanying me into Pain Central. \n\nHad those three outsiders not been with me, it wouldn't really have mattered in the 'attention getting' department because my fourth guest was Chaz. Yeah, Chaz. Mind you, Chaz hadn't wanted to come either, but Pamela insisted I might need help before all this shit sorted itself out. \n\nChaz wasn't as 'pretty' as me, but compensated by possessing the aura of a professional elite warrior ~ calm, detached and unflappable in a crisis such as calmly walking into a room where 200 women wanted to kill you: \n\n... a third of them wanted to rape you, then kill you,\n\n... another third wanted to kill you by raping you (Chaz was awfully 'manly' after all), \n\n... and the balance just wanted to kill you and move on to whatever was next.\n\nNow, what the fuck was I doing in the Full-blooded gym? I had promised to meet Oneida to discuss our hastily revealed 'Warrior's Love' during this morning's council session ... right before Rhada attacked her. But why was Oneida meeting me in the gym? \n\nAs I scanned about upon entry, I saw Oneida and my heart sank. My bad day clearly was not getting better. A portion of the sparring mats closest to me had been cleared out for a circular meeting of kneeling Amazons, who were most certainly waiting for 'Yours Truly'. Thirteen Amazons were waiting for me. I knew them all ... five intimately. Closest to my left were three members of House Zorja: House Head Jana, her Apprentice Marlene and my old buddy Elsa. \n\nTo their left were Shawnee and Oneida of House Arinniti. Opposite me was the Keeper of Records, Krasimira, with the augur Tad\u00eafi and their guardians; Sikia and the persistently with Krasimira whose name I'd never gotten. Beside them were Mahdi and Rhada. Closing the circle were the Head and Apprentice of House Bendis: Klavdiya and Gale. \n\nThe moment I saw Tad\u00eafi, any half-assed plan I was cobbling together flew out the window. Sikia was holding Tad\u00eafi's hand which she clenched when she caught sight of me. I hadn't believed I would ever see the augur alive again, yet here she was. Fuck it all. I was vaguely aware of Pamela telling Chaz and Virginia to 'clear the road'.\n\n\"Ishara,\" the Apprentice of House Maeve, Rhonwenn, decided to make a protest in front of the onlookers, \"these strangers are not welcome.\" She moved toward me. By the five companions she was bringing along, she expected some level of resistance. Fortunately, she was addressing me/us in Old Kingdom Hittite, which meant only Pamela and I understood what the heck she was saying.\n\n\"Rhonwenn,\" I turned on her with teary eyes, \"the Mother of my first born daughter is here when it was prophesied I would never hold her again this side of the cliffs. If I hug her, I can hug them both and show them I share my love,\" I led with my heart's song.\n\n\"First born?\" Rhonwenn frowned.\n\n\"Yes. By Ishara's command, the augur Tad\u00eafi was the first to have her destiny twisted by the Goddess. The price will be her life to bring the first Isharan daughter to her first breath. In a dream, I was told I would never see her again,\" I moved past her. \n\n\"What of the strangers?\" she followed along.\n\n\"Leave this to me,\" Pamela grabbed Rhonwenn's arm and pulled her aside. The old witch had arranged things so Nikita and Mamma peeled off to support her, leaving Virginia to cover our back and Chaz to watch my other flank.\n\nI stepped between Elsa and Klavdiya Bendis, vaguely asking for their pardon as I passed them. Tad\u00eafi seemed sullen, so I boomed subsonic rumblings from deep within my diaphragm. It was a wordless message to her. Murmurs of 'Cael' and 'Ishara' floated around. I wanted to hug Tad\u00eafi; I fell to my knees before her. My hands flew to her hips as she reached out, determined to find me despite her blindness.\n\nHer fingers brushed along my chest. I was dead set on showering her face with kisses. Tad\u00eafi's right hand danced to my lips while her left hand's fingertips traced along my tear tracks. She started to weep too.\n\n\"You are crying,\" Tad\u00eafi needlessly pointed out.\n\n\"I thought I would never see you again,\" I breathed over her fingers.\n\n\"The Goddesses often show us what might be, not what must be,\" her words lilted harmonically. \"Perhaps you bear such grief, you have recast the Weave itself, my C\u00e1el.\"\n\nI had to think about that for a second. The Weave operated outside the strictures of Time as we humans saw it. It acting in a compassionate way toward me wasn't something I was seriously entertaining, but perhaps my actions had tripped up a few things. I certainly felt I needed a few extra hugs.\n\n\"Could it not be the love of Tad\u00eafi which has altered events?\" I turned things around. \"You are the first mother-augur I've ever heard of.\" Yeah, I was ignoring the crowd around us. It was both good and bad. Bad was me showing affection to one lady when I was here for showing affection to too many women (in their opinion.) The good was me paying attention to the one who had the least ... the one whose fate the rest would simply rather not think about. \n\n\"I am an augur. I ...\" her words trailed off. She was a slave to the Weave; a sacrifice by the Host to the mysticism of the world around them. However an augur ended up casted as an augur, I always had the impression her sisterhood quickly tried to forget them as the individuals they had once been. Well screw that notion. A hand came to rest on my shoulder. It was the guardian, Sikia. Whatever everyone else thought, I was earning serious Brownie points in her book.\n\n\"Hey Sikia. Sorry. Didn't mean to ignore you,\" I gave a sheepish grin.\n\n\"I understand, Ishara,\" she bowed her head slightly. \"Tad\u00eafi told me of your visitation.\" For me it had been a dream. For Tad\u00eafi, it had been a waking moment. Krasimira coughed. I had business to attend to.\n\n\"Right-O!\" I said as I kissed the augur's fingers. Next, I leaned awkwardly over and gave a full, lusty French kiss to Sikia.\n\nThat wasn't what most of the attendees thought I was supposed to be doing, but I still had to be me. I pushed up rapidly to both keep the initiative and to give the impression I was about to topple over backwards. I needed that split-second of uncertainty from a certain someone. I spun, slipped my right hand behind Rhada's neck and planted my lips firmly on hers.\n\nI was standing up, towering over the Indian Princess, so she had to bend her body backwards as I pressed in. The 'oh please fuck me now' moan boiled up from deep within Rhada and couldn't be misunderstood by anyone who had been given an orgasm which took them to the peak of their physical and mental limitations. The person I had to make 'uncertain' wasn't Rhada, it was Mahdi.\n\nIn this instant, Rhada needed to know she mattered to me most of all. The rest could be relied on to create emotional-social constructs to explain our chaotic relationship. Rhada and I were too raw. She needed an open and public declaration I wasn't going anywhere or denying there was an 'us'. When I finally pulled away, Rhada's eyes were feverish, her bosom heaved with passion and I'd banished her doubts. Oh ... and Mahdi was furious.\n\n\"Mahdi,\" I bowed in acknowledgment, spun away before her retort spilled forth, took five steps and went to one knee before Oneida. I leaned in awkwardly; Oneida figured out my intentions and met my embrace halfway. Our kiss, while packing in all the accessories, was more sedate and romantic ~ what Oneida deserved. I left her smiling. Better for me, I left with Shawnee giving me a veiled sign of her approval. I hadn't gone to Oneida first, but she recognized I was acting in a diplomatic fashion, which was probably for the best as far as the Host was concerned.\n\nIn a maneuver reminiscent of a Cossack, I went knee to knee from Oneida to Gale. Gale recoiled. We'd had sex, not a relationship.\n\n\"May I kiss your hand?\" I requested. She shot her House Head a worried look.\n\n\"Isn't it a little late for that,\" Klavdiya's words dripped with venom. What I hadn't appreciated was while Klavdiya was the House Head, she also was Gale's 'Big Sister'. Whoops.\n\nI risked it and took Gale's hand anyway.\n\n\"For friendship and respect,\" I planted a firm kiss on her knuckles. \"For affection and gratitude,\" I said as I turned her hand over and planted delicate kisses on her fingertips and finally her palm. It took her a second to play catch-up.\n\n\"What are you grateful for?\" Gale asked.\n\n\"Oh ...\" I faux-hesitated. \"Well, our love-making was wonderful for me. I hoped ...\" and Gale blushed.\n\n\"Chaz, do you like seafood?\" Pamela asked casually (and in English).\n\n\"I'm from an island-nation. It is somewhat of a necessity,\" he replied deadpan. I kept deep, meaningful eye-contact with Gale, seemingly ignoring the mutterings around us. Implying any woman you've slept with, even as a One Night Stand, had been a completely memorable experience is an indispensable dating skill (i.e., so please ignore the other women presently bearing my children, my fianc\u00e9e and my other past, current and hopefully future sexual misadventures.)\n\n\"Would you let my sister's hand go?\" Klavdiya growled (back to OKH). I was on the sparring mat, so force escalation was highly likely. I reluctantly released Gale's hand. She had the ego-boosting effect of sighing as she let my hand slide away from hers.\n\n\"So,\" I looked around as I stood. \"Why are we here?\"\n\n\"The Queen wishes peace,\" Krasimira began. I felt warm inside. Aya was looking out for me.\n\n\"Cool,\" I beamed. \"Where do I sit?\"\n\n\"Where is the rest of House Ishara?\" Krasimira's gaze flickered to the outsiders with me.\n\n\"I travel alone. These are Pamela Cotytto's buddies,\" I lied. That earned a whole series of looks for both me and my entourage.\n\n\"Oh,\" Krasimira accepted my lie at face value. \"Pamela, you are not welcome here at this meeting.\"\n\n\"I choose to be rude,\" Pamela responded.\n\n\"This has been long overdue,\" Elsa stood. I had no idea who would win an Elsa vs. Pamela fight. I wasn't going to find out today because a dozen Amazons looked ready to make this an unfair brawl.\n\n\"Okay,\" I intervened. \"I had a fight with my bodyguard earlier today, then a confrontation with the Cult of the Jaguar this afternoon which required Pamela and the rest having to come rescue me. Besides, the rest don't speak our language.\" \n\n\"You are among sisters, Ishara,\" Krasimira chided me. \"Practice the truth.\"\n\nI didn't scoff. That would have been impolite and highly unwise. \"I'll do my best,\" I bowed my head. \"I'll also stand here in the middle, since everyone else seems comfortable.\" That meant no one would have to make space for Pamela and company.\n\n\"As I said,\" Krasimira began again, \"our Queen wishes peace between our houses and hopes the blood of Ishara can facilitate this somewhat.\"\n\n'Oh, they are going to take turns beating me up,' was the first thing to come to my mind and probably some others' as well.\n\n\"How so?\" I asked first. The words were forming on other lips as I spoke.\n\n\"By the adoption of daughters among those gathered here,\" Krasimira stated.\n\n\"No!\" Rhada blurted out. Oneida's hand protectively went over her womb.\n\n\"For peace,\" Krasimira suggested to Rhada. Mahdi was livid over our shared indiscretion as well as Rhada's outburst. If Rhada hadn't already been placed on the Regency Council, Mahdi might have removed her status as Apprentice.\n\n\"What does this have to do with us?\" Jana Zorja gave a worried look.\n\n\"It was thought a child of Elsa Zorja and C\u00e1el Ishara could be adopted by House Meenakshi (aka Mahdi and Rhada).\"\n\n\"We have not had intercourse,\" Elsa clarified at her House Head's glance, \"though if I had, it would be none of your business since I am presently with the Security Detail.\" Jana bristled, as did Marlene. \n\n\"I do not sleep with every Amazon I feel a connection with here at Havenstone,\" I protested. \"And at the start I always used a condom. Even with the Goddess Ishara's command, I have never wanted to bring any woman grief. I certainly don't want to create trading tokens because of some feud which happened before I stepped foot in this wacky place. Besides, Gale might not be ...\"\n\n\"I am,\" Gale sulked.\n\n\"Fine,\" I soaked up more bad news from the Man-Dog-Pig perspective, \"I will not agree to trade a single child of Ishara.\"\n\n\"Besides,\" Mahdi glowered at Rhada, \"it could be a son.\" Ouch. Rhada looked as if her mother had just slapped her; worse, had strangled her favorite kitten before her eyes.\n\n\"We can settle that matter,\" Krasimira continued guiding the meeting. \"We are in the presence of an augur after all.\" Oh ... that was why I was meeting Tad\u00eafi here! \"It helps if she has a link to the fate of a person she seeks to investigate as well as something the person loves.\"\n\n\"Oh, so we are going to castrate him and hand her his balls?\" Mahdi muttered. Whoa now!\n\n\"Such as?\" I inquired.\n\n\"A personal belonging, or body part; hair will do,\" Krasimira informed me.\n\n\"Oh,\" I sighed happily. I went over to Tad\u00eafi, knelt before her and took her right hand to place upon my lips. \"To read the fates of me and my children, you need some of my hair or that of someone I love?\"\n\n\"Yes,\" she smiled.\n\n\"Your hair will do, if there is any doubt, Tad\u00eafi.\"\n\n\"I knew that,\" she announced, \"but I wanted to 'hear' you say it,\" she shared her joy with the crowd.\n\n\"Would it help to have some of my hair as well?\" I proffered.\n\n\"It would indeed,\" her lips trembled sensuously. I pulled out my trusty Amazon blade and sawed off a few locks while she did the same. I handed them over.\n\n\"Step back,\" Sikia cautioned me. She didn't need to. The moment my hair touched Tad\u00eafi's hands, other presences entered the room behind her ~ terrifying and majestic in their power ... the goddesses and mystic protectors of the augurs, Istustaya and Papaya.\n\nThey seemed to be as surprised I could see them as I was to be seeing them. The room's dimensions distorted and lost all clear points of reference. It was the illusions which concealed the Weave being laid bare. Unlike her sisters, Tad\u00eafi's life's essence was burning down brightly to a very pre-determined end - the birth of our daughter, Shala; there would be no slow, lingering demise for her. Added to that, she was the Sixth Augur. \n\nWhen the other five augurs had pierced the Veil of the Weave with her to find the Ally the Host needed most, the agony had been too much for them. The Five had soaked up all that pain and agony, ending their lives so the Sixth could bear the message to the person the Weave dictated could wield the news most effectively - me. \n\nAs 'payment', Dot Ishara had insisted I have sex with Tad\u00eafi, guaranteeing the death of her poison-racked body with the birth of our offspring. I had done so callously. Tad\u00eafi had done so ... for her own reasons ... perhaps to end the echoes of the death screams of her sisters as they fulfilled their mission.\n\nNow the possible destinies of my other children were being discussed and the two goddesses were making an appearance. Perhaps they were aware the Heir of Vranus was playing Russian roulette with Creation. More likely, they knew I was up to something, yet in the tangled weave of all the possible futures, they couldn't tell what dangers existed amid all the darkness and confusion.\n\nTad\u00eafi spit into her hands as she rolled our combined hairs together. When she had created one long strand, she began to pull the concoction apart. The first effort fell into two parts. I didn't know what to make of that. Thank goodness I'm not an augur.\n\n\"I see a ... closet,\" the augur's brow furrowed. \"A woman in shadow ... a fast horse ... bearing messages ...\"\n\nI had to put that together. My closet-ninja who I'd ridden like the Pony Express - Miyako Yuki. \n\n\"A member of the 7 Families of the Ninja,\" I provided.\n\n\"Twin daughters,\" Tad\u00eafi made her prediction. Wow! Lithe, slender Miyako with twins would be tough. I had to get word to her. How had Saku missed that? Twin souls?\n\n\"Ah ... Fushichou and Yozora,\" I conjured the second name. \"That is Suwais-ur\u0101ni and Ispantnepi\u0161 in our tongue.\"\n\nThe next was an equitable serpentine entwining of her white hair and my black.\n\n\"Peaceful, beautiful and strong of body and mind ... an exemplar of our people ... Parvati?\" Tad\u00eafi worked through the next bit of soothsaying. Her face clouded, even as Rhada's brightened. \"She will die still in her youth ~ much loved and a bitter foe.\" When an augur predicted 'peaceful' she didn't mean 'non-violent', she meant 'of calm mind'. 'Youth' didn't mean child; it meant in your first decade of being caste. Still, that sucked big time for the three of us ~ Mother, Father and Daughter.\n\n\"My granddaughter will die a hero of the Host?\" Mahdi murmured. 'Bitter Foe' meant 'hated by our enemies' thus a memorable threat to them. The augur was still in the midst of her soothsaying.\n\nThe third casting was a bit of hair in a loop.\n\n\"A son of two houses and three lives ... many loving sisters and favored by his mothers.\"\n\nHmmm ... two houses was easy: Amazon and someone else. Three lives ... I knew one group who played at being a third person ~ the Hashashin.\n\n\"Bih\u00eal\u00eeasan,\" I supplied the name Estere Abed and I had been toying with. In Kurdish it meant 'keep it simple'. What better advice could I give a son of mine?\n\n\"A daughter of Bendis,\" Tad\u00eafi announced as she traced a corkscrewed bit of bound hair. Gale gasped. \"Inky blackness ... a night sky with few stars ... a place which is cold beyond cold, yet warmed by hope and fearlessness ... the Moon grows small, yet is strong in her heart.\"\n\nSounded like utter nonsense ... except I worked with JIKIT. It only took me a few seconds.\n\n\"Gale, our daughter is going to be an astronaut,\" I turned her way. Skepticism and disbelief surrounded me. \"Gale, her God-uncle is the Great Khan, who not only controls the largest Russian spaceport, he also has captured the largest spaceport in China as well. He controls the third spaceport in China too, if you want to rub it in,\" I added. \"And, if the Amazons do send someone into space, who better than a child of the Moon?\" Bendis was the Thracian Lunar deity. ",
        "\"Why?\" Gale finally asked.\n\n\"Did our Queen not say 'the world is too small a place'?\" I answered. \"Why shouldn't the Amazons seek a future out among the stars? We have certainly headed out into the dangerous Unknown before and survived. Now we have access to the resources to help us do just that.\"\n\n\"Those are outsiders,\" Gale protested. House Bendis was part of the Conservative faction of the Council.\n\n\"I'm not making this up, Gale. Tad\u00eafi is. Have you thought of a name?\"\n\n\"Ah ... no.\"\n\n\"How about Hantezzi-p\u0113da?\" I suggested. It had two meanings. Long form: 'First Place'. Short form: 'Lucky'. I left her to digest that because the augur hadn't stopped.\n\n\"A large temple without a roof filled with people ... a son and daughter ... a white stallion rises up upon the graves of thirteen kings. A gift of two rivers steeped in blood. Ana-C\u0103lina,\" she stumbled over the names, \"and \u00c1rp\u00e1d.\" The last name I knew, which boiled back to the roofless temple ~ the Sz\u00e9kesfeh\u00e9rv\u00e1r Basilica in Hungary where I planned to marry Hana was a ruin - roofless. Two sets of twins? My family didn't have a history of twins. I'd check with Hana, but I strongly suspected my matron deity sticking it to me once again.\n\nMaybe I should buy my own daycare center. Maybe Pamela looks like she wants to slap me upside my head too.\n\n\"A boy born in hatred with a heart which heals if he ...\" the vision appeared to confuse Tad\u00eafi ... which was ugly to contemplate. That would most likely mean others fucking with the Weave as well. \"Borne in safety by a ghost and a name - Hana.\" A pause. That vision had been physically costly for the augur. So many women hated me ... a ghost?\n\n\"\u00c1infean [AWN f'yun] ... known by another name not her own ... Bansealgaire ... not our own ...\" more painful, mystic discombobulation on her part. Fortunately, I didn't know the names, but I know the second name's ethnic point of origin - Irish. Aunt Imogen. \u00c1infean Bansealgaire meant ... stormy huntress - Sweet! Now if I only knew which side that daughter would end up on.\n\n\"The Trickster ... Shining Son of the Sun who jests and whose great heart remains untouched, no matter what the burden ... Ash ...\" Tad\u00eafi regained some of her focus. This one had to be Oneida and my offspring ~ a son. I stole a glance at her face. She was stunned, not heartbroken.\n\n\"We will name him Bruce,\" I expelled my worry, \"in honor of the quintessential 'Ash' man.\"\n\n\"Who?\" she looked up at me, teary-eyed.\n\n\"When I come back from the Great Hunt we'll spend a weekend watching all the Evil Dead films ...\" I got out.\n\n\"And Bubba Ho-Tep,\" Pamela tacked on.\n\n\"And Sundown,\" I almost missed yet another Campbell Cult-Classic.\n\n\"Focus Ishara,\" huffed Krasimira maternally.\n\n\"I'm about to have a dozen children. I want to die,\" blurted forth from my lips.\n\n\"I thought this would be welcome news C\u00e1el,\" Tad\u00eafi wailed. She'd exerted so much effort on my behalf, only to have me act spasmodically infantile?\n\n\"It isn't you, Tad\u00eafi,\" I soothed her with both words and a gentle hand along her jawline from earlobe to her lower lip. \"I didn't come to Havenstone expecting Fatherhood; and I know for a fact every House Head present has 'okayed' the murder of at least one infant boy, so I don't trust a single one of them ... which means I have to take full responsibility for every male child.\"\n\n\"And you remain an 11th year in your heart,\" she reasoned.\n\n\"Yeah ... pretty much.\" '11th year', an Amazon 'pre-Test', thus free of any true duties. I let her slump into me. Her guardian deities had faded into the Aether, so it was safe for her to be human again. \"Wait. How come you understand that when no one else does?\"\n\n\"I have seen your spirit-self, C\u00e1el Ishara,\" she reminded me. \"The real you.\"\n\n\"We seem to be no closer to resolving our disputes,\" Jana interrupted my bonding moment.\n\n\"What do you want?\" I slowly repositioned myself so I had Tad\u00eafi in my lap, facing me. It was somewhat sexual, but it allowed her to regain some comfort from her ordeal. Sikia was very close by.\n\n\"Redress of Meenakshi insults,\" Jana derided me.\n\n\"Don't be a child,\" I spat back before Mahdi could get her own vicious licks in. Jana's face clouded, as did Marlene's and Elsa's.\n\n\"You know nothing of what you speak of, Ishara, yet you now feel free to insult us,\" she simmered.\n\n\"Don't know - don't care. It was all before my time. I care about the 'here-and-now' as well as what we do in the future. What I am asking you is what concrete item or 'thing' can be provided to House Zorja to put this blood feud behind you. Name it and House Ishara will endeavor to procure it for you.\"\n\n\"We are not merchants,\" Jana's eyes narrowed.\n\n\"No. I didn't imply you were. If you want new sandals for everyone in your House, I'll find you new sandals. If you want 100,000 acres of ranchland, I'll find you the land. Name it,\" I persisted. \n\n\"Our prestige cannot be bought,\" she 'explained'.\n\n\"No, but a blood feud with House Ishara can be avoided by making a request of us in the same way as expressing your desire to harm my daughter can be expressed by denying my offer,\" I hardened. \"And 'fuck you very much' if you think I won't use EVERY son, daughter, mother, aunt ... and uncle of Ishara when I come gunning for House Zorja too.\"\n\n\"You wouldn't dare bring outsiders into this,\" Klavdiya interjected.\n\n\"Why not? The offices of Ishara handed House Zorja the coup of the century ~ the capture of the People's Liberation Army Navy nuclear carrier. A member of House Zorja commanded that task, yet they did so by leading forces marshalled by House Ishara - outsider forces. You may wish to keep playing by old rules concerning who is and isn't part of a House, but I am not so constrained ... SISTERS.\"\n\n\"So Klavdiya, if House Meenakshi pursues its blood feud with House Zorja, House Ishara will gleefully join them in the pummeling. And we have Isharans in the 9 Clans, the Khanate and the Illuminati who will gladly help us out in slapping them around like the old-fashion curmudgeons they are showing themselves to be ... or, House Zorja may request a gift from House Ishara and we will happily clear accounts between them and House Meenakshi in the name of our daughter, Parvati. Their choice.\"\n\n\"You are still on the mats,\" Elsa reminded me. Sikia coiled protectively next to us.\n\n\"And you said something about a lesson being long overdue,\" Pamela smirked, \"Kitten.\"\n\n\"C\u00e1el Ishara,\" Shawnee said in a soft voice, \"perhaps it is germane to the argument: the fault of the blood feud rests with House Zorja, not House Meenakshi.\"\n\nI fell on my back, carrying Tad\u00eafi with me. She gasped out in surprise while remaining closely cuddled with me. Her right hand never left my lips.\n\n\"Why does no one tell me this shit?\" I moaned.\n\n\"You are hard,\" Tad\u00eafi announced. \"Are you ready to have more sex?\" She was sounding upbeat about our prospects. She was also ignorant of our surroundings being deaf and blind to the mortal realm.\n\n\"Gossamer Wing,\" I created a pet name for the augur, \"we are lying on the sparring mats of a large combat arena in the central Full-blooded training center for Havenstone with roughly 500 sisters in attendance (the audience had grown). While I am enticed by your scent, words, proximity and sweet memories of what we've shared, I'm probably going to be badly beaten up really soon for a terrific diplomatic snafu.\"\n\n\"But then we can have sex?\"\n\n\"Yeah. I'm totally up for having sex with you after they release me from Medical,\" I assured her. I looked around her to a very unhappy Mahdi.\n\n\"Can you find it in your heart to forgive House Zorja? Anything I can ...\"\n\n\"Yes,\" she abruptly cut me off.\n\nWhat the fuck?\n\n\"At this time, my hatred of House Ishara, and you in particular, make any grievance I have with House Zorja pale in comparison. You have bewitched my only daughter. She bares your child ... and it will be a wonderful child if the soiled augur you've stuck your dick in is to be believed,\" she ground out bitterly. \"I want to go home. I want to find enemies to kill. And when I do, C\u00e1el Ishara, know each and every one of them will carry your face in my mind.\"\n\nShe turned to Jana. \"Do you agree that we both hate Ishara enough to put aside our current differences?\"\n\nJana studied Mahdi, me, then Mahdi again and agreed. She stood. Mahdi stood. They clasped arms like Amazons, then hugged like sisters.\n\n\"Agreed. He is much worse.\"\n\nMy thoughts on the matter. Woot! I was having sex! Oh, and I was making Aya happy by ending a blood feud.\n\n\"My admiration of you continues to increase,\" Krasimira looked at me. \"This diplomacy stuff is harder than it looks yet you pull it off so effortlessly.\"\n\n\"Yay me!\" I muttered.\n\n\"Keeper, are we done?\" Sikia asked Krasimira. \n\n\"I believe so,\" the older Amazon rose to her feet. Sikia was far faster in rising.\n\n\"Mahdi of Meenakshi, you have insulted me and my augur. Defend yourself,\" she snarled. If Tad\u00eafi hadn't been immediately present, Mahdi wouldn't have even warranted a warning no doubt. \n\n\"Had you done your job,\" Mahdi flowed into her fighting stance, \"you both wouldn't be pregnant.\"\n\n\"Whoa now,\" I struggled to rise while keeping Tad\u00eafi close and my body between her and the Meenakshi/Zorja side of the mat. \"Sikia, I can't let you fight. You're pregnant too.\"\n\n\"Don't be stupid, C\u00e1el Ishara,\" Sikia retreated off the mat ... so she could shed her jacket and footwear. \"Amazons have fought pregnant for thousands of years.\"\n\n\"Hold on now,\" NYPD Sgt. Larisa Kutuzov said in English as she moved forward. I was a millisecond too late. Larisa's foot touched down on the mat and Marlene Zorja popped her one - a hand chop to the larynx. The senior cop stumbled forward.\n\n\"Mom!\" shouted Nikita. Marlene followed up with a leg sweep, putting Larisa face first on the mats, then a fist strike to the back of the head, knocking her out. Neat and tidy in less than two seconds.\n\nNikita was about to charge in when Chaz stopped her.\n\n\"Footwear,\" he advised in the tone of voice I had learned to associate with him and imminent violence. The moment he stopped her, he was quickly removing his own socks and shoes. Virginia and Pamela were doing the same. I was allowed freedom of movement because I was holding Tad\u00eafi. Krasimira exited because of her unique status. The rest were already barefoot.\n\n\"Gale, could you please stay with Tad\u00eafi,\" I tried to hand her off.\n\n\"No,\" Gale looked me over. \"I will fight.\" No hint on whose side she would be fighting on. Krasimira came to my rescue.\n\n\"I'll take her.\"\n\n\"Tad\u00eafi,\" I told the augur, \"I have to go get beaten up now, but I promise I will be back for you directly.\"\n\n\"This is not your fight,\" Krasimira said. \"The words and deeds are Sikia's.\"\n\n\"A - she carries my child and B - the deeds being called into question are my fault.\"\n\n\"You told me once they were the Will of Ishara,\" Krasimira mused.\n\n\"We are one in the same,\" I gave a lopsided grin. \n\n\"Be careful,\" Tad\u00eafi pleaded. \"Your future is a chaotic jumble ... I cannot see ...\"\n\n\"Eh ... I've been very bad. We'll talk about it later. Gotta go,\" I headed onto the mats.\n\nPamela was giving the ground rules to the 'normals': No 'fair warnings'. No 'fair play'. No 'time outs'. You fought until unconscious, or you surrendered. \n\n\"This is going to suck,\" Virginia assessed our odds. Two Amazons had removed Larisa from the mats and were tending to her. Nikita was kneeling by her side until she heard Virginia, then came our way.\n\nBesides Sikia, we had Pamela, Chaz, Virginia, myself and Nikita. Oneida stepping up was nice. She wasn't a great combatant, but we dearly needed the help. Gale joining us was ... unsettling. Amazons don't play fair, so this could be a ruse. \n\nAgainst us were all three Zorja and both Meenakshi ~ I imagined Rhada felt she had something to prove to her mother. They'd picked up ten other Amazons and Rhonwenn Nemain. Klavdiya joined them to counterbalance her baby sister. Eight to seventeen ~ ouch.\n\n\"Damn,\" a familiar voice from my first days on the job spoke up from behind me, \"we almost missed this.\" I didn't dare look over my shoulder. Desiree stepped between Chaz and Virginia. Rachel came up on my left and Tiger Lily on my right. At the tail end of our line was Mona, Meridian, Brielle and Wies\u0142awa. Fifteen to seventeen was looking much better, especially considering Desiree had brought five Security Detail warriors with her, all of whom were moving to further bolster our numbers.\n\n\"Rachel,\" Elsa looked to her underling, \"you have no idea why you are fighting.\"\n\n\"It is for C\u00e1el. So it must be for a better tomorrow,\" Rachel laughed.\n\n\"Very well,\" Elsa smirked.\n\n\"You!\" Mahdi pointed at me ... and we both charged. It was a jumbled nightmare of clashing bodies, war cries and flashes of movement all around. Our side had two main advantages - \n\nWhile Chaz was by no means the best hand-to-hand combatant present, he knew the basic Amazon style and most Amazons didn't know his. Added to his overall height and bulk advantages ... he bought us time.\n\nOf greater importance, Rachel, Tiger Lily and Mona had extensive training working as a team, which none of the opponents had.\n\nElsa was the most dangerous individual on the mat. Pamela was the second most dangerous, so Elsa grabbed a couple of partners and ganged up on her to drive her off the mats. Chaz went next - out-Elsa'ed and beaten unconscious. The issue was - it took her too long to accomplish those two feats. By the time she rounded on me, Rachel and Tiger Lily, our half of the field had wiped out theirs. It was six of us (me, Rachel, Tiger Lily, Gale, Wies\u0142awa and Desiree) versus four of them (Elsa, Marlene, Klavdiya and Rhonwenn).\n\nStill, I was facing Elsa, so a judicious bit of treachery was required.\n\n\"Gale,\" I huffed and puffed, \"please retire. I don't want you to fight your sister.\"\n\n\"What?\" Gale snapped. She'd taken a beating, yet remained feisty. \n\n\"No - fighting her sister is okay with me,\" Desiree scowled. \"We are still facing fucking Elsa.\"\n\n\"All the other women you have mated with have failed. I remain,\" Gale trumpeted. \n\n\"Oh ... you are right,\" I half-turned. \"All the reason you are more precious to me.\"\n\n\"Really?\"\n\n\"Of course,\" I deepened my introspective appreciation of her.\n\n\"Oh,\" and Klavdiya punched Rhonwenn. That was an 'oh, C\u00e1el Ishara must actually care for my baby sister and not be just a Playa' on Klavdiya's part. Yeah. I'm a horrible fucking person at times.\n\nRachel, Tiger Lily and I rushed Elsa. Marlene pivoted to ward against Klavdiya while Gale and Wies\u0142awa stormed in against her. Desiree helped Klavdiya finish drubbing Rhonwenn before they combined to force Marlene off the mats. Elsa chose to go down swinging in a dogpile of bodies. I took an ear-ringing blow to the head which allowed Rachel to apply a chokehold and it was lights out for the Head of SD.\n\nAfter some water bottles went around and those concussed returned to wakefulness, the resolution of the brawl was decided. Mahdi apologized to Sikia. It was short, terse and sparing of any empathy, yet was within the bounds of Amazon etiquette. She departed with Rhada, which left me to pick up the pieces ... starting with Nikita's mom.\n\n\"Ooohhh ...\" the older woman moaned then, \"Ms. Fredrickson? What are you doing here?\"\n\n\"Avenging you, Mother,\" Nikita fluffed up the truth. \"She, C\u00e1el and the others cleaned house on the woman who jumped you and her allies.\"\n\n\"Desk Sergeant,\" Desiree gave a curt nod.\n\n\"This isn't over,\" Larisa winced as she moved to a sitting position.\n\n\"Mrs. Kutuzov, it is over,\" I headed off a colossal waste of time. \"This is my daily life and part of your daughter's life with JIKIT. You will find scant witnesses and no tape recordings of these events. This craziness is just another day in the life here at Havenstone. You stepped on the mat and thus became fair game to any physical confrontation an opponent cared to mete out. Consider this sovereign soil of an independent nation-state.\"\n\n\"We ...\" she looked around. \"You kicked their asses?\"\n\n\"Definitely,\" Pamela gave a feral snarl. \n\n\"This is plain nuts,\" she shook her head, winced in cranial pain, then put her aching head in her hands.\n\n\"One of the reasons we've put our dating in hiatus,\" Nikita comforted her mother while looking at me ... and smiling affectionately.\n\nAh, for fuck sakes! I was engaged to someone else and having a dozen kids by ten different women. How could I still possibly be considered viable dating material? Oh yeah ... martial valor, laughing at death, I hung out with truly exceptional cool people and I would always be in need of saving - a plus for a crusader like Nikita.\n\nI had so many allies to tend to, but only one who seemed to be making an exit. I swooped down on Tad\u00eafi long enough to place her fingers to my lips.\n\n\"I'll be right back - friend of a friend in need,\" and off I went. I caught Tavi of House Stolgos just outside the door. She wasn't avoiding me. She'd been observing Chaz and he had been otherwise occupied. \n\n[***]\n\nMy British companion had played a pivotal role in the combat and taken his beating like a man. He'd been rendered unconscious. So had many others, so no stigma was attached to his loss. Post-battle, he had chosen to sit on his haunches, knees up, talking to several of the Amazons - both kneeling and standing. A few had been bystanders and a few others foes.\n\nHe stayed on his ass to reduce his height advantage. Letting Amazons make eye contact while not having to look up at you created definite benefits. His good natured approach to his role in the fight and pummeling earned him positive vibes as well. He made it clear the tussle to him was not macho-personal. He was my 'brother / sister / sibling' spiritually-speaking via Pamela adopting us both as her 'grandsons', so my fights were his fights. Sikia had my (C\u00e1el's) child, so that bond extended to her as well ~ family. \n\nPamela and I had schooled him on Amazon psychology and those lessons were now paying serious dividends. 'The Male' hadn't wanted to fight them ~ 'Amazons are tough' he'd confessed - he knew this because he worked with several every day on JIKIT~ but family was on the line, so he fought. Mahdi had apologized, so the matter was settled. The other Amazons he'd fought? They had fought for their reasons and he was okay with not questioning them about it.\n\nWhy? He was conscious of his conspicuous status as a 'guest', knew he was in no way an Amazon, and was not privy to what motivated them. He didn't want to be an Amazon. He had his own, much younger, martial tradition he was proud of, yet was eager to learn from the vastly greater Amazon war lore because 'winners' didn't have a gender-bias and no other tradition could compete with the Amazons' 3,000 years.\n\nUnder normal circumstances, the women around him wouldn't have given credence to his praise. He was a male after all. Through the tiny tear I'd created in their insulating social fabric, Chaz was building upon his own exploits. In the after-battle analysis, the Amazons reflected on the realization Elsa had concentrated on him as her number two objective - second only to Pamela who scared everyone who knew anything about her. That bolstered Chaz's appeal.\n\nFor the Amazons who thought a male would get all pouty and cry over being beaten up by a girl/girls, Chaz was breaking the mold. He wasn't angry. He was amused. The fight had been a learning experience and he'd felt honored to watch, no matter how briefly, a warrior of Elsa's caliber fight. He'd explained 'I' - C\u00e1el Wakko Ishara - considered Elsa one of the top 5 combatants I'd ever seen ... which included Ajax the Unconquered. The others were Sakuniyas - reborn Amazon and former Queen of Assyria, St. Marie - the Golden Mare, and Pamela - the Cliff-walker.",
        "More happy Amazons because the list's only non-Amazon was a dead Hero from the Trojan Wars and it was well known I 'got around' (aka dealt with violent outsiders.) Chaz was telling the truth ... almost. The 'fifth' person on the list was Alal, but explaining him would be difficult, so Chaz edited him for this particular audience. Good man.\n\n[***]\n\nIn the hallway, \"Tavi, a moment,\" I called out. She slowed down, took a few more steps allowing me to catch up.\n\n\"Yes Ishara?\" she gave me her best neutral look. Yep. She was jealous.\n\n\"I beg two favors from you,\" I quickly went down to one knee in her path. That caught her off guard and left her in the awkward position of me being terribly close and staring up at her.\n\n\"I ... I will listen,\" she muttered.\n\n\"I would like to know if you are pregnant,\" I asked very softly. Yes, she was, but she didn't want to tell me. She contemplated pushing past me. It would be very easy. \"I know I am stepping beyond the boundaries between warriors. Please. My destiny has brought you two together. I am at fault here.\" 'Fault' was the key word.\n\n\"If I have a son, he will be given to the Queen,\" Tavi's face was stern and unforgiving. \"He will live.\"\n\n\"That's not what he's worried about,\" I shook my head. \"He wants to be a father to your daughter, Tavi. He wants to introduce you to his mother and grandmothers ... maybe his sisters too, if that can be arranged.\"\n\n\"Huh?\"\n\n\"He is not like me, Tavi. There is no other in his life, but you.\"\n\n\"I ... I will not leave my House for him,\" she protested angrily.\n\n\"He would never ask you. That doesn't mean he doesn't want to remain at your side for years to come. He can be a father to your child and not be a part of House Stolgos in the same way you can be a mother to your child and not be a part of Clan Tomorrow.\"\n\n\"Oh ...\" she furrowed her brow. \"How would this possibly work?\"\n\n\"I have an 'in' with the Queen,\" I winked. \"I'll work out something.\"\n\n\"He knows I will never stop being an Amazon,\" she elucidated intensely.\n\n\"Absolutely. He is an intelligence operative after all. He's figured a few things out for himself.\"\n\n\"Why doesn't he tell me these things?\"\n\n\"Tavi, he threw his body on top of me to shield me from a bomb blast, so he's undoubtedly brave, but telling you what is in his heart is scary for him. As his brother, I see behind his silence ...\"\n\n\"Oh ... what should I do?\" she was vexed.\n\n\"Go back in there, demand to speak with him and tell him the truth,\" I stood up.\n\n\"The truth?\"\n\n\"That you are going to have a little StolgosTomorrow-ite running around sometime next year,\" I exuded confidential friendliness. \n\n\"C\u00e1el Ishara,\" she tilted her head slightly, \"you don't know much about infants, do you?\"\n\n\"Nope,\" I pseudo-confessed. I actually did know something about newborns. I'd studied up so I could make a move on a cute girl whose free time was eaten up by babysitting, so I 'helped out'. Oink.\n\n\"They aren't 'running around',\" she turned to head back into the gym, \"until the ninth month at the earliest. Normally, running doesn't happen until the eighteenth month.\"\n\n\"My fianc\u00e9e has a three-year old, so she should be able to help me through some of the hardest parts,\" I babbled along. Tavi didn't give a crap.\n\nIn we went. Tavi stormed straight toward the bevy of Amazon babes concentrating on 'her' Chaz.\n\n\"Colour Sergeant Tomorrow,\" she abruptly interrupted. \"A moment of your time.\"\n\n\"Ladies,\" Chaz uncoiled himself from the surrounding women. The Amazons were either mildly put off - they thought they were about to get laid - or pissed off - they were SURE they were about to get laid - and Tavi was stomping on their happy.\n\n\"Yes, Ms. Gentry,\" Chaz linked his hands behind his back in a 'rest easy' stance. 'Gentry' was the fake last name Tavi used in the outside world. She motioned toward the windows with her head. Off they went. I couldn't hear what was being said, but my lip reading skills were up to the task.\n\nT: [I am pregnant]\n\nC: [I love you]\n\nT: [Oh] ~ stunned. Go Chaz!\n\nC: [Well, I don't imagine the Amazons have a marriage ceremony and an Anglican service would be inappropriate, so perhaps we could research a Scythian ritual which could make both families happy] ~ delivered in the patented smooth Chaz style.\n\nT: [Marriage? To you?]\n\nC: [I will not submit to being anyone's slave nor would I ever ask you to submit to me. Outside of that, will you be my partner and my partner alone until the cliffs separate us?]\n\nT: [Amazons are not monogamous]\n\nC: [I am]\n\nT: [I will ... I mean, can I think about this?]\n\nC: [I am not going anywhere, Tavi]\n\n{Pause}\n\nT: [Did you put Ishara - C\u00e1el Ishara up to this?]\n\nC: [Yes]\n\nT: [Why?]\n\nC: [I imagine he explained what I am feeling better than I could]\n\nT: [Oh ... do you want me to meet your mother and grandmothers?]\n\nC: [Absolutely]\n\nT: [Okay]\n\nC: [Okay ~ you would like to meet my Mother and Grandmothers?]\n\nT: [No - yes - I mean, yes I would like to meet them and I am okay with you being with no other woman until the cliffs separate us ... and I will do the same ... no other males]\n\nC: [If I pick you up, hug you and kiss you, will your sisters freak out?]\n\nT: [I don't know]\n\nSo Chaz swept Tavi up until her head was higher than his (a feat, considering their 8\" height differential) and kissed her deeply. Mumbled words followed. Tavi wrapped her legs around Chaz's waist and out they went. Around me were angry murmurings of the 'did that Amazon just run off with our man' variety. Not my problem. I had plenty of different Amazons wanting my attention. Hallelujah! \n\n{8:00 pm SUNDAY, SEPTEMBER 7th ~ LAST DAY}\n\nDon't try this at home.\n\nI covered my face with a pillow and pressed down hard. I'd already tried breathing exercises, meditation and even contemplated more cranial trauma before thinking up this particular crazy idea. It took some mental effort and accessing some of my Alal-'pain sorting' skills to accomplish, but in the end, I felt myself 'let go'.\n\nI sat up.\n\n\"Hello,\" Tad\u00eafi beamed.\n\n\"Hey,\" I took a deep breath. Since we were talking, I must have passed out. Her eyes wandered over the room.\n\n\"Is this the world as you see it?\" she wondered. Oh yeah, I had to be creating the environment for her to enjoy.\n\nSikia was kneeling on the bed a foot away, her gaze moving between the two of us. The 'grayness' of her form suggested she was wholly in reality and not in the 'Ishara-space' the goddess had shown me and I was now sharing with my augur.\n\n\"This is how you see me?\" she examined her fingers, her wrists, then some long locks of her hair.\n\n\"You are more beautiful,\" I answered. The impact of my words crossing over drew her eyes back to me. It was the magic of hearing for the normally deaf girl. I concentrated, peeled back some fantasy and attached a realistic form to Sikia. Tad\u00eafi followed my gaze.\n\n\"Your hair,\" she addressed her guardian, \"... it is lighter than I imagined.\"\n\nSikia said something I couldn't understand, muffled as it was by my dreaming.\n\n\"I cannot hear you, but I see you through his eyes,\" the augur carried on her conversation. They touched. It had to be somewhat bizarre for Sikia. As she reached for Tad\u00eafi's hand, her friend intercepted the extended member. Their fingers intertwined before completing the journey to the guardian's lips.\n\n\"Don't cry ... no, we couldn't have ... no, we shouldn't have knocked him out sooner. I don't think he was aware of this discipline when we first met. Were you, C\u00e1el?\"\n\n\"No. Perhaps if I had understood more about the consequences of seeing ghosts, I might have ...\" I tapered off. \"Now that we know. I can try this more often.\"\n\n\"Your health?\" Tad\u00eafi worried.\n\n\"I might be immortal,\" I confessed. I was confessing because I was desperately seeking a way to share some of my genetic quirkiness with her ~ some strength to carry her through this pregnancy and spare her life, Dot Ishara be damned.\n\n\"And you would seek a way to spare me,\" she graced me with her gentle presence. Lying in the 'spirit' world was a whole lot tougher than in the flesh.\n\n\"Yeah. I've got some arcane lore rattling around in my head, plus I have a few outside sources I can ask for help. I'm not giving up on you.\"\n\n\"I have foreseen my death.\"\n\n\"Well ... un-foresee it,\" I scolded her. \"Dot Ishara told me we see what might happen, though nothing is guaranteed. So even your death isn't an absolute. Since it hasn't happened, I see no reason to let it happen. You are going to live to hold our daughter. If not ... my immortality is worthless.\"\n\n\"You can never save everyone. Sometimes you must let a few go to save the rest,\" she advised.\n\n\"If I find someone I'm not attached to, I'll let them go. I promise. Until then, I'm ... ugh ... I'm fading ... and I'm keeping you.\"\n\n\"We shall see,\" she murmured. I fell back into my body and into wakefulness.\n\n\"Now we have sex,\" Tad\u00eafi announced in a melodic voice.\n\n\"He is ready to perform,\" Sikia agreed. She was fondling my balls with one hand while her breath played across my rod. I sat up to see the augur climbing up the bed between my thighs. She kissed my glans, licked across its top, then kissed it again.\n\n\"I've got it from here,\" she told Sikia.\n\n\"What?\" Sikia was confused. Tad\u00eafi's lips began to engulf my cockhead.\n\n\"Sikia, come here,\" I gently pulled on her arm. She was conflicted yet up some came. \n\nWe started out with tender kisses on the lips. I kept drawing her toward me. My lips and tongue migrated down her chin and throat to her breasts. When she thought my target was her breasts, she was all onboard. That was a mere stop-off point on my journey, though I played around for a while.\n\nAt the same time, I had to use subtle movements with my hips and clenches with my gluts to school Tad\u00eafi on her fellatio. Thankfully, I was doubly-blessed. This wasn't my first time schooling two girls at once and Tad\u00eafi could determine more from such minimal reactions due to her heightened sense of my muscle contractions through her touch than any other woman I'd ever met.\n\nWhen I began running my tongue in large lashes underneath her breasts, I confused Sikia once more. She was resistant as my hands on her hips pulled her higher so that my lips and teeth could tease her taut stomach while I twirled my tongue in her belly button. She giggled. \n\nI had been slowly wiggling down the bed, backing Tad\u00eafi up, so when it came time to mount Sikia on my face, I had the headboard room. I kept her muscular thighs securely in hand because the moment I had her happy, I pushed her up. She looked down, seeking guidance and I motioned her to turn around. She did the eye-ball math, realized she'd be facing her augur, and hastily obeyed. Of course, her movement on the bed alerted Tad\u00eafi through mattress vibrations.\n\nSikia was sitting on my face, leaning down so she could run her hands through Tad\u00eafi's hair and along her face and lips (and my phallus). I kept my hands pressed between our bodies. My right made the sojourn to my pubic area to play around and give them both something else to suck on - my fingers. My left loitered around between Sikia's breasts and her clitoris when my lips were otherwise occupied.\n\nI could cup her clit with my tongue in a U-shape, rubbing it along my taste buds. Most of my time was taken up with my tongue broad lashing her vulva or tightly-twisted and delving into her vagina and my nose pushing against her brown hole. I could tilt myself up so I could make tongue-intrusions into her back passage as well. The first time, she squealed.\n\nBefore she could decide if she wanted to make me stop (she did - virtually all first timers always default to asking their partner to stop, so you have to distract them), Tad\u00eafi wanted to know what had brought her reaction on. Then came Sikia's troubled revelation of what I was doing, how the augur shouldn't suffer through it ... despite the increasing pleasure she was receiving, only to finally be unable to supply the answer as to why Tad\u00eafi shouldn't experience it too.\n\nSikia shot me a treasured look of bewilderment. I'd brought her to orgasm with my tongue alone. I was a guy after all. \n\n\"Switch?\" I suggested. Tad\u00eafi was still administering one of the slowest, most considerate blowjobs I'd ever experienced. She wasn't rushing toward anything. Sure, she was unschooled, but was devoting her incredible sensitivities to my pleasure and taking pleasure in her ability to bring me to such excitement.\n\n\"Change places?\" she mused. \"Okay.\" Tad\u00eafi's lips slid off me with one final, loud 'pop', then she used her spider-like fingers to climb up my body while Sikia traveled south. She lavished butterfly kisses on my face ~ childish, yet so very appropriate between us ~ and I mirrored the gesture.\n\nWith some reluctance, she mounted me, facing Sikia. My tongue flicking across her clit on its first exploration brought out a joyous gasp. It only got better from there.\n\n[THE LONG SLIDE INTO DOMESTIC LIFE]\n\n\"Twins?\" Hana snuggled into my arms. We were at her place, naked in bed together after a late late-night unscheduled meeting with some VIPs. Despite the late/early hour, she was alert - tense even. It had been a mentally stimulating late night encounter which had brought me to her bed.\n\n\"Yes. That is what Tad\u00eafi predicted,\" I inserted between raining kisses down on her forehead. Hana liked non-distracting attention when she was in this kind of mood. She was exhausting herself mentally as she was building up to being amorous. \n\n\"Ana-C\u0103lina and \u00c1rp\u00e1d?\" she worked over the names on her tongue. \"They have a special meaning?\"\n\n\"Only if you are Hungarian and Romanian,\" I teased her. She elbowed me slightly. \"\u00c1rp\u00e1d was the semi-mystical pagan warlord who led the Ten Tribes who became known as the Hungarians ~ the Magyar peoples ~ into the Carpathian Basin - present day Hungary. Ana-C\u0103lina was born a Byzantine princess of the storied House of Basarab; she married Radu Negru, thus becoming the first Princess of a free Wallachia ~ the foundation for a free Romania. She was also the great-grandmother of Dracula.\"\n\n\"So they are famous names with regional historical significance ... did they live long, happy lives?\"\n\n\"\u00c1rp\u00e1d - no one knows for sure. His kids were quarrelsome, but they did manage to found a dynasty at the start of the second millennia which ruled for three centuries.\" \n\n\"Ana-C\u0103lina ... yeah. I think so,\" I continued. \"She lived into her seventies and her eldest son left his country stronger, richer and safer than when he received it. She did out live her husband by over fifty years ... and got to see her youngest grandson bury most of his rivals - the kids from her husband's first marriage.\"\n\n\"Ah - what?\" Hana rose up until we were eye to eye. Since she was naked, her boobs swayed slightly as she did so. My eye flickered. \"Eyes forward, Mister,\" she playfully barked. \"What happened to all her other grandsons?\"\n\n\"Wallachia in the 15th century was a tad rough and tumble,\" I evaded.\n\n\"They killed one another?\"\n\n\"Mostly they were killed by conspiracies amongst their boyars - nobles of the time.\"\n\n\"Why does ... Tad\u00eafi want to dredge up these names again?\" she kept eye contact.\n\n\"Not a clue,\" I pleaded.\n\n\"But you think it is important?\"\n\n\"No. I think you are important. Screw Fate. It can name its own kids. We can chose whatever names make you happy ... except 'Up'. Up's been taken.\"\n\n\"You've named another of your offspring 'Up'? That's cruel ... or does that mean something in another language I'm unaware of?\" she shifted her shoulders so her boobs wobbled again. Of course, I broke eye contact. I hadn't had sex in HOURS and her boobies were RIGHT THERE, damn it!\n\n\"Actually, Pamela and I named this secret agent in Hungary that, just to fuck with his head,\" I divulged.\n\n\"Oh. Pamela. I should have known,\" she slowly smiled. \"You are being very well behaved,\" she added. Woot! She noticed I wasn't throwing her down and pawing her delectable flesh. \"One more thing before the nookie.\"\n\n\"Name them. Their dead,\" I pledged.\n\n\"Not necessary,\" her sigh turned into a giggle. \"If I'm going to be having twins, I'm going to be rather big come late March. We need an earlier wedding date.\"\n\nOH FUCK ME!\n\n\"What do you have in mind?\" I tried to keep the creeping dread out of my voice.\n\n\"New Year's Day?\" she suggested. I did a quick calculation. That was annihilating 78 days out of what remained of my bachelor life. In 114 days my life would cease having any meaning whatsoever. I'd be a Mr. to someone's Mrs. THE END\n\n\"Sure, I can arrange to be killed before then,\" stumbled out of my mouth.\n\n\"What was that?\" Hana pouted.\n\n\"Nothing Dear. Cosmic psychic intersection with an Al\u00fb-demon; don't know what came over me,\" I fibbed.\n\n\"Man up,\" Hana bit my nose. \"Our marriage won't be that bad if we both work at it. It isn't like I'm demanding celibacy from you.\" Then she mouthed 'yet'.\n\n\"Wait. Did you mean celibacy - as in no fun at all, or monogamy - as in only 'happy time' with you?\" I desperately sought clarification.\n\n\"Oh,\" she pursed her lips. \"I meant monogamy. I didn't mean to scare you.\"\n\n\"Oh, thank goodness,\" I sighed.\n\n\"Here,\" her gaze turned tender. \"Let me make it up to you.\" Hana placed one hand on my shoulder and rose up my body until my face was gently nestled in her bosom. Then she wiggled back and forth ... basically because I'm a big baby and easy to please. I was alternating which nipple I was kissing in no time.\n\n\"Mmmm,\" she murmured. \"I've missed you.\" Her other hand's fingernails coasted down my abdomen and found 'Mr. Happy' had risen to attention. Okay, he'd been hopping up and down on my groin since she'd said we were 'going to bed' 30 minutes ago. Hana decided wrap up my shaft with her hand, then applied a few tender strokes. I reciprocated by cupping her left tit in one hand, forming a mound with her areola at the center, and began to twirl from the outside inward to her hardened nipple with just the tip of my tongue.\n\nIt was 4 a.m. Why was I taking it slow when I had my final work review with Katrina in three hours? Hana deserved this and more. Why was Hana doing it? She was her own boss, plus her life was careening wildly outside of anything she'd imagined before she'd first laid eyes on me. Half of the financial empire she shared with her father was suddenly in the hands of a military dictatorship, her beloved father was dealing with the murder of her hated step-brother and she was marrying a Prince in a European cathedral which required someone high in the Vatican's approval process to use. \n\nYeah, her life had gone nuts. Worse, she loved me. And I wasn't the kind of man she ever thought she'd love. She'd thought she'd never love anyone again after her life with her asshole of an ex-husband and their bitter, contentious divorce. I was barely someone she could classify, and Hana was a terribly ordered and organized person. Saying my life was messy was being generous. I was some mysterious warrior-diplomat-playboy-aristocrat who hung out with people more bizarre than me.\n\nHana picked up her tempo. I switched breasts. Her motor was really starting to hum. Any other night, I could have moved straight to revving her up to an orgasm. I had the time to make it two without any problems. A good one and Hana would be happy and drift off to sleep. Instead, I intuited she wanted more, so we developed our own game of cat and mouse with her climax, and its suspension, being our ultimate goal.\n\nMy left hand danced down the back of her ribcage like playing keys on a piano. It was a light, teasing gesture. Her hair the color of tarnished gold cascaded down as she began placing her own kisses upon my crown. Each move by one partner evoked a response by the other. Hana ran my glans over her glistening labia, getting it nice and slick. I worked down her waist, cupped her butt, and then glided over her thigh to the back of her knee where I started tickling her. She snickered.",
        "\"You are distracting me,\" she murmured. I wasn't. I knew these things.\n\n\"I like to get the feel of every inch of your flesh,\" I responded. More mirthful noises from her. Slowly her labia engulfed my cockhead and her gooey vulvar vestibule rubbed against and over the top, until I felt myself entering her vagina. There, she hesitated. I propelled my hips an inch up, twisted right then left before falling back down - a micro-fuck.\n\n\"Ah,\" she emoted her approval. \"My turn.\" Hana's knees spread to the side, making a memorable sound on the silk sheets as she impaled herself. This time she rolled her hips forward, back, then did a slow 360 with my dick inside her, letting the slow progress over her vaginal folds spark memories for her to savor. \"I never believed sex could be like this,\" Hana hiccupped.\n\n\"How so?\" I knew the answer, but wanted her to put her chaotic passions to words. It would make her happier.\n\n\"Experimenting ... silly. Stopping in the middle and doing ... this,\" she reversed her hip rotations this time. \"I never imagined a lover having such patience, or ...\"\n\n\"Yourself as being so openly sexually adventurous?\" I finished.\n\n\"Yeah,\" she huffed. \"I really, really owe your college professor - plus you and all your diligence, for thissss ...\" at the last moment, she encountered the gateway to her G-spot. I knew precisely where that gem was. Previously, Hana had gained a vague idea where it was from the perspective of masturbation and our prior lovemaking. Now I had let Hana rediscover that joy with my cock as her tool to utilize as she wished.\n\n\"You realize pregnant women want even morrrreeee sex,\" she hummed. She was vigorously working my penis now. Hana had bridged a huge gap, sexually. Normally, a woman of Hana's quality tried to please her man first with the hope her orgasm would soon follow. I was different. My greatest sexual gratification came from her ecstasy. She was confident in that now. By bringing herself to climax, she was making me excited for what would come next.\n\n\"That's okay,\" I propped myself up on one elbow now that Hana was riding me cowgirl-style. \"I dig big chicks.\" The open-palm slap to the chest was a given. \n\n\"Hercege ... you ... you are horrible,\" she growled around a feral smile. The lip-biting, tongue-sucking kiss was equally vicious, primal and leading Hana to the end of her tether. Not only was Hana's sexual trust in me/us expanding, she was putting extra effort into her physical workout regime too. She might still have a ways to go to compete with an Amazon, but it was still going to be a great night.\n\n\"Hercegn\u00e9, I am nothing but a twisted shadow of masculine lust whose every contour is cast by your muliebrous glow,\" I teased. Her eyes twinkled. Yes, definitely still going to be a great night.\n\n[...]\n\n\"Okay,\" Hana yawned, \"I give up. What does 'muliebrous' mean?\" She'd been holding on to that for an hour and a half. It was five-thirty and I was dressing in my biking clothes before heading into work.\n\n\"From the Latin 'muliebri' which means 'womanly',\" I answered. Her sleepy eyes drank in both my response and my physique. I had discovered another thing Hana liked and that was to expand her academic/linguistic frontiers. She was enchanted with the idea that I liked to engage her mind along with her body - sparking on all cylinders.\n\nShe'd crawled over to my side of the bed, her head resting on my pillow, soaking up my scent as she watched me. I knelt down, kissed her on her ear, cheek and finally the side of her lips. Hana was beat.\n\n\"Have a good day and be careful,\" she mumbled. Her eyes closed. Her chest rose with one last, waking breath before her sleep rhythms took her.\n\n\"Ditto,\" I whispered. I snuck into \u00d5nnela's room and planted a kiss on her head as well. The craziness of my life had a way of cascading over to the ones I loved. Loved? Oh boy ...\n\n{7:00 am MONDAY, SEPTEMBER 8th ~ GRADUATION DAY}\n\nBrielle and her buddy were humming along as the elevator doors closed. Once more, my 'hellish' schedule demanded I change in the elevator. I'd gone to gun practice with my bike clothes on, so I absolutely had to change into business attire in the magic box ... in front of them.\n\nJuanita adjusting my tie was a less than subtle attempt to strangle me. I was about to be late to my final 'start of day' meeting as an intern in Executive Services, so her chastisement would have to wait. Who would have thunk it? Juanita would have to wait outside for this ceremony. Paula raced with me to be the last one in, only to have Daphne grace us with the 'news': \n\n\"The meeting won't start for another fifteen minutes,\" she grinned. \"Katrina is bringing up the 'new hires' for the fall program.\"\n\nI finger-flicked my head. The 84 days as an intern was merely the 'training wheels' period. To really be a member of ES was at least a two year training process. The Amazons around me had started their training for this gig when they were fifteen and were eighteen and nineteen now - their ID's said they were older for legal purposes.\n\nIn theory, my four years in college was counted as 'preliminary' training and provided things such as acclimation to outsider culture ~ aka 'acting normal'. Logically, I would train under someone like Desiree or Buffy for a year before being a full-fledged member of the service.\n\n\"How many this time?\" I asked Daphne since she seemed to be in the know.\n\n\"Twenty,\" she grinned. \"We are getting two.\"\n\nI noticed there was still only my tiny desk in Katrina's office. That meant the new guys would be out in the office pool with everyone else. Probably for the best. The ladies were now used to having a male around, so would be careful in what they did and didn't say. I yawned.\n\n\"Tired,\" Fabiola smirked.\n\n\"Oh yeah,\" I stifled another yawn. \"Met an emissary from the Pope.\" Fabiola glowered. \"No. Seriously. I met an emissary from Holy See. I let Hana know I wanted to get married in a highly improbable place - a ruined cathedral - so she contacted the Catholic Church and one of their guys wanted to meet with me.\"\n\n\"That had to be fun,\" Tigger grinned. \"What does the Cult of the Nazarene think of you and the Goddess Ishara?\"\n\n\"We actually discussed polytheism and the place of an omnipotent, omnipresent being in the scope of things,\" I placed my hands behind my back and rocked back and forth. \"It was quite interesting. The guy knew his shit.\"\n\nBy that, I meant he was probably with the Pope's Secret Service as well as a Brainiac with a PhD in something. He'd promised to be in touch as soon as he heard back from his superiors. He had this hot chick with him who I suspected was a nun. And if his driver wasn't ex-military, it was because he was still in the service. On the plus side, Hana had been beaming when we left, which assured me the meeting had gone well ... so we had sex from 4 AM until 5:30, thus my current fatigued state.\n\n\"Are you going to abandon your faith?\" Fabiola taunted me.\n\n\"I don't have faith, Fabiola of Minerva. Faith would imply I don't know there are supernatural entities screwing with our lives. I know they do exist, I've met a few. To satisfy your disingenuous curiosity, we discussed the nature of the Weave and it being the possible manifestation of God's Will.\"\n\n\"How did that go?\" Paula appeared interested.\n\n\"He strongly suggested I should 'revisit my Catholic roots' soon. By that, I think he meant I'm supposed to start attending church regularly,\" I shrugged. \"The Pope is sending an envoy to the Great Khan too, so odds are good I'm getting married,\" I pronounced the last bit as the doom-laden prediction it was.\n\n\"Oh - yes,\" Fabiola reached passed Paula and smacked me in the chest with the back of her hand. \"That is for insinuating you and I had intercourse to my Mother and the Council.\"\n\n\"Was that chastising me for lying, or for not making it so?\" I winked.\n\n\"Ah - no!\" she pouted. \"Stop lying about me.\"\n\nI looked down at my phone.\n\n\"We've got twelve minutes,\" I double-pumped my eyebrows. \"Want to go to Katrina's bathroom?\"\n\n\"What! No!\" Fabiola tried to hit me again. I backed away like a big coward.\n\n\"Is that an open invitation?\" Tigger purred. I made eye-contact with Tigger. Her joking fa\u00e7ade crumbled. I was feeling like the old 'me' again, plus I was stressed and twelve minutes was plenty of time.\n\n\"Don't do this to Katrina ... and Buffy,\" Daphne advised both of us.\n\nI sighed in defeat, Tigger in regret.\n\n\"Cheer up,\" Daphne reminded us. \"His 84 days are up. No more date obfuscation for us ... and downright lying by him.\"\n\n'Me' rolling out my mental 'sex' calendar was short-circuited by Katrina showing up with two men. One short, chiseled Hispanic guy and one tall, svelte, Black dude. By their early arrival, I could only imagine none of their crowd had argued like Brian had on our 'Day One'.\n\nKatrina graced me with a maternal, wistful smile as she glided past. The two gents stopped close by me and the ladies somewhat uncertainly.\n\n\"Come here,\" I motioned them forward into the line-up on either side of me. \"This is where the fun begins. I'm C\u00e1el Nyilas, by the way,\" I offered each a handshake. They took it.\n\n\"Stalin Bolivar,\" the Hispanic man went first. His Latin-timbre placed him definitely 'South of the Border'. My guess was South America - south.\n\n\"Lennox Fitzgerald,\" the Black guy said in a strong British/London accent. Katrina taking her seat brought the meeting to order. She looked at her monitor, at me - I could tell that look of disappointment could only be coming 'my' way - then back at her screen.\n\n\"Well, since the new team members have been introduced, I might as well get to the work reviews for Friday,\" she regarded us all with her hawk-like gaze. Tigger came first. I was last, if there was any doubt. Once again, I worked with the Rhodes Scholars of the New Hire world; they could do no wrong and then came me. Katrina stopped and rubbed the bridge of her nose between her right thumb and forefinger. Oh! This was going to be good!\n\n\"C\u00e1el ... I ... I'm not sure what possessed you to get frozen samples of Dodo DNA out of our Gene Bank, but I want you to know you've contaminated a whole generation of pygmy cassowaries we were attempting to reintroduce into Timor-Leste. 18 months of research and development down the drain. We have these bastardizations of Phorusrhacidae and emus we are going to have to put down now ... I'm ... I'm rendered speechless.\"\n\nI had to think about that for a second.\n\n\"Oh, I brought back Terror Birds? Woot!\" I exclaimed. \"Oh, and sorry about that budgetary hiccup. Wait! Can't we use those as bio-weapons, or something? Recoup our losses on the black market ...\"\n\n\"No. No we can't, C\u00e1el. There are all sorts of UN regulations against that,\" Katrina chided me. There was more to come. She stood up.\n\n\"C\u00e1el, it is with multiple deep personal regrets I must inform you that I have decided we can no longer afford to keep you on with Executive Services. It seems you are simply not cut out for this line of work. Fortunately for myself, you and Havenstone, you are being offered a position in the President's Office as Assistant to the Executive Assistant to the President, Ms. French. Will that be acceptable?\" Katrina remained cool and cordial.\n\nOkay, who was Ms. French and why was she President of Havenstone? Hmmm ... my bet this was because of yesterday morning's meeting and the Regency.\n\n\"Well, as long as it isn't Ms. Dubois, I'll take it,\" I sighed.\n\n\"I heard that,\" came the sizzling voice from behind me.\n\n\"Oh shit,\" I jump aside, twisting fearfully to face the feminine Smurf-doom of Death.\n\n\"Good morning, Senior Vice-President Dubois,\" Katrina nodded to Buffy.\n\n\"Good morning, Director Love. I need a minion to move my stuff,\" Buffy glared in my direction. \"I'll take that one,\" she pointed at me.\n\n\"No can-do, Captain McGiggle-Pants,\" I waved her off. \"I've got a new job and I have a feeling it doesn't start until 8 ~ like normal people.\"\n\n\"I'm going to get you,\" Buffy shot daggers my way.\n\n\"Fabiola, when the meeting ends, please take the Senior Vice-President's belongings to her new office,\" Katrina directed. Making Fabiola her fetch-and-step-it minion mollified Buffy enough to let Katrina return to marshalling the meeting. \"Now, if you don't mind ...\" went Buffy's way. Buffy withdrew, so Katrina resumed. Next came the introductions and assignments. I got another plum. \n\nStalin (I was going to have to get used to that) got Helena and Lennox had Desiree - and KID DUTY!\n\n\"Please Katrina, can I tag along?\" I begged the moment we were released.\n\n\"C\u00e1el, you have two groups stopping by to meet with you at 8. You don't have the time,\" she informed me.\n\n\"First I've heard of it,\" I evaded. \"So I'll be a little late ... they won't mind.\"\n\nI was getting incredibly odd looks from the two new guys.\n\n\"You have no idea who they are,\" she gave a slip of a smile, \"or how patient they might be, so by all means, make groundless assumptions.\"\n\n\"I know I'd rather see Aya ... and Europa and Lorraine,\" I pleaded.\n\n\"Oh,\" she gave an exaggerated sigh, \"by all means. I'll make sure to put the visitors in separate rooms so they don't kill each other.\"\n\n\"That shouldn't be necessary. I only know good people,\" I turned things around. I put my arms around both guys before they could evade me and out we went. Juanita detached herself from a nearby wall, scowling at me.\n\n\"Gentlemen, this is the best lifestyle mistake you could have ever made,\" I explained. \"Try to have fun, because I guarantee there will be times when this job will suck big time.\"\n\n\"You just got fired from this position,\" Stalin reminded me.\n\n\"Oh, it's worse than that. I was promoted. I'm sure you can avoid my fate if you try hard enough,\" I urged.\n\n\"You should listen to C\u00e1el,\" Tigger joined us. \"He was the only one of the first five to make it the full 84 days.\"\n\n\"Hey, Felix is coming back,\" I countered. \n\n\"Really?\"\n\n\"I pledge to you,\" I smiled. \"He shall return.\"\n\n\"Damn,\" Paula came along the other side, \"now I wish I was in the Great Hunt too.\"\n\nPaula and Stalin immediately had to leave for their assigned trainer.\n\n\"What happened to the other four - three?\" Lennox prodded me. We were at Desiree's desk. She shot me a vile look. She'd guessed my intention to be an unnecessary attachment to her mission ... which necessitated a request for a new vehicle.\n\n\"Khalid became Chief Depilator in a social engineering experiment in Paraguay, Trent transferred to our Far East Acquisitions Unit as a permanent in-flight Caba\u00f1a Boy and Brian became a Locust Wrangler in the Australian Outback and dedicated student of the digeridoo.\"\n\n\"Lennox, don't listen to him,\" Desiree grumbled. \"He's an idiot. Oh, and C\u00e1el, thanks for making that psycho Rhada my boss. I'm going to get you for that.\"\n\n\"I aim to bring passion to the lives of all the women I meet,\" I gloated.\n\n\"Idiot,\" Desiree mumbled. Into the elevator, joined by Juanita, we went and down to the garage we travelled. \n\nWe had to go for a Mercedes Benz GL550 instead of the normal Audi because of the extra riders - me and Juanita. Lennox, sitting up front with a grim-faced Desiree, was more perplexed than ever. I contemplated handing him a back-up piece since technically he was a bodyguard ... though, pro forma at Havenstone, he wasn't informed of that fact.\n\n\"So ... a lot of women at Havenstone,\" Lennox finally opened up to me/us. He had yet to realize the futility of trying civil discourse with Desiree. Juanita was super-grumpy and had her arms crossed in such a manner her shoulder holster was exposed.\n\n\"Hot, athletic babes everywhere you look,\" I revised his statement. \"I'll show you the gym before end of business. I heartily suggest you work out twice a day. They've got a massive facility, plus several large pools.\"\n\nMore pausing on his part. Then he grew ambitious.\n\n\"You don't worry much about sexism, do you?\" \n\n\"Me? Nah. The women here admire courage. They also exercise to the point of extremism and practice at least one form of martial art regularly, so you best temper your interest with respect,\" I grew stern. \"Seriously, if you have difficulty with a woman here, ask her to spar off the clock. It will work wonders.\"\n\n\"Ah,\" he grinned, \"I'm a mixed martial artist. I've been competing since my teens. I don't want to hurt anyone.\"\n\n\"Hah,\" was from me. Desiree merely snorted.\n\n\"Lennox, I work with a guy from the SRR,\" I 'elaborated'. \"Not 'retired' - active duty SRR, and some of the ladies you work with in Executive Services can take him. Fuck it all with Security Services.\"\n\n\"You work with a bloke with the Special Reconnaissance Regiment? Here in the States? What's he doing here?\" Lennox clearly didn't believe me. \"I heard about you in Romania against those terrorists,\" or maybe he did.\n\n\"Lennox, as fast, smart, strong, good-looking and driven as you are, do you really think you are in Executive Services to pick-up laundry, kids and dinner?\"\n\n\"C\u00e1el,\" Desiree cautioned me.\n\n\"I was curious about that. The pay is really good so ...\" Lennox grinned.\n\n\"You're not. You are being prepared ...\" I got out.\n\n\"Ishara!\" Desiree snapped.\n\n\"Trust me,\" I soothed Desiree. \"I know what I'm doing.\" She gave me a poisonous glare in the rearview mirror before returning her eyes to the road.\n\n\"Prepared?\" Lennox restarted things.\n\n\"Yeah, prepared to redress a grievous imbalance between the women of Havenstone and male-kind.\"\n\nHe blinked, waiting for me to continue.\n\n\"A grievous imbalance between the women of Havenstone and male-kind?\" he reiterated. \"What does that mean?\"\n\n\"It means that is the first clue I'm going to give you, Lennox,\" I slyly smiled. \"It is Day One in this nut ranch for you, and you are getting more of a head start than I had, trust me.\"\n\n\"Don't trust him,\" Desiree snapped snidely. \"He's an idiot. Juanita?\"\n\n\"I'm too furious over his latest stunt to speak with him right now,\" Juanita replied.\n\n\"You ain't getting an apology from me, that's for damn sure,\" I got snarky with my bodyguard. To Desiree, \"Am I lying to him?\" She didn't respond. Instead we rode in silence until we pulled in front of the Ruger household.\n\nMind you, I spotted the tail the moment we left Havenstone and I was sure another protective detail was out there hovering about our diminutive Queen. I got to go in and get the girls. Even though technically Caitlyn was no longer Aya's mother, courtesy of the adoption, she was the logical choice for guardian of the young girl. There was the added bonus of having two ex-aunts at home and two junior Amazons, previously her older sisters, close by at school for extra protection if necessary.\n\nStill, an SD chick met me inside the door, eyeballing me to make sure everything was okay (in the belief if something was hinky, I'd let her know somehow.)\n\n\"Atta,\" squeaked my favorite boon companion.\n\n\"Duma,\" I scooped her up.\n\n\"C\u00e1el,\" came from the lips of Europa and Lorraine. Caitlyn was there beside them, cloaked in melancholy. \n\n\"A moment please,\" she requested of the rest of us. I put Aya down and walked with her to the dining room. She turned with tears in her eyes. \"Katrina told me of your words of anger to the Council,\" she whispered. \"Thank you. I know, no matter what else happens, she will have an ally in you.\" I hugged her tightly. What else could I do? She let me go, put on her Amazon Mother face, and back out we went. For a few seconds, I was all business. I made sure the sidewalk was safe before we exited the Brownstone. Lennox held the car door for us. We were heading off to school inside 30 seconds.\n\n\"I think someone is following us,\" Lennox noted to Desiree.\n\n\"Define.\"\n\n\"Florist van,\" he answered.\n\n\"Good eyes,\" was her response. He looked my way.\n\n\"Support vehicle for our VIP's,\" I gave him a bit more information.",
        "\"So, you are the new guy?\" Europa began the interrogation.\n\n\"Ah, yeah. Lennox Fitzgerald,\" he told them.\n\n\"Listen to C\u00e1el,\" Lorraine spoke. \"He's a total nut-job, but he knows what's really going on. Oh,\" she surprised me with a hug, giving me a face full of cleavage. Eeek! \"Good luck on the hunt.\"\n\n\"Yeah,\" Europa added, \"good luck. You'll need it. I hear Elsa, Rachel, Caprica and Torm\u00e9 are all coming after you.\"\n\n\"Caprica from camp?\" I worried. Europa nodded. \"I've never heard of Torm\u00e9.\"\n\n\"She's a younger version of Pamela,\" Desiree enlightened me ~ 'cause it caused me pain.\n\n\"She's from House Maeve,\" Aya whispered to me. Ah, the 'Enslaver of Men'. \"She's Aunt ... I mean, Katrina Epona's #1 killer.\" Of course she is. Why hadn't I heard of her before? Why would I have? I'd never asked and had I, I doubt Katrina would have told me who her top assassin was. I was a lousy spy.\n\n\"Who is Pamela?\" Lennox was getting into the groove of things. If you didn't ask questions, you would never get any answers.\n\n\"She's his grandmother,\" Aya piped up. \"Not really. She adopted him.\"\n\n\"She adopted the SRR guy too,\" I shrugged. \"She's a one woman Welcome Wagon.\"\n\n\"I'm going to tell her you said that,\" Juanita griped.\n\n\"At least you are talking to me,\" I beamed happiness her way.\n\n\"No, I'm not,\" she snapped.\n\n\"O-kay,\" I shrugged ... then hugged Aya. She hugged me back.\n\n\"Take me to class?\" Aya asked.\n\n\"Sure,\" I spoke (too soon). \"If it is okay with Desiree. I'm just a tagalong today.\"\n\n\"Please,\" Aya begged Desiree. \"It is a new teacher. He hasn't met her yet.\"\n\n\"Of course, Aya,\" Desiree agreed. \"Lennox, go with him.\"\n\n\"Okay.\"\n\nAs we piled out of the car, I turned to the new Brit.\n\n\"So, ever had a three-way in a school custodial closet?\" I inquired. \n\n\"Huh?\" he gulped.\n\n\"Don't make me kill you,\" Juanita seethed.\n\n\"That's my Daddy!\" Aya squeezed my hand.\n\n\"Is that an invitation?\" Lorraine sidled up to us.\n\n\"No,\" I pointed a finger to the tip of Lorraine's nose. She tried to bite it. So Amazon of her. \"Thanks Aya,\" I squeezed by buddy's hand back. Into the school we walked. Aya's class was on the ground floor this year. Her teacher was so young, fresh and new to the profession, she sparkled. She wasn't sure what to make of myself and Lennox.\n\n\"Ms. Carmichael, this is my custodian, C\u00e1el Nyilas and his buddy, Lennox Fitzgerald. They are not gay,\" she tacked on. \"They are just lonely and don't have many friends in the city.\"\n\nWoot! Aya was hooking me/us up.\n\n\"C\u00e1el,\" echoed a familiar voice behind me. Uh-oh, Ulyssa Reichmann, Aya's 3rd grade teacher had been keeping an eye out for me. \"Nice to see you again.\"\n\n\"Ulyssa?\" Ms. Carmichael wondered why another teacher was in her room, interfering with the two 'lonely' guys clearly in need of succor. \n\n\"Ms. Reichmann,\" I spun around. \"How was your summer?\"\n\n\"Lonely,\" she smirked. \"So, do I call you Mr. Ruger, or Mr. Nyilas?\"\n\n\"You can call me 'busted',\" I gave my best 'ya caught me, but I have a good excuse' placating gesture. \"Oh and this is Lennox. He's my replacement. I've been transferred to a position which promises to be a lot less fun.\" See, I was referring to my time with her as 'fun'. \"How's Nadia?\"\n\n\"Rather lonely too,\" Ulyssa kept teasing. \"We were worried about you. After your kidnapping ... you sort of dropped off the map.\" Aka, I stopped returning her phone calls. I'm an idiot. \"Then you got engaged ...\", fuck TMZ and the New York Times Social Page, \"to an heiress ...\" and the Financial Times.\n\n\"You were kidnapped ... an heiress?\" Ms. Carmichael was reeling. \n\n\"Ms. Reichmann, that's stuff C\u00e1el can't talk about because of his job,\" Aya rose to my defense. \"Yes, we were kidnapped over the summer,\" she extended her mangled hand for Ms. Carmichael's perusal. \"C\u00e1el saved me from a plane load of bad people, then again when we crashed in the Typhoon on a Pacific atoll. We were rescued by the Marines and some of the v\u00e2n\u0103tori de munte he led into battle in Romania. They came half way around the world to help find us.\"\n\n\"The 'who'?\" Ms. Carmichael frowned in concentration.\n\n\"Mountain Huntsmen,\" I translated. \"They are Romanian soldiers.\"\n\n\"They are elite Romanian soldiers,\" Lennox corrected me. \"Kind of like their Special Forces ... hmmm ... akin to your US Army Rangers.\" \n\n\"Because you are 'not a spy',\" Ulyssa studied me with renewed curiosity.\n\n\"Correct,\" I nodded. \"I'm definitely not a spy. Neither is Lennox. He's just a new hire ... from England.\"\n\n\"Really?\" Ulyssa noticed him.\n\n\"Yes ... Ulyssa, is it?\" he gave his own dazzling smile. \"London, by way of the University of Cardiff and King's College. I have a BA in International Development. Wales is where I picked up my mountaineering lore, thus my knowledge of who the v\u00e2n\u0103tori de munte are.\"\n\n\"And now you are in New York ...\" Ms. Carmichael stepped up.\n\n\"Yes Miss, with Havenstone Commercial Investments ... learning to be 'not a spy',\" he rapidly adjusted.\n\n\"Executive Services to the uninitiated,\" I kept things moving along.\n\n\"You'll be working with C\u00e1el?\" Ulyssa pondered. Maybe she had a date for her sister now.\n\n\"Nope,\" I sighed. \"I'm off to the Office of the President. Apparently I'm a tad too unreliable for Executive Services.\"\n\n\"I think he means they find him too valuable,\" Lennox played along, \"along with unreliable. Today he simply wanted to make one last school run and I think I see why.\"\n\n\"Yup,\" I nodded my head, \"ya got me.\"\n\n\"Does this mean you will be answering your phone?\" Ulyssa teased.\n\n\"Yes Ma'am. I'll be maintaining a keen interest in Aya's education, even from my cubicle in Hell.\"\n\n\"On that note,\" Lennox tapped my arm, \"we should be going before your bodyguard takes you up on that death threat.\"\n\n\"Too true,\" I grinned his way. I turned and knelt in front of Aya. \"Love you, Duma,\" I smiled then hugged her.\n\n\"Will I see you before you have to go, Atta?\" she asked.\n\n\"I'm afraid not,\" I moaned. She hugged me then let me go.\n\nOn the way out Lennox began chuckling.\n\n\"Just so I got this straight: you've had sex with Ms. Reichmann, Aya was setting either you, or I, up with her current teacher, Ms. Carmichael, and this happens enough so that virtually every women I've met so far isn't surprised by your disreputable behavior?\" \n\n\"Precisely.\"\n\n\"I think I'm going to like this job,\" he chuckled.\n\n\"That's the spirit,\" I patted him on the back. \"Now we just have to look after the other nineteen new hires. This place can be harsh, unforgiving and unfair. It compensates by offering plenty of adrenaline-pumping danger and sex.\"\n\n\"I trust you ... about the 'harsh, unforgiving and unfair' and the ' adrenaline-pumping danger and sex' ... not so much about anything else. Do you have any male friends?\"\n\n\"Discounting our budding relationship, I have my gay roommate and the SRR guy previously mentioned plus an older FBI guy who likes me, although he knows not to let me to be alone with his daughters. I'm not the kind of friend you trust with your girl, or your sister, or mother for that matter,\" I shrugged.\n\n\"But you're straight?\"\n\n\"Yep. Decidedly so.\"\n\n\"Good enough. I'm an only child, my Mother passed three years ago and my last relationship faded after she ambushed me with a strap-on, so we should be good,\" he confirmed. I had high hopes for Lennox.\n\n[FAITH, DISTRUST AND BULLETS]\n\nI was getting ready to walk into the conference room on the 17th floor when I recalled a vital life lesson. It is enough to know you're right. You don't always need to force others to acknowledge it. Case in point:\n\n\"Juanita, I apologize for sending you away yesterday without allowing you to bring in a replacement. I showed disrespect to your position. I was wrong,\" I looked at her glumly.\n\n\"Damn right, you were wrong,\" she glared. Not a hint she'd been hugely disrespectful, rude and beyond the Pale horrible to Theddy. I didn't expect anything else from her. I atoned because I knew Juanita would never bend, and beating her up for being a bitch was pointless. The apology cost me nothing while freeing up Juanita to let go of her anger ~ she was right and I'd admitted it ~ so she could do her job better.\n\n\"Are we okay?\" I 'worried'. I wasn't worried. I was being manipulative.\n\n\"No, we are not okay. Are you going to repeat the mistake?\" she glowered.\n\n\"It is a learning process for me, Juanita,\" I 'explained'. Translation: 'I was an irresponsible male, thus in need of a caretaker which validated her existence.\n\n\"Well, don't repeat this one, damn it,\" she looked away. Ta-daaa ..., I was forgiven. Trust me, she was shuffling her anger away because 'I needed her' and it was her job to protect me from myself as well as from external threats far too numerous to easily be named.\n\nIn we went. It was a nice wood-paneled room with a Maplewood table - ten chairs to a side with a chair at each end. Opposite me was Rayen Artio, Martial Commander of Amazon forces in North and Latin America and a frightening individual inside and out. The right side of her face was a mess. An eyepatch covered her missing right orb. Her left hand was missing three fingers as well. Beyond that, she had been a candidate for Golden Mare (she's been too Runner-friendly) and a grandmother several times over.\n\nShe had a bright-eyed, blonde-haired Amazon typing away on a laptop sitting on her left and a SD close to the wall behind her with an MP-7A. The PDW (Personal Defense Weapon) was overkill, which suggested my guests had been, or might have threatened to be, snappish. That made some sense, since to my right were the visitors from late last night and to my left was the crowd from noonish yesterday. The pagan Death Cult looked ready and willing to eviscerate the militant Catholics, until I stepped into the room.\n\nThe Goddess \u012atzp\u0101p\u0101l\u014dtl, aka the Obsidian Butterfly aka Obsidian, popped out of her chair the moment I became visible. She had a freshly fucked glow about her ~ freshly fucked by me, if there was any doubt. I guessed I'd left her with a good impression. Juanita began muscling me aside and interposing herself between us. While endearing and professional, it was also so very foolish. Yes, it was her job. Sadly, considering the monstrous entity coming at me, she had no hope of success.\n\nIn favor of Juanita's response, Obsidian was: A) dressed like a leather-clad fantasy hooker, B) eyeing me with a clear desire for some very energetic, mystically-potent, blood-letting laced sex play, and C) failing to conceal her inhumanity to the assembly. Off-handedly, I noticed she'd brought along an additional man and woman I hadn't seen yesterday who were a cut above her normal religiously feverish crowd and thus most likely messengers, the 'nuts and bolts' people of the 9 Clans' Cult of the Jaguar. Introducing them to Rayen was most likely her excuse for showing up here in Amazon Central this morning.\n\n\"Tehuatlcochitlehua,\" I passionately greeted her, simultaneously keeping Juanita from committing a diplomatic faux pau and fatal life choice. It sorta meant 'Angel of my Dreams' in the Olmec derivation of Obsidian's mother tongue.\n\n\"Tetonehualoyan\u014dchin,\" she purred as her arms went over my shoulders, fingers linking behind my head. Huh? That meant ... I was her 'Inferno Rabbit'?\n\n\"Mmmmm ...\" I mumbled around her lips and prehensile tongue. (Still trying to get used to that.) Her black leather hip-hugging pants laced up the front and barely covered her pubic mound. Her matching vest only had two of its five buttons doing duty and showed every inclination of coming undone at any moment. My first attempt to gently disengage failed, so I considered, then discarded a mistake (an audible slap to the ass) and finally snaked a hand between us to coax her kitty under her tight leather crotch.\n\nThat brought forth some definite alien sonic buzzing. She broke her lip-lock.\n\n\"I've got to work right now,\" I tilted my forehead forward so it and my nose kept our mouths apart. Out came the 'No mortal denies me', 'I hate being denied' and finally 'why are these other people necessary?' washing over her face. Had her eyes had pupils, a few others might have noticed her angry stares. The double-nictitating (up-down / left-right) membranes over her multi-faceted eyes ~ those gateways to the void - ugh. \n\n\"These,\" she pulled away, motioning to the two newcomers at her side of the table. \"They are empowered to talk with you for us. When?\" That was aimed my way.\n\n\"I am heading out on an ordeal which will culminate this weekend. When I get back, I will need two days to sort out my House and other allies. Then?\"\n\n\"I will come for you,\" Obsidian announced. With that, she brushed passed me, nearly put Juanita through the wall and blitzed out the door. Her followers raced to catch up with her while her diplomatic contingent remained.\n\n\"Oh boy,\" I muttered. Looking at Rayen. \"Here you go - as requested,\" I tossed my chin to indicate the remaining cultists were there in fact to meet with her, not me. Rayen had requested of me, as Chief Diplomat of the Host, an intelligence-sharing arrangement with the Cult of the Jaguar and I had delivered. Getting her arms and ammo shipments from the Khanate to North America was much more a JIKIT issue, though I was positive things were progressing along that front as well.\n\n\"Indeed,\" Rayden stood. \"I'll leave you to the raging misogynists and pedophiles,\" she grinned wickedly. Note to self: Rayen was NOT a diplomat and resented me forcing her to act as one, even for a short time. She gathered up the two messengers and prepared to depart as well. \n\nThat left the Papal group. I was sure the Pope's guy had a mission in the same way I was sure him getting a glimpse of the real Obsidian Butterfly was causing him to re-assess the morality of his objective. The blanket Amazon hostility and Rayen's insults only stoked his fury.\n\n\"Katrina thought you might find this useful,\" Rayen pressed a tablet into my chest after she rounded the table. \"Immediately useful.\"\n\n\"Thank you,\" I nodded. Rayen chuckled, shook her head and shut the door behind her. As the Catholics studied me, I studied the tablet. Three files. Hmmm ...\n\nFirst off: Bishop Nicol\u00f3 de Santis - Titular Bishop of Acmonia ... some vacant bishopric in western Anatolia aka Turkey. Posting in various places the Catholic Church wasn't liked, or had 'difficulties' aka civil disorder, gang strife, drug wars; Education - Pontificia Ecclesiastica Academia [2005-2007],  Pontificium Collegium Germanicum et Hungaricum de Urbe [2001-2005], Caporal Chef in the 2e R\u00e9giment \u00e9tranger de parachutistes [1989-2000]; Awards :{L\u00e9gion d'honneur \u00e0 titre militaire; Croix de guerre des th\u00e9\u00e2tres d'op\u00e9rations ext\u00e9rieurs; numerous other citations}.\n\n'Wait! The \u00e9tranger de parachutists was the French Foreign Legion.' \n\nSuspected to be of Hungarian birth. Reported birth date: March 6th, 1972 ... making him 42. From Alal's memories I figured out the  L\u00e9gion d'honneur \u00e0 titre militaire normally got handed out to either brave dead people, or really old soldiers. His rank made sense ... because very rarely did non-Frenchmen get past the rank of 'Chief Corporal'. The odds of this guy having Condottieri ties were pretty high.\n\nContestant No. 2: Sister Rafaela Sophia of the Handmaidens of the Sacred Heart of Jesus {Latin: Ancillae Cordis Iesu} A.C.I. Major notation: Heavy indications someone had gone to great lengths to eradicate her previous history. A nun who needed her history scrubbed ~ the way Buffy's had? Like my life couldn't get more bizarre. She looked to be in her mid-twenties, yet her flinty eyes bespoke a terribly painful, dehumanizing existence devoid of hope prior to someone tossing her a lifeline. She was a fanatic and by her cut and stance, a well-trained one.\n\nContestant No. 3: Wachtmeister Mathias Bosshart of the Swiss Guard. That was a Sergeant - OR-5. Dual-citizenship. Clear, legitimate history. Swiss ... St. Gallen. Swiss Army, Grenadier training, Distaccamento d'esplorazione dell'esercito 10 ... which meant Army Reconnaissance Detachment 10 ... something which Alal didn't know about, which meant they were something new. Chaz would know. \n\nFollowed a centuries-long family tradition into Papal service. 31 years old. 31 might seem a bit old to be a mere OR-5, except the entire Swiss Guard only had 10 of them.\n\n\"Juanita?\" I pointed to the Distaccamento d'esplorazione dell'esercito 10.\n\n\"What does it mean?\" she'd whispered. She'd been reading around my side.\n\n\"Army Reconnaissance Detachment 10,\" I translated for her.\n\n\"That's the Swiss Army's elite counter-terrorism unit. Less than a hundred guys,\" she informed me.\n\n\"The Swiss have a counter-terrorism unit? Who the fuck picks on the Swiss?\"\n\n\"They have money,\" Juanita reasoned. \"And they are Europeans ... and nominally Christians. All qualify for some level of assholery and abuse in the world today.\"\n\n\"So,\" I finally initiated our belated conversation with the Pope's folks, \"nice to see you all again and what brings you here today?\" After all, I'd last seen them ... at 3:45-ish in the morning as Hana was ushering them out the door - this morning - yet here they were again.\n\n\"What was that ... creature?\"\n\n\"Please be more specific,\" I tried to act innocent. This guy had to make one mean confessor.\n\n\"The woman-seeming 'thing' who put her tongue down your throat ... when you should be devoting yourself to your fianc\u00e9e,\" he chastised me. I didn't like his use of the word 'thing'. It was condescending. Worse, it was foolish. Shit like Obsidian had really good hearing.\n\n\"Why on Earth would I tell you?\" I replied with my own simmering disapproval.\n\n\"Your soul appears to be in mortal peril, Mr. Nyilas,\" his eyes tried to pierce my emotional vortex. 'Good luck with that, Buddy'.\n\n\"I fought her off. My soul's just fine. Now, why are you here?\" I deflected his approach. After all, I doubted he was here hunting pagan cultists. If he had been, I doubted he would have let Havenstone disarm him and his two pals. Sure, his firepower would have ultimately been useless, but he would have momentarily felt safer ... until he discovered he was using flyswatters against a living tornado.\n\n\"Would you consider confirming her inhuman nature?\" he tried again.\n\n\"Sure. She's not human. She's a pre-Columbian horror walking around in a poor facsimile of a human suit mainly because she finds me amusing. Normally she's more careful about her appearance, so you wouldn't detect her, or the others like her, until it's too late. Now, please tell me why you are here, at my place of business, Bishop de Santis ... if that is even your real name.\"\n\n\"Okay.\" Pause. \"Very well. I came to inform you the Prince Primate of Hungary, His Eminence Cardinal Erd\u0151, has agreed to go forward with your plans to marry at the Sz\u00e9kesfeh\u00e9rv\u00e1r Basilica. In a concurrent matter, His Eminence, Cardinal Parolin, is extending an offer to assist in the humanitarian efforts of JIKIT.\"\n\nI'd been through this before. 'Here, let me give you something nebulous and presently valueless because it can be taken away at a whim. Then let me bring up the real reason I've shown up to rain on your day'.\n\n\"Who is the second guy - Cardinal Parolin?\" I grinned wearily. \n\n\"He is the Secretary of State for the Holy See,\" was his cordially reply. Wow! How could this possibly go wrong? Rome - Italy - the Condos? A secondary source for the Illuminati/Alal?\n\n\"Sure,\" I stepped forward, extending my right hand while pressing my left hand (with the tablet) back to Juanita. \"Come on. Let me introduce you to the team.\"\n\nNot what they were expecting at all. Nope. The Bishop was expecting evasion. I had slithered from reprobate to villain in his eyes by swapping spit with a demoness, so evasion was the expected response.",
        "\"One condition,\" I said as our palms touched. His hawk-like gaze froze. \"If my team decides you are not working for the Pontiff, they will kill you. They won't care about diplomatic protocols, or any presumed sanctity. If you are lucky, they will simply put two in the heart and one in the head. If your stars are misaligned, they will let you exercise all the counter-interrogation and torture-resistance techniques I'm sure the three of you know. Just so we are clear: If you are not working for who you claim to be working for you ... are ... dead, guaranteed. Still want in?\"\n\n\"Mr. Nyilas ...\" he hadn't let go of my hand yet.\n\n\"Don't bother,\" I interrupted. \"A former Foreign Legionnaire, a Swiss Guard ex-Special Forces and the 'Nun with No Name' ... you can't claim to be anything approaching a normal ecclesiastical mission, Bishop de Santis - oh, and I'm going to start calling you Bishop Nicol\u00f3. I always use first names. It is a quirk of mine. Whomever sent you knows I work with some nasty people, doing wicked things to even more vile members of the various groups, clubs, agencies and other religions, cults and supernatural manifestations out there. Either you say 'yes' and put your lives in my hands, or 'no' and we part ways.\"\n\n\"What about your wedding plans and your wife-to-be?\" he tried to get my measure. \"What of the message of the Prince of Peace?\"\n\n\"You aren't going to threaten my marriage in the same way I'm not going to threaten every Catholic living in Central Asia because the Great Khan is my 'blood'-brother. I won't do it because it's wrong and you won't do it because a major Catholic wedding in Hungary is nothing but good news for the Church. As for Christ ... he forgave a whore, so I figure there is still hope for me. Your answer?\"\n\n\"Do we get our legally permitted weaponry back?\" The bishop still held my hand.\n\n\"Sure. If it makes you feel better.\"\n\n\"I would like to meet your people then,\" he gave my paw one last shake then released me. \"Shall we go?\"\n\n\"I will have someone take you to your car. I want to briefly meet with the President - of Havenstone - then I'll join you in the garage. We'll drive over to JIKIT and I'll make the introductions. Good enough?\"\n\n\"That is acceptable,\" he nodded.\n\n\"What about you two?\" I regarded the nun and the Swiss Super-soldier. The nun remained vigilant - and silent. The Swiss' eyes flickered to his boss before settling back on me.\n\n\"It is what I volunteered for,\" he stated firmly.\n\n\"Okay. Please never say I didn't give you a chance to take the sane way out. Also, Bishop Nicol\u00f3, circumstances have conspired to up my prospective wedding date to January 1st.\"\n\n\"That will be more difficult. Why the change?\" he remained grim.\n\n\"We are having twins. By March, this will be very visible.\"\n\n\"That is ... unfortunate,\" he shook his head.\n\n\"You have no idea,\" and then a brainstorm. \"And I am curious about resurrecting the Order of the Dragon ... the Societas Draconistarum.\" Technically that meant 'Society of the Dragonists' which was more appropriate than the literal Ordo Draconis. \n\n\"Precisely how do you plan to recreate a crusading Christian Order which was the purview of the Hungarian monarchs?\" he didn't sound the least skeptical, just curious. \n\n\"I have billions of euros to fund such a thing,\" I winked. \"Of far greater critical importance, I know where I can find the supernatural guidance and spiritual imperative for such an organization.\"\n\n\"You are going to produce a dragon?\" his eyes grew larger even as he fought down his fear. Good man. He was adaptive. He'd need to be.\n\n\"I never said such a thing. That would make me sound crazy,\" I smiled broadly. \"Besides, when I say 'dragon', you think 'devil' and that's way too pedestrian for where we are going.\"\n\n\"I am not a moral relativist.\"\n\n\"Neither am I. I'm out to save lives and nurture the drive in the human spirit to reach for freedom, love and liberty. As you might imagine, I'm pretty freaking outnumbered.\"\n\n\"I think you are crazy,\" he re-evaluated things.\n\n\"I just might be. In all honesty, you should back out now. Take your two compadres back to 25 East 39th Street (the Holy See's Permanent Observer Offices to the UN in NYC) and report 'Mission Failure'. You'll most likely live longer,\" I reasoned.\n\n\"I am not afraid to die,\" Sister Rafaela Sophia finally voiced an opinion.\n\n\"That's idiotic,\" I scoffed before the bishop could reprimand her for opening her mouth. \"You should be.\"\n\n\"My soul is in God's hands,\" she set her jaw.\n\n\"Does he talk to you?\" I countered.\n\n\"His message is clear.\"\n\n\"Not what I asked. I asked if he specifically directed you to toss your life fruitlessly away as an object lesson for the reckless, or careless?\"\n\n\"This is uncalled for,\" Nicol\u00f3 intervened.\n\n\"Nope. I bet you a phone call to my Brother to physically restore your bishopric that there are four people in this room who have murdered in cold blood,\" I kept eye contact with the nun, \"and she's the odd one out. Right Juanita?\"\n\n\"Yes, Ishara,\" Juanita slipped up. Her spycraft, like mine, needed work.\n\n\"You were in the military?\" the bishop asked my bodyguard.\n\n\"Was? I am. Right now,\" she related. \"I will be until I die.\"\n\nThat earned me looks from the three Catholics.\n\n\"She is loyal,\" Nicol\u00f3 nodded slightly toward her, referring to Juanita's declaration.\n\n\"Huh? To me? Nope. She's loyal to my office - which we shan't get into right now. Back to you, Sister Rafaela Sophia. Are you out to be a martyr, or has some saint, or angel, given you a directive the other two seem to be unaware of which causes you to devalue your life?\"\n\n\"I am devoted to the One True God, Christ, our Savior,\" and Juanita snorted, \"and the Virgin Mary,\" the nun stated firmly. \"I don't hear voices in my head.\"\n\n\"Juanita, that was rude. Apologize to our guest,\" I kept looking forward.\n\n\"No.\" Well ... fuck you too.\n\n\"Gun,\" I commanded. I held out my left hand.\n\n\"What? No. I will not give you one of my guns,\" she resisted.\n\n\"Juanita, give me your primary weapon, or I will ask Pamela to beat you up the moment I depart for the Great Hunt. After yesterday's stunt, you know she will,\" I threatened. Fair - I was not. She drew a Glock-20 and handed it to me. I went through the routine - dropped the magazine then ejected the round before opening the door.\n\nOh look, there were four SD chicks outside, ready to escort my visitors downstairs. I didn't even need to waste a phone call. It wasn't like the conference room wasn't being monitored.\n\n\"Excuse me,\" I took a half step out the door then hurled all three items down the hall. Looking back at Juanita. \"Go fetch.\"\n\n\"Fuck you,\" she snapped.\n\n\"And insulting her faith was as degrading to both her faith and her as me doing this to you is degrading to you right now,\" I lectured her. \"It is important to her, therefore it is important to me because she is my guest in the same way it is important to me that I let my bodyguard do her job without being a total asshole all the time. Now go get your God-damn weapon,\" I barked. Off she went. I left the door open.\n\n\"Now Sister Rafaela Sophia, the point of all this is:\n\n~ \n\nI don't give a crap if you are willing to die for God. In fact, that makes you less than worthless to me and the team. I want to know if you are willing to put other motherfuckers in the ground so that Bishop Nicol\u00f3, or Mathias, might get to keep doing their jobs.\"\n\n\"Murder is a sin,\" she declared.\n\n\"Go home,\" I sighed while shaking my head.\n\n\"She answers to me, the Church and God, not you, Mr. Nyilas,\" the bishop stepped forward.\n\n\"Then you can go home too,\" I shrugged. \"I'm not asking for remorseless killers. I'm asking for people willing to kill to get the hard work done and best of all, for people who know the difference.\"\n\n\"Everyone on JIKIT is a professional soldier, or killer?\" he asked.\n\n\"No, but the ones who aren't don't carry guns and know to get down when things get funky,\" I bantered.\n\n\"I vouch for her,\" he insisted. Juanita came running back into the room.\n\n\"Cool beans. I don't know you either.\"\n\n\"You apparently know my service history,\" he volleyed. \n\n\"Yeah. Ten years a foreigner in the service of France, then you went straight into a university which turns out Jesuits,\" I riposted. \n\n\"What turned your life around?\" he evaded. That was okay. I'd gotten what I wanted. I was willing to bet he had read every bit of public information about me and it was rumored the heavy Catholic membership in the FBI had its benefits to the Church as well. Not so much as to give them insight into JIKIT, but ...\n\n\"Someone risked their life for me. It's been pretty much downhill from there,\" I confessed. It was the truth. After Katrina gave me the life line on Day Two, it had all spiraled to the revelation of my heritage, Dad's death, Summer Camp, the Hamptons, Romania and Aya's kidnapping.\n\n\"A person - a soldier - died saving my life,\" the bishop empathized. \"Her story is similar. She seeks redemption. She is not suicidal. I am staking both our lives on it.\"\n\nDid he mean him and Mathias, or him and me? I wasn't certain. Still, it was good enough for now. I'd gotten a look at their emotional make up, even the relatively quiet Swiss.\n\n\"Very well,\" I agreed. \"I have to go see the President about my new job description. I'll catch up with you at your car.\" To the SD team leader, \"Take them to the garage. I will join the group of you very soon.\"\n\n\"Yes Ishara,\" she nodded. I exited the room, Juanita in tow. Two SD entered. I was gone before the Papal team left. Upstairs we went, with one last chore to discharge. I had to check on Ms. French to be absolutely freaking sure it was Shawnee - because anyone else would spell disaster."
    ],
    "authorname": "FinalStand",
    "tags": [
        "amazons",
        "goddesses",
        "cult of the jaguar",
        "conspiracy",
        "pregnancy",
        "group sex",
        "cunnilingus",
        "romance",
        "augur",
        "supernatural"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/life-as-a-new-hire-ch-47"
}