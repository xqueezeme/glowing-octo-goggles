{
    "title": "It Started in a Cabin Ch. 02",
    "pages": [
        "As always this story is exclusively my property and may not be republished or redistributed without my permission. Any resemblance to people or places living, dead or non-existent is merely a coincidence.\n\n*** Sorry for the wait in continuing this tale. I've had a number of things going on in my personal life that have taken precedence over my writing time until recently. I hope you enjoy what I've done with the storyline. This part sees a little more intimacy between Scarlett and Chris and a bit more drama for both of them as well. As always, I only know how good or bad I'm doing if you comment and rate my stories so please let me know what you think!\n\n*** Special thanks go out to my great friend David for his help in getting me kick started again with such wonderful brainstorming ideas and suggestions and being a wonderful editor! \n\n*** I'd also like to thank Metronome37 from Lit Chat who came on in this project as a proofreader. His help was invaluable during the final crunch and I greatly appreciate the time he took to help me. \n\n--- Chapter Seven\n\nA few weeks after their fight, Chris proudly introduced Scarlett to his cousins at the family Thanksgiving dinner. The kids all went down to the family room to get away from the adults where they could relax and hang out. Chris and Scarlett sat close together on the couch while everyone else was spread out on the other furniture or on the floor.\n\nScarlett noticed that one of Chris' female cousins kept watching them and grinning. She thought the girl's name was Chrissy or something like that. She asked her if they could have a minute to talk in private so they went out to the back yard.\n\n\"What's so funny Chrissy?\" Scarlett asked.\n\n\"Actually it's Christy, Scarlett. You guys are funny, you're both trying to act so cool like there's nothing going on but you're glued together at the hip. What gives? Are you two playing doctor?\" She grinned.\n\nScarlett felt her cheeks grow hot and she stammered, \"Uh, well...nothings going on. We're just...close?\"\n\n\"Close eh?\" Christy chuckled. \"You guys just met a few months ago and you're already 'close'.\" \n\n\"Well we did spend a night alone together in a cabin when we first met. We had a lot of time to talk.\" Scarlett explained.\n\n\"And nothing happened?\"\n\n\"No! Well Chris did give me a goodnight kiss, I asked him to though, and it was just on the cheek.\"\n\n\"Oh he got his hooks into you early didn't he?\" Christy said as she laughed and gave Scarlett a conspiratorial grin, \"I don't know if you know this about Chris but he's the family whore, he's had so many girlfriends it's not even funny.\"\n\n\"That sneaky bum!\" Scarlett laughed. \"I had no idea at all that he was like that. I think I'm going to have to have a little chat with my darling brother later!\"\n\n\"Don't beat him up too much Scarlett, Chris doesn't even know he does it. It's like he has a lust fog around him or something. He's always been dorky but for some reason girls just keep throwing themselves at him. Hell I even had a crush on him when we were twelve.\"\n\nBoth girls laughed and Christy gave Scarlett a hug. \n\n\"So you guys are the same age?\"\n\n\"Yeah, he's a month older than me. My parents thought it would be cute if we had similar names, Christian and Christianne, like we're twins or something.\" Christy said with a grin.\n\n\"God! What is it with parents? I hated my name growing up, I started dying my hair when I was eight just so people would stop making fun of me,\" Scarlett laughed.\n\nShe gave Christy a sly look, \"So did you two ever play house?\"\n\nChristy blushed, \"Ha ha! Yeah a few times when we were little. We've always been super close, when we were four we told our parents we were going to get married.\"\n\nScarlett laughed again, she felt really comfortable with Christy and felt like she could trust her. She decided to take a chance and confided what had happened between Chris and her. \n\nChristy listened, nodded and even laughed a few times as Scarlett told her story. When Scarlett finished Christy gave her another hug and smiled at her. \"Thanks for sharing that Scarlett, it took a lot of guts to trust me like that. Don't worry I won't say a word to anyone. That's your story to share when you guys are ready to.\"\n\n\"Thanks Christy I appreciate that. So do you think I have anything to worry about with my man-ho?\" Scarlett asked with a grin.\n\n\"I don't think so Scarlett, as far as I know he's never said that he loved any of his girlfriends before. Anyway you're different, they all kind of fawned over him. You don't, you're very independent and in control.\"\n\n\"Well I've had some time to train him.\"\n\n\"Looks like you've done a good job,\" Christy giggled.\n\n---\n\nDuring Scarlett's rehab Chris kept her motivated, getting her jogging, working out and swimming at the local sports center as soon as she was able to. Scarlett worked hard to get her knee back into shape, she had every intention of making sure that Chris took her dancing before Christmas. A month after her surgery she was running four kilometers every other day. Chris was pleased with her progress and was always encouraging her to push a little harder. \n\nAfter one of their runs they got home and collapsed on the couch. Scarlett had pushed the run out to five kilometers that morning and had done a hard sprint right at the end, passing Chris and leaving him in her dust.\n\n\"How's the knee feeling after that run sis?\" Chris asked.\n\nScarlett grinned, \"Not bad, especially considering I smoked your ass.\"\n\n\"Ha! I let you win, I could've taken you any time I wanted to.\" He chuckled.\n\n\"Yeah right! In your dreams boy-scout,\" Scarlett teased.\n\nChris stood up and stripped off his tee, flexing his upper body and laughing. \"You've got nothing on me Red! Get a load of these pecs.\"\n\nScarlett laughed as well and got up, pulling her sweat top over her head, leaving her in just her running shorts and sports bra. She struck a pose and grinned, \"Like I'm not buffed?\"\n\nAlthough she had been in good shape before getting hurt, all the extra training she and Chris had done on top of her rehab had trimmed her down and given her a more firm and toned body now. This wasn't lost on Chris as his eyes roamed over her frame in admiration. Nor was it lost on his growing erection. Chris tried to hide both his lust and embarrassment but Scarlett caught on and moved toward him, wrapping her arms around his neck.\n\n\"Liked what you saw didja?\" She asked playfully.\n\n\"Oh yeah, you're even hotter than the day we met Scarlett, and I didn't think that was possible.\"\n\n\"So how come you've only ever kissed me Chris?\"\n\n\"Well I didn't want to push you.\" Chris replied as his hands slid down her back then cupped her bottom, giving it a gentle squeeze.\n\n\"Afraid of my dad?\" Scarlett giggled.\n\n\"No, I'm afraid of you. You are a redhead, and you know what they say about redheads.\" Chris joked.\n\n\"Oh? What do they say about us?\" She asked.\n\n\"That you're freaky wildcats in bed.\"\n\nScarlett laughed. Chris had been frustrating her for weeks, sneaking up on her whenever he got the chance and kissing her on the neck or ear which sent shivers all over her body. She had to admit that she had been teasing him as well, hugging him from behind and pressing her breasts into his back, and rubbing up against him if the opportunity presented itself.\n\n\"You know I liked what I just saw too Chris. All this working out hasn't hurt you either. If you wanted to do more than just kiss me I wouldn't mind, I'd really like you to.\"\n\n\"So I can squeeze your ass again?\"\n\nScarlett giggled, \"Did I complain just now? God Chris what are you waiting for? If you don't stop teasing and start pleasing I'm going to have to find myself a new step-brother.\"\n\nChris laughed and pulled her tight to him, \"Yeah but you might hate the new one. Besides, I never said I'd never please, I just don't want to rush things.\"\n\n\"You're probably right bro,\" Scarlett replied. \"But could you at least feel me up a bit?\"\n\n\"I think I can do at least that much sis,\" Chris smiled as his hands moved to her sides, resting on her bare skin between her shorts and her sports bra, his thumbs gently stroking her and making Scarlett gasp softly.\n\n\"Mmm, that's a good start Christian.\" Scarlett said as she pulled him in for a deep kiss.\n\nThey kissed for long minutes, their tongues dancing within their mouths, their breathing getting faster and more ragged. Scarlett's fingers tangled into Chris' hair as she moaned softly, pushing herself into him with more urgency. Chris moved a hand up to lightly cup one of her breasts and kneaded it softly, causing her nipple to become erect under his palm. He could feel his erection mashed between their bodies throb with excitement. When they separated they were both flushed and panting.\n\n\"Now that's more like it man-ho,\" Scarlett giggled. She could feel herself tingling all over at her step-brother's light touch and shivered again when his thumb touched her nipple.\n\nChris grinned at her, \"Man-ho? So I'm a man-ho now sis?\"\n\nScarlett smiled and stroked her hand over his strong chest, \"Yeah. Christy told me about all of your girlfriends. Something you forgot to mention before you made me fall in love with you.\"\n\n\"I MADE you fall in love with me?\" Chris asked as he lightly kissed her lips. \"Like you changing your hair back to red wasn't to make me fall more in love with you at all?\"\n\n\"That's not the point boy-scout, you were a male slut before we met. You better not get any ideas of acting like that now.\" Scarlett said with a serious look.\n\n\"Scarlett you're the only girl I want in my life. Those other girls never meant anything to me. Sure it was fun making out and everything but I never loved them. Hell sometimes I hated them always falling all over me. I just wanted a girl who loved me for who I really am, not because of what I look like or what crowd I hang around with.\" he stated.\n\n\"Well it's a good thing I don't care about any of that crap then isn't it?\"\n\nChris palmed her breast again and grinned when she shivered and moaned. \"Yeah, it is. I was thinking that maybe we could go out for a movie this weekend. Maybe if you're feeling brave enough we could invite Jason and his girlfriend along too. I think you'll like her.\"\n\n\"I don't know which is more distracting boy-scout, you yapping at me while you're groping me, or you groping me while you're asking me out on a date. Just shut up and kiss me some more okay?\"\n\n\"So I'll pick you up Friday at seven then?\" Chris joked as he pushed Scarlett back to the couch and eased her down onto it before joining her.\n\nScarlett pulled Chris into another deep kiss before responding, \"Yeah seven's fine, now get this bra off of me and shut up.\"\n\nChris slipped his fingers under the elastic of her bra and slowly eased it up over her breasts and off, taking in a sharp breath when he saw her milky globes with their light dusting of freckles. Their light pink nipples were puffed up and looked like they were just begging to be licked. He leaned forward and started flicking his tongue across her nipples, making Scarlett arch her back and moan deep in her chest. When Chris did that she felt a bolt of electricity zap right to her hard little clit. Scarlett could already feel that she was getting wet and they hadn't even really done anything yet. She could also feel his rock hard member against her thigh as it pulsed. \n\nChris ran his fingers through her tresses and pulled a few stray hairs from her eyes as he gazed into their hazel depths, \"God their perfect sis, I just want to play connect the dots with my tongue with every cute freckle on them.\"\n\nScarlett ran her fingernails lightly up his back, causing him to shiver with excitement. \"So you like my boobies bro?\" she asked playfully.\n\n\"I love your boobies Scarlett,\" Chris said as his lips touched her nipple again.\n\n\"Ummm, yeah. I can feel that you do Christian.\" she gasped as she slipped her hand between them, giving him a gentle squeeze through his shorts.\n\n\"Oh god don't do that sis, you're gonna make me cum in my shorts!\" Chris groaned.\n\n\"What this?\" She asked as she squeezed him again, giving him a little stroke just for good measure.\n\n\"Scar seriously, I'm so close it's not even funny.\" Chris mumbled into her breasts.\n\nScarlett gave Chris a mischievous grin. \"So I'd better not do this again,\" she said as she squeezed and stroked him some more. Suddenly she felt his cock twitch in her hand and swell as he shot his load. Chris gasped and thrust his hips into her hand as his cum jetted into his boxers in a sticky mess. His breath rattled in his throat as he jerked from release and he forgot all about her heaving breasts just mere inches from his face.\n\nWhen he recovered from his orgasm he frowned at his sister, \"Why'd you do that?\"\n\nScarlett giggled, \"What you didn't like that? Consider it payback for every kiss that you gave me on my neck and ears. You have no idea how hot and bothered I've been because of you doing that, you jerk!\"\n\n\"Payback? I'll give you payback sis!\" Chris said with a grin as he slipped his hand between her legs. He was surprised to find that the crotch of her running shorts was soaked with her juices. His fingers slipped over the damp material and pushed gently into her slit making Scarlett whimper as he pushed against her folds.\n\n\"Ohh shit Chris, that feels so good!\" she whispered softly as her hips met his hand.\n\nChris' fingers slid across her mound and flickered over her Lycra covered lips, spreading her juices even further over her clothes. There was no way he was going to let her off easily. If she made him cum in his shorts he was damned sure going to make sure she did the same thing he thought to himself. He moved up and kissed her again as his fingers pushed in deeper, stretching the fabric of her shorts into her hot little hole.\n\n\"God boy-scout you're gonna make me cum too. Please, don't stop!\" Scarlett moaned into his mouth.\n\nHis fingers slid along her slit and he found her clit pushing hard against her shorts. Chris was surprised at how large it felt and flicked it with his finger tip which made Scarlett shudder under him. He grinned evilly at her and strummed it again, making her gasp and moan with pleasure. Scarlett's hips bucked into his hand and she begged for more so he continued to rub and flick her sensitive little nubbin. She began to squirm and make little mewling sounds in her throat as he brought her closer to the edge, her arms wrapped around his strong shoulders as she buried her face in his chest.\n\n\"Close...so close... just...a...bit...OH SHIT! Ahh! Ahh! Hmmmm oh yeah God! Oh Chris, Chris YES!\" She cried out as her body was wracked with her blazing orgasm. Scarlett's honey flooded out of her pussy, totally soaking the crotch of her shorts, his hand and running down the insides of her thighs. She jerked and spasmed under Chris, making guttural noises and thrashing her head back and forth, sending her sweat plastered hair into further disarray. \n\nWhen she finally stopped cumming she lay gasping for air, her face, neck and chest flushed with desire. \"Holy shit!\" she moaned. \"I never came like that before in my life!\"\n\nChris grinned down at his sister and gave her a quick kiss on the lips. \"That's for rubbing all over me like a cat in heat you little minx! Now get up, we need to take a shower and get ready to go to physio.\" He said as he pushed himself up and away from her.\n\n\"What? You're not going to leave me like this are you?\" Scarlett asked in disbelief, her chest still heaving slightly.\n\n\"You don't want to smell like sex when we get there do you? We're both a mess, now get your ass in gear Red.\" Chris said over his shoulder as he walked up the stairs.\n\n\"You're a bastard Christian Thornton!\" She called after him with a grin.\n\n\"And you're a bitch Scarlett McCormick!\" He replied with a laugh.\n\n\"I still love you though.\" Scarlett said softly to herself as she got up to follow Chris.\n\n--- Chapter Eight\n\nThat Friday Chris and Scarlett were going to meet his friend Jason and his girlfriend Dani at the theater to catch a movie. Scarlett hadn't been one hundred percent sure of the idea but decided that they had to get out and at least try to make things work out in public. She was a bit worried about meeting Dani and didn't know how she should act in front of her. They waited outside for their friends to arrive.\n\n\"Hey Chris! Hi Scarlett.\" Jason said as he and Dani walked up to them.\n\n\"Jase! Hi Dani!\" Chris said as they walked up. \"This is my step-sister Scarlett, Dani.\"\n\n\"Hi Dani,\" Scarlett said somewhat shyly.\n\n\"Nice to meet you Scarlett.\" she replied with a confused look on her face. \"Uh I thought you were bringing a date Chris?\"\n\nChris laughed, \"I did, Scarlett's my date.\"\n\n\"Wait a minute,\" Dani said as sudden realization hit her. \"I've seen you before, you're the girl we saw Chris kissing a couple of weeks ago at the mall!\"\n\n\"Yeah that was me,\" Scarlett said with a nervous laugh. \"I guess we weren't as careful as we should've been and you guys busted us.\"\n\nDani went off into peals of laughter, \"Are you freaking serious? Oh my god that's hilarious!\"\n\nScarlett wanted to be angry but when she thought about it she had to admit that Dani not seeming to be upset made her feel more at ease. \"Yeah it kinda just happened. I think my Dad's more freaked out about it than Chris' Mom, but they're okay with it.\"\n\n\"Too, too funny.\" Dani said as she giggled. \"Holy shit Chris, I always knew you were a tramp but your own step-sister?\"\n\n\"Hell Dani I only met her in August, and the only picture I saw her in she was like uber-emo. How was I supposed to know she was going to be a total hottie?\" Chris joked.\n\n\"Hey! That's not fair Chris the only picture I had of you, you looked like a total dork!\" Scarlett laughed as she poked him in the ribs. \"I didn't know you were gonna be a jungle god when I went to pick you up at camp.\"\n\nDani giggled again, \"Chris may not look like one anymore but deep down he's still a dork.\"\n\n\"Dani's got you there buddy, you really are a dork,\" Jason laughed.\n\n\"Screw you Jase,\" Chris chuckled.\n\nThey went in and got their tickets then Dani grabbed Scarlett and dragged her to the washroom with a giggle. Jason and Chris waited for them and wondered what was going on.\n\n\"So you guys are 'out' now?\" Jason asked his friend.\n\n\"Yeah,\" Chris said. \"It's not like we grew up together or anything, and our folks said we could decide how we wanted things to be away from home.\"\n\n\"Cool, it'll probably be easier that way. Dani seems to like her.\"\n\n\"Looks like it. Scar doesn't really have many friends around here so if they get along it'll be cool. My cousin Christy and her are besties now, they talk and hang out.\" Chris replied.\n\n\"So how is 'Hot Christy' doing dude?\" Jason asked with a grin.\n\nChris laughed, \"God man you still got the hots for her?\"\n\n\"Hey you're the one who dragged me to that barbecue two years ago. She's fucking hot, what can I say?\"\n\n\"Do you ever think with your top head bro?\" Chris said.\n\n\"I try not to,\" Jason grinned.\n\n\"You're a shithead.\" Chris said as he returned his friend's grin.\n\nIn the washroom Dani smiled at Scarlett and gave her a questioning look, \"So, you guys are really like a couple?\"\n\n\"Yes, you're not freaked out or anything?\"\n\n\"No! If I had a step-brother as hot as Chris I'd be totally stupid for him!\" Dani giggled.\n\nScarlett laughed, \"God I thought I was gonna pass out when I met him. My Dad must have slipped me an old picture of him when they sent me to get him. He was NOT what I was expecting at all!\"\n\n\"Yeah Chris really bulked up and got a lot taller last year. He started working out like crazy and went on a major health kick. Everyone important noticed,\" Dani laughed.\n\n\"Like all the girls 'important' eh?\"\n\n\"Pretty much,\" Dani said with a grin. \"So is he as good a kisser as I've heard he is?\"",
        "\"Incredible!\" Scarlett replied as she blushed. \"He makes me tingle to my toes.\"\n\n\"Ha ha! Lucky bitch! I almost hate you. I think we've made the guys wait long enough, let's go.\" Dani said as she pulled Scarlett back out to the lobby.\n\nThe couples had a good time at the movie, the girls snuggling into their guys and smooching every now and then. After the movie they went to a local coffee shop and chatted for a bit. Scarlett and Chris filling Dani in on what had happened with them. Dani giggled a lot and teased them both mercilessly. \n\nScarlett really enjoyed going out with Chris and his friends, well her friends too now she guessed. She liked Dani and thought that they would probably get to be good friends in time. Chris was glad that Scarlett was having such a good time and was getting along with his friends. He suspected it had been a bit hard for her when she first moved in with their folks and didn't know anyone. The evening finally wore down and they made their good nights. Dani and Scarlett exchanged cell numbers and promised to keep in touch, planning a shopping day together very soon.\n\n\"So did you have a good time tonight Red?\" Chris asked with a grin.\n\n\"Yeah, Dani and Jason are fun. You just called me 'Red' again. You did that the other day, what's up with that?\"\n\nHe blushed, \"Well I need a nickname for you. You call me 'boy-scout', I could still call you Scar, but Scar's the miserable brat I first met. You're not that girl anymore. What do you want me to call you?\"\n\n\"Hmm, well I admit I was a bit of a brat when we met.\" She laughed. \"I guess Red's okay if it's just you and me. If you were anybody else I'd probably punch your lights out for calling me that. I still like it when you call me Scar though, it kinda reminds me of the silly look you had on your face when you first checked me out.\"\n\n\"A BIT of a brat? You just oozed bitch stink when we first met sis,\" Chris chuckled.\n\n\"Okay, okay. Fine I was a bitch. You know, I really liked what you...well...what you did the other day.\"\n\n\"I uh, I liked it too. I wasn't really mad when you made me cum in my shorts. I was really just surprised more than anything. You looked beautiful when you came.\" Chris said with a blush.\n\n\"I did?\"\n\n\"Yeah, the way your face looked. It looked like you were in heaven, you had the most beautiful smile after.\"\n\nScarlett blushed, \"It felt like I was. I had such a glow on I had to Jill off twice when I went to bed!\"\n\n\"Ha ha, yeah I think I've got a sock with your name on it now.\"\n\n\"EWW! Gross boy-scout! Really gross.\" Scarlett laughed as she playfully slapped him.\n\n\"Just being honest.\" Chris said as he thought about how desperately he had wanted to fuck his sister that morning. It had taken all of his willpower not to turn back and just take her there on the sofa she looked that hot.\n\n\"So what do we do now Christian?\" She asked, thinking about her brother's smoldering eyes when he'd looked back at her. Seeing him look at her like that had made her insides turn to jelly.\n\n\"I dunno. I mean I know where I want things to go, but are we ready to go there yet?\" he asked.\n\n\"Chris I want to go there too, but maybe you're right. I know I've put out a lot quicker with some guys in the past, but I was stupid then, I thought they loved me.\" She explained. \"I know you love me, I just want our first time together to be perfect you know?\"\n\n\"Yeah, me too. I think maybe for now we shouldn't force things, let them happen when they happen.\" he replied as they pulled into their driveway.\n\n\"You'll still feel me up though right?\" she asked with a sly grin.\n\n\"You bet sis, I'd do it every day just so I could see that smile if you asked me to.\" he replied\n\n\"Mmm, careful what you wish for boy-scout,\" Scarlett said with a soft smile.\n\nThe lights were still on when they got home so they stopped at the front door and kissed for a few minutes before going into the house. Both of them were still flushed with excitement when they entered the living room. Their folks looked up and had knowing smiles on their faces when they saw the state their kids were in.\n\n\"Have fun guys?\" Lisa asked.\n\n\"Yeah,\" Scarlett replied with a slight blush, thinking Lisa may have noticed how hot she felt right then.\n\n\"The movie was okay, we went for coffee after and told Dani about us and she is cool with it,\" Chris said. \"She seemed to like Scarlett.\"\n\n\"That's good, it's great to see you making friends now kiddo.\" Her dad said with a smile.\n\n\"Dani wants to come over and hear my demo discs from the band. She likes punk too.\"\n\n\"Have her over any time honey,\" Lisa said with a stretch and yawn. \"Well I think I'm going to go to bed now. Not too late okay kids?\"\n\n\"Yeah it's that time for me too. Try to behave you two.\" Steve teased.\n\nOnce their parents had gone upstairs Chris grabbed Scarlett into a tight hug. She put her head on his shoulder and sighed softly. Scarlett felt so safe and warm in his arms, she'd never felt that way with any of the other guys she had been with. She could feel his heart beating against hers. It made her feel like they were one person, their hearts beating in unison. She never wanted that feeling to end and wanted Chris to always hold her like he was now. \n\nShe looked up at Chris and he gave her his puppy dog eyes which made her giggle. \"What now boy-scout?\" she asked.\n\nHe grinned and kissed the tip of her nose, \"I just don't want this to end sis. I love how you feel when I hold you like this. Did you maybe want to cuddle for a bit?\"\n\n\"Sure, I'd like that bro.\" she said as she pulled him to the sofa. They piled some pillows up against one end of it then sat snuggled together against them, with Scarlett's head and arm on Chris' chest and his arm draped across her shoulders.\n\nChris stroked her arm and shoulder absently and toyed with her crimson locks, twirling and sliding them between his fingers. He couldn't believe that in just a few short months he had become totally, madly in love with this girl in his arms. Once she had let go of her bitchy attitude and let him see the real her he had fallen fast and hard for her. She was smart, funny and had a playful streak a mile wide. Chris never knew what she was going to do. He knew what he was going to do though, he was going to make sure that there was never going to be a reason for her to ever want to leave him. Their first fight had crushed him. It wasn't the fight so much as the cold and empty silence between them afterward, not being able to take her in his arms and make her happy once again. He knew that they would have their share of fights, but he hoped that none of them would ever leave him empty again.\n\nHe slipped his hand from her shoulder and let it slide down to her firm breast, giving it a gentle squeeze.\n\nScarlett looked up at him and giggled before taking his hand from her chest, \"Bad boy! What if my Dad saw that?\"\n\nChris chuckled, \"I'd probably have a broken hand, but it would be worth it.\"\n\n\"Yeah I'm sure it would be for you,\" she quipped.\n\nHe leaned in for a kiss which Scarlett welcomed eagerly, her arms wrapping around him and pulling him tight to her. Their tongues danced for a few moments and Scarlett could feel her heat rising again, her cheeks growing hot and moisture pooling in her panties. Her hand stroked his face and slid down to his muscled chest, teasing one of his nipples through his shirt. Chris moaned and kissed her harder, his tongue becoming more insistent in her mouth. Scarlett sucked his tongue hungrily and teased him more, sliding her hand lower to his stomach and playing with the button of his jeans.\n\nChris took her hand away and kissed her fingertips with a grin, \"No, no. We're waiting remember?\"\n\n\"You're an asshole.\"\n\n\"And you're still a bitch.\" He replied.\n\n\"Of course I am, but I'm your bitch boy-scout.\" Scarlett husked.\n\n\"Mmm, I like that Scar. My bitch...sounds kinda sexy.\" he laughed.\n\n\"You haven't even seen me being sexy yet Christian.\"\n\n\"I dunno, you looked pretty damned sexy in that green dress.\"\n\n\"Speaking of green dresses I think I'm almost ready for that night of dancing you promised me. I guess when we see the doctor next week we'll know for sure eh?\"\n\n\"Yeah I guess so. Any particular place you'd like to go? I know a club that has some decent music that we can go to. And I know for a fact that you'd be the hottest girl there if we went to it.\"\n\n\"Anywhere where we can have fun and I can tease the hell out of you is fine by me boy-scout. As long as you only keep your eyes on me and the other girls off of you I'll be happy.\" Scarlett said with a seductive smile.\n\n\"If you're wearing that dress that will definitely not be a problem.\" He said as he kissed her.\n\n\"Good. I'd hate to have to kill my favourite step-brother for being a slut.\"\n\n\"I'm not a slut!\" Chris said with a grin. \"It's not my fault girls like me. Hell I'm still not sure why they do.\"\n\n\"Maybe because you're sweet, caring, gentle, and hot as hell?\" she teased.\n\nChris blushed, \"I don't think so, I'm just a guy. Nothing special really.\"\n\n\"No Chris, you're very special.\" Scarlett mumbled somewhat sleepily.\n\n\"So are you Scar,\" he replied, sleepy as well.\n\nBoth of their heads were nodding now but neither one wanted to get out of their comfortable cuddle. Scarlett rested her head back on Chris' chest, listening to his heart beating slowly under her ear. It had an hypnotic effect on her and soon she was breathing heavy and slow, deeply asleep. Chris followed her very shortly, his nose buried in her hair, inhaling the apple scent of her shampoo.\n\n---\n\nChris and Scarlett were still fast asleep on the couch when their parents got up in the morning. Steve saw them first and cautioned Lisa to be quiet as they moved up on the two of them. Seeing their kids in such a loving embrace made them both realize that they had made the right decision in letting them have their relationship. Steve could see just by the way Chris had his arms wrapped protectively around his daughter that the young man would always hold her like that and never allow anyone or anything to harm her. The innocent, sweet looks on their faces brought a tear to Lisa's eye. She just wanted to bundle them up in her arms she was so happy for them. They were wrapped up around each other, arms and legs tangled and snuggled right up. Scarlett was lying half on Chris, head still on his chest and he still had his nose in her hair.\n\nSteve broke the spell the parents were in, \"Kinda sweet isn't it?\" he murmured softly.\n\n\"God they're so cute I'm just melting inside Steve,\" Lisa whispered.\n\n\"Let's leave them alone. They're comfortable where they are honey.\"\n\n\"Yeah, let's go out to get coffee, we'll bring something back for them too.\" Lisa said.\n\n\"Okay, just be very quiet.\" Steve added.\n\nThey slipped their shoes on and grabbed a set of car keys then snuck out the door to the car, driving to the nearest Tim Horton's coffee shop. They returned shortly with coffees and fresh donuts, placing them on the counter. Steve and Lisa took their drinks and moved to the love seat so they could sit and watch their kids sleep while they drank their coffee and ate their donuts quietly. They sat for a few minutes and had almost finished their coffees before Scarlett finally stirred, blinking sleepily and raising her head. She looked around blearily for a second before she focused on Steve and Lisa. They were smiling at her so she gave them a lopsided grin back. She extricated herself from her brother's arms and sat up, stretching and yawning. \n\n\"Wow, I guess we were more tired than we thought.\" she mumbled.\n\n\"There's a French Vanilla on the counter for you sweetie,\" Lisa said softly.\n\n\"Thanks Lisa,\" Scarlett said as she got up and padded to the kitchen to get it. She grabbed a dutchie to go with it then rejoined her parents as they watched Chris.\n\nIt was only a few more minutes before he sat up with a start and looked around. \"Whu..What?\" he said groggily.\n\n\"Good morning boy-scout,\" Scarlett said as she gave him a quick kiss on the lips.\n\n\"Hey beautiful!\" Chris said as he pulled her into a hug. \"Hi guys, what's for breakfast?\"\n\nSteve chuckled, \"Morning, coffee and donuts in the kitchen. You'll probably want to nuke yours, it might be cold by now.\"\n\n\"Hmm, okay.\" Chris said as he got up and headed for the kitchen to grab his coffee and a donut for himself.\n\nOnce Chris was back in the living room they all sat and chatted for a bit. Chris and Scarlett apologized for falling asleep on the couch but their parents just shrugged it off, saying they thought it was cute how they were all cuddled up together when they had come down that morning. Both kids were inwardly pleased that neither parent seemed upset by finding them sprawled across each other.\n\n--- Chapter Nine\n\nThe following week Chris took Scarlett to see her doctor so they could see how her knee was healing. They both figured that with all the extra training that she had done her leg was almost better than it had been before her injury, but wanted the doctor's confirmation of their guess. They waited patiently until they were called into the examination room, where the doctor did some mobility and strength tests. She seemed quite pleased with what she saw and smiled when they sat at her desk to go over what she'd found.\n\n\"Well, I'm very pleased with what I'm seeing here Scarlett,\" Doctor Haines said. \"Without knowing the condition of your leg prior to your injury it's hard to gauge, but you've got pretty close seventy-five percent strength and mobility in comparison to your left leg.\"\n\n\"Yes!\" She cheered as she pumped her fist in the air.\n\nChris hugged his step-sister around the shoulders with an arm and grinned, \"See? I told you we could do it!\"\n\n\"Thanks so much boy-scout!\" Scarlett said as she returned his hug and kissed his cheek.\n\n\"What exactly could you do?\" Doctor Haines asked.\n\n\"Chris set up an extra training program for me,\" The young redhead replied. \"Weight training, running, swimming, stretches, you name it. He thought if we supplemented the physio I could maybe get my knee in better shape faster.\"\n\n\"And you thought this was a good idea? Just going ahead and doing extra over and above what the physiotherapist recommended?\" her doctor asked with a frown.\n\n\"We checked with him first Dr. Haines. We didn't do anything that he hadn't cleared,\" Chris said.\n\n\"So how did you come up with this plan then Chris? Do you have any training?\"\n\nChris blushed and gave her a shy smile, \"Well, I'm going to be studying kinesiology when I go to school next term, I've done a few pre-entry courses already.\"\n\n\"Well I'm impressed, it looks like whatever program you enacted with Scarlett certainly did quite a lot to her great recovery. You should be proud of yourself Chris.\" Dr. Haines said with a smile.\n\n\"Thanks Dr. Haines,\" Chris replied happily.\n\n\"Scarlett I would suggest you continue with your training regimen to maintain your strength and flexibility. The last thing you want to do is re-injure your leg and have to start all over again. I'd like to see you again in six months just to see how things are going okay?\"\n\n\"Sure Doc! That's great and thanks for everything.\" Scarlett replied.\n\n\"Thank Chris, he's the one who came up with your recovery plan.\" Dr. Haines replied with a smile of her own.\n\n\"Oh I definitely plan on doing that,\" She said with a sly grin at Chris as they got up and let themselves out, stopping to book an appointment with the receptionist for six months.\n\nWhen they got out to their car Scarlett grabbed Chris and pushed him up against the side of it, kissing him hard and diving her tongue into his mouth. He was surprised at first but quickly began responding to her steaming kiss, his hands grabbing her hips and pulling her tighter to him, one hand snaking up and tangling in her long hair. They stood there for several minutes, the kiss becoming more urgent and frenzied by the moment, mouths fighting for dominance and their hands stroking and petting heatedly. Scarlett finally broke the kiss and stepped back, panting, with flushed cheeks and a hungry gleam in her eyes. \n\nShe reached up and poked Chris on the tip of his nose with a finger, \"That Christian Thornton, is just the beginning of my thank you. You WILL be taking me dancing next Friday night, as well as dinner at a nice restaurant. After that we'll see where the thanks will go from there.\"\n\n\"Jesus,\" Chris replied with a grin as he caught his breath. \"If that's just the beginning I'm almost afraid to ask what the rest is going to be like!\"\n\n\"I'm sure you might be able to think of some possible scenarios boy-scout,\" Scar said with a smirk as she opened her door and got in the car.\n\nChris stood there for a second then shook his head and chuckled to himself. \"I'm so freaking dead,\" he muttered as he got into the driver's side seat.\n\nOn the drive home the young couple chatted happily about the news from Dr. Haines. Scarlett was very pleased and excited that she'd managed to reduce her recovery time and even improve her strength with Chris' help.\n\n\"God Chris you're amazing!\" She gushed as she kissed his cheek.\n\n\"Hey! Come on, don't distract the driver,\" Chris laughed. \"You're the one who's amazing Scar, you did all the work to get your leg better.\"\n\n\"Uh uh, it was your plan bro, you deserve the credit for that.\"\n\n\"Yeah but...\"\n\n\"Don't 'yeah but' me Chris, you planned everything out for me and kept me focused so shut up.\" Scarlett interrupted as she punched Chris in the shoulder.\n\nChris rubbed his shoulder and grinned at her, \"OK, OK! You don't have to beat me up Red, it was my idea but we both worked to keep you going.\"\n\nScarlett felt her phone buzz in her pocket and pulled it out. Glancing at the screen she went pale when she recognized the number and quickly hit the end button so that she didn't have to take the call.\n\n\"Why didn't you answer that?\" Chris asked with a quizzical look.\n\n\"Uh I didn't recognize the number, it was probably someone wanting to sell a time-share bro.\" Scar hedged as she looked out her side window.\n\nChris nodded and turned back to driving, \"Ahh, yeah probably.\"\n\nLooking out her window She shuddered. Scarlett knew exactly who had called. The last time they had spoken was before she had moved in with her dad and Lisa at the beginning of the summer, and it had not been a good scene at all. Her phone suddenly beeped that there was a new voice mail and she jumped in surprise.\n\n\"Man they must be desperate to sell the condo or whatever if they left a message!\" Chris said with a chuckle when he heard Scar's phone bleep.\n\n\"Yeah, ha ha. Maybe they've got a bogo sale on!\" Scarlett replied, trying to hide her nervousness.\n\n---\n\nScarlett went straight to her room when they got home, closing and locking her door before flopping on her bed and checking her voice mail. She had a very bad feeling about the waiting message and groaned when she heard the voice.\n\n'Scar, babe! It's Adrian. Listen I'm in town for a bit and thought maybe we could get together and have some fun. Y'know, like old times. Give me a shout okay? See ya you little sex kitten!'\n\n\"Shit! Shit, shit, SHIT!!\" Scarlett cursed as she punched her pillow. She sat there for a few moments and tried to get her thoughts together. 'If Adrian's in town he probably knows where I live', Scar thought to herself. 'It's only a matter of time before he winds up here. Fuck, I have to keep him away from here. God this is just a total mess!'\n\nSitting with her head in her hands she tried to think of a way to keep her ex away, and Chris from finding out he was in town. She knew she was in huge trouble. Adrian was eight years older than her and was one of those guys who just skated by on charm, able to get people to do what he wanted with almost no effort. He had been like kryptonite to her and had used her weakness for him against her at every opportunity. It seemed to her that just about every time they got together they'd ended up having sex, and Adrian was just so smooth that whatever he suggested they do she pretty much did. The things he'd gotten her to do made her shudder unconsciously. Although she had enjoyed some of the things they'd done, others had been strange at times. ",
        "Scarlett knew she had to put a stop to the whole Adrian thing as quickly as possible. She picked up her phone and dialed Adrian's number, listening to it ring then the line opening as he took the call.\n\n\"Scar! Babe, I'm glad you called!\" Adrian said.\n\n\"Hey Ade, long time.\" Scarlett said as calmly as she could manage even though her heart was beating like a trip hammer in her chest.\n\n\"Babe we need to hook up and make some magic like we used to.\"\n\n\"Adrian what do you want?\" She asked him.\n\n\"You know what I want babe, I want that sweet little ass of yours. It's been way too long and you know how much you like it with me!\" Adrian replied smoothly.\n\n\"Stop calling me that, you know I hate it!\" Scarlett snapped at him. \"Listen I'm seeing someone now, it's not a good time...\"\n\nAdrian chuckled over the phone, \"Well I can make it a good time for you and you know it. Remember the last time we were together? How can you possibly say no to something that good Scar?\"\n\nScarlett cringed, remembering the incident with trepidation. \"Look if we get together nothing happens okay? We just talk. That's it. Nothing else got it?\"\n\n\"Okay babe, whatever you say. Just keep your options open. We may just light up the night like we used to if you ask real nice.\"\n\n\"Adrian stop it! We're not going to fuck okay?\" She said as she tried to control her voice, which was quaking with anger, fear and that strange desire she always got around him. The one that made her do things she didn't always want to.\n\n\"Fine whatever, when do you wanna meet?\" He asked slyly.\n\nShe took a deep breath to calm herself again before speaking, \"Square One Mall at the food court. One hour.\"\n\n\"Ha ha! You sound like a cheesy spy movie babe. It's just me, no tricks okay?\" Adrian laughed.\n\n\"One hour Adrian, see you then.\" She said as she hung up her phone.\n\nSlumping back onto her bed Scarlett wrapped her arms around her body and shivered as if she was chilled to the bone. She knew she was in deep shit for sure now. If Adrian could affect her like that just talking on the phone she was almost terrified to find out what he could do in person. Lifting her hand in front of her eyes she saw that it was shaking like a leaf.\n\n\"I'm totally screwed,\" she muttered as she got up and went into the bathroom to run some cold water on her face before heading out.\n\nScarlett almost ran to the front door, hardly breaking stride to grab her car keys and open the door. Chris saw her rushing out and wondered what was going on.\n\n\"Where ya going Red?\" he asked as she rushed past him.\n\n\"Out,\" she said as the door slammed behind her.\n\nChris shook his head in confusion. He was pretty sure both his cousin Christy, and Dani were busy as it was a weekday and they were either in classes or at work, so she probably wasn't meeting either of them. By the look on his step-sister's face he was pretty sure she was upset by something, but was also sure it didn't involve either of their parents as she would have told him before rushing out. He shook his head and went to get a drink from the fridge before returning to his game.\n\n---\n\nAs Scarlett drove she thought back on her relationship with Adrian. She had met him through Monique, the drummer in their band. Mo's brother and his buddies usually ended up showing up at their gigs and were their cheering squad at most of their shows. One particular night Adrian had shown up with the regular gang of friends. After their last set the girls had gone and sat with Mo's brother and his friends like they normally did. Adrian had insinuated himself into the center of the group, telling tall tales, joking and making everyone laugh. Witty and charming, he'd gotten Scar under his spell pretty quickly, complimenting her on her looks and singing repeatedly. To an eighteen year old, having a good looking, charming twenty-six year old paying such close attention to her was like gold. By the end of that night she'd found herself in a back corner of the bar with him, his tongue down her throat and one of his hands up her top. Things had progressed rapidly for the two of them after that with Adrian taking a dominant role in their relationship.\n\nThe first time they'd had sex was a mere two days after they first met. Adrian had asked Scarlett out and had wined and dined her, taking her to a swank restaurant and plying her with top notch food and wine as he regaled her with tales of his many escapades. That night they'd ended up back at Adrian's where he turned up the charm even more and let his words and hands loosen her up to the point where she was sitting in his lap on his bed, topless and begging for him to have sex with her. He'd played Scarlett well that night, much like her friend Mo played her drums, hard, fast and loud. Scar hadn't had much experience before meeting Adrian, but after that night of passion and lust she was hooked completely by him.\n\nIt wasn't long after when Adrian started introducing some strange little games into their sex play. He frequently expected her to call him 'Daddy' when they made love, and on several occasions when they'd gone to the movies he insisted they sit in the back row of the theater, where he'd masturbate her to an orgasm while people sat around them. During one particularly mortifying incident for her, Adrian had had her strip then handcuffed her to the railing of his apartment balcony, he then proceeded to finger and fuck her to multiple orgasms for the whole neighborhood to see and hear.\n\nShe remembered that night vividly, like it was a waking nightmare. When Adrian had told her what he had wanted to do she had balked at first, knowing that what he had planned was way beyond her comfort level. But then he began talking and touching her, caressing her physically and verbally, repeatedly calling her his 'babe' and reassuring her that once they started she would love it. Eventually she caved and began to undress. Once she was naked Scar had let him lead her to the railing of his balcony and let him cuff her there, submitting to him once again. The cool night air had made her shiver and her nipples had hardened immediately. Adrian had then begun caressing her, touching her and making her squirm as his warm hands left trails like fire across her cooling skin. His lips had followed his hands in their travels, causing her to moan in reaction to his ministrations. Scarlett had gasped, moaned and wailed through numerous orgasms that night until she was exhausted. When Adrian was done with her and released her she had slumped into his arms, quivering and thanking him over and over.\n\n---\n\nScarlett shook her head to clear it of the memories that were running through it, and decided that there was no way that she could let Adrian manipulate her like he had in the past. She realized that she had far more at stake than her pride and morals being compromised with this situation, if she screwed up she could totally blow things with Chris.\n\nShe arrived with fifteen minutes to spare and got herself a latte at Starbucks before finding a seat. She was pretty sure Adrian wouldn't recognize her since she'd only ever been blond while they dated. After a few minutes she saw him wandering around the court and got up, walking over to him. Every nerve in her body was jangling and her stomach was rolling as she approached him.\n\n\"Hey Adrian,\" she said with a hitch in her voice as she got closer to him.\n\nAdrian turned and gave her a wide grin, his eyes traveling up and down her body hungrily. \"Babe! I wouldn't have recognized you at all! You look HOT Scar, love the hair it really suits, and knowing what you're like it fits perfectly.\"\n\n\"Cut it out Ade we're here to talk, nothing else.\" She replied.\n\n\"Fine babe, let's grab a seat and talk.\" Adrian said as he put his arm around her waist and guided her to a table off to the side where there weren't many people.\n\nScarlett shivered and felt her skin crawl where Adrian had touched her back. She sat down at the table and Adrian slipped in across from her. She stared at him for a moment and realized that even though she was still drawn to Adrian, his pull wasn't as great as it had been back in Montreal. He hadn't changed his look much, longish wavy brown hair, barely there mustache and goatee, what looked to be a silk shirt, and black skinny jeans with dress boots. A total fashion dichotomy.\n\n\"So babe, you look totally hot, have you been working out?\" Adrian said with a grin.\n\nBlushing, Scar looked away and cursed herself for actually being pleased that he'd noticed her physical changes since the last time they'd been together. \"Don't call me that Adrian, you know I hate it for Christ's sake!\"\n\n\"Okay Scar,\" he said as he took her hand in his, slowly stroking his thumb along the back of it.\n\n\"Look, Adrian I have a boyfriend now. We broke up before I moved here...this is just...just...STOP THAT!\" Scar said as she pulled her hand from his.\n\n\"Scar we have history, and chemistry. You can't deny that babe. Besides you never did give me my going away present before you left...\"\n\nShe felt an angry heat rise in her chest and snapped at Adrian, \"Your going away present? There was no way in hell I was going to do that and you know it!\"\n\n\"Babe..baby you know you would've loved it. You were always a little freak in bed, the things you'd do...\" Adrian murmured softly.\n\n\"N-no Ade, I wouldn't have. And everything I did was what you wanted, not me.\" Scarlett said as she looked at the table, spinning her cooling coffee in her hands. She knew she couldn't look at him anymore, she was afraid Adrian would talk her into something she'd regret later.\n\n\"You still did it Scar, and you liked it, you can't deny that either,\" he chuckled as he took one of Scar's hands in his again, sliding his thumb back and forth.\n\n\"Adrian please, this is hard enough as it is. We're over, done. We can't see each other again okay?\" Scarlett said, her voice shaking with emotions she was having a hard time controlling.\n\n\"Scar we're good together, you know it babe. Why do you have to fight that so hard?\"\n\n\"Because we're not Ade, you're good for you but you're not good for me.\" She replied as she pulled her hand from his once more.\n\n\"But babe you know deep down that that's not true. You want me, I can tell.\" Adrian soothed as he leaned forward and kissed her, making her moan softly as his tongue slowly reacquainted itself with the inside of her mouth.\n\n\"I gotta go. Don't call me or come near me again,\" Scar said thickly as she dragged herself up from the table, her whole body trembling after the brief contact their mouths had made. \"I mean it Ade, we're done.\"\n\nAdrian gave her a smile, \"Sure babe, whatever you say.\"\n\nScarlett turned and walked away, she could feel Adrian's eyes on her as she left. Her skin itched where she imagined his eyes were looking. Her breathing was ragged and her palms were wet, but she'd done it, she'd told Adrian they were done. Now hopefully he'd take the hint and bugger off. She strode stiffly down the concourse, trying to get away from him without running like the scared little girl she felt she was right then.\n\n---\n\nScarlett was numb when she returned home, she got out of the car and walked up to the door, stopping momentarily to lean her forehead on it as her mind caught up with everything that had happened that afternoon. Adrian had tried to get her to give in but she'd been able to resist him, even when he'd kissed her and made her drip into her panties with desire. She knew she'd be doomed if they ever met up again. Every time he touched her Scarlett felt her resolve crumble that much more. It had taken every ounce of her strength to get up and leave but she'd managed it.\n\nShe opened the door and stepped in, flipping off her shoes and walking into the living room. Chris was busy vacuuming when she got in, and from the look he gave her she suspected she looked the same way she felt because he walked over to her, taking her into a close hug and stroking her back gently.\n\n\"Sweetie are you okay? What happened?\" He asked with concern in his voice as he looked into her eyes.\n\n\"N-nothing, it's okay Chris...I just don't wanna talk about it right now okay?\" Scarlett replied with a shaky voice as she felt tears well.\n\n\"You know you can tell me anything, maybe I can help?\" Chris said.\n\n\"Just, something bad happened while I was out. But I dealt with it and it's done,\" she said shakily. \"Maybe another time I can tell you but not right now okay boy-scout?\"\n\n\"Okay babe..\" Chris started to say, but he was suddenly interrupted when Scarlett shoved him away, glaring daggers at him.\n\n\"What did you just call me?\" She asked in a cold hiss.\n\n\"Uh...babe?\" he replied, totally confused by his step-sister's sudden change in mood, not sure where her anger had come from or why she was directing it at him.\n\nPoking Chris hard in the chest Scarlett snarled at him, \"Don't you ever, EVER call me that again! GOT IT?\"\n\n\"Yeah! God, what the fuck sis!?\" Chris groused as he backed away from her, rubbing his chest where she'd jabbed him.\n\n\"I'm serious Chris, you ever call me 'babe' again I swear I'll break your arm.\" she snapped.\n\n\"Okay, I won't call you that again! What's your problem?\"\n\n\"Nothing,\" Scarlett muttered as she turned away from him, upset that she'd lost it on Chris for something so trivial. \"I just...I'm sorry, I'm still on edge from earlier. I shouldn't have taken it out on you.\"\n\nChris took her back into his arms for a long hug as he tried to figure out what had just happened between them. They'd had a few minor spats since their major blow-up but nothing compared to her outburst just now. He'd never seen Scarlett display such rage before and if he was honest with himself it had scared the hell out of him. He wondered what had gotten her so worked up but knew pushing her for details right now was a very bad idea.\n\n---\n\nScarlett stewed and worried for a few days, wondering if Adrian would really let it go and leave her alone. She hasn't heard from him since they had met at the mall but she still fretted. Finally giving up, she called her friend Christy for some advice.\n\n\"Christy?\"\n\n\"Hey Scarlett what's up?\" \n\n\"God I'm in trouble. Adrian's in town and we met up the other day,\" Scarlett said worriedly.\n\n\"Your ex? Does Chris know you got together with him?\" Christy asked with concern in her voice.\n\n\"Yeah, and no I didn't tell him I met up with him. Please don't tell Chris!\"\n\n\"I won't honey, but you can't keep it from him forever Scarlett.\" Christy said.\n\n\"I know!\" She replied with a sigh. \"He's only here for a few days so I'm hoping things just blow over.\"\n\n\"Adrian's the one who got you to 'do' things isn't he?\"\n\n\"Um yeah,\" Scarlett said as she blushed.\n\n\"Nothing happened did it?\" her friend asked.\n\n\"NO! Nothing happened, honest. I mean he kissed me, and I just about gave in but I stopped it and told him we were through.\" Scarlett explained.\n\nChristy was silent for a moment, thinking about what Scarlett had told her about her ex. She was genuinely worried for her friend. Adrian was a manipulative shit from what she understood and probably wouldn't take no as an answer.\n\n\"I'm glad you were able to stop things but you can't see him again,\" she said.\n\n\"I know I can't Christy, but I told you what he was like. I'm just afraid he'll turn up here!\" The redhead groaned into her phone.\n\n\"Yeah I was thinking that too. Does Chris even know you dated him?\"\n\n\"No I never told him about Adrian. I just kind of want to forget the whole thing with him.\"\n\n\"Maybe you should tell him. It's going to come up eventually, he may as well find out on your terms.\" Christy coaxed.\n\n\"Yeah then he'll know just how sick of a freak I am and dump me!\" Scarlett said despondently.\n\n\"Scarlett stop it! You're not a sick freak okay? You told me you didn't want to do that stuff and that Adrian had conned you into doing it. Chris loves you, he won't judge you because you were made to do things you didn't want to. Just tell him okay?\"\n\nScarlett wiped her eyes and nodded to herself before answering, \"You're right Christy, he needs to know. At least then he can decide whether or not he hates me.\"\n\n\"Jeez seriously? We've all done stupid stuff we regret, your shit just happens to be kinky as hell that's all!\" Christy chuckled. \"Tell him what happened with Adrian, I'm sure things will work out.\"\n\n\"Yeah, I'll do it. Thanks Christy.\" Scarlett said.\n\n\"Don't worry about it girlfriend. But don't be surprised if Chris gets all turned on!\" Christy giggled.\n\n\"Oh God that's all I need!\" Scarlett said as she giggled too. \"Thanks again Christy, I'll let you know how things go.\"\n\n\"Okay we'll talk soon, bye.\"\n\nScarlett hit end and sat thinking. She knew Christy was right that she should tell Chris about Adrian, but she was very hesitant about telling him that he was in town. She decided to tell him about her past with Adrian, but leave out the fact that he was in town and she had met with him.\n\nShe got up and went down to the living room where Chris and her dad were watching hockey together. \"Hey, uh, Chris can we talk?\"\n\nChris looked up and gave her a smile, \"Sure what's up sis?\"\n\n\"Ahh this is kinda private bro. Can we maybe go for a walk or something?\" Scarlett said as she looked at her dad. He didn't know anything about Adrian either and she preferred to keep it that way.\n\n\"Yeah OK. The Leafs are losing anyway, let's go.\"\n\nThe pair grabbed their coats and went out into the cold November night.\n\n\"So-o, what's up Red?\" Chris asked once they started walking down the street.\n\nScarlett blushed and looked down at her feet for a moment as they walked along. \"I need to tell you a few things about me boy-scout. I'm not going to be able to do this unless I get it all out in one shot though okay?\"\n\n\"Okay b...sweetie, I won't say anything until you're done.\"\n\n\"Thanks Chris,\" Scarlett said as she took his hand in hers. \"Last year I met this guy named Adrian...\"\n\nOver the course of the next hour they wandered through the neighborhood while she poured her heart out to him about her relationship with Adrian. Sometimes she'd start to cry and they'd stop while Chris held her and comforted her until she could continue, but he kept to his word and remained silent while she spoke. Through that whole time neither of them noticed the car that slowly followed them.\n\nThey were about a hundred yards from home as Scarlett finished her tale, \"...and that's pretty much it, I broke it off with him then moved here a couple of weeks later.\"\n\nShe wiped her eyes and nose then waited expectantly for Chris's reaction to her sordid past. The silence was killing her as Chris gathered his thoughts and digested what she had told him.\n\n\"G-god you hate me don't you?\" she asked as tears began to form in her eyes again.\n\n\"What? NO! No I don't hate you.\" Chris said as he bundled her into his arms, holding her close and stroking her hair. \"I could never hate you! Jesus, that Adrian guy took advantage of you and used you honey, what happened wasn't your fault.\"\n\n\"But I acted like such a whore and slut!\" Scarlett protested.\n\n\"Scarlett don't! I don't ever want to hear you call yourself a whore again!\" Chris replied forcefully. \"You are NOT a whore, understand? Adrian's a douche bag and I swear I'll kick his ass if I ever see him.\"\n\nScarlett reached up and wrapped her arms around Chris's neck and smiled at him, \"Okay Chris. Promise me something though?\"\n\n\"Sure sweetie anything,\" Chris replied.\n\n\"Promise you'll never make me do anything I don't want to?\" she asked with a serious voice.\n\n\"Of course I won't! I never would've done that anyway, but after finding out what Adrian did to you I could never betray you like that.\" Chris said just as seriously. Then he got a gleam in his eyes and chuckled. \"But if you ever did want to try a few of those things again...\"",
        "\"You're such a jerk!\" Scarlett laughed as she smacked Chris in the back of the head with her hand. \"Christy said you'd probably get all horny if I told you what I did!\"\n\n\"Wait, Christy knows about this?\" Chris asked in surprise.\n\n\"Uh yeah,\" she said.\n\n\"What did she say when you told her?\" he asked.\n\n\"Same thing as you did, it wasn't my fault and Adrian was scum.\"\n\nChris nodded and smiled, \"Good, that's what I figured she'd say.\"\n\n\"So I guess I'm not a whore then.\"\n\n\"Nope, definitely not a whore.\" Chris chuckled.\n\n\"What about a slut? You never said anything about me being a slut.\" Scarlett asked with a smirk.\n\nChris pulled her in for a long kiss then smiled down at her, \"Oh being a slut is fine. Be a mega-slut for all I care. Just remember that I'm your boyfriend now. That means I'm the only one you're allowed to be slutty with.\"\n\n\"Well I guess that'll have to do,\" she replied with an overly dramatic sigh.\n\n\"It better Miss Scarlett McCormick, I plan on being around for a very long time.\" Chris said as he gave her a tender kiss.\n\n\"Well that's good to know Mister Christian Thornton. I've kinda gotten used to you being around all the time.\" Scarlett giggled.\n\n\"Are we done now? I'm freezing my ass off here sis,\" Chris stated.\n\n\"Yeah we're done boy-scout, let's get inside and cuddle.\" she replied with another quick peck to his lips.\n\n--- Chapter Ten\n\nChris knew Scarlett's birthday was coming up and had decided to get her a special present that he hoped she'd really like. He'd found a pretty silver heart and chain that could have stones mounted and had the jeweller set their birthstones in it. Scarlett was out when he got home so he showed his mom her gift.\n\n\"Oh wow, Chris this is very pretty!\" Lisa said as she held the delicate chain and heart in her hands.\n\nChris beamed, \"You think she'll like it?\"\n\nLisa smiled at him and nodded, \"She'll love it sweetie. Just don't be surprised if she cries. Scarlett may act tough but deep down she's a very sweet, sensitive girl.\"\n\n\"Yeah, I know. I was going to give it to her on her birthday, but I'm thinking of maybe giving it to her when we go out on Friday.\"\n\n\"Ooh she'd love that honey,\" Lisa cooed thinking about how Chris had planned a romantic dinner for them before they were to go dancing. \"I know you two will have a good time on Friday, and don't worry about the bill at the restaurant I've already arranged for them to use my credit card.\"\n\n\"Aww Mom you didn't have to do that!\" Chris exclaimed.\n\nLisa held her hand up to stop any further protests, \"Chris you and Scarlett have been working hard for this night, the least I can do is help a little bit to make it special for you both.\"\n\n\"Okay Mom, thanks,\" Chris really did appreciate the gesture even though he could afford it himself.\n\n\"Steve and I are very proud of you guys,\" Lisa said. \"You've both done so well in getting Scarlett's knee healed, and have handled yourselves very well in your relationship and in respecting our wishes.\"\n\n\"Thanks Mom,\" Chris said with a slight blush.\n\n\"We've talked things over and realize that it's pointless to expect you to act like brother and sister. That's just not going to happen is it?\" she smiled.\n\n\"I don't think so,\" he chuckled.\n\n\"Well as long as you guys try to behave we're okay with you acting more like boyfriend and girlfriend around here.\"\n\n\"Really? So we don't have to sneak around if we want to kiss anymore?\" Chris asked.\n\n\"No you don't have to sneak around,\" his mom laughed. \"We haven't freaked out the few times you've done it in front of us have we?\"\n\n\"Well no.\"\n\n\"We'd just appreciate it if you guys didn't get too hot and heavy in front of us. You are still living with your parents you know.\" Lisa said as she tried to give her son a stern look but she couldn't help a little smirk. \"You've both got rooms with locks on the doors if you want to get busy.\"\n\n\"Mom!\" Chris cried out indignantly.\n\n\"Oh Chris relax! We know it's going to happen one day if it hasn't already. Steve even said he's okay with it now. He knows you two really are in love and it's not a passing thing between you.\"\n\n\"Oh Christ, like that isn't a whole other level of pressure to deal with.\" Chris muttered.\n\n\"Christian Thornton there's no need to swear! Steve likes you an awful lot and thinks very highly of you. He trusts you with his daughter honey, he knows you'd never intentionally hurt her.\"\n\nChris thought back to what his step-sister had told him about Adrian and shook his head vehemently, \"Not in a million years Mom, I could never hurt her.\"\n\n\"Good,\" she said with a nod. \"Love that girl with all your heart and she'll be yours forever Chris. She wouldn't have done everything she has if she wasn't madly in love with you sonny-boy.\"\n\nChris gave his mom a big hug, \"I know Mom, and I'd do anything for her too.\"\n\n---\n\nThe night of their date Chris tried to make it feel as much like a real date as he could. He'd arranged with his friend Jason to go and get ready over at his place so he could pick up Scarlett at home and give her a chance to primp and preen, with his mom helping her get ready. Steve thought it was funny, but his mom thought it was very romantic of him to treat this as a very real date for them. Chris arrived promptly at seven and rang the bell, actually feeling nervous about the evening as he waited for someone to answer the door. Lisa answered the door and beamed at her son, proud of how he was carrying himself and doing things right with Scarlett.\n\n\"Chris! How nice to see you,\" she said with a soft chuckle. \"Scarlett's almost ready, please sit down while we wait.\"\n\n\"Hi Mrs. McCormick. It's nice to see you too.\" Chris replied with a smirk, but glad that his mom was making the effort to play along with him.\n\nJust then Steve came into the living room with a beer in his hand, sitting down to watch the tube. He figured the whole thing was kind of silly but he'd go with the flow as well so the kids could have their fun, and decided to play the over-protective dad card. \"Evening Chris, how're you tonight?\"\n\nChris nodded at his step-dad and smiled, \"Hi Mr. McCormick I'm good thanks.\"\n\n\"So what are your plans for the night young man?\"\n\n\"Well, uh, we're going to Giuseppe's for dinner then I was going to take Scarlett dancing after sir.\"\n\nSteve nodded and gave Chris a hard look, trying to look as intimidating as possible while trying not to laugh. \"I expect my daughter to be home at a decent hour, not later than one a.m. understood?\"\n\n\"Yes sir, understood.\" Chris replied.\n\n\"If you harm a hair on my baby's head you'd better consign your soul to God because your ass will be mine,\" Steve added with a wink of his eye that almost made Chris crack up.\n\nChris gulped and managed to look nervous as he nodded at his step-dad. His mom covered her mouth to suppress her giggles as her two men played out their little montage. Scarlett was coming down the stairs into the living room and had heard her dad's little speech which made her snicker.\n\n\"Oh Daddy! Don't worry Chris would never do anything inappropriate!\"\n\nChris looked up at that and gaped when he saw her. His mind wandered back to when he'd first seen his step-sister in her green dress and realized that she had somehow become even hotter than she'd been then. It hugged her like a second skin and just accentuated what he'd already thought was a perfect figure to angelic proportions. She'd clipped her hair up and back and it cascaded down her back and shoulders in coppery waves that glowed whenever the light hit it just right. Her make up wasn't overdone, it simply highlighted her features, giving her eyes a golden shine and her cheeks a rosy glow. Her full lips looked plump and most definitely kissable to Chris. He swallowed hard and stood up, walking over to her and handing her a small bouquet of flowers.\n\n\"These are for you,\" he said almost shyly.\n\nScarlett smiled up at him, her eyes glittering with barely restrained tears. Her heart felt like it was going to burst in her chest. Chris had gone all out to make this day so special and she truly appreciated the trouble he'd gone to for her. \n\n\"Oh thank you!\" she whispered with a quiver in her voice. She took them and held them to her nose, inhaling their sweet fragrance until her nose tickled.\n\nLisa smiled at her husband and he gave her a wink. She stepped forward and held her hand out to Scarlett. \"Here sweetie I'll take those and put them in a vase and put it in your room for you.\"\n\nScarlett held the flowers out to her step-mom and stared into Chris's eyes, \"Thanks Mom.\" She said without even thinking.\n\nWith just the slightest pause Lisa took the flowers from her step-daughter's hand. Her dad also noticed what Scarlett had said and smiled slightly to himself.\n\nChris smiled down at Scarlett and held his hand out to her, \"Ready? Our reservation's for seven-thirty.\"\n\n\"Sure am boy-scout!\" Scarlett said with a twinkle in her eyes.\n\nTheir parents walked them to the door and Chris held Scarlett's hand all the way to the car, then held the door for her and closed it gently after she got in. Lisa felt tears running down her cheeks and swiped at them with her hand as she grinned like an idiot.\n\n\"Have fun you two!\" She called out to the kids before they drove off.\n\n\"Not too much though!\" Steve hollered as he wrapped his arm around his wife's waist and pulled her back into the house.\n\nOnce they closed the door Lisa wrapped her arms around Steve and smiled up at him. \"Thanks for doing that honey.\"\n\n\"No problem,\" Steve said with a chuckle. \"You know Chris cleans up really well hon.\"\n\n\"That he does, and Scarlett was absolutely stunning wasn't she?\" Lisa responded with a soft smile.\n\n\"That's the most beautiful I've ever seen her. She really went all out for him didn't she?\"\n\n\"Yes and he did for her too. Did you catch what she said when I took her flowers from her?\n\nSteve nodded with a grin, \"Yup, kinda caught me off guard but I'm glad she feels close enough to you already to call you that sweetie.\"\n\n\"God I almost cried right there Steve!\" Lisa said with a broad smile.\n\n\"Well I can't have my wife crying on my shoulder all night! I know the Maple Leafs are playing again tonight but they'll probably lose anyway. Maybe I should take you upstairs and console you?\" He said with a wicked chuckle.\n\nLisa looked at the clock and grinned, \"Heaven forbid I should weep! You should comfort me until at least twelve thirty love.\"\n\n\"Race ya!\" Steve said as he smacked her rump and headed toward the stairs. He got roughly shoved off his feet and onto the sofa as Lisa thundered past him and up the stairs, giggling the whole way.\n\n---\n\nChris drove down the block a bit then pulled over to the side. He and Scarlett turned and looked at each other for a moment then burst out laughing, hugging and smiling together.\n\n\"Oh my God I can't believe you actually talked them into that Chris!\" Scarlett giggled as she gazed at him lovingly.\n\n\"Mom went for it right away but your dad was a bit of a hard sell. For a second there I actually thought he meant it when he said he'd kill me if I hurt you, but then he winked at me and I almost died laughing!\"\n\nScarlett raised her hand and touched Chris's cheek softly, smiling at him with sparkling eyes. \"Thank you Chris, this is already turning out to be an amazing evening. Thank you for making it so special for me.\"\n\n\"I'd do anything for you sweetheart,\" Chris said as he choked up a bit.\n\n\"I know,\" she replied as she leaned forward and softly brushed her lips against his. She pulled back and looked at Chris for a second before continuing, \"I love you so much boy-scout.\"\n\n\"I love you too Red, but we'd better hurry if we don't want to miss our reservation.\" Chris murmured as he turned back to driving with a broad grin.\n\nA bit further back down the road another car pulled out and drove off behind them, following just far enough back so as to be inconspicuous.\n\n---\n\nAt dinner the lovebirds laughed and chatted happily, playfully feeding each other from their plates and playing footsie under the table cloth. The people at the surrounding tables kept glancing over and smiling at them throughout the meal, seeing that the young couple was truly in love and enjoying every moment of being together. An elderly couple at the next table was greatly enjoying watching Chris and Scarlett together. The gentleman leaned over and tapped Chris on the shoulder to get his attention.\n\n\"Young man, you should consider yourself lucky that I'm not sixty years younger. If I were I'd have to challenge you to a fight to get the attentions of such a beautiful young lady as you've got with you.\"\n\nThe pretty redhead blushed and giggled and Chris chuckled, \"Thank you sir, I know I'm lucky.\"\n\n\"George behave yourself!\" the woman said as she playfully slapped the man's hand.\n\n\"Oh Rose don't get all worked up! This young lady is the second most beautiful woman I've ever met in my life.\"\n\nRose chuckled and slapped her husband's hand again. \"I better have been the most beautiful one you've ever met!\"\n\nThe older man winked at the kids and looked at his wife lovingly, \"Oh absolutely dear! Even when I met Marilyn Monroe she couldn't hold a candle to you!\"\n\n\"You're and old scamp and you never met Marilyn Monroe, it's a good thing I love you so much.\" She replied.\n\n\"If you don't mind me asking,\" Scarlett said somewhat shyly, \"How long have you been married?\"\n\nRose smiled at Scarlett and gripped her husband's hand in hers, \"Fifty-five years dear, and they've been the best years of our lives.\"\n\n\"Wow!\" Chris exclaimed. \"What's your secret?\"\n\n\"Never give up on each other,\" George said as he raised his wife's hand to his lips and kissed it.\n\n\"No matter what life throws at you, as long as you hold your love for each other close, you'll make it through.\" Rose added.\n\nAt that moment the waiter returned with the elder couple's bill and they signed for it then stood up to leave. \"Goodbye children,\" Rose said.\n\n\"Yes, it was a pleasure meeting you kids, I think you'll have a long and happy life together! And sweetheart, if you ever get bored of your young buck come find me.\" George said with a sly wink at Scarlett, which made her blush and giggle again.\n\n\"George!\" Rose admonished him with a stern look.\n\nThe old man rolled his eyes and followed his wife out of the restaurant, chuckling the whole way.\n\nChris and Scarlett watched the older couple leave then turned to each other and grinned, both thinking to themselves that it would be great if they could be that happy after such a long time. They sat smiling for a few more minutes then Chris reached into the inside pocket of his jacket and pulled a long, slim box out of it. Scarlett watched him and smiled, tears pricking at the corners of her eyes.\n\n\"I was going to wait for your birthday, but I thought tonight would be a good night to give this to you.\" Chris said almost shyly.\n\nScarlett picked up the slender box and grinned at him before she opened it. When she saw what was inside she squealed and jumped up and into his arms, kissing him over and over and crying happily as she hugged him tightly. \"Oh Chris thank you! I love it, it's beautiful!\" she gushed. \"Put it on, put it on!\" She added as she held her long hair away from her slender neck and turned away from him.\n\nChris took the necklace out of the box and placed it around her neck, fumbling the clasp slightly before he secured it. She turned to face him and smiled warmly at him as she ran her fingers over the small heart that was hanging just above her breasts.\n\n\"How does it look?\" she asked.\n\nHis look missed by several inches and rested on her firm breasts, which were barely being held in check by the upper reaches of her dress. Scarlett giggled and touched his chin with her fingers, lifting it slightly.\n\n\"A little higher boy-scout, a little higher,\" she said with a smirk.\n\nHe blushed and got his eyes where they were supposed to be, \"Sorry, um, they...ah...it looks perfect.\"\n\nScarlett hugged Chris again and gave him a soft kiss before resting her forehead against his. \"Thank you Chris, I'll cherish this forever.\"\n\n\"You're welcome sweetie, I'm glad you like it. So did you want to have dessert, or just head over to the club?\"\n\n\"God, I know you'll probably make me run an extra kilometer tomorrow if we have dessert but let's go for it!\" Scarlett giggled.\n\nChris agreed so they ordered some Tiramisu and fed it to each other, giggling and smiling the whole time.\n\nWhen they got to the club there was already a bit of a line so they waited patiently to get in. A few minutes after they arrived their friends Jason and Dani showed up and joined them in line and the four of them talked while the got closer to the door. Eventually they made their way in and found an empty table to one side of the dance floor. They lost their outerwear and the girls shrieked with glee as a thumping song pounded out over the sound system.\n\n\"I LOVE this song!\" Dani cheered.\n\nScarlett laughed, \"So do I, let's go!\"\n\nThe guys begged off dancing and the girls went out to the floor and began spinning and gyrating around, wriggling and putting on a show that wasn't lost on their men. Jason looked at Chris with a big grin and shook his head.\n\n\"What?\" Chris asked.\n\n\"HO-LEE FUCK dude!\" Jason said with a laugh.\n\n\"What?\" Chris said again, still not getting the point his friend was trying to make.\n\n\"Look at her man! Could Scarlett be any hotter if she tried? I mean, Dani's hot but JESUS!\"\n\nChris looked back out to the dance floor where Scarlett and Dani were bumping and grinding to the beat. They were laughing and glancing over at the boys then whispering into each others' ears and laughing more. He watched her for another minute then noticed that some of the other girls who were dancing were shooting her evil looks, especially if the guys they were dancing with were watching her instead of them. There were lots of pretty girls up dancing, but most of them were dressed pretty sluttily. Then there was his Scarlett, her hair cascading around her, that bright smile lighting up her face, and her body in that phenomenal dress! She was definitely the prettiest girl on the floor. Chris felt himself getting hard as he watched her dance to the beat.\n\n\"Why the hell are you not fucking her man?\" Jason hollered into his ear, bringing him out of his reverie.\n\n\"Jase! For fuck's sakes man!\" Chris said angrily.\n\nJason held his hands up, \"Sorry man, but really, why are you guys holding back?\"\n\nChris grabbed a chair and Jason sat next to him, \"We want it to be just right, not just fucking for the sake of fucking.\"\n\n\"That's cool man, no hassles from me okay?\"\n\nChris looked back to where Scarlett was dancing and just then she turned to face him and saw him watching her. She gave him a coy smile and turned away, wiggling her butt in his direction while she looked over her shoulder at him with a smoky look in her eyes. His heart just about stopped at that then he grinned, she was certainly making sure his attention was on her that night. In fact a lot of guys' attention was on her, every one of them thinking about how they'd like to get her alone for even five minutes. Every move, every shimmy and wriggle drew more and more attention her way. One particular pair of eyes watched very intently, and darkened every time they saw her look at the young man across the room.\n\nThe girls stayed out on the floor and danced for almost a half hour before they finally rejoined Chris and Jason at the table. They flopped down and grabbed the drinks that the guys had gotten for them while they were up on the floor. Scarlett's face was flushed and she was grinning from ear to ear as she chattered with Dani. She kept giving Chris sly grins which made him chuckle and blush. While the girls cooled off and rested they chatted and laughed together, Dani and Jason teasing the couple about how Scarlett seemed to be the center of attention while she'd been dancing.",
        "\"You were out there a long time Scarlett, how's the knee feeling?\" Chris asked.\n\nShe thought for a moment then grinned happily, \"Great! A little achy but good bro.\"\n\n\"You were shaking that ass!\" Dani giggled. \"I think you gave every guy in the place a hard on with your moves Scarlett!\"\n\n\"No I didn't!\" Scarlett laughed as she coloured.\n\n\"You have no idea Scarlett, from here it looked like every guy was watching you.\" Jason commented. \"Some of the girls too!\"\n\n\"No!\" Scarlett cried as she blushed even more deeply.\n\n\"Yeah!\" Chris laughed. \"But most of them were giving you dirty looks while their guys watched you.\"\n\nThe foursome sat and chatted for a bit more until the girls caught their breath then they dragged the guys up for a while. The girls teased and flirted with the boys constantly. Dani bumped and wiggled to the beat, garnering a fair bit of attention herself, but once again Scarlett stole the show. She'd shake and writhe like she was being seduced by a snake, then whip around and press herself against Chris while teasing his lips with her tongue. Every move she made was solely for Chris's pleasure but everyone noticed. The one person who noticed the most just got angrier and angrier with every passing moment.\n\n---\n\nAdrian stood at the bar nursing another drink, his eyes smoldering with hatred as he watched Scarlett pretty much have sex with the little punk she was dancing with. It was the same little shit he'd watched her walk with for an hour and make out with a few nights previously. Just seeing her with that guy drove him nuts, and the way she was so shamelessly flirting with him made him sick. Scarlett was HIS girl! He'd spent months getting her to where she'd pretty much do anything he told her to. Then the little bitch had to go and get a spine once she decided to come to Ontario to go to college. SHE had broken up with HIM! The bile rose to his throat again as he thought of that day. No girl had ever broken up with Adrian before so Scarlett dumping him had been a blow to his fragile ego. \n\nThere had only ever been one other girl who had touched him as deeply as Scarlett had. Her name had been Rachelle and she'd been a grade ahead of him in high school. She was stunningly beautiful and the first time he saw her he had been smitten and had worshipped her through three years until she graduated. Adrian had eventually worked his way into her circle as something of a gofer, handing, fetching and basically doing whatever she had asked him to do. Although she had treated him as less than dirt he had fawned over her. Her friends had openly mocked him and most of the school watched almost aghast as he demeaned himself constantly for her attention. Finally, a week before the end of her last school year she let the hammer fall. In the middle of the cafeteria she let loose with the most horrible, vile and hurtful outburst against him, absolutely humiliating him in front of just about the whole student body of the school as her clique of friends laughed at his embarrassment. The following year he had transferred to another school just to get away from the place where he had been so thoroughly destroyed by Rachelle. \n\nAfter what had happened to him he had never let another girl get to him like that again. He'd use them for what he wanted then toss them aside like a used tissue. That had worked well for him for years, he never dated a girl for very long and really only used them as his sex toys, leaving them once he got bored with them. Then he met Scar and somehow things changed. She was young, and beautiful, and oh so eager to please him. With almost no convincing at all he'd gotten her trained to be his little lap kitten, doing whatever he wanted, whenever he wanted. That had gone on for the better part of seven months, then she'd told him she was going to be moving to Toronto to go to college. He knew he had to find some way to get her to stay, so he thought if he could get her into a gang bang with him and a few of his friends and secretly video it he could blackmail her into not going by threatening to post it on the net. Then she'd be his for good. Unfortunately for him his logic had been so skewed that it had never occurred to him that she would say no, so when she had gone ballistic and stormed out of his apartment telling him she never wanted to see him again he had been floored. He hadn't heard from her after she left his apartment and in the intervening months every girl he tried to date quickly realized he was a low-life and followed Scar's lead and dumped him. \n\nIn his twisted psyche Scarlett was elevated to the almost goddess like status that Rachelle had held during his high school years. He knew that the only way he would be happy was if he could get her back, and he knew he'd do anything to get that to happen. He had convinced her mother that they were good friends and gotten Scarlett's current address and cell number and headed to Ontario to get her back. He watched her for several days before calling her and meeting up with her, and was stupefied when she told him she had a new boyfriend and again told him that they were through and he should leave her alone. Adrian had held up a good front to her rejection but inside he had squirmed like a pinned worm on a board. After that he had held an almost constant vigil outside her house, watching when she came and went and who she was with. He saw that she spent a lot of time with whomever the guy was that lived in the house with her. It turned his stomach to see them kissing out in front of the house when it dawned on him that the little shit was her step-brother! He had her, he had the leverage he needed to get her back! All Adrian had to do was confront Scar about what she was doing with her step-brother and threaten to go to her parents about it and she'd cave in and be his again.\n\nSo he followed them that night, sitting outside in his cold car while they were in the restaurant, then to the club and waiting to line up far enough back so Scar wouldn't see him. Now he stood in the dance club and watched HIS girl dance with another guy and it infuriated him. So he waited and watched for his chance to get to Scar and get her back with HIM where she belonged.\n\n---\n\nScarlett and Dani had been out dancing for some time when they decided they needed a quick washroom break and headed in that direction. They freshened up and headed back out to go sit off for a bit with Chris and Jason. Scarlett had been having a great time, she'd always loved dancing and had been very upset when she'd injured her knee back in January and hadn't been able to dance since, so she was dancing as much as she could despite the dull ache she felt in her knee. She knew she was probably over-doing it but she was having too much fun with their friends to stop. When they came out of the short hallway that led to the washrooms Scarlett stopped dead when she heard someone call out to her.\n\n\"Looking fucking HOT babe!\"\n\nShe looked over her shoulder and her face went ashen as her heart dropped into her stomach. Adrian was leaning against the wall by the hall entrance with his typical sly grin plastered on his face. He pushed himself off the wall and walked slowly toward her. \n\nDani looked from her friend to the guy who had spoken to her and saw the look of fear on her friend's face. She knew just by how Scarlett started shaking that whomever this guy was he had just scared the shit out of her. The only guy she could think of who would be able to do that would be her ex, Adrian. Dani tried to pull her friend along with her but she was rooted to the ground. She knew her friend was in trouble but since she couldn't get her to move she would do the next best thing she could think of, she'd go get Chris and Jason. She took off as fast as she could through the press of the crowd toward the guys.\n\n\"What...what are you doing here?\" Scarlett asked almost like she'd been knocked senseless.\n\n\"Oh, I just thought I'd come say hi babe, you know. Maybe spend some time with my best girl.\" Adrian said.\n\n\"I told you to leave me alone Ade, we're done so...so fuck off!\" Scarlett replied as some of her shock wore off.\n\nAdrian's head fell back and he laughed loudly, drawing the attention of some of the people nearby despite the loud music. \"Really babe? We're done?\" he asked as he gave her a look that genuinely frightened her.\n\n\"Like you said the other day Scar, it was never about you. It was about me. Just because you 'say' we're done that doesn't mean shit. You don't dump ME!\" he snarled as he grabber her upper arm roughly.\n\n\"A-Adrian you're scaring me! We're through, get over it. I don't want to see you anymore. J-just leave me alone okay?\" Scarlett pleaded as she felt his fingers dig into the tender flesh of her arm.\n\n\"You don't get it do you bitch? We're NOT done, you're coming with me Scar so shut the fuck up and get moving!\" he raged as he started pulling her along with him.\n\nSeveral of the people nearby saw what was going on, but only caught a bit of what was said between the wild eyed guy and the red haired girl. One of them quietly moved off to alert club security of a possible problem while the others watched cautiously unsure of what else they could do.\n\nMeanwhile Dani had made it across the floor and to the guys. She breathlessly explained that Scarlett was in serious trouble and they needed to move NOW to help her before it was too late.\n\n\"What's going on Dani?\" Chris asked while she gasped and tried to tell him and Jason what was going on.\n\n\"A-Adrian!\" Dani cried out as she fought to control her nerves. \"He's here and he's got Scarlett!\"\n\n\"What!\" Chris shouted as he bolted up from his chair. \"Where?\"\n\n\"By the washrooms, hurry!\"\n\nChris took off in the direction Dani pointed and rammed his way through the milling people, knocking drinks out of hands and bowling over a few who got in his way and didn't move quick enough. Jason and Dani followed as quickly as they could but Chris was moving like a man possessed. Scarlett was in danger and he needed to be there to protect her. Chris caught sight of his step-sister and charged forward as she looked toward him, her eyes wide with fear. He lowered his shoulder and slammed into Adrian's back with all of his strength, sending the other man flying forward and onto his face on the floor. Scarlett backed away from where Chris was standing over Adrian and eventually got caught up by Dani and Jason as they arrived on the scene. \n\nAdrian rolled onto his side and slowly stood up, glaring at Chris as he tried to get air back into his lungs. \"You little fucking shit! She's mine, she's coming with me!\"\n\nChris crouched slightly and his arms tucked in, his eyes hooding and giving him the look of a cobra ready to strike at the smaller man in front of him. \"No. She's not Adrian. Get the fuck out of here before you really piss me off.\" he said almost calmly, in a tone that frightened the few people who had heard what he'd said.\n\n\"You don't get it! You can't have her, she belongs to me!\" Adrian yelled as he charged Chris with a wild punch aimed at his head.\n\nChris ducked the swing and had already been swinging his own fist when it connected with Adrian's ribs, giving him a satisfying crunch under his opponent's shirt as he felt bones crack against his knuckles.\n\nAdrian yelped and moved back quickly, holding a hand to his side as he watched the younger man move forward. \"You broke my ribs you puke!\"\n\n\"Be glad that's all that's broken,\" Chris chuckled as he made another step toward Adrian.\n\n\"Fuck you!\" the injured man screamed as he launched another punch at Chris. \n\nDodging the second punch Chris waded in and landed a solid shot to Adrian's jaw, dislodging and cracking teeth and sending blood flying as he dropped to the floor. Club security showed up just then and grabbed both men, dragging them toward the exit. Adrian fought and screamed the whole way but Chris went calmly and didn't make any fuss at all. Jason, Dani and Scarlett followed them to the door and outside. The security team merely let Chris go but held a still struggling Adrian between two massive walls of flesh. They could hear sirens approaching and Chris looked at Jason sheepishly.\n\n\"Guess I'm not gonna get my princess home before she turns into a pumpkin bro.\" he said as Scarlett crushed him in a tight hug.\n\nJason looked at his girlfriend, \"Run back and get the coats Dani, I think we'll be out here for a few.\"\n\nDani ran back in to grab their coats as fast as she could while Chris held a shaking Scarlett and Adrian raged in the grip of the bouncers. The sounds of the sirens grew closer by the second.\n\n\"You fucker! You're not going to keep her! When I tell her dad your fucking his little girl he's going to kick your ass!\" Adrian screamed at Chris as he sprayed blood from his frothing lips.\n\n\"Shut up Adrian,\" Chris responded quietly.\n\n\"You're a sick bitch Scar! Fucking your step-brother! What we did was nothing compared to what you and that little fuck are doing!\" Adrian raged as he struggled in the bouncers' grip.\n\n\"Fuck off!\" Scarlett screamed back as tears began streaking her cheeks.\n\nChris held his step-sister close, stroking her back and trying to keep her calm. A police car rolled up with lights flashing and two officers got out, walking over to where they were standing. Suddenly Adrian managed to pull his arm free from one of the strong-men's grasp and jammed his hand into his pocket, pulling out a small pistol and pointing it at Chris and Scarlett.\n\n\"You can't have her!\" he screamed as he pulled the trigger.\n\nTime slowed almost to a standstill as Chris saw Adrian's hand swing up at them. His first response was to shove Scarlett away from him as hard as he could, sending her flying to the ground as he saw the muzzle flash and heard the pop of the gun a fraction of a second before a sharp pain lanced through his chest. The last memory Chris had was the feel of the cold ground hitting his back.\n\nPeople screamed and ducked at the sound of the gunshot, running away in all directions in a panic. The one bouncer and the police tackled Adrian and wrestled the gun from his hand as he continued to scream and fight them. It took two shots from the taser before they could cuff him.\n\nScarlett screamed when she saw Chris lying on the ground near her, a bloom of blood growing on his shirt. She crawled to him and held him as she cried into his chest, not caring that his blood was covering her. \"CHRIS!! NO! No, oh God no don't die Chris!\"\n\nShe saw the bouncer and one of the officers lift Adrian up to his feet and launched herself at him, punching and screaming as she wailed her grief. The other cop grabbed her with one arm as he radioed for an ambulance. \n\n\"You fucking bastard! I'll kill you! I'LL KILL YOU!\"\n\nMeanwhile Jason ran forward as soon as he saw Chris fall and the cops and security guys take out Adrian. He checked Chris for a pulse and breathed a sigh of relief when he found it. It was thready but there. Quickly stripping off his own shirt he pressed it under his hand over the oozing wound in his friend's chest, thankful that he'd had first aid training and knew what to do, although it wasn't as much as he wished he could do. The officer holding Scarlett handed her off to Dani when she arrived back, shocked at the scene that she came back to. Both girls stood crying as they watched the police officer and Jason work to keep Chris alive on the cold ground.\n\nThe few people who hadn't run stood quietly watching as the scene unfolded before them, the sounds of more sirens blaring as an ambulance and another cruiser rolled up at almost the same time. The paramedics grabbed their gear and raced to Chris, replacing Jason and the cop in their efforts. A second ambulance pulled in and the second team of EMT's grabbed a blood soaked Scarlett and took her to their vehicle, checking her over to make sure she wasn't hurt. Dani and Jason stayed close to her, trying to comfort the crying girl as she was looked after. One of the initial policemen on scene gently pulled the pair off to the side to get their statements as to what had happened. Dani and Jason told him what they knew and what they had witnessed that night and he handed them a card with his name and badge number on it, telling them that he would be in touch with them in the next day or so for a more detailed report, and that they should go to the station as soon as possible to file their full statements.\n\nThe paramedics working on Chris got him onto a stretcher and wheeled him toward the ambulance. Jason walked over to them to see what was going on. \"I'm his friend, is he going to be okay?\"\n\n\"Should be, we have to get him to the hospital, he's lost a lot of blood.\" The EMT said curtly.\n\n\"Okay, which hospital?\" Jason replied quietly as his friend got loaded in and one of the paramedics hopped in with him, the other running to jump in the driver's seat.\n\n\"Mississauga General!\" called the paramedic as he slammed the rear door shut.\n\n\"Oh God, Jason!\" Dani said as she cried into his chest, shaking with reaction as the second ambulance took off with Scarlett strapped in to the bench.\n\n\"It's okay Dani, we'll get to the hospital as quick as we can.\" he murmured into her her hair as he lead her to their car. He wiped his blood soaked hands on his pants and threw his jacket on before they got to the car, shivering with the cold and reaction to what had just happened.\n\nThey arrived minutes after Chris and Scarlett did and raced to the emergency room check in. The duty nurse told them that Chris was already being prepped for surgery and Scarlett was in an examination room and had been given a mild sedative as she was hysterical. They entered Scarlett's room and saw her lying on the gurney, her eyes half shut and sobbing quietly while she moaned Chris's name over and over. Dani ran to her and took her in her arms, gently comforting her friend and trying to calm her down and reassure her that everything would be fine. Jason stood back quietly watching the two girls crying in each other's arms, not sure what else he could do.\n\n\"Fuck!\" he yelled as he reached into his jacket to fish out his phone.\n\nDani jumped in her seat and glared at him, \"What?\" she hissed.\n\n\"Their folks! We have to let their mom and dad know what happened! I'll be back,\" Jason said as he hurried outside to call Chris and Scarlett's parents, looking at the time on the phone and hoping that they would still be up.\n\n---\n\n\"Hello?\" Lisa said into the house phone, not sure who would be calling this late at night since she didn't recognize the number.\n\n\"Mrs. McCormick? It's Jason.\"\n\n\"Jason? What are you doing calling at this hour? Chris and Scarlett are out right now.\" she replied.\n\n\"I know, we're all at the hospital, you guys need to get here right away.\" he tried to say as calmly as he could although he could hear the quiver in his own voice.\n\n\"WHAT? Why are you at the hospital?\" Lisa cried out, wide awake now and sitting up in bed as she shook her husband awake too.\n\n\"Chris, oh God. Chris has been hurt real bad. He got shot!\" Jason wailed as the full impact of what had happened that night finally had time to sink in. He sank to the ground by the Emergency Room doors and cried as he tried to explain what had happened.\n\nLisa jumped up and grabbed her clothes as Jason sobbed over the phone to her. She nudged Steve again and got him moving quickly as she relayed as much of what Jason was able to tell her to him. Within minutes they were dressed and heading toward the front door as Lisa hung up the phone and threw it somewhere into the living room before they ran out.\n\nChris's mom clamped down on her tears but was absolutely frantic, urging Steve to drive faster. Fifteen minutes later they slammed to a stop in front of Emergency and Lisa leaped out, finding Jason still sitting on the ground crying quietly. She waved to her husband and told him to park the car and meet her inside as she bundled Jason into her arms and helped him up from the cold ground, leading him back into the warm hospital.",
        "\"...It...it happened so fast! If Chris hadn't pushed Scarlett away she would've been the one who got shot!\" Jason exclaimed.\n\nLisa held Jason as he cried into her shoulder, she was desperate to find out what was happening with her son but she knew that Jason needed her right at that moment. \"Shh sweetie, it's okay. I-I'm sure Chris will be fine. He's a strong boy, and from the sounds of it a hero. You did everything you could honey. Thank you for being there for him sweetie.\" she said soothingly as the young man in her arms slowly calmed down.\n\nWhen Jason had calmed down sufficiently he led Lisa to Scarlett's room, where the young woman immediately began to wail again when she saw her step-mother enter the room. \"Oh Mom! I'm sorry, this is all my fault! God I'm sorry, I'm so sorry!\"\n\n\"Shh baby, it's not your fault!\"Lisa murmured into Scarlett's hair as she pulled the girl into her lap and held her tight as she sobbed in great shuddering gasps. Lisa couldn't help herself and began to cry as well, for her step-daughter who for some reason had a wracking guilt about what happened, and for herself because of her fear of the unknown for her son's situation.\n\nThat was the scene Steve stepped into minutes later, a blood splattered Scarlett sitting in Lisa's lap as the two of them cried, and Dani sniffling into her boyfriend's chest in the corner. Seeing that Scarlett was being well cared for for the moment he hurried back to the duty nurse and asked for an update on Chris's condition. She advised him that his step-son was currently in surgery and that the doctor would be out to talk to them as soon as they were finished and Chris was in recovery. He returned to the examination room and knelt beside his wife and daughter, gently stroking their heads and speaking softly to them, telling them what the nurse had told him and that they'd find out soon how Chris was. When Scarlett registered that her dad was there she leaped into his arms and her tears soaked into his shirt as she clung to him tightly, shaking with her sorrow over what had happened. Lisa joined her in his arms moments later and the three of them held each other and cried quietly while they waited for news of Chris.\n\n---\n\nJason had finally gotten Dani quieted down and the two of them went to the coffee station to grab drinks for all of them. The coffee was hours old and tasted burnt but it was better than nothing so they headed back to the waiting room outside surgery where their friends' family waited quietly. It had been two hours since Chris had gone in to the OR and they'd still heard nothing. Jason had offered to take his girlfriend home hours ago, but she refused, insisting she needed to be there for her friend, so they had called their folks and told them what had happened. They passed the hot beverages out to the others then they all sat and listened to the sounds of the hospital during its night shift.\n\nAfter what felt like another hour but was probably more like ten minutes a doctor finally entered the room. Steve stood up immediately, followed quickly by Lisa and Jason. Dani had been comforting her doped out friend on the sofa and stayed with her as she looked blankly between her parents and the doctor.\n\n\"How'd it go doc?\" Steve asked apprehensively.\n\n\"He's going to be okay,\" the doctor replied to a huge sigh from the others in the room. \"The bullet entered just under his right clavicle and lodged against his scapula. Collarbone and shoulder blade respectively.\"\n\n\"Oh thank God!\" Lisa groaned as she sagged against her husband, his arm holding her tight to his side as he felt his own knees weaken.\n\n\"Your son's very lucky, a bit lower and the bullet would've entered his lung. By the looks of it it was a small calibre bullet and it didn't do as much damage as we'd initially thought. We decided to leave the bullet where it is as trying to remove it would probably cause more damage than leaving it would. He'll be lighting up airport security for the rest of his life, but he's alive and will heal, which is the main thing.\"\n\n\"Can we see him?\" Lisa asked softly.\n\n\"We're just moving him to recovery, and he'll be out for a while longer yet, but we'll send someone to get you in a little bit okay?\" The doctor said with a gentle smile.\n\n\"Okay, thanks doctor.\" Steve said as he shook the man's hand gratefully. He turned to Jason and pulled him into a tight hug after the doctor left, making the younger man's ribs creak with the strength of the hug, then pulled back and gave him a serious look.\n\n\"Thanks son, we really appreciate everything you and Dani have done for us all. Why don't you two go home and get some rest. We'll let you know when Chris is able to have visitors okay?\"\n\n\"Sure Mr. McCormick. I didn't do anything Chris wouldn't have done for me, and I'm sure Scarlett would've done the same for Dani.\" Jason replied seriously, then he looked over at his girlfriend and nodded to her. \"Come on, let's go home and we'll swing by later baby.\"\n\n\"If you need anything call us okay?\" Dani added as she hugged Scarlett and Lisa before giving Steve a hug as well.\n\nLisa held the young woman tight and sniffled a bit, thinking about what wonderful friends her kids had, \"Of course sweetie, thank you so much for helping with Chris and Scarlett.\"\n\nThe younger couple left hand in hand, walking slowly down the hall toward the exit and home. A short time later, probably no more than an hour, an orderly came to take Steve, Lisa and Scarlett to a room on another floor where Chris was lying quietly in a bed, his shoulder wrapped in gauze and and IV drip, heart monitor and oxygen hoses hung from his arm, chest and nose. Lisa turned into her husband's chest and began to cry again and Scarlett walked back out of the room and slumped into a chair. Steve led Lisa out and sat her in another chair. The whirs and beeps ran a counterpoint to the quiet sobs of the two women sitting outside the room until they both calmed down enough so that they could re-enter the room and watch the young man resting peacefully unaware of what was occurring around him. They stood, and occasionally sat quietly waiting for Chris to awaken from his slumber. Each lost in their own thoughts about the night's events and what the future held for all of them.\n\nScarlett finally broke the silence in the room, turning to her parents and saying in a voice so quiet it was almost a whisper, \"Lisa...Mom, Dad. Can I have a few minutes? Please?\"\n\nHer parents looked into her eyes and saw the deep sorrow in them, nodding and slowly leaving the room to sit in the chairs outside while Scarlett slumped into a chair beside the bed. She took Chris's hand in hers and held it to her lips, kissing it gently as tears leaked from the corners of her eyes again. Scarlett sat like that for a long time, just looking at him, realizing that she had been standing on his right side and if Chris hadn't shoved her aside the bullet would have hit her in the head, possibly killing her. She laid her head on the bed and kissed his fingertips as she cried.\n\n\"I'm sorry Chris, I'm so sorry. Please forgive me boy-scout. I didn't want any of this to happen, I was trying to protect you and you got hurt instead. I'm so, so sorry. Please don't leave me!\" She whispered softly as her tears fell and stained the bedding with their moisture.\n\n*** This ends this part of the story. Don't worry I have more ideas as to where this tale will go and am hard at work on it already! Thanks again for being so patient and supportive! Please don't forget to vote and comment! "
    ],
    "authorname": "Chiara23",
    "tags": [
        "brother sister incest",
        "brother sister sex",
        "incest romance",
        "step siblings",
        "mutual masturbation",
        "drama"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/it-started-in-a-cabin-ch-02"
}