{
    "title": "The Web Ch. 08",
    "pages": [
        "Final part of an eight part series. I wrote this story to develop some themes more along the lines of \"mind-influence\" than \"mind-control.\" The most erotic time in a relationship is often spent exploring the boundaries of trust and sharing. If that turns you on, then this story will have many molten scenes. At the same time, as the writing progressed, the characters grew and influenced each other in interesting ways. Is it better to get what you want, or learn what you want? I still don't know who really was in control. Maybe you will.\n\n*\n\nMonday evening, my phone rang.\n\n\"Evening, lover-boy.\" Of course, it was Kelly. \"You two love-birds have fun over the weekend?\"\n\n\"So how am I taking shit from you, when you were out on a date with Kevin? Shouldn't I be asking how far you let him go?\"\n\n\"The best defense is a good offense, Brad. But since you asked, I never give it up on the first date. The second, however...\"\n\n\"So there's a second?\"\n\n\"Kevin's already called\u2014such a gentleman. Of course, what man wouldn't with me? He's lost, Brad, just as you are with Cathy.\"\n\nI laughed. \"I admit it on my side, but I think you'll find Kevin a worthy opponent.\"\n\n\"Oh, I so love challenges! Now, let's get down to why I called. You two, all alone for the weekend. Tell me all the juicy details!\"\n\nI gave Kelly a pretty complete version. She asked a lot of questions about the non-sexual parts.\n\n\"That sounds exactly like what Cathy said,\" she said when I finished. \"It's great to hear that you're getting to know each other outside the bedroom. I wondered if you'd ever leave your house.\"\n\n\"Hard to believe any woman would want to get out of bed with me, isn't it?\"\n\nKelly snorted. \"Whatever. Bed or not, Brad, Cathy was absolutely glowing when I stopped by. She likes you\u2014a lot.\"\n\n\"It goes both ways. I think she and I saw each other in a different light, and we liked what we saw.\"\n\n\"I think you're both perfect for each other,\" she replied.\n\nI took the opening. \"Maybe a little too perfect, almost like someone made a match. Tell me, Kelly, how much did you help Cathy to understand that she had a problem and that only I could solve it?\"\n\nKelly didn't miss a beat. \"You know me, Brad, always trying to help my friends have the finest. Of course I know everything about my best friend, sometimes more than she does herself.\"\n\nI laughed. \"Good answer, Kelly, but I'm watching you.\"\n\n\"That's the thanks I get. Oh well, I'll savor my good deeds alone.\"\n\n\"Not likely. But I'm happy you're Cathy's friend\u2014and mine.\"\n\n\"Thanks, Brad. You both mean everything to me. Now, I'd best be letting you go, since you were waiting to call Cathy. You are going to call her, right?\"\n\n\"Relax, Mom. I'll call her.\"\n\n\"Good night, lover-boy.\"\n\n\"I am soooo waiting to turn the tables, Miss Smarty-pants. Good-night.\"\n\nI did call Cathy, and we both eagerly discussed how much fun we'd had over the weekend. On a hunch, I asked her if she'd like to meet me for pizza the next evening.\n\n\"What a great idea\u2014we've never done that before. Plus, Brad, I appreciate how you seem to know what I'm thinking. Yes, I am making us both wait for Thursday. I want to be well rested for my final!\"\n\nCathy met me outside the restaurant the next evening.\n\n\"Hi, Cathy! That sundress looks great on you.\"\n\n\"Why, thank you, Brad. You're looking pretty good yourself.\"\n\nWe got seated and got a glass of wine. Cathy looked over at me.\n\n\"Thanks for inviting me, Brad. I have to laugh\u2014it's almost like we're dating backwards. We're doing a very safe dinner where we each drove, but we kind of know each other a little better than the average guy and girl doing this, don't you think?\"   \n\nI chuckled. \"Cathy, in some ways I know you very intimately, but you always find a way to surprise me. So while I know a lot about you, there's a lot I don't know, too. You always keep a sense of mystery about you.\"\n\nCathy's eyes locked onto mine. \"I like being your mystery woman, Brad.\"\n\n\"Don't ever stop,\" I said, and her eyes flashed.\n\nLater, I brought up my phone call with Kelly. \"I tried to put her on the spot about getting us together, but she just breezed right by it. She's pretty good.\"\n\n\"She's very good,\" Cathy emphasized. \"She's gotten me to do several things I hadn't done before\u2014good thing she's a friend.\"\n\n\"Anything you'd like to share?\"\n\n\"Wouldn't you like to know?\" Cathy smiled.\n\nAs we were finishing, Cathy looked up. \"Brad, I had a wonderful evening. Maybe next time I'll give you my phone number.\"\n\nWe laughed and parted with a kiss at her car. I helped her inside and waved as she drove off.\n\nWhen I got home, Wednesday, I have a message on my machine. \"Looking forward to tomorrow, Brad. I always shoot for an A+. Don't forget to stay over Friday!\"\n\nI hadn't forgotten. I played basketball that evening with some friends to take my mind off of it.\n\nThursday, as usual, I immersed myself in some deep design work, and the day went quickly. I put things away, and hurried home, picking up flowers on the way. I changed into some pleated slacks, guessing that I'd need to room for my cock later on. I brought my overnight things and a change of clothes as well.\n\n\"Brad, they're lovely!\" Cathy exclaimed when she opened the door. I handed her the flowers and quickly took in her body, every curve emphasized by her sheath dress.\n\n\"Wow. You look fabulous!\"\n\nShe smiled and flowed into my arms, kissing me deeply. \"Better say hello to Kelly,\" she whispered.\n\nI looked up and saw Kelly waiting, an expectant look on her face. My eyes travelled up and down her body, also highlighted by a sheath dress. Her pattern subtly complimented Cathy's, and made it difficult to look away.\n\n\"Kelly, you look stunning,\" I said as I took her into my arms. She smiled and then surprised me by kissing me on the lips. A jolt of electricity went through me.\n\n\"That's for the compliment,\" she said. \"Your eyes said more than your words.\"\n\nI turned back to Cathy, still a little stunned. Her eyes gleamed back at me.\n\n\"Better get the rest of your things,\" she softly directed, smiling.\n\nAs I came back inside, the two ladies stood by Cathy's bar, talking. Cathy faced away from me, and I let my eyes linger on her ass, nicely framed in her dress. I glanced up to Kelly, a knowing look in her eyes. Of course, they had planned this pose. I dropped my bag off in Cathy's bedroom, finding the bed turned down, a chair pulled up, and a small velvet bag on the nightstand. I knew this was supposed to make me wonder.\n\nCathy handed me a glass of wine as I rejoined them, a twinkle in her eye. \"To a couple of very special people in my life,\" she said. As we took a sip, I marveled at how good they looked together.\n\n\"Yes, Brad, these are our man-killer outfits,\" Kelly laughed, reading my mind. \"They go together well, no?\"\n\n\"I'm already dead,\" I said, to giggles from the ladies.\n\n\"I figure that they'll help you behave\u2014knowing that Cathy and I can snare another boyfriend for her any time.\"\n\n\"Yeah, but she'd be getting some lousy sex that way. That's my way of keeping her in line.\"\n\n\"And you've got me hooked,\" Cathy said, smiling. \"I think we're even, but I'm never going to behave\u2014not completely.\"\n\n\"I don't think any of us are, especially Kelly,\" I responded. We all laughed.\n\nCathy brought out some appetizers, and we continued talking and laughing as she finished preparing dinner. I watched her graciously move about her kitchen, keeping the conversation flowing while she worked. If she held any apprehension about later, she didn't show it.\n\n\"We're having steak salad,\" she announced. \"Brad, can you crumble the blue cheese?\"\n\nI stepped in to help while Kelly got the table set outside. We got the plates fixed and added some rolls that Cathy had been baking. Soon we were outside, enjoying the evening.\n\n\"This is delicious,\" I said. \"It's satisfying, but not too heavy.\"\n\n\"I cook dinners like these in the summer,\" Cathy replied. \"Especially when I'm going to be active later.\" Kelly snickered.\n\nWe took our time enjoying the meal. Cathy explained more details of her weekend plans with her parents, and we figured out the logistics of meeting them at the various events. Finally, Cathy looked up.\n\n\"Everyone satisfied?\" Kelly and I nodded. \"Shall we clear the plates?\"\n\nWe got the kitchen cleared and moved to Cathy's living room, taking our customary places.\n\nCathy looked at Kelly. \"Thanks for coming one more time, Kelly. I wanted to celebrate all that we have accomplished, and I wanted you here. I might not remember to thank you later.\"\n\n\"You're welcome,\" Kelly said, laughing. \"I'm happy to be here.\"\n\nCathy turned to me. \"And you, Brad, how can I thank you? You've taken me much further than I ever thought possible.\"\n\n\"You're very welcome, Cathy.\" I replied. \"I get to enjoy your journey as much as you do. To see a student achieve so much brings a lot of satisfaction to teaching.\"\n\nKelly cocked an eye. \"Satisfaction\u2014is that what they call it?\" We all laughed.\n\nCathy looked at each of us. \"OK. Everyone ready to get started?\"\n\n\"Cathy,\" I said. \"I do have a question for you.\"\n\n\"Yes, Brad?\"\n\n\"As part of developing your examination, I did some additional research on suggestions during the voice dialog process. Up until now, I've been careful to respond only to your specific desires. If you would like, I could suggest some things that might prove very stimulating.\"\n\nCathy's eyes lit up. \"I would like that very much, Brad.\"\n\n\"Kelly here can keep me honest,\" I added.\n\n\"So what are you going to suggest that Cathy wouldn't go for anyway?\" Kelly snorted. \"She's a sex goddess, remember?\"\n\n\"I just want to make sure I worship her in the proper way,\" I replied.\n\n\"Just make sure he lives up to expectations,\" Cathy laughed. \"OK, professor, let's get this test going. I'm ready!\"\n\n\"As you wish, Cathy. Let's go to your beach...\"\n\nI relaxed Cathy and then spoke to her Controller and Protector, establishing a zone to work within. My cock hardening, I asked to speak to Desire.\n\nCathy stretched, arching her back and pushing out her breasts. \"This is Desire speaking.\"\n\n\"Hello, Desire. How have things been going for you?\"\n\n\"Wonderful, Brad. Cathy has been really listening to me, and look where it's got her? She's happier than she's ever been.\"\n\n\"She's made some other people happy as well,\" I added.\n\n\"And she knows it,\" Desire replied. \"She knows she's making you happy, Brad.\"\n\n\"Tell her not to stop.\"\n\n\"Don't worry. Happiness is my specialty. I'm really good at it.\"\n\n\"That's an understatement,\" I replied.\n\nDesire laughed lightly, which I hadn't heard before. \"I like working with someone who appreciates it.\"\n\n\"I definitely appreciate it. Now, let's talk a little about what are you looking for in this final exam. Care to share anything?\"\n\nDesire got more serious. \"I always want Cathy to excel. I think she's finally ready to go all the way.\"\n\n\"And what way is that?\"\n\n\"You remember her talking about her bottom when we started? I think Cathy is ready to let you bend her over and have your way with her.\"\n\nMy cock lurched. \"Ummm, that would be very nice,\" I croaked out.\n\n\"Wouldn't it?\" she replied, looking into my eyes, suddenly intense. \"What would you do, if you could do anything?\"\n\nMy throat went dry. \"I'd, I'd, take us beyond anything we'd ever known,\" I said softly.\n\n\"Take her there, Brad. Take both of you there.\"\n\nI nodded, the tingles racing through my limbs.\n\n\"Ready to speak to Joy?\"\n\nI nodded again, having difficulty speaking.\n\n\"This is Joy speaking, Brad. I think my friend Desire said about everything tonight. Cathy is capable of incredible joy with you, Brad, and you with her. Let it flow.\"\n\n\"I will.\"\n\n\"That's all I ask.\"\n\n\"Thank you, Joy,\" I said automatically. Something nagged at me, and came clear in a flash of insight. Neither Desire or Joy had asked anything of Cathy tonight. Both of them had spoken to me directly, telling me what Cathy wanted.\n\n\"Joy?\"\n\n\"Yes, Brad?\"\n\n\"Would you work to heighten Cathy's awareness? Her skin, her lips, her nipples, her pussy, her bottom\u2014no\u2014her ass. Everything will be super sensitive and on fire. She will melt in my arms.\"\n\nJoy smiled. \"I would love to, Brad. Anything else?\"\n\n\"Put us on the same wavelength, Joy. Let me feel everything that she feels.\"\n\n\"Her joy will be your joy, Brad.\"\n\n\"Thank you, Joy, for helping me.\"\n\n\"Ask anytime, Brad\u2014any time.\"\n\nI looked deep into her eyes, seeing the sincerity there. Joy was eager to help\u2014what was up her sleeve?\n\n\"Joy, before I go back to the Controller, is there anything else I should be asking?\"\n\nJoy laughed. \"There's so much, Brad. But you have a lifetime to ask, don't you?\"\n\n\"I suppose I do. Good night, Joy.\"\n\n\"Oh, I'm not going anywhere. Don't you know? I'm always here.\"\n\nI smiled, remembering how much joy Cathy brought to her life. \"How could I forget? Forgive me.\"\n\n\"If you're good, I'll forgive. If you're great, I'll forget.\"\n\nI laughed, looking over to see a laughing Kelly. \"That's my plan, Joy. Now, would you please take me to the Controller?\"\n\n\"Of course.\" In a second or so, Cathy spoke again. \"This is the Controller speaking.\"\n\n\"Controller, did you hear everything that Desire and Joy said?\"\n\n\"I always hear,\" she replied.\n\n\"Would you mind working with Joy to keep Cathy focused on her senses? Make her notice, and feel, everything. Sharpen her climb to orgasm. Drive her pleasure to the core of her being.\"\n\n\"That's a worthy goal,\" she said. \"Focus, sharpened senses, yes. I will work with Joy.\"\n\n\"Thank you, Controller. I really appreciate how you're working to help Cathy. Now, can you take us back to the beach?\"\n\n\"We are here,\" she replied.\n\n\"Cathy, did everything that Desire and Joy talk about make sense to you?\"\n\n\"Perfect sense,\" she replied, stretching. \"I can't wait.\"\n\n\"Great,\" I said. \"Before we leave the beach, I want you to think about something. You've been waiting to get bent over, with me in your ass, for a long time. Tonight, focus on what you've been wanting. Your ass will respond to my touch. It will bring us both unbelievable pleasure\u2014more than you ever imagined. Melt into that pleasure.\"\n\nCathy squeezed her legs together. \"Ummmmmmmm. I'm already hot.\"\n\n\"Ready to go back?\"\n\n\"Please,\" she begged.\n\nI took us back. \"Cathy, do you remember everything we talked about?\"\n\n\"Yes, Brad. Let's get started\u2014please?\"\n\n\"A little impatient? Take my hand, and let's go back to your bedroom.\"\n\n\"I thought you'd never ask,\" she whispered.\n\nI took her hand and felt the electricity pass between us. I led her back to the bedroom, followed silently by Kelly. I motioned to Kelly to sit down, and then I took Cathy in my arms. Her eyes captivated me as I looked into her face.\n\n\"You are stunning, Cathy. So alive, so beautiful, so sexy.\"\n\nShe moaned as I pulled her close for a long kiss. Her lips were hot, hungry, and insistent. Cathy's hands travelled up and down my back as our tongues danced together, sparks crackling between them. Finally, I took her shoulders and gently turned her around. She sighed as she settled against me, turning her head for another kiss.\n\nMy hands roamed along her sides as we kissed, then I gathered them under her breasts. Cathy moaned her approval, but I didn't cup them like she expected. She twisted her body in frustration, but I just kept kissing her, letting the heat build. Her breath blew ragged in my mouth while her tongue sought out mine.\n\nGiving her what she craved, I eased my hands upward and cupped her breasts. \"Ohhhhh,\" she sighed, pushing her chest into my hands. I sought out her nipples under the thin material of her dress, getting more sighs of appreciation. Finally, I let my hands travel back down her sides, sliding over her hips and lightly gathering the material of her dress.\n\n\"Yesss...\" Cathy stepped away just a little to give me room, smiling at my effort to guide the slinky material over her curves. Her black lace panties came into view along with the firm curves of her ass. Next, her trim back slowly emerged as I lifted the material around her breasts. She lifted her arms, and I gently lifted the dress over her shoulders. I draped it carefully on her nightstand and turned back to her.\n\nThis time she pushed back into me, grabbing my hands and placing them on her chest. She shivered as the electricity crackled between us. Her hard nipples jutted into my hands, and I raked my fingers across them, loving the feeling as they snapped back and forth. Her arms lifted and snaked up around the back of my head, then and she pulled me down for another deep kiss. Her chest arched, pushing her breasts into my hands, but also her ass into my groin.\n\nHer body jolted at the contact, and she hauled my head down hard, fusing my lips to hers. My cock strained against my slacks, and she found the bulge, settling it in the crack of her panty-covered ass. She ground against me, wedging her panties into her ass.\n\n\"Oh, you feel good,\" she whispered when we came up for air.\n\n\"Should we get these clothes off?\" I whispered back.\n\n\"Thought you'd never ask.\"\n\nWe both chuckled as I turned her around. She reached for my shirt and undid the buttons, pulling it off me and draping it over her dress. Then she came in close and kissed me, her hard nipples raking into my chest. She pulled away again and gracefully lowered herself to one knee so she could remove my shoes and socks. The she reached up to undo my belt and pants, smiling at my rampant erection tenting my boxers. She got my pants off and placed them on the dresser, then reached for my boxers and eased them over my cock.\n\nI sighed with relief as my cock sprang free. Cathy got the boxers off of my legs and then darted in for the briefest kiss on the head of my cock. I jumped at the contact and she smiled wickedly as she rose up again. Pulling me in close, she gave me another deep kiss, my cock sandwiched between us.\n\nMy hands trailed down to Cathy's waist, feeling her smooth skin sizzle under my fingers. As I toyed with her panties, she pulled away again, and I kneeled to slide them from her hips. My hands gently pulled the material from her crack, and I lowered them down her legs, easing each side over her heels. Cathy's hands balanced on my shoulders as she lifted one leg up and then the other, both of us knowing that the heels would come in handy soon.\n\nAs Cathy stood before me naked, I planted kisses up her legs. She gasped as I came close to her pussy, but I kissed all around it, letting her desire build. I then took her hips and slowly turned her around, ending by lightly kissing and nibbling the firm cheeks of her ass. Cathy's breath mixed with her sighs above me.\n\nWhen I rose up behind her, Cathy again lifted her arms behind my head and pulled me close. Her ass again pushed into my cock, which slid up her crack to rest between us. I nuzzled her ear while my fingers returned to her nipples, twisting and pulling the hard nubs. Cathy ground her ass into the underside of my cock, her breath hot and hard.\n\n\"You feel fantastic,\" I whispered into her ear.\n\n\"Oh, God,\" she hissed in reply. She lowered her arms, pulled away slightly, and reached back to take my cock in her hands. I felt her rise on her toes, and then felt her pull my cock down between her cheeks. She settled back into me, allowing my erection to press deeply into her crack. I felt the slight roughness of her rosebud on my cock as she ground against me.\n\nWe continued our dance, both of us heating into a frenzy. Cathy purred as I stimulated her nipples. I looked up and saw Kelly pull her dress over her head and slide her panties off. She looked back at us and licked her lips as she twisted her nipples in time to Cathy's.\n\nCathy moved forward slightly, and I felt my cock slide up her crack a little each time she rolled her hips. Suddenly, the head was nestled at her anus.",
        "\"Ohhhh,\" she exclaimed, and pushed back hard into me. My precum slicked her entrance, and we both reveled in the sensations of my cock at her ass. Cathy leaned into my hands and pushed her butt into me. I could feel her relaxing her ass, trying to draw me in.\n\n\"You're on fire, Cathy, but I'm not done with you yet,\" I whispered as I pulled her upright again. She whimpered in frustration as the pressure lessened on her ass.\n\n\"Don't worry, you'll get everything you want,\" I breathed in her ear while my hands moved down and took hers. \"There's one instruction, however.\" I moved her hands to either side of her burning pussy. \"Tonight, this is all yours.\" My hands moved behind her. \"This,\" I said, palming her ass, \"is all mine.\"\n\n\"Oh God, take me,\" Cathy breathed back.\n\nI answered by nibbling down her neck and then slowly down her back. She shivered as I approached her waist and planted a belt of kisses along her hips. Kneeling down, I kissed all along her cheeks, then slowly approached the cleft between them.\n\nCathy drew in a huge breath as she realized what was happening. My fingers drew her cheeks apart while my tongue reached inward to lap at her opening. I relished the opportunity to explore this beautiful women's most hidden place.\n\n\"Ahhhhhh,\" she exhaled as I kissed her ass.\n\nI answered with deep strokes of my tongue, giving Cathy everything I could. My fingers wandered down and framed her pussy, but never approached any closer. Cathy squirmed above me, lost in the new sensations.\n\n\"Why don't you kneel on the bed, Cathy,\" I said, gently pushing her forward.\n\nShe eagerly complied, stretching between elbows and knees, and hugging a pillow to her face. Her hips hiked upward, her swollen pussy lips and puckered ass coming into full view.\n\nI let her wait while slowly unstrapping and removing her sandals. Slowly working my hands up her legs, I made sure she knew that I was enjoying the view.\n\nFinally, my lips came in contact with her taught cheeks, and she pushed back into me. Circling to my target once again, I got a long moan of appreciation. I worked her ass over, letting her know that my lips weren't going anywhere soon. My cock lurched when I felt her hand snake back between her legs.\n\nCathy started with long, slow strokes, but her excitement quickly drove her fingers faster. I listened to her muffled gasps and moans as she worked herself over. Soon, her fingers flew over her pussy, the strokes shaking her ass under my tongue. I kept up the pressure and followed her climb to orgasm.\n\n\"Uh, uh, uh, ohhhhhh,\" Cathy wailed as she pushed herself over the edge. My tongue felt every one of her contractions as she shoved her ass deep into my face. Her fingers squeezed her spasming pussy, her legs twitched, and her body shuddered through a mighty orgasm.\n\nCathy whimpered and twitched as she came back to earth, but her fingers kept up a slow rhythm on her pussy. I slowly backed my tongue away, but kept caressing her ass while she swayed in front of me.\n\n\"Oh, Brad,\" she uttered. \"That was out of this world.\" She hesitated a second, then said, \"Why don't you get the bag on the nightstand and see what other trouble we can get in?\"\n\n\"My pleasure,\" I replied and reached over to find the bag. I loosened the drawstring and looked inside to find all of Cathy's anal toys, along with several different bottles of lubricant. I withdrew just one bottle of lube, knowing that I didn't need anything else tonight. As I was reaching to set the bag back, I saw Kelly motion to me, and I handed the bag to her outstretched hand. She winked, taking it and reaching inside.\n\nTurning my attention back to Cathy, I squeezed a generous amount of lube on my finger and placed it at her rosebud. She sighed and opened her ass to me, her sphincter relaxing around my finger to grant it easy access. I watched as it slowly slid into her, accompanied by moans of encouragement. I stopped at the first knuckle, pulling back slightly and then pushing further in. Within a few strokes, my finger was buried to the hilt, and Cathy gave out a satisfied sigh.\n\nI started twisting my finger, reaming her ass as I cupped it with the rest of my hand. Cathy responded, her hips pushing back into me while her fingers continued to slide over her folds.\n\n\"It feels so good,\" Cathy whispered.\n\nI slowly withdrew my finger and added another, drizzling more lube on them both. When I placed them back at her ass, Cathy moaned and fully relaxed, letting them slide in easily. Once again, I worked my fingers back and forth, sinking a little deeper each time. Finally, I bottomed out again. Cathy's ass stretched around me. I gave her plenty of time to adjust, slowly twisting my fingers and letting her relax herself even more. She sighed her encouragement, clearly loving the feeling.\n\nHer breath caught when she heard the snap of the bottle.\n\n\"Ready for more?\" I whispered.\n\n\"Oh God, please,\" she responded. I withdrew my fingers from her ass while drizzling the cool liquid over my straining erection. I spread and warmed it around my cock, and then gently touched the tip to Cathy's rosebud.\n\n\"Ahhhhh,\" she sighed, pushing her ass into my cock. I steadied myself and let her set the pace. She was more than ready. I watched her ass open up as she relaxed, admitting the head of my cock. Then I felt the pressure lessen slightly as she breathed deeply. Slowly, her ass swallowed the first bit of my cock, and then the pressure suddenly eased.\n\n\"Ohhhhh,\" she murmured, letting an inch slide inside. She stopped, and slowly pulled away until only the head remained. She pushed back again, accepting more of my cock. Her muscles gripped my shaft with liquid heat. Little whimpers of pleasure escaped her lips as she twisted around me.\n\nCathy continued her rhythm, each time taking a little more, until her ass cheeks touched my groin. On the next stroke, she pushed harder and flattened her ass against me. She let out a long sigh as she stilled herself with my cock buried to the hilt.\n\n\"You feel incredible,\" I whispered.\n\n\"Mmmmmmm,\" she replied, and she pulled away again. Keeping up a slow cadence, she fully relaxed into the moment. When her fingers started massaging her pussy again, I eased forward to meet her thrust.\n\n\"Yessss,\" she hissed, and pushed hard into me. Emboldened, I started matching her motions. Moans of encouragement urged me on, and our tentative motions strengthened into genuine fucking. Cathy's fingers continued their dance over her pussy lips, and then I felt the first light bounce of her ass.\n\nDamn, she wants it. On the next stroke, we both bounced into each other. Tendrils of pleasure shot out from where her ass flattened against my hips, and my cock pushed deep into her fiery tunnel. I watched her rock on her knees, her ass milking my cock. She kept the pressure just right when we bottomed out.\n\nCathy panted as she pushed into me. Her fingers now flew over her pussy, and her other hand savaged her nipple. She was surely driving to a monstrous orgasm. I started letting the pressure build in my cock, and it jolted into me with each thrust of her ass.\n\n\"Damn! You're a fucking love-goddess, Cathy!\" Kelly exclaimed. \"You are just impaling yourself. I've never seen anything so hot in my life.\"\n\nCathy whimpered an answer. I looked over to see Kelly's legs splayed out, one hand holding a butt plug deep in her ass and the other hand flicking across her prominent clit. Our eyes met, and hers told me everything. As worldly as she claimed to be, she was seeing passion beyond anything she had seen before.\n\nMy gaze returned to the goddess kneeled in front of me. I've always dreamed of making love to a woman who's consumed with desire, who completely loses herself in the moment, who has discarded all the silly worries of what people will think. That dream was coming true before my eyes. Cathy wasn't letting me fuck her in the ass; she was completely and totally fucking me with her ass.\n\nTuned as I was to her, Cathy's passion resonated like nothing ever before. My cock jolted and strained, as hard and long as it could ever go. Love, lust, passion, and need fused within me as I responded to her. She was a goddess, and my body worshiped. Energy flowed from each of us into the other, pushing us both to impossible heights.\n\nWe both moaned uncontrollably, straining to hold back the volcano building inside us. Cathy's fingers dug into her pussy, and then she rammed back into me, hard.\n\nTime stopped...\n\nI felt each heartbeat pulse through my cock. Wild spasms raced down my limbs. I teetered on the edge, no longer in control of my body, waiting for fate to take me.\n\nCathy's ass clamped down on my cock, and she screamed. Her muscles rippled along my length as she came. Her flattened ass held back the load in my balls\u2014I felt one throb stopped, then another, then...\n\n\"Aarrrrrrggggghhhhhhh,\" I yelled as my balls exploded, the orgasm searing my insides. \"Uhhhh, uhhhh, uhhhh,\" I grunted, spurting nearly painful blasts deep inside Cathy's clutching tunnel\u2014each burst clawing past the pressure around my dick. On and on it went, the convulsions shaking me even after my load was spent.\n\nFinally, I opened my eyes and looked down, Cathy's ass still pushed hard against my hips, one arm still snaked under herself and the other cradling a breast. She had turned her head, and I saw the hint of a smile on her face.\n\nI sighed, and Cathy eased forward to lessen the pressure between us. I felt the lazy strokes of her fingers on her pussy, drawing out her return to earth.\n\nOr was she? The hand on her breast slowly twisted a nipple, and her ass moved almost imperceptibly along my cock.\n\n\"No fucking way, Cathy,\" Kelly said. \"You can't be.\"\n\nCathy's smile grew wider as she pushed back for real.\n\nStunned, I settled back on my heels, a hand on her waist guiding Cathy with me. She rose up and sat back in my lap, giving a surprised gasp at the new sensations. My cock slid deep into her, and my legs, hips, and abdomen cradled her ass with lots of delicious contact.\n\n\"Ohhhhhhhhhh,\" she sighed as she rocked against me, her hands on my knees providing a fulcrum. I felt her hips twist slightly, and she whimpered when her ass rubbed along my hips. She became bolder, twisting and grinding her ass to get that exquisite friction against my skin. Suddenly, she reached back for my hands\u2014both of them\u2014and clamped them to her breasts, not caring where they had been. I rolled the fat nipples between my fingers as she resumed rasping against me.\n\nMy cock came back to life as I saw her arm snake down between her legs. Fortunately, the sensitive head was buried deep inside her, and the pressure mainly ranged along the base. It would take some work, but I knew I could come again, especially with Cathy writhing in my lap.\n\n\"Oh, God, this feels good,\" Cathy murmured. She rocked back and forth, swaying her ass each time she met my hips. As she got more excited, she sunk deeper into my lap, grinding even more pleasure out of my groin.\n\n\"You are doing amazing things to me,\" I whispered.\n\n\"Good,\" she whispered back.\n\nCathy kept rocking, now lightly moaning with each downward thrust. Her fingers rubbed her pussy harder, tickling my balls each time she sat back. I felt her breasts tighten under my hands, and I pulled the nipples out, squeezing harder.\n\n\"Ohhhhhh,\" Cathy gasped in response. She plunged even harder into me, driving herself to climax. Her moans climbed in pitch, her fingers danced over her pussy, and then she dropped down hard, her body rigid.\n\nShe cried out, and her ass convulsed around my cock. I felt each contraction squeeze and release with the power of her orgasm. She rode it out, cries turning to moans and then to whimpers. Finally, her body slumped back into mine.\n\n\"Unbelievable,\" she whispered. Then she turned back to me. \"It feels like somebody is enjoying this.\"\n\n\"Oh, yeah,\" I replied, my cock rock hard.\n\n\"Come for me, Brad,\" Cathy commanded, and she shifted forward to rock over me again. Her butt ground into my hips while she squeezed and milked my cock with her ass muscles.\n\nCathy had just come hard with me deep in her ass. Now she wanted me to come deep in her ass, and she was doing everything she could to make it happen. That was a huge turn-on, and I groaned when I felt the heat shoot through my cock and balls.\n\n\"That's it, baby,\" she said as she pushed harder into me. I took in the sight of her back snaking side to side as she twisted around my rod. I sensed incredible heat and friction massaging my cock. I felt her love for me pour out. All this sent me hurtling toward orgasm.\n\nThe pressure built and built. I twitched under her, my cock on fire, dancing on the edge...\n\n\"Uhhhhhhhhhhh,\" I howled as my cock convulsed in orgasm. Cathy slammed down on me, pinning me deep inside her. Each blast of cum squeezed past her sphincter in white-hot eruptions, pumping deep into her ass. The waves went on and on, nearly consuming me. I grabbed around her waist and held on, whimpering as pleasure nearly became pain.\n\n\"Holy shit,\" I managed as I came back to reality.\n\n\"Felt OK, Brad?\" Cathy said with a smile in her voice.\n\n\"No, it didn't feel OK,\" I answered. \"It was so good, I nearly died.\"\n\n\"So I pass?\"\n\nI laughed, jerking with the shocks of my sensitive cock still buried to the root in her ass. \"Cathy, you've got an A+ and student of the century. You are incredible\u2014unbelievable.\"\n\n\"And what does my independent professor say?\" Cathy asked, looking over at Kelly.\n\n\"You're ready for graduate school, Cathy,\" Kelly answered, looking back with a satisfied smile. She was a mess, sweaty and disheveled, with engorged pussy lips still reeling from the pummeling she gave herself. A large butt plug still clung inside her ass.\n\n\"You're right, Kell. There's still more I want to learn,\" Cathy mused. \"I wonder where I should apply?\"\n\n\"There might be only one program worthy of your abilities,\" I offered.\n\nCathy laughed. \"You're right. Only the best is good enough for me.\"\n\n\"I think you two are going to push the boundaries in passion,\" Kelly said. \"I'll have to admit\u2014and it hurts: I've never experienced anything even close to what you shared tonight.\"\n\n\"It was pretty good, wasn't it?\" Cathy giggled.\n\n\"Yeah, Cath, it was,\" Kelly sighed.\n\n\"You ready, Brad?\" Cathy asked.\n\n\"I think so.\"\n\n\"OK, here goes.\" Cathy slowly rocked forward, and my cock eased out of her ass. We both whimpered as the head pulled past her sphincter. Cathy maneuvered herself around and lay face-up on the bed, stretching out her legs. I lay beside her, doing the same.\n\n\"Wow,\" Cathy said simply. I turned to her.\n\n\"You have post-orgasmic bliss written all over you,\" I observed.\n\n\"Oh yeah.\" We both laughed.\n\nCathy turned to me. \"I think I see a little bliss on your face as well.\"\n\n\"You're seeing me utterly and completely satisfied, but also blown away. I've just made wild, passionate love to a goddess, and I'm still coming back to earth.\"\n\n\"Well, this goddess knows what it takes to light her fires,\" Cathy said, kissing me.\n\nWe rested and laughed when Kelly stirred. \"Got to get this damn thing out of my ass!\" she exclaimed. Normally I would have raised up for the view, but I was too exhausted even for a peek at Kelly.\n\n\"You two look pretty damn satisfied,\" Kelly said as she looked down on us. \"I'm going home to collapse.\" She picked up her discarded clothes and got them back on, skipping her bra and panties.\n\n\"Fortunately, it's dark, so I'll be able to sneak home,\" she said. \"I'm a complete mess.\"\n\nCathy took Kelly's arm, looking deep into her eyes. \"Thanks, Kell, for being here for me\u2014again. You look exactly like a true friend to me.\"\n\nKelly softened. \"You're welcome, Cathy. You are something special. Good, and true, but also primal and untamed. Sometimes I'm just in awe.\"\n\n\"You and Brad tend to bring that out in me,\" Cathy added. \"That's why I keep you around.\"\n\n\"Anytime, girlfriend,\" Kelly said, letting go of Cathy's arm. \"Now,\" she laughed, \"I think I can leave you two alone. I don't think you can get into much worse trouble than you already have tonight.\"\n\nKelly picked up her things and lingered at the door. \"I'll just let myself out through the garage, so you two can rest.\" She paused. \"Cathy, I'll carry this experience with me the rest of my life. You were so into it. When I get Kevin in bed, he's not going to know what hit him.\"\n\n\"I feel sorry for him,\" I said. Kelly winked and disappeared.\n\nCathy and I held each other for a while, relaxing in the afterglow.\n\n\"Ready to clean up?\" I asked.\n\n\"If I don't get up now, I never will,\" Cathy answered. I held out my hand and helped her to her feet. Placing my hands around her waist, I looked into her eyes.\n\n\"You are fantastic, Cathy. I don't know how I got so lucky to find you.\"\n\n\"Remember that,\" she said, smiling. Then she kissed me.\n\nWe languorously cleaned each other in the shower. I stopped often to kiss her, wanting her to know how much I cared for her after she bared everything to me. She smiled back, knowing what I was trying to do and appreciating it all the same.\n\nSlipping into bed, we kissed facing each other until she rolled over and spooned against me, taking my arm and wrapping it around her chest. I held her securely as I fell into a deep sleep, content with the world.\n\nWe slumbered late, sleeping off the emotions and exertion of the night before. With a stretch, Cathy rolled over and caught my eyes. I let her look deep, probing my heart at another level. Finally, a small smile flickered across her features.\n\n\"Good morning, sleepy-head,\" she announced. \"All rested from ravishing me last night?\"\n\n\"Maybe,\" I admitted. \"I feel OK now, but I was wrestling with a goddess. Who knows what that took out of me?\"\n\n\"The greatest things always have some danger, do they not?\" she said. \"You made the goddess very happy last night, so I think you're OK for a little while.\"\n\n\"And how long's a little while?\"\n\n\"Wouldn't you like to know?\" she answered, a twinkle in her eye. \"Better stay on your toes.\"\n\nWe laughed and got up to fix breakfast. I helped Cathy \"clean up the evidence\" of our passion together, and helped her straighten up her yard. We stood at her doorway as I was leaving.\n\n\"See you in a few hours, Brad. Think we can act like we didn't screw each other silly last night?\"\n\n\"Not really,\" I answered. \"Mothers are pretty observant.\"\n\n\"Unfortunately, that's the case with mine,\" Cathy admitted. \"I'll get a knowing look sometime this evening.\"\n\nI chuckled and leaned in to kiss her. As I reached down to grab my bag, I swatted her on the butt.\n\n\"Nice ass,\" I said as I turned and walked away.\n\n\"I'll get you for that!\" I heard behind me.\n\nSomehow, I knew she would.\n\nEpilogue\n\n\n\nOf course, much of what happened next was fairly predictable. Cathy's parents were as handsome and sharp-witted as she was, and I enjoyed their lively conversation. Her mother found a quiet place to lock eyes with mine, and I smiled at the silent conversation that went back and forth. She eventually smiled back, happy at what she'd seen.\n\n\"Yes, Brad, my daughter and I both communicate a lot with our eyes. So do you. You'll do well together. Or should I say you are doing well together?\"\n\nI mumbled something about how lucky I was to know Cathy, and her mother laughed. \"I think she's lucky too,\" she said with a mischievous smile. \"You better get back before she suspects an interrogation.\"\n\nCathy arched an eyebrow when I returned, and laughed at my wink.\n\nAs the year went on, we grew steadily closer. At some level, I had been in love with Cathy all along, and it only intensified. Cathy met my parents and got their examination and \"seal of approval.\" No one was surprised when I asked her to marry me. Kelly and Kevin stood at our wedding, and we expected to stand in theirs fairly soon.",
        "Years later, I often wondered: who really was in the driver's seat when Cathy and I got together? Was it myself, Kelly, or Cathy? Of course, I had a lot of influence on Cathy in our sessions together, but I always suspected that Kelly orchestrated the whole thing and somehow goaded Cathy to do it. Not that I was complaining one bit.\n\nOn the other hand, Cathy carried an air of mystery and subtlety about her\u2014she was a goddess, after all. I had to admit: Hadn't I always asked her what she wanted and then given it to her? Had she just wrapped me around her finger, making me think I was helping her while I fell helplessly in love? Did she even realize what she had done? Did it matter?\n\nCathy continued to surprise me as time went on. I knew her, and yet never knew her completely. She loved me deeply, yet she expected a lot\u2014like I was always on probation. I couldn't have asked for more.\n\nBy the way, Kelly did see us naked again, but that's another story...\n\nIt was a lot of work to write this story, but it was also rewarding. Please take a moment to vote and offer any comments. They mean a lot."
    ],
    "authorname": "Antonio_y_Cleopatra",
    "tags": [
        "romance",
        "anal",
        "friends",
        "shy",
        "f masturbation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-web-ch-08"
}