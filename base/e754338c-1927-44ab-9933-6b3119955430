{
    "title": "Mile High with An Angel",
    "pages": [
        "\"Look, Sean, it appears that our system may have been breached,\" my old friend Aidan O'Connell told me as he recounted the issues that his Dublin hotel's computer system were experiencing. \"You know the client\u00e8le we deal with here, any privacy issue could really hurt our bottom line. I really need your help.\"\n\n\"I have plenty of security experts in Ireland and the UK that I could send,\" I said as I looked out my window as the sunset reflected off of the snow-covered Chicago ground.\n\n\"I know, but I don't trust them; I trust you,\" Aidan countered.\n\n\"Not enough to have my company install a new network for you when you took over that hotel,\" I smiled recalling the conversation I had with Aidan a couple months prior when he purchased the property in Dublin.\n\n\"I know,\" Aidan groaned. \"You were right, I thought the assholes that installed it knew what the fuck they were doing. I was obviously wrong. It was a brand fucking new network, I didn't think it was worth the cost of a complete re-do. I was wrong, is that what you want me to say?\"\n\n\"Alright,\" I said hearing the tension in my old friend's voice. \"I'll come. You know I'd never leave you hanging, but you know I hate flying so you are going to owe me big time!\"\n\n\"I'll double your normal rate, will that make you hate flying less?\" Aidan asked with a chuckle.\n\n\"No, but I will take the cash,\" I said with a grin.\n\n\"I figured you might,\" Aidan said with just a hint of sarcasm. \"I'll even buy you a Guinness or two. Can you make it to Midway in two hours?\"\n\n\"Two hours? That doesn't give me a lot of time to pack and get to the plane, especially with having to deal with the TSA,\" I groaned.\n\n\"Don't worry about the TSA, I was able to get you a seat on a chartered Gulfstream that was already heading this way. Hell, don't even pack, whatever you need while you're here is on me.\"\n\n\"Shit, this really must be serious,\" I said. \"A private jet and an unlimited expense account?\"\n\n\"What can I say, I need you here pronto,\" Aidan said and then added, \"I never said unlimited.\"\n\n\"Alright, who am I hopping a flight with?\" I asked him as I quickly loaded a few of my favorite podcasts onto my Android phone.\n\n\"I'm not really sure, it was all booked through the charter company,\" he said. \"All I know is the flight was originally booked by some retail company and they were more than happy to share some of the costs to give you a seat on the plane. I just emailed you the info.\"\n\n\"Sounds exciting, I'll probably be stuck with some stuffed suits for 7 hours,\" I said as I pulled up Aidan's email and printed out the itinerary.\n\n\"Try to behave yourself,\" Aidan chuckled.\n\n\"When have I not?\" I laughed.\n\n\"More times than I care to remember right now, my friend,\" Aidan said. \"A car will be waiting for you at the airport, have a good flight and I'll see you when you get here.\"\n\n\"Thanks, buddy,\" I said as I hung up the phone and got up from my desk. I ran up the stairs to my bedroom and found my wife, Jenny, sitting on the bed typing on her laptop. Jenny and I met in college, she is a cute brunette with amazing brown eyes and an hourglass figure.\n\n\"Who was on the phone?\" she asked as she looked up from her computer screen, she was wearing a pair of blue jeans and a black sweatshirt with the Chicago Blackhawks logo across the front of it.\n\n\"That was Aidan, I guess one of his hotel's computer systems might have been hacked and he's being a bit paranoid about it,\" I said as I grabbed a small bag from my closet.\n\n\"So where are we going, someplace warm?\" Jenny asked with a smile.\n\n\"Dublin,\" I replied.\n\n\"Oh, that's all you then! Why don't the computer systems at his hotels in Hawaii or Belize ever have problems?\" she chuckled.\n\n\"Because my company installed those,\" I grinned as I threw a few essentials into the bag.\n\n\"When are you leaving?\" she asked me.\n\n\"Now, Aidan got me on a charter flight leaving Midway in less than two hours.\"\n\n\"That doesn't give you much time to pack,\" Jenny said as she watched me change out of my shorts and t-shirt into a nice pair of jeans and a black polo shirt.\n\n\"Aidan said whatever I need when I'm there is on him, great reason for a new wardrobe!\" I laughed.\n\n\"Don't take advantage of poor Aidan,\" Jenny said shaking her head in mock disgust.\n\n\"Poor and Aidan never belong in the same sentence together, besides my idea of high fashion is more Kevin Smith than Ralph Lauren,\" I smiled.\n\n\"You don't have to tell me,\" she said as she rolled her eyes. \"Grown men should only wear hockey jerseys out of the house if they're going to a game.\"\n\n\"I'll call you when I can,\" I said as I leaned in and gave Jenny a kiss before picking up my bag and doing a quick inventory to make sure I had my phone, charger, tablet, and laptop, as well as my penetration testing kit which featured a few fun toys that help me gain access to almost any computer network around the world if given enough time.\n\n\"Behave yourself,\" she smiled.\n\n\"Why does everyone keep saying that?\" I laughed before giving Jenny one last kiss. \"I love you.\"\n\n\"I love you too,\" she smiled. \"Send Aidan my regards.\"\n\n\"I will,\" I said as I carried my bag down the stairs, put on a pair of black Reebok sneakers and headed out to my car. The drive to the airport took about 45 minutes due to the snow that had started to fall. As I drove I mentally went over what would have to be done to test Aidan's system once I got to Dublin.\n\nAidan and I first met in high school and became really close friends. We were the terrors of our all-boys Catholic high school as we knew how to get away with just about anything. Aidan truly had the gift of the gab, he could talk his way in or out of just about anything. I was the tech guy, there was no computer system or network that was out of reach. I'm not saying we didn't earn all of our grades in high school, but I'm not saying we did either.\n\nWe both went to DePaul University in Chicago and Aidan excelled in his business classes while I continued in my tech pursuits. It was really almost a replay of high school except for the fact that we were dating much hotter girls and enjoying the freedom that such a large university gave us. We started a small website that helped students find off-campus housing our freshman year and by the time we graduated it was purchased for an ungodly sum by the company that eventually became Airbnb.\n\nAidan used his half to start up a small boutique hotel here in Chicago and I used mine to start a computer security company. Both of our companies have flourished over the years and both of us have expanded our operations quite a bit. Aidan has hotels across the world and has always used my company to set up and secure his networks. I almost felt bad for him that the one time he didn't use my company it was biting him in his ass.\n\nI arrived at the airport and drove up to the private plane terminal and stopped at the valet stand. I got out of the car, grabbed my bag and slipped the attendant a $20 as he gave me my pick-up ticket. I walked into the terminal and saw that the plane I was booked on was already there and waiting for passengers.\n\nI walked outside to the plane and walked up the stairs to the open door. I was greeted by the pilot, a tall, stocky gentleman with salt and pepper hair who was wearing a dark suit jacket and tie. I said hello and handed him the print-out of the itinerary that Aidan had emailed me.\n\n\"Good evening, Mr. Ryan,\" he said with a warm smile. \"I am Captain James Leahy and I will be your pilot for this trip. Please make yourself comfortable, we should be ready to take-off in about a half-hour once all passengers have arrived.\"\n\n\"Thank you,\" I said as I walked into the empty plane. It was laid out into two main cabins, the front had 8 large recliner seats and the back cabin had two couches situated on the walls facing each other. In between the two main cabins was a small galley with a sink, a K-Cup coffee maker as well as a refrigerator and microwave. There were two lavatories, one up front and one at the rear of the plane.\n\nAfter taking a quick look around I settled into one of the forward facing recliner seats and took my tablet out of my bag. I tossed the bag on the floor in front of me and started checking my emails. As much as I hated flying, being able to skip the TSA lines made things much easier and having unlimited legroom and a comfy chair certainly helped brighten my mood immensely.\n\nI looked up as a smaller figure emerged from the cockpit. She was in her 20s and had to be about 5'5\" with long, dark hair and piercing emerald green eyes. She was wearing almost the same uniform as the Captain and she gave me a warm smile as she approached me.\n\n\"Hello, Mr. Ryan,\" she said as she extended her hand. \"I'm Lisa Jackson, your co-pilot for this flight.\"\n\n\"Hello, Lisa,\" I said as I took her hand and smiled. \"Nice to meet you.\"\n\n\"Thank you,\" she said as she shook my hand and then released it. \"There was no cabin crew requested for this flight so I just wanted to let you know where everything is.\"\n\n\"That would be great, thank you,\" I said.\n\n\"I see you have a tablet, you can connect that to the plane's WiFi with the information in the side pocket of your seat. It is satellite based so you should have coverage throughout the whole flight. There are charging ports and power outlets under the panels on the armrests. There is a lavatory in both the front and back of the plane and there is a small galley at the rear of this cabin where you can get cold drinks or coffee and some snacks,\" she smiled. \"There are even a few bottles of wine if you're in the mood.\"\n\n\"Excellent, thank you,\" I said.\n\n\"The cabin behind the galley is configured with two couches along each side of the aircraft. You can easily convert them into a king-sized bed if you want to sleep during the flight. We do recommend that if do lay down that you use the straps provided to make sure you don't wind up on the ceiling in the unlikely event that we hit turbulence,\" she grinned.\n\n\"That sounds like good advice,\" I said as Lisa started to run through the usual safety procedures regarding a water landing and what to do if the oxygen masks deploy from the ceiling. \"If you need anything at all during the flight, just press the call button on any of the panels throughout the aircraft and let me know. You can also monitor our flight's progress on the panels as it is constantly updated with our GPS coordinates and estimated time of arrival.\"\n\n\"Thank you, Lisa,\" I smiled and then went back to my iPad as she disappeared into the cockpit. I grabbed the information card from the seat pocket and connected my tablet to the plane's WiFi hotspot. Through the large circular windows I could see the snow outside was starting to come down a little bit harder. I checked the weather forecast for Dublin and saw the high temperatures were in the upper 40s which seemed like a heatwave compared to the miserable weather we'd been having in Chicago.\n\nI scanned through my emails and answered a couple business-related requests and forwarded a few others to my assistant to take care of in my absence. I scanned the Promotions folder on my Gmail account and read the No Agenda podcast newsletter that had just arrived. There was a great comic panel about how useless Bitcoin was as an investment opportunity that made me laugh. Maybe it was a bit mean, but I forwarded it to a friend that had lost a ton betting on Bitcoin's supposed meteoric rise.\n\nI then opened up the latest Victoria's Secret email ad to hit my inbox. Their ads seem to arrive twice a day like clockwork though I'm never annoyed by them. I guess it's because their models are some of the most beautiful women on Earth and I'm a guy that enjoys seeing beautiful women. The ad was previewing their upcoming Swim special and had leggy blonde model Martha Hunt showing off a sexy little black bikini on a sun soaked beach.\n\nI looked up as I heard a female voice with a hint of a southern accent yelling at someone. It was getting louder and louder until a tall blonde in a long black coat arrived at the entrance of the plane. She lowered her phone to her side as she greeted the pilot with a sweet smile then quickly made her way into the cabin.\n\n\"Look, get it through your head that we are fucking through!\" she yelled into the phone as she tossed her large black leather purse down on the seat across the aisle from mine. \"No, there are no second chances, you fucking blew it.\" The tall blonde rolled her eyes as she put her phone into speaker mode and put it down on her seat. I could hear the sound of whimpering or crying as the blonde took off her coat and tossed it into an overhead compartment.\n\n\"She didn't mean anything to me,\" the weak voice pleaded as the blonde pulled her hair back into a ponytail and used a hair tie to hold it in place. She looked absolutely stunning in a form-fitting white sweater, tight blue jeans, and black leather cowboy boots. \n\n\"You should have thought of that before, I have to go now. It's been fun, don't call me again, ever!\" she said as she hung up the call and then slipped the phone into her purse.\n\n\"We have just been cleared to taxi to the runway, please take your seats and buckle-up,\" Captain Leahy's voice said over the intercom. The blonde moved her purse to the floor in front of her and sat down and buckled her seatbelt and then turned to me with a smile. It was at that moment that I got a good look at her and realized who I was sharing my flight with.\n\n\"Hello, I'm Martha,\" she said with a smile and a little hint of southern charm in her voice as she extended her hand across the aisle.\n\n\"I'm Sean, it's a pleasure to meet you,\" I smiled, trying not to sound like a kid in a candy store. Getting the chance to meet a beautiful model was one thing, having one all to myself for the long flight to Dublin was way too good to be true. \n\n\"It was about 40 degrees when they took that picture, I was absolutely miserable,\" she said looking down at my tablet which still showed the Victoria's Secret ad.\n\n\"Well, you certainly can't tell by the expression on your face,\" I said.\n\n\"That's why we get paid the big bucks,\" she laughed as the plane started to pick up speed as we roared down the runway.\n\n\"Worth every penny,\" I smiled as the Gulfstream's nose lifted off the ground and we left Chicago's Midway Airport and soared into the winter sky. We bounced around a bit as we gained altitude but after a couple of minutes the flight smoothed out.\n\n\"So what do you do?\" Martha asked.\n\n\"I'm a computer security expert,\" I said as I looked into Martha's amazing blue eyes.\n\n\"Heading to Dublin on business?\"\n\n\"Yes, my buddy Aidan needs my help. His hotel's computer system may have been hacked and he's worried about a data breach... and I probably shouldn't be telling you that,\" I smiled.\n\n\"It's okay,\" Martha said. \"What happens on the way to Dublin stays on the way to Dublin.\"\n\n\"Thank you,\" I said. \"Have you stayed at any of the O'Connell hotels?\"\n\n\"Yes! They are awesome,\" Martha smiled. \"But I hear they have some computer security issues.\"\n\n\"Only in Dublin,\" I laughed. \"It's the only hotel that he didn't have my company install the network for them.\"\n\n\"Well then, he's learned his lesson,\" Martha said with a satisfied grin.\n\n\"I certainly hope so,\" I said. \"Can I get you a drink?\"\n\n\"I can get it,\" Martha said as she jumped up and headed to the galley. I turned to watch her walk down the aisle and her fluid movements were poetry in motion. \"How about a bottle of wine?\" she asked as she looked through the galley.\n\n\"That would be great,\" I said as Martha gathered up the bottle of wine, an opener and two glasses and headed back to her seat. She handed me the two glasses as she opened the bottle of 2012 GTS Cabernet Sauvignon and then filled the glasses as I held them. She reached down and extended the panel in front of her seat and placed the bottle on top of it. I handed her one of the glasses and raised my glass to her.\n\n\"Here's to a great trip,\" I said. Martha smiled and clinked her glass against mine before taking a sip.\n\n\"This is really good,\" she smiled.\n\n\"Yes, it is,\" I said as she turned her chair so it was facing mine. I did the same with my chair so the two of us were now facing each other on the big, leather chairs. \"This sure beats flying coach.\"\n\n\"I know, it's easy to get spoiled,\" she said as she sipped her wine. \"Are you single?\"\n\n\"No, I am married,\" I said. \"Going on 12 years.\"\n\n\"You don't wear a wedding ring?\" Martha asked with a sly grin.\n\n\"No, I had one but it was lost years ago. I've never liked wearing rings of any sort, the wedding band made my finger tingle when I had it on so we never ended up replacing it,\" I said as I finished off my glass of wine. Martha picked up the bottle and refilled my glass.\n\n\"Let me see your left hand,\" she said, leaning forward. I held out my hand and she looked at it closely, she grabbed my wrist and turned my hand so she could see it from all sides. \"Alright,\" she said as she let go.\n\n\"What?\" I asked.\n\n\"Some guys have been known to slip their ring off when a pretty girl comes around. But I don't see any indentation or tan line or anything so I guess you're telling the truth,\" she laughed.\n\n\"Plus, when you asked if I was married I said yes,\" I smiled.\n\n\"Yeah, there is that too. Sorry,\" Martha sighed, \"I am just getting out of a bad relationship as I'm sure you heard.\"\n\n\"I got that impression, though I was trying not to eavesdrop.\"\n\n\"He was crying, right? I didn't imagine that?\" she asked with a devilish grin.\n\n\"Oh, there was no doubt about that,\" I said as I looked into her blue eyes.\n\n\"To sniveling exes!\" Martha said as she held up her wine glass.\n\n\"To sniveling exes,\" I said as I reached across the aisle and touched her glass with mine.\n\n\"What's the secret to a successful long-term relationship?\" Martha asked as she sipped on her Cabernet Sauvignon.\n\n\"I am not sure there is a secret, beyond trust and understanding,\" I said.\n\n\"Both of those can be hard to come by,\" Martha said a bit annoyed.\n\n\"I know, you're right,\" I said. \"Plus, it can't be easy when you are constantly traveling. And being a model must only bring a whole different set of challenges.\"\n\n\"What kind of challenges?\" Martha asked.\n\n\"You never know if a guy really wants to get to know you or if he just wants to get with a model as some kind of trophy or an ego boost,\" I said and then took a sip of my wine.\n\n\"You're right about that, it just forces you to look at everyone like they're trying to get something from you until they prove that they're not.\"\n\n\"That must suck,\" I said.\n\n\"It does, it really does,\" Martha smiled. \"Do you mind if I kick these boots off? My feet are killing me! Another perk of the glamorous modeling lifestyle.\"\n\n\"Feel free,\" I said as Martha kicked off her cowboy boots and stretched her long legs out across the aisle. \"Would a foot rub help?\"\n\n\"Yes!\" Martha smiled, putting her feet up on my knees before I could even finish asking her the question. \"Are you sure your wife wouldn't mind?\"\n\n\"I don't think she'd have a problem with me helping out a damsel in distress,\" I smiled. The truth was that my mind was racing at speeds even faster than the Gulfstream that was jetting me and the beautiful Victoria's Secret model to Dublin. Like many couples, my wife and I like to play the game where we each have a list of a few celebrities that we would get a free pass on if we ever had a chance to sleep with them.\n\nIt's a pretty uneventful game as the odds of meeting any of the people that make up the list of usually 3 or 5 celebrities are pretty high. Then the odds of actually getting someone on that list to take their clothes off for you is nearly impossible. Over the years my list has featured women like Jennifer Love Hewitt, Kate Upton, Jessica Alba, and Megan Fox. Needless to say, they all escaped my grasp.",
        "My wife and I had both recently updated our lists and, as luck would have it, Martha Hunt was at the top of mine along with Adriana Lima and Taylor Swift. Martha was the whole package, tall, blonde, amazing blue eyes, a southern girl with a sense of humor. Seeing her on an episode of Two Broke Girls brought her to the top of my list and here I was rubbing her feet on a private jet with no other passengers aboard.\n\n\"That feels amazing,\" Martha cooed as I worked on her left foot first. My big, strong hands surrounded her foot as I used my fingers to gently massage the top of it. I moved from her toes up to her ankle then back again. Repeating this a few times as Martha closed her eyes and leaned back in her seat. I then moved to her arches, I let my thumbs massage her foot through her soft, gray socks. I made small circles with my thumbs, the left moving counterclockwise and the right moving clockwise. I let my right hand move down and I squeezed her heel as my left hand continued to work the arch of her foot.\n\n\"That's not too hard, is it?\" I asked. \n\n\"Not at all,\" Martha said as she opened her eyes and smiled. I turned my attention to her heel, rubbing the Achilles tendon slowly back and forth. I looked up at Martha and she had her eyes closed and she was biting down on her lower lip as my thumbs moved slowly up and down the bottom of her foot. \"Fuck,\" she moaned low.\n\n\"I'll never understand how you ladies can walk in those high-heels,\" I said with a smile. I moved my hands up and gently squeezed and rotated each of her toes to help loosen them up before moving back down to work on her heel again. I could see Martha's breathing had increased a little and she was keeping her eyes closed as I massaged her foot through the gray wool socks. \"Is it alright if I take your sock off?\" I asked.\n\n\"Yes,\" Martha replied with a soft moan. I pulled her sock free and went to work on her bare foot. Her toenails were freshly manicured with red polish and silver tips. She started to moan as my hands worked her bare foot. I worked her pressure points as she let out more soft, little moans. I squeezed her heel and she stifled a moan as she looked up at me, her blue eyes sparkling with pleasure. \"You are way too good at that,\" she smiled.\n\n\"Practice makes perfect,\" I said with a grin as I released her left foot. \"Next foot, please.\"\n\nMartha's eyes watched me as she raised her right foot up and put it on my lap for the same treatment. After about ten minutes my performance had Martha grinning from ear to ear. \"Would your wife mind renting you out for a few days?\" Martha giggled.\n\n\"You'd have to ask her,\" I said with a grin. \"Are you in need of a computer security expert?\"\n\n\"As long as he has hands like yours,\" she smiled sweetly. \"It is a shame that you're married.\"\n\n\"If I was single I don't know if I could handle being your rebound guy,\" I said as I looked into Martha's blue eyes.\n\n\"What do you mean?\" she asked as she leaned forward, putting her hands on my knees.\n\n\"You're an amazing woman. You check every box I'd have; you're tall, blonde, funny, smart, and that little southern accent you have absolutely drives me wild. I'd enjoy the Hell out of exploring every inch of you but the rebound guy never seems to end up with the girl,\" I said with a wry smile. \"And that would suck.\"\n\n\"You're sweet,\" Martha said. \"Your wife is a lucky girl.\"\n\n\"So, if I wasn't married?\" I asked.\n\n\"Oh, we'd already be going at it like crazed rabbits on that bed in the back,\" Martha said with a big, southern, shit-eating grin.\n\n\"That is not fair,\" I laughed.\n\n\"I know, and I'm not really that easy,\" she smiled. \"But with the breakup, the wine, and that amazing foot rub, I could be.\"\n\nMy eyes were locked on Martha as I contemplated what I should do and say next. Martha raised her long arms up over her head and stretched her slender frame. I wondered what my wife would do if she was ever in a similar situation with any of the three celebrities on her list. I also cursed the fact that this game did not have clearer rules, for instance, was it required to let your partner know you used the free pass?\n\n\"More wine?\" I asked as I picked up the bottle and refilled my glass. Martha nodded and picked up her glass and held it out for me to fill it.\n\n\"Thank you, sir,\" she smiled as the bottle emptied into her glass.\n\n\"Did you ever have a celebrity free pass list with a significant other?\" I asked as I disposed of the empty wine bottle.\n\n\"Yes, when I was younger,\" she smiled.\n\n\"It must complicate things when you are a celebrity, especially a gorgeous supermodel,\" I said as I sat back into my seat. \"I mean, there probably isn't a list of three guys that you couldn't have if you really wanted them.\"\n\n\"I don't know about that,\" she chuckled. \"I'm not Scar-Jo or anything.\"\n\n\"Are you serious?\" I laughed. \"That girl is like 5-foot tall and is nowhere near as stunningly beautiful as you are.\"\n\n\"Thanks,\" Martha beamed. \"But I can already think of one guy I'd put on that list right now that I can't have.\" She smiled a seductive little smile and looked into my eyes.\n\n\"I think you've had too much wine,\" I smiled as I felt my face get a bit flushed due to the way Martha was looking at me. \"Besides, I'm not a celebrity.\"\n\n\"Celebrities aren't all they're cracked up to be,\" Martha sighed. \"Let me tell you, I'm just a simple southern girl from North Carolina.\"\n\n\"Is it weird, living the lifestyle that you have now?\" I asked.\n\n\"Yes, totally,\" she said as she looked down at the dark red wine in her glass. \"It's really like playing dress-up as a kid, except I get paid really well for it.\"\n\n\"That doesn't sound so bad,\" I said.\n\n\"It can get lonely, though,\" Martha said looking up at me. \"Relationships are tough because it's hard to find time together and dating is nearly impossible because I'm in a new city every few days. But I'm young and I am enjoying the adventure. Do you and your wife have a celebrity free pass list?\"\n\n\"Yes,\" I said and then finished the rest of the wine that was remaining in my glass. I knew what question would be coming next and I really was not sure how to answer it. It would be very easy to lie and list off three beautiful women that didn't include Martha and quickly move on. I wondered how she'd react to being on my list, she might take it as an honor and she might all of a sudden think I've been trying to scam her since she walked onto the plane.\n\n\"Don't be shy, tell me who is on your list,\" Martha smiled, finished the wine from her glass and placed the glass down on the table. She leaned forward, her hands on her face and her elbows on her knees as if she was a kid waiting for someone to tell her a story. I could feel my face once again getting flushed and I hoped I wasn't turning a bright crimson color.\n\n\"There are three women on the list,\" I said and then took a deep breath. I flashed back to my first speech for my college public speaking class as it was the last time I could remember being this nervous saying anything in front of anyone.\n\n\"Who is number 3?\" Martha asked, her blue eyes wide as she waited for my answer.\n\n\"Taylor Swift,\" I said.\n\n\"Very nice, she is a total sweetheart,\" Martha smiled. \"I could give you her phone number.\"\n\n\"Right, because that's all I need to make that happen,\" I smiled.\n\n\"I could tell her about your amazing foot rubs,\" Martha giggled.\n\n\"That's a vital skill to have?\" I asked.\n\n\"You have no idea,\" Martha grinned. \"Who is number 2?\"\n\n\"Adriana Lima,\" I said.\n\n\"I love her!\" Martha smiled. \"I hate her too, she seems to get better looking as she ages.\"\n\n\"Yes, she does,\" I nodded.\n\n\"I could give you her number too,\" Martha said slyly. \"Of course, I could also introduce you to her as well, she's going to be at the store opening in Dublin with me.\" Now my mind was really starting to spin. For all of the years that I had a celebrity free pass list, I'd only met one of the celebrities on my list and that was Jennifer Love-Hewitt at a book signing. She was sweet and bubbly and all I could manage to say to her was thank you as she signed my copy of the book. \n\n\"Wow,\" was all that managed to come out when I tried to speak. I did my best to try and slow my mind down and try to decide how I'd answer when we got to the number one woman on my list. \"Does anyone actually know the rules of the free pass game? I mean, are you supposed to tell your significant other that you've used one?\"\n\n\"That's a good question,\" Martha said. \"Let's look it up. May I see your tablet?\"\n\n\"Sure,\" I said as I unlocked then handed her my iPad Pro.\n\n\"Let's see,\" Martha said biting her lower lip as the typed a few different search terms into Google and sampled the answers. \"None of them really say. I guess it's something everyone must determine on their own.\"\n\n\"I guess it would have been a lot smarter to determine the rules at the start,\" I said as Martha handed my tablet back to me.\n\n\"Do you think your wife would be pissed if you hooked up with someone on your list?\" Martha asked playfully.\n\n\"I don't know,\" I groaned.\n\n\"Would you be pissed if she hooked up with someone on her list?\"\n\n\"Probably,\" I laughed. \"But, that's the point of the game, right? You don't have to like it, you just have to give the free pass.\"\n\n\"True, interesting,\" Martha said as she sat back in her seat.\n\n\"What is?\" I asked.\n\n\"The game is more complicated than it seems,\" Martha said. \"On the surface, it seems like something that is just a fun little fantasy, but in the case of someone actually meeting anyone on their list and finding out that they have a shot with them it becomes dangerous.\"\n\n\"I know, right?\" I replied as I looked into Martha's amazing blue eyes.\n\n\"For instance, your wife said you have a free pass with Adriana Lima, correct?\"\n\n\"Yes.\"\n\n\"But if you actually hook up with Adriana Lima your wife might be pissed.\"\n\n\"Also correct, but the free pass should erase that.\"\n\n\"Supposed to, but people are emotional beings. Forget about that, though,\" Martha said. \"Worse yet is if you have a chance with Adriana Lima and don't take it because you think your wife would be pissed. Then you're probably going to resent her and regret the decision not to do it for the rest of your life.\"\n\n\"Like in WarGames, the only winning move is not to play,\" I groaned.\n\n\"But, you're already playing and so is your wife,\" Martha said. \"Maybe she's already used a free pass and hasn't told you.\"\n\n\"I don't think she has.\"\n\n\"Who is on her list?\" Martha asked with a mischievous grin.\n\n\"Derek Jeter, Stephen Amell, and Channing Tatum,\" I replied.\n\n\"I approve,\" Martha giggled. \"You should ask your wife what the rules are.\"\n\n\"I don't know about that,\" I smiled.\n\n\"I'll ask her,\" Martha smiled wide. \"Can I Facetime her?\"\n\n\"That's not a great idea,\" I said, feeling my face get a bit flushed again.\n\n\"Sure it is,\" Martha said as she got up and grabbed my iPad from my lap. \"It's the only way to find out! Unlock it.\"\n\n\"I'm not going to win this one, am I?\" I asked as Martha held out the iPad waiting for my thumbprint.\n\n\"Nope,\" she laughed. \"I'm sure she'll be happy that you want to know what the rules are before possibly doing anything.\"\n\n\"If you say so,\" I said as I unlocked the device and Martha hit the Facetime icon to launch the app.\n\n\"Jenny is your wife?\" she asked showing me the contact list.\n\n\"Yes,\" I said.\n\n\"She's cute!\" Martha grinned as she initiated the call and sat down in her seat.\n\n\"Hello,\" I heard my wife's voice coming from the iPad's speakers.\n\n\"Hi, Jenny!\" Martha bubbled. \"I'm Martha, I'm on a plane with your husband, Sean,\" she said as she turned the iPad to me so I could see Jenny and she could see me before quickly turning it back towards her, \"and we need you to answer a couple of questions.\"\n\n\"What kinds of questions?\" Jenny asked with a more than a bit of apprehension in her voice.\n\n\"About the celebrity free pass game,\" Martha said. \"And let me say, Stephen Amell, yes please!\"\n\n\"I know, right?\" Jenny laughed.\n\n\"Anyway, Sean told me that Taylor Swift and Adriana Lima are on his celebrity list and it turns out that I know them both and Adriana is actually going to be in Dublin,\" Martha explained. \"Would you be pissed if I introduced them?\"\n\n\"That is a fair question,\" Jenny said.\n\n\"And as far as the free pass game, are you supposed to tell your partner if you use one?\" Martha asked. \"The rules just don't seem very clear on that. Have you ever used a free pass, Jenny?\"\n\n\"No, I have not,\" she said flatly. \n\n\"Look, it's just a stupid game that's never supposed to come to fruition,\" I said.\n\n\"Shh!\" Martha looked up at me with her deep blue eyes before looking back at the iPad screen. \"Jenny, if you had a shot with one of your celebrities, would you go through with it?\"\n\n\"I don't know if I can answer that honestly right now,\" Jenny said.\n\n\"Why is that?\" Martha asked.\n\n\"Let me ask you this,\" Jenny said. \"Do you think there's a chance that Adriana Lima would want to sleep with my husband?\"\n\n\"Yes,\" Martha answered.\n\n\"Why is that?\" Jenny asked.\n\n\"Because I would,\" Martha grinned. \"He is tall, handsome and gives an excellent foot massage.\"\n\n\"Oh, does he?\" Jenny asked tersely as I groaned in my seat.\n\n\"Yes, but it's nothing like that,\" Martha said. \"I'd had a long day, I had just broken up with my asshole boyfriend and Sean made it clear that he was married. He was just being a nice guy.\"\n\n\"Ask him who the third woman on his list is,\" Jenny said. \"The one that he ranked above Adriana Lima and Taylor Swift.\"\n\n\"We never did get to number 1, did we?\" Martha asked as she looked up at me.\n\n\"No, we did not,\" I said.\n\n\"If you don't tell her, I will,\" Jenny said through the iPad's speakers.\n\n\"It's you,\" I said, looking at Martha.\n\n\"Seriously?\" Martha asked. It was her turn to have her face turn a bit red as she must have realized that she had already told my wife that she would fuck me if she were given a chance.\n\n\"You are the blonde Victoria's Secret model that was on the episode of Two Broke Girls, right?\" Jenny asked.\n\n\"Yes,\" Martha replied.\n\n\"Then yes, you're not only on his list you're number 1,\" Jenny said.\n\n\"Look, it's just a stupid little game,\" I said. \"Let's just forget all about it.\"\n\n\"I'm not sure we can,\" Jenny said. \"It's not hypothetical anymore. You've met her and you know she is into you.\"\n\n\"I'm sorry,\" Martha said looking into the iPad camera. \"I had no idea I was on his list. We were just having some fun.\"\n\n\"It's not your fault,\" Jenny said.\n\n\"Sean's right, it's just a stupid game, we should forget it,\" Martha said.\n\n\"I don't want to be that wife,\" Jenny said.\n\n\"What wife is that?\" Martha asked.\n\n\"Out of all of the women in the world, he picked you as his fantasy girl,\" Jenny said. \"If I take that away from him now, he's going to hate me for it.\"\n\n\"That's not true,\" I groaned.\n\n\"Besides, what if I say no to all this then meet Stephen Amell and he totally wants to do pull-ups for me?\" Jenny asked.\n\n\"I know,\" Martha sighed. \"The opening of Arrow is so damn hot!\"\n\n\"Molten hot,\" Jenny added.\n\n\"Okay, I get it, the guy has abs,\" I groaned and both ladies laughed in unison.\n\n\"As odd as this is to say,\" Jenny started. \"Martha, I give you my permission to fuck my husband if you want to. He gets a free pass to do anything he wants with you. The rules of the game are clear about that much.\"\n\n\"Are you sure?\" Martha asked with a big grin.\n\n\"Yes,\" Jenny said. \"Can you turn the screen so I can see him, please?\"\n\n\"Sure,\" Martha said as she turned the iPad towards me.\n\n\"Have fun, husband,\" Jenny smiled. \"I'll be expecting a nice gift on your return, something with a lot of diamonds.\"\n\n\"Are you sure about all this?\" I asked.\n\n\"Do you love me?\" Jenny answered my questions with one of her own.\n\n\"I do,\" I said with a smile.\n\n\"Then live out your fantasy and come home to me. Whatever happens in Dublin stays in Dublin,\" Jenny grinned.\n\n\"You are the best wife in the world,\" I said. \"I love you.\"\n\n\"I love you too, have Martha text me Stephen Amell's number if she has it,\" Jenny laughed and waved. \"Bye, dear!\"\n\n\"Bye,\" I said and Jenny disappeared from the screen.\n\n\"Why didn't you tell me I was on your list?\" Martha asked sharply as she put the iPad on the table and jumped out of her seat.\n\n\"As we've learned, it's complicated,\" I said as Martha sat in my lap and put her left arm up around my neck. Her scent hit me hard, she smelled like fresh roses with a hint of citrus. I could feel her fingernails gently moving along the back of my neck and my heart started to race.\n\n\"You knew I wanted you, but you weren't going to tell me?\" she whispered in my ear. Her warm breath cascaded over my skin and I could already feel my cock getting rock hard in my jeans.\n\n\"Does that make me an idiot?\" I asked as I felt Martha's warm red lips on my neck. She kissed me softly a few times as her nails continued tracing the back of my neck.\n\n\"No,\" she whispered in my ear. \"Actually it makes me want you even more, I'm totally jealous of Jenny. She has a guy that would rather pass up on his ultimate fantasy than hurt her.\"\n\n\"Fuck,\" I groaned as Martha gently nibbled on my neck then earlobe.\n\n\"But that's the last Jenny talk we're going to have,\" Martha said in a sexy low moan. \"You're mine now for as long as our little adventure lasts. Deal?\"\n\n\"Yes,\" I said as Martha looked up into my eyes. I wrapped my arms around her thin waist and pulled her long, slender body to mine. Our lips met in an absolutely spectacular kiss. My right hand slid up her back and grabbed onto her blonde ponytail as she playfully sucked on my lower lip.\n\n\"Sean,\" Martha moaned as I tugged her hair back and kissed the soft, warm skin on her neck. The scent of roses overloaded my senses and drove me wild. Her hands moved to my face and she brought her lips back to mine for another mind-blowing kiss. My brain was having trouble processing the series of events that put me in the position that I was currently in. I was on a private plane making out with one of the most beautiful women in the world, with my wife's full permission. I was almost certain it all had to be a dream.\n\n\"You are amazing,\" I gasped just before Martha's soft, warm tongue slipped between my lips. She was an excellent kisser and each kiss she gave me was making every cell in my body want her more and more. She enthusiastically swirled her tongue around mine as I tugged her soft blonde hair back harder. She dug her manicured nails into the back of my neck and playfully sucked on my tongue.\n\n\"You haven't seen anything yet,\" Martha smiled as she broke the kiss, hypnotizing me with her amazing blue eyes. Her right hand slid down to my lap and gently squeezed my raging hard-on that felt like it was about to burst through my boxer-briefs and jeans.\n\n\"There's more?\" I asked with a grin.\n\n\"Much more,\" Martha giggled and then kissed my lips softly before she slid down onto the floor in front of me. Her hands slid down my torso slowly, her French manicured nails tracing their way down my polo shirt. She reached my lap and unbuckled my belt and then unbuttoned and unzipped my jeans. Her big blue eyes looked up at me as her hand slid under my black boxer-briefs and finally released my throbbing hard cock.\n\n\"Fuck,\" I groaned as Martha smiled up at me from her knees and her delicate hand began to slowly stroke my dick.\n\n\"This is your angel speaking,\" Martha grinned and then kissed the head of my raging cock gently with her soft, red lips, leaving a trace of lipstick behind. Just that little kiss sent enough electricity through my veins to power a small city. My cock was harder than it had been in a very long time. \"Sit back, relax and enjoy the ride,\" she giggled as her blue eyes probed mine.\n\n\"You are a bad girl,\" I groaned low.\n\n\"It's time to thank you for that amazing foot massage,\" Martha smiled wickedly and then slid my cock slowly into her warm, wet mouth. Her soft lips gripped down on my flesh and she moved them slowly up and down my hard shaft. Her slippery tongue corkscrewed around my cockhead which made me moan loudly. Martha's blue eyes seemed to light up more and more with every sound that I made. Her eyes stayed focused on me as she started bobbing her head up and down slowly on my prick.",
        "My hands grabbed onto the armrests of the large recliner seat and I took a deep breath as Martha's head continued to work my hard cock up and down over and over again, her blonde ponytail bouncing as she devoured me. Her eyes searched mine as she worked me over like I had not been worked over for years. Her lips came up off my cock and she smiled up at me as her manicured left hand slowly jerked me off.\n\n\"This is way better than a foot massage,\" I said.\n\n\"I'm glad you think so,\" Martha smiled. Her blue eyes locked on mine as her tongue slid up and down my cock, getting it nice and wet. She flicked her tongue playfully over my throbbing cockhead a few times and she giggled as I moaned with pleasure.\n\n\"You little tease,\" I said as I reached out and grabbed onto her soft blonde ponytail with my right hand.\n\n\"You love it,\" she groaned and stuck out her tongue at me as she looked up into my eyes.\n\n\"I do,\" I smiled and then guided my cock back into Martha's waiting mouth. I thrust it towards her while I used my right hand to pull her head towards me. My long, hard cock went into her throat and she gagged momentarily but kept on going. She looked up with a new look of lust and determination as she sucked my cock as if her life depended on it.\n\nI moaned as Martha's soft, sultry lips slid faster up and down my cock. Every few bobs she would roll her magical tongue around my throbbing, sensitive head before bottoming out and taking my full cock into her mouth and throat. I knew I wouldn't be able to last much longer, the sensation of Martha's mouth, tongue, and lips on my cock was more than enough to make any man go crashing over the edge.\n\nWatching her beautiful supermodel face feasting on my cock was sensory overload and I finally stopped fighting the urge to resist and relaxed and let it go. My raging cock erupted into Martha's warm, wet mouth and she moaned as she swallowed my generous load as I shot wave after wave of my seed down her throat. Her blue eyes smoldered up at me as she sucked down every last drop that she could milk from my lipstick covered cock.\n\n\"That was more than amazing,\" I said as I tried to catch my breath. I watched Martha as she sucked gently on the head of my cock and then used her tongue to circle it a few times with a final flourish before she let it fall from her lips.\n\n\"What can I say, I'm an angel,\" Martha said. She bit down softly on her lower lip as she looked up into my eyes.\n\n\"Yes, you are,\" I groaned as I watched Martha stand up. Her white sweater clung to her 34B chest and her nearly painted on blue jeans showed off her amazing body. Even in such a simple outfit she just looked like a supermodel.\n\n\"Do you want to see how that bed works?\" Martha asked with a seductive smile as she held out her hand.\n\n\"Yes, I do,\" I smiled as I took her hand and stood up and fixed my jeans. I looked at the LED screen on the wall and saw that we were just flying over the New York area. Dublin was still about 5 hours away and I was going to be enjoying every last minute of this flight. Martha led me by the hand to the back of the plane, beyond the galley to the back cabin with the two couches along the walls.\n\n\"Any idea how these fold down?\" Martha asked as she looked down at the couches.\n\n\"No clue,\" I said as Martha released my hand and we each inspected the couches looking for a lever or a release that would convert them to the bed that we so desperately desired. After about five minutes of frustration, Martha hit the call button and Lisa, the co-pilot, emerged from the cockpit dressed as before but without her jacket on. I could see the smile on her face as she made her way to the back of the plane.\n\n\"What can I do for you?\" she smiled a sly little smile that let me know she knew damn well what we needed help with but she wanted us to say it.\n\n\"We'd like to take a little nap,\" Martha giggled. \"We're very tired.\"\n\n\"I see,\" Lisa grinned and looked over at me.\n\n\"Very tired,\" I nodded.\n\n\"There's a little button on the side here,\" Lisa said as she bent down and pressed something on the side of the couch on the left and simultaneously moved the armrest up into the air. Once she did that the couch folded down automatically like a futon. She quickly did the same with the couch on the right and the bed that we desired appeared before our eyes. \n\n\"Thank you,\" Martha said.\n\n\"No problem,\" Lisa grinned and opened a cabinet on the front wall of the cabin. \"Pillows, sheets, and blankets are in here. Would you like me to prepare the bed?\"\n\n\"No, I think I can handle it. Thank you,\" Martha smiled.\n\n\"You're welcome,\" Lisa grinned. \"If you need anything else, let me know.\"\n\n\"Thank you,\" I said. Lisa nodded then stepped out of the cabin, she spun around and grabbed the sliding divider and slid it across the entrance to the cabin closing us off from the rest of the plane.\n\n\"Sweet dreams,\" she said as the divider shut.\n\n\"Such a subtle girl,\" Martha giggled as she quickly prepared the bed. Watching her do such a mundane task made me think of her as just a regular girl for the very first time. She was no longer just that perfect image in lingerie and heels as I had seen her in many Victoria's Secret catalogs and commercials. Sure, she still looked absolutely amazing but she was no longer that unattainable fantasy that I'd made her out to be. She was very real and she was now kneeling on the bed she'd just made for the two of us to share.\n\n\"You think she knew what we were doing?\" I asked with mock sarcasm as I slipped out of my shoes and socks.\n\n\"I'm pretty sure,\" Martha smiled as she reached out, grabbed me by my belt and pulled me onto the bed with her as the plane hit a small pocket of turbulence. We both fell on the bed and looked into each other's eyes. Martha straddled me as my hands came to rest on her hips. She slowly brought her head down and kissed me softly. Her lips were soft and supple. Her perfume intoxicated me. Her sweet soft kisses made me want so much more.\n\nMartha's body started to slowly grind against mine as she continued kissing me. The sensation of her kisses and the friction between our bodies already had my cock about as hard as it could possibly be but I wasn't about to rush anything. My big, strong hands moved down to Martha's ass and I gave her bottom a light squeeze.\n\nMartha straightened up and looked down at me with her sparkling blue eyes. She smiled softly as she reached down, grabbed the bottom of her white sweater and slowly peeled it up off of her supermodel body revealing a very sexy black lace bra underneath. She tossed the sweater towards the divider and smiled, her blue eyes once again staring into mine.\n\n\"You are a goddess,\" I said as I took her in as she straddled me. Her breasts were works of art, not too big and not too small. Her red lips were calling to me and having her long blonde hair pulled back into a ponytail made her look like a cute college coed.\n\n\"You're not so bad yourself,\" she said seductively. My eyes kept moving back and forth from her stunning blue eyes to her voluptuous breasts in that black lace bra. She leaned closer, giving me the perfect view of her 34Bs. Her sweet floral scent stronger now that the sweater was gone and the scent of roses filled my senses and fueled my burning desire for Martha.\n\nMy hands slid slowly up her bare torso and I pulled her down to me so I could kiss her soft, supple breasts. My right hand slid behind her back and released her black lace bra with a snap and it fell down onto my chest. Martha's nipples were soft, light pink, and puffy, I couldn't resist softly kissing and nibbling on them. She moaned as I sucked gently on her left nipple and then let my tongue make soft circles around her delicate flesh.\n\nI gave Martha's right nipple the same treatment then reached up and grabbed onto her ponytail as I pulled her beautiful lips back to mine for another kiss. My body was on fire for Martha. Everything seemed like it was going in slow motion and I was savoring each and every millisecond. The way she kissed me was incredible, each kiss was filled with passion, longing, and desire. She made me want to worship her like a princess and punish her like a dirty little slut all at the same time.\n\nI tossed the black lace bra onto the floor and then I rolled Martha onto her back. I kissed her neck as my big hands moved down to work on getting her tight jeans off. I unsnapped the fly and then kissed my way down from Martha's neck, past her chest and stomach until my face was hovering above her crotch. I looked up at Martha and she was smiling, her blue eyes locked on me as I grabbed the top of her jeans and she pushed herself up on her feet to help me peel the painted on jeans off her slender body. \n\nUnderneath the jeans was a very sexy pair of black lace panties that matched the bra that was currently on the floor of the plane. Martha bit down gently on her lower lip as I moved back to her, kissing her through the soft lace. She let out a sexy little moan as I used my tongue to tease her through the little patch of material covering her pussy as my hands slid up her soft, warm skin.\n\nMy large hands cupped her firm breasts as Martha groaned and thrust her pussy up into my face. I moaned as I buried my face between her long legs and started to roll my thumbs and forefingers around her hardening nipples. I teased her by letting my lips grind down onto the lace panties that were already soaked with her sweet juices. Martha screamed loudly as I squeezed her nipples then she shot me a lust-filled glance.\n\n\"They certainly know what we're doing now,\" she laughed. Her beautiful blue eyes looked down at me and I smiled.\n\n\"Let's make them jealous,\" I said as I grabbed onto the sides of Martha's sexy little panties and slid them down her long, supermodel legs revealing her soft, pink pussy. Her pussy was bare and absolutely glistening. I slid the panties past her feet and instead of tossing them on to the floor with her bra I slipped them into the front left pocket of my jeans.\n\n\"What did you have in mind?\" Martha asked with a wicked grin.\n\nI smiled as I let my eyes take Martha's glorious body in. When I had woken up that morning, I had no idea that I'd be going to Dublin to help Aidan. I certainly had no idea I that was going to meet the Victoria's Secret angel who was number one on my free pass list. Being here, on a private plane with her nude on a bed in front of me would have seemed like a one-in-a-billion shot just a few hours ago, but there she was.\n\nI pulled Martha's legs up over my shoulders and kissed her clit softly. My hands slid up her body and cupped her breasts in my hands as I gave her clit a series of soft, sweet little kisses that seemed to be driving her crazy based on the moans and high-pitched squeaks she was emitting. With each soft kiss, I could feel her long legs wrapping around me tighter like an anaconda taking its prey, pulling me down closer to her amazing body. I loved the fact that I had this beautiful angel craving more.\n\nMy strong hands gently massaged Martha's breasts as my tongue gently flicked her clit. She let out a low moan as I started making soft little circles around her clit with my tongue, barely touching her skin. I made a few counter-clockwise circles and then used the tip of my tongue to trace her soft, pink pussy lips.\n\nI looked up to see Martha watching me, her big blue eyes taking in everything. It was a complete and total rush as I realized that she was totally into what we were doing. She wasn't closing her eyes and imagining her ex-boyfriend or some other guy she wanted. Supermodel Martha Hunt was watching me, Sean Ryan, eat her sweet, delectable pussy. A pussy that was currently overflowing with her sweet juices.\n\nI buried my face between her legs and rolled my tongue and slid it deep inside of her with one deep thrust. I moaned as I tasted her sweet candy juices covering every inch of my eager tongue. Martha grabbed my hair and used her legs to keep me pinned to her body. I responded by giving her the best tongue fucking that I could manage. \n\n\"Holy fuck!\" Martha moaned as my tongue penetrated her exquisite pussy over and over again as my fingertips squeezed and twisted her nipples playfully. I gave her a moment of respite as I slipped my tongue from her sweet, warm pussy and used it to tease her clit. This only made her moan louder as she pulled me by my hair and begged, \"Fuck me!\"\n\n\"You want me to fuck you?\" I asked with a grin as Martha released her grip on my hair and I looked up into her crystal blue eyes.\n\n\"No,\" she moaned low. \"I need you to fuck me. Now.\"\n\nI slid Martha's legs off my shoulders and I stood up in front of the bed. Martha's eyes never left me as I stripped for her. I took off my polo shirt and dropped it to the floor. She bit down gently on her supple lower lip as I undid my belt slowly and then unbuttoned and unzipped my jeans. I slid them off and stood there for a few seconds in just my black boxer-briefs. She beckoned me with her finger as I slid my black boxer-briefs off. The moment I stepped out of them I jumped into the bed with her.\n\nI kissed my way up Martha's body slowly. I took my time, starting at her toes and inching my way up with soft, little kisses and nibbles on her soft, warm flesh. As I worked my way higher her moans grew in intensity. By the time I got up to her neck Martha was responding to even the lightest touch of my lips with a sexy little moan and it was driving me wild.\n\n\"Have you ever joined the mile-high club?\" Martha asked as I softly kissed her neck.\n\n\"No, I haven't,\" I said, looking into her blue eyes.\n\n\"I haven't either,\" she beamed with delight as she wrapped her long, sexy legs around my torso.\n\n\"You are really ruining me for all other women,\" I smiled.\n\n\"Good, I'm okay with that,\" Martha giggled as she wrapped her arms around my neck and pulled me down for a steamy, sensual kiss. Her sweet tongue probed my mouth so I rolled my tongue playfully around it. I recall thinking for a brief moment about what happens when a fantasy becomes reality. About how life would undoubtedly forever be altered. About how naive anyone would have to be to think that they could have what they had always desired but then go back to how things were before.\n\n\"Fuck me,\" Martha moaned and I was brought back into the moment. Absolutely nothing mattered at that point but fucking the beautiful, sexy angel in the bed with me so I thrust my hard cock into her tight, wet cunt for the very first time and fireworks went off in my mind. \"Yes!\" Martha screamed as I started fucking her incredible pussy hard and deep. Her long legs contracted around me and pulled me in deeper with each thrust.\n\nI grabbed Martha's wrists with my hands and moved them up onto the bed over her head. I took a deep breath and slowed down my thrusts. I looked down into Martha's blue eyes as she smiled up at me. I dialed the pace back as much as I could, my raging hard cock moving painfully slowly in and out of her heavenly pussy.\n\n\"You are an angel,\" I said as I paused, letting my hard cock stay buried deep inside Martha's pussy as I gazed into her seductive blue eyes.\n\n\"A naughty angel,\" she said as she reached up and pushed me with enough force that I rolled over onto my back with her straddling me, my cock never leaving her pussy. Her hands were on my chest as she smiled down at me. I was lost in her eyes as she guided her warm, velvety pussy slowly up and down my hard cock. She reached up behind her head and pulled the hair tie off, letting her luscious waves of soft blonde hair fall down around her beautiful face.\n\n\"Very naughty,\" I nodded. Martha leaned down and kissed me as she slowly rode my cock. Talk about complete sensory overload, her soft lips were melting into mine, her tight, wet pussy was engulfing my hard cock, her soft blonde hair was falling down around my face and her perfect tits with their soft, puffy pink nipples were just barely grazing my chest as she fucked me. \"God, I want you,\" I moaned.\n\n\"You've got me,\" Martha moaned as she moved like a dancer, grinding her perfect body up and down my cock in a way that was getting me way too close to exploding. I reached up and pulled her long blonde hair back hard and kissed her as she moaned. I moved my hands to her hips and guided her up off my cock. She pouted at me as I spun her around and got her on all fours in front of me. She wiggled her ass playfully so I spanked her, perhaps a bit harder than I intended as she screamed, \"Fuck!\" into the pillow below her.\n\n\"Are you a bad girl?\" I asked in a low growl as Martha looked back at me over her left shoulder.\n\n\"All signs would point to yes,\" she giggled then bit down on her lower lip as she watched me. I spanked her again and a bigger smile came across her sweet face. \"Fuck me, Sean Ryan,\" she commanded.\n\nMy strong hands grabbed Martha's slim hips and I drove my hard cock deep inside of her waiting pussy. I fucked her hard, pulling her body back down onto my cock with every deep, penetrating thrust. Martha moaned and screamed as I used her hot, sexy body as my plaything. My cock pounded her steaming pussy harder and harder as we shot through the sky at 600 miles per hour.\n\nI reached up with my right hand and grabbed a fistful of Martha's long wavy blonde hair and I tugged it back hard as I continued my cock's assault on her tight little pussy. Our bodies moved as one as they came crashing together over and over again. I tugged her hair back harder and she screamed out loudly for more.\n\n\"Yes!\" she moaned as I thrust every inch of my raging cock inside of her tight, wet pussy. My whole body was on overload, every little sensation felt like heaven as I fucked my angel. I knew there was no way I was going to last much longer so I slid my left hand around her hip and teased her clit. \"Holy fuck,\" Martha screamed as my cock split her in two with repeated jackhammer thrusts while my fingertips teased her soft little button.\n\n\"Fuck yes!\" I growled as my balls slapped up against Martha's beautiful ass as I fucked her with every ounce of energy that I had left. I pulled her soft, blonde hair back hard and she screamed as she arched her back and looked up at the ceiling. Her tight pussy started contracting around my cock and I exploded harder than I had for ages. I let go of her hair and grabbed onto her hips as I steadied myself and thrust my exploding cock deep inside of her over and over again. Martha moaned as her pussy consumed my prick, her velvet box contracted and released me about a thousand times it seemed as she drained every last drop that she could from me.\n\nMartha fell down onto the bed as I slipped my cock free from her pussy. I enjoyed the sight of the beautiful lingerie model gasping for air with a content little grin on her face for a moment before I fell next to her on the bed completely spent.\n\n\"Did I live up to your fantasy?\" Martha asked with a sweet smile.\n\n\"Yes, and then some,\" I smiled as I looked into her blue eyes and pulled her body up against mine with me on my back and her snuggled up on my chest. \"You are truly more amazing than any fantasy I could have imagined.\"\n\n\"Thank you,\" Martha cooed as her fingernails traced my chest and then she leaned in and gave me a soft kiss. I grabbed the blanket that was sitting on the side of the bed and tossed it over us. I looked up at the LED screen on the wall and saw we were still a few hours outside of Dublin.\n\n\"No, thank you, my angel,\" I smiled losing myself in Martha's blue eyes. Neither one of us said anything for a while and Martha drifted off to sleep in my arms. My body was exhausted but my mind was wide awake and running through scenarios like one of my company's penetration testing machines.\n\nWhat I told Martha was true, the reality of her was so much better than any two-dimensional fantasy that I had previously had. I was beginning to realize something that I am sure I had already known but was just blocking out and ignoring before. The free pass game doesn't exist in a vacuum and real people make things complicated. When a guy jerks off with a magazine he can put it down and forget about it. I was lying in bed with a Victoria's Secret supermodel that had just rocked my world and I could think about nothing else in the world but wanting more of her.",
        "I wondered if Martha was through with me or if we had more adventures to come. Another question about the free pass game came to mind, was it supposed to be a one-time thing or did you get unlimited access to the people on your list? I cursed the lack of socially accepted rules to the game and wished someone would write a damn book that we could all use as a guideline.\n\nI finally drifted off to sleep and though I cannot remember what I dreamed about I am sure it couldn't live up to my reality as I jetted across the ocean in a private jet with a gorgeous blonde supermodel asleep in my arms. I was woken up by the Captain's voice coming over the speakers telling us that we were about 30 minutes outside of Dublin.\n\nMartha sat up in bed next to me and stretched her long arms into the air as she yawned. She looked down at me with a soft smile and asked, \"So, that wasn't all a dream?\"\n\n\"No, it was quite real and quite amazing,\" I said as I sat up.\n\n\"Yes, it was,\" Martha leaned over and kissed me. I moved my right hand behind her neck and kissed her soft, supple lips. She let out a soft moan and asked, \"So what now?\"\n\n\"I was wondering the same thing,\" I said before kissing Martha again.\n\n\"Your wife did say whatever happens in Dublin stays in Dublin, right?\" Martha asked.\n\n\"Yes, she did,\" I said looking into deep into her blue eyes.\n\n\"Well, we haven't even gotten there yet,\" she said and then gave me a long, lingering passionate kiss that shook my body to the core. \"Unless you're done with your fantasy girl?\"\n\n\"Not by a long shot,\" I said."
    ],
    "authorname": "TallMarriedMan",
    "tags": [
        "martha hunt",
        "lingerie",
        "private plane",
        "blonde",
        "supermodel",
        "model",
        "adriana lima",
        "taylor swift",
        "wife",
        "married"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/mile-high-with-an-angel"
}