{
    "title": "A Clean Well Lighted Place",
    "pages": [
        "A few months back I wrote a piece called \"A Man of the World\". It sank without a trace. But, quelle-surprise!! I started getting emails asking me to continue the story of one of its minor female characters. I didn't have a clue about how to do that; until a guy who has given me some great story ideas in the past, told me about his nephew, a former Ranger. The real story was one of those overdone, \"nurse runs off with doctor\" tales. But my buddy suggested a truly clever plot twist; which allowed me to satisfy both requests. So Rick at rkv330, this one's for you and thanks. - DT \n\n*****\n\nA CLEAN WELL LIGHTED PLACE\n\n\"Rangers Lead the Way,\" we won that motto on bloody Omaha Beach and that is the phrase that describes us best. I'd been with the Rakkasans prior to Ranger School. But, when I got out I was offered a post with the 75th Ranger Regiment, which putatively traces its lineage back to Rogers' Rangers, of French and Indian fame. THEN, I spent an intense period of \"quality\" time in Paktia Province; working with the locals on both sides of the Afghan border. Pashtuns are a tough and merciless lot, which might explain why Afghanistan has been a speed-bump for every Western nation from the Macedonians, to the British, to the Russians, to us.\n\nMost guys stay for the full twenty, when they get their Ranger flash. But my mind was changed by one incident. It was a moonless night and we were manning a checkpoint on the Kabul-Gardez road. They don't use Ranger units for mundane things. But G2 had gotten the word that there was going to be a suicide bombing at the University in Gardez, and our squad was the only force available. \n\nThe darkness is absolute in the valleys of the Hindu Kush and you can get the impression that you're the last people on earth; sitting on a desolate stretch of road in that ancient and unforgiving land. Around midnight, we heard the grinding of something big approaching our position. So we turned on our tac-lights; just to warn whoever it was to stop. What we illuminated was a big cement truck and It was headed for us at a high rate of speed. \n\nWe flashed our tac-lights, nothing happened. We flashed them again, still no slowing down. At that point the vehicle was no more than 100 yards away. Everybody was aware that the mixer could be full of enough Semtex, or C-4, to blow us ALL to kingdom-come; and it wasn't stopping. So the Top told us to light it up. I emptied the 30-round box magazine of my SAW and I think I was the squad member who showed the MOST restraint. The juggernaut careening toward us was THAT intimidating. \n\nThe truck eventually drifted to a halt. The first brave soul to inspect it found no explosives, just cement. The problem was that there was one older guy and two kids. The 13-year-old was the one who had been driving. The older guy looked like he was sleeping in the back seat. We had no way of asking the 13-year-old why he didn't stop. That was because he, his dad, and his brother were ALL emphatically dead. We didn't suffer any consequences. We had done everything by the book. But I still couldn't lose the image of those two little boys and that bloody cab. So, I opted out at the end of my hitch. I had had enough of killing. Now I wanted to help people. \n\nI decided that the best way to achieve that purpose was through some kind of medical field. I knew that, at age 31 I was too old to go the traditional medical school route. Moreover, I didn't have the academic background. But the Physician's Assistant program looked like something I could handle. I was nervous when I went down to interview. I had a leg up on admission because of my veteran status. But I had gotten one of those on-line bachelor's degrees. It was in biology, not nursing, or anything medical. Nonetheless, six years as a combat medic made me spectacularly well-qualified in their eyes. \n\nOnce you are in a Ranger unit, you are a grunt; until somebody tells you otherwise. So I never fell under the Article 25 definition. But, I had done the 18-week medical training course at Fort Sam Houston and that MOS was what I did for our Unit. Accordingly, that autumn found me attending classes at the UW School of Medicine and Public Health, right between the two lakes off Delaplaine Court. That was my first exposure to the medical establishment. \n\nMedicine has its fiery hoops, just like the military, and I quickly learned my place in the great scheme of things. The members of the medical faculty were at the top of the food chain. They would normally walk to work right across the water of Lake Mendota. Then there were the medical students. Oddly enough their shit didn't stink. The hospital administration and public health people thought all of the docs were incompetent, especially when it came to the essence of delivering quality medical care; paper work. Then there were the nurses and the PA students. We were too numerous and unimportant to be noticed by the great and good. \n\nThe student body itself was a revelation, especially to a guy with my background. I had enlisted at 18 and almost half my life was spent in the rigid discipline of the military. So my peers were hard to relate to. That was mainly because they were younger than I was and had never had to face the things that I had to face. You grow up fast in the Army. They push personal responsibility from the first day of Boot Camp and there is nothing like daily foot patrols through places like Kandahar, or Gardez to teach you about your own mortality. My fellow students never had that experience. So they all seemed juvenile, especially with the constant pussy-hunts and partying.\n\nPhysician's assistants do primary care; diagnosis and treatment, in out of the way places. Of course it is under the godlike eye of a REAL doctor, as many of the docs liked to point out. So, I was serving a post-grad family-medicine preceptorship, in a little clinic southeast of Eau-Clair. The place was not exactly Chicago, or for that matter, even Eau Claire. It was a small town of 1,500 souls, near the Wisconsin Dells. It was wonderful, in a place-that-time-forgot kind of way; gentle and peaceful and it was beginning to make the nightmares go away. I had seen far too much death in my previous life and I was beginning to understand where I belonged.\n\nSmall Wisconsin towns are in the middle of nowhere. So, from a family medicine standpoint I was the only game in town. I was already licensed. I had passed the PANCE when I graduated, and I could write prescriptions. But I still had to be \"under orders\" of a licensed physician. My supervising doc was the local family practitioner. Doctor Morton more-or-less left the patient care up to me. He would just appear once in a while to show the flag. He had lived in the village his entire life, with the exception of his time at UW Medical school, and he looked and acted like a refugee from a 1930s dustbowl movie. \n\nHe was a nice old guy who had faithfully served his community for over fifty years. I think he saw me as a son, since he was always kind to me and helpful. The office itself was in a building on the main drag. It was small, basically a receptionist, me and a nurse. \n\nThe nurses would rotate up from Madison for clinical assignments. They were mainly 22-23-year-old BSNs, either fresh out, or finishing up. The town was not the kind of place anybody would go to for fun. So my BSNs tended to gravitate toward Eau Claire for evenings out. The fact that the girls were going to Eau Claire for the nightlife ought to give you some idea how exciting and vibrant our little town was. \n\nI was nearly 34 at that point and my only aim was to settle down. The problem was that I really didn't have anyone to settle down WITH, not that the locals didn't try. I was their version of the town doctor and there were plenty of unattached women who had made their interest clear. Even so, I had been with every type of female in my Army career; from the cotillions at Fort Bragg to the whore houses of Kabul. So, the women in that place didn't have what it took to interest a guy as jaded as me. \n\nThat changed one spring morning. Wisconsin is the pits in the winter. The snow is knee deep, the colors are black and white and the air is so cold that it freezes your nose-hairs. Then the weather breaks, the sun comes out, it gets warm, green leaves appear and it is May. I had been informed that UW Family Medicine was sending up a new Nurse Practitioner, who had actually REQUESTED the placement. That was astounding in-and-of itself, since most of the nurses they sent thought that they were being punished. I called the Doc and he and I were waiting behind the counter to interview the new girl. \n\nAs we waited, the door opened and a woman walked in. She was absolutely breathtaking. She was a Swedish blond, long, extra-thick almost white-blond hair framing a perfect oval face. She looked like she had just stepped off the cover of one of those sporting magazines; about five-six, slim and obviously fit, with long beautiful well-muscled legs in a modest business length skirt. She was perhaps 29 years old. \n\nI should have been delighted by her unexpected arrival. However, in point of fact, I was a little irritated. This was a woman who any man would want to get to know better. But instead, I had to interview a painfully sincere nursing student. That illustrated the kind of timing I had been experiencing lately. When I saw a woman who struck my fancy I was either doing something else, or she was in the process of doing something discouraging, like walking down the street with her husband and kids. \n\nI said curtly, \"Please sit down Miss. We'll get to you as soon as we can.\" She said, \"Dr. Morton.\" The Doc said, \"Yes.\" She looked a little puzzled and said to me, \"Who are you?\" I snapped perhaps a little too abruptly, \"I'm his PA! How can we help you?\" She said just as snappishly, \"My name is Eve Pederson and I was supposed to interview with Dr. Morton for his Clinical Nurse Practitioner opening.\"\n\nHoly crap!! THIS stunning woman was the person we were waiting for!! Needless to say I started backpedaling. I said, trying to keep the flustered out of my voice, \"I'm sorry Ms. Pederson, we were expecting somebody much younger.\" OH MY GOD!! I am such a tool!!??? She smiled at my embarrassment. She knew the effect that she had on men. \n\nShe said, \"Well, I got my BSN on a Navy ROTC Scholarship. So I served the four-year active duty commitment with the Marines.\" She added, \"I was in the Reserves when I did the Nurse Practitioner Master's in Chicago and that took me a while.\" Great!! She was a Squid, an officer, and maybe better qualified than I was.\n\nDoc stepped in at that point. He had been sitting there watching me twist in the wind, a look of amused indulgence on his face. He said, \"We were expecting a fourth year BSN student Eve. Not somebody who is as well-qualified as you are. What would make you want to apply for a position like this?\" She turned a radiant smile on my kindly old friend and said, \"I was born and raised on Buckman Street Doc. You don't remember me? I was a skinny little girl back then. But my mom still owns the Hot Spot Caf\u00e9.\" \n\nThe Doc looked gobsmacked and said, \"Your Doris's little girl?!!\" She grinned even wider and said, \"In the flesh!!\" It was rather spectacular flesh. She walked around the corner and gave the old man a hug, studiously avoiding ME. Okay!!, I HAD been a total asshole. She said, \"I've been in a lot of places with the Marines. Some of them were pretty miserable. I had a wonderful childhood and I want to come home now - for good.\"\n\nIt would take me too long to enumerate all of the thoughts that were going through my head. A beautiful, well-educated and worldly woman wanted to work in a place where I was beginning to put down roots. She had approximately the same service background as I had; some of it obviously deployed. She had excellent medical credentials. Better yet, there was no way that we could avoid being around each other for a significant part of every day. \n\nThe interview was short, basically a background check. We would take anybody Madison sent. But it is polite to at least LOOK like you are being selective. All the time that she was talking, Eve was sitting primly, knees together and speaking with the disciplined voice of a Navy Lieutenant. Of course her voice was low, mellow and incredibly sensual. \n\nI had a thought; but I knew that I couldn't voice it without getting in trouble with the EEOC, \"Is she married?\" I realized that my immediate interest in her marital state makes me sound like a horn-dog. But Eve Pederson was just THAT attractive. I knew that I COULD ask her about her service record, which might give me a clue about her marital status. I found out that she had done a tour at Balad in Iraq and two at Craig, at Bagram, which was during the time I was down south. So she understood.\n\nIt didn't take more than ten seconds to decide that she fit our needs, since she was probably better qualified to practice medicine in some place like Chicago, rather than up here. Doc said, \"Where are you planning to live Eve.\" She brightened and said, \"With Mom, she has way too much room since Dad died.\" Doc said, \"Yes I remember, that was last year wasn't it? We were all very sorry. He was a good man.\" Then he added conversationally, \"So what would EVER make you want to come back here? It is kind-of slow moving for a woman with your background?\" He didn't add, \"And your beauty.\" Nonetheless, I THOUGHT it. \n\nShe looked sad and said, \"I got married to an absolutely horrible man, right after I got out of the Navy. I have no idea why I did it, except he pursued me so aggressively. I should have been stronger, but he was SO insistent and eventually I gave in.\" She seemed embarrassed as she added, \"I tried, I really did. But one terrible night in Barcelona I finally accepted that he didn't love me. I was just his possession. How I found that out is far too personal to describe. But it gave me the courage to divorce him.\" \n\nShe got misty eyed as she said, \"I was empty and apathetic after the divorce, just drifting. Then I came back here for Pop's funeral and I felt like I fit-in. This simple place was where my life was the happiest and it is the place where I want to be now - forever. So I'm looking forward to starting all over again, and this time I won't be leaving.\" Of course my selfish personal reaction was, \"She's available!!\" \n\nThus began our life together; delivering family medicine to the people of Eau Claire County. I was the top of the chain of command; since Doc Morton had more-or-less turned over every aspect of the business to me. He was still kindly and supportive. But he was also getting up in his seventies. It was really pretty idyllic. We were doing the normal primary care, basic diagnosis and treatment and referrals to Madison, if there was something we couldn't diagnose, or we encountered anything serious. \n\nEve did the intake and in most cases anything involving the women in the area. I took care of everything else, kids, families and the occasional stray female patient. My life was very fulfilling. I was a pillar of the community, liked and respected by everybody in town, and I was working side-by-side with a woman who was both beautiful and a superb friend and companion. \n\nOur start might have been a whole-lot awkward. But by the end of the first month we were as comfortable as a man and a woman could be with each other. That was mainly because it was just the two of us in the Office and THAT was for eight to ten hours a day. But it was also due to the influence of Eve's mother Doris. \n\nI knew Doris from the diner. She was one of those force of nature personalities that you only find in a small town. I lived almost next door to her diner. So I would get breakfast there every morning. It maintained my connection with the community. But it also kept my finger on its pulse, so-to-speak. \n\nThe diner was ground zero for all of the happenings in the area. Consequently, Doris's was the place to go if you wanted to know what was going on. Her diner had been the center of town life for at least thirty years; she knew everybody and everybody knew her. She clearly loved her daughter and she seemed to have taken a proprietary interest in me; like a surrogate mom. \n\nI lived in a little bungalow. It was a bachelor life, just me and my dog Buster. I got Buster from the Madison pound. He's big and ugly and unconditionally loyal and loving. Somebody who still suffers from hyper-awareness and other PTSD symptoms needs the calming influence of a dog. \n\nSo Buster would faithfully sit next to the reception desk, just to make it clear who loved me. A big slobbery mutt doesn't belong in a medical office. But nobody would rat Buster out; and in many respects he was as well-known in the County as I was.\n\nAnybody who has spent any time in the Rangers can fend for himself. But Eve's mother Doris seemed to think that I would starve to death on my own. So every Sunday Buster and I would be invited to the Pederson house for the same kind of spread that I experienced growing up in a German family. The Pederson's house was one of those classic two and a half story stone Colonials, which you see all over Wisconsin. It was big and solid, light and airy and it smelled like Thanksgiving every time I visited. \n\nBuster and I would never miss a Sunday; both of us for the same reason, the food!! Doris owned a diner, so she was a great cook. But Eve was a top notch clinician, not a chef, so the question was, \"Why was EVE such a good cook?\" In actuality, Eve could whip up a meal that could feed entire infantry brigades and her cooking might have been slightly better than her mom's. \n\nI was sitting in their living room one Sunday evening; after Eve had stuffed me with something that tasted like it had come out of the kitchens of Louis Quatorze. Eve was doing the cooking because Doris had to work the evening shift at the diner. So we were all alone. Buster was leaning against my leg like all big dogs do when they are expressing affection. Eve was buzzing around in a \"cute\" Momma Brady apron; which was like something out of the 1950s. That was an absurd sight since it was the exact polar opposite of who Eve was, and how she looked in her normal scrubs. \n\nShe came over and sat in the chair opposite and said, \"Could I ask you a personal question?\" I laughed and said, \"After feeding me like that, you can ask me for my entire life history including all of the dirty little secrets.\" She said, \"Are you gay?\" I said, \"Excuuuuse me!!??\" She said, \"I was thinking about why you've never made a pass. Is it because you bat for the other team? I just wanted to know.\" \n\nShe was serious!! \n\nI said, \"I have never made a pass at you because you are a colleague, we work together. She said, \"What does THAT have to do with it? Every man I have ever worked with has tried something with me.\" That shot an unreasoning pang of jealousy through me, but I sucked it up and said calmly, \"It isn't that I don't find you attractive. You are stunning. But I want to work with you for my ENTIRE career; that is, if I have anything to say about it, and I would hate to ruin THAT for a fling.\" \n\nI added, \"I have infinite respect for you. You are a superb nurse and it would just seem disrespectful for me to try-it-on with you, while we were also taking care of the good people of this County.\" She said, \"Okay, I get that. But we are alone here on a Sunday. If you did that NOW, it would be a sign that you found me attractive, that you actually wanted me.\" Then she hesitated and said in a whisper, \"As much as I want you.\" \n\nSo there it was; finally, out in the open. I suppose it was inevitable. We were two healthy young adults. We had worked together as closely as two people can for almost a year. During that time, I never missed the chance to leer at her firm, round, bottom, her sweet taut hips, her tiny waist and her superb little boobs. I suppose she had done the same thing with me. We operated as a close-knit team and we had come to anticipate each other's thinking; so much so that it was like we were an old married couple. The people of Eau Claire County depended on us and the sense of accomplishment and esteem kept us in a contented glow of comradeship; which was indeed fertile soil for the seed of love to grow in. ",
        "A beautiful woman, who I both admired and lusted-after, had just offered herself to me and I knew that I wasn't going to disappoint the poor dear girl. But before all of the blood rushed to my lower control center, my upper brain still needed to get one thing clear. I looked at her as frankly as I could and said, \"If we get intimate I want us to have a real relationship, not just fuck. We still have to work together and sex always messes with the dynamics of a team. So I'm NOT interested in this if it is a one-shot thing, just to have a little fun after dinner tonight.\" \n\nI fixed her with an expression that I hoped conveyed my earnestness and said, \"You are way too special to me for just a casual affair. So you are going to have to tell me that you want something deeper and more personal. If you can't make that commitment, I want to be able to walk out the door tonight and have both of us forget that you ever mentioned it.\" \n\nShe looked at me like I had finally discovered something that everybody else in the world already knew. She said simply, \"I'm in love with you Jonathon. I have been for a long time. I want whatever you are capable of giving me. And I want it forever. Is THAT clear enough for you?\" I remember thinking as we strolled together into her large, but cozy bedroom, \"Things this perfect don't happen to me.\" \n\nI turned her to face me, hands on both shoulders. She was already breathing raggedly. I looked into those enormous ice blue eyes and she was staring back at me with undisguised love. You can't fake a look like that. She stepped into me, put her hands on both sides of my face, and pulled me down to a very hot kiss. She moaned loudly, her mouth opened wide and we began to exchange tongues. Then she grabbed the back of my head with one hand and threw her other arm around my shoulder and plastered herself against me. \n\nI began to walk her backward to her bed. She was making little cooing noises. At the same time, she had dropped both hands to tear at my belt. We had gotten to her bed and I pushed her back on it. She still had ahold of my belt, which she ripped through the loops and right off me as she fell. That dropped my pants to the floor. They were bunched around my ankles, so I tripped over them and fell face first with my nose buried between her widely spread legs. \n\nOkay - that was a Keystone Cops moment, but I had to start someplace. So I addressed the prospect directly before me. I pulled her panties down and licked and sucked and generally ravaged her little pink lips. She let out an unearthly groan and grabbed the side of my head, settling me into position to really go to town on her. \n\nIn the meantime, she was uttering loud moans and cries and telling me in rather explicit terms how good that felt. Then suddenly, she hyperventilated and bucked into a bow, back and butt resting where I was feasting on her, her arms were above her head, her legs were elevated and shot wide and she began a cadence of shrieking. Then her legs and arms slammed back down on the bed and she began quivering like she had contracted a sudden severe case of malaria, still making those rhythmic shrieks. \n\nShe reached down and grabbed my head in both hands again. She began dragging me up her body, all the while just yelling, \"Get up here and FUCK me!! You have to fuck me NOW!!\" I had to follow her lead, or I was going to lose both ears and perhaps my entire head. She did all the work. The moment I got situated between her widely spread legs, she bucked up and took me to the hilt in a single motion. It wasn't like she was loose. She was tight and very hot. But she was THAT lubricated. Then she turned into a crazy woman, making low feral noises like an animal in heat and scratching my back in a way that made me pretty sure I was going to be wearing a t-shirt under my scrubs for a while. \n\nWe fucked like that for about twenty minutes; me absolutely pounding her and her writhing and moaning and scratching like a wildcat. It is impossible to sustain that kind of stimulation for very long. In my case, I could feel an orgasm coming from someplace long-ago-and-far-far-away and when it hit I heard myself roaring like a berserk Grizzly Bear, \"OH FUCK YESSSS!!\". In the meantime, Eve, who had been urging me to \"cum\" in her, in increasingly louder and more frantic tones, seemed to have passed out. I didn't need to be a PA to know that. I knew it because she was motionless underneath me. \n\nAs I shrank out of her, she began to stir, which elicited a little moan of loss. I was supporting myself on my arms just staring into that delightful oval face with its long exquisite Swedish nose, sharply pointed chin and incredible sculptured lips. Her ice blue eyes popped open and she looked dazed. I said a little worried, \"Welcome back, are you all right?\" She smiled languidly and said, \"I've never been more all-right in my entire life. Do you know how I feel about you, now? Do you understand what I want?\" \n\nI said with a little grin, \"Well, let me see, I was wondering if it was close to what I wanted? I want to wake up next to you every morning and work hard with you every day. I want to be your best friend and devoted lover. I want to see things and do things with you, have children with you and die in your arms. Does THAT come close to summing up what you had in mind?\" \n\nThe joyous expression that lit up her beautiful face told me everything. She wrapped her arms around my neck and her legs around my waist and yelled, \"YES!! I want to be yours for the rest of our life. I want to be your friend in the office and I want to be your lover the rest of the time. Everybody in town knows how I feel about you; except for you of course. You are a particularly dense specimen of the male species. But, I know that the whole town will hold a parade when they find out.\" There wasn't a parade. But there was a whole lot of congratulatory back-slapping. \n\nWe were married four months later in a beautiful fall ceremony in the town's Lutheran Church; Lutherans being as numerous in small-town Wisconsin as Catholics are in the Vatican. It was a community event that attracted hundreds of well-wishers, most of whom were our patients. Doris hosted the Reception; it was a dinner to rival the feasts that Julius Caesar put on for the Roman masses. \n\nGod forgive me, but I had to admit that I loved Doris a lot more than I did my own Mom. In fact, Doris and Doc Morton were more like a mother and father to me than my own birth parents. Doc and I had the kind of bond that a young person has with an older role model and Doris made us feel particularly safe, secure and well-loved. \n\nDoris was a tough old Swedish bird who lived life to its fullest, never backing down from a challenge and always nurturing the people she loved. Watching Doris live her life went a long way toward explaining my wife's unconquerable spirit. Doris just had an additional helping of accumulated wisdom; which only made her more magnetic. She was in her late-sixties at that point. But, she was still as energetic and personally inspiring as she must have been when Eve was growing up. \n\nDoris's first act as my mother-in-law was to trade houses. She had a big two-story stone colonial that she and her husband had bought back in the 1970s. It looked like something from a classic Andy Hardy movie and it was a beautiful place to raise kids. My little bungalow was very snug and comfortable and it was almost next door to Doris's Diner. So it was both convenient and also much easier to maintain; for a woman who worked ten hours a day. Doris probably could have retired. But she seemed to feed on the energy of her place. \n\nSeven years passed in an utterly rewarding life. Eve was a wonderful friend, helpmate and lover. Some couples like to socialize. We did some of that. But we mostly just spent our time together, working at the clinic and enjoying life as a married couple; totally satisfied with each other. Ours was more-or-less the ONLY clinic in a 600 square mile area, so we couldn't take long vacations. But we DID spend a lot of time in outdoor pursuits, kayaking and hiking in the vast expanse of nature that surrounded us. \n\nBesides being the world's hottest fuck, Eve was a very intelligent woman with an outstanding sense of humor and exceptional skills as a nurse. She was so well-read that I didn't feel like we were stuck in the middle of Wisconsin. We had both seen far too much evil and cruelty. So to us, the peace and quiet of our life was perfectly restorative and invigorating. \n\nNevertheless, there was one dark cloud. Almost from the beginning of the marriage, we had tried to have children. But Eve kept miscarrying. We were both medical professionals. We knew that there had to be some issue with her reproductive system. So finally, we drove the two and a half hours across the Mississippi to Rochester. \n\nThe people at Mayo were very sympathetic. But it appeared that there was some form of chronic cervical insufficiency that was likely to prevent Eve from carrying a baby to term. There were surgical solutions, of course. But they were invasive and would impede conception. The fact that Eve was also 36 at that point further increased the odds against. So in the end we simply accepted the fact that it would just be the two of us. \n\nThat was a sad time. We had both wanted kids. Nevertheless, fate had chosen to snatch one of life's special experiences away from us. Eve was particularly depressed. I kept telling her that it didn't matter. But it struck a blow to the core of her female ego and I could see that it knocked her off balance emotionally. Mainly, she was a lot needier and less confident in our relationship. In the past, she was happy to give me loving grief about anything. Now, she would hold it inside once in a while. It also affected her sense of humor, which in some respects was more upsetting. I dedicated myself to giving her the support she needed and I knew that she would work through it.\n\nThen Doc Morton died. He was mid-80 so it was not unexpected. But he had been a father figure and his passing kicked the supports out from under my entire emotional and professional life. I missed his gentle wisdom and his kindhearted guidance. I am somebody who believes that he can handle any challenge and I am confident in my abilities. But, like anybody else I occasionally need encouragement, especially after a particularly tough day. If I ever wanted reassurance, I could always count on Doc Morton and his decades of experience. Now, I was forced to cope with everything in a rapidly growing practice, all by myself. \n\nEven worse, by law I had to have a licensed physician oversee me. Geographically, we were a bit closer to the Mayo Clinic than Madison, and they had doctors licensed to practice in Wisconsin. So UW solved the problem by asking one of Mayo's hot-shots to serve as the practice supervisor. The dude was supposed to come over on a weekly basis and Skype daily, just to establish that we were being supervised within the dictates of the law. \n\nWe met the fellow on the Monday after Doc's funeral. I was still mired in grief and Eve was not much better off. I was sitting in the same chair that I had been sitting in when Eve had walked in the door; almost nine years previously. We were both a little nervous, the way you are when you meet a person who holds your fate in his hands. The door opened and a guy walked in. He was a couple of years younger than me, about Eve's age. I knew from his background that he was a prodigy, with a sterling academic and research record. But I didn't expect him to be so tall and ruggedly handsome. You normally don't get movie stars posing as doctors in our neck of the woods. \n\nHe gave me a perfunctory look and then turned his attention to Eve. I could almost hear his mind go \"KA-CHING.\" THAT was an amazingly unprofessional introduction. He said, \"I'm Doctor Chase Williams. I would prefer that you call me \"Doctor Williams,\" or \"Doctor.\" We need to keep it professional.\" I got it, this douchebag was establishing that he was exalted and we were both a whole lot less so. \n\nHe turned to me and said, \"I understand that the previous doctor gave you a very long leash. I am not going to permit that. So I will need you to log your medical activities for my review. When I am here I will expect both of you to clear any final medical advice with me.\" Right!! and he was also a raging control freak. I hated the asshole from day one. \n\nI came to hate him even more over the ensuing months. He treated me with contempt. It was personal with him; like the fact that I was allowed to dispense any form of medical care was some perversion of the law. I realized that I didn't have his medical credentials. But, family medicine involves a lot of judgment, especially with diagnosis, and I had a decade long track record of keeping my patients healthy and happy. \n\nAs a result, I resented his attitude. In fact, Doctor Dickhead would have been in a lot of trouble with the locals if they had seen the way he treated me. But this guy was sneaky as well as smart. So, he always did the belittling and demeaning when it was just the two of us. \n\nOn the other hand, he treated Eve the exact opposite. Doctor Dickbreath would sing her praises. I could see that the reinforcement was helping her to regain her shattered confidence. But it was over the top. That was not jealousy talking. It was simply a matter of medical fact. Eve was an excellent clinician and nurse. But she wasn't the second coming of Florence Nightingale, as the douchebag made her out to be. I began to suspect Doctor Fuckface's motives. He spent a lot of time invading Eve's personal space; leaning over her to read charts and resting his hand on her shoulder while he talked to her. It was subtle; never anything you could call him out on. But it was clear that he was establishing dominance. \n\nFor her part, Eve seemed to like the attention. What woman wouldn't? The guy was rich, good looking and he walked around with that god-like air that the top docs all wrap themselves in. She would even occasionally flirt with him in a safe-for-the-office kind of way. I took it as the normal female response to a guy who clearly found her attractive; especially since I was sitting right there. I never questioned Eve's loyalty. She had been to a lot of places and done a lot of things and she knew what she wanted. She made it clear to everybody around us that she loved me and she would go out of her way to prove the physical bond that we had. She was respectful in our day-to-day life, and she had gone back to being as smart, energetic and sarcastic as she always was.\n\nI couldn't blame the dude for being attracted to Eve. She was almost 37 at that point and she was clearly a cut above every woman in the area in beauty, grace, poise and sophistication. When she passed thirty, she had changed her hairstyle from girl, to woman. Now, she wore a chic bob, swept forward into a pair of pointed wings that framed her gorgeous Swedish face. Only a woman with hair as thick as Eve's could pull that particular look off. She had not lost any bit of her attractive body; only improved it. She had always been slim; words like \"supple\" come to mind. But she had added a bit more of the things that guys really like; rounder butt and bigger boobs. It made her seem voluptuous and frankly very erotic. \n\nDoctor Fuckface didn't miss any of that. I would catch him surreptitiously staring at Eve's ass when she bent over to pick up a file and he would give me a gloating look like, \"What are you going to do about it.\" Since he held all of the legal cards there wasn't much I COULD do about it, short of pulling up stakes and leaving the practice. Of course, I would never do THAT because at that point I was totally bonded to the community. \n\nThe problem was that Doctor Douchebag was getting more-and-more aggressive in his interest in Eve. I don't think he would EVER be able to drive a wedge between us personally. But, with his constant praise of her and his disparagement of me, he was beginning to detach the two of us at work. Specifically, he seemed hell-bent on blowing up our close professional relationship. \n\nDiagnosis is always more an art than a science. So, there would inevitably be the time when Eve and I were on different pages. In the past, we would just talk it through for the good of the patient; our only aim being to do the best we could. NOW, if there was ever a disagreement Doctor Dickhead would turn it into confrontation. Worse, he would make it sound like I was being arbitrary and condescending toward Eve and he would ALWAYS side with her. That was beginning to have an effect. \n\nIn due course Eve started snapping at me over little things. When she did, I would talk to her about it, like I always did, and we would eventually resolve the problem. But the increasingly frequent fire-fights were starting to wear on both of our nerves. Then Doctor Fuckface escalated things. He had been dropping little hints that he thought that I needed more training. I did 100 CME hours in order to keep my Board Certification. But, \"Doctor Williams\" decided that I needed \"specialist\" training.\n\nBoth Eve and I insisted that was unnecessary. But, in his ever-so-arrogant medical opinion, Doctor Asshole convinced the NCCPA that I could really use some, \"brushing-up;\". So the certification people suggested in ominous tones that I do what the doctor ordered. Hence, I was shipped off for a three week, \"Emergency Medicine and Trauma Care,\" course in Kansas City. Eve was wild every night before I left. It was like she was trying to squeeze as much assurance out of the remaining time as she could. \n\nThe trip itself was a waste of time. I had been a Ranger Medic, for almost six years. So, I could have taught the instructors new things about \"Emergency Medicine and Trauma Care.\" The first week, Eve and I talked every time I was able to squeeze-in a break; morning, noon and night. She was bright and cheerful, with a lot of charming incidents from Doris's diner. The conversation got a little shorter on the second week, there were still the anecdotes, but Eve sounded distracted. The final week was upsetting. Eve was actually abrupt when I called. She said that the patient load had picked up and that she didn't have time to talk. I knew what the patient load was. So that excuse didn't make a whole lot of sense. \n\nWhen I got home, Doctor Dickbreath was off in Rochester doing magnificent things. The pressure was gone and it felt like old times. Eve was a crazy woman for a solid week. That happened every time we went to bed. I had seen her needy before. But this was some kind of new record for passion on her part. We talked and laughed and did all of the fun things that make the Wisconsin Dells a perfect playground in the summer. But there was something off with the situation. \n\nI asked Eve what the problem was and she told me that it was nothing. Nonetheless, I could tell that something was bothering her. Doctor Fuckface was extremely condescending when he ultimately decided to grace us with his presence. In fact, he was even haughtier than usual. Eve's reaction was equally weird. Before I left, their relationship had been cordial and professional; maybe even a little bit flirty. Now, Doctor Asshole treated Eve like he had ALWAYS treated me; hyper-critical and patronizing. I also noticed that he put his hands on her more. It was not the sort of touching that would bring a sexual harassment suit. It was just a little bit too possessive for my taste.\n\nSo I did what I have always done in the past. I asked her about it. We were snuggling on the couch watching TV. I thought, \"Now is as good a time as any.\" So I asked Eve directly, 'What is going on between you and Williams?\" It was a simple question expressed in a neutral tone of voice. She stiffened and then said in a slightly too casual voice, \"What makes you think that anything's going on? Exactly what are you asking me?\" Well, I couldn't outright say, \"I was wondering if you were fucking the guy.\" So instead I said, \"I don't know? It just seems a little different between you and him. Is there anything that happened while I was gone that we need to talk about?\" ",
        "She stiffened and said casually, \"Of course not.\" I let it slide but Eve had raised more questions than she had answered. First of all, she was clearly holding something back. More pointedly, I could take Doctor Dickbreath's radical change in behavior a couple of different ways. One option was that Eve had done something to displease the great man. That was the simplest and likeliest explanation. The other was a lot darker. I had the chilling thought that maybe they were putting on an act for me??!! If so, they were doing a very clumsy job of it. \n\nThen, Dr. Fuckface dropped \"The Big One.\" He told us that The State Department had asked Mayo to loan his-august-self to Doctors without Borders. THEY wanted him to set up a Chagas Disease diagnosis and treatment facility, in Chiapas Province, Mexico. I would have cheered his departure, but he ended THAT pronouncement by telling me that he wanted Eve to go with him. \n\nI blew up. I said angrily, \"Why in the world would you ask my wife to accompany you to Mexico?\" There was a bit of a threat in my voice so he scoffed, \"What's the matter, you don't want to help poor migrant workers? I know that you are too ignorant, to understand the big-picture. But your wife has a lot of valuable practice experience in third world countries. In fact, she is the most qualified of any of the nurses on my staff.\" I said angrily, \"But she isn't ON your staff.\" He said, \"She is now, I added her. You DO know that your contract is through Mayo, right? So either she goes or we close this clinic.\" \n\nI couldn't let that happen. I said, \"This is blackmail,\" and I turned to Eve. I said, \"Eve, you don't have to go. Just say the word and I'll walk away. We can start someplace else.\" We all knew that I was bluffing. There was no other clinic within an hour of here. I could see the pain that she was experiencing and it made me even angrier. She was in the same position as I was. She knew that our Golden Boy was making her into his personal slave by holding the \"under the supervision\" clause over our head. It just wasn't right. But that was the way the medical establishment had stacked the deck.\n\nShe said very hesitantly, \"I'll go. It's only a month and we're doing the right thing. I DO have a lot of experience nursing in improvised settings. More importantly, I don't want to jeopardize what we built here, so I will do what Doctor Williams wants.\" She turned to Doctor Dickhead and said, \"If I help you I want your promise that you will stop micromanaging us, let us practice like we did before your arrival.\"\n\nThe glint in the fucker's eyes was pure malevolence. He turned to me and said in a gloating voice, \"I knew you would both eventually see it my way.\" He might as well have said, \"I knew that you would eventually let me fuck your wife.\" I looked at Eve and she was devastated. I had always wondered why she had married the first husband. That guy sounded like a gold-plated, numero-uno, narcissistic asshole; while Eve is as gentle, sweet, kind and nurturing as they come. The problem was that she is TOO nice, TOO polite and she would do ANYTHING to avoid confrontation; as she had just done here. \n\nOf course, MOST medical people would have a hard time saying \"no\" to the opportunity to help the less fortunate. Eve had done that exact same thing for three deployments. Moreover, there was no actual WAR going on in Mexico. She was upset because she would have to leave her husband and her happy home and live rough in a jungle for a few weeks. But the mission itself was humanitarian and I could cover our caseload by myself. So theoretically, Doctor Douchebag's request was a very reasonable and possibly ADMIRABLE hardship. \n\nNevertheless, everybody in the room knew the REAL reason why he wanted Eve to come along. It was to get her by herself, so he could put on the full-court press. I almost said that, out loud. Unlike Eve, I have absolutely no problem with confrontation. But I knew that a pitched battle would humiliate her. No woman wants her husband questioning her fidelity and that is what I would be doing if I made a Federal case about her being alone with Doctor Douchebreath. So instead I said, \"I want your assurance that Eve will be safe!!\" He sneered and said, \"Don't you worry about THAT. I'll take VERY good care of her.\" The implications of THAT were almost too much to bear. But in the end, I had to trust my wife and so the deal was done. \n\nShe tried to kill me the weekend before she left. That behavior wouldn't be strange in-and-of-itself, but the crying afterward was something that drew my interest. I said with concern, \"What's the matter Eve? Why are you so upset?\" She said through her tears, \"I love you SO much. I just can't bear being apart from you. Do you love ME?\" Now THAT was a loaded question. I said with real emotion, \"Of course I love you. You are the only person I have ever REALLY loved. I have loved being married to you and I will love you forever.\" That got a shamefaced smile. She said, \"Sometimes I just can't cope with my feelings.\" \n\nShe was flying out on a private jet supplied by the State Department. It was with the entire medical team. They were leaving from Rochester International Airport and flying directly to Palenque International Airport, with a necessary refueling stop in-between. We held hands as I drove her the two and a half hours to the airport, fingers intertwined. Eve spent four years as a Marine Combat Nurse; she is tough and she is used to deployments. But she looked miserable. \n\nThe jet was an Army C-37B, which is called the Gulfstream G550 in civilian use. I thought, \"Nothing but the best for Doctor Dickface.\" I watched the entire team board; 17 people, support staff, other nurses, Eve and the Asshole himself. Eve gave me one last anguished look as she boarded. Then they rolled out and disappeared into the grey overcast. It was hard to see through my tears.\n\nMeanwhile, I had a clinic to run and patients to tend to. Considerations like duty mean everything to me. Eve called later that evening. She was at the lodgings that they had set up outside of Palenque at the Technical University. She said that she was living in a dorm room. But the University itself was a surprisingly NICE place, amazingly modern. We talked for a long while; she was in a mood to reminisce about all of the good times. I called her again on Monday night. She said that the first day was mainly meetings. She said that she was bored and desperately lonely. I sympathized with her, since that summed up my situation in Kansas City to a \"T.\" \n\nShe said that, tomorrow the administrative team was going to scout a couple of locations for a clinic. She said that it was just her, as senior nurse, Dr. Dickbreath, the State Department rep and three of the nursing staff. They had a few places in mind. All of them were in the desperately poor and overcrowded part of the City. She said, \"Don't worry; I'll never be alone with him.\" Bless her; she knew exactly what I was thinking. \n\nI called her on Tuesday and there was no answer. I tried her cell all day. There was still no answer. Tuesday morphed into a Wednesday without sleep. I must have called a million times. Her phone seemed to be off. I have no idea how I was able to work that day. But doing rewarding things can get you through a lot of anxiety. Even so, the waiting was getting excruciating. So, I made up my mind to head for Rochester. \n\nI called the receptionist and told her to tell tomorrow's patients that I had an unavoidable emergency and to reschedule. Just as I was grabbing my coat I heard a knock on the door. I opened it to find Doris on the porch. I said, \"Doris, good to see you. But I have to go.\" She stiff armed me back into the house. That was so unexpected that I said with irritation, \"I really need to get going Doris.\" She looked at me grimly and said, \"You'll listen to me if you value your wife and my only child.\" \n\nI could feel the walls closing in. I walked over to a chair, sat down to get my equilibrium back, took a deep breath and said, \"Tell me everything. Don't hold anything back.\" Doris is from Viking stock and you could see her heritage in the blood and mayhem look that she gave me. She said, \"You have probably guessed that Eve has been having trouble with Dr. Williams.\" So it was true. I nodded my head in agreement. Doris said with fury in her voice, \"He was harassing her every minute you were gone; getting way too personal with her, pawing at her, and making suggestive comments. She tried to avoid him. But he got increasingly brazen, until he actually attacked her in one of the examination rooms.\" \n\nI must have looked horrified, because Doris hastily added, \"She got away from him and ran to me. I came back to the clinic and cornered the varmint. He was very conceited. acted like feeling-up the nurses was a doctor's right. I told him in no uncertain terms what the people of this town would do to him if I said ONE word about what he had just done to Eve.\" \n\nI thought to myself, \"That explains Eve's strange behavior. It also explains why she didn't tell me. She knew that I would have killed the fucker, consequences be damned.\" Then it hit me. It ALSO confirmed Dr. Douchebag's sudden interest in helping the people of Mexico. He wanted to get Eve away from her support system. \n\nMy anxiety level spiked. Doris gave me the same basilisk look that she uses to freeze unruly customers and said with emphasis, \"That is not why I'm here. Eve made me her emergency contact.\" I looked stunned. I said, \"Why YOU and not ME?\" Doris said with affection, \"She didn't want to add to your worries. She was going away with Dr. Williams. That was bad enough. She didn't want to make things worse by implying that the area was so dangerous that she needed an emergency contact. She knew that I would tell you if anything happened.\"\n\nThen she added with her self-control starting to slip, \"THEY just called me and told me that Eve's vehicle had been found abandoned near one of the archaeological sites. Her group had been working in the bad part of town and it was presumed that they were kidnapped.\" I knew that kidnapping was not a totally unheard of occupation for certain elements down there. Then Doris added grimly, \"The government rep said that they were negotiating with the Mexican authorities to get them back safely.\" \n\nI was flabbergasted. My Eve, the love of my life, had been abducted by a gang of Mexican thugs and the people who put her in that situation wanted to NEGOTIATE???!! Every second that my wife was in the clutches of those animals was one second too long. Some people might head to church to pray. But, Rangers lead the way. So, I knew what I had to do; and it never crossed my mind to do otherwise.\n\nMy decision to go down there and settle things myself, was not as idiotic and self-serving as it might sound. Hostage rescue is in my skill-set and this wouldn't be my first time to the rodeo, or even my fifth. It was just that; we always worked as a team before. This time the planning and execution would all be on me. I said, \"Don't worry Doris. I'm going to get her back. Just tell the patients that the clinic is closed for the duration and I'll take care of the rest.\" \n\nThe flight out of O'Hare was at 5:45 AM. It went to Killeen Texas. That gave me time to make the necessary calls. You might wonder why I was flying to Killeen rather than directly to Palenque. Well, it was going to take me almost 20 hours to get to Palenque by air, with all of the connections and lay-overs. I didn't have a fancy private jet at my disposal like Dr. Douchebag did. At the same time, I could drive from Killeen to Palenque in about 24 hours. Of course, that wasn't the real reason why I was driving. I had to stop and pick up a few essential items in Killeen first.\n\nFort Hood is the home of the 4th Infantry Division and a number of my battle buddies were embedded with that ID. So, I had two of the brotherhood waiting for me as I walked out of security into a cloudless Texas morning. They had been busy while I was traveling. We shook hands. But we wasted no time. They escorted me briskly to a Ford Explorer, which was idling by the curb. The driver hopped out, we also shook hands and I drove off down U.S. 281 headed for McAllen and the Rio Grande. \n\nI hit McAllen at 1:00 PM. The border inspection was perfunctory. I certainly didn't look suspicious. I looked military; with an obvious high-and-tight. They gave the car the quick once over and used the mirrors. Then they waved me through. Everything I needed was strapped to the frame of the car; unrecognizable for what it was. I would assemble it when I got to my destination. The rest of the stuff looked like the sort of camera gear a tourist would carry. \n\nThe trip down the east coast of Mexico was at desperate speeds. So, it actually took less than 20 hours. Doris was feeding me information all the way down. Two of the people who were with Eve had been left at the kidnapping site to convey the ransom demand. None of the residents of that part of town had seen anything. That was to be expected. The groups who perpetrate those kinds of crimes can get very up-close-and-brutal with people who see things. \n\nThe members of Eve's party said that they thought that it was a local bandit gang, not a cartel, or guerilla group. But they had no idea where they were headed. Eve's abandoned vehicle was found at the archaeological site. So I decided to start there. I arrived at its parking lot at 4:00 PM on Friday. I walked 300 yards down a long tree lined trail to the site itself. The heat was brutal and the jungle around me was alive with movement and sounds. The racket of the monkeys and birds was like something out of a Tarzan movie.\n\nThe site itself was your classic UNESCO tourist attraction; with very well maintained Mayan ruins. It was situated on a higher elevation than the surrounding jungle which was fortunate, because I saw one of those traditional Mayan stair-step temples to my right. The field of vision at its top would let me see over the jungle for miles. \n\nI had assumed all along that the kidnappers would walk into the jungle from the place where they had abandoned the car. That's why I had brought a FLIR T1020 Forward Looking Infrared system. If there was any heat source in the surrounding jungle I would see it from the top of that pyramid. I also had a pair of military grade, Armasight N-15, third gen night vision goggles. Those would let me navigate to whatever I saw. It would be \"High-Noon\" with those goggles on; and as far as I was concerned the analogy was appropriate. \n\nMy final special piece of equipment was a Barrett M107A1 with a Leupold Mark 8 M5B2 Tactical Scope and a suppressor. Only the government has access to that kind of gear. My friends had \"loaned\" it to me for the duration. I can put three 661 grain, fifty-caliber rounds inside the space of your hand from a quarter mile away; and our best snipers thought that I was a bad shot. They could do the same thing from over a mile. The field-stripped parts of the M107 were what had been strapped under the SUV. Otherwise, I was pretty sure I would raise some suspicion if I had tried to enter Mexico with an almost five-foot-long sniper rifle in the back seat. \n\nOf course I was not supposed to be anywhere close to the archaeological site after dark. So I booked a room at Margarita and Ed's Cabanas. I expected a third-world hot-pillow joint. But what I got were quaint little individual huts stuck in among the rainforest trees. There was the usual complement of small lizards, but no bed bugs, and it was a LOT better and more modern than I had expected. Of greater importance, was the fact that I managed to secure the end unit. So I wouldn't have to climb out the bathroom window in order to slip into the jungle. \n\nEverything had to be dark and deserted before I could start my journey. I had only had about four hours of sleep in the prior 40 hours and in the Rangers you learn to sleep when you get the chance. So I set the alarm for eleven-thirty and got four more. Midnight found me rested and moving with all of my gear, headed southwest through the jungle. I was aiming toward the ruins. It was literally like broad daylight; with the goggles on. So the going was relatively easy if you discounted all of the rainforest shit, including one very large and scary looking snake. \n\nThe archaeological site itself had been cleared. So, in order to stay hidden I had to work my way completely around it. There would be no cover while I was climbing to the top of the pyramid. But once I got up there I could flatten out. I checked the immediate vicinity with the FLIR. It showed nothing, not even a guard. So I shinnied up the narrow steps of the \"Temple of Inscriptions\" and found a spot on top where I could observe. \n\nI had expected to have to stand watch all night and maybe for several nights to come. But the moment I turned on the FLIR I saw a big hot spot on a volcanic mountain about ten miles to the west. It lit up the FLIR like they were holding a Cinque de Mayo celebration. The small fire and the bodies were generating a lot of heat. So it was obviously a camp even if it was totally invisible to the naked eye. I thought to myself, \"Really!!??? Those guys are clearly NOT criminal masterminds.\" Of course it was black as night, and infra-red detection might not be something a Cholo would know about. \n\nIt might have been my target, or maybe it wasn't. I didn't know at that point. It was 23:30 and I had perhaps seven hours before sunrise so I decided to work my way over to that camp; just to see what I could see. In the years that I had been out of the Rangers I had never lost my physical edge. So the ten miles took me a little over two-and-a-half-hours. I had to move up-slope. But when I got there, I found crags and prominences located above my target. I poked around until I discovered an ideal place for a sniper's nest. The FLIR showed a dozen heat sources. Four of them were indistinct, in some kind of makeshift tin hut. The other eight heat sources were distributed around a small clearing in front of the hut. It looked like most of them were asleep. \n\nThey had a fire going, which threw a halo that obscured part of the infrared picture. I was still a quarter mile away and even with the excellent resolution of my night vision goggles, it was impossible to confirm whether those were the guys. It was important to confirm that these were the cocksuckers who were holding Eve. Because if they were, I was going to make them ALL dead. \n\nI left the FLIR and the Barrett on the tip of the promontory and worked my way the last quarter mile to the vicinity of my targets. I was wearing a black, skin-tight, light absorbent tac-suit made out of ballistic nylon; with a balaclava. I would be invisible in the dark, unless somebody was standing right next to me. I was carrying a KA-BAR and an M9 Barretta. Those had been my standard side-arms in the Rangers and I was comfortable with them. \n\nWhen I got to the camp I saw that a couple of the vaqueros were awake, serving as guards. They were smoking and talking. As I worked my way around the clearing, I heard one say something to the other. They both laughed loudly. Then the guy who had done the talking got up and wandered into the hut. There was a commotion and then a scream, a slap, and then shortly thereafter the loud \"Uh! Uh! Uh!!\" grunts of a woman being royally fucked. It was an ugly noise but it verified what I had suspected; THESE WERE THE GUYS. I just hoped that it I wasn't hearing Eve. A couple of the others were awakened by the sex noises coming from the hut. They rose slowly and sauntered in to get in line. \n\nMeanwhile, I was moving as fast as I could up to my sniper nest. I had to take a second to calm myself when I got there. The thought of my angel being raped by some filthy thug had my heart-rate way above what it would take to make the shot; even at the relatively easy distance of 400 yards. I took a number of cleansing breaths and silently focused the cross-hairs of the Barrett's Universal Night Sight on the guy sleeping the furthest away from the fire. A bullet strike from a Barrett is not insignificant. So I planned to kill the guy who was least visible, then work my way in to the one sleeping closest to the fire. ",
        "I hear you ask, why didn't I just go in with guns blazing? The answer is that I am smart and Ranger disciplined. They had AK47s. So tactically, the odds were on the side of eight shitheads with automatic weapons, not one guy with 15 rounds in a short range pistol. More importantly, I was Eve's last hope. If they killed me they would bury ALL of our bodies in a rain-forest pit; after Eve had undergone hours of unspeakable horror. I wanted to be laid to rest next to my wife, but not THAT way. So, I had to even the odds as much as possible. \n\nIn fact, if I was lucky, and if THEY were stupid enough, I might be able to end the game right then and there. But first, I had to master the devil inside me. I had to convince myself that what I was doing was justice. I was a soldier. I had killed plenty of times. But those were all in the heat of combat. It is never easy. But it is something you could do for the right reasons. On the other hand, it takes steady nerves to shoot a sleeping person. There is no honor. There isn't any bravery. It's an execution plain and simple. \n\nI told myself that I was merely eliminating the barriers between me and my beloved and I had zero sympathy for my targets. it was THEIR actions that had brought death to their doorstep. I was nothing more than the agent; there to enact the inevitable price. Above and beyond that though, I was especially hardened to killing THESE men. Since, I was sure that one of them had already raped my wife. \n\nThe suppressor dampened the shot. The only sign that my target had passed on to that great Fiesta in the sky was the sudden jerking motion that he made as the 50-caliber bullet hit him in the side. I pivoted to the next guy, who was just starting to wake up from the rather loud \"THUMP\" of impact. It must have sounded like somebody had dropped a heavy log on the ground next to him. \n\nI was aiming for their bodies. Heads are hard to hit and I didn't want any splatter. But more importantly; a fifty caliber slug will seriously mess you up. The bullet is three times the size of the high velocity 5.56-millimeter round that the M4 fires and they arrive at close to the same muzzle velocity. So, there was no need to be concerned about only wounding the fuckers. If you hit a person in the chest area with a 50-cal, they'll die from sheer hydrostatic shock no matter WHERE you actually hit them. \n\nBetter yet, the bullet will continue on into the ground. So, they would still look peaceful, lying there in the dark after the strike. I systematically dispatched four of them that way, silently and without remorse. The guard was next. His death was going to alert the rest, because he was standing in front of the door watching the action and laughing. \n\nAll hell broke loose when I pumped a round between his shoulder blades. The hit more-or-less spattered everybody in the hut, which alerted the vaqueros inside to their peril. But, it was pitch dark and totally confusing without night vision. The two guys who were watching the show were stupid enough to come charging out AKs at the ready. \n\nThe genius on my right died the same way as his friends. This time it was center mass. The other ducked back behind the wall next to the door. From 400 yards, a high-velocity, fifty caliber bullet will go through tin like it wasn't there; for what it's worth, it will also do the same thing to wood, or plaster. The FLIR showed my target standing back to the wall, right next to the door peeking out the opening. So I aimed and fired at the wall. The FLIR registered a heap of slowly cooling flesh on the floor. \n\nThe last guy grabbed the woman he was raping and he dragged her out the door. She was screaming and pleading. He stood there in the open, buck-naked from the waist down, holding a gun to her head. Seriously??!! He must have been at the back of the line when they handed out brains. Seven of his compadres had just died at the hands of an invisible killer, and this moron was standing there in the open waving a gun???!! I was doing humanity a favor by taking him out of the gene-pool\n\nMost of him was shielded by the woman, who thank God, was not Eve. I don't like head shots. They are lower percentage even from such a short distance. Worse, I had no idea if there was anything behind him if I missed. But I had to take the shot. So I slowed my breathing and heart rate and literally blew his head off. There was a lot of screaming coming from inside the hut as I approached. My heart broke at the thought that my precious angel was one of them. \n\nI was still in the skintight tac-suit with my balaclava and my night vision goggles on. As I walked through the door the four frightened people must have thought that they were being invaded by Martians. Eve was tied up next to the wall, screaming and crying like the rest of them. But she was ALIVE. I could see them all very clearly; whereas all they could see was a ghostly shadow. My first thought was to run over and take Eve in my arms but I wanted to give her a second to calm down. So I stood right next to her and said in the gentlest and most soothing tones I could muster, \"It's all right Baby. The bad guys are dead.\" \n\nThere was a pregnant pause and Eve looked at me with wonder on her face. She said in a pathetically hopeful voice, \"Jonathon?\" I said, \"Yes my love, I'm here to take you home.\" I have served with a lot of tough-guys in my time in the Army. But, my Viking Shieldmaiden of a wife prove to me that she was the toughest person I knew. She had been kidnapped, probably raped and certainly abused. But that didn't stop her from saying, in an amazingly calm and ironic tone of voice, \"What took you so long???\" I laughed. That was the way we always teased each other; and given the situation, it was an incredibly brave and intimate gesture. \n\nThere were three women and one man. The man was Dr. Dickbreath. The woman who was being raped was one of the younger nurses; a pretty little thing who was reduced to a blubbering sham of humanity; lying naked in front of the cabin. The other woman was also young and quite lovely. The eight departed Mexican goons had obviously been stocking up for a party. I regretted their grisly demise even less.\n\nI cut Eve's restraints with the KA-BAR and whispered, \"Let's go outside.\" I didn't really need to whisper. Because Dr. Douchebag was making an incredible racket, crying, screaming and begging for mercy. I understood that he was in fear of his life. But it was a particularly unmanly display of groveling. I almost went over to him to gloat. But I knew that I had to disappear without a trace. \n\nI helped Eve to her feet. She was in a lot of pain. Part of it was simply from being tied up for a long period of time. I didn't want to even think about what the other reason might be. I had to lead her out of the hut because she couldn't see anything. Being blindly led in the pitch black might have been frightening for a normal person. But my wife was as trustingly courageous as she was beautiful. \n\nWhen I got her outside in the firelight I took off the balaclava and goggles. She threw her arms around my neck, plastered herself to me and began just wailing, \"Oh my God Jonathon, how did you find us? Where are the people who were holding us!!???\" Her body was quivering with the onset of shock. I said with considerable satisfaction, \"They have been permanently removed from the equation. Now I need you to be brave for a little while longer, or I am going to be in deep trouble.\" That quickly brought her back to something resembling her former self. \n\nShe was filthy, her golden hair was matted, and she was wearing her normal pair of hiking shorts and her boots. But her blouse had been torn almost completely off her and she was not wearing a bra, so her big gorgeous, breasts were hanging out. I didn't want to speculate about why that was; or I would have had to cut EACH of their cocks off, and stuffed them down their dead throats. \n\nI said, \"I've just executed eight Mexicans. Granted it was to save four American lives. But I am a private citizen; and the authorities are going to view my actions as vigilante justice. So nobody can find out who did this. I am going to leave you the knife and my gun;\" I unholstered the M9 and handed it to her butt first. It had been made anonymous before I picked it up and Eve is very handy with a pistol. Then I added, \"You are going to have to get the other three out of here. There is a little farm road about a mile and a half in that direction.\" I pointed east. My voice started shaking with emotion as I said. \"I know that you can do it my brave wife.\"\n\nI finished with all of the love and anxiety I had felt over the past 72 hours, \"I love you my angel and when I see you next it will be in our happy home. But the sun is coming up soon and I have a long walk.\" I clutched her to me and we kissed with a passion that was driven by what we had undergone. We would talk about the experience in another time and place. I knew that this dauntless woman wouldn't let us down.\n\nWhen full daylight arrived, I was still in the rainforest. I had made it past the archeological site but I was still about a half mile from the resort. I might have aroused a bit of suspicion if somebody spotted me strolling along dressed in black tactical gear, carrying a sniper rifle; with a backpack full of 21st Century battlefield electronics. So I was taking my time and being very careful to stay hidden.\n\nI slipped furtively into my hut as the residents were making their way to breakfast. I emerged to join them, 15 minutes later. I was dressed in plaid Bermuda shorts and a garish aloha shirt with a cheap Panama hat. I wanted to look like the biggest gomer in the entire State of Chiapas. I certainly didn't want somebody connecting me with any deadly night-stalker, who might have been operating in the vicinity. After breakfast, I loudly informed everybody that I was going to. \"Look at all of that old shit up there on the hill.\" My aim was to give the impression that I was obnoxiously clueless. \n\nThe news travels fast in Mexico; almost like it does in a Wisconsin small town. It was all over the archaeological site when I arrived; everybody from the old ladies selling souvenirs to the guides were talking about it. It seems that a farmer was making his way along a back-road toward El Naranjo when he came upon a bedraggled group of exhausted and filthy Americans. They told him a fantastic story about how their captors had all been killed by an alien creature with strange buggy eyes. \n\nThe locals didn't know how one entity could so easily kill eight tough hombres. So, they were willing to buy the rumor of an alien invasion. They said that the leader of the group of captives was a resolute American woman armed with a knife and a gun. She said that she had picked those weapons up from one of their dead captors. I thought, \"Good girl Eve!!\" \n\nThe four captives were being prepped for transport to Bethesda, just for precautionary reasons. The women had all been raped, and the man had broken ribs, a slight skull fracture and his testicles were severely damaged in a beating. The State Department was debriefing them. But none of them saw anything except the alien. Naturally, that story was immediately discounted by the authorities. But they STILL didn't have a better explanation. \n\nIt was sensational news because the captives were all part of a humanitarian medical team. The government of Mexico disavowed the actions of \"a few rogue citizens.\" The U.S. government was \"reviewing all of its policies with respect to humanitarian aid.\" In short, it was the usual ass-covering, bureaucratic cluster-fuck, signifying nothing. \n\nI took a leisurely drive back to Killeen. A few additional things were strapped under my Explorer. I handed my brothers the keys. We shook hands and I hopped a flight back to O'Hare. I picked up my car at the long-stay lot and I was back treating patients at the clinic on Monday morning. It had been a short and restful four-day vacation. At least that was my story and I was sticking to it. \n\nMeanwhile, Doris was with Eve in Bethesda. I didn't visit during the time that she was there. The need to run our clinic was my excuse. Both women knew the real reason. I couldn't call attention to myself. If the press EVER found out that I was a former Ranger, they might dig a bit deeper and find eight bodies. I obviously couldn't allow that. The doctors at Bethesda discovered that Eve was in amazing good health, both physically and mentally. I didn't find that remotely astonishing. Eve has always been a very strong woman; capable of making and enforcing intelligent decisions about her life. \n\nFrom time to time shit will happen. The true measure of a person's mettle is what happens NEXT. Rape is a violation of a woman's soul. Thus, the worst outcome of rape can be the total destruction of her psyche. I knew that my Eve would NOT let the actions of those eight lowlife mother-fuckers do that to her. It wasn't like she was in denial. She knew EXACTLY what had been done to her. She just had too much inner strength and spiritual integrity to let it dictate anything that happened going forward. Instead, she made a conscious life-decision to press-on with undaunted courage. \n\nI was waiting for her in our peaceful house when she got back to Wisconsin. The last time I had seen her, she was frightened, starved and violated. The woman in front of me, had walked through her personal Valley of Death and emerged on the other side steadfast and triumphant. I have known guys who endured similar violence; firefights, or shellings, or IEDs and they always have that haunted look. Eve had none of that. She had suffered far worse. But she looked composed, at peace and radiantly beautiful. Her level of valor was worthy of a medal.\n\nShe closed the door, and leaned back against it. She looked around like she was savoring a safe harbor after an exceptionally violent storm. I just stood there while she got her emotions under control. Then she rushed to me, threw her arms around me and hugged me like she would never let me go. I looked down at that tear stained face and we kissed for the first time since our moment in the middle of all that misery. The kiss lasted a long time. I said, \"Welcome home my love.\" She said, \"Oh God Jonathon!! I never thought I would see you again!!\" Then she dragged me down to an even longer kiss.\n\nI wanted to fuck her so badly that my teeth hurt. But I was intentionally holding back; thinking about what she had endured. Of course she read my mind. She said from down there in the vicinity of my chest, \"Did killing those men change you?\" I laughed and said, \"Those weren't men. They were rabid animals. Knowing what they probably did to you I actually relished every second of it.\" \n\nShe said, with wisdom in every syllable, \"I feel exactly the same way. As far as I'm concerned, our love is still pure and untouched. Whatever they did to my body; they never touched me. I was fortified within myself by my love for you and our life together. Every second of that hideous time, I was sheltered behind the adamantine walls of that commitment. I would NEVER let those vile creatures stain the soul that I gave to you.\" \n\nI looked into her incredible ice blue eyes. They were looking back at me with profound hunger. I actually said it out loud, \"Are you sure about this??\" She said with loving irony in her voice, \"I have never been surer of anything in my life. I need to burn that experience out of me, and you are the only person who can do that. So let's get on with the therapy!!\"\n\nShe wasn't kidding. The minute we reached our bedroom she just shucked the dress, stepped out of her panties and unsnapped her bra; all of this as she was heading for the bed. At age 38, she was in her prime. She had always been lithe and willowy, with a particularly supple round ass. That ass was swaying bewitchingly as she walked. Her gorgeous back was flawlessly muscled. \n\nShe turned and faced me and presented herself, a confident, womanly little smile on her face. She knew how striking she was. Her figure was like an anatomical diagram labeled \"female\"; with her long waist and taut round hips, her extra-long and beautifully proportioned legs and those gorgeous plump tits with their big pink nipples pointing at me like little fingers. I stood there in shock, as I always do when I see her that way. She was far too beautiful for a small town guy like me. But she was mine and I was never going to let her go.\n\nI gave a growl of admiration, marched over and took her in my arms, fully clothed. We kissed passionately again. Then she leaned back and said, \"Aren't you forgetting something?\" She gave a pointed look at me standing there in shirt and khakis. She said with a smirk, \"You had better take care of that problem fast or I am going to start the festivities without you.\"\n\nApproximately three seconds later, I was taking her in my arms as we lay naked in our bed. She melted into me with a little moan of satisfaction. It was like she was immersing herself in a healing bath. I slowly stroked her round jutting hip and flanks as she almost purred with pleasure. This was going to be a classic, husband and wife fuck, no tricks, nothing to remind her of the brutality that she had just endured. It would be gentle and loving and slow. \n\nAt least that was the CONCEPT. But Eve had other ideas. We kissed lovingly again and I had just started to lay her gently back on the bed, when she gave a strangled cry, sat straight up, turned and slammed me on my back. Then she swung one of those gleaming thighs over me and seated herself with a loud groan. I am ashamed to admit that I took a second to evaluate whether she felt the same as before. I quickly found that she was just as tight, wet and hot as she had always been. \n\nShe gave a god-awful cry of need and began pumping her hips at speeds that were practically supersonic. She wasn't kidding. She was obviously boiling the whole experience out of her soul with this act. As she started her back-and-forth motion she threw her head back and just shouted her desire to the beautiful Wisconsin countryside. \n\nThe pistoning of her hips was getting me there a lot faster than I wanted to go. Then she made it worse by leaning down and dangling one of those perfect orbs in my face; never stopping the up-and-down motion. I fastened my lips on one of her big hot nipples and she absolutely exploded. She said in a very loud voice, \"Ahhhh!! Cumming, Cumming, OH MY GOD I'M CUMMING!!\" and she flopped down flat on me while her hips went into overdrive. \n\nI threw my arms around her upper body as she writhed and shrieked with sheer emotion. When she had worked through that monster orgasm, I picked her up and flipped her over on HER back, still rigid as titanium inside her. She said in delighted tones, \"Again?!!\" I didn't answer her. I dragged her knees up around her shoulders and began to absolutely pound her. \n\nAs I worked myself up to a life extinguishing orgasm, the wet slapping sounds were like pistol shots. But she beat me to it. She started grunting, \"Uh, Uh, Uh\" in machine-gun fashion. Her hips started moving around disjointedly and then she began to make \"Unghhhh!!\" noises that seemed to come from the very pit of her soul. You could call it an orgasm. But it sounded more like she was being punched in the gut. \n\nThe contractions were so powerful that her passage was gripping me like we were welded together. \n\nTHAT sensation made me cum like the Midnight Express. It felt like the entire universe contracted to the original point of light that formed the big bang and then disturbing and mysterious things began to happen in my reproductive system. I must have pumped every sperm cell in my body into her. She had been shrieking all the time about me \"filling her up\" and then she suddenly went limp. She holds her breath when she cums and she had been cumming almost continuously for several minutes. ",
        "When I recovered enough sanity to think about her, I found her lying there limply, breathing gently. I looked into that beautiful Swedish face, with its exquisite high cheekbones, her perfect Scandinavian nose and those incredible full sculptured lips. It was the most insanely beautiful sight I had ever seen. Then she popped one eye open and surveyed me. It was like a Karelian Lake, deep blue and bottomless. She said, with a profound sense of emotion, \"Thank you my dearest. Our love was the only reason I survived this.\"\n\nWe made love all weekend. I had told Eve that I was ready to talk about anything she wanted to talk about. But, she said that there was nothing to say. As far as she was concerned the whole dreadful thing was something that had happened in a universe long ago and far away. She was where she belonged now, where she always wanted to be, and that was all she cared about. Doris showed up with the normal Sunday feast and we spent the entire Sunday wrapped in a blanket of familial contentment.\n\nAs we were going to bed, I said, \"Your mother told me about your problems with Williams.\" She looked grim and said, \"I am going to take care of that bright and early tomorrow. He never really touched me. But, if I have my way that over-entitled bag of shit will never practice medicine again.\" I said meekly, \"You should have told me.\" She looked genuinely disbelieving and said, \"And WHAT??? Have you kill him??? I love you way too much to get you locked up for the rest of your life. And I knew that was exactly what would happen if I told you.\" She was right. It would NOT have been a pretty sight. \n\nThen she turned serious and said, \"When he dropped this trip on us I was gathering evidence to support my sexual harassment complaint. I knew that he was just trying to get me alone so he could work on me. The conceited prick really thinks that every woman he meets wants to fuck him.\" She laughed mockingly and added, \"Like THAT was ever going to happen. He didn't even GUESS that my phone's recorder was on all the time he was propositioning me.\" Wow!! I would have sent a \"Thank You\" note to the guys who had administered the fucker's systematic and brutal beating. But, unregrettably they were all dead. \n\nThen she smiled wickedly and said, \"The fact that I ended up in harm's way thanks to his shenanigans is just the eye of the whole shitstorm. I am not going to simply file a complaint. I am ALSO going to sue Mayo for negligence, for letting a horn-dog like him supervise ANY woman. When I am done I can guarantee that our life will be like it was before HE came into it.\" I made a mental note to never mess with my loving wife. She is slightly more ferocious than a mama grizzly, at least where the people she loves are concerned. In fact, she was a whole a lot like her mother Doris.\n\nI turned off the light and we lay under the covers spooned together, just the two of us. I had my arm around her supple waist and she snuggled her two sexy little buns into me. Of course THAT raised my interest. She said drowsily, \"Again?\" I said, \"Again!\" And we spent the night making sweet satisfying love in our tranquil little house in a happy little town in Wisconsin. \n\nEpilogue\n\nMayo was so eager to settle Eve's complaint that they actually sent a platoon of high-powered suits to negotiate the terms. They knew how exposed they were. Apparently Doctor Douchebag had a record of those kind of incidents in Rochester, which is why they had shipped him to the wilds of Wisconsin in the first place. \n\nThe fact that Eve had recorded evidence of being harassed at the clinic was bad. But she also had proof that she had been exposed to assault, rape and potential death as a result of Doctor Dickhead's scheming. That had them desperate to make it all go away. So, they offered millions. We turned them down flat. All we wanted was to have our simple life back. So we settled for their iron-clad commitment to guarantee our professional independence, within the MINIMUM requirements of the law. Then, we went back to the practice of primary care medicine.\n\nNeedless to say, the AMA was not pleased with Dr. Dickhead. It takes a lot to get a license revoked but they took the process as far as they could. They also made it clear that any further missteps would guarantee that he would be practicing medicine in some place like Uruguay; because he wouldn't have a license in the U.S. Of course, Mayo fired him. They also made it a point to publicize their problems with him to the medical community. The last anybody heard he was working in a clinic; in Nome, Alaska. He didn't worry about freezing his dick off up there. The Mexicans had taken care of that!! \n\nSeven months wore on. Every day was full of love and satisfying work. Then in January of her 39th year, Eve announced that she was pregnant. She was ecstatic. I reminded her about what the doctors had told us. She said that during the gynecological tests the doctors at Bethesda had diagnosed the cervical insufficiency and they had fixed it with some micro-surgical sutures. Eve told me that their chief worry was that the repair would prevent her from becoming pregnant. But since she already WAS pregnant, that was a moot point. We could expect a happy event in six months. \n\nEve wanted the baby so badly that she spent the last two months in bed. The entire town was following the events of those final weeks closer than they followed the happenings at Lambeau field; which should give you an idea how important the birth was to all those good-hearted people. Doris was omnipresent, feeding, coaching, and fluffing Eve's pillows. We were close enough to the natural delivery date that the doctors in Madison decided to induce. A parade of cars followed us down US 90 to the University of Wisconsin Hospital the night before. The whole town wanted to be present when the happy event occurred.\n\nI was with Eve through the entire birth. She might be 39. But she has the strength and vigor of a much younger woman. Little Brooklyn entered the world at 2:19 PM on a gorgeous October day. The sun outside was literally bathing the delivery room in a golden light. It felt like the only thing missing were the celestial trumpets. \n\nBrookie was loudly complaining about her treatment as they placed her on the table to clean her up. So, I wandered over to talk to her. I said, \"I want to introduce myself, my little love-lump. I'm your daddy and your lifetime happiness is going to be my obsession.\" My little angel stopped caterwauling and focused her bright blue eyes on me; it was an eerily normal look for somebody who had been on this earth for a mere five minutes. \n\nThen she reached for the finger that I was extending toward her. She took it in her tiny hand, held it and quietly stared at me. She might have recognized my voice from all of the time that I had spent talking to her in the womb, or it might have just been reflex. Nonetheless, that simple act cemented a bond between me, my wife and my child that only a husband and father would understand. I knew then and there, that it was all worthwhile. \n\n*****\n\nAUTHOR'S END NOTE \n\nI know I said that I was done posting stuff until my latest book was finished. But technical writing is a lot like what the Coast Guard icebreakers do out here on the Great Lakes. You ram ahead for a depressingly short distance and then you back off and repeat the process. That will go on for the next six months. So, maybe you can see why I am compelled to sneak in a story once in a while, just to keep from gnawing my foot off. Then again, maybe I'm just an addict. I wonder if they have meetings for that sort of problem? \"Hello, my name is DT and I'm a writer!!\""
    ],
    "authorname": "dtiverson",
    "tags": [
        "true love",
        "small town life",
        "revenge",
        "beautiful wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-clean-well-lighted-place-1"
}