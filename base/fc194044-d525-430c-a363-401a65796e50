{
    "title": "Finding Home Pt. 05",
    "pages": [
        "Author's Note:\n\nThis is the final part of Finding Home. Lacey and Noah are spread thin after a difficult year. When the turmoil becomes too much, they have to make a choice: risk everything, or run away again.\n\nWhile Finding Home can be enjoyed on its own, it is a sequel to the original story, Runaway, and its epilogue Waking Up. The story will be posted in five parts, each containing multiple chapters. Driven mainly by plot, you can expect a number of erotic scenes, romance, drama, and Canadianisms.\n\n**\n\n<center>Chapter Thirty-One</center>\n\nI was very thankful for Advil the next day.\n\nDespite Rick's highly specific plan of it being a \"whatever\" day, and the desire for me to use that \"whatever\" to lie in bed and avoid the light, I was pulled out of bed at 8 AM by a panicked phone call from Sean speaking without taking a pause to punctuate.\n\n\"Theo was supposed to go with us to pick up the decorations but Rick's parents' flight was delayed and they lost their car rental and he's going to Calgary to pick them up can you please come help me I'm going to lose my fucking mind.\" \n\n\"I'll be there in five minutes.\" I hung up and winced, trying not to groan.\n\nBy the time we were in my car to deal with the first of many last-minute errands, the Advil had kicked in and I was able to look at the road without squinting. Sean panicked the entire ride, panicked on the way back, and panicked when we got to the hall the rehearsal was to be held in.\n\n\"Absolutely not,\" he told the hotel's wedding coordinator. \"We said it needs to be wheelchair-accessible. I don't know what kind of wheelchair you think can go up steps, but that's not the kind we have.\" \n\n\"It is just for the rehearsal,\" the coordinator said. \"You'll be in the actual venue tomorrow, and it is wheelchair-accessible.\"\n\n\"That doesn't help us with the fact that we need it to be wheelchair-accessible tonight. For the person who needs to be at the rehearsal in a wheelchair.\"\n\n\"Sean, Mom asked you to call her real quick,\" I said.\n\n\"What? When?\"\n\n\"Just now. Can you go call her? It's about... the cake.\"\n\n\"For fuck's sakes, what now?\" he grumbled, walking away and dialing.\n\nI turned to the wedding coordinator.\n\n\"We need a wheelchair-accessible hall for tonight. Is there something that could be switched to this room so we could use a different space? Then, can you have someone show him the actual hall so he can see for himself that it's wheelchair-accessible?\"\n\n\"I believe so. If not, would they be okay to use one of the conference rooms?\"\n\n\"Yes, that would be fine.\"\n\n\"I would need the couple to approve, of course, but to confirm, you are...\"\n\n\"Maid of honour.\" I gestured toward Sean. \"He's going to come back in approximately thirty seconds, really pissed off that I wasted his time with a fake phone call. If you can go and figure out a solution now, I'll make sure they approve.\" \n\nThe coordinator was gone by the time Sean came storming back up to me.\n\n\"What the fuck, Lacey?\"\n\n\"Problem solved. What's next on the list?\" \n\n\"What do you mean, problem solved? You just\u2014\"\n\n\"Ah, Mr. Lemieux.\" Another person from the hotel came into the room. \"Good. I can show you to the new hall. We'll have the paperwork you need you to sign to say you approve the switch there.\"\n\n\"I... what?\" \n\n\"Just do it, Sean.\"\n\nOne by one, we went through each panic-inducing last-minute errand on Sean's list. We finished everything in time that we were five minutes early for the last item, which was \"Meet with Rick and DJ at noon.\" \n\n\"You should come too.\" Sean wrapped an arm around my shoulder as we walked to his suite. \"Thank you. For, uh...\"\n\n\"Putting up with you all morning?\" I asked.\n\nHe laughed.\n\n\"I'm a little stressed.\"\n\n\"Don't be. Everything is going to be perfect, and if it isn't, that'll make it even more perfect.\" I hugged him before we went into the suite. \"Try to relax a bit. The day's not about the cake or the suits or whatever. It's about you and Rick.\" \n\n\"She's brilliant,\" Rick said as he came up behind us. \"Listen to your sister, Sean. Also, thank you for the help, Lacey.\"\n\nHe kissed Sean and unlocked the door.\n\n\"Lacey should probably meet with us,\" Sean said as he followed Rick in the room. \"She's been solving every issue this morning.\"\n\n\"No need, I met with the DJ an hour ago.\" Rick grinned. \"We have an appointment at the spa.\"\n\nSean looked completely befuddled and I laughed.\n\n\"I knew you'd be stressed out of your mind, so everything else is taken care of. We're spending the rest of the day at the spa until the rehearsal tonight.\"\n\n\"But everyone's coming in\u2014\"\n\n\"And we'll see them tonight, after the rehearsal. What did your sister just say?\"\n\n\"I get it, I need to relax, but\u2014\"\n\n\"No.\" Rick folded his arms. \"This is about you and me. So we are going to the spa together and we're not dealing with any other issues, problems, concerns, questions, or worries. Oh, and I'm taking your phone away.\"\n\nBefore Sean could even react, Rick had lunged forward, grabbed Sean's cell phone from his back pocket, and tossed it at me. He was damn lucky I was paying attention, otherwise it would have probably hit me in the face.\n\n\"Lacey, dear, he can have that back after the ceremony tomorrow. I'm leaving you in charge of it.\"\n\n\"What? No!\" Sean protested. \"What if someone calls me?\"\n\n\"I'll keep it on me and let you know if you get any important messages,\" I said. \"Otherwise, people can reach you through Rick.\" \n\nHis additional protests were futile, but by the time I left their suite, he was laughing. I shut the door as Rick kissed him, promising it was all for the best.\n\nWhen I returned to our suite, Noah was dressed but lying in bed, reading a novel he'd packed.\n\n\"How was maid of honour duty?\" he asked.\n\n\"Sean's freaking out. Otherwise, good.\"\n\n\"Rick said rehearsal's at five, dinner's at six and just to meet at the restaurant.\"\n\n\"Yeah. He and Sean are indisposed for the rest of the day.\"\n\n\"That so?\"\n\nI held up Sean's phone.\n\n\"I'm in charge of making sure Sean has no contact with the outside world until after the ceremony. Rick's hiding him away at the spa until the rehearsal tonight.\"\n\nNoah chuckled.\n\n\"Poor guy.\"\n\n\"Which one?\"\n\nBefore he could answer, there was a knock at the door. \n\n\"We need your help,\" Aspen said as soon as I answered. She and Theo ducked into my room without waiting.\n\n\"What's wrong?\"\n\n\"Rick's parents,\" she said. \n\nTheo grimaced. \"Look, they're not that bad...\"\n\n\"You just said that was the longest two hours of your life.\" \n\n\"Well, yeah.\"\n\nShe looked at him pointedly.\n\n\"Okay, they're just a little... intense.\" \n\n\"Please tell me you guys don't have plans this afternoon,\" Aspen begged. \"Theo said we were busy and that's why he couldn't babysit them, but they wanted to come hang out in our suite since they can't get an early check-in and I cannot handle being in there for another second.\" \n\n\"Why don't we go for lunch?\" Noah suggested as he came out of the bedroom. \"Check out the town a bit or something?\"\n\nWhat I really wanted was a nap, but lunch did sound good. Given all I'd had that morning was a bagel that Sean had been vehemently against stopping for, I was famished. \n\nTheo insisted on paying for lunch and we'd learned better than to argue with him. Aspen regaled us with the tale of Theo stumbling into their suite last night and falling asleep \"not in the sitting room, not in the bedroom, not in the hallway or bathroom, but under the fucking kitchen table. Why? Tell them why, love.\"\n\n\"I didn't want to wake her up.\"\n\nI laughed, then frowned. \"Wait, weren't you\u2014\"\n\n\"Not even in the suite? Yeah.\"\n\n\"Explains why my neck's kinda stiff,\" Theo said to Noah.\n\n\"Think that's probably because you were headbanging to Bohemian Rhapsody the entire way home. It wasn't even playing, man.\" \n\nAspen sighed and shook her head. \n\n\"Aspen won't tell me what you two got up to last night,\" Theo said to me. \"All I know is Lacey's so funny and cool and was so much fun to talk to.\"\n\n\"She won't tell me either,\" Noah said.\n\nTheo wouldn't stop badgering me so after the waiter brought our food, I looked him in the eye and told him the truth.\n\n\"We were comparing the sizes of your dicks.\" \n\nNoah choked and nearly spat a bite of his burger out on the table, Aspen howled with laughter, and Theo rolled his eyes but laughed.\n\n\"Fine, if you're just gonna make ridiculous shit up, keep your secrets.\"\n\nAfter lunch, we wandered through the shops in the town. Noah pointed out the bowling alley they'd gone to the previous night, Theo vaguely remembered one of the pubs we walked past, and Aspen pulled me into a candy store that was crowded with aisles of candy and a huge display case of amazing looking chocolates and fudge. \n\nI spent a little more than I intended in that store, but justified it by telling myself Theo and Aspen had covered everything we'd thought we'd need to pay for so far. Besides, when was the next time I'd be in Banff?\n\n\"It's May,\" Noah laughed when I begged to go into a store that sold nothing but Christmas stuff. \"Baby, it's May.\"\n\n\"But the whole store is Christmas stuff!\" I said.\n\n\"Let's check it out,\" said Theo.\n\n\"Not me.\" Aspen sat on a bench outside the store and gestured to Noah. \"I'll wait out here with Noah.\" \n\nBefore anyone else could protest, I grabbed Theo's arm and pulled him into the store.\n\nNoah was right, it was May, but it didn't stop us from being transported to a winter wonderland the moment we stepped through the door. I had never seen so many ornaments in my life. Every step I took brought new treasures glittering as they hung. Christmas villages were set up on every available surface, and there were decorations and stuffed animals lining a staircase to an entire second level. \n\nI tried to hurry, knowing Theo was probably nowhere near as excited about all the Christmas stuff as I was, but still lingered before heading back outside.\n\n\"Don't worry about it,\" he said as I apologized. \"It's a pretty cool store.\"\n\nWhen we stepped back out into the real world, where it was still May and decidedly not Christmas, Noah was lost in thought. Aspen stood to greet us, but he jumped when I touched his shoulder, not noticing that we had approached.\n\n\"Nickel for your thoughts?\" I asked him.\n\nHe chuckled as he stood.\n\n\"Nah, they're not worth that much.\" He kissed the side of my head lightly and took my hand. \n\nThough the candy store was like a childhood dream come true and the Christmas store was pure magic, my favourite place was an unassuming store that was full of rocks.\n\nWell, rocks and gemstones and geodes and fossils. \n\nIt was one of the coolest stores I had ever been in. There were so many things to look at, so many unique pieces that demanded my attention. I trailed my hand through a bin of stones, obviously meant for kids to buy as souvenirs, relishing the smooth feel of them under my fingers.\n\nThe best part of it was a huge display of jade figurines. Noah came up behind me as I was picking up a small carving of an elephant, admiring the way it caught the light on the shining surface.\n\n\"This colour always makes me think of you,\" I said.\n\n\"Yeah?\" He picked up one of the other figurines. \"Let me get you one.\"\n\nI smiled and shook my head. \"It's okay. I just like looking at them.\" \n\nStill, I lingered a moment longer before we left the store and decided on what to do next. Theo and Noah wanted to stop for a coffee, so Aspen and I went to a couple of clothes stores. It was mostly just me watching while she browsed through the racks. The clothes Aspen looked at were far more expensive than anything I owned. She finished when Theo called to say we really had to start heading back to the hotel and get ready for the rehearsal.\n\n\"Rick says he's gotten Sean's panic under control, but it's a fragile thing. We'll definitely break it if we show up late to the rehearsal.\" \n\nOnce we got back, I had just enough time to tuck the ornament I'd bought for Noah into my backpack and shower. \n\n\"See you in an hour,\" he said as he kissed me. \"Good luck.\"\n\nThe rehearsal went well. Sean was indeed toeing a very delicate line between relaxed enjoyment and full-blown panic, but everything went smoothly. I understood instantly what Aspen meant about Rick's parents being intense: the first thing his mom did was pull me in for a tight, rib-crushing hug.\n\n\"I'm Stella McDougall, by the way,\" she said after she released me. \"And you are...?\"\n\n\"Um, Lacey. Sean's sister.\"\n\n\"Grant! This is Sean's sister!\" she called to her husband.\n\n\"Ah yes, the teacher!\" Grant almost sounded like he was shouting, his voice echoing off the walls of the hall, and he spun in his wheelchair to beeline over to me.\n\nThey peppered me with questions until Rick came over, rolling his eyes and telling them they needed to quiet down and listen to the instructions.\n\nThe wedding coordinator directed us through the ceremony, showing me and Theo where to stand and where the table would be for us to sign the marriage license. He talked Sean and Rick through the ceremony and what they should expect, then had Theo and I practice following them down the aisle once they were pronounced married. He even managed not to scold us for taking it less seriously than we probably should have.\n\nAfter practicing the entrance to Rick's eventual satisfaction, we were dismissed. By dismissed, of course, I mean that we all started walking to the restaurant together. \n\n\"Push me a little faster, Stella, I'm not done talking to Lacey yet!\" Grant demanded as we left the hall. \"Now Lacey, I bet you're wondering why I'm in this wheelchair.\"\n\nI wasn't, but Theo whispered that I should just go with it.\n\n\"Um, sure.\" \n\n\"It's because I can't walk.\"\n\nHe burst out laughing at his own joke and I pressed my lips together, trying to stifle my own giggle.\n\n\"God, Dad, do you ever get tired of that joke?\" Rick asked. \"Sorry, Lacey. You're a new audience so he's going to try a whole bunch of groaners out on you.\" \n\n\"I don't mind,\" I said. \n\nThose of us who were new to the audience\u2014namely, me and Mom\u2014laughed the entire way to the restaurant thanks to Grant. I did understand Rick's comment when Grant met Noah and proceeded to run through the same set of jokes all over again.\n\n\"Lace, did you bring my phone?\" Sean asked.\n\n\"Yep.\"\n\n\"Can I see it?\"\n\n\"No,\" Rick and I said in unison.\n\n\"Who's going to be texting you?\" Rick continued. \"Everyone knows you're getting married this weekend. Is it your secret boyfriend that you don't want me to know about?\"\n\n\"Of course not!\"\n\nIt was clearly a joke, but Sean looked a bit hurt. I bit my lip and pulled his cell phone out of my purse.\n\n\"Look,\" I said. He reached for it and I pulled away. \"No, just look. Two new messages, both saying congratulations. No new calls. The emails are all work emails.\"\n\nHe nodded.\n\n\"Thanks, Lace.\"\n\nAs dinner rolled on with Grant's jokes booming over the conversation and Rick exasperatedly trying to quiet him down, I kept an eye on Sean. When there was a moment where Rick was distracted and everyone else seemed to be talking, I slid to the other side of the table and sat next to him.\n\n\"What's wrong?\"\n\n\"Nothing.\"\n\n\"Sean, talk to me. What's the deal with the phone? Why do you seem... off?\" \n\nHe laughed and shook his head.\n\n\"Honestly, there's no deal with it. I promise.\" \n\n\"Pinky promise?\"\n\nHe laughed again and extended his pinky, hooking it around mine like when we were kids.\n\n\"Pinky promise. It's weird being disconnected from everything.\"\n\n\"Anything else?\"\n\nHis eyes flitted to Rick and I knew my instincts had been right.\n\n\"I'm so nervous about tomorrow,\" he whispered.\n\n\"Why?\"\n\nHe looked at Rick again, longer that time.\n\n\"I want to be with him forever. I just don't want to let him down.\" He shook his head. \"He wants tomorrow to be perfect and I just... what if I fuck something up?\"\n\n\"He's not going to love you any less,\" I said. \"So what if something doesn't go perfectly according to plan? I think he probably wants you to be happy more than he wants a picture-perfect day.\" \n\nHe nodded, but his forehead was still creased with worry.\n\n\"Have you talked to him?\"\n\nSean shrugged noncommittally.\n\n\"Sean.\"\n\n\"I know. I just... he seems so happy. I don't want to bring him down.\"\n\nRick chose that moment to tap his knife on his wine glass.\n\n\"Hey, everyone listen for a sec!\" \n\nHe stood up, holding his glass as everyone quieted down.\n\n\"I wanted to say a few words tonight. It means so much to me and Sean that you're all here. We have so much to thank you all for. I want to say thanks to my mom and dad for coming down to be part of our big day, even though I know travelling isn't so easy for you anymore. It means a lot to us that you still made it.\"\n\nStella grinned brightly and Grant managed to keep from cracking another joke as Rick turned to my mom.\n\n\"Barb, thank you for making your son. I love him a lot.\"\n\nSean chuckled as Mom blushed.\n\n\"I'm so glad we've got you in our lives. Thank you for being here, and thank you for being part of our day.\"\n\nShe teared up and nodded. Alexandre was sitting beside her and wrapped his arm around her shoulder comfortingly. \n\n\"Theo, man. What can I even say?\" Rick pointed around the table. \"None of us would even be here if it weren't for Theo. No, not just paying for the wedding, even though he did that too. Theo's the whole reason Sean and I met, way back when he was designing his house. Theo, you've been my best friend for far too long so I'm just going to say this: you're the brother I never had, you annoy the shit out of me, thanks for not firing me for saying that, and thank you for everything.\"\n\nTheo laughed and raised his glass to Rick.\n\n\"Lacey, my dear.\" Rick turned to me. \"If Theo's the brother I never had, you're the sister I couldn't be more excited to get. You have no idea how much Sean and I love you. I swear to God, one day we'll be able to talk you into moving to Montreal because we miss you like crazy. Thank you for being here, for handling the bumps and problems with a grace that is almost surreal, and for being the sole feminine beauty in our wedding party.\"\n\nI laughed, though I knew there were tears in my eyes, and raised my glass to Rick.\n\nHe paused for a moment as he looked at Sean.\n\n\"Look, I roasted everyone a little bit during my speech because if I'm too nice, people will forget how much of a badass I am.\"\n\nSean snorted and I saw Theo roll his eyes from across the table.\n\n\"And frankly, we make fun of each other all the time, so I'm sure everyone expects me to do that right now. I can't, though.\" Rick's expression grew serious. \"You're the love of my life. I know this is all overwhelming and crazy. I know it's been stressful. And while I'm glad we only have to go through the whole rigamarole once, I want you to know I'd do it over and over again just to be with you. Tomorrow is already the best day of my life, because every day with you has been the best day of my life. You mean everything to me, and I'm...\"\n\nSean stood up before I even realized Rick had started crying.\n\nI don't think anyone in the room had completely dry eyes as Sean wrapped his arms around Rick, kissing him hard before murmuring something in his ear.\n\nRick laughed and shook his head.\n\n\"Anyway, that's my toast. Eat up, drink up, stop looking at me right now. Cheers.\" He raised his glass and everyone laughed as they returned the gesture, graciously ignoring Rick as he wiped his eyes and kissed Sean again. \n\nIt wasn't until we were back in our suite, curled up next to each other in bed, that Noah asked me about Rick's toast.\n\n\"Have they been trying to talk you into moving to Montreal?\" he asked.\n\nI shook my head.\n\n\"Mom brought it up when we were there for spring break. Rick makes little comments every now and then, but not... I mean, they're not like, pressuring us to move.\"",
        "He didn't say anything, just tightened his arms around me.\n\n\"Why?\" I asked.\n\n\"Just wondering. Was the first I'd heard of it.\"\n\nI yawned, nestling my face into his chest.\n\n\"You know I'd tell you if it was a thing. Today was the most either of them have ever said about it.\" \n\n\"I know, baby. Just curious.\"\n\nHe kissed the top of my head, and moments later I was asleep.\n\n<center>Chapter Thirty-Two</center>\n\nA buzzing sound slowly pulled me from a deep sleep.\n\nBeside me, Noah was snoring softly, oblivious to the sound.\n\n\"Noah,\" I mumbled, nudging him. \"Your phone.\"\n\n\"Hmm?\"\n\n\"Phone.\"\n\n\"What about phone?\"\n\n\"Probably your mom.\"\n\nHe shifted on the bed, rolling toward the nightstand.\n\n\"No.\"\n\n\"What?\"\n\n\"You dreaming?\" \n\nI blinked hard, propping myself up on my elbows and listening. The buzzing had stopped.\n\n\"Maybe,\" I said uncertainly. \"Are you sure?\"\n\nHe held up his phone, the brightness of the screen making me wince in the dark room. No new messages, no missed calls.\n\nI rubbed my eyes as he put the phone down.\n\n\"I could've sworn...\" \n\nHe wrapped his arms around me, bringing me close to his chest.\n\n\"S'okay, baby. Go back to sleep. You were just dreaming.\" \n\nHe was snoring softly again within moments, and I was nearly back asleep when I heard it again.\n\n\"Noah!\" I hissed. \"Listen.\"\n\nHe jumped, startled.\n\n\"What?\"\n\n\"Listen!\"\n\nWe went silent and sure enough, the telltale buzz of a vibrating phone fell on our ears.\n\n\"Is it yours?\" he whispered.\n\nI knew it wasn't, but untangled myself from his arms anyway and reached for the nightstand on my side of the bed. When I picked up my phone, the buzzing stopped, but the harsh light of the screen showed us that it wasn't mine, either.\n\nWe lay in bed quietly, listening for the buzz again. Moments later, it started.\n\n\"What the fuck?\" Noah mumbled, sitting up.\n\n\"Sean!\" I gasped.\n\n\"What?!\"\n\n\"Sean's phone.\" \n\nI scrambled out of bed and stumbled to my purse, which was sitting on an armchair in the corner. Sure enough, the purse was vibrating. Noah flicked the lamp on as I dug through it, trying to find Sean's phone, but it had stopped ringing by the time I found it.\n\nStill, it did show three missed calls.\n\n\"Who the fuck is calling him at... Jesus, four in the morning?\" Noah asked.\n\nI shook my head.\n\n\"Private number.\"\n\n\"What?\"\n\nMy heart was pounding as I stared. There were no voicemails, no texts, just three missed calls from an unlisted number within the last five minutes. I held the phone as I stood by the chair, waiting for it to ring again.\n\n\"Baby,\" Noah said softly after a few minutes. \"Come back to bed. You can ask Sean in the morning.\"\n\n\"What if...\"\n\nMy voice cracked and moments later, Noah was behind me, arms turning me in place and bringing me to his chest.\n\n\"There's an explanation and it's probably not what you're thinking,\" he said. \"There's no way.\"\n\n\"He can't be,\" I gasped. \"He wouldn't do that to Rick. He pinky-promised.\"\n\n\"Exactly.\"\n\nI cringed, picturing my brother's face at the rehearsal dinner.\n\n\"But then why was he so\u2014\"\n\n\"We can ask in the morning.\"\n\n\"On his wedding day? If it's not that\u2014\"\n\n\"Maybe it's an ex. You know. Speak now or forever hold your peace type thing.\"\n\n\"Sean doesn't have any ex-boyfriends. Rick was his first boyfriend.\"\n\nHe chuckled dryly. \"I mean, I know you don't want to hear this about your brother, but, uh, he's got some ex... not boyfriends.\" \n\n\"What?! How do you know that?\"\n\n\"The, uh, bachelor party.\" \n\nBefore I could ask another question, the phone rang again.\n\n\"I'm answering it.\"\n\nNoah didn't stop me, just watched as I lifted the phone to my ear.\n\n\"Hello?\"\n\nThere was a long pause. If it weren't for the sound of breathing, I would have thought no one was there.\n\n\"Who is this?\" I asked.\n\n\"Now there's a voice I didn't expect to hear. What a surprise, Lacey.\" \n\nWould it be a clich\u00e9 to say my blood ran cold? Probably, but it also wouldn't even be enough to describe the absolute terror that washed over me. My stomach didn't just drop, it almost ceased to exist. His voice dripped through the phone, freezing the air around me, filling the room with a toxic, consuming dampness that would haunt me for not just days, but weeks. Months. Maybe always.\n\n\"Not going to say anything? That's no way to greet your father.\"\n\nI couldn't speak. Noah hadn't heard the soft, ragged voice on the other end, and he looked at me with concern.\n\n\"Who is it?\"\n\nMy father laughed. Or, well, he... made some kind of noise. A bark of dry shock, a cough of hatred, slurred together with his words. He was drunk. Or maybe insane.\n\nProbably both.\n\n\"Ever the whore, aren't you? Still sinning with the same one or do you have yet another transgression to present before the Lord? Speak to me, whore.\" \n\n\"What do you want?\" I whispered shakily.\n\nNoah leaned in, listening intently as my father spoke. That same dry cough of laughter rustled through the phone.\n\n\"I thought you forgave me? As if I needed the forgiveness of whores. Well, it's too late for you to be forgiven, anyway. There's no going back, Lacey Marie, you understand? You spread your legs for the devil and the devil has claimed you. But there's still time for the faggot. Tell him that. Tell him there's time. Tell him to renounce, to beg pardon, to walk away from the charade of this... this debasement of marriage.\"\n\n\"How did you find out?\"\n\n\"That other whore, that girl you used to bring by. She comes to me, do you know that? She confesses her sins, but it doesn't stop her from committing them. A bastard is growing in her belly and she refuses to see that she will burn, just like you, just like all of them.\" \n\nMy fingers were stiff against the phone. I was frozen, a statue, horrified and terrified and unable to move it away from my ear.\n\n\"Your whore of a mother made me sin. She forced me to break my oath. But I can still be saved, and so can the faggot. He must denounce his way of life.\" The words came out muddled, extra letters stringing them together. \"His degradation of the holy sacrament will not stand, but he can repent, Lacey, you must tell him. Tell him to repent. Tell him there's still time and perhaps, just perhaps, the Lord will see fit to lessen your eternal torture.\"\n\nI didn't resist as Noah took the phone from my hand, thinking he would simply end the call and then embrace me.\n\nI wasn't expecting him to lift the phone to his own ear.\n\n\"Hey,\" he said into the line. \"You're Dennis?\"\n\n\"Noah, no!\" I reached for him but he stepped back.\n\n\"Nah, I'll call you Dennis... Yeah, shut up a sec, okay? Listen, you call Sean, or Lacey, or Barb ever again, and I'll... Hey, shut the fuck up. It's your turn to listen.\"\n\nHe listened for a moment, then laughed.\n\n\"Doesn't scare me, man. You're wasting your breath... I strongly suggest you lose this number. Lose this one, lose Lacey's, lose your ex-wife's. You call again and... No, not the police, man, you'll have to deal with me. And if you think I'm beyond coming up there and... Oh good, I'm glad you aren't too drunk to figure it out... Yeah, it's a fucking threat.\"\n\nMy lips were parted as I gaped at him. Noah caught my eye, raised his eyebrow as a wicked glint flashed in his eye, and grinned.\n\n\"You already know who I am... Yeah, and if she's the devil's whore, who does that make me?\"\n\nI don't know if he was screaming words or just screaming, but the sound of my father's voice was cut off as Noah hung up.\n\nBlankly, I stared at Noah. He tossed the phone onto the bed before looking at me.\n\n\"Sorry.\"\n\n\"It's fine.\" The words came from my mouth, but I barely chose to say them.\n\nHe fidgeted, the self-assured man who'd just told off my father replaced by a nervous, uncertain one.\n\n\"You okay?\"\n\nI shook my head, opened my mouth to respond, and was startled by a laugh.\n\n\"Did you just tell my father you're the devil?\" I choked.\n\n\"Uh... maybe.\"\n\nI lost it, nearly falling over as I howled, my face red not from embarrassment or anger or shame, but from the fact that I was very much unable to breathe.\n\nNoah seemed to expect that the laughter would turn to sobs, but the only tears that fell were a result of my inability to draw a full breath in. When I finished, heart racing with adrenaline that was beginning to slowly crash out of my body, I collapsed on the edge of the bed.\n\n\"Baby... are you all right?\"\n\nI dabbed the corner of my eyes as he sat next to me.\n\n\"So that's my dad,\" I said, and that time we both lost it.\n\nI wasn't sure that sleep would come for us again, but when we finally crawled back beneath the sheets, my body felt heavy and my eyes wouldn't stay open.\n\n\"Thank you,\" I mumbled as Noah cuddled up to me.\n\n\"Sorry I sort of called you a whore, indirectly, and only to freak your dad out.\"\n\nA tired round of giggling followed and Noah kissed my forehead.\n\n\"Glad we had Sean's phone,\" he said.\n\n\"Me too.\"\n\n<center>Chapter Thirty-Three</center>\n\nNot only did I not intend to tell Sean the sick things my father had said when he called, I wasn't going to tell him he called at all. At least, not until after the wedding. There was no reason to steal Sean's happiness, to taint his wedding day with the sick ramblings of a mad, drunk preacher.\n\nI was counting on Sean's distraction with the day's events to help stop him from noticing I was hiding something, since I wasn't exactly the greatest at keeping secrets even when there was good intent behind them. \n\nLet me be strong, I prayed. I would tell Sean and Mom what happened the next day, but that day, I would be strong.\n\nAnd I was, right up until I got into Mario's room to have my hair done.\n\nMario let me in, greeting me softly and cringing.\n\n\"Um, so, quick up-to-speed for you... Sean's here, your mom's here, everyone's upset and I don't know why.\" \n\nMom's face was pale and drawn, her eyes red. She sat in a wooden chair, one leg crossed over the other and her arms folded tightly across her chest. She couldn't have built any more walls up if she'd had a stack of bricks. \n\nSean stood across from her, face twisted into a scowl that was part anger, part worry, and all stress. His arms were folded too, and both of them looked at me as I walked in.\n\n\"Uh... good morning?\" I said hesitantly. \n\n\"Something happened last night and Mom won't tell me what,\" Sean said.\n\n\"There is nothing to talk about,\" Mom said fiercely. \"It is your wedding day, Sean, I'm not... nothing bad happened! I didn't sleep well.\"\n\n\"You're a terrible liar.\"\n\n\"I'm not... just... Please drop it.\" She bit her lip, pleading with Sean and then with me. \"Please.\"\n\n\"Not knowing is going to be worse than you just fucking telling me!\" Sean was almost shouting. \"Is it Alexandre? Did he do something to you?\"\n\n\"Sean!\" Mom's voice was harsh and offended. \"He absolutely did not!\"\n\n\"So what is it? What happened last night?\"\n\nShe froze, looking over at me, pain and hurt and heartbreak written across her face.\n\n\"Maybe it wasn't last night,\" I said quietly. \"Maybe it was around four this morning?\"\n\nIf possible, her face went even more white.\n\n\"Not you too.\" \n\n\"Not... well, it wasn't supposed to be me, really.\" I glanced at Sean.\n\n\"Someone tell me what the fuck is going on right now or I swear I'm going to actually probably die.\" \n\nMom uncrossed her legs and unfolded her arms, put her elbows on her knees, and buried her face in her hands.\n\n\"I can't believe he would do this,\" she mumbled.\n\n\"Tell me what the fuck\u2014\"\n\n\"Sean, enough.\" \n\nHe whirled toward me, eyes wide at the unexpected harshness of my tone. I gestured toward the other wooden chair that Mario had clearly set up for me.\n\n\"Sit. I'll tell you. But you need to calm down.\"\n\nStill shocked, he sat as directed.\n\n\"I'm just going to go... somewhere else,\" said Mario, and before anyone could protest, he high-tailed it out of his room.\n\nNo one spoke for a moment. \n\nThere was no real way for me to know how to break information like that to anyone. There's no handbook, no rules in the Bible, no guidelines for how to tell your brother on his wedding day that his estranged father called to beg him not to get married in order to try to save his soul. \"His\" being open to interpretation, since I still wasn't sure if it was my father's soul or Sean's soul that was supposed to be saved.\n\nSo I used the Band-Aid method and got it over with.\n\n\"Dad called to tell you there was still time for you to repent and not get married.\"\n\nSean stared blankly. Mom looked up when he didn't speak, glancing from him to me and back again.\n\nThere was no question Sean and I were related when he burst out laughing hysterically, much like I had hours earlier.\n\n\"Yeah,\" he snorted. \"Right. Dad called. You're fucking joking.\"\n\n\"I'm not joking.\"\n\n\"Fuck off, you're joking,\" he said. \n\n\"I can tell you I'm joking if that's what you want.\"\n\n\"Tell me you're fucking joking, Lace.\"\n\nHis voice cracked and Mom was out of her seat and holding him half a second later.\n\n\"I'm sorry,\" she whispered, and her own sobbing started as she spoke. \"Sweetie, I'm so sorry. I didn't want you to... don't let him ruin this day. He does not get to have this day.\"\n\nI didn't cry. I was going to be strong.\n\nI took a deep breath, walked to my mother and brother, and took one of their hands in each of mine.\n\n\"Do you want to hear a funny story?\"\n\nGlistening eyes looked up at me, bewildered, almost shocked.\n\n\"So when I answered the phone, he clearly wasn't expecting it to be me. He found out about the wedding from Kristen Jones, he said. She's pregnant, did I tell anyone that? I don't remember. I heard from her last month and guess who knocked her up?\"\n\nI paused as though either of them would respond, which they didn't, of course.\n\n\"Roger Swift. Yeah, and they're getting married.\" I laughed, shaking my head. \"She wanted me to be a bridesmaid. All this time, I didn't hear from her, and she wants me to be at her wedding.\"\n\nSean made a soft noise that could have been a laugh or may have just been an attempt not to puke.\n\n\"Anyway, I told her you were getting married in passing, which she apparently passed on to Dad. How he got your number, I don't know. But don't worry, Sean. He told me to tell you there's still time, and that you can help him to get into Heaven by repenting since he's doomed to Hell for being divorced.\" \n\nIt was Mom's turn to laugh or not puke, whatever that sound was.\n\n\"There's no hope for me, though. According to Dad, I've spread my legs for the devil and the devil has claimed me.\"\n\n\"That bastard,\" Mom whispered.\n\nI grinned at her. \"Oh, here's the best part, though. Dad met Noah for the first time last night.\"\n\n\"What?\" Sean gasped.\n\n\"Yeah, Noah grabbed the phone and told Dad he'd better lose all our numbers, otherwise he'd get to meet him in person. And I mean, you guys know Noah as a sweet, kind-hearted, level-headed person, but he plays the part of badass ex-con fairly well, you know? But Dad doesn't know that he's just playing. And Dad made the mistake of asking Noah who he was.\"\n\n\"What did he say?\" Mom breathed.\n\n\"Noah said if I was the devil's whore, what did that make him?\"\n\nThey both took a moment to process.\n\n\"He didn't,\" Mom finally gasped.\n\n\"Mm-hmm.\"\n\nSean snorted. Then he chuckled. Then he lost it, cackling wildly as Mom started laughing.\n\n\"That explains... oh good Lord,\" she giggled. \"He called and ranted about the devil speaking to him and just... I thought he was just crazy but that... oh my God, Lacey!\"\n\nSean was wiping his eyes and shaking his head.\n\n\"This is unreal,\" he said shakily.\n\n\"And now you know.\" I let go of his hand and Mom's. \"And now we're going to forget him and have the best day of our lives, and if he tries to call again, we're going to put Noah back on the phone.\"\n\nSean nodded, though he didn't look convinced.\n\n\"He's not worth it, Sean.\" The bluntness of my words made him look up at me. \"You know what you deserve? A beautiful, magical, wonderful wedding surrounded by people who love you and care about you. So let's do that, because it's the biggest 'fuck you' we could possibly give him.\" \n\n\"Lacey!\" Mom gasped at my language, but she laughed and wiped her eyes.\n\n\"Damn right,\" Sean declared. \"You're damn fucking right. Fuck him. Mom, wipe your eyes. Where's Mario? We need a cucumber so the redness goes down.\"\n\n\"A... cucumber?\" Mom repeated.\n\n\"Cucumber slices!\" Sean ordered. \"Mario!\"\n\nThe door opened, revealing Mario hadn't gone all that far, as Sean began barking orders. Before leaving me and Mom in Mario's hands, he told Mario what he wanted for our hairstyles, asked a very-confused room service attendant to bring up a bowl of cucumber slices, and popped a bottle of champagne.\n\n\"It's a little early!\" Mom laughed.\n\n\"I'm getting married!\" he replied, pouring four flutes, and took one with him as he went to get breakfast.\n\n\"So we're good?\" Mario asked, trying to hide the dazed expression on his face.\n\n\"Yep,\" I said. \"So I know he said he wants you to curl my hair, but\u2014\"\n\n\"Nope, no way. Sean said curls, we're doing curls.\"\n\n\"I'm just saying, by the time you finish curling everything, the first ones you did will already be straight again. My hair has never held a curl in its life.\"\n\n\"Your hair has never met me,\" Mario said, and refused to listen to any further protests.\n\nHe went to the bathroom for a moment, leaving Mom and I sitting in the chairs in his room.\n\n\"Sweetie\u2014\"\n\n\"I'm fine.\"\n\nHer hand clutched at mine.\n\n\"I'm not.\"\n\nI squeezed her fingers. \"Yes, you are.\"\n\nShe sniffed and nodded.\n\n\"Did he sound... when he called, was he...\"\n\n\"Drunk? I think so.\"\n\nShe nodded again.\n\n\"He's crazy, Mom. He's not well.\" \n\n\"I know,\" she whispered. \"I can't help but blame myself.\"\n\nI turned to her, gripping her hand hard.\n\n\"What kind of man tells his daughter she's going to Hell for falling in love?\"\n\nShe didn't respond.\n\n\"He did that before you left. What kind of man stops loving his son because of the way God made him?\"\n\nShe swallowed hard, nodding.\n\n\"What kind of man hits his wife, Mom?\"\n\n\"I know,\" she whispered. \"I know.\" \n\nWhen Mario came back, we were hugging.\n\n\"Um, should I just\u2014\"\n\n\"No!\" Mom shook her head as she let go of me. \"Sean will throw a fit if we get any more behind than we already are. Quick, do Lacey first so she can go to her makeup appointment. And where are my cucumbers?\" \n\n<center>Chapter Thirty-Four</center>\n\nThe curls held, miraculously. Maybe Mario was really that good of a hairdresser, or maybe it was the sheer force of will from Sean that everything would be perfect. Whatever it was, my hair stayed put as I rushed to my makeup appointment, then rushed back upstairs to help Sean get ready.\n\nRick was getting ready in the suite with Theo, and Sean had commandeered Mario's room. Mario was one of Sean's best friends, as I found out, and teased me for taking his place as Sean's best man.\n\n\"Sorry,\" I said, blushing.\n\n\"Girl, I'm kidding,\" he laughed as he adjusted my hair. \"But also, damn, they did a good job on your makeup.\"\n\nI reached up to touch my face before remembering what the lady had said about not touching it, my hand hovering awkwardly for a moment. \n\n\"Are you sure?\"\n\nI'd fought with the lady, telling her I still wanted to look like me. After she'd done my foundation, I shook my head and told her to take it off.\n\n\"But your freckles will show!\" she protested.\n\n\"I want to see my freckles!\" I argued. \"I look weird without them.\"\n\nBegrudgingly, she'd redone my makeup with a much lighter hand, making sure to keep things as natural as possible. Even still, I barely recognized myself when I looked in the mirror. My cheekbones popped, my eyes seemed huge, and my lips were pouty and thick.",
        "\"Girl.\" Mario raised his eyebrows at me. \"You look phenomenal.\"\n\n\"He's right, Lace.\" Sean came up and wrapped an arm around my shoulders. \"You should go get your dress on quick. The photographer wants to do some getting ready photos, but he wants to see me getting ready. You should be in your dress.\" \n\nI scurried quickly to our suite, which was quiet when I walked in. Figuring Noah must have gone to grab lunch, I rushed to the bedroom and took my dress from the closet, wriggled into it, then nearly fell over trying to reach behind my own back to do the zipper up. As I stubbed my toe on the chair, I swore, hissing in pain.\n\n\"Hello?\" I jumped at the sound of the voice, realizing Noah was in the bathroom.\n\n\"Sorry!\" I called. \"I didn't know you were here!\"\n\n\"Oh thank God,\" he groaned. \"Baby, can you help me?\"\n\nAlarmed, I forgot about the pain in my toe and stopped trying to do up my dress as I rushed to the bathroom.\n\n\"What's wrong?\"\n\n\"Nothing, I...\"\n\nHe stopped short as I walked in. The cuffs of his shirt were hanging loosely around his wrists, not buttoned yet. The suit jacket was still on the hanger, which he'd placed on the towel rack. Around his neck, the green tie Rick had chosen was haphazardly knotted, and his phone was on the counter with a YouTube video on pause.\n\nThe shirt was tucked in, but his hair was a mess, and he looked as frazzled as I'd ever seen him. I pressed my lips together, forgetting I had lipstick on as I tried not to laugh.\n\n\"Do you need help with your tie?\" I asked.\n\nHe cleared his throat, cheeks reddening.\n\n\"Yes, please.\" \n\nI knew how to tie a tie, of course. I'd spent years of my life dressing my very best every Sunday, and all the girls learned how to tie ties. Whether it was to help a brother or to help a hopeless classmate, it was a good skill to have. I made quick work of Noah's tie, folding the collar over it and straightening the knot when I was done. Then, without his asking, I buttoned the cuffs of his shirt before flattening his hair.\n\nLastly, I helped him into his jacket, then smoothed the lapels down on his chest.\n\n\"Perfect.\" My hand lingered on his chest, brushing an imaginary piece of lint from his shirt. \"You clean up pretty nice, you know.\" \n\nHe chuckled, his hand capturing mine.\n\n\"You... baby, you look amazing.\" He brought my hand to his lips and kissed my knuckles.\n\nI blushed, grinning as I looked down.\n\n\"Oh, this old thing?\" I quipped. \"Can you help me with the zipper?\"\n\nMy hands weren't the only ones that lingered. Noah carefully brushed my curls away from my back, fingers trailing along the base of my neck, before gently pulling the zipper up. He hooked the tiny clasp above the zipper before bringing my hair back over my shoulder.\n\n\"Fuck, you're beautiful,\" he said as he turned me back around.\n\n\"You are, too.\"\n\nHe touched a curl near my face as delicately as if it were glass.\n\n\"I love you.\"\n\n\"I love you too.\" I kissed him chastely, mindful of my lipstick, and smoothed his hair down one last time. \"I have to go help Sean now. I'll see you soon.\"\n\nThe brief moment with him left a smile on my face so bright that the photographer snapped a photo of me walking into Mario's room without even asking.\n\n\"Had to,\" she explained. \"That was a hell of a photo.\"\n\nMom, who hadn't seen me in my dress, pressed her lips together and tried not to cry. The photographer caught that, too, as well as the moment she did cry while adjusting Sean's tie.\n\nShe caught so many moments that I barely remembered in the whirlwind of the day. Mario fussing with my hair as I helped Sean into his jacket. The expression on Mom's face as she hugged Sean, proud and joyous and fiercely beautiful. Theo teasing me as we waited outside the hall, then posing for the camera at my insistence that we get photographic evidence of him in a suit. Grant telling a joke that all of us had heard before but laughed heartily at anyway. Sean and Rick seeing each other for the first time in their new suits and the last time before they were partnered forever.\n\nThere were also so many moments that I didn't see. Aspen and Noah sitting in the hall before the wedding, making faces at the camera. Rick's aunt and uncle proudly grinning as they waited for the ceremony. Candid moments of friends laughing, joy shining through the day, brought together by my brother and his partner for the biggest moment of their lives.\n\nMy favourite moment she captured was the one of my mom proudly walking down the aisle, chin raised, eyes shining, and a smile spread across her face. \n\nShe caught the moment Theo and I walked into the hall and Noah saw me. Somehow, she caught the way his eyes followed me down the aisle, the rest of the world fading away as he stared. She caught the moment our eyes met and the private smile I gave him as Theo escorted me to the front.\n\nI didn't need photographs to remember the ceremony, though. Photographs couldn't capture the swell of emotion I had when Sean and Rick walked in from opposite sides of the doorway, met in the middle of the aisle, and grinned as they took each other's hand.\n\nEven holding my bouquet of flowers, I managed to clap as they came down the aisle. Sean laughed at my excitement, the way I was barely able to manage standing still. My knees shook and I bent them, doing a strange kind of dance as they walked up to the front.\n\nThe marriage commissioner spoke beautifully, but what she said didn't really register. It was the vows that did, vows that Sean and Rick wrote themselves, vows that left not a dry eye in the house.\n\n\"I know everybody hates long-winded speeches, but I don't care what you guys want, because it's my wedding,\" Sean started. A wave of chuckles filled the room.\n\n\"Rick, when you walked into the firm for the first time, I thought, 'Who is this guy and why is he so annoying?' You came back a few days later and I thought, 'Oh great, it's the annoying guy with the great smile.' And then you kept coming back and proceeded to steal my heart, my soul, and my fries every time we go out to eat.\"\n\n\"I get hungry!\" Rick cut in over the laughter.\n\n\"I promise to always let you steal my fries,\" Sean continued. \"I promise to love you more than... well, as much as the Pittsburgh Penguins. I promise to watch musicals with you and I promise to only make fun of them a little and only during the parts where there's no singing. I promise not to judge you for singing along.\n\n\"And I promise...\" His voice cracked a bit and he took a deep breath. \"I promise that you'll be my forever. Through everything, through thick and thin, sickness and health, bad playoff runs and Stanley Cup finals, I promise I'll be by your side. I can't imagine my life without you, and I don't want to. I won't promise to be perfect, but I promise I will always try. I love you, and I thank God every day that you sauntered into the firm with that flaming red hair and took my breath away.\"\n\nThe commissioner smiled. \"Please repeat after me.\"\n\n\"I do solemnly declare that I do not know of any lawful impediment why I, Sean Joseph Lemieux, may not be joined in matrimony to Richard Grant Cameron McDougall. I call on those persons present to witness that I, Sean Joseph Lemieux, do take you, Richard Grant Cameron McDougall, to be my lawful wedded husband.\"\n\n\"Good job,\" whispered Rick, just loud enough that I could hear him.\n\n\"Your name is so damn long,\" muttered Sean, but he grinned.\n\nThen it was Rick's turn.\n\n\"Everyone here knows the story of how I met Sean, so I won't get into how many bedrooms I added to Theo's house or how many second floors I made him redesign. I will say that it was completely worth it and I'd do it all over again. Sean, you are the love I never thought possible. You are the only person who ever made me want to settle down. You are the reason I wake up in the morning, and that's only partly because your alarm clock is too loud. You are the person who makes me want to be better. With you, I am better.\n\n\"I can't promise you I will always remember to turn the kitchen lights off before I go to bed, but I can promise you I will light up your life. I can't promise to stop grumbling about you turning the heat up too high in the winter, but I can promise I will always keep you warm. I can't promise to never accidentally blurt out something highly inappropriate, but I can promise to never hurt you.\n\n\"I can't promise you the world, but I can promise that you are my world. I love you, and I can't wait to spend the rest of my life with you.\"\n\nRick choked through his repetition of the marriage declaration, wiping his eyes as he finished.\n\nWe signed the marriage license quickly, pausing just for a moment so the photographer could capture the awkwardly-posed photo of the pen over the certificate. Then Theo handed over the rings and they exchanged them, both nearly vibrating with anticipation as they looked to the commissioner. The air in the room was electric, everyone waiting for her to say the final, beautiful, binding words.\n\n\"...do hereby pronounce you Sean, and you, Rick, to be married. You may\u2014\"\n\nShe didn't even finish before they pulled together.\n\nThe photographer captured the smiles on their faces as they kissed, the laugh on the officiant's face, Theo's fist-pump, and the half-crazed squeal of joy I made as I jumped in place behind them. Somehow, she captured the love and the excitement and the pure, unbridled happiness more perfectly than any one photo should have.\n\n<center>Chapter Thirty-Five</center>\n\n\"Seriously, keep in touch. Text me every day. I'm going to crush your ribs if you don't promise to keep in touch.\"\n\n\"Okay!\" I laughed, barely able to breathe from the vice-like hug Aspen was giving me. \"I promise!\"\n\n\"And next time you're in Montreal, give me a head's up.\" She finally let go. \"We have to hang out again.\"\n\nI promised again, unable to keep from smiling. \n\n\"We'll come over the summer sometime for a visit,\" Noah said. \"End of July, maybe.\" \n\nMom cried as we hugged, as did Sean, and of course, so did I. \n\n\"Send me pictures from your honeymoon,\" I sniffed as Sean and I parted. \"I hope France is amazing.\"\n\n\"I will,\" Sean promised.\n\nRick nearly picked me up when he hugged me.\n\n\"You were amazing this week,\" he said. \"Thank you for everything. And...\" \n\nHe glanced at Sean, who was busy saying goodbye to Noah.\n\n\"...thanks for handling the... that call.\" \n\nSo Sean had told him. I smiled sadly and nodded.\n\n\"I'm sorry.\"\n\nRick shook his head.\n\n\"I won't hear it. You had no control over any of that, and you couldn't have said anything more perfect to make it better. You're a literal angel, Lacey dear.\" \n\nStella and Grant offered to house us if we ever wanted to visit the incredibly small town they lived in, Mario made me promise to have a haircut in six weeks and then to see him when we visited Montreal so he could make sure I'd kept my promise, and Theo thanked me for not breaking his toes completely while I was dancing with him the day before. \n\nAfter saying our goodbyes, Noah and I went to the front desk to check out. A shiver ran up my spine as I looked at the staircase behind the desk, and I was glad when we finally walked out into the spring sun.\n\n\"Your car, sir,\" said the valet, handing Noah the keys.\n\nAmused, he chuckled after the valet walked to the car.\n\n\"'Sir?'\" he snorted.\n\nI almost started teasing him before the valet opened the passenger door.\n\n\"Here you are, ma'am.\" \n\nI waited until Noah had driven away from the hotel before reacting.\n\n\"Ma'am?!\"\n\n\"What?\" \n\n\"He called me ma'am! I'm not old enough to be a ma'am!\"\n\nHe burst out laughing and took my hand. As the literal castle shrunk in the rearview mirror, I sighed.\n\n\"Sorry to go?\" he asked.\n\n\"Yes and no.\" I squeezed his hand. \"It was chaotic and crazy. I had so much fun... and it was so stressful.\"\n\n\"I know, baby.\"\n\n\"But I made a friend!\" I said brightly. \n\nHe chuckled. \n\n\"That was the shock of the century. Not that you made a friend!\" he added hurriedly. \"That you and Aspen became friends.\"\n\n\"I don't think that was the shock of the century. It wasn't even the shock of the weekend.\"\n\n\"What was the shock of the weekend? \n\n\"Well, I mean, you put your finger in my butt.\"\n\nHe was laughing so hard he almost had to pull the car over. \n\n<center>Chapter Thirty-Six</center>\n\nAspen and I talked almost daily. Not just texting, but actual phone calls. It became something of a routine: she would text me to ask how school was that day and if I had any homework. I would roll my eyes and text back that as the teacher, I had all the homework. Then she'd call and we'd chat, laughing and gossiping as I made dinner and waited for Noah to get home.\n\nAs the summer weather started, Noah was working late hours again. I was working late, too, but always managed to leave the school by five. It was much easier and less distracting to do my marking at home, and despite the impending deadline of the last day of school, I was handling my workload well.\n\nI was chatting with Aspen as I walked into the apartment one day after work.\n\n\"So he comes into the lunch room,\" I was saying as I unlocked the door, \"and out of nowhere goes, 'So, I proposed to my girlfriend this weekend.'\"\n\n\"Curt has a girlfriend?\" Aspen gasped. \"Since when?!\"\n\n\"Well, he's got a fiancee now,\" I laughed. \"Apparently, they've been together for, like, ten years or something. Oh, and it gets weirder, because I guess she runs a llama farm?\"\n\n\"A llama farm. Are you\u2014\"\n\n\"Not even joking. Like, llamas and alpacas. I guess she shears the alpacas and like, spins yarn with it. So he's planning on moving to Alberta to live on a llama farm with her.\"\n\n\"And he never thought to mention any of this before?\"\n\n\"Nope!\" I laughed and put my keys in the bowl near the door, kicking my shoes off. \"So that puts a rest to all the 'Curt wants to\u2014'\" I turned, caught sight of Noah sitting on the couch, and nearly dropped the phone.\n\n\"Shit!\"\n\n\"Curt wants to shit?\"\n\n\"Sorry, one sec.\" I grinned as Noah rose from the couch. \"You're home early! I didn't even notice your truck outside.\"\n\nHe nodded and my smile faded at the serious expression on his face.\n\n\"Need to talk,\" he said quietly.\n\n\"Hey, Aspen,\" I said quickly. \"I, um, have to go. I'll call you later.\"\n\nShe sighed dramatically.\n\n\"Fine, but you better.\"\n\nI hung up without saying goodbye, my heart pounding.\n\n\"What's wrong? Are you hurt? Or... someone at work? Did something...\"\n\nNoah swallowed, his face pained.\n\n\"I'm okay. Nothing from work. No one's hurt.\" \n\nHe was still in his work clothes, a smudge of dirt across one cheek. For a long moment, he was quiet.\n\n\"You're scaring me,\" I whispered. \n\n\"Mom got arrested last night.\"\n\n\"I'm so sorry,\" I whispered.\n\n\"Failed her,\" he mumbled. \"I fucking\u2014\"\n\n\"You did everything you could.\"\n\n\"She got busted for trafficking again. Had a bail hearing, which is why she ended up calling. 'Cause of course, why would she bother calling before she knew how much money she needed?\"\n\n\"How much\u2014\"\n\n\"We're not paying it.\"\n\nI swallowed and he shook his head.\n\n\"I'm not fucking paying it. Know for a goddamn fact that she'd take off. There's no way out of this for her. She's violated her probation, she's... she's fucked.\"\n\n\"I don't know what to say.\"\n\nHe shook his head.\n\n\"Nothing to fuckin' say. She said... doesn't matter.\"\n\nIt really didn't matter. I knew how Diane spoke to Noah, and I could imagine what kind of vitriol she spewed at him when he refused to give in. \n\n\"She wants me to hire her a fuckin' lawyer, like that's gonna make a goddamn difference. Said I couldn't... we can't afford that shit. So she said she was just gonna off herself in prison and it'd be my fault.\"\n\n\"It... she...\"\n\n\"Called her on it. Now she's on suicide watch.\" He shook his head and laughed, a single staccato bark. \"Can't do this anymore. I wanted her to... she's never gonna be the mom I wanted, I'm never gonna be the son she wanted, I can't... baby, I can't.\" \n\nI held him again, not speaking, not knowing what to say. What can someone even say to that? There was nothing I could do to make it better. It was easy enough to see a relationship between them couldn't be fixed, that it would take effort on her part that she wasn't willing to give. Saying that would have helped nothing. Telling him he tried, and he did his best, and that it was time to let her go and move on... none of that would be of any comfort or help to the heartbroken man in my arms. None of that changed the fact that it was his mom. None of it changed the feeling that he wasn't enough for her. \n\nAll I could do was make sure he knew he was enough for me, and for everyone else who knew him. \n\n<center>Chapter Thirty-Seven</center>\n\nThe next week was the most difficult we had faced.\n\nNoah tried, but part of him was broken. He wasn't mean or grumpy or malicious. Instead, he was withdrawn, tired all the time, and just sad.\n\nI did what I could. I asked if he wanted to talk, and when he didn't, I simply stayed with him. I knew he appreciated it, and I knew he felt bad for feeling so listless. He apologized again and again, and I told him again and again that he didn't have anything to apologize for. Still, the guilt seemed to overtake him.\n\nOn Sunday, we went to church. After the service, I asked if he'd be willing to talk to our pastor again. Noah stiffened, his hand tightening on mine, but after a moment he nodded.\n\nWhen he came out of the pastor's office, he had a smile on his face. A real smile, the first real smile I'd seen since his mom had been arrested.\n\nEven still, it took time to heal. Another week went by, and on Saturday morning, Noah mumbled that he just wanted to stay in bed. \n\n\"I'm staying with you,\" I whispered when he protested as I curled up beside him.\n\n\"You don't have to.\"\n\n\"I know.\"\n\nI wrapped my arms around him and after a moment, he hugged me back.\n\n\"Thank you,\" he murmured. \n\nThe next day, he was up before I was. Earlier than seemed reasonable, he gently shook me awake.\n\n\"Can we skip church today?\" he asked.\n\nI must have looked confused. I certainly felt confused, still drowsily blinking the sleep from my eyes.\n\n\"Wanna go hiking. Just feel like... like I wanna be outside.\"\n\nI kissed him, nodded, and an hour later we were driving down the highway, headed to a trail that we'd never been to before.\n\nIt wasn't a particularly difficult hike, but even though it was a fairly popular trail, it wasn't very busy. Noah and I walked steadily, holding hands some of the way, quietly introspective most of the way. The trail wound through leggy pine trees that stretched high above us, imposing in their height, but with trunks so thin they seemed almost frail. At the end we came upon a waterfall, stones covered with green moss and trees bending over the pool at its base.\n\nThere was a family sitting at a picnic table, the two children laughing as they splashed in the pool of the waterfall. We smiled politely as we passed them. Slightly beyond the picnic table was another trail that took us to the top of the waterfall. We were the only two up there, and we sat quietly on the edge looking down at the river.\n\nFor a long time, there was nothing but the sound of wind tickling through the trees and the water dropping beneath us.\n\n\"I want to move,\" Noah finally said.\n\n\"You... what?\"\n\n\"I want to move. Montreal seems like a good bet. Got your family, and Duncan's expanding Tom's business there. Could probably work with him on that. But doesn't matter, if you want to go somewhere else, that's... I want to move.\"\n\n\"Noah\u2014\"\n\n\"You said we could drop everything, quit our jobs, and move. When we first came here, remember? If we didn't like it. I'm... I want to be near your family. Being with them last month... I really liked that. I miss them. And I know you do too.\"",
        "\"Okay.\"\n\n\"Okay?\"\n\nI nodded. \"Let me finish out the school year. Two weeks. Let's try Montreal. We can stay with... well, whoever, if it takes some time to find a place. Sean and Rick, or Theo and Aspen, or even my mom if it comes down to it. If that doesn't work, we'll go to Toronto so you can work with Tom.\"\n\n\"I'll tell Jordan tomorrow.\"\n\n\"Do we have to give notice on our lease?\"\n\n\"We're still on month-to-month. We'll have till the end of July to move.\"\n\n\"So we lose a month's rent. Whatever.\" \n\n\"We have enough put away to get across the country. Not like we spent any of it on Sean's wedding so... we have a good amount, plus enough for a deposit on a place. Should get our security deposit back, too. And I've got some saved up. Do we want to drive it or\u2014\"\n\n\"Might as well. Then we don't have to sell the car.\" \n\n\"Should be able to fit everything in. Furniture's not ours anyway.\"\n\n\"Anything that doesn't fit, we can give to Jordan and Vanessa. Or to the thrift store.\"\n\nThe entire conversation was calm. There was little emotion behind it; no sadness, no regret, no excitement. The moment he said it, it just was. It was how we knew it was time, how we knew we'd had enough. \n\n\"Thought it would be a lot harder to convince you.\" He took my hand as he said it.\n\n\"No. You're right. I miss them too.\"\n\n<center>Chapter Thirty-Eight</center>\n\nThe last two weeks of June were an intense tornado of madness.\n\nWhen we got home that night, we called everyone. Mom was first, then Sean and Rick, then I finally called Aspen.\n\n\"YES!\" she screamed, loud enough that I had to move the phone away from my ear. \"When are you coming?\"\n\n\"School's done on the 26th, so if we get everything together and Jordan doesn't manage to guilt Noah into staying longer, we'll be leaving the 27th.\" \n\n\"What? Holy shit, Lacey, that's like... two weeks.\"\n\n\"Yeah. Should be doable.\" \n\nIt wasn't quite doable. Packing up the apartment took longer than we thought. The end of the school year was not exactly the best time for me to decide to uproot my entire life, so when I wasn't packing, I was marking, and when I wasn't marking, I was sending resumes to the school board postings I found online. Noah was firm with Jordan about when he was leaving, but worked long hours so he could help as much as possible with the transition. On top of all of that, I ended up with a stomach bug that just wouldn't go away.\n\nIt started a few days after we'd made our decision, the day after I announced to the entire staff that I wasn't returning the next year. Curt had thrown together a hasty goodbye party and everyone came to the staff room after class. There was a huge cake and a goodbye card, and I teared up as I hugged each and every person who came by.\n\nWhen I took a bite of cake, though, my stomach turned.\n\nIt looked fine, and no one else seemed to notice, but it tasted almost bitter to me. An immediate wave of nausea overtook my stomach and I put it down, my mouth watering threateningly. \n\n\"Excuse me for a moment,\" I said, and practically ran to the bathroom.\n\nIt calmed down a few days later, but returned for the last few days of June, accompanied by a weary sense of fatigue that I just couldn't shake.\n\n\"Sure you don't want to see a doctor?\" Noah asked one night as I tiredly put dishes in a box.\n\n\"I'm fine,\" I said. \"I barely ever get sick. Just my time, I guess. Did you ever notice that it kind of smells here?\"\n\n\"Smells?\" he repeated.\n\n\"Yeah. Like... the whole town.\"\n\nHe looked at me suspiciously. \"Baby, did you... did you just notice that?\" \n\nI shrugged and went back to packing. \"I guess. I don't know.\"\n\nWe didn't end up having to worry about Noah getting a job, at least. He had been right about Duncan expanding Tom's business to Montreal, and he was ecstatic when Noah asked if he could work with him.\n\n\"I'm already fucking swamped,\" he told Noah. \"You want in, you're in. Tom's gonna lose his fuckin' mind when he finds out I got you.\" \n\nAspen was as excited as my family was that we were moving. \n\n\"You don't need a damn apartment!\" she scolded me. \"Theo and I have a couple of rentals, take one of those. Our tenants just moved out of one like, ten minutes away from where Rick and Sean live.\"\n\n\"We don't need a whole house,\" I argued. \"Plus, I don't even have a job there yet. We can't take on rent when\u2014\"\n\n\"Do not even go there.\"\n\n\"I am absolutely going there. You and Theo are not\u2014\"\n\n\"I'm not saying for nothing, I'm saying... look, the properties are paid off. It's not like we have a mortgage to cover. You pay what you'd pay for an apartment and you'd be doing us a favour so I don't have to find another damn tenant for the place.\" \n\nWe didn't end up leaving Prince George until the 29th. By then, my stomach bug seemed to have faded, and the trip was actually fun. We started getting really excited once we crossed from Manitoba into Ontario. Things were like old times, just me and Noah on another adventure, facing a future that was uncertain and terrifying and exhilarating. \n\nNoah had a highly ambitious goal of making it from Prince George to Montreal in four days. In actuality, we took five, which was still exceptionally good timing. On the fifth day around noon, I called Sean.\n\n\"Guess where we just passed.\"\n\n\"Where?\"\n\n\"Lac-Barri\u00e8re.\" \n\nHe nearly cried laughing. \n\n\"The one in Quebec this time, right?\"\n\n\"Yep. We should be in Montreal in about four or five hours.\" \n\n\"Awesome. Come over for dinner. Aspen will meet you here to give you the keys and show you where you actually live.\"\n\nI grinned, staring out the window as the highway whipped past us.\n\n\"Sounds good.\"\n\n\"We're so excited, Lace.\" His voice wavered slightly. \"Can't believe you're finally coming to live here.\"\n\nWhen I hung up, I squeezed Noah's hand.\n\n\"You okay?\" he asked.\n\nI nodded.\n\n\"Are you?\"\n\nHis eyes were on the road, but I watched a bright smile cross his face.\n\n\"Yeah. This feels right.\"\n\nWhen we pulled into Sean and Rick's driveway, Mom's car was already there. I stretched as I got out of the car, my legs stiff and my lower back aching. Before we could even get to the front door, it flew open and Mom ran outside.\n\n\"Lacey!\"\n\nShe hugged me so tightly, I couldn't breathe and when we parted, I was red-faced and laughing. Without another word, she turned to Noah and embraced him.\n\n\"How are you, Noah?\"\n\n\"Fine, Barb. Long trip but glad to be here. How're you?\"\n\nShe kept a hand on his shoulder as she let go, looking up at him.\n\n\"How are you really?\"\n\nHe swallowed and nodded.\n\n\"Doing okay. It's been... we're better now. Gonna be okay.\" \n\nShe hugged him again.\n\n\"If you need anything, you tell me,\" she said. \n\n\"Thank you.\"\n\n\"I mean it. You're family. We take care of each other.\" \n\nNoah may not have cried, but I definitely had to turn away as I teared up.\n\nSean caught the tears in my eyes as he rushed out the front door, but gallantly ignored them as he hugged me. By the time we made it inside to more hugs from Theo, Alexandre, and Rick, I had recovered, and was laughing as Aspen crashed into me.\n\n\"See, I told everyone I'd get you to move here.\" She grinned, her voice jokingly arrogant. \"'We've been after Lacey for ages,' they said. Should've put me in the game a lot earlier.\" \n\n\"It was Noah's idea,\" I shot back.\n\n\"Details, details.\" She pulled me up to the kitchen. \"Rick's making steak. You want red or white wine?\"\n\n\"Red, please.\" \n\nMuch to the general disappointment of everyone, Noah and I insisted we couldn't stay very long after dinner.\n\n\"I'm really about to fall asleep,\" I said, covering my glass with my hand as Rick tried to pour me a third glass of wine. \n\n\"We've been driving for five days,\" Noah added.\n\n\"We'll have a housewarming party or something next weekend,\" I added. \n\n\"You'll need furniture,\" Aspen said. \"Why don't we go to Ikea tomorrow?\" \n\n\"Well...\"\n\n\"We've been collecting some things at the church, too,\" Mom said. \"Rick brought over the bed already, so you have a place to sleep tonight.\"\n\n\"It's just the old one from the guest room,\" Rick added. \"Sean wanted to give you the futon too, but, sadly, it fell off the truck.\" \n\n\"You're so full of shit,\" Sean mumbled. \"Throwing out my futon.\"\n\n\"You promised to get rid of it after we got married.\"\n\n\"Yeah, I just didn't say when.\"\n\n\"Well, I did.\" \n\n\"Perfect,\" Aspen interrupted. \"Noah can pick up the stuff from the church with you guys tomorrow, and Lacey and I will have a shopping date at Ikea. I'll pick you up at ten, Lacey.\" \n\n\"Just for the absolute basics,\" I said firmly. \"We don't... we'll add more furniture once we're both working again.\"\n\nTheo and Aspen left with us, since they were technically our landlords and wanted to show us the place. She hadn't been joking when she'd said it was close to Rick and Sean's: we were barely in the car ten minutes when we pulled in front of a small but pretty house with an actual white picket fence.\n\n\"Holy suburbia,\" Noah muttered.\n\n\"We can find another place to live,\" I said. \"If you hate it, I mean.\"\n\nHe shook his head, laughing as he parked the car in the driveway.\n\n\"I love it, baby.\"\n\nAspen was waiting impatiently at the front door as I climbed out of the car.\n\n\"Well, come on! Come see your house!\"\n\nShe excitedly gave us a tour. Well, gave me a tour. Theo and Noah chatted quietly as she bounded around the house, showing off the kitchen and the living room, pointing out small deficiencies that she said she'd get someone to come fix if it bothered us.\n\n\"It's literally just a scratch,\" I said, rolling my eyes as she apologized for what she described as a hole in the drywall. \"We can fix it ourselves, if you don't mind us doing that.\"\n\n\"Whatever,\" she said. \"It's your house. I trust you.\" \n\n\"Just hang a picture over it,\" Theo offered.\n\n\"It's two feet off the floor, Theo. What kind of painting do you hang two feet off the floor?\"\n\nHe shrugged and grinned. \n\nI insisted that Aspen make us sign a lease and transfer our first month's rent to her immediately. After that, she handed Noah and I each a set of keys, grabbed Theo's hand, and told us to have a good time breaking the house in.\n\nThe small house seemed incredibly quiet once they were gone. I stood in the kitchen, staring out the window at the small backyard until Noah came up behind me.\n\n\"Pretty big upgrade from our last place.\" \n\n\"I don't know if I'll be able to sleep without the sound of people walking around at all hours of the night.\"\n\nHe laughed and wrapped his arms around me, kissing my neck.\n\n\"How you feeling?\"\n\n\"Good. Overwhelmed.\"\n\n\"Me too.\" \n\n\"Should we unpack the car?\"\n\nIt took less than half an hour to bring all our stuff in. The car was packed tightly, but even still, we hadn't brought much with us. Not nearly enough to fill an entire house, in any case. By the time we were ready for bed, most of the boxes were empty or waiting for the furniture we'd be getting the next day.\n\n\"Where'd these ones come from?\" Noah asked while I was making the bed. He motioned to the stack of boxes in the corner of the bedroom.\n\n\"Rick must have brought them over. It's the stuff that was in their basement.\" \n\nHe looked through them idly as I tucked the sheets in.\n\n\"This a yearbook?\" he asked, holding something up.\n\nI snorted as I crossed the room, taking the book from him. \"Yep. Grade 12.\" I flipped the book open and found the graduating class. \"That's me.\" \n\nHe chuckled as he looked at the page.\n\n\"You haven't changed a bit.\" \n\nHe was both right and wrong. The girl in the photo was just that; a girl. I could see the naivety written across her face, the innocence in her smile, and the veiled pain in her eyes. It took a long time for me to realize how hurt I had been growing up, how scared and alone I'd truly felt. It took finding love and friends and happiness to show me what I now knew I had been missing.\n\nAll that aside, she was still me. She had my eyes and hair and freckles. She was pretty, something I'd never thought about myself until meeting Noah. I smiled and shook my head.\n\n\"This one's Roger,\" I said, pointing to the picture next to mine. \n\nNoah grunted at the photo. \"Looks like a douchebag.\"\n\n\"That's because he is one.\" I flipped to the previous page. \"And that's Kristen. The one he got pregnant. She was probably the closest friend I had growing up.\"\n\n\"Hmm.\"\n\nI closed the yearbook and put it back in the box, then pulled Noah's face to mine and kissed him.\n\n\"Mm,\" he said. \"What's that for?\"\n\nWhat was it for? For saving me. For loving me. For being who he was. For helping me blossom into who I was. For every happy moment and every sad one, every moment in between that I wouldn't trade for anything in the world. For the laughter, the tears, and the love. For all the things he did for me. For all the ways I loved him, and all the ways that words would never be enough to show him.\n\n\"Nothing.\" I kissed him again. \"I just love you.\" \n\n\"Love you too.\"\n\nThe house was still mostly empty, the bed was our only piece of furniture, and yet, it was already home. As he kissed me back, I put my arms around his shoulders and pressed my body to his.\n\n\"How about we make this house really ours?\" I suggested.\n\n\"You read my fuckin' mind, baby.\" \n\nHe used his body to guide me to the freshly made bed, his lips only leaving mine so he could pull his shirt off. Mine followed moments later, and I unhooked my bra as he unbuttoned his jeans. When the back of my legs hit the mattress, he stopped pushing me forward, then dropped to his knees as he pulled my leggings down.\n\n\"Wait,\" I said, resisting as he tried to part my thighs. \"I haven't, um, showered, and we were driving all day.\"\n\n\"Don't care,\" he said casually, then pushed his face against my pussy.\n\nMy knees nearly buckled as he found my clit, my thighs spreading of their own accord once he had started licking me. He stopped just long enough to push me back onto the bed, then crawled between my legs and resumed circling my clit with his tongue.\n\nI moaned as he pushed a finger inside me, squirmed when he added a second. When he gently teased my asshole, I shivered, then cried out as he pushed a finger inside. \n\nHis hands and his mouth worked together, building me up to that wondrous, glorious place of pleasure. My thighs cradled his head; my hands were both tangled in his hair, and the ascent of orgasm was climbing and growing and pulsing through me. My back arched and I cried out as I tipped over the edge of bliss, shaking uncontrollably as it flowed through me.\n\nHe pulled away as I finished, wiping his mouth as he brought himself up my body. Before he could sink into me, I shifted, pushing on his chest insistently.\n\n\"I want to be on top.\" \n\nHe grinned and relented, lying back on the mattress as I scrambled to my knees and straddled him. His knees bent as I sank down onto him, sighing as he groaned, replacing the fullness his fingers had provided with the even-more satisfying fullness from his cock. \n\nI rode him steadily, pushing him as far inside me as I could, quivering with each motion that brought him deeper and deeper. After a bit, he put a hand on my lower back and guided me forward so he could suck on my breasts while thrusting up into me. \n\n\"Not so hard,\" I gasped as he sucked one nipple.\n\nIt really wasn't that hard, but my nipples seemed extra sensitive to his touch.\n\n\"Sorry,\" he mumbled, and kissed it gently.\n\nHe nuzzled my breasts with his face instead, kissing and licking them as he pushed himself inside me.\n\nWhen his hands tightened on my hips, I knew he was close. I rolled my hips, grinding myself against his pelvis, eager to come again before he did.\n\n\"Come for me,\" he groaned. \"Let me feel you, baby.\"\n\nI couldn't have stopped myself if I tried, crying out as my pussy clenched around him. Noah grunted and thrust up harder into me, his arms wrapped around my waist. Then he was coming, buried deep inside me, gasping as he finished.\n\nWe rested against each other for a few minutes, breathing heavily.\n\n\"Wanna check out the shower now?\" he asked.\n\n\"Only if you come with me.\"\n\n\"Just did, baby, but I can try again if you want.\" \n\nI smacked his arm and moved off him, laughing as he rolled over and kissed me. \n\nIt had only been our home for a matter of hours, but it was so full of love that it felt like we'd been there for years. Every time I thought I was the happiest I'd ever been, another day went by, and I was happier than I had ever been. \n\n<center>Chapter Thirty-Nine</center>\n\n\"Ew, no way. I'm not getting a floral sofa.\"\n\n\"It's cute!\" Aspen insisted.\n\n\"It reminds me of my Nana. No way.\"\n\n\"Ugh, fine. What about this red one?\"\n\n\"What about the green one?\"\n\nShe sat on the floor model, shifting her hips on the cushions.\n\n\"Okay. I approve.\" \n\nI wrote down the aisle number of the green sofa, then the price. \n\n\"What's next?\" Aspen asked.\n\nI bit my lip. \"Well, Noah said there's a table at the church, so we don't need one for the kitchen, but there's no chairs with it.\"\n\n\"Did he send a picture?\"\n\nI showed her the photo Noah had sent on my phone and Aspen wrinkled her nose.\n\n\"You really want that table?\"\n\nI tried not to show my annoyance. Aspen and I had very different shopping styles, likely stemming from the fact that I was checking every price tag and she didn't know where the price tags even were.\n\n\"We'll replace it eventually,\" I said evenly. \"But it'll do for now.\" \n\n\"Let's just pick out one for fun so you can get chairs that'll eventually go with it.\" \n\nI sighed and we moved on to the kitchen area.\n\n\"You're not having a good time,\" she said.\n\n\"I am!\" I insisted. \"We just... until I've got a job, we're just getting the necessities. I don't need a TV stand when we don't even have a TV.\" \n\n\"You're right. Sorry.\" She looped her arm through mine. \"Let's put together your dream furniture list while we're here so you know what you want to come back for. The longer we take here, the less likely we are to have to help the boys move all the crap over from the church.\" \n\nI laughed, my mood brightening considerably at her suggestion.\n\nWe were in the bed area looking at nightstands when my stomach lurched very suddenly.\n\n\"I just think you should get the one you like, rather than the cheaper one,\" Aspen was saying as my hand flew to my mouth. She raised her eyebrows. \"But if it upsets you that much, I guess\u2014\"\n\n\"Bathroom,\" I managed to choke, and she realized with a start that my sudden motion had nothing to do with the price of the Hemnes nightstand.\n\nShe grabbed my arm and we bolted toward the Ikea restaurant. I swallowed repeatedly, fighting urgently not to puke in the middle of the store. I won, but it was only by a narrow margin: I barely managed to get into the stall before losing my entire breakfast. \n\n\"Are you okay?\" Aspen asked when I came out, shaky and pale.\n\n\"I thought I was over this damn bug,\" I muttered, embarrassed. \"Sorry.\"\n\n\"Don't apologize. What bug?\"\n\n\"I've had a stomach bug for like... I don't know, a couple weeks. It went away before we even left Prince George, but I guess it's back.\" \n\nShe stared at me as I splashed water on my face and rinsed my mouth.\n\n\"So, when you say stomach bug, like... coming out both ends, or...?\"\n\nI blushed at her question and laughed awkwardly.\n\n\"No, just... you know, puking. And just a little tired. I was so exhausted the last week we were there.\"\n\nShe nodded.\n\n\"Mm-hmm. Any other... symptoms?\"\n\n\"What, are you a doctor now?\" I laughed, but Aspen didn't.\n\n\"When was your last period?\"\n\nI froze, my eyes meeting hers in the bathroom mirror.\n\n\"I'm not pregnant,\" I said. \"I'm on the pill.\"\n\n\"Just the pill?\"\n\n\"It doesn't matter, I'm not pregnant.\"\n\n\"Even if you take the pill perfectly, there's still a chance.\"\n\n\"Of course I've been taking it perfectly.\"",
        "Aspen raised her eyebrows. \"You've never missed a single one? Take it at the exact same time every single day?\"\n\nI stared at her.\n\n\"You're supposed to take it at the same time?\"\n\nShe blinked, seemingly uncertain if I was joking. When she decided I wasn't, she shook her head.\n\n\"Jesus Christ, Lacey. It's a miracle it hasn't happened before.\"\n\n\"It's not happening now!\" I replied. \"I'm not. Aspen, I can't be.\" \n\n\"Nothing else strikes you as different? Come on. I know... I know what it's like. Your boobs hurt? Changed sense of taste or smell? You've already got 'tired' and 'probably morning sickness.' When was your last period, Lacey?\"\n\nI stared at her as quick flashes of memories jumped through my head. Noah's mouth on my nipple the previous night and the tiny jolt of pain from something he'd done a million times before. The tiredness, the nausea, the bug that I just couldn't shake. The cake at the goodbye party that made me sick.\n\n\"Before the wedding,\" I whispered. \"I didn't... with how busy everything was...\"\n\nAspen hugged me before I could start crying. I didn't hug her back, just stared at myself in the mirror, my face blank and my body numb.\n\n\"We're going to finish shopping,\" she said as she released me. \"Then we're going to go to the drugstore. We're going to get a test. We're going to stay calm and not panic.\" \n\nI nodded and turned away from the mirror.\n\nI picked up a few other things once we left the showroom. A lamp, a few trash cans, stupid little sundry things that barely mattered. My mind wasn't on them, and I had stopped paying attention to the price tags. When we got to the warehouse, Aspen pulled out her phone and stopped me from grabbing one of the flat carts.\n\n\"You don't need that,\" she said.\n\n\"We need to get the boxes.\"\n\nShe shook her head.\n\n\"I already had someone get the boxes for us.\" \n\n\"This is Ikea. They don't get the boxes for you.\"\n\n\"I know, I had someone else get the boxes. It's already in the delivery truck.\"\n\n\"What?\"\n\nShe nudged me lightly. \"Happy housewarming.\"\n\n\"Aspen, you didn't\u2014\"\n\n\"Consider it a fully furnished rental if you have to, but it's too late to turn it down because I already paid.\" She waved a confirmation email at me from her phone. \"You can get your cart full of trash cans, if you insist.\" \n\nIt was a testament to how completely numb I was that I barely argued with her, and didn't even blink when she shoved her credit card into the machine before I could pay for my cart full of trash cans.\n\n\"It's going to be okay,\" Aspen said after we got into the car and she pulled out of the parking lot.\n\n\"I can't be pregnant.\"\n\n\"It's going to be fine.\"\n\n\"I don't... I'm not ready. I don't want... I don't even know if Noah wants... I can't be pregnant.\" \n\n\"Lacey, if you aren't, that's great. If you are, it's okay. There's... options. And you don't even know yet. I shouldn't have said anything, I probably just made you panic for no reason.\"\n\nShe told me to wait in the car when we got to the drugstore. While she was there, my phone went off.\n\nGonna be much longer? We're done with the stuff from the church. Theo said the delivery truck was coming with the Ikea stuff, you want them to hang out and help with that?\n\nSure.\n\nK. So... I'll see you soon?\n\nAspen got back into the car and handed me a bag with two pregnancy tests and a one-litre bottle of orange juice.\n\n\"Drink. You're gonna need to pee.\" \n\n\"Noah wants to know if we're going to be back soon. Theo said the delivery truck was on its way.\"\n\n\"Tell him we're stopping by a couple other stores.\"\n\nChecking out some other stores first.\n\nCool. Gonna take the guys out for lunch after the Ikea stuff gets here then. Let me know when you're headed back.\n\nOk.\n\nLove you.\n\nI swallowed hard, unsure if the sudden wave of nausea was from my nerves... or something else.\n\nLove you too.\n\n<center>Chapter Forty</center>\n\nWhen Aspen dropped me off at home, Noah wasn't back yet. She helped me bring the Ikea bags into the house.\n\n\"Do you want me to wait with you?\"\n\nI shook my head.\n\n\"It's going to be okay.\"\n\nI nodded and she hugged me.\n\n\"Call me tonight. Let me know you're... you know, all right.\" \n\nI nodded again and she left, though it seemed like she hesitated at the door.\n\nWe had gone to Aspen's house so I could take the test. Even after drinking the entire litre of orange juice, it took forever before I felt like I needed to pee.\n\nI'd taken the test in her master bathroom with Aspen standing outside the door. Once I was done, I put it on the counter and walked out.\n\n\"Can you look at it for me?\" I asked quietly. \"I don't... I'm so scared.\"\n\nShe hugged me for almost the entire three minutes we had to wait for the test results to register. \n\n\"Are you sure?\" she asked before going into the bathroom.\n\nI nodded.\n\nWhen she came back out holding the test, I knew before she opened her mouth. Less than a minute later, my phone went off with a text from Noah.\n\nDelivery's done. Nearly freaked out when the boxes just kept coming until Theo told me what they did. Thank Aspen for me, would you? It's all unloaded. Gonna stop by Theo's for a bit, then go to lunch. You two still out?\n\nStill out, yeah. Have fun.\n\n\"We need to go,\" I said, showing her the text. I made sure the little white stick was tucked at the bottom of their trashcan, left the second test for Aspen, and we drove off before I had even really registered the two bright pink lines confirming I was pregnant.\n\n\"Are you okay?\" she asked as we drove.\n\n\"I had two glasses of wine last night.\" My voice was flatly horrified.\n\n\"It's okay. It's not the end of the world. I mean, it's not recommended, but obviously sometimes these things happen and it's probably not a big deal. You'll have to... ask your doctor, I guess. If you decide... fuck.\" Aspen shook her head. \"I'm sorry. I'm so bad at this.\"\n\n\"I'm sorry, too.\"\n\n\"For what?\"\n\nI tried not to cry, but a rebellious teardrop slipped down my cheek. I brushed it away roughly.\n\n\"You and Theo... and meanwhile I'm...\"\n\n\"Don't think for one second that I'm not going to be supportive of whatever you choose to do or that I'm upset that you're pregnant and I'm not.\" We were stopped at a light and she looked at me earnestly. \"This isn't about me and I don't want it to be.\"\n\nThe light turned green and she drove forward as I wiped another tear off my cheek.\n\n\"You're way too good of a friend,\" I said. \n\n\"If you ever find yourself thinking that, remember how much you hated me when we first met and it should go away.\" \n\nFrom the time Aspen dropped me off to the time Noah returned, I busied myself building Ikea furniture. The delivery drivers had set the boxes into the rooms they were going in, and the sofa and armchair had been set up in the living room, but there were still end tables and nightstands and kitchen chairs to build. By the time Noah walked in the front door, I had built everything except a bookshelf, the TV stand, and the dresser we got for our bedroom.\n\n\"Damn,\" he said as I screwed the last bolt into the chair I was working on. \"You're pretty fuckin' good at that.\" \n\nI tried to smile.\n\n\"When'd you get home? Thought you were out with Aspen.\" \n\n\"A few hours ago.\" \n\n\"Should've texted me.\" \n\n\"Sorry.\"\n\n\"What's wrong?\"\n\nI stared at the kitchen chair, expecting my heart to race and my eyes to water, but they didn't.\n\n\"Baby, I can tell when something's wrong. Talk to me.\"\n\nHours of building furniture by myself when I should have been trying to figure out how to tell him. \n\n\"Lacey?\"\n\nI finally looked up at him, still eerily calm, still a bit numb and shocked. When my eyes met his, the calm cracked, and the absolute terror and uncertainty spilled out.\n\n\"Please don't hate me,\" I choked as the tears started.\n\n\"What?\"\n\n\"Don't be mad.\"\n\n\"You gotta tell me about what first.\"\n\n\"I'm so sorry, I'm so stupid and now I'm... I've fucked everything up and I'm sorry, I didn't know, I didn't... please don't hate me.\" \n\n\"Lacey, calm down, please.\"\n\nHis voice wasn't quite cold. It was concerned and a bit hesitant. I took a shaky breath and wiped my face, losing my voice yet again.\n\n\"You're scaring the shit out of me,\" he said. \"Please don't tell me it's like... you're not like...\"\n\nMy stomach turned as he stammered.\n\n\"You didn't like, meet... someone else.\"\n\nIf there was a single thing he could have said that would have jolted me from my panicked state, it was that. I stared at him, eyes still running, taken aback.\n\n\"I'm not cheating on you,\" I said dumbly.\n\nHe tried to hide the relief on his face, but it was more than obvious.\n\n\"Why would... you...\"\n\n\"I know,\" he said quickly. \"I'm... just, the way you... you said... Fuck, I didn't mean to be like... of course I don't think\u2014\"\n\n\"I'm pregnant.\" \n\nIt was Noah's turn to stare dumbly at me.\n\n\"You're...\"\n\n\"Pregnant. I took a test earlier. W-With Aspen. She w-was... she figured it out b-before I did.\"\n\nHe stared at me silently from across the kitchen. \n\n\"I'm sorry,\" I finally whispered, tearing my eyes from his as I started crying again.\n\nHis arms were around me a moment later.\n\n\"Don't be sorry,\" he whispered.\n\nI could barely hear him. My entire body shook, trembling and tense and terrified. He held me close, rubbing my back and stroking my hair as I cried into his shirt, weeping as hard as I'd ever wept before.\n\n\"Baby, it's okay,\" he said softly. \"It's okay, let's figure this out.\"\n\n\"I'm s-s-sorry,\" I stuttered again. \"I w-was taking my p-pill, I promise, I j-just didn't know... I'm so s-stupid.\"\n\n\"You're not stupid. You're not, baby.\"\n\nI tried to say something else, but my mouth wouldn't work. Noah hugged me tighter for a moment, then brushed my hair off my forehead and kissed it. \n\n\"Sit down,\" he said, pulling the chair I'd just built to the table and guiding me to it. \"Sit.\"\n\nShakily, I lowered myself into the chair. Noah went to the cupboard and got a glass of water.\n\n\"Need to get Kleenex,\" I heard him mutter before he tore a paper towel off the roll.\n\nHe pulled one of the other kitchen chairs to the table and sat beside me, sliding the glass and the paper towel to me. I dabbed my eyes gently before sipping the water.\n\n\"Okay,\" he said. \"Let's... let's talk this out.\" \n\nI nodded.\n\n\"What do you want to do?\"\n\n\"I don't know,\" I whispered.\n\n\"You still... still think you don't want... I mean, it doesn't matter if you do or don't, I just need to know.\"\n\n\"I don't know,\" I repeated. \"I'm s-sorry, I just d-don't.\" \n\n\"No more apologies,\" he said sternly. \"This isn't... there's no blame here. Or there's blame on both of us. Whatever. It doesn't matter. Don't apologize, okay?\"\n\nI sniffed and nodded shakily.\n\n\"So if you don't know... let's talk about the options. Let's, you know, weigh what we think is best.\"\n\n\"I mean... we keep it or get... get rid of it,\" I choked. \"They're both scary. I hate both options. I want to go back.\"\n\n\"Go back? Like, to Prince George?\"\n\nI shook my head.\n\n\"No, to... to before this happened. I'm scared, Noah.\"\n\n\"What's scaring you?\"\n\nBefore I could second-guess myself, I was laying all my fears on the table. The fear that Noah would resent me. The fear that I wouldn't make a good mom, that I would fail as a parent, that I had no idea what I was doing because I didn't have normal parents. The fear that Noah was in the same boat when it came to that.\n\nThen the fears become more real. I had no job. Babies cost money. We weren't married and people would judge me. My mom might be upset. We weren't ready. It would put strain on our relationship. He might not want to stay with me.\n\n\"If I was too s-stupid to know how to take birth control properly, how c-could I possibly raise a k-kid?\" My head was in my hands as I cried.\n\nBut the other option wasn't any better. There was only one question there, and it was a question I didn't want to face. It was a choice, and it was my choice, and I was thankful that I had the option to even make that kind of choice... but how could I? \n\nIt was a choice I didn't want to make. \n\n\"Please tell me what you think,\" I begged quietly.\n\n\"Baby, it's not... it's not up to me.\"\n\n\"It's up to both of us. Don't make me do this alone.\" \n\n\"I just mean I don't want you to feel like you have to do what I want,\" he said. \"Don't want you to, I dunno, choose what I'd choose just to make me happy.\"\n\n\"I'm not saying I will,\" I said. \"I just need to know, Noah. Please.\"\n\nHe stared at me silently and took a deep breath before responding.\n\n\"I want it.\"\n\nIt was only as he said it that I realized I'd been assuming he didn't.\n\n\"You...\"\n\n\"I wanna keep it,\" he said, and his voice broke. \"It scares the shit out of me, don't get me wrong. I'm fucking terrified. But I want to have kids. Want them with you, Lacey. I wanna be a dad. I want to fucking marry you. I want this stupid house with a picket fence and some kids and you.\"\n\nI stared, my mind racing to process what he had just said.\n\n\"Did you just...\"\n\nHis face changed as he realized what he'd said.\n\n\"Fuck. I mean...\" \n\n\"You want to marry me?\"\n\n\"Of course I want to marry you!\" His cheeks were turning red. \"Fuck, I was gonna...\" \n\nHe laughed suddenly, shaking his head as he stood up. \n\n\"Wait here a sec,\" he said, and left the kitchen.\n\nMy heart jumped into my throat and I stared after him, frozen in place until he returned just a few moments later. The trace of laughter had faded from his face and was replaced by something that was part serious, part resolved determination, and part vulnerable sincerity. \n\n\"Gonna remind you right now my timing's always been shit. Remember the first time I said I love you?\" he asked as though he hadn't left the room.\n\nI smiled, a small, wet laugh escaping my throat.\n\n\"Middle of sex,\" I replied, remembering the look on his face, and he chuckled.\n\n\"Didn't change the fact that I love you, even though it might've been... you know, shit timing. And right now, need you to know whatever happens next, whatever you think I want and whatever we decide to do about, you know, the... it. Whatever decision we make, it's not gonna ever change how much I fucking love you.\" Noah took my hand, still standing in front of me. \"Promise me you understand that. If you don't want to keep it, I'm never, ever going to fucking hold that against you.\"\n\n\"I p-promise.\" \n\n\"Good.\"\n\nIt felt almost surreal, almost completely dream-like, to watch him take a knee in front of me. Still holding my hand, he swallowed, revealed the ring in his other hand, and met my eyes.\n\n\"Will\u2014\"\n\n\"Yes.\"\n\n\"Gotta let me ask the damn question, baby.\"\n\n\"Still yes.\"\n\n\"Will you marry me?\"\n\nI burst into tears and nodded as he slid the ring on my finger. Before even looking at it, I pulled him to me, kissing him harder than I think I ever had before in my life.\n\nGranted, it was probably a terrible kiss. He was laughing, I was crying and laughing, it was just a mess. When I pulled back and wiped my face, he took my hand again.\n\n\"'Kay, I gotta explain about the ring, 'cause it's not... I know it's not, like, a ring-ring, but I didn't know what kind of ring you'd like so I just, it's just for now. We can go pick out a real one together. But I saw you, you know, look at this so I thought... I mean, I wanted you to know I had it before... this. Before you told me.\"\n\nI looked down at my hand as he rambled, my heart swelling. Silver, with a round jade stone in the center. He'd had it since we'd been in Banff.\n\n\"This is perfect,\" I whispered. \"I don't need another one.\"\n\n\"Know you don't. Gonna get it for you anyway.\" \n\nWe didn't talk much more. It was too much, too many things at once. Happiness and terror and uncertainty and shock and love. So much love. We decided not to decide, not at that moment. We gave ourselves permission to just feel love, to celebrate each other, to know that we were going to be okay.\n\nHe carried me up to our bedroom and lay me on the bed, lowering me to the sheets with the same delicate care he would the petal of a flower. When he kissed me, it was softly; when he touched me, it was as though I was fragile. He was unhurried and deliberate as he ran his hands down my body, fingers brushing lightly along my skin.\n\nSlowly, he became more confident, his kisses deepening and his touch becoming stronger, more sure of himself. He undressed me as though he was unwrapping a gift, pulling my clothes away from me with a sense of wonder and amazement. \n\nIt wasn't just about me, though; it was us. I kissed him back, memorizing the feel of his lips against mine, the way his tongue slipped into my mouth and danced with my own. I touched him as he touched me, exploring the gentle slopes and ridges of his muscles, tracing the tattoos on his arms almost from memory.\n\nI marvelled at him as I unwrapped him, taking in the picture of perfection that hovered over me, still astonished that someone so gloriously incomparable was mine. He brushed the hair off my forehead and kissed me as he slid himself inside me, and I was complete; I was whole.\n\nNoah had brought me so many places; in the literal sense, he'd brought me across the country and back. He'd brought me through cities and towns, to the mountains and the ocean. He'd brought me to my family, to find them when I'd been lost. Less literally, he'd brought me to places of unimaginable bliss and indescribable emotion; he'd brought me there so many times, and each time was perfect and beautiful and amazing.\n\nThat night, as he moved inside me, he brought me there again, and again, and again. He clung to me as I clung to him, felt each tremble of my body both inside and out, kissed each fear away and replaced it with hope and love. \n\nHe was mine, and I was his. \n\nWhen we finished, we lay on the bed and just held each other. I was exhausted; the emotional intensity, the panic, the terror, the exhilaration and the shock all caught up with me. It wasn't quite time for dinner, and so Noah held me as I dozed on his chest.\n\nI was half-asleep when he shifted beside me, kissing my forehead before carefully moving me off his chest and onto the pillow. Before he left the bed, not knowing I was partly awake, he hesitated. With fingers that had all the substantivity of a breeze, he touched my stomach, lingering for an evanescent breath before sliding out of bed.\n\nWhen I padded down to the kitchen a short while later, he was on the phone.\n\n\"Yeah...\" I heard him say quietly. \"No, she's asleep... I know. It's not... I'm not pissed... I'll get her to call you as soon as she's awake... I didn't... Swear to God, is that what you think of me?\"\n\nHe paused, then laughed quietly.\n\n\"I fuckin' proposed, Aspen.\"\n\nThere was a long pause and he chuckled again.\n\n\"No, I appreciate you checking on her... I get it, don't worry... I dunno, you want me to tell you? Feel like you should ask her what she sa\u2014FUCK!\"\n\nHe jumped as I snuck up behind him, whirling around as I plucked the phone away from his ear.\n\n\"What the fuck, are you okay?\" Aspen was saying as Noah started laughing.\n\n\"I said yes,\" I told her.\n\n\"Jesus Christ, this house is quiet. Tell our landlords the floors need to be squeakier or something,\" Noah said.\n\nI barely heard him; Aspen was so loud that there were maybe a few people in Vancouver who didn't hear her scream. \n\nWhen she finally calmed down enough to form coherent sentences, she made sure I was okay\u2014I was\u2014and asked the million-dollar question.\n\n\"Are you... I mean, I shouldn't assume that just because he proposed you're, you know... but are you?\"\n\n\"We haven't decided yet,\" I said. \"I'll... you know, keep you posted.\" \n\n\"If you need anything at all...\"\n\n\"Thanks, Aspen.\" I swallowed hard, trying not to cry. \"You're amazing.\" \n\n\"Psh. Don't get all mushy on me. Love ya, girl. Go celebrate your engagement some more.\"",
        "Noah wrapped his arms around me as I hung up the phone.\n\n\"Glad you've got a friend like her,\" he said. \"I mean, she just threatened to come over here and kick my ass if I'd so much as made you cry, but I'm glad she was there today.\"\n\nI was too, and as much as I knew I would never need Aspen to kick Noah's ass on my behalf, I knew she would never hesitate to stand up for me.\n\n\"I love you,\" I said.\n\nHe kissed my forehead.\n\n\"Love you, my everything bagel with herb and garlic cream cheese. Love you always.\" \n\n<center>Epilogue</center>\n\n\"Now you will feel no rain. You will be shelter to each other. Now you will feel no cold. Each of you will be warmth to the other. Now there is no more loneliness. Each of you will be companion to the other. Now you are two bodies, but there is only one life before you. There will be days of sorrow and days of unbridled joy; you will face them as one. Together, you are eternity; together, you are always.\n\n\"Take each other's hands, please, and repeat after me.\"\n\nNoah's palm was dry and I hoped he didn't mind how sweaty mine felt. \n\n\"Do you, Noah Louis Reiman, take Lacey Marie Stephens...\"\n\n\"I, Lacey Marie Stephens, do take you Noah Louis Reiman, to be my lawful wedded husband...\"\n\n\"With the power vested in me, I pronounce you, Noah, and you, Lacey, to be lawfully married.\"\n\nTom closed the folder he had his notes in, grinned, and waved a hand at us.\n\n\"You know what to do.\" \n\nThe photo of us sharing our first married kiss wasn't quite like the one of Sean and Rick. Noah wasn't in a suit; he wore the pants and the shirt, but it was unreasonably hot that early September day and he hadn't bothered with the jacket. I had wanted to wear the green dress again, but Sean absolutely refused, and it was a bit tight around the middle, anyway. Instead, I'd picked up a flowy white sundress that hid the swell of my stomach on sale at The Bay, and was thankful for the cotton fabric as the sun beat down on us.\n\nTom was grinning in the photo, and Aspen stood just behind us, smiling as Noah and I kissed. Jordan had flown in to stand up with Noah, and he too was just in dress pants and a shirt. \n\nThere were no ties, no coordinated flowers, no poutine bar or DJ. We got married in Theo and Aspen's backyard because it was the largest and had the most parking on the street. Noah and I didn't spend hours taking wedding photos after the ceremony; we posed for a couple alone, and more with our family and friends, then fired up the BBQ and made hamburgers for everyone. I spilled mustard on my dress and shrugged, then continued cooking. Neither of us were drinking, so we told everyone it was BYOB, but Theo had picked up a few cases of beer and wine anyway.\n\nTom and Jenny came in from Toronto, partly for the wedding and partly because Tom wanted to officiate for us. He spoke beautifully and boldly, and we couldn't have asked for a better speaker. They brought Tanya and Shannon, though Robbie and Leslie couldn't make it; they were on their own honeymoon that week. \n\nJordan and Vanessa managed to fly in from Prince George, even with the short notice. Vanessa was heavily pregnant but in good spirits; she positively glowed, and I could only hope I'd look half that beautiful in a few months. Mario came to do my hair, and stayed for the ceremony and dinner. Then, of course, our family: Mom and Alexandre, Sean and Rick, and Theo and Aspen. I suggested Noah call his mom to tell her, but I'm not sure if he ever did.\n\nWhen the wedding began, only three people aside from Noah and myself knew about the baby: Aspen, Theo, and Mom. I'm sure others suspected it, given the fact that Noah had proposed only two months earlier, but most just chalked up the casual wedding and quick turnaround time to \"that's just how Noah and Lacey are.\" \n\nWhen the hamburgers were served and the paper plates cleared up, Noah stood up and pulled me with him.\n\n\"So you're probably wondering why we've gathered you all here today,\" he started.\n\n\"Dude, you've only been married for like an hour, you can't be pregnant already,\" Rick called out.\n\n\"No, that happened about four months ago,\" I said casually.\n\n\"Jesus Christ, Rick,\" muttered Aspen.\n\nThere was a beat where everyone processed what I'd just said.\n\n\"You're pregnant?\" Sean repeated.\n\nRick slapped the table.\n\n\"We're going to be uncles!\" \n\n\"Congrats, Uncle Sean,\" I said.\n\nHe looked at Mom. She grinned, nodded, and started tearing up again.\n\n\"We're going to be uncles,\" Sean repeated. \"Holy fucking shit, we're... oh my God.\" \n\nHe was crying when he finally managed to stand up and hug me.\n\nWe didn't get into the how or the when or the rumours that we'd moved to Montreal after finding out. No one was bold enough to ask, nor did any of them care, really. What mattered to the family and friends we were surrounded with was that we were happy. \n\nI managed to get myself on the substitute teacher list for one of the school boards in Montreal. A few other positions had called about my applications, but once we had decided to keep the baby, I didn't feel right accepting them. Instead, I took a job teaching piano and voice at a music school, knowing it would be much easier to go on maternity leave from there.\n\nIt helped that Noah was making a lot more money than he had before. He and Duncan worked hard to establish Tom's business in Montreal. With Noah's experience, Duncan's drive, and Tom's guidance, they did well. Noah worked long hours, saving every penny he could for the baby.\n\nHe almost didn't need to; our baby was spoiled before they even registered a gender on the ultrasound. Sean and Rick were over-the-moon, and I eventually had to sit down and have a very serious talk with them about how much stuff they were bringing over.\n\n\"It's not that I don't appreciate it,\" I explained. \"We do, so much. But I can't fit any more baby clothes in the closet and we don't even know if it's a boy or a girl.\" \n\nThey compromised by only bringing newborn-sized things, and storing the next year's worth of clothes, toys, and accessories in their basement guestroom.\n\nAspen was nearly as bad, but her obsession was the nursery. At least, it was until I was about six months pregnant.\n\nShe had been coming over nearly every day, sometimes just to chat, sometimes to drop things off, sometimes to redecorate the room or add some new chachki to it. When she cancelled on me four days in a row, I went over to her house unannounced.\n\n\"What's wrong?\" I demanded as soon as she opened the door.\n\nAspen had told me multiple times that she wasn't big on crying. I mean, Theo hadn't even seen her cry until their wedding day. \n\nThat day, she burst into tears without warning, and I nearly had a heart attack.\n\nI got her into the kitchen and into a chair. By the time I had a cup of tea made for her and she'd decimated part of a Kleenex box, she had calmed down enough to tell me what was wrong.\n\n\"I'm pregnant again and I don't think I can handle another miscarriage.\" \n\nI prayed for her every day. She had told Theo, of course, but refused to tell anyone else and had forbidden him from it, as well. Theo, in turn, had told Rick. After all, they were best friends, and Theo needed support just as much as Aspen did. For three very long and very on-edge months, Aspen waited. Every morning, she woke up still pregnant, but convinced she wouldn't be by the end of the day. \n\nWhen she was halfway through her second trimester, she started thinking that they wouldn't lose the baby. She never quite gave herself permission to be excited about it, but Theo was ecstatic. I don't think it was until Aspen was actively in labour and their son was taking his first breath that she really, truly understood that she wasn't going to lose him. \n\nThey named him Bennett Richard Barker and he slept almost exclusively in Aspen's arms for probably the first six months of his life. \n\nMom was another rock for me while I was pregnant. I never admitted to her that I'd seriously questioned wanting kids because I didn't feel like Noah and I had good parental role models, and that it made me worry about our own parenting abilities, and I was glad I never did because I had been very, very wrong.\n\nMom knew that Sean and I didn't have a perfect upbringing, and she knew she had a hand in that, but what it gave her was the ability to share what not to do with me. She gave me a better understanding of how difficult parenting would be. I knew it would be difficult, of course, and I knew it would be a long road of lessons and missteps and small victories, but there was a new sense of guilt as I approached motherhood and realized how judgemental I'd been toward my own mother.\n\nI did admit that to her, and she forgave me without a second thought.\n\n\"I did the same thing, sweetie,\" she said. \"I was so sure about all the things I thought I'd do better than my mom, and I was wrong, too.\" \n\nShe was so excited to be a grandma. Like I said, our baby was spoiled before it was even born. The love and devotion from those around us was immense, infinite, and beautiful. \n\nThe greatest devotion to our baby came from Noah.\n\nI will never claim to be a perfect person, and I will admit that I questioned his statement about keeping the baby for a while after he'd made it. It seemed strange to me, surprising, even. The last we spoke about it, he still hadn't known if he wanted kids. I was understandably wary, but Noah proved me wrong again and again.\n\nHe still insisted on buying me a \"real\" engagement ring, even after I argued that we should save the money for the baby.\n\n\"I need to do this,\" he said as we walked up to a jewellery store. I was still protesting, still telling him I loved my silver jade ring. \"This is important to me.\"\n\nI relented, intending to pick a simple, plain ring that didn't cost too much.\n\nUnfortunately, Noah was fluent in reading my face, and he knew the moment I saw the ring I actually wanted.\n\n\"Can we see that one?\" he asked the salesman. \n\n\"That's way out of budget,\" I said.\n\n\"Didn't give you a budget,\" Noah said. \"You gave you a budget. I wanna see you try that ring on and tell me, right to my face, that's not the ring you want.\" \n\nHe took the ring from the salesman and slipped it on my finger as earnestly as he had the silver jade one. By divine providence, it fit perfectly. The salesman didn't make me take it off as Noah paid and I walked out of the store with it on my finger just above the silver one.\n\nThe months seemed to fly by. One day I barely had a bump; the next, it was Christmas Eve and I showed up to Sean and Rick's in leggings and one of Noah's T-shirts because nothing else seemed to fit.\n\nRick teased me good-naturedly about my attire until Mom and Alexandre showed up looking solemn.\n\n\"I have something to tell you,\" she said, and motioned for everyone to sit around the table.\n\nMy father had died that morning.\n\n\"It snowed there last night,\" she explained. \"The neighbours found him when they went over because the sidewalk hadn't been cleared. He, um, had started shovelling and... well, it seemed like a heart attack. He was outside for... a while.\"\n\nWe processed the news slowly, tensely. I looked at Sean, his mouth set in a straight line. I looked at Mom, her eyes wary. Alexandre was holding her hand, looking solemnly at the table as she spoke.\n\n\"I hope he finds peace,\" I finally said.\n\nIt was strange to hear news of a death and not be sad. I know Sean felt as much guilt as I did about it. I'm not sure if Mom did or not, but it didn't matter. We joined hands and said a prayer for my father's soul, and never really spoke of him again. I don't know where he was buried. I don't know what happened to the house or his things. Mom handled it all quietly and swiftly. Two months later we got a cheque in the mail from his life insurance policy, and a few months after that, Mom split whatever was left in his estate and transferred it to me and Sean. \n\nWe used some to pay for things for the baby, some to put in the bank for a rainy day, and left the rest untouched. A college fund, or a wedding fund, or a \"run away and find yourself\" fund for when they were older.\n\nThe novels that Noah and I used to read were slowly replaced with parenting books and magazines. I was overwhelmed with suggestions on what to read, often flipping through the first few chapters of a book before putting it down and grabbing another one. Noah finally took the stack of books I had on our nightstand and limited me to one, only giving me the next one when I'd finished it.\n\nI almost went crazy from the well-meaning advice of everyone and anyone who found out I was pregnant, especially once I was beginning to show. Church was the worst; every woman there seemed to want to touch my stomach, to the point that I started standing slightly behind Noah and positioning Sean and Mom on either side of me as we walked out each Sunday. \n\nEveryone had advice, too: don't do this, don't do that, if you eat peanut butter your baby will become allergic, if you don't use XYZ brand of nipple cream your nipples will fall off, if you balance the jar of peanut butter you're dipping pickles into on your bump, your baby will get a flat head. It didn't matter if I knew them or not; often, the conversation went something like this:\n\n\"Hi, I'm Mrs. Mom-of-the-Year.\"\n\n\"Hi, I'm Lacey Reiman.\" \n\n\"I see you have a bit of a bump there. Are you pregnant or...?\"\n\n\"Yep.\"\n\n\"Wow, congratulations. Are you having a boy or a girl?\"\n\n\"Yes.\"\n\n\"Um... twins?\"\n\n\"Nope. Just a boy or a girl.\" \n\nHigh-pitched fake laughter would follow.\n\n\"Oh, you're one of those moms! First kid, eh?\"\n\n\"Um, yes.\"\n\n\"It's always the first-timers who want to be surprised. Next time around, you'll want to know as soon as you pee on the stick.\" \n\n\"We'll see.\"\n\n\"Well, I think it's probably a\"\u2014insert prediction of gender here\u2014\"because\"\u2014insert slightly insulting comment about my appearance or the way the baby was sitting or the tone of my skin that apparently made it clear if I was having a boy or a girl here\u2014\"and when I had my kid, I had the exact same thing!\"\n\n\"You need to be more assertive and tell people to fuck off,\" Aspen said when I was about seven months along. She was still in her first trimester but was holding my hand as I navigated my way through pregnancy. \n\nOnce I hit eight months, I ended up taking her advice a lot more often. Part of it was that I was uncomfortable and cranky almost all the time, and part of it was the breakdown I'd had one night after Noah told me we were out of organic butter and could I just use olive oil instead and he'd pick some up after work the next day?\n\n\"But the olive oil isn't organic,\" I sobbed.\n\n\"Baby, what does it matter?\"\n\nI lost it on him. Like, actually lost it on him. Noah listened patiently as I angrily explained the difference between organic butter, grass-fed butter, and the cheap olive oil that was sitting in the cupboard, and why the different fat contents would affect the baby.\n\n\"Okay, but...\" he said once I finished, still wiping hot tears off my face. \"Is there a chance this is you being upset about something other than being out of butter, like maybe being overwhelmed by a whole bunch of information that lady at church told you today?\"\n\nOne of the other things I hated about being pregnant was everyone telling me to treat Noah like he was my personal servant. I understood the intention behind it; I was growing the baby, he was helping with the things that were harder because I was in the middle of growing a baby. But I really hated how men would tell Noah that he should never argue with me while I was pregnant because \"those hormones, man.\" Or the women who would tell him \"if she says she wants Oreos and guacamole at 3AM, you damn well get your butt out of bed and go find Oreos and guacamole at 3AM.\" \n\nIt was one thing to ask him to do laundry a little more often because my belly made it hard to get the clothes out of the dryer. It was another to treat him like anything less than my partner simply because I was pregnant.\n\nI didn't want to rely on hormones as an excuse for being upset, and I didn't want him to mindlessly agree with me on every unreasonable whim I had just because I was pregnant. I was still me, and he was my husband, not my own personal delivery service or punching bag when I was upset.\n\n\"You're right.\" I started crying again as I apologized, but Noah wouldn't hear it.\n\n\"We got this, Miss Lacey,\" he murmured as he hugged me. \"Don't listen to those bitches. You know damn well good parenting doesn't come from what kind of butter you eat while you're pregnant. We got this.\"\n\n\"I think it's Mrs, not Miss,\" I sniffed, giggling.\n\n\"Nah.\" He kissed me, brushing tears off my cheeks. \"You'll always be Miss Lacey to me.\" \n\nHe had to talk me down a couple other times while I was pregnant\u2014I didn't want to use the hormones as an excuse, but damn, did they overwhelm me sometimes\u2014but overall, our relationship was stronger than ever by the time I went into labour. \n\n\"I think the baby's coming today,\" I said as Noah was getting ready for work one morning.\n\n\"Yeah?\" he said. \"Still a couple days till you're due.\" \n\n\"Allegedly due.\"\n\nWe knew roughly when I'd gotten pregnant: most likely, it had been while we were in Banff. But that was just a guess, really, and there was no way of knowing when exactly it had happened. When the doctor had given us the due date, I'd shaken my head and said it was earlier than that, but as I wasn't a doctor, no one really believed me.\n\n\"How do you know? You got those, what are they, the contractions that aren't contractions?\" \n\n\"Braxton-Hicks.\"\n\n\"What about the early labour ones?\"\n\n\"I mean, maybe. I'm not sure if it's, um... I mean...\"\n\n\"Might just be gas?\"\n\nI laughed and nodded.\n\n\"I feel like it's going to be today.\" \n\nHe smiled and kissed me as he shrugged his jean jacket on.\n\n\"Maybe it will.\"\n\n\"Keep your phone nearby, please,\" I asked as he grabbed the lunch I'd made him.\n\n\"Promise.\"\n\nHe kissed me, kissed my belly, kissed me again, and left for work. \n\nA few hours later, after I knew Aspen would be awake, I called her.\n\n\"Can you come over? I think I'm going to have the baby today.\" \n\n\"You... what?\"\n\n\"I think the baby's coming.\"\n\n\"Like, right now? Are you having contractions?\"\n\n\"Not like... not active ones. I just think it's going to be today.\"\n\nI called Mom and left a message, telling her my suspicions. Then I called Sean and told him the same thing. Both of them humoured me the same way Noah had, but promised to keep their phones nearby just in case.\n\nI packed the bag of things I wanted to bring with me to the hospital, including a set of clean clothes for Noah since he'd probably have to come straight from work, and changed from my comfy leggings to my slightly-less comfy leggings in case my water broke. I wanted the comfy ones for the trip home from the hospital. Then I did a final check of the nursery, made sure the kitchen was clean, and took one of the many lasagnas I'd made out of the freezer so it could thaw in the refrigerator overnight. \n\nAspen was at my house within an hour, and less than an hour after that the contractions started in earnest and my water broke.\n\n\"Told you,\" I said as we got into her car.\n\n\"That's fucking crazy. How the fuck...\" \n\nI shrugged and called Noah.\n\nThe first call went to his voicemail and I sighed.\n\n\"I told him to keep his phone nearby.\"\n\nA few minutes later, I tried again, and again it went to voicemail. Calmly, I called Duncan instead.\n\n\"Hello?\"\n\n\"Hi Duncan, it's Lacey. Are you around Noah right now?\"\n\n\"Uh, yeah, he's just\u2014\"\n\n\"Can I talk to him, please? He's not answering his phone.\"\n\nDuncan laughed. \"Noah, man, I got your ball-and-chain on the phone here. Gotta answer your own calls, man.\" ",
        "I heard Duncan swear and a shuffling sound as Noah pushed him.\n\n\"Don't fucking talk about my wife like that,\" he said. \"Lacey? What's up?\"\n\n\"I told you, I'm having the baby today. My water just broke. Aspen's bringing me to the hospital.\"\n\n\"What?\"\n\n\"Can you meet me there, please?\"\n\n\"Holy fuck. Yeah, I'm... Holy shit. I'm on my way.\" \n\nHe didn't hang up before I heard Duncan make fun of him again and Noah tell him to shut the fuck up, the baby's coming.\n\n\"How are you so calm right now?\" Aspen asked wondrously as I laughed at the flurry of activity on the other side of the phone before the call disconnected.\n\n\"Oh, I'm not,\" I said. \"I'm actually freaking the fuck out but I keep telling myself if I don't panic, the contractions will hurt less.\"\n\n\"Obviously. You just said 'fuck.' Is that true about them hurting less?\"\n\nA contraction picked that moment to seize my lower body and I screwed up my face.\n\n\"Nope.\" \n\nNoah got to the hospital before we did. He was not his usual calm, serious self; rather, he looked frantic as I took my bag out of the car and walked to the door.\n\n\"Shouldn't I get you a wheelchair?\"\n\n\"Nah, I'm fine.\" \n\nWe checked in at the triage desk. The nurse didn't believe I was in labour until I had a sudden, violent contraction, and slammed my hand on the desk.\n\n\"Also my water broke,\" I groaned. \"And they said if that happened I should\u2014ow, fuck, sorry\u2014come in.\"\n\nThere was a flurry of activity as I was brought to a room. Aspen left, but only after Noah promised he'd call as soon as it was clear I was about to have the baby.\n\n\"He has to,\" I said. \"You need to call my mom and Sean.\"\n\nShe promised and with that, Noah and I were alone, about to become parents.\n\n\"This is it,\" he said quietly.\n\n\"Yep.\"\n\n\"Last guess. You think it's a boy or girl?\"\n\nI shrugged. Some of the mothers who'd lectured me throughout my pregnancy said they could \"just tell\" what they were having, but I'd never had a strong inclination either way.\n\n\"What do you think?\"\n\nHe touched my belly softly.\n\n\"Thought it was a boy for a while, but think it's a girl now.\"\n\n\"Guess we're about to find out.\" \n\nHe smiled and took my hand. \"How're you feeling?\"\n\n\"Terrified.\" \n\nHe squeezed my fingers between his.\n\n\"Me too.\" \n\n\"What are you terrified about?\"\n\nHe sighed. \"Fucking up. It's all real now. There's no going back, no... we did the work, we read the books, we fuckin' ate the organic butter, now... now it's a new thing. I don't... I've never held a baby before.\"\n\n\"What?\"\n\nHe shrugged helplessly. \"I've never fuckin' even held one. I mean, I know... theoretically, I guess, how to... I mean, we practiced the diaper thing on the dolls and... but that's a doll, it doesn't move.\"\n\nI stared at him for a moment, pressed my lips together, and tried not to laugh. Of course, trying not to laugh made me laugh, and then Noah was laughing, and then I had a contraction and was laughing and clenching and groaning all at the same time.\n\n\"What are you terrified about?\" he asked once we'd calmed down.\n\n\"Um, well, long-term, I guess the same sort of things. You know, what if I screw it up, all that. But more pressing right now is the fact that I have to push an entire baby out of my body and I'm pretty sure it's going to be kinda gross.\" \n\n\"The baby or the action of pushing it out?\"\n\n\"Not the baby!\" I laughed. \"The baby's going to be perfect.\"\n\n\"It's gonna be okay,\" he promised, and kissed me.\n\nFor a few minutes, we held each other, grasping at the last moments of quiet peace we'd have for a long, long time. \n\nIt was the last moment of the day that was truly clear in my mind, really. After that, things blurred together. There was a lot of pain. A lot of crying. A lot of people buzzing around and telling me what to do, when to breathe, how to sit. There was also a lot of positivity. Nurses told me I was doing a great job, even though I was mostly just sitting there trying not to cry. The doctors were encouraging, hopeful, sweet. Someone kept bringing me warm blankets when I couldn't stop shivering, and another brought me a spare phone charger so Noah and I could keep listening to music while the labour stretched on.\n\nHe didn't leave my side, not once. He brushed off my urges to get himself dinner, saying he could wait. He was dedicated fully to me, to being there, and I was beyond grateful for his presence. It was easier to be calm, to breathe, to just accept what was happening and to know that it would all be okay, even though we were both terrified of what was to come.\n\nIt was pain like none I'd ever experienced. While my labour went fairly smoothly, the one hitch was with my bloodwork, which said some level of something or the other wasn't right for me to be able to get an epidural. \n\nThe last two hours were the worst. At one point, I couldn't stop sobbing, could barely breathe, and Noah was trying valiantly to help me calm down.\n\n\"I can't,\" I cried, my voice breaking. \"It hurts, I can't.\"\n\n\"I know, baby, I'm sorry.\" He tried to keep his voice steady, holding my hand as I wept. \"You can, though. I know you can.\" \n\n\"I can't.\"\n\n\"You can.\" His tone was firm and he squeezed my fingers gently. \"Breathe with me. We'll do that stupid exercise thing. Remember? The... what was it, lame ways breathing.\"\n\nI laughed, as best as I could laugh. \n\n\"Lamaze.\" \n\n\"That's the bitch. Come on.\"\n\nHe was perfect. He was everything to me, everything I needed and more. Time and time again, I broke, and Noah was always there to pick me up. It wasn't just that day, but always: he was my constant, my everything, my life.\n\nWhen she arrived, I knew he was no longer just mine. In the moments after they put her on my chest, I cried, not because I had to share him but because I wanted to. There was no being in the universe that I wanted to share him with more than our daughter. \n\nHe was mine, and I was his, and we were hers. \n\nShe was perfect; every wrinkled little bit of her. How something so small felt so large just moments earlier was beyond me, but it didn't matter. A tiny, new, perfect little life lay against me, a real, living, breathing little life. How could I have ever not wanted her? She was perfect.\n\nWhen they put her in Noah's arms for the first time, he was trembling. I saw the flash of fear cross his face, the question in his eyes about what if he wasn't enough just before they handed her to him. As soon as her tiny body was nestled against his chest, the trembling stopped. The fear was gone. The question was gone.\n\nHe cried as he held her, quiet tears that I couldn't wipe from his face, and as he cried, he spoke.\n\n\"Gonna take care of you,\" he promised her, so softly I almost couldn't hear him. \"You're gonna be the most-loved baby in the whole world. Anyone ever hurts you, they're gonna deal with me.\"\n\nHe made those promises time and time again, promising her the world, promising her everything he had. When he thought I was asleep that night, he promised her she'd never see the things he did, she'd never worry that her parents weren't good parents, that he would show her and me every single day how a woman deserved to be treated. \n\nBy the time she had arrived, everything had been cleaned up, and she'd fed and rested again, it was thankfully far too late for any visitors. I called Aspen to say everything was okay, refused to tell her the name or gender, and ignored all subsequent calls and messages from my family begging for more information. We spent the night watching her sleep, holding her, whispering and planning and dreaming about her future, what she might be, what she might do. \n\nThere was so much promise for her future. There would be first dates and high school dances. Hockey games, Timbits, and swimming lessons. Her first trip to the mountains, her first trip to the ocean, so many wonders to relive through her eyes. There would be people to meet, hearts to break, love to share. There was so much potential in such a tiny thing. \n\nBut first things first: she had to meet her family. \n\nWe went home the next day. Once we got to the house, Noah called Aspen and let her know that people could come over. I had just finished feeding her and passed her to Noah when the soft tap came at the front door.\n\n\"Can we come in?\" Mom whispered after easing the door open without waiting for either of us to answer it.\n\nNoah grinned, proud and elated and holding our baby.\n\n\"Yeah, come on in.\"\n\nThey all shuffled in, quiet and nervous and excited. Noah looked at me and I shook my head, smiling.\n\n\"You do it.\"\n\n\"You sure?\"\n\n\"Someone tell me the name and gender of this baby right now or I swear to God I'm going to lose it,\" Aspen shout-whispered.\n\nI bit back a laugh more successfully than Theo, who had to cover his mouth to hold it in.\n\nNoah cleared his throat, then started whispering to the bundle in his arms.\n\n\"This is your Grandma Barb and Grandpa Alexandre, your Uncle Sean and Uncle Rick, and your Auntie Aspen and Uncle Theo,\" he told her. \n\nThen, beaming, he turned to the group waiting impatiently by the door.\n\n\"Everyone, this is our daughter, Grace.\"\n\n<center>The End</center>\n\n**\n\nThere are so many people to thank who helped Noah and Lacey's story come into existence. I couldn't have written this without any of the amazing people who provided feedback, input, editing, and support. Special thanks as always to bebop3, norafares, and OneAuthor. To A, K, Paul M, and Kevin Matheny, thank you for your support. To all the people who have followed Noah and Lacey's journey, thank you. This story is so close to my heart and I am so grateful for the chance to share it with you.\n\nXoxo, Cheryl"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "babies",
        "canada",
        "happily ever after",
        "happy ending",
        "love story",
        "marriage",
        "pregnancy",
        "romantic drama",
        "young love"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/finding-home-pt-05"
}