{
    "title": "There and Back Again Ch. 045-046",
    "pages": [
        "Chapter Forty-Five: Confessions\n\n\"You know, according to all the sisters at the monastery, I should have been struck by lightning by now.\"\n\n\"Not for that performance.\"\n\n\"Meaning that it was so great that the Maker himself has decided to spare me from the usual punishment? Right?\" He grinned, but the insecurity was as obvious in real life as it had been in game.\n\nI slid up, draping myself across his chest and leaning down to plant a soft kiss on his swollen lips. \"Yes, that's exactly what I meant.\"\n\n\"Does this mean I get to brag, tomorrow?\"\n\n\"Well, I suppose as long as you don't mind my brother beating you senseless afterwards, sure. Go ahead.\"\n\n\"You are a bad, bad woman.\"\n\n\"I'm not the one wanting to brag about my conquest!\"\n\n\"True. But I think you're actually hoping Aedan will beat me.\"\n\n\"Humility is good for the soul.\"\n\n\"Since when are you worried about a soul?\" We both grinned. \"I myself am far more worried about other less ethereal concerns.\"\n\n\"Such as?\"\n\n\"Whether you'd permit us to do this again, if I promise not to discuss our love life with your brother?\"\n\n\"Again?\"\n\nHe nodded, somewhat red-faced.\n\n\"Now?\" I looked down and gasped, my attention immediately drawn to the enormous, slightly purple erection pointed at me. \"But...I thought men were supposed to need some recovery time?\"\n\n\"Evidently not.\"\n\nI muttered something about Grey Warden stamina, and he had the grace to look slightly abashed. I giggled and leaned down to kiss him again. His arms wrapped around me, pulling me to him tightly, and I let him shift me to lay directly on top of him. The bulge against my thigh gave me an idea, and I broke the kiss to sit up slightly, straddling his waist. When I leaned forward, my breast dangled just above him, and he pulled me closer to draw the small pebble that was my nipple into his mouth. I gasped, then pulled it back out with a small pop, presenting him with the opposite one for the same treatment. His gaze never left mine, and the vision of Alistair, suckling on my breast while gazing into my eyes was one I knew I'd not soon forget.\n\nSuddenly impatient, I pulled away to lean back. Using my hands on his shoulders for leverage, I shifted until I felt his erection trapped between my sex and his belly, and then sat forward slowly until he slid into place at my opening. Pressing back again caused us both to groan, loudly; I was slightly sore, but the stretch was delicious and I kept up the steady pressure until I felt my ass meet his thighs. I gyrated my hips, enjoying the control I had in that position, and discovered that when I leaned forward, my clit got stimulated by his pubic bone, but when I leaned back, he pressed against a spot that felt really good. Apparently G-spots do exist. Huh.\n\nHe reached up to cup my breasts while I alternated between leaning back and forward slightly, and I arched my back, pressing harder into his warm, calloused hands. Shifting my grip from his shoulders to his thighs, behind me, I leaned back and started lifting up and slowly sliding back down. I'd never really felt g-spot stimulation in my very limited experience, and while I missed the pressure on my clit, the sensation was interesting and new enough for me to throw my head back and just enjoy the ride. I wasn't sure if I'd be able to orgasm like that, until suddenly both conflicting needs were filled. My eyes shot open, and I realised that Alistair had released my breasts, and one hand was now bracing itself on my hip, while the other reached between us and teased my clit. His face wore a mask of concentration, I assumed as he tried to keep his own release at bay while he brought me to mine.\n\nIt took little time for me to reach my peak, between watching the incredibly sexy man under me try to please me, and the sensations coursing through me from my g-spot and my clit. I felt myself spasm, clenching him deep inside, and he hissed as he tried to maintain his composure. I reached down to still his hands, and instead he reached up to cup my face.\n\n\"Maker's breath, watching you like that...I want to see your face, just like that, every day, forever.\"\n\nI smiled softly, wondering if he realised he'd just offered me a lifetime commitment. I wasn't planning on holding him to it, but it felt nice none-the-less. I leaned into his hand, planting a kiss on his palm, and then leaned forward to kiss his lips. I felt him twitch inside me when I nibbled his lower lip, and suddenly I was upright again as he sat up on the bed. Still buried inside my channel, he wrapped his arms around me and pressed his face into my neck, and I responded in kind. He smelled of sweat, which was somehow sexy instead of gross, and I imagined I smelled, if anything, worse, so I couldn't really complain.\n\nStill sitting so my breasts were pressed against his well-muscled chest, I felt Alistair's hands wander down to my hips; he used his grip to encourage me to move, and once again I rode him. I loved the closeness, with him sitting up -- it was nice to be at eye-level and be able to kiss without contortion. I wasn't going to come again -- I was fairly certain that whatever controlled that function had closed for the night -- and I planned to enjoy making it all about him for once. Along those lines, I concentrated, and for the first time in my life, purposefully tried to flex the muscles I could feel contracting during an orgasm. It took me a couple of tries to get it right, and I could tell I had when he gasped and picked up even more speed. He was now in control, his powerful arms lifting me and slamming me back down onto him, and I watched his face as I contracted my muscles in time. I cupped his cheeks in my hands, and like he had done to me earlier, demanded he look at me.\n\nHis face contorted in pleasure, and he looked absolutely gorgeous, hedonistic and, well, like I imagined Adonis would as he fought to maintain eye contact while his hips jerked and he spent inside me. A curl of heat spread from my centre as I watched him, and I'd never felt more satiated in my life. He flopped back, panting and trying to recover, and I went with him, laying on his chest. He finally softened, and we both shuddered as he slipped out of me; I slid to one side of him, still cradled in his arm, and molded my body to his side. I reached down and grabbed a light blanket to cover us, not cold, but imagining I would be once the sweat I could feel coating me began to dry.\n\n\"So I have a question.\"\n\n\"I'm not going to say 'hit me', if that's what you're hoping.\"\n\nI giggled. \"I wouldn't. I only abuse my brother. Making up for all the years of tormenting him that I missed while we were growing up.\"\n\nHe snorted, and I could hear the grin. \"I'm so glad the two of you found each other.\"\n\n\"Me too. But back to my question.\" I lifted my head and gave him my best scowl. \"I thought you were a virgin, before yesterday.\"\n\nHe raised an eyebrow, expression puzzled. \"I was.\"\n\n\"I don't believe you.\"\n\n\"You knew I was before we even met, how can you not believe me?\"\n\n\"Well...okay so I've mentioned before that where I'm from, information about sex is easily available, for anyone who wants it.\"\n\n\"Yes...?\"\n\n\"And I imagine almost everyone spends at least a little bit of time 'educating' themselves. I did. And in everything I ever read, everyone I ever asked about sex, they all agreed about one thing -- the first time with an inexperienced partner is supposed to be terrible for the woman. No control, overly excited, that sort of thing. My limited experience certainly agrees with that. But this was incredible. I know, Grey Warden stamina is part of it, at least in terms of recovery time, but...\"\n\nHe blushed. \"Confession time.\" I raised one eyebrow. \"I, uh, 'educated' myself a bit too.\"\n\n\"You did? How?\"\n\nHe grimaced. \"Zevran.\"\n\n\"You asked Zevran for sex advice?\" My voice went all shrill, and I clapped my hand over my mouth to stop it from saying anything else.\n\n\"Not exactly. At first, I just...paid attention, when he would talk. And all he talks about is sex, so that was fairly enlightening. Especially late at night, like on watch...I'd wake up from a Darkspawn nightmare and end up listening to him talk to Aedan or whoever. He and Leliana even spent a couple of nights comparing notes. He mentioned all sorts of 'secrets' he learned from living in a whore house, like for example, how the men would...\" He made a hand gesture that was understandable in any culture, and I giggled at his scarlet face. \"Before. So that they could be better.\"\n\n\"You did that?\" I was too tired to be turned on, but the thought of him stroking himself was almost enough for me to overcome that obstacle.\n\nHe nodded, refusing to meet my eyes. \"In the bath. Earlier.\"\n\nNow I have a mental image. Damn you Alistair!\n\n\"So at first,\" he continued, \"I just eavesdropped, but after a while, I would listen openly, and blush and stammer and act all confused, and you know how he loves to embarrass me, so I could sort of...lead the conversation where I wanted it to go.\"\n\nMy mouth open, I stared at him in shock. \"You are...you are devious! I can't believe you faked that innocent act.\"\n\nHe chuckled nervously. \"Not entirely, I mean, I was completely embarrassed, but it was...educational.\"\n\nI shook my head, impressed yet again at the maturity and confidence it took for him to go to Zevran for advice, even if in a round-about fashion. Not to mention the acting skills! Game Alistair would have run away with his hands over his ears, singing loudly to himself.\n\nI fell asleep with my head on his chest, a smile plastered to my face. For the first time in months, I was going to sleep sated instead of frustrated, and the soft susurration of his heartbeat was better than a lullaby.\n\nWhen I woke, I was a bit disoriented; I was no longer resting on his chest, but instead curled up with Alistair spooned behind me. My head was on his outstretched arm, his other lay loosely on my hip. The room was dark; the candles had gone out. I had no idea what time it was, and I struggled to figure out what woke me. And then Alistair twitched, and I realised he was dreaming. I worried that it might be a darkspawn nightmare, until I heard him softly moan my name. When he twitched again, his arousal, which had worked its way between my thighs to press against my sex from behind, was enough of a clue as to what he was dreaming about. I blushed, embarrassed and aroused in the same breath.\n\nI debated -- what to do? Should I let him enjoy his dream, or wake him and make it come true, whatever it was? I decided that neither was entirely appropriate, but instead chose option C. There was plenty of moisture to be found, between our earlier exertions and my re-awakened desire, so I tilted my hips and awkwardly reached down to gently grasp his manhood and angle it properly. I slowly, carefully wriggled backwards and impaled myself on his length.\n\nWith some rest, most of the soreness had gone, but I found myself feeling stiff, like the morning after a new workout at the gym. Fortunately the position didn't require too many contortions, so I was free just to enjoy the stretch. He'd come half-awake during the process, if the hand clenching my hip was any indication, but there didn't appear yet to be coherent thought behind it based on the confused, dream-like muttering in my ear. Undeterred, I purposefully clenched, drawing a gasp and a surprised thrust from behind. Oh, that's better than I even thought it would be. I did it again, combining it this time with a pelvic tilt that slid him just slightly deeper inside me, and he groaned.\n\nNow more awake, his arm, which pillowed my head so comfortably, bent down at a surprising angle and his fingers unerringly found my breast. The other, still gripping my hip, pulled me back as he thrust forward. The position did not allow him much freedom to move, but even the short strokes felt heavenly and I trembled as he began teasing my nipple. We continued like that, and I floated in a haze of pleasure, knowing it wasn't enough to bring me over, but content to draw things out for a while.\n\nAfter a few minutes, his panting, gasping breaths in my ear became low growls, and I could feel he wanted more. I assumed he would pull out and we would reposition, but to my surprise he just rolled me forward a little, spreading my knees slightly so he could put his own knee down between mine, tilting my hips up, and used his improved leverage in combination with gravity to get the increased speed and depth he wanted. I could do nothing but moan wantonly, especially when his hand left my hip and quested forward to begin tormenting my aroused clit.\n\nLying there, in the pitch black, with Alistair in me and on me, all around me, I was struck by the strangest feeling. I was sort of embarrassed, but it was a weird combination of rightness, and possession, and connectedness I'd never even imagined before. Despite not being able to see, I knew exactly what he was going to do, and he knew exactly what to do to increase my pleasure without having to ask. I almost couldn't tell where I stopped and he began, and it was intoxicating. But I didn't say any of that; all I could do was moan and writhe and do my best to thrust back towards him and allow the waves of my orgasm to wash over me.\n\nHis relentless movement inside me and the pressure on my clit kept my orgasm going until I felt him press into me, hard, and stay there as he groaned out my name; the heat I could feel told me he'd found his release, and his hand finally fell away from my abused clit as I shuddered.\n\nI muttered under my breath as we both sprawled, sated and exhausted. \"Hallelujah.\"\n\n\"What?\"\n\n\"Tell you tomorrow.\"\n\n\"Deal.\"\n\nI didn't even really get the chance to come down; exhausted, I fell asleep mid-shudder, with him still inside me, his weight still on my back.\n\nWhen I next opened my eyes, I could feel by the tension in the body spooned behind me that Alistair was awake. The early morning light was filtering through the shutters, I was guessing it was barely after dawn, and between the blankets and the enormous templar body-warmer, I was gloriously warm for possibly the first time since being in Ferelden. I cleared my throat, voice slightly hoarse and still thick from sleep.\n\n\"Good morning.\"\n\nHe hesitated before speaking, and when he did his voice was subdued. \"Good morning.\"\n\nI started to worry that he somehow had morning-after regrets, though I wouldn't have expected that. \"Love? What's wrong?\"\n\nHe sighed and shifted slightly away from me, letting cool air sneak in between us; I was suddenly chilled much more than the dropping temperature would account for.\n\n\"What's this?\" I felt one finger tap me on the back, and I wrinkled my brow in confusion. Do I have something stuck in my hair? And then it occurred to me what he was tapping on.\n\n\"It's a tattoo.\" I blushed, happy that he wouldn't be able to see it from behind.\n\n\"I gathered that. Why, exactly, do you have a tattoo of a dragon and a griffon, and a Chantry symbol of all things? Whose initials are these?\"\n\nI sighed. I mostly felt bad for Alistair, that his confidence, while better than it had been in game, wasn't good enough for him to guess.\n\n\"I got it after Haven. It...was an emotional time, for me, and I felt like I needed something to mark the occasion somehow. I asked Zevran to do it, and he did.\"\n\n\"That's what you were doing in his tent for hours? Really? I wondered, but after I made such an ass of myself, I didn't want to ask in case you took it the wrong way.\"\n\nI giggled. \"Yeah, that might not have gone over well.\"\n\nHe snorted. \"I still have a bruise on my ear to remind me not to piss you off.\" I giggled again. \"That still doesn't explain the tattoo, you know.\"\n\n\"I...it's hard to explain. The dragon, obviously, represents the Archdemon, but also just the...differences, I guess, between Thedas and where I grew up. And the griffon represents what I found here -- yes, Grey Wardens, but also family, and strength. And the Chantry symbol is because...I might not be an Andrastian, but someone, maybe your Maker or maybe someone else, brought me here and let me find you and Aedan, so I guess it's my way of showing gratitude.\"\n\nHe was quiet for a bit, and I could practically hear the wheels turning as he thought about it. \"And the initials?\" His voice was barely a whisper, but I couldn't decide if it was hopeful or worried.\n\n\"I didn't ask for them. I was as surprised as you when I saw them there. Zevran claims they are random swirls and that it was only my wishful thinking that made them look like letters. He thought he was so clever.\" I sniffed, remembering his smug smile.\n\n\"And...?\"\n\n\"For the love of all that's holy, Alistair! The 'S' is obviously me. The 'A' is you, you idiot! I told you, everyone knew how I felt about you. When I asked about them, Zev offered to change them, to colour over them, but...even though I thought, at the time, that I'd never get to be with you, it was...it was the only way I could keep you with me, somehow. And then I thought you hated me, and it seemed like it was all I'd ever have of you, since I couldn't even have your friendship.\"\n\nMy eyes were moist, and I blinked rapidly, trying to clear them. I am not going to cry, not over this. I was shocked when his arms encircled me from behind, shifting me so I faced him and then crushing me to his chest. He stroked my hair, tilting my chin to look into my eyes. His own eyes were bright with unshed tears as well, and he had to clear his throat a couple of times before he could speak.\n\n\"I'm sorry. I really am. I never hated you, Sierra. Was jealous and insecure, sure...I guess I still am, really. It isn't you. It was never you. Sometimes I just can't believe that you are here with me. It seems too unreal. You could have anyone you wanted; you could be Queen, if that's what you wanted -- I know Cailan was considering it. Why would you want to be with me? I'm not complaining, of course, and I'm not trying to excuse my behaviour, I'm just...explaining, I guess. If I were you, I wouldn't be with me. I could never assume that 'A' was for me.\"\n\n\"I know, Alistair. I'm not really frustrated with you. Actually what I'd like to do is kick Eamon's and Isolde's asses for making you so insecure in the first place.\"\n\n\"Eamon took me in, and he didn't have to. I-\"\n\nI cut him off. \"Eamon took you in exactly because he had to, Alistair. Maric made him. Maric promised your mother to raise you away from court, but he wanted you somewhere he thought you'd be safe. He loved your mother; he begged her to stay, but she could not. He loved you. My guess is he wanted you trained as a knight, to someday quietly settle you as the Bann of something or other. Why he decided that his brother-in-law, the brother of his late wife, who had no relation to you and who would see you as a potential stain on his sister's memory, should be the one to raise you I will never understand. Or maybe I do -- Eamon has a way of making others think he's an honourable guy. Maybe Maric fell for it. He should have sent you to Rainesfere or even Highever, though I expect he worried that if someone discovered who you were they would try to use you against Cailan when the time came...\n\n\"Regardless, I can guarantee that he did not want you sleeping in the hayloft, or mucking out the kennels, or being treated as less than a servant. Or going to the Chantry, for that matter. I bet that Eamon took you into the castle and had you cleaned up and looking presentable every time Maric visited, am I right?\" He looked thoughtful, but after a short hesitation, slowly nodded. \"He couldn't allow Maric to find out how you lived. I can only assume that Eamon sent you off to the Chantry without notifying Maric, and by the time he found out it was too late. He couldn't rescue you without acknowledging you, and he'd promised not to. I more than suspect that Maric asked Duncan to get you out of the Chantry before you took your vows. Of course, he didn't know that the Joining could have killed you.\"",
        "His face was drawn, expression sad as he thought about what I'd said. I wanted to take his pain away, but knew only time could do that. I leaned in and kissed him softly.\n\n\"I know you feel grateful to Eamon, and I commend you on your charitable attitude. Personally, I'd like to kick him in the unmentionables with steel-toed boots on. That's one of the ways I know you're a better person than I am.\" I grinned, and he smiled weakly. \"But the fact remains, you are a good person, an incredibly strong person, as well as being gorgeous and sweet and thoughtful and extremely good in bed. How about you just stop thinking of yourself as being undeserving, or I will have to spank you. And while Zevran might think that sounds like fun, I can assure you, you won't enjoy it.\"\n\nHe laughed, and something in his face changed. I knew he hadn't taken it in, hadn't accepted everything just yet, but at that moment I knew he would, eventually. And I couldn't have been more proud.\n\n\"Speaking of...\"\n\n\"You're really going to start a sentence with 'speaking of spanking'?\"\n\n\"Just shut up, woman.\"\n\nHe kissed me then, and the passion was undeniable. As sore as I was, when he took my nipple into his mouth and started stroking my clit, I couldn't have said no if my life depended on it. After I came on his fingers, he rolled between my thighs and didn't stop until I was screaming his name.\n\nAs I shuddered to a halt, he asked me about my strange outburst in the night.\n\n\"What's that hall thing?\"\n\n\"Hall...? Right. Hallelujah. It's...Hmm. Hallelujah is something people on Earth say when they are praising God for something. 'Hallelujah, we are saved!' But it's also a song, and the words of one of the verses just seemed really appropriate.\"\n\n\"Well now you have to sing it for me.\"\n\n\"Maybe later. Or, you know, not. But the verse I was thinking of goes like this: Remember when I moved in you, the holy dark was moving too, and every breath we drew was hallelujah?\"\n\nHe kissed me softly, and I smiled into his mouth. \"Maybe I'll teach it to Leli later.\"\n\nChapter Forty-Six: The Morning After\n\nI fell asleep again, I assume, because when I woke up I was being very gently washed. Alistair knelt on the bed beside me, an intense look of concentration on his face. Seeing that I was awake, he encouraged me to roll onto my back and spread my thighs, and he wiped away our combined secretions from first my thighs, then even more gently from my groin. I watched his face, admiring how beautiful he was, wishing I could show him what he looked like from my perspective.\n\nHis eyes went wide, and his absorbed look was suddenly replaced with a frightened expression.\n\n\"Alistair, what's wrong?\"\n\n\"I...you...\" He gestured helplessly at the cloth he was holding, and I looked down to see traces of blood staining the fabric. \"You told me I didn't hurt you.\" Self-recrimination was obvious in his voice.\n\n\"It's okay. I'm not injured, Alistair. It's just that...well, you know that I have a different body, back where I came from, right?\"\n\nHe nodded, still frowning.\n\n\"Well, it was that body that had sex before. Not this one. It's normal for a woman to bleed a small amount after the first time.\"\n\nHis frown lifted, and he finally met my eyes, seeming to judge the truth of my words.\n\n\"I'm not in pain, love. A bit stiff, I have to admit, but nothing like what I would feel if you had hurt me.\"\n\nHe relaxed, finally. \"Maybe we should have Wynne check you out, just in case?\"\n\n\"Again, what would I say? I fell down the stairs, could you see why I'm bleeding from the-\"\n\n\"Okay, okay!\"\n\n\"Are you that embarrassed by the word?\"\n\nHis expression became evasive. \"What word?\"\n\n\"Vagina.\"\n\nEvasive gave way to beet red. \"Ah! Don't say that.\"\n\n\"Really? You're perfectly willing to play with it, but you can't say it?\" I giggled. \"Vagina. Vagina vagina vagina.\"\n\nHe put his hands over his ears, and started humming to himself. \"La la la, not listening!\"\n\nI cracked up, and he finally joined in with a small chuckle when he saw I was laughing too hard to keep saying the word. \"Remind me to talk dirty next time we're-\"\n\nHe leapt out of bed, talking over me in a desperate attempt to block out what I was saying and change the subject. \"So I suppose we should get dressed, I bet Aedan is waiting for us downstairs.\"\n\nI giggled, but let the subject change stand. Getting up, I realised I was quite a bit more stiff than I'd let on, but determined not to let it show. Stretching triggered an appreciative groan from Alistair, and I ignored it, picking through my clothes and chose a shirt and pair of pants. I got distracted watching Alistair shimmy into his own pants, blushing and hurrying to slip into mine when he caught me staring. When I grabbed my bra, I had to stop and show Alistair how the clasps and the elastic worked; he was fascinated by the garment. Finally putting it on, I felt the need to run my hands over his strong chest one more time before he got his shirt in place, and he blushed.\n\nGoing down stairs proved to be quite uncomfortable on my hips and groin muscles, and I bit my cheek to keep from grunting in pain. Happily the stairs were narrow, so Alistair had to descend in front of me and couldn't see my face. We found most of our companions at a round table in the corner already stuffing their faces; the place was otherwise nearly deserted. Leliana looked at us suspiciously, breaking out into a full smile when she saw me grinning; Aedan refused to make eye contact, and Wynne greeted us absent-mindedly, her nose still in her book. Zevran was across the room talking to someone, nodding as the other man gestured. He was tall, at least by comparison to the elf, but his features were obscured by a hood. Zevran was the only one in armour; everyone else wore simple clothing. I shrugged and sat, Alistair on one side, a gap and then Aedan on the other.\n\nAedan waved at Sanga and she nodded, I assumed understanding she was to bring us out plates as well. There were something that looked like scones, jam, sausages, and even pancakes; I was suddenly starving. Too much exercise last night...I heaped my plate full when it was presented to me, triggering a peal of laughter from Leliana, and an irritated grunt from Aedan. I couldn't figure out what his problem was, until I noticed his ears were red and a vein pulsing in his forehead. He must have guessed what happened with Alistair and I last night...I wondered if he'd come to knock on the door at an inconvenient time or something. I decided to ignore it and hope he got over it.\n\nWhen Zevran returned, he sat beside me with a flourish, taking my hand and kissing it ostentatiously, like he hadn't done since shortly after we first met, calling me his 'beautiful dove'. Alistair didn't even stiffen -- I guess his confidence is in better shape than I thought! - but I was confused, until I felt something being firmly pressed into my hand. When Zev released me, I had a small bottle in my grasp. I held it down, between him and me, and glanced at it surreptitiously, only to realise it was a healing potion like he'd given me after my tattoo, like the ones Wayne used to give me after training to treat pulled muscles, only empty. I raised my eyebrows at him, but he just smiled innocently and nodded toward my mug. I hadn't even seen him dose my drink!\n\nDoes everyone know we had sex? I sighed, but took a big sip of whatever it was. It tasted horrible, but I wasn't sure if it was the watered ale or the potion causing the problem. I covered my gag and slammed the rest of the contents back. Within a couple of minutes, my stiffness eased off, and some stinging I hadn't even noticed disappeared. I grinned at Zev, and he grinned back.\n\nOnce everyone had eaten, we started discussing plans for the day. Leliana claimed me for some shopping; Aedan wanted Zev, Alistair, Wynne, Prince, and himself to go find themselves some work, though he was a bit vague on what they would do. I mentioned Sergeant Kylon, and he nodded; they also thought they'd try the Chanter's board. While they were out, they were going to scope out the street where Marjolaine was staying, and Leli and I had strict orders to stay well away. We decided that Leliana could go as my bodyguard, and therefore wear her helmet, much to the bard's dismay, but we figured it was safe enough for my face to be seen -- Loghain knew nothing about me.\n\nAlistair, Aedan, Leliana, and Wynne headed up to their respective rooms to gear up, while Zevran and I stayed in the common room and chatted for a while since he was already in armour, and I was in no rush; I'd need another bath before I could possibly pass as a Ferelden noblewoman. As soon as everyone cleared the room, I turned to Zev, determined to get some answers.\n\n\"Okay, so what was that all about last night with Alistair? What did you give him?\"\n\nZevran's eyes sparkled mischievously. \"Our beloved Warden merely asked me if I knew of anything to improve his performance in the bedroom, bella donna. He was nervous that he might not be able to please you. And it worked, did it not? You certainly look...pleased, yes?\"\n\nI stared at him for a moment, still startled beyond compare that Alistair would have gone to the assassin for sex advice. And then the rest of what he said filtered in, and I face-palmed.\n\nI hissed under my breath, not wanting anyone to hear my response. \"You gave him Viagra? Are you kidding me? Six times, Zevran. I had six orgasms in about four hours! I was pretty sure I'd have a stroke, at one point in there. You could have at least given him a half-dose, for the love of God.\"\n\n\"Ah, but cara mia, you misunderstand me. He asked for something to improve performance. I did not give him such a thing. I am well-familiar with Grey Warden stamina, my dove. I knew he needed nothing to boost performance except for possibly some confidence. So I gave him some harmless elfroot extract, which at best would have taken care of any minor discomforts he had, and I took the liberty of adding in a...well, it wouldn't do to have a child during a blight, no? I told him it would ensure he was able to perform to the best of his ability, and let him assume the rest. It was not precisely a lie, was it? And I'd say it turned out rather well.\"\n\nMy mouth fell open and I stammered uselessly for a moment before collecting myself again. \"You gave him a placebo, and birth control?\" I contemplated Zevran's rather thoughtful gesture. A pregnancy definitely wasn't in any of our best interests. But he didn't know that I had an IUD, back on Earth, so we didn't need the contraceptive. Although, that's a different body...maybe we do? But I haven't had my period, since I came here....My head threatened to explode, and I concentrated on Zevran's words.\n\n\"I do not know this word, placebo. But if you mean I told him it was medicinal when it wasn't, exactly, then yes. I did.\"\n\n\"And he still...six times?\"\n\n\"Grey Wardens are marvelous, are they not?\"\n\n\"Well, at least I know how you knew we had sex last night.\"\n\n\"Ah, well, I hate to disagree with a beautiful woman such as yourself, but bella donna...I am certain that everyone within three blocks of this establishment knows you were, shall we say, busy, last night. You are not precisely...quiet.\"\n\nMy face felt hot, and I buried it in my hands, rocking in agitation. \"I...we...were that loud?\"\n\nI risked a glance at his face, and he gave me a wicked smile. I groaned. \"No wonder Aedan was so weird at breakfast!\"\n\n\"Hmm? Oh, yes, well, that was one reason, I suppose.\"\n\n\"One reason?\"\n\n\"I rather think he was concerned about running into a certain lusty pirate queen.\"\n\n\"Where is Isabela this morning, anyway?\"\n\n\"I imagine she crept into her own room to try to catch a little bit of sleep.\"\n\nSomething in his voice made me suspicious, and I turned to look at Zevran, puzzled. \"She was awake all night?\" He nodded, his expression, if possible, even more smug than normal. My eyes widened in horror. \"You didn't. Zevran! Please tell me you did not debauch my brother with Isabela.\"\n\nHis grin widened slightly, and then his innocent look slipped into place. \"I did not. Your brother was three sheets to the wind, and he and Isabela managed to...'debauch'...all on their own, really. I mostly watched -- the first time, anyway.\" The glint in his eye belied his Chantry-goer expression.\n\nI stammered again. \"I was joking when I suggested it!\"\n\nHis innocent fa\u00e7ade slipped and he actually giggled. \"Well, perhaps you should be careful what you joke about, yes?\"\n\nAnd then I knew why Isabela hadn't stayed in the common room for the brawl. She had somewhere else to be. I groaned again, hiding my blushing face in my hands yet again. I'll never be able to look Aedan in the eye again. Wait...\n\n\"Zevran?\"\n\n\"Yes, cara mia?\"\n\n\"Wasn't that his first time with a woman?\" After he had admitted to his sexual preference, Aedan and I had a few frank discussions about his experience, or lack thereof prior to Zevran, which basically consisted of some hidden, furtive groping sessions with Ser Gilmore.\n\n\"I believe so, yes.\"\n\nI slapped my forehead again. \"You let him...his first...Isabela?\" I couldn't even talk, between mortification and righteous indignation.\n\n\"I don't believe he had any complaints. Of course, he wouldn't admit to such with her right there, I suppose...\"\n\n\"Zevran, I'm going to kill you. One day, when you least expect it.\"\n\n\"What did he do now?\" Leliana plopped onto the bench beside me, expression amused.\n\n\"Never mind. I need to have a bath.\"\n\n\"Wait. Before you go...well, here.\" He handed me a small bottle, filled with a grey powder.\n\n\"What's this?\"\n\n\"The...medicine, I told you about. For Alistair. A small pinch per day, yes?\" Zevran grinned cheekily.\n\nI hopped up, slapped Zev lightly on the back of the head, earning myself a lascivious chuckle, and then headed up to the bathing facilities. I ran into Aedan and Alistair, getting a hug from the first, and a rather enthusiastic kiss from the second. I reminded them both to stay safe before they left to do their recon and make some money. Leliana must have warned someone about the bath, because the boy was leaving the bathing chamber as I arrived, and the sunken tub was steaming.\n\nI washed my hair, then soaped the rest of me, enjoying the feeling of ridding myself of the sweat I'd earned overnight. One of the little bottles near the tub smelled sort of like conditioner, so I put some in my hair, and to my delight, was able to easily comb through my usually tangled hair. I decided to ask Sanga if I could buy some later. I slipped into my fake-velvet dress, tied my hair up in a braided bun, and headed back down into the common room. Leliana waited there alone, and when I arrived, she slipped on her helmet and escorted me back to the market.\n\nWe shopped for the morning, buying me two pairs of sensible shoes, and each of us one pair of completely frivolous fancy shoes. She insisted on ordering me a new dress, a proper Fereldan noblewoman's dress, though I gathered the fashions were not quite to the bard's standards. I thought it was beautiful; it was a deep burgundy with gold accents, was going to be tight through the bodice, and then flow to the floor and swish when I walked. I had no idea when she thought I would wear it, but I couldn't dissuade her.\n\nNo one in the market bothered us, though we saw plenty of mercenaries who watched us appreciatively; I guessed Leliana being clearly armed to the hilt discouraged any harassment. We ate meat pies bought from a street vendor for lunch, and despite having no idea what sort of meat they contained, I managed to get mine down without problems. Leliana clearly wanted to quiz me about the previous evening, but it would have looked strange for a bodyguard to be giggling with her employer, so she decided to wait.\n\nI looked for a red-bearded dwarf in the market, but didn't find him; I hoped nothing had happened to Gorim, with all the changes that had happened since my arrival. I resolved to take Aedan and find him the next day.\n\nTired from the lack of sleep the night before and from the walking, we headed back to the Pearl in the early afternoon. Isabela was in the common room, eyes puffy and red, sipping at some broth, and I had to laugh. Apparently Aedan wasn't the only one who overindulged last night! The pirate invited Leli and I to sit with her; by mutual unspoken consent, we sat together opposite the Rivaini.\n\nWe chatted for a while, before it occurred to me that there were some things I wanted to tell Isabela. I thought about it while we talked. I didn't want to warn her off the disastrous slave transporting job she would take after the ending of the Blight -- who knew what would happen to those poor people if someone else took the contract, and had less conscience -- but I did want to stop her stealing the Tome of Koslun, if at all possible. Then it occurred to me that if I stopped her, Castillon might hire someone else to steal it instead, and it could be an even bigger political disaster with the Qunari. In the end, I gave her a vague warning about finding someone named Hawke, and trusting them with whatever trouble she was in. Perhaps if Isabela opened up to Hawke sooner, she could prevent some of the worst of the destruction. Isabela was suspicious and a bit creeped out, I think. I couldn't help it; I wasn't about to explain to her what was going on.\n\nI shook my head, trying to clear it. I couldn't save everyone, even with all my knowledge, and I knew that; it didn't make it any easier to live with.\n\nOnce Isabela had excused herself to head to the docks and check on her ship, I peppered Leliana with questions about mailing letters to people, and she assured me that she could ensure any letters I wrote found their intended recipients, for perhaps two sovereigns per letter. I thought about what I wanted to say to whom for a long time, but didn't come up with anything definitive and resolved to think about it a while longer. I had plenty of coin, at least; Aedan had continued Duncan's habit of splitting our coin between himself, Alistair, and me, as well as making sure our companions had enough to buy whatever they needed, but then always paid for things out of his own purse anyway, so my stash probably amounted to more than thirty sovereigns.\n\nLeliana then started quizzing me about my night with Alistair. Much to her chagrin, I refused to give her any details, but she knew without being told that we'd finally had sex. And the shit-eating grin on my face must have given something away, because she was blushing and giggling almost as much as I was.\n\nI went up to the room I shared with Alistair and had a nap; the sheets had been changed, and the room aired out. I could get used to this...but I'd better not. When Alistair came in, a few hours later, his armour covered in gore, I scrambled out of bed in a panic.\n\n\"What happened? Are you alright?\" I immediately started checking him over for injuries. \"I hate not being there. I should have been. Why did I let you go without me?\"\n\nHe tried to push away my hands, eventually grabbing my wrists to still them. \"I'm fine! Sierra. Look at me. I'm fine. None of this blood is mine. We're all fine. We did some work for the Chanter's board. And there's a group of mercenaries trying to clean up some of the problems in the Market District, and it's been a mini-civil war in the back alleys. We helped out some group called the Black...something. I don't know what good it will do, but it paid well, so good enough.\"\n\nI stopped. \"The Blackstone Irregulars?\"\n\n\"That sounds right. You know them?\"\n\n\"A bit. I don't remember exactly... Let me think. They'll have all sorts of paying work, though at some point the leader's son will attempt a coup, and try to hire you to assassinate his father, or something. Don't do it. The son is a creep.\"",
        "He laughed. \"I love you, have I told you that today?\" He leaned down to kiss me, and I quickly moved away. He pouted.\n\n\"You've got blood on your face.\"\n\n\"Maker! Sorry. I'll go have a bath, quickly. Then maybe we can try that kiss again?\"\n\nThe glint in his eye made it obvious he was hoping for more than a kiss, and I shivered. \"I have a better idea.\"\n\n\"Oh?\"\n\n\"How about I help you wash?\"\n\nI don't think I'd ever imagined someone in heavy plate armour getting undressed so fast.\n\nWe had the tub filled, both of us red-faced and giggling as the boy who hauled the water grinned cheekily and winked at Alistair when he thought I wasn't looking. We gave him Alistair's armour to be cleaned, and then locked the door. I slipped my simple dress over my head, and slid into the bath, which was hot and smelled sort of foresty. Alistair's gaze never left me as I waited for him to rinse the worst of the blood off his skin and hair in a bucket before joining me.\n\nAlistair wet was even more fantastic than Alistair any other way, and I was drawn to him like iron to a magnet. Kneeling in the tub, facing each other, I took the cloth and began washing his face, neck, arms, and chest, while he just watched me with dark eyes. He stood, and I washed his stomach and legs, both of us blushing as that put his manhood on the level with my face. When he sat back down, I had him turn so his back was to me, and washed that as well, then massaged his scalp with shampoo. He floated on his back, his eyes closed, a blissful look on his face, and I rinsed his hair carefully before leaning over him and pressing a kiss to his soft lips.\n\nThat was apparently the invitation he'd been looking for; he sat up, drawing me into his lap so I straddled him, and kissed me again. I could feel his hardness against my thigh, and raised myself a little to capture it inside me before sinking down to rest against his legs. His hands stroked me everywhere, gently but firmly so as not to tickle, and he soon had me whimpering with need. I started to move, lifting up and dropping back down, but he moved his hands to my hips to keep me moving slowly, teasing us both. The leisurely speed allowed us to maintain the connection with our lips, and he swallowed my moans as the heat in my core increased. I wanted to speed up, desperate for release, wanting to feel him spend inside me, but he held me relentlessly and all I could do was endure.\n\nWhen release finally did come it was somehow softer, smoother than the frenzy in the night, but at the same time strangely more intense and fulfilling. He shuddered through his own at the same time; I felt like I was closer to Alistair when it was over than I had been before and I collapsed into his arms with a long sigh."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-45-46"
}