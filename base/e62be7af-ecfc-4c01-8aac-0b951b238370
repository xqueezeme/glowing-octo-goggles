{
    "title": "Escape Room",
    "pages": [
        "\"Paul? You don't have to invite us to dinner every Sunday.\"\n\n\"I know. We just like having you guys come over.\"\n\n\"You're already on tap to win 'Best Brother of the Year\" award again, so it's not like you need to keep looking out for me.\"\n\n\"Abby? I know you can take care of yourself\u2014and Trevor. That's never even been a concern. But you're my sister. We're family. And family takes care of one another.\"\n\n\"It does, but you and Amanda have been taking care of us since Terry died. We love you for it, but you have a wife, and you don't need us there every single week.\"\n\nHer brother paused for a moment then said, \"If I didn't know better, I'd think you were looking for excuses to stop coming over.\"\n\n\"What? No! Nothing could be further from the truth. I just don't want you to feel obligated to look out for us for the rest of your life. That's all.\"\n\n\"Terry was my best friend, Abby. Losing him tore me up, too, and I can't even imagine how hard it was on you. And Trevor was so young. It just...kills me to think about him not having a father, and especially one as involved and caring as his dad was. And worst of all, he'll never know what a good man he was.\"\n\nNow it was Abby who paused. She knew her brother was right. He and Terry had been best friends since junior high school. And Paul was the one who'd introduced to her to the man she'd married when she was 35. It wasn't that she'd planned to wait that long to settle down. It was more that she'd had so much fun being single that giving it up seemed too much to ask. Until she met Terry Stevens\u2014again. \n\nAbby had moved away from her hometown of Omaha, Nebraska, after graduating from college (go Cornhuskers!) with a degree in nursing, and had her father not died, it was likely she'd still be living in the same Seattle suburb she'd moved to take a job in a local hospital. But when she learned that he'd had a completely unexpected heart attack and died while out working one morning on their huge farm. \n\nAbby not only came home for the funeral but ended up staying. Mostly, she stayed for her mom's sake. Running the family business which consisted of growing and harvesting over a thousand acres of corn each year was too much for the then 63-year old woman. \n\nAbby was a registered nurse and could find a job anywhere, so that wasn't an issue. But taking care of her mom and making sure she didn't work herself to death was. So for the first three months she was back home, Abby did the kind of things she'd done growing up for hours a day around the farm. The tractor became he second home for most of each day.\n\nThere were endless tasks to be done while always keeping harvest time in the back of her mind. Once she was convinced her mom could handle things on her own, or rather with the aide of the additional hand she finally, but reluctantly, brought onboard, Abby went back to work at a doctor's office in Omaha. But before she did, she found herself spending more and more time with someone she'd known forever but mostly forgotten about until this trip home.\n\nPaul and Terry had hung out at the home where Abby grew up for as far back as she could remember. In fact, Terry Stevens was her first crush, but being four years younger, she was nothing but just the skinny little kid with pigtails to him. And by the time she grew up and became a beautiful young woman, he was off at college himself and sowing his wild oats while majoring in agricultural engineering.\n\nTerry had never married, either, but like Abby, he was smitten from the first time he saw the all-grown up version of her. Yes, she'd been cute as a girl, but the adult Abby wowed him from the moment he shook her hand after Paul said, \"And I'm sure you remember my sister, Pigtails.\"\n\nThat was the name Terry'd given her way back when, and no one else had ever called her that before or since. Abby blushed when her old nickname came up, and the way Terry was looking at her made her cheeks glow even more in spite of her age and experience in life.\n\nHe asked her out the next day, and began helping out on the farm after working his all day just to be near her. Within a month, she knew she was falling in love. Just two months after that, Terry asked her to marry him, and in spite of many people warning them both about rushing into things, she said 'yes' and never looked back.\n\nTen months after they said 'I do', Trevor was born, and Abby and her handsome husband were over-the-moon happy. But less than 18 months later, Trevor found a lump during a self check which Abby insisted he do every month. He hated doing it, and as a result, often let it go for several months until she started bugging him. She felt it, too, and when she did, a cold chill ran down her back even as she told Terry it was probably nothing. But her insistence that he get it checked immediately caused her husband to wonder if this might not be serious.\n\nTwo days later, they saw the same family practice doctor Abby grew up seeing, and she was equally concerned. A week later they were seeing a specialist and getting a CAT scan. And then a PET scan. And then came the dreaded diagnosis: Stage IV testicular cancer that had already spread to his liver and lungs.\n\nThe crazy thing was he felt fine. He was working all day and had no indication anything was wrong. But within two weeks of the diagnosis he began feeling tired. Then came the symptoms that proved the diagnosis was accurate. And the pain. The nearly unbearable pain dulled only by morphine and then Fentanyl.\n\nJust nine months after learning that the tumor had spread, Terry Stevens took his last breath in an Omaha hospital bed with Abby and their son by his side.\n\nDevastation didn't do justice to the way his loss affected Abby. Trevor was sad but too young to understand what happened. So Abby put on a brave face in front of her son during the day and cried herself to sleep at night for months. And had it not been for her mother, Paul, and his amazing wife, Amanda, she wasn't sure she'd have made it this far. But they'd all been there for her and her son from the time they got the worst news any of them had ever faced, and they were still there for them.\n\n\"You're sure you're not sick of us?\" Abby asked in a way that told her brother she was smiling.\n\n\"Are you kidding? Never gonna happen! And I got a new video game I wanna play with Trev, so get your butts over here on Sunday. Got it?\"\n\n\"Okay, okay. We'll be there,\" his sister replied, happy to know she really wasn't a burden on them.\n\nPaul and Amanda couldn't have children, so that was another reason they loved having her and Trevor over each week. Paul was like a part-time surrogate father to her son, and he was very good at it. But Abby knew that her boy needed an actual father who would be there day in and day out who could also be a role model for Trevor and to do guy things with him because Paul wasn't always available.\n\nBut knowing that and doing something about it were two different things. Abby had finally tried dating a few months earlier, but her heart wasn't in it. Maybe it was more that she just wasn't ready yet, or maybe it was the men she'd dated. Whatever the reason was, she still had no real desire to get serious with anyone. But each time she thought about just throwing herself into her work and her son and giving up on ever finding someone else, she'd look at him laying in bed asleep and realize that wasn't an option.\n\nSo for now she'd have dinner with her brother, do her job the best she could each day, spend time with her son, and do her best to keep an open mind about dating, something that had become a kind of four-letter word to her. But at 43, and with Trevor now seven years old, she didn't have years and years to piddle away while she waited. But she did have days and weeks and even months, and that thought gave her great comfort as she hung up the phone with her big brother.\n\nBy the time Sunday dinner was over, Abby was more than glad she'd joined her brother and sister-in-law, and at the last minute, their mom agreed to take a few hours off and eat with them, too. The food, as always, was delicious, and the conversation was easy and pleasant. Abby, her mom, and Paul were extremely close, but she also loved Amanda dearly, as did her mother, so anytime Paul grabbed Trevor to go do something, Abby enjoyed the girl time immensely.\n\nThe three of them talked while the 'men' played the new video game, and Abby loved the sounds of laughter and things like, \"Nice job, dude!\" coming from the family room while they sipped a second glass of wine in the kitchen.\n\n\"Hey, we wanna do something with you guys on Wednesday,\" Paul said as he and Trevor walked in after playing the game for over an hour.\n\n\"Oh?\" Abby replied as she looked at her brother.\n\n\"No. I'm too busy,\" their mother replied before thanking her son and daughter-in-law and saying goodbye before even hearing what the thing might be.\n\nOnce she was gone, Abby asked what her brother had in mind.\n\n\"Well, I ran it by my main man here, and it we both think it sounds like a lot of fun.\"\n\n\"What is it?\" Abby asked.\n\n\"Mom! It's SO cool!\" her son said as he came over and sat next to her. \n\n\"Okay. And what is it that's so cool?\"\n\n\"Uncle Paul. Show her!\"\n\nPaul was scrolling on his iPad, and a few seconds later he handed it to his sister who set it between herself and Amanda.\n\n\"The House of Conundrum?\" Abby said after scanning the page.\n\n\"Let me see,\" Amanda said. \"Oh. I've heard of this place. It's an escape room.\"\n\n\"An escape room?\" Abby asked.\n\n\"Mom, you go inside and you have to find clues to solve puzzles so you can escape. Isn't that awesome?\"\n\n\"It sounds hard,\" his mom said as she kept reading. \n\nThe House had a number of rooms with an average percentage for how often people escaped which ranged from a low of 3% to a high of around 25%. The one that caught Amanda's eye was difficult but seemed the most interesting to her.\n\n\"The Sherlock Holmes room looks fun.\"\n\nAmanda turned the screen back toward Abby who looked through it and agreed.\n\n\"So can I sign us up?\" Paul asked. \"It's only one hour, but it's something different, and I think Trevor will really enjoy it.\"\n\n\"Okay. Sure. How much is it?\" Abby asked.\n\n\"For you guys? It's free,\" her brother said.\n\n\"Oh, boy. Here we go again!\" Amanda said, causing Paul to laugh.\n\n\"Now they're gonna argue about who's paying. No you won't! Yes I will!\" the boy said to his Aunt Amanda as he playfully mocked his uncle and his mother.\n\nPaul and Amanda weren't hurting for money, but neither was Abby. None of them were rich, but they all did more than well enough to live comfortably in the Omaha area. \n\nAs usual, it came down to 'rock, scissors, paper,' only in this game, the winner was awarded with the right to pay.\n\n\"Ha! You lose!\" Abby said triumphantly when her paper covered her brother's rock.\n\n\"Fine. But next time, I'm paying!\"\n\nEveryone laughed and Abby used that as an excuse to say they should probably get going, too. Trevor asked if they had to, as he always did, and as always his mother firmly told him they did. A flurry of hugs and thank-yous from Abby and Trevor signaled the evening was over, and just like that, she and her young man were driving home in silence, one more reminder that someone very important was missing from their lives.\n\n\"I can't wait to do the escape room,\" Trevor told his mom when she tucked him in.\n\n\"Yeah, that sounds like fun. Just remember that not everyone escapes, so if we don't get out, don't be too disappointed, okay?\"\n\nTrevor's face got very serious as he asked, \"Wait. You mean they don't let us out?\"\n\nHis mom tried not to laugh as she explained.\n\n\"Yes. They'll let us out, but we won't be letting ourselves out. Understand?\"\n\n\"Oh, okay. I thought you meant they'd keep us there. Forever.\"\n\n\"No, silly. They won't keep us there forever. Now get some sleep, okay? You have school in the morning.\"\n\nFortunately, Trevor mostly liked going to school. He was an average student but did okay. However, being a little awkward and a whole lot shy, he didn't have many friends. But he enjoyed going, and Abby often imagined her son as the nerd the cool kids would end up working for someday.\n\n\"Goodnight, Mom,\" he said as he reached for a hug.\n\n\"Night, buddy. I love you,\" she said as she hugged and kissed her son.\n\n\"I love you, too!\" he told her before turning on his side and pulling the covers up to his chin.\n\nAs she stood there watching him fall asleep, Abby sighed again knowing she needed to make a better effort at finding someone. But who? And how? It wasn't like she could sit down with her laptop and order an amazing man from Amazon, and they most definitely didn't grow on trees.\n\nAs she lay in bed waiting to fall asleep later that night, Abby missed her husband more than she had since the first six months he was gone. She knew the loneliness only seemed unbearable, but at that moment it was hard to believe she would ever feel truly happy again.\n\n*****\n\n\"Neil? I need you to stay on a couple more hours tonight.\"\n\nHe knew he could say 'no', but the business had a new owner, and Neil wanted to let his new boss know he was team player so he told him that was fine.\n\n\"Semper Fi, right, Marine?\" the 57-year old man said as he slapped the younger man's arm.\n\nBoth were former Marines with the lead technician having served four years some 30 years ago while Neil Silvan had done six years and left active duty just five years earlier. He'd been trained as a Refrigeration and Air Conditioning Tech, which was Military Occupational Specialty 1161 and used those skills to land an HVAC job he dearly loved back in his hometown. \n\nNeil grew up in Omaha area and spent his early life on a farm growing corn and couldn't wait to leave home and see the world. He enlisted in the Marine Corps right out of high school and found himself at the Marine Corps Recruit Depot in San Diego, California. After boot camp and ten days of leave back home, Neil reported to Bravo Company, Marine Corps Detachment, at the US Army Ordnance School at Fort Lee, Virginia. For 42 days, he and his fellow new Marines learned the basics in electricity, preventive maintenance, inspection procedures, administrative forms and records to give them the skills needed install, operate, and repair refrigeration and air conditioning systems.\n\nNeil loved his work as much as he loved being a Marine, and in less than four years he was a sergeant/E-5 and back home on leave after a year in Okinawa, Japan. It was during that month-long visit that he met a girl he'd known in high school but never really noticed.\n\nNeil had been one of the best looking guys in his graduating class, a star football player, and a decent wrestler. Misty Osborn, on the other hand, had been a shy 'wall flower' kind of girl who wore braces and was so thin other kids teased her that if she turned sidewise to the light she'd disappear. But as he learned after running into her out in town one afternoon, she was the kind of flower that was a late bloomer. \n\nShe, of course, recognized and remembered him immediately when he caught her eye and smiled at her. She pretended not to know who he was even after he began flirting with her. But when he asked her out she fessed up and told him who she was. A very embarrassed Neil Silvan had to apologize because the truth was he barely remembered her.\n\n\"That's okay. I wasn't exactly memorable back then. I had a serious 'tin grin' going on and played the flute in band. I thought you were very handsome back then, and you're even more so now. And more importantly, you're very sweet, so yes, I'd love to go out with you,\" Misty told him.\n\nOne date become two and two became ten. Even after Neil left to report in to Camp Lejeune, North Carolina, they texted, called, and emailed each other multiple times a day every day. After just two months apart, Neil called her and told her he didn't think he could live without her and asked her to move their and live with him.\n\n\"I'd do that 'in a heartbeat' as you Marines say, but I won't do it as your girlfriend,\" Misty told him.\n\n\"I don't understand,\" a confused Neil replied.\n\n\"I'm saying I'll need more of a commitment than just being your girlfriend.\"\n\n\"Would you marry me?\" Neil blurted out, not so much as a proposal, but as a question that should have been asked, \"so...would you consider marrying me someday down the road'?\"\n\nMisty, however, took it literally, and she gleefully shouted, \"Yes, I'll marry you!\"\n\nNeil needed a few seconds to understood what had happened, and when the light came on, he became every bit as excited as his new fianc\u00e9. So while she got ready to fly to North Carolina, Sergeant Silvan got busy looking for a place to live off base and went shopping at the base exchange for an engagement ring which he gave to her within seconds after her arrival.\n\nWhen she got off the plane, Misty ran to him, Neil hugged her, picked her up, twirled her around, then got down on one knee, smiled, and said, \"Let's make this official!\"\n\nThe new couple wasted no time starting a family while they planned a very simple wedding at the base chapel. They married just two months later before she was showing, and Misty gave birth to a baby boy they named Tyler James Silvan seven months after that. \n\nMoney was always tight, and living in a trailer park was a challenge at times, but both of them were extremely happy and bonded even more over their beautiful little boy. A year after that, they were given a place on base, and Misty was over the moon at finally having her own house. It was fairly small and rather plain, but it was a single-family home, and she was thrilled to be living in it.\n\nNeil's initial six-year enlistment had one year left, and he was seriously considering making a career out of it. He would be up for staff sergeant, E-6, later that year, and in the Marine Corps, Staff NCOs were in a separate category from junior enlisted Marines. The other branches of the military required their enlisted personnel to make E-7 before considering them 'senior NCOs' or Chief Petty Officers, but that privilege was extended to staff sergeants in the Marine Corps. There was also a hefty bonus to be had, and the money only sweetened the already sweet pot.\n\nMisty was 100% supportive of her husband's decision, and as Neil was getting ready to start the re-enlistment ball rolling, tragedy struck which not only stopped the ball from moving but one that stopped Misty...completely.\n\nIt was late on a Friday night, and she'd been working at a local restaurant waiting tables as she often did to make some extra money. Like most Friday nights, there were plenty of people, both Marines and civilians, who were out partying hearty, and many of them who'd had too much to drink nevertheless got behind the wheel and drove.\n\nOne of them, a 32-year auto mechanic from the nearby city of Jacksonville, North Carolina, had done just that. He not only drove his Toyota Tundra truck after having well over a dozen beers at his favorite watering hole, he drove it head-on and straight into the little sedan Misty was driving and took her life in an instant.\n\nIn shock for days, Neil was unable to think let alone plan. It was all he could do to survive day to day while caring for Tyler. His OIC or Officer in Charge, a crusty Chief Warrant Officer-3 who'd gone from staff sergeant to Warrant Officer many years earlier and who'd already been on active duty for well over 20 years, gave Neil as much time off as he possibly could knowing how difficult things were for his young sergeant. But at some point, Neil had to make some decisions.\n\n\"You're not still thinking of staying in are you, Sgt Silvan?\" the warrant officer asked him around the two-week mark after Misty's death.\n\nUnlike the Army, which calls its warrant officers 'chief', Marines affectionately refer to theirs as 'gunner', even those who aren't actually 'Gunners', a separate category of warrant officers who are weapons specialists and wear a bursting bomb on one of their collars along with their warrant officer rank on the other.",
        "\"I don't know, Gunner. I mean, I gotta support my kid, but I don't see how I can deploy or even do my job.\"\n\n\"You're gonna have to pay for childcare, Sgt Silvan. That's all there is to it. And you're going to have to submit a deployment plan that shows you have someone to care for your son if you get sent overseas to include a combat zone. Do you have someone who'll do that for you?\"\n\n\"I don't know, sir. Maybe my mom? But I haven't asked her, so I can't really say.\"\n\n\"I've given you all the latitude I can, and now you're going to have to figure out what to do.\"\n\n\"Sir? What would you do?\"\n\n\"It's just my opinion, but I'd get out, move back home, and get a job. Our MOS translates well on the outside, and you'll have no trouble getting a decent-paying job working on air conditioning and/or heating units. If you live near your parents, maybe your mom could watch your boy during the day rather than you saddling her with that 24-7 for up to a year if you get deployed.\"\n\nSo for the rest of his time on active duty, Neil found a way to scrape up the money to pay the base childcare center to watch his son while he went to work. His OIC did his part to look out for Sergeant Silvan and made sure he didn't deploy for those remaining months, and wished him well the as he got ready to be discharged and head back home to Nebraska.\n\nTyler became Neil's priority in life, and he was often amazed at how well his son was doing after having lost the most important person in his life. The little boy was now six years old, very well adjusted, polite, and smart as a whip. He was tested during Kindergarten and did so well that he skipped the 1st grade and was doing better than most of his peers who were a year older in 2nd grade. Neil often joked that his son's intelligence came directly from him, but with him and his late wife being solid 'B' students in high school, he knew that wasn't true. In fact, he had no idea where Tyler's smarts came from, he only knew that he had them.\n\nKeeping him intellectually challenged was a challenge in its own right for both Neil and the boy's teachers. So when a friend at work mentioned something called an escape room later that night that after he agreed to stay late, he was immediately interested.\n\n\"I've heard of those. Are they fun?\" Neil asked when another HVAC tech said he'd recently been to one.\n\n\"Yeah. They're a lot of fun. But they're hard as hell to beat.\"\n\nNeil asked several questions and found out that anyone going to such a place had to choose one of the various rooms every similar establishment had. His co-worker had gone to a place called Conundrum Home, or something like that, several times, and the most interesting room he'd gone through so far was called The Sherlock Holmes Room.\n\n\"Only 9% figure it out. My group came SO close. We were just one clue away when our time ran out, and I'm going back again and next time, I'm gonna escape.\"\n\n\"Do they let kids do it?\" Neil asked, now very interested.\n\n\"Sure. There's probably a lower limit, but you could definitely take Tyler with you. And that damn kid's so smart, he'll probably figure it out for your team.\"\n\nNeil laughed, told him he agreed, then asked, \"Hold on. What do you mean by 'team'?\"\n\n\"Well, you sign up online, or you can go in and pay for your time, if there are any spaces left. You don't know who else signed up until you get there. My wife and I ended up going through with six other people, and all but one of them were dumber than dirt.\"\n\nNeil chuckled again then asked if it was always that busy.\n\n\"Not necessarily. It could end up being just you and your boy doing it alone if no one else signs up for that particular room at that exact time. I go on Saturdays and it's usually pretty crowded. And it's $35 a head\u2014maybe less for a kid\u2014so it's not exactly cheap. But I've always loved puzzles, and these things are right up my alley.\"\n\n\"Maybe I'll check it out,\" Neil told him as he dug into the very old AC unit there were getting ready to tear apart.\n\nThat evening he did some checking online and found the place in seconds. It looked like something he might enjoy, and he knew Tyler would love it. But before he booked a room and a time, he grabbed his son and asked him to come take a look.\n\n\"That would be awesome!\" his son said, his always-present smile in place. \"Can we do it, Daddy?\"\n\n\"Yeah. Sure. I'll sign us up. We'll go after dinner on Wednesday, okay?\"\n\nTyler told him that was very okay and gave his father a huge hug, and that made the $50 he was shelling out worth it before they even went.\n\nHaving worked late paid off as Neil wasn't asked to stay late again on Wednesday when his boss said, \"Silvan? You can go home unless you want the overtime. You've been willing to do whatever I ask, so tonight I won't bother you.\"\n\n\"I do have plans, so while I can always use the money, I'm taking my boy somewhere tonight, and we're both really looking forward to it.\"\n\nHis boss told him to have fun, and Neil was on his way home by 5 o'clock. He'd been living with his folks since returning to Omaha, and that had allowed him to finally start putting some money away and get a little place of his own. His mom absolutely loved having Tyler around, and he could tell that even his normally-stoic father enjoyed the sunny little boy's presence in the house for the time that they stayed there with them.\n\n\"So are you and your dad excited about going to the escape room tonight?\" Neil's mother, Cathy, asked as they ate dinner.\n\n\"I can't wait! I told everyone at school that we're going, and guess what?\"\n\n\"I can't guess,\" his grandmother said with a smile. \"So can you just tell me?\"\n\n\"Uh-huh. Another boy in my class is going tonight, too!\"\n\n\"That's very exciting. Maybe you'll see him there.\"\n\n\"He's shy,\" Tyler said.\n\n\"Oh, I see. Then he might enjoy having a friend there.\"\n\n\"Yes, but we might not be in the same room, right, Daddy?\"\n\n\"Right you are, good buddy. There are quite a few different rooms so unless they picked The Sherlock Holmes Room at the same time as us, we won't be together.\"\n\n\"That's okay. I just want to find all the clues and escape!\" Tyler said in his always-happy way.\n\n\"If anyone can, it's my grandson,\" his grandma said as she mussed up his hair.\n\n\"Can we go now, Daddy?\" Tyler asked.\n\n\"Finish your food, brush your teeth, and then we can go, okay?\"\n\nTyler still stayed there occasionally, so he had a toothbrush, some pajamas, and other things in his old room.\n\n\"Okay! I will!\" his son said as he shoveled in the last of his corn and mashed potatoes.\n\nTheir reservation was for 7pm, and the two Silvan 'men' arrived 10 minutes early.\n\n\"This place is so cool!\" Tyler said as they walked inside. \n\nThere were depictions of every room on the wall with subtle clues available to those who really looked, and Tyler was one of those people who really looked.\n\nHe went straight to the one showing the Sherlock Holmes Room and starting piecing things together. \n\n\"I bet the way that bird's beak is pointing is a direction!\" he told his father who could only laugh knowing his son was probably right.\n\nHe was busy looking for other hints when a quiet voice said, \"Hi, Tyler.\"\n\nThe boy spun around and smiled when he saw his friend.\n\n\"Hi, Trevor! Which room are you guys doing?\"\n\n\"Mom? Which one are we going through?\" the boy asked his mother who was standing next to him.\n\n\"Um...Sherlock Holmes,\" she said to her son as she looked at Tyler's dad. \n\n\"We didn't mean to bother you, but my son said your son is in his class, and he wanted to say 'hi'.\"\n\n\"You're not bothering us,\" Neil told her with a smile. \"Tyler mentioned a friend from school might be here tonight, and if you're doing Sherlock Holmes at seven, we might be going together.\"\n\n\"We are, and that would be wonderful!\" the woman said. \"I'd love for Trevor to have someone he knows\u2014besides me\u2014going through this with him.\"\n\nShe moved a little closer then said quietly, \"He's very shy, and when he saw Tyler his face lit up, so that would be really great. And yes, we are scheduled for 7 o'clock. My brother and his wife were supposed to come with us, but they had a...\"\n\nThe woman stopped talking when a young woman in her early 20s walked over, smiled, then asked if they were her 7 o'clock people.\n\n\"Yes. I believe we are,\" the woman said for them all.\n\n\"Great! My name is Tammy, and if you and your husband and children will follow me, we'll get started.\"\n\nBoth she and Neil were wearing wedding rings which Tammy had noticed, so when the woman politely told her, \"Oh. No. We're not...we're here separately.\"\n\nTammy apologized sincerely, but both the woman and Neil told her it was no big deal.\n\nAs they walked with their guide, the woman leaned over to Neil and said, \"My name's Abby, by the way.\"\n\n\"Neil. It's a pleasure to meet you, Abby.\"\n\n\"Same here. It's a shame your wife couldn't join us. I'd love to have another woman in the group.\"\n\nRemembering to smile, Neil quietly said, \"My wife...passed away...a few y...\"\n\nAbby stopped, turned toward Neil and spontaneously hugged him.\n\n\"I'm so sorry, Neil. I lost my husband, too.\"\n\n\"Mom? Why are you hugging Tyler's dad?\" Trevor asked.\n\nShe let go of her fellow widowed friend and bent down and said, \"He just really needed a hug.\"\n\n\"Is he sad?\" the boy asked.\n\n\"No. Well, maybe. Can we talk about it later?\" his mother asked, a smile on her pretty face to help make the question go away.\n\n\"Okay,\" he said before moving back next to Tyler.\n\nTammy turned around unaware that anything had happened then said, \"Okay. I'll be giving you the introduction to your room. I'll explain the rules, provide you with a general scenario of what you can expect, how many hints you get, and so forth. So if you'll follow me, we'll go on down to see Mr. Holmes and get you started.\"\n\nAs they walked, Abby glanced at Neil who was looking at her. She wanted to get a better look at a fellow traveler on life's highway who'd been through what she had unaware that Neil was trying to get a better look at her to confirm what he'd thinking. Abby was a very attractive woman, and he was now interested in seeing just how attractive she was. \n\nThe answer was simple: very. She was obviously older than him, but she was as attractive as any woman he'd met in quite some time.\n\n\"Sorry,\" he said when she turned to look.\n\n\"For?\" Abby asked having no idea what he meant.\n\n\"I guess you didn't notice me staring,\" Neil told her, a sheepish grin on his face.\n\n\"Oh, okay,\" Abby replied. \"I understand. I was looking at you for the same reason.\"\n\n\"Wait. You think I'm attractive, too?\" a confused Neil asked.\n\nAbby stopped again, shook her head a bit then said, \"I'm confused. I was looking at you because, well, we...we have this very...unusual connection. I just assumed that's why you were looking at me.\"\n\nNeil kind of winced then smiled.\n\n\"Am I wrong?\" she asked, sensing there was something she was missing.\n\n\"That's true, but I guess I was just surprised to bump into someone as beautiful as you, and here, in an escape room, of all places.\"\n\nNeil paused then said, \"Sorry. That probably sounded...odd. Or worse.\"\n\nAbby smiled then told him it was fine.\n\n\"I don't hear that a lot anymore, so it was very nice of you to say, Neil,\" she told him as they continued walking. \n\nShe smiled at him then quietly said, \"And you're a very nice looking young man yourself.\"\n\nNeil wanted to get acquainted but knew this wasn't the right time or place. In fact, there might not be a right time or a right place as she could well have no interest in getting acquainted with him at all, or even worse, she could be seeing someone. But if the opportunity presented itself he intended on at least trying.\n\n\"Okay. So this is The Sherlock Holmes Room,\" Tammy said in a very upbeat voice before explaining how things worked.\n\nThey would have 60 minutes that would be counted down on a timer which would be visible to them at all times. They were to look everywhere, even in the most unlikely of places, for clues that would help them escape, and they could ask for help three times.\n\n\"Unlike most escape rooms, we're a family owned business, so we're a little more lenient than the big chains. I'll be able to see you at all times, and if you're in a need of a little extra help, I'm happy to point you in the right direction,\" Tammy explained.\n\n\"No! We don't want extra help!\" Tyler told her. \"We can figure it out by ourselves!\"\n\nTammy's look of surprise made the adults laugh.\n\n\"Well, in that case, you can go in and get started!\"\n\nShe wished them luck, locked the door behind them then started the timer.\n\nTrevor stayed with Tyler who was already sleuthing.\n\n\"Look! See those three hats? That's a clue!\" he said as the adults looked at one another and shrugged.\n\n\"Didn't your son skip a grade?\" Abby asked.\n\n\"He did. And he just might be able to figure this out.\"\n\nAbby laughed then told him they should probably help or at least make it look like they were.\n\nTyler's intuition was correct, and his solution led to being able to open a lock on a cabinet drawer. From there Neil realized that the number of items inside it corresponded to some markings on one of the walls. Abby picked up on that and figured out that those markings were the first number in the next lock on a chest.\n\nOnly Trevor seemed lost, but just as they were down to their last three minutes with one clue to go, he said something that no one else heard. \n\n\"Listen to the boy!\" they heard Tammy say.\n\n\"What?\" Everyone else called out in unison.\n\n\"Listen to the boy,\" she repeated.\n\n\"I didn't say anything,\" Tyler told the grownups who then turned to Trevor who repeated what he'd said.\n\n\"That's it! That's the last number!\" Neil hollered.\n\n\"What is it?\" Abby yelled as she took the lock in her hand.\n\n\"Four! It's a four!\"\n\nShe spun the dial and pulled, and the lock opened. Inside the chest was a large key on top of a note that said, \"Congratulations!\"\n\nTyler reached in and grabbed it, but just before he opened the final door he called Trevor over and said, \"Here! You turn it!\"\n\nHis quiet friend did just that, a loud lock clicked, and the last door opened to reveal Tammy standing there with a big smile on her face.\n\nAbby couldn't believe they'd done it and turned to Neil who, just like she'd done earlier, threw his arms around her. She did the same back to him and once he had her in a bear hug, Neil picked her up and spun her around as Abby nearly shrieked with laughter.\n\nWhen Neil put her down they briefly looked at one another before quickly looking away.\n\n\"That was close! Good work guys!\" she said to the boys.\n\n\"Trevor figured it out the hardest clue,\" Tyler said, making his quiet classmate feel good.\n\n\"But you got most of them,\" Trevor told him.\n\n\"I was just lucky,\" Tyler replied.\n\nNeither boy saw it, but Abby teared up at the way Tyler was being so nice to her son, something that didn't happen all that often at school.\n\nAs they got ready to leave, Abby mentioned it to Neal and thanked him for raising such a sweet boy.\n\n\"He really is a good kid. I just wish his mom could see how well he's turning out.\"\n\n\"I feel the same way about my husband. He was a great dad, and he'd be so proud.\"\n\nShe paused then said, \"And maybe Trevor wouldn't be so reserved.\"\n\n\"It's not easy being a mom and a dad, is it?\" Neil offered.\n\n\"No. Not at all. But what other choice do we have, right?\" Abby replied a look of understanding and resignation on her face.\n\n\"Good point,\" Neil told her.\n\nHe was seriously considering asking her out when Abby said something that sounded even better in that it offered no risk of rejection.\n\n\"Neil? Why don't we let the boys spend some time together one of these days? Tyler would be welcome to spend the night if that's okay with you.\"\n\n\"You know what? That sounds like a great idea. But maybe we could start off with something more along the lines of the four of us hanging out and doing something fun.\"\n\n\"Oh. That's even better! I like that idea a lot,\" Abby told him with a warm smile.\n\n\"Great. Could we maybe exchange phone numbers so we can set something up?\"\n\n\"Sure. Yes. That's kind of essential since we don't even know where the other lives, right?\" Abby replied with a little laugh as she got out her phone.\n\n\"Let's trade,\" Neil said once he had his contacts page open.\n\nAbby did the same and handed him her phone.\n\n\"IPhone XR. Nice,\" Neil commented as he entered his name, number, and address. \"I'm still using the 7s.\"\n\n\"I had one of those, and it's funny, but I miss it. I could zoom in on a photo, but with my newer, more expensive upgrade, I can't.\"\n\nNeil laughed at the irony and told her he understood, and mentioned that the iPhone X could. Abby quickly reminded him that it was $250-$300 more, and that ended their very brief discussion.\n\n\"Here you go. That's us,\" he told her as he handed her back his phone.\n\n\"And we're now in yours, too, and I'll look forward to hearing from you. I can't remember the last time I saw Trevor this happy.\"\n\nShe looked over at the boys who were back in front of another room's poster out in the main lobby area. Tyler was pointing out potential clues and Trevor was saying things like, \"Cool!\" or \"How do you know that?\"\n\n\"You said Trevor's shy and mentioned something about my boy being smart. It's true. He is smart. Really smart. But he has trouble getting close to people. He's not autistic or anything, he just seems to kind of live in his own world.\"\n\n\"He's very sweet, and Trevor obviously likes him.\"\n\nShe turned to Neil then said, \"Maybe they'll kind of, you know, balance each other out or something.\"\n\nNeil heard the words she spoke, but he wasn't really listening. He was staring at Abby while trying not to stare and taking in how incredibly beautiful he found her. She had dark, almost raven hair that was halfway between her chin and shoulders; hair that seemed to...sparkle or something. Her eyes were a bright green and her smile was amazing. And as amazing as everything was above the neck, everything Neil could see told him she was just as incredible from there on down.\n\n\"Don't you agree?\" Neil heard, causing him to shake his head then apologize for not paying attention.\n\nAbby laughed then repeated what she'd just said.\n\n\"Oh, sure. Yes, that might very well happen. Tyler's a kind of social butterfly that flits from person to person. Having an actual friend might be very helpful.\"\n\nAnd to prove he really had heard her this time he added, \"And you're right. It could be a way to give Trevor some more confidence.\"\n\n\"You're a good dad, Neil,\" Abby told him very sincerely as they walked over to their boys.\n\n\"Oh, I don't know about that. I mean, I do try, but I'm at work a lot, and when I get home I'm exhausted. I feel guilty all the time about not spending enough time with Tyler, but that was nice of you to say.\"\n\n\"Well, as someone I know recently said, 'It's hard being both a mom and a dad', right?\"\n\nAbby's smile made him feel weak in the knees this time, but he managed to smile back and tell her he agreed.\n\n\"Okay, Trevor. You ready to go home?\" Abby asked her son.\n\n\"What? Already? Do we have to?\" the little boy said as he looked up at his mom.\n\n\"It's after 8 o'clock and we need to get home, take a bath, and get ready for bed.\"\n\nAbby's heart sank when her son's eyes welled up with tears. Normally, she was adamant about whatever she said, but he was having such a good time and for once she felt guilty.\n\n\"Well, maybe we could stop somewhere on the way home,\" she said.\n\n\"Can Tyler come?\" Trevor asked, his face now very different.\n\n\"Oh, I don't know, honey. They may need to...\"\n\n\"If you wouldn't mind, we'd be happy to join you,\" Neil said before Abby could finish.\n\nThe look on Trevor's face convinced her, but she still asked Neil if he was sure.",
        "\"That...that sounds really nice.\"\n\n\"Well, if you're sure.\"\n\n\"Can we, Daddy?\" Tyler asked as he put his arm around Trevor who did the same.\n\n\"Who could say 'no' to that?\" he replied to his son while looking at Abby who was all smiles.\n\nSpring hadn't yet sprung, and it was still cold outside. Even so, both of the Omaha natives thought nothing of going to an ice cream parlor. And as it worked out, there was one that was on both of their ways home, so Abby followed Neil and pulled in right behind him.\n\nAll three of the boys had a scoop of ice cream in a waffle cone while Abby had a small scoop of frozen yogurt in a cup which took her twice as long to finish as it did for all three 'men' to destroy their treats.\n\n\"Now I see why you're so petite looking,\" Neil teased when she finally finished.\n\n\"Petite? Ha! That's funny!\"\n\n\"Is that the wrong word?\" Neil asked.\n\nAbby laughed then told him it usually meant being very small in both height and size.\n\n\"Oh, okay. I meant...\"\n\nThe right word wouldn't come, and after a few moments of awkward silence, he said, \"Okay. 'Sexy' isn't right, either, but that's the only word I can think of.\"\n\nAbby pulled her head back a bit, opened her eyes wide, then smiled.\n\n\"Your vocabulary needs some work, then,\" she told him, the smile still there. \"Because it's been a very long time since anyone used that particular word to describe me.\"\n\n\"Even though it's accurate?\" Neil asked, his eyebrows raised a little and a smile on his face, too.\n\nShe laughed again then told him, \"Maybe when I was your age. But now? Not so much.\"\n\nShe was downplaying the compliment, but the fact of the matter was it made her feel good.\n\n\"Your age. Listen to you! You can't be that much older than me. I mean, we both have kids the same age, right?\"\n\n\"Maybe, but I'm guessing neither one of us is in our 30s,\" Abby said, still smiling. \"Would I be correct?\"\n\n\"Well, I'm turning the big three-oh in four months, so on my end, at least, you are correct.\"\n\nAbby tried not to laugh, but lost out at his use of the 'big three-oh'.\n\n\"Thirty, huh? Wow, you're really getting up there!\" she teased.\n\nNeil had been looking at her, but now he was more studying her to the point that Abby had to ask what he was looking at.\n\n\"I believe you just told me you were...\"\n\nHe cupped his mouth as though he was about to tell a secret and said, \"Over 40.\"\n\n\"And?\" she asked, her head tilted a little to one side.\n\n\"And...I'm not seein' it,\" Neil told her as he exaggerated the staring and pretended to actually be examining her.\n\nAbby laughed again then said, \"Oh, I assure you I am. And I see it. Every time I look in the mirror.\"\n\nNeil narrowed his eyes into slits as though he was taking one last, careful look before saying, \"Okay. You look like an honest woman, so I guess I'll just have to take your word for it.\"\n\nAbby laughed at his silliness then told him he'd made her day.\n\nFeeling a little emboldened, Neil told her, \"And you've made mine.\"\n\nAgain, Abby felt something when he said that, but she wasn't exactly sure what it might be. And it became a moot point when she noticed the time and told Trevor they really did have to go home now.\n\nFortunately, he not only didn't get upset, he said rather cheerfully, \"Okay, Mom!\"\n\n\"Tell your friend you'll see him tomorrow at school, okay?\"\n\nThe two boys said their goodbyes as the adults stood up to leave.\n\n\"I'm really glad we had the opportunity to get acquainted,\" Abby told Neil.\n\n\"Me, too. This has been a very pleasant surprise.\"\n\n\"To be honest I really didn't think I'd enjoy the escape room. I mostly did it for Trevor's benefit. But I had a wonderful time watching Tyler figure things out. He really is a very smart boy.\"\n\nBefore Neil could respond she also said, \"And I really enjoyed meeting you, too, Neil.\"\n\n\"Likewise, Abby, and I'll give you a call soon and see if we can decide on what to do together.\"\n\nHe realized how that sounded, so he added something, too.\n\n\"I mean...with our boys.\"\n\nShe laughed then said, \"Goodnight, Neil. I really did have a nice time.\"\n\n\"Same here, Abby.\"\n\nHe'd walked with her to her car, so when she her fob made the lights blink and unlock the door, he opened it for her. She thanked him then told him she was looking forward to his call.\n\nBack in their own vehicle, Neil asked his son if he had a nice time.\n\n\"That was SO much fun!\" Tyler replied. \"But I wish it wasn't so easy.\"\n\nNeil could only laugh as he and Abby had only figured out two of the needed clues during the hour they were in the room. \n\n\"Well, they have one room that has a 3% escape rate. Maybe we could try that one next time.\"\n\n\"Three percent. That means that 97 out of every 100 people don't get out,\" the young boy said.\n\n\"Um...yes. That's...that's right,\" his father replied even as he again wondered how in the world he'd managed to have a kid as smart as Tyler. Whatever it was, Neil often already felt inadequate to be raising someone who might be a kind of child genius.\n\n\"So that means we'll be those three out of a hundred that do escape!\" Tyler announced, and his father couldn't help but think that just might be true.\n\nBack home, Neil was waiting for Tyler to finish getting ready for bed then asked if he'd like to do something with Trevor.\n\n\"Like the 3% escape room?\" \n\n\"Yeah. Or maybe he could come over here and play. Or you could go over there. Would you like that?\"\n\n\"What would we do?\"\n\n\"Um, well, you guys could play video games or...\"\n\nThose two words were music to Tyler's ears.\n\n\"Okay!\" he said with a big smile.\n\n\"Yeah?\" his father replied, also with a smile.\n\n\"Can we play Dragon Ball Z?\"\n\n\"Isn't that 13 and up?\"\n\nTyler's smile disappeared immediately.\n\n\"I'm not saying you can't play it. I just have to ask Trevor's mom if that's okay with her.\"\n\n\"It's not Call of Duty,\" the boy said as though that should settle the issue.\n\n\"No. It's not that kind of game, but I will need to ask. In the meantime, maybe you can think of something else you might want to do.\"\n\nSatisfied, Tyler's smile was back as he asked his dad if he could read him a story.\n\nNeil smiled at the thought of a six-year old reading to his parent, but that's how things had been in the Silvan household for the last two years or so.\n\n\"Sure. What's on the list for tonight?\"\n\nNeil had some mystery story books called Encyclopedia Brown he'd gotten from a man at a yard sale who was in his mid-60s. As a boy he'd loved reading them and trying to guess who'd done it before the story revealed the bad guy. Neil paid the man a couple of bucks never once thinking his son would love them as much as this man once had.\n\nTyler jumped up and grabbed an old, well-worn book titled Encyclopedia Brown Finds the Clues that was published in 1966, then hopped back in bed and turned to the first page and began reading.\n\nNeil tried to listen to his son who already read well above grade level, but he found himself unable to concentrate, because his mind was elsewhere. It was back at the escape room and the ice cream parlor. More specifically it was zeroed in on one particular person, a woman he found distractingly beautiful and charming. But some part of his brain kept pointing out what she'd said about being over 40, and it was trying to tell him that this was an exercise in futility. \n\nEven so, he couldn't let go of the way he felt, and Neil was already looking forward to seeing her again. Hoping against hope, he couldn't help but wonder, and maybe even wish, that she might be willing to at least consider going out with him on an actual date. Seeing her so that their boys could play together would be nice, but he knew that wasn't going to be enough. He also had to admit that she may have brought up the age business as a subtle way of letting him know she wasn't interested in him. But until he knew that for sure, Neil couldn't help but nurture the possibility of a future that involved something more than just play dates.\n\n\"I think I know who did it, Daddy!\" Neil heard Tyler say, pulling him back to reality.\n\n\"Already? How can you possibly know that?\"\n\nTyler explained his reasoning, but because Neil hadn't been listening, he had no idea how logical his choice of villains might be. All he could really do was say how that sounded plausible while knowing he wouldn't need to explain the meaning of that word to his six-year old quasi-prodigy.\n\n\"You could be right, buddy. But we're gonna have to wait to find out.\"\n\n\"Ah! Can't we read just five more pages?\" his son asked.\n\n\"Sorry, big guy. Not tonight. But we'll read some more tomorrow, okay?\"\n\n\"Okay!\" his son replied, that wonderful smile back on his face.\n\nNeil set the book on the nightstand by his bed, gave his son a hug and kiss on the cheek and told him he loved him.\n\n\"I love you, too, Daddy! And thank you for taking me to the escape room and for ice cream!\"\n\nFor a brief moment, Neil stopped thinking about Abby and felt a wave of nostalgia and longing wash over him as he wished with all of his heart that Misty could be there to share the pride and joy he felt at that moment.\n\n\"I love you, too, Tyler,\" he told him before turning off the light then flicking on a nightlight.\n\n\"Sleep tight!\" he said as he left the boy's room and thoughts of Abby Stevens returned to the forefront of his mind.\n\n\"Don't let the bed bugs bite!\" his little boy called back, bringing a smile to his father's face as he realized his eyes were a little blurry from his very short walk down memory lane.\n\nSomehow, Neil forced himself to wait until the following evening to text Abby. Part of his reason for waiting was to avoid seeming overly anxious while another part was his need to try and come up with something to suggest that would let the parents spend time together while they kids played.\n\nThere was a place in Omaha called Joslyn Castle, the former home of George and Sarah Joslyn. The 34-room house was completed in 1903, and it was a place Neil had never been to in spite of having grown up there. Hoping against hope that Abby hadn't seen it, either, he texted her and threw it out as a fun activity for four.\n\n\"Oh, my goodness! I haven't been there since I was maybe 10 years old. I loved going through all the rooms, and the best part is you don't have to escape from any of them!\"\n\nNeil smiled when he ready her reply then asked if Saturday afternoon would be okay.\n\n\"Yes. That sounds perfect!\" she texted back.\n\n\"Great! May we come by and pick you guys up?\" Neil wrote back.\n\nAbby started texting something about how that wasn't necessary and that she could just meet him when she backspaced and erased every word.\n\n\"If you don't mind, that sounds very nice,\" she wrote instead as goose bumps arose on her arm, the reaction surprising her.\n\nNeil then began tapping out his response that included an invitation for dinner but erased it.\n\n\"It's no trouble at all. Can we stop by around 2:30?\"\n\n\"Sure. That'll give Trevor time to show Tyler his room before we go.\"\n\nShe thought for a moment, smiled, then added, \"And it'll give us a chance to talk.\"\n\nNeil was all smiles as he wrote back.\n\n\"That sounds great. We'll see you then!\"\n\n\"Okay, we're looking forward to it, and I'll pay for our tickets right now.\"\n\nNeil nearly panicked.\n\n\"No. Hold on. I'll take care of that. After all, I'm the one who invited you, right?\"\n\nHe wanted to say 'asked you out' but thought better of it.\n\nAgain, Abby almost started in the way she normally did with her brother, but after giving it some thought decided to accept.\n\n\"That's very kind of you. Thank you so much!\"\n\n\"My pleasure. See you soon!\"\n\nThe text exchange didn't last long, and it certainly wasn't racy or anything close to romantic, but when Neil set his phone down, he had to admit he felt the way he used to when Misty was alive. The reason why was obvious, and its name was Abby.\n\nFriday after work, Paul and Amanda came over just to spend some time, and in spite of a long day, Abby was all smiles.\n\n\"Did someone get a raise?\" Amanda asked.\n\nAbby did a little head shake and asked what that meant.\n\nAmanda laughed and told her she had seen her sister-in-law smile that much since...\n\nRealizing what she was about to say, Amanda stopped talking and began apologizing.\n\n\"No, it's okay,\" Abby, who was smiling again, told her. \"The fact is, it's probably true.\"\n\n\"So what's the reason?\" her brother asked as he nudged her as he walked by.\n\n\"Oh...nothing,\" Abby said in a way that no one bought.\n\n\"Uh-huh. Right,\" her brother teased. \"So are you gonna tell us or do I have to guilt you into spilling the beans?\"\n\nThe look on Abby's face surprised him and did the same to Amanda.\n\n\"I...I may have kind of...met someone,\" Abby said, as that same tingle/goosebump thing happened again even as her brain screamed, \"What are you thinking!!???\"\n\nAmanda's eyes got big as she looked at her husband who pulled up a chair and said, \"Okay. Start talkin'.\"\n\nWhen Abby looked away for a second, Amanda said, \"She likes this guy!\"\n\nTrying to recover, Abby said, \"No. It's...it's not like that. He's...he's just really...nice.\"\n\n\"Oh, okay. 'Nice' is always the equivalent of something like 'boring' or 'not very attractive', so...okay.\"\n\n\"Oh, he's very attractive,\" Abby replied without hesitation. \"And he's definitely not boring.\"\n\n\"What?\" a very surprised and confused Amanda replied. \"Then what's with the whole 'nice' thing? What hot, interesting guy is just...nice?\"\n\n\"It's...complicated,\" Abby said a little bit defensively when she realized she'd have to mention his age if this went much further.\n\n\"Ah. Yeah, that explains a whole lot!\" her brother said with a furrowed brow as though his sister had just said something very deep.\n\n\"He has a son. Named Tyler. And Tyler's in Trevor's class at school.\"\n\n\"I see,\" Paul replied, that look of extreme seriousness still on his face. \"Yeah, you don't want to get mixed up in that kind of mess.\"\n\nAmanda suppressed a laugh, and Abby got even more defensive.\n\n\"I'm glad this is all so entertaining to you both!\"\n\n\"Mom? What time are we going to the Joslyn Museum with Tyler and his dad on Saturday?\" a very excited Tyler asked as he walked into the room.\n\n\"Tyler...and his dad, eh?\" Paul teased without smiling. \"Yes, Mom. When are you going? With Tyler and his...dad?\"\n\n\"His name is Neil and he's really nice!\" Trevor told his uncle.\n\n\"Neil. Well. That does sound like a very...nice...name.\"\n\nPaul looked over at Amanda who was still trying not to laugh as Trevor tried to figure out what was going on.\n\nAbby looked at Paul then Amanda, then back at her son. The adults had that 'well?' look on their faces while Trevor's look was one of happy anticipation.\n\n\"He'll be stopping by around 2:30 or so,\" his mom said, hoping that would end her nightmare.\n\n\"Wow. So Neil is nice, huh? What's he like?\" Amanda asked her nephew.\n\nTrevor never actually answered the question because he didn't know. He'd spent all of his time talking from the time they met at the escape room until they left the ice cream parlor. Even so, he did his best to say something...nice.\n\n\"He does sound...nice,\" Amanda said as she looked at Abby and smiled.\n\n\"Gee, thanks, Amanda. Way to stick with your fellow woman!\"\n\n\"I'm sorry, but...Neil...does sound nice,\" Amanda told her in a way that Trevor didn't get but Abby did.\n\nConfused and bored, Trevor turned around and left leaving Paul and Amanda sitting there grinning like Cheshire Cats.\n\nPaul stood up and pretended to be a robot.\n\n\"Must...have...more...data!\" he said as he moved his arms up and down robotically. \"Nice does not compute.\"\n\nAbby tried hard not to laugh, but she lost out and gave up.\n\n\"Okay. Just keep an opened mind, all right?\" she said as she took a seat across from Paul and his wife.\n\nHer speech wasn't long, but it went on for a good while as she backtracked, corrected herself, and added whatever she thought might mitigate the huge difference in age.\n\n\"My sister's a cougar!\" Paul said to his wife as he leaned over and pretended to whisper.\n\n\"I...I am NOT!\" Abby replied, much too defensively.\n\n\"Hmmm. Let's see here.\"\n\nPaul held up his fingers and started doing the math.\n\n\"You're 43. And this Neil, this really nice guy, is 29.\"\n\n\"Almost 30,\" Amanda chimed in as though it was a significant detail.\n\n\"Right! Yes, almost...30. So if we start at 43 and count down to 42, 41, 40 39...\"\n\nWhen Paul ran out of fingers he asked Amanda to pull his right shoe off.\n\n\"No. You better take both of them off. I'm gonna need all of my toes, too!\"\n\n\"All right! That's enough!\" Abby said once Amanda starting reaching down. \"Ha-ha! Very funny.\"\n\nPaul finally got serious then asked, \"So do you really like him?\"\n\nOnce his sister realized the teasing was over she felt much better and said, \"I...I don't know. He really is very ni...\"\n\nWhen Paul and Amanda started smiling, she switched to, \"Interesting.\"\n\n\"Interesting enough to go on a second date with, right?\" Paul said.\n\n\"The escape room wasn't a date. That was a coincidence. And the museum is just so the boys can spend time together.\"\n\n\"Oh, okay,\" Paul replied. \"Because there's no way either you or Neil could take both of them without the other person going, huh?\"\n\n\"Paul!\" Amanda said in defense of her fellow woman.\n\n\"Sorry,\" he said. \"I was just kidding around. I'm actually very happy for Abby.\"\n\n\"You should be. She hasn't been this happy in...\"\n\nOnce again, Amanda stopped in mid-sentence.\n\n\"I'm very happy for you, too, Abby,\" she said, finishing her thought.\n\n\"It really isn't a date,\" Abby let them know.\n\n\"But you wouldn't mind if it was, right?\" Amanda asked in a supportive kind of way.\n\nThe look on Abby's face said she wouldn't. Her hesitance in responding said she was conflicted about admitting that.\n\n\"I say you go and have a nice time,\" Paul said in a louder, more decisive tone of voice. \"If that's the end of it, so be it. And if it leads to an actual date, what's the harm, right?\"\n\n\"Even if he's...not quite 30?\" Abby asked with a concerned look on her pretty face.\n\n\"I say...yes,\" Amanda told her as she looked at Paul who nodded before saying he agreed.\n\n\"Tyler and Trevor seem to really along, so that's also a pretty big factor,\" Abby told them as though she was trying to convince herself as much as her family.\n\n\"Just go!\" Amanda said. \"Then I want to hear all about it!\"\n\nAbby finally laughed but said there probably wouldn't be much to tell.\n\n\"Anything is better than nothing, right?\" Amanda countered, causing Abby to laugh again and letting them change subjects.\n\nBy the time Saturday came, both boys were driving their respective parent crazy by asking if it was time yet.\n\nTyler's asking stopped around 2:15 when his dad asked him to get ready to go. Trevor's ended when the doorbell rang 15 minutes later.\n\n\"Tyler! Come inside and see my room!\"\n\nThe boys bounded off before the adults could even say hello, but the way they both looked at one another said it was worth the small, additional wait.\n\n\"You look...amazing,\" Neil said once he and Abby were alone.\n\n\"Thank you. You look very nice yourself,\" she told him, a smile on her face that got bigger when she realized she'd just used 'nice' to describe how he looked to her.\n\nIt was cold outside and Abby had chosen an off-white turtleneck sweater and a pair of black pants which confirmed what Neil had believed about her figure; a figure that was amazing for a woman of any age but especially for one in her 40s.\n\nHe'd thrown on a black sweater over a dark-blue shirt with a pair of jeans, but the thing Abby noticed the most, other than his smile, was his hair. It was dark, thick, and looked very...nice. She was too modest to admit it looked 'sexy', but a part of her knew it was.\n\nAnd that went for Neil, too, who loved the way her hair was styled and how it kind of seemed to shine as it framed her face.",
        "\"You have a very nice home,\" Neil told her, unaware of the 'drama' surrounding the use of that particular word as of late.\n\n\"Thank you. I do my best to keep up with it, but the outside needs a lot of work, and while my brother, Paul, does his best to help out, my husband's absence is even more noticeable every time I look out in the yard. And it's even worse during the summer.\"\n\n\"Honestly? The outside of your home was the last thing on my mind, but I do understand. Mine's kind of the reverse. Yours looks incredible inside while mine...needs some TLC.\"\n\n\"Well, one of these days maybe you'll meet someone new to give you a hand with that,\" Abby said with a smile as she looked away as soon as she said it.\n\nNeil politely and quietly laughed then told her she might meet the handyman of her dreams, too.\n\nAbby surprised herself again when she said, \"The truth is I'd feel very fortunate just to meet someone who'd love me and my son the way Terry loved us. I know it could never be the same, but something close to that would be...\"\n\nNeil smiled and, also to her surprise, said, \"Nice?\"\n\nAbby laughed then decided to fess up and share the inside joke from the other evening. Neil laughed genuinely this time, and when he did, Abby relaxed and forgot about the age difference. At least for the time being.\n\n\"We have a few minutes. Did you want to maybe sit and talk for a bit?\" \n\n\"I would,\" Neil told her.\n\n\"Is it okay if I ask you what you do, Neil?\"\n\n\"Sure. I'm an HVAC tech. I work on, maintain, and repair heating and air conditioning units.\"\n\nAbby smiled then said, \"Gee. What a coincidence! My furnace has been acting up lately.\"\n\n\"Let me take a look at it,\" Neil said immediately and started to get up.\n\n\"No. I was only kidding. Well, it has been acting up, but I'd never ask you to do that.\"\n\n\"But now I insist,\" Neil told her with a smile as he actually did stand up. \"And while you show me where it is, you can tell me what you do.\"\n\nFeeling both guilty and grateful, Abby thanked him, told him she didn't expect anything for free, then let him know she was a registered nurse. Neil asked her if she worked in a hospital, and Abby explained how she'd done that for many years before moving back to Omaha.\n\n\"Gosh, I'm sorry. Your husband and your father.\"\n\n\"Dad's passing was so unexpected,\" she told him once she turned on the basement light before following him downstairs.\n\nNeil asked about her mom on the way down, and Abby told him about the farm and how tough and dedicated her mother was.\n\n\"She sounds like a very strong woman,\" he said as he approached the old unit.\n\n\"This thing has been in here forever,\" Abby commented when she saw him looking at it.\n\n\"That's the bad news. The good news is this model is fairly simple and usually easy to work on. Most of the time it's one of two things, and I should be able to tell which one here in just a minute or so.\"\n\nThere was a high-pitched sound that Neil heard before he got to the furnace, and that told him it was almost certainly a blower belt problem. Abby had a screwdriver handy and a few seconds later, Neil had the one plate he needed to remove set to the side. \n\n\"Yep. It's this belt. You're going to need a new one. It's a very easy fix, the belt is cheap, and I'll put it on for you, so it won't cost you anything for labor.\"\n\n\"Neil, you can't expect me not to pay you,\" Abby told him.\n\nHe turned toward her, smiled, then said, \"And you can't possibly expect me to let you pay me.\"\n\n\"Are you sure?\" she asked.\n\n\"Positive. It won't take me five minutes to stop the squeal and the problems you've been having will go away until we can get a new belt. But I'll check everything else when I come back just to be sure.\"\n\n\"Neil! That's too much,\" Abby protested.\n\nHe smiled at her again then said, \"I'm kind of hoping to impress the owner, but please don't tell her that, okay?\"\n\nThis time, Abby didn't get goosebumps. Her entire body tingled as she realized this handsome, younger man was flirting with her.\n\n\"I...I promise I won't say a word, but I can assure you she'll be very grateful.\"\n\n\"And I'll be very happy if helping her out just gets me one single smile.\"\n\n\"Oh. I...I'm sure she could arrange that.\"\n\nAbby felt 16 again, but she also felt...happy. She was still very cautious and maybe even a little paranoid about getting involved with anyone, let alone a guy Neil's age, but just the way he looked at her made her weak in the knees.\n\nHe put the panel back on then told Abby they were out of time and needed to get going.\n\n\"Oh, right. I'm sorry for ruining our chance to get better acquainted.\"\n\nNeil set the screwdriver back on the bench where Abby kept it, then said, \"You've done no such thing. In fact, I think I learned more about you down here than I could have sitting upstairs and talking.\"\n\n\"I hope it wasn't anything bad,\" she told him, worried about him thinking she was a mooch.\n\n\"Nope. Just the opposite,\" he replied with a smile before motioning toward the stairs but not telling her she'd made an even more positive impression on him by virtue of her concern about not 'freeloading'.\n\nHe didn't ask for much in a relationship, but one thing that drove him crazy was a woman who seemed to expect everything without showing any appreciation. Misty had always been so grateful for everything, and no matter how small the gesture, she made sure to let her husband know she appreciated it, even if it was just a quick note on a yellow sticky telling her how much he loved her.\n\n\"I'll go get the boys,\" Abby told him once they were back upstairs. \"Unless you'd like to come see Trevor's room.\"\n\n\"I'd love to!\" Neil told her, mostly so he could stay close to her. \n\nAs she walked ahead of him, he couldn't help but notice how tight her waist was, and the way she filled out the pants she was wearing. He wasn't a 'butt guy', but he couldn't help but notice hers. He was, however, a boob guy, and he'd already notice what some called the 'sweater puppets' that moved as she walked. Between all that and her kind, caring ways, Neil was more than interested. He was definitely interested, but the better word for how he felt was 'intrigued'.\n\n\"Okay, boys! Time to go!\" Abby said once they got to the back of the house.\n\n\"Come on, Tyler!\" Trevor said, as neither boy even noticed the adults again.\n\nThey zipped right by them causing Neil to smile and Abby to laugh.\n\n\"I love seeing Trevor so happy. Tyler is a really good influence on him.\"\n\n\"Maybe they should spend a lot more time together,\" Neil said as he stood less than a foot away from the beautiful, older woman who looked down when their eyes met.\n\nAbby felt her heart race and then, when Neil gently put his hand in the small of her back to let her go first, she felt that same delicious tingling. The touching only lasted a second or two, but it was the most amazing thing Abby'd felt in so long she couldn't remember.\n\nThey made small talk on the way to the museum as the boys yammered away without a break. Both parents smiled often due to the boys' interaction, and just as often to let the other know they were enjoying their company.\n\nWhile the boys had a nice time looking around, it was for very different reasons than their parents who admired each room in detail while their kids found other things that caught their attention.\n\n\"Neil. Look!\" Abby said in the very first room.\n\nHe stood next to her to look at what she was pointing out, and while he tried to look, the scent of her perfume was so distracting he found it impossible.\n\n\"Very nice,\" he replied as Abby walked the room's perimeter pointing out this or that.\n\nAt one point, after maybe a dozen or so rooms, Neil found something that caught his eye first. When he mentioned it, he moved his hand her way, and to his surprise, it brushed up against hers. Abby assumed he was trying to take it, and even though he wasn't, she offered it. Neil realized what was happening and took it as he asked her what she thought.\n\n\"It's very...nice,\" she replied, waiting for him to look at her.\n\nHe remembered and smiled at her. He not only smiled, he turned her way and when he did, she looked at him as if to say, \"What's going on?\"\n\n\"You are so beautiful,\" Neil quietly told her as he looked into her eyes.\n\nThis time Abby didn't look away. She looked back into his and did her best to 'peer inside them'. What she 'saw' told her he was being sincere, and she smiled at him and thanked him. Her heart began racing again as he started leaning in, but just like in the movies, the voices of two young boys stopped them.\n\n\"Mom! You gotta come look!\" Trevor said, unaware that his mother was on the verge of kissing his friend's father.\n\n\"Oh, okay. Let's go see!\" she said with an apologetic smile to Neil who winked understandingly and asked what was so exciting.\n\nThe boys had found the home movie theater that was as large as some small, private theaters.\n\n\"Wow! This is amazing!\" Neil said as he walked in still holding Abby's hand.\n\n\"Very...nice!\" she said with a laugh as she squeezed Neil's hand.\n\n\"Can we watch a movie?\" Trevor asked, his eyes open wide in hopeful anticipation.\n\n\"I don't think they're showing any movies here tonight, honey,\" his mom told him.\n\nHis disappointment lasted less than a second as Tyler said, \"Trevor! Come on!\" and off they went.\n\nTheir parents laughed, but this time, when they stood face to face, Neil said, \"We were interrupted a minute or so ago.\"\n\n\"Oh, yes. Yes, we were,\" Abby agreed as they continued looking at one another.\n\nThere was no one else in the room as Neil moved closer, smiled at her, then softly kissed her for the first time. The soft, slow kiss lasted two or three seconds, and when it ended, Abby couldn't help but tell Neil the kiss was very...nice.\n\nHe laughed, too, but agreed.\n\n\"Yes. Very nice.\"\n\nAbby hooked her arm in his as they tried to catch up with the boys who somehow managed to remember not to run. But they were walking very fast, and they'd already seen the entire house by the time the adults got to the 15th room.\n\nNeither boy noticed the budding romance until they got back to the entrance of the museum when Tyler saw his dad holding hands with Trevor's mom. His dad caught his eye and wondered what his son was thinking. The smile on his boy's face told him everything he needed to know. When he elbowed Trevor to tell him what was going on, Abby watched her son's reaction just as closely.\n\n\"Mom! Do you like Tyler's dad?\" he asked with a sense of excitement.\n\nAbby looked at Neil who smiled at her before she said, \"I think maybe I do. Is that okay?\"\n\nHer son smiled even wider as he moved closer and hugged his mom.\n\n\"I believe that's a 'yes',\" Abby said as she hugged him back and smiled at Neil.\n\nOutside, the boys made their mom and dad laugh when Tyler said, \"Hey, you and I could be brothers!\"\n\n\"How?\" Trevor asked.\n\n\"If my dad marries your mom, you'll be my brother.\"\n\nTrevor's eyes got big just before he said, \"Awesome!\" as Neil opened the back door to let them climb inside.\n\nAs he opened Abby's door, she said, \"They're very optimistic, aren't they?\"\n\nNeil smiled at her then said, \"Maybe. But I like the way they think.\"\n\nThat tingle hit again as Abby laughed a genuine, happy laugh before getting in.\n\nThe grownups didn't say much at first, and that caused Neil to ask if everything was okay.\n\n\"Yes. I had a wonderful time,\" Abby assured him.\n\n\"You seem a little...distracted.\"\n\n\"Sorry. I'm just wondering how I'm going to explain all of this to Paul and Amanda.\"\n\n\"Explain?\" Neil asked.\n\n\"Yes. They're both, well, very happy for me, and I know they're going to want...details.\"\n\n\"Oh. I see.\"\n\n\"And I'm...I'm not sure what to tell them.\"\n\n\"My parents will be wanting information, too.\"\n\n\"Oh, right. Do they know about me?\" Abby asked.\n\n\"Oh, yes,\" a smiling Neil told her.\n\n\"Did you tell them I'm...\"\n\nBefore she could say 'older', Neil pretended to be serious and said, \"Nice?\"\n\nThe unexpected humor made her laugh and released some of the growing tension she was feeling.\n\n\"Do they know?\" she asked, needing to know herself.\n\n\"Yes and no. I mentioned you were older than me. I just didn't bother mentioning the exact age.\"\n\nNeil glanced her way then said, \"Which I still don't know. Exactly.\"\n\n\"I'm...\"\n\nNeil tried not to laugh when Abby looked toward the back seat then whispered her answer.\n\n\"I'm...43.\"\n\nWhen Neil only nodded, Abby wasn't sure what to think or how she felt. Until he spoke.\n\n\"No. You're not 43. You're...beautiful. And amazing.\"\n\nNow it was Neil who wasn't sure what was going on when Abby looked down.\n\n\"Did I say something wrong?\" he quietly asked.\n\n\"No. It...it was perfect.\"\n\n\"Then what is it?\"\n\nAbby looked up at him then tried to explain.\n\n\"You've experienced the same loss as me. I don't want to sound melodramatic, but a part of me died when I lost my husband.\"\n\n\"You're worried you'll be hurt like that again.\"\n\n\"Can you understand that?\" Abby asked, the sadness in her voice coming through.\n\n\"I can. And while no one knows how long they have on this life, I can promise you I'll never hurt you like that, Abby.\"\n\n\"We really just met and here I am talking like we're in a relationship or something,\" she said as she tried to smile.\n\n\"Would that be so terrible?\" Neil asked as he reached for her hand.\n\nAbby let him take it then, without thinking, said, \"We have dinner with my brother and Amanda every Sunday. Would you possibly like to join us?\"\n\n\"Very much,\" Neil told her. \"But are you sure you want us there? As you said, we really did kind of just meet.\"\n\n\"Well, if we are going to be in a relationship, maybe we should try doing something couples do,\" Abby suggested as she glanced his way.\n\nNeil smiled then said, \"Tyler? You wanna have dinner with Trevor and his aunt and uncle tomorrow?\"\n\n\"Really?\" his son replied, saying his first word to anyone other than Trevor since they got in the car.\n\n\"Yes. Really.\"\n\n\"That would be so cool!\" Trevor said as the boys went back to talking about boy stuff.\n\n\"I think that's a 'yes',\" Neil told Abby.\n\n\"I'm glad,\" she quietly replied. \"And I'm really glad we both just happened to be at the escape room at the same time.\"\n\n\"Me, too,\" Neil told her as he gently squeezed her hand causing one more wave of pleasure to wash over Abby's body.\n\nAbby let Neil walk her to the door but didn't invite him back in. She wanted to, but felt like there would time for that later if anything ever came from this, whatever 'this' might be.\n\nShe got inside then grabbed her phone.\n\n\"Manda? Hi. Listen, would it be okay if I brought someone with me tomorrow?\"\n\nShe heard her sister-in-law laugh then ask, \"Isn't his name Neil?\"\n\n\"I...I don't know why I didn't just say that,\" Abby admitted, feeling a little silly.\n\n\"And is it just one 'someone' or two?\" Amanda asked.\n\n\"Definitely two. Trevor is so excited about having Tyler come with us. If it's okay.\"\n\n\"Okay? Are you kidding? Of course it's okay. Paul will be thrilled to have another guy to talk with, and since you said he's...hot...I don't think I'll mind, um, seeing him...either.\"\n\n\"You're shameless!\" Abby teased, a big smile on her face as a wave or relief washed over her. She was sure it would be okay, but knowing it was made her feel even better. And she was now feeling very good.\n\n\"So did you guys have fun?\" Amanda asked.\n\n\"We did. It was really...\"\n\nAbby heard Amanda laugh again then say, \"Nice?\"\n\nAbby laughed, too, then told Amanda she'd shared the 'nice' thing with Neil.\n\n\"The 'nice' thing aside, I'm so happy you had fun, and I'm really looking forward to meeting both of your new guys.\"\n\nAbby bit her lower lip then said, \"Thank you for not saying...'boys'.\"\n\nAmanda laughed even harder before almost saying 'goodnight'. She hesitated and Abby asked what was wrong.\n\n\"Is it okay if I ask one more question?\"\n\n\"Of course.\"\n\n\"Did you guys...kiss?\"\n\nAmanda could 'hear' Abby smiling and knew the answer.\n\n\"You did, didn't you?\"\n\n\"Maybe,\" a rather coy Abby replied.\n\n\"You...you cougar, you!\" Amanda said as she laughed right after Abby did.\n\n\"Satisfied?\" Abby asked as though she were offended.\n\n\"For now. But there will be more questions,\" Amanda warned.\n\n\"Bye, Manda.\"\n\n\"Bye, Abs. Love you!\"\n\n\"Love you, back!\"\n\nAbby was so happy she felt like her entire body was tingling. She wanted to talk to Neil, but opted for a quick text instead.\n\n\"Hi, Neil. I just called my sister-in-law in she said she'd love to have you and Tyler come over. And I wanted to let you know I had a really wonderful time tonight, the first one in a very long time. No. That's not true. I recently had one with someone I met at an escape room, too!\"\n\nNeil saw it and smiled.\n\n\"He sounds like a really...nice...guy.\"\n\nHe added a smiley face then continued.\n\n\"I had a great time, too, Abby. And it's been much too long since that happened to me, either. Well, I have to admit that I also had a really good time on Wednesday when I met this incredible, beautiful woman. And what are the odds? I met her at an escape room, too!\"\n\n\"She sounds like a very lucky girl.\"\n\n\"I don't know about that, but I feel like the luckiest guy on earth.\"\n\n\"You made me smile. Again.\"\n\n\"Same here. What time should I pick you guys up tomorrow?\"\n\nAbby let him know when and told him how much she was looking forward to it.\n\n\"Me, too. See you then!\"\n\nBoth Trevor and Tyler drove their respective parent crazy again asking when they could see their friend, and after the third or fourth time of telling them when, they gave up and just said, \"Soon.\"\n\nAbby had never worn a dress to have dinner at Paul's house before, but she nearly did that before telling herself it was over the top. She also knew her brother would razz her for doing that and make a big deal about it in front of Neil. So as she looked through her things, she sighed loudly when her choices came down to a blouse, a sweatshirt, or another sweater. \n\nIn the end she choose a pink blouse with a black cardigan sweater and instead of black pants which Neil had already seen, she wore a pair of jeans. Jeans that fit quite nicely as she briefly admired her bum in the mirror as she turned sideways. \n\n\"All those months of feeling to sad to eat may finally be paying off,\" she said out loud, making herself laugh.\n\nHer hair was still up in rollers, and she needed to do her makeup, but at least she knew what she was wearing.\n\nNeil threw on another pair of jeans and dark-green button down shirt, pulled on a brown leather jacket, and was ready to go in five minutes after getting out the shower and just minutes before it was time to leave.\n\n\"Finally!\" Tyler said when his dad told him to grab his coat and get in the car.\n\nNeil tried paying attention as his son went on and on about Trevor and the fun they'd had since the escape room, but all he could manage in response was something like, 'huh' or 'oh, that's nice'. He loved his son more than anything, but Abby was the first and only woman he'd met since losing Misty that he couldn't get off his mind.\n\n\"We're not staying, so please don't go run off to Trevor's room, okay?\" his dad warned Tyler as they walked up to Abby's front door.\n\nHer hair and makeup were done, and when Neil saw her, he shook his head and said, \"Wow.\"\n\nShe didn't think her outfit was anything close to 'wow', but hearing Neil say it made her feel wonderful even though it was more her pretty face and hair.\n\nTrevor was right beside her, and Neil was sure his mom had told him to be ready, too, and a few seconds later they were in the car and on their way.\n\n\"So is there anything I should know before I meet your brother and sister-in-law?\" Neil asked as soon as they were on the road.\n\n\"Paul's a big kidder, so don't take him too seriously. He has a huge heart, and he's been a lifesaver for us since...\"",
        "Trevor was in another world with Tyler as his mom quietly mentioned his father's name and passing.\n\n\"You're very lucky to have him,\" Neil replied with a smile.\n\n\"I agree. And Amanda is like the sister I never had.\"\n\nThey talked about their families the rest of the way, and although it shouldn't have bothered her, Abby felt...cheated...when Neil didn't kiss her hello or even take her hand during the drive. It was silly, but as she looked over at him, she realized she really liked this handsome, younger man; a man she really still barely knew. \n\nWhat Abby didn't know was that Neil was very concerned about making a good impression on her family, and he was preoccupied with reminding himself to smile, take any kidding in stride, and try and win them over. Even so, he couldn't stop thinking that they would look at him and decide he was much too young for Abby, and his worst fear was that becoming some kind of focal point that would ruin the evening.\n\nBut from the moment he walked inside, nothing could have been further from the truth. Paul met him, shook his hand, and warmly welcomed him into their home. Amanda hugged him, and as he let go, Paul asked him who the little Neil was.\n\nAs he introduced his son, he heard Amanda say, \"When you said Neil was handsome, you weren't kidding!\"\n\nAbby knew Neil heard it, and when he only glanced over and smiled at her, she felt like this was going to be a very pleasant... What? Get together? First date? Second date? Whatever it was, she had that happy, pleasant feeling again and forgot all about the non-kiss and no hand holding.\n\n\"I hear you're some kind of Albert Einstein,\" Paul said to Tyler as he bent down to shake the boy's hand.\n\n\"I prefer Stephen Hawking to Albert Einstein, but both of them were really smart, too,\" the boy replied, causing everyone's eyes to open wide as they suppressed the urge to laugh.\n\n\"Well, black holes are a lot cooler than boring old general relativity, right?\" Paul said very seriously.\n\n\"Exactly!\" Tyler said as his father just shrugged. \"But you can't actually see black holes.\"\n\nThat was too much, and Paul chuckled as Amanda took Neil's jacket as the adults all went to the family room to talk. Dinner was in the oven and nearly ready.\n\n\"You were a Marine?\" Paul asked after Neil explained how he ended up doing HVAC work.\n\n\"I'd have stayed for a career if, you know...\"\n\n\"Neil, we are SO sorry for your loss,\" Amanda told him very sincerely.\n\nThere was a moment or two of quiet before Paul said, \"So what did my sister tell you about me?\"\n\nAbby gave him a horrified look, but Paul told her it was a legitimate question.\n\n\"She said you like to kid around.\"\n\n\"That's accurate,\" Paul replied with a faux kind of smugness. \"I mean, someone has to make up for my overly serious sister.\"\n\nAbby gave him another 'what are you doing' look that made Paul laugh before Neil spoke.\n\n\"You know, I haven't dated much at all, but the few times I have gone out with other woman, I went away each time thinking they were all so...silly. Or maybe just...non-serious.\"\n\nWhen no one said anything, Neil looked at Abby, who was sitting next to him, and said, \"That's not the case with Abby. In fact, her...seriousness... if you want to call it that, is one of many things I really like about her.\"\n\nAbby's smile told him that was a home run, and Paul only said, \"Well, alrighty then!\" before asking Neil if he'd like a beer.\n\nAgain, he glanced at Abby who said, \"Or maybe a glass of wine? I think I'd like one.\"\n\n\"In that case, a beer sounds great!\"\n\nFor the next half hour, they talked about quite a few things. Some were trivial. A couple were serious, but all of it was very pleasant. And as much as Abby was enjoying the conversation, she was thrilled when Neil took her hand as they walked to the dinner table when Amanda told them it was ready.\n\n\"I really like your family,\" he whispered as they walked.\n\n\"They really like you,\" she told him. \"And...so do I.\"\n\nThey were behind Paul, so Neil thought the coast was clear and leaned over and kissed Abby. It was a short, soft kiss, and just as it ended, the sound of young boys making sucking sounds of surprise filled the room.\n\n\"Your dad just kissed my mom!\" Trevor said.\n\n\"I told you they were in love!\" Tyler announced authoritatively.\n\nThat caused Paul to turn around and ask what he'd missed.\n\n\"Nothing! Keep walking!\" his sister told him as she squeezed her new boyfriend's hand as he smiled at her.\n\n\"Abby told me you were an excellent cook, but this was really, really good!\" Neil said after sampling a little of everything on his plate a few minutes later.\n\n\"Why do you think I married her?\" Paul quipped. \"For her looks?\"\n\nAmanda elbowed him hard enough that it made him wince, and that made Abby laugh.\n\n\"You're not exactly Matthew McConaughey,\" his wife quipped back, using her favorite 50-year old actor/hunk who was still 30 to her, against him.\n\n\"I'm...close, though, right?\" Paul said as though his feelings were hurt.\n\n\"Sorry, honey. No one's really close to Matthew,\" Amanda told him before taking a bite of the mashed potatoes and gravy on her plate.\n\nShe finished chewing then said, \"But I do believe Abby's found herself someone who's definitely in the ballpark.\"\n\nNeil's surprised look made Paul laugh before Abby assured him that was high praise.\n\n\"Oh. Well, in that case...thank you!\" Neil told her.\n\n\"It's true,\" Abby said. \"For the life of me, I have no idea what he sees in me.\"\n\nNeil set his fork down, turned a little towards Abby then looked at Paul and Amanda.\n\n\"She's fishing for a compliment, isn't she?\"\n\n\"What? I am not!\" Abby replied defensively as Paul and Amanda laughed.\n\n\"You have to be,\" Neil told her. \n\nHe then turned to the other adults and said, \"It's always the most beautiful women who don't realize how attractive they really are.\"\n\n\"I've known that since I met her,\" Amanda said. \"In fact, she's the prettiest woman I know, and I know a lot of women.\"\n\n\"Okay, okay. That's enough!\" a mildly embarrassed Abby told them all.\n\nBut Neil wasn't done. He put his hand on hers, looked right at her and said, \"You're also the most beautiful woman I know.\"\n\nAbby's heart was pounding as she looked into his eyes and saw the sincerity to back up his words.\n\n\"Would you...like some dessert?\" she asked Neil to try and play down the rosy glow that was filling her cheeks.\n\n\"Yes. Definitely,\" he said as Amanda asked if he'd like apple pie with ice cream or chocolate cake.\n\nBefore Neil could answer, the boys both said, \"Chocolate cake. With ice cream!\"\n\nBecause the boys had school the next day, they needed to get home and get ready, so at eight o'clock, Neil and Abby said their goodbyes.\n\nPaul and Neil were shaking hands when the latter again overhead Amanda talking to Abby.\n\n\"I think he's wonderful!\"\n\nEven better was Abby's quiet reply.\n\n\"Me, too.\"\n\nNeil gave Amanda a hug, thanked her for a wonderful evening just before Tyler did the same.\n\n\"Both of you are welcome here anytime, okay?\" she said to Tyler while looking at his father and his girlfriend.\n\nOnce they were all outside, Paul put his arm around his wife and said, \"I had my reservations because of the age difference, but as far as I'm concerned, Neil's good to go.\"\n\n\"I thought Abby might have lost her mind, but after seeing them together, I've changed my mind, too.\"\n\n\"My sister hasn't looked that happy since before Terry found out about the cancer.\"\n\n\"I agree,\" Amanda told him before telling her husband how happy she was.\n\n\"Does this mean you think I'm in Matthew McConaughey's league?\" he replied with a smile.\n\n\"Ha! Dream on. But I don't love him. I love you. So why don't we go to bed a little early and let me show you how much, okay?\"\n\n\"Well...okay!\" Paul said as he took her hand and let her show him.\n\nOn the ride home, Abby was very quiet.\n\n\"You okay?\" Neil asked.\n\n\"Oh. Sure,\" she told him with a weak little smile.\n\n\"No you're not,\" Neil replied. \"Talk to me.\"\n\nHe saw Abby looking into her lap for a few moments before answering.\n\n\"I can't shake this feeling that you...that you can't really feel this way about me.\"\n\nShe turned to look at Neil then said, \"That you really believe everything you said. And I feel horrible for feeling this way because you've given me every reason to trust you.\"\n\nNeil felt he understood what was going on and reached for her hand.\n\n\"You're worried about our difference in age. You think I'll suddenly wake up and realize you're older than me and stop lov...caring about you.\"\n\nAbby's heart swelled as she heard his words, but her brain still hadn't internalized them.\n\n\"After losing Misty, I was so torn apart and so angry at the world I never thought I'd be happy again. And those few dates I went on only served to reinforce those feelings. \"\n\nHe looked over at her, smiled, then said, \"And then I met you. A beautiful, loving, caring woman who's intelligent, a great mom, and...and I...I fell for her. Hard.\"\n\nIt was dark inside the car, but Neil saw the reflection of light from the tear that fell down Abby's cheek.\n\n\"Abby? I've never met anyone like you. And I know we only just recently met, but I'm in this for the long haul. And I'll be right here for as long as you'll have me.\"\n\nAbby's spirits soared, and she lightheartedly said, \"You might get tired of sitting in the car that long.\"\n\nHer attempt at humor was so lame it made Neil laugh louder than he ever had in front of her before.\n\n\"What's so funny, Daddy?\" Tyler asked, suddenly aware of the adults.\n\n\"Abby made me laugh.\"\n\nHe looked at her then said, \"And she makes me very happy.\"\n\n\"Oh, okay,\" his son said before going back to his video-game conversation with Trevor.\n\n\"So...we like each other. Our boys like each other. What's next?\" Abby asked with a warm, happy smile.\n\n\"The rest of our lives?\" Neil replied as he squeezed her hand.\n\nAbby smiled again then said, \"Okay. I'm in!\"\n\nThe following weekend, a very nervous Abby met Neil's family for the first time. They'd been 'warned' she was a 'little' older, but they didn't know her age. His parents assumed she was about 35 or so and never asked. At least not that night.\n\nThe weekend after that, Amanda happily agreed to keep the boys on a Saturday night so that her sister-in-law and younger boyfriend could be 'alone' for the first time. Of course, Paul was just as happy to have two other 'men' in the house, and he played like with them like he was their age most of the time they were there.\n\nThe romance between them had been blooming and growing, but it was that first night together that caused it to explode. The lovemaking itself was amazing, but it was the closeness of being alone together and sharing intimate thoughts that bound them together.\n\nThe two of them, or more aptly, the four of them, made it a point to spend as much time together as work would allow from then on, and they alternated going to each other's place every other day. Once they boys were used to the routine, the parents individually asked their sons if they'd mind if they spent the night.\n\nBoth boys were beyond excited and had no idea what the real motivation was for the 'sleepovers', but they soon became the norm.\n\nAfter doing the ping pong thing for nearly three months, Abby told Neil one morning as they lay in bed together, \"This back and forth business is getting old.\"\n\nNeil went to respond, but Abby put a finger on his lips and said, \"Don't you dare say one word about 'old'.\"\n\nNeil laughed, kissed her, then told her he agreed.\n\n\"So how might we resolve this?\" he asked.\n\n\"Well, I was thinking we might want to, you know, move in together.\"\n\n\"Oh, okay. I like the way you think,\" Neil replied as though he'd never even considered that.\n\n\"School's out in another month, and the boys could help us move,\" Abby offered.\n\nNeil looked at her in a way that made her say, \"What? Why are you looking at me like that?\"\n\nHe smiled then said, \"You've heard the saying, right?\"\n\n\"What saying?\"\n\n\"One boy, a whole boy. Two boys, half a boy. Three boys, no boy at all.\"\n\nAbby made a spurting noise before laughing.\n\n\"No, I haven't heard that one, but I do get it. Okay, maybe they wouldn't be all that much help.\"\n\n\"But it would be another experience they'd never forget, so if we keep a close eye on them...\"\n\n\"And only give them tasks they can easily complete...\"\n\n\"It might be a lot of fun.\"\n\nAbby was so happy the words just came out.\n\n\"I love you so much!\"\n\nHer eyes opened wide as soon as she realized what she'd said, but Neil only smiled and told her he loved her, too.\n\n\"I've loved you since we hugged at the escape room.\"\n\n\"You said you thought you'd never be happy again. I'd given up. I was 43 and I had a son. It seemed like I'd never meet anyone who'd love us both.\"\n\nShe smiled then used Neil's words.\n\n\"And then I met you. A wonderful man with a son he loves and who loves mine like his own.\"\n\n\"Dittoes...honey,\" Neil called, using that endearment for the first time.\n\n\"I don't think the boys are awake yet,\" she said with that look in her eyes.\n\n\"You have the best ideas, Abby!\" Neil told her as he rolled on top of her causing her to make a happy sound as she pulled him close and kissed him passionately.\n\n*****\n\nFirst Week of Summer Vacation\n\n\"Tyler? Can you put your toys in this box and your video games in this one?\" his dad asked as he set two cardboard crates on his bed.\n\n\"Okay, Daddy!\" he replied knowing why they were packing and moving. Abby had a larger, nicer home, and it made sense to move there.\n\nBy the end of that first day, Neil and Abby were worn out. The boys had helped, but mostly they played, and as long as they stayed out of the way, that was fine.\n\nAbby ordered pizza for them, and as they were sitting at the table eating, Neil asked Tyler to bring him the box on his bed. Tyler gave him a puzzled look, but went to his room and found one right where his father said it would be.\n\nIt was also a plain, cardboard box, and when Abby saw how big it was, her heart sank because she thought it might possibly be a smaller, black, white, or fuzzy blue box with a diamond ring in it.\n\n\"What's that?\" she asked when Tyler handed it to his dad.\n\nHe shook it and they all heard what sounded like another box rattling around inside. When he opened it, there was the second, smaller box which he also shook.\n\n\"This is like a Matryoshka Doll!\" Abby said as she took another bite.\n\nWhen Neil opened the fifth smaller box, Abby saw it and gasped. There it was. A small, fuzzy, blue box which, when Neil opened it, had a large diamond ring inside of it.\n\nAs he got down on one knee, Abby's entire tired body began shaking. Tears welled up in her eyes, and when Neil smiled at her and held the open box up to show her, she began crying.\n\n\"Why is my mom crying?\" Trevor asked.\n\n\"They're getting married!\" Tyler told him.\n\n\"Right now?\" his new 'brother' asked.\n\n\"No, this is called 'getting engaged',\" the budding Stephen Hawking replied.\n\n\"Abigail Stevens? We've said everything that needs to be said, but I want to tell you again how meeting you changed my life. How you gave meaning to it and how you brought from despair to happiness again. I love you with all my heart. I always will love you, and if you'll marry me, I'll be happy for the rest of my life, and do my best to make you happy, too.\"\n\n\"I will,\" she managed to say. \"And I'll love you as long as I live, Neil Silvan.\"\n\nNeil slid the ring on her finger, stood up, then bent down and kissed his fianc\u00e9. He sat down, but Abby couldn't let go of him and got up herself and sat down on his lap and just held him.\n\nWhen she kissed him in a way the boys had never seen, Trevor said, \"Eeeew!\" \n\nTyler, however, was just observing.\n\n\"That's what grownups who love each other do, Trevor,\" he told his best friend like he was an adult himself.\n\n\"It's still gross!\" Trevor said, causing his mother to finally come up for air because she had to laugh.\n\n\"My three beautiful young men,\" she said as she looked at Neil then Tyler, and then Trevor. \"I must be the luckiest woman on earth.\"\n\n\"But we're the luckiest boys!\" Trevor blurted out causing everyone else to laugh before he joined in.\n\nAbby was so happy she was on the verge of letting her emotions get away from her. She was holding it together until Tyler asked a question.\n\n\"Daddy? Is Abby my new mommy?\"\n\nShe was trying to finish a bite of pizza, but her throat choked up to the point she couldn't.\n\nNeil looked at Abby and saw tears start to fall.\n\n\"Tyler, you know your mother's in heaven, right?\"\n\n\"Uh-huh. But I can have a new mommy, right?\"\n\nThe look in Abby's eyes told him all he needed to know.\n\n\"Well, you'll only ever have one mother, buddy. A mother is the woman who gives birth to you. But a mom is the woman who raises you, who's there for you, and who loves you more than anything.\"\n\nHis very intelligent mind was working at full tilt, and in a few seconds he said, \"Oh, okay! So Abby won't be my mother, but she will be my mommy!\"\n\nHe looked at Abby then asked if that was true.\n\nShe couldn't even speak, but she could hold her arms out. When she did, Tyler ran over to her and hugged and said, \"I love you, Mommy!\"\n\nAbby pulled him close and managed to say, \"I love you, too, honey.\"\n\nTrevor's light came on then, too, and he asked if Neil was his new dad.\n\n\"I know you're not my father, but you are my dad now, right?\"\n\nNeil did the same thing only without the tears, a big smile on his face.\n\nTrevor hopped up in his new dad's lap and got the biggest hug he'd had in his life.\n\n\"Yes. Yes I am. And I'll always be your dad, buddy.\"\n\nHe looked over at his mother who was still hugging Tyler and said, \"Mom? I love our family.\"\n\nShe finally found her smile and told her...other son...\"So do I, honey. So do I.\"\n\nTyler lightened the mood when he spun around and said, \"Trevor. Guess what?\"\n\nTrevor waited for his younger friend to tell him the answer.\n\n\"You have a new dad. I have a new mom, and you and I are brothers now!\"\n\n\"Really?\" Trevor asked, looking at his mom and dad to be sure.\n\n\"Yes you are!\" they both said together as they hugged their boys again.\n\n\"Okay. Who wants more pizza?\" Neil asked.\n\nTwo small arms shot up in the air, but neither of them moved from the lap of their new parents, and that was just fine with everyone.\n\nAs Abby picked up her slice of pizza, Neil did, too, and said, \"To the escape room!\"\n\nAbby laughed and said, \"I'l...eat to that!\"\n\n*****\n\nFifteen years later, Tyler and Trevor Silvan both graduated from the US Air Force Academy in Colorado and spent five years serving their country. Their parents, and their little sister, Katie, who was 14, were sitting in the crowd watching them.\n\n\"Second Lieutenant Trevor Terrance Silvan.\"\n\n\"We did good, honey,\" Neil said to his wife, his right arm around her and his left around their daughter after they sat back down after cheering for their son.\n\n\"Yes, we did. Tyler changed Trevor. In the best way possible. I knew he had potential, but he just changed so much.\"\n\n\"A lot has changed since the escape room.\"\n\n\"Yes, it has,\" Abby Silvan agreed. \n\n\"But one thing has never changed.\"\n\n\"And what that might be?\" his still-beautiful wife asked.\n\n\"You're still as beautiful as the day I met you, and I love you even more now that I did then.\"\n\n\"If I didn't know you better, Neil Silvan, I'd say 'liar, liar pants on fire'.\"\n\n\"But you do know me, and you know it's true.\"\n\n\"Yes. Yes, I do. And I love you even more now than ever before, too.\"\n\nNeil went to kiss his wife just as they heard, \"Second Lieutenant Tyler James Silvan.\"\n\nThe kiss was forgotten as all three of them stood up and cheered again, a blended family that was happy, whole, and complete."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/escape-room"
}