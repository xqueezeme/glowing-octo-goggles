{
    "title": "Vision Ch. 05",
    "pages": [
        "Thank you everyone for the kind words and feedback!!\n\nThis has been a fun and educational process and I am already looking forward to spin off stories!!\n\n*****\n\nStretched out on Lulu's bed she's sleeping quietly, another lost day. We have to go back to reality at some point though. \n\nI want to talk to her, but every time I try to broach the subject of us she distracts me. I kiss her cheek and go out to the kitchen and root around and decide to make us some chicken salad with cashews and a good mixed green salad. I open some wine and go to wake her. Stretching like a cat she rolls over and smiles.\n\n\"Come on baby, time for dinner.\"\n\n\"You're always feeding me.\"\n\n\"Only for the basest of reasons, to keep your energy levels up so that I can molest you properly.\"\n\nBlinking slowly, her mouth tilts up in a slow smile. \"It's about time for molestation again, don't you think?\"\n\n\"I need food woman. Come on, out of bed. Don't pout. I promise to molest you after we eat, you sex addict.\"\n\n\"You started it Dax.\"\n\n\"You little monster. You are in need of serious correcting.\"\n\nThere's that 'oh really' look on her face, almost like she's daring me.\n\n\"Come on and eat and if you behave yourself there's cake left.\"\n\n\"Cake!\" She bounces out of bed.\n\n\"You have to eat your food first though.\"\n\nShe nods quickly and shimmies into a fresh pair of panties. I put my wife beater on her and take her to the kitchen. Hopping on a stool, she immediately digs in, closing her eyes in appreciation.\n\n\"This is really good, cashews in chicken salad, I would never have thought, and I taste Tarragon I think.\"\n\n\"I borrowed some from your greenhouse. Is that ok?\"\n\n\"It's perfect. You do know the way to a woman's heart.\"\n\n\"And to think I wasn't even aiming that high.\"\n\nShe throws back her head and laughs.\n\n\"Will there be enough left for lunch tomorrow?\" She asks.\n\nI laugh. \"Yes.\"\n\n\"Cool, but what are you going to eat?\" She asks looking at me with a deadpan expression.\n\nI laugh again.\n\n\"Why are you laughing? Did I tell a joke? I made an exception when we met but that was a one-off, I don't like to share food.\"\n\n\"Damn Woman! There's plenty for both of us you little glutton, unless you plan on eating the whole bowl.\"\n\n\"I might, this is delicious.\"\n\n\"How about we meet for lunch?\"\n\nShe stops and thinks about it. \"I usually work through - keeps me from having a lot of homework, but sure, we can meet, off-premises.\"\n\nOff-premises, doesn't sit well with me but I've pushed her a lot this weekend. \"Fine Lou.\"\n\n\"You call me Lou when you're upset with me.\" She says quietly.\n\n\"I wasn't aware. But I suppose I do.\"\n\n\"It's a good thing you remember my proper name, because you are NOT to call me Lulu at work, understand?\" She looks me directly in the eye.\n\nI look at her hard. \"I understand perfectly. But ain't nobody scared of you Lou.\"\n\nShe puts down her fork. \"You don't have to be scared Dax, just be careful.\"\n\nWe stand there daring each other. I relent first. Though what I'd like is to shake the shit out of her. I stand up, and start putting things away, including the cake. She looks at me and arches that eyebrow in challenge. It's only 8:30 but I've had it. I love her. But damn she's tiresome.\n\n\"It's time for bed.\"\n\n\"Fine then. You do that.\"\n\nHopping off the stool, she jiggles in all the right places. I want her and follow her down the hall. She goes past her bedroom to her office. I follow and taking her hand, bring her with me into the bathroom. She quietly looks at me.\n\nI strip off our clothes and bring her into the shower. I wash myself and taking her washcloth finish washing her thoroughly. I finish quickly and step out, bringing her with me, we're both still damp when I throw her on the bed, her eyes go really wide and she swallows. I pull her forward so that her butt is in my lap and her feet are planted together against my chest and I move into her tight wetness. She's fighting against it bravely, but I work at it.\n\nI laugh. \"You will come for me little girl.\"\n\nI work her nipples and clit until she does. But she's still looking angry as I turn her over and move around behind her and raise her ass in the air, smack her bottom and slowly have at her from behind, it's hard not to come, but by her breathing and tightening I can tell she's about to come again but is still fighting but as I smack her bottom again she does. She collapses on the bed and I follow her down and slip a pillow just under her stomach to angle her hips slightly upward continuing to slowly fuck her from behind slipping a hand underneath to rub her little button. Enjoyably inarticulate sounds come from her throat as she comes again clenching around me violently and shuddering. I slide out and turn her over. She's scrambling backwards to get away, but I mean to have her. With a firm grip on her ankle I drag her back down the bed. \"Dax!\" Ah yes, the delightfully frazzled sound of her voice.\n\n\"I want you to feel me every time you move tomorrow.\" Groaning, she looks at me in mild horror.\n\nWe lock eyes as I align her directly under me and slowly sink in scraping against her clit slowly at first and then faster and harder, until she's throwing herself against me, holding onto my shoulders with a painful grip, her head is turned to the side the veins standing out in her neck. She comes again loudly. I finally come, pressing her down into the mattress. She curls on her side away from me quiet and shivering. \n\nDiscarding the condom I gather her to me. Still shivering a little, she burrows in, putting her arms around me. We lie quietly for many moments.\n\n\"Dax, was that your version of angry sex?\"\n\n\"Maybe.\" I hold my breath.\n\nI feel her smiling against my chest. \"It was better than cake.\"\n\nI give her bottom a good pinch and she giggles and squeals slapping at my hands. \"Lulu, you are shameless. What the hell am I supposed to do with you?\"\n\n\"I have no advice to give, you need to square that circle for yourself.\" She shrugs, still smiling as she kisses me and falls asleep.\n\nI awaken in what is starting to be my favorite way: her using me as a body pillow my leg trapped between hers and her moist little sex on my thigh. \n\nI roll her to her back and look at her body in the moonlight coming through the window, such lovely gleaming skin, those small nipples which harden at the slightest touch, as muscular as she is she's got a bit of a jelly roll and I love it, besides you don't even see it between all the tits and ass, curves like space mountain. \n\nNosing into her lushly swollen little slit I sniff deeply seeking to saturate myself in the smell and taste of her. She moans but doesn't seem to wake up. But as I swirl suck and blow, she holds my head in place and pushes herself onto my tongue, she's panting as she comes.\n\n\"More,\" she whispers. I slide into her, amazed she's letting me do this after earlier, but if she wants me I will never deny her. She arches one shoulder off the bed and grinds against me. Her hands are sliding over my back to my waist, cupping and squeezing my ass and the back of my thighs. \n\nI'm trying to be gentle but her hips are picking up speed as she sucks at my neck before rubbing her cheek across my stubble, moaning and pulling my head down to her chest. I suck her sweet little buds and she pulls my head up and kisses me biting me gently she's moaning into my mouth and she's so tight and moving so fast, she comes and that's enough for me as I come right behind her. \n\nAs I slide out of her she's whispering something that sounds like a prayer or chant. I pull off the condom and cuddle her to me. She's got her cheek on my chest and her arms around me.\n\n\"Mmmm Dax.\"\n\nShe settles back down quietly. I'm not even sure she was totally awake for that. I smile and fall back to sleep.\n\n-\n\nThunderous banging at the front door. Lou sits up in bed and turns on the table lamp and runs a hand through her tight curls and rubs her eyes and neck trying to focus. I sit up and stretch as well.\n\n\"3 o'clock in the fucking morning. Someone's either dead or they're about to be.\"\n\nThe knocking starts again. Scooting out of bed she slips on a tank top and my boxers before leisurely walking over and taking a baseball bat from the corner. Balancing it lightly on her shoulder, she calmly leaves the room.\n\nWalking down the hall she yells, \"I'm coming goddamit!\"\n\n\"Harry, what the hell man? Do you know what time it is? Are you drunk? Fuck man! Come in and sit down before you fall down. God knows I can't lift your big ass.\"\n\nAfter a minute she comes back and picks up her cell phone. \"Uncle Jack, it's Lou, yeah, sorry it's so late, no it's not an emergency but Harry's here and his head is bad, you might want to bring back-up. Yes, see you in 10.\"\n\nShe sighs and points the bat at me.\n\n\"It'll probably get loud, but unless you hear the crashing of furniture I want you to stay in this room.\"\n\nPretty much a certainty as she's wearing my boxers and my jeans are in the living room. I've got clothes in the dryer but it'll require a walk down the hall.\n\n\"Harry, what's up?\"\n\n\"What's up!?\"\n\n\"Yeah, what's up? What can I do for you?\"\n\n\"You can tell me what happened. I have to hear from dad that you're seeing someone else. You should have heard him, 'yeah, little gristle found someone, you should have saw her blush when she introduced him, I think it's serious'. Yak Yak Yak. You don't even have the decency to tell me.\"\n\n\"We settled this. You got married Harry, for whatever reason. You explained it and I still don't fully understand it, marrying someone as a favor to a dead comrade so that they have benefits and coverage? It does not pass the smell test. Married for two years when you were supposed to be in love with me and I had to find out the hard way.\n\nYou should have found another way to help. Now, I've kept your secret from Uncle Jack and Aunt Arlene, which I'm fine with as I wouldn't want to hurt them, but it makes me complicit in your deceit, we are done.\"\n\n\"You don't want me Harry, not really. \"\n\n\"I always wanted you Lou, it was never a case of not wanting you.\"\n\n\"You want me? Really? You ignore me when I'm here and hound me when I'm gone. We do nothing but fight like cats and dogs and it's tiresome as hell. And you're still MARRIED! No. Some things can't be undone, Harry. \" \n\n\"You were always too busy for us. But him you immediately take off work for? Six months of what amounts to heavy petting, but him you meet and immediately screw. I warm you up and he gets to have you.\"\n\n\"Is that what this is about? I swear it'd almost be easier to just let you fuck me again and get it out of your system.\"\n\nI look around for something to wear and quickly wrap the sheet around my waist and walk quickly down the hall. I find my jeans and a t-shirt shirt in the dryer.\n\nThere's a long pause. \"You fucked him didn't you, when you didn't come home? You met some stranger in England and fucked him?\" \n\n\"I met someone I like. I really like him. I'm not sorry about it either. I don't like many people, you know this.\" \n\nShe takes a deep sigh. \"Look it's late, Uncle Jack is here, he's gonna drive you home, ok?\"\n\nLou, it is not supposed to end like this. We are Harry and Lulu.\n\nNot anymore Harry.\n\nHe leaves and all is quiet.\n\nI walk down to find her in the dining room quietly sitting, eyes luminous with unshed tears, she looks at me and shrugs and sighs. I take her hand and we go back to sleep. \n\n--\n\nThe alarm goes off at 7:05. Lulu rolls onto her back and pulls the covers over her head. \"No, not yet.\"\n\nI smile at her antics. \"Come on woman, get up!\"\n\nI drag her to her feet and we go in the bathroom together, she pees first and then I pee and flush the toilet, she starts the shower and brushes her teeth I take the other sink and brush mine too, we give each other toothpaste smiles.\n\nI spit and rinse. \"I've got bad news.\"\n\nShe looks at me. \"Already?\"\n\n\"I have to shave this off, I know you like it but I'm not ready for a beard in the office yet.\"\n\nShe scowls & huffs. \"Fine, but I don't see why not, I think I'd like to see a beard on you Mr.\"\n\n\"Really?\"\n\n\"I think they're sexy.\"\n\n\"I'll have to make sure you don't run off with Santa Claus or the Brawny man.\"\n\nShe looks at me and shakes her head. \"I must truly like you.\"\n\n\"Why?\"\n\n\"Because I'm a contact-lens wearer and am about to let you defile the sanctity of my sybaritic pleasure dome with those little furs of yours.\" She eyes my razor with apprehension and I smile at her.\n\n\"I'd like to defile you right now, and if you don't stop standing there being all naked and mouthy, I just might.\"\n\nShe blinks slowly at me. \"Really.\"\n\nI've been teasing her ass with my finger lately, and she doesn't seem to mind. It makes her squirm in the most delightful way.\n\n\"One day in the near future I mean to have every little bit of you Lulu.\" I watch her carefully as the statement sinks in.\n\nSeveral emotions cross her face before she gives me a doubtful look and shakes her head.\n\nI give her a quick kiss and smack her butt. \"Get in the shower.\"\n\nShe smiles and gets in. Quickly soaping herself she washes carefully, biting her lip a little as she washes her tender bits. \n\nI turn on the TV for the news and get my shave on, I glance over and see I'm not the only one shaving. Our bathroom routine is already very intimate. I like being at home with her. I hurriedly finish shaving and join her in the shower.\n\n\"Promise you'll let me shave those legs one day?\"\n\nShe shakes her head as she washes her hair she slicks a good amount of conditioner through before turning on all the showerheads rinsing off and leaving the shower. \n\nWrapped in a towel, she sits down and slathers lotion quickly all over, she's pretty expedient. After a critical look in the mirror she opens a cabinet and pulls out some mascara and lip-gloss and pinches her eyelids with something that looks like a torture device but turns out to be an eyelash curler. \n\nI come out and dry myself and put on deodorant and boxers and lean against the counter watching her needlessly gild the lily.\n\n\"What do you want for breakfast?\"\n\n\"Could you pop me an everything-bagel under the broiler for 1 minute and take out the smoked salmon and cream cheese? The Bagels are in the freezer. Thanks love.\"\n\nShe smiles and winks at me. Smiles and winks. I'm loving this. \n\nStarting the coffee I pop two bagels under the broiler and head into the laundry room and open that closet dryer contraption and put on my usual, button down and khakis. I pour myself a cup and listen to her morning sounds.\n\nShe's blow drying her hair. I come back to find her in simple brown cotton panties and bra, dabbing on a bit of perfume. She's put on brown pinstripe pants and there's a dark yellow shirt, laid on the bed. Fastening her watch, she grabs some socks and puts on reddish brown wingtips. She catches me watching.\n\n\"What?\"\n\n\"You straightened your hair again, I like it.\"\n\nShe looks at me sharply.\n\n\"Good grief woman! I love your natural hair too.\"\n\n\"Good answer. I like it like this but it will fall out if I do this to it every day, and I am so done with relaxers.\"\n\nWomen and their hair.\n\n\"Pants again?\"\n\nShe rolls her eyes. \"What is this pick on Lou day?\"\n\nShe goes down the hall, in her bra and slacks very sexy. That vision will get me through the day.\n\n\"Where's my breakfast Mr.?!\"\n\nI get the bagels and cream cheese and coffee and bring it over to the counter, its 8:05 and the office is 10 minutes away, we've got time to eat and relax a bit.\n\n\"I love these, got addicted to them in NY and have them shipped in once a month. Nothing like an everything bagel with a schmear and some coffee.\" She closes her eyes in bliss.\n\n\"As for the clothes, I'm a lawyer, I wear suits, goes with the job. I treat myself once a year and go abroad to have a few custom made. I would dearly love to see that lankily elegant body of yours in something bespoke, maybe Oswald Boateng. It would suit you I think.\"\n\nWith a body like hers, those well-tailored suits aren't as conservative she thinks.\n\nShe leans over and wipes some cream cheese from my mouth with her knuckle and sucks it.\n\n\"I can see you in New York, you'd love it I think. Have you been?\"\n\n\"Nope, not yet. I may have some business going on up that way soon though.\"\n\n\"Never been to New York? I've got a ton of vacation time; we should go. It's the closest you can come to living in a foreign country in the continental US.\"\n\n\"Where all have you been?\"\n\n\"Denmark, Australia, Brazil, Morocco, London, Spain, Paris, Hong Kong, Germany, Malta, Okinawa, England, Monaco/ Cannes, Singapore, Iceland, Puerto Rico, Brittany France - the best butter in the world, Norway, Italy, Argentina, Sweden. I like Spain best though, all the Moorish influenced architecture, the jamon & coffee. I really liked London too, but not as much as Spain. \n\nWhat I especially like about Europe overall is how they concentrate on living well daily, like it's their birthright. You know? The good food and fine china and nice clothes aren't just for special occasions. Every day is an occasion. Actually you kind of remind me of the Spaniards. You've got a laid-back, cultured yet open way about you. I really like that.\"\n\nI pause mid chew and just stare. I manage to swallow and clear my throat. \"I really like you too.\" Blushing to beat the band she hops off the stool and goes back down the hall to the bathroom, rinses her mouth and checks for seeds, I follow suit and we both give a little gargle with mouthwash.\n\n-\n\nI drive to my usual spot and she drives to hers. Also, as per usual, we enter at separate entrances and wait for the elevator as per usual. Unusual is me palming her ass in the elevator.\n\n\"Please remove your hand?\"\n\n\"This is mine now, and as long as we're alone I'm going to touch it.\"\n\nShe groans. \"There are cameras in this elevator Mr. Wilde.\"\n\n\"You've seen me naked, call me Dax. I have control over the security feed I can totally wipe this out, but I don't think anything looks amiss from this angle.\"\n\n\"That's abuse of power. Junie.\"\n\nI smack her bottom and she yelps but doesn't turn around to look at me.\n\n\"We're almost to the 15th floor remove your hand please.\"\n\n\"As soon as we're on the 15th floor yes, but until then, no.\" I'm running my finger on the back seam of her pants and as I go lower I can feel the heat of her through the material.\n\nShe groans. \"Damn these slow elevators.\"\n\nI lean down and whisper in her ear. \"You know you like it.\"\n\nShe shivers and her eyes close. \"Not the point.\"\n\n\"That is entirely the point Ms. James.\"\n\nI remove my hand just before the elevators open. She goes her way and I go mine.\n\nAfter checking email, I view the security feed to make sure nothing suspicious is there. It looks like we're just talking, except when she jumps and my whispering in her ear looks suspect, especially the way she closes her eyes. That looks a little pornographic. Hmmm . . . yes this will have to disappear.\n\nI text her - miss me yet\n\nNo.\n\nYes you do. How's your bottom?\n\nThat's none of your concern.\n\nI'm very concerned for your bottoms welfare, come down to the server room and let me check on it.\n\nSCANDALOUS! it's too early for that.\n\nIt's never too early and never too late.\n\nI'm busy. Did you put my lunch in the fridge?\n\nYes, mistress.\n\nI find your tone improved. Where are we meeting for lunch?\n\nMeet me at the park near the hospital.\n\nOK\n\nSee you @ 1 o'clock\n\nLooking forward to it\n\nIt's 1 o'clock before we know it and we are at the park in my truck looking at the ducks eating our sandwiches and sharing the last of the almond torte cake. We're sitting quietly looking out and it's gotten pleasantly tense. She's crossed her legs and is biting her lip. I can see her heart beating quickly in the hollow of her neck. I want to bury my face in her lap.",
        "\"I wish you were wearing a dress.\" \n\n\"Well, I like pants so you'll just have to work around it, it's not like you don't know how.\" She looks at me challengingly.\n\nMe sliding her across the seat, she pulling my shirt from my pants and sliding her hands feverishly over my chest and back, me pushing at her clothes kissing her neck, watching that heavy thick hair of hers come down slipping from the pins, she rubbing me over my pants and bringing me to the brink, me kissing her and unzipping her pants and slipping a finger inside her panties to find her hot wet and waiting. Her doing the same and having me stop her. Me rubbing softly but furiously until she comes. I love pleasing her. After several tender kisses, she finally pushes away and staggers back to her side of the truck.\n\n\"We can't do this again.\"\n\n\"And why not?\"\n\n\"Why not? I mean look at me. I'm a mess.\"\n\nShe is a mess, hair falling down, eyes glassy, shirt almost undone. I love it.\n\n\"You don't like lunching with me?\"\n\n\"I can't come back from lunch looking like this. Everyone will know what I've been up to.\"\n\n\"I think you look quite lovely right now.\"\n\nShe blushes furiously at the compliment. Wow. I go to kiss her again and she lets me get a few in before pulling back. Quite warm as I run the back of my finger along her cheek, neck and breast. A quick and stinging pop to the back of my hand.\n\n\"Stop it Dax!\"\n\n\"Ouch!\" I laugh. \"Fine, but you'll have to make this up to me later, I've got needs too you know.\"\n\nFinding a brush in her bag she attacks her hair, furiously cursing and struggling out the brush tangles. I take the brush from her turn her away from me before and slowly brush out her hair, gathering sections as gently as I can. Her breathing calms and after a few moments she relaxes. I hand the brush back.\n\n\"Thanks.\" She says quietly. She shifts around on the seat, scooping up the hairpins, sticking them in her mouth and holding them as she prepares to put up her hair.\n\n\"Leave it down.\"\n\n\"Dax, what did I just say? I can't go back to work like this.\"\n\n\"Please?\"\n\nLooking at me she softens. \"Fine, just this once.\" Digging in her bag I can hear her muttering under her breath. She's located her gloss and is about to apply it.\n\n\"Wait!\"\n\n\"What now?\" Sounding irritated she checks her watch. \"We've gotta get back.\"\n\nOne last slow kiss, with my hands in her hair. She's delightfully rattled at the end of it touching her lips and looking at me.\n\n-\n\nShe lost the argument on us walking in separate entrances and we're waiting for the elevator trying to ignore each other when Barbara from accounting walks up and does a double take.\n\n\"Oh Lou, I love your hair! It's so becoming.\"\n\nI inwardly shake my head, oh no.\n\nLou gives her a quick and chilly smile. \"Of course you do darlin', I look a little closer to yourself like this. But make no mistake the Anglicizing of African hair is no small or easy thing. But I thank you for your . . . compliment.\"\n\nPoor Barbara's mouth opens and shuts several times and she turns deep red. She gets off the elevator before reaching her floor.\n\n\"Did you have to do that to that little old lady? She was trying to pay you a compliment.\"\n\n\"Honey please, okay look, that was highhanded condescension in the guise of a back-handed compliment. This is the 21st century. I don't have to take that shit.\"\n\nI can't help but smile big at her.\n\n\"What the hell are you grinning about.\"\n\n\"You called me honey.\"\n\nShe rolls her eyes. \"Bye, Dax.\"\n\nWe reach our floor and she goes her way and I go mine.\n\n-\n\nI feel a twinge of guilt over that but it's very mild. But seriously I am wondering how long I can keep this up. I'd almost gotten lazy with grooming. I now have it down to a science but I hate shaving, waxing, plucking, combing, curling, etc.\n\nI like this whole companionship with sex on demand thing we've got going, but after all the travel I was really looking forward to just getting back to the basics - fresh face, deconstructed hair, comfy clothes (hello, sweats) and little to no makeup. \n\nNow I feel compelled to shave, wax and flat iron. Not to mention that I'll have to start going for waxing twice a month now lest he find me out for the hairy monster I really am. Especially as he's after me to wear dresses, something about unfettered access. \n\nA small price to pay for the boy next door, he's a freak. I don't know if he's taken a class or what but he's got a complete understanding of female anatomy. All the coming makes me feel like a cat in heat. The more I have the more I want. It's pretty bad. \n\nHe is not liking my stance on contact in the office. I avoid him as much as possible during the day. It'd be all over my face and around the office in a flash if I didn't and it would serve to undermine my authority. A woman quickly loses what little power and control she has once its determined she is indeed accessible to colleagues. As it is, June's caught me smiling at his texts and is looking at me like I've grown a third eye. \n\nIt's getting harder and harder to deny him just about anything he wants as he genuinely seems to love spending his days making mine. I do truly appreciate it when I am in need of something, anything from towing my sister's car to a toasted bagel - he does it. Especially the car towing - he didn't wait to be asked; he just handled it, doing what was needed, when needed. And he's so pleased and proud of himself afterwards too. \n\nMaybe there's something to marriage after all, though I know quite a few husbands who aren't nearly as attentive and adoring. I wonder if this is his natural state or merely the courtship phase? Because it's amazing in a science fiction sort of way to be cared for like this and he makes it seem as if it's effortless for him.\n\n-\n\nIt's a lot of fun. When we're not sexting we're sexing. Downstairs she's got exercise equipment a full set of weights, a heavy bag and a speed bag, and a treadmill all in the center of a vast basement.\n\nHell, it's a damned gym down there. \n\n\"Everything I need to keep my ass from sliding into perdition.\"\n\nHer schedule is always full. She works damned hard and goes out of her way not to bring work home too often and for the most part she succeeds. \n\nMonday is veg-in night, television and takeout and review of the weeks work. Tuesdays she visits her sister and nephew and brother. I visit my folks, and check on my place. Wednesday nights she either runs in the park or spars with her girlfriend Eddie. Eddie's 6'2 and has quite the reach. \n\nI'm starting to understand why she wasn't at all worried about sharing a room with me. She can handle herself. My baby is a lefty, a definite southpaw, but watch out for that right cross. After watching Lou get knocked on her ass twice I'm quickly banned, she claims I distract her. \n\nIn the main she says she prefers to sweat it out alone with a good run. Which is great, I'm able to get some coding done or catch a pickup game, or do some lifting in the basement. \n\nThursday nights we go out and walk around the older quarters of the city looking at the houses while a maid gives the house a thorough cleaning. Fridays though are usually spent at home fine tuning contracts and finishing paperwork. Some Saturday mornings are devoted to gardening and yard work but she usually has a small willing crew of high school girls come in to help her in exchange for goodies, vegetables and advice.\n\n-\n\nHe seems to like being so close to the office. It means he gets to sleep a little later in the morning and get to work early. Incredibly, him being here does not freak me out yet, even though he's all over me. When he's not doing office work, he's working on his mystery project, coding for hours at a time. Other than that he's all about the sex, feeding and massaging me. \n\nOur schedules mesh well and we quickly establish a routine. Work hard during the week, Friday-Sunday is a free for all, though at least one Saturday a month I work with meals on wheels. Weekends find us walking around looking for new places to eat or taking a stroll through the museum. \n\nAT a JCrew outlet sale one weekend he very patiently let me treat him like a Ken doll for 2 hours. Only drawing the line dropping at trow in the middle of the store to try on pants in a corner. The women were on a quest though and were not at all interested in being modest, myself included. \n\nRather than ogling all the flashing flesh he was looking at all of us like we'd lost our minds. He stopped me from stripping down to try on some pin-striped slacks. He let me pick out a few preppy shirts for him and funk it up a bit with nice jackets and ties. I show him how to tie a fancy Eldredge knot. He said it was impressive. But a bit much for everyday \n\nWe go salsa dancing one weekend and I'm pleasantly surprised to find he's got a few moves. \n\nThe fourth week however, is a little discouraging. \n\nI've got PMS and little things that I normally shrug off begin to really bother me. I am alternately irritable and horny as all get out. I know he's at a loss as to what the hell to do with me. He's usually infinitely patient but I am testing the boundaries.\n\nThe bitch of it is that I can clearly see what I'm doing and cannot stop myself. He's pestering me about my music; I'm listening to The Cure. He says it sounds more like a disease. \n\nHe uses my bidet as a urinal while I'm on the toilet, really though he's got a point, it all goes to the same place.\n\nThose shaving hairs of his are all over the place. As a contact lens wearer I'm not feeling that and I let him know it. Eventually he kisses me goodbye saying \"I love you, but really\" and goes home. I'm relieved for all of 3 hours. My night alone is not peaceful. \n\nAlready I can't find rest without him. Amazingly, when I apologize to him the next day over lunch, he's more than willing to come back. My period finally comes and while the mood swings stop it makes me a sluggish and tired. He makes me soup and serenades me by guitar while I bathe.\n\nOh can't you see, you belong to me, how my poor heart aches, with every breath you take.\n\nOf course you know that song.\n\nI'll be watching you.\n\nBeing almost tone deaf myself I'm always impressed by anyone who can sing, let alone play an instrument. He's got a lustrously rich voice. We make out like crazy. It's like being in high-school again.\n\nWe very gently pleasure each other in the tub with the lights down and beeswax candles burning, it smells like flowery honey and rose and sandalwood. \n\nPeriod or not just having him here is so fucking comfortable I can't stand it, I just want him with me all the time, it's not normal. \n\n-\n\n\"You've confirmed that the technology is sound but appear to have concerns about the contract?\"\n\nHas she grown, or is it an optical illusion of high heels and upswept hair? Whatever it is, her expression and posture have turned imposing. Standing at the end of the table she grills me, asking detailed questions as she looks over June's shoulder and reviews the earlier minutes. With raised brow and superlative attitude she turns and looks at me.\n\n\"Do you think or do you know?\"\n\nPointing with the laser pointer she asks, \"In your expert opinion, would you say that that is a fair representation of the science and or engineering at issue?\"\n\n\"Yes, but . . .\"\n\n\"Yes or no will suffice.\"\n\n\"Yes.\"\n\nShe looks around the table. \"So we're all in agreement on this point?\"\n\nThere's not even a murmur of dissent.\n\n\"And the reports you provided support this? Yes or no?\"\n\n\"Yes.\"\n\n\"You would agree at this very minute that start-ups are failing all over the place and that sometimes when companies fail, it is no one's fault but their own?\"\n\nThat smarts. It's not always that cut and dried. \n\nThe room is pin-drop quiet as everyone watches. I respect her but refuse to fear her.\n\n\"I think the new clause is grandly ambiguous, with enough legalese to confuse a Supreme Court Justice. No one in their right mind, knowing exactly what that means, would sign it.\"\n\nThere are a few murmurs around the room.\n\n\"I'm a lawyer and that's a contract. Your finding it ambiguous is irrelevant. Ethically, the clause completely spells out expectations. If their lawyers are worth their salt I'm sure they'll find it and we'll hash it out.\"\n\nShe's knows the exact opposite to be true. She's all but buried the clause. \n\n\"It's win at any cost and to hell with the little people, is that it?\"\n\n\"Frankly yes, especially during acquisition, which is what we were hired to facilitate. We plan on retaining most of the staff but make no mistake this isn't some rescue mission, this is a takeover.\" She gives me a level look.\n\nI look around the table, nest of vipers.\n\nWith a small frown and sigh she continues, \"Look, I realize you've never worked closely with lawyers before. I can appreciate that. Your consultation has proven invaluable. But we are a for-profit firm and as we go about the business of professionally serving our clients best interests we leave empathy at the door. Yours is to advise me. You have done so. I thank you. Next item.\"\n\nShe continues talking. All cool aplomb and unhurried stride. Feathers not the least bit ruffled. \n\nMatt nudges me. \"She let you live - didn't even maim you. I think she likes you.\"\n\nI manage a smile but I'm ticked-off.\n\nMr. Milton strolls in. \"Sorry to barge in, but I need to bend your ruthlessly pragmatic ear for a minute L.J.\"\n\n\"Of course. Everyone take 10.\"\n\nThey move off to the side of the room him questioning and her answering and him laughing as if she's told the joke of the century. Opening her jacket she takes out two cigars, passing one beneath her nose inhaling the fragrance, she hands him one and they move outside to the terrace. \n\nMilton pulls out his keys and uses the cigar cutter on both. She lights hers and toasts it, and when it began to smolder takes a few well-practiced puffs to draw up the flame. \n\nMilton follows suit and they both inhale and lean back against the railing. They talk and smile quite a bit. At one point he elbows her and she elbows him right back and they share a laugh. What the hell is that about?\n\nMatt nudges me.\n\n\"Thick as thieves those two. Probably out there celebrating that outrageous seven-figure fee she bought in. I don't know how she does it without padding. They go back a ways, knew each other in New York. He urged her to come home and work here. \n\nShe moved up the ranks pretty fast. So fast that there were the standard sleeping her way to the top allegations leveled against her. Mainly this is from haters and detractors who don't have her encyclopedic knowledge of law. She's got an incredible work ethic, there's no job she's not willing to do herself. Not to mention how focused and driven she is about her work. \n\nAnd I mean driven - that woman preps for things weeks sometimes months in advance including contingencies, her homework's always done. Which is his style, an eye on everybody and a finger on every button. \n\nAlways talks to him like she's his equal and has never fawned over him like the rest of the sycophants and he admires her for it, that and the look of her; which she, aware of her effect, is not above exploiting for profit. \n\n\"I see.\"\n\nIt's not like that. \n\nHe's been married 13 years, loves his wife to death, like to died when they took her ovaries, it saved her life but it was a serious blow. They ended up adopting two little black kids from Mississippi and never looked back. \n\nThose two know how to work it I tell you. Sometimes when we're out representing clients, it doesn't matter that she's always dressed to the nine's, people take one look at her and dismiss her as an assistant or paralegal, more times than not really. \n\nBut she makes it work, quietly watching from the sidelines taking notes, asking small questions, by the time she starts asking the big questions it's too late and you're up shit creek. It's a little theatrical, but it works. \n\nShe was named interim Managing Director six months ago after a shake-up around here he made it official and now she's a heartbeat away from making partner. Rumor even has it that she's a stakeholder around here, with real skin in the game.\n\nWhich must work our great for Milton, who doesn't like to get his hands dirty by dealing with us directly, so we all fall under her authority and serve at her majesty's pleasure. He's about the only person allowed to check her. \n\nAs long as she's got his ear not even people who outrank her dare try, they quietly row with the rest of us slaves. Hella smart, fiendishly clever and damned tough. She works too hard if you ask me. \n\nI'm all for being successful but there must be a way to go about it without the moment's notice travel and working 60 sometimes 70 hour work weeks. If she makes partner, or rather when she does, it'll just get worse.\"\n\nAs interesting as this is, why is he telling me this. The look on my face must say it all.\n\n\"I'm saying all this because apparently you two have . . . run into each other.\"\n\nI shift nervously in my seat. \"Is it obvious?\"\n\n\"Well A) she had that small but significant moment back there. I've never heard her try for middle ground, ever.\"\n\n\"Is that what that was?\"\n\nHe chuckles darkly. \"For her, yes.\"\n\n\"B) How territorial you looked when they stepped outside, and C) I can smell her fancy soap on you.\"\n\n\"Are you a detective or a lawyer? And how in the hell do you know what her soap smells like?\"\n\nHe laughs at me. \"Don't get your back up. Savon Tubereuse, she gets it in France and gave my wife a bunch of it for Christmas. I'm just a simple lawyer.\" Matt gives me a shark-skin grin.\n\n\"Well I'll be damned.\"\n\nHe snorts softly. \"You may be damned indeed if that's your goal.\" He gestures towards Lou.\n\n\"Never had much of an opinion about lawyers, but I am coming to hate the profession.\"\n\n\"No hard feelings. You had the balls to step up to her. I respect that. It's time somebody did. So, is she as good as she looks?\"\n\nMy mind is instantly flooded with thoughts of those kisses, that mouth and the smooth tight wet perfection of having her. \"Better, that's all you'll get out of me.\"\n\n\"Damn! Go head Lou. Enjoy it. But you got a hard row to hoe son, wouldn't be in your shoes for the leather.\" \n\nHe chuckles and claps me on the back.\n\nThe meeting resumes and runs until 4:45. It started out well enough but ended up being a crap day. I'm going down to my place tonight, I have some things to think about. I'm texting her when I run into her in lobby as everyone heads out for the day.\n\n\"Hey you, I am starving! What's on tap for dinner?\" She whispers, smiling at me as we enter the elevator. Like nothing happened. Unbelievable.\n\n\"I was just texting you.\"\n\nWhipping out her phone, her face falls. \"You're going home?\" She looks up at me her mouth starting to turn down with disappointment. I feel like a bit of a jerk though I don't know why after her behavior. I've had enough for today.\n\n\"I should. I need to check on the folks and make sure the place is still standing. I'll see you tomorrow, ok?\" I squeeze her arm.\n\n\"Ok.\" Her face is carefully composed. She's not pleased, but seems to be dealing with it.\n\nTraffic on 64 is awful. Usually I don't mind it so much, it's not nearly as bad as LA traffic but I've grown quickly spoiled staying in the city with Lulu. It's 6:34 when I roll in. After checking the mail I decide on a run to clear my head. 3 miles out and back and I'm feeling better until I run up the path to my parent's door and see her little red car in the side driveway. \n\nHow in the hell did she get here so fast? I go in and call out. Pops is in his chair reading the paper. He shoots me a look and shakes his head as I walk by and turns the page without a word. I hear voices in the kitchen. She's at the counter talking to mom. The little demon is mighty cute in her batman t-shirt and flour dusted jeans.",
        "\"Out running, just like I said.\" Says mom looking at me curiously. \"Lulu's been helping me make biscuits. You two help yourselves.\" She gives me a pointed look before she leaves us alone in the kitchen. \n\nI take out the water pitcher and pour myself a glass. I sit an extra glass on the counter and she fills it.\n\n\"How'd you get here so fast? 64 was a parking lot.\"\n\n\"John Tyler Memorial Highway.\"\n\n\"You'll have to teach me that trick.\"\n\nWe stare at each other and the silence stretches. She breaks it by stating the obvious.\n\n\"You're mad at me.\"\n\n\"I had a real crap day, is all.\"\n\n\"Tell me about it?\"\n\n\"I endured an impromptu 3 \u00bd hour meeting, had my ass publicly kicked and watched a woman I like to consider my lady, who as it turns out is my boss, flirt with her boss for over 20 minutes.\"\n\nShe all but hisses \"A) I did not kick your ass, you'd know if I had, my foot would still be lodged there. B) I am not your boss. I work with you and happen to be overseeing a mutual project. We work together for the firm and C) that meeting ran long so that I could delegate some projects and have more time to spend with you. We got a lot accomplished. \n\nAnd lastly, as you should damned well know, I don't flirt, with anyone, in the office or anywhere else. If I were so inclined, it would most certainly not be with my boss. It's hard enough being a professional woman without having the clich\u00e9d 'she's sleeping her way to the top' leveled at me, by you of all people. \n\nAnd then you just up and leave with that lame-ass explanation, by text no less! If I hadn't run into you on my way out, you weren't even going to say goodbye. So, I guess I've had a crap day too.\" \n\nShe sighs heavily and rubs the back of her neck. \"We shouldn't do this here.\"\n\nI stop fixing my paper plate of barbecue and potato salad and greens. \"Do what? \"\n\nShe looks at me, eyes narrowed, little nostrils flared and quivering. \"Fight. Now fix me a plate.\"\n\nTurning on her heel she goes out to the den to say goodbye to my folks. I hear mom thanking her for buttermilk. I call out a goodnight from the kitchen as we leave.\n\n\"Good luck son.\" Says Pops. I hear a sharp smack. \"Dang it woman!\"\n\nShe's quiet on the way over, driving carefully on the dark narrow road. Having left the door unlocked I open it and we go in.\n\n\"Dax, I really do like you but we both have a job to do and if this,\" she gestures back and forth between us, \"is going to be a problem, then something's going to have to give.\"\n\n\"So which is it? Did you come all this way to fire me or break up with me?\n\n\"I came here to talk.\"\n\n\"I'm surprised you have the time what with your quest for world domination. And your attitude today? God forbid someone question you, let alone get in your way.\"\n\n\"I am a fucking lawyer, that's who I am! I'm not about to apologize for that. It's not going to change because of this . . . whatever this is. If you disagree with me, fine. But when we have work to do, I don't have time for bullshit. It's business. It's not personal. You need to leave that shit on the field.\"\n\n\"Not all of us are able to compartmentalize so neat and effectively. You don't define us but you want - what? Blind obedience? I will not be your fucking lap dog Lou. This, whatever this is, as you so eloquently put it - is starting to feel one-sided with the odds heavily stacked in your favor. Kick my ass all day long and then wanna go home and cuddle like nothing's wrong.\"\n\n\"I'm not asking you to be my blindly obedient lap dog. But I can't do 'us' at the office. I cannot and will not, for my sake as well as yours. \n\nI've been working my ass off to have enough time to spend evenings with you, and I'm ok with that. One of the many things I love about you is how un-threatened you are or seemed to be, about what I do for a living. Don't take that away from me.\" \n\nHer voice goes small with that last statement and just like that I'm over it.\n\n\"So, there are things you love about me?\"\n\nShe looks away. Taking the foil off the paper plate, she smiles a little. \"Homemade potato salad, can't master it for the life of me.\" She tucks in, eating ravenously.\n\n\"You didn't eat lunch today?\"\n\n\"I was busy. I had a couple of protein bars and like 3 biscuits when I got here.\"\n\n\"You know you need to eat proper meals, Lou.\"\n\n\"No. What I need, is you.\" Her fork pauses mid-air and she claps a hand over her mouth.\n\nI stop eating and look at her my heart is tripping. She takes a breath and continues.\n\n\"Especially in the office. I need you to be on my side, at least a little bit. There's a lot of intellectual property work and unlike you I don't have a computer science/engineering degree. They are taking a big chance on me letting me handle this deal and you've been giving me great guidance, really. Because I'm not a tech lawyer, I was winging it big time before we hired you, knowing just enough to be dangerous. \n\nThe business world is a boys club and the tech industry is no different. Especially who we're currently representing and when my short, black-female self shows up, they are quick to intimidate or try to anyway, and so yes I'm aggressive, it's either that or have my ass handed to me. What's galling is that no one would think twice about my attitude if I were a man. My shit has to be on point. \n\nWe had a tech lawyer but he was complete shite at it. The last time I stepped in and saved the account the client had had enough and so to maintain confidence, I was bought on board and away he went. We decided another lawyer was not the answer. \n\nAnd then there was you and we were in the market for a CIO as well, two birds, one stone. Like I said, I can appreciate your never having worked directly with lawyers. We're a callous and venal bunch, so I'm sorry, if I was harsh with you but it's my job to be. \n\nMy male colleagues are twice as aggressive and no one bats an eyelash but I'm expected to be Mary-fucking-Poppins. I'm always told 'be nice Lou'. Even you do it and for the most part I let it slide. But when time's of the essence I don't have time to edit for tone.\"\n\n\"Well at least you're consistent. Those emails of yours before we met . . .honestly, I thought you were a man, an asshole lawyer, but a dude.\"\n\nShe laughs easily. \"I am an asshole lawyer, but I don't let it bother me and you shouldn't either, besides so far it's not held me back none so . . .\"\n\n\"You like lording it over people.\"\n\nShe groans. \n\n\"I do not lord it over people. I'm just right most of the time, especially in the office. And yeah, I like being an asshole lawyer. It pays well and I like to eat. \n\nI also like working with you; smart, knowledgeable, fair and empathetic - you. But if it means we don't get along at home . . .once this deal is done we'll maybe re-assess. I dunno. I like my job but I'm tired and ready to come in from the road. I re-did my house and these past few weeks have been the most time I've spent in it at any one time. \n\nWho knows, in a few years or so I may not want to do this at all anymore, but not until I make partner. I'm so close I can taste it.\"\n\nI'm not trying to derail her but that cutthroat side of her requires adjustment.\n\n\"What about private practice? Matt says he's been trying to lure you for years now.\"\n\n\"No thank you. Unreasonable opposing counsel, mandatory schmoozing events, dark over-lord judges, feeling beholden to a few fatted-calf clients, nu-unh, not the kid. I've got a good thing. I bring in enough business to feed myself well and buy a few pretty suits. I hit my billable hours and they leave me alone and I'm able to have a private life, which I especially appreciate of late.\" She looks at me meaningfully.\n\nTaking her by the waist, I place her arms around my neck and look at her carefully.\n\n\"What?\"\n\n\"You came after me.\" I smile at her, but she looks down frowning. She's doing that blushing thing though. \n\n\"So, you need me in the office but what about outside it?\"\n\nShe groans, grinding her forehead into my chest and mumbling.\n\n\"I didn't catch that.\"\n\nDeep sigh from her. \"I do. You know I do.\"\n\n\"Are you still going to be mean to me at the office?\"\n\nShe backs away and shrugs, and gives a funny little nod. \"Yeah probably.\"\n\nI sigh and look at her seeing the beginnings of a slow mischievous smile.\n\n\"But there's an upside. You know how you have days like this and it's like 'fuck that bitch man'?\"\n\n\"Yeah?\"\n\n\"Yeah, well you actually get to. Fuck me, that is.\" She laughs at the look on my face.\n\n\"Well, there is that. I think your behavior today might even warrant corporal punishment.\"\n\nThat eyebrow goes up. \"It just might.\" She turns and walks towards my bedroom and glances back giving me a smoldering look. \"Bring the sauce.\"\n\nThat's gotta be one of the sexiest things I have ever seen.\n\nMmmm . . . Yes ma'am.\n\n__________________________\n\n2:05 am, her face is practically in my armpit. It's difficult to reconcile this sweet and tender bundle sleeping so trustfully with the woman I wrestled a few hours ago. She gave as good as she got. Wouldn't even let me shower before she attacked me, saying she loved the smell of me. \n\nIt's been raining and even though its cooled off considerably, the air is now very humid. I'm feeling mildly uncomfortable and very sticky as there was quite a scene with the barbecue sauce. \n\nA hot shower is just the thing. I like using her soap. Damned soap got us outed. I should probably mention it. Matt's pretty discreet, but she won't be pleased. \n\n15 minutes and I'm refreshed and feeling wide-awake. Maybe I'll catch a little sports center. I turn out the light before opening the bathroom door so as not to disturb her, but as I cross the dark room I hear a sniffle. I turn on the lamp and she's sitting up in the middle of the bed crying and rocking back and forth, eyes and nose red, hair mashed in on one side, barbecue sauce on one cheek, crust in one eye. An adorable mess.\n\n\"Hey, hey, hey what's wrong babe?\"\n\nShe shakes her head and continues with the rocking. She's shaking hard. I take off my t-shirt and put it on her. \n\n\"Come on.\" Scooping her up, I take her to the bathroom and sit down on the closed toilet, wipe her face with a warm rag and rock with her a bit until the shudders stop.\n\n\"I have to pee now.\" She says shyly.\n\nWhile she's in I get another t-shirt and wait. She comes out and stands indecisively. Taking her hand I lead her down the hall. I open the front door and move my rocking chair out of the corner and place it by the screen door. \n\nWe should be safe from the mosquitoes and get some fresh air. I sit us down and she throws her legs over the arm of the chair. I kiss her forehead and rock. I feel another quivering sigh, but she's relaxed her grip on me and is drifting off to sleep.\n\n\"Don't leave me Dax.\"\n\nSoftly said, but heard as clear as day. I stop rocking. I stop breathing. But looking down she appears to be asleep. Her eyes open sleepily and she looks at me dazedly.\n\n\"Yeah?\" She mumbles sleepily before drifting off again.\n\nI resume rocking, tucking her head under my chin. My leaving upset her. Seriously upset her.\n\n\"I'm not going anywhere.\"\n\n--\n\nI wake up to her sniffing me, sucking at my neck before biting me. Always with the biting, she'd devour me if she could I think.\n\n\"Someone's frisky this morning.\"\n\n\"It's this house, this bed, your bed. Mmmmm . . . everything smells like you, it's like you're everywhere, all around me. I love it. It's like having a threesome.\"\n\nHas she done that? I don't get too far with that train of thought though as she's rubbing her cheek against me sliding her hand inside my boxers and biting my shoulder.\n\n\"What can I do for you?\"\n\n\"Stuff.\"\n\n\"Stuff?\"\n\n\"Yeah, stuff.\"\n\nRolling over quickly for a condom, she slides it on and is on top of me just like that. \n\n\"Come on Lou, it's first thing in the morning. I need to take a leak.\"\n\n\"You can hold it. I'll be quick, five minutes.\"\n\n\"No kiss or nothing huh? I feel like I should call you Mr. - just climb on me and do your business.\"\n\n\"You like it, now be quiet, Celie.\" \n\nShe has her quick and dirty little way with me coming in record time, she kisses me and skips off to the bathroom. \"I feel so used. \" I laugh to myself. Aggressive, she must be ovulating. \n\nI wait until I hear the flush before going in. It's the little things about her that kill me, how careful she is stepping into the high cast iron tub, holding on with both hands, it's damned cute, very little girl. But as she washes her stomach getting off the last of the barbecue sauce she smiles at me in a very womanly and knowing way.\n\nI step into the shower.\n\n\"I thought you already showered.\"\n\n\"I did, but someone decided to make me dirty again.\"\n\nWe manage to finish our shower without molesting each other too much. She waits for me to finish and help her out of the tub. Very concerned with falling I wonder why. Reaching for the towels I wrap one around me and start to dry her with the other. She frowns.\n\n\"I take issue with these towels. Nice sheets but scratchy towels, I don't get it.\"\n\n\"I'm a guy.\"\n\n\"You own a standing mixer?\"\n\nI shrug. Shaking her head she puts on my t-shirt and her sneakers and grabs her car keys.\n\n\"Where are you going dressed like that?\" My tone is sharp, but she laughs.\n\n\"Just out front to the car, dad. We're in the woods. Jeez!\"\n\nCoffee. I start a pot of community with chicory and decide to scramble some eggs and warm up the rest of last night's biscuits. I hear the screen door slam and three seconds later she's standing in front of me looking mildly distressed.\n\n\"My car won't start. I left the passenger window open and I think there's water in the electrical system. I couldn't even jump it with the spare battery pack. I'm gonna need a ride home to get the other car, so hurry up and eat, we gotta go.\"\n\n\"Drive my mustang. Or better yet we could ride in together.\"\n\nGiving me an irritated look. \"Come on man, we don't have time for this right now. Tell me you have a blow-dryer?\"\n\n\"Why would I need a blow dryer? I can see if Mom has one or I can just dry your clothes over there.\" Washer and dryer is the one thing I've not gotten around to here.\n\n\"That sounds too involved. Shit, and my clothes are soaked. The jacket's fine but the pants and shirt are pretty drenched. I'm going to be late. I hate that.\" She groans looking more peeved by the second.\n\n\"Sorry babe. Here, sit down, have some breakfast.\" She eats quickly, wrinkles her nose at the coffee but drinks it anyway. Chicory ain't for everybody. She eats quickly and by the time I put the dishes in the sink she's gone, back to the bedroom just stepping into her panties when I walk in. \n\nLife with Lulu. \n\nShe puts on her bra and last night's jeans before sitting down on the bed to do her version of serious makeup: chap stick, followed by lip gloss and a touch of mascara. She takes an elastic and pulls her hair into a high curly puff on top of her head, uses my brush to smooth the edges and is done. Watching me she cocks her head to the side and purses her lips and comes over. Uh oh.\n\n\"T-shirt and jeans?\" She says lifting a censorious eyebrow.\n\n\"It's Friday Lou, casual Friday, we're allowed. You're the only one who wears a suit every day, well you and Milton.\"\n\nShe comes over to the closet idly rifling through. \"You've got nice shirts.\" Selecting a striped shirt she holds it against herself. \"Can I borrow this?\"\n\n\"Help yourself.\" Taking off her jeans and bra, she takes the shirt and puts it on without sliding her arms in the sleeves, buttons up the front, pulls the sleeves back and wraps them around her twice before making a bow and arranging the shirt material to somehow pleat at the sides. She's turned my shirt into a strapless dress, ingenious.\n\n\"That's quite a McGyver move.\" I chuckle.\n\nShe steps into her heels. Bare legs, bare arms and shoulders and back all that exposed skin. . . I'm not sure I want everyone looking at that neck and shoulders all day long.\n\n\"Desperate times man.\"\n\n\"That's a lot of skin.\"\n\nShe shrugs. \"I don't have any meetings. Like you said, it's Friday. So fuck it.\"\n\nNo meetings, thank god, but this not what I had in mind when I suggested she go more casual. When she shrugs on her jacket I am relieved.\n\nIn front of the mirror she adjusts and tweaks, twisting this way and that. She smiles. \"It matches my jacket. It doesn't look too crazy does it?\"\n\n\"I'm no expert, but I think it looks fine.\"\n\nShe's back in the closet flipping through hangers. \n\n\"What else you got in here? These are nice. Who is this Ben Sherman? I like, I like a lot. I think I just doubled my wardrobe.\" She runs her hands over my Harris Tweed winter suits and looks curiously at the Brooks Brother's and summer seersucker suits and smiles. \n\n\"You do have clothes, you just don't wear them.\"\n\nAh hell.\n\nShe checks her watch. \"I'll have to ride with you after-all, there's no time to swing by my place, especially with your slow-ass way of driving.\"\n\n\"Insulting your chauffeur, is that wise?\"\n\n\"Come on man, we gotta go.\" She looks at her car in disgust as we head out. \"I'll send Lili to deal with that mess.\"\n\nLooking at my truck she grimaces.\n\n\"You need some help.\"\n\n\"No, thank you, just trying to figure out a non-scandalous way of getting in. I think can manage though.\"\n\nPlacing her foot carefully on the step and grasping the interior support bar, with a flexing of leg muscle I could watch all day she manages to smoothly step up into the cab of the truck.\n\nI get in and we're off. \"Drivin' Ms. Daisy at last.\"\n\nChecking her watch again, she says, \"C'mon, hurry up man. Just drop me at the edge of the lot when we get there so I can walk around to the front. I do not want people to start talkin'. I'll get Lenny or somebody to take me home or grab Uber.\"\n\nShe came after me, and we made up in the best way and we're back here somehow. She wants me; we've established that much. I love her but I've had about enough.\n\n\"No.\"\n\n\"No?\"\n\n\"No, and I mean it, to everything you just said. No.\"\n\n\"Did you not hear what I said about doing us at the office?\"\n\n\"I will park in my usual spot. You will get out and walk in with me, like a normal person. If there are questions you tell the truth. You had car trouble and I gave you a lift. I will give you a ride home after work. Simple as that. I'm not having any convoluted bullshit from you today, Lou.\"\n\nI glance over to find her watching me through narrowed eyes. I hold her gaze until she flicks her eyes over me dismissively, sniffs and looks away out the window, arms crossed, muscles in her face working as she sets her jaw. \n\nTraffic comes to a standstill. I see blue lights flashing up ahead. There's been an accident we could be awhile \n\nShe's seething. Reaching over I pry one of her hands loose and bring it to my lips and kiss her tender wrist and palm. She's grunting, pulling against me futilely trying to extricate herself.\n\nPutting the truck in park, I turn on the hazard lights. Unbuckling our seat belts, I pull her resisting all the way, across the seat. She's pretty damned strong.\n\n\"No.\" She's twisting and turning her head, pushing against me.\n\n\"Yes.\" It takes a few minutes or so but I kiss and squeeze her until she yields. Still pouting, but it's better than frosty anger. I slide my hands up and down her legs resisting the temptation to touch the yes button. Soft, warm in my arms a little mussed. \n\n\"Soft thighs, if we were at an exit I'd pull off road somewhere and fuck you till you screamed for mercy.\"\n\n\"Dax?!\" She finally pulls out of my arms and slides away. She's fluffing her hair and adjusting her clothes.\n\n\"Come to think of it, after last night, maybe that's what should happen every time you misbehave.\"\n\nShe reapplies her gloss and snorts, \"it's hardly practical, we wouldn't spend much time upright.\"",
        "--\n\nIt's an early Saturday morning and we're having pancakes when we hear voices coming from the front door.\n\nLou goes to check it out and I follow.\n\n\"It's Lenny and Harry.\" She mouths to me quietly as we listen.\n\n\"Look man, she's your sister, you wake her up.\"\n\n\"It was your idea to come over here, you know how she is if you wake her.\"\n\n\"Yeah but she's less likely to kill you.\"\n\n\"We should have called first.\"\n\nPeering through the peep hole she giggles quietly before quickly opening the door to two startled faces.\n\n\"If this were prison you'd both be my bitches. What do you people want?\"\n\n\"It's time.\" They look at me. Lulu looks at them and shakes her head. \"I don't think so.\"\n\n\"Come on Lulu, you've not played with us since he came. Please?\"\n\nShe shakes her head. \"No.\"\n\nLenny clasps his hands in supplication.\n\n\"What's going on?\n\n\"Basketball. They want me to play.\n\nI look at her and start to smile. \"We said we'd play together one day.\"\n\nShe smiles too, remembering.\n\n\"I recall that conversation as well and I think the key word there was 'maybe'.\n\nShe's smiling at me in that way. Harry looks uncomfortable. Lenny breaks the spell though.\n\n\"Alright, break it up. I'm surprised you haven't broken him yet from what Lili's told me.\"\n\nShe turns lazily to look at him. \"Watch it you little man-whore. Eddie's the only high school friend I have left that you've not glommed on to.\"\n\n\"Yes, but one day I'll get her too, you just mark my words.\" He smiles and waggles his eyebrows at her.\n\n\"Boy, please. You got game, but don't be ridiculous. Dax, we grew up balling on playgrounds with broken glass and lead paint. They roll pretty hard and if you run smack dab into either of these mastodons at full speed it can hurt like a motherfucker. Some of us go out of our way to make sure that happens.\" She looks at Harry accusingly.\n\n\"Lou, I can handle myself. Besides I need a little exercise.\"\n\nRelenting with a sigh she says, \"Alright, but he's on my team. If you harm a hair on his head so help me, I will have your ass.\"\n\n\"He's a grown man, he'll be fine.\" Harry looks at me cockily. I know he's thinking he'll trash me on the court.\n\n\"Yeah, well I know how you fuckers roll.\"\n\n\"Come on Lou, he's a big boy. We're not going to break him. Besides, I suspect he can more than handle himself\", says Lenny tauntingly with a knowing look.\n\n\"I'm too old for this shit. The way these guys play it's like a full contact sport.\"\n\n\"Lou you know you can take it, you were just out there a few weeks ago making people cry. Are you getting squeamish in your old age?\" Says Harry.\n\nShe grimaces. \"I'm not in the least bit squeamish and I yes I can take it. But do I want to? I like black and blue in my closet, not on my body. I don't want Dax turning those colors either.\"\n\nI appreciate her concern but she's bordering on emasculation. \"Lou, it's fine really.\"\n\nShe looks uneasy. \"Alright then, as soon as I find my mouth guard, we'll go.\"\n\nLenny goes, \"Awww shit! Once again it's on people! I call Lou's team!\"\n\n\"Lou that good?\"\n\nHarry says, \"Lou is agile, mobile and hostile. She never attacks straight on, you don't see her until it's too late, she's quick. She can't dunk of course but can generally post from anywhere on the court.\"\n\nHaving braided her hair into pigtails and twisted them into knots. She comes back wearing high top sneakers, camouflage shorts and a gray wife-beater over what looks to be a seriously tight black and white sports bra. She looks harmless enough, downright adorable really.\n\n\"Lenny you can roll with me but I don't want you out there showboating today. Harry you with me? Be a winner for a change.\" She smiles at him cheekily.\n\n\"Lou, that'd be one chief too many on the same team, we always were too hardheaded to team up.\"\n\nThere's a silent exchange between them that I am not comfortable with.\n\n\"Suit yourself. No bitching and moaning when I kick your ass though.\"\n\n\"Likewise.\" He smiles at her.\n\n\"Do I ever complain about losing a fair fight? Unlike some, I am a gracious loser.\"\n\n\"Yeah, but you rarely lose,\" grouses Lenny.\n\n\"Hence my graciousness.\"\n\nWhen we get to the gym some friends are there and they are glad to see her. She puts a finger to her lips, signaling silence as she walks up behind someone.\n\n\"Hey Riley, how's the leg?\" She says in a lilting taunt.\n\nWithout turning he replies, \"Ah yes, the unmistakable voice of Satan. Did you check your cloven hoof at the door today?\"\n\nHe finally turns around smirking.\n\n\"I'll check mine if you check yours. Come roll with us? Then you won't have to cry yourself to sleep tonight. June told me how upset you were last time.\"\n\n\"Fuck you Lou!\"\n\nShe cocks her head to the side, chin in the air. \"Hey, watch it! You don't want a bad report. One phone call and you are on the couch for a month living with the band of the hand.\" She looks at him calculatingly.\n\n\"I swear your evil knows no bounds, fine.\"\n\n\"Good boy!\" She smiles at him and slaps him on the shoulder.\n\nI turn to Lenny. \"What happened with those two?\"\n\n\"She can't always block per se, but she's quick and has deft hands and will strip you of the ball and pick & roll on you in a heartbeat, which is what happened to Riley the other month. \n\nHe was pulling the ball back to go up for a shot and she jumped and took the ball. He got testy and lashed out with an overly aggressive arm across her chest and neck and got his ass handed to him when she came back with an elbow to his kidney, he went down on his knee pretty hard,\" says Lenny smiling admiringly. \n\n\"Which saved him - Harry, Matt and I were about to whip his ass.\"\n\n\"Now if Harry will just do the right thing and commit to being my power forward, I won't have to worry about a thing. You know you don't want me to call Uncle Jack and say you wouldn't play with me.\" She twists from side to side like a naughty little girl, smiling wickedly.\n\nHe shakes his head and smiles back. \"Fine, Lou. Whatever.\"\n\nI pull her aside. \"You're a brat.\"\n\n\"I'm saving lives. I have two of the worst court offenders on my team, Harry and Riley, which means they won't knock me around, and me, you and Lenny won't get to swinging in here. They foul hard. Because of their size not too many people take them to task for it. They bring brute strength. We bring style. \n\nRemember, I'm not Lulu out there. I will get shoved and knocked down; it's the nature of the game. There's no crying in basketball, unless you win the championship and then, well it's all-good. So, unless I'm bleeding from the eye, or you see a bone protruding through the skin, let it go.\"\n\nShe gives me a stern look. I nod ok. This should be interesting. We all stretch and run a few laps before starting. Our lineup is pretty good - Lou at 5'5 is point guard. Hell, if I remember my stats correctly, she's the same height as Muggsy Bogues. At 6'3 I'm playing shooting guard today though I prefer power forward, but as Harry is the biggest guy out here at 6'8 and 270 pounds he's got that position more than covered.\n\nLenny is 6'1 so he's a small forward and Riley at 6'4 is holding the center.\n\nWe start off slowly, everyone sizing each other up looking for weaknesses. Attempting a dunk, I avoid a potential block by switching the ball from my right hand to my left in mid-air for a beautiful lay-up. I jog down the court shrugging and smiling as I look at Lou, who winks at me. After I make several steals and finally manage two dunks it starts to get harder.\n\nTo limit my effectiveness they really start to play rough, trying to intimidate, overplaying me to keep the ball away, double-teaming me as soon as I even touch the ball, trying to force me to give it up. Whenever I go to the basket, they make sure a big someone is blocking my path, and they are pretty much trying to nail me as I soon as I come off the screen. \n\nLuckily, I have a pretty decent fade-away jump shot, which is pretty much indefensible. Lenny is an excellent dominant offensive force, out-leaping, out-spinning and outmaneuvering defender after defender - not very fast or particularly quick-footed, and not always able to shut down a person one-on-one, but he consistently displays a knack for anticipating the moves of his opponent, allowing him to intercept passes and create turnovers. \n\nHe's a solidly good player with simple and effective defensive moves, he doesn't hesitate to jump into a passing lane to make a steal or allow his man to step past and drive to the hoop, then blocking the opponent's shot from behind.\n\nLou is all about the showtime pick & roll. She's very quick and precise with her crossover dribble and no look passes. She's tough too, not backing down at all when she's defending the ball. I can see why she prefers playing with Harry and Lenny, these three know each other's moves only too well. Not to mention that no one dares push her around too much with Harry and Riley on her team. They don't seem to know what to make of me just yet, which is to advantage.\n\nWe're trailing 76-73 when Lou calls a timeout to talk strategy, which she's surprisingly good at.\n\nUsing a triangle offense she guides us perfectly. Harry blocks several shots. The man's a wall. He grabs the rebound and gives me the inbound pass, I drive to the basket, and hit a layup over several defenders. Using his bulk to advantage Riley makes 2 critical 3 point shots. They bring the ball up court and try to pass it to their forward, who was set up in the low post and was being guarded by Lou. She gets jostled a bit but steals the ball and without looking passes it to me, I slowly dribble up court and pause at the top of the key, eyeing my defender. \n\nI start to dribble right, then cross over to my left, violently shrugging off my guard, foul isn't called so I take the jump shot. Richard catches the rebound but misses a desperation 3-pointer, and we handily win the game.\n\n\"Where'd you learn to play like that?\"\n\n\"My Dad. Lenny's 5 years younger than me, so I was the closest thing to a son my father had for a long time and I've always loved the game. Dad was an excellent strategist he actually did a little coaching. Actually your dad is named for one of my favorite military commanders. Maybe it's fate that we met. But you've been holding out on me Dax.\"\n\n\"What?\"\n\n\"Harry tells me you were all state for Mississippi for 2 years.\"\n\n\"What's past is past. It's not like I went pro or anything. My knee went out at the end of my sophomore year of college, which was pretty much the end. It happens that way for a lot of players. I suppose I could have pushed through, but you've gotta have the passion for it and 3 painful surgeries has a way of taking the heart out of the most ardent of players. Besides being laid up all that time allowed me to really develop other interests. That's how I ended up finishing at MIT.\"\n\nShe nods, looks at me thoughtfully. \"My playing isn't a turn off?\"\n\n\"Hell no!! I knew you had game, but not game. I can't wait to get you home. First time I've ever wanted to sleep with a teammate.\"\n\nShe turns her head the side lifts her arm and sniffs, wrinkling her nose. \"Phew! I am rank. You may have to use the Jaws of Life to get me out of these bra's.\"\n\n\"Two bra's Lou?\"\n\nShe shrugs and cups her breasts. \"Can't have them flying about knocking people down. Someone could lose an eye.\"\n\nLeaning towards me she takes a whiff. \"You're a little pungent yourself.\"\n\n\"Nothing wrong with hot sweaty sex.\"\n\n\"To end up yes, to start out, no. After we shower we can get sweaty again.\" She scoots over and kisses me.\n\nFrom the front seat Lenny starts making gagging sounds. \"If this is what it's going to take to get you two to play with us, I'm not sure it's worth it.\"\n\nThis earns him a resoundingly sharp slap to the back of the head.\n\n\"Shut up and drive faster. I'm starving back here.\"\n\nHe shoots her a cross look in the rearview mirror, but takes out his phone and hands it to Harry.\n\n\"Make the call.\"\n\nHarry dials, \"3 car wrecks, we should be there in ten. Dax did you want one too? You can always change it when we get there. Brisket, bacon burger from hell, three types of cheese, Alabama white sauce, beer battered onion rings and a large order of fries and fried pickles to share.\n\n\"Sounds alright.\n\n\"Make that 4.\"\n\nWe arrive find parking relatively close by and go in. It's small and dark, not too busy for midday on a Saturday.\n\n\"It's a total dive, but they've got the best burgers in town, don't let that mess in Carytown fool you. They've just got better advertising.\"\n\nWe sit down. Harry and Lenny exchange looks and Lenny shakes his head and chuckles.\n\n\"You see how she do right?\" Says Harry.\n\n\"Typical. At least it's not just us. She does Dax like that too I see. Consistency is key.\" He looks at his sister.\n\n\"How now negroes?\"\n\n\"You, never sitting with your back to the door. Just like a man.\"\n\nShe looks at him. \"Kindly Fuck-off and spare me your sexist gender psycho-babble bullshit. Forgive me if I don't want to sit with my back to the unwashed, tatted up, half-inebriated masses. I got trust issues. If you two don't want me to sit here, don't hold the door and let me walk through first, because I will surely take my preferred spot each and every time, simple as that. And Harry your big ass couldn't even fit in here on this side anyway you know these booths are uneven, so please.\"\n\nHarry and Lenny smile at each other again but back off. A plate of fries and a pitcher of beer arrive. Her eyes light up as she digs into the well-fried delicately spiced fries and pours herself a tall glass. A squat, well-muscled man in an apron comes out and she gets up to hug him.\n\n\"Portman, how's it hangin'?\"\n\n\"To the left today Lou, to the left. You guys been out playin'? What's it like to be in the sunshine on a Saturday?\" He asks wistfully.\n\n\"It's hot man, you're not missing a thing. This is Dax.\" \n\n\"This is Portman, best burgers in town.\" He looks at me closely as I shake his hand. There's a commotion in the kitchen and he does a half-turn to look. \n\n\"Gotta go before they burn down the place, Just wanted to thank you in person for that citrus soap you sent from Florida Lou, gets all the grease off and doesn't take me an hour to do it. Meals' on the house.\" \n\nHe ducks back into the kitchen barking orders. \n\n\"That's 3 pounds of chuck you just charred, it's coming out of your pay!\"\n\n\"Free eats!\" Says Lenny.\n\n\"We are leaving him a fat tip, that man works damned hard, serving others is not easy.\" Says Lou.\n\nOur burgers come and they are everything that was promised. Lou tears into hers. \"You've got something on your chin. Says Harry. He goes to wipe it off, but Lou leans back, moving her chin away, using her wrist to wipe it off.\n\n\"Yep. Sauce on my face, crumbs in my cleavage, must be the weekend.\" Everyone laughs. Talk flows smoothly, easily. It's nice to see her so relaxed. They go back and forth her and her brother but they seem very close.\n\n\"I can't believe you roll with her in public. She eats like a baby hippo man. Look at her go,\" says Lenny.\n\n\"Blow me,\" Lou says making a rude gesture and biting into her burger again. She puts the burger down and drags an onion ring through the seasoned mayo and eats it with gusto.\n\nI follow suit, eating one of her onion rings and Lenny's eyes go wide with shock even Harry looks incredulous.\n\nI turn and look behind me but there's nothing there. I look at Lulu who shrugs and continues eating.\n\n\"Lou let you sample from her plate? It must be serious. Usually people draw back a nub.\" Says Lenny, him and Harry exchange glances.\n\nShe rolls her eyes. \"Because you two don't sample, you fucking eat it all. It's probably the reason I eat too fast to this day for fear I won't get enough in time.\"\n\n\"Yeah but still,\" says Lenny looking at me with something akin to awe. There's a different look on Harry's face though.\n\nShe purses her lips and exhales. \"Besides, he can cook and at least replace what he eats unlike you guys. Ain't that right baby?\" She turns to me for a kiss and I oblige. She tastes of pickles. \n\nLenny shakes his head, but Harry continues to look strange.\n\n\"Harry you got some new ink, let's see that.\"\n\nHarry pulls his t-shirt aside, proudly revealing a wild tattoo extending down his shoulder and back.\n\n\"You went tribal this time, huh?\" Lou traces it with her index finger as he flexes his shoulder and looks at me mockingly.\n\n\"Nice, but you better not let Aunt Arlene see that.\" Innocent enough, she's talking with her mouth full and has her burger tightly clutched in one hand, but watching her touch another man is a bit rough.\n\n\"One of these days we'll get you drunk enough to get in the big chair and get one yourself,\" he says to her.\n\nShe looks at him and shakes her head. \"I love the look, but I don't think so.\"\n\nJust as well as I don't like the thought of her beautiful flesh marred with ink.\n\n\"Alright guys lets move this along. Dax and I have errands to run.\"\n\n\"Oh do we?\"\n\n\"Yes, we do. My freezer is getting low and we are going to load up your truck with enough for a few months.\"\n\nLenny and Harry exchange looks again. Harry stops eating altogether and Lenny sighs heavily.\n\nLou watches for a beat. \"I tell you what, you two look like you have other things to do, Dax and I are going to call an UBER and go back to the house and let you two get on with your weekend.\"\n\nI follow her lead and we settle up and head out but I am curious.\n\n\"Harry is still slowly coming to terms and I think I've taxed him enough for one day.\"\n\n-\n\nWe go home shower and change and head back out.\n\nDax accuses me buying up the world. But monthly shopping is best, you waste a lot of precious time otherwise. We each have a shopping basket and I pile his with enough meat and bacon to feed a small army. \n\n\"It's handy having you here, I can do all the shopping in one fell swoop. Most of this is going to the freezer, I have the fresh fruit and produce covered I think so I wont have to do this again until like Christmas!\" \n\nI stock up on lots of toilet paper, detergent and dish liquid, nuts, cheeses and wine.\n\n\"We've gotta hurry, we have company this weekend. Babyfriend is coming to visit.\"\n\nHe smiles. \"The nephew?\"\n\n\"Yeah. I usually get him alone for one weekend a month, but Lili claims she's been giving us time to settle down. He's been with Uncle Jack and Harry the past two weekends but when I ran into Arlene and she all but said he's been driving her crazy. He's a handful and quick as lightning & those guys aren't always as attentive as they should be, something about his reaching the knobs on the stove and speeding up her baking to an alarming degree. Do you mind? I completely understand if you want to take off.\"\n\n\"Not at all, I love little people.\" \n\nOuch, that again.\n\n\"I wasn't hinting or anything, so don't take it that way.\"\n\n-\n\nWe go to the Yellow Umbrella for her fancy charcuterie and fish. The nephew is old school and loves chicken and fish and greens and corn on the cob. He eats seriously for a little tyke. We get to the house just as Lili pulls up.\n\n\"Aunt Lou!\" He comes running up as soon as we step out the car and she sweeps him around tickling him mercilessly, speaking in a gruff witchy voice. \n\n\"The tickle monster loves you, she misses you!\" She's got him down in the grass, tickling him mercilessly. I wouldn't expect this of her.\n\n\"She missed your nooks and crannies, but she especially missed the pit! The pit of despair!\" She pulls his arm up tickling his armpit as he screams and laughs eventually wiggling out and running away.\n\nLili shakes her head and looks at me. \"In the grass Lou? Thank god I gave him Benadryl.\" Looking sympathetically at me she says, \"Good luck with these two.\"\n\nShe catches and kisses her son, hugs Lou, waves goodbye and leaves. We start taking things inside. ",
        "I'm a little concerned as I notice that Lili left no clothes or toys for that matter. He's quietly watching cartoons right now, but that won't last I'm sure.\n\n\"Babe, what are we going to do with this little guy?\"\n\n\"He's got toys in the garage and there's a basketball hoop. Ask him what he wants to play, he'll tell you. I'm kind of glad you're here, you can keep him occupied while I cook.\"\n\n\"What you got to trade for small favors like that?\"\n\n\"I'll think of something, but this will have to tide you over.\" She slides her arms around my neck and lays those luscious lips on me. Before it gets really good Jackson pops into the kitchen.\n\n\"Ooh Aunt Lou! Is he your boyfriend?\"\n\nWe pull apart and she looks a little embarrassed. She clears her throat.\n\n\"Yes, this is Aunt Lou's boyfriend.\"\n\n\"Cool. I have a girlfriend.\" He informs us.\n\nHer eyes widen in mock surprise. \"I thought I was your girlfriend?\"\n\n\"No, you can't be my girlfriend, you're too big!\" She laughs.\n\n\"But we still like each other right?\"\n\n\"Yeah.\" He gives her a big hug, letting her down easy, well on his way to being a heartbreaker.\n\n\"Can I have chicken and cupcakes?\"\n\n\"You can have chicken and after dinner you can have a cupcake.\"\n\nShe looks at us both. \"You know Uncle Dax is a pretty good basketball player. I bet if you ask nicely he'll play with you.\"\n\nHe turns to me shyly, looking at me with big golden hazel eyes that are hauntingly familiar. \"Can you play with me?\"\n\n\"Yes, I'm so glad you asked. Aunt Lou only let me out to play once today and then she made me do a lot of homework.\"\n\nShe shakes her head. \"Jackson, show him where the toys are.\"\n\nHe takes my hand in both of his tugging me away from the kitchen. He's got a lot of energy; we play for a solid hour and a half - basketball, football, and soccer. If we weren't called in for dinner I think he'd go until he dropped. \n\nHe eats hard, we both do. Watching us with a bittersweet look she sighs and pushes away from the table. She starts to frost the cupcakes from a pastry bag. Her hands are shaking. I get up and go over and take the pastry bag from her.\n\n\"Go take a little break.\"\n\nShe sits down with Jackson while I frost the rest of the cupcakes and start cleaning the kitchen.\n\n\"Are you going to eat that chicken Aunt Lou?\" He points to a piece on her plate.\n\nShe laughs. \"That would be your 3rd piece, can you eat it?\"\n\nHe nods quickly.\n\n\"You don't want to save room for cupcakes?\"\n\n\"I have room.\"\n\n\"Hmmmm . . . I don't know. Let's see that tummy?\" He pulls up his shirt and she puts her ear to his stomach and listens carefully. \n\n\"You only have a little room left. Tell you what, give me a kiss and I'll give you half of this chicken tender and you can have your cupcake after you take your bath ok?\"\n\nHe gives her a kiss and a hug.\n\n\"Mmmm . . . tastes like chicken.\" She blows a rude sounding kiss on his neck making him laugh.\n\nWatching those two I'm getting a little choked up myself. She's amazing with him. Why doesn't she want kids? I finish cleaning the kitchen while she bathes him. They're in the guest bathroom, which has a large claw foot tub. I look in and he's got a ton of toys in the tub.\n\nThey talk about school and movies, as she washes him.\n\n\"Alright buddy, you've got 10 minutes to play and then it's out,\" she announces. \n\nShe has clothes for him in two of the drawers of the large Highboy in the corner of the guest room. He's quite the cutie in his pj's. She puts some socks on his feet and we tuck up on the couch with cupcakes to watch 'Wreck it Ralph'. \n\nThree hours later, I come to. She's asleep leaned back against the arm of the chair with her legs thrown across my lap and Jackson is passed out on top of her, softly snoring, his breath gently moving the edge of the blanket wrapped around him. I pull her toe to get her attention. \n\nOpening her eyes she focuses slowly and looks down and smiles. Jackson moans groggily and she gently swings her legs to the side and leans him back in her arms before standing and walking down the hall. Passing the guest room she enters her bedroom and turns on a dim far corner lamp and puts him in the center of her bed. Taking his temperature with the back of her hand to his forehead and neck she pulls the covers over him and we quietly leave the room, door open and lamp on.\n\n\"Damn, I forgot to make him brush his teeth. He's a baby yuck-mouth as it is, mouth so full of fillings I'm surprised he doesn't transmit cable.\"\n\n\"So he sleeps with you?\"\n\n\"When he comes here, yes. I don't want him waking up scared and alone.\"\n\n\"How about coffee and cupcakes?\" She asks.\n\n\"Lulu, it's too late for coffee.\"\n\n\"It's too late for your beloved espresso, but it's never too late for coffee.\" She smiles. Another of her quirks, the late night coffee drinking. She'll sometimes drink half a pot and then go to bed, and then express surprise when she doesn't sleep the night through. I shake my head at her.\n\n\"I'll watch you with your coffee.\"\n\n\"You're no fun.\" She says, wrinkling her nose at me. Putting on some soft music she breaks out a French press and we wait for the water to boil. \n\n\"Good thing I baked extra.\" Pulling out a tray, she stuffs an entire mini-cupcake into her mouth. I can only shake my head as she picks up another and licks the icing off it.\n\n\"It's just gonna go straight to my ass, which you claim you can't get enough of, more to love, it's a win-win.\" She shrugs and stuffs the rest of it in her mouth and picks up another. I laugh softly. \n\n\"You're serving no purpose except to mess up your jump-shot. You'll never achieve lift-off with all that back there.\"\n\nLaughing, she pours herself a cup of coffee and talks non-sense. Is this what family life would be like, sneaking cupcakes late at night like naughty children, because it's looking damned appealing. \n\nShe's looking like a cupcake herself. We could do something with all that extra frosting. Hmmm . . .\n\n\"Dax?\"\n\n\"What?\"\n\nShe arches that eyebrow and it only stokes my desire. \"I know that look, and it cannot happen tonight.\"\n\nI grab her and kiss her good and proper. \"Your sister will be back tomorrow won't she?\n\nShe laughs. \"Yep. Think you can hold on til then?\"\n\nI nip at her neck and rub her nipple through her shirt. \"What time?\"\n\nShe shivers and laughs. \"I don't know exactly, but she'll be here well before dark.\"\n\nI growl low in my throat and she laughs.\n\n\"See, life with children ain't all it's cracked up to be, now is it?\"\n\nI smile and hold her tighter. We shall see. I can't wait to knock her up, or die trying. She's always going on about not wanting children, but with the exception of condoms she's firmly anti-birth control, won't pop a pill of any kind to save her life, something about hormones and it not being safe. \n\nHell, Lulu even forgets to take aspirin for headaches. Tequila seems to be her hardest drug. From her reaction during dinner I think she wants a baby so bad she can taste it. \n\nWas her childhood really that fucked up? Doesn't seem like it. My guess is she's scared shitless. Next time she decides to jump me with no condom I'm going to take full advantage. Which if I know right should be about next week. Living with her is all about rhythm. Next week she ovulates, which makes her frisky, aggressive and reckless. \n\nA pregnant Lulu. I wonder how big those tits will get. I can almost see it now.\n\nShe steps back and looks at me with eyes narrowed, tilting her head to the side. \n\n\"What are you up to? You look wrong.\"\n\nI smile as I pick her up and sit her on the counter and continue to kiss her. \n\n\"I've got plans for you sugar-butt.\" I press into her and she gasps. \"Big plans.\"\n\nWith a naughty look of her own she unzips my jeans and strokes me, kissing me and putting my hand under her shirt. She purrs and continues to stroke me with a firm hand and just when I'm at the brink she stops.\n\n\"Not tonight you don't.\" She laughs at my shocked expression, kisses me quickly and runs from the kitchen. I'm right on her heels as she runs into the bedroom putting her finger to her lips shushing me. She points her chin in the direction of Jackson, absolutely grinning as I gesture desperately to my still hard dick. She shrugs and pulls out pajamas and throws me a pair and puts on a pair herself. \n\nWhen did she buy pajamas? \n\nWe kiss and drift off to sleep with the little man between us. Hmmm . . . is she trying to make a point here? I manage to find her small warm hand and hold it and fall asleep.\n\n_________________________________\n\nWe're up early the next day with Jackson. We have pancakes and then it's on to the park. We pack up the leftover chicken and cupcakes grab some bikes load everything in the truck and head out. \n\nIt's a beautiful day and so the park is relatively full. It's starting to get warm out. We ride bikes for a long while until Jackson gets bored. He's restless and upset that we didn't bring the scooter.\n\n\"Hey little man I've got a football, you wanna play?\"\n\nI wanna play basketball. He's pouting lower lip poked out, looking a lot like his Aunt in her less than finer moments. \n\nLou smiles and tries to rescue me.\n\n\"Sweetie love there's no place around here to play basketball. You could play soccer instead.\"\n\n\"I wanna play basketball!\"\n\n\"Someone needs a nap.\"\n\n\"No nap!\" He takes off running, and almost reaches the street before we catch him. She hauls him back to the blanket and sits him down.\n\n\"Alright buddy, you are testing the friendship.\" She eyes him with disapproval, looking quite intimidating. I've seen that look all too often at the office. He quiets down. \"Are you hungry?\" She asks.\n\nHe nods and she removes a piece of chicken and a cob of corn from the basket and gets a juice box out of the cooler for him. \"I want apple juice, not this.\"\n\nShe takes a deep breath of restraint and gets him an apple juice. Looking at him she gets a faraway look in her eye. Speaking out loud to no one in particular she holds up a piece of chicken and says, \n\n\"You know everything that looks and tastes like chicken is not necessarily chicken. This one time I landed in Chiang ka Sek, China and I got lost in the marketplace shopping for spices. I came around a corner and saw what looked to be strange pieces of roast chicken hanging in the window, for sale. I was so hungry I decided to buy some. The shop person said, 'You nice American Lady you don't want to eat that'. I said, Why not? I love chicken.\n\nHe said, \"that's not chicken.\"\n\nI said, \"Well it looks like chicken.\"\n\nHe said, \"Those are bad children.\"\n\nI said, \"What do you mean bad children?\"\n\nHe said, \"They were bad, naughty, Wouldn't listen, we have so many children here anyway, no one misses the bad ones, so we cook them up, we don't have much chicken but there are plenty of bad children.\"\n\nShe gives Jackson the side eye; his eyes are as round as saucers. She continues.\n\n\"Yep, roasted children. I wanted to say no but I was lost and very hungry, and it did smell good and you should always try new things when you travel. The cook offered me a piece and I didn't want to be rude so I tasted it.\"\n\nShe peeps at him again. His mouth is open as he hangs on her every word.\n\n\"I said, tastes like chicken, but almost better, just needs a little salt. I can see why you use little bad children, lean but juicy.\" \n\nShe picks up her chicken and takes a bite. \n\n\"Luckily we have lots of chicken in this country and it's against the law here to eat children, even the bad ones.\" She looks at him pointedly. \n\n\"But I tell you every now and then I think about that piece of bad child leg that I ate and I miss it. That leg was just about your size too.\"\n\nShe looks at his leg, sighs wistfully and goes back to eating her chicken. Jackson very quietly pulls his shirt over his legs. I shake with silent laughter as I look at her and shake my head. Maybe she doesn't have the maternal instinct after-all. But her story does have the profound effect of rendering him positively angelic for the remainder of his stay. \n\nWhen his mom comes to get him 3 hours later he's very happy to see her. He says goodbye to me, dutifully kisses his aunt and gets in the car and fastens his seatbelt and quietly waits.\n\nLili goes, Uh oh, what happened?\n\n\"Nothing I couldn't handle.\" \n\n\"What horror story did you tell my baby this time?\"\n\nLou rolls her eyes.\n\n\"You mean she's done that before?\" I ask.\n\n\"Oh they hate to see Aunt Lou coming round at the family reunion. Grimm has nothing on her tales of what happens to naughty children. So what was it this time? I need to know what I have to unravel when I get him home.\"\n\n\"They eat bad children in China due to a chicken shortage and a high percentage of bad children that's all. Oh and the bad-child leg I happened to eat was about his size and very tasty.\"\n\nLili shakes her head. \"You are sick Lou.\"\n\n\"Whatever; it's better than popping him, which I don't like to do.\"\n\n\"No, you prefer to psychologically scar my child.\"\n\n\"I do it with style and that's what counts. Besides, they're like goldfish, no short-term memory whatsoever. By the time you get him home he'll have forgotten all about it. Stop bickering with me. You have a child sitting in a car on a warm day.\" \n\nShe looks pointedly in the direction of the car.\n\nLili runs to the car, quickly rolling down the windows and cranking up the AC. She glares at Lulu who opens the back car door and gives Jackson a final tickle, kissing him and telling him that the tickle monster will be by to visit him soon. We wave as they back away and Jackson yells out, \"Bye Uncle Dax!\" little hand waving out the window as they drive off.\n\nI turn and look at her and shake my head.\n\n\"What?\"\n\n\"You. You're rough with everyone.\"\n\n\"When they get abusive, yes, without exception. I love my babyfriend to death. Just holding his little hand is my favorite thing in all the world. I'd gladly give up both kidneys and lie down in rush-hour traffic to save his precious life, but I will not let him or anyone else persecute me. We have these bouts, but he'll be back. He loves my cupcakes.\"\n\nI look at her doubtfully. She's a little scary. Hmmmm . . .\n\n\"I thought I was your favorite thing.\"\n\n\"Well you're getting there, more like number three, at best a tie in with a good steak at number two. But you're doing pretty good to be at number three already.\"\n\n\"Tell me more about this tickle-monster?\n\nIn a witchy voice she wiggles her fingers. \"Oh the tickle monster likes good boys and girls, she loves their nooks and crannies and her favorite spot is the pit of despair. Would you like the tickle-monster to visit you? Have you been a good little boy?\" She looks quite crazed as she approaches.\n\n-\n\nMy plans for sugar butt are quickly curtailed as the workweek finds us super busy, and it spills over into the house. I'm planning, overseeing and re-structuring 3 major Tech acquisitions and she's working the other side of it tying up contracts, reviewing my planning and asking questions, making notes and tweaking things. \n\nIt's nice working together, but its still work and it takes a toll. We've been 'just sleeping' for the past few nights, working late and ordering take out. Thursday evening finds us working in bed no less, laptops open, papers and the remnants of dinner spread around us. \n\nWearing a pair pj's between us. I happen to glance over, noticing her legs for the first time in days. Maybe it's just the angle, but for her to be so short she's got a long leg. I wonder if she's wearing panties. \n\nShe's got her law books piled around studying and making notes, pencil in her hair, so pretty in her glasses, an ink pen clenched in her teeth, leaning over to read from a book as she types, hmmm . . . cleavage. \n\nThat's all it takes to get me going. She's preoccupied though. I stand up and stretch taking off my t-shirt. She's still typing away. \n\n\"I'm going to the kitchen, want a glass of water or something babe? \"\n\n\"More coffee maybe, thanks.\" She turns my way and smiles faintly but her eyes don't leave the screen. Couldn't even get her to look at me, not a good sign. But I know her and everything stops for tea especially if pastries are involved.\n\n\"Coffee and computers don't mix, you're gonna have to put that aside.\"\n\n\"Just a sec.\" She holds up a finger, finishing a thought before finally putting the laptop aside.\n\nShe smiles at me appreciatively. \"Topless coffee shop staff, I approve.\" She quickly eats half a pastry and sips at the coffee. \"Oh, that's good.\"\n\n\"I got the sugar right?\"\n\n\"Yep. I like my coffee like I like my men, bold and sweet.\" She smiles at me before taking off her glasses and stretching her neck til it cracks.\n\n\"Stiff?\"\n\n\"A little bit.\" \n\nI rub her shoulders and she sighs contentedly letting her body fall back against me. She gives a familiarly throaty laugh. \n\n\"I'm not the only stiff one.\" She sighs, turning and shifting her body so that she's lying back across my lap. She places my hand inside her pj's and looks at me. \"Yes, please.\"\n\nI unbutton her top. \"Look at that.\" \n\nBending down, I pull at a nipple until she clutches my head and sighs. I move us down the bed, away from our makeshift work area. As I put her legs around my waist, I catch a glimpse of us in the mirror off to the side and she follows my gaze, watching as I fondle her. The sight of us seems to further excite her, her eyes close involuntarily a few times but she can't stop watching. \n\nShrugging off the top she pushes me back on the bed before taking me in her hand and lowering herself onto me. She moans in pleasure and starts to move using our entwined hands for leverage as she moves faster and faster. Feeling that telltale stiffening I know she's close. I want to prolong it but it's been days and as she puts her arms around me and moans into my mouth I come with her. \n\nWe fall asleep and when I wake up still inside her it starts all over again and goes on for the rest of the evening.\n\n\"You do realize we've been at this for hours with no condom?\"\n\n\"It's perfectly fine. I know my body.\"\n\nI shake my head at her stubbornness. \"Fine, but the minute you get knocked up we're getting married and that's the end of it.\"\n\nShe rolls her eyes. \"Please.\"\n\n\"I'm sick of this bullshit Lou. I know you love me. When people love each other they get married.\"\n\n\"Whatever Dax.\"\n\nShe doesn't deny it. But she doesn't admit it either. \"You little punk.\"\n\n\"Name calling, mature.\"\n\n\"It's not name calling. It's a fact. You, Lou James, are scared and you know it.\n\n\"I'm not scared. I'm perfectly fine with things the way they are. \n\n\"Yeah, well maybe I'm not.\" I say angrily. \n\nShe takes a wincing breath. There will be no apologizing or retracting the statement. I watch carefully as she gets up and replaces the pajama top before gathering her briefcase, laptop and papers and leaving the room without a word. I hear her go down the hall to the guest bedroom/office and lock the door. I can hear her typing. I go back and fire up my laptop and do a quick remote hack into her computer. She's working when I pop into her screen.\n\n\"I wasn't done talking.\"\n\nI can hear her groan in exasperation. She comes back to the bedroom.\n\n\"You wanna have it out? Fine let's have it. You knew my bottom line when we started this and now you wanna change things. Why am I not enough?\" Her voice cracks as she says that last part breathlessly.\n\n\"You're more enough. You're too much.\"\n\nShe shakes her head. \"I don't know how this can work. I told you from the start you needed someone traditional. We want different things, and now . . . if I'd known.\" She groans.\n\n\"Now what? If you'd known what?\"\n\n\"I wouldn't have done it. I shouldn't have, it was damned irresponsible of me.\"\n\n\"Falling in love with me was irresponsible?\"\n\n\"Love? Let's not be rash.\"\n\nI know for a fact that she does indeed love me.",
        "\"Dax, we should take a break, use the time to gain perspective. Don't look at me like that! I'm not calling it off, but I need a moment here and I think you do too. It's all happening too fast.\"\n\n\"More space is the last thing we need. If I leave, that's it. I'm not going through that again!\"\n\n\"You're killing me! I'm doing the best I can. I'm trying; you have no idea how hard. But you want so much! This is why I don't do relationships. The moment someone gets how much you need them they hit you with ultimatums and threats.\"\n\nProgress. I sigh with relief. I reach out to hug her and she backs away.\n\n\"So, the monster bleeds and feels after all. It's heartening to know you care and would actually miss me if I left.\"\n\n\"That's manipulative not to mention more than a little sadistic. You picked the wrong button to push.\"\n\n\"A good fight is never fair. How else am I supposed to know how you feel? It's not like you'd tell me or give me a straight answer if I asked. As it is, you're standing here now doing your little dodge and not owning up to it.\"\n\n\"I am not going to be railroaded on this Dax.\" Heaving breasts, flared nostrils, she's not been this angry in a minute and it's kind of a turn on.\n\n\"Come over here.\"\n\n\"No. And don't even look at me like that. We're done for the night.\"\n\n\"So says you.\" I reach out and grab her anyway and for a moment I have quite the fight on my hands as she struggles. I manage to get her to the bed and tightly clamp her legs between mine. I brave a few stinging slaps before successfully pinning her hands above her head with one hand. I go to kiss her but she tries to bite me. I laugh out loud.\n\n\"Let go of me!\" She's livid.\n\nI take my time and open her pajama top. I slowly stroke her breasts, belly and sex watching with satisfaction as she involuntarily tilts herself towards me frowning the entire time.\n\n\"Stop it Dax! I mean it. \"\n\n\"Do you? I don't think you do.\" I stroke her again. \"You want me to stop?\"\n\nHer eyes close as she groans. I slip a leg between her thighs, pinning them open with my knees. Again with the lightest of touches I stroke her.\n\nArghh! She bucks wildly as I slip easily into her.\n\n\"You want me to stop?\" Her eyes have rolled back in her head and she's panting my name and spasming around me uncontrollably.\n\nMan the hot tight silky feel of her is incredible. \"I should put a baby in here, right up in here, right now shouldn't I?\" I push deeper into her and press on her little clit again.\n\nShe's nodding and whispering breathlessly; I lean down to listen and she's saying things that would make Caligula blush. I release her arms and she throws herself at me. Forty-five energetic minutes later we fall away exhausted. We've not resolved anything but it's a damned nice way to end an argument.\n\n-\n\nI'm sore in new places after last night's ordeal, sex has become my new cardio routine which is fine but honestly his constant pressure is starting to wear on me. I need a break. It's 5:05 am. I've not been up this early in a while. Having kept to my side of the bed, it's easy to slip away. \n\nI locate my pack of emergency cigarettes find my cell phone and slip outside. I've been hiding it like a fiend but of late I find that I've needed and positively craved nicotine. I have to be careful though as my craving for certain pleasures tend to veer off towards compulsions, Dax being a prime example. \n\nI text June, Eddie and Lili.\n\n- In desperate need of a night on the town. Ladies only! If you can make it, drinks are on me - TJs?\n\n-L\n\nThe prospect of a few hours of good food and dirty martinis with my girls have me feeling better already. \n\nTiptoeing back to the bedroom I look at him. He's beautiful, really he is and I do love him but I will not be goaded. I don't think my saying it would be enough. It'd only serve to open the door to that other discussion that eventually we are really going to have to have. \n\nHe's sweet but he's a determined cusser! Why is what we have not enough? That tactic of his, threatening me just to get a rise out of me. I so completely lost my shit I couldn't even make a proper argument. Some lawyer I am. \n\nHe moves in his sleep and I freeze watching him throw out an arm searching for something, most likely me. He settles down again. I may not have much time. I turn on the light in the bathroom and shut the door. If he happens to open an eye he'll see the light and just think I'm in there. \n\nHaphazardly gathering undies, a dress, heels and blazer I quickly leave the room. I need a bra but there's no way I'm going back to the bedroom, to hell with it. I'll just have to wing it today. I quickly shower in the guest bathroom. I forgot the deodorant. Fuck it, I'll pick some up on the way in. I know it's cowardly, but I just cannot deal right now. I quickly dress. I stow the laptop and papers in my briefcase and leave for work at 6:00 am. \n\nI've got a shitload of paperwork and if I'm going out to play tonight I'll need the extra time to work. I stop at the drugstore for deodorant and hair ties, grab a coffee, muffin and a small bag of almonds at Starbucks and head into the office. It's 6:20 am and wonderfully quiet. In no time it's 11:15 and I've completed a day's work. \n\nMy door is always shut and I deliberately parked in a different lot, and since June is taking a half-day working only this afternoon, no one knows I'm here, there've been no interruptions or distractions. I turned off my cell and have been working off-line to stay under the radar and it's been so productive I'm thinking I should do this more often. I even have time for a long lunch and a disco nap on my lovely green sofa to be refreshed for the evening's activities. Two minutes after logging in to upload files, my desk phone lights up. Dax. I grimace as I pick it up.\n\n\"Yes.\"\n\n\"You ok? You were gone when I woke up.\"\n\n\"I'm fine. I just had a lot to do and thought I'd get a jump on things.\"\n\n\"Oh. Ok. I found cigarette butts outside in one of the planters?\"\n\n\"They're mine.\"\n\n\"Since when do you smoke?\"\n\n\"It's not habitual, just occasional.\" In moments of desperation to help me take deep breaths even if they are smoke filled.\n\n\"I see.\"\n\nDigging my phone out of my purse, I power up and sure enough there are several missed calls from him and texts from my girls. I smile and text them back quickly confirming our arrangements. Drinks at the Jefferson, the best dirty martini in town.\n\n\"I can hear you texting. What's up?\"\n\nJeez, he can hear that? Ears like a fucking cat! I can't believe I managed to escape this morning.\n\n\"I'm going out with the girls tonight. We've not done it in ages.\" He's silent for several moments.\n\n\"I see. Well are you at least free for lunch?\"\n\nI was planning to lunch with Eddie, but if I can placate him . . . \"Sure.\"\n\n\"Good.\"\n\nHe sounds relieved.\n\n\"I didn't see your car in the lot. Where'd you park?\"\n\n\"I'd rather not say.\" Looking out the window it's well hidden by the trees and bushes. I smile to myself.\n\n\"I'll see you shortly.\" Click.\n\nShit. Needing a buffer zone, I call June into my office under the auspices of discussing the calendar and some contracts. There's not much to actually discuss as I've done most of the editing.\n\n\"I'm excited about black dress night; it's been a minute since we got out there. Let's see that dress.\"\n\nI remove my jacket and give a little twirl and actually laugh. A black silk jersey halter dress, with a long close fitting jacket it's modest enough for a Friday, but it drapes quite audaciously in the back.\n\n\"You look mighty good Ms. Lou.\"\n\n\"That she does.\"\n\nI turn to find him leaning against the wall just inside the doorway, watching me.\n\nJune clears her throat. \"Alright then, well this is my big chance to clear my desk for the week since most of the big wigs are at an off-site meeting. I'll see you after work Lou, later Dax.\"\n\nShe smiles at us both and quickly leaves the office shutting the door. Which he then locks, and leans against, effectively trapping me. God help me. He's wearing a suit and tie today for some reason. He had a big meeting this morning I remember. He looks good. He walks around my desk and leans against it looking down at me inscrutably. \n\nWhy do I feel as if I'm in trouble? I've done nothing wrong. Standing, I roll the office chair in front of me as nonchalantly as I can. I'm suddenly acutely aware that I'm wearing a rather skimpy dress in a room with a locked door and that most of the staff are gone on either vacation or at the off-site meeting. \n\nHe looks around briefly.\n\n\"Why is it I've never been in here? You have a sofa. Get your jacket. We're going for an early lunch.\"\n\nHe's up to something. I put on my jacket and grab my purse as he opens the door and waits. I can't help but bristle as this opposes my no contact in the office stance. To his credit, he doesn't touch me. Hopefully to outside eyes it looks merely as if we're two colleagues going to lunch. \n\nWe walk out to his truck, which is impossibly high off the ground. I've placed my foot on the step and am still determining how to get in without possible scandal when he simply lifts me and places me on the seat. Mortifying but kind of hot too.\n\n\"We could have taken your car. But you prefer hiding from me.\" He sounds peeved.\n\n\"Where are we going?\"\n\nHe smiles darkly. \"Lunch.\"\n\nOk. I've not seen this side of Dax, it's a little scary. He's clearly miffed with me which I get and don't get. We had our usual argument and makeup sex. What? He's intent on playing the long game of making me the little woman. House, kids the whole bit. And I know he's rapidly losing patience. \n\nWhen he finds out the reason behind it all he'll be gone like a shot. My stomach drops each time I think of it. Its so comfortable having him around I just can't bring myself to broach the subject yet. I really like him even though it's kind of weird how much he reminds me of my . . . \n\nWhy are we pulling up to the Westin?\n\n\"Dax, I don't have time for this. I've been up since 5 and am actually hungry.\"\n\nHe says nothing as gets out and comes around opens the door and sets me on my feet.\n\n\"Your calendar is free until 3:30, its 12:03. I've ordered lunch it should be here by 1:30. We have over three hours. Come.\"\n\nHe's steering me across the parking lot, his hand at the small of my back. I don't buy this courtly act for a minute. I'm beginning to recognize him for the stealth brute he truly is. I can't believe I ever thought otherwise. He's no gentleman, he's just wolfishly patient. \n\nHe checks us in for two nights. I frown at him but he says nothing. I've not seen him this serious before. I think he's finally snapped a little. I'm concerned.\n\nRoom 608 sir, says the concierge, handing him two access cards. \n\n\"I'm expecting a delivery from Peter Chang's at 1:30, if you'd be so kind as to ring the room when it arrives before bringing it up that'd be great and provide some plates, glasses, silverware etc. we'd appreciate it. Thank you.\"\n\nAs we walk away the desk-staff look perplexed and whisper amongst themselves. \"I don't know who they are but Peter Chang's does not deliver, hell they don't even allow take-out. They must be important I guess.\" \n\nAgain he ushers me to the elevator. It's a speedy ride to the 6th floor and I'm practically running out of my shoes to keep up with his long strides as he all but drags me down the hall. His impatience is showing though as he can't get the key card to work properly. I gently take it and insert it and jiggle it a bit and the door unlocks. \n\nHe smiles briefly as we go into the room. He removes my jacket and stares at me.\n\n\"This is what you wear for a night out with the girls?\" He strokes my naked back sending fever and chills at the same time.\n\n\"It's black dress night.\"\n\n\"Is that so? You're not wearing a bra.\"\n\nI shrug as nonchalantly as I can. My tits are still good enough not to always need one.\n\n\"I see. And this slit is a little scandalous when you walk, quite a bit of naked thigh.\"\n\n\"Yes.\" I look him in the eye as he circles me removing his tie and jacket.\n\n\"A backless dress, panties, heels and no bra.\"\n\n\"There's a jacket.\"\n\n\"So there is. But you're not going to wear that later are you?\"\n\n\"No.\"\n\n\"Take off the dress.\"\n\nI remove it, laying it over a chair.\n\n\"Stand over there, where I can see you.\"\n\nI do as asked, this is interesting. He loosens his tie and rolls up his sleeves, places his arms behind his head as he leans back watching me. One foot is on the floor the other stretched out on the bed. Hot.\n\n\"Gone when I wake up, no note, no nothing. That's the second time you've done that. Sneaking cigarettes and now you're going to flaunt this all over town.\"\n\n\"A veritable catalog of complaints. I didn't realize you were keeping score. I'm going for drinks.\"\n\n\"Where?\"\n\nOk I'm getting a little exasperated here. \"I don't have a father or a curfew. I can do what I bloody well please. Out.\"\n\n\"Come here.\"\n\nHe's enjoying this.\n\nI lean down to kiss him but he moves his face away. What the hell?\n\n\"I want to kiss you there.\" He nods at my crotch. \"Then I am going to spank, fuck and feed you in that order. Maybe later I'll kiss your mouth.\"\n\n\"You're not serious.\"\n\n\"I am.\" He's pulled off my panties.\n\n\"I don't think so Mr.\"\n\nIn a flash I'm under him. \"Bare as a pork chop. What's that word you use? Chuleta?\"\n\nI rather like the feeling of his clothes against my naked body, oddly erotic. I'm worried about this spanking business though. It's one thing to smack my bottom a few times during sex but a full on spanking sounds different and as angry as he seems I'm not at all sure about it. If it gets to be too much I'll stop him. I don't have much time to dwell though as he's very gently lapping at my clit with his tongue, lick, suck, blow repeat.\n\nI come in record time. I'm still coming as he smiles evilly before quickly sitting up and bending me over his knee. I look back at him and laugh.\n\n\"You wouldn't dare!\"\n\nHe smacks my bottom hard several times, which sends me into another spasm for whatever reason. He turns me over and kisses me there again. When I'm on the verge of coming again he stops stands and removes his clothes.\n\n\"Come here.\" He positions me and quickly plunges in. Still sore from last night's exertions, I wince and he immediately stills.\n\n\"You ok?\"\n\n\"A little tender from last night.\"\n\nHis face softens. There's my Dax. I'm so happy to see him I kiss him.\n\n\"You make it hard for me to be a gentleman sometimes.\"\n\n\"You don't always have to be.\"\n\nI can see him struggling with the idea.\n\n\"You just spanked me. I actually kind of like it.\"\n\n\"You're small though and I forget that sometimes. I don't want to hurt you.\"\n\n\"I'm not small, I'm compact. And I won't break you know. I want to please you as much as you please me.\"\n\n\"You do please me, all the time.\"\n\n\"I wonder sometimes.\" I take a deep breath. \"Dax?\"\n\n\"What?\"\n\nI can barely look at him. \"Dax, I . . . \" It's important that I say it. He wants to hear it. I do feel it. He deserves to hear it.\n\n\"I know you love me. You talk in your sleep.\"\n\n\"I do not!\"\n\n\"So you don't love me?\"\n\n\"I do love you, but I do not talk in my sleep.\"\n\n\"You do, all the time. You say the naughtiest things too.\" His eyes crinkle as he smiles down at me teasingly.\n\n\"I could have been talking about someone else.\"\n\n\"No, it was me. You said my name, repeatedly.\"\n\n\"Fine.\"\n\n\"I wouldn't mind hearing it again.\"\n\n\"I love you Dax.\" I kiss him.\n\nHe groans and rolls away from me. \"You picked a hell of a time to finally say it?\"\n\n\"I didn't realize there was a right or wrong time.\"\n\n\"I can hardly fuck you good and hard after a confession like that. I was gonna put it on you too after the way you scared me this morning.\"\n\n\"You can be in love with me and still fuck me good and hard you know. It's totally doable. In fact, I insist on it.\" Running my hand down his chest I grab the joystick and squeeze. \"Just go a little easy at first.\"\n\nHe smiles and drags me beneath him again.\n\n_____________________\n\nIt's later than expected when the room phone rings, but the food is here at last. We put on our robes and he goes to the door and gets the food and plates and quickly arranges everything on the table. A feast of fish rolls, dumplings, cold noodles, asian greens, braised pork and baked lamb chops. \n\nThere's an extra box that looks suspicious. All this food and two bottles of champagne. I'm going to lock my door and take a nap when we get back to the office. I need the rest. I like it but he's been at me pretty hard lately. Last night and now this. \n\nUnlike him who manages to still run and play ball after working for hours on end, I've not been able to as I've been too busy working my ass off the last few weeks and it's starting to tell on me. More than anything I hate being tired, which does not bode well for me in old age.\n\n\"What's going on in that hard head?\" He's watching me.\n\n\"Just thinking maybe we should lunch like this more often.\"\n\nHe leans over and kisses me saucy lips and all. \"And so we shall. But I want you to have fun tonight and be back here at a respectable hour. No more smoking by the way. And if you're too twisted to drive, you'll call me.\"\n\n\"We're really staying here tonight?\"\n\n\"I like you in hotel rooms, nowhere for you to run and hide, makes you easier to keep an eye on. Besides, the room's paid for, so we might as well. I'll pick up a few things from home. So, in by midnight.\"\n\nHe's lost his mind. \"A curfew? Are you high? Look man, if I'm too twisted to drive I'll call. And that's as good an offer as you're going to get.\"\n\nHe sighs heavily. \"Fine, fine. Where are you going, at least tell me that?\" He's impossible.\n\n\"For fucks sake! If you absolutely must know we're going to the Jefferson for cocktails and a bite. We are simply four, tired black women who want to drink in a pretty, safe and reasonably non-threatening environment. There won't even be dancing.\"\n\nHe looks relieved and kisses me again quickly. What did he think I was going to do? These little possessive moments of his are occurring more and more frequently. He pours me another glass of champagne.\n\n\"That dress is awfully sexy for a quiet night out with the girls.\"\n\n\"Would you rather I went out and slutted it up a bit?\"\n\n\"Point taken.\"\n\n--\n\nI drive us back to the office. Today has been productive. I'm still not comfortable with her going out looking like that. But short of kidnapping her and locking her away there's not a damned thing I can do about it. We sit relaxing for a few minutes before going in. Lazily crossing her legs the dress slides back exposing her thighs. Round soft thighs. God help me I'm hard again, I cannot get enough of her, infinitely fuckable. \n\nShe catches me looking and smiles mischievously. Infinitely.\n\n\"Bet you wish I were wearing pants right now don't you?\"\n\n\"You are not to do that tonight.\"\n\n\"Humph. You're not the boss of me Dax.\" She laughs.\n\n\"I think we just proved several times over that I am indeed the boss of you. We could prove it again right now if you're not careful.\" I slide my hand up her soft thigh.\n\n\"Stop that! We're in the office lot.\" She clamps her legs shut and smacks my hand but I manage to insinuate a finger into her panties anyway and find she's wet. She groans as I stroke her.\n\n\"Dax, we can't do this.\" She says this but her head falls back. The windows are tinted and I'm parked in the shade, we have a little privacy here. I slide her across the seat.\n\n\"I mean to have you how, when and where I want to from now on. Understand?\"\n\n\"Yes.\"\n\n\"Good, now kiss me and come again for me before we go back inside.\"\n\nShe groans. \"You're trying to kill me.\"\n\n\"Stop talking.\" \n\nHer thighs, her waist, her silky round bottom, her back, her clit. I can't stop touching and kissing her and it's amazing after being inside her for almost two hours I still want more. ",
        "Subtle smell of perfume on her soft neck, those little sounds she makes every time I kiss a certain spot, juicy breasts naked and soft under her dress. I bury my face in her lap softly gnawing at her through the little panties until she comes again. My truck smells like sex. Her sex. This is my kind of heaven. \n\nShe looks sleepily disoriented as she lifts an arm and it falls back limply. She can barely move now. Reaching into her purse I take out her phone and call June.\n\n\"Hey June, no this is Dax, Lou had something for lunch that didn't sit too well. No, I'll get her something from the drugstore. No, I don't think she'll make it out tonight, she says to go on without her.\"\n\nManaging to sit up and lean back against the seat, she looks at me hatefully. \"You did this on purpose.\"\n\nI didn't think it'd work. I've watched her work 14 hour days, run and jump for an hour or more on the court but for some reason sex takes it out of her. She puts her whole body into it. \n\nI've been after her a lot lately. Hard lovin'. About the only time I have her full cooperation, hard lovin' it is from now on. Finally a switch for Lulu's ass. I smile at her tired and angry expression.\n\n\"We're going back to the hotel, you need to rest. Don't pout or I'll fuck you again before letting you sleep.\"\n\nShe reaches for the door handle and I quickly lock the doors. Hell I may do it anyway, just to be sure. I'm certainly up for it. \n\nThere's no need to carry out my threat though as she barely makes it through the hotel lobby. Once we reach our floor I simply pick her up and carry her down the hall. I lay her down and slip her out of her dress. \n\nShe moans in protestation as I wrap my shirt around her and put her under the covers she relaxes turns on her side and doesn't move again.\n\nNot even 5 pm and she's out like a light. Watching her I'm still too keyed up to rest. I'll go pickup some things from home. I pull the curtains against the bright daylight.\n\n____________________________\n\nAfter catching a pickup game with Lenny & Matt I go home and grab a few things and put them in a large tote of hers. Check the mail, re-set the alarm and go back to the hotel. It's almost 9:00 pm.\n\nAfter our midday feast she'll feel the need to repent with salad. I call ahead to the hotel and place an order for room service. By the time I swing by Starbucks for our favorite coffee it's 9:30. I get in to find her sitting up in bed, hair wild, red eyed, and shaking.\n\n\"Babe, what's wrong?\"\n\n\"Nothing, just bad dreams. I don't always sleep well away from home. I usually leave a lamp on if I'm alone.\" She looks at me accusingly.\n\n\"You're not afraid of the dark?\"\n\n\"No . . . but I . . .\"\n\n\"Come here.\" I gather her and kiss her hot eyes and cold nose. I pet her until she settles.\n\n\"Where were you?\"\n\n\"Playing ball with Matt and Lenny. Sorry I was gone so long.\"\n\n\"I've not been awake long. I'm hungry though. I think I want a salad.\"\n\n\"I already ordered one.\"\n\n\"Please, like you know me so well.\" She's got that eyebrow arched.\n\n\"Salmon Ceasar with extra bacon and croutons. And I got your coffee, I know you don't trust the hotel to do it right.\"\n\nShe smiles.\n\nAnd . . . I take out the box from earlier, Cupcakes.\n\n\"Kinda negates the point of the salad.\" She tries to sounds stern but is grinning like she just can't help it.\n\n\"Least I can do since I stole you away.\"\n\nA salad, coffee and cupcakes and her eyes are lit up like its Christmas morning.\n\n\"You do love me don't you? she asks.\n\nYou know I do. \n\nWe eat and shower together and fall asleep.\n\n--\n\nWhoa, head rush. I don't know what it is but I am completely out of sorts. Its just as well he's about to leave town. Not all periods are created equal and this one is three shades beyond the pale. \n\nWe've not had sex for a while now it's been two weeks and I miss him like crazy. I was willing last night but my body said no. He went to touch my breasts and for the first time I told him no and meant it. He held me and didn't push but I know he's frustrated. \n\nAs soon as this period's over I'm taking my ass to see Eddie. I don't think anything's wrong as I've been pretty vigilant, but you never know. I turn over and there's my gorgeous man of a man, sleeping peacefully. He'd better wake up soon though he's gonna miss his flight.\n\n\"Hey you? I poke him with my index finger. You'd better get going if you're gonna make it to beantown.\"\n\nHe opens an eye and rolls over towards me. \"In a hurry to get rid of me eh b\u00e9b\u00e9?\"\n\n\"Yes, I am. Now beat it!\"\n\nHe laughs though and kisses me and quickly rolls out of bed.\n\n\"Thanks for waking me, I gotta hurry.\"\n\nHe goes in and I hear the shower start. \n\nSitting up I fight down nausea and dizziness. I stand and quickly make my way to the guest bathroom, surprised there's not a trail of blood behind me. It's my second day, which is sometimes a little heavy. A tampon and a pad are usually enough to more than hold me even on the heaviest of days. The pad however is totally full. Amazingly there's nothing on my nightshirt as I strip down and step into the shower. \n\nI wash as quickly as I can, bleeding as I shower, which is unprecedented. This is bad. I'm seeing Eddie today if I can. Thankfully I have products here and clothes in the guest room so I fix myself up as best I can.\n\nI come out and he's in the kitchen having coffee.\n\n\"You want a cup?\"\n\n\"No, I'm fine.\" The thought of consuming anything warm right now is not at all pleasant.\n\nHe looks at me in surprise, but says nothing.\n\n\"So what are your plans while I'm gone?\"\n\n\"Babyfriend and I are going to make a weekend of it, he's got a few parties to go to, a puppet show and a new movie he wants to see.\"\n\n\"Playing mommy this weekend, eh?\" He rolls his eyes.\n\n\"No. I'm being a good aunt is what. Snuggles without the struggles. Who needs a baby when you have a babyfriend?\" I smile at him.\n\n\"That's some punk logic right there Lou.\"\n\n\"Meaning?\"\n\n\"You know you love children.\"\n\n\"I never said I didn't love children. I said I wasn't having any. For someone who claims to be fine with my not wanting children we keep having little bits of this same conversation. So let's nip it in the bud once and for all. I'm not having children. And no, I don't want to adopt. My stance on children is no. I've been straightforward about this. \n\nSo this is it. If that doesn't work for you or if it's something you're going to hang over my head for the foreseeable future then maybe this should be the end of it.\"\n\n\"You've not been straightforward at all. You won't even talk about it.\"\n\n\"I have talked about it. You're just not hearing what you want to hear on the topic. You on your way out the door is hardly the moment to have this discussion.\"\n\nWe both sigh heavily.\n\nI love you, Dax. I do. We will talk about it when you get back, I will tell you everything and we can go from there.\n\nHe kisses my forehead grabs his bag and leaves.\n\nAs soon as his cab leaves I text Eddie. Who arrives in a flash.\n\n\"I'm having the period from hell. There's so much blood and it's seriously painful. My left side feels warm to the touch and I'm hot and kinda nauseous. This doesn't feel right. Something's wrong.\"\n\nEddie looks at me carefully and gently takes my wrist. \"Your pulse is thready.\"\n\n\"Caffeine jitters, living on iced coffee of late. Work and life has been crazy.\"\n\n\"Lou, when was your last period?\"\n\n\"Oh god. You don't think?\"\n\n\"Try to remember?\"\n\n\"My mental math says it was like 5 or 6 weeks ago. I know I'm not regular but that's not too outside the norm. Is it?\"\n\n\"I'm going to have you take this OTC pregnancy test - they're pretty accurate.\"\n\n\"I'm having my period now. I can't possibly be pregnant!\"\n\n\"Indulge me for a moment here.\"\n\nA baby after the argument we just had. I laugh out loud. I've only known him for a hot minute. Perhaps he'll be the exception rather than the rule. It's just happened so goddamned fast. He does take great care of me. He would be a great father. \n\nThe timer dings and I watch as the stick turns its life-altering tell-tale positive color. As I come out Eddie looks at me and takes a deep breath.\n\n\"I see.\"\n\n\"This is the last thing I need. You wouldn't believe the argument Dax and I just had. Something's wrong though. There's too much blood for this to be anything but wrong.\"\n\n\"Try not to panic. We're going to the office so that we know for certain what it is we're dealing with. Come on, I'll drive.\"\n\nOn the way, she calls her assistant and asks her to come in. I've never known Eddie to drive this fast, we're there and parked in 6 minutes. We walk in and she presses a button and asks for a room prep and an assistant.\n\n\"You'll need to take off your clothes hop on the table and make yourself as comfortable as you can. I have to do a trans-vaginal ultra-sound.\"\n\nI groan. \"But there's so much blood.\"\n\n\"Yes, I know but it's ok, the table is covered with padding. I have to see what's going on in there and this is the best and quickest way. You want to call Dax?\"\n\nHe'll completely lose it. He's on his way to his big Boston meeting. I shake my head.\n\n\"No, one thing at a time, he will freak the hell out either way and I can't deal with that right now.\"\n\nEddie looks at me, but says understood. \n\nShe gathers the equipment, puts on some gloves and has me lie back on the table. I close my eyes as she lubes up the wand. She very gently inserts it, but there's no getting away from the pain of it. She sees what she needs to see and comes out quickly.\n\n\"Lou, you have what's called an ectopic pregnancy. The pregnancy has happened in your fallopian tube.\"\n\n\"What are my options?\"\n\n\"Fortunately, we caught it somewhat early, nothings ruptured and we should be able to resolve it with a drug. This will cause the pregnancy to terminate.\" Eddie sighs deeply.\n\n\"Dax will never understand this. He's going to think I did this deliberately. It can't be saved? Transplanted somehow?\"\n\nEddie swallows hard and takes my hand. \"Not without putting you in serious danger. I'm sorry this is happening to you. Are you sure you don't want to call Dax?\"\n\n\"Why? There's not a damned thing he can do about it, is there. I can't have babies, we know this. I'm just not built for it.\"\n\n\"Don't say that Lou. There's nothing wrong with your body. Between myself and Greenbrier you've been worked up for just about any and everything. You've just had a bit of bad luck is all. You got pregnant and that's - \"\n\n\"Just stop Ed, alright? Children are out of the question.\"\n\nEddie grimaces and grips my hand tighter. I pat her hand as she seems to need reassurance too.\n\n\"We're keeping this between us. This is no one else's business. Not Dax, Uncle Jack, Lenny, not even Lili this time. Okay?\"\n\n\"I'm bound by patient confidentiality and you are in fact my patient, but you're also my friend, I'd never tell a soul Lulu.\" She gives me a hurt look.\n\n\"Forgive me. Being out of sorts is turning me into an even larger jackass than usual right now.\"\n\n\"Out of sorts is an understatement, but it's ok. I'm here, whatever you need. For now just try to calm yourself as best you can. We're going to do this and then I'm going to monitor you for a few days, while your body sorts itself out. You're coming home with me. Period.\"\n\n-\n\nWhat wakes me is the absence of pain. The horrible cramping has stopped and I think the bleeding is now under control. I actually feel somewhat rested. I ease out of bed and make my way to the bathroom to check the large sanitary pad. Bright red and copious but no longer gushing. \n\nI manage to change and clean up a bit. I take a glass of water out to the front porch. The chickens have the run of the place and I manage to disturb two misplaced souls as I go to sit in a rocking chair. Puffed out, they squawk at me indignantly before fluttering down the stairs and strutting off into the bushes, huffy little Bantams.\n\nI like it out here at Eddie's, it's quiet but there are lots of night sounds. Cicadas, crickets, a confused rooster crowing somewhere off in the distance. Mainly I hear frogs, which is fine as long as I don't have to see or encounter them. Harry was particularly bad as a child, chasing me and trying to place them on my bare skin. \n\nThese creatures sound huge too, like bullfrogs maybe. I shudder.\n\nThese are welcome thoughts, but those unwelcome thoughts quickly take over. How in the hell am I going to tell Dax? He's going to think I did this deliberately. He's back from his trip. I've put off seeing him telling him I wanted some girl time out on the farm and he's not said anything but he knows something's up. I've been texting him, but I've not been home in 3 days. \n\nPregnant, and now not pregnant. And that argument we had before he left. He's getting more exasperated with me by the minute. I can't say I blame him. But I'm doing the best I can. I've explained more and talked more to him than I have anyone ever and it's still not enough, he wants to get at and own some part of me. \n\nI love him to death and I've told him as much but it's never going to be enough. He wants marriage and children, no matter what he says to the contrary. Not fair to keep him if I can't make him happy. And now this has happened. He's gonna lose it, I just know it, and all I want to do curl up in his lap and have him pat, kiss and rock me to sleep. I settle back and close my eyes for what feels like a few minutes.\n\nWhen I open them again the sun has just come up. Turning my face into the soft and fragrant breeze I open my eyes and see him leaning against the porch railing watching me. I blink a few times to make sure it's not a dream or a mirage. \n\nI'm so glad to see him it hits me in the chest and I can't help but smile. He looks confused for a second but smiles back. I get up and go over and hug him hard. I've missed him. He smells like leather, soap, and lemon spray starch, he smells like Dax.\n\n\"So, you did miss me.\"\n\n\"I did.\"\n\n\"I was starting to wonder. I thought you'd run away from home.\" I can hear the unasked questions and I know I have to tell him. I just don't know how.\n\n\"Eddie's been taking care of me.\"\n\nHe leans back looking at me. \"What's wrong cher? I knew you were tired and not feeling well. I should never have left especially after . . . You ok?\" \n\nHe tilts my head back intently looking at me. \"Those dark circles are gone so that's a good sign. Looks like you got some much needed rest b\u00e9b\u00e9.\"\n\n\"So, I was looking like Celie and you weren't going to tell me?\"\n\n\"Lulu, you never listen to me. I told you to slow down and take it easy, you've been overdoing it. Head as hard as a rock. Besides, I figured if you had enough energy to sustain a fight like the one we had, you'd be alright. And you could never look like Celie. Un Fu Fu maybe, but not Celie.\"\n\nI poke him in the ribs causing him to laugh.\n\n\"But I'd never have left if I'd known you were seriously ill. What's going on with you?\"\n\nI swallow, trying to form the words. \n\n\"I'm off limits for a bit. Female issues, but Eddie sorted me out. My body needs time to adjust, that's all.\" \n\nHe looks at me carefully and I manage to hold his gaze. He takes a deep breath and kisses my cheek and forehead. Thankfully, he doesn't press for answers.\n\n\"Well that's a shame, because I have missed me some you. We need to fatten you up again a bit though, there was more to squeeze last time I was here.\"\n\n\"There's plenty left. I've got enough ass to survive two famines.\"\n\n\"Hopefully it'll never come to that. All this talk of famine, we need to eat something. All these chickens walking around here; I'm starting to get ideas.\"\n\nEddie will have your head on a platter. \n\n\"Yes, I would.\" Eddie comes out onto the porch laughing. \n\n\"There's coffee and biscuits in the kitchen and I think I can scratch up a little something for us.\"\n\n-\n\nShe looks homey and sweet tucked up in the rocking chair still wearing one of Eddie's cotton nightgowns. \n\nShe's been rocking for the past 2 hours though.\n\n\"I like the curls.\"\n\n\"Yeah? I think it's the well water or her fancy conditioner my hair always curls right up out there.\"\n\nThose looks she and Eddie exchanged over breakfast. I tried talking in the truck but she fell asleep on the drive home. She looks disturbingly frail, not her usual hale and hearty self.\n\nHer voice is steady though as she calls June to make arrangements for the next few days. She laughs and rings off. \"Gracias Cujita!\"\n\n\"Finally taking some time off?\"\n\n\"I've got a million days of vacation and sick time, now's as good a time as any.\"\n\nShe's grazing on macadamia nuts and drinking tea.\n\n\"You going to tell me what happened?\"\n\n\"Yes, I just need to get my bearings first. But I promise I'll explain everything.\"\n\nAn uncharacteristic plea for patience. Ok.\n\nI'm thinking of dinner options. Though I don't care for it, I know sushi makes her happy though. I do like the brothy miso soup that accompanies the sushi. Soup and sushi. \n\n\"You want anything special for dinner?\"\n\n\"Anything is fine, nothing too heavy though.\"\n\n\"Ok. Be back in a bit.\" \n\nI return to find her dozing on the sofa. I rouse her. She opens her eyes and smiles at me. \"Come on little poof head. Time to eat. I've got your sushi and miso soup.\n\nShe looks at me quizzically, smiling. \"You don't eat sushi?\"\n\n\"No. But you do and that's what's important.\"\n\nWe eat in silence and she enjoys the meal, eating with gusto, a good sign. Wiping her mouth she looks at me like she's on the verge of saying something. Instead she sighs.\n\n\"I'm going to wrap up a little office work.\" She smiles tiredly and goes down the hall to her office and shuts the door behind her.\n\nLet it go, give her time. I unpack my laptop and sit down on the sofa to check a few things and when I look up again it's 10:39 pm and dead quiet. I go down the hall and crack open the office door and step in to find her curled up asleep on the small bed. I sigh, I was really looking forward to sleeping beside her tonight. She seems pretty tuckered out. I'm still tired myself.\n\nTraveling can take it out of you. I can't face sleeping in that big bed alone. I go back out to the sofa and flip through some channels. \n\nWhen I wake up the televisions still on and the sun is shining. I stumble to the bathroom. I flush and go over to the sink and splash my face. I have a crick in my neck and my thumb hurts for some reason. I should have undressed and stretched out last night. I feel like old bread. Spying an odd looking lump in the trash wrapped in toilet paper I dig it out. I read the box instructions several times and look at the stick. Pregnant.\n\nAccording to the stick she's pregnant. Pregnant! She's not said a thing. Is she not happy about it?\n\nI know it can be hard going for some women in the first months and it must be so with her since I'm off limits. She was a little handsy with me at Eddies but has been downright skittish since we got home, hasn't touched me or come too near me for that matter. \n\nA baby! No wonder she's so tired. I hear her in the kitchen though and I smell food. I walk in and she smiles. I love it that the smiles are back. I hate to ruin the good mood.\n\n\"Hey you. I've got breakfast almost done.\"\n\n\"It smells good in here.\" \n\n\"With all these fresh eggs Eddie gave us I got a serious was craving for French Toast and that chicken sausage you turned me on to, hope you don't mind but I've just cooked it and this is the last of it.\"\n\n\"Cravings eh?\" I sit down and place the box and the stick on the kitchen counter, and when she turns and sees them she almost drops the plates. I gently take them and set them on the counter.\n\n\"Something you want to tell me?\"\n\nShe shakes her head and looks down.\n\n\"This says you're pregnant.\"\n\n\"I was.\"\n\n\"Was?\" The word hangs in the air. \"And now?\"\n\n\"And now I'm not.\"",
        "\"I see.\"\n\n\"Let me explain?\"\n\n\"What am I missing? You were pregnant and now you're not. You're honest to a fault I'll give you that. You said you don't want kids and you clearly don't. And you didn't think to even discuss it before you went to Eddie and killed our child!\" Angela all over again.\n\nShe winces and takes a deep breath.\n\n\"If you think so poorly of me there's nothing else to say.\"\n\nShe steams past me, heading out of the kitchen. I grab her arm and spin her around.\n\n\"No? What else do you have to say for yourself?! If you're finally willing to talk I'm willing to listen.\" I shake her hard as she tries to wrench free.\n\nIn a quiet voice she says, \"Let go of me.\"\n\nShe's calmly looking at me and it's making me angrier and angrier. We stand looking at each other, me gripping her arm. I let her go and watch as she rubs her arm and quietly leaves the kitchen. Five minutes later I hear a car start. Her cell phone is on the kitchen counter. I sit for an hour, waiting and thinking, finally rising and trashing the uneaten food.\n\n__________________________\n\nThe office is super busy, which is good. I don't hear from her all day. She's still gone when I come back. I call Lenny and Lily and leave messages. But I don't hear back from either of them. I'm on the verge of calling Harry but call Eddie instead who immediately answers and says we should meet and talk. \n\nI don't know much about Eddie other than that she's a doctor and pretty damned tall for a woman 6'2\" in her stocking feet. They've been friends since they were little girls something like 21 years now. We meet at the hospital and sit at one of the outside tables.\n\n\"Have you heard from Lou?\"\n\n\"Yes and she's pretty upset.\"\n\n\"She's upset? Are you kidding me? She went off and did something like that and didn't even talk to me about it first!\"\n\n\"So you two didn't talk?\"\n\n\"We talked.\"\n\n\"No, you didn't, or you wouldn't be acting like such an asshole right now.\"\n\n\"What the hell is it with you people? Lou stomps her feet until she gets her way and everyone lets her!\" \n\nEddie's eyes flash anger as she lets out an aria of Spanish curses. \n\n\"The pregnancy went wrong. If we hadn't caught it in time it could have been a lot worse. The embryo was lodged in her fallopian tube, there was no way to save it. Lou is strong, almost relentlessly so, but the human body has a way of reminding you of your limitations. The way she was bleeding, she shouldn't be anywhere but in bed resting right now.\"\n\nThis throws me. \"Why didn't she say so?\"\n\n\"Did you give her a chance?\"\n\n\"Lou has no problem expressing herself.\"\n\n\"You mean to say that you've been together for a few months now and you really don't know fuck-all about her?\"\n\n\"Lou can more than express herself; you've seen her in action.\"\n\n\"We've been friends forever and I know the exact opposite to be true. Yes, if an outsider so much as glances at a friend or family member wrong way then yes, she will happily rip the flesh from their bones, no questions asked. But she's not exactly known for flailing around her emotions. It's not like she hides things she's just a deeply private person. Ask her directly and she'll answer but she does not volunteer information. \n\nFour years ago she had a brush with uterine cancer, stage 0. Didn't know she was sick at all until she miscarried. Extremist that she is she gave up on the marriage and children idea entirely. From what I gather, you've been goading her on the subject of children practically since the day you met. As ambivalent as she is, she asked me if there was a way to save the pregnancy. She was scared but willing to try. \n\nYou don't really know shit about her.\"\n\nFuck . . . \"Where is she?\"\n\nEddie gives me a thousand yard stare. \"I've broken about a dozen laws telling you her medical history. She'd have my license revoked if she knew. She's tired, rundown and needs a break. Said she'd be back as soon as she felt she could and asked that you feel free to stay at her place.\"\n\n\"You know where she is?\"\n\n\"I do.\"\n\n\"And you're not going to tell me.\"\n\nI can see her jaw working as she grits her teeth. \"No. I'm not.\"\n\nStanding to leave I notice that, in her skyscraper heels with perfect curls piled high on her head, she's taller than me.\n\n\"Oh, and if you ever violently touch her again,\" she leans forward and gives me a chilling smile, \"I will crush you.\" I see a vein throbbing left center in her forehead. \"Now, if you'll excuse me, I've got patients.\" She turns on her heel and walks away.\n\n-\n\nHopefully wherever she is she's able to sleep, I sure as hell can't. To keep myself busy and from dwelling too much I've finally decided to take a crack at coding using her iMac. Surprisingly, I like being able to develop in an attractive but Unix-based environment. I put the finishing touches to my software in a weeks' time. \n\nI'm left with nothing but time and thoughts. This whole place reeks of her and why shouldn't it? It's her home. Haunted doesn't even begin to cover it.\n\nI decide to go home. I help Pops move some equipment and beat back the kudzu. He catches me being particularly aggressive with the vines and calls for a break. It's just me and him. Mom is off on a charity run.\n\n\"So I take it you and that little gal are having problems? This is the most I've seen of you in a while.\"\n\n\"I love her to death. She's amazing, funny, a great cook, plays almost as hard as she works, as smart as all get out. But she's also determinedly stubborn, secretive and cagey as hell. She'll tell me off in a minute but won't really talk to me. So proud.\" \n\nPops chuckles and shakes his head. \"Yep, that sounds about right, my hats off to you.\" He doffs an imaginary hat.\n\nHere goes. \n\n\"She got pregnant Pops. Don't get excited, it went wrong and it had to be taken care of, her life was in danger. Before she could tell me what happened I accused her of having an abortion. Now she's gone and I don't know where the hell she is. Her girlfriend said Lou wants me to wait for her. It's been weeks now.\"\n\n\"Dax, you always jump into things with the quickness. Which is how I knew it wasn't in the cards for you and that Angela. You two went round and round and you liked her alright but never really sparked with her. Thankfully you came to your senses. But this one, you immediately bring home introduce and disappear with. \n\nDon't get me wrong, your mother and I are relieved and happy for you. You're getting on up there. Not normal to have nothing but computers, basketball and fishing in your life. But except for cattin' around in the quarter, yes I know all about it, you can't be on an oilrig and have secrets, you've not had much experience with women. Living with them takes some getting used to, I tell you. \n\nYour mother still surprises me and we've been married so long I can hardly remember being single. But the way she came after you the other month I'd say she loves you. She looked right serious when she showed up.\"\n\n\"She does, but we've got some serious problems. For starters she doesn't want marriage or children. She had a miscarriage a few years back, which occurred because she had uterine cancer. It wasn't as bad as it could have been, they caught it in time, but I think it's left her compromised. \n\nHer best friend is an obstetrician and helped her with this last ordeal. She told me that Lou wanted to find a way to save the baby that she was scared but willing to try. So it looks like she's come around to possibly wanting children. I'd be more than willing to adopt but I can't even broach the subject of commitment without her making it rain fire and brimstone. Which is a shame, because you should see her with her nephew. She loves kids. She's a big kid herself really. She's punishing me for the sins of others.\"\n\n\"You need to slow down son. It's June. You've only known her since March and already you've managed to move in, get her pregnant and promptly chase her off. It's too much, too fast. People nowadays don't jump into marriage and serious things like they did in my day, even I realize that. \n\nHer parents died young 39 and 40 years old the both of them and she's been doing for her sister and brother by herself since she was 17 years old. For all her worldliness, she's got a serious sense of family and they spend every birthday and most holidays together no matter what. If nothing else she'll be back for her birthday in August. Just hold your horses for a bit.\"\n\n\"Pops, how do you know all this?\" Hell he's full of information.\n\n\"Well her and Aurelia talk up a storm on that email chat video whatchamacallit, sky, scope, skip, skip-sky I don't know.\"\n\n\"You mean Skype? They've been skyping?!\"\n\n\"Skype! that's it! Relia taught her sister and they've been on every day since just looking at each other for hours on end. Thank god it's not by the minute. You should have taught us how Mr. Technology, it's like being back home the way you can see folk in real time. Delia walks around with the camera on the iPad and we can see everything. I'm thinking we should drive down and look at some hogs, I've a mind to make me a smoke house.\"\n\n\"Lulu and Mom have been Skyping?\"\n\n\"On that little toy machine you gave her that she can't let out of her sight for a minute, keeps it in her purse and won't let me nowhere near it. I only dropped it once on accident.\" \n\nPop grumbles about stingy women and then looks at me and shakes his head. She won't let him have it because he ordered something online that interfered with his blood pressure and had him in the hospital.\n\n\"Why are you surprised? They said they'd be in touch. You were standing right there watching how those two hit it off and exchanged information. We got a package from her from somewhere the other day or I should say Aurelia did. Left me on the front porch to sign for it while she hauled it away, disappeared into the kitchen and started cooking up a storm.\n\n\"Where's the box? Is it still here?\" I hold my breath maybe there's an address.\n\n\"Doubt it, you know your mother hates clutter, probably burned it on the scrap heap or turned it into compost already.\"\n\nI run in and look around for it anyway. Pop's follows, he looks at me and shakes his head.\n\n\"Well what was in the box?\"\n\n\"Near as I can tell it was oil and spices. Coconut oil, cinnamon and vanilla. Your mother made a roast chicken in coconut oil and spices, oooeee! I ate til I just about popped.\"\n\nI frantically look through the cabinets as Pops looks at me with disapproval.\n\n\"She put it all in the fridge trying to preserve it.\"\n\nA number of plain large jars with handwritten labels, two of what looks to be solidified coconut oil, two labeled vanilla paste, and two labeled cinnamon, one labeled cinnamon oil the other labeled cinnamon powder.\n\n\"It was quite a package, 12 large jars, each carefully wrapped and sealed. Of course Aurelia sent some back home to share. She's catching on though cause I see she kept the lions share.\"\n\n\"Did you see where it came from?\"\n\nHe's frowning at me. \"You need to calm down. Your mother will be here shortly, she can tell you. In the meantime let's have some of this cake here; it goes right nice with chicory. Vanilla bean and cinnamon pound cake, it's right rich too. Aurelia says she'll never buy store bought extract again after this. Yes sir, that Lulu spoils you good!\"\n\nHe smiles as we cut into the cake. Yet another fan. I can't help but smile at the thought of her somewhere gathering up all this to mail home to my parents. We're having the last of the sweet cake and rich dark coffee, when mom comes in and catches us.\n\n\"So you greedy heathens ate it all I see.\" She smiles though as she says it. \"That's alright. I've got new recipes to try tonight anyway.\"\n\n\"Mom, where did Lou mail that package from?\" I blurt out.\n\nMom looks at me long and hard if I didn't know better I'd swear she was about to pop me. Instead she sits down and takes my hand and looks at me kindly. \"I can't tell you that. Just give her the time she needs and she'll be back sooner than you think.\"\n\n\"My own mother won't tell me. She hypnotizes every one she meets with that little Jedi mind trick of hers!\"\n\nMy parents exchange looks. Mom all of a sudden remembers something. \n\n\"I knew I saw her before.\" \n\nShe leaves the room and returns with two large photo albums. \n\n\"Thank god for teak.\" She's referring to what she managed to salvage from the flood. The chest my great Uncle Junius made them as a wedding present contained her cherished keepsakes, our baby clothes, her wedding dress, Pop's wedding suit and photo albums amongst other things. \n\nOpening the largest of the books she finds a photo and draws in a breath before passing it to Dad.\n\n\"Well I'll be, Gaht Damn, that's it! That's what it is! Looks just like her. Right pert and everything, even has her way of talking, now that I think about it,\" he says.\n\n\"Mouth's is a little different though,\" says mom. What the hell are they going on about now?\n\n\"Come here Dax.\" She reaches her hand out and takes mine pressing it firmly as I round the table. She points to a picture of a young bespectacled great Uncle Junius smiling down at a beautiful young woman in a flowered shirt and trousers with suspenders who looks an awful lot like my Lulu. Same expression, same divot in the little chin, the nose is a little different, but the same large eyes, eyebrow raised in challenge, the hair is curly not as bushy as Lou's, same way of smiling. Mom's right, Lou's mouth is a bit fuller.\n\n\"Who is she?\"\n\n\"Annelle Edwards, the love of your Uncle Junie's life until the night she disappeared. \"Can't say that I blame her,\" says Pop.\n\n\"What happened?\"\n\n\"The 60's happened. They'd come of age when everything was happening for better and for worse all at the same time. Uncle Junius' eyesight wasn't too good, he couldn't serve in Vietnam, so he got involved in the civil rights movement. It was dangerous. For white men with a conscience it was a special type of hell. \n\nAnnelle hated the waiting and not knowing and dreaded him coming home with bruises and or broken glasses. She finally got involved too though and came to love it. But him being gone for days at a time she got tired of. And with him fearing for her safety he never let her come along, even though there were plenty of women that did, riding into some pretty rough and dangerous places. Annelle never was feeling that who co-ed bus scene.\n\nShe was keen on settling down. As a seamstress she earned a good little living, had saved enough for a little place of her own and wanted to start having babies. Junius on the other hand loved her to death but didn't want to rush into bringing children into that world and was for putting it off. \n\nKennedy was in office and actually seemed to care about civil rights movement. In spite of how heated things were at the time, everyone felt change positive change was on the verge of happening.\n\nJunius told her that there was plenty of time for children as young as they were. She wasn't thrilled about it but they put it off. They had some times; and it went alright until it didn't. \n\nThey loved talking to people, educating them and socializing and with her facility for languages she was a natural. The one time she managed to convince him to let her tag along they ran into the men in white and Junius found himself literally strung up along with several others swinging from a Georgia pine in the middle of Alabama. \n\nFrom what I understand, kneeling there, looking up at what she thought was a dead Junius, she quite lost her mind and when the nicest of the men tried to comfort her she slashed him with a switch blade she pulled from god knows where, they said she opened his arm quick as that from elbow to wrist and ran off. \n\nHer mother said she simply came in three days later just after sunset, took off her bloodstained dress, packed a bag kissed her mother and left without a word. It took some time before anyone believed this story as her mother hadn't been quite right in the head really since her husband, Annelle's father was killed some years before, by some more good 'ol boys. It was just her Annelle and Leonard, Annelle's older brother. \n\nMeanwhile, Junius wasn't dead, came damned close though. They beat him so badly he'd passed out when they finally tried to lynch him. His body was so limp and heavy and they were in such a serious hurry that they failed to hitch that rope just right. Because though the people in charge looked the other way, especially in Alabama, it was after all against the law. \n\nThey left three of them swinging there. He was the only one that lived to tell. The weight of his body and the badly tied rope caused him to fall, breaking his leg in three places. Four days later he finally got up, heavily concussed and on crutches he looked for Annelle. Looked and looked day and night canvassing the state and sending out feelers wherever they could. They all did, him, Pop-o, a bunch of people, never found her, she fell off the face of the earth. \n\nFor the longest time everyone thought maybe she was just running scared from the law and would somehow get word home that she was ok and that it would all work out. It was a real shame because the man she slashed never even tried to bring charges against her even though she did quite a bit of damage with that blade and he lost complete use of that hand. But no one ever found her or knew what became of her. Junius all but had a nervous breakdown. \n\nThe rest you pretty much know. He somewhat recovered but never married, ended up all but raising me and your uncle Ajax while our Daddy was off in the military, we were so wild mama could hardly deal with us. Once we got up some size he pulled a few strings and got his medical records doctored and volunteered and went off to Vietnam for a bit and came back a skilled shot and even crazier. I think this Annelle might be Lou's grandmother.\"\n\n\"That's quite a story.\" Both of us descended from activists, Freedom riders no less. She and I were practically relatives. This is going to blow her mind, if I can ever find her to tell it. Using my phone, I take a picture of Junius and Annelle.\n\n\"It is odd, but now that I think about it Lou's not said much about her grandparents. I know her father's parents are long gone, but I don't know anything about her mother's parents.\"\n\n\"Well if you weren't after her all the time, maybe you would,\" says mom irritably.\n\nThey have no idea how difficult it is to get even basic information out of her. It'd do no good to even try to explain. Honestly, I have been so busy having her maybe I've not listened like I should. But she's as hot blooded as I am, it's not like I had to twist her arm.\n\n\"I want a word with you Dax, alone.\" She cuts her eye at Pop's who gets up and leaves the room. As soon as he's gone, she does in fact pop me several times. I'm so shocked by it that I actually laugh out loud. Her eyes flash fire though and I quiet down.\n\n\"You need to learn patience. How is it I know more about that girl than you do and you live with her?\"\n\n\"It's not entirely my fault, she's not exactly what you'd call forthcoming.\"\n\n\"You are to back off and give her a minute and take one for yourself while you're at it. Quit being so intense and stalkery. We did NOT raise you that way.\"\n\n\"Lou called me a stalker?\"\n\nMom sighs \"I know my child and how focused you get when you're after something. You stay round here a few days, spend some quality time with your dog, do some things around here. Think it out.\" She pats my shoulder and leaves the room. \n\n_____________________________\n\nI try being in my home a few nights, but memories of her lying naked across my bed, or her legs wrapped around me on the kitchen counter, on the leather sofa, prove somehow more frustrating and confusing than being alone in her house. \n\nThere are small signs of her here and there around my place, her sneakers in my closet, one of her tank tops on the peg on the back of my bedroom door, the bathroom filled with the scent of her fancy French soap which seems to be blooming in the heat. The kicker was finding a pair of her little panties wrapped inside my boxers one morning. ",
        "I gave up and went back to her place. At least here it makes sense. One week turns into two, which quickly turn into four; half of June and now its July. Issues at work crop up and give me an outlet. \n\nUncle Jack and Lenny seem to be taking turns checking on me, but no one's said word one about the obvious. The most infuriating thing is that I can't find her. I've looked into her family & friends email accounts. There's no movement at all on her bank accounts and no charges on her credit cards. How is she paying for things? It's unreal. Not a trace of her anywhere. \n\nShit she definitely gets it honest this way of disappearing. Her phone's here and it's still in service, someone must be paying the bill. When I break into it there's not much there except for pictures of her nephew and a few of us. I try not to abuse the privilege of having a brother that works in intelligence but if this goes on for much longer she'll leave me no choice.\n\nOne night in the middle of a jam session Uncle Jack shows up with a meatloaf dinner. I'm startled to see him there as he jangles the keys to get my attention.\n\n\"Don't mean to disturb you none, let myself in.\" Arlene and June sent me round to look in on you. He takes in the scene - scotch, guitar.\n\n\"Sit down son and have a good meal, you look hungry.\"\n\nFollowing him into the kitchen I sit down and after a few bites I'm feeling a little better. We talk about sports and a few world affairs but eventually talk turns to his Lulu-butt. A more perfect nickname I have never heard. He goes over to a shelf and takes down a large photo album and starts going through the pictures.\n\n\"Look at those big eyes?\" Standing on what must be her father's lap sucking a pacifier looking straight at the camera very matter-of-factly as he looks at her adoringly.\n\n\"She was the cutest baby you ever did see, wanted one just like her when I saw her, but Harry was so big he tore the frame out getting here and that was that.\" He shakes his head. \"Look at that?\"\n\nSmiling, he points to a picture of a sparkly eyed baby girl with a cloud of hair in a high chair wearing nothing but a diaper, at a table with a large pink cake in front of her with a 1 birthday candle on it. Tiny eyebrow raised as she points at the cake. A beautiful little girl. Still is.\n\n\"I swear I think her first word was cake.\" He turns the pages. A picture of a snaggle-toothed but grinning Lulu aged 6 and a slight and pretty little Lili aged 3 sitting with a man in uniform on a front porch.\n\n\"Lulu, Lili and Louis. That man loved his girls, he was thrilled when Lenny came along but he loved those little girls to death, especially Lulu. You're not supposed to have favorites but it ends up that way, she was his and he was hers. He loved his Lili-pie, but him and Lulu . . .? Man! Crabbing, fishing, baseball, basketball, you should have seen him when she made JV, couldn't tell him nothing. \n\nHe was at every dance recital too, she took up the dancing to please her mother, but basketball was their thing, still is.\" \n\nHe flips some more pages. Lulu age 14 a brooding high-school student, resplendent in leather varsity jacket and chunky black Doc Marten boots, on the brink of ripeness, almost everything about her complete. Those strong eyebrows, the sardonic bombshell mouth, perfect for sneering. \n\nMoving down the page, there she is at 16, features softened and settled into place.\n\nHe turns the page and there's a photo of a little Lulu and a tall shy looking girl with long pigtails. Lou & friend aged 10.\n\n\"That tall friend of hers Eddie. Louelle put her in a program for gifted kids one summer to keep her from running wild with the neighborhood boys, she hated it until she met Eddie. Lou is wicked smart, but Ms. Eddie is genius smart, those science projects of theirs back in the day, man! But I remember when this picture was taken Lou was 12 about to turn 13 here. Eddie was 10 or 11 here I think, tall for her age, only child, once she and Lou found each other though they were inseparable. \n\nLook there, her and Harry running around naked. She loved to take her clothes off, drove her mother crazy. She was so pretty all you wanted to do was dress her up and keep her neat and frilly but she wouldn't have it, always pulling out her hair bows and getting dirty, she was a handful I tell you. \n\nOne day, she was three I think, Lulu was supposed to be taking a bath. L'elle says she only left her playing in the tub for a minute to check on dinner and when she came back, that baby was gone. Like to scared her to death. She left a trail of suds though and we found her down the street in a neighbor's yard, naked, playing with a puppy she'd seen earlier. She'd seen the puppy on the way home and was upset at being told she had to come in and bathe first. L'elle told her that she could play with him after she had had her bath. \n\nI'm sure like most parents Louelle didn't consider it necessarily a binding promise, just a ploy to get her to come along in the here and now. When her mother found her and scolded her, she said, but I took my bath, this is after, so I can play, you said so. \n\nCan you imagine such self-awareness from a 3 year old? It was scary. She wasn't excessively awkward or anything, but sometimes it seemed like she was impersonating a child, and a spoiled one at that finding everything a tiresome drag, batting away time with a slow blink. She still does that, and it always gets results. \n\nFor someone that precocious one is tempted to ask if she was truly ever young at all. She naturally took her parent's deaths very hard; to this day you can see the grief in those children. But she managed to see that they survived and prospered and stayed relatively orderly and sane. \n\nBut that's Lulu, she is like she was when she came into this world, highly determined and taking people and things quite literally at their word.\" He stops and looks at me quietly.\n\n\"Yes, sir.\"\n\n\"I don't know what's going on with you two and I don't need to. No sir!\" He wags his head and shakes his hand back and forth in the negative. \n\n\"She's a grown woman and I know she's got her ways. But she's a good girl, a good woman. Don't pay much attention to what she says. She loves you to death or she wouldn't have you here. Pay attention to what she does. She's never introduced anyone to me and she doesn't do things in halves or love people in slices, she's a lumps and all type of gal. I want someone for her who treats her the same way.\" He stops and looks at me again.\n\n\"Yes sir.\"\n\n\"Good. Good.\" He sits back again and then quickly leans forward as if he's remembered something important. \n\n\"You know she's hypoglycemic?\" He looks at me.\n\n\"Yes sir.\"\n\nHe nods. \"Good, good. If nothing else, remember to keep a few pieces of hard candy - pineapple lifesavers, she loves those and a granola bar or bit of beef jerky on you at all times. If she seems jittery and starts shaking she's about to have an episode. Give her a piece of candy and wait a few minutes and give her another piece and then give her some jerky or a granola bar. She's still a tomboy, sometimes won't even carry a purse, just a wallet and keys. Loves to go at breakneck speed and gets so busy going she forgets to eat like she's supposed to. \n\nWhen she was little, it was always 'Daddy, I'm hungry'. Unbelievably, as hyper as she is, she also goes in and out of being anemic, three ways at once is just like her. You can always tell when she's a little anemic because she complains about being cold. A good steak and some leafy greens usually square her away, that and making her take her vitamins. \n\nAs prideful as any man, will never ask for help, not for serious things or small things, but if you see she's in trouble and just step up, she got home training enough to accept and be grateful and say thank you and return the favor.\"\n\nHe nods and finally stands to go and looks at me and smiles. \n\n\"You two are going to be just fine. You have more patience than my Harry. I had hopes for those two, but Lulu proved too wild for him. I don't know where she is, but try to get her home for her birthday. You look capable. Find her.\"\n\n\"Thank you for the dinner, sir, and the talk. I think I needed that.\"\n\n\"Call me Uncle Jack.\"\n\nWe shake hands.\n\n\"Thanks Uncle Jack.\"\n\n\"Now do me a favor? Try to keep that amplifier turned down, not everyone understands the blues. The basement might be a better place to play. Ok?\"\n\n\"Yes, sir.\"\n\n\"Alright. Bye, bye Dax.\"\n\n-\n\nFive weeks and three days. I've tried patiently waiting but this is getting ridiculous. I decide to do an email search. Surely she's in touch with the office somehow. I look in June's inbox and with the exception of a lot of email to and from France there's not much. Checking her sub-folders starting with the attachments folder. I'm skimming and the following subject line makes me stop - Subject: Re: Hola Cujita!\n\nCujita? Lou's pet name for June? I open it. It's written in Spanish. Quickly downloading some translation software I'm able to read more or less the following:\n\n\"Feeling much better, thanks for asking and taking care of things. The scans were clear and amazing, 935 pages at the last minute, you rock!! I'm glad you nipped that craziness in the bud. You are on the case and doing the damned thing! I can almost see your pretty little fangs from here. \n\nThere's a package on its way to you and I hope you like it. Though it's really not enough to repay you for everything you do, you've been great these past weeks. \n\nAs for me, with the exception of popping over to the big islands for work once or twice a week, it's almost like a vacation. What can I say? Massages, fantastic sunsets, pink sand, blue water, if only I were a better swimmer. \n\nThe whole island smells of flowers every night. It's a harsh existence but I manage :). \n\nDid I mention that it's so humid that most days I just wear a bathing suit? Yep, and flip-flops! Can you imagine how that would go down in the boardroom? There's not much shopping to be had here besides bathing suits, sarongs and pottery, so I really can't thank you enough for sending my dry cleaning. I know it cost a small fortune.\n\nThere are a few downsides. It's going on towards the rainy season, lots of rain last week. And I've yet to find a really decent burger every burger here tastes of freezer burn somehow and I am quickly growing tired of seafood. Can you imagine getting tired of lobster? It's true, it can happen.\n\nRemind me to bring you here one day. I may even let Riley tag along. As the second largest island out here it's a pretty good size and in my opinion much better than Hawaii, not as many tourists, though some days it seems overrun with eurotrash (will explain later). Since there's work to be done, providentially, my 'break' worked out all around. I'm stationed here another month. So it looks like you guys will have to party on without me this year. Its so peaceful here that I think were it not for my house I might attempt permanent re-assignment.\n\nI never miss people but I miss Dax. I miss him desperately. I didn't expect to still feel this way. How's he looking? If you run into Arlene at church, could you have her look in on him?\n\nAnyhow, attached are the final deliverables and summaries, have Paul confirm with me ASAP. Make sure you delete this just in case.\n\nCatch you on the flip side.\n\nThanks Again & Take Care\n\n- L.\n\nReading June's response I'm somewhat taken aback at her assessment.\n\nDax is fine, a little unhinged maybe. Not attending many meetings but he's on top of things. You should have heard him on a conference call with Matt against opposing counsel. Matt called him in as an expert and I think Dax has been hanging around you too long because he was particularly vicious, not that Matt minded in the least. I guess we all have a dark side. He glares at people a lot these days I've been on the receiving end of quite a few of those looks of his. He needs a haircut and maybe a good meal and could get rid of that beard but he's hanging in there.\n\nDon't leave the man in limbo Lou. Man up and either come home or put the both of you out of your misery already. I love you but enough's enough, talk to the man!\n\nAnd keep your tone to yourself. Unsolicited advice and straight talk are what happen when you appoint me as your spy.\n\nLove you L.\n\n-J.\n\nSo she's better, back at work more or less and she misses me. Desperately misses me, but not one phone call, email or letter in what's been a month now. I groan aloud at the prospect of another month, or so of her gone. I need a massage myself, my neck and back feel tight as hell. Lounging on a tropical island somewhere in the south of France. \n\nI do a little more investigating but I can't find anything else. Corresponding in Spanish, I had no idea that June read and spoke Spanish. I mean I'm not surprised it's the second language of the United States, but it's damned impressive. I can't tell where she is though. \n\nI check Milton's email and run a trace on several that sound like they might be her. I see that she's not in France, but somewhere in the Seychelles, Indian Ocean I think. The European equivalent of the Caribbean. The timing's not ideal but I've got plenty of vacation and comp time. That's a long trip though, especially when I don't know exactly where the hell she is. It's time I called Max.\n\n\"Max, this is Dax, I need a favor.\"\n\n\"You need bail, don't you? I knew one day I'd get the call.\" He laughs easily.\n\n\"Nope, not bail. Not today anyway. What's the second largest island in the Seychelles?\"\n\n\"What is this, Jeopardy?\"\n\n\"I need to get my girl.\"\n\n\"Damn, you lost her already. She in trouble?\"\n\n\"She will be when I find her.\"\n\n\"I hear that! Sounds like she's on Praslin, which is damned far, it's near Madagascar, almost Africa. You need a lift?\"\n\nShe did run far. \"I could use one.\"\n\n\"Alright. Give me an hour. If I don't call back, ring my cell.\"\n\n43 minutes later the phone rings. \n\n\"Pack a bag. I got you a direct flight to Mauritius and the rest is up to you from there. Once you get there you should easily be able to hop a flight over. Let me know if, when, and how you want to come back. There are only two Black women tourists on the island and only one American. They say that the American keeps to herself and is very quiet, tips well and speaks perfect French. \n\nYou have to give your address and particulars at check in so it's definitely her. She's at the Chateau de Feuilles, not far from the airport. Pretty pricey for upscale beach shacks, I know you have plenty but if you can't convince her after a day or so, just come on home, no need to go broke. I hear she takes a run and a dip every evening at about the same time and watches the sunset before dinner.\"\n\n\"Not even an hour and you found out all that?\"\n\n\"Hey man, that's what we do. Flight leaves at 12:50 am, don't be late. When do I get to meet this one?\"\n\n\"Never. Women take one look at you and just lie down and open their legs. You have pinched your last girl off me.\"\n\n\"It was one girl D.\"\n\n\"One was enough.\"\n\nWe laugh a bit.\n\n\"Tell mom and pop I said hello. Good luck, keep me posted. I hope to god she's worth it.\"\n\n\"She is. Thanks.\"\n\n\"Anytime D.\"\n\nI get a much-needed haircut and tie things off in the office as best I can and call my parents and take off. The new server is up and running. Charlotte and Ted should be able to make do until my return. I'll be checking in frequently. A month, no phone call, no emails no nothing, and she's somewhere lounging on a beach. \n\nTypical. I pack and eat a quick microwave meal; I've been eating too many of these lately. Now that I know where she is I feel strangely calm. After my shower I fall asleep in her bed for the first time in a while instead of the couch.\n\nI'm going to get my girl."
    ],
    "authorname": "MsLuLuX",
    "tags": [
        "black woman",
        "white man",
        "romance",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/vision-ch-05"
}