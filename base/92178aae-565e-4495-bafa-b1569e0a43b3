{
    "title": "The Anonymous & The Curious",
    "pages": [
        "\"Hello? Is anyone home?\" My daughter, Lindsay, had been talking to me about her upcoming party, but mind had drifted. She was a junior in college, but her best friend Kristy was a senior this year and would be graduating. They were making as many excuses as they could to hang out with each other as they could.\n\n\"I'm sorry sweetie. I haven't been able to concentrate much lately.\"\n\n\"Sounds like you need to get laid,\" she quipped.\n\n\"Mmmph,\" was all I could say to verbalize my agreement.\n\nMy wife was an amazing woman. She had the smarts, the sense of humor, the endless kindness; all of it. In fact, the only part of our relationship that wasn't enviable was our sex life. We had our daughter in our thirties. While this afforded us a better financial situation and greater patience than we could have mustered had we tried sooner, it also placed a heavy burden on our already struggling intimate relationship. \n\nWe had already been together for twelve years when we had our daughter. By this time, we had settled down to only having sex a few times a year. When Lindsay was born, my wife refused to let her cry herself to sleep in a crib and took up sleeping on the couch with her. This went on for eight years before my daughter finally started sleeping in her own room. By the time she did, the damage had been done. My wife and I were never able to quite get comfortable in the same bed after all those years apart. We would cuddle for the first hour or so, and then she would inevitably make a comment about being sore - and go sleep on the couch again. Every once in a while, we would attempt a quickie here or there, but she was always so paranoid about Lindsay catching us that things usually ended with only one of us getting to finish, neither of us getting to finish, or her getting me so nervous and worked up that I couldn't stay hard. Slowly, as time passed, we just tried less and less. \n\n\"Don't you think it's kind of weird to comment on your dad's sex life?\" I asked. I wanted to say that after almost four years of not having sex at all, the idea of \"getting laid\" isn't exactly a realistic goal; but I didn't want to dive any deeper into this conversation than I had to.\n\n\"Not really,\" Lindsay responded. \"We've always been open and honest with each other. Besides, you have to actually be having sex in order to call it a sex life.\"\n\n\"And what would you know about that?\" I immediately regretted asking that question; knowing it couldn't possibly lead to anything I'd be comfortable discussing.\n\n\"C'mon dad. Mom and I talk. I know it's been forever since you guys had sex.\" \n\n\"Listen sweetie. I'm glad we can all talk about anything, but discussing sex, and discussing your parents' sex lives, are two different things,\" I stated. \n\n\"Whatever. I'm just saying that maybe if you got laid, you wouldn't seem so run down and tired all the time. You know, put some excitement back in your life. Get the blood flowing!\"\n\nIt was about this time that I realized this conversation could end up going into something I wanted to discuss even less than my own sex life; and that was my daughter's.\n\nI knew that as soon as my daughter had her first period, my wife had put her on birth control. Lindsay never seemed like the desperate or slutty type to me, but I knew she wasn't na\u00efve or shy either. While I didn't believe she was sleeping around, I also had convinced myself a that she probably wasn't a virgin anymore either. Maybe this was because I had lost my virginity at such an early age, or maybe it was just the way Lindsay always seemed so casual about the topic of sex; but my guts told me my daughter wasn't completely innocent.\n\nLindsay was watching me, almost as if she could tell I was debating on how far to let this conversation get. I saw a brief grin flicker across her face before she abruptly turned the subject back to her upcoming party.\n\n\"I really want this to be perfect dad. Please say you'll help.\" \n\nI wasn't even aware of what she had asked me to help with, but since my wife was out of town all weekend and the following week, it didn't really matter. I would be the only authority figure around, and therefor stuck with the duty of trying to keep my daughter and her four friends happy for one night.\n\nOn the bright side, the perv in me had definitely already considered the possibility that four hot young females (not including my daughter) might be running around in my house in their underwear this weekend. Of course my logical side immediately stepped in to remind myself that even if they decided to forgo pajamas for some kind of lingerie thing, a bunch of young girls aren't going to want some forty-something year old man like me hanging around and gawking. \n\nReluctantly I replied, \"Sure sweetie. Whatever you need.\"\n\n\"Promise?\" she insisted.\n\n\"Promise,\" I confirmed.\n\n\n\n\n\nThat night, I couldn't stop thinking about my daughter's upcoming party. At first I was just dreading the fact that I would have to share a house with five young girls that I knew would be wound up, but slowly my perv side came out again and I started to wonder what the girls would be wearing to bed. While I knew it would probably be a bunch of oversized pajamas, I couldn't help but hold out hope that at least one of them would be wearing a pair of shorts that would be way too small, or maybe one of the girls would even dare to show off some sexy lingerie; or at least a tee shirt with just some panties. The thought one of the girls tight asses just peeking out from some tiny shorts was enough to make me hard, and I began masturbating to my dirty fantasy. \n\nWith my wife downstairs on her couch, I had the room to myself and was really getting into my \"session\". I had visions of bringing the girls snacks or drinks, only to find them lying on the floor in their underwear \u2013 tight beautiful asses barely covered and sticking out for me to see. I imagined Lindsay's best friend Kristy playfully sitting on my lap to watch a movie and wigging her butt against the lump in my pants. What I didn't realize was that I was now talking out loud in my fantasy, encouraging the girls by name to carry on with their teasing. I was jerking even faster as I turned my thoughts to Lindsay's other friend, Amy. I was close to cumming as I watched her reveal her young body to me in my mind. Just as I was fantasizing about entering her, I lost control and started cumming all over my stomach and chest. My orgasm was intense as my body tightened and the last of my orgasm dripped from my cock. That's when I saw her.\n\nLindsay was standing in my doorway with her mouth open and eyes wide. I almost screamed she surprised me so much. Trying to grab my blankets and cover myself, I kept stuttering apologies and asking why she didn't knock.\n\n\"You left the door open,\" she said plainly. \n\n\"I'm so sorry Lindsay. You shouldn't have seen that. I was just...just...\" but I couldn't finish.\n\nLindsay seemed to regain her senses as she looked up at me and smiled. \"Sorry dad. I know I shouldn't have walked in on you, but I thought I heard you say...\" she paused \"...anyways, I was just surprised to see you doing that, and next thing I know you were, um...you know,\" and she made a spraying motion with her hands. \"...finished,\" she translated.\n\n\"I...um...\" I was still speechless.\n\n\"It's all good, dad. If mom's not going to take care of you, then there's no shame in doing it yourself,\" she said with a chuckle. \"We're all human!\" And with that, she turned and left the room.\n\nI lay there for a while, recovering from the intensity of my orgasm and the shock of seeing my daughter watching me shoot cum all over myself. There was nothing to do about it now. I kept wondering how much she had seen, or even more important - how much had she heard? It's one thing for her to catch me jerking off, but another thing all together if she heard me fantasizing about her friends. I was only half aware of talking out loud while I was doing it, so I really don't know how loud I was being. It would be really awkward if she heard me talking dirty to her friends in my head. These thoughts raced through my mind until I eventually fell asleep.\n\n\n\nThe next morning, Lindsay acted like nothing happened as we ate breakfast and waved my wife off to her week-long conference. As soon as her car was out of sight, Lindsay grabbed her jacket and purse.\n\n\"Where are you headed off to?\" I asked.\n\n\"Kristy's,\" she answered. \"We're gonna go over the stuff we want for tonight.\"\n\n\"I hope you not planning anything too wild,\" I said.\n\n\"Depends on your definition of wild,\" she replied with a sly grin. \"I have a special surprise I want to set up for the girls, but I'll need your help. I'll be back around four o'clock to go over everything with you.\"\n\nI started thinking that this party was more coordinated than I had originally thought. I had figured on it being just a bunch of girls sitting around, watching movies, and talking about boys; but it seemed my daughter had something a little more structured in mind. Not one to worry before I have all the details though, I shrugged my shoulders and began working on the to-do list my wife had left for me.\n\n\n\nAt almost exactly four o'clock, Lindsay came through the door. I had just finished cleaning the garage and sat down to relax when she walked into the living room and saw me.\n\n\"Dad!\" she exclaimed. \"You can't look like that!\"\n\n\"Why?\" I asked. \"I'll probably just hang out up in my bedroom most of the time.\"\n\n\"No sir. I have plans for you.\"\n\n\"That doesn't sound good.\"\n\n\"Oh, I think you'll be OK with what I have in mind,\" she said, grinning again. Now I was really worried. \"I need you showered, shaved, smelling good, and ready for inspection in thirty minutes.\"\n\n\"Really Lindsay? I was kinda looking forward to the free time by myself.\"\n\n\"I'll be you were,\" she teased, and I knew she was referring to the night before. \"...but I need your help to make this party special. Besides, I think you'll enjoy this more than lying around by yourself jerking off.\"\n\nTrying to ignore the brashness of my daughter's comment, I played along and replied \"I don't know. I've gotten pretty good at it through the years.\"\n\nShe smiled at my joke, but made no reply other than to shoosh me off the couch and up the stairs to get ready. As I trudged up the stairs, she came up behind me and playfully slapped my butt.\n\n\"Let's go, old man. I told everyone to be here about six o'clock,\" she teased. \"...and no jerking off in the shower either!\"\n\nI laughed nervously, not knowing how to respond to that jab. Even though I only had thirty minutes, I took my time to make sure I was extra clean, smooth, and fresh. If I was going to have to spend time around the girls, then I wanted to make my best impression for Lindsay. It might have also been a little stroking of my male ego, and hoping at least one of the girls might think I'm hot for an older man. Even if nothing happened, it would still be nice to know I still got it.\n\nSo forty-five minutes later, I presented myself to my daughter for inspection, with a quick apology for taking longer than she gave me.\n\n\"No problem,\" she responded. \"You did a good job!\" she noted, giving me a quick head to toe.\n\n\"You're looking pretty dolled up yourself,\" I noted. She had put on heavy eyeliner (which I find really sexy on most women), lipstick, and some other touches. She had also thrown on a very short schoolgirl-style miniskirt and an unbuttoned, but tied together, blouse. I could see edges of her hot pink bra peeking out in various locations around her chest and shoulders.\n\n\"Thanks daddy!\" she said, cocking one leg back with an innocent little half twist.\n\nWhen I looked up, I could tell I had been caught looking. Trying to save face, I quipped \"Headed to the Britney Spears comeback tour?\"\n\n\"Ha ha! You're showing your age again, dad.\"\n\nOuch. That was a low blow.\n\n\"It's part of my surprise,\" she explained. \"I asked all the girls to put on something extra sexy tonight.\"\n\n\"What!?\" I exclaimed. Suddenly the room felt stuffy. \"I don't know if it's a good idea for me to be hanging around if that's what you guys are planning on wearing.\" I was becoming more and more uncomfortable with this whole thing. Between the visions my perverted mind was creating and the outfit my daughter was wearing, I could feel my cock start to react a little. \n\n\"You promised to help,\" she reminded me. \"Besides, wouldn't you like to see Kristy in something sexy?\"\n\n\"That's a little inappropriate, don't you think? I'm more than twice her age, Kristy is your best friend, and I'm marr...\" but she didn't let me finish.\n\n\"I heard you last night, dad,\" she said simply with wicked grin. She was grinning at me a lot lately.\n\n\"I think maybe you misunderstood somethi...\" I tried to explain in a panic.\n\n\"You were saying both Kristy's and Amy's names last night when I walked in on you dad. I was standing there for like five minutes watching you.\" Then she added with a wink, \"You're a dirty, dirty man, daddy\"\n\nMy mind was trying to cope with two different revelations at that moment. One - that I had been caught saying God-knows-what about my daughter's friends while masturbating, and two - that my daughter had not only walked in on me the night before, but had stood there watching me until I had finished and opened my eyes to see her standing there.\n\nI just stood there, wanting to say something, but thinking of nothing to say. This was not a conversation I ever expected to have with my daughter. She was obviously not offended or upset though, as she seemed amused watching me process all of this.\n\n\"Don't worry dad. I won't tell my friends or mom. They're your fantasies. Enjoy them!\"\n\nI stared at her speechless.\n\n\"Besides, why do you think I told them to dress up tonight when I knew mom would be away?\" she asked. \n\n\"And they agreed to dress up like that?\" I asked back incredulously.\n\n\"Well, they don't know it's for you, but yeah. They agreed to it.\"\n\nMy mind was finally starting to wrap around the reality of what was happening, and I could feel my cock start to swell again. I was actually going to have these young girls running around my house in sexy outfits, just like I had fantasized. I kept thinking I was about to wake up and realize I was dreaming, but I was definitely already awake, and this was no dream. My mind kept going back and forth between excitement and guilt. Trying one last time to maintain at least some semblance of a responsible adult, I started to make my counter-argument.\n\n\"Forget it dad,\" Lindsay interrupted. \"I know you're trying to be \"appropriate\" and all, but the girls are already on their way over and I'm holding you to your promise to help tonight.\" Then she very slowly and purposefully looked down and stared straight at the bulge in my pants, causing it to swell a bit more. At this point I was almost completely hard. \n\n\"Besides,\" she continued, still staring at my crotch. \"I think you like the idea.\" She looked up again. \"Now let's get set up. Kristy called while you were in the shower and they're on their way.\" Lindsay leaned over and kissed me on the cheek, and then proceeded to lead me down to the basement family room where the girls would be hanging out all night. As she walked away, I couldn't help but check her little outfit and wonder just how far she would have to bend over for me to get a peek...\n\nWhen we walked into the family room, I saw Lindsay had already set up some things in preparation. The back of our family room has a small squared out room/entryway area that provided outside access to the basement family room. Lindsay had strung up a blanket as a makeshift curtain, closing off the small area from the rest of the large room. The main floor area was covered in pillows gathered from throughout the house, blankets, and a few of our family sleeping bags thrown over to one side. The couch and the futon had also both been pulled out to provide more lounging/sleeping area.\n\n\"Looks like you've got it pretty much taken care of down here. What's up with the blanket hanging in the back?\" I asked.\n\n\"That's where I'll need your help,\" she replied. I started to walk back, but she caught my arm and said, \"Not yet. Let's wait till everyone gets here first. I want to make sure no one is going to chicken out.\"\n\n\"Chicken out? What are you planning Lindsay?\"\n\n\"You'll see.\" And with that, the doorbell rang.\n\nI made my way to the kitchen as Lindsay answered the front door. Judging by the voices, all the girls had arrived at the same time. They greeted each other loudly, which only emphasized the sudden drop in volume when they started whispering to each other. \"Boy talk\" I thought to myself before hearing a loud burst of laughter break out. Just then Lindsay poked her head into the kitchen to inform me they were going downstairs and asked if I could bring the pizza we had ordered down when it arrived. I agreed and watched as she headed back to the foyer to lead the other girls downstairs.\n\nWhen the pizza arrived, I paid for the food, gathered some paper plates and towels, and gave my crotch a quick glance to make sure nothing was too obvious. I couldn't stop thinking about what Lindsay had said about the other girls getting dressed up too. Taking a deep breath, I double-checked that I had everything and made my way downstairs. As I came around the corner at the bottom of the stairs, I was almost capsized by a speeding, giggling blur of brunette hair and large tote bags.\n\n\"Sorry Mr. D!\" two voices exclaimed from behind my pile of plates, boxes, cups, and assorted things I carried. I half-turned, half caught out of the corner of my eye, two petite figures rush by into the bathroom behind me. \n\nRegaining my bearings, I stepped into the living room and deposited everything on the table Lindsay had moved along the side wall. Nervous and excited, I finally allowed myself to look up - but the girls were gone. Then I heard voices behind the curtain Lindsay had set up over the back entrance. \n\n\"Are you serious!?\" I heard Kristy's voice say. \"...but what if your dad comes down?\"\n\n\"Don't worry about my dad,\" I heard Lindsay reply. \"He has plans for the night. He won't even be here.\"\n\nNow I knew something was up, because Lindsay knew I wasn't going anywhere. She had made me promise not to go out so I would be here. \n\n\"Pizza's here!\" I called out, announcing my presence. I heard a fresh batch of giggles coming from behind the curtain when my daughter poked her head out.\n\n\"Thanks dad.\" Her face seemed slightly blushed. \"Anne and Elizabeth went to change into their sleep clothes.\" She winked as she said this. I didn't know who Elizabeth was, but I knew Anne was also one of Lindsay's closest friends. I guessed that Anne and Elizabeth were the two giggling brunettes that almost ran me over in the hallway.\n\n\"I think that's all we need,\" she continued. \"I'll come up and say goodbye before you leave.\" She said this with a wink, indicating I was to play along.\n\nI'll admit I was pretty disappointed I didn't get a chance to see any of the girls in their outfits, but then I scolded myself for acting like a teenager and headed back upstairs. As I walked by the bathroom, I could resist taking a quick peek through the open, old-style key lock on the door. Almost as soon as I had put my eye up to the keyhole though, I quickly pulled back. It looked like one of the girls had been turned towards the door, and I swear I saw her eyes flicker towards the keyhole right as I had looked through. I paused for a second, expecting to hear offended screams about perverted old men, but no screams rang out. Once my heartbeat slowed again, I realized that I had also caught the briefest glimpse of a cute, small, naked butt reflected back at me through the mirror. I tried to recapture the image in my head, but it had been so brief and fast that I couldn't keep the picture clearly in my mind. Trying to be a good guy, I headed up the stairs before I could convince myself to take another peak.",
        "About twenty minutes later, Lindsay came bounding into the living room and plopped down next to me on the couch. Her tiny skirt flipped up a bit as she did and I couldn't help noticing she was wearing thigh-highs; another of my weaknesses. I didn't even know my daughter owned thigh-highs.\n\n\"So I'm heading out for the evening, am I?\" I asked. \n\n\"What?\" she asked. I told her I could hear her talking to her friends when I took the pizza down.\n\n\"Oh, that,\" she said. \"I was just telling them that so they wouldn't know it was you.\"\n\n\"I see,\" I responded half paying attention to her and half paying attention to the movie I was watching. Then what she said clicked. \"Wait. What do you mean so they won't know it's me?\"\n\n\"You'll see,\" she responded, echoing her earlier promise. \"Go around outside and meet me behind the curtain downstairs in an hour.\"\n\n\"If you say so,\" I agreed. \"Anything else?\"\n\n\"No, but make sure you get something to eat, drink - and use the restroom before you come down. It's going to be a long night and I don't know if you'll get a chance for a break\"\n\n\"What in the world are you up to, Lindsay?\" Now I was worried.\n\n\"Just meet me downstairs in an hour,\" she said as she started to walk away. \"...and don't forget to go around the outside of the house. You're not supposed to be here, remember?\"\n\n\"Yeah, yeah, yeah. I'll see you in an hour,\" I replied blandly. Secretly though, my curiosity was peaked. I might actually get a chance to see Kristy in a sexy outfit after all!\n\n\n\nAn hour later I had eaten and freshened up. Feeling a little nervous about what Lindsay's plans might be, I went outside, around the house, and quietly entered the family room behind the curtain. I could hear a movie playing and occasional comments by the girls. As tempted as I was to peak out and see what was going on (and what the girls were wearing), I didn't want to ruin Lindsay's surprise. I kept quietly behind the curtain for about 5 minutes before I heard my daughter tell her friends that she was going to get things set up. When one her friends asked to help, she turned down the offer and told them they were not to look until she said so. A few seconds later she stepped behind the curtain and asked if I was ready.\n\n\"Um...I think so\" I replied dubiously.\n\n\"Let me check your breath,\" She leaned up into my face as I gently blew. \"Good!\" she confirmed. Then she asked me to step outside with her for a second. When we were outside, she looked at me with an almost sad smile and spoke.\n\n\"Dad... I don't know how to say this in a way that won't shock you, so I'll just come right out and say it.\"\n\n\"Ok,\" I could tell that as confident as she had been all day, she was now genuinely nervous to say what was on her mind.\n\n\"Dad... I set up this party to get you laid.\"\n\n\"What!?\" I barely choked out.\n\n\"Please listen, dad. I know that you and mom haven't had sex in years...\"\n\n\"Lindsay, this isn't somethi...\"\n\n\"Just let me finish,\" she interrupted. \"I know you would never cheat on mom under normal circumstances. I also know that even though you have fantasized about Kristy and Amy, I know you would never actually try anything or hurt any of my friends.\" She continued, \"...but you are a man, dad. I'm not stupid. I know what men want. I'm actually pretty amazed you haven't cheated on mom already. Sex once every few months probably sucks, but I don't know how you managed to go without for years.\"\n\nI was still at a block and didn't know what to say. Was I hearing all this right? My own daughter was trying to get me to cheat on her mother, with her best friends? Lindsay could see it was taking me a moment to process all of this and took advantage of my continued silence.\n\n\"I got this idea from a college social site I was on. They were talking about different kinds of parties and games,\" she continued. \"Most of them revolve around drinking, sex, or both \u2013 of course. The one that really caught my eye though was called The Anonymous & The Curious.\"\n\nMy daughter was looking up sex games on forums? My daughter wanted me to play sex games with her friends? My mind was still racing and my mouth still was not working as my daughter continued.\n\n\"...and the guy sits in the chair with a hood on all night. As the night goes on, if any of the girls want to check out his penis, she can do it without worrying about the guy knowing who she is, or if she knows who the guy is, or worrying about being judged. She can just look, touch, experiment, play, kiss, suck, or even fuck the guy's dick as much as she wants \u2013 whenever she feels like it.\"\n\nThe block in my mind released.\n\n\"What the hell kind of websites are you getting on Lindsay!?\" I almost yelled. \"You want me to sit in a chair so your friends can play with my dick?? Forget that it's your friends or that your mom is my wife. Have you even considered the age difference involved here?\"\n\n\"Dad!\" she interrupted. \"Be quiet or you'll ruin everything. Yes, I thought about all of those things. The girls don't need to know who you are, or how old you are. Your head will be covered by the hood I got. Besides, I already told the girls about the party and they loved the idea! We don't have a lot of experience, dad. This would give them a chance to see what a real man's penis is like without the embarrassment. If you think about it, it's kind of like hands-on sex education. Whenever they're ready, each girl can come over and check you out - well, your penis anyways. I told them I could guarantee the person I picked would understand the rules and know that it's not about them. I also told them whoever I picked would be patient, kind, clean, and STD free.\" She paused as she could see I had more questions to ask.\n\n\"What about pregnancy?\"\n\n\"I have condoms if we need them,\" she stated simply, and pointed through the door window to a small mixing bowl sitting on a table by the chair she had set up. It was full of a variety of condoms. \"We collected them from various places\" she said, answering my next question before I could ask it.\n\n\"And what the hell did you do to that chair?\" I asked, also pointing in the window. The chair Lindsay had set up looked to be a four-legged, reclined, molded plastic dining chair. It appeared to be a normal chair, but for one exception. The front center of the seat had been cut away. The actual sitting portion of the chair was now shaped like a large \"U\" with just enough back edge to barely sit on, and just enough side edges to hold the chair together while supporting my legs \u2013 provided I keep them slightly apart. The whole thing had been crudely covered with what looked like thin foam padding and a soft fabric. I could also make out four wide strips of Velcro at the top of each chair leg, just under the seat.\n\n\"I tried to make it as comfortable as I could, but I wanted to make sure your balls had room to hang so the girls can get to them too if they want.\"\n\nMy head started spinning as my daughter made this last remark. I suddenly realized I was harder that I had been in years and my throbbing cock was now poking straight out in my pants. Lindsay didn't make any notice of it, so I tried to ignore my excited state and asked her about the straps on the chair.\n\n\"I'm not really into S&M stuff,\" I said.\n\n\"The straps are to help make the girls feel safer. It helps them feel like they are in control and free to explore and experiment at their own speed. If things go like I hope and the girls get comfortable with everything, maybe we can take them off later.\"\n\nI was searching my head for some logical argument to make. My grip on morality was failing fast and my daughter could see I was struggling for any reason to resist further. My daughter had planned everything brilliantly, and left me little to work with. I kept asking myself if this was really happening. The details and reality of what she was suggesting were finally beginning to congeal in my head.\n\n\"So they won't know it's me, and I won't know which of them is...um, touching me, right?\" My resistance was almost gone now.\n\n\"Well...\" she began. \"...that's where I modified the website's idea a bit. I made you a special hood you can see out of almost perfectly, but they won't be able to see you.\"\n\nI felt my cock throb against my pants when she said this. I would actually get to watch these young girls use my cock for their own curiosity and pleasure, without them knowing I was really their best friend's dad. Then a thought occurred to me.\n\n\"What if they change their minds or get freaked out?\" I asked.\n\n\"I told you. I already discussed this with them. They're really excited, dad. Kristy told me she already masturbated twice this morning thinking about it, and Amy told me she was already soaking wet when she got here.\"\n\nThat was it. My last barrier of hesitation and decency washed away as I finally nodded to my daughter.\n\n\"Ok,\" I resigned. \"I guess you got all the answers, and I did make you a promise.\"\n\n\"Yay!\" my daughter cheered as she clapped her hands, kissed me right on the lips, and gave me a big hug. I became all too aware of my massive erection pressing against her as she held me. She must have felt it to, because when she let go she looked directly down at my bulge and said \"Let's get that thing some of the attention he deserves.\"\n\nQuietly we stepped back inside the house behind the makeshift curtain. \n\n\"Time to get naked, daddy!\" Lindsay said with enthusiasm. I was about to protest, but then realized at this point it would be kind of dumb. I stripped off my shirt and pants as my daughter stood there watching. I was about to pull my boxers off when one last detail occurred to me.\n\n\"Um, you're not going to be...you know...um, participating,\" I asked hesitantly. It was one thing to let her friends fondle me anonymously, but I didn't think I was ready to let my own daughter touch me like that. \n\n\"No dad,\" she answered quickly. \"I already told the girls I wouldn't be doing anything since I know who the guy is. I told them it would make things way too awkward.\"\n\n\"Oh. That makes sense, I guess.\"\n\n\"Besides, Kristy has already offered to throw a party at her house for me.\"\n\n\"WHAT!?\" I yelled in a whisper.\n\n\"I'm just kidding dad. I'm not \"participating\" here or at any of my friends' houses.\" she laughed.\n\n\"Right,\" I said, confirming her statement to myself more than anything. And with that, I leaned over and slid my boxers off. Now I was standing completely naked in front of my daughter with a full erection.\n\n\"Wow, dad!\" Lindsay exclaimed. \"Mom's an idiot for not taking advantage of that on a regular basis.\" She was now staring openly at my aching cock. \"Well let's get you strapped in.\"\n\nAs I sat on the chair, I realized that I had even less surface to actually sit on than I had originally thought. The cut away in the chair not only left room for my balls to hang freely, but also left most of my ass exposed too. My daughter knelt down in front of me and reached out for the Velcro straps. She managed to wrap the front straps around my legs without any problems. However, when she leaned over to get to the back straps, her arm brushed against my cock making it jump.\n\n\"Sorry\" she said, but from the smile on her face I had my doubts. Then she leaned over for the last strap. She was making an exaggerated show of trying to avoid accidentally touching me with her arm again, but this exposed her chest to my crotch as she bent over for the last strap. As she wrapped the last strap around my arm, I felt her chest come into contact with my member. I might have thought it was an accident, except that she didn't pull away. I could feel the flimsy material of her shirt against the shaft of my cock.\n\n\"Just...having...trouble...with this...last....strap...\" Lindsay grunted. It seemed like she was having trouble on purpose, and I could feel the rough lace edging on her bra. If she moved any more I would be touching...\n\nThen it happened. Lindsay got the last strap on with one final stretch, and when she did I felt the bare swell of her breast press roughly against the head of my naked penis. The soft heat of her skin against mine caused my body to react unconsciously, and I thrust up slightly against her soft flesh and groaned. \n\n\"Easy there big chief,\" my daughter kidded as she stood up. \"Why don't you save that for the girls?\" \n\n\"Sorry,\" I said sheepishly. I didn't know what else to say.\n\n\"No worries,\" she replied with a smile. \"Well, are you ready?\"\n\n\"As ready as I can be.\"\n\n\"You can say that again,\" she said looking down at my crotch. \"Well, here we go.\" And with that, Lindsay placed the hood over my head. \n\nShe was correct. It was amazing how clearly I could see through its black material. It was no more restricting than wearing a pair of sunglasses. My chest was pounding as I realized this was really about to happen. There was no turning back now.\n\n\"Now remember,\" Lindsay whispered. \"You have to act like you can't see who's touching you. You can't say any names. You can't talk to the girls directly \u2013 unless it's to moan or say they're doing a good job or something. You don't want them to figure out who you are.\"\n\nThen without warning, my daughter reached out, took my hard cock in her hand, gave it a quick squeeze, kissed me on the cheek, and said \"I love you, dad. Have fun.\" Then she disappeared behind the curtain to rejoin the other girls.\n\nI could hear the other girl's asking Lindsay if everything was ready. Lindsay assured them everything was going to plan. Their penis had arrived and her dad was gone for the night. She told them the movie had about fifteen minutes left, and then she would unveil their surprise.\n\nThe next fifteen minutes seem to take an hour. I could hear indistinct whispers and laughter coming from the other side of the curtain every now and then. The time to myself gave me a chance to really digest what was about to happen, and I began to fantasize about each of the girls.\n\nLindsay and Kristy were both the same age and had grown up together. At one point along the way though, Kristy was moved up a grade. Kristy had long, straight, light blonde hair that she almost always wore in a ponytail. She was 5'8\" and slightly taller than my daughter. She had the kind of body that Playboy looks for. She was petite in the waist, but had a gorgeously curved ass and large breasts that seemed too big for her thin frame. If they had still been printing the magazine, she would have been a lock for a centerfold. Her green eyes, pouty lips, and the permanent look of mischief on her face made her a constant focus of my fantasies.\n\nLindsay, my daughter, was about 5'6\" with an athletic body. Her medium length dark blonde hair contrasted her bright blue eyes beautifully. Being a man, I have noticed her tight muscular butt and legs. Her hips weren't as curvy as Kristy's, but her butt was hard and protruded nicely when she wore tight jeans and sweatpants. Her breasts were a small C, but looked perfect on her sporty body. I had to learn a very long time ago to get used to the way boys would look my daughter up and down when we were out. \n\nAmy was the cutest thing I had ever seen in my life. Amy was a freshman, just over 5', and very petite. Her father was white American and her mother was Japanese. Amy, it seemed, got the best of both worlds. Her short, shoulder length black hair and deep brown eyes always drove me nuts. Her petite body was elegant and graceful, even for her age. While she didn't have the curves the other two girls had, she had just enough to tease something truly sexy under those clothes.\n\nThe last girl I knew at the party was Ann. Ann was a freshman too. She had met Amy in school, and through Amy she had met Lindsay and Kristy. Ann was about the same size and build as my daughter, with just a bit more curve. She was also very athletic, but with much larger breast \u2013 I guessed DD. She had just a little more curve in her hips, and her butt was also slightly bigger than Lindsay's. Not that it was flabby by any means! She just always seemed to have a tiny bit more jiggle than Lindsay. Ann had those jet-black eyes that I have always loved, and a seductive innocence in her face that, while it drove me wild, never seemed quite real. Out of all the girls, I was most interested to see how Ann was going to react to my daughter's experiment.\n\nThe only other girl at the party was Elizabeth, and I only knew her name because my daughter had said it to me earlier. The only thing I could say for sure about her was that she had the same black eyes as Ann, and she had a tiny, sexy little butt. I came to this conclusion after realizing Elizabeth must have been the girl I saw through the keyhole earlier. I would have recognized Ann if it had been her. \n\nMy mental review of the girls and their bodies was suddenly interrupted by loud hoots and hollering. It sounded like the movie was over and the girls were ready for Lindsay to make her big reveal. My erection went down a little bit with nervousness, realizing I was about to be exposed to these girls. The sounds of all the girls walking across the room told me I was out of time. I could hear the girls giggling as a hand that must have been Lindsay's reached behind the curtain.\n\n\"And now ladies, I present to you...\" she pulled the curtain aside with exaggerated flourish. \"The Penis!!\"\n\nI was glad for the hood at that moment. Not only had I turned bright red at being exposed, but my jaw dropped open and didn't close again for minutes once I saw the girls in their outfits. I could have been drooling and would not have known it. While I had seen Lindsay's little schoolgirl outfit, I was not prepared for the heavenly vision that stood there in front of me at that moment.\n\nThe first thing I noticed was Elizabeth, as she was the unknown of the bunch. She was definitely younger than all the other girls. Her tiny, petite frame showed just the slightest curve in her hips, and her small breasts were just buds. She had the same black eyes as Ann however, and after a closer look I realized she must be Ann's younger sister. She was wearing a pair of white cotton panties that looked too small for her. They appeared to have been stretched to their limit just to get them on. I could see the edges of her pubic mound just sticking out on either side of the crotch material, and a very obvious case of camel-toe. Her top was a simple white t-shirt that said \"Cutie\" across the front in large, pink, outlined letters, and she was wearing pink and white striped knee socks. The overall effect of her outfit was very naughty lolita-esque. \n\nAnn was standing next to Elizabeth wearing a similar outfit. She had on the same t-shirt, but it seemed barely able to contain what was underneath; while her panties were light pink and higher cut than her sister's. I was dying to see what they looked like from behind. She had also had on knee socks, but hers were solid white.\n\nNext my eyes travelled over to Amy, who was wearing an emerald green sheer one-piece. She had her hair held back with a head band and was also wearing black thigh-highs. I could easily see her small, dark nipples pressing against the sheer material. My eyes wandered down between her legs, but I couldn't make out any hair there. Either the outfit's crotch was solid, or Amy kept herself shaved smooth. Either way, this was quickly becoming more than I could stand. My cock was standing straight up with no shame, and all I could do was sit there and admire these gorgeous young girls.\n\nFinally, I let my eyes settle on Kristy. Kristy was wearing a simple, sheer, white silk robe. It hung open and revealed a sexy white bustier, matching white lace high-cut panties, and white thigh-highs with vertical stripes patterned into them. A white satin choker with a diamond embedded in the middle topped off the outfit. Kristy was staring right at my swollen cock and licking her lips. Suddenly the room seemed very warm.",
        "While it seemed like forever that I sat and took all this in, it was really only a few seconds. As soon as I was revealed, the girls got quiet. The four girls that weren't mine were all staring directly at my crotch. Lindsay, on the other hand, was looking straight into my face with the biggest smile I'd ever seen on her.\n\n\"Wow Lindsay!\" Kristy exclaimed. \"That is a beautiful cock! Why aren't you dating that?\"\n\n\"Trust me,\" she replied smiling \"it wouldn't work out.\"\n\n\"With I cock like that, I'd make it work.\" Kristy rebutted.\n\n\"I've never seen an older guy's penis before. Just my old boyfriend's,\" Amy commented. \"It's so big.\"\n\nLindsay laughed. \"I knew you guys would love his dick.\"\n\nListening to the girls talk about my cock this way was really starting to drive me crazy. \n\n\"So, he's just going to sit there all night?\" Elizabeth asked.\n\n\"Yep,\" my daughter confirmed. \"Any time you want to see or touch his penis, all you have to do is walk over and do your thing.\" She was obviously very proud of this little event of hers.\n\n\"You don't have to if you don't want to Elizabeth,\" Ann stated.\n\n\"Nervous, are we?\" asked Kristy\n\n\"She's still a virgin,\" Ann responded candidly.\n\nIf I had something to drop, or a mouth full of water to spit, I would have. Elizabeth was a virgin? This was not something I had expected and started to panic a little. My daughter must have seen me move a bit and figured out my concern.\n\n\"Don't worry Elizabeth,\" she said. \"Kristy can help you learn your way around a penis. Can't you Kristy?\" This distracted me from my immediate concerns.\n\n\"Absolutely!\" Kristy said. And with that, she dropped to her knees right in front of me, and without using her hands she swallowed my whole cock in one go. She immediately started working her tongue up and down its length, all while keeping me completely in her mouth and sucking like a pro.\n\nThe whole thing \u2013 the buildup, the outfits, sitting here naked in front of five beautiful young girls, and now having my daughter's best friend sucking my cock \u2013 was too much. I could feel my balls and whole body start to tighten up. Sensing the inevitable, Kristy gagged as she shoved my cock all the way down the back of her throat. With a loud groan, I came harder than I had in years. The hairs on my head were standing up as I shot thick load after thick load into Kristy's beautiful mouth. She didn't miss a beat, swallowing all she could. When I had finally stopped twitching, she let my cock fall out of her mouth. I could see a couple drips of cum making their way down her chin as she stood up. The other girls were all staring at her as she used her finger to wipe one glob of cum off her face.\n\n\"Here ya go, Elizabeth. Taste it,\" she said, reaching her hand out and offering her gooey finger to the smallest girl.\n\nElizabeth looked nervously at the cum-covered finger, then at her sister, then at the other girls, and then back at Kristy's finger again. Looking like she made a conscious decision in her head, Elizabeth reached out, took Kristy's finger, and stuck it in her mouth. The other girls watched with wide eyes as she sucked all of my cum off the offered finger. \n\n\"It taste's a little weird,\" Elizabeth reported. \"It's kinda sweet, but a little salty at the same time.\" She stood there looking like she was studying the taste some more. \"I like it,\" she finally determined.\n\n\"Every guy taste's a little different,\" my daughter told her.\n\nWait! Was that my daughter talking about the taste of cum? \n\n\"It's true,\" Kristy finished. \"You actually got lucky Elizabeth, because Lindsay's friend here tastes pretty good. He must drink a lot of fruit juice,\" she laughed.\n\nThen Amy looked back over at my now limp cock.\n\n\"What about that?\" she asked. \"How long do we have to wait after he cums before it will get hard again?\"\n\n\"Every guy is different,\" Lindsay answered \"...but I have a feeling we won't have any trouble getting this cock hard over and over again.\" She was once again smiling directly at me through my hood.\n\n\"Can I try?\" Amy asked.\n\n\"Go for it,\" Kristy encouraged.\n\nAmy stepped forward and knelt down in front of me. When her hand touched my cock, it moved slightly. She pulled her hand away quickly as if a dog had just snapped at it.\n\nThe other girls laughed \"Go ahead Amy,\" my daughter encouraged. \"Stroke it and get him hard again.\"\n\nAmy nervously reached out again and took my cock in her hand. As soon as I felt her soft hand on my dick, I knew it wouldn't take much to get me hard again.\n\n\"Oh wow!\" she marveled. \"It's getting hard already.\" She began stroking my cock up and down, slow and steady. \n\n\"Do you want to help her?\" Lindsay asked Elizabeth.\n\n\"I just want to watch at first,\" she replied timidly.\n\n\"How about you Ann?\"\n\n\"Well...Ok,\" Ann replied nervously, dropping to her knees beside Amy.\n\nWhile Amy was stroking my cock, Ann had set her hands on my leg. As she watched my cock throb in her friend's grip, nature started to take over and I felt her hands beginning to move curiously over my thighs. All I could do is moan as these two girls did their thing. Amy kept stroking my cock, sometimes with one hand, sometimes with two. Meanwhile Ann's hands had found their way to my balls. She was gently fondling them and letting her fingernails glide over their sensitive surface. I was in heaven. At Kristy's insistence, Amy spit in her hand and resumed jerking my dick. I couldn't believe how amazing these girls were making me feel. What really blew my mind was when I felt Ann's fingertip slide even further down and back until it rested right against my asshole. I could see she was entranced watching Amy play with my dick, and I felt her fingertip begin to work in small teasing circles over my asshole. After a few minutes of this I was rock hard again, and the girls sat back to admire their handiwork.\n\n\"Nice job Amy,\" Kristy complimented. \"Put it between your tits, Ann!\"\n\nAnn looked at Kristy for a second, and then at my cock. She obviously had never considered this idea before. Amy moved out of the way so Ann could get right up between my legs. I watched as she pulled her \"Cutie\" t-shirt up over her head. She wasn't wearing a bra, and my mouth dropped open again as Ann's beautiful breasts were exposed to me. For the first time, I could see she was larger than I had previously thought. If anything, removing her bra had made them seem larger. They had very little sag despite their size, probably due to her young age. Ann's nipples were rosy red like her lips and about the size of quarters. I wanted to squeeze and suck them so bad.\n\nAnn leaned forward and slowly squeezed my cock between her tits. It took a couple tries until she was able to coordinate her movements without my cock popping out of her grasp, but after a few minutes she was working her tits up and down my shaft like a pro. At Kristy's recommendation, every now and then Ann would lean forward and either lick the head of my cock as it poked out from between her heavenly globes, or spit on it for more lube. My head fell backward as I lost myself in the pleasure.\n\n\"I think he likes it Ann,\" said Lindsay. I looked up at my daughter and nodded. While the other girls couldn't see my face, my voiceless nod was all they needed to know they were doing a great job. Encouraged, Ann picked up her pace and started moving her boobs even faster up and down my cock. I saw Lindsay lean over and whisper something in Amy's ear. Amy looked shocked, and then smiled innocently as my daughter nodded her on. When she walked around behind my chair I lost sight of her. I could hear her movement, but had no idea what she was doing. I wondered what my daughter had said to her.\n\nThen I felt my balls being engulfed in soft, wet, warmness. My eyes flew open (unseen by anyone else of course) as I realized Amy had laid on the floor and scooted herself under my chair from behind. Once she was lying under the chair, Amy had begun sucking and licking my balls eagerly. I was moaning now, and this seemed to please the girls. Ann was now practicing squeezing her boobs together in rhythm with her up and down stroking; which was amazing. Amy's tongue was making long slow licks from just behind my balls to and over my tight sack. With every lick she seemed to start just a tiny bit further and further back. Ann told the other girls she could feel me throbbing faster now, and they all circled around to watch. Just then, Amy's tongue found my asshole. The erotic shock of feeling her tongue on my asshole was too much. I began shooting load after load all over Ann's beautiful tits. Ann kept jerking even when a couple of shots managed to hit her in the face. Eventually my orgasm subsided and Ann let my cock slip from between her boobs. Amy had also crawled out from under the chair with a very naughty grin on her face. Ann used her fingers to wipe off her face, and then proceeded to lick them clean.\n\n\"Mmmmm, you're right Kristy. He does taste good,\" she agreed. \n\n\"I wanna taste!\" whined Amy. She didn't wait for a response as she leaned forward and began licking my cum off of Ann's tits. Over, around, and between; Amy licked as much of the sloppy white mess off of her friend's boobs as she could. Ann moaned each time Amy would focus on one of her nipples as I watched with growing jealousy. When Amy had managed to clean most of the cum off Ann's tits, she looked up at the other girls and smiled. Some of the sticky seed was still smeared on her lips and cheek. When Lindsay laughed about this, Amy offered her a small drip from her cheek. I must have moved a bit in shock at the offer, because I saw Lindsay's eyes shoot toward me briefly before responding.\n\n\"Eeeww,\" she playfully refused. I relaxed slightly. \n\nThen I saw Lindsay put her finger to her lips, giving Amy the universal sign for \"quiet\". I watched in shock and excitement as my daughter then pulled her friend close and stuck her tongue in Amy's mouth. I watched as they kissed deeply, and I could see their tongues working in and out of each other's mouths. When Lindsay finally came up for air, she looked at the girls and rubbed her hand in small circles over her stomach, indicating that I was indeed \"yummy\". The girls giggled and I was in total shock. Lindsay glanced my way and winked mischievously. \n\n\"I think we should give him a break for a minute,\" said Kristy. \"I know you said we wouldn't have any problems getting him hard, but we still have all night.\"\n\n\"Yeah, I guess,\" Lindsay responded, and they made their way back to the television.\n\nI was glad for the break. As much as I didn't want this to ever end, I needed the time to comprehend what had just happened \u2013 and what was still to come. Lindsay had also supplied everyone with wet-wipes and towels. The girls had been nice enough to wipe me down before returning to their normal slumber party rituals. That had been a strangely erotic experience in and of its self. \n\nLindsay had arranged things so I could watch the TV from where I was when the girls weren't playing with me. About three quarters of the way through their next movie, I realized I had stopped watching the film and was focused on the girls again. Ann hadn't bothered putting her bra back on, and from this vantage point I found out that both Kristy and Amy's underwear were thongs. Their beautiful round asses begged to be handled and used every time one of them bent over. I assumed Lindsay was also wearing a thong. While I could just make out the bottom curve of her ass cheeks every now and then when she would bend over a bit, she was being very careful not to bend over too far and show too much. I assumed this was her attempt to maintain some kind of father/daughter modesty; though after all that had happened so far, I didn't see the point.\n\nWhen the movie had ended, I was disappointed to see the girls turn on one of our gaming systems instead of coming back over to where I was. By this time, I had recovered and was eager to see what else might happen. Instead, they sat in a half circle, laughing and playing whatever game had caught their attention. Every now and then, one of the girls would turn around and look back at me. I could feel their eyes looking me up and down and staring at my cock. Then one of the girls, usually Lindsay or Kristy, would encourage whoever was peeking to go have some fun; but then the curious girl would hesitantly say no and turn around again. After a while of this, I was worried the girls were starting to have second thoughts. Then as the girls were trading controllers for the next round of whatever game they were playing, Lindsay stood up and announced she was going to check on their penis.\n\n\"How are you doing?\" she asked softly so no one could hear. She undid each Velcro strap one at a time to rub the area underneath before reattaching them. \n\n\"I'm not going to lie, sweetie. This is by far the most erotic thing that has ever happened to me.\"\n\n\"I'm so happy you're enjoying yourself daddy.\" \n\n\"You could say that,\" I responded. Then Lindsay did something I was not expecting. She sat right down on my lap sideways. My erection, which had returned to about half by then, immediately sprang to life. My cock was now straining against my daughters naked ass cheek as she leaned over to whisper in my ear.\n\n\"You did taste good, daddy,\" she said. My cock throbbed hard against her and she smiled in response. \"I think you're ready to go again.\"\n\n\"Yeah...\" was all I could muster. I couldn't get my mind off of Lindsay's warm ass pressed against my dick.\n\n\"I think it's time you fucked someone,\" she said. Again my cock jumped at her words and she giggled. \"Who do you want daddy? Which of my friends do you want to put your dick inside first?\"\n\n\"I...I...uh,\" was I a managed to say. \n\n\"How about Amy? I know you've fantasized about her.\"\n\n\"Oh my God...\" I muttered. It was more of a reaction to the thought of being inside Amy than it was an agreement, but Lindsay took it as such and walked back over to her friends. I saw her lean over and say something to Amy. The other girls giggled as Amy looked back towards me. I couldn't make out the expression on her face before she turned back around. I wasn't sure what was said, but I saw Lindsay stretch and give me a thumbs up behind her back where no one else could see. My cock throbbed again. When the next round of the game was over and the girls started trading controllers again, I saw that this time Amy was the odd person out. As the next round began and the other girls started playing, Amy slowly stood up and started walking back towards me.\n\n\"Have fun!\" Lindsay called out. I didn't know if she was talking to me or Amy.\n\nAs Amy approached, she seemed like she was in a trance. She was staring at my cock and went straight to her knees when she reached me. Without hesitation, she leaned over and took my hardness into her mouth. Once again I felt her other hand start working my balls, but before long her fingernails had traced their way over my sack and back to my asshole. Amy was now attempting to stuff as much of my cock as she could down the back of her throat. She was gagging herself to the point of drooling all over my dick and balls. I hadn't seen many girls use this technique in real life. In fact, I had only ever seen sloppy blowjobs like this in porn videos. All the extra lubrication felt amazing, and I wondered how much porn Amy watched. The whole time she kept working her fingertip over and around my sensitive asshole. Once or twice she even stuck just the tip of her finger inside me, would give it a little wiggle, and then pull it out again to continue teasing me. My eyes had closed from the amazing sensations I was feeling, and when I opened them I saw we were no longer alone.\n\nDistracted from their game by the sounds of Amy's wet and sloppy blowjob, Elizabeth had also wandered over to watch. She was entranced watching Amy's talented mouth and hands working their way over my rock hard member.\n\n\"Do you want to try?\" Amy asked Elizabeth, pulling my cock out of her mouth with a loud, sucking pop. Elizabeth just nodded, and Amy moved to the side for her. \n\nWatching this tiny girl wrap her small soft hands around my cock was amazing. She looked up at Amy, wondering how to proceed.\n\n\"Have you ever given a blow job before?\" Amy asked. Elizabeth shook her head.\n\n\"Have you even touched a penis before?\" Again Elizabeth shook her head.\n\n\"Ok then,\" said Amy. \"Every guy likes their blowjobs differently. Some guys like spit, some guys don't. Some guys like it when you use your hands and some guys prefer it without. Some guys like it when you play with their balls, and some guys like it if you play with their ass. You just have to pay attention to how he responds and learn what each guy wants.\"\n\nI was impressed with Amy's knowledge of giving head. \n\n\"How many guys have you been with?\" Elizabeth asked Amy softly.\n\n\"Just my ex-boyfriend,\" she responded. \"...but I watch a lot of porn.\"\n\n\"Was your ex-boyfriend this big?\" Elizabeth asked.\n\n\"God no!\" Amy exclaimed. \"This was a couple years ago, and even then he was another year younger than I was.\"\n\nIn her ex-boyfriend's defense (or maybe not), I'm not huge or anything - slightly larger than average maybe, but not huge. In my years I've known women who barely fit half my cock in their mouth, and I've known women who could take it down to the base. Like everything else in sex and life, it just depends on who you're playing with. Elizabeth hadn't enough experience to completely understand this yet and was staring at the hard cock in her hand apprehensively.\n\n\"Here's some basics to get you started,\" Amy helped. \"You can start with these and then adjust for whoever your giving a blowjob to.\" \n\nElizabeth blushed slightly at the assumption she would be sucking other guys off in the future, but she nodded and listened intently.\n\n\"The deeper you can get his cock in your mouth, the better,\" Amy started. \"And the longer you can hold it in there without having to take your mouth off of it, the better. The longer you keep it in your mouth and the deeper you go, the more you're going to drool and slobber on his dick. Don't get embarrassed or try to stop. Guys like it and thinks it's sexy as hell. If you do happen to find the one or two guys who don't, then they'll tell you and you can try something else.\"\n\nSo far it all seemed like good advice.\n\n\"The next thing is eye contact. Guys love it when you can get low and stare into their eyes while you have their dick in your mouth.\"\n\nElizabeth was paying attention, but had also started unconsciously moving her hand up and down on my cock.\n\n\"Also, be sure to keep sucking. Don't just move it back and forth in your mouth. That's where a lot of girls go wrong. Also, don't use your teeth. Put your tongue over your lower teeth and let your lips cover your upper teeth if you're having trouble, like this...\" and she proceeded to show Elizabeth how to cover her teeth with her lips and tongue. \"Now just remember that you have two hands as well, so you can be touching him, playing with his butt or balls, or stroking his dick as you suck him too.\"\n\nElizabeth listened to all of Amy's advice very carefully, and then turned her attention back to the dick in her hand. Slowly, she leaned over and took me into her mouth.\n\nI groaned loudly at the sight of this young girl taking her first cock, my cock, into her mouth. She had obviously been paying close attention to Amy's input, as she nailed each piece of advice with near precision. She couldn't fit all of my cock in her mouth, but she managed about half before gagging. Amy encouraged her to keep gagging herself, as it creates \"spit lubricant\"; as Amy called it. Since Elizabeth couldn't get it all in her mouth, Amy also suggested she stroke the part that wouldn't fit with her hand. \n\nElizabeth followed instruction wonderfully. Soon the whole front of her shirt was covered in slobber as she kept trying to fit more and more of my dick in her small mouth. Amy reached over and pulled Elizabeth's shirt over her head, revealing her small breasts. Elizabeth's nipples were small brown points centered on each of her budding mounds. Elizabeth seemed to hardly notice her disrobing as she worked my cock feverishly.",
        "\"Hey Ann! Your sister is going to be one hell of a cock-sucker,\" Amy called back over her shoulder, confirming my earlier suspicion about Ann and Elizabeth being sisters.\n\n\"Must run in the family,\" Ann replied back, and all the girls laughed. \n\n\"My jaw is starting to get sore,\" Elizabeth complained after several minutes.\n\n\"Well he's already cum twice,\" Amy reasoned. \"I think maybe it's time we tried something else.\"\n\nElizabeth took Amy's cue and moved to the side. Amy slowly slid off her green one-piece. I looked down to see her reveal her beautifully small breasts. They were only slightly larger than Elizabeth's and were capped with the same small, hard, brown nipples. Between her slender legs I could see a neatly trimmed patch of straight black pubic hair. As she turned around, I was treated to an amazing view of her small, inviting ass. Not being able to touch these girls was really beginning to really suck. Amy positioned herself over my lap. \n\n\"Don't you want one of these?\" Elizabeth asked, holding up a condom she had pulled from the bowl Lindsay had stocked.\n\nAmy only shook her head \"no\" as I felt her reach between her legs to guide my cock into her tiny, waiting pussy. \n\nShe was tight. Really tight. She had to work herself up and down several times before she finally managed to fit my whole length inside her. Once she did, she paused only for a moment before slowly started riding me. She was so wet I could hear my cock sliding in and out of her. The heat from her pussy was amazing, and despite how tight she was \u2013 because she was so wet - she was able to fuck me with relative ease. She was moaning uncontrollably now, and I would have given anything to be able to grab her by that sexy ass and push her down as hard as I could on to my cock. \n\n\"Oh my God,\" she kept saying. \"I'm never fucking a boy again. Holy shit he feels amazing\"\n\nShe was riding me with abandon now. Anytime she would slam down on my cock particularly hard, she would let out a sharp yelp and fuck me harder. I could see the other girls had paused their game and were turned around, watching now. Lindsay was smiling grandly.\n\nAmy reached down between her legs and started playing with my balls again as she rode me. Elizabeth had her face inches from where we were joined and watched in fascination as Amy's pussy swallowed my cock over and over again. Amy moved her hand to her clit and told Elizabeth to take over playing with my balls. Elizabeth obeyed and starting fondling my balls, but then stopped after only a minute or so. Amy and I both watched as Elizabeth leaned forward between our legs and started licking my balls as Amy fucked me. \n\n\"Fuck, that's hot!\" I heard Ann say.\n\n\"HOLY SHIT!!\" Amy screamed all of the sudden. Elizabeth had now moved up my balls and was now tonguing Amy's clit. I don't know how she managed to keep her tongue there as Amy was now thrashing wildly on top of me.\n\n\"Fuck fuck fuck fuck fuck fuck fuck...\" Amy kept panting.\n\n\"God you guys are making me wet.\" I looked up to see Kristy with her hands in her panties.\n\n\"...fuck fuck fuck fuck fuck...\"\n\nI started to feel that familiar sensation as we both climbed closer and closer to orgasm.\n\n\"...fuck fuck fuck Fuck FUCK FUCK FUUUUUUUUUUUUUUCK!!!\" Amy cried out as she came on my dick. I guess she could feel my cock getting close because she started yelling \"Come inside me! Come inside me! Please come inside me!\"\n\nThat was all I could take. With several loud grunts, I thrust my cock as deep as I could into Amy's soaking pussy and shot my load.\n\n\"It's so hot!\" she moaned. \"I can feel it squirting inside me. It's filling me up!\"\n\nWe both sat there twitching. Every time my cock throbbed, Amy jerked again, feeling more of my cum shoot inside of her. Finally our orgasms subsided. My cock slipped out of her pussy, but Amy sat there with her head back on my shoulder, relaxing in the afterglow of her orgasm for several minutes.\n\n\"It's dripping out,\" Elizabeth said. We all watched as she leaned forward and began licking the cum from Amy's freshly fucked pussy. Amy twitched and groaned every time Elizabeth's tongue touched her.\n\n\"Now that's what I'm talking about,\" said Lindsay. Elizabeth was now sucking all the cum and pussy juice she could off my limp cock.\n\n\"Should we give him another break to recover?\" Ann asked.\n\n\"Fuck that!\" Kristy exclaimed. \"I'm too fucking horny now.\" She still had her hand in her panties and was obviously rubbing her clit as she spoke.\n\nLindsay, Kristy, and Ann had now joined Amy and Elizabeth over in our little fuck-area. \n\n\"C'mon Ann. Let's show these two how it's done,\" challenged Kristy.\n\n\"I don't know if we can beat that!\" Ann replied dubiously. Her little sister looked up at her and smiled. She still had sex juices smeared across her face.\n\n\"Oh yeah?\" said Kristy. \"Watch this.\"\n\nKristy slid her robe down over her shoulders. She looked even more womanly than normal, standing there in her bustier, panties, and thigh highs.\n\n\"A little help, please,\" she said to Lindsay. Lindsay helped Kristy undo the clasps and lacing on her bustier. When Kristy finally pulled the bustier away, I had to bite my tongue to keep from gasping. Her tits were beautiful and perfect - larger than I had thought. Easily a large D, they were magnificent. There was almost no sag as they hung in place. Her nipples were very light and just a little smaller around than a soda can. The areola and nipple seem to be one, creating beautiful pointed caps on each of her large breasts.\n\nI saw her lean over and whisper something to Lindsay. Whatever Lindsay said must have pleased her, because she turned and looked at me with a big smile. I watched as she stepped up, straddled my legs, and sat down on my lap facing me. My heart was pounding. Here was the object of so many of my fantasies, sitting on my lap with her naked boobs just inches from my face. I could feel the warm heat of her thighs pressed against my own. Then Kristy leaned forward for the straps around my arms. As she did, her breasts were pressed firmly against my chest. The feeling of her skin against mine was delicious. She disengaged the Velcro straps from my wrists, took my hands, and placed them flat on her boobs. The warm flesh was amazing in my hands as I began to squeeze and fondle her. Kristy adjusted her stance so she was sitting almost completely on one of my legs. I could feel the warm heat of her crotch through the silky material of her panties as she started to grind on my thigh. I saw Lindsay grinning out of the corner of my eye.\n\n\"I got an idea!\" my daughter said as she walked around behind me. I panicked when she reached around to my face and grabbed the bottom of my hood. She must have sensed my panic, because she leaned over, pressing her tits into my back, and whispered in my ear, \"Trust me.\"\n\nSlowly Lindsay lifted the front of my hood up until just my mouth was exposed, and holding it tightly under my nose so no one would accidentally see who their mystery cock belonged to.\n\n\"It's been a long evening,\" Lindsay spoke to Kristy. \"I think you should feed him.\"\n\nKristy grinned at her friend and then forcefully shoved one of her large nipples into my mouth. Not needing any encouragement, I began sucking, licking, and nibbling on Kristy's offered breast.\n\n\"Oh wow!\" she groaned. \"He's really good at that. He's making me really wet.\"\n\nWe continued like that for several minutes \u2013 me sucking and fondling her tits, and her grinding on my leg. I could feel my cock, once again, start to react. She noticed it too and reached down with one hand to grasp me. Deciding to push my luck, I let my free hands wander from her breasts, down her sides, and around to grab her perfect ass. She reacted by stroking me harder as she kept feeding me her breasts. \n\nSuddenly she stood up and, without pause, lost the underwear. Her pussy was shaved bare and smooth, and I could just see the top of her beautiful slit in that little valley between her thighs. She stepped up to me again, took my hand, and shoved it straight to her waiting pussy. She was so wet, and my fingers slid inside of her effortlessly. She wasn't tight, but she wasn't loose either. It was hot, wet, and perfect. She whimpered as my fingers worked her pussy and clit.\n\n\"I can't wait anymore,\" she said desperately. Kristy straddled my legs again, reached down for my cock, and slowly sank down on it until my full length was buried inside of her.\n\n\"Oh, my God. Thank you, Lindsay,\" was all she said. She was facing me as she rode. Lindsay had tied off the loose fabric of my hood so it would stay in place right above my lips, and Kristy reinserted her nipples into my mouth as she bounced up and down. My hands were holding onto her ass for dear life. My head spun as I focused on the feeling of this young girl with her Playboy body riding my dick. I never wanted to forget the sensation of Kristy's wet pussy. She was dripping now and I could feel her juices running down my balls. Harder and harder she was riding me. I could tell she was approaching her orgasm, so I moved one of my hands off her ass and around to her clit. It was awkward turning my wrist like that to touch her, but within seconds of doing so I was rewarded with the sound and feeling of Kristy going off like a rocket. She was shaking uncontrollably as wave after wave of orgasm hit her. Every time I thought she was coming down, she would shudder and start cumming again. After about six orgasms, she finally pulled herself up off my hard dick. Her juices were all over my thighs, the chair, and on the floor where it had dripped from my balls.\n\n\"Wow Kristy!\" Ann exclaimed. I wish I could cum like that.\n\nKristy looked over at her and winked. \"Maybe we'll just have to practice sometime.\"\n\nAnn blushed, but I could see that the idea excited her.\n\n\"Who's next?\" Kristy asked. She had grabbed a few of the wipes Lindsay had provided and was now cleaning the excess cum and juices from her pussy and my cock. When she was satisfied that we were clean enough, she leaned over and gave my cock a kiss right on the tip, stood up, and put her robe back on (ignoring her bustier and panties on the floor.\n\n\"Well I haven't got to fuck him yet,\" Ann answered back.\n\n\"You're going to have to get him hard again,\" said Amy.\n\n\"It might take a little more work this time, but I think you guys can handle it,\" Lindsay added.\n\n\"What about you sis,\" Ann turned and asked. \"Did you want to fuck him?\"\n\nElizabeth stared at her sister for a moment and stammered, \"I...I'm not sure I'm ready for that,\" she said eyeing the muscle between my legs. I was at the same time both disappointed and relieved. I was disappointed because, well...who wouldn't be disappointed at missing the opportunity to have the virginity of such a lovely young lady. At the same time, I was also relieved that I wouldn't be taking her virginity in such a raucous setting. I didn't want to be responsible for Elizabeth's first time if she ended up walking away feeling ashamed or pressured. I might be a perv, but I try not to be an asshole.\n\n\"If you're not ready Elizabeth, then we don't want to pressure you,\" Lindsay comforted. \"...but that actually gives me an idea for something else you could try until he's hard enough to fuck Ann.\" She leaned over and started whispering in Elizabeth's ear. I saw Elizabeth turn very red, and slowly her nervous expression relaxed into a shy smile. When Lindsay stepped back to get her answer, Elizabeth nodded happily. \n\nLindsay turned to the other girls and motioned them to assist. Following her lead, they stood, two to a side around my chair. The next thing I knew I was being lowered backwards until I was lying on my back, with my feet awkwardly in the air. Then Lindsay pulled Elizabeth beside her and pulled off her panties.\n\nElizabeth was now standing completely naked. From my position on the floor, I could just make out her smooth virginal slit. The only separation in that perfect slit was her tiny clit nub just barely peeking out at the top. At one point, she had turned and I was treated to a lovely view of her tiny round butt. Every part of her body was young, fresh, and smooth. I so badly wanted to touch her all over. \n\n\"Go ahead,\" Lindsay instructed. \"Just lower yourself down till your sitting on his face. He'll know what to do.\"\n\n\"O...ok,\" Elizabeth replied. She came around and stood over my head, one foot by each of my ears. When her legs parted to straddle my head, I saw her small slit separate just slightly, revealing a sliver of sticky wetness that clung to both lips for just a moment before choosing a side.\n\n\"Do you want me to strap his arms back to the chair,\" Lindsay asked. \"...or do you want him to be able to use his fingers too?\"\n\n\"If she's a virgin, then fingers might not be a good idea,\" Kristy advised.\n\n\"No,\" Ann disagreed. \"She popped her cherry a couple years ago.\"\n\nThe girls looked at Ann.\n\n\"We both did it together,\" she explained. \"We've been using mom's toys for a while now. I was going to get one for myself \u2013 or ask mom to get one for me, but I chickened out.\"\n\n\"You can have one of mine,\" Kristy offered.\n\n\"I can't decide if that's hot, or gross,\" Ann joked back with a smile.\n\n\"I don't see anyone here using condoms,\" Kristy retorted.\n\n\"Touch\u00e9,\" Ann congratulated. Lindsay looked back at Elizabeth.\n\n\"No straps then?\"\n\n\"No,\" Elizabeth confirmed. \n\nAs Elizabeth began to squat, I saw her slit spread again, slightly more this time; and again I could see small, sticky strands of wetness trying to decide which side they were going to stick to. As she lowered further, I was also treated to a beautiful view of her young puckered asshole. Then I lost sight of everything as Elizabeth's wet virgin pussy settled right on my face.\n\nThe scent of her pussy was unlike any woman I had been with before. It lacked the deep musky undertone of more mature women. It was almost sweet, like a cross between a peach and some exotic flower. \n\nIn her inexperience, Elizabeth had done exactly as Lindsay had suggested and simply sat on my face. As turned on as I was to have her young pussy resting on my lips and her smooth ass against my face, I was starting to have trouble breathing. I brought my arms up and around so I could gently encourage her to lean forward against my knees \u2013 which were sticking straight up since my legs were still strapped to the overturned chair legs. Seeing what I was doing, Lindsay helped.\n\n\"Lean forward against his legs,\" Lindsay instructed. \"You got give him room to breathe and touch you.\"\n\nElizabeth obeyed and leaned forward. When she did, I was once again treated to the most erotic view of her small spread ass and wet young pussy. Reaching up and taking one tight cheek in each hand, I spread Elizabeth open and buried my tongue in her pussy.\n\nShe squealed when my tongue touched her clit for the first time. Her young juices were sweet and dripping on my face within minutes. She tasted as fresh as she looked, and I let my tongue travel slowly along her labia. I traced gently up her lips, focused on her clit a for a bit, and then returned to tease her lips again. She began bucking wildly when my tongue wandered briefly over her tiny puckered asshole. \n\nAs she became more and more excited, I started focusing more and more on her clit. She was moaning loudly now.\n\n\"...feels so good...oh, that's nice...right there...don't stop...oh my God, he's licking my butt again...oh, I'm gonna cum soon!\"\n\nI kept up my oral assault as Elizabeth moaned and bucked more and more. I could tell she was getting close as I inserted my fingers into her little hole. I was amazed at how tight she actually was. I didn't think I could have fit my cock in her even if she had agreed to it. As I continued sucking on her clit and working her inside with my fingers, Elizabeth suddenly leaned way over and took my cock in her mouth for the second time that evening. Not one to be outdone, I gently touched her asshole with my pinky finger as I continued to suck and finger her. \n\n\"Oh, I like that!\" she managed to say. \"I'm gonna cum! Don't stop!\"\n\n\"Watch this,\" Ann said with a smile. The other girls looked at her curiously, and then back to Elizabeth.\n\nAt that moment, I let my pinky finger slide just past her rectum and into her asshole.\n\n\"OH FUCK!\" Elizabeth started screaming. \"FUCK! I'M CUMMING! I'M CUMMING!!\"\n\nThe next thing I know, Elizabeth had raised her hip off my face as streams of her sweet cum started squirting from her tiny hole. The sticky juice flooded over my face, chest, the chair, and the floor where we lay. When I thought she was done, I leaned up to give her clit a little kiss. As soon as my lips touched her though, she screamed, and more juice came flowing out of her gorgeous young pussy.\n\n\"I'M CUMMING AGAIN!\" she screamed. \"FUCK! I CAN'T STOP CUMMING!\"\n\nAll I could do was hold on and try to keep Elizabeth's bucking hips from breaking my nose. I didn't know how one girl could produce so much cum. After an orgasm that seemed to last minutes, Elizabeth's bucking stopped as she doubled over trying to catch her breath. I was tempted to touch her clit again, but I figured I should let the poor thing rest a bit.\n\n\"I changed my mind Kristy,\" Ann said, finally tearing her eyes away from the sticky scene. \"I wanna cum like THAT!\"\n\n\"I've never seen a girl squirt like that before,\" Kristy answered with a dreamy look in her eyes.\n\n\"I know,\" Ann agreed. \"I can't squirt either, but Elizabeth has been doing it ever since she first started masturbating, well...at least with toys.\n\nElizabeth had turned bright red as the girls discussed her amazing ability. \n\n\"Next time I'll know to put a tarp down,\" Lindsay laughed. \"This floor is soaked!\"\n\n\"Sorry,\" Elizabeth apologized meekly.\n\n\"Don't apologize!\" Lindsay replied. \"That was awesome!\"\n\nThe other girls agreed as Lindsay helped Elizabeth wipe herself and the chair down as much as possible. She let Elizabeth clean me up. Once that was accomplished, the girls righted my chair. \n\n\"Ooh,\" said Ann. \"You got him hard again sis. My turn!\"\n\nSure enough, between the pussy shower and blowjob Elizabeth had just given me, my cock was definitely on the rise again. I was really looking forward to playing with Ann now. \n\nThey were about to redo my arm straps to when Ann told them not to.\n\n\"I want him to be able to touch me,\" she explained.\n\nWhile Ann was still topless from tit-fucking me earlier, she was also the only one who still had panties on \u2013 not counting Lindsay. As if she realized this the same time I thought it, Ann reached down and slid her pink cotton panties to the floor. Ann also shaved her pussy, which allowed her soft pink lips to peak out at me from between her legs.\n\n\"Do you want a condom?\" her sister asked.\n\n\"No. I have a better idea,\" Ann replied with a wicked grin.\n\n\"Oh,\" Elizabeth acknowledged with a smile. Whatever the idea was, Elizabeth seemed to know exactly what her sister was thinking.\n\nAnn walked up to where I was sitting. \"Put out your hands.\" \n\nI was waiting for someone who knew what she was talking about to respond, but then she tapped me on the leg to indicate she was speaking to me. It surprised me at first, as this was the first time tonight any of them had addressed me directly.\n\n\"Go ahead. Put out your hands,\" she continued. \n\nI did as I was told and watched as Ann turned around and stuck her ass out, right into my waiting hands. Without needing further instruction, I began kneading her firm full ass. \n\n\"You've got great hands,\" Ann said. Evidently she had no issues addressing me directly as we played. I was running my hands gently up over the curves of her butt, feeling the softness, then squeezing hard and feeling the fullness fill my hands. As I squeezed, her ass cheeks spread revealing her small puckered hole wet pussy lips at the same time. When her pussy spread I could just make out the tight walls around the entrance to her slippery tunnel. I ached to be inside her, but since I wasn't able to do that, I took a chance to lean over and plant my tongue right on her offered asshole.",
        "Ann yelped my tongue touched her in such an intimate spot, but as my hands held her spread as my tongue continued across her sensitive area, she relaxed and eased my access. I began running my tongue down her exposed pussy and back up to her ass again. Every now and then I paused on her pussy to tongue her sweet hole or concentrate on her clit. She was moaning constantly now and kept encouraging me to continue.\n\n\"Oh yeah,\" she sighed. \"That's so good. Eat my asshole. Mmmmmm. Now my pussy.\"\n\nAnn reached down between her legs and took hold of my cock. It reacted instantly to the feeling of her soft fingers wrapping around its length. Once again I decided not to be outdone and shoved two fingers inside Ann's pussy as I licked her ass hungrily. With my other hand I reached up between her muscular legs to work her clit as my tongue and fingers did their job.\n\n\"Put your fingers in my ass\" said Ann, surprising me. Doing as I was told, I took the two fingers I had buried in her pussy and slowly started working them into her tight asshole.\n\n\"Oh fuck!\" she exclaimed as they slipped past her rectum and deep into her butt. I started working my fingers in and out of Ann's ass while I had moved my tongue down to start working on her swollen lips. My thumb on her clit continued its assault as her excitement became more vocal. She was almost screaming now as she jerked furiously on my aching cock.\n\nI was lost in my lust when her ass suddenly pulled away from me. Ann stood up, turned around, and swallowed my cock. She immediately began gagging herself, trying to force my cock into the back of her throat. Every time she pulled my dick out of her mouth, great gobs of slimy drool would fall from her lips and slide down my cock. A minute or two of this and my cock was throbbing and soaked. Seeming satisfied with her work, Ann stood up and turned her back to me again. She reached down between her legs and grabbed my cock once again. I closed my eyes in anticipation as she began to squat over me.\n\nMy eyes shot open as I realized Ann was not guiding me into her pussy, but into her tight young ass. The other girls all watched wide-eyed as the head of my cock slipped passed her rectum and she slowly lowered herself onto me. Once I was buried, she rested on my lap for just a moment, then began slowly moving up and down. Her ass was so goddamn tight and I knew I wasn't going to last long. Ann bent over, almost touching the floor, giving me an amazing view of my member sliding in and out of her beautiful, round, perfect ass. My tongue and fingers must have brought her close, because after only a few minutes she was obviously close.\n\n\"Fuck! I'm cumming!\" Ann screamed as she reached back and started fondling my balls. I could feel her ass clenching on my cock in her orgasm and I knew I was done. I started tapping on her shoulder to let her know I was about to blow.\n\n\"Cum in my ass,\" she responded with desperation. \"Please cum in my ass. I want to feel it shooting inside me.\"\n\nThat was all I could take. Holding her by her hips, I thrust up hard and drained all I had deep inside her gorgeous butt.\n\n\"Mmmmm,\" Ann cooed. \"I can feel it oozing inside me. It's so hot.\" Slowly Ann finally lifted off of me, grabbing a wipe and cleaning herself.\n\n\"Wow Ann,\" said Amy. \"My boyfriend wanted to try that, but I was too afraid.\"\n\n\"She lubed him up real good and went slowly,\" Kristy explained. \"It makes all the difference in the world.\" \n\n\"I say we let him rest now,\" Lindsay suggested. The other girls agreed.\n\nThe girls then wiped me down, making sure they got everywhere. If I had anything left, the feeling of them running their hands and wipes over my sensitive bits would have had me ready again. As it was though, I had nothing left. I was thankful for Lindsay's suggestion, and soon the girls were back around the TV as I was left to my own thoughts. The girls hadn't bothered to dress again, and I fell asleep staring at the beautiful naked bodies lying on the floor in front of me.\n\n When I woke again, it took me a moment to regain my bearings. I was still in the chair, and both my legs had fallen asleep. I tried to adjust my position, but since Lindsay had reattached my arm straps there was very little I could do. Looking toward the window, I guessed I had slept for about three or four hours. The sun hadn't come up yet, but there was a faint glow on the horizon letting the world know it didn't have much longer. Looking back over the room, I saw the girls had fallen asleep just as they had left me - naked. My eyes roamed over the shapely forms strewn across the floor. It was still almost unbelievable that the night's events had actually occurred. Then I saw Kristy.\n\nKristy was lying on her stomach. I hadn't noticed at first glance, but now I could see she was propped up on her elbows and staring at me. I didn't know how long she had been like that. Hopefully she thought my head turning was just to stretch sore muscles. I didn't want to give away the fact I could see through my hood. I tried to pretend that I wasn't aware of anyone looking at me, or anything else in the room for that matter. Either way, Kristy knew I was up now and had evidently decided to join me. Pretending to react to the sound of her footsteps, I cocked my head as if listening. \n\nKristy was still naked from the night before, except for the sheer robe that hung loosely from her shoulders \u2013 that and the thigh highs. Her hips swayed seductively as she made her way across the room, and her large firm tits gave a little jiggle with every step. My eyes travelled from her beautiful eyes, down her amazing chest and stomach, to the sweet fold just peeking out from between her long slender legs. Kristy was staring at me as she approached, but not at my body or cock, but right at my hood-covered face. I panicked a little bit. Lindsay was still asleep and I was still bound. There would be nothing I could do if Kristy decided to find out who was under the hood right now. But instead, Kristy stopped when she was a couple steps away. Then she spoke.\n\n\"You know,\" she started speaking \u2013 I assumed to me. \"I've known Lindsay a looooong time, and I don't think there's anything we don't tell each other.\"\n\nKristy was definitely up to something, and my heart started pumping. I watched as Kristy started massaging her tits as she shifted her weight from one leg to the other, causing her hips curve out seductively. She took one hand and started running it down her side and over her hip, until it rested over the little valley between her legs. I could see her press one of her fingers in against her clit.\n\n\"...and if I know Lindsay,\" she continued with a mischievous smile, \"then I'll bet she isn't playing by the rules.\" She gave the small fold between her legs another rub.\n\nNow I knew what Kristy's game was. She was trying to get me hard without touching me. She wanted to prove I could see her. I tried to think of something else to avoid getting hard, but the sight of Kristy standing naked in front of me, rubbing her tits and pussy, was starting to affect me. I watched as she stepped briefly over to the nearby couch, picked up her purse, and retrieved something from inside. When she came back, I could see it was a small toy of some sort. \n\nNot saying a word, Kristy stood in front of me again. This time she put one foot up on my knee and swung her own knee out, spreading her legs and offering me a clear view of her pretty pink slit. I couldn't look anywhere else without drawing suspicion, as doing so would require me to turn my head away. Turning my head away would reveal the transparent nature of my hood. \n\nKristy squeezed her breasts and pinched her nipples with one hand, while the other reached down between her legs and began rubbing the small toy against her wet opening. I could feel the blood flowing to my cock in reaction. I started to panic, wondering what Kristy's reaction would be when she saw me get hard, proving I could see through the hood.\n\nThen Kristy turned around and bent over. With one arm, she reached back and spread her ass, exposing her beautiful pussy and rectum to me. With the other hand, she reached up between her legs and began to work the small toy in and out of her slippery hole. Seeing her bent over like this, fucking herself, was too much. I couldn't fight it anymore, and my cock sprang to life.\n\nKristy stood up, turned around, and smiled like the cat that caught the canary. She was staring right at my cock and watched as it grew to its full length. \n\n\"I thought so,\" she said \u2013 maybe to me, or maybe to herself. She didn't get mad though. In fact, she seemed glad that she had been proven right. \n\n\"Don't worry,\" she said. \"I'm not going to tell your secret.\"\n\nI sighed in relief (she smiled in response).\n\n\"...but maybe we can make this a little more interesting for you?\" it came out as a question, but I know it wasn't intended as such.\n\nKristy dropped to her knees and took me into her mouth. This time however, she did it while staring right in my eyes (or where she imagined my eyes to be \u2013 which was close enough). I stared back into this beautiful girls eyes as her lips slid up and down my cock. Her tongue was doing magic tricks around my shaft as she sucked harder and harder.\n\n\"Fuck Kristy.\"\n\nShe stopped, let me cock slide out of her mouth, and stared at me with a funny expression. I realized I had just fucked up. Not only did I let her hear my voice, but I said her name. Now she knew I could see her AND I knew who she was. Now the shit was sure to hit the fan.\n\nKristy must have felt me tense up at my realization, but made no move to indicate she was mad or that she was going to flip out. Instead, she stared at me with that funny look across her face for a few more seconds. Then, as if coming to a decision, she let out a girlish laugh, gave my cock a hard squeeze, and took me back into her mouth again. If she had been enjoying sucking my cock up to that point, then now she was in heaven. Kristy went to work on my manhood like it was the last one left. Wet smacking and slurping sounds floated across the room as Kristy sucked me harder and harder. She was playing with my balls with one hand and reaching up with her other to rub my chest and pinch my nipples. Every couple of minutes she would switch and start to suck on my balls while stroking my shaft. She would suck one ball into her mouth, roll it around, and then pulling it out of her mouth with a pop to work on the other. She was still staring in my eyes the whole time. \n\n\"Mmmmmmm,\" was all that I was willing to say. I wanted to tell her how amazing it felt. I wanted to tell her how hot she was. My little groan must have spurred her on even more, because next she pulled my cock out of her mouth and started slapping it on her tongue and face. The whole scene was driving me wild and I knew I wouldn't hold out too much longer.\n\n\"Um, do you think you could share?\"\n\nKristy half turned with my cock still in her mouth to see the other girls watching. \n\n\"Early bird gets the worm,\" she shrugged.\n\n\"...or the morning wood,\" Amy finished.\n\nKristy shrugged again. She was back to slobbering on my dick and the other girls came over to join her. Sensing this was almost the end of their little adventure, all the girls moved in at the same time. While Kristy was going to town on my cock, Ann had stepped over and straddled my lap. She then pulled my hood up as Lindsay had done yesterday and let a nipple rest against my lips. I reacted immediately and took the offering into my mouth. Amy leaned over and whispered to Elizabeth. Each moved to an opposite side of me and dropped to the floor. I watched as they both got onto their hands and knees, and then proceeded to back themselves up till I could feel a soft young pussy grinding on each of my restrained hands.\n\n\"You guys are doing awesome,\" Lindsay encouraged. \"I'll bet he's really enjoying having all four of you on him.\"\n\nKristy laughed saying she bet I did and giving my dick a little extra squeeze, but no one else seemed to catch her sly remark.\n\nI was in heaven. With Kristy on her knees sucking my cock, Ann standing over her with her tits in my mouth, and Amy and Elizabeth both on their hands and knees grinding their pussies against my hands; I was, for that moment at least, the luckiest man on the planet. A few more minutes of this and I would be ready to blow. Kristy must have noticed this.\n\n\"So, everyone has had a turn already. Who wants the last ride?\" Kristy asked the others. They all turned to look at each other, but before anyone could speak up, Kristy was already silently answering her own question. I could see her elbowing Lindsay in the side, nodding towards the erection just inches from her face. The other girls were giggling and I could see the hesitation on Lindsay's face. Kristy silently insisted again, poking Lindsay. \n\n\"Ok,\" Kristy continued a little louder than was necessary. The show was for the other girls, since she knew now that I could see everything. \"Guess I get to keep working on this bad boy.\"\n\nWith that, Kristy grabbed one of Lindsay's hands and put it right on my cock.\n\nI froze. Lindsay froze. Even Kristy froze. The other girls missed the sudden tension in the room as Lindsay looked up from the dick Kristy had just put in her hand, to my face. I couldn't make out the expression. She looked embarrassed, confused, pleading, and excited all at the same time. I couldn't believe my daughter's hand was wrapped around my cock at that very moment. I could feel the heat of her fingers and the softness of her grasp. I was looking down into her eyes, and her back into mine when she started to move her hand up and down my length.\n\nAnother moan escaped my lips and I saw Kristy grinning from ear to ear. Lindsay was now staring at my cock as she stroked it. I know she wasn't completely inexperienced, but right now she was looking at my dick like it was the first one she had ever seen. Her stroking was excruciatingly slow and I couldn't help but thrust slightly up into her hand. Lindsay glanced up at me when I did with a look of surprise, but I saw her surprise turn into a smile as she seemed to get used to the feeling of her dad's cock in her hand.\n\nI was throbbing in my daughter's hand now and I could just see a drop of pre-cum forming on the tip. Stopping on the up-stroke, Lindsay looked at the small glistening drop on the end of my hardness. The, without warning, Lindsay leaned over and took me into her mouth.\n\n\"Oh shit!\" Kristy exclaimed. \"That's the hottest fucking thing I've ever seen.\"\n\nIt seemed a weird statement to me since I was pretty sure Kristy had seen a lot, but her comment encouraged Lindsay. Lindsay was now staring right into my face as I watched my dick disappear into her mouth over and over.\n\n\"Mmmmm,\" Kristy spoke up, loudly again. \"I think it's time for me to climb on top of this thing.\" She grabbed Lindsay by her shoulders and stood her up, facing me. Lindsay didn't protest when Kristy reached around and undid the knot that was holding the top of Lindsay's outfit together. Peeling the shirt back, Lindsay's hot pink bra was exposed. The swell of her breast against the top of each cup was so erotic. I couldn't believe I was getting turned on this much by my own daughter. While all the girls were watching me, Kristy and Lindsay were the only ones looking at my face. Lindsay had a nervous shy smile, while Kristy's made me suspicious.\n\nAll of the sudden, Lindsay's bra popped off exposing her firm, round tits to my lustful gaze. She jumped slightly in surprise when Kristy did this, but she stood her ground, not covering herself, still staring directly at my face with that shy, yet exciting smile.\n\nThen I saw Kristy reach up Lindsay's short skirt, and pause. She cocked her head to look at Lindsay questioningly. Lindsay suddenly turned bright red. Kristy shook her head in mock disapproval, then lifted Lindsay's skirt for all to see. She wasn't wearing any underwear.\n\nMy eyes bulged when Lindsay's beautiful, smooth, shaved pussy came into view. I knew I shouldn't be feeling like this about my daughter, but her body was incredible and I had always thought she was genuinely beautiful. Kristy turned her around and repeated the show, exposing Lindsay's firm, tight, athletic ass to my gaze. Kristy saw my cock throb again and gave me a wink. \n\nThe other girls weren't picking up on all the eye contact and innuendos Kristy was throwing around, and if Lindsay realized Kristy was onto her little secret, she didn't let on. Kristy walked towards Lindsay, forcing her to step back until she \"tripped\" on my knees and fell straight back into a sitting position on my lap. I could feel my cock throb twice at the feeling of my daughter's naked ass sitting on my cock. It was nestled snugly up between her ass cheeks. My body acted out of pure instinct as I thrust again towards my daughter. This time I felt her wiggle her as slightly in return.\n\nKristy dropped to her knees and leaned in. Her face was inches from Lindsay's crotch when she asked her to lift up slightly. Lindsay did so and Kristy reached under her to pull my cock out from behind her. When Lindsay sat again, my cock was now poking between her legs. Kristy leaned forward and sucked it into her mouth. Lindsay looked down and watched as her best friend buried her face between her legs to suck her dad's cock. \n\nAfter a few licks to get it wet, Kristy had Lindsay lift her hips up again and positioned my dick right at Lindsay's anticipating entrance. Leaning her head back and laying it on my shoulder I heard Lindsay whisper in a low voice \"I love you daddy\". Then Kristy pushed down on her hips and I was buried inside my own daughter.\n\n\"Oh Fuck!\" Lindsay cried out as my whole dick slid into her at once. \n\nLindsay was much tighter than I expected. Her soft, warm walls held me like firm gripping hand. The heat of her was incredible and it was all I could do not to cum right away.\n\n\"Oh, my God!\" Lindsay exclaimed. \"I'm coming already! I can't believe you're inside me! I'm going to cum all over your dick!\"\n\nI could feel her juices flowing down my balls as she rode me harder and harder to her climax. Having my own daughter screaming and cumming all over my dick was too much. I leaned forward as discreetly as I could and whispered into her ear.\n\n\"I'm about to cum, Lindsay,\" I whispered in her ear. I thought to warn her so she could avoid taking my load, but instead my words seemed to have the opposite result. Lindsay slammed down on my cock as hard as she could and started screaming.\n\n\"CUM INSIDE ME! PLEASE CUM INSIDE ME!\"\n\nThat was it. With a mighty thrust and a guttural growl, my balls unleashed their seed and I shot my load deep inside my daughters clenching vagina. She rode her orgasm forever, begging for me to empty every last drop into her. Every time she asked, my cock twitched inside her again.\n\nEven after our orgasms subsided, Lindsay remained on top of me for several minutes. She was panting in my ear, trying to catch her breath. The other girls couldn't hear her as she whispered to me.\n\n\"Thank you, daddy. You have no idea how long I've wanted that,\" she cooed. \"You can fuck me anytime you want.\"\n\nEventually she stood up. Her complexation was full of color and she had a huge smile.\n\n\"Damn Lindsay. You look like you needed that,\" Amy commented. \n\n\"You have no idea,\" Lindsay replied, winking in my direction so no one could see.\n\nThe girls cleaned me and everything up. They all said goodbye to their \"mystery cock\" as Lindsay shut the curtain. I did, however, see Kristy still smiling right at me before she disappeared from view. That smile said this probably wouldn't be the last time I played with her, and that made me smile.\n\nThe girls cleaned up themselves and the basement before heading out for the day. I, on the other hand, went back to bed and slept another eight hours. Visions of the girls and the previous night danced in my head until I fell asleep. I didn't even wake up when Lindsay finally got home, got naked, and snuggled up next to me in bed."
    ],
    "authorname": "DiscreetNFun",
    "tags": [
        "anonymous",
        "curious",
        "father",
        "daughter",
        "friends",
        "party",
        "game",
        "slumber",
        "taboo",
        "restrained"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-anonymous-and-the-curious"
}