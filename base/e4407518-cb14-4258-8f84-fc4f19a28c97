{
    "title": "What The Cat Dragged In Ch. 30",
    "pages": [
        "Hi Everyone, \n\nNot as much of a wait this time. :) I've had some of these scenes is my head for months; it was good to finally get them onto the page. \n\nThank you all so much for reading and a special thank you to those who take time to comment. Knowing people are so into this story keeps me writing.\n\nI hope you all enjoy!\n\npsyche b\n\n30. The Lady and the Sabretooth\n\nCreed guided the rusty brown van down the highway with one hand and held a sausage and egg breakfast sandwich with the other. The things were fucking awful. The eggs tasted like chemicals and the plastic bottle they came out of. The thin, half-dollar sized sausage patty might as well have been a fucking cinder. Still, he'd eaten worse shit. He shoved the last few bites into his mouth. Next time he had to leave at such a ridiculous hour, he'd let the frail cook for him.\n\nHe scanned through tinny radio stations until he found some news, then he ignored it in favor of reviewing his itinerary. He figured that about eighty-five percent of what he did was logistics. Get to the right place at the right time with the right equipment and the rest is easy. Hell, sometimes the rest was even fun. Figuring all that shit out was still a pain in the ass though. The more conditions that had to be met, the bigger the pain in the ass. \n\nThis one was easily the biggest mess he'd ever been involved in and if it wasn't personal he wouldn't have even thought of wading into the middle of it. Multiple locations, multiple teams, multiple targets, tightest fucking window he'd ever used and a double transport just to finish out the fun. He figured the best way to do it was treat the whole fucking thing like an onion and start from the outside and work his way in. \n\nPaulie C's organization was the outside of the onion. His minions didn't give a shit personally, but whoever avenged the sick fucker's death would make him a shoe-in for the top spot. There were three realistic successors. Four more who liked to think of themselves as being in the running. They were the outermost layers. The first ones to go. The rest were low level thugs, not smart enough or organized enough to be dangerous in the near future. \n\nCavallo had managed to either sever or avoid all the usual emotional entanglements and that made things easier. There were a couple whores on the payroll, but that was business. Still, no one would miss a couple of whores. His parents were dead. His fine, upstanding siblings had disowned him years ago. The daughter was a wild card. Chances are she wouldn't give a shit. He hadn't come this far to do a half-ass job. She was another layer.\n\nStan had some paid protection around him. He'd take them out when he grabbed Stan. On the personal side, he had two brothers. Both solid citizens with jobs and community ties. Nothing more than a parking ticket between them. He'd keep up the observations, but he doubted either one would make retaliatory trouble. The CoH was too big and too well-defended to take apart. Shit would crop up eventually. When it did, he would deal with it.\n\nThey were all clean kills, but even clean kills took time.\n\nHe stepped on the gas.\n\n*~*~*~*~*~*\n\nKelly tossed the pencil down and pushed the notebook away. \"This is ridiculous!\" She rubbed her eyes. \"We're never gonna get this one.\"\n\n\"It's only our fourth time through it.\" Cassie said, the sarcasm clear in her voice. \"We've got all night, who needs sleep or sanity?\" She rubbed the side of her head again. She'd rubbed it so much that some of her hair was pulled out of her ponytail and sticking up in an angry-looking nest.\n\n\"And what I want to know is, why do we need to prove it anyway? Is the author of this textbook a pathological liar? If they tell me that one thing equals another why do I have to spend twenty minutes of my life trying to prove that it's true?\"\n\n\"Twenty minutes if you get it right the first time.\"\n\n\"And what if the author is a liar, why are we using his textbook in the first place? That's just rewarding bad behavior.\"\n\nCassie laughed. \"God I've missed studying with you.\"\n\nKelly giggled. \"Because I go off on wild rants when I get upset?\"\n\nShe grinned. \"Better than anyone I know.\"\n\n\"Great. Maybe I should try it during class sometime. If I get kicked out I can take my act on the road.\" Kelly smiled.\n\n\"Sabe- I mean Victor, would love that.\"\n\nKelly sighed and pulled her feet up onto the chair so that her legs were crossed Indian style. \"His name is really hard for you to say, isn't it.\"\n\nCassie shrugged and pulled the band out of her hair. \"It's just weird. I mean before, it was like he was just some monster and that was really easy because I didn't have to think about it anymore than that. He was bad-dangerous guy and everybody knew it. Now...\" She took a deep breath. \"I see you every day and your eyes light up when you talk about him. It made everything really complicated.\" She blushed. \"Can...can he hear me?\"\n\nKelly laughed. \"No. He's not here right now.\"\n\n\"He's not?\" She sat forward.\n\nKelly cursed herself and tried not to squirm. \"Not at the moment. Where are Sophie and Lucy tonight?\"\n\n\"Sophie is tutoring chem in the library and Lucy had Danger Room training. We need to talk-\"\n\nKelly looked up at the rafters and groaned. \"Oh Cassie! Why is it every time we're alone together for a minute and a half you start reading from Professor Xavier's script.\"\n\n\"What? No! I mean, usually yes, but not this time.\"\n\nKelly heard a different kind of tension in Cassie's voice. She looked at the screen again. Cassie was up pacing. That was different too. \"Okay. What's up?\"\n\nCassie sat down again and stared into the screen. \"Okay, you know I told you about this guy I've been seeing?\"\n\nKelly tried not to laugh. \"Gee, I don't know. Is that perhaps the same guy you've been showing me different pictures of every night for the past few weeks?\"\n\nCassie smiled and blushed and looked away. \"You've noticed.\"\n\nKelly tapped her lip. \"What was his name again? Brian? Bill?\"\n\nCassie laughed. \"Brady. As if you didn't know.\"\n\nKelly smiled. \"So what's the deal with Brady?\"\n\n\"Next weekend is his birthday and his parents bought him tickets to see Godsmack-\"\n\n\"Who?\"\n\nCassie sat back in her chair and stared at Kelly. \"Who?\" The question was flavored with shocked disbelief.\n\nKelly waved. \"Excuse me. I've been a bit removed from pop culture recently.\"\n\nShe rolled her eyes. \"Okay. They're a heavy metal band.\"\n\n\"You listen to heavy metal?\"\n\nCassie shrugged and looked away. \"Well, you know, it's good to try new things.\"\n\n\"Meaning Brady likes it.\"\n\n\"Well, yeah.\" She sat up straighter and tried to look indignant. \"So? Tell me you don't listen to something or watch some show because Victor likes it.\"\n\nKelly smiled and shrugged. \"He just has good taste.\"\n\nCassie groaned. \"Oh please.\"\n\n\"So...Brady's birthday...concert tickets?\" Kelly smiled sweetly.\n\n\"Yeah. He's from Cranford too. So he asked me to go and I told him yes, of course. Then I had to set it up with my parents so that I could stay there and we went through this whole thing with Professor Xavier and he finally said yes. So now the whole thing is all set up with everybody's parents and when you and Victor...you know...for the first time it wasn't any big deal right?\" The words came out in a breathless rush.\n\nKelly stared at the screen for a long moment, processing everything Cassie said. \"That kinda took a turn at the end there.\"\n\n\"Come on, I know you don't really talk about the more personal side of your life and I'm not asking for details.\" Cassie's face was bright red; her fingers drummed the top of the desk. Her eyes were turned away. \"It's just that Brady says it's nothing and if I cared about him I would. Lucy treats it like shaking hands and will do it with anybody who shows half an interest. Sophie just giggles and literally turns fifteen shades of red all at once whenever I try to talk about it. If I tell anyone else God knows what'll be all around school in the morning.\" Cassie looked at the screen again. \"So it was no big thing, right?\" Her tone was hopeful. A little too hopeful.\n\nKelly watched her for a long moment. \"Sounds like you don't really want to.\"\n\nCassie shrugged. \"It's not that. I don't know. Brady is great-looking and all the girls are falling all over themselves to be with him. And he wants to be with me. I should want to, shouldn't I?\"\n\nKelly shifted in her chair. \"I don't know that the concept of 'should' really enters into this.\"\n\n\"Victor didn't...push the issue?\"\n\nKelly felt a blush heating up her cheeks. She smiled a little. \"He definitely got things started, because I didn't really know how to. Just kissing him...I don't know, I knew I needed him even though I didn't really know everything that entailed.\"\n\nCassie bit her lip for a second. \"Did you like it?\" \n\nKelly felt her blush deepen. \"Most of it. What wasn't so great got a lot better after the first time.\"\n\nCassie hugged her knees and looked sidelong at the monitor. \"When Brady kisses me it's nice.\"\n\n\"Just nice?\" This was when the distance between them was almost painful. Seeing and hearing her friend was not the same as being able to sit next to her.\n\nShe shrugged with one shoulder. \"It's kind of weird sometimes. If he just kisses me it's nice and kind of exciting. He always gets so grabby though. Then it just gets really weird and uncomfortable.\"\n\n\"And you think you should let him do more than kiss you?\"\n\nCassie sighed. \"He'll break up with me.\"\n\n\"So what if he does? You'll find someone better.\"\n\nShe sighed. \"And in the meantime he's going tell all his stupid friends that we did anyway.\"\n\n\"Um again, so what?\"\n\nCassie smiled a little and looked at the monitor. \"You really don't care what other people think, do you?\"\n\nKelly smiled and shrugged a little. \"You're the one who has to live your life. It doesn't matter what you do or don't do, someone isn't going to like it. You can try and please everyone and make yourself really unhappy, or you can do what's right for you.\"\n\nCassie took a deep breath and sat up straighter. \"I can do that.\" She tried to sound confident. \"I think.\" The confidence of a moment before retreated again. \n\n\"I think we need to try this proof once more.\" Kelly said.\n\n\"Isn't four times enough?\"\n\n\"It's the last one. There has to be something we're missing.\"\n\n\"Yeah, and we're probably going to keep missing it.\" Cassie sighed and pulled her notebook closer again.\n\n\"If we miss it this time, we call it a night.\" She wrote down the problem on a new page.\n\n\"Fine.\" The word had a tortured ring to it. \"I picked where to start the last time. It's your turn.\"\n\nKelly sighed and tapped the eraser end of her pencil against the page. \"Let's try an old favorite, factor cosine out of the denominator on the left.\"\n\n\"Is it hard to sleep when he's not there?\"\n\n\"Cassie!\"\n\n\"I'm just curious. I mean you must get used to him being there.\"\n\nKelly sighed and smiled a little. \"Yeah. I miss him when he's not here. But I was trying not to think about it.\" She looked at the screen meaningfully.\n\nShe held up her hands in submission. \"I get the hint. Factoring out cosine.\"\n\n*~*~*~*~*~*\n\n\"So Raymond,\" Creed stood in a brightly lit walk-in closet and looked at clothes neatly arrayed before him. Padded hangers were evenly spaced. Colors shifted from white on the left to black on the right. There was a rack for suits and they were arranged by color as well. Ties were rolled and stored in cubbies. Belts were stored in a similar way. \"You got OCD or some shit like that?\" He glanced at the man on the bathroom floor, his neck was at an unnatural angle; his eyes twitched. Breath came at irregular intervals, but it still came. Creed was fairly certain Raymond Alfonse could still hear.\n\nCreed turned his eyes back to the closet again. \"Probably not. You smell like you ain't had a fucking shower in at least three days and I know you got a maid. Ugly old crone too from what my sources tell me. In on Tuesdays and Fridays just like clockwork. Don't know why you didn't get one you could fuck, but I guess that's your deal.\" He started opening cabinet doors. \"Question is, where does the maid keep your travel bag?\"\n\nRaymond moaned weakly from the floor. Yup, he could still hear.\n\n\"What's that Raymond?\" Creed cupped his hand around his ear.\n\nThe man was silent.\n\n\"No problem. I'll find it myself.\" He opened another cabinet. The faint scent of blood came from a black nylon bag. \"There we go.\"\n\n\"Guess you're wondering why you. Most people do, like it makes the dying easier somehow. Since you're still conscious, I figure I might as well tell you. 'Specially why I did such a fucked up job on your neck.\" He found socks and underwear out of the drawers and put four pair of each in the bag. \"Honestly, that part bothers the professional in me, Raymond.\"\n\nAnother moan. Creed walked over and looked down, appraising the man's condition. He'd be around awhile longer. Fucking annoying. He walked back to the closet. \"Fucking unprofessional way to break a neck. Too far down. Fucks up the brain stem, but doesn't really sever it. Everything just kinda swells and compresses and eventually you die but it takes awhile. Fucking it up can lead to all kinds of complications, 'specially if you don't wait around long enough to make sure the job is finished. Right now, if I called paramedics, you'd probably live. Your life would suck, but you'd still be on the right side of the dirt. What you really want is internal decapitation. Do that and it's lights out. Course your boy Mickey don't know shit about that. Probably hasn't even heard the term before. Where'd he learn how to break a neck anyways? TV? Give the head a good twist and there you go?\" Creed studied the clothing and selected a couple of dark track suits that had the taint of old blood on them, as well as a pair of dark gray slacks and a maroon shirt.\n\n\"Jesus Christ, what'd you do? Order the whole fucking Tony Soprano collection? Anyways, I know you know who I am because I saw it in your eyes when you were still twitching. 'Less I'm mistaken; you know why I'm going after your boss.\" He started opening cabinets by the bathroom sink. \"Where the fuck do you keep your shaving kit?\" He looked down at the man again. \n\nThere was still awareness in his eyes.\n\n\"You had to know I'd be comin' for your boss and you been in this business long enough to know that leaving loose ends is just fucking stupid.\" He found the bag of toiletries under the sink. \"I know you got ambitions. You're small time and you know it and it doesn't sit well with you. Only natural. Cavallo made sure you stayed hungry too. You and the others handle all the bloody parts of the business. You get slightly better than average money and promises.\" He walked over to the man on the floor again. Fear and desperation were rolling off of him in waves. His eyes were still animated. \"Course I take him out, you and your cronies try and move up and it's a big fucking mess. Not to mention the fact that all of you are gonna wanna prove you got the balls to be in charge by coming after me or my frail. I ain't about to let that happen. Which brings me to why you're laying on the bathroom floor of your own McMansion dying a slow death.\" \n\nHe walked away and started searching nightstands. \"See, you got two things I need. First of all, you got a signature. You killed five for Cavallo and every time it's the same. Blow to the back of the head knocks 'em unconscious, then you sit 'em up in a chair and shoot 'em twice. Left eye first, then the right. Why you gotta make such a fucking show of it I don't know, but it must do something for you. I figure when your boss disappears there's gonna be a little internal power struggle. You're gonna win. Sort of. It's gonna look like you took out the competition anyway. Then, tragedy strikes and Mickey the Toady comes in and takes you out with his own signature move, shitty as it is.\"\n\nHe moved on to a tall chest of drawers. \"So you're a pretty important player in this whole thing. Without you and Mickey, I'd have to get creative and frankly I ain't got time for that.\" Creed made sure the drawers didn't look rifled, but he still hadn't found the gun. He stood in the middle of the neat room and looked around. Guy like Raymond wouldn't be far away from his gun. He was sure of that. He ran a hand under the slept-in side of the bed, then under the mattress, and finally under the pillow. He pulled out a Glock nine millimeter handgun. He gave a derisive snort. \"Haven't got an ounce of flair in you, have you Raymond.\"\n\nHe stuck it in the back of his waistband and checked on Raymond again. This time, his eyes were empty. The smell of death was creeping into the room. Creed wiped down the surfaces in the bedroom, bathroom and closet. Then he carried the bag down to the van. The next order of business would be to get Raymond into cold storage for a few weeks. \n\nThen he could get to work.\n\n*~*~*~*~*~*\n\nIt took Creed all of thirty seconds to realize that Lou's Taproom was a hemorrhoid on the asshole of the world. The place stank of stale booze, old puke, rancid sex and desperation. Those were just the comforting smells. The bartender stood in front of him, a look of boredom laced with hostility on his lined face. \n\n\"Beer.\"\n\n\"Kind?\"\n\n\"Cold.\"\n\nThe man sighed and set a bottle in front of him. He walked away, ignoring the sticky-looking places on the bar. If it hadn't been for the frail, he would have figured out another way. Who was he trying to kid, if it hadn't been for the frail, he might have gotten an ounce of pleasure out of the last twenty-four hours.\n\nKilling machine. Forged in the fire of rage and cooled with his own blood. Schooled in pain. Dead inside. Maiming and killing were power and pleasure. The way he got his fucking rocks off. Because that's the monster he was. Fucking frail. She just walked right in all wrapped in vulnerability and soft skin and showed him a different, headier kind of power. Showed him the man inside the monster. Showed him what peace was.\n\nDidn't make a goddamn bit of difference now. He drained half the beer.\n\nDidn't mean he was going to stop either, not this time. He reviewed the high points of what his sources had told him about Giada Bellafiore. Conlon told him she was tall, blond, high maintenance and liked to think of herself as the life of the party. His sources told him that Giada was a jaded slut who liked to drink as long as someone else was buying, was open to damn near any drug she saw someone else take first, and had developed a taste for slumming with mutants. She rationalized the danger with her belief that her general infamy would somehow protect her. \n\nStupid bitch.\n\nHe took another swallow of the beer.\n\nHis sensitive ears picked up the squeak of the door hinge. Giada came in alone in a tight denim dress and a short jacket that showed off an emaciated waist, the generous upper slopes of silicone enhanced breasts, and leg up to her fucking crotch. She was only a little older than the frail. She looked like an aging whore. The breeze from the door carried her scent through to him. Under all the perfume and make-up and all that shit she smelled like one too. \n\nFrom the minute she walked in, Creed watched her work the room. His sources were right. She gravitated to the four mutants who were there. Moving between them, teasing, assessing keenness and delicious danger. Even he could tell that Giada liked it dangerous and dirty. \n\nHe waited in the shadows at the end of the bar, watching. Eventually, the weight of his stare drew her eyes in his direction. He held her eyes, flashed a fang, drained the beer and walked out, making sure to brush past her on the way to the door.\n\nIt wasn't much, but he could smell her getting wetter as he passed her. Creed melted into the shadows of an alley across the deserted street from the bar. Twenty minutes later Giada came out with a pockmarked mutant in a beat-up biker jacket. He wore a look of surprise at his good fortune and walked with a swagger. The quick exit was a surprise, but it did make things easier on him. Giada giggled as her companion dragged her behind a dumpster. Creed didn't need extra sensitive hearing to pick up the moan she let out and he didn't need to see what was going on to know that Giada had her back against the wall and her pussy wrapped around the stranger's cock. ",
        "Almost like she was reading from a fucking script. The pretty boys from the trendy clubs, she brought home. When she went slumming, she fucked them in bathrooms or back alleys. Daddy had let her security lapse of late, so she was all alone on her little excursions to the wrong side of the tracks too. That put her squarely in the category of easy prey.\n\nOccasionally, an overheated moan would drift out to him. Creed glanced at his watch. Fourteen minutes into the encounter, Giada let out a forced-sounding squeal. He smirked. She goes out looking for a dirty fuck and ends up having to fake it. Almost made him feel sorry for her.\n\nThe guy came out a few minutes later, adjusting himself as he walked away. Giada emerged a few minutes after that, tossed her hair and started walking in the same direction. From her gait it was clear that she wasn't trying to catch up to her companion. \n\nCreed watched for a few minutes, then he followed. The scent coming off her said whoever the guy was; he'd been stupid enough not to use a condom. He grinned and closed the distance between them. With one hand clamped over her mouth, he pushed her into a small vacant lot and around the back of an empty building. She struggled until she saw his face. Her heart was still racing, but she stopped struggling. She pressed her legs together and shifted her hips against the wall. Even if he hadn't been able to smell her, he caught the recognition.\n\nHe leaned down next to her ear. \"Gonna scream?\" His voice was a low, seductive purr.\n\nShe shook her head. \n\nCreed took his hand away.\n\nShe gave a practiced flirty smile. \"Could've just said hi in the bar.\"\n\nHe shrugged. \"Had to do something first. Figured I'd find you again.\" He grinned.\n\nA blonde eyebrow arched. \"What if I didn't want you to?\" She'd moved off the wall to press herself against him.\n\n\"You wanna talk,\" He pushed her back against the wall just hard enough to draw a moan from her. \"Or you want me to scratch that itch that skinny bastard left you with?\"\n\nHer hands wandered over his chest, then to the front of his jeans. \"What if I had screamed?\"\n\nCreed grinned and shrugged. \"Then I'd've had to kill you.\"\n\nGiada laughed and tried to pull him down into a kiss. Creed pushed her away. He pulled two filled syringes out of his pocket and showed them to her. \"What's that?\" Her voice was curious and eager. \n\n\"Little somethin' to make the cum better.\" Creed rolled up his sleeve and punctured a vein, emptying the contents of one into his bloodstream. The drug brought a momentary tension to his chest, but that dissipated in a few seconds. He offered the other needle to Giada.\n\nShe shook her head. \"I suck at finding a good spot.\"\n\nHe rolled his eyes in mock exasperation and took her arm. \"Lemme do it.\" He put a soft slur in his words. His movements were slower, more deliberate.\n\nGiada didn't resist as he slid the needle into the crook of her arm. She grinned. \"What is it? In case I want some more.\" \n\nCreed pushed the plunger and watched the drug start to take effect. Giada's eyes widened and she reached out to claw at him. She was struggling to breathe. His grin was laced with murder. \"Succinylcholine. Trust me, that's the only dose you'll ever need.\" \n\nThe struggles to breathe stopped. Her eyes were wide, the drug paralyzing her muscles. Her own body suffocating her without robbing her of consciousness. She slid down the wall and he took the needle out of her arm. He let her sit with her legs spread wide, the skirt up over her hips. Deft claws sliced the buttons off the dress. \n\nHe took out another syringe, this one filled with heroin. \"You really were a dumb cunt.\" He was careful to push the needle into the same place in the crook of her arm. He wiped the barrel of the syringe and the plunger, then used her hand to inject the drug. Despite the fact that she couldn't breathe, her heart would still beat for another couple of minutes, sending the drug through her body and giving the coroner a nice, neat cause of death. \n\nCreed stood back and waited until the smell of death started to saturate the tiny space. He grabbed her purse with tips of his claws, walked into the empty lot and vaulted easily over the chainlink fence. He dropped the purse next to a sleeping homeless man before he emerged on the other side of the block.\n\nHis pace was unhurried. Just a guy out for a late night stroll. He'd just about reached the place where the van was parked when the phone on his hip vibrated. He looked at the number and saw it was the frail. The thought of talking to her with the stink of the slut's death on him disgusted Creed. He let the call go to voicemail. He'd call her back when he'd had a shower. \n\nHe got in the van and pulled away from the curb. At the first red light, he dialed a number. The phone was answered by silence. \"Done my half. Get on with yours and don't fuck it up.\" He ended the call confident that the team waiting outside Cavallo's house was on their way in.\n\n*~*~*~*~*~*\n\nKelly sat in one of the wide window sills. Her head rested against the glass. The cup of coffee in her hand was still too hot to drink, but the warmth felt good in her hands. Victor had been gone just over forty-eight hours, but it felt more like four months. She'd called him once, but he didn't answer. He called her back a few hours later, but hearing him had only made her ache to have him close.\n\n\"What's happening today?\"\n\n\"Hm?\" Kelly glanced up at Conlon.\n\n\"Over there.\" He indicated the building across the way with a nod of his head. \"Anything interesting?\"\n\n\"Mr. Left's wife found out he's been sneaking around with Mrs. Right.\"\n\n\"How do you know?\" \n\nShe knew he was just trying to draw her out. She let him. \"Come and look.\" In the left-hand apartment, a woman stood in the living room with a pile of clothing and a pair of scissors. The mascara streaking her cheeks made it clear that she had been crying. Her vision was clear enough to cut the crotch out of the pair of pants in her hand. She bent over and picked up another pair from the pile.\n\nConlon nodded. \"Yep, looks like she found out alright. Mrs. Right's husband find out?\"\n\n\"I don't think he believes it. They looked like they were having a fight awhile ago.\"\n\n\"They always fight.\"\n\n\"I know. I can't imagine having that much to fight about on a daily basis though.\" She smiled a little. \"Sometimes I wish I had sound.\"\n\nHe laughed. \"You could just watch the soaps.\"\n\nShe shrugged. The smiled twitched a little wider. \"That's all made up.\" She pointed to the window. \"This is real life. Much more interesting.\"\n\nA silence hung in the air for a few long moments.\n\n\"He'll be back soon.\" Conlon's voice was quiet.\n\nA deep sigh. \"I know.\" Kelly looked over at him for the first time. \"It's just strange being apart from him.\" She looked at Conlon. \"Not that I don't appreciate-\"\n\n\"It's okay. It's not the same thing.\"\n\n*~*~*~*~*~*\n\nVictor Creed didn't believe in taking risks with where he slept. That was one of the reasons he bought the second building all those years ago. It shared a common wall with the warehouse. Besides, living close to a place where he could work had its appeal. It took him awhile longer to see the true potential of the place. \n\nBack then, he hadn't known shit about the psychology of what he did. He knew all about how to make someone hurt, how to make them beg for death to escape it, how to make them afraid. All the basics. How the mind connected and intensified all of those things wasn't even on his radar until a client hired him to deal with a certain member of his organization who had turned snitch. \n\nCreed had thought it was a stupid idea at first, but he wasn't being paid for his critique. To his surprise, a little window dressing went a goddamn long way to intensifying the whole thing. It left him with a desire to know more and a police-style interrogation room straight out of the movies, complete with harsh lighting, one way glass observation window, yellowish walls and linoleum, and a metal chair bolted into the floor. Through the years he'd made improvements; an intercom system, better locks, little shit like that, but it was essentially the same place it was all those years ago.\n\nStan's sorry ass was currently occupying the chair. His hands were cuffed behind him and secured to the back of the chair. His ankles were shackled to rungs. He was still unconscious from the cocktail of drugs that had drained into his veins for the long drive from New York State. \n\nMuch as Creed had wanted to pick him up personally, he hadn't trusted himself to simply sedate the son of a bitch. He was going to tear Stanley Wilton apart. He was going to make it last, redress every wound the frail ever suffered because of him. Savor every scream ripped from his fucking throat. Make an eternity in Hell look like a vacation. His claws itched for the chance. \n\nThen he thought about the frail's request. The only thing she'd asked him for. Letting her walk into a room with the reality of what he did to people sitting right in front of her covered in blood and bruises would have been another trauma. That idea was the only thing that was holding the animal in check. \n\nThe balding head jerked. Creed stood up a little straighter and turned on the intercom. It seemed like forever before the twitch happened again. This time it was accompanied by a moan. The captive man tried to bring his hands forward, tried to shift in the chair, and found himself held fast. That realization pushed back the fog of the drug. His head came up and he opened his eyes. For a long moment, he looked dazed, then recognition dawned on the jowly face. \n\n\"Hello?\" His voice was gravely and laced with terror. \"Who's there? Let me out of here!\"\n\nCreed stayed silent and turned off the intercom. He took the phone off his belt and dialed. \n\n\"Conlon.\"\n\n\"He's awake.\" He ended the call. Conlon would know what to do from there.\n\n*~*~*~*~*~*\n\nKelly stood in front of the mirror and assessed how she looked. In the last hour, she had changed her clothes five times, thrown up twice and showered once. Victor had told her that he'd call Conlon when everything was set, but then it was just an idea. An abstraction that might happen, but probably wouldn't. Now it was real and Kelly wasn't sure she could face Stan.\n\nShe took a deep breath and looked at herself again. It shouldn't have mattered so much what she was wearing. Being there, alive and breathing would make enough of an impression. Still, jeans weren't right and nothing else seemed right either. Finally, she'd selected a full black skirt and dark green silk blouse. Her hair was twisted into a neat bun. A bit of make-up hid her nervous pallor. Black boots with three inch heels made her feel taller. Less vulnerable. \n\nFinally she went downstairs. \n\nConlon stood up. \"Ready?\"\n\nShe nodded, not trusting her voice. He helped her on with her coat and then went down to the garage. Conlon opened the door to the dark SUV and Kelly got in the front seat. She didn't pay any attention to where they were going, but it seemed to take ages to get there. Finally, they pulled up to another brick building with a garage mechanism similar to the one at the apartment. Conlon pulled in to a much smaller, much dimmer parking area. She got out and followed him to a door mostly concealed in the shadows. Conlon entered a code and the door opened into a short, dim, brick-lined hallway terminating in a set of stairs leading down. \n\nKelly paused at the threshold. \n\nConlon looked back at her. \"If you don't want to, I'll tell-\"\n\n\"No.\" She closed the door behind her and walked down the hall. \"I just wasn't expecting...\" She shook her head. \n\nKelly followed Conlon through what seemed like a rabbit warren of tunnels. There were cameras everywhere. Each time they approached a door, Conlon looked up into the camera and the lock clicked open. After the fourth door, and another set of stairs leading down, she saw Victor standing at a wide spot in the hall, waiting. His arms were crossed over his chest. \n\nShe could see that he was almost as tense as she was scared. \n\nConlon let her walk the rest of the way alone. \n\nAs soon as she was close enough, Victor pulled her against his chest. For a long moment, he just held her. Kelly felt some of the more painful fear start to subside. \n\n\"Smell scared.\" His voice was a soft rumble.\n\nKelly tightened her arms around him. \"I don't know if I can do this.\" Her voice was barely above a whisper.\n\nHe lifted her chin. \"I ain't gonna force you. I'd rather you forgot about the sorry motherfucker altogether. Think that'll happen if you don't say what you gotta say?\"\n\n\"No.\" A man without Victor's acute hearing would have missed it.\n\nHe kissed her forehead and led her toward a large window. On the other side, Stan was shackled to a chair. Kelly jumped back, but Victor caught her. \"One way glass, he can't see you.\"\n\nKelly looked at Victor and stepped forward again, studying the man that had made her life and the lives of those she loved a living hell. He was fatter than she remembered. Softer. Smaller. His arrogant expression had melted and shifted into a look of pure desperation. He was shouting something, but she couldn't hear what it was. \n\nSeeing him like that, shackled and terrified, she almost felt sorry for him. Almost. He was the one who was responsible for her knowing what it was like to be captive and terrified. She barely noticed when Victor took her coat off. He put his hand on her stomach and leaned close to her ear.\n\n\"Wanna hear him?\" His voice was soft.\n\nKelly didn't trust her own voice yet, so she nodded.\n\n\"We can hear him. He can't hear us.\" He pushed a button.\n\n\"-out there! I demand to be let out of here! Do you know who I am?\" It was bluster. The desperation was even more clear in his voice than it had been in his face. \"I have powerful friends. Friends you wouldn't want to cross. Friends who can put you in a hole so deep no one'll ever find any trace of you!\"\n\n\"That's what he wanted Cavallo to do to me,\" she whispered.\n\n\"Not a very original son of a bitch is he?\" \n\nKelly could feel her anger starting to overtake her fear.\n\n\"Seeing you again is better than he deserves.\" His voice was still soft, soothing. \"Think he'd have had the balls to go to see you in Cavallo's bunker?\"\n\nShe shook her head a little. The diatribe coming through the intercom had turned into a discordant melange of swearing and begging. She ignored it.\n\n\"Fucking right he wouldn't.\" His hand stroked her stomach softly. \"He was always beneath you. You know it, now he's gonna know it.\"\n\nKelly nodded and forced herself to step away from Victor. \n\nHe stepped in front of her. \"You walk in there and you have all the power. You say what you want, do what you want.\"\n\nShe nodded again.\n\n\"There's no handle on the inside of the door. I'll be listening, so say 'I think we're done here' and I'll let you out.\"\n\nKelly looked at the colorless room. The idea of being locked in there brought an onslaught of memories of her own captivity. She looked at the little toad of man in the chair. His face was red, his anger and indignation were back. So were hers. She nodded at Victor. He put his hand on a scanner and a lock clicked. Stan must have heard the sound too because he fell silent. She squared her shoulders and walked into the room.\n\n\"Well it's about damn time! Unlock me right now and I'll try to get my friend to go easy on you.\" The sound of angry indignation mixed with the smell of stale air and urine.\n\nKelly willed herself not to flinch when the door closed behind her. \n\n\"Well? What are you waiting for?\" Stan demanded. Fear and anger fought for dominance in his piggy little eyes. His shoulders tried to muster dominance. His mouth was drawn into a resolved line. \"Look, I don't know who you're working for or what they told you, but the fact that you're a woman isn't going to intimidate me.\"\n\nThe one thing that was missing from his features was recognition. Any fear that Kelly had fell away, leaving only a fierce kind of clarity she hadn't known existed. She would say what she came to say, but she would be damned if she would tell him who she was first.\n\nKelly glanced around the room and spotted a folding chair by the door. She set it up across from Stan and sat down. Her legs were crossed, her hands folded in her lap, her eyes fixed on his. \n\nShe'd wait until he figured it out.\n\n*~*~*~*~*~*\n\nCreed motioned for Conlon to come over to the observation window. A small smile was on his lips. The frail sat motionless in a chair while the fat little bastard sputtered and pleaded and swore. \n\n\"What's she doing?\" Conlon asked.\n\nCreed glanced at the smaller mutant. \"Waiting.\"\n\n\"For what?\"\n\n\"You can't tell?\" Creed studied the smaller man.\n\nConlon shrugged. \"Not really. As nervous as she was before we left, I would have thought that she would just say what she wanted to say and get it over with.\"\n\n\"You might be able to assess a threat on the fly, but you're fucking useless when it comes to anything else, aren't you?\"\n\nConlon looked at him for a long moment. \"Not what I was hired for.\"\n\n\"Damn good thing.\" Creed looked at the frail's back again. \"He's got no fucking idea who she is. He's been demanding to know, as if he was in a position to demand anything. 'F she tells him, she gives control of the conversation to him. Deep down, she knew that.\" He was silent for a long moment. \"She's a fucking natural at this shit.\" The words brought a physical ache to his chest. He knew how she had come by those unique skills.\n\nStan stopped talking so much and started looking at the frail more intently in the ensuing silences. Creed could see tension in her back, but she managed to keep her body still.\n\n\"You're going to make him last.\" There was a certainty in Conlon's words.\n\nCreed shrugged. \"All the shit he did to her, I don't think even I can wring enough suffering out of a human body to make up for it.\"\n\nThe room in front of them had gone silent. The frail still sat motionless. Stan was leaning forward as far as the chair would allow, studying her face. Creed and Conlon watched Stan. A moment later the fat bastard sat as far back in the chair as he could. The color drained from his face. \"Oh my God.\" He started to try and push the chair back with his shackled feet.\n\n*~*~*~*~*~*\n\nKelly watched the change sweep over Stan's features. When he started to try and backpedal, she smiled.\n\n\"Something wrong Stan?\" She kept her tone conversational. \"Well, aside from the obvious captivity thing.\"\n\nHe was shaking now, all the bluster replaced by fear. \"I...you...you were-\" \n\n\"Supposed to be dead?\" She finished. \"Yeah, that didn't quite work out.\"\n\n\"Y-no! Dead? No! I mean...\" His mind was racing, trying to put together something that sounded reasonable. Kelly could almost see the gears spinning. \"I mean, I thought you were happily married to Roland.\"\n\nShe shook her head. \"After everything that's happened, you still want to lie?\"\n\n\"Kelly-\"\n\n\"And not even a very plausible lie.\" She got up and started to walk around him in a slow circle, her arms still crossed over her stomach. The sound of her heels on the tile filling the small room. \n\n\"It was your mother.\" The words came out quickly. \n\nShe stopped in front of him. \"My mother?\" Sweat had made dark rings under his arms.\n\nHe tried for a casual shrug and ended up with more of a nervous twitch. \"You know how she is. Flighty. Sh-She got the idea that you'd be happier out of the house and, as usual, she made me the bad guy. You really don't know what I've had to put up with all these years.\"\n\nHe was grasping at straws, they both knew it. \"She made you the bad guy.\"\n\n\"All the time.\" There was a hopeful excitement in his eyes. \"She couldn't stand the thought of you kids hating her.\" He leaned forward, as if sharing a secret. \"She's not a very stable woman.\"",
        "\"Not a stable woman.\" Kelly stood still looking down on Stan. \"Did that instability start before or after you started feeding her Panacea?\"\n\nHis eyes widened and then narrowed. \"I don't know what your-\"\n\nShe stepped forward. \"I'd rethink that, Stan.\"\n\nAnger twisted his features again. \"What do you want?\"\n\n\"Just the truth.\"\n\nA derisive laugh. \"And then you kill me, is that it?\"\n\nShe smiled sweetly. \"I'm not going to lay a finger on you.\" Kelly sat down across from him again to emphasize the point. \"You married my mother because you wanted a ready-made family. Something to show off.\"\n\nHe swallowed hard. \"I wanted to be a father-\"\n\n\"Bullshit.\"\n\n\"What? You want me to say it?\" He screamed. \"Fine! I had everything else in place to move up in the Church except a family. You were window dressing. Didn't realize you would be a pain in my ass from day one. Figured Dawes would break you. Turn you into a submissive wife.\"\n\nShe'd known it all along, but the words hurt as much as any punch she'd taken from M\u00fcller's assistants. She forced herself to be still and keep her face expressionless. The silence stretched.\n\n\"What'd you do? Kill him?\" Stan's face twisted, as if the words left a bad taste in his mouth.\n\nA little smile touched her lips. \"I don't think I'll be answering any of your questions today, Stan.\"\n\nHe stared at her, anger narrowing his eyes and tightening his jaw. \"Little bitch. I should have made sure that the only way you left my house was feet first.\"\n\nKelly nodded. \"Probably. You never were very competent though. That what got you in trouble with Paulie C.?\"\n\nHis eyes widened and then narrowed again. He shifted in the chair as much as the restraints would allow. \"What do you know about that?\"\n\n\"More than I thought apparently. Delivery schedules, cash transactions, even sales strategies all from your lips to my receptive ears.\" Every minute she spent in the cell, maintaining control was easier. \"Not very wise. How did Cavallo find out you two were overheard?\"\n\nHis face was florid with anger, his teeth ground together and for a long moment Kelly was certain he wasn't going to answer. \"That little bastard of a brother of yours. I was seeing Paulie to his car and the little son of a bitch started asking questions. After that, it was you kids or me. Wasn't a choice really.\" He smirked. \"A couple of tragedies with the right spin could put me in the public eye. No one would have to know that you two were impure little freaks.\"\n\nKelly ignored the comment. \"Cavallo didn't want Cody dead?\"\n\nStan shrugged. \"Don't know, maybe they thought he was dead. He sure as hell looked like it.\" His left eye twitched as he said it.\n\nKelly watched the sweating man in front of her. \"You did it yourself.\" Her voice was quiet. \"And in your usual style you screwed it up.\"\n\nAnger flared again. He leaned forward pulling on the cuffs. \"Yes. I did it and so help me every time I punched him or kicked him I saw your face. The whole thing was your fault. All you had to do was fall into line and he would have too, but oh no, you had to be a hard-headed little bitch from the minute I laid eyes on you. And I didn't screw anything up! Your mother came in and saw her precious little boy laying in a pool of blood and piss and I knew the only chance I had was to convince her it was an accident. I figured he'd die at the hospital. Little bastard hung on.\"\n\nKelly's stomach turned. She pushed the feeling aside. There would be plenty of time later to be sick. \"That meant you owed Cavallo a life. Cavallo wouldn't have gotten any pleasure of watching his men try to torment someone who was already in a coma.\" \n\nStan sat back again. \"Know an awful lot don't you.\" He shrugged. \"Figured you'd be more fun for Paulie and his boys anyway.\"\n\nShe got up quickly because her rising anger prevented stillness. \n\nStan cringed back in fear. \"What are you going to do?\" He spoke quickly.\n\nKelly stared at him for a long moment. He was disgusting, something less than human and the quicker he was out of her life for good, the better. She took a deep breath. \"I'm going to forgive you, Stan.\"\n\nHe stared at her. \"What?\"\n\nShe bent over and looked into his eyes, her nose an inch away from his. \"You are a sorry excuse for a human being. You wrap yourself in hatred and excuses because you can't face what a cowardly waste of space you really are. Hurting the defenseless makes you feel less like the insignificant little maggot you are. I don't have room for that in my life, so in time I will forgive you. Then I'm going to forget you ever existed.\" She stood up again and smiled at him. \"I think we're done here.\" Her head was spinning; a tremor was threatening to take over her body.\n\nThe door opened behind her and Victor pulled her into a deep kiss. How he knew she needed that kind of strength at that moment was a mystery to her, she was grateful that he did. \n\n\"What-who are you?\" Stan's eyes were wide. Kelly and Victor both watched him until recognition dawned. \"My God, you're-\"\n\nVictor grinned a fang-baring grin. \"Her mate.\" He looked at Kelly again. \"Whatcha got planned for the rest of the day, frail?\"\n\nThe look in his eyes told Kelly that 'going home to throw up' was not the right answer. \"I have a hair appointment.\"\n\n\"Mate? What the hell is that?\" Stan was struggling now.\n\nVictor held her eyes. \"Where?\"\n\n\"Irina's.\" \n\nHe nipped her lower lip softly. \"Not too short.\"\n\nShe forced a smile. \"I promise.\"\n\nHe led her to the door with his hand on the small of her back. \n\n\"You can't leave me here!\" Stan's scream was filled with abject terror. \n\nKelly and Victor stopped to look at him.\n\n\"Why the fuck not?\" Victor asked.\n\nHis eyes darted between the two of them. \"Because...Because she forgave me. It's over, she forgave me!\"\n\nKelly nodded. \"I said I will forgive you. Eventually.\"\n\nVictor grinned again. \"I don't forgive.\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "vengeance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-30"
}