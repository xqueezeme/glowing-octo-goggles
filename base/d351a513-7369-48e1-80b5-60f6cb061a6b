{
    "title": "Lost & Found Ch. 05",
    "pages": [
        "This is the 5th and final part of this story, which has been a part of me for so many years now, it feels strange, and a little unsettling, to be finally putting it down; to be honest, there have been times when I really wanted to delete the whole thing and walk away in disgust. \n\nMriceman1964 persuaded me, a long time ago, to clean it up, polish and re-shape it a little, and to listen to my wife and her cronies,all of whom seem to have this unnatural, hormonal attachment to Robbie (and gin Martini's, too, let us not forget that!)\n\nThis is how I tried to see the story ending all that long time ago, when I first started writing this in my spare time, while deployed firstly in Iraq, then in Afghanistan, but really, Mike, Bonnie Hurd, and of course, my darling wife Lori and her gang of really quite lovely ladies, all made it happen, so many heartfelt thanks to all of them!\n\nI won't be re-visiting this story again; I feel like it's finished, all the loose ends have been tied up to my satisfaction, and all the people involved in the story have reaped their just rewards, so this is where I say my final farewell to Robbie, Casey, Sarah & Joey, Frank, Caitlin, and of course, Steve Dolan!\n\nThank you for bearing with me, I've enjoyed the ride, and I've enjoyed unravelling my mind at you, I hope you think it was worth the wait.\n\nAuf Wiedersehen,\n\nbeachbum1958\n\n_______________________\n\n**********\n\nPart 1: Let all bitterness, and wrath, and anger, and clamour, and evil speaking, be put away from you, with all malice \u2013 Ephesians 4:31-32\n\n**********\n\nI was transfixed, horrified, mortified, and shrouded in guilty shame; Kat, here, naked, with me, in my bed! Oh dear God, what the fuck was I thinking? What in the name of Christ had I done? How could I have been so stupid? She was my little sister, I was supposed to look after her, not drag her into my bed like some oversexed teenager and...and then...Oh my God, how could I ever fix this?\n\nKat reached out to me, smiling, her eyes still blurred and unfocussed with sleep, and I slid away from her, so fast, in fact, I slid right out of bed and landed on my ass with a loud thump.\n\nI lay there, letting the shock take over for a few seconds, unable to contemplate the full, sheer awfulness of what I'd done; I'd bedded my baby sister, on her prom night, of all nights, I'd abused her trust, I was no better than her prom-date spiking her drink and doing her while she was passed-out. What was I going to do? How the fuck was I going to fix this? Ask Sarah? Not in this life; she'd skin me, then skin Kat, then come back and finish me off. Oh fuck, what a mess, what a complete, fucked-up, unbelievably stupid, God-forsaken mess I'd made...\n\nKat's face appeared over the edge of the bed, looking down at me in amusement.\n\n\"That was funny, Frankie, but why are you still on the floor? Come on, get back up here, I'm cold, hold me!\"\n\nI nearly passed-out at that. Hold her? I shouldn't even be touching her, not after what I'd done to her, not after...oh God, what was I going to do?\n\nSomething touched my head, startling me, and I looked up to see Kat trailing her fingers through my hair.\n\nI shrank back, seeing the hurt puzzlement in her eyes.\n\n\"Frankie, what's the matter? Are you okay? You look like you just saw a ghost, what's wrong with you?\"\n\nI gulped, my head spinning as I sat there, desperately trying to think of a way to apologise to my baby sister for what I'd done to her...\n\n\"Kat, Caitlin, baby...I...I...we...what happened...I was...I didn't think...oh God, I'm so sorry...!\"\n\nKat lay on her forearms, watching me as I dissolved into a quivering heap, a small, knowing smile on her lips, her full, curving, desirable, kissable...stop that! \n\n\"What the hell's wrong with you?\" I chided myself, \"you fucked up so big you're gonna be a dead man when Sally finds out, you better start thinking of a way out of this, not mooning over Kat, and her lips, and her eyes, and her body, her delectable, desirable, beguiling, sexy body...!\"\n\nI groaned; I was a dead man walking, Sally was out there, she was waiting, and when she found out about this, (and make no mistake, she would, the girl could see through a brick wall) she was going to skin me alive, slowly, then shove her foot up my ass as a reminder of why it was wrong to fuck my baby sister... \n\n\"Alright, Frankie, enough. I don't know what bit you, but if you don't come up here right now, I'm coming down there! FRANKIE! Are you listening to me?\" she grinned, her voice finally distracting me from my contemplation of my imminent death. I looked up at her miserably.\n\n\"Kat, I'm so sorry, I made you do...things, last night, things I'm supposed to protect you from, God, Kat, I'm so, so sorry, if you want to call the sheriff and have me arrested, I won't run, I have to pay for what I did, I'll tell him I forced you, no-one needs to know about us, what happened was all my fault..!\"\n\nKat looked at me in amusement, her eyes sparkling with glee and good humor as I ground to a halt.\n\n\"Have you quite finished?\" she grinned, and I nodded miserably, ready to take my punishment.\n\n\"Frankie, of all the lame-brained, half-witted, idiotic, bone-headed, gibbering nonsense I've ever heard dribble out of your mouth over the years, that little speech just took the prize for the stupidest, dumbest, most ass-headed garbage I'm likely to hear in this life or the next. Maybe I should call Sheriff Fatso, maybe getting your ass kicked by Fatso and his bozo deputies will shove your brain back into place, it must have got dislodged when you fell out of bed and landed on your ass!\" \n\nI gaped at her, unable to comprehend what she meant. Kat grinned even wider, beaming at me as she sat upright. The bed covers fell away from her as she sat, naked to the waist, artlessly, unselfconsciously naked, her white skin glowing dazzlingly in the morning sun, her nipples like jewels, a delicate pale coral pink against the milky whiteness of her skin.\n\n\"Frankie, everything that happened last night, everything, was because I wanted it; do you really think I'd have let you do anything to me I didn't want you to do? Think, Frankie, this is me we're talking about here!\"\n\nI was trying to hear her, but all I got was a sense that she perhaps wasn't too mad at me or repelled by me after what we'd done; all my attention was riveted on just how deliciously, erotically, delightfully desirable she was just then, one half of me drooling over her, the other half disgusted beyond measure with me for sullying my baby sister, with a healthy dose of fear parked on the sidelines in reserve for when Big Sister found out...\n\nMy attention was dragged back to her face when she leaned down and clicked her fingers several times in my face.\n\n\"That's right, Frankie, over here, baby, that's it, look at me!\"\n\nWhen she was sure she had my attention, she smiled slowly, pulling the covers back up over and around herself, just like she used to do when she was younger, in the bad days after we lost dad, leaving her smooth white shoulders bare.\n\n\"Frankie, everything that happened, everything we did, happened because I wanted it to happen, and more; I've been trying to get your attention for months, I've been practically throwing myself at you for God knows how long, just about the only thing I didn't do was pull my panties down and rub my ass in your face! Last night was supposed to be the clincher; you were supposed to find me irresistible, so do you know how disappointed I was that you let me go to that stupid prom? I wanted you to throw Cory out and drag me back upstairs, rip my dress off and yank my panties down, and do all kinds of bad, nasty, exciting things to me; why do you think I bought that stupid dress? To parade around in front of those slack-jawed, knuckle-dragging, drooling half-wits in that school? Frankie, all I ever wanted was you, I've been trying to make you see that for months, but apparently your normal state is to have your head shoved up your ass...\n\nI looked at her in shock, amazed at the things that were coming out of my little sister's mouth, her beautiful, sexy, desirable...\n\nI pulled myself together enough to focus on what she was saying, finding it hard to credit that sweet little Kat could say or want those things.\n\n\"Kat...what are you saying, don't you know we can't...?\" I stammered, watching as that little line appeared between her eyebrows; she was getting pissed.\n\n\"Frankie, I'm trying to tell you, again, how much I love you and how much I want you; I told you last night, you better not have forgotten!\"\n\nThat's right, she had, in all the fright and disgusted self-loathing of the last few minutes I'd forgotten that, now it flashed up again, that whole scene in that grimy motel room when she'd told me she was in love with me.\n\n\"FRANKIE!\" she snapped, and my eyes snapped back to her as her voice penetrated my woolgathering.\n\n\"Frankie, if you're not up here by the time I count to three, I'm coming down there, and if I have to come down there, I swear to God I will punch you so hard...!\" she gritted, her sea-green eyes flashing like emeralds in sunlight. I tried one last desperate tack.\n\n\"Kat, we can't, please, think; last night was wrong, I was wrong, you're too young to make a choice like that, think what dad would say!\"\n\nShe looked at me, one eyebrow arched haughtily, doing it even better than mom. Her face stilled as she leaned down to look closely at me.\n\n\"Francis Xavier Novak, if you don't quit shivering like a little girl and get your ass up here and back into bed with me, I promise that anything dad would have done to you would be simple, painless, and over in a heartbeat compared to what I'm capable of; I didn't spend all those years bringing you up just for you to crash and burn at the end. Now get up here this second, blondie, and I fucking mean it!\" \n\nI was lost for words at what she'd just said, actually spluttering as everything I tried to say tried to come out all at once. Kat looked on as I bubbled over, her expression slowly softening and mellowing into her beautiful dimpled grin as my sputtering and gibbering fizzled out.\n\n\"Right, are you done? Good. Up here, now, Frankie, don't make me hurt you; I know where all your soft-spots are, I have sharp teeth and nails, and I will use them!\"\n\nMentally crossing myself, I slid back into the bed, scrupulously avoiding touching her, thinking all the while of just how many ways this was wrong. Kat rested her head on her hand, her elbow on her pillow, and grinned at me, her other hand resting outside the covers, and once again I was struck by just how milk-pale her skin was, how vividly scarlet her hair was against that porcelain whiteness, and just how lustrous her smoky green eyes were, like the finest Colombian Boyac\u00e1 emeralds.\n\n\"Frankie,\" she murmured, \"am I really so repulsive that you have to run away from me? I thought you loved me, or at least liked me. I need you, now; why won't you hold me?\"\n\nHer grin faltered and her lip quivered, and I suddenly realised just how hurt she was by my sudden, panicked rejection of her; she really didn't know, or didn't care, just how wrong what we were feeling was, and believe me, I was feeling it strongly; all I could think of was her, and how much I wanted her, how much I needed her, and, at the back of it all, how wrong it all was, of course it was, no question; but it felt right; it felt natural, and normal, and unforced.\n\n\"Kat, I...\" I began, and she slid herself over to me, her arm going around my neck as her lips pressed against mine, and I was lost; all my fears, for me, for her, and all those feelings of wrongness disappeared, wiped away by her lips and the feel of her silky-soft warm skin as it pressed against me, her lovely tight young body molding seamlessly into mine.\n\nAfter a million years or so, Kat pulled away from me slightly, looking up into my eyes, her eyes sparkling green pools that a man would happily, unhesitatingly sink into, or like bright, sunlit glades in a secret forest, lush, green and verdant, brimming with life and the love of life...\n\n\"Are we good now, Frankie, does that make it right?\" she whispered, her eyes wide and hopeful, but a hint of fear at the back, fear that I would finally reject her; she didn't have to worry. That kiss had done what no amount of argument, soul-searching, or anguished internal debate could ever have achieved; it told me how things were between us, and how they were going to be from now on; I wanted her, and I didn't care what I had to do to keep her, because she was mine now, and I was hers, period.\n\nMy arms slid around her of their own volition, around her waist and further down, to cup her taut cheeks and pull her closer to me. Kat smiled, her arms tightening around my neck and the back of my head as she pulled me down for another kiss, this time with my full and willing participation. I kissed her like it was the first time, gently, tentatively, slowly parting her lips with my tongue and slipping it into her mouth, to fence gently with hers.\n\nAs we kissed, she writhed and rubbed herself against me, obviously enjoying the feel of my solidly erect cock squeezing between us and poking into her firm stomach. The feel of her wriggling against me was doing all sorts of things to me, feelings and desires all slowly coalescing into one big thought; I needed to fuck her, hard, now. She must have seen the need flare up in my eyes, because she pulled herself tight to me before slipping her leg over my hips and pushing me, rolling me onto my back with her on top of me.\n\n\"Like this, Frankie, I want you like this....!\" \n\nshe muttered, her moist pussy lips sliding along the length of my amazingly hard cock as it lay along my stomach, sandwiched between us. \n\nThe feel of her wet heat dragging along me as she rubbed herself up and down my length was overpowering any lingering doubts or apprehensions, and when she stopped I groaned in frustration. I was only momentarily disappointed though; she lifted up slightly and took hold of me, the feel of her warm hand wrapping around me at once a blessing and an urgent need, one I had to satisfy at all costs, otherwise I'd have exploded there and then. \n\nShe grinned at me as she rose up a little more, rubbing my cock-head against her damp swollen labia, the heat again making me groan with need for her. She looked me in the eyes, her bottom lip caught between her teeth as she grinned at me, and slowly, slowly, lowered herself down on me, her warmth and wetness engulfing me at a snail's pace and with lightning speed at the same time, until I was, at last, buried in her to the hilt. She leaned forward and kissed me once, lightly, on the lips, before sitting back up and smiling secretively, slyly at me.\n\n\"This is for you, baby!\" she smiled, the smile morphing into a sexy pout as she began to slide herself back and forth, small movements, but combined with a rhythmic squeezing as she clenched and relaxed her muscles around me, squeezing and massaging me as she slowly pumped herself against me. \n\nNow she began to shimmy her hips as she ground against me, the sight and feel of her so erotic I was nearly overcome with the power of it. I reached out for her, and she leaned forward, pushing her tense, straining nipples directly into my outstretched hands. I closed my hands over her breasts, kneading and massaging the soft, firm mounds even as I twirled and squeezed and rubbed those beautiful, stiff pink nubs, watching her face and neck slowly flush as I squeezed and caressed her breasts, her eyes closing and her breathing slowing and deepening as her arousal increased. \n\nShe began to grind harder and faster against me, her own hands dropping to rest on my midriff, holding herself steady as she pumped and ground against me, her hips pistoning as I began to pump and push back against her, increasing my penetration as she strove for more from me.\n\nShe came with a piercing cry, her eyes clenched tightly shut as she shook and wailed on top of me, her body shuddering as her orgasm flared and crashed though her. As her pussy convulsed around me, the hot, squeezing, pulsating sensation was too much for me, and my cry answered hers as I too surrendered to orgasm, my cock swelling and pulsing as my white-hot sperm boiled out of me and into her in long, hot spurts, painting her insides with my own creamy tribute as her rippling pussy milked me so thoroughly. I came in endless, jolting spurts as she shook and whined above me, her orgasm kicked into higher gear by the feel of my heat exploding inside her over and over, filling her with my essence.\n\nKat finally slumped down against me, her heart hammering against mine as she drew a long sobbing breath, forcing air back into her lungs after the long free-fall of orgasm, the bright flare of nirvana giving way to the mundane and the normal again. \n\nI was in no better shape; having sex with her was like nothing I'd ever experienced before, a clean, heart-bursting, white-hot intensity that drove all rational thought from me and left me with nothing but the overwhelming need for her, for her kiss, her touch, the smell of her hair, the feel of her skin, and the chance to once again drown in the limpid, emerald-green pools that were her eyes.\n\nI suddenly realised I had truly fallen in love, and, strangely, that thought brought no sense of strangeness or shame that I should feel that way about my baby sister, only acceptance and a deep and abiding sense of the rightness of it; society said it was wrong, but everything inside me said otherwise; Kat was the one for me, and I could feel the corresponding thought and need radiating off her with every breath she took. \n\nMy arms wrapped around her, holding her to me as I waited for her body to relax and recover, my hands caressing and gently squeezing her ass without any conscious thought or need on my part; they just went to the place they were most comfortable with and rested there, gently playing with those firm, satiny little cheeks. \n\nAt last, Kat stirred, raising her head to blearily look into my eyes, her tongue snaking out to lick my lips as she smiled like a little girl.\n\n\"Hi Frankie, can we do that again soon?\" she smiled, her eyes still blurry with tiredness, and something else as well in back of them; trust; she trusted me to make this come out right for us both, and I knew I would, that I would do whatever it took to keep us together, whatever the outside world wanted to throw at us.\n\n\"Forever, baby, as long as you want to do that, and anything else, I'll be there to do it with you; I'll never leave you, Kat. I love you baby, and I always have.\"\n\nShe smiled happily, seeing the truth of what I was saying in my eyes, sure now that we were finally together. She sighed and laid her head back down on my chest, wriggling contentedly on top of me, and making my half-hard cock still inside her suddenly twitch in reaction to her wonderful, tight young body lying so invitingly on top of mine.\n\n\"Give me a few minutes, Frankie, please, a lady needs to look her best...!\" she giggled, obviously feeling my cock suddenly wanting to come alive again at the thought and feel of her. \n\nMy hands roamed lightly over her as she relaxed, a small smile on her lips as I touched and smoothed, caressed and lightly traced every line, contour, and curve of her body. She was lithe and slim, a willowy and slender but shapely figure, with a dancer's grace and the body of an acrobat or trained gymnast, every muscle in her body honed and shaped into a perfect, harmonious whole. I had seen her walk, noting the unconscious poise and grace of her body in motion, her gait fluid, balletic, and elegant, and it occurred to me that I must have been watching her and storing up these images and conclusions for a very long time, and now, now that we had become what we were, now my mind chose to release the floodgates of memory and let me see her all over again in my mind's eye, realising that she really was 'Poetry in Motion', as Johnny Tillotson so eloquently put it. ",
        "As my hands roamed, my cock stiffened; the feel of her was making all sorts of things happen in my head, foremost of which was the almost overpowering urge to fuck her, hard; I didn't want to make love to her; I wanted to fuck her bowlegged, I wanted to ram my cock into her and make her gasp out my name, beg me to stop, beg me to do it harder, to groan with the force of me hammering into her, and make her beg me to fill her up.\n\nOf course I did none of those things; she was my lover, yes, and we were naked, with my cock still buried balls-deep in her, but she was also my baby sister, and I would never, could never, treat her like that. Instead I fondled, squeezed and touched, wondering at how plush and silky soft her skin felt, how her vitality and life-force tingled through my fingertips with every touch or caress of her, how warm and soft her lips were as I returned periodically to give and take a small, tender kiss. Her eyes flickered over me, laughter and girlish amusement side by side with the needs and drives of a grown woman glittering deep inside them as I explored in minute detail her lithe, tight body, her porcelain skin, her stiff, beguiling nipples and the taut, sensitive bud of her secret place as my fingertips slipped delicately over it during the course of my explorations.\n\nAt last I couldn't take any more; my cock inside her was aching with the need to pump her full of my tribute, I wanted to fill her, and hear her gasp for me as we made love, not lie here and grope as my balls ached to empty inside her again.\n\nKat sensed the tenor of my thoughts, and pulled my head down to her, pushing her nipples against my chest as her teeth lightly nipped the end of my nose, my bottom lip, my chin.\n\n\"Love me, Frankie, make love to me again, baby, please!\" she whispered, something I was only too willing to do.\n\nAs she rolled away from me, I rolled with her, keeping my weight off her and on my knees and elbows, while simultaneously withdrawing and sliding back in again.\n\n\"Ooooh God, yesss!\" she moaned, lifting up to meet me as I pushed back into her, enthralled with her expression as I slowly pushed my cock deep into her and withdrew once again. As I pumped she began lifting to meet me, her hips rising up in counterpoint to mine as I pumped down into her. At the same time, she pulled herself closer-in to me, holding me tight as I sped up, pumping as hard and as fast as I could. Kat was writhing under me even as she madly humped back at me, her head whipping from side to side as she gasped and groaned each time I thrust my cock back into her. I could feel my balls tightening as my climax approached; I couldn't hold it much longer, and from the look of her, neither could she.\n\nWith a long, wailing cry, she climaxed, her pussy clamping down on me so tightly I was locked in place as she shook and trembled beneath me, her eyes screwed tightly shut as her orgasm surged and crashed through her. This was too much for me, and I came with a shout as my sperm blasted out of me, long, hard spurts of semen spraying deep inside her womb, again and again, until I thought I'd never stop.\n\nEventually the crashing, trembling sensations inside me died away, the bolts of semen shooting from me dying away to a trickle as I emptied myself into her. Kat shuddered and quivered under me as she too came down from that place into the calm of post-coital relaxation, her storm passed and tranquillity gradually returning. As I slumped down next to her, her hand came up to press against my chest, a small smile flitting across her lips.\n\n\"I can feel your heart, Frankie...so fast, like a trapped bird...\" \n\nShe gently nibbled my chin as she rubbed my chest, her hands warm and smooth.\n\n\"Calm down, baby, relax, there, like that, that's it...\" she soothed me as I recovered from the exertion and emotional outpouring that was so much a part of making love to her, to my little sister. I knew I was caught now, I was in whatever this was for the long haul now; Kat and I were a couple, and it was surprisingly easy to admit that to myself. The hard part hadn't even started yet. \n\nOne day Sarah would have to be told, and soon, before she found out by us giving ourselves away; what happened then was in the hands of the Gods; I couldn't see yet how to make this work for Kat and me, and I still had no earthly idea how I was going to break it to Sarah and walk away with all my teeth...\n\nKat broke the train of my thought by posing exactly that question.\n\n\"Frankie, we have to tell Sally; I don't want to spend my life sneaking around, only ever being able to be free with you inside our home; I want to be able to hold you close anywhere and anytime I feel like it, not just when we're behind closed doors; Sally loves us, and we love her, and this is too big to keep locked up forever; I want to tell my big sister that I love the best guy in the world, and he loves me, and we want to be together. How are we going to do that, Frankie?\"\n\nGood question. I had no answer, other than knowing that walking up to her and saying \"Hi Sally, nice day, by the way, I've been fucking our little sister, I like it, a lot, she likes it, also a lot, so we're gonna keep on doing it a lot, if that's okay with you!\" was not the way; somehow I had to sneak it up on her in such a way that she didn't go completely batshit and ream me out with the nearest blunt object to hand...\n\nThat question continued to squirrel around inside me for the rest of the day, and most of the night, and when I had to get up for work, I was thick-headed from lack of sleep and worry; Kat looked to be in no better shape; everything that was worrying me was also troubling her, and she'd tossed and turned the night away with me, both of us too preoccupied with how we were going to make this work to give much thought to rest and sleep.\n\nBy the time I got home from work, I was so dog-tired I could barely walk up the porch steps; my day had been a catalog of mistakes and missed opportunities, and eventually my boss, Max Donnelly, one of dad's old friends and a man I'd known all my life, had taken me to one side.\n\n\"Frank, you look terrible; you look half dead, and I can't stand to see you dragging around here looking like that any longer; go home and get some rest, maybe a good night's sleep will put you back on your game; right now you're no good to man nor beast. If you want a word of advice, whatever you've been doing to get you in this state, you need to keep it at home, not bring it to work with you, not when others are depending on you. Now go home, and come back when you've had some rest!\"\n\nIt was a powerful rebuke, reinforcing even further that I had to resolve our problem, and soon; family friend or not, Max wouldn't be so lenient with me next time, of that I was sure.\n\nI took his advice, drove home in a haze and dragged my ass into the house. As I came in the door, I noticed something smelled delicious, and Kat popped her head out of the kitchen to smile that dazzling smile of hers. She was wearing mom's old apron, and her hair was tied back into a ponytail; she looked cute, wholesome, sexy, and young, much younger than her more than eighteen years.\n\n\"Dinner's nearly ready, get washed-up and sit down!\"\n\nTired as I was, the smell of whatever she was cooking woke me up enough, and just as I was sitting down at the table she brought in a large stew pot. I looked inside, at the rich dark stew, my stomach grumbling at the heavenly smell, but then Kat turned around and I nearly forgot my appetite completely. Holy fucking cow, she was naked, only mom's apron between her and the world! I gaped as she flirted her mouth-watering ass at me as she went back into the kitchen, bringing back a dish of mashed potatoes, and returning to fetch the other vegetables, which she placed on the table, and then sat opposite me, her chin resting on her hand as she grinned at me.\n\nAll I could do was stare at her, knowing as I did now that she was stark naked at the table with just an old apron covering her front, but still buck-naked nevertheless. She served me my food, and I ate mechanically, my eyes fixed on her, my mind constantly replaying the sight of her nakedness, her perfect skin glowing white as new milk as she ferried food from kitchen to table, the image of her performing such mundane housewifely tasks jarring only slightly with the fact of her complete, bare-assed nakedness! \n\n\"Do you like it?\" she smiled.\n\n\"Huh?\" was my considered response.\n\n\"The stew, Frankie, do you like it?\" she asked again, her expression slightly less sunny.\n\nI suddenly realised what she was asking me, and with that came the realisation that whatever it was I was eating, it was delicious; I could taste red wine, mushrooms, baby onions, pancetta, herbs and spices, garlic, and tender, succulent beef, and I began wolfing it down.\n\n\"You like it? Really?\" she grinned, and I nodded, mouth too full to speak. At last, appetite temporarily sated, I asked her what it was.\n\n\"It's French; it's called \"Boeuf Bourguignon\", it's beef with mushrooms in red wine with herbs, I found it in one of Grandma Hennessey's cookbooks, some English writer, Delia Smith or something like that. I'm glad you like it, Frankie, nothing's too good for my man!\" \n\nShe grinned as she said the corny line, and I grinned with her, pulling her close for a \"thank you\" kiss before broaching the subject of her current state of undress.\n\n\"Umm, Kat, quick question, baby; why are you naked?\"\n\nShe gave me an arch look and raised one eyebrow.\n\n\"You were planning on having some dessert, weren't you, Frankie?\" she pouted, dropping the apron and shaking out her hair. I swear to God, I have never finished a meal so fast in my entire life...\n\nKat shrieked with laughter as I grabbed her hand and towed her towards the stairs; she'd stayed naked to tease and unsettle me, now she was going to pay the price, oh God, yes!\n\n\"Oh Frankie, you're so dominant, so manly, oh you are, you are! Oh my goodness, whatever are you going to do to me?\" she simpered modestly, falsely, a gleam of pure wickedness in her eye as she pretended to struggle, bouncing on her tip-toes to make her lovely, firm little breasts and tight little ass dance and jiggle most fetchingly.\n\n\"Oh Mr. Novak, are you going to do naughty, nasty, unspeakable things to me? Are you going to make me touch your pee-pee? My daddy warned me there were men like you, I hope you'll respect me after you've had your wicked way with me!\"\n\nOK, that did it; I pulled her close, unable to keep my hands off all that young, alluring flesh anymore, and as I pulled her close and held her to me by clamping my hands to her tight, smooth, springy little butt-cheeks, her arms snaked around my neck to pull me down for a long, hot, incredibly sexy kiss. Kat has the softest lips I've ever kissed, soft, tender, and monumentally horny, and her kiss was doing things south of my belt buckle that needed addressing, and soon!\n\n\"Let's go, Frankie, I've been bubbling inside all day, I need you to calm me down, baby, what are you waiting for?\" she murmured in my ear, followed by a quick nip as she wriggled against me. My cock was like a lead bar; I'd never needed to get naked so much in my life as I did right then, with Kat draped around my neck, all my nerve-endings lit-up like Macy's on Christmas Eve, and what felt like the granddaddy of all hard-on's pressed against her.\n\nThat was my cue to hustle her upstairs and into my room, where she dived onto my bed and flipped around to lie and watch me as I struggled out of my clothes. Eventually I managed to get down to my shorts, at which point she sat up, and, grinning wickedly, yanked them down, my achingly erect cock swinging out and into her hand, where she squeezed lightly, making me gasp with the sensation.\n\nKat grinned sexily at me, and leaned down to kiss the end of my cock. I gasped again at the sensation of her soft lips against the sensitive flesh. \n\n\"Like that, do you?\" she grinned, and licked slowly across the tip of my straining cock, drawing something between a sigh and a groan from me.\n\n\"Oh yes, you really like that!\" she teased, winking at me before slipping her lips over the end and sucking me into her mouth. I'd only ever had someone give me head once before, on my prom night, and I'd always wanted to repeat the experience, and now here was my baby sister doing that very thing for me! \n\nKat kept up a slow, bobbing motion as she slowly sucked, her tongue occasionally dragging softly over the tip, making me screw-up my eyes with the effort to not unload there and then when she did that; I wanted to drag this out as long as possible, because it was fucking fantastic; either someone had showed her how to do this, or there was more to 'women's intuition' than I'd been led to believe...\n\nI was finding it hard to hold back; the sight of her little rosebud mouth stretched so obscenely around me, the feel of her tongue flicking and rubbing the head as she sucked me, the sensation as my cockhead rubbed against the roof of her mouth, all of these were leading me up to that grand finale I wanted to hold off as long as possible, but it wasn't going to happen. My balls tightened as she gently squeezed them, telling her I was nearly there, if my agonised expression hadn't already tipped her off. I started to groan as I felt my spunk rising, and Kat squeezed my balls one last time as she deliberately rubbed her tongue through that furrow in the tip of my cock and poked her tongue inside the hole in the end.\n\nThat was it. I lost it, nearly buckling to my knees with the force of my orgasm, the sperm bulleting out of me with almost explosive force. Kat felt the strong muscular contraction in my cock as I came, and pulled away from me, aiming my hosing cock at her face. Long ropes of sperm bolted from me, splashing across her nose and lips, her cheeks, and against her throat, one after another, spraying across her upper torso in long silvery-gray streaks. \n\nI opened my eyes to see my beautiful Kat, my baby sister, streaked with my sperm, long splashes of the stuff criss-crossing her face and chest, and dripping from her chin in long shivering strings and rivulets as she moved.\n\n\"Oh Frankie, that was...incredible!\" she murmured, \"Jojo was right, it's so hot, it's just...wow!\"\n\nI dropped to my knees in front of her, resting my head against her knees while my heart slowed to normal, then looked up at her again, at her dreamy smile, her sperm-ravaged features, and my cock rose again, wanting her even more now. I picked up my discarded shirt and dabbed at her, wiping the drips and runnels of spunk off her knees and thighs, then Kat took the shirt from me and wiped herself off properly.\n\n\"We'll have a shower later, Frankie, I see round two's about to begin!\" she grinned, looking pointedly at my now fully recovered cock. I was amazed; I'd never recovered that quickly before; obviously the Power of Kat was at work here.\n\nWhatever it was, all I knew was I had a definite urge to pin her down and fuck her properly, to give her some of what she so urgently needed!.\n\nI surged up and bore her over backwards, landing on top of her on the bed. Kat squealed and tried to get away, and our struggle to get into position quickly degenerated into a laughing, tickling, wrestling match. I had the advantage of weight and superior strength, but Kat knew I couldn't possible hurt her, which gave her an unfair advantage, so she showed no restraint when it came to biting, nibbling, gnawing, grabbing and squeezing, finger-poking and unfair tickling. We rolled around, laughing, grunting, giggling and squealing as one or the other ended-up on top of the other, until at last I somehow managed to hold her down spread-eagled, lying between her outstretched thighs, my cock throbbing with urgent need.\n\n\"Say 'Uncle', you red-headed menace!\" I growled in her face, with Kat grinning insolently back at me as she shook her head and stuck her tongue out.\n\n\"Say it!\" I repeated, \"Say it or I'm dragging you into the bathroom and dunking you in a cold shower!\"\n\nKat grinned at me, her eyes opening wide and a look of carefully contrived innocence settling on her face as she fluttered her long, sexy eyelashes at me. \n\n\"If I say 'Uncle' will you fuck me really, really hard, Frankie?\" she whispered at me, suddenly introducing my cock to a whole new order of magnitude of aching hardness. I could only nod as my throat and mouth dried up in sudden, overwhelming lust for this gorgeous fire-sprite spread so wantonly under me.\n\n\"Uncle, Uncle, Uncle, Uncle, Uncle!\" she sing-song'd, grinning provocatively. I slid down so I could kiss and lick her cute little navel, making her giggle and squirm, then further down, to the delta of soft, gold-shot copper curls adorning her most secret place.\n\n\"Oooooh Frankie!\" she breathed, quivering as my tongue brushed through the soft, crisp little curls and probed at the top of her slit, at the little hood concealing her love-button. Her scent teased and tantalisd me, sweet and fresh and strong, tempting and demanding, making me want her even more, if that were even possible. \n\nAs I slid my tongue along the moist slit of her pussy, she trembled and quivered, her eyes tightly closed and her breathing becoming shallower. Her thighs drifted even further apart, allowing me even better access to her lush, soft little pussy, and I dove in, probing her pink moistness with pointed tongue-tip, tasting her, teasing her, making her ready for me.\n\nAs I worked my tongue in and around her sweet little pussy, Kat writhed and wriggled delightfully under me, forcing me to take hold of her tight little butt-cheeks and hold her against my mouth as I licked and sucked and probed her.\n\n\"Oooh God, yesss, Frankie, yesss, harder, harder!\" she groaned, pushing her wet pussy against my ravening mouth as I licked and sucked her into a frenzy, her head thrashing around as her pussy pulsed against my tongue. When I finally took her clitoris between my lips and sucked on it, tasting the slick juices pouring out of her all over again, Kat convulsed, then screamed soundlessly, a flood of her sweet, tangy juices filling my mouth as she orgasmed, straining against me as her pussy convulsed and shuddered under my lips and tongue.\n\nAs another wave of shuddering convulsions stormed through her, I slid up level with her, and she lifted her hips as I thrust forward, burying myself to the hilt in her as we both groaned with delight.\n\n\"Oooh God, yesss, baby, God, that's so good, aaahhh!\" she murmured, her pussy clenching around me and almost making me lose it there and then. I backed away, then pumped in again, making her cry out in delight, her hips pumping against mine, lifting to meet my thrusts, all the while giving little cooing noises as she enjoyed our tryst. \n\nI was silent, saving my energy for her, making sure I gave her what she wanted most, and loved her to the best of my abilities. At last though it was too much; the feel of her wrapped around me, of her belly slapping against mine as we fucked, her sweet kisses, sharp and piercing as arrow-points, her cries as she ascended the heights of orgasm yet again, all combined to tip me over the edge, and I came like a furnace, like a steel-mill crucible, white fire pouring out of me and into her, driving her ever higher as we shook and shuddered together, Kat screaming her release as sexual energy crackled and sparked between us, all thought of the outside world obliterated by the intensity of our shared ecstasy. \n\nI slumped down, utterly spent, my heart racing like an Indy car, Kat likewise spent and blown, her face flushed with the outpouring of sexual energy she'd shared with me. Finally, after a few minutes to calm our thundering hearts, she turned to me and smiled.\n\n\"Thank you baby, that was again, incredible, remind me to keep you!\"",
        "Something she'd said earlier surfaced and flicked a fin at me.\n\n\"Baby, who's Jojo?\" I asked her.\n\nKat yawned as she spooned against me.\n\n\"Jodie Hollister, that cheap slut Laurie's kid sister; she's sort of a friend, she told me how much fun a creamy facial was; she wasn't joking! Oh! I almost forgot, I have something to tell you! Jojo's pregnant, and guess who the father is?\"\n\nI had a funny feeling I already knew.\n\n\"Go on, surprise me!\" I grinned.\n\n\"It's that asshole Steve Dolan!\" she grinned, and my grin got even wider; when the Hollister brothers, marines all, and three of Uncle Sam's best trained killers, found out what Steve Dolan had been up to with their baby sister, his remaining time on earth was going to be measured in long, endlessly painful seconds, and it couldn't happen to a nicer guy...\n\nKat yawned hugely, and reached back to give me a friendly squeeze. \n\n\"I'm bushed, I wonder why, you stud you!\" she murmured, \n\nI had just enough wit and energy left to reach up and cuddle her boobs, making her wriggle contentedly against me, and lean over to flick my alarm on, before Kat pulled the covers over us and snapped off the bedside lamp.\n\n\"Good night, baby, sleep tight!\" she yawned again, nestling up against me and falling asleep almost immediately. I kissed her ear and hugged her, and next thing I knew my alarm was jarring me awake, but this time I felt refreshed, invigorated, at peace with myself at last.\n\nWork that day was, for me, a time for reflection and weighing-up the consequences of my actions with Kat; I was absolutely sure I was in love with her, and her own statements regarding her feelings for me were unequivocal; she wanted me, and felt about me the way I felt about her. This being the case, I felt it would somehow cheapen our new-found relationship if we confined it to our house and kept it secret, like it was something to be ashamed of; I wasn't ashamed of how I felt about Kat, and I knew she felt the same. \n\nThere was no question left in my mind; Sarah had to know, I loved my big sister with a deep and abiding intensity, after Kat she was the most important person in my life, and I wasn't going to lie to her by keeping silent about us and what we had. \n\nAs soon as I made the decision I knew it was the right one; all feelings of guilt or apprehension dropped away; if Sally got angry, she got angry; she'd bite, but then she'd calm down, kiss it better, then put her agile mind and fine intellect to work to help us find a way forward.\n\nI called home before I left the office to let Kat know we were going to see Sally, and arrived home in a state somewhere between apprehension and 'root-canal day', but not frightened, not of Sally, despite my panicked, knee-jerk reaction the day before yesterday. Kat was in something like the same state, a little apprehensive, but not scared, and so we drove the short distance to Bixby and Sally's place. \n\nWhen I pulled up outside, a burnt gold Firebird with the 'Firebird' emblem stencilled on the hood was parked carelessly across Sally's drive. I knew of only one person in this town with a car like that, and my insides tightened as I wondered what he wanted with Sally. Kat saw me tense up, and grabbed my arm.\n\n\"Frankie, what's the matter, who's car is that?\" she asked, her expression worried. I took her hand off my arm and stroked her cheek gently.\n\n\"Stay in the car, baby, something's wrong, I think Sally needs me. Wait here baby, and lock the doors!\"\n\nNow Kat looked frightened, but she bit back any more questions and nodded agreement; good girl.\n\nI slid out of the car and scooted around to the back of the house, avoiding the squeaky step up to the back porch, and slowly turned the handle of the back door. To my good fortune, the door was unlocked, and so I slipped inside, hearing voices coming from the family room. I tip-toed through the house, hearing a male voice; I was right, it was that cocksucker Steve Dolan, and it sounded to me like he was laying down the law to Sarah, the arrogant son of a bitch! \n\n\"I don't care what you say, or who you tell, no-one in this town will listen to you, or lift a finger to help you, Sarah, and you want to know why? Because this is my town; my family built this place, and we own all the little nobodies here; we make the rules, and if they want to keep their jobs and feed their kids, they'll keep looking the other way. I don't care if your bastard son is mine or not; I'll never acknowledge him, he means nothing to me, he'll never get a penny out of me, and if you need money, you know how to earn it; the same way you earned that kid! I swear to God, if you try and make trouble for me, I have ways of making sure you lose that kid permanently! This is your only warning Sarah, so take heed!\"\n\nEven as my blood boiled at this, I looked into the family room to see Sally standing in front of Steve, her eyes flashing like polished gold-flecked granite.\n\n\"Who the hell do you think you are, you piece of shit?\" she gritted, her chin lifted proudly. \"My son and I want nothing from you and your stinking family! Why don't you go drink yourself to death like your worthless bum of a father and leave decent folk to get the rancid stench of you out of their noses!\" \n\nSteve raised his hand, and at that moment Sarah saw me over his shoulder. Steve must have seen the change in her face, and as he turned, his face a mask of rage, I let him have one, a left hook that came from somewhere near my knees, all my anger and outrage in it, spinning him round and dropping him like he'd been pole-axed. As he went down my foot was already in motion, like a soccer player taking a penalty, connecting solidly with his ribs, apparently with enough force to break some, judging by the sudden look of agony on his face.\n\nAs he writhed on the floor, I stepped forward and hovered my foot over his throat, ready to stamp down; for the second time in my life I came close to murdering Steve Dolan, although in my mind it would have been justifiable germicide.\n\n\"No Frank!\" screamed Sarah, the sound of her voice cutting through the fog of murderous rage and bringing me back to sanity. I looked at her and nodded, letting her know I was past it, and kicked that slimy bastard again, hard, this time in the groin, watching him curl up in agony all over again. I knelt down next to him and slapped him a few times to get his attention, (although what I really wanted to do was keep ramming his head against the floor until I split his fucking skull...) and twisted my hand in his collar to pull him up close enough for me to talk to him.\n\n\"Alright Dolan, you remember me, don't you? I fucked you up once, and I warned you what would happen the next time you crossed me; now you're out of chances, so next time your body disappears, you got it, you little puddle of piss? If you come near my family again, any of them, after I've kicked the shit out of you, I'm telling Jethro, Jonah, and Jeremiah Hollister just who it was who knocked-up their baby sister. You'd better pay real close attention to what I'm telling you; all I'd do to you is beat you into a fucking coma; they'll strap you to a tree and shove a chainsaw up your ass, you know how they get when it comes to their sisters.\"\n\nHis eyes widened in fear, with good reason; the three Hollister brothers were gung-ho, super-fit, hard, humorless, trained killers, just one hairsbreadth away from being certifiable psychopaths; they doted on their sisters and rigorously defended their good names, despite the fact that Laurie had more fingerprints on her ass than the FBI had in their files, and they hated Steve and his family with a vengeance, so he had good reason to avoid coming to their attention. I continued, filling him in on how to keep himself alive.\n\n\"This is your life from now on, you little sack of shit; you never show your face here again, you never contact Sally ever again, you forget this family ever existed, you stay on your side of town, and you pray to fucking Christ I never see your face or hear of you again, because if I do, you're dog-meat, got it?\"\n\nI shook him for emphasis, watching his head loll like a drunk's.\n\n\"You want to sic your fat fuck of a pet sheriff on me? Try it; the instant I see him or his dogshit deputies I drop a dime, and after the Hollister's have finished using that moron as a bayonet dummy for what he's been doing with Laurie, they're gonna come find you, and they will find you, have no doubt about that. Anyone gets after Sarah or her baby, I drop that dime, and you get to beg Jeremiah Hollister to kill you quickly, understand? You've got no friends in this town, Stevie-boy, and plenty of folks who want to watch you strung up with bob-wire and hanged 'til you fucking strangle, so if you want to keep living and breathing you keep your head down, your mouth shut, and your face out of this part of town, are you hearing me, fucko?\"\n\nHe nodded vigorously, his eyes darting around fearfully, just as I remembered them doing last time I beat the shit out of him, which told me he'd taken my lesson to heart, so I dragged him to his feet, ignoring his gasp of pain from his broken ribs, gave him a head butt to the bridge of his nose, and the knee to remind him just how serious I was, and to make him fear me all over again. \n\nI marched him to the front door with his head held back to stop his spouting nose dripping on Sarah's carpets, and kicked his ass down the porch steps, watching in satisfaction as he sprawled full length on the drive. A muted, whistling scream of agony burst from him as he jarred his busted ribs and re-broken nose, but he still managed to struggle to his feet and reel into his car. The Firebird wheeled away like all the devils in hell were after him; mind you, I'd rather have all the devils in hell after me than the Hollister triplets, because I wasn't exaggerating about the chainsaw...\n\nSally was waiting for me back inside, hugging me as she trembled in reaction. I held her and patted her back, soothing her until she stopped shaking and I could get her to sit down.\n\n\"Frank, what did you mean when you told Steve you'd fucked him up once before? When? What did you do to him?\"\n\nI tried to avoid telling her, but it somehow all came out, that I'd known what had happened to her, and I'd hunted down that worthless douche-bag and kicked his ass for him. Sally looked ashamed that I knew of her shame, but I hugged her, telling her that I did it because I loved my big sister and no-one was going to hurt her while I was around.\n\n\"And Kat, does she know too?\" she murmured, and I just nodded, helpless to stop the tears that spilled down her cheeks.\n\n\"If it helps, Sally, she's as angry as I am, but we don't blame you; how could we? Just like we can't blame that beautiful little boy in there; he can't help who his daddy is, but he's sure lucky he's got you for a mom!\"\n\nSally smiled sadly at that and stroked my cheek in gratitude. \n\n\"Sally, what did that prick want with you?\" I asked, and Sarah stared into space as she collected her thoughts.\n\n\"He came here to warn me not to make any trouble for him and his family; I don't know where he got that from, the last thing I want is to be reminded of that rabble, or what he did to me! Frankie, he threatened to take Joey away!\" \n\nHer voice cracked, and I could see the fear in her eyes; I promised myself, the next time I saw Steve Dolan, he'd pay again for frightening my sister! Sarah calmed down as I held her, telling her that Steve Dolan was too fond of his life to throw it away crossing me, while I thought black thoughts of death and vengeance raining down on that spoiled little asshole. \n\nI had no idea where he'd got the idea that my family wanted anything to do with his pond-scum family, but at least now he knew where he stood with us; on the brink of death. My threat to tell the Hollister boys about him was real, make no mistake; one hint he was thinking of making any trouble for Sally and I'd make a call to Jeremiah Hollister, the meanest, angriest, most unreasonable, and most psychotic of all the brothers, and that Dolan prick would be just a memory and a couple of anonymous bloodstains somewhere deep in Bad Indian Woods.\n\n\"Thank you for being here, Frankie!\" she murmured, \"I never needed you so much as just now, I love you baby, and thank you for making Joey and me safe!\" She wiped her eyes and then looked curiously at me.\n\n\"Why are you here, baby?\"she asked, and I took a deep breath.\n\n\"Sally, I've...I have a girl, she's perfect, she loves me, I love her, and we want to get married!\"\n\nSarah's eyes lit up a she smiled at me.\n\n\"Oh Baby, I'm so happy for you! What's she like, who is she, when do I get to meet her?\"\n\nI drew another deep breath; this was it.\n\n\"She's in the car, I asked her to wait while I took care of your...visitor, wait there and I'll go get her!\"\n\nI went to the front door and opened it, beckoning Kat inside. She joined me on the porch, trembling but resolute. I took her hand and caressed her cheek.\n\n\"Are you ready, baby-girl?\" I asked her, and Kat's chin lifted bravely as she nodded. \"Fine, then let's do this!\" I smiled, and led her inside.\n\nSarah smiled in welcome as she saw our little sister, and looked at the front door questioningly, waiting for this mysterious girl of mine to appear. When I closed the door, Sarah raised her eyebrow, her smile even more puzzled.\n\n\"Well, where is she, baby and what's Kat doing here?\"\n\nKat and I exchanged glances, and she took my hand, holding herself close to me.\n\nSarah's eyes narrowed.\n\n\"Frank, what's going on, where's this girl of yours?\" she demanded, her voice tinged with suspicion.\n\nI held up our joined hands, and looked directly at her.\n\n\"Right here, Sally. Kat and me...we've...found what we want, and that's each other, and we want to be together. I know you'll probably think it's wrong, but this is how we feel, and what we both want. Help us, Sally, please, help us find a way to be together!\"\n\nSarah backed away from us, her hand to her mouth and a look of horror on her face, and when I made to move toward her, she backed away even further, her hand held up as though warding me off as she leaned back, increasing the space between us even more.\n\n\"No, no, no, no, no, you can't be serious, no, this is not happening, this is a joke, both of you, say it's a joke!\" she pleaded, her face hardening when I shook my head. When I made to move toward her again, she backed away some more, until her back was against the wall.\n\n\"Don't touch me, don't you touch me!\" she flared. \"How can you stand there and tell me you want this? It's disgusting, it's wrong, you're her brother, you're not supposed to want your sister like...that, no, don't...touch me, I feel sick, you make me sick, both of you! Get out of my house, get out, get out of here!\" \n\nShe was almost screaming, her eyes blazing again, this time in revulsion and anger, and Kat looked at me in horror; this wasn't how it was supposed to go; Sally was supposed to show us how to make this work, to help us because we needed our big sister, not reject us out of hand! With a strangled sob she fled, with me in hot pursuit. She jumped back into the car and slammed the door, to sit with her head bowed in her hands, her shoulders shaking. I didn't know what to do; Kat was crying, and Sarah was furious, I needed both of them right now, but Kat needed me, so I climbed in next to her and started the car. \n\nI drove away from Sarah's house convinced I'd never see or hear from her again, she was so incandescently angry and disgusted with us, and my eyes stung with tears for both of them; for Kat and the hurt and rejection she was feeling, and Sarah for the burden we'd dumped on her by telling her about us, and for driving her away from us forever. \n\nI drove aimlessly, on full autopilot, seeing only the expression of disgust on Sarah's face, her tawny eyes blazing golden with anger and outrage, but gradually heading out of town, until I saw the sign for the Dew Drop Inn, and pulled into the parking lot on impulse; I didn't feel like going home just then; Sarah was quite capable of coming down there to beard us again, and I didn't have any stomach for that kind of fight just now; all I wanted to do was hold Kat and try and make it right for her again. \n\nThe Desk Clerk handed me the room keys with only the minimal amount of leering at Kat, although I have to say, she did look more than delicious; she was wearing a tight black pencil skirt, nude seamed stockings and black stiletto's, and a short-sleeved teal-green silk blouse that set off her pale skin and tumbled cascade of blazing red hair to a T; with her tiny waist and clearly defined, tight little ass in that skirt, she looked like she'd stepped off the set of a movie from Hollywood's Golden Age, and in spite of what had just happened, I could feel myself wanting her all over again.\n\nOnce we were in the room, which was clean, with fresh sheets, for a change, Kat let herself go, sobbing hysterically as she clung to me, and I held her close, rocking her and crooning to her just like I had when she was small, while I tried to figure out what to do next. Whatever we did, it looked like Sarah was out of the picture, which meant Kat and I were on our own, and I didn't know what to do next.\n\nKat eventually stopped crying, but she still clung to me, perhaps because I was her most enduring symbol of care and comfort from her earliest days, but it was nice for me too, no matter what her reasons. After her sobs died away to the occasional sniff, she suddenly swung herself up onto my lap, and wrapped her arms around my neck as she buried her face in my neck. I had been rubbing her back as I soothed her, but now it felt different, somehow my soothing and calming my little sister had become sexier and it was getting to me. Kat wiggled on my lap as the evidence began to make itself felt, and her cheek against my neck had somehow become her lips as she kissed me softly, gentle little pecks as I smoothed my hands over her.\n\n\"Frankie, what do we do now?\" she whispered between kisses, and I had to think on my feet; I'd had no plan as such, other than to get Sarah to give me a way forward.\n\n\"Baby, we're on our own, I think that's obvious. We should leave Springfield; too many people here know us for there to be any chance of a life together, so we'll just have to sell-up, find jobs somewhere far away from here, and make up our own life. I'm sorry baby, I thought it would turn out okay, I thought Sally...I'm sorry...!\" \n\nMy voice cracked as the sudden loss and desolation hit me; we really were on our own now, and Kat sat bolt upright, her hands suddenly cradling my face.\n\n\"Frankie, you still have me, and I have you. Mom's gone, daddy's gone, Joe's gone, and now Sarah and Joey are gone, and it's just you and me left, but we're all we need, baby! You'll be my family, and I'll be yours, and we'll make our family work somehow, have faith, baby, we'll get past this!\"\n\nWith that she kissed me, all rational thought suddenly fleeing as the full impact of that kiss hit me; my Kat certainly knew how to power-kiss! It obviously had an effect on her too, as she slid off my lap and reached behind to unzip her skirt. As soon as she did, she began sliding it down, with me appreciating just how tight that pencil skirt really was by the gyrations of her hips as she wriggled while tugging it down, Certain other parts of me had also taken full heed of the floorshow, and the constriction in my shorts was almost painful as Kat wriggled and shimmied in front of me, her skirt finally slipping off to reveal she was wearing a garter belt matching her tiny green silk panties.\n\nI pulled her close to me, my hands automatically slipping around to cup and squeeze her taut little cheeks, my fingers slipping into the warm tight crease between those luscious little globes. Kat shimmied against me again, grinning as I nuzzled her pert little breasts, still concealed behind her silk blouse and bra. ",
        "Kat kissed the top of my head, then leaned back slightly to unbutton her blouse, sliding it off her milky shoulders and tossing it onto the chair, on top of her skirt. Her bra matched her panties and garter belt, and, with her beautiful features, clear, porcelain skin, and cascade of vivid red hair, she looked like a model from the Fredericks of Hollywood catalog; svelte, classy, and drop-dead gorgeous. \n\nI was lost in wonder that this beautiful girl had lived under my nose for all these years, and that something so lovely could even be bothered to say 'Good Morning' to me, let alone pledge herself so completely to me.\n\n\"Frankie, hello, Earth to Frankie, are you receiving?\" I heard her voice as though from a distance, snapping me out of my reverie.\n\n\"Do you want to help me get out of these things or not, baby?\" she smiled, her arms already behind her, ready to unhook her bra. Of course I leaped to her assistance, what true gentleman wouldn't? Besides, this was my present, I was going to unwrap it my way! I stood up and slid my arms around her, gently unhooking the bra, Kat sliding the straps off her shoulders and wriggling slightly to let the garment drop to the floor. \n\nShe then rested one foot on the bed and grinned at me, until I realised she was waiting for me to unclip the garter belt from her stockings. I obliged, of course, anything to touch and hold those taut, smooth thighs again. Kat smiled secretly at me as she slid her stocking off, before putting the other foot on the bed for me to unclip the garter belt again, and once again slowly pulled off the stocking. I pulled her close and kissed her as I unhooked the garter belt from around her waist and let it drop, and now she was standing in front of me in just her skimpy little green silk bikini panties.\n\n\"Your turn, baby!\" she grinned, and I suddenly realised I'd stripped her but was still fully clothed myself. Kat giggled and loosened my tie, pulling it off over my head and throwing it over her shoulder, then slowly worked her way down my shirt buttons, pulling my shirt out of my pants and pushing it back over my shoulders. I pulled off my undershirt, leaving me standing in my pants, socks and shoes. I quickly lost those, leaving Kat the pleasure of yanking down my shorts and fondling my very engorged cock.\n\nStill grinning, she led me to the bed, which I was gratified to see actually had clean sheets and pillowcases, and climbed on to kneel and pose for me, her arms behind her neck to thrust her breasts out at me. I looked at her in astonishment; she was absolutely gorgeous, and, in that pose, unutterably sexy; whatever else happened to us, I knew I'd made the right choice when it came to the woman I loved. Kat smiled at me as I stared at her like some slack-jawed hayseed, completely bowled over by just how stunning she was; the faint blue tracery of veins just visible through the translucent skin of her pouting little breasts, her large, smouldering green eyes and long sooty lashes, her hair a tumbled riot of burnished copper over her shoulder, glowing against her milky-white skin, and her softly pink nipples dancing with her every movement.\n\n\"Come here, Frankie, be what I want, be my husband!\" she whispered, her emerald eyes glowing with an inner light, and I was helpless to resist; she'd caught me with that one word; husband. I wanted more than anything in the world to be just that, to keep her always, to be husband, lover, brother, best friend, all the things she needed or could ever want from me.\n\nIn a trance I climbed on to the bed, my hands slipping around her as shoe folded her arms around my neck, pulling me closer, her eyes fixed on mine as she molded into me, her skin warm and soft and silky, sparkling with life and the love of life. Kat looked up into my eyes and winked as she smiled at me.\n\n\"Love you, husband!\" she whispered, then her lips were on mine, and once again I felt myself falling into her, lost in the wonder of her, our kiss lasting a million years or more.\n\nAs we kissed, we rolled until I was in top of her, and it seemed the most natural thing in the world for my aching cock to slip into her, Kat gasping as my girth stretched her open once again, then instinct took over, Kat bucking her hips up to meet my thrusts as I pumped into her, both of us straining and flexing together as we pleasured each other, and ourselves; my cock had never seemed harder, my excitement more durable, as when we made love that night, endless variations as we experimented with positions, with techniques, with our fingers, lips, tongues and teeth to explore each other, to try and discover what the other liked the most; it was a battle, of sorts, but not for dominance, rather, to see who could excite and stimulate the other more, to see who could gratify the other more.\n\nEventually Kat slid off me, my cock throbbing and unfulfilled, with a look of pure wickedness in her eyes.\n\n\"Lie back, Frankie, you're going to love this!\" she slurred, her expression sly, sexy, enigmatic, and I slumped back, trying to guess what she was planning on unleashing on me.\n\nKat knelt between my legs and slowly licked the length of my cock, coating it in her saliva, paying particular attention to the crown, where she lavished even more saliva, slathering it. I was wondering why the sloppy blow-job, when suddenly she answered all my questions; turning around and throwing a leg over me, Kat straddled me in a classic 'Reverse Cow-girl', and began gyrating her hips while holding my straining cock, rubbing her tight pink little knot of a rosebud with a slim finger, dipping that same finger into her pussy and trailing it back across her anus, wetting herself until she finally slipped her finger inside herself. \n\nI could see her in the dresser mirror, her eyes were closed as she went into her own world, her face serene and relaxed, her soft lips parted as she pleasured herself. Her finger returned continually to her little honey-pot, drawing more of her juices out of herself to rub and slip into her tight little rosebud. As I watched, she slid another finger in, two fingers now rubbing in and out of her tight hole, her expression in the mirror now almost ecstatic as she frigged her anus.\n\nMy cock was straining for release at this erotic display, but Kat seemed to have forgotten me as she pleasured herself. How wrong I was. \n\nJust as I was ready to groan in frustration, Kat looked back over her shoulder at me, grinning minxily and flexing her cute buns at me, and then she took hold of me and slowly, agonisingly slowly, rubbed my slick cockhead over her little pink anus. My eyes flew open as I dared to hope she might really do what I thought she was leading up to.\n\nKat grinned at me and rose up slightly, and slowly pushed herself down on me, the pressure on my cockhead almost unbearable as she pushed her weight down on my cock, forcing me into her tight asshole. As she did, through the sensations ringing in my head, I realised she was muttering and gasping softly to herself.\n\n\"Oh God, oh my God, ooooh Jesus, that hurts, ooohhh...!\"\n\nAll I could focus on was the hot, wet pressure on my cock, the feeling of my head being squeezed so tightly, when suddenly the head popped through her ring and her anus snapped tight around my cockshaft as I slid past her ring.\n\nKat gave a whistling moan as I slid into her, forcing herself all the way down on me until I was in her to the hilt, her gorgeous little ass-globes quivering and her chest heaving as she adjusted to the feel of my cock buried inside her tight, velvety little ass. Finally she leaned back and wiped her face, and I realised with a shock she was wiping her eyes as well; ramming herself down onto me like that must have really hurt her!\n\n\"Kat, baby, if you don't...\" I began, to stop short as she looked back at me and smiled, her face composed and her eyes clear.\n\n\"I want this Frankie, I want to do this, so are you gonna fuck me or not?\" she grinned, wriggling on top of me and clamping momentarily around me, making my cock jump.\n\n\"Aaahhh, yeah, like that baby!\" she moaned, leaning forward to rest her hands on my thighs as her buttocks slid up to allow me to see her hole stretched so obscenely around my stiff cock; how I didn't come at that sight I'll never know, it was so fucking erotic, as well as downright pornographic!\n\nI began thrusting up into her as she pumped down onto me, my hands finding her hips and holding her in place as we humped together, Kat pummelling her sweet little ass up and down on my throbbing cock. At some point, she decided to lay back, lying full length on me, her legs on either side of my hips as my hands found her breasts and squeezed her nipples in time to my thrusts into her ass, savouring each little \"oh...oh...oh...!\" as I shoved myself into her. \n\nKat, in the meantime, was rubbing her little snatch, teasing herself as I bit her neck and shoulder (but gently, oh so gently!) and squeezed her solid nipples, and when my hand drifted down to join hers, slipping my fingers in and out of her as I grazed and lightly caressed her clitoris, she came with a gasping scream, her back arching as her pussy clamped down on my invading fingers. \n\nAs her pussy convulsed, her ass squeezed me tighter than ever before, and that was my cue. I pulled her legs up and grabbed hold of her ass cheeks, holding her ass as I squeezed and clenched those delectable globes, my hands feasting on her satiny ass as I hammered into her, until it was finally all too much for me, and I came with a roar, my hands holding her ass cheeks apart as I exploded deep inside her, my sperm jetting out of me to bathe her interior in jet after jet of creamy heat. Kat convulsed, screaming my name, orgasm possessing her once again at the feel of me unloading so copiously inside her. \n\nAt last I stopped pounding my sperm into her; she'd taken every drop I had, and as I rolled onto my side, heart hammering like it was going to burst, I slowly slid from her, Kat once again convulsing as yet another orgasm ripped and blazed through her, making her gasp and call my name. \n\nEventually her storm calmed too, and she lay against me, murmuring contentedly as she gently ground herself against me as we spooned, exhausted but very, very satisfied. I supposed she was as ragged-out as I was, but then I felt her small hand gently rubbing up and down the arm I had around her.\n\n\"Frankie,\" she murmured, \"Was that good for you, baby? Did I do it properly?\"\n\nI nibbled her ear, making her giggle.\n\n\"Baby, that was...that was...fucking amazing! Where the hell did you learn how to do that?\" I breathed in her ear, and even with my face buried in her neck, I could feel her grin.\n\n\"Jojo told me how to do it! She said if you do it right, it's mind-blowing, but all I know is; I never came like that before!\"\n\nI grinned into her ear, mentally tipping my hat to 'Jojo', thanking her for the most erotically supercharged moment of my entire life to date!\n\nWith me fondling her, and Kat murmuring as she gently writhed and wriggled against me, time seemed to fly past, until I realised I had to get her home; it was too late now for Sarah to come out to the house and start anything, and I needed a change of clothes for work, so, somewhat reluctantly, I roused Kat and dragged her into the shower with me. \n\nThe powerful spray soon woke us up completely, and once we'd removed all traces of what we'd been doing, Kat insisted on washing my cock slowly and with great attention to detail (little minx!), while I counted and re-counted the tiles in the cubicle to prevent the male reflex, something she was trying so hard to kick-start!\n\nWe made it out of the shower without any further slippery games, and I was sitting on the bed doing up my tie when there was a soft knock on the door. Kat froze, then scooted onto the bed next to me, her eyes wide and frightened.\n\n\"Who is it?\" I called out, and after a pause;\n\n\"Babies, it's me, it's Sally, we need to talk, and I want...I want to say I'm sorry!\"\n\nI could hear the sadness in her voice, so, with a quick glance at Kat, who bit her lip but nodded, I crossed the room and opened the door. Sarah was standing there, and strangely, so was Max Donnelly. I stood aside and gestured that they come in. I looked quizzically at Sarah, wondering why Max was with her, and indicated she take a seat.\n\n\"Frank, Kat, I...I wanted to say I'm sorry for going off at you like that. I have no excuse, I should have listened, we're family, and family comes first; I'm sorry babies...\"\n\nAt the mention of family Kat's ears pricked up, my run-in with Steve Dolan and his threats to Sally obviously looming in her mind.\n\n\"Sally, where's Joey?\" she asked, worry and concern in her voice and expression.\n\nMax grinned.\n\n\"Don't worry, Caitlin, my Mary's looking after him; he's a lovely kid, I think she's in love! Sarah told me how that little son of a bitch threatened her, if young Frank there hadn't kicked his ass, there's a couple dozen people I know who would have, me included! Joey's fine, you couldn't get him away from Mary with a towin' chain!\"\n\nSarah was looking at me sorrowfully, but without reproach or disgust, and my heart broke for her as I realised how she must feel, the shock she must have felt when we dropped our bombshell on her. Sarah finally forced her face into something resembling its normal lines, and squared her shoulders.\n\n\"Okay Frank, Kat, why don't you tell me about it, and what your plans are.\" She said in an almost normal voice, but I could see what it was costing her.\n\nKat looked at me, nodded slightly and turned back to Sarah.\n\n\"Sally, I don't know where to begin; I've always known how I felt about Frankie; he was always my rock and my best friend, he looked after me, he looked out for me, and I've always felt he was more than just my big brother; I love him, Sal, I always have. Please don't hate me, I didn't mean to hurt you, I don't want to hurt anyone, but I need Frankie, and he needs me, and we both need you, don't leave us because of this, please!\"\n\nShe was crying by the time she'd finished, her eyes fixed on Sarah, and for one awful moment I thought Sarah was going to look right through her, get up and walk away from us forever, just abandon us to our fate.\n\nOf course our big sister did none of those things; instead she reached out and pulled her little sister close to her, letting her cry against her shoulder as she rubbed her back and nuzzled her hair, the way she used to when Kat was a little girl. Sarah looked at me.\n\n\"And you, Frank, what about you? How do you feel? Talk to me, baby, please!\"\n\nI didn't know where to begin, so I started at the beginning, rambling on about how Kat had always been the most important thing in my life, how I'd steered her through the rough patches following all our losses, Joe, then Dad, then Mom, and how she'd always been uppermost in my mind, how I'd worried about her, and also how I'd felt when she began dating, the possessiveness and irrational jealousy, and how I'd finally realised what it meant, culminating in our mutual attraction, and what had happened on her Prom night, only a few days ago, I realized with a slight shock, finally winding down once I got to this evening's confrontation in Sarah's living room. Sarah listened attentively, nodding now and again as something became clear to her, never once letting go of Kat or ceasing stroking her hair or gently rubbing her back.\n\nAt that point Max cleared his throat.\n\n\"Frank, Caitlin, you do know what you're doing is illegal, right?\"\n\nWe both nodded, and he grinned wryly.\n\n\"So I suppose me telling you to stop isn't really gonna work, is it?\"\n\nAgain we both nodded, Max grinning as we did.\n\n\"Both of you, you look so familiar, and not just because I know you so well; Frank, you're the image of your father, and you, Caitlin, you have Roisian Moran stamped all over you; your grandmother and your aunt Rosie both. I went to school with your parents, with your aunt Rosie, Caitlin, and I put that silver bangle on your wrist the day you were christened, so I think I have the right to speak to you now, not as Frank's boss, not as a family friend, but as family. What you're doing is dangerous; there are people in this town who will use that against you, who have reason to use that against you; you know who I mean, Frank. If word of this gets out, it will be bad, very bad, and will only get worse, for all of you. Sally asked me if I knew of a way to help you; I have one, but you may not like it; in fact I know you won't; I don't, and neither does Sally, but it's the only thing we can do that will keep you both safe.\"\n\nKat looked at me in apprehension, then squared her shoulders and lifted her chin to look him squarely in the eye.\n\n\"As long as Frankie and I can be together, we can live with it. What's your answer, Uncle Max?\"\n\nMax clasped his hands in front of him, looking at the floor, a faraway expression on his face.\n\n\"The penalty in this state for In...for what you're doing, is five years on each count, up to ten if the female is under 21, so you're looking at a possible seven to ten for each count they choose to charge you with; that's a lot of jail time, Frank, so you have to go; you can't be together here. We have a new office just opened out of state, they're in dire need of a good B2B sales manager, I mentioned you before to Human Resources when the vacancy first came up, they thought you were a good fit, now it looks like fate's taken a hand, so the job's yours if you decide to take it. The salary is pretty good, there's a pretty generous relocation assistance package, and the company will pay for your basic accommodation for up to 90 days, which should give you time to find a place of your own.\"\n\nKat looked at him, her lip quivering.\n\n\"Where...where is this job, Uncle Max?\"\n\nMax looked up, but not at her, rather he looked over her shoulder, fixing his gaze on the wall.\n\n\"Santa Clara...in the San Francisco Bay Area...\"\n\nKat gasped, her hand flying to her mouth as she looked in shock at Sarah, who sat with her face expressionless, no flicker of emotion on her face.\n\n\"California...Frankie, no, it's the other side of the country, how can we...Sally...Joey...!\"\n\nI was in shock too; even though I agreed with Max that we couldn't stay here and be safe, to suddenly up-stakes and go all the way to the west coast...!\n\n\"Take it, Frank!\" hissed Sarah, \"You'll never be safe here, not after today, not after what you did to that filthy bastard, they'll find out about you somehow, and then...then...!\" two big tears rolled down her cheek, but she dashed them away.\n\n\"I don't want you to go, I need you, both of you, you're all I have left of Mom and Dad, and Papa Mike, but I have to think of Joey as well as you; somehow, some way, those slimy Dolan bastards will find a way to get at you, I'm scared they'll try and do it through my baby, so I have to ask you to go!\"\n\nI looked at Max, trying to see my dad's best friend, not the man who was helping to break up my family (\"but you did that Frankie-boy\", a small voice crowed relentlessly in the back of my mind, \"this is your fault, boy, this is what it costs to drop your pants and drag your sister into bed...\")\n\n\"When do they want me to start, Max?\" I asked, dreading the answer he would give, but when he did answer, it was even worse than I feared.\n\n\"Monday, Frank, they'll want you there first thing Monday morning!\"\n\nKat gasped, her head snapping round to look in anguish at Sally, a low keening rising in her throat.\n\n\"NO, that's only five days away! Sally, I don't want this, please, I want to stay with you, don't make me...\"\n\nSarah took her by her arms, then gently but firmly held her chin, stopping her head as she shook it repeatedly in an emphatic 'no' gesture.\n\n\"Stop it baby, stop it! Listen to me! You have to go, you have to get away from here before they find out how easy it would be to destroy you. You'll be fine, baby, I promise you, Frankie will be there for you, and with you gone, Joey and I will be safe; Max and the boys will look out for us, and there's always the Hollister boys to keep Steve Dolan in line; Jonah's an old friend of mine, if I need him, I know how to get hold of him in a hurry, but as long as you're here, we'll never be safe; that piece of garbage will find a way to get back at us through you, so this is the only way to protect everyone. Do it for me, baby, if you're safe somewhere far from here, out of reach of those vermin, Joey and I'll be safe too, I promise!\" ",
        "Much as I hated the thought of leaving, I knew she was right; the Dolan family was widespread through the state, in positions of power and influence at all levels; Steve's arrogance and sense of entitlement was a common trait shared by all of them, and when circumstances dictated, they'd band together, just like the pack of hyenas they were. Sarah was right; we had to go, and the sooner the better.\n\nMax caught my eye, and I nodded at him, letting him know I was ready. He leaned over and gently disengaged Kat from Sarah, his arm around her like dad used to do.\n\n\"Caitlin, your daddy and Frank's daddy were my oldest and best friends, and I love you both like my own kidsr; it pains me and Aunt Mary to let you go like this, but you know I wouldn't lie to you. This is the best way, baby-girl, this is how you protect yourself, and how you protect Frank, and Sally and Joey too, so I'm asking you to be strong for your family. I need you to be strong for Frank, to take care of him, to be his family and his friend, will you do that for me?\" \n\nKat stared at him, her lip trembling, then squared her shoulders and smiled tremulously, nodding her agreement.\n\n\"I will, Uncle Max, I promise!\"\n\n*\n\nWe left two days later; Kat and I packed what we could of our own stuff, and as many mementoes and reminders of Mom and dad as we could, and in a frenzy of picture-taking, captured Joey and Sarah in a whole series of frozen moments, something for us to look at when we were so far away. Sarah helped us pack, although, to be honest, I did most of the packing; Sarah and Kat spent most of their remaining time together hugging and crying, and cuddling little Joey, who seemed to pick up on our sadness. I tried not to watch them together, otherwise I'd have pushed my way into the middle of that and spent all my time crying with them too.\n\nAt last the car was filled with our indispensable things; everything else would be packed by Max and his boys, and on the advice of Max, we arranged for shippers based in Phoenix to collect it all for transhipment to Reno, and then another shipper to collect and deliver it all to us once we had a place of our own; we daren't use any of the local movers, they all had some kind of connection to the Dolan clan and we couldn't afford to have any hint of where we'd gone leak back to that den of jackals. \n\nMax would handle the sale of the house; we gave him power of attorney, and that, more than anything else, signified the end of our lives here and the breaking of our ties to Springfield; this was my father's house, my sole remaining link with both my real father and the man who took his place in my life and in my heart, my mom, Joe, all the family we'd loved and lost. Now we were truly fragmented. Kat felt it even more keenly; she adamantly refused to look at the house as we drove away, knowing full well her last link too with Dad and Mom was gone now.\n\n**********\n\nPart 2: \n\nThe wicked is driven away in his wickedness: but the righteous hath hope in his death - Proverbs 14:32\n\n**********\n\nThe drive took two days; we only ever stopped for gas, food, or sleep, anxious to get it over with; Kat was silent for the first day, her head turned away from me, and her eyes hooded behind sunglasses; I thought she was asleep most of the time, and then I finally saw the wetness on her cheeks. Stopping to comfort her only burst the dam as she sobbed uncontrollably. She wasn't excited in the slightest to be moving to California, she was going into exile with me, or so she felt, only doing this to protect her family, and several times as she cried she almost asked me if we could turn around, go home, go back to how we'd been before we caused such an upheaval in our family. \n\nFor her, I would have; the sight of her so obviously heartbroken was doing all kinds of things to me, none of them good. I would have let her go in an instant if it would have healed her wounded heart, no matter what it cost my own, taken her home and tried my best to forget what we'd meant to each other, but when I wavered, Kat rallied back, refusing to let me go, reminding me that we'd promised ourselves to each other, and she'd promised to be there for me no matter what.\n\nMy company had secured a furnished, 2nd floor two-bed, one bath apartment for us in Santa Clara, not far from the office; if I felt like it, I could walk there in ten minutes, which suited me; it meant Kat was only ten minutes away at most if she needed me; as an added bonus, and something good for a change, Max's younger sister Shelley, her husband Marty, and their three young teenage daughters lived in Sunnyvale, close to El Camino, and had been told by Max we were on our way, so they were waiting to welcome us to the Bay Area. \n\nShelley remembered my real father clearly, and she commented how much I looked like him; it was nice to have something from our home so far away , but Kat was a little overwhelmed, especially as she'd been dreading the loneliness and isolation of being new arrivals in a strange town, and \n\nShelley's motherly concern caught her off-guard. \n\nShelley hugged her as she started crying, and she and the girls disappeared into one of the bedrooms to commiserate and generally make her feel better, while Marty and I waited for them in the living room.\n\nFor my part, I was feeling a little better; at least we weren't completely alone all the way out here on the west coast; I'd been afraid for Kat, wondering how being alone out here would affect her while I was at work, but at least now she'd have someone to pass the time with, go shopping with and talk with on the phone, someone motherly who understood how it was for young girls (and Kat was still that, just a little past eighteen) and take her around and show her the Bay Area.\n\nMarty had just recently started working for the same company I did, in a different section, and we chatted about the company, my role, and made tentative plans to get together the following weekend for a barbeque at their place.\n\nI soon settled into my job; sure, there were the occasional pangs of homesickness, even more so for Kat, but she was a bright, gregarious girl, and she'd soon charmed the neighbors, the local stores, even the drivers on the bus route into San Jose, her favorite shopping spot, especially the Eastridge Mall, with her three favorite stores in the whole world, Macy's, J C Penney, and Sears, and, of course, Victoria's Secret for me! \n\nKat soon adapted to the Californian laid-back lifestyle, the anonymity and freedom of living in a town where no-one knew you or cared about your business, and the sophisticated, bohemian exuberance of the Bay Area. The first time we went sightseeing in San Francisco, Kat was awestruck by the sights and sounds of San Francisco, Union Square, the gingerbread houses, riding the cable cars for hours on end just for the sheer enjoyment of it, poking into every little shop and boutique on Market Street, and walking across The Golden Gate Bridge, the iconic symbol of California, to view the city from the Marin Headlands, ending the day by pigging-out on the buffalo menu meatball sandwiches in Tommy's Joynt at Van Ness & Geary.\n\nWe kept in close contact with Sarah; though we'd made friends, some very good friends, especially Shelley and Marty and their girls, Sarah was still uppermost in our thoughts at all times. For the first year or so, Kat was plagued by bouts of almost crippling homesickness, and though they died away somewhat, they never really went away. \n\nOn her 21st birthday, I gave her the present she wanted most of all; a return airline ticket to Springfield. We'd been gone almost three years, so it was time she went home and connected with Sally again. I couldn't go because of work pressure; the company was going through a period of restructuring and I was snowed-under re-organizing my department, so there was too much to do for me to take a vacation, but Kat went home to see Sally, and her beloved little Joey, although he wasn't so little anymore. Joey was almost eight years old now, and the image of my father (and me at the same age), no trace of his worthless father in him, rather a Novak through and through, and already a Little-League and Pee-Wee football star, a taste of things to come. \n\nKat was away for three weeks, and by the time I collected her from San Francisco International, I was nursing an unfeasibly stiff and quite unbelievable erection, not helped by the sight of her slinking through 'Arrivals' looking like a vampy, trampy, femme-fatale, complete with Hermes scarf knotted elegantly around her neck, Pilot sunglasses, \"Fuck-Me\" ankle boots with teetering stiletto heels, skin-tight black leather mini-skirt, and a designer black leather jacket with a bandeau top on underneath, with her glorious, vivid copper hair cascading over her shoulder; heads were turning as this vision glided through the Arrivals lounge, pulled off her sunglasses, and glued her face to mine, the nearness and smell of her taking my already throbbing cock to new heights of arousal, something she noticed right away.\n\n\"Oh my, Frankie, I do believe you've got a present for me!\" she grinned impishly, grinding herself against me for emphasis, watching as my eyes briefly crossed. With that she laughed, kissed me again and took my hand to lead me to the parking lot.\n\nGetting home seemed to take forever; the traffic in Millbrae seemed to be going out of its way to prevent me getting to I-280 for the Lawrence Expressway and downtown Santa Clara. At last, however, we managed to get clear of the snarl of traffic in Millbrae and made good time home. Kat insisted I hand her out of the car, her sunglasses back on and her lips startlingly red against the porcelain whiteness of her skin, her scarf once more carelessly tied around her white throat, and her hair a cascading riot of scarlet; the sight of her taut ass quivering as she shook her hair out sent shockwaves up and down my surging cock.\n\nI don't think I ushered her indoors with unseemly haste, but my hands were under her skirt and squeezing her ass before I'd even got the door closed! Kat was just as hungry, her leg wrapping around mine as she ground her panty-clad pussy against my giant economy-size erection, both of us panting into each other's mouths as we kissed so hard I thought we'd split our lips; we'd never been apart more than two days in the last three years, and it showed! \n\n\"Bedroom...!\" she groaned between feverish kisses, and I obliged, lifting her so her legs were wrapped around my waist, but never once breaking our lip-lock, and carried her into the bedroom and collapsing onto our Queen-sized bed, my hands holding her delicious little buttocks as Kat continued to rain kisses on my lips, my face, my throat, everywhere she could reach. I hooked her panties and began to slide them down, intending to do what I always did as a prelude to fucking my sister; I wanted to taste her, I wanted to soak her pussy with my tongue, I wanted to make her scream as she orgasmed on my tongue, but Kat was in no mood for foreplay.\n\n\"No, Frankie, fuck me, fuck me hard, Oh God Frankie, three weeks, I thought I'd explode, just do it to me now, I want you inside me now!\" she muttered in my ear while nibbling my earlobe. Never one to disappoint a lady, I slid upright and yanked my polo shirt off, laid down flat and kicked off my slacks, and toed-off my shoes and socks, leaving only my shorts on, with a massive tent in the front letting Kat know what she was doing to me, just in case she was unclear! \n\nShe got it right away, her eyes glinting as she yanked her mini-skirt off, unzipping and shrugging-off her leather jacket, and pulling her top off in one smooth move, allowing me to see once again her beautiful little pink-tipped breasts. That was all I needed; with an inarticulate growl I lunged for her, Kat shrieking as I grabbed her and rolled over so she was on top of me, pressed flat against me as we kissed wildly. \n\nMy cock felt three sizes bigger than normal after begging me for her for three weeks, and Kat obviously felt my need, no doubt matched by her own, as she straddled me, and with no further ceremony, slid herself down onto my stiff cock, hissing in satisfaction as she sank down on me until her bare little pussy was rubbing against the mat of hair at the base of my cock.\n\nAs she slid down she began screwing her hips from side to side, fucking me as I lay supine, totally enthralled by the sight of her gyrating above me, her fingers pinching and squeezing her nipples as she rocked back and forth on me. My hands slid around her hips, holding her to me as I began to push up against her as she ground against me, both of us straining and pumping as we relieved the tension and build-up of need over the last three weeks.\n\nKat suddenly stiffened, her eyes tight shut as her orgasm rose up and blasted through her, her body quivering and shuddering as wave after wave of pleasure swept through her, and her pussy clamped down tight around me, the sudden, delicious constriction setting me off, and I shouted out loud as I exploded inside her, pulse after pulse of sperm rocketing into her depths. \n\nThe feel of me exploding inside her obviously triggered another massive blast of pleasure, as she screamed piercingly as once again orgasm took her to a new height of pleasure. The convulsions in her pussy nibbled and sucked at me, milking every last drop of sperm out of me, until I slumped back, more dead than alive, as reaction to our mind-blowing mutual orgasm set in.\n\nKat slumped down on top of me, her sweet-smelling hair in a cloud about my face as she rested her head in the hollow of my neck, my cock still embedded balls-deep in her as our thundering hearts slowed together, and our racing pulses slowed to something more like normal. It felt like heaven to me, to lie there with my arms around the sweetest, most beautiful girl I'd ever known, and she was mine; life just couldn't get any better than this. \n\nKat lay atop me for a while longer, slowly squirming and stretching, and making little liquid cat-like sounds as my cock finally shrank from her. By now she'd have said something, and I started to grow a little concerned that she seemed to be avoiding looking at me. At last I couldn't stand the suspense any longer.\n\n\"Kat, what is it, there's something wrong isn't there?\"\n\nHer head popped up and a look almost of guilt flashed across her face, and my heart sank as I jumped to all sorts of conclusions. She'd met someone else, or she'd been with someone else, or she was leaving me for someone else, or she was just leaving me, period, and this had been my goodbye, mercy fuck before breaking the news to me, she was going...\n\nKat saw all this in my eyes, confusion now showing in hers.\n\n\"Frankie, what's wrong, talk to me, Frankie!\" she whispered, suddenly looking as panicked as I felt.\n\n\"Why don't you tell me, Kat!\" I husked, fearing the worst, but needing to hear it anyway. Kat looked at me strangely at my words, tears suddenly brimming in her eyes.\n\n\"Don't hate me, baby, please...!\" she began, and my world dipped and spun as I knew what she was going to say next; I was right, here came the worst news I never thought I'd hear...\"\n\n\"Frankie, Sarah took me to the doctor while I was there, Oh Frankie, I didn't know, please, don't hate me for this, I know we always said...!\"\n\nI cut across her almost harshly.\n\n\"What's his name, Kat, tell me that at least!\"\n\nKat looked at me strangely.\n\n\"Doctor Fuller, who else, Frankie?\"\n\nI was aghast; he was at least 65, an old man; she was leaving me for an old man. I laughed harshly.\n\n\"I hope you're both happy together, for however long it lasts!\"\n\nNow it was Kat's turn to look at me in complete incomprehension.\n\n\"Baby, what the hell are you talking about?\" she demanded, and I grinned mirthlessly.\n\n\"You...and that old geezer...what a joke!\"\n\nNow Kat was starting to look annoyed.\n\n\"Frankie, just what the fuck are you talking about? Answers, now, Novak!\"\n\nI looked into her deep, lush, limpid green eyes, storing the memory for when she was gone, not that I needed to; those eyes were imprinted on my soul. I drew a deep breath, steadying myself to say the words I never thought I'd ever hear.\n\n\"You're leaving me; you came home to get your stuff, and now you're going back to Springfield, to...him...!\" I choked, unable to continue.\n\nKat's eyes narrowed dangerously, then suddenly widened in shock as she realised what I'd just said.\n\n\"Frankie, oh God, no, no, no, no! Baby, I can't leave you, I love you, where did you ever get...?\"\n\nNow it was my turn to look shocked.\n\n\"But you said...it sounded like...I thought you...oh God, come here!\"\n\nI gathered her in to me, holding her as tight as I could as I let all the fear and loss drain out of me; she wasn't leaving me! Thank you, God, Thank You!\n\nKat was hugging herself to my neck, her lips buried in the hollow of my neck, and I could feel her trembling.\n\n\"Frankie, why did you think I was leaving you? How could you ever think I'd leave you? I told you once that you were all I ever wanted, that hasn't changed, what were you thinking, baby, what did I say to make you...?\"\n\nI was feeling too happy to feel foolish, although that would probably come later.\n\n\"Baby-Girl, you asked me not to hate you, that's like the classic first line of a 'Dear John'; I thought you were home to give me one last fling, get your stuff and go...\"\n\nKat rose up, her forearms resting on my chest so she was looking me in the eyes again, her eyes clouded, worried, scared.\n\n\"Frankie, I don't want you to hate me, but I'm so afraid you will after you hear what I tell you. I know we said we'd wait, I know you'd like us to have our own place, not this rented apartment, but it's too late. I was sick back home, so Sally took me to see Doctor Fuller, and he did some tests. Frankie, I'm sorry, I know what we said, that we had plenty of time, but that's all changed now; baby, I'm pregnant...!\"\n\nI could have smacked myself on the head like one of the Three Stooges; of course! Doctor Fuller, Mom's gynaecologist! Now I really felt stupid; two seconds later what she said actually hit me; we were pregnant!\n\nKat was looking at me apprehensively, chewing her lip in a completely adorable and overpoweringly sexy way, smiling tentatively as I grinned happily at her.\n\n\"Cammere, you!\" I growled, pulling her closer so I could kiss her properly, and maybe bite her adorable lip as well, just a little...\n\nShe pulled away from me to look deeply into my eyes, her own emerald eyes darkening to grass-green as she looked searchingly into mine. I always knew Kat's mood from the color of her eyes, right now she was scared and apprehensive, so I pulled her in and held her tight as I did my best to kiss her fears away. \n\n\"Are you angry, Frankie? I know we agreed, and I didn't mean...\" she began, but I kissed her and stopped that line there and then. When we finally broke apart, I held her close to me as we talked. We talked about Mom, about Dad, Sally, Joe, little Joey, family, reminding ourselves about our family, and now the thought of the new life beginning right here, our own little family growing day by day. \n\nI did everything to allay her fears, because I really did want a family, with her, when she was ready; that had been my only reason for stipulating that we wait, that Kat had to be ready to take that on. She was obviously ready for it; as we talked I saw how her hand curled protectively around her smooth, flat belly, already unconsciously protecting that little spark of life glowing in there.\n\nAfter that, life became normal, for us, anyway, or as normal as it could be, given our relationship; quickie courthouse wedding in Lake Tahoe, new home, mortgage, job, all the things you'd expect of a young suburban couple just starting their family. The day Kat found out she was having twins was a Red-Letter day for us, and the scan printout, with the two little hearts clearly visible, and the twin heart traces superimposed one on top of the other, is still my most treasured and carefully-kept possession, even after all these years. ",
        "We still kept in close touch with Sally; Joey was growing to be everything Joe would have been proud of, no matter who his real father was, and another snippet that concerned me at first, but I followed Sally's lead in this particular case. Steve Dolan had shown he'd inherited all the business acumen his forebears had in such great measure. He'd rebuilt his part of the family's business empire from the chaotic, almost bankrupt shambles his drunk of a father had left it in, turning around the problems caused by Jerry Dolan and becoming, at a commendably early age, the wealthiest man in Springfield, and one of the richest men in the state, with a chain of huge hardware super-stores across the Southwest. \n\nHowever, the stories we'd heard all those years ago about how he treated his son were borne out by, of all people, Sally, who'd somehow wrapped herself around Dolan's boy and taken him to her heart. She was obviously deeply taken with him, as was Joey, and from what Sally told us, Joey took extra care of his young half-brother, even though he was unaware of the relationship; he just knew and understood almost instinctively that young Robbie was special and needed protecting, and he stepped up; like I said, a boy for Joe to be proud of. \n\nAnd so it went, my babies growing into tough, hard-headed, smart, spiky, erratic, brilliant, maddening, unpredictable and absolutely adorable miniatures of Kat, their Moran blood showing in every line and aspect of them. And then, one day, when Moira and Morag were just about 10 or so, I got a call from Sally that was going to change our lives. I'd just come in from a long and hectic day in the office, the girls were in the midst of one of their daily, never-ending territorial disputes, the central air was playing up, no joke in the South Bay in summer, and Kat had a splitting headache from the heat, trying to locate a repairman who'd come out at such short notice, and constantly dealing with our touchy pair of green-eyed monsters, when Sally called.\n\n\"Frank, I need a favor, and I need it quick. Young Robbie Dolan's finally told that pack of swamp rats he calls a family what he thinks of them, and he's here with me. Frank, the boy needs help; his pig of a father's denied him any help, all his life, they've given him nothing, not a damn thing; everything he owns in the world is here in one ratty old holdall! He got a scholarship but he had to turn it down because his father refused to help him with living expenses, just flat-out refused; the bastard claimed they had nothing to spare for him, after buying that worthless tramp daughter of theirs a new car and a trip to Europe. Frank, the poor boy needs someone to give him a chance at a life; he's a lovely kid, he's just like Joey in so many ways, and it breaks my heart to see him left out once again; he deserves a break too, just a chance to make something of himself. I know how smart he is, he knows everything there is to know about game software, Joey says he's a genius, apparently the University of California thought so, too, do you know anyone there in Silicon Valley who might be able to help him?\"\n\nAs it happened, I did; my good friend and fellow A's fan, Steve Vargas, who owned a small but influential and highly respected game software company in Palo Alto, not too far from our home. I gave him a call and asked him to at least talk to the boy; he agreed, we made the call, the rest you know.\n\nWhen Robbie came to stay with us, I was struck firstly at how much, from certain angles, he resembled Joey (that would be the legacy of their pig of a father), but also how many of Angie Raynes' features he had; she was always a looker, even if I did consider her the Queen Bitch of the Western World, and Robbie had inherited a fair portion of her looks; the next thing was how soft-spoken, diffident, and humble he was; I guess a lifetime of being nothing and nobody had given him zero expectations, but worst of all, no detectable sense of self-worth; it seemed he'd learned to live with it, but it wrenched at Kat's heart, though. \n\nThis boy was her own close kin, and she couldn't tell him, but I could see after only a few days she was completely in love with him, as were the girls; for them, he'd gone from being houseguest, to trusted friend, to big brother in just a few days, probably because there was absolutely no pretence or guile in him, and the girls instinctively fell in love with that aspect of him; the perceptions of the young are uncannily accurate, and it was no trouble at all for them to spot that Robbie was the real thing. \n\nRobbie was honest, helpful, mild, and sweet-natured, unassuming, and smart as a whip, and before he knew it, he was one of our kids, just as much as Moira or Morag, never mind that he was almost eight years older than them. The sight of him sitting with the girls of an evening, after a long day at his new job, patiently teaching them basic calculus, or trigonometry, or algebra, his complete absorption in helping the girls because he wanted to, always brought a lump to my throat, and I'd look up and see Kat also watching him intently, a fond smile on her lips.\n\nThe only thing about him that worried me was his almost complete lack of presence; his entire life he'd been shunned by those who were supposed to love him, and he'd learned early in life that drawing attention to himself wasn't possible in a household where no-one could see him, and so he'd learned how to \"switch\" himself off; it was a long time before we could get him to join in family activities, as he had no way of relating to them; he'd never been included, so had no real idea how to be included, and it confused him. His relationship with Joey was different, more one-to-one, but I truly believe that it was Kat and the girls who taught him how to venture out of himself. \n\nSocializing with the immediate family was no issue, but taking him anywhere was always fraught with difficulties, as he immediately sank into himself and literally disappeared from view; it took him a long time to un-learn that, and Kat used to regularly curse Steve Dolan and Angel Raynes for turning their only son into a living ghost, a pale shadow of who he should have been.\n\nHer relationship with Robbie was slightly different to mine; in her eyes, Robbie was her boy, she was fiercely adamant about that, and anyone who stepped between them was going down, period; the only people in the entire world she was prepared to share him with were Sarah, the girls, and me. That was the effect that boy had on our family. \n\nAs the years progressed, various things happened, some good, some not so good. Casey, Robbie's sister, became involved with him, after she'd spent four years searching for him; she actually came to see us, to tell us what and how she felt, and I had to tip my hat to her for the bravery she showed by doing that; Kat was quite capable of skinning her alive and then slow-roasting her for what she'd done; after all, this was her Robbie we're talking about here! I never commented on what they were doing, not when my own darling wife is also my baby sister, but Casey convinced Kat to let her in and be a part of our family. When that sack of shit Steve Dolan tried to attack Robbie, our boy did to him what I should have all those years ago, he hospitalized the bastard, and when we heard what Steve had been doing to Casey for years, I drank a special toast to Robbie; that was my boy!\n\nIn due course Robbie and Casey had a baby, the loveliest little boy I'd ever seen; he looks just like Robbie, and Kat and the girls absolutely worship him; as far as they're concerned he's theirs, Robbie and Casey just get to look after him once in a while! Of course, they also feel like that about Robbie; much as they love and adore Casey, Robbie's theirs, he belongs to them, and they want him back. \n\nAll things considered, Robbie and Casey were happy; they loved each other, they had that beautiful boy, and his mom lived near him again. Sarah had met and married my buddy Steve, and had a little girl, Caitlin, a black-haired, flashing-eyed little Sarah lookalike, already a beauty at just two years old. Steve and Sarah lived in Novato, while Joey and Karen and my own great-nephew, little Joey Jr. lived literally around the corner from Robbie up in Daly City, so all the family was still close, and close by if they were needed. \n\nWith all this domesticity breaking-out, I was waiting for that call from Robbie, the same one I'd had from a panicked Joey before he got married. Something was up with Robbie, and I thought I knew what it was. In many ways, Robbie and Joey are mirror-images of each other, although they'd both look skeptical if you drew their attention to that fact; they think alike, dress alike, like the same food, the same baseball teams, the same TV shows, have the same sense of humor, and they both even have the same little facial quirks and mannerisms; it wouldn't have surprised me if one day they hadn't married lookalike girls! \n\nSo I waited for that call, and sure enough, Joey called me to give me a heads-up, followed a short while later by a call from Robbie. Joey had just needed a little reassurance, that he was up to the job, that he was doing the right thing, that he deserved someone like Karen, and Kat and I were happy to calm him and tell him what he needed to hear. It had been fairly easy; while Joey had never had a father, he'd always been a sporty, outgoing, gregarious and popular boy, worldly, confident, and self-assured, a typical young American male, and boosting his confidence and calming his jitters was accomplished with a pep talk and a couple of beers. \n\nRobbie, on the other hand, was a horse of a different color entirely; he'd never had any positive reinforcement, no strong older male role-model, no-one to show him how to be a married man, or even how to grow into a man, only contempt and neglect, so the boy had learned nothing about how people worked, nothing except what young Joey could show him as they grew and matured together. Steve Dolan should have taken his son in hand, he should have told him things, and shown him by example, but the only thing that sack of shit had ever shown his son was how to be an invisible, valueless nonentity. \n\nNow I had to try and give him the confidence to be what he should be; a man grown, embarking on one of the most important and significant adventures of his life. It was ironic, and not in a good way, either, that the man who was going to try and show him what a father should have, was the man who twice almost killed his father, only drawing back from the brink at the very last second. Something told me this was going to take a little more than just a chat and a couple of Coors...\n\n*\n\nRobbie was a little apprehensive as his uncle and aunt ushered him into the den and waved him onto the couch, after making sure the girls really were gone; they had a talent for eavesdropping and snooping bordering on genius, and it would never do for them to hear any of this. Once they were satisfied the coast was clear, they both sat down, Frank in his favorite recliner, Kat on the couch next to him, his hand in hers.\n\n\"So, Robbie, Joey tells me you've got something on your mind. You want to tell me about it, son?\" asked Frank.\n\nRobbie looked nervously at Kat, she smiled and nodded.\n\n\"Go ahead baby, there's only us here, and nothing you say will ever go outside this room, I promise. Tell us what's troubling you, baby, we only want to help!\"\n\nRobbie slid his hand out of Kat's, nervously lacing his fingers together and looking at the floor as he gathered his thoughts, looking for a place to begin. Kat smoothed his hair back out of his eyes, something she'd done a million times before, and the familiarity of the gesture calmed him, reminded him of where he was and who he was with.\n\n\"Uncle Frank, Aunt Kat, you know...I...Casey and me...we...we...\"\n\n\"Calm down, Robbie, take your time, we have as much time as you need, just tell us what's bothering you,\" smiled Frank, that and the sudden smile from Kat stilling him and letting him once more gather his thoughts.\n\n\"Uncle Frank, Aunt Kat, you know Casey and me, we...we want to get married, I asked her to a long time ago, I know she wants to marry me, but...what if I get it wrong? I know who I am, I know who my father is, what if I'm like him, you know, inside, what if all that stuff about the apple not falling far from the tree is true, supposing I ...?\" \n\nFrank cut across him at that.\n\n\"OK Robbie, that's enough! Listen to me, son, no,\" as Robbie tried to interject, \"hear me out first, Robbie, please!\"\n\nRobbie subsided, his face flushed, and Kat leaned closer, suddenly concerned; he looked almost...frightened, yes, frightened, scared; suddenly the confident young man she knew and loved so much was gone, and in his place was the lonely, traumatized outcast he'd been his whole life. Her heart went out to him, and it took a real effort of will to not just gather him in and mother him, hold him close and make the fear go away.\n\nFrank also leaned closer, sitting almost close enough for their knees to touch.\n\n\"Robbie, you're not like Steve Dolan, not in any way; I know him, I know him better than you think, and I see nothing of him in you, not one of the things that make him who he is! I know what he did, I know how he treated you, but he also did you the biggest service possible; he made sure you were never going to be like him! Your mom watched over you, she and Joey taught you things, almost without meaning to, about how to be a good person, how to be a kind person, how to be the man you are today; that's who you are! All this stuff about the apple and the tree, that's nonsense, I don't know where you got that from, so just think on this; sometimes old wives tales only exist because old wives had nothing better to do with their time than sit around, spread malicious gossip, and stick pins in people!\"\n\nRobbie looked at him in astonishment; he'd never heard that tone or seen that expression before, and he suddenly realised Frank was deadly serious.\n\n\"Robbie, you're like my own son; I really wish you were, and I'd never lie to you, so what I'm telling you now is the truth; you can never be like the man your father is, it's not your nature; there's nothing of the Dolan clan in you, and I know that because I know what went into you to make you who you are. Did you ever meet your grandmother, your father's mother?\"\n\nRobbie looked completely lost at that question, at the sudden change of subject; why would his grandmother have anything to do with this conversation? He let his puzzlement show in his voice.\n\n\"No, Uncle Frank, all I know is she lives back East, in New York State, Albany or Oneonta or somewhere like that. I've never met her.\"\n\nFrank leaned back slightly, his expression suddenly less serious, and a quick grin quirking the corner of his mouth.\n\n\"Oneonta, eh? \"Go Outlaws!\" Perhaps you should meet her; it would certainly make a lot of things clearer to you.\"\n\nNow Robbie was really confused.\n\n\"Aunt Kat...?\"\n\nKat looked at Frank and saw the small nod, telling her to tell him.\n\n\"Two things Robbie, but before I say anything I want your solemn promise you won't say anything, to anyone, ever; do I have your word?\"\n\nRobbie had a pretty good idea what she was going to tell him, but decided to keep shut; he wasn't supposed to know, after all, so he nodded agreement.\n\n\"I promise, Aunt Kat, not a word, ever.\"\n\nKat sighed, her hands in her lap, slowly rubbing them together, obviously far out of her comfort zone.\n\n\"Baby, your Uncle Frank and me, we...we know what you're going through, you and Casey; we know because we went though it as well. Baby, we went through it because Frank is...Frank is my big brother, or rather, half-brother. We never intended for any of our kids to find out, the girls don't know, only you, please, please don't tell them, God knows what it would do to them!\"\n\nRobbie slid over to his aunt, taking her hand in his and putting his arm around her shoulder.\n\n\"Please, Aunt Kat, it's okay, really, I won't tell anyone, I promised!\"\n\nKat lifted her head to look into his eyes, her eyes suddenly widening a little as she realized something.\n\n\"You already knew!\" she whispered, and Robbie, abashed, his eyes downcast, nodded.\n\n\"Mom...sort of let it slip the day she told Joey who his father was, that Casey and me were his brother and sister. She didn't mean to, honest!\" he blurted out at the look in her eyes. Frank nodded to himself, suppressing a small grin at Robbie's complete inability to prevaricate or dodge the truth.\n\n\"Joey pressed her after she told Casey and me how difficult it was going to be for us, he worried at her about how she knew so much about it, and she told us how much it hurt her to let you both go, how she had to watch the family break up to keep it safe, how she had to lose both of you, we could see she was still hurting, even after all that time...I'm sorry Aunt Kat, I'm sorry I didn't tell you I knew, but I promised mom I'd keep my mouth shut, and I did...\"\n\nKat reached up and cupped his chin.\n\n\"Yes you did, baby, thank you. How about Joey, and Karen, how do they feel about...Frank and me, all this?\"\n\nRobbie grinned.\n\n\"Aunt Kat, they've been here like a million times since, Karen leaves the baby with you when she takes the girls mall-hopping in Oakland, and she and Casey sit huddled together watching chick-flicks and crying in stereo, if she had a problem with any of this, I think you'd have heard about it by now!\"\n\nKat smiled, a happy, relieved smile, and Robbie noted once again just how beautiful his aunt was.\n\n\"Thank you baby, you always know the right thing to say! Now there's that other thing. Remember Frank asked you about your grandmother? We have a very good reason for asking. Your grandmother is Roisian Shelagh Caitlin Dolan, but her maiden name was Moran. My father was Michael Moran; he and Roisian were brother and sister.\" \n\nRobbie looked at her in wide-eyed surprise.\n\n\"So you're...you're...\"\n\nKat nodded.\n\n\"Even before you came to us, you were my family; I'm your cousin, the girls may be your sisters now, but before that they were your cousins, so you see, you were always surrounded by family, even if you didn't know it! I don't think your mom knows, we couldn't tell her, not after what your father...what Steve...did to her, so this has always been my secret, mine and Frank's.\"\n\nFrank stirred once again, leaning forward to speak.\n\n\"I met her once, Robbie, she was a beautiful lady, she and your aunt could be mother and daughter, they look so much alike. My reason for bringing her up was because of the kind of lady she is, and she is a lady, make no mistake; she left because she couldn't stomach Steve and his wife, and you've inherited her strength, her courage, and most of all, her character; what makes your aunt Kat who she is, you have in large measure as well, and that's why you are going to be a good husband and father, a good provider, and a gentle and caring man, you come from the right stock for it! Your aunt's father was my stepdad, but you'd never have known it; for all my life he was just my dad, and he and his sister were two of a kind, quality people, so never forget, you may have had the Dolan name, but you have the Moran blood in you, you and Joey, and it shows!\"\n\nRobbie looked at Kat, and she took his face in her hands once again.\n\n\"Baby, everything your uncle says is true; you come from good stock, some of the very best. Daddy was one of the best loved men in Springfield; most of the town came to his funeral, because of who he was; he made it easy for people to love him, and so many people did; you're his sister Rosie's grandson, and he would have been so proud of you, he would have seen his own father in you, and that alone is going to make you 10 times the man your father could ever be. Casey is a very lucky girl!\"",
        "Robbie looked away, embarrassed by the compliments, but Kat reached out and gently cupped his chin, turning his head to face her again.\n\n\"Baby, when you came to us, the first thing I saw was the man you were going to be, and I wasn't wrong about you; everything you are, everything you're going to be, it all comes from inside you, and what's in there is a fine, honest man who'll do everything it takes to keep his family safe, provided for, and happy, no matter what! Your father only ever thought of himself, of his own appetites and how best to feed them, and his children suffered and became casualties along the way; with you, it's the other way round; everything you'll ever be or do or achieve will only ever be for your family, for your children, so they too can be the best they could ever be; that's the difference between you and Steve, and it's a world of difference, believe me!\"\n\nShe stroked his cheek fondly.\n\n\"You will always be my boy, just as you'll always be your mom Sarah's boy too, so I'm just a little biased when it comes to thinking about you, but I do know one thing for a solid fact; nothing of your father will ever intrude and interfere with your life with Casey; you're not made like him, and nothing of him is in you. Casey loves you because she can see that, she always could, you both fit together perfectly, and nothing of your father or his ways will ever come between you! Go home, Robbie, marry your girl, make her the happiest girl on the planet!\" \n\nRobbie glanced over at Frank, who nodded and smiled at him.\n\n\"Listen to her, Robbie, she's telling you the truth. We all know what a good husband and father you'll be, question is, do you believe it now?\"\n\nRobbie looked pensive for a moment, but no longer unsure or hesitant, before replying.\n\n\"Uncle Frank, I think I know what to do now, you answered all my questions, and gave me a lot to think about, but I think I'm ready now. Thank you, both of you, I love you both!\"\n\nKat leaned her head against his shoulder for a moment, then pulled him closer and kissed him on the side of the neck, her favorite gesture of affection.\n\n\"And we love you too, baby! Now that's settled, you better take the girls out for pizza or they'll scream the house down, and I don't need that right now!\"\n\n*\n\nCasey had just finished putting her son down for his nap when she heard Robbie come in, and was waiting for him with mixture of trepidation and relief. One look at his face told her all she needed to know; whatever Frank and Kat had told him seemed to have worked, his fears and worries had fallen away, and gone was that air of distraction and barely suppressed agitation; her boy was back, and she breathed a sigh of relief and a heartfelt prayer of thanks to Frank and Kat for pulling him out of the downward spiral he'd fallen into.\n\nAs he saw her, his face split into a giant grin, happy and delighted, happiness and restored good humor dancing in his eyes.\n\n\"Hey babe, wanna get married?\" he grinned at her, catching her in a bear hug and squeezing her as she kissed him enthusiastically, before pulling back to look closely, searchingly in his eyes.\n\n\"Are you sure this is what you want, baby? I know why you went to see Frank, I know what's been on your mind, we don't have to, you know, not until you're completely sure...\"\n\nRobbie pulled her in close, his arms around her, holding her tight to him.\n\n\"I've never been surer of anything in my life, Case; I love you, and I seem to remember I once asked you to marry me; in fact, I'm sure I gave you a ring...!\"\n\nCase grinned and showed him her ring finger, Gramma Novak's engagement ring sparkling here.\n\n\"You mean this one here, baby?\" she grinned in wide-eyed feigned innocence, before dissolving in soft peals of laughter.\n\nRobbie's expression changed, suddenly serious.\n\n\"I'm sorry, Case, I should have been more honest with you, I should have told you a long time ago, but...\"\n\nCasey cut him short with a fingertip to his lips.\n\n\"It's okay, baby, I understand, no harm done, and now at least I get to marry you!\" \n\nRobbie grinned and kissed her, Casey kissing him back, sliding her tongue between his lips to lightly rub against his own. Robbie responded by sliding his hands down to cup and squeeze her ass, his hands curling around each curved sweet handful of her trim, taut little ass.\n\n\"Mmm, someone's feeling MUCH better!\" she murmured, grinding her crotch against the bulge she could feel growing in the front of his jeans, Robbie kissing her harder as he gently pulled her buttocks apart, making her gasp at the sensation.\n\n\"Ooooh, that's nice! Let's go in the bedroom, baby, I have things I want to do to you!\" she grinned as she licked his lips, Robbie responding by hoisting her up so she could wrap her long legs around his waist as he carried her into their room.\n\nOnce there, Casey slid off him, her fingers fumbling with the button of his jeans, as his were doing with hers. Robbie grinned happily as he unbuttoned her blouse, eyeing her trim figure appreciatively; her breasts were slightly larger than before little Robbie's birth, but still pert, firm and delectable, her waist was still narrow, her belly still flat and unlined, and her ass was still the taut, firm, twin hillocks he loved to squeeze and caress. Casey grinned at his scrutiny, well aware of the effect she was having on him. For her part, every chance she got to see and handle his toned, fit, muscular physique was time well spent, in her opinion. \n\nAs always, she wondered at his physical beauty; his perfectly proportioned body, well muscled without being heavy, kept in shape from the hours he and Joey still spent lifting weights and working out after work in the small employee's gym at the office, and it was always a source of amazement to her that nobody had captured him before she came looking for him, and along with her love for him was a deep and abiding sense of wonder that he'd fallen for her, of all the girls there were, and had given himself so completely to her. \n\nCasey pulled off her blouse and pushed down her cut-off jeans, Robbie's eyes glinting at the sight of the pink lace thong she was wearing. Casey grinned and reached behind to unclip her bra, but Robbie pulled her close, squeezing her firm cheeks possessively with both hands as he ground against her before sliding his hands up to unhook and slip her bra off. As the cups fell away from her breasts, Robbie dipped down to catch a nipple between his lips, making her gasp at the sensation, a glow starting inside her as his hand slid around her to catch and gently squeeze her other nipple.\n\nCasey wasn't idle, either; she could feel the size of the bulge behind his zipper, and as he nuzzled and squeezed her nipples, her hands were busy unbuttoning his shirt and pushing at the waistband of his jeans, eager to wrap around his sizeable cock. Robbie helped her by standing back and stripping off, Casey watching enthralled at the sight of his rippling physique, his handsome, smiling face, and that adorable wave of hair flopping forward, making her itch to smoothe it back.\n\nWhen he was down to his shorts, the front tented-out some considerable way, Casey grinned and wrapped her arms around him, pulling her mons tight up against that tempting bulge, making him gasp at the sensation. As they kissed, she slid her hand down and into the back of his shorts, gripping and squeezing a rock-like buttock, all the while thinking to herself \"God, what an ass, and it's mine, all mine!\"\n\nRobbie happily returned the favor, holding and fondling her as they kissed, his thumbs eventually hooking the sides of her thong and sliding them down. As Casey stepped out of the lacy wisp of material, Robbie's hands once again clenched her ass cheeks, this time gently probing and searching in that shadowed cleft between them, his fingers brushing her anus lightly before rubbing along the length of her slit.\n\nCasey jumped, then melted against him with a soft groan as he found her pussy, and slipped two fingers into her moist slit from behind as he kissed her deeply. As they kissed, Casey began a slow, circular motion of her mons against his cock, and now it was Robbie's turn to gasp as she ground and slid against his tented cock. Casey broke their kiss, and slid to her knees in front of him, her fingers already tugging down his shorts. As the waistband slipped over his pulsating cock, it slipped forward, columnar, thick, and solid, 7 inches of perfectly sculpted flesh, hard as bone, and aching for her. Casey looked up at him with a rich, sexy smile on her face, and reached up to hold him, gently but insistently sliding her hand up and down his length, fondling his scrotum with the other, before slipping the end into her mouth and sucking gently.\n\nRobbie gasped at the sensation of her hot mouth on him, his stomach muscles tightening and rippling involuntarily as Casey began to bob her head up and down on him, fucking his cock with her mouth as she squeezed him. Robbie had to try and not think about what she was doing, else he'd have filled her mouth there and then, caving-in to the avalanche of sensations and the arousal he was feeling. At last he could take no more, and gently disengaged from her, pulling back from her enticingly hot and talented mouth and helping her to rise.\n\nCasey smiled and tugged him to the bed, pushing him down and straddling him, leaning down to kiss him, and impaling herself on him at the same time. Robbie's hands automatically clasped her firm ass-cheeks, holding her as he began to pump against her. Their movements took on the smooth, fluid rhythm of seals or dolphins sporting in calm seas, muscles and bodies melded together in perfect harmony as they moved together, their attention fixed on each other, their expressions rapt as they lost themselves in their dance, and finally gave themselves up to their mutual pleasure, the 'little death' catching them in a perfect moment of shared orgasm, every muscle, sinew, and heartbeat perfectly balanced against that of the other as they peaked in their moment of attainment, before sliding down into that trough of peace, and silence, and stilled motion on the other side. \n\nThe sound of their son laughing and gurgling in the other room finally brought them back to reality, and Casey reluctantly climbed off the bed to see to him, or at least, she tried to. Robbie pulled her back, pulling her down to sit next to him.\n\n\"Case, now that I've fixed my...problem, we really need to think about this whole \"getting married\" business; I spoke to mom, and Karen, and when you're ready, they want to take you shopping; mom's decided she's gonna be organizing our wedding, and she's got a vision of how it's going to be, so be prepared! Also, I'd like you to think about this; how about we wait until she's recovered from the birth, then have a dual wedding with your mom and Elio?\"\n\nCasey gaped, then flung herself at him.\n\n\"You'd do that? Really? Oh Robbie, thank you, thank you, I know mom will love the idea, thank you baby!\"\n\nJust after midnight, Casey was awakened by the phone. She answered sleepily, but was wide awake a in a few seconds as Elio told her that Angie had gone into labor and had been taken to O'Connor Hospital in San Jose. She shook Robbie awake, and while he dressed, Casey strapped the baby into his carrier and packed the baby-bag for him. \n\nThe cross-town and freeway traffic was light at that time of night, and they made good time, arriving at the hospital less than 40 minutes after receiving the call, to be met by a jittery Elio, and the news that Sarah and Steve were also on their way. Casey took little Robbie to see her mother, while Robbie took Elio to get some coffee into him and calm him down. \n\nAngie was in no danger; her pregnancy had been entirely normal, so the Obstetrician was unconcerned, even though she was almost three weeks early; his attitude was that the estimated Due-Date always had two weeks or more leeway, because of the inaccuracy in calculating when conception actually occurred, and in his opinion, three weeks early was as normal as three weeks late; that was enough calm Elio's fears, although impending new-father jitters were still there, naturally enough..\n\nSarah and Steve arrived soon after, with little Caitlin in her carrier, and now the family was all there, awaiting the arrival of Angie's daughter, Casey's new sister. \n\nRobbie offered to watch over the babies while Casey went into her mother, but Casey decided that she'd let Elio share this with his partner. It still gave Casey a small twinge now and then that Robbie still hadn't found a way to connect with Angie, his biological mother, not even in the most superficial way; as far as he was concerned, she was just plain 'Angie', his business partner's wife, and his prospective mother-in-law. Even though he was intellectually aware that she was his real mother, for Robbie there was only one Mom, and Sarah was it; after Sarah came Caitlin Novak, his beloved Aunt Kat, and there was no room in that particular niche for anyone else.\n\nSo while Robbie and Sarah sat and talked and watched their respective children, Steve and Casey nervously paced, both of them wearing a groove in the waiting area carpet. At last Casey could stand it no longer. \n\n\"I'm going in there, babe; she's my mom, and she needs me too!\"\n\nRobbie grinned at her tone, and nodded his head in the direction of the Obstetrics Unit.\n\n\"Go on, Case, you're making me dizzy with all that pacing! We'll wait here, she probably does need you right now, go to her.\"\n\nCasey shot him a grateful smile and spoke to the Charge Nurse, who took her away to get her gowned-up. Robbie, Sarah and Steve settled down to wait for their newest family member to make her appearance.\n\nAt 4:45 A.M., Casey poked her head through the door of the delivery room.\n\n\"Guys, she's beautiful! You have to see her, she looks just like Mom, God, she's so gorgeous! Wait a few minutes, then you can come in one at a time!\"\n\nRobbie nudged Sara, who came awake with a start, indicating she go in first. The first thing Sarah saw was how tired Angie looked; healthy or not, this had really taken it out of her, and she was muzzy with exhaustion; she may have borne two children before, but that had been nearly 25 years ago, and she'd been a lot more resilient then; now, she was feeling every second of her 43 years, and she looked like exactly like a woman who'd just been through several hours of agonising labor, but she still had enough strength and composure to smile and beckon Sarah closer.\n\n\"Sarah, thank you for being here. I'd like you to meet your niece, Sarah Caitlin Vargas; Sarah Caitlin, this is your Aunt Sarah, say hello!\" \n\nSarah's eyes filled at the compliment, the last fragments of hurt from the old days finally disappearing at the olive branch Angie held out to her. Sarah held out her arms. \n\n\"May I?\"\n\nAngie smiled and passed her daughter to Sarah, who took her and looked in rapt wonder at the newest member of the clan. Casey was right; she did look like Angie, and a lot like Casey, as well. \n\n\"Hello, baby,\" whispered Sarah, brushing the tiny forehead with a gentle kiss, \"welcome to your family! I have a gift for you; when I was young, my name was Sally; now it's time to pass the name on, so I'm giving it to you, because it belongs in our family; it's your turn to keep it now, baby!\"\n\nAngie smiled wistfully as Sarah handed the baby back to her.\n\n\"I wish I'd been able to call you Sally back then; thank you for such a special gift, Sarah, I know how much it means to you!\"\n\nAnd that was the moment when the two women finally became true family, after a lifetime of being on opposite sides of the fence.\n\nAngie asked Sarah to sit for a moment, as she had something to ask her. Sarah sat on the edge of the bed and waited to hear what Angie had to say.\n\n\"Sarah, Casey told me that she and Robbie have finally worked things out, and they want to be married as soon as possible. Elio and I, we want to get married too, and Casey suggested we have a double-wedding. I know Casey would like Frank to give her away, what I want to ask is, will you ask Joey if he'll give me away? I don't have anyone, and...\"\n\nOnce again Sarah's eyes brimmed as she smiled and leaned down to kiss Angie on the cheek. \n\n\"Of course he will, he'll be proud and honored to do that for you, I promise you!\"\n\n*\n\nAll eyes were on the two couples at the altar rail; the groom's in black suits and crisp white shirts, the brides in voluminous white dresses and long flowing veils, and the bridesmaids, two tall, striking redheads, in simple long gowns of teal-green, the objects of attention of every young man in the church. Robbie and Casey said their vows, followed by Angie and Elio, no modern, New-Age poetry, rather those that had been said for generations, as sanctioned by church rite, traditional and heartfelt, while the congregation looked on in rapt attention. \n\nSarah and Karen watched the children, little Joey, young Robbie, Caitlin, and now little Sarah, as their parents partook of the Sacrament of Marriage. Joey had given Angie away, Kat acting as her Matron of Honor, while Morag and Moira had been both women's bridesmaids, and true to her wishes, Frank had given Casey away, as proud as though he was actually her father.\n\nSarah was so wrapped up in watching her boy get married that her attention momentarily wandered, only catching from the corner of her eye someone standing behind the pew where all four baby carriers were lined up. Suddenly Karen gave a cry and slumped sideways, As she turned in shock, seeing Karen slide off the bench onto her knees, she felt a blow to her face, the shock making her cry out, seeing a blurry shape lifting baby Sarah's carrier. She shook her head to clear it, to see a shocking sight; Steve Dolan holding little Sarah's baby-carrier, his face twisted in a horrifying sneer of mingled hate and triumph, and Karen sprawled over the three remaining baby-carriers, blood pouring from her split lip, desperately protecting the other three children with her body. \n\nRobby and Elio both turned at the sound of her cry, their faces also shocked, seeing Dolan with Angie's baby in his grasp, one hand holding the baby-carrier, the other holding a retractable utility knife near her.\n\nCasey found her voice first.\n\n\"NO! No Dad, what are you doing? Put her down, you sick bastard!\" she screamed, attempting to reach her father. Robbie held her back, realising their father had lost whatever tenuous grip he had on sanity, his expression showing nothing but animal hatred and rage.\n\n\"You fuckers took everything from me, everything I had, my wife, you and all those bitches, they all lined up after you fuckers destroyed me, they took everything you left me, everything! Let's see how you like losing everything!\" \n\nElio was raging, fear for his daughter and outrage flickering across his face. Frank and Steve having to use all their strength to hold him back, recognising they were confronted with a madman, a madman who had nothing to lose, and had a vulnerable child in his grasp. \n\nKat watched in horrified silence, terrified for the babies still strapped in their carriers on the church bench, waiting for the opportunity to edge her way to where Karen was kneeling with her arms around the three remaining baby-carriers, her eyes burning with anger, hatred, and contempt as she glowered at Steve Dolan. \n\n\"You took everything from me, Angel, you destroyed me, you made my daughter hate me, now my business is gone, my house is gone, everything's gone, and it's all your fault; but now, now I get to pay you back, now I have your little bastard, this little bitch's bastard is gonna die, what are you gonna do? Fuck you, fuck all of you, this is all your fault, you brought this on yourself, you fucking whore, you and your fucking whore daughter!\"",
        "Dolan was almost frothing now, his eyes blazing, not a hint of sanity or remorse for what he was doing showing there, only black rage and the thirst for revenge.\n\nAngie was close to collapsing with fear for her baby, but she managed to speak calmly to him, trying to get him to step away from the baby, put the carrier down, anything to keep that lethal blade away from her baby. As she slowly stepped toward him she caught sight of someone slowly, silently moving up behind him, so avoided looking at him so she wouldn't tip him off, concentrating instead on her baby, miraculously still fast asleep in her baby-carrier.\n\n\"What do you want from me, Steve? You know what you did, that's why I had to leave; I'm married now, I have a baby, please, I'm begging you, don't hurt my baby!\"\n\nSteve glared at her, not even the ragged edge of sanity showing in his eyes.\n\n\"I want my life back, I want my home, I want my money, my wife, everything, everything you took from me, that's what I want, you fucking bitch!\"\n\nAngie spoke calmly, her voice calkm and even, not a trace of the fear she was feeling showing through.\n\n\"If you want, I'll come away with you, Steve, but you have to put the baby down; just put her down, Steve, and I'll do whatever you want, I promise!\"\n\nA look almost of sad wistfulness flitted across his face.\n\n\"Really...You'll...you'll come back? You promise?\"\n\nAngie wrung her hands, realizing she had to keep him talking, had to prevent him from making any move toward that tiny body strapped into the carrier.\n\n\"I...promise, Steve, really, I'll come back, and everything will be the way it was, I promise you, but you have to put my baby down, please, just put her down!\"\n\nHe looked confused, wavered, the razor sharp blade weaving erratically in front of the sleeping child, then grinned happily and put the carrier down between his feet, and toppled forward as whoever it was Angie had seen standing behind him hefted the heavy candlestick, then bashed him with it again. Steve folded without a sound, blood pouring from a gaping scalp wound.\n\n\"I knew my son was a bastard, I never realized he was a crazy bastard!\" the slender, red-headed woman remarked to no-one in particular as Angie darted forward with an inarticulate cry, scooping up the carrier and holding it protectively to her as Elio rushed forward to hold his wife and daughter. Roisian Dolan looked down at Steve, lying unconscious on the church floor, her face set and her eyes flinty, and hefted the candlestick again.\n\n\"That's what you get for trying to hurt babies, you rotten little bastard, see how you like it! How the hell I ever gave birth to something like you I'll never know!\"\n\nThe wailing of sirens came from outside the church, then a handful of Daly City Police officers slipped into the church, guns drawn, to find the hostage-taker sprawled unconscious and bleeding from a head wound, Frank and Joey crouched over him to subdue him if he stirred. \n\nThe paramedics patched Dolan up, then, still unconscious, he was cuffed to a gurney and bundled into an ambulance. The police sergeant handling the arrest told Robbie that Dolan would be taken to San Mateo Medical for treatment before being locked-up in Santa Rita pending Psychiatric evaluation. Casey hugged Karen as she trembled with shock and outrage, holding her while one of the paramedic's dressed her split lip, after he checked over all the babies to make sure none of them had been injured in any way.\n\nSteve and Robbie had asked all the guests to make their way to the Green Hills Country Club, where the Reception was being held, until there was only the immediate family left at the church. Frank formally introduced Kat to her aunt Roisian, the two of them looking more like mother and daughter than aunt and niece as they embraced. \n\nSarah had been amazed at the close resemblance between Kat and Roisian, and intrigued at the fact that Roisian, as well as being Joey, Robbie and Casey's grandmother, was also the sister of her beloved Papa Mike. She watched in teary wonder as her sons embraced their grandmother for the first time, and Roisian's tearful reaction to little Joey, and Robbie, her two great-grandsons. \n\nThen came Casey's meeting with her grandmother, and there was only one thing on her mind.\n\n\"Gramma, if you hadn't been here, I don't know what...!\" she shook as she thought again about what had so nearly happened. Roisian hugged her tightly.\n\n\"It's okay, shush, nothing bad happened to anyone, except your pig of a father, and he asked for it! I know what went wrong with your father, but I was never able to fix it, he was just too much like his father, and today was the result of that. I should never have left, I should have stayed, I heard from Frank what Steve did before, please believe me, if I'd been here, I would have tried to protect you from that. I was a coward, I didn't like my son, I hated what he'd become, I didn't know how to deal with him, so I ran, and this is the result...!\"\n\nShe wiped her eyes on the square of lacy cotton Casey handed her. Roisian smiled at her, looking younger, looking just like Kat.\n\n\"I was just going to sit at the back and slip out before the end; I didn't want us to meet like this, and I didn't want a big reunion scene to overshadow your wedding day; after all, it's your special day, but something made me stay until the vows; it's a good thing I did!\"\n\nA look of barely suppressed outrage flitted across her face. \n\n\"When I think how my son endangered that poor little baby, and my own great-grandbabies... I'm glad I did what I did, he had it coming, and it was richly deserved!\"\n\n\"How did you know, Gramma, who told you I was...we were...?\"\n\nRoisian grinned, no trace of the sudden anger on her face, or in her voice.\n\n\"Young Frank invited me; Robbie told him where he thought I was, Frank tracked me down and asked me to come, so I did; it's amazing, he's amazing, he's the living image of his father, and he's just as sweet and thoughtful as Martin ever was; my niece is a very lucky girl! I heard how much she and Frank love Robbie, and you, and I was glad you'd found yourselves a real family. After Frank went to so much trouble to find me, I couldn't not come.\"\n\nCasey calmed down under her grandmother's soothing embrace.\n\n\"And Robbie...and me? What about...?\"\n\nRoisian chucked her lightly under her chin.\n\n\"I came to see my grandchildren get married to the people they love, not to judge them. I've missed their whole lives, so I have no right to judge or dictate what they do with them, even if I were inclined to do so. And Joey, what a lovely boy he is, so like his grandfather Martin, and so handsome; dear, sweet Martin Novak lives on in him as well! I think I'm going to like getting to know my grandchildren...and my great-grandchildren as well!\"\n\nCasey and Angie were still feeling the effects of what had so nearly happened, and were considering cancelling the reception, but Roisian persuaded them to attend their wedding reception; she reminded them that they had guests, and this was their day, even if Steve Dolan had so very nearly turned it into a tragedy. Casey had initially been feeling strange about having her absentee grandmother suddenly so near, but then she watched Roisian pick Robbie out of his carrier and hug him close, talking softly to the little boy as she showered him with kisses, and listening as Robbie laughed and gurgled back at her, and grinned in relief; perhaps everything was going to turn out all right after all.\n\n*\n\nSteve Dolan was evaluated by the court-appointed psychiatrist and found to be unfit to stand trial on the grounds of mental incapacity, and was sent to Atascadero, Casey signing the committal papers without a qualm. After what he'd tried to do to an innocent baby, and done to her in the past, she would have strapped him in the chair and pulled the switch herself if she had the opportunity. She still felt the horror and helpless outrage swell up in her, hot and powerful, whenever she thought about what he'd threatened to do to that innocent baby. \n\nNo, let him rot in that scary place, penned-up together with all the other crazies and violent sexual predators; he was where he deserved to be, he was one of them, after all, so he should feel right at home. She'd never agree to his release; if necessary she'd swear to a judge on a stack of bibles that she considered him a threat to her life and family, anything to keep him caged-up in there forever.\n\nAs it transpired, she didn't have to resort to that; six months after his initial committal, Steve Dolan was re-evaluated and this time was deemed to be fit to stand trial, and so he was transferred back to the jail at Santa Rita to await trial. Less than a week after he was transferred back, he was found dead in a shower room; he'd been viciously beaten and gang-raped, a bar of soap forced into his mouth to muffle his cries, and once his attackers had finished with him, they'd stabbed him several times through the neck and chest with a shiv carved from a toothbrush; whoever had done it had used such force it had snapped-off inside one of the puncture wounds. No perpetrator had been uncovered, and the case was listed as 'Under Investigation'.\n\nWhen Robbie got the news, he pondered how to break it to Casey; asking Frank only got him one answer; \"Tell her the truth, Robbie, it's what you're good at.\"\n\nRobbie waited until that night to tell her, waiting for the right opportunity. They were lying in bed, luxuriating in the feel of each other, warm and comfortable, when Robbie decided that now was the right time.\n\n\"Baby, we got a visit today, Sergeant Bell, Daly City PD; it's about your fath...about Steve.\"\n\nCasey turned away from him, her body suddenly stiff and unyielding.\n\n\"Robbie, if you ever loved me, if you want me to stay with you, you'll never mention that fucker again, not as long as you live, do you understand?\" she gritted, her voice almost harsh with hatred and anger.\n\nRobbie put his hand on her waist, drawing her closer.\n\n\"No, Case, you don't understand; he was found...dead, in a shower room in Santa Rita, he'd been...sexually assaulted, beaten and stabbed. They don't have anyone for it yet, they're still investigating, was all he could tell me.\"\n\nCasey lay absolutely still, and Robbie thought she was crying, but when she turned back to face him, her eyes were dry, and her features calm, composed.\n\n\"Then it's over, baby, he's gone and it's all finally over. If there's a Hell, he's in it, and I'm glad; he did so much wrong to both of us, to so many other people, and if he went to jail, one day they'd have let him out, and none of us, you, my babies, me, would be safe. Now I know he'll never be the boogeyman waiting around the corner, now he'll never be back to plague us; now our babies will be safe, and so will we. God help me, but I'm glad he's dead, now at least he won't try and kill any more innocent little babies, now he'll never rape me again, now he'll never be back to try and hurt you. He thought he could live by the sword, instead he died by the sword. It's over, and we can forget him!\"\n\nRobbie was shocked at her dismissal of the man who, irrespective of his actions, was still their father. Casey saw the shock and dismay in his eyes, and reached up to caress his cheek.\n\n\"You're a good man, Robbie, and one day, a year, ten years from now, you'd have found a way to forgive him, but I can never do that; I know what I sound like, baby, and if it shocks you, I'm sorry, but when it comes to my husband and my babies, nothing matters except that they're safe; I would condemn that man to a million hells if I had to, if it meant my babies slept safe in their beds at night. I hate him for what he did to us, for what he had the power to do, and I cannot find anything inside me that allows me to forgive him, not now, not ever. Right now he's being punished for what he's done, and that's an end to it. I never want to hear his name again, Robbie; that part of our life is gone now, dead and buried with him!\"\n\nRobbie backed away, her words making sense even if he was a little shocked at her harsh dismissal of the man. As he pondered her words, something she'd said clicked, and he turned back to her.\n\n\"Case, you said \"babies\", what did you mean?\"\n\nCasey stretched and slid her arms around him as she hugged him close.\n\n\"Oh yes, my darling Robbie, I knew there was something I wanted to tell you...!\"\n\nFINIS."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother",
        "sister",
        "incest",
        "sex",
        "anal",
        "oral",
        "marriage",
        "pregnancy",
        "punishment"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lost-and-found-ch-05"
}