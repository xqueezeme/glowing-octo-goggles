{
    "title": "Homebound Ch. 01",
    "pages": [
        "This is a long winded romance between two women with a dash of supernatural elements(reincarnation). As with my other stories, there is a strong focus on plot and the characters drive the story forward. While there is sex, it isn't the focal point. \n\nHuge thank you to Wax Philosophic for allowing me to borrow one of my favorite characters from Mistress and Charlotte's lives. If you haven't read any of the ongoing series featuring these lovely ladies yet, I highly recommend it. \n\nAs always, I love and thrive on feedback. So, whether you loved it, hated it, or something in between, please leave a comment or shoot me an email. Thanks for reading!\n\n*********\n\nJosephine Daniela Vasquez \u2013 Present Day\n\nThe farmer's market was packed, and I threaded my way through the dense crowd in search of a stand with berries. The sun baked the area and I was grateful I chose to wear a tank top and cut-off shorts before leaving the house. There was a gentle breeze floating in the air but it was akin to a desert breeze, offering absolutely no relief from the late August heat. I finally reached the produce stands, finding a long table with various berries strewn across the surface in their tiny square green boxes. Blackberries, peaches, nectarines, and a handful of overripe blueberries, which I knew were just starting to be out of season. \"Can I help you?\" the young woman standing behind the table asked in accented English. \n\nI smiled and nodded. \"Yes, I'll take a crate of blueberries and a bundle of spinach, please,\" I said. She was pretty, her dark brown hair hanging over her shoulder and her skin a dark bronze, much like my own. \n\nAfter gathering the items that I requested, she placed them in my reusable bag and took the cash I was handing her. \"Hablas espa\u00f1ol?\" she inquired. \n\nI chewed my lip before I grinned,\"Si, pequeno, lo siento,\" I apologized honestly, letting her know I did but only a little. She handed me my change and my bag. We chatted amicably about the weather and the city. \"Gracias,\" I said before leaving the stand. You might be surprised how pleasant it is to have a simple conversation in one's first language. It's the little things, I tell you. I left the area, heading toward the sidewalk to make my way home. I struggled with the weight of my bags, lifting the load onto my shoulder. My Latina heritage is obvious and the interaction at the farmer's market was not the first instance of someone thinking I knew fluent Spanish. Let me explain a little.\n\nMy mother came to the states when she was pregnant with me, fleeing from the tiny town of Jecori in the Mexican state of Sorono. She never got into much detail of the actual journey to America but did tell me it was hot. She eventually admitted to me that she wasn't pregnant when she began the trip, which always makes me cringe when I think about it. As first generation, she struggled to find proper prenatal care and I feel fortunate to be alive as she was only seventeen when she had me. \n\nShe made her way to California, crossing the border illegally and obtaining work where she could until I came along. Finding childcare is difficult in general but with the added issue of being in the country illegally with absolutely no familial support, my mom had to rely on the assistance of other migrant workers she had become close to. She was able to continue working after I was born and support our two-person family, traveling up and down the west coast for jobs. \n\nIt wasn't a bad childhood; she loved me very much, taught me good morals and always put my wellbeing first. We were reasonably happy until she was detained for being unable to prove her citizenship. That's when shit hit the fan.\n\n\"Hey!\" a voice pulled me from my reverie as I hurried through the crosswalk. Once I reached the curb, I turned to see a woman following me. She was absolutely stunning, long blond hair shining in the August sun, her alabaster skin stark against the little royal blue sundress that hugged her body. She held my wallet in her hand. \n\n\"Oops, thank you so much,\" I said as she approached me, handing me my wallet. The closer she got, the more beautiful she became. Her hair held little kinks, the wavy ash locks laying over her shoulders and her emerald eyes catching mine. A splattering of dark freckles lay on her soft cheeks and petite nose. Her fingers brushed mine when I took it, and my breath hitched as I felt a strange tingling where her skin had touched mine. Her eyes widened for a brief moment before she relaxed and smiled, causing me to wonder if she'd felt the same thing.\n\n\"No problem. I saw you drop it at the farm stand.\" Once I had my wallet, she gave me a little wave and took off down the street, her curvaceous hips swaying. Meh, she was probably straight anyway. \n\nI headed in the opposite direction toward the house. It sat on a slanted road facing downtown and the three bedroom home was comfortable. When I stepped inside, one of my two roommates sat on the couch, hands thrumming the controller of his video game console. \"Sup?\" he offered, his brown eyes unmoving from the screen in front of him. \n\nI shrugged, even though he couldn't see it because he was too engrossed in his game. \"Nothing got some veggies and crap from the market.\" I headed to the kitchen, putting the produce in the fridge before grabbing a soda and plopping down beside my roommate. \n\nI tried to watch whatever Alejandro was playing but I couldn't figure out what the hell was going on. \"What's the point of this?\" I asked. \n\nHis dark brows pulled together. \"I shoot the bad guys,\" he explained. \"You going to the club later?\" \n\nI knew he was referring to the gay club down the street that I had yet to check out. It had been roughly four months since we'd been living together and I'd grown used to his prolonged screen time, with work and play. Plus, he invited a lot of men to his place. I had a copious amount of ear plugs in my bedside table. I'm pretty sure his sister took the bottom floor room for more than the private bathroom. \"I guess I could check it out.\" \n\nHe finally took his eyes off the game and looked at me, waggling his brown eyebrows. \"There'll be a lot of hot chicas,\" he sang, nudging me with his elbow. Alejandro Flores and I had more in common than just our sexuality and the color of our skin; he and his sister, Ana, were second generation from El Salvador, their parents seeking refuge from the violent street gangs flooding their city and a corrupt government.\n\nWhen I turned eighteen, I ditched my latest foster family, heading up to Seattle, Washington from Long Beach, California. \n\nBeing only in my junior year of high school, I reenrolled myself in one of the public schools in the city. I lived in a shelter for some time until I found work and an amazing program that offered housing assistance for teens such as I was. I met Alejandro and his older sister when I started school, the three of us quickly becoming friends due to our shared experiences.\n\nThey were the closest thing to family I had aside from the few migrant workers in California who helped me cope after my mother's passing. Well, they tried. I wouldn't allow the help and suffered for it. I'll get back to that sob story later. Some time before I graduated high school, I was offered a scholarship for being a second generation Mexican-American, with the added bonus of being a former foster child. \n\nIt was enough to cover my schooling, which is a lot more than most can say and I chose physical education. It came as a surprise due to my few brushes with the law and for being a general fuck up. I guess the organization saw something in me, a glimmer of hope and promise. Whatever it was, I was more than thankful to have the opportunity.\n\nI slapped the arm of the couch as I stood. \"I guess I'll go take a shower if I'm going to tag along with you. Can't be smelling like a sweaty mongrel if I want to find myself a lovely lady to dance with.\"\n\n\"I hear some people like that smell,\" he snorted, eyes back on the video game in from of him. \n\nI chuckled as I walked up the stairs to my bedroom. It was so nice feeling a part of a family. Our little trio was close knit and I loved Alejandro and Ana as if they were truly my siblings. It had been almost fifteen years since my mother passed and I finally felt like I had a true family again. Alejandro specialized in computer informatics while his sister worked at the high school. She actually recommended me and helped me land the job. I had been a substitute teacher floating around in Seattle, having trouble finding a steady position. \n\nIt was tiresome, as all I wanted in that point in my life was a little predictability. I moved around enough in the first part of my life and I was ready to have a stable job at the very least. Ana found me such a job, a spot opening and she helped me secure that position.\n\nI stripped, eager to wash the sweat off my body from my ritual morning run and the overall grim from the heat outside. The shower washed over me, easing the muscles sore from my run and the hike I took the day prior. I washed my body hastily before stepping out and wrapping in a towel. I headed to my bedroom, my mind on what I was going to wear to the club.\n\n\"You going like that?\" Alejandro asked, his shoulder leaning against the threshold of my bedroom door.\n\n\"Uh, real funny Al. Now, get out so I can get dressed.\" I shooed him from my doorway, closing it before turning to the closet. I grabbed some clothes and tossed them on my bed, throwing my towel over the back of the computer chair in my room. \n\nThe faint puckered scars on my abdomen weren't as ugly as they had been, the knife marks still a reminder of my reckless behavior as a teen. The air from the oscillating fan ran over my flesh, causing my dark nipples to tighten and little goosebumps to spread across my skin as I pulled on my bra, adjusting the straps. \n\nI thought about skipping out on the bra, as I had one thing in mind when I decided to go to the club: I wanted to spend the night with a beautiful woman. For some reason, I thought back to the blond and my wallet and the rush of lust I felt when those green eyes met my own. It was such a strange sensation, not quite static shock but perhaps describing it as pins and needles would be more accurate. \n\nI felt my nipples stiffen against my bra as I thought about it and sighed. Shit, I needed to get laid. Admittedly, I had a thing for blondes, originating with a beautiful surf Goddess in shining armor who saved me from potentially beating up a racist asshole. I wondered if this was the reason I couldn't get the stranger out of my head. I remember it being one of the integral moments that lead me to getting my ass in gear and taking what life offered me. Which, I eventually realized was a lot. \n\nIt was a few months short of my eighteenth birthday and I was biding my time before I could take off from my latest foster family. They weren't the worst, but I was over it by that point, my brush with death after a fight I picked sobering me to the realities of life and my own expectations. The sun was warm over the beach, the sand hot on my bare feet as I walked near the sidewalk, cherishing the sounds of the ocean. I found a spot by a palm tree and eased down in the scorching sand, watching the water push onto the shore and recede back. \n\nA roller skater passed behind me on the sidewalk, a distant conversation mixing with the sounds of a seagull's melody and the waves. I looked up, the leaves of a palm tree raking the clear blue sky as a breeze pressed off the water. My short crop of brown hair was tousled by the wind, the feeling reminding me of when my mother ruffled it when she hugged me. \n\nA lone surfer rode a small wave, flopping off the board and quickly being submerged in the water. It was hypnotizing and the sounds and scenery lulled me into a false meditation. \n\nI closed my eyes, taking a lung full of the salty air and smiling to myself. I only had three more months until I could escape from the shifting existence I inhabited. My mother had a mantra she used to say when life was becoming too unpredictable and she was fearful. \"Al hombre osado, la foruna le da la mano,\" I whispered to myself. It meant that ones who act boldly are more likely to succeed. To the daring man, fortune gives him the hand. I repeated it four times, such as my mother had when she was overthinking a decision to move on to another job. It calmed me in times of distress. I wasn't particularly distressed but the future concerned me. When I did reach legal adulthood, where the hell was I going to go? I knew I didn't want to stay in California. I'd only ever been to the three west coast states with my mother and I couldn't see myself staying in the area if I didn't have to. I repeated my mantra, brows furrowed and lips a tight line as I searched myself for what I wanted. \n\n\"We speak English here in America. Why don't you go back to Mexico?\" a gruff voice shouted at me, snapping me from my false serenity. I looked up to see the owner of the voice, a pasty boy of roughly sixteen standing over me, another equally scrawny boy behind him. \n\n\"Excuse me?\" I asked, bringing my hand up to shield my eyes from the sun. I stood and brushed the sand from my shorts. I was actually surprised he didn't say 'Murica and I tried not to chuckle at my internal thought. \n\nScrawny boy #1 took a step back and puffed out his chest. \"You heard me. If you want to speak Spanish, you should get the hell out of here and go back to Mexico.\" \n\nI crinkled my face at him. \"I was born in San Diego. I've never even been to Mexico,\" I averred while gritting my teeth, my hand clenching into a fist at my side. I was sick and tired of being judged for existing and I was ready to fuck this kid up, regardless if it lead to jail time or not. Fighting had always been the answer at that point in my life and, even after landing myself in the hospital with the last fight I instigated, I wasn't ready to back down from one with the idiot in front of me. \n\nAlthough I was quite petite in stature, I could still fuck somebody up. Cowering in the face of adversary had done nothing for me in the past. I shifted a foot back, readying myself to throw a nose breaking strike to his face upon his response. \n\nThat is, until my eyes caught sight of a Goddess emerging from the water behind Scrawny Boys #1 and #2. She was tall, having at least four inches on me and her blue bikini showcased tight muscles expanding over her entire torso and everywhere else for that matter. Her long blond dreadlocks showered the sand in seawater as she shook her head and she tucked her surfboard under her arm as she strode toward us. \n\n\"Doesn't matter where you were born,\" Scrawny Boy #2 said, causing me to rip my gaze away from the woman just in time to see him spit in the sand. How attractive. I tightened my fist again and was about to throw my punch when she spoke. \n\n\"Leave her alone, shit heads,\" the woman with the surfboard called as she approached, eyeing the two guys. I tried to keep myself from drooling as I took in her appearance. Beads of water cascaded over her taut abdomen and her thighs. The muscles in the arm holding her surfboard rippled as she shoved the tip of her board into the sand, hand meeting her hip. Water droplets ran down her elegant neck, threading down between the slight cleavage of her perk breasts. \n\n\"Go to hell,\" Scrawny Boy #1 snapped. \n\nI lifted my eyes from her chest, mentally berating myself for being such a perv. Warm hazel eyes met mine and I saw her lips curl slightly before she set her gaze back on the assholes harassing me. Her skin held a beautiful bronze tan that couldn't have been solely from the sun and I was transfixed by her beauty, the tiny stud in her nose shimmering in the sunlight. \"Hey, Tommy, you little twat waffle, shouldn't you be home washing your mama's colostomy bag? I thought Thursdays were your day,\" the surf Goddess retorted. \n\nScrawny boy #1 scowled. \"Fuck you, Jules.\"\n\nShe grinned, a blond eyebrow lifting with arrogance. \"Oh, you wish, Tommy. You wish. Now get the fuck out of here.\" Scrawny boys took off, muttering something obscene under their breaths. \n\nOnce they were trudging down the sidewalk, I couldn't help but laugh at her insult. \"Twat waffle?\" \n\nShe looked at me and smirked with a shrug of her shoulders. \"It struck a chord, didn't it? I'm Juliet. I swear most people around here are decent, with the exception of those fuckers,\" she claimed, extending her hand. \n\nI reached out and shook her offered hand. \n\n\"Thanks. I'm Jo. Honestly, I was about to kick his ass.\" Her hand held mine a little longer than normal handshakes permitted but, fuck, I wasn't complaining. She was gorgeous and could probably tell I was a few months short of not being jailbait when she finally let go. Juliet tugged the surfboard from its spot it in the sand and tucked it beneath her arm again. \n\n\"It's nice to meet you. Those pendejos aren't worth it. Tommy is a little shit head who likes to talk a lot of trash and wouldn't last two seconds in a real fight.\" She smiled and I couldn't stop staring at her. \"Sorry, but I've got to run. If you ever want some surfing lessons, I come down here at least four times a week. Or, if you just want some tips on coming up with insults on the fly, that works too. Hasta luego, peque\u00f1a,\" she said with a wink before she walked up the sidewalk toward the parking lot. \n\nShortly after she left, I plopped back down in the sand and realized how grateful I was for her intervening. If she hadn't, I know I would've kicked the 'twat waffle's' ass and, with such a short time before I turned eighteen, probably be tried as an adult if he called the cops. I sighed deeply, sitting back in the warm sand as the sun began its descent. I thought about all the places my mom and I lived and finally realized Washington state was where we were happiest. She made the best money and she was always lighthearted up in the Pacific Northwest. Three months later, I hopped a train with cash I'd saved up from my various jobs and headed to the emerald city.\n\nAs I thought about the cute blond who gave me my wallet, I wished I could thank Juliet for saving me from making a monumental mistake. Those idiots weren't worth me going to jail for, even though I would've enjoyed kicking their asses. It wouldn't cure them of their intolerance toward Spanish speakers and immigrants in general. That had to happen on a different level or platform. Not the other end of my fist. In hindsight, I should've went back to that beach to find her and thank her but I was too chicken shit back then. I had the confidence to pick a fight with a grown man but not to ask a pretty girl on a date. That confidence came later. \n\nI threw on a cute band tee that hugged my breasts and a pair of Bermuda shorts before heading to the bathroom to do my hair. I stared into the mirror as I styled my short chestnut hair into a cute little faux hawk. \"Jo, you ready?\" I heard Alejandro call from down the hall. \n\n\"Dude, it's not even six o'clock yet,\" I called out. I could hear him talking on the phone as he made his way up the stairs. \n\n\"We're stopping to have dinner with Ana at her majesty's favorite vegan place,\" he whispered, covering the receiver of the phone with his hand. I nodded and turned back to the mirror, fixing an unruly hair before washing the styling product off my hands.\n\n**\n\nI was a far cry from where I'd once been in my life, shortly after my mother was detained. My recollection of the day she didn't come home is a little fuzzy but I think I was about eleven years old. I say 'home' loosely. We never truly had a home. School had been rough that day and we'd only been in Anaheim, California for maybe a month. My Mama was working for a well off family as a housekeeper and she was making a decent living, enough that we could afford a motel room to ourselves. I caught the bus from downtown and when I got back to our room, she was gone. I waited, hoping maybe she just picked up more hours or had missed her bus. It was the next morning when child protective services came banging on the door. ",
        "My mama had tried to switch my schools after work due to an incident that nearly landed me in the hospital but instead of assisting her, the school reported us. CDSS investigated, finding she had come to the country illegally and had no record of her. \n\nShe hadn't attempted to apply for citizenship. She'd been too fearful of the repercussions she could face if she had and this lead her to never try. The thought of losing me in the process of gaining citizenship scared the shit out of her and rightfully so. I don't blame her for the actions she took in hopes of keeping us together. \n\nIt was safer for us to travel frequently to avoid any suspicion, taking buses up and down the coast to find odd jobs and seasonal work. Unfortunately, this only lasted a decade before she was detained. As she sat in the detention center awaiting her trial, she suffered a massive heart attack while I was already on to my second foster home in two months. The first couple took me to visit her and that was the last time I saw her.\n\nThings went down hill from there. As I said, shit hit the fan. I bounced from foster home to foster home. I started isolating myself more with each family, receding within my own mind to the point of being unapproachable. \n\nToughening up was my only option in my revolving world and I turned into a risk taking idiot. I made poor choices, got into way too many fights. A few stays in juvie didn't clear my head up and I bet if I had been male, I would've gotten worse sentences. The one fight that sticks out in my brain was when I was sixteen years old. I like to think of it as a turning point. It was probably the worst one I'd gotten myself into and, yes, I asked for it. \n\nI was working at a tiny convenient store in San Bernardino, the owner turning a blind eye to the fact that I was only sixteen. Shit, I didn't care. I was making decent cash under the table after school and weekends. Plus, it got me away from the strange group home I was residing in. It was a Friday night, and I didn't usually work as late due to the owner being concerned for my safety. Ironic. \n\nThere'd been a call out and I couldn't pass up extra hours. Around one in the morning, a handful of guys came in, all three of them inebriated to some extent. They fucked around, throwing bags of chips and packages of cookies at each other. I laughed along with them, figuring I'd just clean up when they left before the next shift came in. \n\nThey came up to the counter, arms full of random snacks. I was surprised they weren't buying more alcohol. I rang up their things, the tallest guy eyeing me the entire time. I knew it was probably due to my appearance and his uncouth comment was expected. His buddy handed me the total and I gathered their change. \n\nWhen I handed the cash back to his friend, the tallest narrowed his eyes at me. \"Fucking dyke,\" he muttered under his breath. I should've just rolled my eyes and ignored the comment. That's what a normal person would do, what I would do now. However, I was a girl mad at the world around me, finding any way possible to pick a fight so I could feel like I had a tiny semblance of control. \n\n\"The fuck you just call me?\" I asked, meeting his eyes.\n\n\"You heard me,\" he spat. \n\nAt this point, I should've just let it go. But, I didn't. \"What's your problem? Some butch come and steal your girl? It's not our fault if you've got stamina problems and we can go on night long.\" \n\nHis face reddened with rage. \"You little bitch. Think you could take me?\" His two friends were trying to talk him down, but he wasn't listening. We were eye locked and I knew I was pushing it. \n\nBut, as cocky as I was, I didn't think he'd fight me right there in the store. Yeah, I'm a fucking idiot. \"What are you going do, puta? You afraid this little dyke is going to fuck you up in a fight?\" I rounded the counter and put myself in front of him. Bad idea. Although he was being an asshole, he had at least three years and a foot on me. I didn't give a shit and I should have. I puffed out my chest, stepping closer yet. His fist met my face and I grabbed hold of the counter. I fought back, getting a few punches and a knee to his crouch. That got him distracted for a moment, his knees buckling, and his waist bent. I didn't anticipate him pulling a knife out of his pocket. Cheater.\n\nI don't know what I would've done if I hadn't been on state insurance due to being a foster kid. I'd probably still be paying the hospital bill to this day. A week in the hospital and a potential trial had the group home I was staying with at the time hastily calling my social worker. I was sent to another foster family over in Long Beach. The family was nice, and I feel fortunate I left the system on a decent note even though I felt bad for dipping out on them. \n\n**\n\nWe had dinner with Ana, her and I discussing the upcoming school year and what my expectations were. I was excited to start new, a place to live with people I saw as family and a solid job. It was more than I could ask for. I thanked her again before Al and I headed out into the warm evening. \n\nThe club was lit, which, according to Alejandro, was the norm. Bodies meshed through the dance floor, lights overhead flickering and music blaring through numerous speakers throughout. It was like any gay club I'd gone to before and I had my eyes scanning the crowd. I headed to the bar, ordering an IPA. The bartender handed me my beer and I sighed, taking in the bitter drink. \n\nA chuckle to my right had me looking up, meeting green eyes. \"IPAs are the hipster's pumpkin spice latte,\" she said, her voice rich and flowery. Can a voice be flowery? Well, hers sure was. Loose blonde curls lay over her bare shoulders, pale skin exposed by her strapless dress. She took her drink from the bartender and met my eyes again. \n\n\"I haven't heard that one before,\" I noted. She looked familiar and it hit me from where. \"Hey, you're the one who found my wallet.\"\n\nShe nodded, the movement sensual as she brought a martini glass to her lips. Damn, she was beautiful and I was second guessing my assumption of her sexuality. \"Rachel. And you ought to be more careful with your wallet.\"\n\n\"I'll keep that in mind, Rachel,\" I said, taking a long pull from my beer bottle. She was the epitome of sexy, her tresses hanging down her back, the short black dress she wore in lieu of the sundress from that afternoon coming down to barely cover her thighs. Little patches of freckles were sprinkled over her bare shoulders, her forearms, her chest down to where the swell of her breasts was concealed by the dark material of her dress. \n\n\"What do they call you?\" she finally asked, reaching over and placing her hand on my thigh. The brazen gesture made my heart quicken and I couldn't deny the sudden arousal threatening to consume me.\n\nI chuckled, swallowing another sip of beer. \"A lot of things, most being inappropriate in the presence of someone so beautiful. You can call me Jo.\" \n\nShe threw me an incredulous look before turning to look at the dance floor. \"Okay, Jo, do you want to dance or should we just skip the preamble and get out of here?\"\n\nShe was sexy and got right to the point. \"Either is fine with me,\" I admitted, winking at her. Her pink lips curled and she finished her drink in one sip. I took that as my cue to down my beer or I'd be leaving it unfinished. She stood, fingers trailing over my thigh, one eyebrow quirking before she removed her hand and started toward the door. I threw a couple bills down on the bar and followed her through the crowd. \n\nI loved Bellingham, its city feel without the overwhelming chaos that followed. Night had fallen but the summer warmth still permeated the air and the alleyway smelled faintly of fried foods from the food truck down a ways. \n\nI followed Rachel, flanking her side. Her hips swayed as she walked and I wasn't sure if she did that for my sake or if that's just how she carried herself. Either way, my eyes were on her beautifully round backside and the back of her thighs, ridged with strong muscles. I decided she was a runner or maybe she did spin because people don't just acquire legs like that by sitting at a desk. \n\nTentatively, I touched her back with my palm and she stopped, whipping around and capturing my lips with hers. It was the most intense kiss I'd ever had and my body was thrumming with more than just arousal. She pressed me against the wall of a closed shop, her hands circling my hips and grabbing my ass. She was making it obvious she didn't need any wooing and holy crap was she a good kisser. She pulled back and examined my face, eyes heavy lidded and lips pursed. Her eyes looked around the street and there seemed to be a flash of indecision that passed over her face before she bit her lower lip. \"Come on,\" she said, turning on her heel and taking my hand.\n\nWe made it quickly on foot, scaling the stairs at record speed as we headed up to her door, the building only holding four units. It was set facing the water, the view spectacular and, I'm sure, expensive. Calling her condo extravagant would be a fucking understatement. It was enormous, so much so I can hardly call it an 'apartment' or even a 'condo.' The door opened into a cavernous living room, complete with French doors leading onto an elegant balcony over looking Bellingham Bay. \n\nThe kitchen was set off to the left side, granite countertops(of course), stainless steel appliances(of course), and a wine refrigerator. Who the hell was I about to have a one nighter with? \"Nice place,\" I muttered because I didn't know what else to say. I'd been in expensive houses before when my mother did housekeeping and I had to tag along and later when I worked with her friend, another migrant worker. Her apartment easily compared to those in LA and Burbank. \n\n\"Thank you.\"\n\nAlthough the home was well furnished and beautifully decorated, it felt slightly hallow. There was a personal touch that it lacked and I could feel it as I noticed the decorative floral arrangements, modern prints on the walls, generic book titles on the built in wall bookshelf. I let my finger trail over the bindings of the books as I heard her pour herself a glass of wine. A book caught my eye and I slipped it from the shelf with a chuckle. \n\nAlthough I had just met her, she hardly seemed like one to read romance novels, the rest being what one would expect from a lavish home: Faulkner, Lee, Austen, Dickens, Plath. \"You read Radclyffe?\"\n\nShe turned, a grin gracing her lips and she ignored my question. \"Want something to drink?\" I swear I saw a hint of red in her pale cheeks as she turned back to her task. \n\n\"Please,\" I answered as I put the book back in its spot on the bottom shelf next to a compilation of Shakespeare. I turned, taking in the massive entertainment center. Flat screen television, surround sound, Blu-ray player. I made my way to the French doors. \"May I?\" I asked, looking over to her and she nodded. I opened the doors and stepped out onto the concrete patio. I looked out over the balcony, taking in the sight of the moon hanging low in the sky above the bay. \n\nIt was gorgeous and I sighed. \"This is quite the view you've got,\" I offered as I heard her step outside. Her hand touched my back, fingers running up my spine sending a shiver through me. She reached her other hand around, passing me a beer bottle. IPA. And she had the nerve to give me crap about my beer choice. \"Thanks,\" I said, taking the beer from her. She sidled up beside me, arms dangling over the railing. \n\nShe was silent, her face poised toward the cloudless night sky, a soft smile on her lips. I took my fingers and gently pulled her hair out of the way of her neck, pushing it to flow down her back. Bringing my lips to her neck, I kissed the curve, running my fingers through her hair. She cooed so I darted my tongue over the area, her coo transforming into a quiet moan. \"Before we keep going, I don't do breakfast,\" she whispered, as if that simple statement contained a detailed explanation of her intentions. \n\n\"Okay? We can have brunch,\" I whispered against her neck before nibbling. \n\nShe took a sharp inhale of breath before she could continue with an explanation. \"I'm not fond of awkward morning afters. I don't do relationships,\" she sighed. I ran my hand down her back, moving closer to her, bringing my hip to hers. I planted kisses up her jaw before I met her lips. She was watching me quizzically, her wine glass still cupped in her hand. \"Is that all right?\"\n\nI shrugged. \"Sure,\" I said, because it didn't matter all that much to me whether or not we met more than once. To be honest, after I said it, I realized it did matter. It mattered a lot. I wasn't sure why that was but there was no way I wanted it to end after one night. I figured it was the strange feeling I got when we made eye contact. However, one wonderful night together is better than none at all. Better to have loved and lost...you get the point. She kissed me fiercely, her tongue tracing my lips until I parted my own. She tasted like the wine she had been sipping and I drank her in. \n\n\"You should strip for me,\" she breathed against my lips. I chuckled and took a step back, placing my beer on the patio table with a soft clink. \n\n\"Oh, yeah? Should I?\" I teased, my hands on the hem of my shirt. Her green eyes caught the light coming from inside her living room, an eyebrow lifting as I pulled my shirt up, revealing my slim waist. \n\n\"Keep going,\" she said.\n\n\"Isn't there usually music when someone strips?\" I tried to lay on the smolder, quirking an eyebrow and my lips lifting into a crooked smile. My hands halted their progress and she sighed. I watched her saunter back inside and fiddle with the stereo before a local radio station started in. I smirked at her when she made her way back outside, arms over her chest and a smile on her face. \"That's better,\" I approved, pulling my shirt up and over my head. I threw it onto a lounge chair beside the patio table and I heard her gasp. \n\nI thought the lighting would conceal the marks on my belly from my last abysmal fight but, as she stepped forward and touched my skin, I figured she'd seen them. She caressed my abdomen gently and she brought her lips to mine. It wasn't like I was embarrassed by the scarring, but I hated to have to explain where I'd gotten it. Way to be a buzzkill during sex. Talk about cock block, eh, clit block, rather.\n\nSomehow, this was relayed to Rachel because she didn't say anything about them, her palms moving away from the gnarled skin to my back, fingers finding and unclasping my bra. I closed my eyes as she slipped the straps off my shoulders, her hands cupping my naked breasts. Our kiss deepened, her tongue lashing out at mine while she pinched a nipple. I wrapped my arms around her, finding the zipper of her dress and easing it down. \n\nHer dress fluttered to the floor of the patio and I ran my hands down her naked back, grabbing her ass. She pulled back, her breath already coming fast. \"Let's move this to the bedroom before my neighbors call the police,\" she murmured. I followed her inside and this time I knew she was swaying those hips for my appreciation. Her little black panties matched her strapless black bra and I felt my mouth water when she turned, shooting me a rueful grin. \n\nDown a long hall, we passed three other doors by the time we reached her bedroom. I told you, the apartment could hardly be considered such. Her bedroom was much like the rest of her home, decorated expensively with class and lacking a personal touch. The bedspread matched the pillows and the pillows matched the curtains and the carpet matched the armchair in the corner. It was like one of those expensive hotel rooms you see in catalogues. She slipped off her flats and crawled into the bed above the blankets, crossing her arms beneath her head as she watched me. \n\n\"Are you coming?\" she inquired innocently although her eyes were on my breasts.\n\nI slid my shorts down, kicked off my sneakers and climbed into the bed, bringing my body over hers. She moaned when my thigh made contact with her core, my lips claiming hers once more. I bit her lip, nibbled her jaw, kissed her neck. My hands reached beneath her in search for her bra clasp and she lifted herself to assist in my efforts. The bra out of the way, I kissed down her chest, capturing a pale, pink nipple in my mouth. A hand grasped my hair, her legs wiggling beneath me. I twirled my tongue over its pebbled surface and her breath hitched, her hips rising against my thigh. I ran my hands down her bare legs, gripping her tight thighs. \n\nI peered up to find her watching me, her lips parted and cheeks flushed. I let go of her nipple with a soft pop. \n\n\"I want that tongue somewhere else,\" she breathed. She really didn't mess around. She knew what she wanted and didn't mind saying so. I grinned, shimming myself lower and grabbing the edge of her panties. I pulled them down, taking in the scent of her arousal and noting the wetness of the material as I tossed them to the end of the bed. I gazed down at her, her clit looking like a pearl as it peeked from beneath its hood, puffy lips glistening with her need, swollen with her desire. I met her eyes again. She nodded, her lids heavy and her chest heaving slightly. I lowered my mouth, kissing her mound, dragging my fingers over her thighs.\n\nI heard her sigh from above and I flickered my eyes to her. Hers were closed, her head back on the pillow and hands at her sides, grasping the blankets beneath us. I pushed her legs open wider with my hands, my fingers barely teasing her blonde curls. I flattened my tongue and ran it from the bottom of her slit to the top, savoring the velvety feeling of her lips and the soft round nub of her clit. She moaned, her thighs quivering at my tantalization and I did it again. The third time, I kept my tongue over her little bundle of nerves, drawing a circle around it before swiping back and forth. I brought a finger to her, parting her lips and pushing gently into her. She groaned, her back arching and head thrashing. \n\nI peered up at her again as my tongue continued its task. Her hands were over her breasts, her fingers tweaking her own nipples and her teeth biting her lower lip. Fuck, the sight of her had me upping my game, flooding me with a drowning arousal. I slipped a second digit into her warmth and the moan it elicited was long and throaty. \"Oh, my God,\" she whimpered, her hips bucking, meeting each of the thrusts of my fingers. \"Don't stop, Jo, don't stop,\" she panted, the muscles tightening and her breath becoming sporadic. \n\nI quickened my tongue over her clit and her body went unhinged. Her hips were bucking, her hands grabbing my hair and pressing me to her need as she rode the orgasm that stole her breath. She cried out and I kind of felt bad for her neighbors, the noise loud and washing me in a suffocating desire. I relished in her pleasure, my mouth greedily taking in her nectar. \n\nThe grip in my hair relaxed and I lifted my head, easing my fingers from her core. Her eyes were still shut, her head laying to the side and her breathing regulated. I wiggled my way up to her, wrapping my arms around her limp body. She turned her head to me, eyes fluttering open and she searched my face. \"I don't think I've ever come that fast before,\" she whispered. I blinked, a grin on my face at the verbal ego stroke. Her hands captured my face and she pulled me to her, kissing me deeply, sampling her own taste from my mouth. It was unbelievably sexy. Still kissing me, one of her hands slid down my body, brushing my breasts before grazing my thighs. \n\nI helped her remove my boy shorts, her nails scratching my skin as she pulled them down. I shuddered under her light caress, her fingers touching the trimmed hair of my mound. My breath caught in my throat as she found my clit. Her mouth found a nipple and she sucked it into the damp warmth, her tongue flickering over it. She climbed over top of me, her hand pushing my legs apart to make room for her.",
        "I was soaked from my consumption of her lust and my eyes closed as she dipped into me. I groaned, my teeth clenching as she gently eased out and pushed back in. Her finger curled, pressing against the overly sensitive flesh inside of me and I groaned, pleasure dizzying me. Teeth nibbled on my nipple and I sighed, the combined sensations taking my pleasure higher and higher. She let go of my breast and found my mouth again, her tongue seeking entrance. Her thumb replaced her index finger on my clit, circling the tiny bud so quickly, my legs shook. She pumped faster, our kiss being broken by my rapid breathing and soft groans. I could feel myself cresting, my body reaching the peak already. \n\nMy hips undulated, lifting as she added a second digit to my tightness, effectively filling me. \"Fuck,\" I muttered, the muscles in my legs taut, the sensations causing my body to become rigid. She quickened her speed, following the cues my body was giving her, my pussy tightening and my breath coming faster.\n\nAnd then it hit me. \"Oh, fuck, oh fuck!\" I screamed, my eyes squeezing shut. Let me just tell you, I was not a moaner, let alone a screamer. I like to think I used to take my orgasms in a reserved, calm manner, allowing the pleasure to flow through me with peace and serenity. Not with Rachel. My body erupted, a fire exploding within me, spitting flames and whatever else. \"Oh baby,\" I moaned, my head back, dizziness washing over me as the ecstasy forced the air from my lungs. My legs wrapped around her and my nails raked her back as I clung to her. \n\n\"Come for me again, Jo,\" she murmured, her lips brushing my neck and I groaned at the sensuality of her tone and her hot breath against my skin. She continued to pump into my need, her thumb drawing circles over my clit and her teeth nipping my neck. Just as I thought my body was ready to settle, another grand crescendo stole my breath and left me panting, my hips hovering in the air as she continued her efforts. My body thrashed, and I writhed beneath her, my nails probably drawing blood on the skin of her back as she relentlessly took me to a height I'd never reached before.\n\nWhen I opened my eyes, she was watching me, her brows furrowed and her lips in a frown. She was leaning on her elbow looking down at me with unmasked concern. There was a blanket over us and I felt disoriented as I blinked several times. \"Are you okay?\" she whispered, her fingers brushing my face.\n\nI nodded, reaching up to kiss her. \"I think so.\"\n\n\"You can stay the night, if you'd like,\" she said quietly. I didn't say anything as I wrapped my arms around her. She snuggled into me and I breathed in her hair, the scent of strawberries filling me. We slept for a while holding each other. When I opened my eyes again, the sun was just beginning to stream in from the east facing window of her bedroom. I was on my back and her head was laying on my chest, one of her arms around my waist in a protective clutch. The feeling of home fleetingly took over me and a tear suddenly slipped down my face as I recalled a strange dream from the night before. \n\nI couldn't remember it but it could feel it. It felt like home. \n\nWhat the fuck? Protective clutch? Home? Who was I kidding? She told me from the get go she didn't do relationships. Even with her offer to spend the night, I knew better than to stay and allow her to wake next to me. \n\nNo matter how amazing our night might have been and how strong of a connection I felt with her, she made it clear the night before what her wishes were. I carefully lifted her arm, slipping out of the bed. She rolled around, snuggling the blanket. I threw my clothes on and grabbed my shoes. I stood in the doorway of her bedroom, watching the rise and fall of her chest under the blankets I covered her with before I crawled from the bed. Her blonde tresses spilled over her pillow and her cheeks were tinged pink. I didn't want to leave, even as I turned and headed for the door, my chest hurt and my eyes stung. \n\nI shook the feelings away the best I could as I slipped out the door and commenced my walk of shame.\n\n****\n\n*Bainbridge Island, Washington \u2014 June 1939*\n\nThe smell of ripened strawberries filled the air as Keiko Takeda knelt amongst the plants, plucking the fruit and placing them gently in the basket that dangled over her arm. The sun caused the aroma to be nearly pungent but Keiko was used to it. Growing up on the strawberry farm located on Bainbridge Island, a ferry ride away from Seattle, Keiko was used to the busy time. She helped around the farm as much as possible, working beside the other berry pickers and encouraging her younger siblings to offer their aid. It was early, the morning song birds still flittering through the sky and the sun not yet pressing over them. The sound of the rickety milkman truck echoed up the driveway and Keiko started toward the house. \n\nHer mother was already on the porch, handing the milkman the empty wire basket but, this was no milkman. The woman who stood before Keiko's Mother was tall, chestnut locks running down her back and a vibrant smile on her face. Her pale cheeks were splattered with freckles and she used her hands while speaking to her mother. \n\nKeiko was awestruck by the instant attraction she felt toward the woman. \"Ah, Keiko, this is Abagail Smith. Her father has fallen ill and she'll be taking over his route while he recovers,\" her mother said before taking the milk inside.\n\nKeiko nodded to the woman, who in turn stuck her hand out to shake. \"It's nice to meet you, Keiko,\" she said, her voice soft. Her skin was silky and Keiko didn't want to let go of her hand, her crystal blue eyes watching Keiko with interest. Abagail bid her goodbye and headed to the milk truck. Keiko felt her heart flutter when Abagail's eyes met hers before she started the vehicle and headed back down the driveway.\n\n***\n\nRachel Emily Moore \u2014 Present Day\n\nStretching, I reached across the bed for the body I knew wouldn't be there. I explicitly told her I didn't want her there when I awoke, and I shouldn't have expected that to change just because I asked her to stay after the throes of our passion. She probably didn't believe my request, which I completely understood. I made it clear my intentions were just casual and anything beyond that was out of the question. \n\nYet, as I sat on the edge of my bed, I felt an overwhelming pang of loneliness that never accompanied a night with a lover. She had been different. I couldn't place it and I didn't know if it was even true but I felt something with her. I knew it wasn't just the strange trembling her touch invited but something deeper that I couldn't place. I stood and ambled to the kitchen, a fleeting thought that perhaps she was sitting at the island, sipping coffee and flipping through one of the random magazines strewn on the coffee table. \n\nI had a moment of contemplation after we left the club, opting to bring her back to my place without my usual reluctance. It wasn't something I did easily and my past sexual encounters had us either going to the woman's house or even a hotel. I liked my privacy and didn't want someone attempting to push my boundaries on not beginning a relationship. If they knew where I lived, it made things a little more challenging to end after one night. \n\nThat was what I was comfortable with and how it had always been. Relationships weren't my thing, I hadn't been lying about that. Nobody wanted to be with someone who was deep in the closet. A closet the size of a mansion. \n\nThat was before I met Jo. There was something about her that made my thoughts stall. And then there was the dream.\n\nI pulled on my robe and located my cell phone and despondently realized I hadn't gotten her number. She wasn't in the kitchen nor anywhere else in the condo. I made myself a cup of coffee and stood on the balcony, resigned and dejected. Self dejected. I'd done it to myself. Why was she different? The thought made me anxious as I looked out over the bay. I couldn't think about her being different. I didn't know anything about her. \n\nI wasn't even sure her name was Jo. I didn't know her last name, where she worked, if she worked. All I knew aside from the tantalizing feeling she elicited was she was drop dead gorgeous and gave me one hell of a one night stand. Then again to the thought of it being different. It wasn't the mind-blowing sex, it wasn't because she was the sexiest butch I'd ever lain eyes on, either. What was it? As I continued to plague myself with these questions, my cell phone began to ring. \n\n\"Hello?\"\n\n\"Sis!\" Kayla, my kid sister squealed into the phone. \n\n\"Hey, Kayla. What's up?\" I heard her let out an exacerbated sigh. \n\n\"Can I come hang out with you today? I just don't feel like sitting around the house by myself,\" she finally said. I chewed my lower lip, moving away from the balcony and into the living room.\n\n\"Okay,\" I said, rinsing my coffee cup and heading to my room to get dressed. Our mother wasn't the most maternal figure in history and our father was usually quite busy with work. My family owned a large branch of supermarkets and with that, my father had a lot of responsibility toward the company. Much more invested in the company than his family. The best way to describe my mother would be self righteous, cold, and rigid. I did what I could to help my kid sister have the maternal figure I craved as a teen. \"What do you want to do?\"\n\n\"Well, I don't know. Maybe we could go to the mall,\" she offered. \n\nI sighed, \"Okay.\"\n\nIt would be easy to blame my parents for the way I was but that would be a lazy excuse, even if it is the truth. I was the middle child of four perfect kids, according to anyone my mother tells. However, little did anyone know, there were five of us, but I'll get back to that. My oldest brother worked within the company, the golden child of the five of us. My father groveled at his feet and I found it pretty disgusting but that's just me. The brother beneath him in age was busy out of the country on a mission for the Church at the time and also the apple of my father's eye. Then came my other brother, then I was next in the age line and I refused to work for the company, for the simple fact that it was expected of me. I went on to school and became a respiratory therapist. I made decent money but, as cavalier and shallow as it sounds, I lived off my parents on top of my salary. It was the least they could offer me in lieu of actual love and support.\n\nI arrived at their million-dollar estate on the hill overlooking the city and the bay, their chosen residence until Kayla graduated high school. They had property all over the state of Washington and two homes in Oregon, where the store branched out, in case our father and my brother Mike needed to be down in that area. It was a massive six-bedroom house that they didn't need. Kayla was the youngest of us and she was entering her senior year of high school. They didn't need a giant house but they sure wanted it. I drove up to the keypad, tapping in the code before the gates allowed me to pass. The house was three stories high, a four-car garage attached by a porte-cochere. \n\nMy mother always loved exuberant and extravagance. I parked my car and headed up the polished cobble steps, entering the door without knocking. Everything from the real hardwood flooring to the crown molding was done with elegance and was expensive as hell. \n\nI rounded the corner of the living room and found my sister, Kayla sitting on the couch, head bent staring at her phone. It was silent in the space, the only noise being the massive grandfather clock ticking and her fingernails tapping against the glass screen of her smart phone. Her long blond hair, very much like my own, was held up in a tight ponytail, her freckled nose and cheeks devoid of make-up. \n\nIt drove my mother nuts that Kayla was a tomboy and didn't adhere to our mother's beauty expectations. Kayla and I looked remarkably similar aside from her holding our father's jawline and her possessing our mother's piercing blue eyes. \"Hey, are you ready to go?\" I asked in the quiet of the room. \n\nHer body jerked at the sound of my voice, phone dropping to the floor in her haste as she stood. When she met my eyes, she calmed briefly. \"Oh, it's just you. You scared the crap out of me, Rach,\" she whispered, picking up her phone.\n\nI found it odd for her to be so on edge and I watched her dubiously. \"I'm sorry. Are you ready?\" She nodded and followed me out to my little Toyota. I knew something amiss the moment she got in. My obnoxious, rowdy kid sister was suddenly demure, quiet, and reserved. I tried to lighten the mood with some music but she was busying texting, her thumbs running across her phone at the speed of light. \n\nWhen we finally got to the mall, she shifted back to her playful self. \"Do you want to get some school clothes?\" I asked as we entered the massive building. She nodded and did a silly skip and then she was back to normal. We perused numerous stores and she gleefully picked out a handful of outfits. \n\nMost of them were fairly androgynous, which she'd been leaning more toward in the last couple years. It drove our mother nuts and it was one of the reasons Kayla asked me to take her school clothes shopping. The cute little polo she held up to herself reminded me of Jo and the thought was disconcerting. Again, I didn't even know if Jo was her real name. I told her I didn't do relationships and had no way to contact her. What was I doing thinking about her? I had no right.\n\n\"What do you think?\" \n\n\"It's perfect.\" \n\nAs we exited the store and headed toward the food court, she bumped me with her elbow, shopping bags dangling from her arms. \"Thanks for this.\" We got some food and sat down, her depositing her five bags of new clothes onto an empty chair.\n\n\"You know, you could've gone through Mike's closet instead of spending three hundred bucks,\" I said. She kicked me beneath the table as she chuckled, her mouth full of food.\n\n\"You're such an ass!\" \n\n\"I was being serious, and don't let mom catch you talking like that,\" I chastised. She blushed and shoveled more food in her mouth, her eyes diverting down to the table. \n\nOur mother hadn't always been a stickler for cursing or a huge homophobe. She used to be a warm, loving woman with an abundance of patience. Shortly after Kayla was born, our mother was diagnosed with ovarian cancer. She had always been a churchgoer, but it definitely ballooned after the diagnosis, especially after she had a bad bout of sepsis and almost died. It was a slow-moving cancer and treatment worked, swiftly moving her into remission. This didn't halt her newfound relationship with God and she wanted our whole family to be as devout as she was. I was agreeable at first, but it was hard. \n\nEspecially after our youngest older brother came out of the closet. \n\n\"Well, if I don't get it out while we're hanging out, when will I have the chance? I mean, fuck, really?\" Kayla taunted me. I laughed wholeheartedly before finishing off my lunch. \n\nWe got into the car and I decided to take us down the scenic route of Chuckanut drive. I knew Kayla had something she wanted to talk about, but I couldn't have predicted what dominoed afterward. \n\nShe kicked her flip flops off and put her feet on the dash board. \"Get your feet off my dash, kid,\" I chuckled. \n\nShe reluctantly plopped them onto the floor. There was something eating away at her but I didn't want to press. I turned the stereo up louder and we both began to sing to whatever song was playing, laughing raucously. \n\nWhen the song cut to a commercial break, she cleared her throat and looked at me. \"Rach,\" she said. I could hear the trepidation in her tone and I glanced over at her. Her face was fearful, her brows furrowed and she was wringing her hands in her lap. \n\n\"What's up?\" I finally asked. I turned my attention back to the road and I heard her take a breath. \n\n\"I...sis, I like girls. I...I think I'm a lesbian.\" The air literally left my lungs and I nearly hit the brakes. I hesitated way too long and she croaked, \"I'm sorry. Please don't tell mom. Please, I'm so sorry.\"\n\nI eyed the closest dirt shoulder and pulled the car into a spot, slamming it in park and turning myself to face her. \"Don't you dare apologize for who you are, ever,\" I said, setting my gaze on her. Kayla's lip trembled, and tears were streaming down her cheeks as she nodded. The words I spoke were the words I needed someone to tell me. \n\n\"Okay,\" she mumbled before she broke out into a full sob. I took my sister in my arms and let her cry. \n\n\"You never have to apologize for something you have no control over. It doesn't make you a lesser person if you are. It doesn't make me love you less,\" I whispered, and she nodded, her head on my shoulder. \n\n\"I'm scared,\" she sniffled. \"I don't want to end up like...like,\" she stopped. \n\n\"Like Matt?\" I offered. She nodded again and pulled back from me, wiping her face on her arm. \n\n\"Kayla, I'm not going to tell anyone as it's not my secret to tell but you need to make that decision when you're ready. There is no rush, okay?\" I said gently. She nodded again. \n\n*\n\nLike I noted before, there were five of us. Mike was the oldest, then came Mitchell, then Matt, me, and then eleven years later came Kayla, the surprise. Matt and I only had eighteen months apart from each other and we were very close. Mike and Mitchell had a similar age difference, Mitchell having four years over Matt lead them to not really connect as much as he and I did. On some level, I soon realized our camaraderie may have had a more significant link than our birth order. \n\nAnyway, when our mother was diagnosed with cancer, she became extremely vocal in regard to things the church frowned upon, making snide comments about homosexuals being integrated into society. We lived on the outskirts of the city back then, in the small community of Lynden. I'd started to question my own sexuality when I hit my teen years. I knew I didn't find boys attractive and finally admitted to myself that I had a yearning for the same sex. Telling my mother or even my father was out of the question. I confided in Matt, late one night. I was probably fourteen. \n\nHe simply nodded, no words of encouragement or disgust. Just a nod and a swift digression.\n\nIt came as a shock when he took the plunge in front of our family one night two years later. It was a Saturday evening, our family gathering around the massive dining room table as we did once a week. Both Mitchell and Mike were there, making sure to be there even when they were both attending the University. Our dad said grace and we began to eat. Matt cleared his throat and scratched his short crop of blond hair. \"I have to say something.\" When everyone was looking his direction, he took a deep breath and raised his head. \"I'm gay,\" he announced. \n\nMy fork slipped from my hand, clattering onto the plate in front of me and I made eye contact with him. Mitchell lowered his glass of water and he watched our mother, waiting for her to say something. Our father continued to eat, as if Matt hadn't spoken at all. An eerie silence settled over the table. Even Kayla, who was only seven years old at the time, was quiet. \n\n\"Can you pass the broccoli, dear?\" my mother asked Mike and he did as she asked. We all continued to eat, the statement hanging in the void above the table. \n\nI saw Matt roll his eyes and push back from the table. \"I said 'I'm gay.'\"\n\nMy mother threw her napkin on the table. \"No son of mine is a deviant homosexual,\" she shouted. She got up and walked away. The rest of dinner was shrouded in the same stillness.\n\nMitchell and Mike left after helping me with the dishes. Our father went up to his office without a word in our direction and I still hadn't seen my mother since her outburst at the table. I helped Kayla get ready for bed and headed to my room, which was beside Matt's. I heard our parents in there with him, mean tones in hushed voices. Matt was crying, and the sound caused my chest to tighten as I passed his closed door. ",
        "Eventually, things quieted, and I crept down the hall, peeking my head in his bedroom. He was asleep, so I went back to my room and slept restlessly.\n\nThe next morning, my mother and father were already at the church with Kayla as I'd slept in. It was unusual for my mother not to rouse me to get going with her. I found Matt standing in the kitchen, his wheeled suitcase by his side, the suitcase he got hammy downed from Mitchell for our last vacation to Florida. \"Where are you going?\" I asked. \n\nHe ran his fingers through his hair and blew a breath out. \"I'm leaving.\"\n\n\"Why? Where?\"\n\nHe propped his elbow on the counter. \"Mom and Dad threatened to send me to some fucking de-gaying camp or they were going to kick me out.\" My jaw went slack and I had to sit on the tall stool beside the kitchen island. \n\n\"They can't do that.\"\n\n\"They can threaten me all they want but I'm eighteen so I'm out of here,\" he huffed before taking me into his arms and hugging me. \n\n\"What about school?\"\n\n\"I'll just get my GED. Don't worry about me; I've got friends who can help me out and thank god because I know mom and dad will close my bank account first thing tomorrow.\"\n\nI didn't know what to say. I walked him to the door soon after his admission because he didn't want to see our mother again before he left. \n\nA car was parked down the road, idling and evidently waiting for him. A thick cloud cover hung low in the sky making his departure that much more ominous. He gave me another hug and whispered, \"Just make sure you wait to come out until after you're out of the house.\"\n\nIt was as if Matt never existed. The pictures of him around the house were suddenly gone, the portraits with him in them removed and any remnants of him were put away. The fear that filled my heart was suffocating. By the time I'd finally heard word from him, eight months had passed and I thought the worst. It was a Sunday morning, my parents and Kayla at church and I had the house to myself. The only reason my mother allowed me to skip church was due to a school project I needed to do. The phone rang a restricted number and I answered it without hesitation. \n\n\"Hello?\"\n\n\"Rachie,\" Matt exclaimed. I gasped and looked outside at the driveway to ensure my parents hadn't come home early before I headed to my phone with the cordless phone.\n\n\"Matt. Are you okay? Where are you? What's going on? Do you need help?\" I babbled into the phone and heard him chuckle.\n\n\"I'm fine. I just wanted to let you know I'm okay and I'm getting by well enough.\" He went on to tell me that he got his GED and a couple of friends were letting him stay with them in Seattle. He had a job, a crappy one but he was making money and he was happy. I could hear that in his voice and I felt a pang of jealousy. Before he let me go, his tone became serious.\n\n\"Rachel don't tell them about yourself. Not yet. You deserve to go off to college and not struggle. I'm happy but I'm not going to lie and tell you this is easy. If I didn't have Greg and Brandon, I'd be on the streets. So, please stay and let mom and dad help you through college. And watch out for Kayla.\" \n\nI wondered about his words long after we concluded our call. His concern for Kayla was fueled by the fear she would turn into one of the other women in the church, bound by their husbands and having no real purpose in their lives other than bearing their husband's children and being a devoted wife.\n\n*\n\n\"I met someone,\" Kayla whispered, her cheeks a brilliant red. I smiled despite the internal battle I was fighting with myself. At that point, Matt was the only one within our family who knew who I truly was and he'd kept to his word not to tell a soul, not that anyone other than me talked to him.\n\n\"You did?\" I absently wondered if maybe Matt picked up on some indication that our kid sister was going to be just like the two of us. It was like a sick fate of karma for my parents, the conservative, outspoken homophobes, to have three out of five kids end up queer. \n\nShe nodded. \"Yeah. Her name is Kendall. That's why I kind of freaked when you snuck up on me this morning. I was texting her about this. She inspired me to tell someone, to come out to someone I trust.\" Kayla was still blushing, and I patted her shoulder. \n\n\"I feel honored that you chose me,\" I said honestly. \n\nI wanted to tell her she wasn't alone, that we shared the same secret. She didn't talk to Matt because our mother wouldn't allow it and she didn't want to piss our mom off. The powerful matriarchy who we didn't want to anger because she almost died and never let us forget. Even our father feared her wrath and the guilt that followed. \n\n\"Please don't tell mom,\" she added. I quirked an eyebrow at her.\n\n\"Are you kidding me? She'd probably have a heart attack.\" I touched her arm and smiled. \n\n\"Thank you for telling me. You have no idea how brave you are.\"\n\n\"I'd love for you to meet her,\" she added as I put the car onto the road and I smiled. \n\n\"I would like that a lot.\"\n\nAs I drove her home, I felt like such a goddamn hypocrite. Here I was telling her how brave she was and that I accepted her when I didn't even accept myself. For some reason, I thought of Jo again. It infuriated me. \n\nWe stepped inside the house and I could hear our mother coming down the stairs, her tiny heels clicking on the hard steps. \"Oh, Rachel, are you going to stay for dinner?\" Her hair was pulled back in a tight bun, her long skirt swishing around as she approached us. \n\n\"Hi, mom,\" I said as she hugged me. \"I wish I could stay but I've got a date tonight.\" It was a total lie of course but it placated my mother's expectations on having a boyfriend. \n\nAnd it worked. She beamed and grabbed my shoulders. \n\n\"That's wonderful! When do we get to meet this handsome fellow?\" \n\nWell, crap, how about never? I feigned a smile and felt myself blush. \"Soon, mom. I want to know he'll be a right fit before I introduce you to him,\" I offered. I'd been 'dating' off and on for years, always using the excuse as the guy wasn't wholesome enough or wasn't a good fit for our family values. My mother ate it up. In actuality, I'd been in one serious relationship with it ending due to my closet status. \n\n\"Okay. I do hope you find yourself someone soon, honey. You aren't getting any younger and it's our duty as women is to bring more of God's children into the world.\" Kayla rolled her eyes and quietly excused herself. \n\nI cringed inside as I said goodbye to my mother and headed to my empty condo. My mother was lenient in the eyes of the church of Mormon toward how she allowed her children to live. She may have disagreed with Kayla dressing in jeans and tee shirts, but she didn't force her to wear dresses or skirts like a lot of the members in the congregation. \n\nAlthough I joined her during church most Sundays, she didn't blow a gasket if I couldn't attend. She didn't allow cursing in the house nor caffeine, and she held her strong beliefs against homosexuality and premarital sex and dating. I sincerely think this is the only reason she allowed Kayla to go out for sports in high school, as it left her less time to delve into the dating scene and potentially becoming intimate with a young man. Well, little did she know, she didn't have to worry about that. \n\nIt had been a week since I'd seen Jo and her face crossed my mind at least once a day. I thought about going to the club but didn't want to push my luck going more than once a month. God forbid someone from the church see me going in and relay the information back to my mother. I couldn't afford my mother ex communicating me, especially after Kayla came out to me. I had to stick it out to protect my baby sister from the potential harm our parents and the church would put her through. \n\nThe farmer's market was bustling with people as it had been the week prior and I meandered around, eyeing around for that Latina beauty who I couldn't stop thinking about. I passed by a floral display, taking in the pleasant aroma of lavender and rose. \n\nAnd then I saw her. \n\nJo was standing in front of a booth selling leafy greens, a grin on her graceful lips and her hands moving vivaciously as she spoke. \n\nMy heart fluttered in my chest and my breath caught in my throat. What the hell was wrong with me? I'd never been so attracted to someone, the overpowering pull yanking me toward her with such ferocity I couldn't stop myself. She was speaking Spanish to the young man behind the stand, her hands moving with each statement. Her dark hair was tussled and not up in the faux hawk she wore the night we were together. The short-sleeved shirt she wore showcased her beautifully sculpted biceps that rippled with each movement of her hands. Tight bundles of muscles were visible where her thighs weren't covered by her board shorts. I stood beside her with apprehension, not knowing what to do to get her attention.\n\nThe young man across from her faced me and he met my eyes before motioning for Jo to look. She turned her head, her eyes locking onto mine and I gasped at the feeling it elicited in the center of my chest. \"Hi,\" I whispered. \n\n\"Hey, Rachel,\" she said, her tone neutral.\n\nEither she felt the same undeniable attraction as I did and hid it well or she was uninterested. At least she remembered my name. Her eyes stayed on mine longer than normal interaction warranted, and I wanted to touch her. I wanted to kiss her soundly on the lips, right there in the middle of the crowded market. \"How are you?\" She touched my arm and her fingertips sent a shiver through my body. Her hazel eyes watched me while I formulate an appropriate response. I wanted to tell her the truth; I couldn't stop thinking about her. But, I didn't want her to think that I was a weirdo.\n\n\"I'm good.\" I wanted to say more and planned on such until the young man said something to her in Spanish. \n\n\"Just a second. I'm going to help him with some boxes but I'll be right back,\" she said before turning and heading behind the table where a pickup truck sat parked. Watching her lift boxes was the most erotic thing I'd witnessed, aside from her consuming my core. My cheeks blazed at the recollection of her between my legs, tongue igniting every cell of my body, causing me to writhe and nearly lose my voice from screaming in bliss. Someone behind me cleared their throat and I turned to see one of the members of my mother's congregation staring at me. \n\nCrap.\n\n\"Hey, Rachel! How are you? I've missed you at service these last couple weeks.\" The tall, lanky Elder of the Church stood before me and I quickly let myself get immersed into conversation, moving as we spoke so I would be as far away as possible from Jo. The last thing I needed was one of the elders telling my mom I was conversing with an obviously gay woman and I honestly didn't know if I would be able to stop myself from kissing her. That would be bad; very, very bad. God, I was such a damned coward. In reality, I was happy to have a distraction to pull me away from coming face to face with the stranger I was developing terrifying feelings for.\n\n****\n\nJosephine Daniela Vasquez\n\n\"Mucho gracias, Jo,\" Jose, the vendor said to me as I plopped the last box behind his table.\n\n\"No hay problema, de nada,\" I replied, dusting the dirt from my hands on my shorts as I scanned the area for Rachel. My heart sank when I realized she was gone. What the hell? Had I been crazy to think her eyes held that sparkle of longing in them? I sighed, resigned and disappointed. She had stepped up to me, her eyes wide when they met my own and she looked like a fearful rabbit in front of a fox. The sensual seductress from our night together was replaced by a timid, flighty woman. If she hadn't walked up to me, I would've assumed it was just a doppelg\u00e4nger. \n\nFuck, she was beautiful wearing a white tank top and flowy knee-length blue skirt. Blue was her color, I noted. Her blond hair was loose over her shoulders such as it was the night we spent together, and I wanted to run my fingers through her locks, pull her to my face and kiss her. I wanted a lot more than that. I hadn't stopped thinking about her since my walk of shame and felt like a fucking idiot for not staying in her condo. Now, I moved around the farmer's market, my eyes searching every face, every nook and cranny for her beautiful emerald eyes. I came up empty a half hour later, concluding that she was gone and so I left. \n\nI had only a few more days until my first day of work and this kept my mind off Rachel briefly. I hated that I didn't even know her full name. I considered going to her condo but felt like that was way too creeper status and decided against that option. Maybe I'd see her at the farmer's market the next week or in town.\n\nI had dinner with Alejandro and Ana that evening. We sat around the small table in the dining room, the siblings speaking and me just simmering in my quiet. I was so disappointed I hadn't been able to reconnect with Rachel. There was this desperate need to be around her that I couldn't shut down. It was ridiculous. \"Jo, what's up with you?\" Alejandro finally asked. \n\nI shuffled in my seat, shoveling a bite of rice into my mouth and I tried to avoid his concern. \"Nada. I'm just excited to start work.\" He snorted and shook his head. \n\n\"Who the hell gets excited to go to work? You're a strange one. You want to go to the club with me later?\"\n\n\"Nah, I need to take a run and do some lesson plans or I'm not going to be as excited to start the school year.\" We cleaned up dinner and I went for a run. The hope of seeing her in passing was strong but I didn't see her. It was hot even as the sun settled below the horizon, so I jogged down the hill and took in the shimmering moonlight spreading over the bay. \n\nFortunately, there was a pleasant breeze pushing off the water and I closed my eyes. The image that popped into my head was Rachel and I cursed. Why the hell could I not stop thinking about the woman? It enraged me that I was so distraught over a woman I had one night with, my thoughts brimming with her face, her lips, her voice. My twenty-minute run turned into an hour, rounding the city streets and down a wooded path. The sharp scent of pine hung heavily in the air, mixing with the damp earth from the fog spreading across the floor of the woods.\n\nWhen I finally headed home, Alejandro was already gone, presumably at the club and Ana was in the living room reading. Her head tilted up when she heard me come in and she smiled. Ana was gorgeous and a wonderful person. She was a year and a half older than Alejandro and I and straight as an arrow. She was like the big sister I never had and I appreciated her kindness and wisdom. \n\n\"Hey, how was your run?\" she asked and I shrugged, wiping sweat from my brow. Her long dark hair was pulled back in a ponytail and she patted the couch. I sat beside her. \"You seem a little lost in thought these past couple days. What's going on?\"\n\n\"Well, I'm a little nervous for the school year to begin. I'm excited, don't get me wrong, but it'll be different this year. I'll have the same students the entire duration and what if they don't like me?\" I shrugged again and held up my hands. I threw her a sheepish grin and she nudged my arm. I couldn't tell her the truth. I couldn't tell her that a strange woman was on my mind constantly and I was having weird dreams. Ana was an understanding person but even she would think I was going over the deep end.\n\n\"Not like you? Come on, Jo. They'll love you. The kids around here are great, and I've never received any crap for the color of my skin or for being Latina. We're in a safe little pocket here and you have nothing to worry about.\" Easy for you to say, I thought, you teach Spanish.\n\nI was surprised she knew exactly what I was referring to. I feared racism. I've dealt with my fair share, as I've said, and I was over my fighting days. It's not as if I was going to punch out a shitty little teenager for calling me a wetback or something but I wanted a warning if it were a possibility. In Seattle, it seemed to be hit or miss by the school I was working at that week or that day. If I had a bad interaction, student or faculty alike, it was nice to know I wouldn't have to deal with the person on a daily basis for the remainder of the school year. \"All right, I'll take your word for it,\" I said and stood. I bid her goodnight and hurried up the stairs to shower. \n\nOf course, my mind went back to Rachel once I was alone. I hadn't gone to the club because I wasn't sure how I'd react if I saw her dancing with someone else. The thought of it alone provoked a nauseating amount of jealousy that I had no right to hold. She wasn't my girlfriend. \n\nFuck, I didn't even know what her favorite color was or what she did for a living. I stepped out of the shower and wrapped myself in a towel. I couldn't stop thinking about her alabaster thighs against my cheeks as I devoured her. Her voice echoing in my head Don't stop, Jo, and I quickly got dressed. I wanted to touch her again, taste her lips, feel her caress and tug her hair. After I was dressed, I locked my bedroom door and I threw myself on the bed, staring up at the plain ceiling as I tried to redirect my thoughts. \n\nIt didn't work, so I closed my eyes and saw her emerald gaze staring at me. Goddamn it, I was truly infatuated with this woman. I opened my eyes again and wished she were in my bed with me. The thought sent a wave of arousal through me and I grasped my breast as my other hand slid beneath the edge of my shorts, my breath catching as I inched closer to my pulsing need. My nipple peaked my tee shirt and I squeezed it, causing a shiver to run through me. I let go of my breasts and used both hands to unbutton my shorts before ripping them off along with my boxers. Yes, I wear boxers. They're much more comfortable than fucking panties. Don't judge.\n\nI tentatively touched my slit, my lips wet with the memories of Rachel beneath me, the feel of her skin on my palms and the taste of her desire in my mouth. I moaned as one of my fingers toyed with my clit, moving lower to push into my heat. My hips moved up and I added a second finger, my other hand pinching my clit. A bead of sweat ran from my forehead down my temple and I was chewing on my lower lip. The image of her above me, touching me, igniting an all-consuming fire within my depths played through my head. Her mouth on my neck, her fingers deep in my pussy while she thumbed my clit. \n\nI groaned, pumping into myself faster, closing my eyes so the fantasy continued. Hovering over me, the heat of her thighs against my own and her fingers pumping into me. Her teeth capturing the skin of my neck, her breath hot on my earlobe. Come for me again, Jo, she had said to me during our night together. \n\nI felt myself tighten around my fingers, my nectar spilling over my hand as I reached my crest, my hips shamelessly bucking and my breath halting as it took me over. I bit my lower lip hard to keep myself from uttering her name on the summit of my climax, my body writhing at my own ministrations and I inhaled sharply. I pulled my blankets over myself and felt hollow suddenly. I was wrecked. I hardly knew this woman, but my heart was telling me otherwise.\n\n******\n\nRachel Emily Moore\n\nMy condo was quiet when I stepped inside and I sighed as I closed the door. The interaction with my sister followed by my mother's not-so-subtle hint of wanting to meet an imaginary man the last time we spoke had me tense. I didn't know what to do. I couldn't come out, especially not now after Kayla entrusted me with her own secret. \n\nIf I came out, my family would surely excommunicate me, thus removing me from Kayla's life. She needed me now more than ever, with the mounting pressure from our mother and the threat of her sexuality reaching my mother's ears. She was nine months away from her eighteenth birthday, keeping her stuck within the confines of my parents' wishes until then. What the hell was I supposed to do? ",
        "I meandered to the kitchen, opening the fridge and closing it again. I wasn't in any mood to eat, my stomach full of knots after seeing Jo. Jo. I still felt like such a coward for stepping away from her, allowing myself the out by talking to the elder from church. It was true I didn't want him to see me speaking to Jo because of her appearance but really, if my mom found out and confronted me, I could've told her I was simply spreading the word of God. The true reason I fled from Jo was fueled by the strange feelings she elicited within me. Something so foreign and terrifying. \n\nSomething I had never experienced before in my life. I'd been in love, and surely this drowning feeling wasn't just love. It scared me so badly, I couldn't think about facing her. She'd probably think I was insane! Plus, I would not be able to stop myself from kissing her the second the moment presented itself. \n\nI grabbed my guilty pleasure book from the bottom shelf and plopped on the couch. I needed a good, fictional love story to help me escape from bizarre reality that was taking over my life. And, I quickly fell asleep three pages in. \n\n*Bainbridge Island, Washington, July 1941*\n\nKeiko stood at the base of the stone patio tilting the watering can over the copse of delicate dahlias her mother had managed to cultivate early that spring. Even though it was early, the summer sun spread over her back and her ears perked when she heard a familiar sound. \n\nThe soft rumble of a car engine thrumming up the driveway had her lifting her head, her hand pulling the brim of her hat to shield her eyes from the summer sun. It was the milk truck bouncing up the stony path toward her house and Keiko felt her heart rate quicken. She stood, flattening her dress and straightening her dark raven hair down her back. It wasn't as if she were excited for fresh milk; it was who drove the truck. \n\nThe vehicle stopped, the tall milkman stepping out and gathering their crate of fresh milk. Although, Keiko knew it was no man. It was Abagail Smith, the handsome daughter of the milkman. After her father suffered an ailing bout of polio two years prior, Abagail took over his route for the family dairy farm, delivering milk to the residents of Bainbridge Island.\n\nAbagail beamed when she saw Keiko watching her, her lithe body dressed in the crisp white uniform of her father, matching hat atop her head, her chestnut locks drifting down her back. \"Hello, Keiko,\" Abagail said as Keiko hurried up to her. The beautiful milkmaid held the crate out for Keiko to take. \n\n\"Good morning, Ms. Abagail.\" She took the offered metal crate of milk, the glass bottles clinking against one another. Abagail was still smiling, her blue eyes shimmering in the heavy rays of morning sun. \n\n\"Yes, it is a good morning when I am able to see such a beauty as yourself, Keiko,\" Abagail whispered. Keiko's lips curled into a demure smile, her eyes dropping from Abagail. \n\n\"You are too kind, Miss,\" she replied. \n\n\"May I come call on you, later?\" Abagail inquired, her gentle, hushed tone causing Keiko to lift her gaze. \n\nShe nodded and whispered, \"In the fields, after the sun sets for the evening. I will be there.\" She handed Abagail the empty crate that sat on the stoop before heading into her home with the fresh milk.\n\nKeiko waited anxiously the entire day until the sun began to slip beneath the horizon. After she was sure her younger siblings were asleep, and her mother and father weren't listening, she crept down the stairs of their home, easing out the backdoor and into the cool evening. She peered up toward the sky as she walked, taking in the vibrant display of stars overhead as the crescent moon hung low. The sweet smell of strawberries filled her lungs and she stopped to kneel, the soil damp from the evening watering of the crop. \n\nShe plucked a hefty handful of berries before she stood and continued her path to the massive evergreen tree that had become their meeting place. Keiko had become smitten with the striking Abagail Smith the winter before, when Abagail's father fell ill. It was unusual for a woman to drive in the area, let alone deliver the milk. This wasn't what Keiko found to be the most intriguing attribute of the woman; it was her kindness to Keiko and her family, even after the world war began. Keiko's mother and father had been in the handful of original immigrants from Japan, the Issei, or first-generation Japanese-Americans. \n\nAfter Japan joined Germany in the war, many treated Keiko and her family much differently. There was a layer of distrust in every interaction within the small town, their friendly neighbors becoming reserved and aloof. Keiko's father was far too understanding of the treatment, attempting to placate the behavior with discounted berries from their family farm, inviting the neighbors for tea and dinner. It did nothing to stifle the collective distrust that even Keiko's younger siblings could sense from the community they were born and raised within. \n\nThe soft song of countless frogs coalesced with the echo of crickets chirping as she continued down the row of strawberry plants. She knew it was wrong to hold feelings such as she did for another woman but, she couldn't deny them. At eighteen years old, Keiko should have been in University or married off or dedicated to the church but she stayed with her family, helping with the farm and her younger siblings. Her duties around the farm were limited due to a heart condition she was born with and her father treated her as delicate as a newly blossomed orchid. \n\nA dark figure leaned against the tree, Keiko hurrying her pace to meet Abagail. They had been meeting for a few months beneath the tree, simply conversing once a week. Abagail expressed to Keiko she longed to learn the Japanese language, which surprised Keiko but she obliged. The time they'd spend together was what Keiko looked forward to each week, her feelings for the woman deepening with every late night meeting. \n\nEven in the dim light from the thumbnail moon, Keiko could see the grin splayed on Abagail's lips. \"Good evening, Keiko,\" she said. Her voice sent tendrils of pleasant goose flesh down Keiko's arms and back. \n\n\"Ms. Abagail, the day has not gone by quick enough,\" Keiko replied, surprised by her own candor. Abagail chuckled, the sound deep and resonating. She reached out and her fingers grazed Keiko's cheek with such tenderness.\n\n\"You are so honest and I share this sentiment,\" she paused and looked into Keiko's brown eyes, \"Not a day goes by that I don't wish to awaken with you by my side.\" Abagail's fingers tangled in her hair, caressing her neck and bringing her face closer to Keiko. Keiko gasped and she took a step back. Abagail quickly retreated, her eyes cerulean in the low lighting as they searched Keiko's face. \"I apologize. I didn't mean to cause you discomfort,\" she said, her voice faltering as her hand retreated. \"I will leave you, Keiko.\" \n\nAbagail turned but Keiko grabbed her wrist. \"No, please don't go,\" she pleaded. Abagail watched her, awaiting her to continue. \"Touch me, Abagail.\" Keiko heard Abagail take a sharp breath before she spoke. \n\n\"I know it's wrong to feel this way. I mustn't but...I can't stop myself,\" Abagail murmured, her fingers caressing Keiko's cheek as she brought her mouth to Keiko. Keiko sighed, the silky softness of Abagail's lips upon her own sending an indescribable pleasure coursing through her body. She knew it was wrong as well but she didn't care any longer. \n\nShe couldn't care while Abagail touched her. Abagail's other arm wrapped around her back, her body pressing Keiko against their tree. Damp warmth touched Keiko's lips and she sighed again, the touch eliciting a new sensation. Keiko's hesitant hands reached out, touching the waist of Abagail's trousers. \n\nShe parted her lips, accepting Abagail's warm, seeking tongue and felt as if she were melting, like a rapidly burning candle. \n\nAbagail lifted her leg, pressing it between her legs, bunching up the skirt of Keiko's nightdress. The pressure was familiar to what she felt when she allowed her hands to travel beneath her bed sheets late in the night. She shuddered as Abagail pushed harder against her, a low moan escaping her. \"Keiko,\" Abagail whispered, her forehead leaning against Keiko's. \n\n\"Yes?\"\n\nAbagail's breath was coming just as fast as Keiko's and her words were rushed and husky, \"I believe you've securely captured my heart and soul, my love...,\"\n\n****\n\nRachel Emily Moore \u2014 Present Day\n\nI sat up, the dream as disorienting as it was arousing. I looked around, wondering if I accidentally fell asleep reading a National Geographic magazine, as I've been known to do in the past because there was no way I would be randomly thinking about the Pearl Harbor era. I was on the couch but the book in my hand was a cheesy lesfic romance. The dream was so vivid, the smell of strawberries still lingering in the periphery of my senses. \n\nAnd Abagail. I knew her. Who was she? The only face that came to mind was Jo. \"I'm going insane,\" I said to my empty condo. I quickly concluded I'd gotten my subconscious in a weird state by falling asleep reading the romantic book with thoughts of Jo. Luckily, the alarm on my phone for work began to chime. I go up from the couch and headed to my room to dress. \n\nWork was busy, the smoke drifting in the air from the recent wildfire in the eastern part of the state causing many people to come in with breathing issues. \n\nI loved my job not only because I was helping people but because I felt as if I was making a difference, one patient at a time. As a respiratory therapist, I assisted patients in clinic as well as in the hospital setting. I helped with anything from asthma control to COPD management and ventilated patients. It wasn't easy but I enjoyed what I did. My mother would've rather had me marry and settle down with at least half a dozen kids. \n\nI didn't experience any strange dreams for the next few weeks, allowing myself to fall back into my normal routine of work and solitude. \n\nI joined my parents and Kayla at church each Sunday and did my best to deflect my mother's questions about romantic prospects. Although the dreams had ceased, my mind still didn't stop thinking about Jo.\n\nAs I've said, Kayla was into various sports, one being cross country, which started shortly after school did. I loved that she had something to do other than sit around the house on her phone or at the youth group with the church as I had during my teen years. It was abysmal and I hated every moment. It was a Thursday afternoon and I had just clocked out for the day. We'd had a last minute trauma I had to attend in the emergency room and I was running really late. I gathered my crap and headed to the car, sending Kayla a text that I would be on the way soon. \n\n****\n\nJosephine Daniela Vazquez\n\nI hadn't seen Rachel in three weeks, but a day didn't go by without her crossing my mind. It was ridiculous and goddamn infuriating that I couldn't stop thinking about her. \n\nFrankly, it pissed me the fuck off. Work was great, and it kept my mind off her for the most part. The position I occupied was sophomore gym and the kids did love me from the get go, as Ana predicted. The other physical ed teachers accepted me with open arms and I was grateful when one asked if I'd be interested in coaching a team.\n\nSo, there I sat in the late September afternoon watching a bunch of teens run the make shift cross country track around the high school. The weather was cooling drastically, and I was thankful the rain hadn't started yet and that I'd brought a pull over hoodie with me. Cross country was definitely my forte and I was excited to start off the season as co-coach. The teens filtered through the dense trees around the high school, coming back around to the other side of the track. \n\nI checked the time and blew the whistle to conclude practice. The teens came bounding over to change and grab their things from inside. I ambled in after them and grabbed my own things from my little desk in the large, shared office of the female PE teachers. Most students had already caught the activity bus but a few were lingering outside the building by the time I made it out front. \n\nI stayed until all but one were picked up. The girl was a senior and I vaguely remembered my co-coach, Jess, telling me her name was Kayla. I walked up to her and smiled. \"Kayla, right?\" I asked. She nodded, lowering her eyes shyly and I swear I saw a blush in her cheeks. She looked familiar, her height and blonde hair echoing Rachel's. Well, fuck. I almost went three hours without thinking about her. \"Did you miss the activity bus?\"\n\n\"No, my sister is going to be here any minute,\" she replied, finally looking up at me again. \n\n\"Cool, cool. I'm just going to hang around until she gets here, okay?\" She nodded and I plopped down on the bench. She followed suit, pulling out her phone, her fingers whipping across her phone's screen. Damn, and I thought I could text fast. A little Toyota curved through the student pick-up roundabout and my breath caught in my throat. Kayla stood as Rachel pulled up beside the curb.\n\n\"Hey, Kayla, I'm sorry I'm so late, I was...,\" her voice halted when we made eye contact through the open passenger window. Kayla was busying looking through her gym bag. \n\n\"It's okay. I totally forgot my phone charger. I'll be right back.\" Before I could turn and tell Kayla the door may be locked, she was already running toward the building, yanking the door open and slipping inside.\n\nRachel cleared her throat and I turned my head. \"Hey, Jo.\" Her voice was full of what I took to be apprehension. Again, the demure woman before me was a stark contrast to the woman I shared my night with. \n\nI edged closer to the open passenger window and bit my lip. \"Rachel.\" Her name passed my lips as a whisper. She looked like she was going to cry and it freaked me out. Did she think I was a stalker or something? \"Sorry I was busy the last time we saw each other. I'd promised to help Jose carry that crap out of his truck and I wanted to talk to you once I was done.\"\n\nShe nodded and I swear her eyes had unshed tears in them. Thankfully, I was saved from the awkward interaction by Kayla running up to the car.\n\n\"Got it!\" she said, holding up the wire of her charger in triumph. \n\n\"See you tomorrow, kid,\" I said, turning as Kayla climbed into the car.\n\n\"Wait, Jo!\" Rachel's voice was slightly hoarse, and it frightened me. She sounded scared. I turned back toward the car and her head was bent as she scribbled on a tiny sheet of notebook paper. She thrust her hand out in front of Kayla who had just fastened her seat belt and I took the slip of paper through the open window. Our fingers brushed, and I bit my lip to stifle the gasp that was inevitably about to escape. I looked down at it to see a phone number and I glanced back up at her. \n\n\"Text me some time,\" she said. \n\nI nodded, and the passenger window went up as the car pulled forward, leaving the parking lot. I stood there for a few moments long after her car was out of sight, staring at the phone number. What in the ever-loving fuck just happened?\n\nWhen I got home that night, I felt odd. Not ill but just not right. I ate a bowl of canned soup instead of the delicious pupusa Ana made because of how bizarre I felt. I took a shower after eating my scant meal and climbed into bed immediately afterward. It was strange, the dream I had the night after Rachel and I saw each other last. The two women in it were foreign to me yet familiar. I had woken up with a strange taste in my mouth, akin to overripe strawberries in the heat of summer. \n\nOverly sweet yet pleasing. The sweet girl Keiko. I could feel her lips against mine as I kissed her. But, it wasn't me. It was Abagail, the daughter of James Smith, the milkman who couldn't drive the milk truck because of the clutch, the muscles in his legs being far too damaged from a bad case of polio. \n\nAbagail, who wore her older brother's clothing and lived essentially as a man. Abagail, who had fallen in love with Keiko Takeda the moment she lay eyes on her a whole two years before their first kiss beneath the oak tree.\n\nWhy did I know these things? Had I read it somewhere, maybe watched a documentary on the timeframe? I'd learned about World War Two and the attack on Pearl Harbor in school, not that I ever paid much attention back then. There was no reason it would drift into my subconscious now. Right? I rolled over and stared out my window, a gently rain pelting the glass surface. I could feel more to it, something just out of reach. \n\nA painful memory awash in relief. I couldn't figure it out. I got out of bed, hurrying over to my laundry hamper to fetch my pull over hoodie from that afternoon. I found the slip of paper Rachel handed me, the phone number scribbled down hastily. I sat on the edge of my bed, putting the number in my phone and adding her as a contact. My finger hovered over the send message button as I contemplated my actions. Shit, I was fucking freaked as the 'what-ifs' fluttered into my brain. What if she only gave me her number so I'd leave her alone? What if she was afraid of me? \n\nShe had sounded so scared when she told me to wait. Shaking my head, I closed out of it and set my alarm before climbing under the blankets and falling into a fitful sleep full of vivid dreams.\n\n****\n\n*Bainbridge Island, Washington. March 1942*\n\n\"Can't we fight it?\" Abagail asked, her voice nearly a shout. It wasn't fair, none of it. It wasn't Keiko's fault nor her family.\n\n\"No, my love,\" Keiko murmured with resignation. Her hands were folded in her lap, her feet tucked under her in the armchair she rested in. A fire was roaring to life in front of Abagail as she stoked it, throwing in a handful of dead leaves and shriveled twigs. \n\nThe tiny cottage they occupied lay in the far corner of the family farm, Abagail's father granting her use of the small building for whatever she purposed it for. It was where Keiko and Abagail spent many a night, wrapped in each other's arms, away from judgment and safe from the elements. Their first few trysts had involved quite a bit too much dirt and grass beneath them for Abagail's liking. \n\n\"It's a hideous discrimination hidden in the falsity of national security,\" she grumbled, pacing the small space in front of the hearth. It had been nearly two months since the attack on the naval base Pearl Harbor and the president had signed an executive order for all Japanese Americans to be evacuated from the west coast, including Keiko and her family. They had six days to prepare and Abigail's anxiety was drowning. She feared the worst, as if these relocation camps were more than they were being told. She didn't want to speak aloud her fears, as she didn't want Keiko to be afraid. \n\n\"Papa believes it'll only last until the war is over. Abby, it won't be forever. Once the war is over, perhaps things will be different. I'll come back to you,\" Keiko claimed but, this did not placate Abagail's fear. Abagail didn't see Keiko stand from the chair and cross the room, her arms wrapping around Abagail's torso. She looked up at Abagail, her obsidian eyes dark and rimmed with tears.\n\n\"I love you so much. I can't lose you,\" Abagail sobbed. Keiko's gentle hands ran up and down her back in a soothing motion as Abagail cried, Keiko soon joining her lover, tears streaming down her cheeks. \n\n\"I love you too Abagail.\" Abagail took Keiko into her arms, hauling her slim form to the bed and laying beside her. She ran her fingers through Keiko's black hair, twirling the fine raven locks and smiling. \"We have five days. Let's make them last forever.\"\n\n*******\n\nJosephine Daniela Vasquez \u2013 Present Day \n\nThe shrill ring of my alarm cut the dream from my brain and I sat up, my head groggy and sore. My chest hurt at the recollection of the scene from my dream. It felt as real as if I had gone through it myself. The pain evident within Abagail echoed in me and I wasn't all that surprised to feel wetness on my cheeks. I clambered out of bed, finding my phone and silencing the alarm. I wanted to text Rachel so badly, it hurt. Though, I didn't want to scare her away from me before I even got to talk to her again. ",
        "As clich\u00e9 as it sounds, I was stuck between and hard place and a rock. I had to wonder what was causing the vivid and reoccurring dreams that wouldn't abate. Luckily, it was Friday and I would be busy with work. I feared for the weekend because my mind would be allowed to dwell on the strange feelings surrounding the peripheral of my consciousness. This was beyond comprehendible and I was starting to wonder if I was losing my grip. \"This is fucking ridiculous,\" I said aloud before getting ready for work.\n\nTo be continued..."
    ],
    "authorname": "JodiHutchins",
    "tags": [
        "cunnilingus",
        "fingering",
        "lesbian",
        "lesbian novella",
        "lesbian romance",
        "love",
        "supernatural lesbian",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/homebound-ch-01"
}