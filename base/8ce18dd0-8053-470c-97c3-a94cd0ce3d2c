{
    "title": "The War of 2020 Pt. 08",
    "pages": [
        "As always, please be aware there is graphic content throughout this text. \n\nPlease read The War of 2020 Pt. 7 to understand the story. Pt.1 - Pt. 6 are also available. \n\nThis is a fun hobby for me that I'm happy to share with you but don't take it too seriously, this is erotica. ;) \n\nEncouragement and constructive feedback are always appreciated. If you have any suggestions on how you would like the story to progress comment below.\n\nEnjoy.\n\n~TY\n\n**********\n\nMorgan rolled around on the plush bed like an outstretched cat, enjoying the soft cotton against her bare skin. It took her a moment to realize she was actually in bed alone for once. \n\nHer halo of brown curls were more of a bird's nest this morning, probably from the drug induced chaos she experienced last night. All she wanted to do was jump into the shower and wash her body using the hottest water she could tolerate. \n\n\"My fucking head...,\" she whispered, squeezing her eyes closed. Her brain was scattered, having been poisoned by a toxic mix of hormones and party drugs, she felt sick to her stomach.\n\nGetting up, she immediately felt the vertigo as her brain hit the front of her skull. She hadn't felt like this since college, she was probably still a little fucked up. She stumbled toward the master bathroom, her hand pressed firmly to her head. \n\nShe didn't notice Hunter watching her silently from a leather armchair, his foreboding presence invisible in the shadows. She was too busy trying to walk a straight line, stumbling as her legs wobbled under her. She didn't remember much from last night but she remembered enough. \n\nJoe and Hunter humiliated her, fucked her in front of all of their soldiers and enslaved Patty on top of everything else. \n\nDragging her feet to the bathroom, Morgan went directly into the large granite shower, turning on the steaming hot jets. Within moments, the entire room was completely fogged up as the scalding water ran freely from every showerhead. \n\nHunter quietly slipped into the bathroom behind her, stalking her like targeted prey. He has been patiently waiting for her to wake up, letting her sleep in the hopes that she would be more cooperative with him. He needed to get her to the Med Lab before he left for Central Command this afternoon. \n\nSlipping his boxers off, he opened the sliding glass door, leaving it ajar behind him. Admiring her curvy silhouette through the steam, he quietly entered the shower careful to not make any noise as he approached her. He loved seeing her wet and flushed, with soapy bubbles running down her sun-kissed skin. \n\nHe could stare at her all day.\n\nMoving behind her, he wrapped his brawny arms around her waist, pulling her body up against his. She spun around quickly, slipping out of his grasp and pushing away from him.\n\n\"No,\" she said, holding her hand up to him in warning.\n\n\"What do you mean 'No'?\" he asked, amused. \n\n\"Don't fucking touch me Hunter,\" she warned, posturing aggressively. Her small body was wound up tight and ready to spring at any provocation. \n\n\"You can't deny me what's already mine,\" he said with a sly grin, moving towards her. She raised her fists up in response, moving her wet hair to the side so she could see him better. \n\n\"I will never be yours,\" she spat. She was hurt, genuinely upset that he enjoyed humiliating her in front of everyone. She looked at his hard naked body, watching his cock grow at her obvious distress.\n\n\"Come here Kitty. I promise I'll be gentle,\" he coaxed, slowing closing the gap between them. \n\n\"I'm going to make you pay for this asshole,\" she warned. \n\n\"Mmm, sure you will,\" he taunted, slowly stroking his heavy cock from base to tip. \"You know I have no problem taking what belongs to me. Taking you.\" \n\nHe moved for her first, reaching for her arms to pull her closer. She dipped low, punching him twice in the stomach before moving out of his reach.\n\n\"That's for last night,\" she growled. \n\nHe doubled over, holding his solid abs as he laughed heartily in pain. His wet black hair concealed his sinister grin as the water ran over his head. Without warning, he rushed her like a bull, wrapping his arms around her entire body. Squeezing her tight, he yanked her up against him, lifting her off the wet tile and into the air. \n\n\"No!\" she yelled, kicking violently. She was struggling but he had a solid grip around her, constricting her limbs.\n\n\"Oh, you're so wet for me,\" he teased, sliding her slippery body against his. \"I knew you wanted this.\"\n\n\"Why are you even fucking here? Shouldn't you be off torturing small animals or something,\" she hissed.\n\n\"Isn't that what I'm doing Kitty?\"\n\nCarrying her in his arms, he left the shower running on full blast as they walked out into the bedroom completely soaking wet. \n\nMorgan's called him every name in the book as she thrashed violently in his arms. She didn't want to fuck, she was angry with him and she was angry that she had absolutely no power in this situation.\n\n\"You think a little noise is going to stop me? You know how much I love when you scream,\" he said, squeezing her body tighter against his. She was ready to attack him, eager to hurt him like he hurt her. \n\nShe just needed her moment.\n\n\"After I fill your little pussy with my cum, you're going to see the physician for your high blood pressure,\" he said, matter of factly. He could feel her entire body recoil, jerking so hard she actually slipped out of his arms and onto the floor. Without hesitation, he jumped on her, pinning her down underneath him before she could run.\n\n\"Stop it! You are fucking going,\" he barked into her ear. Seeing her moment, she lifted her knee sharply, hitting him right between his legs. He rolled off her with a pained groan, giving her just enough time to make a run for the door. She sprinted, naked and soaking wet toward the only way out of the bedroom.\n\nUnfortunately, he got to her in seconds, pulling her back by her waist like a rag doll.\n\n\"You hit me again after how nice I've been?\" he sneered, squeezing her hard. She went to kick him but he swung her body up into his arms, cradling her securely. Squeezing her limbs together, he rubbed his face in her damp curly hair. \n\n\"Now I have to beat your little ass on top of bringing you down to the Med Lab,\" he scolded, holding her small body tightly against his chest. \"Don't you even care how busy we are today? Your Masters' would appreciate it if you fucking behaved yourself for once so we can focus on killing these liberal fags.\"\n\n\"What are you talking about? What are you assholes planning?!\" \n\nHe carried her over to a steel bar that came up to her hips and forced her to bend over it. Her hip bones pressed into the bar, lifting her ass off the ground when she leaned over. \n\n\"You know I can't tell you anything, I wouldn't want you to fly away and spread the word.\"\n\nStanding behind her, he used his legs to keep hers forced open. \n\n\"Who can I tell? You've kept me here this whole fucking time,\" she countered, struggling on the bar as he pressed against her back. \n\nHis hands ran over her heavy breasts, pulling at her erect nipples. Squeezing the warm globes, he enjoyed that they overflowed from his palms. He could feel her steady heartbeat through her chest, hammering harder as his cock grew against her ass.\n\n\"Like that's ever stopped you before,\" he laughed, moving his hands down her taut stomach. \"I know you have a phone in your room, you will not be making anymore calls out moving forward. You can't and won't hide anything from me but I can and will hide everything from you.\"\n\n'How could he know?!' she thought, panicking. 'What else does he know?'\n\n\"You fucking bastard,\" she hissed, trying to figure out how he could have found the phone that she hid so well.\n\n\"I know it's not fair,\" he continued, relishing the fact that she had no idea AJ was under their control. \"But it's for your own good.\"\n\nShe pulled away from him but he held her firm, using his body to push her down over the bar. She felt like she was being mounted by a fucking polar bear.\n\n\"It's a good thing I love punishing you,\" he whispered, securing her spread ankles to either end of the steel bar. With his chest firmly against her back, he kept her bent over to lock her wrists in place, forcing her to stay in the exposed position. \n\n\"You are fucking evil,\" she spat, her ass high in the air while her face was almost to the floor. He laughed, walking to a nearby table to grab a flogger. With how badly she's been, he decided to use one with a much thicker hide. Running his hand through his wet black hair, he walked back over to her, enjoying the view of her vulnerable pussy and ass. \n\n\"Evil?\" he said leaning down to her ear. \"That's far too kind a word Kitty.\" \n\nShe screamed, shaking her head as he walked behind her, slapping her ass with his hand. \n\n\"I hate you!\" she cried out, her voice still hoarse from last night. \n\n\"Don't say that, you're hurting my feelings,\" he pouted, rubbing his large hands over her plump ass. Grabbing the meaty flesh of her asscheeks, he squeezed her roughly, biting his fingers into her skin. Kneeling behind her, he kissed each mound before licking her pussy lips from behind.\n\n\"No, don't touch..,\" she started, trying to fight the pleasure he was forcing on her. Ignoring her, he ran his long tongue slowly from her labia to her rosebud, making sure to get her completely wet along the way. \n\nReturning to her pussy, he darted inside and out, enjoying the taste of her nectar as she started warming up to him. Swirling his tongue along her opening, he could feel her tight walls contract in excitement. She squirmed and struggled as he pressed his face into her, grabbing the steel bar to push his tongue further up her sheath.\n\nOnce he was satisfied that she was wet enough for him, he stood behind her again and began teasing her with his cockhead.\n\n\"Will you be a good girl and go see the physician?\" he asked.\n\nShe was so angry, she tried to fight the burning desire building between her legs but she was still exhausted and broken down. \n\n\"Why don't you just drug me and drag me there you fucking loser.\"\n\n\"I would if I could Kitty but Doc says no more drugs for you. We can't get a true read of your... blood pressure, if we keep using them.\" He pressed his cock into her tight hot pussy, feeling her pulling to get away from him as he moved deeper inside. \n\n'I hope she's already pregnant,' he thought, holding back his hips as he felt her try to adjust to him. He was not going to allow that, he wanted her to feel every inch.\n\nThis was her punishment after all. \n\nGrabbing the steel bar with both hands, he slammed his hips against her ass in one powerful thrust. \n\n\"Ahh!\" she cried out, the shock from his entire length entering her knocked the air from her lungs. He stood still, completely buried inside of her pussy as she was forced to take him bent over the bar. Grinding his cock into her, he ran the flogger over her back, tracing goosebumps across her wet skin.\n\n\"You will go,\" he ordered, pulling his cock out of her and lashing her ass hard. \n\n\"Understood?\" \n\nShe clenched her teeth in anger, refusing to respond to him. \n\n\"Oh, silence now?\" he asked, forcing his cock back into her pussy in another hard thrust. She grunted softly, feeling him fill her again as the flogger ran over the back of her thighs. He rolled his hips into her, pumping his cock in deep strokes before taking it out again and slamming the leather whip down onto her ass. \n\nShe whimpered but didn't scream, holding it in as he laughed menacingly behind her. \n\n\"I can't believe you are staying quiet. I will have to tell Murph about this,\" he said, forcing his cock back into her wet pussy. Fucking her hard and deep, he held onto the steel bar to give himself more power to thrust into her contorted body. His uncut cock rubbed roughly against her g-spot, making maintaining her silence increasingly impossible. \n\nHe quickly found that he did not like her being quiet for too long. He needed to hear her while they fucked, he enjoyed all the noises she made and she knew this about him. So he fucked her harder, hoping that she would relent and scream by sheer force.\n\n\"Are you ready to go?\" he rasped. \n\nShe whimpered quietly but did not say more, so he hit her with the flogger again, eliciting nothing.\n\nHe was getting angry now. \n\n\"Answer me!\" he yelled, fucking her pussy roughly before stepping back from her and slamming the flogger down on her ass again in four hard lashes. \n\nSilence. \n\nHe growled, dropping the flogger and shoving his cock into her pussy to the hilt forcefully. She remained silent, still not responding to his abuse. He fucked her hard for a few moments before he looked down at her ass and saw the blood on his hand.\n\nHorrified, he stopped suddenly, pulling out from her in an instant. Tracing his finger lightly over the welt, he touched the red slash across her asscheek and saw it was caused by his brutal whipping. \n\n\"Fuck...\" he whispered, shocked that he actually damaged her skin.\n\nShe remained silent, focusing on her breathing as he unlatched her ankles and wrists. She couldn't feel the cut, her entire ass burned from being whipped. She was just happy he stopped because she was getting too close to cumming and could not give him that satisfaction.\n\nPicking her up into his arms, he cursed himself as he carried her back to the bed. \"I'm so sorry Morgan. Fuck... I didn't mean to hurt you.\" \n\nShe immediately put on a pity party for herself, sensing that for once in his life he actually felt bad for hurting someone. As soon as he put her down on the bed, she turned away from him, feigning soft whimpers of pain like an abused puppy. She did the whole bit; whimpers, small gasps of fear and little shakes. \n\nShe winced as he tucked her in, making his heart drop into his stomach. Lying in bed pretending to be hurt, she marvelled at the complete change in his demeanor. The evil beast he was moments ago has vanished, as did his rough treatment and words. He was now a worried lover, sorry for what he'd done and unsure what to do next.\n\n\"Kitty...?\" \n\n\"Please... go,\" she whispered, through trembling lips, still hiding under the blankets from him. \n\nWith a heavy sigh, he obliged, leaving the room sullen and guilt-ridden.\n\nMorgan grinned, quickly getting up from the bed as soon as he was gone. She touched the superficial scratch on her asscheek and laughed to herself.\n\nIt continued to amaze her that they never saw their brutal rape and enslavement of her as actual abuse, it was just training for their personal breeding slave. \n\nOnly physical cuts or bruises on her skin were considered a problem to them. She knew they saw her as property but she never really understood it until now. She's been using normal logic when she needs to change her entire way of thinking. \n\nIf she was their mutual property and one of them 'damaged' her, she wondered what would happen if the other found out.\n\n*******\n\nJack approached the hidden entrance to the UPP HQ cave system and saw something out of place. The normal rock pattern left at the entrance didn't look right, it was disturbed by the last person who entered and not reset back into place.\n\nIt was a small code, one that wasn't written in the books. Anytime you enter this cave system you must reset a rock pattern in the dirt if you've disturbed it to show you are UPP affiliated. If you go in without resetting it, you shouldn't have entered.\n\nJack readied his rifle as he slowly walked into the dark cave, heading towards the winding tunnels that he knew all too well.\n\n'These Nazis think they're fucking slick,' Jack thought, slowly pushing a stone wall to close the hidden entrance.\n\nSealing them all inside. \n\n*******\n\nCG Barberi took a long drag from his cigar as he slowly walked around his prisoner's crumpled body. CG Kelly brought him a bunch of Cubans as a gift, he would probably give him that slave he's been enjoying in return for his generosity.\n\nCGB turned back around and kicked the man in the stomach again, this time eliciting the agonal cries he was looking for. He was wound up tight and needed to relax. He was frustrated by what happened with Morgan and knew that if he didn't hurt something, he was going to fucking explode.\n\n\"Please, Sir!,\" the prisoner screamed, pulling his legs into the fetal position. \"No more... I'll do anything. Just stop...\" \n\nCGB pushed his boot into the man's stomach where he had just kicked him. Pressing hard, he glared down at him in disgust. \"Of course you would do anything to avoid a little pain,\" he started, lifting his foot up.\n\n\"YOU. ARE. WEAK!\" he yelled, viciously smashing his boot down onto the man's body with each word. CGB felt the familiar pleasant sensation of his tension releasing with each stomp. As much as Morgan was cathartic for his black heart and soul, only pain and torture could clear his mind.\n\nToday was the first time he actually lost control and physically hurt her. Her refusal to go to the Med Lab was totally unacceptable to him. Something that affects her health and the health of their future family was not up for debate.\n\nWith her being so unreasonable, he quickly got lost in the moment, whipping her ass a bit too hard. For any other slave the injury would be nothing, a scratch that was hardly fatal. \n\nFor her though, any damage to her body mattered. Her body was their mutual property, it would be the vessel for their lovemaking, their children, their future. When Murph first approached him about branding her using Rule 23, he promised that he would never torture or beat her without his consent or him present. He broke that promise and broke their Code.\n\nMurph was going to fucking kill him.\n\nTorturing and beating prisoners has been one of the best coping skills he's ever come up with to avoid hurting her like this. When she gets him frustrated, which is damn near every day, he just goes downstairs to the holding cells and tortures a prisoner, releasing his pent up aggression. \n\nHe didn't think he would need to do that today because she was already so broken down from last night. She wasn't supposed to actually say 'No' to him. \n\nYet she did.\n\n\"My fucking face!\" the prisoner wailed, jerking on the floor. CGB looked down at the man bleeding from his mouth apathetically. Flicking the ashes of his cigar onto him, he began slowly walking around his abused body again. \n\nStill thinking about her. \n\nHe knew she was just trying to be tough because she was humiliated and demeaned, used in front of hundreds of soldiers and was embarrassed by it. She hated being put on display to such a large crowd.\n\nCGB on the other hand, loved showing her off and forcing her to submit to them in public. His infatuation with her was slowly evolving into an obsession to completely control her. He normally didn't mind the games she played with him because he never saw her as an actual player. Now that he knew she was a Dove, he needed to dominate her a bit more thoroughly to establish control again. \n\nShe could turn into an actual threat with some of her abilities if he didn't keep her in line. Which was just another reason why he wanted her so badly, a good mother should be equally as dangerous as she is nurturing. With the right training Morgan will be perfect, she just had a little too much hope and freewill.\n\nHe would take care of that soon enough. \n\n\"Stop flinching!\" CGB yelled, kicking the prisoner hard in the back. The man screamed, loud enough for the entire basement to hear. CGB knelt down and grabbed his face, pressing the lit end of his cigar into the man's forehead. The prisoners' screams faded in his ears like radio static, helping him decompress and unwind. \n\n\"Keep screaming,\" he growled, slamming his head against the concrete floor over and over again. Standing back up, CGB continued to think about her as he took another long drag from his cigar.",
        "It was still cherried.\n\nCGB heard his cell phone go off. He answered without looking, knowing it was Murph because he was late.\n\n\"Where the fuck are you? We are about to roll out of here in 10.\"\n\nCGB paused for a moment and considered if he should tell him about Morgan.\n\n\"I'm leaving now, Kitty's just giving me a hard time. I think I'm going to have the physician come up here to check her out. She's too wound up.\"\n\nMurph laughed, \"He will need an escort, she's probably still upset about last night.\"\n\n\"She's definitely upset...,\" CGB responded.\n\n\"That's fine, she'll get over it. I had the boys up here take a look around the Command Center's system for anything else on her Dove status. From what they gathered she has a solid record of successful Combat Missions, specifically in regards to killing soldiers not fucking them. We might even be her first from what it looks like. She's also listed as inactive- out of state DND, visiting family in Washington.\"\n\n\"If she was focused on Combat Missions she probably knows way more information than she realizes.\" CGB mused, ashing his cigar on the now unconscious prisoner. \n\n\"We should hold off on telling anyone about this until we have the full picture. Last thing I want is for Wagner to challenge our branding because it was done under false pretenses.\" \n\n\"For once, I think you're right. I'll leave Mills in charge of her and head down,\" CGB responded. \n\n\"Sounds good. Smyth is staying behind to keep an eye on everything too. Hurry the fuck up, we already bombed two supply bridges and you missed the show.\"\n\nCGB hung up the phone with mixed emotions.\n\nDoves just like UPP fag*ots were brainwashed to believe they had moral and intellectual superiority over Conservatives. It was very difficult to reverse that thinking, especially for a Dove that was a fighter and not a whore. They still believe they will win in the end because they are 'right'. \n\nCGB knew only the winners of War get to decide who's fucking right.\n\nLiberals, even with the help of beautiful Doves like Morgan, didn't have the ability to do what it took to actually win. To kill those that needed to die and enslave those that couldn't protect themselves was something only the Nationalists could do. \n\nHe personally looked at Doves like an adorable paramilitary. Their main goal was to protect, save and free innocent life. An honorable cause, something akin to the Peace Corps. if they participated in War. Their efforts were in vain though because they usually ended up helping useless infertile fuck-slaves, while using their own fertile bodies to manipulate men in power.\n\nNeither the Nationalists nor the UPP outright supported or opposed Doves. Both sides sought them out, as they were useful against anyone with a cock and eyes. \n\nThe UPP fall all over themselves trying to help them because they are actually successful at infiltrating Compounds and gathering Intel.\n\nWith how valuable Doves are he felt much better knowing that she's safely branded and enslaved with him on the Compound. He could finally focus on wiping those UPP fucks clean off the map.\n\nThey were going to have some fun getting closer to that goal today and he couldn't wait. \n\nHe was feeling better already.\n\n*********\n\n\"Open the door Miss or I will break it down,\" Squad Leader Mills growled, slamming his fist against the dark wooden panel. \n\n\"Break it down with what? Your wittle baby hands?\" Morgan mocked, audibly pushing furniture in front of the door to block it. \n\nMills rubbed his temple, looking at the solid door warily. \"What did I do to deserve this God?\" he mumbled, wishing he never agreed to be her personal guard. \n\nCG Barberi told Mills that he punished the whore a little too hard trying to force her to go down to the Med Lab. The Commanders were all working on a large attack against the UPP today, so now it was up to Mills to deal with this bratty fucking bitch and it all had to be done totally hands off. \n\nBecause she's spoiled rotten, they are just going to have the physician come up to her room to conduct the follow up. Mills was pissed because injured soldiers don't even get that kind of special treatment. \n\nThankfully, Mills was also given direct permission by CG Barberi to handle her with his 'best judgement', having proven himself to them with her recent outbursts. Mills was more than eager to start passing down some judgement onto this bitch.\n\n\"Griffin, Loundry come take this fucking door down!\" Mills ordered, motioning for his soldiers to proceed. \n\n\"Don't touch my door asshole!\" Morgan screamed from the room.\n\n\"Open it then,\" Mills responded calmly.\n\n\"No!\"\n\n\"Then we're taking it down!\" \n\n\"Fine! I'll open it,\" Morgan lied.\n\n\"Go ahead then,\" Mills said waiting to hear furniture move. \n\nInstead, after a few minutes a piece of paper slipped under the door.\n\nIt read:\n\nDear Edward,\n\nKill yourself. \ud83d\udc8b\n\n\u2764 Miss O'Bryan\n\n\"Argh, this fucking bitch! Take the damn door down now!\" Mills ordered. \n\nMorgan giggled as she sat on the floor hooking the last few chain links together. She was stalling for time, trying to finish linking the long chain before they got into her bedroom and saw what she did. \n\nTearing every one of them down from the canopy bed and furniture, Morgan made a long lead that she was going to use to descend from the bedroom window. \n\nHooking the chain around one of the sturdy bed posts, she looped her foot into the other end and wrapped a good amount of length around her forearm. Morgan could hear soldiers using power drills on the hinges of her door, getting ready to take it down. \n\nWalking up to the window she opened it wide and looked out into the courtyard. It was mid-day and hot as Hell. There were no soldiers out because of the raids they were conducting which made this the perfect time for Morgan to give her free climbing chops a try. She tossed the chain outside and swung her legs out the window. She paused to consider what she was doing, she was pretty high up and this wasn't exactly the best idea. \n\nShe also didn't even really have a plan, she was just upset that things were falling apart so rapidly and wanted to get away from that fucking physician. She was doing so well not that long ago and now she's been totally compromised and humiliated.\n\nPatty was going to be so disappointed in her. \n\nIt was way worse than she thought it would be, she knew they would be fucking twisted but she thought they were still at least human.\n\nMorgan took a mental step back, reminding herself she could learn from this and do better. She would never forget what they did to her but she couldn't dwell on it.\n\nShe was going to continue to do what she came here to do.\n\nTaking a deep breath she tested her weight against the chains. She was relying mostly on her ability to descend by free climbing and hoping the chain will catch her if she slips. \n\nShe turned and hung her body out of the window, letting the excess chain fall down toward the ground. \n\n'Slow and steady Morgy,' she thought, soothing her nerves. Taking hold of the bricks one at a time, she shimmied over to another window on her left, slowly working her way toward the third story rooftop. She could still hear the power tools working on her door as she moved. She blocked the door with enough furniture to buy her a few minutes at least. \n\nThankfully she moved quickly with the help of the baby powder on her hands, giving her some traction against the brick. She could feel the hot sun on her back and wished she had a tshirt on instead of her white camisole, her black shorts were also no help as they barely covered her ass. \n\nSweaty palms were not something she needed right now but she could feel her body warming up. \n\nShe felt her foot hit the shingles of the 3rd floor rooftop and let out a relieved sigh. Stepping onto the platform, she unhooked part of the chain link, leaving some behind. Bringing the rest along with her, she moved to the back of the building to avoid being seen by returning soldiers. Finding a sturdy pipe, she repeated the process of securing the chain so she could descend again. \n\nShe didn't have much chain left, maybe 15 feet or so and she was still at least 20 feet up. Descending slowly, she felt her arms burning and straining to hold her body weight with just her fingers. \n\n'Maybe you should have worked out more,' she hissed to herself. Regretting that she's just been wasting her free time eating candy with Alice instead of doing push ups. \n\nShe was almost to the 2nd floor when she felt her hands slipping, losing grip of the brick as the baby powder wore off. \n\n\"Fuck!\" she screamed as she fell, feeling the chain hold tight at her ankle. Losing her grip, she was left suspended upside down and swinging in the air a few feet off the ground. \"Ooff,\" she groaned, her body having slammed against the brick wall during her fall. Unzipping her boots, she freed herself only to fall the last few feet directly onto her ass. \n\nStanding up slowly, she brushed off her shorts, happy she decided to at least wear black stockings today. No boots meant no rough terrain though, turning from the building she looked around and couldn't believe her eyes.\n\nHunter's motorcycle. \n\nHe left it behind when he went to the Capitol, still parked in the back. Morgan made a beeline for it, hopeful that Hunter was arrogant enough to leave the keys inside. \n\nShe approached the behemoth black bike and sure enough his key sat right in the center console waiting to go. \n\nShe straddled it, revving it on with a thunderous roar. She kicked the stand up just in time to hear the shouting coming from an upstairs window as a soldier noticed her. \n\nWith an obnoxious laugh, Morgan sped up the road, heading straight for Joe's House. \n\n*************\n\nPatty watched Morgan ride off on the motorcycle into the woods with a smile on her face. \n\n'That's my girl,' she thought, proud that she wasn't letting their treatment keep her down. Morgan was a good Dove, it wasn't her fault that Patty withheld information from her and sent her into the trenches. They needed a Dove on the inside of West Virginia as soon as possible, no matter how amateur of a honeypot she was. \n\nThese two have US Military files with information on heavy weapons located somewhere on this Compound. These are at a minimum; MOABs, SRBMs and possibly even B-52 Bomber planes. All of which shouldn't be used on American soil but aren't exactly banned. So they are all still technically fair game. \n\nPatty only knew the information was here on this Compound, nothing more. Their intel was limited because these two kept a tight rein on their slaves. Killing infertile runaways and lowering the station of fertile slaves to discourage them has worked very well for several months. \n\nWhen they got word that these physical files were somewhere on the Compound, Morgan was just finishing up some local combat training. They learned she had a connection with one of the Commanders and after some digging found that she was as good a fit as anyone could be, except for her race. Thankfully, her fertility, age, beauty and immunity to the E-12 Virus were enough to get her in and ensnare them.\n\nBut now things have gotten a bit more complicated.\n\nPatty turned from the window quickly when she heard her door jiggle, then burst open to Squad Leader Mills. He was enraged, his steel eyes burning brightly as he glared at her.\n\n\"Bring the little one in here and lock it down,\" he ordered, moving to allow them into the bedroom. Several large soldiers moved in, taking drills to the windows sealing them shut. They looked around the room again before leaving in a blur.\n\n\"I know you have some goddamn sense, so I'm not going to fucking warn you to stay in this room,\" Mills hissed, glaring at Patty. \n\nPatty nodded silently, taking AJs hand and pulling her away from them. \n\n\"Good.\"\n\nLeaving just as quickly as he came in, Patty heard the door lock and several soldiers stay behind to stand guard. \n\n'This is a heavy response for just her,' Patty thought, looking at the now drilled windows.\n\n\"Do you know what happened?\" Patty asked, looking down at AJ. She looked so young and sweet, so painfully innocent. \n\n\"Morgan ran away again,\" she whispered, looking behind Patty out the window. \"I wish she would just obey her Master's. They're just going to punish her when they find out.\"\n\nPatty turned and walked toward the window. \"Does she run away a lot?\" she asked, looking back at AJ. \n\n\"Yeah, she fights them all the time but it's useless.\"\n\n\"Why do you say that?\" Patty asked, curious to see why Lt. Robert Jordan's daughter thinks like this.\n\n\"They control everything,\" AJ complained. \"There's no use in fighting them anymore. They know what she's doing, they know everything.\" \n\n\"They aren't God sweetheart. How could they know everything?\" Patty asked, saddened by her despondency. \n\n\"They make us tell them everything... make me tell them everything anyway. If I don't they'll find out and punish both of us...\"\n\nPatty turned to her slowly, making sure she chose her words carefully. \n\n\"I know what you mean... Do they ask you to tell on her?\"\n\n\"Yeah, I try to keep some things to myself but I've only been able to do it a few times.\"\n\nPatty kept her composure looking sympathetically at AJ, realizing she's been spying on Morgan. Maybe they already know she's a Dove... Maybe she's already pregnant.\n\n\"Have you ever tried not telling the whole truth?\"\n\nAJ sighed, pressing her forehead against the cool glass of the window. \"I'm a bad liar, it doesn't matter anyways. If they can enslave someone as strong as Morgan then I have no chance. I'm weak.\"\n\nPatty knelt down to look AJ directly in the eyes, she studied her for a moment deciding what she would do with her. \n\n\"Do you want to be strong too?\" Patty asked in a gentle but firm voice. AJ looked back at her, unsure what she was getting at. \n\n\"Yeah but I could never be strong like her...\"\n\nPatty smiled, deciding in that moment what she would do. AJ was too naive for Patty to share any personal information with but she could build her up and teach her the art of manipulation. AJ may come in handy down the line if she gained some confidence and strength. \n\nNo one would expect her to lie. \n\n\"No sweety. We're all strong in our own unique ways. Morgan has her own strengths and weaknesses just like you. If you want, I can show you some tricks to make dealing with these jerks a little easier.\" \n\nAJ looked up at Patty doe-eyed and grateful. It was so nice to have another slave here that wasn't mean to her. \n\n\"I would like that.\"\n\n*********\n\nCGB was riding in an armored Humvee about 5 miles from the Capitol when he received a video message on his phone from Murph.\n\n'Take a look at this cocky motherfucking cunt.'\n\nOpening the video, CGB was surprised to see that Jack did in fact look cocky. Freshly showered and surrounded by other UPP Commanders, he had a smug smile on his face. \n\nJack motioned for someone off camera to approach him, waving his hand forward. CGB watched as Sergeant Browne was paraded in front of the camera, his body hunched over and limping. He hadn't heard any intel on him in weeks and wasn't sure if he was still alive. Sgt. Browne turned to face the camera and it became clear what they had done to him. Jack had taken a page from CGB and aparently convinced the UPP that torture was now a viable interrogation tecnique. \n\n\"I am sorry Commander...,\" he whispered, before Jack raised a pistol to his head and blew his brains out. He dropped to the floor dead and was quickly dragged away, all without Jack saying a single word. \n\nHunter swallowed hard. He was honestly surprised the fucker had it in him to kill a prisoner like that. Doing it in this setting is as formal as it gets. \n\nJack motioned for someone else to approach the camera, it was another prisoner. One of the two soldiers he sent into their cave system stared back at him with a mangled face. He personally trained Noel, watched him grow from a cadet into an elite member of Beta Team. Jack raised his pistol and pressed it into the soldier's tricep from behind. \n\n\"This ones for you American Psycho,\" Jack said, pulling the trigger. Blowing a hole clear through Noel, CGB winced at the sight of the man's arm exploding on impact.\n\nSatisfied, Jack finally felt like he had shown enough to the camera and was ready to speak.\n\n\"Now that I've shown you redneck fucks that I'm done playing around with you, I'll let you know what your options are. None. I mapped out your entire Compound while I ran circles around you cunts and know where everything is. You arrogant pricks are going to pay for what you've done. You should have killed me when you had the chance.\"\n\nThe video ended.\n\nCGBs face contorted in rage as he crushed the phone in his hands. He started getting out of the vehicle as it pulled up to the Command Center, rushing to get inside the building. \n\nIn Charleston, WV the Command Center within the Capitol held their state headquarters and was their main hub when they conducted large-scale attacks. \n\nAt the moment, dozens of officers bustled through the huge building reporting in on the raids occurring all across the state. CG Kelly was nice enough to provide a dozen helicopters, all equipped with missiles and over two dozen specialty drones to hit specific targets that will hopefully cripple their supply chain forever.\n\n\"Finally!\" Murph said approaching him. \"We already started but you're here just in time to see the drones.\" Murph said with CG Kelly at his side. \n\n\"We need to talk.\"\n\nCGB pulled Murph from CG Kelly and walked with him into a side office, closing the door behind them.\n\n\"What the fuck is wrong with you?\" Murph asked, confused.\n\n\"I hurt her... I didn't mean to and it isn't anything serious but I went too rough beating her ass and hurt her.\" \n\n\"You hit her without me present or my consent?\" Murph asked in a low voice, his jaw ticking in anger. His dark blue eyes burned with hate as he stared CGB down.\n\n\"Yes,\" CGB confessed.\n\nIn an instant, Murph tackled him down to the floor before punching him square in the jaw. He got a few good licks in before CGB blocked him with his forearms, not willing to hit him back. \n\n\"You fucking psychotic asshole! I told you not to hit her because I knew you would fucking hurt her!\" \n\n\"I really didn't mean to Red, I didn't think she would fight so hard against going down for the follow up,\" CGB replied, still blocking Murphs hard punches with his forearms. \n\n\"Of course she would, she always fights us! She's literally a third your size you fucking idiot. I knew I couldn't trust you with her. She was just attacked with a metal baton and you are already beating on her!\" Murph growled, baring his teeth as he continued his relentless punches. \n\n\"What the fuck are you two fighting about?!\" CG Kelly yelled as he barged into the room. He immediately saw Murph on top of CGB trying his hardest to beat him to death. Pulling him off by his uniform, CG Kelly called for his soldiers to take the Commander out of the room to cool off. \n\n\"You stay the fuck away from her until I can see what you did,\" Murph ordered, as he was pulled out of the room by his men.\n\n\"This is about your slave?\" CG Kelly asked, surprised that she could elicit such strong emotions from them. \n\n\"It's between Murph and I, we had an agreement and I broke it,\" CGB said, standing up on his feet. He felt bad, he had never really broken a promise to a brother before, especially not Murph. \n\n\"Not sure why he would demand any agreement or condition for a slave,\" CG Kelly said, handing CGB a red bandana to wipe the blood from his mouth. \n\n\"I agreed to certain terms for her because of my... history.\" \n\n\"You mean your history of keeping all of your slaves in line? You never have runaways because they know who is their Master. Murph is too soft when it comes to discipline, he doesn't understand that these whores need to be slapped around every now and again to remember their place.\"",
        "CGB rubbed his jaw tenderly as they walked out of the office. \n\n\"She's different Kell, Murph knew her from before the War and is even more protective of her than I am. She's our mutual property and I shouldn't have punished her like that. She's still injured from an attack and small to begin with...\"\n\n\"Wait, someone attacked your slave after she was branded?\" CG Kelly asked, genuinely surprised. \n\n\"Hank Guillo attacked her with a metal baton because she mouthed off to him. He almost broke her fucking back.\"\n\nCG Kelly remembered what CG Wagner said about Hank's brother. Now he knew why they killed him and honestly it sounded justified. Still moving towards the Blue Room to watch the drone strikes, CG Kelly grabbed his shoulder stopping him at the door.\n\n\"If you want this to work you two can't fight. He is your partner... your brother. West Virginia needs you two to be cohesive. I remember a time when CG Reynolds and I couldn't agree on anything for Stacy. We almost fucking killed each other and in the end it didnt matter. When we were all together it just kinda fell back into place.\" \n\n\"Perhaps you're right,\" CGB answered with a half smile. \n\n\"Let me talk to Murph after he cools down,\" CG Kelly offered, walking with him into the Blue Room to watch the deadly drone strikes across the state. \n\n********\n\nMorgan rode over the winding dirt roads enjoying the wind in her hair and the sound of the engine roaring. She had never been able to really explore the Compound and wanted to see as much as possible while she had the chance. She knew how to get to Joe's house from the Center so she drove in that direction. \n\nShe passed by some beautiful scenery along the way, like lush wild fruit trees and towering weeping willows. She always loved how gorgeous this state was and hated that it was being destroyed with mortars and fire every day. She rode up to a small wooden bridge that passed over a large river and saw that it was the only way over to the other side. \n\nSlowing down, she noticed the two troops walking across it and locked eyes with them. They looked at her confused for a second before rushing toward her, taking their radios out as they ran.\n\n\"Oh Shit.\"\n\nSpinning around quickly, she rode in the opposite direction, taking dangerous turns in an effort to confuse her trail. She sped past Joe's house, leading them away from her main target. She quickly ran out of road though and found herself coming to a screeching halt right at the edge of a cliffside. \n\nDropping off at least a hundred feet, certain death awaited anyone careless enough to drive over it. \n\nWalking the bike to the edge while still straddling it, she brought it as close as she could before carefully getting off. She stepped onto the grass to avoid leaving prints in the dirt and held the motorcycles handles still. \n\nRevving hard, she kicked up dirt to show a quick effort to stop and let go. She watched the bike fly over the cliffside and crash down in the ravine at the bottom, exploding on impact. \n\nShe smiled, pleased that she destroyed something Hunter truly cared about. \n\nJumping from rock to rock gleefully, she slipped away without anyone being the wiser. She was a safe distance away and approaching Joe's house by the time Mills arrived to the scene.\n\n\"My fucking God!\" Mills screamed, looking down at the flaming wreckage. \"Get a Team in a chopper right now.\"\n\nMills wasn't sure if he should call this in. That was definitely CG Barberi's bike and she was last seen riding it. She could be dead or dying or this could all be for show. \n\nHe didn't know which was worse. \n\nHe decided to hold off and see if she was actually in the wreckage. Looking around the cliffside, he narrowed his eyes suspiciously.\n\n'Like that bitch would ever die that easily,' Mills thought, staring into the dense forest.\n\n*********\n\nCG Kelly left the Blue Room after watching a few rounds of drone strikes to talk some sense into Murph. He was trying to get a hold of his slave now and for whatever reason she wasn't available, making him even more irate.\n\nPacing in his office, Murph called Squad Leader Mills for the third time, still unable to reach him. Murph threw his phone against the brick wall as CG Kelly walked into his office, smashing it to pieces. \n\nUnfazed, CG Kelly sat down in the leather chair across from Murph's desk, lighting up a cigar. \n\n\"I'm fixing to leave and go check on her right fucking now,\" Murph said, taking out a bottle of Bourbon from a liqour cabinet behind his desk. Drinking straight from the bottle, Murph's anger was obvious, his short temper having blown a fuse within him. \n\n\"CGB tells me you knew your slave before the War?\" CG Kelly asked, trying to figure out more about their relationship. \n\nMurphs brooding face cracked, breaking into a soft smile. \"Yeah, we went to University together.\"\n\n\"So, you realize you are extremely biased when it comes to her,\" CG Kelly said, offering Murph a cigar. \n\nMurph shook his head, sitting on his desk in front of CG Kelly. Letting out a long sigh, he ran his hand over his face in frustration. \n\n\"I know I'm fucking biased Kell. I branded her because I love her and want her to have my children,\" Murph replied, closing his eyes. \"I didn't think I would ever have a chance at a family and now he is fucking it up!\"\n\nMurph's anger was being fueled by the liquor, slowly edging him towards a raging inferno of hate for CGB.\n\n\"She's not like other slaves,\" Murph continued. \"She has literally risked her life for birthcontrol to avoid a pregnancy because of how much she hates us. She is never going to properly assimilate if she's being beaten by my soldiers and now him,\" Murph spat, taking another long swig from the bottle. \n\n\"You don't know how badly he beat on her, I'm sure it's nothing serious,\" CG Kelly started. \"He is changing a fundamental part of himself for your slave, that's going to take some time.\" \n\n\"The psychopathic part or the depraved part?\" Murph asked bitterly. \n\n\"You know he's a fucking sadist; that's part of what makes him ruthless when we need him to be. He can't just turn that shit off, just like you can't turn off how angry you are with him right now,\" CG Kelly responded calmly. He knew Murph was angry but he was still usually reasonable, even with his short temper. \n\n\"CGB's come a long way from who he was, you know how many infertile slaves he used to go through, maiming and killing them every few weeks. The way he acts with her is a great turnaround, it shows me he cares about her just as much as you do,\" CG Kelly encouraged.\n\n\"If he gave a fuck about her he wouldn't be beating on her for stupid shit. He can't change and I'm not going to try and make him. If he beats on her again, I'm going to fucking kill him,\" Murph responded, putting the bottle down. \n\nStanding, he moved to leave his office, \"I am returning to the Compound to see her, we already completed the initial surge so the rest is just observation.\" \n\nCG Kelly stood up, shrugging his shoulders, \"It's your call Murph, I don't mind staying until we get the numbers back.\"\n\nMurph nodded, picking up his pistol on the way out of his office, leaving CG Kelly behind. \n\n\"That went well,\" CG Kelly sighed, taking a swig from the bottle of Bourbon. \n\n********\n\nMorgan was deep in the woods making her way to Joe's house when she felt a strange presence, almost a shift in the air itself. She crouched low, hiding behind a large bush but was not quick enough. \n\n\"Don't bother darling, I've already seen you.\"\n\nMorgan's heart jumped at the sound of his voice, it was Smyth. She'd recognize his thick accent anywhere. \n\nStanding up slowly, she saw him on the other side of the bush with a big smile on his face. He was alone but heavily armed with a MK13. Highly skilled and totally at ease, he was more than capable of taking her in all by himself. Smyth towered over her just like the rest of them, with a full beard framing his square jaw and bright green eyes peeking out from shaggy brown hair. Rough around the edges in all the right ways, she forgot how attractive he was when she couldn't see his War tattoos. \n\n\"How did you get all the way out here little lady?\" he drawled, making his way around the bush towards her. She moved in the opposite direction, keeping a safe distance from him. \n\n\"Am I far from the house?\" she asked, playing stupid. \"I guess I got lost,\" she said in a silken tone, lying to his face. His eyes glowed like smouldering emeralds in amusement. \n\n\"Did you get lost before or after you destroyed CGB's bike?\"\n\nShe smiled mischievously but didn't respond, still moving around the bush to stay away from him.\n\nSuddenly, he stopped advancing toward her and took out his radio. Morgan's smile faded as she realized he was going to call for backup and capture her. Turning it on, she was silent as the sound of static hissed between them. \n\nAfter a few seconds, he finally spoke. \"Clear in the North Quadrant,\" he lied, staring directly into her eyes. \"Everyone go South towards the Stables and search for any missing mares. Report back in 30.\" \n\nMorgan was shocked, he lied and misdirected his own men, something that would surely constitute treason or worse. \n\nWhy?\n\n\"Smyth?\" she started, backing away from him slowly.\n\n\"You're such a sweet thing, I don't want any interruptions while I'm enjoying you,\" he said, his voice smooth as aged scotch.\n\n\"You know I'm branded right, can't you get in trouble for this?\"\n\n\"I helped sign off on your branding,\" he responded, taking off his tactical belt as he stepped closer to her. \"Technically, I wouldn't be breaking our Code...,\" he said, undoing his pants zipper. \"But I also didn't ask permission to have you...\"\n\n\"Smyth you could have any slave here and you've already had me...,\" she continued, still stepping further back from him.\n\n\"No,\" he interrupted. \"I don't consider fucking your mouth as having you. I want your pussy, I've never fucked a half-breed like you, I want to know what it's like.\" \n\nSmyth's grin was cocky and alluring. He held her gaze as she processed his words, her eyes dilating in response to his. He was serious.\n\n\"I'll even give you a 10 minute head start when we're done. I promise.\"\n\n\"I'm surprised Smyth. This is risky, even for you,\" she said, feeling her back come up against the bark of a tree. \n\n\"The Commanders left me in charge of the Compound while they are in the Capitol,\" he said, approaching her slowly. \"I've been waiting for a chance to get you alone since that first day.\"\n\nShe looked at him puzzled, unsure why his frank lewdness was making her pussy wet. His desire to fuck her made her feel almost like a freak or a fetish. It also made her feel incredibly hot that he'd risk so much just to give her pussy a try. \n\n'Men are so weird,' she thought, looking him over. \n\n\"So do you agree?\" he asked, standing in front of her.\n\n\"Just my pussy?\" \n\n\"Are you offering more?\" he asked, placing his arm over her head against the tree.\n\nShe sucked in a panicked breath as his other hand touched her, coming up to caress her jaw lightly. \"I won't do anything unless you agree,\" he said, staring intently at her. \"I don't get off on you fighting me.\"\n\n\"I want a 30 minute head start,\" she countered.\n\nSmyth smiled, taking hold of her hips as he pushed her back up against the tree. \n\n\"Deal.\"\n\nHe kissed her passionately, his tongue dancing with hers' as his hands explored her soft curvy body. She felt him roam from her hips to her ass, squeezing and grabbing it roughly. He was aggressive but not domineering, raising his hands to pull down the front of her camisole for full access to her tits. When he cupped them both she couldn't help but lift her chest up towards his mouth, eager to feel his lips.\n\n\"These are my favorite,\" he said with a grin, bringing his mouth down to her dark pink nipples. Taking one between his teeth, he nipped at her before licking along her areola, stroking the sensitive area with his tongue. She moaned loudly and he quickly covered her mouth with his hand. \n\n\"Shhh,\" he whispered. \"No noise.\"\n\nShe shook her head as he continued covering her mouth, now alternating his suckling between both of her hard nipples. She could feel her pussy tingling, anticipating his thick cock thrusting into it. She squirmed against the tree, her body starting to involuntarily jerk as the desire to touch him made her hips buck up in need.\n\nHe stepped back from her and pulled down her shorts, helping her step out of them. He took her hand and spun her around, pulling her back against his chest in a playful twirl. Kissing her neck from behind, he soaked in all of her unique details. Her hair smelled like vanilla, it was soft and wild, with curls that flowed freely down her back. \n\nExploring further down, he held her tight waist as he continued kissing her neck. He enjoyed how she so easily melted against his body, her round ass pressing into his hardening cock. She had the perfect amount of fat and muscle, making her body both soft and firm. Her skin was now golden from the summer sun and silky to the touch.\n\nShe moaned again as his hands found her bare pussy, touching the outer lips softly. He growled from behind her, taking out a black bandana to tie around her mouth. \n\n\"Murph was right, you don't listen,\" he whispered in her ear as he tied the cloth over her mouth. She struggled in his arms but he already had her in a weakened position. \n\nEven with her pulling away, he still wasn't forceful. He didn't tie the bandana too tight, just enough to give her something to bite on. \n\n\"I want to try this way first,\" he said, bending her over against the tree. Her arms held her up as he spread her legs apart, she didn't know why Smyth was getting her so horny but he was. His genuine curiosity with her body was perplexing and exciting to her. She couldn't imagine growing up in such a small bubble that she never experienced anyone that looked different from her.\n\n\"What happened here?\" he asked, lightly running his finger over the fresh cut on her asscheek. \n\nShe turned back to him and rolled her eyes sarcastically.\n\n\"They need to treat their property better,\" Smyth growled, rubbing his hand over the cut. \n\nGrabbing her hips with both hands he pulled her back towards him. He loved the little dimples that met right above her round asscheeks and how her back had small freckles scattered all across it. Her tight waist made her wide hips even more prominent, especially when she was bent over in front of him. \n\nHis cock was aching to be inside of her pussy, he could feel it pulsing as he pulled it out of his boxers. She made muffled noises and wiggled her ass in front of him, looking back seductively in response. \n\n\"Do you want my cock in your pussy darling?\" Smyth asked. She giggled and said a muffled, \"Mmhmm\" through the bandana.\n\n'This is actually kinda fun,' Morgan thought, appreciating the sweet banter.\n\nRubbing his cock along her warm wet slit he brought his hands back through her hair, wrapping it loosely in his fist. He lined his cock up with her pussy and slowly pushed into her, making sure she adjusted to each inch as he filled her. \n\n\"Fuck you're tight,\" Smyth rasped. \"Are they even using you baby?\" \n\nHe heard her muffled moans as he began pumping into her, watching his cock go in and out of her pink pussy. He couldn't believe how amazing she felt, she was tight, wet and incredibly hot around his cock. The combination of caressing her curves and thrusting his cock into her tight sheath made him feel his balls start to twitch and tighten already. \n\n'Not yet,' he thought, fucking her harder as he lightly pulled on her long curls.\n\nHer soft muffled moans hitched up as he rolled his hips, forcing his cock against her g-spot. Reaching around her, he took both of her heavy tits in his hands and used them to hold her steady as his quickened his thrusts into her. \n\n'God he feels good,' Morgan thought, feeling her slick honey start to trickle down between her thighs. He wasn't too rough, just enough for her body to recognize a real man has entered her.\n\n\"Now, I want to see you,\" he said, pulling her from the tree and spinning her around. \n\nEven with the bandana covering her mouth he could see her sexy smile. Her cheeks were flushed, her eyes shining and hooded with desire. He picked her up and she quickly wrapped her legs around his hips. \n\n\"Stay quiet for me baby,\" he whispered, pulling out the loose bandana from her mouth. She kissed him hungrily, needing to taste him again and eager to please. He enjoyed her reactions to him, he never liked a dead fish or a tied up slave, he wanted a woman that wanted to fuck him as much as he wanted to fuck her. \n\n\"Smyth, what's your name?\" she gasped, feeling the rough bark of the tree hit her bare back. Smyth chuckled softly and kissed up her neck to her jaw. \n\n\"Is that how you do it? With names?\" he asked, genuinely curious.\n\n\"I like to know the name of the man making me cum,\" she whispered, nipping his ear. \"Don't you want to hear me say it? Your name...,\" she asked, holding onto his shoulders as she hovered over his hard cock. \n\nHe groaned low, holding onto her wide hips securely as he entered her soaking pussy in one hard thrust. She gasped but bit her lip, quieting herself. He smiled, kissing her neck again as he began pumping into her pussy. \n\n\"Eric,\" he whispered. \"My name is Eric Smyth.\"\n\nShe sighed lustfully, pressing her large tits against his chest. \n\n\"Eric...,\" she whispered, lightly dragging her long nails over his shoulders. His cock twitched deep in her pussy hearing his name. He quickened his thrusts, feeling his balls start to build toward release. \n\n\"What do you want baby?\" he asked, desperate to hear her beg for him. They bucked together against the tree, trying in vain to stay quiet as they approached climax together.\n\n\"Fuck me,\" she purred, pulling his hair softly. \"Please Eric... fuck me!\" She held onto his shoulders as he thrust into her hard and fast. She heard his growl of satisfaction and felt his hips start to jerk as his cock swelled inside of her.\n\nShe looked directly into his eyes and saw an opportunity to secure herself inside his memory forever. Wrapping herself around him tightly, she rode his cock as he thrust her, maintaining his rhythm. \n\n\"Cum in me Eric,\" she whispered breathlessly, kissing and sucking his neck. He drove hard into her, motivated by a haze of lust and primal need that he'd never felt before. He knew he shouldn't cum in her because she's branded and if she got pregnant with his child instead of theirs... \n\nSmyth felt his balls twitch at the thought and explode, filling her pussy suddenly with thick ropes of his cum as he roared against her neck. She came along with him, enjoying the intensity of his orgasm as her pussy locked down on his stiff cock. \n\nThe two were so enthralled they never saw Squad Leader Mills watching them silently from the dense forest with an evil grin.\n\nThey weren't alone. \n\n**********\n\nThank you so much for reading The War of 2020 PT 8! \n\nI appreciate all the continued feedback, comments and voting on these Parts. This story is so fun for me and a lot of it is actually based off of YOUR anon/user feedback. \n\nIf you haven't already, feel free to check out: The War of 2020 Pt 1 -Pt 7 to understand the story a bit better.\n\nI'm currently working on Pt. 9 but I'm going on vacation so I'll post it as soon as I can.\n\n*Also still looking for an editor [serious inquiries can just send me a PM] that would be willing to take a look see at each Pt. before I submit for publishing.*"
    ],
    "authorname": "MObryan",
    "tags": [
        "forced",
        "interracial",
        "noncon",
        "pregnant",
        "revenge",
        "sharing",
        "spanking",
        "slavery",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-war-of-2020-pt-08"
}