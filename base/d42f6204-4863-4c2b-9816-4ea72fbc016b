{
    "title": "Esther's Story",
    "pages": [
        "CHAPTER ONE\n\n\"It's a tradition,\" Esther reminded herself as she pulled the box from the top shelf. For twenty-five years, since her son Tommy was just two, she had decorated their house from top to bottom with ghosts, vampires and ghouls of all shapes and sizes. She, herself, would dress as a gypsy and read the cards for children of all ages in the neighborhood. She spent days before the annual event preparing homemade cookies, rice crispies snacks, caramel apples, the works. \n\nBut this year, it all seemed too much. Just another reminder of the fact that her son was gone. An IED they said. In a land thousands of miles from their small Texas hometown. A place she knew little about. Somewhere she would never see. It all seemed so unfair. So senseless.\n\nAll she had left of him now was a gravestone that she visited almost daily and the flag folded neatly, sealed in a plastic bag. Occasionally, she would receive an email from his sergeant or one of his friends. Men who had shared his live and passion for defending this country. She would laugh or cry, sometimes both, at their stories of Tommy. But the hard truth was she was alone in this world now. \n\nThe loud knocking startled her. She almost lost her balance on the small ladder on which she stood. \"Damn,\" she cursed. \"I'm coming,\" she yelled as she stepped down. \"Who the hell can that be?\"\n\nShe was not expecting anyone this late on a Friday evening. Most of the town would be at the high school. Football was after all the second religion in this part of the world. \n\nTommy had been the starting quarterback; earning a full scholarship to college for his efforts. It had been a load off her mind. His college fund had been paltry at best. Saving money was hard for a single parent, whose salary as a teacher barely stretched to cover the mortgage, car payments, food and the few extras she could afford to give her only child. \n\nShe padded barefoot across the rough wood floors, down the hallway and into the dark living room. She did not bother turning on the table lamp, instead she flipped the switch on the wall that flooded the front porch with light. \n\nHer heart froze in her chest. When it finally restarted, its pace was twice as fast as usual. Its pounding was so loud that she could not hear herself think. Her chest felt as tight as it had that day. \n\nThe day when she had opened this same door to find the pastor from the local Methodist church that she occasionally attended over the years and a man adorned in the bright red and blue uniform of the US Marine Corps. \n\nThis was not the same Marine. In fact, he was not even wearing a uniform, but his shortly cropped hair and stance would have given him away, even if she did not know him. But she immediately recognized him; she would know this man anywhere. \n\nStaff Sergeant Michael O'Malley. She had seen his face in dozens of photographs that Tommy sent and emailed from Iraq. She could not even begin to count the number of times she read or heard, \"Sergeant Mike says this or did that.\" So much so that she felt that she knew this man. \n\nBut she had never expected to meet him personally. \n\nIt was his email that had arrived a couple of days after that fateful visit that had brought her the most comfort. His praise of Tommy's character, his bravery in the face of combat and his final thoughts of her had touched her aching and broken heart, brought tears to her eyes and given her courage to face the funeral that was just hours away. \n\nHer fingers shook as she fumbled with the door handle. She squared her shoulders and faced the man that was both friend and stranger. \"Sergeant O'Malley, what brings you to Texas?\" she asked.\n\nThe man looked uncomfortable as he shifted his weight from one foot to the other, scuffing his boot against the chipping grey paint. \"Well, Ma'am, I'm sort of taking a tour of this great country of ours. I'm visiting a few old,\" he paused as if uncertain what to say. Esther swore that the pink of his cheeks spread to the very tips of his ears before he finally finished. \n\n\"Old friends I guess. Men, I've served with over the years. Or their families, Ma'am. I know that you will be especially busy this time of year,\" he said spreading his hand towards the pumpkins that sat uncut in the corner of the porch. \"Tommy always talked about the big Halloween party you throw for all the kiddies. I thought maybe you could use an extra pair of hands and a strong back.\"\n\nEsther flipped the hook latch on the screen door, pushing it open wide. \"I'm sorry for my bad manners, Sergeant. Please come in.\" She stepped back as the man passed, motioning for him to take a seat on the coach that sat against the wall. She turned on the lamp that sat next to the couch. Its warm glow filled the room.\n\n\"Thank you, Ma'am. I don't mean to be any trouble. And I'm real sorry if I caught you at a bad time,\" he said as he took a seat.\n\nEsther swallowed back the pain. How could she explain that every day was a bad time? But instead she simply lied, \"No, Sergeant, I was just starting to get things ready. I'm afraid I'm a bit behind schedule this year,\" she said.\n\nHe nodded. \"Tommy told us all about the hard work that you put into everything. I know he loved your Halloween, Ma'am.\"\n\nThe familiar tightness threatened to stop her heart once more as she choked back tears. \"Can I get you something to drink, Sergeant? An iced tea? Some water? I think I might have a soda in the back of the fridge.\" She sought an escape. A moment to collect herself. Away from this man, this reminder of her son. \n\n\"Some of your famous iced tea would be nice, Ma'am,\" he replied.\n\nEsther beat a hasty retreat to the warmth of the lemon yellow kitchen that stood off of the living room. It seemed suddenly very small; compared to the larger than life man whose presence filled every corner of her living room. \n\nShe leaned against the cold porcelain of the sink for a moment. Her eyes filled with tears as she stared out the window at the stars twinkling in the dark Texas sky. She often looked up at those stars and wondered if somewhere out there her son's spirit looked down on her still. She liked to hope so, even though she had long since given up any religious belief in heaven or hell. Life was hard enough to endure. \n\nShe gathered her strength and reached for the cupboard knob, pulling a large glass from the shelf. She turned in the tight confines of the kitchen, opening the freezer door and pulling out a tray of ice. \n\nA couple of tears spilled over the rims of her dark eyes as she brook the ice, the large drops freezing instantly as they dropped onto the frozen rectangles. Placing the tray back in the freezer, she opened the fridge and removed the large glass pitcher half filled with the sweet confection. She hoped it was sweet enough to cover the saltiness of the tears that refused to be checked. \n\nShe reached across the counter and grabbed a dish cloth, passing it across her face to dry their residue. She hope that the dim light of the living room would be kind and cover the red, puffiness of her eyes. \n\nBut it made no difference. If this man could find the courage to come all this way, then she would find the strength to face him. She gathered as much of that strength as she could muster and turned, heading back into the living room. \n\nHis broad back was to her when she entered the living room. He was standing near the old fireplace. He held a silver frame in his large hands. She knew that it was the picture of Tommy's college graduation. A friend had taken the photograph of the two of them on the proudest day of her life, just days before Tommy had left for basic training. \n\nEsther took a moment to examine the man. He was even more impressive in person than he had been in the photographs. His hair was short still, but its black and silver strands were longer than regulation, she was certain. \n\nShe knew that he was taller than Tommy's six foot one. But his more mature body had long since lost the lankiness of youth. Broad shoulders tapered to a waistline that while not fat by any means would definitely give a woman something to wrap her arms about. \n\nFrom this angle, by far his most impressive feature was the way that the denim of his jeans hugged his backside. If a man could have a perfect butt, it was Staff Sergeant Michael O'Malley's. She smiled. When was the last time she had noticed a man's butt? A girlish giggle escaped her throat at the thought.\n\nThe man turned. \"I'm sorry, Ma'am. I didn't mean to pry. It was just that the photos caught my attention. Tommy was a good friend.\"\n\n\"He spoke of you often, Sergeant,\" she admitted as she handed him the glass.\n\n\"You too, Ma'am. He was always talking about his mama's cooking, her garden and her famous iced tea,\" he smiled as he raised the glass to lips that looked way to full. \"And he was right. It is delicious, Ma'am.\"\n\n\"Thank you, Sergeant.\"\n\nHe took a seat on the sofa and she sat in the chair opposite him. For a moment awkward silence hung in the crisp autumn air. \n\n\"So Sergeant what brings you this way? You said you were travelling the country looking up old friends?\"\n\n\"Yes, ma'am. I retired from the Marines a couple of months ago. Since I never married and don't have any family to speak of, I thought I would travel for a while. The Corps and the men and women I served with were the closest thing to family I ever had, so I thought I would check in on some of them. See how they were doing...and help out a bit if I can.\"\n\nEsther's throat tightened at his words. This man seemed as alone in the world as she was now. \"How many places have you been so far, Sergeant?\"\n\n\"Just a brief stop in East LA, Los Angeles,\" he explained. \"Most of time has been in Oklahoma, ma'am. My best friend's daddy was dying.\"\n\n\"I'm sorry to hear that Sergeant, but I'm sure that he was glad to have you there to help out.\"\n\nHe shifted uncomfortably on the sofa. \"Billy died back in ninety-one, ma'am. Desert Storm.\" His fingers traced the drops of water that cascaded down the side of the glass. \n\n\"Oh, I'm sorry I misunderstood.\"\n\nHis eyes still on the glass, he sat it on a coaster on the table next to him. \"When we were in basic training, we became like brothers. Since I didn't have any family, I would spend most holidays with him and his family. When he died, his parents insisted that I keep it up. They said that they had lost one son they weren't going to lose another one.\"\n\nEsther felt the hot tears cascading down her cheeks. She felt the unknown couple's pain; it was her own. \"You were lucky to have one another, Sergeant.\"\n\nHis grey-blue eyes met hers. \"Yes, ma'am. I was. They were the parents I never had. Miss Lula died about five years ago. Breast cancer. Mister Clyde sold the farm then, because he could no longer work it and there was no one to pass it on to. Billy's only sister had gotten married and moved to Chicago twenty years ago.\"\n\nThe man continued to toy with the dew that coated the cold glass. Esther noticed that his knuckles whitened and his voice deepened as he spoke. \n\n\"He moved into one of those assisted living places in Oklahoma City. Until he started to forget things. Then he had to move into a nursing home a couple of years ago.\"\n\nShe could tell that the experience was still as raw to him as Tommy's death was with her. Without thought, she reached across the short distance; her mocha colored hand covered his larger one. The chill of the glass that he still held barely registered. The heat of his skin overwhelmed all else.\n\nHe looked up. Those pale blue eyes held her gaze for a moment. Pain, loneliness and uncertainty filled their depths. But there was something else as well.\n\nAwareness gripped Esther's guts like a vice. Her throat tightened until she was barely able to move air through it.\n\nSexy. Smokey. Strong. Words raced like wildfire across a dry East Texas pine forest, kindling and burning everything in its path.\n\nShe was not a loose woman. In all the years since her one mistake as a freshman in college, she could count on one hand the number of men that she had had relations with. And still have a couple of fingers left over.\n\nBut none of them had ever affected her, the way this man did.\n\nHell, she remembered the first pictured she had ever seen of him. Just days after Tommy had arrived in Afghanistan; she had opened the first email since his deployment. He had written of the place; dry and hotter than the worst Texas summer. \n\nHe had spoken too of the men with which he served. Especially the non-commissioned officer who as a lowly Lieutenant was his guide into this new world. He had attached a couple of pictures.\n\nOne was of him standing outside the tent that was to be his home for a seemingly indefinite period of time. His boyish face grinned back at her as if he were on some holiday rather than risking his life to defend his country.\n\nBut when she opened that second picture, Esther had caught her breath. The man standing next to her son could have given that famous Hollywood actor a run for his money, the one who had played the doctor on that television show and now starred in half the movies that came out. She had searched for his name, but Esther had never been a big fan of television or movies. \n\nShe far preferred the written word. It might take paragraphs or even the thousand words that the proverb said to convey the same meaning as those pictures but for her the message was always more powerful. \n\nHer love of words was what had led her to become an English teacher. A passion that extended to the volumes of leather and cloth bound journals that gathered dust in boxes under her bed.\n\nBut that day, words had failed her. The man, who stared at her from that computer screen, had stolen her breath and captured her heart in a way that she had never experienced.\n\nOver the next eighteen months, there were more pictures and stories galore of this man. Emails that she saved, not just because they came from her beloved son. But because they told of the exploits of a modern hero as large as life as any of the ancient gods and myths that she taught her classes. Ares. Thor. Odysseus. This man was all of them rolled into one...and more.\n\nShe had just never in all her born days expected to meet the man in person. Especially after that last email. His words lifting her, giving her wings and courage to face a seemingly impossible task. She had thought it was the end of a chapter. No, it felt more like the end of the book. The end of her life as she knew it.\n\nOver the months, if her dreams were filled with nightmares of smoke and bombs, stifling heat and mournful cries of pain in battles that she could only imagine; they were equally filled with soft caresses and whispered words of passion from an imaginary lover whom she had never met. At times, the dissonance between the two had made Esther fear for her sanity.\n\nNothing could have ever prepared her for this moment. For meeting the man that had starred in the most erotic fantasies of her life. It was not something she had ever dared imagine. She wanted to pinch herself.\n\nBut there was no need. The heat and awareness rising off his touch was shock enough. The unexpected and all too familiar tingles that raced up her arms, leaving a trail of tiny hairs each standing on end, was proof enough.\n\nEsther drew her hand back. She was careful not to do it too quickly even though it felt as if she had touched open wires. \n\nHer eyes dropped and she willed herself to remember that this was nothing more than a friendly visit as he said...he was checking in on his men or their families. She was nothing more than another one of those families, an obligation for this honor bound man.\n\nFinding her voice, she forced words past her lips. \"I'm sorry, Sergeant. Sorry for your friend and his family.\" Her voice sounded hallow even to her own ears.\n\nThe man drew in a depth breath. She willed herself to do the same. She repeated the ritual of cleansing breaths that had become her salvation over the past months when despair and grief stole her very soul.\n\nHe smiled. It did not reach those compelling grey-blue eyes but then again in all the pictures that she had saved on her hard-drive Esther was certain it never had. \n\n\"Thank you, ma'am,\" was his only reply. They drank in silence for a couple of moments. It should have been awkward, but somehow it was not.\n\nAfter a time, they fell once more in casual conversation. Even though she could not keep her eyes from straying to those broad shoulders or those salt-and-pepper locks that curled just a bit at the ends now that it was longer.\n\nShe listened as he told his stories. She was surprised at how easy the man was to talk with. After a while the conversation turned. They shared stories of Tommy. They laughed often. And on more than one occasion, Esther would have sworn that she saw the man wipe moisture from those eyes. She did not even bothered try to hide the tears that occasionally ran down her cheeks. \n\nThe clock on the mantle chimed eleven, a reproach to her for losing track of time in their shared joy and pain.\n\nAs if reading her mind, the man rose from the coach. \"I better be going, Ma'am. It's getting late.\"\n\n\"Where are you staying, Sergeant?\"\n\n\"I'm pretty basic, Ma'am. For my travels, I bought a tent that I keep tied to the motorcycle. So I usually just look for some quiet spot where I won't be in nobody's way.\"\n\nEsther paused at his words. The house only had two bedrooms. Hers and the one that had been her son's. That door was closed. Its walls filled with photographs of him and his college friends. Shelves lining one wall were filled with trophies from his athletic competitions. His clothes still hung in the closet. \n\nIt was a shrine that she had been unable to clear out. She rarely even went inside, except on the worst of her days when she curled into a ball clutching the pillow that she swore still held the smell of her baby boy. \n\nShe would cry for hours, great gulping sobs that rent her soul until they slipped away to nothing more than hiccups that left her weak and drained. Then she would slip from the safety of this time capsule and go back to face the reality of a world without her Tommy. \n\nFor anyone else in this world, she would not even consider it. But somehow she knew in her heart that this man would understand. Would appreciate the honor that she bestowed upon him. Would in turn honor her son's memory as few others than herself ever could. \n\nWith a slight hesitance in her voice she said, \"I won't hear of it, Sergeant. You can stay here with us.\"\n\nThe words slipped out before she could stop herself. Her fist went to her mouth in horror at the slip of words. There was no us...and they both knew that. This time she feared that the tears that had spilled from her eyes so freely these past hours would be more like the sobs that were her nightly lullaby.\n\nHis strong hand wrapped about her upper arm. \"I understand,\" he whispered so low that Esther knew he really did understand. She nodded at his reassurance.\n\n\"Please stay, Sergeant,\" she reiterated her earlier offer.\n\nThe man nodded.\n\n\"I'll grab some fresh sheets and make up the bed in Tommy's room then,\" she offered.\n\n\"No, Ma'am. This coach here will be just fine. It's a far sight better than a lot of places I've slept over the years and better than a sleeping bag on a chilly night like this.\"\n\nEsther looked at the man. A bond of shared pain tightened in her gut. But she just nodded in silent thanks for his gesture of sacrifice. \"If you're sure, Sergeant? Then I'll get some sheets, a pillow and quilt for you.\"\n\n\"I'm sure, Ma'am. I'll be just fine here,\" he smiled.\n\nEsther raced from the room. She clung to the mundane tasks as she noticed that in her race to answer the door earlier she had felt the wooden door to the linen closet open.",
        "Reaching inside she found a pale blue sheet and matching comforter. They were the extra things that she had always kept for those times when Tommy bought some friend home from college. She reached a bit further back and found the matching pillow. \n\nShe stood on her tip toes and pushed the box that she had been fiddling with earlier back on its shelf. There would be time enough to deal with that tomorrow, she thought as she pushed the step stole back inside the closet as well.\n\nWhat the hell was she thinking? She asked herself as she clutched the linens to her chest. She had just asked a stranger to spend the night with her. \n\nNot that she had ever spent much time caring about what the people of this small town thought about her. When she had come her, she was nothing more to any of them than a stereotypical single black mother. If over the years, her dedication to her son, her work as a teacher and her unremarkable life had earned their respect it meant little to her.\n\nNo, what bothered Esther was not what people thought. It was what she felt. Her awareness of this man was uncomfortably new. Since her crush upon the college football hero that had taken advantage of her, robbed her innocence and given her the most precious gift of all, Esther had been virtually bereft of sexual desire.\n\nWhether it was the rape that she never told a single soul about, some fluke of nature that made her less than a woman, or the responsibilities of her life as a single mother, men just were not something that she wasted her energy upon.\n\nExcept for the one that sat in her living room. Her reaction to him had been different from that first email. It was not the infatuation of a young girl that had ripped Esther's life apart and taken it down a different path.\n\nOh, she supposed it might be that she had read...and written one too many romance novels. Staff Sergeant Michael O'Malley would certainly fit nicely upon the cover of any of them. Her fertile imagination captured the image of him dressed in fatigue pants, his chest bare, sweat gleaming upon his skin.\n\nShe shook herself. This was exactly why this whole thing was a bad idea, she thought. How could she manage sleeping under the same roof with the man that had haunted her dreams for over two years?\n\nHow could she turn away the man that had been Tommy's best friend? Had shared the final chapter of his life? A man that had come all this way to help her out...for Tommy's sake.\n\nClutching the sheets tight to her chest like a Kevlar vest, she took several cleansing breaths before turning back towards the living room where the man waited. She could do this. It was just three days until Halloween. They would be busy. There were pumpkins to be craved. A haunted house to be built. Cookies and a dozen more treats to be baked. And hundreds of goody bags to assemble.\n\nThere would be no time to lust after a man she could never have. With a secret smile, she took her first step forward. But who knew maybe she could gain a bit of fodder for her fertile imagination. She had to admit that in person this man was even more compelling than anything in those photos. \n\nShe wondered for a moment if there would be an opportunity in the coming days to see him without his shirt. She blushed at the memory of her favorite photograph. She would just have to pray for a couple of Indian summer days.\n\n***\n\nSleep was even harder to come that night. Esther tossed and turned in her double bed. Her mind filled with the stories that they had shared. She had known so little of the past few years of her son's life. She always thought that he was trying to protect her from the harsh realities of his three tours of duty in the Gulf. This evening had filled in a few of those gaps. She in turn had shared stories of Tommy as a boy with his closest friend. A man she could tell did not easily laugh or smile. \n\nAs most night, Esther felt the coldness of the tears as they dropped on the crisp cotton of her pillow case. She did not want to disturb the Sergeant. So this night she fought hard to keep back the sobs that most nights eventually lulled her into an exhausted slumber. \n\nInstead she sought a diversion; her always active imagination came to her rescue. Closing her eyes, she imagined the man lying on her couch. He would not dare sleep naked, not when there was a woman in the house. Probably not at all, the man would have learned the essential... always be ready, alert. \n\nBut she would bet that he wore nothing more than his underwear. Boxers? Briefs? Those new skin tight things that were a mix of both? \n\nOf course, she did not need to use her fertile mind to conjure up images of the golden brown expanse of muscles lightly sprinkled with dark curls. She had more than one picture of his chest. But her curiosity was peeked about his legs that were nicely encased in those denim jeans. And of course, that perfect butt. \n\nDefinitely the new skin tight boxer thingies she hoped. They would show off his assets to the best advantage. She drifted off to dreamland that night with a girlish grin playing on her dark mocha lips. Pride in her use of irony and simile. Ass...assets.\n\nCHAPTER TWO\n\nThe sun was streaming between the pale pink sheers when she woke up the next morning. \n\nRolling over, she picked up the clock. It was almost eight. A much later start to the day than she had anticipated.\n\nBut then again, with an extra set of hands and a strong back as Sergeant Mike had said, she could breathe a bit easier about the job ahead. \n\nThrowing back the hand sewn quilt that was the newest addition to her room, she stretched. Her full breasts brushed against the soft nylon of her night gown. The dark brown areolas stood at attention. She supposed the unusual reaction to the slight brush against the material was due to the erotic videos that had played one after another through her mind the night before.\n\nIt seemed that every ancient legend, Jason and the Argonauts, Hercules and Hector, had played out in Technicolor dreams with Sergeant Mike in the starring role and she his leading lady. Oh, and there were a few modern romance storylines thrown in for good measure, Viking, Scotts and contemporary heroes that wound their tales through the night leaving her mature body alive in a way that she could never remember before.\n\nReaching for her thick cotton robe at the foot of the bed, she wrapped it about her like chain mail of a medieval warrior. Cinching the belt tight about her still thin waist, she girded herself for the day. The next three days, she reminded herself with both trepidation and excitement. Three days with this man. It would either kill her or bring her back to life.\n\nBut for now, breakfast was the first order of business. She tip toed out of her bedroom and down the hall. She stopped at the edge of the living room. A smile broke wide across her face. Bare chest could be seen above the pale blue of the sheets that wound tightly about his waist. She fought back the urge to steal across the room and trail her fingers down the hard ridge of abdominal muscles. \n\nShe imagined her fingers slipping beneath the heated cotton sheets. Imagined what she would find beneath...white? Regulation green? Black? She doubted the man who had followed such a strict code for most of his life would dare something unconventional like red, blue or purple. But the thought held possibilities.\n\nThe man turned in his sleep and Esther beat a hasty retreat towards the kitchen. It would not do to begin the day with him catching her ogling his half naked body.\n\nThrowing open the refrigerator doors, she stared into the vast expanse of emptiness. If she was to play hostess for the next three days to a man, a strapping man, she would have to add a trip to the grocery store to her to-do list. Since Tommy had left for college, she rarely cooked. It simply was not worth the effort for one person. \n\nAnd since that day when her world changed forever, food had even less meaning. Everything was cardboard, a necessity to be consumed if she was continue living, something she was not thoroughly certain she wanted to do anyway. But until she made that final choice, it was something to which she gave a passing salute.\n\nMost nights she survived on a sandwich or cup of soup. If she bothered at all. Many times, she simply survived upon the scant meal that she forced past her lips in the teacher's lounge. Breakfast was certainly not on the menu.\n\nScouring the shelves, she managed to find a packet of sliced ham, leftovers from her sandwiches and a bit of cheese as well. There were eggs a plenty. She had brought them on her way home from work yesterday, ingredients for her Halloween cookies and cupcakes. She could pick some more up when she went to the store later. A Denver omelet it would be then.\n\nBut that seemed scant fair for such a robust man. Reaching into the cupboard she drew forth a container of flour. Combined with the eggs, a touch of sugar and some milk that she kept on hand for her morning breakfast of coffee on the run it would make a nice side of pancakes. As an afterthought she grabbed a packet of the chocolate chips from among the items on the counter top that awaited her. \n\nChocolate chip pancakes had been Tommy's favorite. The thought was barely through her mind before she felt the noose tighten about her throat and chest. Had he shared that with the Sergeant? Tales of Saturday morning cartoons and chocolate chip pancakes cuddle together under the blankets in front of the old television. He had practically been in college before that tradition gave away to morning runs, his friends and girls.\n\nEsther drew another deep cleansing breath as she took out bowls and pans. She brushed back tears with the back of her flour covered hand as she mixed a batch of pancakes. The skillet heated on the burner as she poured the first of the batter into it. \n\nShe grabbed another pan and fried up the ham and an old onion. Cracking three eggs into another bowl she beat the mixture, wishing that she had the will to beat back the despair that gripped her like the fiercest of ancient villains, Medusa, the Minotaur or the Sphinx. \n\nLooking into the bowl as a tear drop spiced it; she added another egg for good measure. Like Tommy, Sergeant Mike was a big guy. He was certain to have a big appetite. She poured the mixture over the ham and flipped the pancake. It was a perfect golden brown, just the way that Tommy liked them. She reminded herself to take deep cleansing breaths as she began grating the cheese. \n\n\"Something smells delicious,\" she jumped at the sound of the deep voice behind her. Raising a messy hand, she swiped away the tears once more.\n\nForcing words past the tightness in her chest, she smiled. \"Thought you might be hungry this morning so I made some breakfast. It isn't much, just an omelet and some pancakes. I'm not a big breakfast person, but we can pick up some things later when we go into town. More eggs, sausage, bacon, whatever you like.\" \n\nEsther knew she was rambling, but was powerless to stop it. Knowing that her dark eyes were probably puffy and red already, she made excuses. \"Afraid I did not realize how strong that onion was. I'll have to get fresh ones of those too.\"\n\nComing to stand next to her, Esther felt his presence like the heat and steam rising off the hot Texas asphalt after a summer thunder storm. \n\n\"You shouldn't have gone to any trouble, ma'am. I could have grabbed something at the diner. Heck, I should be the one to treat you.\"\n\nShe laughed softly, \"And get a belly ache this early in the morning? We wouldn't get much done today after eating at that greasy spoon.\"\n\nThe man smiled softly at her. \"Yeah, Tommy did say that your cooking was much better than anything else. Of course, that was usually said after K rations or another round of powdered eggs in the mess hall. It wasn't fair the way he went on and on about your cooking as we ate that crap.\" Inhaling deeply, he added, \"It certainly smells like the boy didn't lie. I don't suppose those happen to be chocolate chip pancakes, by any chance?\"\n\nEsther smiled. So Tommy had shared their little secret with this man. \"Yes, Sergeant, they are.\" Flipping the finished product onto the plate next to her, she handed it to him before turning back to the stove to add more batter to the skillet.\n\nThe man brought the plate close to his face. He appeared almost boyish as he grinned and breathed deeply. \"Hmm, I don't think I have ever smelled anything this good, ma'am.\"\n\nEsther handed him a fork as she turned the heat down on the stove. \"Then dig in, Sergeant. There is plenty more where that came from.\"\n\n\"There's coffee too in the pot,\" she added as she checked the omelet. \"Cups are in the cupboard there,\" she motioned with her elbow towards the cupboard next to her.\n\n\"Coffee would be nice,\" he said as he squeezed in next to her.\n\nThe hard granite of thighs brushed against hers. Esther forced air through her lungs trying to concentrate on cooking and not upon this man. But her body was attuned to his presence; her son's words ran like an old record through her mind. \"Sergeant Mike...\"\n\n\"Yes, ma'am?\" She blinked. She had been so deep in thought that she did not realize she had said it aloud. \n\nHe was inches away. His large body touching hers in places as he paused in mid-air, reaching for a cup. Her whole being sang like the choir at the AME church around the corner. Their African spirituals so loud and heartfelt that they carried on the winds to invade the peace of her home. The sound of joy and faith was so powerful for sometimes even she wanted to believe.\n\nIn that moment it was something decidedly different that Esther wanted to believe. What would happen if she leaned in just a bit? What would he taste like? What would it feel like to be held in those strong arms? To be loved by this man...if only for a moment?\n\nBut then she came crashing back to earth. Women her age should be past such things, especially women who never had a great deal of experience to begin with. School teachers, who read about love and sex but never gave into those sorts of wild fantasies.\n\nHe cleared his throat and Esther stared up into those blue-grey eyes. For a single moment, the blink of an eye, she would have sworn that he felt it too. That he was even tempted to kiss her half as much as she wanted to be kissed. She closed her eyes; whether to clear her mind or in anticipation of that kiss she was not certain. \n\nThen he was moving away. Looking up she saw that held an old Aggie mug in his large hands. He cupped it so softly as if he instinctively knew its meaning. Tommy's old cup. It was enough of a reminder of who she was, what she was...another duty in a life time of them.\n\nThe smell of burning chocolate whiffed to her nose. Fresh tears glistened in her eyes as she turned back to the stove.\n\n\"Damn,\" she cursed as she reached for the spatula. Turning it she saw that it was not the disaster she had feared. Just a bit too dark around the edges. She would have to stay focused. The burnt pancake and the mug told her...some things are not for you. This man was one of them.\n\nScooping the omelet and a couple more of the pancakes onto a plate, she motioned for him to take a seat at the table. Hot steam was rising from Tommy's mug as he followed her there.\n\n\"Can I get you some milk for your coffee, Sergeant? More butter?\" she asked. Her voice sounded tight even to her ears.\n\nThe man shook his head. \"Aren't you joining me, ma'am?\" \n\n\"Afraid I really am not much of a breakfast person. Besides now that you are here, I need to stop procrastinating this Halloween thing. Get the show on the road as they say. You eat while I go get dressed and we'll head into town for a few more things.\"\n\nHe nodded as she made her escape. Just barely. Tears cascading down her soft brown cheeks. \n\n***\n\nThe sun was sinking low into the East Texas sky, a kaleidoscope of blues, oranges, reds and even purples as it disappeared behind the trees. Esther stood up from her perch on the top step. She stretched, her back aching from the past hour spent bent over a half dozen pumpkins with a paring knife in her hand. \n\nBefore her sat six Halloween jack-o-lanterns now. Some funny, some scary, she was afraid that this last one even held a bit of sadness about his eyes and mouth. She would work on him some more tomorrow.\n\nTaking up almost all of the right side of her front yard, the PVC pipe and plastic sheeting that would become the haunted house was finally taking shape. Its maze of rooms that would hold a menagerie of horrors was almost complete. \n\nTomorrow they would add the final touches, cotton stretched out to form spider webs from the ceiling and doors. Tiny plastic creatures centered in each web, awaiting its prey. Old cotton sheets carefully shaped to give a ghost like appearance. The dressmaker's mannequin attired in all black with its long white wig and teeth that would be dripping with blood on Halloween night.\n\nThe man appeared from behind the curtain of plastic. His smile was wide as he walked towards her. She could see the fine sheen of perspiration that glistened like the first dew of spring on his brow.\n\nInstinctively the mother in her reached for the almost empty pitcher of homemade lemonade that sat next to her on the porch. She poured the last of it into his glass. By the time he reached her, she was ready, glass in hand.\n\n\"Not a bad day's work if I do say so myself,\" he smiled\n\n\"Not a bad day at all, Sergeant,\" she added returning his smile. \"I don't know what I would have done without your help. I forgot just how hard that damned thing was to put up.\"\n\n\"It wasn't that bad, ma'am.\"\n\n\"Maybe not for you, Sergeant, but you have a lot more experience building things and putting up tents than I do. Even if I have written instructions, I can never get it right.\"\n\nHis deep laughter caressed her skin like the refreshing evening air. \"Yeah, Tommy told us all about your first Boy Scout camp out when we were putting up his tent. Took us twice as long to get his up as any of the others. We were all laughing so hard at his story. Please tell me that you did not really try to put the center pole into the ground with your hair brush.\"\n\n\"Hey, I didn't know we would need a hammer to put the damned thing up and I did not want to embarrass Tommy in front of the other boys by asking to borrow one,\" she defended that long ago indiscretion. \n\n\"When he told us how it came down in the middle of the night, my ribs actually hurt from all the laughing.\"\n\nHer dark gaze could not help but take in those ribs now. Although the day had been a scorcher for this late in autumn, his t-shirt had remained firmly in place all day. She had cursed his chivalry until she realized that the play of the thin damp cotton across his muscles was an enticing seduction in itself. The way that it clung like skin to his broad his chest as he stretched and lifted, bent and pulled had gotten her so worked up that she had finally excused herself to work upon carving the pumpkins. \n\nBut even then she found herself looking up every couple of minutes to catch a glimpse of the man. Perhaps that was why one of the jack-o-lanterns had such a snarky grin on its face. \n\nThe Sergeant was just finishing his lemonade when Cassie Monroe sashayed up the walk-away with six year old son in tow. With her perfectly applied make-up, big hair and tight jeans, her neighbor broadcast her intentions to any male within a twenty mile radius. \n\n\"Evening, Joey,\" Esther said to the little boy that would sometimes use the old swing set and tree house in her back yard. She tried to ignore his brazen mother as the smell of beer drifted on the night breeze to her nostrils. The younger woman must have had a couple to bolster her courage before making her move.\n\n\"Evening, Miss Esther,\" she purred with saccharine sweetness. \"I was beginning to think that Halloween was canceled this year,\" she might be addressing Esther but her eyes were raking up and down the Sergeant's body like a barn cat toying with a mouse before devouring it. She turned her gaze to Esther's for a second as she dealt the death blow. \"Not that anyone in town would blame you. Not with your son's d-e-a-t-h,\" she spelled the word with pretense.",
        "Esther bit her tongue to keep from responding in kind, the words 'Why Cassie, I'm so proud you can spell after all those F's in my English classes.' If the woman deserved her animosity, it was not something she wanted either the little boy or the Sergeant to witness.\n\n\"And I see you hired a handy man to help out,\" she extended her carefully manicured hands; her long red nails glistened like cat's claws in the fading light. \"I'm Cassandra Monroe and this is my son, Joey. You must be new to Sebida. I don't think I remember seeing you around town before.\" She winked as she finished, \"And I definitely would have remembered seeing you.\"\n\nEsther busied herself showing Joey the jack-o-lanterns. Why did this woman still get to her? The pain that she had caused her son was a distant memory. He had long since recovered from his momentary lapse of judgment brought on by raging hormones in high school. He had even laughed at her, throwing her hurtful words back at her when she had tried last year on his final visit to draw him into her web.\n\nBut the way that the woman was fawning over the Sergeant sickened and disgusted her. Not that it was any of her business. Even if the man was a good decade older than the woman. She supposed that decade did not matter as much in the eyes of most people as the decade the other way that stood between her and the Sergeant. \n\nIt was perfectly acceptable for a man in his mid to late thirties to date a woman in her twenties. But if a woman were to do the same? And certainly a woman of almost fifty had no place even having the type of thoughts about a man so much her junior. \n\nBut what could thoughts, fantasies even, hurt? It was not as if people could read her mind, see the naughty images that had haunted her sleep and kept her half awake all night long.\n\n\"I'm so glad that you came to help Miss Esther out then. All this would have just been too much for a woman her age,\" Esther heard the woman say.\n\nThe Sergeant took two steps closer to where she stood on the front porch with the boy. \"I'm sure a mature woman like Esther would have managed without my help. After all she raised one of the finest men I have ever known on her own so a little thing like this would be a breeze. But then again I don't have to tell you what a special man Tommy was, do I?\" \n\nEsther did not know why her heart swelled with pride and sang with joy at his words. At the fact that he saw for himself the foolish games this woman played.\n\nShe watched as the woman's bravado deflated just a bit at the reminder of her past. Holding out those sharpened claws, she demanded, \"Let's go, Joey. Miss Esther and her guest have lots of work to do.\"\n\nThe boy stopped toying with the pumpkin and looked up at her. \"Miss Esther will there be marshmallow treats this year still?\"\n\nEsther smiled at him, brushing a lock of his dark curls back from his light brown face. \"Of course, there will be sweetie. I'm going to make them in a bit. You stop by here tomorrow after Sunday School and I'll let you be my taste tester,\" she promised.\n\nHer reassurance was all the boy needed to know that all was right his world as he jumped from the top step.\n\n\"How many times do I have to tell you not to do that shit?\" the woman scolded as she dragged her child back down the path and across the street.\n\nEsther sighed. Her heart heavy for the child. When he came tomorrow, and she was certain he would, even if he had to sneak away from his drunken mother, she would look closely for bruises. She knew that the day was coming when she would have to act...for the child's sake. \n\nBut she knew too that it was an action that might well be the final straw that would sever her ties to this place that had been her home for so long. These people had never really accepted her, never would. If she reported the grand-daughter of the mayor to social services, it would all be over. Her job and the life that she had built here would mean nothing. \n\nNot for that uppity half breed Negress from the city with her bastard son that could pass. Oh yes, Esther had never been as oblivious as these people thought to the things they said behind her back. And she knew far more of their secrets than they imagined.\n\nPerhaps it was time to move on anyway. This house, this place held so many memories. But then again, most of those memories were good ones. Her son laughing and playing on the swing set. Half the children in town filling his tree house as she served lemonade and cookies to everyone. White and black.\n\nThis place was all she had known for so long. Over half of her life spent hiding in its fa\u00e7ade of community and days long gone by. Where would she go? What would she do? It was another of the bitter realities that had her crying herself to sleep each night.\n\nA hand gripped her arm, drawing her back from the darkness that threatened to swallow her soul. She wiped her hand across her face, feeling the scalding trail of tears for the first time then. \n\n\"I'm sorry,\" she barely choked out the words.\n\n\"No need to be, ma'am. A woman like that has no business saying some of the things she does. She deserves everything she gets in life.\"\n\nHis words made Esther wonder just how much this man knew of their life here. Chocolate chip pancakes, iced tea and falling tents were one thing. But had her son shared the darker side? She supposed when you entrusted your very life to the comrades around you such things were trivial. \n\nShe certainly could not blame her son, who had grown up without a father, grandfather or any real male influence. His emails had dripped with admiration and worship and for the first time Esther had realized how much her son had suffered from the lack. \n\nThis man had been the ultimate role model that Tommy had been seeking all his life. The coaches, Scout leaders and others who had failed to see past the color of her skin or his birth, their half-hearted welcomes pushed aside as he had finally found the acceptance he always craved in their friendship. \n\nShe reached up. Her hand covering his as it rested upon her arm. \"Thank you. Thank you for giving him what he never had.\" \n\nThe words were barely past her lips as she turned, ripping her arm from his grasp as she fled into the house. Tears raced down her face as she ran for his bedroom.\n\n***\n\nEsther lost track of time as the pain poured out behind that door. The sun had fully set and darkness had enveloped the house when she cracked the door.\n\nThe red stains of embarrassment on her high cheek bones warred with the red swollen eyes for dominance. This release was a luxury she should not have allowed herself. She did not see the Sergeant as she stepped from the room. \n\nShe would not blame the man if he hoped on the back of his motorcycle and high tailed it out of town given her behavior. She squared her shoulders and drew in a deep breath as she went looking for him. A quick perusal of the living showed that he was not that. The lights were still out in the kitchen so he must not be there either.\n\nPanic threatened to choke her. She told herself that it should not matter if her odd behavior had run the man off. She would manage; she always had. But the tightness in her chest said otherwise. \n\nThe cool night air hit her as she opened the front door. The yellow glow of the street lamp gave a ghostly air to the front yard. Relief welled up inside of her at the sight of the red Harley sitting in the drive way next to her battered Neon. But she did not see the man. \n\n\"Join me.\" She was about to turn and close the door behind her when she heard that deep purr from the dark recesses to her right. \"Please.\"\n\nPulling the door softly closed behind her, she made her way to the old wooden swing that was suspended from the porch rafters. The man leaned back in it. He used his dusty boots to kick slowly back and forth. \n\n\"I should apologize,\" she fidgeted with her hands unable to meet his gaze.\n\n\"Don't you dare,\" he replied. \"I know things are hard. Maybe I should not have come. Maybe I'm too much of a reminder of Tommy right now. I can leave if you want.\"\n\n\"No!\" The words sprang out of her mouth quickly. Perhaps too quickly, she thought. She paused for a moment. Her eyes searched the night sky as if seeking guidance. Some miraculous answers to questions she could not even voice. But there were no answers to be found as with so many things in her life. There was only silence and darkness.\n\nHer voice was calmer when she spoke again. \"No, Sergeant. Please don't go. Truth be told I get like that at the drop of a hat. Sometimes my tears could even fill in ten gallon one. Having you here, well, it helps a bit. At least there has been some laughter to break up the tears.\" \n\nWaving her hand about she continued, \"Besides without you how will I ever get that damned thing finished?\"\n\nHis dark brows furrowed and for a moment Esther felt the bile rise in her throat, certain he would refuse.\n\n\"Alright. If you're sure.\" He patted the seat next to him. \n\nShe smiled and sat down. They rocked softly in silence for a couple of minutes. Esther knew that if she closed her eyes and laid her head back she would be cradled by the strong arm that rested along the back of the swing. She was tempted. Tempted to do just that. Instead she willed herself to sit still next to him, her bare feet keeping time to the rhythm of the swing on the cold concrete porch.\n\nHe shifted a bit, turning so that he faced her. The grey of his eyes shone brightly, reflecting the moon light. \"I never want to hurt you.\"\n\nEsther sighed and gave into temptation. Her tight dark curls brushed against heated skin in the darkness. The heat was a stark contrast to the cool night air. \n\n\"You don't. You didn't.\" She sighed as her eyes closed. \"Life hurts. It isn't fair, but there is nothing much we can do about that.\"\n\nShe felt him stiffen a bit, whether at her words or the close contact, she was uncertain. She started to move away, but his fingers curved about her shoulders and he pulled her closer instead.\n\nA thousand sparks flittered along her shoulder racing to her brain. The tingling spread through her ripe body like a bird song on an early spring morning, ushering in a new season and new life.\n\nOf course, as a mature woman, she knew better than to read anything more into the Sergeant's actions than an act of friendship, comfort in her time of need. But that did not matter as she held tight to her girlish fantasies, treasuring them like one of the leather bound journals beneath her bed.\n\nThey sat, rocking in silence as the cool air wrapped like a quilt about them. The stars glittered and danced with the crescent moon. The crickets and frogs sang lonesome melodies that could inspire any country songwriter to ballads of love and loss. They sat, rocking. Forever it seemed. \n\nEsther held her breath afraid to break the spell, the companionable silence that communicated more than words ever could between them. But she was powerless to stop the shiver that ran down her body. She was uncertain. Was it the coolness finally seeping into bones that were not as young as they once were? Or was it the heat that she felt emanating from this stranger, friend and fantasy lover? It did not matter either way her reflexive action broke the magic. \n\nHis voice was husky when he spoke a seduction in itself. \"I'm sorry. I forgot how cold it was. We should go inside before it gets any colder.\"\n\nEsther sat up and nodded as reality pushed back the crystal edges of her fantasies. \"I should make you something to eat. You must be starving, you worked so hard today and all we had was those sandwiches earlier.\"\n\n\"Don't worry about cooking tonight. It's been a long day for you too.\" He stood up and held out his hand. \n\nEsther smiled at the image of long ago knights of the realm whose chivalry was a thing of legend. She shook her head and smiled, thinking perhaps they lived today, reincarnated in men like Sergeant Michael O'Malley. She took the hand he offered as he gently tugged her to her feet. \n\n\"I won't hear of it, Sergeant. Dinner, it is and that is final.\"\n\n\"Yes, ma'am,\" he grinned with a mock salute. \n\nShe elbowed him in the ribs. \"Come on then. You can get cleaned up while I cook.\"\n\nHe looked down at his dusty clothes and sweat streaked hands. \"I would offer to help out in the kitchen, but I suppose you are right. I'm a bit too messy to be of much use there.\"\n\nEsther shivered again as the memory of that morning's brush in the kitchen played through her mind. The idea of working side by side with this larger than life man in the confines of her tiny kitchen was enough to send her scurrying for safety.\n\n\"You'll find towels and stuff in the closet right outside Tommy's room. It is the last door to the right of the bathroom at the end of the hall.\" \n\nShe headed for the front door as she added, \"If you need anything, just give me a call.\"\n\n\"What if I need you to scrub my back?\"\n\nEster froze with her hand on the door. For a moment, she was not certain that she had heard him correctly. The images of those broad shoulders and back that had played under his t-shirt all day dried out her throat until she could not have forced a response across the parched desert even if she had one. \n\nInstead she forced her hand to open the door and rushed through the living room to the safety of the kitchen. A few moments of privacy to clear those images from her brain was what she needed then.\n\n***\n\nBy the time that he had finished his shower, supper was finished. Esther had kept things simple. She had made a fresh salad and grilled the steak that she had picked up during their trip into town that morning. She filled out the meal with some fried potatoes and onions and steamed a few green beans. It was nothing fancy but it should be filling after a long day of work.\n\nShe was just taking the steak from out of the oven when he came into the kitchen. Instead of the tight jeans, he wore an old pair of green sweat pants and sleeveless t-shirt. Esther forced her eyes from those muscled arms and shoulders. The dark chest hairs that peaked out at the edges of the shirt did not merit further consideration. Not if she was to make it through dinner with this man without throwing herself at the man as brazenly as Cassie Monroe had.\n\n\"Have a seat. I'm just finishing things off. Nothing fancy though. Steak and potatoes. Basic man fare.\" She sputtered nervously.\n\n\"You shouldn't have gone to all that trouble. A sandwich would have been fine. More than fine,\" he smiled.\n\nIn the bright light of the kitchen, she felt the awkwardness. They were both trying to be polite. The intimacy that they had shared in the safety of the moon light and as they worked that day was gone. They were strangers, sharing a meal. \n\nShe put the plate in front of him and turned back towards the stove. She bent over opening the cabinet door next to it. Her eyes searched for the large black cast iron pot. She finally found it and stretched to reach it at the very back. \n\n\"What are you doing?\" He asked from behind her. With her head buried inside the cabinet she did not realize how close he was. She gripped the pot in her hands and stepped back. \"Shit,\" she cursed as she pumped her head on the cabinet. \n\nShe felt firm thighs pressed against the fullness of her bottom. Hands gripped either side of her hips to steady her. He pulled her the rest of the way out and helped her stand.\n\nShe had heard the old clich\u00e9 about seeing stars all her life, but in that moment it took on new meaning. He pulled her close as those strong fingers threaded through her thick curls. She knew he was simply examining her, searching for the knot that she could feel stinging and swelling. But its pain paled beside the very different sensation of electrical sparks racing through her at his gentle touch.\n\nTheir bodied were aligned. Barely an inch separated them. Her mind was filled with images of what it would feel like if his fingers were wound through her long hair in a different way. If he were to use them to tug her forward, closing that tiny gap. What would he taste like?\n\nThe smell of clean crisp man assaulted her nose. She wanted to bury her face in those shoulders that were at eye level. Wanted to inhale deeply, memorize the smell, file it away in the darkest recesses of her mind to pull out as a safety net to catch her when she fell as she had this afternoon, to draw her from that dark place that her mind went too often, a light to lead her back.\n\nShe moaned when his fingers brushed across the swollen lump that was raising fast on her scalp. Although there was most definitely pain at his touch, it was laced with the bitter sweetness of desire that his gentleness elicited in her. \n\n\"I'm sorry,\" he drew his fingers back from the wound. \"That's pretty nasty. Maybe we should go to the hospital? Have them check you out, just to make sure you don't have a concussion.\"\n\nHis voice sounded quiet, a low deep whisper and for a moment Esther wondered if he might be right. Perhaps she was hurt worse than she thought, because for a moment she thought his lips were almost touching hers. She could almost feel their soft brush against hers. But that could not be right, she must be imagining things.\n\nShe stepped back before she could step forward and embarrass herself further. She felt the tug as his fingers released her tresses. She swallowed before she spoke. \"I'm fine.\" She turned and reached for the pan where it had landed on the floor. Picking it up, she forced her mind to focus upon the tasks at hand.\n\nInstead of returning to where his food was growing colder on the table, he came to stand beside her at the stove. His large hand covered hers as she placed the pan on the front burner.\n\n\"I asked what you are doing. Aren't you going to join me? Eat something?\"\n\nShe shook her head. \"I'm alright. I thought I would get started on the marshmallow treats that I promised Joey.\"\n\n\"We can do those in a bit. After you eat,\" he said. It sounded to Esther's ears distinctly like an order.\n\n\"No, I'm fine. I don't want anything. Honest.\"\n\n\"It doesn't matter if you want it or not. How much weight have you lost these last six months? Twenty pounds? Thirty?\" He arched his brows, demanding an answer.\n\nEsther tried to distract him, to take control of the conversation once more. She laughed and slapped the dust from the jeans that covered her ample backside. \"There is plenty to lose, Sergeant,\" she dismissed him.\n\nHis hands firmly gripped her upper arms and turned her to face him. \"Do you think that this is what Tommy would want? You were the last thing he thought about. I promised him that I would take care of you and I keep my promises. So march that cute ass right over to that table and sit down. You are going to eat something if I have to feed you myself.\"\n\n\"I am perfectly capable of feeding myself, Sergeant. When I want to eat. I am not one of your Marines to be ordered about. I am a grown woman who has taken care of herself for thirty years. By your own admission, I raised one of the finest men you have known, on my own. I think I can manage to decide when I do and do not want to eat.\"\n\nHe growled at her words. His face scrunched up. \"Alright then. Please. Please join me for dinner. I don't want to eat alone.\"\n\n\"Oh,\" Esther was taken aback at the admission. Raised on Southern hospitality, she had not considered how rude her behavior was. \"Alright,\" she conceded, turning towards the table, she pulled out the chair next to his.\n\nThe Sergeant opened the cupboard next to the stove and took out another plate. He came back to the table and began portioning food out.\n\nEsther put out her hand to cover his. \"Please. I really don't want anything.\"\n\nHe knelt next to her. \"Please. Whether you want it or not, you have worked your butt off today. You skipped breakfast and barely ate half that sandwich at lunch. I meant it. Tommy would be worried sick about you.\"",
        "Esther felt her resolve drain from her body at his words, at the pleading look in the depths of his blue-grey eyes. She did not have the strength to argue, the fight fleeing her, leaving a bone deep tiredness in its wake. She simply nodded.\n\nCHAPTER THREE\n\nEsther woke once more to bright light streaming through the sheers. This dawn of another day practically blinded her. Rest had been elusive last night. The erotic fantasies that had kept the darkness at bay on his first night were laced this time with other dreams. Nightmares of smoke and fire, loud moans renting the heat. \n\nShe supposed it was the reminder of Tommy that the Sergeant had used to bully her into eating. But whatever the cause, the intimacy that they had shared on the porch and while they worked was broken. Oh, they continued to work and talk, but it was not the same.\n\nAfter they had eaten last night, the Sergeant had washed and dried the dishes while Esther worked on the Marshmallow treats. They chatted, planned the work for the coming day. It would be the last chance they had to get most of the work done. Monday was Halloween and Esther would be at work all day. She would barely have time to come home and change before the Trick-or-Treaters began to arrive. \n\nThe haunted house needed decorating; the other ornaments needed to be hung up about the porch and yard, there were cookies to bake and goodie bags to assemble. Esther wondered how she would get it all done, even with the Sergeant's help.\n\nShe was double checking her mental to-do list as she reached for her robe that lay at the foot of the bed. Her hands froze in mid-air when she heard a soft knock on the half open bedroom door. \n\n\"Good morning, Sergeant,\" she blushed. She knew how bad she must look to the man. Her eyes red and swollen, dark circles beneath them. The long curls that were her crowning glory and proudest statement of her mixed heritage would be nothing more than a tangled mess about her face. And this faded blue cotton nightgown was so thin with age that despite its demure nature it would be practically as sheer as one of those lace things that they sold at the malls in Houston. She yanked the robe from the foot of her bed at that thought. Bringing it up her clutched it about her ample chest like a shield. \n\nThe Sergeant stepped into the room. His eyes looking down at the floor, he held out a steaming cup of hot coffee towards her. \n\n\"When I heard you stirring, I thought you might like some of this,\" he said in that husky tone that always sent tingles racing up Esther's spine and through every intimate part of her body. \n\n\"There's breakfast in the kitchen when you're ready. Nothing as special as chocolate chip pancakes, I'm afraid. Just bacon, scrambled eggs and toast. But I figured I'd give you a break from the cooking for once.\"\n\nEsther smiled weakly at his words. More like he figured he would force feed her again, but there was too much to be done this day to argue. Reaching out she took the cup from his hands. Their fingers brushed during the exchange. Esther swore that his touch was more scalding than the dark liquid inside the old china.\n\nShe nodded her head, bringing the cup to her lips for a sip. \"Just let me grab a quick shower and I'll meet you in the kitchen.\"\n\nHe nodded and disappeared back the way that he had come, leaving Esther alone to her thoughts. She gathered her clothes, underwear, jeans and an old Texas A&M t-shirt that had been a Mother's Day present from Tommy, Aggie Mom it boasted. \n\nShe crossed the hall to the tiny bathroom and turned on the water in the tub. Adjusting it until it was slightly tepid. A cold shower was more like what her body needed that morning. The dark brown nipples still ached against the softness of her cotton gown. Tossing her clothes on to the top of the laundry basket, she tore the offensive material over her head. But then it was the mist that circled about her that tormented and taunted her mature body like her fantasy lover. \n\nWhat would it feel like to have his hands move over her skin as intimately as the steam? She moaned softly at the thought as she stepped into the tub. Flipping the switch, water from the showerhead began to pound her tight muscles. But rather than relaxing them, the stream of massaging water only heightened her desire. She practically cried out at this new sensation.\n\n\"Fuck,\" she cursed as she picked up the bottle of shampoo that sat on the edge of the tub. She poured some of the sweet smelling liquid into the palm of her hand. Putting the bottle back she began to massage it into her hair. Her fingers brushed a little too roughly over the knot from last night and she moaned in pain this time. \n\nBut not even the pain was enough to dampen the unexpected desire that coursed through her. She stood beneath the pulsating shower head and watched as trails of water and bubbles winded their way down her mocha brown skin. \n\nShe did not dare breathe when one bubble lodged itself on the tip of her erect nipple. She stared at it, watching the pearlescent play of colors, pinks, blues, purples and the rest of rainbow danced across its taut surface. When it finally popped with a deafening silence, Esther's knees buckled at the intense feeling of pleasure that radiated from the sensitized point.\n\n\"Damn it,\" was her only frustrated response as she picked up the bottle of conditioner and began lathering her hair once more. This time as her fingers wove their way through the tight curls, straightening and loosening the tangles as she went, her mind was filled with the memory of how his fingers had felt instead. As she tugged one stubborn tangle out, she imagined it was her fantasy lover pulling her hair, demanding her submission as those pink lips moved over hers, his tongue dancing a slow Texas two-step with her own. \n\nAs she stood beneath the spray, rinsing the conditioner from her hair, Esther made a decision. There was no way she was going to make it through another couple of days like this. Picking up the bar of soap, she began rubbing it softly across her body. She closed her eyes and imagined it was his calloused hands touching her tenderly, intimately like the phantom lover he had been for the past two years. \n\nIf those other erotic dreams had been sweet, offering her relief from a lifetime of loneliness, then this was something far more intense. The fact that her fantasy was even then sitting in her kitchen sipping coffee and eating breakfast, the dozens of casual touches that they had shared, her new understanding of this man of honor; they all combined into a heady broth that deepened her level of fantasy.\n\nBy the time that her fingers danced and circled about her throbbing clitoris she was already upon the edge. It took only a couple of small circles, the pounding heat of the water and the slippery wetness of the soap combined with the slippery wetness of her body and she sailed over the edge of the precipices like a diver jumping from a cliff into the foaming water far, far below. \n\nEsther clutched the walls and her body hung in mid-air, it seemed to go on forever this dive into the unknown. Her knees threatened to give way and she held tighter to the safety of those walls as about her everything churned and broke upon the sharp rocks.\n\n\"Ma'am, is everything alright in there?\" Esther's eyes flew wide at the husky sound of his voice muffled by the thick door.\n\nHer mind rifled through the possibilities. What had he heard? Had she cried out, completely unaware of herself? Her cheeks stained in mortification at the possibility.\n\nQuickly she catalogued explanations and chose the most likely. \"Sorry, Sergeant. That bump was still just a bit sore,\" she lied.\n\n\"You sure you're alright? You need any help? I'll keep my eyes closed. I won't look. I swear.\"\n\nEsther chuckled softly at her chivalrous knight once more. \"I know you won't, Sergeant. That's the problem,\" she said under her breath.\n\n\"What's that, ma'am?\" She heard the soft turn of the knob.\n\n\"No, Sergeant. I'm fine. I promise. I'll be out in a couple of minutes.\" She said quickly, unprepared on so many levels for the man to barge into her bathroom like the Calvary racing to the rescue.\n\nEverything was silent for a moment as Esther reached for her towel hanging from a hook near the tub. She clutched it to her just as she had the robe earlier. Prepared to greet her rescuer if necessary.\n\n\"If you're sure then. You were just in there so long that I got nervous. Your head and all. I finished my breakfast and I'm going to head out and work on the haunted house some more. Your breakfast is in the microwave. Join me outside after you get dressed and eat.\"\n\nEsther nodded in silence at this man, who was so accustomed to giving orders and expected them to be followed without exception. When it dawned on her that he could not see her head, she responded verbally. \"Alright, Sergeant.\"\n\nThe last thing she wanted was this man barraging into her bathroom when she was naked, nothing more than a towel as armor. Her body still thrumming with perhaps the most powerful orgasm of her life, the wetness between her thighs only partly from the shower. Most definitely the last thing she needed. Or was it? Some deep part of her mind questioned. \n\n***\n\nThe rest of their morning had gone surprisingly well. The Sergeant had like he said been outside working by the time a slightly shaken Esther had emerged fully dressed from her bathroom refuge. Rather than tempt further arguments, she had forced most of the food down before joining him outside for another full day.\n\nThey had quickly dispensed with the final touches on the haunted house, ghosts, goblins and spider webs all hung ready for the big night. Only last minute preparations, like blood made from Caro corn syrup and red food dye, spaghetti worms covered in oil for that extra layer of slime or peeled grape eye balls, awaited the children's delight. \n\nBy early afternoon the day was even hotter than the one before. They had eaten ham and cheese sandwiches and drank tall cool glasses of iced tea with lemon in the shade of the front porch. As they sat eating in the porch swing, Esther found it hard not to believe that the intimacy they had shared in the darkness was not just another of her carefully crafted flight of fancy. \n\nAlthough he was perfectly cordial and every bit the gentlemen, there was a shift in the Sergeant that she could sense. The coldness that never felt those blue-grey eyes darkened their depths even more.\n\nIt was only as they were finishing off the last of their lunch that Joey ran up the walkway, only then did she see the genuine warmth and caring once more light their darkness. \n\n\"Miss Esther, Miss Esther. You're really gonna do it. We're really going to have Halloween after all?\" he asked.\n\n\"Yes, Joey. I told you we would.\"\n\nThe little boy looked down at the ground. \"I know you said. But Mama said that you was too sad about Tommy. That you didn't have time for it this year.\"\n\nOnly in that moment did Esther fully realize exactly how much this once a year celebration meant to Joey and the other children. Oh, she had logically recognized its importance. It was that head knowledge that had driven her to the linen closet even before the Sergeant arrived. But this was different, a knowing of the heart, something precious and special, a rare gift of life that was not to be questioned or second guessed.\n\nShe knelt on the bottom step, eye to eye with the boy. Her hand reached out to grip his arm and reassure him that she would always be there for him, but he drew back. His tiny face contorted in pain at the touch. Esther brushed the sleeve of his shirt back to stare at deep red and purple bruises. The design was clear. Four nasty lines running in one direction and a single thicker line going the other. Where they met on the underside of his thin limb, there were five deep crescent moon scratches marring his pale skin.\n\n\"What happened, Joey?\" \n\n\"I fell against the old heater again, Miss Esther,\" the boy stared at the ground as he choked out the lie. \n\n\"We're going to have to do something about that heater soon,\" she whispered as she lowered his sleeve. She forced a smile to her lips as she asked, \"How about some Marshmallow treats? You're my official test taster you know. I can't be serving inferior products to the children you known.\"\n\n\"Inferior? What's that?\" He looked up, a bright smile lighting his face at her simple words of praise and the thought of the sweet, crunchy treats.\n\n\"Inferior means not good enough,\" the deep voice answered from over her shoulder.\n\n\"Oh, like me,\" he said.\n\n\"No, Joey, not like you. Little boys and girls are never inferior. But sometimes the big people are,\" Esther wondered at the depths of his simple words.\n\nBut she knew that words alone would not be enough to heal the bruises on this child's body and soul. So she offered what comfort was hers to give. She held out her hand to the child, \"You ready to test them out? Tell me what you think?\"\n\nThe child nodded and smiled as they went into the house. For the moment, pains forgotten, decisions delayed.\n\n***\n\nEsther slipped beneath the crisp cotton sheets. The day had been a huge success. The haunted house, front porch and yard were ready to go. She had spent the evening mixing batter for the cookies. Four sheet pans of freshly cut pumpkins, witches and ghosts chilled in the refrigerator. She would slide them into the oven the moment she came home tomorrow so that they would still be warm when the children began to arrive. She had even mixed the orange Kool-Aid with pineapple juice and poured it into ice trays for the witches brew cauldron tomorrow.\n\nAs they sat swinging on the porch, she and the Sergeant had carefully gone over the few remaining items to be done. Dried ice to be picked up, grapes to be peeled, blood to be mixed and the goodie bags assembled. They had divvyed them up. Esther would bring home the dried ice from school. Charlie the chemistry teacher at the high school was more than happy to order a bit extra for her each year. Mike would prepare the goodie bags and peel the grapes. The cookies, punch and blood they would work on together once she got home. \n\nThen she would slip into the gypsy costume and transform into Mistress Mystique the fortune teller. The hard part had been deciding what to do about the Frankenstein costume that was in the box next to the gypsy. She knew that the haunted house would not be the same without the monster to jump out at the very end, frightening and delighting the children. \n\nBut since he had been fourteen and decided that the annual event needed a 'more adult' element like a haunted house, that job had been Tommy's. Those first few years she had made and remade the costume as he seemed to outgrow the costume each year. This one had been used for the past eight years, since he finally stopped growing in his senior year of high school. Last year, he had joked about packing in his duffle bag and taking it back with him, entertaining his friends and the local kids with his monster. \n\nIt had been hard for Esther to ask Mike to play that role this year. She barely pushed the words past her tight throat as she thought about the way her son laughed and played with each child as they emerged from the plastic sheeting. For some he rose up to his full height, arms spread wide, his face contorted in mock anger as he roared. For others he simply tickled them until they giggled. He seemed to know what each child needed.\n\nShe would have simply left that costume in the box this year were it not for Joey's innocent words that morning. The weight and significance of the tradition forced her hand as she made herself do what was best for the children, asking this stranger and friend to fulfill the role.\n\nIn his quiet and understanding way, the Sergeant had merely nodded his head and said, \"If you're sure about this, ma'am, then I'd be honored.\" And she knew that he meant it.\n\nEsther closed her eyes then. Sounds of Tommy's laughter ringing her ears blended with dark bruises on tiny arms. Threaded through it all was strong muscles playing beneath cotton t-shirts and iridescent bubbles popping so loudly that turned into smoke and the bang of an IED that ended her life as well as her son's. \n\nShe bolted straight up in bed. Her mind stunned for a moment, unable to remember why she woke. Then it all came crashing back. Tommy's death. Halloween. Joey. Him. \n\nHer thin night gown and the sheets were damp. Sweat and tears blended with cool night air made her shiver beneath the covers, pulling the quilt to her chin as she tried desperately to get back to sleep. \n\nBut her mind would not give her even that respite. Tears began to track softly down her cheeks again. Her pain so deep that tears alone were insufficient to assuage the hole in her soul. At first it was just an occasional gasp here and there. She brought her knuckles up to her mouth as if to trap them inside. \n\nEven those were not enough as images flashed through her mind. Tommy's smiling face against a truck. The Sergeant and a couple of others posed with him in front of tents. They ran like one of her slide show presentations through her mind. Each slide digging deeper at the hole in her soul. \n\nShe was not even aware of the sobs. Until she felt the warmth of his hand on her shoulder. His words were husky as he turned her, drawing her into his arms. \"It's alright. Let it out. It makes it better.\"\n\nHer fists plummeted the bare steel of his chest. \"That's a lie. It doesn't. Nothing makes it better. Nothing ever will.\" She cried in anguish. Her body shook and quivered from the tears, the cold and his presence so close. \n\nHow many times over the past two years had she dreamt of this? The Sergeant naked, well half naked, in her bed. But not like this. Not with her in the middle of one of her crying jags that nothing could stop until the hiccups came. Tears continued to fall as her body trembled. \n\n\"I know,\" that deep voice offered. She could feel that his barely audible admission was torn from his heart with as much pain as she was feeling at that moment.\n\nShe was never certain exactly how it happened. But suddenly there was a shift. She felt it to the ends of her toes, curling beneath the quilt she had sewn with love over the past six months. The world might not be fair. This pain might be more than she could bear. But she was alive. And for the first time in a long time, she felt it. Alive. \n\nThe silence in her tiny bedroom was alive at that moment too. His large hands that held her shoulders began to move slowly up and down her arms. They spread warmth... perhaps in ways he did not even mean. Esther clinched her fingers against the springy warmth of his chest hairs. \n\nThey stayed like that. She was not sure how long she lay there, cocooned in that steely softness of his embrace. It was a moment of decision. One of those times in life when two pathways diverge in the wood and we must make a clear choice which path we will take. \n\nEsther knew that she should ask him to go back to the couch. It was the logical thing to do. The respectable thing. She was at least a decade older than this man. Fast closing in on the half century mark, she had little to offer a man, any man. It had been a long time since she had even indulged, well simply indulged. \n\nBut in the dark silence, Esther admitted to herself that she had never felt as safe as she did at that moment. Surrounded by the strength and warmth of his arms, her face inches from the fuzzy, steel of his impressive chest. Her fingers did not wait for her mind to decide. They began to caress slowly across his skin.\n\nShe felt the low rumble even before she heard it. His voice was. husky \"Ma'am, I think we both know that in just about five seconds this thing is going places that neither of us can take back. So if you want to change your mind, now would be a good time.\" ",
        "Esther laughed lightly but did nothing to stop her playful fingers against his heated skin. \"I think that you better start calling me Esther and stop the Ma'am stuff, Sergeant.\"\n\nIn the dim star light she could see the genuine smile that spread across his face. \"Yes, Ma'am. I mean Esther. Then you should try Michael.\" The fingers of one hand came up, lifting her chin until she had no choice but to meet his gaze. \"You sure about this?\"\n\n\"I can't remember the last time I was more sure about anything, Ser...\" Her fingers gave up tracing the patterns in the warm skin near his heart. They trailed slowly up across his chest to those broad shoulders and further still, entwining together in the soft curls at the back of his neck. \"Now that we have the introductions out of the way, shut up and kiss me, Michael.\" She tugged softly drawing his face closer to hers in the darkness.\n\n\"Yes, Ma'am,\" he started to say. \"Shit,\" he cursed. \"Yes, Esther,\" he corrected as his lips curled into a grin. The grin was quickly whipped from his lips as they found other more pleasurable pursuits. \n\nThe kiss was tentative at first. It had been longer than she wanted to admit since she had kissed a man. In that moment, she wondered if she ever really had. Certainly nothing in her limited past had ever felt or tasted as sweet. The Sergeant...Michael's...lips were firm beneath hers, allowing her to control the pace still. Lightly nibbling at the corner of her mouth. It felt almost like the faint tickle of a lady bug crawling up your arm; was it there or wasn't it. But is he or isn't he was not a game that Esther wanted in that moment. \n\nNow that the decision was made she did not want to wade safely into this whirlpool of desire. She had always been the type to dive in, sometimes head first, most definitely a cannon baller, and this night especially. \n\nThere might well never be another moment like it and the quiet school teacher be damned for once Esther wanted to become the heroine like Helen of Troy, whose beauty started a war, or perhaps more accurately Pandora, whose magical box could not be shut once opened. This night was most definitely opening Pandora's Box and she did not give a damn. \n\nShe jumped; head first. Throwing back the lid, her tongue snaked out, breeching whatever last defenses he might have. Her fingers trailed across those broad shoulders, finger nails scraping lightly across his skin as she put everything into that kiss. \n\nIf in her last half a century of life, she had not acquired very much experience as a seductress, she made up for it with determination. She could almost feel the tension strumming through his body. The stiffness with which he held himself back was not the type of stiffness that she was interested in at that moment. \n\nHer lips curled into a secretive smile beneath his. She might not be very experienced but she was very well read. The words and images of thousands of erotic novels and novellas raced through her mind. She picked through each one as she sought the perfect seduction. This was war...and Staff Sergeant Michael O'Malley was about to meet surrender.\n\nA plan began to form in her mind. With a final deep drink from those soft lips, she made a trail of licks and nibbles along his slightly rough jaw line. His fingers tugged softly at her hair as she continued to play down his neck. She sucked softly at the thrumming beat of his pulse she tasted there. It rapid statico spoke volumes, giving her the strength to continue along this path. She outlined his collar bone with feathery kisses until the ridge of firm flesh that divided his chest in half called out to her. Her dark fingers blazed the trail that her lips would follow, drawing soft patterns across the down covered steel. Pectorals shivered beneath their light scraps. \n\nMichael sucked in a sharp breath when her talons raked lower across the ridge of muscles that formed his six packs. Esther stopped her descent for a moment. Her dark brown eyes lifted to meet his steely stare, she whispered, \"This is most definitely going places we cannot take back. So Michael, if you want to change your mind, you better do it now.\" She toyed with him, her words a gentle reminder of his own chivalry even as her fingers moved lower belying their warning.\n\nHe held perfectly still beneath her touch, their gazes danced a duo in the darkness. She could see the firm muscles in his jaw flex in the moonlight and for half a breath, her heart was gripped with fear that he might change his mind, might stop this erotic fantasy, might abandon her bed, seeking the refugee of the lumpy couch over her bold caresses.\n\nThen he smiled. \"Hell, no, a man only gets to taste heaven once in his life and I ain't missing mine.\" His fingers began firmer where they tangled into her thick curls. He tried to tug her up, to taste her lips and torture her with his kisses once more.\n\nBut Esther was not to be distracted from her battle plan. There was new territory to be conquered and she was determined that this night she would taste all that life had to offer. She quickly won the battle of wills as his tugging upwards soon gave way to moans. Her mouth was hot and dry as she blew softly across the thick, dark curls that covered his belly button. She felt his fingers tighten their hold upon her hair, trembling at her boldness. But it was not enough, bending she kissed and toyed with him there. Her tongue outlining it as her fingers pushed at the elastic waistband of his sweat pants.\n\n\"Esther,\" his voice was deeper than she had ever heard it, except in the thousands of erotic dreams that paled in comparison to this moment.\n\nShe pulled the thick barrier away from his skin and allowed her lips and tongue to continue their dangerous games. She felt the shiver run through him as she lowered her head. The feel of his fingers threading deeper into her hair was almost painful but it only added to the tension that played along her spine and sent tingles along every nerve ending in her body. \n\nShe put them both out of the misery of anticipation as she lowered her head and drew his hard flesh between the softness of her lips.\n\n\"Fuck,\" she felt the power of his words curl along her toes. In that moment, she reveled in her feminine powers that had lain dormant for a life time. She was elemental. She was all powerful. She was life itself. She was woman. \n\nShe roared quietly as she opened her mouth and drew half of his length deep into her mouth until it touched the back of her throat. Slowly she sucked softly on his flesh trying to draw him deeper. When that proved impossible, she tried another tactic; slowly she retreated up almost the full length of his flesh until just the soft mushroom shaped head rested between her parted lips. \n\nShe suckled softly upon his flesh as her fingers wrapped about the rest of his length. She soon found a rhythm that she could tell sang through his body. She smiled around his firm flesh as she felt another shiver run up his body. She augmented the pace set by her hands by sliding her mouth slowly down, taking as much of him as possible deep into its warm, wet recesses.\n\n\"Fuck,\" he spat again. The words might have seemed out of place in the romances that had been her only sexual outlet for most of her life, but she felt the sentiments behind them to her core and those sentiments overshadowed anything she had ever read. \n\nShe tried to return to her womanly games but this time the fingers still entwined in her long hair was not to be denied. His firm grip pulled her mouth from his flesh and drug her body slowly up his. Esther was the one moaning and cursing at the intense pleasure/pain as her nipples grazed against his chest. She swore that she could feel the roughness of his chest hair against the sensitive buds of her nipples even through her nightgown.\n\nWhen he had tugged her up so that they were eye-to-eye once more, his lips turned upward into a secretive smile. His fingers released their hold upon her hair and slid slowly down the side of her face. Lower still as they trailed along the pulse beating steadily in her throat. His large hands smoothed across her bare shoulders leaving electrical shocks in their wake. She was helpless to stop her body as it moved against him. \n\nShe was straddling his firm thighs, her knees planted firmly on either side of his hips. It was a position that left her completely open, exposed. Her body moved against his, rubbing against the thick material of his pants that still covered most of his lower body. She whimpered at the intrusive barrier. She needed to feel his skin against her, all of her. \n\nAs if reading her mind, Michael's fingers trailed softly down her arms to her fingertips. They continued lower to where the offensive material of her old nightgown bunched around her hips. His fingers found the edges and jerked them upwards. She felt the rush of the cool night air as it brushed along heated skin, but it did nothing to cool the passions and fire that were building inside of her.\n\nAs her head sprang free of the material, she smiled, tossing her curls about her shoulders, \"Now, I think you are the one overdressed.\" She matched actions to words as she pushed once more at the thick elastic waistband of his sweat pants, pushing them down his legs. He kicked them free with a smile, \"Yes, ma'am. Fuck.\"\n\nEsther laughed at the lapse. Laughter and love was something that had been distinctly missing from her life for a very long time, but they felt like old friends in that moment. Trailing her fingers ups the wiry expanse of his thighs she purred, \"We might have to get distinctly kinky with this ma'am thing, Michael. I am after all a teacher.\" Bending forward she blew hot air across the surface of his broad chest. \"What do you want me to teach you?\"\n\nIf she was half shocked by her bold behavior it was not something that she wanted to analyze at that moment. This night was a miracle. And miracles were not to be second guessed. There would be days and long nights, a life time of them, in which to remember and dissect each word and action. But not now. Now all Esther wanted was to live. Live in this moment with this man that had captured her imagination and her heart so very long ago. \n\n\"Where were we?\" she whispered against the column of his throat. She watched as he swallowed the ridge that moved up and down said more about how he felt, what she was doing to him than words ever could. \n\nHer hands planted on his broad shoulders, she kissed along that strong column as she lowered her hips to make contact with the heated flesh of his thighs.\n\nEsther had never been one for wearing underwear beneath the distinctly reserved night gown. It seemed too restrictive, too uncomfortable. So it was bare flesh of her inner thighs that met the bare flesh of his hips as she rubbed against him like a cat she purred as she found the rhythm this time. The rhythm that drove them both to the edge of insanity.\n\n\"Fuck,\" he spat again.\n\nEsther smiled against his skin. \"That's what we're trying for, Sergeant,\" she teased.\n\nBut her teasing caught in her throat as he shifted, lifting his hips, he found the center of her being and surged forward, filling her and stretching her. Esther threw back her head and closed her dark eyes. Nothing she had ever felt compared to this moment, no fantasy even touched it. \n\nHer fingers on his shoulders tightened. If she had thought, she would have realized that she was leaving small crescent shaped scratches in his skin. But neither of them noticed. Neither cared as the pain mingled with the pleasure slipping deep into its shadows as her body found release and fulfillment like it never had before.\n\nEsther rode out the wave as it broke like the sun upon the shore. She whimpered as her body lost the beat, whimpered in need for more of this amazing drug. But her plea was heard. His fingers digging deep into the tender softness of her round hips he held her as he rolled them over. \n\nWhen she opened her eyes, her lover loomed large above her. She could feel the change, the proverbial turning of the tide. The time for games and teasing, testing her feminine wiles was long past. This man was determined. Firm in his resolve, she could see it in the set of his jaw, the steel of those blue-grey eyes. He was driven. If she should have shrunk back at the intensity, she have cowered under ancient memories of pain and shame, she did not. She knew this man on some soul deep level. Knew his honor. And even in his strength she felt his tenderness as he began to move inside of her. \n\nShe would have sworn it was not possible. After such a deeply satisfying orgasm, her body should have been replete. Instead it seemed just the opposite; every millimeter of her skin seemed charged with his touch. The sight of him as those muscles played beneath the softness of his skin in the moonlight filled her mind and senses, lighting new fires inside of her. \n\nHer hands crept about his back, seeking an anchor as he moved deeper throwing them both into the depths of this ocean of need. They rode each wave. Crested each peak as she clung to him. Until it felt as if he would sweep her away on a tsunami of passion. His body thrust deep inside her as they clung to one another in the darkness. Each completely alone in their thoughts, yet each meddled together on some deeper level that transcended it all. \n\nHer fingers brushed the damp hair back from his face as he collapsed next to her. A gentle smile played at those delicious lips. She could not resist the temptation to taste this new flavor as she brushed her lips across his mouth. She closed her eyes and simply felt. Warmth. Safety. Alive...was the final thought as sleep captured her.\n\nCHAPTER FOUR\n\nEsther stared at the computer screen. Her fingers hovered over the send button. The words haunted her. Honestly more than this email was bothering her this day.\n\nAfter the most amazing night of her life, she had woken up alone in her bed. The early morning sunlight filtering through the sheers and the pillow next to her still warm. She had finally found Michael in the kitchen, making coffee and breakfast.\n\nIt was not like she had a great deal of experience to draw upon with this sort of thing. There really had not been many mornings after in her life. Being a single mother and teacher had been her focus.\n\nOf course, Tommy was gone now. And if she sent this email, her career might well be over too. Well, perhaps not her career, but certainly her job in this town would be in jeopardy. That was the way things were in small towns; they protected their own. And despite a quarter of a century living in Sebida, she would never be one of its own. But Cassie Monroe was; no matter what she might do to her young son. \n\nThis was an email that Esther had written and re-written a hundred times over the past few months. She knew better than to report her concerns to the local authorities. But her friend with Children's Services in Austin was another matter. The woman would make certain there was an investigation.\n\nIt had never really been an issue of whether or not she would send the email. A child was being abused. It was not something she could just turn a blind eye towards. But lately there had been more bruises and cuts. \n\nNo, what had been holding Esther back had been fear. Pure and simple. She was afraid of what might happen, what she might lose when she made this allegation. With Tommy gone, her job and the house where she had raised him was all that she had left. The idea of losing her job and being forced to move had kept her paralyzed for months.\n\nBut no more. Not after last night. No matter what might have happened or not happened this morning, she knew that something deep inside of her had come to life again.\n\nHitting the send button, Esther grabbed the paper sack on the table next to her. He had made her lunch while she slept. Practically forced her to sit at the kitchen table and eat breakfast as well as her usual coffee. And through it all, neither had mentioned a thing about what had happened under the cover of darkness. Instead they chatted about inconsequential things, plans for tonight. \n\nEsther supposed it could have been worse. He could have apologized; said it was all a mistake. This thing between them might be many things, but a mistake was not one of them.\n\n***\n\nEsther smiled as she looked around her almost vacant front yard. It was getting late; her watch said that it was close to ten. She should give the last call for the haunted house and witches brew. There were only a handful of her students left anyway. The parents had started taking the younger children in over an hour ago. \n\nShe stood up from the table where she had been reading cards for most of the night. Her muscles touched a bit stiff. Or perhaps they were sore from unfamiliar activities. Either way it had been a wonderful night. The children and young people were genuinely pleased that she had kept the tradition. And for her part, Esther felt her value to this community. If not to its leaders, its young families certainly appreciated her. \n\nWell, most of them, she thought as she looked across the street at the dark house where Joey lived with his mother. He had not come tonight and that worried Esther. She had made up a special goody bag for him, perhaps tomorrow morning she would take it over there.\n\nBut before tomorrow morning she had to make it through tonight. That was not as easy as it sounded. It was also why she had been putting off sending the children home. She was not certain what to say or do around Michael...after last night. \n\nThere had not been much time to discuss what happened when she got home. There were cookies to be baked, costumes to be donned and witches brew to be mixed. Both of them had thrown themselves into the work, ignoring undercurrents that raced through them both. But they could not go on pretending nothing had happened.\n\n\"Alright everyone, it is getting late. I need to see most of you in class tomorrow. So, 'Sleep shall neither night nor day, hang upon his pent-house lid.' And that's ten points extra credit for anyone that can tell me where that quote is from tomorrow. But I want it exactly; author, title, scene, act and line. Off to bed with the lot of you.\" \n\nShe waved her arms about and cackled loudly as the teens laughed. She noticed that a couple of the older boys were hanging out with Michael by the haunted house and drinking punch. Her heart ached at how easily she could imagine Tommy with them.\n\nAs the first of the teenagers headed towards the street, an old Mustang sped around the corner. Her heart lurched in her chest and she caught her breath at how close a call it had been. The car sped into her neighbor's drive way, its engine was still revving loudly as a very drunk Cassie Monroe appeared out of the driver's side. Her dishwater blond hair hung limply about her molten face as she stumbled about. \n\nA large man in a dirty t-shirt and dusty jeans got out of the side door, \"Hey, bitch, I thought we was gonna have us some fun. Where you running off to now?\" He brought an open can of beer to his mouth. \n\nEsther pushed a couple of the girls behind her as the woman came stumbling across the road without even checking to see if another car was coming. She tried to steady herself against the mail box but it did little good as she continued on her ill-fated journey up Esther's walkway to where she stood near the front porch.\n\nHer words rang like thunder through the night air. \"I know it was you, you nigger bitch. After all this town did for you, turning our eyes to your whoring and accepting your half-breed bastard. Hell, even letting you teach our children. And you do this?\" Even though her speech was slurred, anyone could make out what she was saying. \n\nThe words stung. Not because they were said in anger by a drunk woman, who blamed her for losing her son. They hurt because for the first time in twenty-five years that she had lived in this town, the truth came out. As hurtful as they were ringing inside her head, she knew they were merely amplified versions of those whispered so often behind her back in the past. ",
        "She squared her shoulders and reached out a hand to steady the woman. \"Cassie, I don't know what you are talking about. But don't you think you ought to go home and sleep it off?\"\n\n\"I'm talking bout the welfare lady that picked Joey up at school today. They won't even let me see him until some fucking court day. But Daddy says not to worry he'll get me the best lawyer. He's gonna show everyone what a vindictive bitch you are.\" Rising up to her full height, which was several inches shorter than Esther anyway, she looked into her eyes as she threw the ultimate bomb. \"Just because God took your son, don't give you no right to try and take mine from me, nigger bitch.\"\n\nEsther froze. Her heart stopped. She feared that air would never again pass through the tightness in her throat. Her fingers went limp. The woman swayed, almost taking them both to cold concrete beneath their feet.\n\nSuddenly an arm wrapped about her waist. It was the only thing holding her up. From somewhere far off, she heard a deep voice.\n\n\"I think you better leave now.\"\n\nIt was steely quiet. The half a dozen young people did not move. Several were so embarrassed that their eyes stared at the ground. She wondered, how many times have they heard something similar. How many times had her students heard their parents talk about the Negro whore? \n\nThe worst flashed through her mind. It was right after Tommy's funeral. People had followed her home after the church service. Food lined all the counter tops in the kitchen and people milled about her house as if they visited every day. It was an intrusion that she did not want or need. But it was also a custom, one that she did not have the strength to balk at that moment. \n\nInstead she had taken refuge in his room, hiding out in her own home from strangers that cared nothing for her. People that did not even accept Tommy. It felt like the ultimate affront to her life. \n\nShe was getting ready to leave. She had made up her mind that she would ask the reverend to have everyone leave. She had endured enough of their 'Southern hospitality' to last her a life time. But her hands froze to the door handle as she listened to two unidentified voices on the other side of the wood.\n\n\"Yeah well, seems to me like the woman got what was coming to her. You can't flaunt your sins in front of God and everyone for all these years and expect the good Lord to just take it. Oh no, I suppose it is just his merciful justice, taking that boy the way he did.\"\n\nAnother voice joined in the vitriolic chorus, \"Tommy was a good man, despite having that woman as a mother. But still I wonder if she'll be so damned high and mighty now. Like she looks down on the rest of us with her Shakespeare and Greek mythology. Ain't like kids even need to know any of that stuff in the real world.\"\n\n\"I'll give the woman one thing, she kept her sins quiet in this town. Of course, you heard about how she practically threw herself at Joshua didn't you? All because he was the boy's Little League coach. And him a married man. No, that woman deserves everything she gets and then some.\"\n\nEsther had fled their lying words then. Curling back up in Tommy's bed to cry until the Methodist preacher and his wife came to tell her that they were going. That everyone else had left. As the woman reached out her hand in Christian kindness to comfort her, Esther had recoiled. She recognized the voice, knew what this woman really thought of her. The couple had excused themselves, mumbling beneath their breaths about gratitude. Esther could only imagine what else they said as they walked home that evening. \n\nShe had pulled herself out of bed and walked into the living room to face an utter mess. Her normally neat home looked like the VFW hall after one of its big to-do's. Paper cups and plates piled high with half eaten food were strewn about the place. There were several spills on her couch and carpet.\n\nActually, she supposed she owed the Right Reverend and his congregation a debt of thanks after all. She really did not know how she would have made it through that first night if it had not been for the hours of cleaning that took her through until dawn. She was so exhausted that by the time she fell into her bed, sleep overcame even the heavy burdens on her heart and mind.\n\nThis night was as bad. But she realized something else as those hateful words flew around her. The other voice, she recognized it now. It had been Cassie Monroe who was speaking with the preacher's wife in the hall that day. \n\nEsther's palm itched. She wanted nothing more than to slap the woman. How dare she of all people pass judgment on her? At least she had raised her half-breed bastard as they called Tommy with love, not bearing bruises and marks and not with a drunk for a mother. She longed to tell it all to the nasty creature that was half bent at her feet.\n\nBut it was the faces of her students about her that held her back. They did not need to see another adult in their lives acting with such shame. \n\nInstead she took a step back putting some distance between them. \"Like I said, you should go home and sleep this off.\"\n\nAs she turned towards the porch, she heard the Sergeant take command. It came so natural that not even the drunken man hesitated when he was ordered to take the woman home. Her students beat hasty retreats home. But Esther knew that the story of this night would fly about the school halls, reaching every ear and young mind even before the homeroom bell rang in the morning.\n\nIt all hung like a super cell over her head, dread of another tornado of the soul consumed her. She had made it through this storm once when she returned to teaching after the funeral. But she was not certain she could do it all again. Not now. \n\nShe did not even think about the cookie plates, punch bowl or dozens of other things that she had left outside. She practically ran to the bathroom. The spaghetti that Michael had insisted she eat for dinner tasted even worse coming up than it had when she forced it past her lips hours earlier. She was certain that strands of it were tangled in her dark brown curls. \n\nIt was hard, crying and vomiting at once. Her body shaking and trembling, not from the cool chill that hung in the Texas autumn air, but from the cold hearts and closed minds of this place that had been her home for most of her life, for practically all of Tommy's brief life. Didn't these people see? It was one thing to hate her, but what had that little boy ever done to deserve their ire? \n\nAt last the sobs slowed. Esther reached up for the washcloth that hung from the white porcelain sink. It was still damp from washing up before dinner. She passed it over her face, but it did nothing to clean off the taint of this bitter and hateful place. \n\nIt had been almost thirty years since she felt like this. The need to plunge her body beneath water as hot as she could stand it. Hotter even. To wash ever trace of him, of them from her body and soul. But unlike last time, Esther knew that there would be no precious gift to ease this pain.\n\nShe stripped the white blouse over her head, taking the red bandana that had held her mane back from her face as she bent to read the cards. She tore at her bra, not caring if she broke the straps. She pushed the flowing skirts down her tanned legs, taking her underwear with them. She realized that she had kicked her shoes off somewhere along her journey from the front yard to the bathroom, but had no idea where.\n\nShe had no idea how long she stood beneath the scorching hot water as rivulets raced down her body to pool and swirl down the drain, the steam wrapping about her body like the quilt she had sewn from scraps of Tommy's clothes collected over a life time. The corner of the blue baby blanket in which she had brought him home from the hospital. The white shirt that he had worn on his first day of school. His Scout uniforms. His football jersey. His black graduation gowns. His Marine Uniform. They had all become squares and many more.\n\nThe comfort was scant. But eventually the heat pounded through to her shattered mind. Her body was a bright pink beneath its toffee brown and her fingers and toes had begun to wrinkle. But still she stood beneath the hot spray, the need to escape, to wash it all away warred with commonsense and self-preservation.\n\nEven as the water turned colder she battled beneath its rivulets. She began to shiver. Her teeth chattered as it got colder and colder, matching the temperature of a late fall Texas night and the cold hearts of this place. \n\nThen there was a voice and hands gently tugging her from the tub. A towel wrapped about her. Arms scooped her up into a strong embrace, carrying into the bedroom and tucking her beneath that quilt. \n\nHe was there. Drawing her into his arms, holding her as he worked the towel over her hair drying it. His hands moved quickly up and down her arms, trying to warm flesh that she would have sworn was long dead.\n\nExcept when he touched her, she felt alive. Truly alive. She moved closer to his warmth, snuggling against the hard plains of his chest, the roughness of the hairs on his chest abraded her cheek.\n\nHis fingers stilled on her shoulder. \"I should probably go back out to the couch.\"\n\nEsther froze. New tears glistened in her eyes. She could barely breathe, this new rejection cutting deeper any. She started to move away, pull away. But his fingers came up to hold her chin, lifting her face to his gaze.\n\n\"I won't take advantage of you again,\" he whispered into the darkness as his soft lips pressed against her nose.\n\nEsther shook her head at his words of self-incrimination. \"But...\" she began.\n\n\"You are hurting right now. I can't. Not like this. Not now,\" he mumbled.\n\nShe shook her head, her grip on his shoulders tightening at his words. \"Don't go. Please don't go. I don't want to be alone. Not now. Please.\" Her words burst forth like a river flowing with flood waters.\n\nShe felt him exhale. Felt him collapse back against the pillows. His arms wrapped around her shoulders as he drew her against him. He pressed light kisses to the top of her head. \"I hadn't thought about that, sweetheart. Of course, I'll stay.\"\n\nEsther swore for a moment that he added 'if it kills me,' but it must have been part of her dreams as exhaustion and the late hour overtook her. Cocooned safe in his strong arms the dreams dared not haunt her this night.\n\nCHAPTER FIVE\n\nIt took her a moment to realize where she was as she woke up. There was hardly any sunlight filtering through the sheers in her bedroom. But she could feel the comfort of the quilt wrapped about her. \n\nHer bed was empty though. There was still an indention in the pillow next to hers and it was still warm she noted as she ran her hands across the spot where her lover had slept. She frowned. Was he her lover? He had after all turned her down last night. More than likely the man could not wait to be away from her outbursts. \n\nTo him that one magical night was probably nothing more that scratching an itch. To her, it would have to be a lifeline. A memory to get her through the tough decisions that were to come. \n\nTurning over in the bed, she looked out the window. The weather certainly matched her mood. Dark and grey. She considered crawling deep beneath the quilt and staying in bed all day. But she knew that would solve nothing. The problems would still be there when she woke up. Waiting for her tomorrow. And the next day. And the day after that. \n\nNo, it was better to face them now. Get a handle on the extent of this situation and begin to formulate plans. In all probability, there would be repercussions for her actions at work. But even if there were not? Did she want to stay here? Did she really want to wallow day after day in her grief? Longing for something that could not be. \n\nA part of her longed for the type of freedom that Michael had made for himself. The ability to just hop on the back of his motorcycle and go. New people, new places. New problems?\n\nShe supposed some things would follow her wherever she went like Tommy's death. But other things like Cassie Monroe, she would be happy to leave behind. The prejudices of this place and its mean-hearted people. But then again if she left who would be there for the Joey's and her students?\n\nHer mind was so caught up in the dilemmas that faced her that she did not even notice him until he sat on the edge of the bed next to her. Two cups of steaming hot coffee emitted the most delicious aroma. It wrapped about her wiping her mind of all else, except its richness. \n\nShe took the cup he offered her in silence. Bringing it to her lips, she blew softly across its dark surface then sipped softly. She moaned at the taste which more than matched its aroma. He shifted on the bed. \"I love it when you moan.\"\n\nShe blushed, aware that the quilt had slipped down and that the thread bare night gown revealed far more than it hid. \"Sorry.\"\n\nHe chuckled, \"Don't be. Like I said I like the sound of it. Although I would rather it be something besides my coffee that had you moaning like that,\" he blushed. The redness going all the way to his ears.\n\nShe looked up at him quizzically. \"But last night...\"\n\n\"You were upset. I meant what I said. I feel bad enough for taking advantage of the situation the other night. I don't want to keep doing it.\"\n\n\"And if I told you that you had nothing to apologize for? Michael, I'm a grown woman. I am perfectly capable of making my own decisions about who I take for a lover and when.\"\n\n\"Yeah, but I can't help but wondering if you would. I mean if things were different someone like you wouldn't even notice a guy like me. You're fancy books and lacy curtains. I'm t-shirts, jeans and I'd sure as hell rather wait for the movie than read a book.\"\n\nEsther sat the coffee cup on the table next to the bed. \"You are also that most rare of breeds in this fucked world, a real life hero. A man of honor, who does whatever he needs to care for people, sometimes even people he does not know. So if you ask me, it is you that got the short end of the stick. Heroes don't end up with old-maid school teachers. They end up with beautiful sirens, whose calls touch their very souls.\"\n\nTheir gazes held for a moment. Then he sat his cup down on the table next to hers. The old bed creaked as he shifted, aligning his body so that he was inches from her. His fingers entwined with hers on top of the patchwork. \n\n\"Sing for me,\" he breathed against her lips. His touch was so light that for a second Esther feared that she was still asleep, dreaming. He nibbled lightly at the corner of her lips and the slight sting convinced her that this was no dream.\n\nShe opened her mouth beneath his. This time she did not wait for him to take the lead, her tongue slipped inside his mouth as he moaned into their kiss. She tugged her hands free of his, bringing them to his neck, drawing him deeper, holding him still for her bold onslaught. \n\nShe pressed her body upwards the thin cotton chafed at her skin as she rubbed against his chest. She moaned at the tightness in her dark nipples. She sucked in a lung full of air when his calloused fingers found the hard tips and rubbed gently over them. Heat raced through her body causing her to rub against the man like a kitten wanting to be petted.\n\nShe whimpered when his fingers abandoned her nipples. The aching need that his touch ignited raged on with nothing to extinguish its flames. His hands slid down her body. Throwing back the quilt, his hands slipped beneath the edge of her nightgown lifting it over her head and tossing it across the room. \n\nEsther spread her thighs as he half stood, pushing at the elastic waistband of his sweat pants. Within seconds he was between her legs, pushing deep inside her body. Her eyes closed, her head thrown back as she gripped the sheets between her fingers until her knuckles were white. She used them as a perch to lift her hips, grinding against him, drawing him deeper and deeper inside her. \n\nShe moaned as he filled her completely. Her breath caught in her lungs as the base of his shaft rubbed against the sensitive nub of her clitoris. She screamed out as her orgasm hit her fast and hard. Her hips found his rhythm as she rode out the wave and the next and the next. She was trembling and weak, but totally mindless as he plunged deeper within her waters sending her over the edge yet again, joining her in his release. \n\nHer fingers released the sheet as she felt him roll to the side a bit, so that he did not crush her. Her breathing was ragged and shallow. An annoying sound registered for the first time. Looking over at the table next to the bed, she could not see the time because the two cups blocked her view of its neon orange numbers. But its shrill warning could not be denied. \n\nShe lifted her hips, driving his half hard cock deeper. She whimpered at the feel of him, tempted to call in sick. She smiled as she remembered her earlier train of thoughts. This would be a decidedly different reason to spend the day in bed.\n\nHe brushed a kiss across the soft brown skin of her cheek, whispering the temptation into her ear. \"You know no one would blame you if you called in today.\"\n\nShe sighed as she pushed at his shoulder, rolling him onto his back in the center of her bed. If his words had not given her reason to pause the sight of him more than half naked certainly did, his chest glistening with a fine sheen of perspiration from their efforts, the head of his semi-erect cock peeking above the top of his pants.\n\nShe hesitated for a moment, standing naked beside her bed. Then she realized how exposed she was. The sag in her large breasts. The roundness in her tummy that never went completely away after giving birth, not even after twenty five years. The cellulite in her thighs. She blushed beet red at what she must look like to this Adonis. What was she thinking? \n\nShe practically ran from the room. \"I'm late,\" she tossed over her shoulder as she sought the safety of the shower. Beneath its refreshing spray, her mind raced with options. For a woman that just three days before did not think she had any, they seemed overwhelming then. But she did not have time to consider them all or dally over a shower.\n\nShe grabbed a towel and wrapped it about her. She wondered if he would still be in her bed. The thought in itself was disturbing on some level. The idea of prancing around the room wearing only a towel as she collected her clothes and dressed was more than a bit daunting. \n\nBut he was nowhere in sight as she picked out a matching set of pale blue bra and panties. She refused to pause and consider why matching should matter. She threw open her closet door and pulled out a non-descript printed dress that hugged her ample chest and flowed softly about her tummy and hips before flaring out to dance about her calves.\n\nStanding in front of the mirror that graced her dresser she applied the lightest of make-up, just some eye shadow, mascara and lip gloss. Of course, even that was more than she usually bothered with. But she would not give that a thought either.\n\nEyeing her reflection in the mirror, she supposed it would have to do. For a woman approaching fifty, it was not half bad. But certainly no Helen of Troy or even Diana, goddess of the hunt. She was just plain old Esther, who taught English and ancient mythology to teenagers whose only interest in such things was in video games and television shows. But it was her lot in life, she thought as she turned and walked into the living room.\n\nHe was coming from the kitchen with two more cups of coffee in his large hands. \"We never finished them. Figured you might need some caffeine in you before facing all those kids,\" he smiled.\n\nShe took the cup and brought it to her lips. It was hot but not as hot as before. The aroma and taste pleaded with her to tarry and savor their goodness. But she did not have time as she chugged the liquid as quickly as its heat would allow.",
        "\"Thanks,\" she handed him back the empty cup. \"I definitely needed the caffeine rush, although the kids are not the problem.\"\n\nHe nodded his head. \"They seemed pretty nice. At least the ones I met last night anyway.\"\n\nShe smiled, \"They are pretty good. Most of them anyway.\" She crossed the room and grabbed the dark blue letter men's jacket that hung on the coat rack behind the door. \n\n\"I'll see you this evening then\" she fumbled for words. What did one say to one's lover after an amazing romp in the morning? It was not a dilemma that Esther had faced often.\n\n\"Yeah, I should have the haunted house down by then. Maybe we can cut up those pumpkins and get them boiling then before they go off. Should have everything packed away this evening,\" he assured her.\n\nEsther turned and smiled weakly at his words. It seemed that now that the Halloween festivities were over the man could not wait to be on the road again. Not that she blamed him. Not that she had any claim to him or his time. She was just one of the many stops on his journey.\n\n\"Yeah, well, thanks for all your help,\" she said as she opened the door and rushed through it. Trying to make it to the old pick-up before the flood began. She made. Just barely. And by the time that she arrived at the local high school fifteen minutes later, she had stymied their flow. Even if the eye shadow and mascara were long since gone. Then again her students were not used to her wearing them anyway. But the swollen red eyes, those they had grown used to.\n\nCHAPTER SIX\n\nEsther was just entering the final test grades into the computer Friday afternoon when Rob Waters, the English department head popped his head into her classroom. \n\n\"Glad you are still here. I was afraid you would be gone already. Heading out to the big game and all,\" then he paused as if remembering that she had not attended football games since Tommy's death.\n\nHe cleared his throat. \"Anyway, if you could stop by Principal Mann's office. There is something we need to discuss with you.\"\n\nEsther nodded, \"I'll be there in a couple of minutes. Just let me shut down my computer.\" The man looked like he would argue, but then nodded and turned towards the hallway, adding \"Make it quick. The rest of us need to head out for the game. Tyler is quite a little ways away.\"\n\nEsther fought back the tightness in her throat. She had been expecting this all week. So why were her hands trembling as they hit the keys that would start the shut-down process with the ancient machine? \n\nEver since the hearing two days ago that had given temporary custody of Joey to his paternal grandmother, she knew that this town or rather the men who ran it would demand their pound of flesh, vengeance for what she had done. What she had to do to protect an innocent child. What she knew she would again if necessary.\n\nBut none of that changed what she knew was to come. Oh, she might not know exactly what they had in mind, but she knew what they wanted. Her...gone. From this school, from this town, from everything that she had known for most of her life. Hell, from the face of the earth if they could manage it. \n\nShe squared her shoulders, lifted her head and took a deep cleansing breath. But there was nothing that they could do to her. Nothing that really mattered anyway. Fire her? She could get another job, even in this economy. Twenty years of teaching and with connections outside of this small minded community, it might take her a couple of weeks or even a month but she could do it.\n\nQuestion was...did she want to? As much as she loved teaching, the teens reminded her daily of all that she had lost. Their enthusiasm, their laughter, even the damned football were a constant reminder of Tommy and happier times. \n\nSo what did she want? \n\nA smile played at her lips. The image of Michael's naked body wrapped about her in the bed danced through her mind. She had slept each night this week in his arms, awoken each morning to coffee flavored kisses and wallowed in the sheets with his god-like body morning and night. \n\nShe reminded herself, this was all just temporary. Even though he had kept his promise, the haunted house and all the other decorations had been packed away before she got home from school on Tuesday. That night they cut and boiled the pumpkin, leaving it to cool on the kitchen counter overnight. \n\nHe had pulled out the sheets and blankets to make his bed on the couch, but changed his mind when he saw her standing in the hallway in her night gown. She held out her hand and he took it following her down the hall without a word. \n\nHe had not said anything more about sleeping on the couch or leaving but Esther knew it was coming. Knew that this was all just a dream. And knocking lightly on the closed door of the principal's office, she had the distinct feeling it was going to end sooner than she wanted.\n\n\"Come in,\" was the gruff reply.\n\nEsther froze in the door way. She should not have been surprised, but looking about the room she noted that in addition to the principal and Rob, there was also Mayor John Monroe, Cassie's grandfather, and Joshua Meadows, the PTA President and her uncle.  \n\nBut she refused to be beaten. Not by these men. Not with the secrets that she had held for so long. Holding her head high, she said \"You wanted to see me.\"\n\n\"Yes, Miss Jackson. Please have a seat,\" he commanded.\n\n\"I think I'll stand if you don't mind. This should not take long,\" she heard her words and was pleased to note the authority with which they rang out. Even if it was a bit of a show.\n\nThe man cleared his throat nervously. \"Yes, well, I suppose that will be fine. We have called you here today because there has been a complaint made against you by one of our parents. In regards to your moral turpitude clause. She feels that you are not setting a good example for the young people with your recent behavior.\"\n\n\"My recent behavior?\" she refused to be baited by these people.\n\n\"Yes, well, it has come to our attention that you have a...guest...shall we say staying with you. For almost week now. A man. This parent just does not feel that is appropriate behavior of a woman in your position.\"\n\n\"What position would that be, Principal Mann? A respected and award-winning teacher?\"\n\nHe looked at his hands folded on the desk. Esther thought she saw them tremble a bit. But it was Joshua Meadows, who was to respond. \"Yes, a teacher and a single woman whose son just died. Seems to me that now the boy is gone you are quick enough to show your true colors.\"\n\nEsther shook with anger. \"What colors would that be, Mister Meadows? Black? It never seemed to bother you when you tried to hit on me at Tommy's ball games. Or have you forgotten the number of times that I turned you down? How I never told your precious wife about your dallying? Was that your first wife or your second? What number are you on by now? Five? Six? Why do these stupid women keep thinking they can change you? If you cheated with them, it is certain that you will cheat on them.\" \n\n\"Well, I never. After all this town has done, taking you and that bastard of yours in when you had nowhere else to go,\" it was the mayor's turn to get in his digs now.\n\n\"What has this town done for me? Talked behind my back, shunned me and my child so that we always were on the slide lines. No matter that you got a teacher who graduated with honors or one of the best captains of this lousy football team has ever had. We more than pulled our own weight.\"\n\n\"As for moral turpitude, how about the morality of turning your blind eye as your grand-daughter beats and abuses her son? That's what this is really all about. You blame me for reporting Cassie to social services.\" All eyes turned towards her, mouths open wide. \n\n\"Well, you are right. I did report her. But I was smart enough not to call the local office. You all have them under your thumbs like everything else in this god-forsaken hell hole. I emailed a friend in Austin; someone I knew would not be frightened or swayed by your pressure. And you know what I would do it again.\" \n\nTurning to face the principal, she continued, \"So here's how this is going to play out, gentlemen. As the song says, you can take this job and shove. I ain't working here no more. But the official record will include no mention of any moral turpitude or any other bull shit.\" Pinning Rob with her gaze, \"Why, you ask? Because if you do, I'll make a phone call to another of my Austin friends at the Fair Labor Board. And I will cry racial discrimination. By the time I'm done with this stupid town it and all of you won't have two pennies to rub together. And when or if someone calls you for a reference, it damn well better be as glowing as I deserve.\" \n\nHer hands on her hips, she met each gaze and held them until it was them who looked away. \"So now if you will excuse me, gentlemen, as you say I have company to entertain.\" \n\nEsther never knew what possessed her; certainly the women at the Pentecostal church would have sworn it was some demon. But she turned and swayed her round hips. Her hand hovered in the air as she slapped her ass. The sound rang through the room as she smiled, \"Ya'll enjoy your football game now.\"\n\nWith her head held high and a broad smile on her face, she walked out of the office, down the long hall to the entry way. She stopped and stared for a moment at the glass trophy case and its large center piece, the state championship and most valuable player award that bore Tommy's name. Her fingers played across the cold glass as her smile faded.\n\nShe made it out the door, down the steps and across the parking lot to her truck before the tears began in earnest. She could barely see for the moisture that pooled in their brown depths as she pulled out of that parking lot...for the last time. \n\nShe might not know where she was going or what she would do, but it had to be better than this place.\n\n***\n\nEsther's foot drug along the cold cement porch as she swung back and forth. She had barely touched the wonderful Italian diner that Michael had made. She had spoken only when he asked a question. He had insisted on washing up the dishes, wrapping a jacket about her shoulders and shooing her out here.\n\nIt was a good thing too. Esther's mind had been playing and replaying this afternoon's events like the coaches showing films of bad plays after each game. She did not know what she had expected once she made the decision that she should have months ago. She supposed this afternoon was pretty much in keeping with this place and these people. \n\nBut that did not mean it did not hurt just the same. For twenty-five years, since she arrived in this town with her shining new teaching degree with honors and a two year old with dirty blond curls, deep brown eyes and a never-ending smile, she had done all she could to fit in, to give her son a sense of small town community that was vanishing from this world. \n\nAt first she had faithfully attended the Methodist Church, even teaching Sunday School for a couple of years. She had enrolled Tommy in Scouts, Little League and everything else she could afford. Hell, she had even attended the monthly meetings in the town hall for a couple of years.\n\nBut none of it had mattered to these people. They had always remained outsiders. The town was closed off to new comers, city folks. But it was worse for Esther and her son. \n\nHer own mixed heritage rose more than its share of brows in this community. For the first time in her life, she had appreciated the type of prejudice that her mother and father must have experienced during the early days of their marriage. The rich Jewish girl from New York marrying the oldest son of the Southern Baptist minister and civil right leader. Of course, by the time that Esther could remember much they were both professors at a predominantly black university. The world in which she grew up lived comfortably in shades of grey...and light brown.\n\nThey had both wanted Esther to attend the college where they taught and it did have a magnificent reputation within the education community. But like so many only children, she longed to spread her wings, escape from their watchful eyes and live for a bit. When she received a full scholarship to a state school, it was an easy choice for her. \n\nBut not for her parents. When two years later, she gave birth to Tommy out-of-wedlock; they had insisted she come home, so they could help. Esther refused, swallowing her pride long enough to accept the check from Tommy's other grandfather. The check that admitted no rape, no paternity, but enabled her to finish college and even put a modest down payment on this house.\n\nTruth was that she had never given her son the one thing she had wanted most...a sense of belonging. And today proved that. \n\nStudying her hands that did not lie about her age, the years showing in each crease and dark brown age spot, she inhaled, a cleansing breathe. Nothing was to be done about the past, not now. But what of the future?\n\nUnemployed in your late forties in this economy was not a good combination. She supposed she could send out an email to a few of her colleagues across the state or even the country. But she was not sure that she wanted to go back to teaching. Not anymore. \n\nOf course, the good part was that this place had been paid off right after Tommy finished college and left for the Marines. In fact, she supposed that she could make a bit of a profit if she put the house on the market. It might not fetch a high price, but it was likely to be double what she paid for it. \n\nShe was glad too that she had put off buying a new truck. Instead she had repaired and maintained the one that she had purchased the year that Tommy got his license. It was her one splurge, a brand shining new red pick-up. More for him than her. She had let him borrow it often enough on Friday and Saturday nights while in high school and even college. He loved that truck. She had always planned to give it to him when he came home, get herself one of those little hyperids. \n\nSo the good news was that she owned her home and vehicle free and clear. The bad news was that as many good memories as both held for her, she really did not want to stay in this place anymore. \n\nShe chuckled. Perhaps it was all just a mid-life crisis. How had in the space of a single week everything in her life changed so completely? \n\nThe light knock from inside the screen door answered her question. \"Come on out, Michael,\" she answered.\n\nHe smiled as he joined her in the swing, but again she noticed that it did not reach those magnificent blue-grey eyes. They sat silently rocking back and forth for a couple of minutes. The only sounds were the crickets and this time of year their songs were quieter and fewer, the rapidly approaching winter encroaching on them as well.\n\n\"I finished up the dishes and started packing,\" his words cut through her musings. She felt the tightness welling in her chest. She forced herself to nod. She had known that this moment was coming. Hell, truth be told he should have left days ago. \n\nHis job here was done. Others had need of him. That was what this man was about...honor. As he said 'checking in on the men and women who served with him and the families of those who never made it home.' She was just one of those families. Nothing more, she told herself.\n\nShe forced words past her dry throat, \"When will you be leaving?\"\n\nShe watched him fidget with his hands. Hands that had known her body intimately. Hands that had brought her pleasure like she had never known. \n\nHis voice was quiet when he finally spoke. \"Tomorrow morning, I suppose.\"\n\nShe bobbed her dark head in acknowledgement. It was all she could manage. She wondered for a moment if she told him what happened today would he still leave. Or would his honor dictate that he stays, help her through a few more dark days to come? \n\nBut she knew that she would not do that. Would never tell him the truth. Others needed him and she had no real hold over this man. She never had and never would. Just two strangers offering one another what comfort they could the long dark nights with their smoky, bloody nightmares.\n\n\"Do you need any help? I mean packing that is,\" she asked.\n\nHe shook his head. She noticed that even in the brief space of a week the salt-and-pepper locks on his head had grown. They were distinctly more curl at the ends. She could not stop her fingers from reaching up to caress their softness. In some way, it reminded her of how she once played with Tommy's soft blond curls. Moisture gathered in her dark eyes, making it hard to see.\n\nHis fingers wrapped about hers drawing them to his lips. He pressed a soft kiss to the back of her hand, and then turned it, pressing another to her palm. Her eyes must have been cloudier than they seemed because she swore she saw a tear spill from the corner of those blue pools as he spoke.\n\n\"I didn't plan this. Any of this. God, I wish.\" He stopped and stared off into the darkness, the moon that had shown so brightly just days ago hiding her countenance and her rays that might have offered more clues to this man and what it was he truly wished. \n\n\"Esther, you have to know I hate leaving like this. If things were different. If I were different. If I had anything besides blood on my hands and the sounds of bombs ringing in my ears. If...\" He brought her hand to his lips once more. \n\n\"Well, just if. You are an amazing woman. Smart and beautiful. And one thing I know with everything inside of me is that Tommy would not want you wasting away in this place. He would want you out there. Finding the happiness that you deserve.\"\n\nShe choked at his words. Words that so mirrored her earlier thoughts. He was right. Tommy would not want her to stay in this place. \n\nBut he was wrong about something else...he had everything she needed and wanted. The past week had been the best of her life, aside from the joy of raising Tommy. She could let that ride away tomorrow morning or she could fight to keep at least a part of it. \n\nA secret smile curving her lips she stood with her hand still in his. \"Then I have an idea of how I want to finish this good-bye, Michael.\" She leaned down and whispered something in his ear that made his ears turn decidedly red again. Then she tugged gently and he followed her into the bedroom.\n\n***\n\nStanding in the window of her bedroom, she watched him throw his duffle bag into the compartment on his bike. Looking at the matching green bag that lay half open on her bed, she hoped there was room in there for another. What she really hoped was that there was room in his life for her.\n\nShe was not na\u00efve little college girl anymore. She was not chasing after the quarterback, hoping for some crumb of gratitude for writing his papers. She was a woman, a grown woman, a woman that had raised a son on her own, had borne the prejudice of this small town for most of her life. She was also a woman yearning to break free of all of it.\n\nShe might not know how long this thing between them would last. How long this passion would burn brighter than the North Star. But one thing she did know was that she wanted to find out. For once in the past quarter of a century, she was going to take a chance. Live her life and taste passion and adventure.\n\nTurning back towards the bed before she lost her courage, she reached for the top drawer of the night stand. She started to pull out the leather bound volume, the latest in the collection that collected dust under the bed. \n\nInstead her fingers found the cold, metal of the notebook computer that she had bought last month. It had been a whim; she had encouraged her students to explore this brave new world of cyber space, assigning them to create a blog. An online journal like the leather bound ones that had been her solace for all of her life. ",
        "Maybe this was right too. Maybe this new adventure demanded a new type of journal. So instead of digging deeper for the safety of her old leather friend, she boldly brought forth a new one. Tugging it into the top of the bag between some old jeans and a sweater, she closed the zipper and slung it across her shoulder. \n\nShe made it smoothly across the room and out the door. But she felt her bravado flee when she stood facing the closed door of her son's room. She took two steps, her fingers wrapping around the door knob. She wanted to turn it, to step inside and for one more brief moment commune with him. \n\nBut she dared not. Her life now was about seizing the moment. The here and now. And outside, she knew that Michael was finishing up his preparations. Any moment now he would come looking for her, to say their final farewells. \n\nShe had other plans. She walked down the hallway with the same determination that she had when facing the inquisition yesterday. Was it just yesterday? She crossed the living room and stood for a moment in the door way. Her hand hovered over the handle on the screen door. \n\nShe could still back out. Stash the duffle bag under the couch before he came back. Pretend that everything was fine. Send him on his journeys alone. Keep her pride and dignity. Never admit the truth...that she had nothing left in this place...that she wanted nothing more than to see where this thing between them took her.\n\nShe pushed that handle and rushed onto the front porch. Flying across the yard with the duffle back bouncing about her back, she stood before him in seconds.\n\nShe had practiced this speech a thousand times. She had lain awake all night long in his arms writing and rehearsing each word. But now faced with the questions in those blue eyes, all her carefully crafted words fled like baby birds on the first stiff summer wind. \n\n\"What is that?\" he asked eyeing the bag.\n\n\"I thought...\" she began, searching for the words once more. Her speech about taking chances, seeing where things led, new beginnings, all her pretty words deserted her. In the end, she was left with only, \"I'm coming with you.\"\n\nShe watched him. He seemed frozen in place. One muscled thigh on either side of the motor cycle. His hands on the shining metal of the handlebars. His face an unreadable mask. \n\nHer heart stuttered in her chest. Her breathe caught in her lungs until she was certain her lips would turn blue. \n\nStill neither said anything. They simply stared at each other.\n\nThen he moved. Throwing one leg over the bike, he dismounted. In seconds, he stood before her, so close that she could feel the heat of his body in the crisp morning air. So close that she could smell the clean scent of soap and man. So close that if she merely took a tiny baby step, she could wrap her arms about him, seek the passion that only he had ever given her.\n\nHe reached out and took the bag from her. But that was all he did. His eyes searched her face. \n\nShe did not know what to say, what to tell him to convince him. But somehow she knew that she had to. She had to climb onto the back of that bike, wrap her arms about his waist and leave this place forever. But those words seemed stuck within the tight confines of her dry throat. \n\nHe turned and she wanted to put out her hand to stop him, but she was unable to move, frozen to this spot. Then she saw that he moved towards the bike, opening another compartment and placing her stuff inside it. He closed the lid and swung one of his muscular thighs across the bike once more taking his seat. \n\n\"Then get on,\" was his only reply.\n\nEsther smiled and breathed again, a great gulp of air that seemed to refresh her soul as well as her body. She raced the few short steps to the motorcycle and threw one of her jean clad legs across the seat behind him. She climbed into place, wrapping her arms about his waist and rocking her hips against the leather seat, trying to find a comfortable position.\n\nHis hand snaked around to rest on her upper thigh. \"If you want us to get out of here today, then be still, because rubbing against me like that ain't gonna do either of us any good for a few hours,\" he smiled as he turned in his seat and placed a brief kiss on her lips. \n\nReaching behind him, he pulled out a red, white and blue helmet. He placed it on her head and adjusted the strap beneath her chin. \"This will have to do until we can find a place to get your own.\"\n\nEsther wanted to argue with him. To insist that he take the helmet and what protection it offered. But she knew it would be futile. A waste of words on this man of honor and another delay in shaking the dust of this place off her boots. So she smiled and asked, \"So where next, Sergeant Mike?\" \n\n***\n\nEPILOGUE\n\nEsther stood in the walkway. Dressed in the black flowing skirt, white ruffled shirt and bright red vest, her hair was hidden beneath the golden wrap. Her face shone brightly as she greeted each trick-or-treater. Each child was given a bag of her famous goodies. Each treated to a snack of cookies, candied apples and her special witches brew punch complete with steam rising off of it, thanks to the liquid nitrogen ice. \n\nThe house was decorated from top to bottom with its usual assortment of pumpkins, vampires, monsters and cobwebs. But hanging from the bannister next to the front door was the glory of old Red, White and Blue and below it proudly hung the Marine Corps banner as well. A tribute to her son...and her husband.\n\nSometimes her mind could not fathom the difference that a year could make. But looking across the yard to the table where her handsome hero dished out another cup of witches brew to their little goblins, she could not help but smile. Sometimes life was fair. Sometimes, just sometimes, good things still happened to good people. \n\nThat weekend last fall, Esther had learned that Michael was a man on a mission. She was his third stop. His first had been a young widow, whose husband had died just days before Michael came home. For the first time, he had the honor of attending the funeral of one of his fallen men. \n\nThen, he has stopped in Oklahoma to hold the hand of the dying father of the first men he had lost too many damned years before. His list was long, way too long. But he was determined to visit each and every one of his man that had come home and each family of those that had not. \n\nAfter they had taken down the last of the Halloween decorations last year, Esther had shocked the hell out of Michael when she grabbed a backpack and hopped onto the back of his motorcycle. It was a journey of tears and laughter that they would take together. Because one lesson that she had learned over those few precious days and nights in his arms was that a burden shared was a burden lightened. \n\nThey had made dozens of stops along the way. But getting married in Vegas by an Elvis impersonator was one of her favorites. Dozens of former Marines and families had shown up to share their big day. The laughter and the days filled the little chapel of love. And each would have sworn that Tommy stood right beside them, smiling his approval.\n\nThey had been forced to box up Tommy's things a couple of months back. They had gotten a call one of the young woman that had served under Mike had been killed when an IED went off under the supply truck she was driving. \n\nHer grandmother had agreed to care for the children while their mother served her country and built a better life for them all. But for a woman in her late sixties raising too small girls seemed a daunting future. Would they take charge of the two young children who had now lost their only parent? They did not even have to discuss it. They simple got to work packing and painting. The room was now a bright pink, perfect for their little girls. \n\nThey would never forget Tommy, or the other families that they had met. But together they were learning to live and love...one day at a time. \n\n***\n\nNOTE FROM THE AUTHOR\n\nI wrote this short story in October of 2011 for submission to Literotica's Halloween contest. It was something that I literally kicked out in a morning. It placed third in that contest and I received dozens of emails and comments about how deeply it touched the hearts and souls of soldiers and their families around the world.\n\nBut as a storyteller, I could not get Sergeant Mike out of my head. What an amazing man, so representative of the hundreds of thousands of men and women around the world that give selflessly of themselves to bring peace to us all. What has developed is a series of novellas about his travels called Sergeant Mike's Miracle Tour. The series is sort of a Highway to Heaven meets the United States Marine Corps. \n\nEsther's Story is merely a taster, a special gift to my readers to celebrate the sacrifices of our men, women and families who serve in the military this Memorial Day. Please feel free to share this story with your friends and family. My goal is simply to bring hope and gratitude through these humble words. \n\nThe first chapter in the Sergeant Mike's Miracle Tour series is My Country Tis of Thee. It will be released on/around the 4th of July. It is the story of a young Latino, who gave his life for a country that was not even his own. As with all of the stories in this series, it will touch upon the complex issues of how our country treats tens of thousands of soldiers and their families who defend their adopted country so valiantly. It also includes a motely band of Vietnam and Korean veterans, who honor their comrades and country by attending all the military funerals in the area. \n\nGoing Home is the second in the series. It is the story of Mike's best friend, who died over twenty years ago in Desert Storm. His father is dying of Alzheimer's and Mike has the privilege of standing in his steed to hold his father's hand as he goes home to once again see the son they both loved. It will be released on Labor Day to honor the hard work of those like the father, who may never have served in the military, but made our country strong with the sweat of their brows.\n\nShared Burdens is this story re-written through Mike's eyes. Did you guess that he has been in love with Esther for years? It will come out at Halloween...a first anniversary of sort for Mike and his stories. Other stories in the series will deal with issues such as PTSD, disabilities and the new orphans of war, children who lose their mothers. \n\nThis series is so much more to me than just stories. They are a passion; my chance to give something back to the men, women and families that keep us all safe. Almost eleven years ago, we all stood by as 'the great sucker punch came out of nowhere.' On that day and since, tens of thousands of men and women have answered the call to defend America (England and freedom itself). \n\nNow as those wars are drawing to a close, it is us, those countries that they left behind, who are called to duty. How we honor them now with the medical care, mental health support and jobs they need is our chance to repay them for all those years. I hope that in some small way these stories will remind us all of our duty to them. \n\nMay whatever force (if any) rules this F'ed up world bless them and us with peace and happiness.\n\nTara "
    ],
    "authorname": "Tara Cox",
    "tags": [
        "love",
        "romance",
        "marines",
        "military",
        "black woman",
        "white man",
        "interracial"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/esthers-story"
}