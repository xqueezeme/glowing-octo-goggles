{
    "title": "Lost Empire Ch. 56",
    "pages": [
        "0001 - Tempro \n\n0003 - Conner- Thomas \n\n0097 - Ace - Zimmel \n\n0098 - Lucy \n\n0101 - Shelby (mother ship) - Derrick \n\n0125 - Lars \n\n0200 - Ellen \n\n0301 - Rodrick \n\n0403 - Johnathon \n\n0667 - Marco - Brown \n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara \n\n0999 - Zan \n\n1000 - Sherry - Lucie (for the moment) \n\n----------------------------\n\nMara was clutching Daniel Norman, a full Colonel as desperately tight as she could. Sobbing into his chest she was terrified that if she let go he might disappear as if he were made of smoke. Pulling him tighter to her, her sobs increased in volume as everyone in the chow hall was quiet. \n\nDaniel Norman could only stand there holding his daughter. It was too good to be true she was here, she was alive. Wait! She was a Captain? A fleet captain? A look of shock then surprise crossed his face as he nodded. He knew his old commander; if he'd promoted her to Captain then he knew she more than deserved it. Looking at the monitoring cameras Daniel nodded again then mouthed the words, 'thank you commander.' \n\nDerrick was nodding when he saw the Colonel say this. He figured Daniel would probably know what he had done. He also figured that Daniel knew that he did it where it was deserved. Smirking Derrick thought, perhaps he should have made Daniel a General after all. \n\nStill unable to move Mara never wanted to let her father go again. She had suffered long and hard thinking that he was gone, that he'd never know how proud she was of him. She had done all that she had trying to behave as brave, half as much of a hero that he was. \n\n\"I...I can't believe that you are here. That you are alive! My god I have dreamed of the day that I would find out it was a lie. That I would see you walk through the door and hold me. I never gave up the hope that you were somehow alive.\" Mara said her sobs finally quieting. \n\nDaniel still in a state of shock could only kiss her head. He'd missed his precious daughter more than anything than he'd ever had. \"I also thought to never see you again; I took that job to make it home sooner to you. You were always the world to me. I would have done anything for you my precious girl.\" \n\nWhispering into his chest still Mara said, \"Please father, and please never leave again.\" \n\n\"Oh baby girl,\" Daniel started. \"I have no intention of doing that at all!\" \n\nSuddenly Mara looked at the table where Greeson was sitting. \"Father! Please I want you to meet someone who is just as dear to me!\" Pulling her father to the table Greeson arose and snapped off a salute. \n\n\"Sit son, no need for that right now Warrant!\" Daniel said quietly. \n\nGreeson sat as did Mara and Daniel. \"Father, this is David Greeson.\" Here Mara dropped her voice and eyes. \"My fianc\u00e9.\" \n\nBoth Greeson and Daniel's heads snapped around to stare at Mara. \"I am?\" Greeson said a moment later in shock. \n\nA wide smile broke out on Daniel's face as he nodded. Just like her to go after what she wanted as aggressively as she was. \n\nDaniel looked at Greeson and nodded no, then smiled. \"Don't argue son, I know my little girl. You wouldn't get very far I know.\" \n\nGreeson's face still held shock, and then a slow smile crossed his face. \"Ok, so when did WE decide this?\" \n\n\"Did you forget?\" Mara started. \"If we both survived we would meet up and get together. At least I thought that was what you meant. What!? Now you saying you have no interest in me?\" Mara said a slight look of anger on her face. \n\nGreeson's eyes opened wide then a smirk appeared on his face. \"I thought it was the other way around. I had showed interest, you on the other \n\nhand seemed to show no interest.\" \n\n\"I...but... I,\" was all Mara seemed to get out. \n\nDaniel's eyes went wide as he saw his daughter tongue tied for the first time in his life. Looking at Greeson a new respect grew as he nodded this was a man to be reckoned with. Then he looked closer seeing that the man had the stance and readiness like Dempsy. Hmmmm, picking up a fork Daniel threw it at Greeson. Nodding when the man snatched it from the air too fast to follow. \n\n\"So I see that Dempsy has finally taken a student. So I take it the both of you killed her?\" Daniel stated. \n\nGreeson started to speak then snapped his mouth shut. \n\n\"If you really wanted to know that which he isn't supposed to speak. This one should speak to the teacher not a poor dumb student!\" Daniel heard a voice from the past speaking behind him. \n\nTurning around Daniel nodded as Dempsy was leaning against the doorway smirking at Daniel. \"This one might if the teacher was not hiding away not wanting to be seen by friends.\" Daniel said with narrowed eyes at Dempsy. \n\nNarrowing his eyes back at Daniel Dempsy replied, \"One's friends should have known that this one was waiting.\" \n\nDaniel got up walking half the distance to Dempsy who met him. \"That's if you gave a shit about letting me know you were alive damn it!\" Daniel shouted. \n\n\"This one had been trying to let you know. Unfortunately you were dead. Though I still tried to let you know!\" Dempsy said starting to get rather animated. \n\nGreeson was watching the exchange with at first mild interest then more as their discussion became more heated. \n\nDaniel's eyes were wide as he responded. \"How in the hell would you let me know!? I was dead for god's sake!\" \n\nDempsy looked straight into Daniel's eyes saying, \"Being the warrior you are, I expected you to be in Ame. I expect no less of any of us when our time comes upon us.\" \n\nDaniel sighed shaking his head. \"Again you spout that mythology, I...\" \n\n\"No not mythology the truth, as I said I expect all of us to go there.\" Dempsy said bowing low to Daniel. \n\nGreeson's mouth was hanging open seeing his teacher do this. Daniel sighed then bowed low to Dempsy. He then grabbed the man hugging him, \"Damn it, it's good to see you again. You I think I have missed far more than any other.\" \n\nDempsy straightened up replying, \"Of course! The fact that you were far more intelligent than you let on always bothered me.\" Dempsy was about to turn away when he turned back. \"I haven't forgotten the many favors you did for me my friend. Nor do I think will I ever be able to truly pay you back.\" \n\nDaniel shook his head, \"I told you before damn it! We were comrades there is no paying back. I did what I did because we depended on each other no more no less. We had to or we'd have been dead after the first week.\" \n\nDempsy was nodding his head then held up a hand. \"I can understand the comradery between the team. What you did went far beyond that. It is one of the main reasons you will always be my best friend,\" Here Dempsy stopped and saluted. \"Sir!\" \n\nGrowling Daniel started to shake his head, \"Stop that right now or I'll talk to the commander about you being a full colonel!\" Daniel said. \n\nDempsy's face held a grimace for a moment before he replied. \"I hope not. He's already threatened to make me one for almost a month now!\" \n\nDaniel smiled he'd might have to after all, then he thought knowing the commander he'd promote him to General right after he made Dempsy a \n\nfull colonel. Sighing he was shaking his head at these thoughts. \n\nDempsy's eyes went wide as he started to smile, \"Ah! I see you have seen what I think that the commander would do if we started on that path.\" Leaning close Dempsy smiled more than whispered, \"He has become even more sneaky lately we might have to watch each other's back as it is now!\" \n\nSuddenly there was the clearing a throat as both men turned to the doorway to see Derrick standing there. He had both of his arms crossed as he seemed to stare a hole in both men. \"I heard that Colonel! Don't think I'll let it go that easy either General!\" \n\nBoth men swallowed hard as Derrick handed Daniel a star for each shoulder. Dempsy he handed a bird emblem for each of his. Both men looked at Derrick with a heated look then at each other. They both smiled and bowed all the way to the floor, \"As you wish your Majesty!\" Thus causing Derrick to groan loudly. \n\n\"Alright both of you asses! We have an assault to plan against that little ass Risen. According to information that Hartwell found the little shit is hold up in another bunker. It also appears that he has the redoubler technology that Kimison and Rayburn developed.\" Derrick said irritated about the whole situation though keeping his voice low. \n\n\"Sire you think that we have a traitor in our midst?\" Dempsy asked. \n\nDerrick was quiet a moment then nodded. \"I'm afraid we might. I think it's about time you both took a tour of the ship. Look around see if there is anything I missed if there is try to let me know before you execute them.\" \n\nBoth men looked at each other smiling then snapped off a salute making Derrick groan again. \"Get the hell out of here I have a hell of a lot more to do. \n\nAgain both men saluted as they moved toward the door stopping to watch what Derrick was going to do. Derrick continued on to where Greeson was standing with Mara. \n\n\"Chief Warrant Officer David Greeson.\" Derrick said as he stopped before both Mara and Greeson. \"I apologize for taking as long as I have for this.\" Reaching in his pocket Derrick produced two sets of double silver bars, \"For the risking of your life in service to me and the empire. For the bravery and commitment you showed those under you. I hereby promote you to the rank of Captain in the empire special forces.\" \n\nGreeson could only stand there in shock as he saw his teacher by the door smile largely nodding to him. Then he saw Dempsy mouth serves you right! Bowing to Derrick, Greeson replied, \"I thank you sire. I'll do my best to serve you with honor.\" \n\nDerrick smiled as he looked back at Dempsy, \"Well,\" Derrick started. \"I guess the teacher could learn from the student for once!\" This of course caused a groan from Dempsy. Then he and Daniel were moving out the door. \n\nGreeson was about to turn toward Mara when he was tackled to the floor. \"Good! Your finally starting to advance! Now I won't feel as bad when you salute me!\" \n\nGreeson groaned as Mara started to kiss his whole face. Derrick could only smile as he shook his head no when Greeson looked at him for help. Holding up his hands he backed away. He had enough to do with the Empress already demanding his attention. Sighing he knew he couldn't put it off forever as they were going to need an heir one day. \n\nMoving out of the room Derrick made his way to the command deck. 'I might as well get this out of the way before they started to make a move against the Duke.' Walking in Shelby stood and bowed to Derrick drawing a small groan from him. \n\n\"I welcome you my emperor, I have missed your company, as well as your wisdom.\" Shelby told him. \n\n\"Thank you Empress Shelby, I have also missed you. At present I am staying onboard Tempro 'til Shelby is re-gened.\" Derrick told her. \n\nShelby's smile quickly disappeared then she nodded. \"I almost figured that you would do this. I am hoping that Rayburn and Kimison are able to resurrect the other parent brain box. Though as they said, they were having trouble with the personality circuits. With the last boost that they had I am sure they can get it finished.\" \n\nDerrick was nodding as he tried to remember just what they had been discussing the last time that he'd been here. \"They told you whose personality they were going to use?\" Derrick asked almost sure of the answer she'd give. \n\n\"Yes of course. They were going to use the only one that they should, yours of course. Although they were having a lot of problems trying to incorporate it; something about losing a bit of the memories as to WHAT it was.\" Shelby told Derrick. \n\nDerrick was nodding as he remembered Gregor saying something about the Shelby personality had to be adjusted. The thing was he couldn't quite remember just what had been done. \n\n\"So they hadn't been able to overcome the self realization factor; the fact that a human personality was going to be the ship. I see I might have an idea.\" Derrick said. \"Celeste?\" Derrick asked. \n\nThe fiery red head appeared bowing to Derrick. \"Yes my Emperor?\" \n\n\"Contact Commanders Rayburn and Kimison,\" Derrick said. \n\n\"Yes my Emperor, I have them now.\" Celeste replied. \n\nBoth men appeared as holo-grams both bowing to Derrick. \"Good, I may have an idea as to how to fully integrate all the memories. I seem to remember the programmers saying something about it. I'll be back on board soon. In the mean time I want you to try to write all the memories as computer code. I know it will take a week or two, this is what I feel will finally allow you to discern what you will have to remove.\" \n\nBoth men were staring at Derrick with their mouths open. The commander had done it again! Both bowed as Rayburn stated, \"We'll get started right away. We had both thought of it though the program will have to be extremely complex. We might have to study the coding of Tempro for a bit to make sure we are on the right track.\" \n\n\"A good course of action, I'll see you in a day or so. I hope you have good news for me.\" Derrick said as he clicked off. Turning to Shelby he could see that she was still not too pleased she wouldn't be with Derrick for all that long. \n\nSighing, Derrick nodded to her almost sure what she was thinking. Sighing, she only shook her head, \"Damn it Derrick! You've just made it back and already you are going to separate us. I expected to have you to myself for at least a day. Not just an hour!\" \n\nNodding his head Derrick moved to Shelby holding her close. \"I wish the same thing Shelby; 'til all of this crap is through I'm not sure it is safe for the both of us to be together. With as many threats as we have removed I feel there are nearly four times as many more out there.\" \n\n\"I tend to agree with him Empress.\" Mary said behind them. \"Since the removal of most of the sect it seems more dangers have reared their head.\" \n\nGrowling a moment Shelby suddenly started to nod her head. \"I realize all this Mother; I also know there is a greater danger with the two of us together. Though as to one of your main missions Mother, if we are together for some time, there WILL NOT be any heirs. Derrick might as well be on the front lines in this war.\" Turning to stare at Mary, Shelby continued on. \"Believe it or not Derrick, I love you damn it! I am not about to be artificially inseminated, so,\" here Shelby narrowed her eyes at Mary, \"I suggest you NOT try!\" \n\nMary's mouth dropped open her daughter actually thought she would do this? Then again it was an almost brilliant idea. Though to betray any trust her daughter had with her just might not be worth it. Sighing Mary nodded, \"I will not attempt to do this daughter.\" \n\nShelby looked closely at Mary's image a few more moments before she was finally satisfied. 'Well,' Shelby thought, 'that was one of an infinite amount of problems that they had to face.' \n\n\"I still think that both Rayburn and Kimison should work more on the personal protection that they have built for you. I read the report of how they performed when Admiral Hartwell was on Risen's planet. It appears they went well though I think that an increase in the life of the power unit might be imperative. I have also seen the way they performed for you. I believe that they can be improved.\" \n\nDerrick smiled widely, he'd forgotten that Shelby was highly intelligent from the get go. He'd also heard how she had accelerated her own creation with a few damn brilliant ideas. Sighing Derrick nodded he just might have to put her over the entire science section. \n\n\"I just might have something for you to do my dear.\" Derrick told Shelby whose head snapped up to stare at Derrick at the term of endearment that he had just used. \n\nNarrowing her eyes at Derrick she looked closely into his eyes then at his face. As far as she could tell there was no deceit there at all. No there was a warm feeling of final acceptance there. Smiling, she nodded it was about time that Derrick was starting to come around! \n\nOn board Tempro Rayburn and Kimison were starting the painstaking and daunting task of converting Derrick's memories. They had to start going through Tempro's coding, line by line to actually get a beginning inkling to the complexity of the program. After six hours they had only written two lines of code. Sighing exasperated they both started to think about using the head set again. This problem was almost as nerve racking as the cloning process. Problem was it dealt with billions more complications. \n\nAgain they both looked at the head set. They were discussing it when the holo-gram of Derrick appeared before the both of them. Looking at both men he nodded at the vexed and irritated looks on their faces. \"So I take it you've only got what? Two or three lines of code?\" Both men's mouths were hanging open as Derrick smiled. It was as he thought. \n\nLooking at Rayburn Kimison stated, \"I don't care what he says I think he has some sort of ESP. I know he's good at reading people but come on! I didn't think we were THAT open and easy to read!\" \n\nRayburn was absently nodding when he spoke up, \"Yes commander, I tend to agree. Perhaps we should test you, when there is time, to see if you have that ability.\" \n\nDerrick shook his head he wasn't about to open up that can of worms. It was bad enough he'd found out that he had the set of nanomites in him that had changed him. \"Perhaps one day, long from here you can. For now I have a request from the empress.\" \n\nDerrick bowed to Shelby who moved into the holo-gram to stand in front of the two men. \"Commander's, I am concerned about the personal protection devices that you have made for the Emperor. I have studied the reports of their uses by the Emperor twice. Also by the extended use by Admiral Hartwell. I am happy that they can protect as well as they can though.\" Here she paused gathering her thoughts.\n\nKimison started to comment, \"We thought you'd be pleased Empress. For now though we have to start on the Derrick parent...\" Kimison quickly quieted when Shelby held up her hand. \n\n\"I realize that this is a priority for the both of you. I do want you to finish that, though I think that the safety of the Emperor should come first.\" Shelby said looking at each of the men with deadly seriousness. \n\nBoth men were about to protest when this time Derrick held up a hand quickly quieting both men. \"I think that this calls for action from me.\" Looking at Shelby then both men Derrick continued. \"I therefore have decided to make Empress Shelby the head of the science division. That way no one can brook an argument.\" \n\nBoth Kimison and Rayburn's mouths dropped open. They had to both admit that the Empress was far more brilliant than either of them. Really they had to admit if it hadn't been for her they might have had to take longer to have her ready. Bowing both men stated, \"It will be as you command sir. We will look over all we have made for the Emperor to make improvements.\" A look from Derrick toward Shelby had both men nodding. \"We will also begin work on your set as well Empress.\" They said surprising her. \n\nOn board Tempro, Shiloh, Mita, plus all their children were starting to get a little antsy. This of course wasn't helped by the fact that Norman had been called away while the rest of them still had to wait. Grant was accustomed to being alone taking the long shifts as pilot while Shiloh was with his family. \n\nJimison was also accustomed to being alone as he had been hiding for so long. Although Tempro did try to explain that Shelly had to recover more before they could venture to the Empire planet. It still wasn't helping the feeling of general tension that was on board. \n\nThough all the men were able to make themselves busy, this only compounded the boredom for Mita and her children. Finally after a few days Mita called Tempro. \"Tempro, I need to talk to the Emperor. My children and I can't take this much more. They are growing children they need more activity. Please! We can't take much more of this!\" ",
        "Tempro sighed Shelly was almost ready to be released though at the moment he had no orders as what to do. He really didn't want to disturb the Emperor at this moment as he knew that the man had a great deal he was dealing with. Nodding to Mita, Tempro told her to stand in a certain spot. \n\nDerrick and Shelby had been discussing a great many things he'd found out with his trip into the past. They had been at it for a few hours when Tempro appeared. \n\n\"I am sorry to disturb you sire.\" Tempro started. \n\n\"You are fine. Tempro is something wrong?\" Derrick asked seeing the almost look of distress on the holo-gram's face. \n\n\"Yes sire I am afraid there is. It appears that Mrs. Shiloh and her children need to get off the ship. It appears that they are in need of further activity than I can provide. I also have a request from her or rather a request for you sire.\" Tempro explained. \n\nDerrick was about to ask Tempro to put her on when Mita's holo-gram stepped forward. Bowing low Derrick nodded to Mita. \"I apologize for interrupting you sire.\" The woman said causing Derrick to groan a little. \n\nShelby held back a giggle as Derrick eyed her for a minute then smiled. \"Please go on Mita.\" \n\n\"Sire, I realize that we still have a day before Shelly can leave. Sire I and the boys are ready to leave is there no way that all of us can leave?\" Mita asked. \n\nMary appeared before Derrick could answer. \"I have kept a constant vigil on her sire. All the codes have been accepted. I therefore have no objection to her leaving.\" \n\nDerrick's mouth dropped open, \"since when? I had less...\" Derrick started. \n\n\"Sire,\" Mary said giving him a no you didn't look. \"As I have told you from the beginning. Your life and health come first and foremost. You are the most important person to the empire. It is my duty to keep you alive and whole. If you are constantly in peril then I'm not performing my duty. \n\nDerrick groaned as Shelby started to giggle. \"I think that also involves an heir or two.\" Shelby said with a large smile. \n\nShaking his head Derrick looked at Mita. \"Alright Tempro, take her and the children to the Empire planet. Have rooms ready for them. Inform all there that they are now part of the palace. Then return here, there are a few things I have to do for the rest of my old unit.\" \n\nTempro nodded then Derrick watched as the huge ship winked out."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-56"
}