{
    "title": "Pursued by a Dominant T-girl",
    "pages": [
        "\"Well Kevin, what do you think?\"\n\nKevin looked over Jenny in person for the first time in over two months. For the first time since the surgeries and for the first time since she had fully transitioned from Jason to Jenny. They had met on the first day of university, become best friends and been inseparable ever since. This was the longest period they had been apart in two years and although they had talked almost everyday on the phone it just wasn't the same.\n\nJason had been deceptively strong. He was lithe and tall at just shy of 6' 2\" but muscular with the build of a wrestler rather than a weightlifter. He enjoyed martial arts and was just below a black belt in taekwondo. Jenny obviously had that same lithe muscular frame and it suited her. She looked very convincing, like a female athlete.\n\nJason's blond hair had always been shoulder length which was as long as he felt he could get away with while hiding his true self. As Jenny she had grown it out to about midway down her back using extensions to do some of the work while her natural growth played catchup and her bright blue eyes gave her a striking look.\n\nHe could tell she'd had quite a bit of work done on her face with subtle adjustments to her cheek bones, nose and chin along with the shaving of her Adam's apple.\n\nKevin's eyes stopped on her new breasts. He had no idea on cup sizes but they looked a nice size. A little over a handful he guessed with a nice tear drop shape and the outline of two small hard nipples visible under her top.\n\n\"Erm well you definitely have tit's now. They look real.\"\n\n\"So you only noticed the boobs then,\" said Jenny rolling her eyes, \"not all the rest of the work I've had done?\"\n\n\"Well err, yeah I can see that too. You look good, very umm, feminine. You look good girl.\" He winked.\n\nShe smiled at the poor quality complement and he returned his eyes to her new cleavage.\n\n\"They're c-cups. I sold my car to pay for some basic implants but my mum gave me a lot more cash so I could get the latest real feel versions, these are the latest cohesive silicone gel versions, they're the best on the market. Caused a bit of trouble at home actually. My dad still wants me to be Jason and is still in denial. He still hopes this is just a phase.\"\n\nShe ended on a sad note and Kevin moved in to give her the hug she needed. He'd seen her dressed as Jenny for the last six months so he had got over his inhibitions. Well mostly. He still felt greatly weirded out in moments like this and was massively self aware of doing this in public where people might see. She felt warm and soft in his arms as he breathed in her subtle floral perfume and holding her felt both so right and so wrong at the same time. He released Jenny as soon as he thought he could and stepped back but she seemed a little more reluctant to let him go. Her slight reluctance to end the hug gave him an odd mixed feeling. A mixture of nervousness with an almost overwhelming tingle of excitement. It wasn't a feeling he wanted to dwell on.\n\n\"So you were talking about taking hormones before you left, did that happen?\"\n\n\"No, I looked through all the options but unfortunately all HRT treatment affects your penis and I still plan to use my umm...\"\n\n\"Cock?\" He said helpfully.\n\n\"Yes thank you Kevin, my cock. It was so easy to say that while I was a man but it's going to take a bit of time getting used to saying that now I'm a lady,\" she said smiling and doing a cute little curtsy.\n\n\"So you want to use your cock on err... Women right?\"\n\n\"Well I'm a girl now Kevin and I'm not gay.\" She could see his mouth open and his mind whirling away to figure out what that meant. She sighed and decided to spell it out for him. \"I like boys Kev, I want to use my penis on boys.\"\n\n\"Ah.\" They both went red and the conversation dropped again. Jenny had made hints before that suggested she might want a nice man in her life but this was the first time she had clearly stated her preferences. He'd also long suspected that when Jenny found her man she would want to be the dominant partner for at least some of the time, maybe most of the time. He hated the way the thought of that often made him hard.\n\n\"Anyway,\" said Jenny trying to move the conversation on. \"I've gotta go and see Emily and Amanda. Show them the new me. Are you coming?\"\n\n\"Yeah sure but I'll catch you up. I've got a couple of things to do first. Final year of Uni. Gotta make it count. You go and have a little girly chat about makeup and boys and all the crap I don't want to hear about. Get it out of your system before I get there, you probably need it.\"\n\n\"Yeah right cause that's all we talk about you moron,\" she laughed. \"But don't be too long,\" she couldn't resist going back in for another big squeezy hug. \"God I've missed you so much these last few months. Catch ya later,\" she laughed and practically skipped off.\n\nShe looks amazing Kevin thought as he watched her bounce away with his eyes glued on her swaying ass. He quickly looked up as she turned to wave one last time before rounding the corner. Damn I hope she didn't catch me staring, I'm sure she was smirking at me, fuck I think she caught me.\n\nOnce more he tried to fight it. He tried to picture Jenny as Jason, to control and suppress the feeling he had for her. It felt wrong to him to feel this way about someone who used to be a man. Someone who, in one very real and penis shaped way, was still decidedly masculine.\n\nRemember Kevin, he said to himself, you're not gay, you don't want people thinking you're gay, the only penis you like is your own. Jenny, no matter how attractive she is, is a man, she is not an option.\n\nIt wasn't working anymore. He tried to think about someone else and thought about Emily. Now there was a woman.\n\nIf you were uncharitable you would call her chubby but she was really just curvy and voluptuous. Plenty of filling in all the right places with just a tad in the wrong places as well. 5' 6\" wavy dark hair just past her shoulders and a nice pair of EE's.\n\nHer personality was the main thing that got him going though. She was bubbly and warm but there was a steel and fire about her and you wouldn't want to get on her bad side. She was the self appointed matriarch of their group of friends, strong, powerful, confident and fun. Just what he looked for in a woman. Shame she was a lesbian and going out with Amanda as she was just so his type.\n\nYou know who else is like that? A small annoying, nagging part of his brain added, Jenny, Jenny's our type too.\n\n*****************************************************\n\nOver the next couple of months Kevin and Jenny got closer than ever. They flirted when no one was watching, sat as close as possible to each other and hung out as often as they could. Most telling of all Jenny had stopped flirting with other men and effectively withdrawn from dating apps. Kevin likewise no longer seemed to have eyes for any other women but still refused to admit they were becoming more than friends.\n\nJenny was starting to get a bit frustrated though. When anyone else was close he would pull back a little and clam up. Jenny had been holding a secret crush on him for the last couple of years and since she transitioned wanted to make a move but it was all mixed signals. She wanted so much more but didn't want to ruin what they had.\n\n*****************************************************\n\nKevin's concentration on his studies was broken by a knock on the door and opened it to see Jenny causing his heart to rise and that same familiar warmth to spread through him as she smiled brightly.\n\nHe breathed in deeply and welcomed her in and they sat down next to each other on the bed. Jenny began excitedly telling him about her recent invite to her aunt's wedding in a long and rambling way. Kevin listened intently, watching her soft red lips, sparkling eyes and the broad smile. She was delighted to be going to an event like this as Jenny for the first time and her joy was contagious. He stared at her for a while longer admiring her beauty and enjoying her enthusiasm before zoning out a little and just nodding along as his mind started to wonder.\n\nKevin's eyes flicked down to her lap and the outline of her cock before looking away admonishing himself. Despite all his efforts to avoid looking he was doing it more and more these days and it was always obvious that she was packing.\n\nJenny was not shy about her anatomy and didn't really see the point of hiding herself around the college. Everyone knew who she was and who she had been so why make herself any more uncomfortable than she needed too. She just tucked it into her knickers and off she went with the outline usually visible for anybody who cared to look. Her attitude was 'to hell with anyone who had a problem with it' she was done with hiding.\n\nIt was actually one of the many things that he found really attractive about her. Not her member but her confidence, her mental strength and freedom, her ability to just be herself. Damn it he thought for the hundredth time, why does this amazing girl have to have a penis.\n\nThe first time he'd seen her as Jenny he'd only really seen Jason in a dress so it wasn't really an issue but the more time they spent together the harder it was to hang onto that view. Over time he had begun fantasising about her more and more. Initially he'd imagined her lips wrapped around him or what it would be like to bend her over, raise her skirt, spread her long smooth legs and bury himself inside her perk round bottom. Easing his way through her tight hot virgin ring before plunging into her depths as she moaned his name and begged him to cum deep within her.\n\nAfter she had told him she wanted to 'use her penis on a man' he had started to wonder what that would actually feel like. His thoughts shifted to include playing with her cock as well, to giving her pleasure. He'd already had his suspicions that she would want to be the dominant one at least in part but now he seemed to have no choice but to factor that into his fantasies. It was increasingly difficult to picture himself as the sole receiver and far easier to imagine him spending time down on his knees as well. He'd looked enough to know she was bigger than him and wasn't there some unwritten rule that the biggest cock did the fucking?\n\nHe started to wonder what her cock would feel like in his hands, its weight, how it would pulse in his fingers. He imagined sinking to his knees as she ran her hand through his hair, drawing him to her and pushing his face into her crotch. He wondered what her balls would smell like through her panties, they were black and lacy in his mind, slightly damp and musky, drenched in her scent, a scent strong enough to taste.\n\nHe glanced back at her face to see she was still talking. \"Mmmmhmmm,\" he mumbled to her in agreement without any idea what he was agreeing to. It came out more like a soft moan and he quickly refocused on her face but she was too engrossed in her story to notice so he returned to his thoughts.\n\nWhat would it feel like if she drew it out through the side of her panties and tapped it against his face. Told him to open wide and stick out his tongue before slapping her dick on it and rubbing it over his taste buds. The salty flavour of her pre-cum leaking from the slit onto the tip of his inquisitive, exploring tongue. Slowly rubbing it back and forth before lacing her fingers behind his head and pulling him down onto her. Her hard head sliding between his lips before she drives herself deeper into him.\n\nShe'd slowly build up her pace, her soft moans becoming more and more animated as he brought her to the brink. Moaning his name as she passed the point of no return and started filling his throat. Kevin I'm cumming she'd moan. Take my load. Yes, take it. Oooo yeah, Kevin, Kevin. Swallow my load Kevin. Kevin. Oh Kevin.\n\n\"Kevin! Oh Kevin! Earth to Kevin!\"\n\n\"Yeessss Jenny. Yessss.\" He moaned... Oh shit!\n\n\"What?\" Said a bemused Jenny. Are you even listening to me?\" She looked at Kevin whose face was flushed and it was clear he hadn't been paying attention. He looked flustered, guilty and... aroused? She glanced at his crotch and saw that he was clearly erect and straining in his pants. He quickly covered himself and she looked back up at his face. Wha... What were you thinking about?\" She stammered.\n\n\"N-Nothing Jenny,\" he replied, somehow managing to look even more guilty.\n\n\"Really,\" she grinned, biting her lower lip and moving closer to him. \"That's a shame. I was rather hoping your mind was fully on me. On my big... tale... about my aunt's wedding\".\n\n\"Yes I was thinking about your big err... news! The wedding! You're aunt's wedding I mean. Not ours!\" Damn it, get a grip you idiot.\n\nA huge grin split her face and she roared with laughter. \"You're so funny Kevin, You're such a loveable little dork aren't you.\" After a little bit she managed to contain her laughter and get herself back under control. \"OK I won't push, but you can't stop a girl from speculating about who or what was on your mind.\" She said with a knowing smile.\n\nShe couldn't know for absolute certain but he was rock hard while staring at her and kind of moaned her name when she snapped him out of his daydream. She had been fighting the urge to make a move on him for ages for fear of damaging their friendship but she was certain he was just fantasising about her. The only real question was whether he was thinking about her arse or her cock. Oh please, please, please could it be her cock that he was thinking about.\n\nEither way she'd had the hots for him for such a long time and if there was any chance of being with him she had to try reeling him in. But he did look terrified and she wasn't your average girl so she probably had to give him a little bit more slack. If she tried to land him too quickly the line might snap and he could swim away. There may be plenty more fish in the sea but he was the only little fishy she really wanted on the end of her long stiff pole.\n\nTime to give him a little slack.\n\n\"Well I don't know who you were actually thinking about Kev but it better not have been Amanda, otherwise Emily will kick your little ass. Whoever it is would be a very lucky girl to have you though. Or guy,\" she said winking \"I certainly won't judge.\"\n\nHe gave her a hard stare until she started laughing and apologised.\n\nShe went back to describing the wedding and thanked him again for agreeing to go as her plus one.\n\n\"What? When did I agree to that?\"\n\n\"Just now! Literally just a couple of minutes ago. You were listening weren't you?\n\n\"Yeah, yeah of course,\" he replied unconvincingly. \"Anything for you Jenny.\" He smiled. Uh oh. \"Cause you know, anything for a friend,\" he swiftly added to clarify.\n\nShe whooped and clapped her hands, beaming a radiant smile and hugged him before diving back into the details of the wedding. She was getting more and more animated and excited despite it being almost a year away. She finally stopped talking and looked at him with sparking, smiling eyes.\n\n\"Wow you're just so damn cute sometimes,\" Kevin said and without thinking he leaned in towards her with a slightly open mouth.\n\nWith a fluttering heart she moved forward to meet him and they shared a brief soft kiss on the lips with just a hint of tongues. Kevin pulled back quite quickly afterwards, shocked at himself whereas Jenny just kept her eyes closed and held position for a moment longer before slowly withdrawing, smiling contentedly.\n\n\"Mmm that was nice Kev, you have very soft kissable lips you know.\" She smiled.\n\n\"Umm sorry Jenny I... I just got a bit carried away there.\"\n\n\"No need to apologise to me sweetie, you can get carried away with me whenever you want,\" she winked back.\n\n\"Err yeah. Umm thanks. Err look we should go and meet the others and get dinner yeah. You wanna get something to eat right?\"\n\n\"Ummm hmmm,\" she softly purred back.\n\n\"Great, let's go see who's around then.\" He said, sounding flustered and got up to leave.\n\n\"After you Kev,\" Jenny smiled and got up to follow. After you my little fishy.\n\n*****************************************************\n\nThe next day Jenny met up with the girls and spent all day shopping and talking. It was one of the things she enjoyed the most since coming out. Having a proper full on girls day out. Trying on outfits, gossiping about boys, stopping for coffees, looking at makeup and even popping into Anna Summers to have a giggle at the sex toys. Emily and Amanda bought quite a lot but Jenny had to be far more selective. Even the few items she did buy pushed her over budget but to hell with it she thought, eating is a luxury I can do without.\n\nTowards the end of the day they entered one last shop and Emily rushed over to Jenny with a sexy looking party dress ideal for clubbing.\n\n\"Oh wow Jenny you have to get this, just look at it, it's so elegant and sexy, it's just so you. Try it on, try it on.\"\n\nJenny looked at the price tag and shook her head. \"Nah it's gorgeous but I can't afford this Emily, we'll have to just put it back.\"\n\n\"Oh just try it on, what harm can it do?\"\n\nHer resolve cracked. Yeah what harm could it do, she thought and even though she was only going to torture herself with what she couldn't really have she took it to the changing rooms. It was a stunning red halter top dress coming to mid thigh that hugged her curves to perfection, simple styled and with just the right combination of sophistication and sluttyness. It was made for her.\n\n\"Seriously Jen you have to get that dress and we'll all go out clubbing tonight,\" said an overly excited Emily. \"If you get that, you might even get yourself a first kiss from Kevin,\" she smirked. It didn't take a genius to work out she had the hots for him and Emily knew her friends' weak spots intimately.\n\n\"I already have,\" Jenny smirked back.\n\n\"What! You never said you'd kissed.\"\n\n\"When we last talked I hadn't,\" Jenny retorted with a raised eyebrow. \"Sorry I shouldn't have said anything. I don't think he would want people to know.\"\n\n\"Oh wow. Oh come on, you have to tell us now.\" Emily and Amanda demanded.\n\n\"Wellll, OK, but this is just between us,\" Jenny said with fake reluctance before excitedly reciting the previous days events. \"Well we were sitting on his bed talking...\"\n\n\"Oh yeah, so you were on the bed and 'just' talking hmm,\" insinuated Emily.\n\n\"Yesss. Just talking... and as I finished what I was saying and looked at him and he just said something like 'you're just so beautiful' and leaned in to kiss me on the lips. Totally initiated by him,\" she smiled.\n\n\"Aw that's so sweet.\" said Amanda. \"Did you slip him the tongue? Oooo did you manage to slip him the sausage too?\" She winked while making the universal hand gesture for sex.\n\n\"Nooo,\" she glared back, \"just a sweet soft little kiss on the lips. Then he went the cutest shade of red you've ever seen and we left to meet you guys and grab something to eat.\"\n\n\"So that's it? Just one kiss?\" said Emily.\n\n\"Nooo.\" retorted Jenny feeling a bit defensive of her first kiss with Kevin. \"Before that he was staring at me with a longing look and when I caught him he looked really guilty and was rock hard. I'm sure he was fantasising about me.\"\n\n\"Well that settles it, we have to get this dress and we'll go clubbing,\" Emily pressed. \"We'll get Kevin to come along, we'll all have a few drinks and you can seduce him on the dance floor. Come on, with that dress it'll be so easy. You have to get the dress Jenny.\" She could see her friend beginning to waver. \"Think of it as an investment.\"\n\n\"I'm down to eating noodles for the next month, Emily, so please do tell me exactly how this dress is an investment?\"\n\n\"Well you get the dress, the dress gets you Kevin, you move in with Kevin, and you save a fortune in rent.\" She was almost there. \"And you'll get to have lots of hot nasty sex.\" Ok time for the coup de gr\u00e2ce, \"And I'm buying it for you.\"",
        "\"What? No. You can't do that.\"\n\n\"Oh come on you know my dad's a CEO. I hate to say it cause it sounds like bragging but you know I can afford it. It'll be my 'your first kiss with a boy' present to you and that present includes paying for you at the club. Come on Jenny this is fate. Get the dress. Get Kevin. Get some action.\"\n\n*****************************************************\n\nEmily called Kevin and convinced him to come out that evening. It would actually have been a lot easier to convince him if Jenny was not going as despite how much he wanted to spend time with her a large part of him was desperate to run away while he still could. This sounded far too much like a double date to him.\n\nJust friends, he reminded himself on his way in to meet them but that changed as soon as he arrived and the slightly inebriated Jenny rushed over to give him a kiss on the lips and a huge hug. Emily and Amanda looked on smiling as Jenny took him by the hand and dragged him over to their table.\n\n\"Come on Kevin we've got shotsss,\" she whooped, \"and you need to catch up. Although... maybe you shouldn't drink too much. You don't know what I might do to you if you're not capable of fending me off later,\" she giggled in a seductive but slightly slurred way.\n\nKevin rolled his eyes playfully as the all too familiar tingle of excitement and trepidation ran through his spine.\n\nThe shots were followed up by some jugs of dubious and vividly coloured cocktails of unknown potency. He wasn't allowed beer. The logic being this was a girls night out so joining them afforded him the title of 'honorary girl' for the evening and an obligation to drink the nasty pink coloured girly cocktails. He would have protested but the logic was infallible and it made them happy. After a while of drinking, chatting and laughing Jenny took his hand again and dragged him to the dance floor.\n\n\"Come on, I love this song,\" she shouted excitedly.\n\nGetting to his feet he realised just how strong those drinks really were but it was nothing he felt he couldn't handle so he decided to just relax and enjoy himself as, with a slight wobble, they went to bust some moves.\n\nBefore long they were dancing away and having fun and she moved closer and closer to him until they were gyrating against each other. Jenny sensually and erotically moved her body, swaying to the beat, twisting herself and dropping towards the floor before rising again. An uninhibited free spirit.\n\nShe turned away from him and ground her butt into his crotch. Moving her right hand behind her to grasp him just behind his ear she pulled him into her neck which he nuzzled and kissed while breathing in her delicate perfume. He put his hands on her hips and slowly rubbed up and down her sides before she grabbed one of his wandering hands and brazenly raised it higher to cup and squeeze her left breast.\n\nEmboldened by her actions, her devilish smile and the alcohol in his veins he moved to explore her body. His right hand drifted to her bottom as his left continued to caress her supple breast. He breathed her in deeply and a shiver or arousal shot through his body as he realised she was not wearing a bra and his fingers played with her rapidly hardening nipple. His right hand drifted up to join the party at her chest and he tweaked her sensitive nubs as she moaned and turned her head to dart her tongue past his lips and into his eager mouth.\n\nShe smiled into the kiss as they gently made out and he lowered his right hand to her flat stomach, gliding over her midriff until he hit something firm rising up past her belly button. Her cock had slipped out from the confines of her panties as her excitement grew and was now standing proudly and securely within her clothing. Without thinking he gripped her hard cock and stroked it through the thin fabric of her dress causing them both to moan even louder into each other's mouths. He marvelled at it's length, it's girth and it's feel as she increased the intensity of her kiss\n\nHe continued stoking her openly until he suddenly came to his senses and realised what he was doing. He was blatantly playing with Jenny's huge cock in the middle of the dance floor. Openly fondling her huge throbbing member and moaning loudly in front of a room full of people. His hand froze but remained wrapped around her. Wrapped around her lovely, big, thick, meaty, cock. Mmmm, he thought as he started gliding his hand up and down it again, what would it feel like to slip this magnificent thing between my lips, to taste it, to suck on it, or to feel it burying itself deep into my tight virgin ass and emptying itself into me. \"Oh, yessss\" he moaned again. What... No...\n\nHe quickly withdrew, taking her hand from the back of his head and spinning her around to face him. He pulled her tight to his body to hide her cock and his mouth opened wide in shock. What the hell had he been thinking and doing!\n\nJenny mistook his actions for passion and his shocked open mouth as an open invitation and dove straight back in for a kiss. She pulled away momentarily to flash him a quick smile loaded with desire and to mouth the words 'I want you so badly' before returning to hungrily claim him. She was already taller than him but with her heels on she had a good 4-5 inches on Kevin and as he wrapped his arms around her she lowered her hands to his hips. She rested them there for a moment before gliding down further to cup and squeeze his tight little butt. She imagined how it would feel to have his legs wrapped around her as he rode her and resisted the urge to lift him up and dry hump him. Fuck she was horny, she needed to calm herself down if she didn't want to have an unfortunate wet patch.\n\nSnapping out of it Jenny mentally pulled herself back a little and raised one of her hands to his shoulder, cuddling him and gently swaying them both as Kevin allowed her to lead the dance. Looking over she saw Emily and Amanda dancing in the same pose. Amanda's head resting on Emily's shoulder in the same way that Kevin's head now rested on hers. Emily's hands on Amanda's back and bottom. The two girls leading their partners around the dance floor made eye contact and winked at each other while grinning broadly.\n\nThey danced together more slowly now, with less passion but with more affection. Both aware of how carried away they had just got and not wanting to be thrown out of the place. It was a night club after all, not a sex club.\n\nEventually they returned to the table and the conversations became more flirty as Kevin continued to drink. Jenny noticed too late where this was heading and tried to slow him down but Kevin was already past his limits. Damn it, thought Jenny as Kevin lowered his head to rest it on the table, there goes my chance of getting in his pants tonight. She shook her head, I thought I was getting so damn close too. She tutted to herself and smiled softly while she gently stroked his hair. Her smile broadened. Kevin might be out of it but that didn't mean her fun had to end.\n\n*****************************************************\n\nKevin woke up and grasped his head. \"Aww. Why do I hurt all over.\" His neck and throat were killing him. He was at the edge of the bed, his neck hanging over it and he was naked, his chest was sticky and his bed was damp with sweat. What the hell happened?\n\nHe quickly sat up and started thinking about last night. Big mistake. Moving quickly and thinking really hurt. \"Awww,\" he somewhat unoriginally said again. \"Damn it.\"\n\nHe tried to collect the various random fragments of memory from the prior night and fuse them into a cohesive timeline.\n\nHe remembered getting to the club and Jenny rushing over, excited to see him. He smiled at the memory and a bolt of pain flashed through him. \"Ouch.\" Note to self. Don't smile.\n\nHe remembered dancing with Jenny all night, how amazing she looked and felt, how incredibly horny she made him. He felt something begin to rise and looked down. Oh that's good, he thought, at least something still works.\n\nIt was after that when things really started getting hazy. Why the hell didn't he stop drinking. OK, he thought, I remember laying my head down on the table and Jenny stroking me. Yeah... That felt quite nice and then... Then she said something about me no longer being conscious enough to take an active role in the evening but that she was still going to have some fun. Then what? She kissed me and whispered something about taking me home to bed.\n\nWhat next... What next... Yes that's right I remember her half dragging half carrying me home. She was talking about doing something when we got back but I can't remember what she said she would do. Was it something she was going to do to me? Or for me? Argh.\n\nHe tried to concentrate and another sharp bolt of pain flashed through his head. Crap why can't I remember, he thought. Yes I remember her getting me into this room and... Shit she undressed me. Kissed me. Smiled. Then she said something... what... yes. She said you just lie there and relax sweetie, mommy is gonna have a little fun.\n\nKevin's eyes flashed painfully open and a wave of dread flowed through him as he quickly sobered up and his hand sped to his butt. He winced in pain. It felt sore. He tried a different finger. No pain. OK. So one of my fingers is sore, I must have slept on it or something but I think my bottom is OK.\n\nHe probed a couple more times, assessing his hole carefully. I think this all feels normal he thought, well, as normal as it ever feels to be poking your own butt for signs of violation. His throat and neck felt red raw though, they had definitely taken some heavy punishment. She didn't. Did she? She wouldn't have.\n\nHe felt a rising tide of nausea spreading up from deep in his stomach and he hastily pulled his pants on before running to the communal bathroom to be sick. He rested his head against the wall. He couldn't believe she would have done that to him. Shit, he thought, did she face fuck me last night. Did I agree to it? No. Not possible, she'd never take advantage of me like that. There must be another explanation. Emily! He needed to talk to Emily. Despite his aching body and mind he ran to the showers to wash and brushed his teeth before heading off towards Emily's room.\n\n*****************************************************\n\nHe'd slept late and it was starting to get busy despite it being a Sunday but he just kept his head down and walked on, lost in his thoughts.\n\n\"Hey Kevin,\" Jenny shouted from out of nowhere, running over to see him and cradling his head in her hands with a concerned look. \"Are you feeling OK? Sore head today baby?\" She said, planting a soft kiss on his lips.\n\n\"D-don't do that. People can see us. I... I don't know what happened last night, what you did to me. And where the hell did you come from? Are you stalking me or something?\" Kevin pushed away and ran back towards his room.\n\n\"What? What! No. Kevin. Kevin, come back. I didn't do anything to you last night. And just now I was waiting for a bus and... saw... you...\" She trailed off, he'd already gone. \"Fuck!\" Jenny looked around, seeing all eyes on her. \"Well what the fuck are you lot all staring at!\" She shouted. The crowd all suddenly found better things to be doing and started to mill away. \"Shit!\" She said again, shook her head and turned away.\n\nMaybe it was time to give up on Kevin. Last night she thought they had really connected. She hadn't planned on getting him drunk and taking advantage of him but that's clearly the way he felt about it. Fuck it, she thought, I'll give him a little more time to get over his doubts and insecurities and if he can't get over himself I'll move on but he'll have to make the next move. She sadly trooped back towards the bus stop.\n\nKevin was around the corner sitting on the ground with his back to the wall breathing heavily. He felt bad. Really, really bad. And guilty. But should he feel that way? Jenny was so tender, so kind, she always had his back. As he continued to regain his composure he was almost certain he had misread the situation. He must have. He needed to see Emily. He needed to know for sure...\n\nKnock, Knock, Knock... Knock, Knock, Knock... Bang, Bang Bang... BANG, BANG. BANG... \"EMILY...\"\n\n\"Alright, alright I'm coming hold your fucking horses.\" A bedraggled and tired Emily opened the door. \"For fucks sake Kevin, what do you want?\"\n\n\"I... I need to know what happened last night.\"\n\n\"Really? Right now? We got wasted, we got horny, we got home, we went to bed. We all had a fun time and then some arsehole started banging on my door waking me up. Any guesses who that arsehole is?\" She asked with a thin smile.\n\n\"Please Emily, I just need to know what happened after we left the club.\"\n\n\"Why? What do you think happened? We all left together and Jenny practically carried you home. You stopped to throw up in just about every other bin we passed but I guess you already know that as your throat sounds a little raw. We took you to your room and I'd have just dumped your ass there but Jenny had to go and give it the whole 'caring nurse' bullshit. She stripped you down to your undies, washed all the barf and cocktail crap off your chest and tucked you in with a good night kiss.\"\n\n\"Oh crap. And then what? She just left with you didn't she? I vaguely recall her saying something like... Now mummy is going to have a little fun.\"\n\n\"Ha. Yeah such a dorky thing to say. We all came back here and carried on partying without you. You're such a lightweight. You should hang with Jenny more. She's so much fun and can go all night. Maybe she can train you up and build up your stamina.\"\n\n\"Oh right. That explains everything I suppose. But... but in that case why was I naked when I woke up?\"\n\n\"I dunno. Maybe you stripped off in your sleep? Why? Do you think she played with your little pee-pee,\" she giggled.\n\n\"Oh fuck what have I done. I need to go and find Jenny and say sorry.\"\n\n\"I wouldn't worry about it. I think she enjoyed playing nursemaid. Anyway she said she needed to get out of here for a bit and see her parents or something.\"\n\n\"That must be because of me. Fuck. She's leaving college because of me. I'll go to her house. I've been there before for a party when her folks were on holiday. I've got it in an email! Thanks Em but I've gotta go.\" Kevin turned and ran off down the corridor.\n\n\"What? It's nothing to do with you. The trip was already planned before... Oh whatever,\" she said to the empty space where Kevin used to be, shut the door and stumbled back to bed.\n\n*****************************************************\n\nKevin stood outside Jenny's house unsure if he would be welcome and unsure why he had brought flowers. He wanted the flowers to say 'I'm sorry' but some women might misinterpret flowers as meaning 'I want you to have my babies'. Or in this case 'I want to try to have your babies' which, while not technically possible, probably wouldn't stop Jenny from giving it a damn good go. He sure as hell wasn't going to get roses though and went for a mixed bouquet of random colours big enough to be thoughtful but not so large as to seem excessive.\n\nHe was worried about what he would say to her parents as well.\n\nKevin took one last deep breath and knocked on the door before he lost his nerve, still holding the bouquet in his hand. Right up until it opened he was still debating whether to ditch the flowers in a bush and just greet her with a smile but the door opened and the decision was made for him.\n\nHe sighed with relief when the door was opened by a lady with a short blond bob, blue eyes and a warm smile that gave away the family resemblance. He was lucky it was Jenny's mum. He didn't want to imagine what her dad would have said to a guy turning up to see his now daughter with a bunch of flowers. If he was lucky he might have the door shut in his face. If he was unlucky he might be made to eat the flowers before having the door shut in his face.\n\n\"Oh hello, umm... Can I help you?\" She said seeing an attractive young man with flowers on her doorstep. Probably going on a first date and knocking on the wrong door, she thought.\n\n\"Umm yes... I'm here to see Jenny. It's err... Kevin,\" he replied nervously.\n\n\"Oh... OH! Right. Wow. Sorry. Kevin. Yes. Wow. Jenny talks about you all the time but I didn't know you were going out. Umm, wow sorry. I'm just... I'm really pleased to meet you at last. She never said anything about having a boyfriend but please come in and I'll call her down. I'm Margaret by the way but people just call me Maggie. But you probably know that, don't you.\" She was giddy and had started rambling.\n\nHer initial surprise swiftly changed into excitement which she fought to keep from showing. Kevin was the first person Maggie had ever heard her child speaking about with genuine interest and affection. It seemed she might have finally found someone to make her happy and she only wanted the best for her daughter.\n\n\"Jenny! Oh Jenny! Come down, you have a nice young man here to see you and he's brought you flowers,\" Maggie said, turning to give him a sly wink.\n\nOh crap, thought Kevin, I knew I should have dumped the sodding flowers. I am so in the boyfriend zone right now. He looked up to see Jenny bounding down the stairs. Her look of shock at seeing Kevin turning to one of delight as she realised he had come to see her.\n\n\"Wow Kevin, why are you here? And flowers! Oh my god you shouldn't have. Thank you, thank you.\" She took the flowers from his unresisting hands and gave him a huge hug before kissing him on the cheek as his face slowly reddened. Jenny pulled back to look at him. \"Aww look you're getting embarrassed, you are just so cute,\" she giggled and moved in to kiss him on the lips.\n\nKevin felt her soft lips on his own and her gentle tongue lightly probing against them, seeking entry. Jenny's eyes lit up as Kevin's resolve melted and his mouth slowly opened to fully accept her kiss. He closed his eyes and wrapped his arms around her. She moaned into him, increasing the passion of the kiss, the hand with the flowers wrapping round his back as her free hand slipped down to cup and lovingly squeeze his beautiful tight little butt. Her mum went from smiling happily at the young couple to embarrassedly looking away.\n\nJenny pulled back and gave him a little peck on the lips before saying, \"come on. I'll show you up to my room,\" with a huge grin on her face.\n\n\"No. Fucking. Way.\" A deep gruff voice loudly called out from somewhere behind her and they heard a fridge open and a beer bottle being extracted. \"There is no way any boys are going up to Jason's room until he stops wearing a dress.\"\n\n\"That's my husband Jake,\" said an exasperated Maggie, \"he's having a hard time accepting things.\" She looked over her shoulder as he retreated back to the front room. \"Don't you think it's a bit early to start drinking Jake!\"\n\n\"Ten minutes ago I'd have said yes, but now... with this,\" he waved in the direction of Kevin and Jenny, \"I need a fucking beer.\" Jake shook his head and moved away.\n\nJenny rolled her eyes. It was a gesture designed to show her indifference but there was sadness clearly evident on her face. Kevin instantly moved in to hold and comfort her while not allowing the internal conflict that still raged within him to show.\n\nHe had still been debating whether to tell her this was all a misunderstanding and that he didn't want to be her boyfriend. That they were just good friends. Instead he continued to hold her close, enjoying the warmth of her body and the smell of her perfume. Oh shit, he thought as his eyes widened, I've totally fallen for her and I don't think I can ever give her up.\n\n\"Come on, let's introduce your new boyfriend to all the family.\" Maggie said excitedly, \"They'll be so thrilled to meet him.\"\n\n\"Err can I just have a moment with Jenny first and then we'll be in.\"",
        "\"Of course dear, I'll leave you two love birds alone for a moment but like Jake said no going up to Jenny's room.\" She turned to her daughter. \"We have guests and they don't want to hear that headboard banging against the wall as you rail your new man.\" She winked at her daughter and walked off giggling and leaving them both red faced.\n\nAs soon as Maggie left Kevin turned to Jenny to apologise. \"Look I'm so sorry about this morning I should never have said those things.\"\n\n\"It's OK. I know what you think I did and I would never do that.\"\n\n\"You... You know what I thought?\" Fuck she knows what I thought. The fact that I could consider her capable of doing something like that to me even for a moment is horrific.\n\n\"Yes I do. You think I got you drunk so I could seduce you on the dance floor but honestly I didn't think you were that drunk. I... I would never have gone that far if I knew you were so out of it and as soon as I realised what state you were in we took you home and made sure you were safe. Please don't hate me.\"\n\n\"Oh right. I... I wasn't that out of it and I knew what I was doing. It was just all the memories flooding back combined with the hangover and everything that made me overreact. You did absolutely nothing wrong and I should never have pushed you away like that. I'm really sorry and It should be me asking you not to hate me.\" Shit he thought, I'm such an arsehole.\n\nThey kissed and made up before going into the living room where he discovered the real reason she had come home. A family party with all her grandparents, aunts and uncles. He was introduced as her boyfriend and he had no choice but to play along with it. Jenny slowly moved closer to Kevin to once again test the waters between them and he made no effort to lean away as she cuddled up to him smiling. It seemed he had finally started to accept her.\n\nDespite the embarrassing questions, innuendos and the inevitable question from an overly familiar aunt about when they were going to get married Kevin had a great time and got along with all her family. By the end of the evening even her dad had started to mellow out towards him.\n\nEventually it was time to leave. Maggie came to give them both a warm goodbye and just as they were heading out Jenny's dad made an appearance to give his daughter a final slightly awkward hug and Kevin a grudging nod of respect. It was late and dark as they walked back through the park to the train station.\n\n\"Hey Kevin, let's stop here for a minute and rest,\" she said sitting down on a park bench. \"I'm amazed that you came today. I know I mentioned we were all getting together to celebrate my aunt getting engaged but I really didn't expect you to turn up.\"\n\nDamn it he thought, why didn't I listen the other day when she was talking. He glanced over and saw her nipples standing hard and erect beneath her sundress in the chilled evening air. Ah yes. That's why I wasn't listening. She's hot as hell and doesn't wear a bra. Let's try to stop my dick doing all the thinking for me from now on.\n\nShe chuckled and shook her head. \"My mum absolutely adores you by the way I think they all do. Even my dad seemed to be OK with you being with me so there's definitely progress there.\" She gazed lovingly into his eyes. \"I just don't know how to thank you.\"\n\nShe leaned forward on the bench and he couldn't resist glancing down her top where he caught sight of her bare full round breast. 'I know how she can thank me', came the small voice from inside his rapidly tenting trousers. \"I know how you can thank me,\" Kevin said as he mindlessly parroted aloud the thoughts of penis. He glared down at his cock accusingly. How could it put words into his mouth like that? He looked back into her eyes to gauge her reaction. Oh crap he thought. I know how she'll interpret that.\n\nJenny's shocked expression rapidly turned into a smile. 'I know how you can thank me', he just said before glancing at his clearly erect cock and then directly back up into her eyes. Well that seemed a pretty damn obvious and unambiguous message. She was seriously impressed. Before it seemed that she was the one trying to push this relationship forward with him being reluctant to commit despite the unmistakable attraction between them. She was close to abandoning her pursuit of him but here he was, turning up at her door with flowers, meeting her family and now asking for a blowjob. How could a girl say no.\n\n\"Right out here in the open? Wow you're a bold one aren't you. I didn't think you had it in you but how can I refuse a request like that from my new boyfriend,\" she said, reaching down to unzip his fly and fishing out his stiff cock with a happy grin.\n\n\"Ahh well, umm what I meant waaaaasssss.\"\n\nJenny had wasted no time in bending over to kiss the top of his throbbing erection. Her lips locking over the head while her tongue lapped it's way around and tickled his slit. Any and all thoughts of stopping this before it got too far were instantly banished. Like it or not he now had a beautiful trans girlfriend and she was going to do all she could to make him happy. Mmmm there are definitely worse problems to have than this he thought.\n\nJenny smiled around his cock as she heard him starting to moan and she dove down to take in the first three inches. Ideally they would be the other way round. All her usual fantasies had him going down on her but it felt so great to have him in her mouth, to be pleasuring her man, her boyfriend. The very thought of it made her dick throb. She wrapped her index finger and thumb around the base of his cock and jerked him into her mouth as she increased her pace.\n\nShe continued bobbing up and down for a couple more minutes as he rested his hands on her head and made slow shallow thrusts into her mouth. Nothing forceful but just enough to give the illusion of control.\n\nShe pulled off and talked to him while continuing to massage his shaft. \"Mmmm you love this don't you Kevin. I can feel how hard you are for your lovely horny new girlfriend and you have such a nice sized dick. What is it? six inches? It's just right and tastes fucking great too.\" She dove down four inches and sucked hard as she slowly pulled all the way up before releasing him with a loud popping sound.\n\nShe smiled up at him while stroking him. \"Mmmm so, so tasty. Are you going to feed me your cum soon Kevin? Cause I'm a thirsty girl Kev. Cum for me. This is my first ever cock Kevin and I'm so glad it's yours. I'm desperate for it. Give it to me baby. I want you to cum in your girl's mouth. Will you do that for me? Will you feed me your cum? Will you give your girl your seed?\"\n\nShe eagerly went back to work on him and tried to push deeper and swallow but came up against her gag reflex and pulled back. She repeated a couple more times and managed to get four and a half inches in with his cock head just about entering her throat but again had to withdraw. She would have to practice before she could take any more so she decided just to work with what she had and really go to town. She mixed the speed, how hard she sucked, the depth, the amount of tongue, the way she used it, anything to keep him guessing what her mouth would do to him next.\n\n\"Oh shit Jenny that feels so good. Ohhh please don't stop. Oh fuck I never knew this would feel so good.\n\nShe worked his cock hard now. Speeding up as he moaned and cradled her head.\n\nOoooh yesss I'm cumming Jenny. If... If... If you don't want it in your mouth you'll have to pull off now. Otherwisssseeeee. Uuuggghhhhhh. Yesssss, Oh fuck, Oh yesss.\"\n\nTo Kevin's delight she stayed in place and swallowed as he shot several huge ropes of cum into her waiting and willing mouth. Jenny rapidly gulped it down and continued to nurse on him until the eruptions finally stopped. She rose back up and made a big show of opening her mouth with a big \"Ahhhhh,\" to let him see she had swallowed every drop before winking and cuddling up to him.\n\n\"Mmmm that cum was yummy. You should try it sometime,\" she added with a wink. \"So...\" She asked excitedly, \"from what you said earlier, was that your first blowjob? You said you didn't know it would feel so good so either I'm your first or your best. I'm your first aren't I. Aren't I? Please tell me I was your first.\"\n\nKevin turned bright red. \"We'll, as a gentleman I never kiss a tell,\" he lied unconvincingly.\n\n\"Ha I knew it,\" she giggled. \"I am your first, I am your first,\" she sang happily with a silly little sitting down dance to accompany it.\n\nKevin laughed and shook his head. Unable to get mad at the cute fun girl sitting next to him. \"Fine, you're my first, OK, are you happy now.\"\n\n\"Very,\" she smiled back and leaned in for a long deep kiss.\n\nEventually they pulled apart and he smiled at her despite the odd sensation of tasting himself on her lips.\n\n\"So you liked it then,\" she said.\n\n\"Wow, yes it was amazing,\" he replied. I don't know how to thank you.\"\n\nHer eyes lit up. \"I know a way you can thank me.\" She dropped her gaze to where she was tenting and returned it to stare directly at him. Identical to what he did earlier.\n\nOh crap, he thought, I just walked straight into that one.\n\nHe'd been dreaming about this for months and if he hadn't just cum he'd have jumped at the chance but now he was sated and scared. It was only two days ago that they shared their first real kiss, it was only yesterday they properly made out and today he was about to turn his fantasies of going down on her into reality. Receiving was one thing but he couldn't come back from this. He would always know he'd sucked a cock and that's has to change you right?\n\nHe tried to think of a way out of this without an outright rejection of her or a refusal to reciprocate but there were no easy avenues of escape.\n\n\"Ummm, well I would Jenny but it's a bit public here and I'd feel a bit exposed.\" He mumbled even as his mouth started watering and he inched towards her lap.\n\n\"No problem sweetie,\" she said, hitching up her dress and looking both ways along the path. \"No one's coming and if you get down on your knees between my legs I'll just drop my dress over your head if anyone does. Come on then. Down you go,\" she said pointing at the ground between her feet.\n\nKevin gulped. The words suggested a request but the tone and the stern look suggested it was more of an order. It certainly felt like an order and he didn't dwell on how much the thought of that excited him. He gingerly slid off the bench and onto his knees in front of her as she beamed down at him biting her lip and trembling in anticipation. There was another reason for her excitement beyond the fact that he would soon be swallowing her dick. She had indeed given him an order and saw a flash of arousal in his eyes and his eager response to it. She now knew he was destined to be hers. He was just so fucking perfect.\n\n\"Mmmm you look good on your knees. It suits you. Well come on then. Don't keep a girl waiting. Pull it out of my panties and get to work,\" she said playfully.\n\nKevin tentatively reached for the thick warm bulge barely contained within her red lacy panties and slowly stoked it through the material. It felt so wrong to be touching it but there was also an unmistakable thrill, a pulse and tingle of electricity that flowed through his body.\n\nHe needed more but this felt dangerous and he knew deep down if he continued he could never be happy with a normal girl again. He looked up to see her face and she looked giddy with need and anticipation. She looked like a normal girl. Just a normal girl with a little extra. No. She wasn't a normal girl. She was an amazing incredible woman who anyone would be lucky to have and she wanted him. All he had to do was reach out and take her.\n\nHis hand gently slipped through the leg of her panties to grasp onto her for the first time and she let out a soft moan above him. Fuck she's hot. Shit! Now I've done it. Think. OK maybe just play with it a little bit. Just a little handjob as a thank you, that wouldn't be so bad would it.\n\nHe slowly stroked her stiffening member and marvelled at how different it felt from his own, firm yet soft with the powerful muscle just beneath the skin, the warmth, the texture. When pleasuring himself all the feeling and sensations came from his cock overwhelming any signals from his hand so this was the first time he had ever truly felt a dick. It felt so powerful. It was magnificent. She was definitely bigger than him. Seven and a half inches he estimated. A drop of pre-cum formed on the top and he used it to slick her mighty pole and he smiled as he heard her lightly moaning. No wait! It was him. He just moaned, not her.\n\nHe looked up to see Jenny smiling down at him, allowing him to go at his own pace and determined not to rush him. She winked at him before broadening her grin and spreading her legs further and he rewarded her with another soft moan.\n\nKevin looked back down. Snap out of it, he thought, I'm in the open here stroking a cock, just increase the tempo here and get this over with before anyone comes. Shit! What If she cums? It'll hit my face. What would that feel like? What would it taste like? I can find out if I just open my mouth a little bit.\n\nWithout realising it Kevin moaned again and slowly parted his lips as he leaned forwards. Jenny smiled down from above, fighting the urge to wrap her hand around the back of his neck and pull him onto her.\n\nI need a little taste, he thought. Just a little kiss. That can't hurt can it. I won't actually suck it or anything. I'm just a little curious and this'll get it out of my system. Yeah just one light little kiss that sounds good. I can handle that.\n\nKevin leaned down and gently kissed her cock head with his mouth slightly open. His lips and tongue connected at the same time. It started as a single slow soft kiss but as he withdrew he didn't even manage to pull his lips completely off before he sank back down onto it and his tongue flattened out to lick over her urethra. Kevin slowly surrendered his mind and made out with her cock. His tongue lapped eagerly around her spongy bulbous head before returning to concentrate on extracting the delicious pre-cum from her slit. He looked up into her eyes and sent his tongue off again for a few more laps.\n\n\"Oh fuck yeah,\" Jenny moaned above him. \"Keep going, that feels so damn good. You're a fucking natural.\"\n\nShe rested her hands on his head as he worked away on her, ready to push him deeper but just the feel of her hands on his head was all he needed to spur him on. Moving past the head he sunk the first three inches of her shaft into his mouth and bobbed up and down.\n\n\"Mmmm yeah that feels so good baby, don't stop, just keep... Oh Fuck!\"\n\nSuddenly it all went dark for Kevin as her skirt was thrown over his head and he continued sucking on in darkness and confusion until he heard the approaching voices and froze.\n\nJenny had other ideas. \"Oh no you don't. I've waited far too long for this so you just keep going.\" And she grabbed his head and continued to bob him up and down at his original pace. \"Oh yeah that's it.\"\n\nThe voices got louder until they came to an abrupt halt as the small group of people noticed the two on the bench. It looked to them like a guy was going down on a woman but the movement was off and they couldn't help but stare.\n\n\"Oh don't mind us,\" Jenny said with a smile. \"My boyfriend is sucking my cock for the first time and he's just getting so into it that I don't want to stop him. You know how it is,\" she winked.\n\n\"Umm yeah sure,\" one of the guys muttered and he quickly walked on followed by most of the group. A petite redhead hung at the back of the group, took a few steps after her friends, paused, looked round, took a couple more steps, stopped dead and then just stared at them.\n\n\"Debbieee,\" said an older blond lady coming back. \"Come on, let's go.\"\n\n\"Just a minute Sandra, I'm just a bit curious you know... don't you want to see what's going on under there?\"\n\nJenny smirked and quickly raised and lowered the skirt of her dress to flash a quick view of a red and mortified Kevin. \"Oh relax honey,\" she said to him. \"Nobody knows you around here and it was too quick for them to see you properly anyway.\"\n\n\"Oh wow I've never seen anything like this before,\" said the redhead to Jenny. \"Umm can we watch?\"\n\n\"Debbieee!\" Squealed a shocked Sandra.\n\n\"Oh come on, are you not just a little curious?\" she shot back with a little shrug and smiled when after a pause her friend gave her a quick nod. \"So...\" Debbie said, turning back to Jenny. \"Can we watch?\"\n\n\"Well that's up to my boyfriend here. He's a bit shy and I don't...\" she sighed, \"I don't think he wants to be seen with a girl like me.\"\n\nKevin heard the sadness in her voice. What she said might have been 100% true but he didn't want her to know that.\n\n\"OK baby if you're up for this tap my leg. Three taps for yes or two taps for no.\" She waited. Tap... Tap... Her heart sank a little. Irrationally dismissing any legitimate concerns he might have about engaging in indecent public exposure she decided it was as she feared and he just didn't want to be seen with her. \"Sorry I think he...\" Tap... \"Hold on,\" Jenny said with her eyes lighting up. \"Was that three taps sweetie?\" She waited. Tap... Tap... Tap... \"It's a yes,\" Jenny beamed, drawing back her dress to bring Kevin blinking into the light.\n\nKevin was frozen. He looked up to see Jenny's delighted face, excited and turned on in equal measure. He knew it wasn't the exhibitionism that got her this way, well, he didn't think it was the exhibitionism she was into, it was the acceptance that she craved. From her family, her friends and now her boyfriend. She just wanted to be loved for who she was. He was sure this was a one time thing, a one off public demonstration that he was OK with her. He relaxed and came back to life. She was right he didn't know these people and never would so bigger challenges were ahead. Right now all he wanted to do was make her happy.\n\nKevin returned to bobbing up and down on her cock suddenly feeling the urge to put on a show for the audience but mainly to please her. For his... girlfriend. Wow. That was going to take a bit of getting used to.\n\n\"Oh wow he's really going for it isn't he,\" said Debbie excitedly.\n\n\"Well you're a lucky girl,\" Sandra added, looking at Jenny. \"He's so into you just look at how much effort he puts in. He looks like a natural.\" She turned to Debbie, \"Do you think this is his first time?\"\n\n\"Oh of course it's his first time Sandra. It's all passion but no technique.\" She turned to address Kevin. \"Hey, slow it down a little honey. I love your enthusiasm but it's not a race. Keep it slow and sensual and keep working that tongue around her head and slit to scoop up all that nice yummy pre-cum. A hard working boy like you needs a little tasty reward. A little bit of the sweet pre to keep that little tongue buzzing away. Mmmm that's it, did you hear her moaning? That's her way of telling you you're doing a good job.\"\n\nSandra joined in. \"And don't keep that hand still, use it to give her a nice slow handjob, work it into your mouth. Yeah that's the way. And cup her balls with your other hand to give them a nice little massage, a gentle little fondle.\"\n\n\"And you need to make more noise to show her how much you love it.\" Debbie added. \"Get it really spitty inside you mouth and when you pull up really slurp your way up. I want a really good sloppy noise. And make sure you moan like a bitch in heat.\"\n\n\"Ha, you didn't have to tell him that last part, Debbie. He's been moaning like a cock hungry little slut the whole time. Hey! Don't take your eyes off her. She's looking down to see you hard at work so you need to maintain eye contact. Show your lady how much you appreciate her letting you worship her girlmeat.\"\n\n\"Are you OK with this Kevin?\" Jenny half asked, half moaned. \"We can stop if you're uncomfortable with this, is it too much for you?\"",
        "Kevin answered by bobbing faster and winked back as Jenny gazed down on him in a mixture of love and lust.\n\n\"Don't worry he loves it alright,\" said Sandra, \"OK Kevin you need to step it up again now honey. She'll want to get into your throat baby, that's what guys like, well, that's what guys and girls with a nice big fat girlcock like. Come on, see if you can get yourself a little deeper. Arch your back a little and suck her as far down as you can go.\"\n\nKevin pushed down and swallowed at the same time but came up gagging. He tried a second and a third with the same result. Taking a deep breath he plunged down while swallowing and Jenny's thick hard cock finally popped into his throat.\n\n\"Oh fuck yeah,\" Jenny cried out and the two voyeurs whooped and turned to give each other a quick high five.\n\nKevin held her an inch into his throat for a couple of minutes while Jenny enjoyed the feeling of him convulsing around her before he pulled off coughing.\n\nDebbie let him have a brief moment to recover before grabbing onto the back of his hair and bringing him back in line with Jenny's throbbing member. \"Back to work cocksucker. Your throat should be nicely warmed up and open for her now so don't keep your lady waiting,\" and she forced his head back down and drove Jenny's cock back into his flexing tunnel. \"Oh yeah that's it.\" She looked at Jenny. \"You two don't mind if I help him go deeper like this do you?\"\n\n\"Mmmmm no you go for it,\" Jenny groaned back.\n\nDebbie grinned and continued to push down on Kevin's head as more and more of Jenny cock disappeared into his mouth. She forced more and more into him until only an inch remained outside.\n\n\"Aww your eyes are watering,\" Debbie pulled him up. \"Do you want to take a little break bitch boy,\" she said in mock sympathy, \"I could get my friend Sandra to finish her off for you if you can't manage it.\"\n\n\"NO!\" shouted Kevin.\n\nDebbie let out an evil laugh and shoved him back down. \"Don't worry I'm only messing with you. I know you'd never give up this dick without a fight, you're such a horny little slut. Yeah that's it, just a little bit further and... yessss you're all the way down. I'm so proud of you.\" She felt Kevin trying to back out. \"No. no. no. You're not pulling back, you stay there for as long as you can. Let that throat convulse around her meat.\"\n\nShe released her grip and Kevin shot back up for air, taking in two great heaving breaths before going straight back down on Jenny. Debbie sat back smiling and watching. Her work here was done and now she could just relax and enjoy the show.\n\nKevin continued to work her deep into his throat before withdrawing to play with her head in his mouth for a while then plunging back down again. Jenny tried to hold back wanting to make it last but it felt too good and after a few more minutes she was right on the edge. She surrendered to the sensations and just let the waves of pleasure flow through her.\n\n\"Oh that's it Kevin,\" moaned Jenny. \"I'm so close. Where do you want it? Do you want to swallow? It'd turn me on so much if you swallowed. I really want you to suck it all down for me,\" she panted. \"Will you do that for me? Will you swallow your girlfriend's load? Oooh here it comes. Take it baby, take it allllllll.\"\n\nJenny threw her head back while grasping and holding him down. She hilted herself as deep inside him as she could as shot after shot of her warm thick jism flooded into his stomach. Kevin held her buried down inside himself as long as he could before he released his hold on her legs and pushed back allowing her cock to finally slip from his lips. He panted and looked up lovingly as the last of her spent seed dribbled onto his face.\n\n\"Aww they look so cute,\" they heard Debbie saying to Sandra in the background, \"aren't you glad we stayed behind to watch that?\" She giggled as they began to walk away. \"Thanks for the show guys. Come on Sanda, I'm desperate to get back home to Tom now. I'm so horny he won't know what hit him.\"\n\n\"Ha you are such a dirty girl Debbie,\" they just about heard as they faded into the night. \"And you really know how to train a cocksucker. If I ever grow a penis, I'm bringing all my boyfriends round to your place so you can get them up to speed.\"\n\nKevin got up off his knees wiping away the dirt and grass that was stuck to them and Jenny pulled him in for a long deep kiss. She took his hand and they walked towards the station clinging tightly to each other in the chill of the late evening air.\n\n\"Well that was an experience but let's never do that again,\" said Kevin.\n\nJenny smiled back. \"The blowjobs or going down on each other in public,\" she smirked, already knowing the answer.\n\n\"The public part.\"\n\n\"Yeah that was a bit risky but you had me soooo keyed up I just couldn't stop myself. And it all worked out so well because that woman was dead right. She really does know how to turn a little cutie like you into a well trained cocksucker.\" Jenny said with a wink and giggled as Kevin turned bright red.\n\n*****************************************************\n\nJenny was elated to have broken through the friendzone barrier with Kevin and at long last made him her boyfriend. She spent the night in his room and they woke in each other's arms and kissed and cuddled the morning away before their lectures started. She was happy and content but a nagging doubt crept into her mind when, as they were leaving in the morning, he found an excuse to hang back and say he would catch her up.\n\nThose feelings were compounded later in the day when she met him for lunch all giddy and excited but found him wary and standoffish. He pulled her to the side and led her away somewhere quiet before turning round and kissing her passionately. She once more pushed her doubts aside and melted into his arms but found him suddenly breaking away as someone came round the corner to leave her slightly confused and disorientated before she worked out what was going on. She steeled herself and waited until they were alone again before confronting him.\n\n\"OK Kevin what hell is going on. Are you ashamed of me? Do you want to go out with me or not?\"\n\n\"Yes I want to be your boyfriend,\" Kevin replied in a voice not much louder than a hushed whisper and looking around anxiously. I really, really like you. I just need a bit of time to adjust and get used to it. To work out who I need to tell first and how to tell them.\"\n\n\"What's to tell? I'm a woman and you're a man. Your woman I thought but maybe not.\" Jenny shook her head and looked away.\n\n\"Hey, hey you are my woman, I hope,\" he said, moving in to wrap his arms around her. \"But how long did it take you to come out to your parents and your friends about who you were.\"\n\n\"It's not the same Kev. I changed genders and you are someone who likes girls who's going out with a girl!\" She stated but the tone of her voice contained some degree of reconciliation with his position. An acknowledgement that he was going to have to deal with his own insecurities. \"Arrgghhh! I suppose we can keep it a secret for a bit longer but I'm not happy about this Kev. I don't want to hide part of my life any more.\"\n\nShe relaxed into him but with a heavy heart and a flat expression devoid of happiness. A bit more time she thought, I've waited over two years for him so what's another week or two.\n\nThat set the pattern for the next week. Secret rendezvous, holding hands when alone but swiftly withdrawing whenever someone else came past and sneaking into each other's rooms for heavy make-out sessions and the further honing of their oral skills.\n\nKevin was very happy with how the situation was turning out. He was growing closer to his new girlfriend and his infatuation was turning into something much much more. She was kind, sweet, funny and discreet. It was a little bit like having a mistress, a woman on the side and he had all the fun of sneaking around and setting up clandestine illicit meetings with her.\n\nBest of all the secrecy gave him an easier exit strategy if things didn't work out between them. He could simply move on without any new love interest ever knowing of his dalliance with the dick. It was one thing for a girl to think you might be eying up her sister but quite another if she thought you might be eying up her brother too. Or even prefer her brother. He shuddered. Nope. He'd keep his future options open and his reputation intact.\n\nKevin's only real concern was that she seemed to want to move the relationship forward faster than he did. First and foremost she wanted them to be more open with their friends and be a little more affectionate towards each other in public. He suspected she told Emily and Amanda everything and they had started to give him a few dirty looks. They clearly didn't approve of how he was treating Jenny and they were losing some respect for him but it was nothing he couldn't live with. Surely they would forgive him eventually.\n\nAnother issue was that she had made a few comments about trying anal and had even offered to let him go first to sweeten the deal. He had no doubts she was more interested in his ass than his cock and so far he had rebuffed her. He was curious but afraid and as he loved both the giving and receiving of blowjobs why risk it. At least that's what he told himself. The real reason was that he had come to enjoy giving oral a lot more than receiving it. If he went all the way with Jenny he was worried he might like being on the receiving end too much and he didn't know if his masculinity could take it.\n\nHe was already spending far too much time imagining what it would be like to let Jenny take him and a quick check on his browser history would bring up 'dominant shemale' and 'tranny tops guy' as his go to search choices. It was getting harder for him to remain in denial but somehow he still just about managed it.\n\nJenny meanwhile was also feeling like his mistress but not the fun strong dominant kind of mistress she might like. No. She felt like the other kind of mistress, a concubine, in love but powerless and always making excuses to Emily, Amanda and herself for why they couldn't be more open with each other. 'He loves me but he can't be seen with me yet' she'd say. Ugh. She sounded so pathetic when she did that. Also like Kevin she felt that her friends were losing some respect for her over it but in her case it wasn't dirty looks she got but pity. She never could stand to be pitied. She was wrong about the loss of respect from her friends but not about the pity or sadness they felt for her.\n\nSo, while Kevin was happy. Very, very happy. Jenny was not. Her resentment was building and things were rapidly coming to a head.\n\n*****************************************************\n\n\"I can't wait to get you back to my room Jenny,\" Kevin said excitedly as he led her by the hand along the corridor. \"Come on then. The coast is clear.\"\n\nJenny ground her teeth and bit her tongue. This was getting fucking ridiculous now.\n\n\"Crap someone's coming.\" Kevin let go of her hand and stepped away as they heard a noise but the footsteps slowly faded away in the other direction. \"False alarm,\" he said happily and quickly checked both directions before opening the door to his room. \"Come on then, let's go in.\"\n\n\"No!\"\n\n\"What?\"\n\n\"I said NO! I'm not doing this any more Kev.\"\n\n\"What do you mean? What's wrong Jen?\"\n\n\"I've had enough of this shit. I'm tired of us scurrying around in the dark like this. If you want to go out with me then fine, we do it openly as boyfriend and girlfriend. If not it's over, if not we're done,\" she said loudly.\n\n\"OK keep your voice down for fucks sake. Just come in and we'll talk about it,\" Kevin replied in a hushed voice and looked around nervously.\n\n\"No! I'm not going anywhere with you until you're prepared to acknowledge me in public. I'm sick of being your dirty little secret.\" She was practically shouting now.\n\n\"Fucking hell Jenny don't you realise how hard this is for me,\" he hissed. \"What I have to lose?\" He winced internally at how that came out.\n\n\"Fuck you!\" Jenny screamed at him enraged. \"Do you know what I always saw in you? Why I've always wanted to be with you? You've always been so kind and honest and you would always stand up for what you believe in no matter the cost. Always so brave. I admired you. But you know what? I was wrong about you. You're a fucking coward Kevin.\"\n\n\"Oh screw you Jenny. You're no saint yourself, just a controlling manipulative bitch who's spent months trying to push me into a place where I don't want to be. You always have to be in charge don't you, always ordering me about,\" he seethed. \"Do you have any idea how bad it would be for me if people knew I was going out with someone like you?\"\n\nOh fuck! Kevin regretted the words as soon as they left his mouth but knew they could never be taken back. They were said in anger and spite but laced with just enough truth and venom to devastate.\n\nYes she had taken the lead in their relationship ever since they had met but he was more than happy with that. She was a leader and he was more of a follower. A deputy to her sheriff. She had always looked out for him and protected him. And then there was the 'someone like you' comment. That was a flat out admission that he was too immature to handle a relationship like this and a rejection of who she was.\n\nHe was upset because she was right about him. He was a coward. The truth hurts and Jenny's words had cut him to the bone but he had just stabbed her in the heart. Kevin felt sick.\n\nFuck now she's gonna slap me, he thought irrationally. She had never hit him before either as Jason or Jenny. He closed his eyes and braced himself for an impact that would never come and wondered how much it was going to hurt. What she actually did next hurt him far more than anything he could imagine.\n\nHe reopened his eyes to see Jenny standing forlornly in front of him as a single tear ran down her cheek. She shook her head slowly and wiped it away with the back of her hand with a slight sob.\n\n\"I really thought this would work out between us but we can't come back from this,\" She said, turning and walking away.\n\n\"Wait Jenny I didn't mean it. Any of it. I'm a complete arsehole and I'm sorry, please come back!\" He started to follow her and put a hand on her shoulder.\n\n\"Don't touch me!\" She spat as she turned around pushing his arm violently away. The tears and anger clear in her eyes. \"I can't even look at you right now!\" She turned her back to him and walked away crying.\n\nKevin thought about going after her and took a step to follow but she anticipated his next move and shouted back over her shoulder, \"And don't you dare follow me!\"\n\nKevin backed up against the wall and sank to the floor with his head in his hands as the realisation hit him that he had just fucked up the best thing that had ever happened to him. \"Shit!\" He screamed into the night. He would do or give anything to fix this but he didn't know if it was still possible. \"What the fuck have I done!\"\n\n*****************************************************\n\nKevin lay on his bed wondering how to turn this around. He had spent the last few months desperately trying to avoid entering a relationship with an amazing trans woman before it ruined his chances to find someone more suitable. And now he'd finally done it. He'd broken up with the only girl he'd ever loved and only a few people knew they were ever intimate. Now he could go back to being alone but at least he wouldn't have to worry about what a handful of wankers he couldn't care less about might think. Yay for him.\n\nHe called her mobile again for the seventh or eighth time that night, it might have been more he'd lost count. And for the seventh, eighth or however the hell many times it was he left the same desperate message. \"Jenny. Please pick up. I love you. I'm sorry. I really want you back please. I'll do anything. Please. Just please talk to me.\"\n\nHe ended the message. Why the hell had he never told her he loved her when they were still together. It had been three hours since their fight and breakup. It was time to go and find her.\n\n*****************************************************\n\nKevin had already tried Jenny's room. Calling her phone with his ear to the wood to check if she was in like some crazed stalker. And now he was standing outside Emily's door. Shit! Seeing Emily would make this infinitely worse but Jenny had to be here.\n\nKevin listened at the door briefly. It felt wrong but he needed to know where she was, he wanted to know she was safe and with people who would look after her. He heard muffled voices and was sure she was in there. He debated yet again whether to knock. Should he give her the space like she had asked or was it just a test to see if he would come after her?\n\nDamn it. He was here and he needed to let her know how sorry he was and that he would change. With a deep breath Kevin knocked on the door. After a few hushed whispers there was a short silence before a stern faced Emily opened the door.\n\n\"Oh it's you... What do you want?\"\n\n\"Hi Emily I err... I wanted to see if Jenny was here. I need to talk to her.\"\n\n\"I don't think Jenny wants to talk to you right now,\" Emily said, glancing at someone hidden by the barely open door. \"In fact I know she doesn't\"\n\n\"Is that her on the bed? I just need to say sorry. To let her know that I realise how much of an arsehole I've been and that I'll fix it and do better. That I love her.\"\n\nEmily looked back into the room and unseen by Kevin raised a hand in a gesture to say stop. Don't say anything. Let me deal with this. Emily's instincts told her the best thing to do was to give Kevin time to think things through on his own. To dwell on the potential loss of his girlfriend and how much he'd fucked up and damaged their relationship. He needed to suffer a bit. Not to be cruel but to make him realise just how much he had to lose.\n\n\"Amanda's on the bed and she doesn't feel like talking to you either,\" Emily shot back with a glare. It wasn't a lie. She was sitting there comforting Jenny.\n\nHer eyes softened as she squeezed out through the door and wrapped her arm around his shoulder before leading him away and out of earshot of the others.\n\n\"You've been a complete shit Kevin, you know that don't you,\" she said in an oddly comforting way. \"You've managed to fuck up a relationship with a beautiful woman who genuinely cared about you because of your own insecurities. That wasn't very smart was it!\" OK, a little less comforting now.\n\nEmily sighed and withdrew her arm. This was as far as she would be walking with him and he would have to make the rest of the journey and the rest of the night on his own.\n\n\"You can still turn this around Kev but you need to make a grand gesture, be big and bold. Just telling her you love her is not going to cut it after months of mixed signals and weeks of pretending you're not really with her.\"\n\n\"So what should I do?\"\n\nEmily shook her head. \"If you don't know and can't think of anything then no one can help you.\" She turned and started walking back to her room. \"You're a bright cookie Kevin so you'll come up with something. Make it big.\"\n\nKevin began the slow walk back to his room determined to do everything he could to win her back. He knew what he had to do.\n\n*****************************************************\n\nThe next day Kevin went anxiously to their normal table for lunch and sat opposite Emily and Amanda who continued to give him the cold shoulder. Despite what Emily had said he thought he might be able to do this in small steps. His heart rose as he finally saw Jenny approaching. He would invite her to sit next to him, treat her like a real girlfriend, acknowledge their relationship in public and ease into a new phase of their relationship. Simple.\n\n\"Hi Jenny. I saved you a seat,\" Kevin said, smiling and patting the spot next to him.",
        "Jenny regarded him with disdain and moved round to the other side and of the table and as as far away from him as she could sit.\n\n\"Hey Amanda, do you mind if I sit there next to Emily? I'd feel a bit more comfortable.\"\n\n\"Yeah of course hun I'll just move to the other side. Some of us are always happy to be seen with you.\" Again a hard stare was sent in Kevin's direction, this time from Amanda.\n\nJenny went over to sit with her friends and fumed. Unbelievable. What the fuck was Kevin thinking? That he could just pat the seat next to him and she'd just go over like a faithful little doggie to sit by her master. Pleased with the slightest attention. Fuck him. She wasn't even sure that she wanted him back. She was lying to herself. She desperately wanted him back but she wasn't prepared to compromise anymore. Unless he was ready to commit to her and openly acknowledge her in public this was over. It felt wrong to think of it as validation. She didn't and shouldn't need validation from a man or anyone else but that was the word nonetheless.\n\nWell plan-A was a longshot, thought Kevin, time for plan B. This is going to be excruciating.\n\nKevin took a deep breath, picked up a glass and spoon and climbed up onto the table in the middle of the dining hall. Slowly the din of the room faded and he dinged his glass several times in the manner of a man giving an after dinner speech. Jenny had already started to bury her head in her hands in embarrassment. Oh god.\n\n\"Hello everyone. For those who don't know me my name is Kevin and you may have heard rumours that I'm going out with Jenny who is the beautiful, kind and caring woman who started life as Jason. I just want to let it be known that I am totally in love with Jenny and that any man would be lucky to have her, she is wonderful and unique and err...\" He was now floundering with what to say next, \"hung like a donkey.\" Shit he thought, should have quit while I was ahead. Wrap it up. Wrap it up. \"She is my ideal woman, I love her very much and I'd do anything to be with her.\"\n\nKevin finished his short rambling grand gesture speech before looking around the room and he couldn't help but feel a little disappointed by his audience. He didn't know exactly what he expected. A standing ovation perhaps, or booing and condemnation and the throwing of suddenly and mysteriously acquired rotten fruit and veg. What he actually got was a handful of thumbs up and nods of approval. Those small supportive gestures outnumbered the few dirty looks he received from the type of people you wouldn't want to spend any time with anyway. But the overwhelming reaction by far was indifference, a collective shrug and a 'who gives a fuck, we have our own lives to live' attitude.\n\nKevin climbed down and returned to his seat feeling foolish and wondering what the hell he had been worrying about all this time as the din of the canteen returned to its normal level.\n\nEmily and Amanda beamed at him, he was definitely back in their good books. Jenny was red and clearly embarrassed but smiling behind her fingers nonetheless.\n\n\"I'm really, really sorry for how I've treated you recently Jenny please take me back?\"\n\n\"That depends. Will you introduce me to your parents and family or am I not the sort of girl you would take home to meet them?\"\n\n\"Yes, I'll introduce you to them as my girlfriend, I'll never pretend you don't mean anything to me ever again.\"\n\n\"Not enough!\" Emily butted in causing them all to turn to look at her open mouthed. \"Jenny wants your arse too,\" she smirked. \"She'll take you back but you'll have to let her fuck you.\"\n\nKevin looked to Jenny who stared back wide eyed before giving a rapid nod of assent to this unexpected additional term.\n\n\"Well... I'll agree but Jenny has to reciprocate. I get to fuck Jenny too.\" Kevin said.\n\n\"Agreed!\" said Jenny jumping to her feet, \"but I go first and we're going straight up to my room so I can fuck your brains out.\" She fixed his eyes with a smouldering stare. \"I'm so fucking horny for you right now Kev. And today is my day. Tomorrow you can take me but today your ass is mine.\"\n\nKevin gulped. \"But what about our lectures?\" He said weakly.\n\n\"Fuck the lectures. I'm fucking you instead.\"\n\n\"Umm... OK,\" he said nervously as an excited Jenny moved round to lead him away to her bed.\n\nEmily and Amanda whooped and hollered as Jenny pulled a red faced Kevin away.\n\n\"I'm so proud of you Kevin,\" A smiling Emily shouted after them. \"Have fun you two.\"\n\n*****************************************************\n\nKevin allowed himself to be pulled through the college towards Jenny's dorm room with three main emotions running through him. Excitement, fear and embarrassment in equal measures. Even though no one seemed to care when he publicly declared his love for his 'hung like a donkey' girlfriend, oh crap did he really just say that, he still felt like everyone was watching him. In his mind everyone was still judging him. Oh look, there's the guy who's dating that trans girl, they were all saying in his head, she's the one pulling him so it's clear who the dominant one is, looks like he's going to be getting a good pounding tonight.\n\nHe fought to clear his mind and to stop himself from checking if the coast was clear. Jenny needed someone who wasn't ashamed to be with her and would love her openly and Kevin was determined to be that man. He just hoped his arse could take it.\n\nJenny pulled him through the door of her room and slammed it behind them before pushing him up against the wall and launching into a hungry, desperate kiss. They made out for a full three minutes before breaking, panting for breath. She ran her hand through his hair, smiling at him before pulling him onto her lips for another slightly less frantic round. Their hands explored each other's bodies as Jenny, maintaining a hand on his head, ran her other hand down to cup his bottom, gently squeezing it while smiling into the kiss. She moved the hand back up under his t-shirt before pushing it down into his underwear to fondle his bare cheeks.\n\nKevin yelped and tried to move forward into her as he felt her finger slide over his tight puckered hole for the first time.\n\n\"Mmmmm,\" Jenny giggled and pulled back, \"If you make such cute little sounds when I run my finger over it I can just imagine how sexily you'll moan when I have you riding on my big hard dick. And the best thing sweetie... I'm not going to have to just imagine it for very much longer.\"\n\nShe withdrew her hand and unfastened his trousers before pulling them down to his ankles along with his underwear as she sank to her knees.\n\n\"Hi there little fella. Did you miss me?\" She said to his hard member and gave it a loving little kiss. She ran her tongue all over the glands and dived deep before pulling off with a loud pop to look up at him. \"Aww I think this little cutie definitely missed me, look at how happy he is to see me back.\" She looked back at it. \"Sorry sweetie, Jenny can't play with you today. Jenny wants to fuck some ass.\"\n\nShe gave his glands a final quick kiss and stood back up, turning him round and marching him over to her desk with his pants around his ankles like a chained prisoner. Jenny swept everything off the table top with her arm clearing a large space. It was unnecessary but the symbolism was divine and she'd always wanted to do it.\n\n\"Bend over.\" she ordered with a single hard spank to his butt and a hard shove to his back.\n\nHe yelped but complied, breathing deeply as her hands grabbed and kneaded his butt cheeks, her fingers digging into his soft tender flesh. Jenny moved her hands in circles, spreading and closing Kevin's ass as she lowered herself to her knees. He felt her hot breath on his hole making him shiver in anticipation, longing to feel her touch with all doubts out of his mind as they prepared to explore his depth together for the first time.\n\n\"Oh you can't even begin to imagine how long I've dreamed of having you bent over for me like this,\" Jenny said and he could hear the smile in her voice. \"Let's see if I can get it winking at me,\" she giggled and gave him a long, slow, lick from the perineum right up past his hole as Kevin released a long deep moan of pleasure.\n\n\"Ha I knew you'd love the butt stuff,\" she said triumphantly and slapped both his cheeks at the same time to make him squeal before giving him a playful bite with just enough pressure for him to feel her teeth. She returned to spreading, licking and spitting on his ass. Trying to get him as wet and slobbery as possible to prepare him for the next phase.\n\n\"Ok I think you're ready for your first finger baby,\" she said, pausing to help him remove his shoes and finish stripping the last of the clothing from his body. She sucked on her finger and began to tickle at his entrance. She teased his tight little rose bud a few more times. Tickling, licking and gently applying pressure before withdrawing again. After a short time she felt him bucking into her and giving little moans of frustration when she pulled away. She grinned broadly and finally gave him what he so clearly wanted, pushing her index finger past his now relaxed sphincter and deep inside him. He released a delicious moan as it sank all the way down to her last knuckle. Yessss. She said to herself. This is going so much better than I expected.\n\n\"Oh you loved that didn't you sweetie, you love having something in that tight little bubble butt of yours. That's good for both of us because this is just a little appetizer.\" She started sawing the finger in and out of his hole, twisting it to search for his prostate.\n\n\"Tell me. Is this the first time you've had something in your ass baby? The first time you've been penetrated.\" She taunted playfully, already knowing the answer. Kevin remained silent on the matter, even his soft little moans had stopped. The silence spoke volumes. Jenny's gently mocking smile changed into an open mouthed expression of surprise. Maybe she didn't know the answer after all. She gave his ass a quick spank. \"It isn't, is it! She gave him another spank. \"You've had something up here before haven't you, you dirty boy,\" she added with obvious glee.\n\n\"Aww, yes Jenny. I... Ooooo shiiii.\" Jenny's ring finger had just slipped in to join the party. \"I. I. Oh fuuuuccckkk.\" Jenny had started twisting the two fingers lodged inside him to stretch his hole. \"I've umm. I've played with myself a little biittttttt.\" He finished the sentence on a high pitch as she found his prostate for the first time.\n\nJenny stood back up and leaned over his body, keeping her digits inside him and pressing down on top of him. Jenny's pert breasts hung free and unencumbered beneath the thin fabric of her dress and he could feel her hard nipples against his back. Licking across his cheek she moved up to nibble lightly on his earlobe before whispering directly, softly and seductively into his ear.\n\n\"Tell me what you've been doing baby, tell mommy all about what a naughty little boy you've been.\"\n\n\"Ohh shit, you... you're... you're not my mommeeeee.\" She pressed down onto his prostate grinning evilly.\n\n\"Oh I'm whatever I tell you I am tonight Kevin. For the next few hours what I say goes my love, because I'm in charge aren't I.\" She emphasised the point with a powerful twist of her fingers that ended in another deep rub of his prostate as he groaned and writhed beneath her.\n\n\"Ohhh yesss Jenny, you're in charge.\"\n\n\"Gooood boy, You can be in charge tomorrow. If that's what you want of course. I think you quite like a girl who takes control. Now then... Tell mommy what you've been doing to that cute little bottom of yours.\"\n\nShe continued to probe and explore him.\n\n\"I've umm. I've used a couple of fingers on it over the last few weeks. I, ooooh yess. I, I've kinnnnd of wondered what it would feeeel like to have you inside me. Sooooo. yesss, oh fuck, oh fuck. So I've tried, ahh, I've tried to stretch myself a bit. It didn't feel anything like as good as this though. But... but... I think I'm getting a little dry sooo. Do you have any lube?\"\n\n\"Good idea babe but first...\" She pulled back and spat and dribbled saliva all over his entrance to re-lubricate his hole the old fashioned way before moving back into place and continuing to probe and stretch him. She pressed against his prostate intermittently to keep him moaning and keep him guessing about when that extra stimulation would come. \"...you still need to tell me what else you've done.\"\n\n\"That's all there is to telllll. I... oh wow. I... I thought about getting a dildo to practice with but I was too embarrassed to buuuuyyy it when I got in the sex shop.\"\n\n\"Aww sweetie you should never be too embarrassed to ask for the things you truly desire. You could have 'cum' to me sooner,\" she giggled. \"I'd have helped you prepare yourself. I was happy to let you go at your own pace but if you'd just let me know how desperate you were for a good fucking I'd have happily popped your cherry earlier.\" She leaned forward and licked his face again. \"It does make me feel really hot and horny though to know you were fingering your tight little hole and creaming yourself while imagining my Hard, Throbbing, Cock, buried deep inside of you.\"\n\nShe hitched up her dress and extracted her penis from the confines of it's lacy prison. \"That you were dreaming of this,\" she said, beating him on the bottom with it a few times before lining it up with his hole and giving a quick shallow push. Just enough to widen the entrance a little and make him squeal. Enough to give him a minor taste of what was to come. \"That you were thinking about my mighty tool claiming you while playing with yourself.\"\n\nJenny pushed up off of him. \"I can't wait any longer. Stay there sweetie, nice and open for me while I get the lube.\"\n\nShe turned away to open the draw of her bedside table and reached in to move a box aside and grab the astroglide.\n\n\"Oh and condoms,\" Kevin said. \"We'll need some condoms.\"\n\nJenny's face fell a little and she turned to face him. \"Oh. You want to use a condom? Well.. I'm umm, I'm not sure I have any. We can stop and I'll go and get some if you want but you're a virgin right?\" He reluctantly nodded. \"And before I transitioned I only tried it with a couple of girls to see if I could get into women as much as I liked boys. And I always used a condom with them and I had multiple tests before my surgeries so I'm definitely clean... But with you it's different. With you I want it to be special. Soooo... Do I really need to go and get some or can I...\"\n\nKevin watched her biting her lip in a cute and adorably desperate way.\n\n\"Well I suppose you're right we probably don't need them.\"\n\nJenny turned back to the cabinet and with an evil smirk finished moving the box of condoms out of the way so she could grab the lube before stalking her way back to her waiting boyfriend.\n\nArgh this wasn't right. She couldn't do it to him, this had to be based on honesty.\n\n\"Actually... No. I'm sorry. I lied to you. I do have condoms but it's our first time together, we're both clean and I've been dreaming of this forever and I really want to...\"\n\n\"...bareback me.\"\n\nHer eyes lit up. \"Are you finishing my sentence or are you giving me an answer?\"\n\n\"I'm giving you an order. Please bareback me Jenny. Fill me up. Breed me. I want your thick cum inside me.\"\n\n\"Oh yessss.\" Jenny roared, pulling her dress off over her head and throwing it into the corner as her whole body trembled with desire and anticipation. \"Oh I'm going to fuck you so, so good. She walked up to stand in front of his face and lowered her dick to his lips. \"Give it a little kiss and tell it what you want honey.\"\n\nKevin leaned forward to hold, kiss and lick the head of her cock before pulling back. \"Hello my beautiful big girl, it's so good to taste you again.\" He leaned forward and once more engulfed the head, running his tongue around it and giving it a hard suck before pulling off and giving it another big kiss and a last final lick. \"I want you to take me. I want you deep in my ass. Filling me up and making me yours.\"\n\nJenny stepped back smiling and poured a generous amount of lube onto herself and rubbed it along her length while moving behind her prone boyfriend. She wiped the excess onto his waiting hole and recoated her fingers before slipping once more into him. Once he felt properly prepared she lined up her cock with his rear entrance. It was time to claim him.\n\n\"Oh and Jenny.\"\n\nShe paused. \"Yes?\"\n\n\"Thanks for being honest with me. I love you.\"\n\n\"Aww I love you to babe.\" She smiled. \"And I am going to love fucking this ass,\" She said as she started pushing into him.\n\nOh fuck Kevin thought as her cock head slowly agonisingly started to breach his defences. He banged his hand on the desk as it continued its relentless process. He gritted his teeth and gripped the edges of the desktop so hard his fingers turned white and he was sure he would leave indentations in the wood. It felt so much bigger than it looked. So much thicker than the fingers they'd used before. Fuck I should have bought the dildo he thought. At least then I might have been a bit more stretched out so I could take this.\n\nJust as he thought he couldn't take anymore and was about to cry out for her to stop her cock finally beached his tight ring and was swallowed into his sore but welcoming ass.\n\n\"Oh Yesss!\" Screamed Jenny. \"Oh wow. Oh wow. Mmmm you have no idea how great it feels to finally be inside you. I can feel you flexing around my shaft with that pulsing little ass of yours. I'm finally going to make you mine.\" She shifted her weight slightly and even that small movement was enough to make him moan. \"Are you OK to continue or do you need more time to adjust?\"\n\n\"I need more...\" He gasped. \"I need more...\"\n\n\"Oh I can certainly give my boy a little more,\" she enthused and pushed another inch and a half into his bowels. \"Especially when you're begging me so sweetly. Oooo that feels so good.\"\n\n\"Aww no, stop, stop, I meant more time, I need more time.\"\n\n\"Oh! Shit. Sorry honey I guess I took that the wrong way, I'll stop and wait.\" She leaned down and kissed his shoulder as he adjusted. \"You've got the first three inches in you already though.\" She rotated her hips and he felt her moving around within him causing another sweet little moan. \"Almost halfway there, just four and a half more to go.\"\n\nJenny kissed, licked and nibbled his shoulder slowly working up to his neck before pushing her nose into his hair and breathing deeply as she cuddled Kevin's back. \"Fuck you feel incredible\", she half whispered as she felt his ass spasm around her again as it tried one more time to push out the girthy intruder. \"You feel so tight and warm and it's like your little butt is trying to massage me,\" she giggled as she felt another little spasm move along her cock, \"far better than any of the girls I've tried. I think I'm gonna be addicted to this ass by the end of the night and I'm not sure I'll ever be able to convince my dick to come out of there.\"\n\nAfter a little while the spasms slowed till they almost stopped and Jenny could feel his tunnel relaxing around her pole. He was ready to accept her full length and Jenny was more than ready to feed it into him. She simply couldn't wait any longer and decided she needed to push him one final time.\n\n\"You're opening up to me now sweetie so I think it's time to start fucking you.\" She kissed his shoulder again, struggling to hold back until he gave permission. \"But I need you to say it.\" She whispered sweetly into his ear. \"I need to hear you say, please Jenny, please can you fuck my tight little ass. Please take me. Can you do that for me sweetie? Can you ask me for a nice hard pounding?\"\n\nKevin felt her cock twitching as she said the words, feeling her excitement throbbing deep inside him. And it felt good. He had never felt this loved and desired before so how could he possibly deny her what she wanted, what they both wanted.",
        "\"Jenny, please fuck me. I want you to push yourself deep inside me. I want your full length. Please baby. Please make us both feel good.\"\n\nJenny bit her lip and slowly fed her remaining inches into her willing boytoy as he moaned and writhed in pleasure as each and every millimeter slid into him. She shuddered with delight and she finally bottomed out and ground her hips into him at the deepest point.\n\n\"You feel that baby, you've taken it all now. You don't know how incredible it feels to finally be balls deep in this beautiful little ass of yours. Get ready baby. It's time to break you in.\"\n\nShe raised herself from his back with one hand on his shoulder and the other on his hip. Withdrew slowly till just the head was still inside him and then pushed all the way back in as they moaned together in unison. After a brief pause she repeated the action and settled into a steady rhythm as she gently long dicked her boyfriend.\n\nShe withdrew the hand from his shoulder, drawing it slowly along his back before gripping his other hip. Standing behind Kevin and holding both hips she started to drive up the pace, carefully monitoring his progress and only going at a tempo he could handle. She controlled her urges to drive in hard to make sure he enjoyed his first time. Later, she told herself, once he's used to handling my cock, I'll be able to pound away to my heart's content.\n\n\"Ooo, Ooo, Ahhh. Oh yes, Oh fuck, Oh fuck that feels good.\" Kevin began moaning sweetly beneath her, \"Oh wow. Fuck me Jenny fuck me harder.\"\n\n\"Whatever you want, baby,\" she grinned.\n\nShe increased her efforts and before long she was thrusting deep inside of him and the sound of their moans and her hips slapping into his butt cheeks filled the air. Beads of sweat dripped down from her, running down through her breasts and dripping onto him.\n\n\"You look so hot with my cock inside you Kevin. Here, let me show you.\"\n\nShe pulled him upright and without withdrawing herself from the warmth of his depths she gripped him behind the knees, lent him back against herself and lifted him high up into the air. \"Holy shit,\" he yelped in surprise, he had forgotten how freakishly strong she was. He reached back to wrap an arm around her neck to help support himself as she moved him in front of the full length mirror on her bedroom wall. She pulled his knees upwards and outwards to spread him as wide as possible as she bounced him up and down on her cock. She revelled in the act, a display of sheer power and dominance.\n\n\"Now you can see that cute little face you make when I'm pounding you baby?\" She panted. \"I could watch that all day. Look at my big fat dick pumping in and out of your ass? Isn't that the sexiest thing you've ever seen? Move your balls up out the way so we can get a better look honey. Yeah that's it. You're mine now baby, you belong to me. So tell me. Look in the mirror and tell us both. Who do you belong to?\"\n\n\"Youuuu Jenny.\" Kevin wailed, \"I'm yours. Your boyfriend. Your lover. I belong to you and only you.\"\n\nJenny beamed, knowing she had thoroughly broken him in, he'd never go back to an ordinary woman again. He was addicted to her cock now and they would be together forever. He would never leave her or deny their love again. \"Kiss me,\" she demanded.\n\nKevin twisted his head to meet her lips and accept her tongue as she ravaged and dominated his mouth. The combinations of her kissing, pounding, dominating and loving him all at once drove him beyond the point of no return. His eyes rolled in their sockets and he moaned her name as he shot his load upwards and all over his chest.\n\nJenny's eyes shot wide open as she felt his ass tighten around her as he came. She bit her lip as she watched him enjoy his mind blowing orgasm in the mirror and saw him fire rope after rope into the air. She realised she had to act quickly as she almost lost it herself when she felt some of his cum hit her own face. She had to get him back down before she came, she didn't think her legs would be able to support them in this position when she did.\n\nShe swiftly moved him to the end of the bed and dropped him down onto his hands and knees before pounding him with all her might. Kevin found his own arms and legs could no longer support him and he collapsed downwards onto his stomach with Jenny swiftly moving down with him. She lay flat against his prone body and spread his legs with her knees as she powered herself to the brink of her own shuddering orgasm.\n\n\"I'm about to cum baby. I'm going to fill you up. Your mine Kevin, Your fucking mine. Take it kevin. Take my fucking load. Arrrggggghhhhhh. Yessssss. Take it alllll baby.\"\n\nHer mind went white and fuzzy and she almost blacked out as the most powerful orgasm of her life wracked through her body and Kevin moaned beneath her in his own haze of orgasmic bliss. Normally by this point he would be recovering but the constant pressure on his prostate had kept the intensity going and the now endless stream of girlcum shooting into him had just taken it to a whole new level and make his cock spurt again. Before tonight he thought multiple orgasms were only for women. Now he knew differently.\n\nJenny's flow finally ended and her vision slowly cleared as she lay panting and incapable of movement on top of Kevin. She kissed him. \"That... That...\" She gave up and laid her head back down on him and planted yet more kisses on his shoulder and neck. Talking was just too hard and he knew how she felt about him and the love they had just shared. But she was a little worried about crushing her precious boy so with the last of her strength she held him tightly and rolled onto her side and against the wall. Keeping her semi hard penis still lodged inside him she pulled him with her and maneuvered the pillow beneath their heads. She relaxed and cuddled his back with her as the big spoon.\n\nShe smiled as she noticed Kevin was already falling asleep in her arms and pulled him closer as she closed her eyes too, not to sleep herself of course, just to rest them for a minute or two.\n\n*****************************************************\n\nA few hours later she opened her eyes again and stretched a little. As she did so she felt Kevin raise and kiss her hand before looking back over his shoulder and opening his mouth invitingly, just wide enough for her tongue to slip into. She smiled and only too willingly lent forward to accept the invitation. As she kissed him she noticed that her hardening dick was still lodged within him and she slowly started to push into him making him whimper adorably.\n\n\"Mmmm I could get used to waking up like this,\" Jenny purred sleepily. \"So. Assuming it's still Thursday, and we couldn't have slept that long my dear, I'm still the top. Admit it Kevin,\" she gently commanded in a sultry voice while running her hand slowly down his chest, her fingertips just lightly grazing his skin. \"You prefer it this way don't you. With me as the dominant one in the bedroom. With me being the natural top.\" She drew him back in for a soft kiss before breaking away then dashing back to run her tongue along his lips to elicit another delightful moan. She settled back smiling and biting her bottom lip, waiting for his answer.\n\n\"I... I might be a natural top too.\"\n\n\"Oh sweetie,\" she smiled and softly shook her head, \"if you say you 'might be' a natural top then you definitely aren't. That's not a bad thing though honey. It will make this work so much better for both of us. Now moan for me if you agree my darling,\" she said driving herself deep into him.\n\n\"Uggghhhh, oh yesssss Jenny,\" he moaned back before he had even realised what he was agreeing to.\n\nHer eyes lit up. \"There you go baby, I'm so glad we agree on this.\" She kissed him tenderly before pausing her gentle assault on his back passage.\n\nKevin tried to grind back into her but she held him still and what movement he did make was matched by hers to eliminate any friction. Kevin whined in frustration but when he looked into her eyes he saw a serious expression had come over her. He paused waiting to hear what she was going to say.\n\n\"This doesn't make you any less of a man Kevin, I want you to know that. You're my man now and always will be. I love you and we are equals in all things. If I was an... unequipped woman you would be the one fucking me so would that make me less than you?\"\n\n\"No, of course not!\"\n\nShe pushed his leg high against his chest, moved swiftly between his thighs, pulled him towards her and pushed his knees to his shoulders. He yelped and Jenny pushed him a little higher and brought the pillow under his bottom before lowering him onto it. Kevin was stunned by the speed and grace she demonstrated in moving him effortlessly into his new position. He stared up at the vision of beauty towering above him as he was fully spread and fully penetrated by his gorgeous girlfriend.\n\n\"And here you are my wonderful boyfriend. Spread wide and open in the missionary position. The woman's natural sexual position.\" She began to push into her lover with long deep strokes as he moaned and ground himself back into her. \"Moaning like a woman. Taking it deep like a woman but still very much a man. My man. My warm, generous and giving man. So... and I'll ask this one last thing before I give you the proper seeing to you so richly deserve... Do you believe I will think less of you because by nature you'll be taking what might be termed 'the more submissive role' in the bedroom?\"\n\n\"No, of course not.\"\n\n\"Correct answer my love, I think the world of you.\" She leaned in and kissed him full on the lips before breaking the kiss, pulling back and gazing down lovingly.\n\n\"But err, but I'm still topping you tomorrow right?\"\n\nJenny smiled down sweetly. \"Yeah of course babe I'm looking forward to it. You can take me any time you want.\" She winked and drove deep inside him, upping her pace and pressing against his prostate.\n\n\"Oh fuck yessss.\"\n\nJenny's smile broadened. \"But I think we both know your going to love being on the receiving end of my cock so much more.\"\n\n\"Oh fuck yes, please don't stop Jenny, that feels so good.\"\n\n\"Oh don't worry my beautiful little boyfriend, I'll be tapping this sweet little butt of yours all the time from now on my darling.\"\n\nShe leaned down and kissed him deeply as he wrapped his legs around her to pull her close. Maintaining a slow and steady pace she worked them both towards their second climax of the day with long deep strokes. Withdrawing almost completely before plunging back in to fully impale her lover over and over again.\n\n\"I'm so close baby, I'm almost there\" Jenny moaned, grabbing Kevin's cock and Jerking it hard. \"Are you going to come with me? Are you going to cum with my cock in your ass again. I want you to cum when I do. I want you to cum while I'm flooding your ass. I need you to cum right now babe. Can you do that for me sweetie? Can you do that for your girl?\"\n\n\"Arrgghhhhh Yesss.\" Kevin screamed as he blew his load high into the air and all over his own chest.\n\nJenny felt him clenching around her and thrust as deeply into him as she could to flood his insides with her seed. She moved back down, kissing him with passion and rotated her hips as she pumped her cream into his depths. She held herself there until the last of her cum had drained into her man and wrapped herself in his arms.\n\nAfter two years she finally had him exactly where she wanted him. She began dreaming of their future together. Imagining an engagement ring on her finger, moving into their own place, going on holidays, all they parties they would go to and of course all the places and all the ways they were going to screw. All the hot kinky sex they would have. She allowed her hand to drift down and squeeze his soft little butt. Oh we are going to have so much fun together she giggled to herself and pulled him tighter. So much fun."
    ],
    "authorname": "TGPstories",
    "tags": [
        "dominant",
        "shemale",
        "t-girl",
        "love story",
        "exhibitionism",
        "futa",
        "romance",
        "trans",
        "loving couple",
        "gentle domination"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/pursued-by-a-dominant-t-girl"
}