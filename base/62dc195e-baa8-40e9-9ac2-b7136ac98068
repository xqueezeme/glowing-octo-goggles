{
    "title": "Oil of Roses Ch. 32",
    "pages": [
        "Thanks to Sammi Scott, aka Titsy McYarn, the Cute at the Heart of the Abyss for her help and valuable critique. Bounteous thanks to Kevin for his incredibly thorough critiquing and voluminous notes. Thanks to Sensual Curves for her help in proofreading.\n\nThanks to my wife for handling the editing duties on this chapter.\n\nAfter you've read this, if you have any inclination at all to comment, please do so, either by email or on the comment board... The best way for me to grow and improve as an author is to hear from the people who read my work. \n\nI welcome constructive critiques and non-abusive comments. I will answer, in at least a semi-prompt manner, any email that comes with an email address. \n\nIf you feel you must respond in a hateful or angry fashion, you may put your head down upon your desk and do so, quietly to yourself, for as long as you feel it necessary. This story may not be copied to other sites without my permission.\n\nIf you have not read the earlier installment(s) of this tale, it would probably help you to make sense of this one if you did so.\n\n* * * * * \n\n\"Why haven't we killed her yet?\" Harry muttered, standing under the shower with Carol, Margo and Nicki.\n\n\"We love her too much,\" replied Margo.\n\n\"We wouldn't be whole without her,\" Carol added.\n\n\"She's incredibly fun in bed,\" Nicki said.\n\n\"Good reasons all,\" Harry agreed, \"but there are times, like this morning, when I really wonder if they're enough.\"\n\nIn the kitchen the woman who had managed to soak all four of her lovers with one cannonball was faced with the daunting task of breakfast. Harry had started the coffee but otherwise, breakfast was all hers. She tucked the towel around her hair a little tighter, pulled the robe closed and retied the belt after warming herself in front of the oven for a bit and wished the robe was a little longer.\n\n\"God, I swear these people can't take a joke,\" she muttered to herself, but then she smiled. It had been worth it for the way Harry and Carol screamed.\n\n* * * * *\n\nAfter breakfast Harry told the rest of the family about his physical therapy and the continuing problems he was having with his knee.\n\n\"...and so I didn't say anything because there isn't really anything y'all can do and I'm tired of being the object of everyone's worry. I feel like my life's been on hold ever since the attack and this was just one more thing that was trying to get between me and being back to normal.\"\n\n\"Baby, I understand but... you should have told us,\" Margo said. \n\n\"I know, I know I should have and I have no excuse for what I did, all I have is the reasons I didn't tell you... and they certainly don't excuse my actions.\n\n\"Which raises an idea I've been mulling over in my head... we need a family council. A system in place not only to discuss issues that affect all of us, but to also handle issues like assigning breakfast duty to beautiful wives who cannonball into the pool unexpectedly. It's a way for us all to have a voice, and a way for penance to be assigned when one of us does something upsetting or hurtful to the family. What do you think?\"\n\n\"Sounds like a good idea,\" Kelly said, \"but who sits on it? I mean, does Nicki sit on the family council? She's family, but she's not a part of the marriage...\"\n\n\"I don't think I should sit on it... except in certain circumstances when at the request of two or more of the council members, the extended family is brought in, all of them, to consider a particularly serious issue,\" Nicki responded. \"The family is just you four who make up the marriage.\"\n\n\"That sounds right... well then, that raises the question, who are members of the full extended family?\" asked Margo.\n\n\"Well, I think we can agree on Eddie, Tamara, Karen, Patricia and Nicki... what about Tattie?\" said Carol.\n\nWith a chorus of assents Tattie was acknowledged as a member of the extended family.\n\n\"Anyone else?\" Harry asked.\n\n\"Well, there's Nick,\" Kelly said, \"but I'm not sure he really qualifies.\"\n\n\"To me he does, but he doesn't,\" Harry replied. \"He walks, talks and acts like a member of the extended family, and we treat him like one, but he really isn't one... not yet... maybe not ever. I don't know.\"\n\n\"I'd agree,\" Margo said, \"not yet, maybe not ever. Remember, his interests and ours may collide someday, and if they do, make no mistake, he won't come down on our side out of sentimentality.\"\n\n\"I'm with them,\" agreed Carol. \"Love him, like him even, want to bear and raise a child of his some day as a part of our family, after at least one or two from a certain husband I know, but trust him completely and implicitly, no.\"\n\n\"Then it's unanimous,\" Kelly added. \"No Nick.\"\n\n\"Alright then,\" Harry said, \"I call the first family council meeting to deal with my hurtful withholding of information that the family had every right to know. I tell you now that if any cute or funny penance is assigned I'll refuse it. This was a serious mistake on my part and the consequences of my actions should be serious as well.\"\n\n\"Fine, we understand,\" said Carol. \"Do you want to be included in the deliberations?\"\n\n\"No... it's for the three of you to decide. As long as no family council meeting is secret, I can see situations where all four of us being present would hamper deliberations... this situation being one of them.\"\n\n\"Alright, why don't you and Nicki go talk somewhere while we discuss this?\"\n\n\"Certainly, you know where I am if you need me.\"\n\nHarry and Nicki headed to the bathroom and sat in the tub together while the Jacuzzi jets massaged Harry's leg.\n\n\"Sis, while we have the time... do we want to have that discussion we were going to have tonight?\"\n\nShe took a sip of her water. \"Works for me... the suspense has been eating at me ever since you mentioned it.\"\n\n\"Okay... Nicki, I got a letter from Dad that he'd written the Saturday before the accident...\"\n\n* * * * *\n\n\"...and that's why I never said anything about the letter. Their deaths were an accident... that way, everything worked out okay, the insurance paid off, you weren't left thinking Dad abandoned us... and until very recently no one but me knew that there was nothing accidental about it. He'd established the routine of taking her for drives, waited for a weekend with bad weather projected, written and mailed the letter... and then ended both their lives... and both their pain.\n\n\"But when I told Carol, it was like there was this great weight that lifted off of me. At last there was someone I could pour out my hurt to. I didn't have to bear the secret alone anymore... and that helped me realize I didn't need to keep it anymore either. Enough time had passed; you deserved to know the truth. As to whether you'll thank me for telling you or not, well, that's for you to decide.\"\n\nNicki Grimes sat and looked at her brother. She felt numb inside. \"Were you ever... did you ever get mad at him?\"\n\n\"Oh, plenty of times.\"\n\n\"It's just... how did you... how do you deal with that anger?\"\n\n\"I'm not angry about it anymore... but there for awhile... well, what I did was remember Mama, before she got sick. Dad wanted to go where that woman was, wanted to help Mama be that woman again... I couldn't... I can't blame him for that. I hope to God they're together somewhere, dancing the way they used to in the living room. \n\n\"And then Carol came along, and I could understand how he felt... understand it completely. Granted, the dynamics are a little different, but if only one of those wonderful women was left, and if she was in as much pain as Mama had been... well, we'd start taking drives together... so long as any kids the family might have were grown, or near grown.\"\n\n\"I can see that... but I can also see a lot of family, friends and loved ones left behind not understanding that it wasn't that you didn't love them, it was that you loved her more. Would you... would you hold me, Harry? I'm feeling very small and lonely right now.\"\n\n\"You shouldn't even bother asking... come here.\"\n\nHarry held his sister as her tears began. \n\n\"Harry... what was it like... after you got the letter?\"\n\n\"It was... it was like I lost everything but you, all at once. I mean, losing Mom and Dad was bad enough, but it was an accident, and I was coping with that... and then this big chasm opened up beneath me and I thought for awhile I was going to go crazy. It was like this swirling maelstrom of despair and all I knew was that our father had abandoned us. All I wanted to do was sleep and scream and cry and hit things... and I couldn't. I couldn't let you know. I had to protect you from that hurt. I had to hold it all together for you.\n\n\"I was hurt... I was scared. God, Sis, I was so scared. I was going to screw it up, I knew it. Yeah I was mad at Dad... I wasn't ready to take care of you, I wasn't ready to take care of me... and after the non-stop emotional road-wreck of that funeral, I was right on the edge of panicking and running, I mean full-blown losing it, and Eddie sat me down and gave me a good long talking to. In the first place, I had no choice, Dad and Mama were gone and the job had to be done. In the second place, he helped me to see I'd been doing a lot of the job already for quite awhile, ever since Mama had gotten sick... well, you remember what it was like. She got sicker, Dad got more focused on taking care of her, I just sorta fell into it as things went along. And in the third place he told me I always had him to fall back on... which was crazy since I wouldn't even tell him where we lived.\" Harry smiled at the memory. \"I loved the big sumbitch back then, but Jesus, he had a low sense of humor... especially when he'd been drinking.\" He kissed the top of Nicki's head. \"It really helped me to know that I wasn't completely alone, that I had some sort of... 'support system' I guess we'd call it now. I mean, I had you... but you were the one I had to be strong for.\"\n\n\"Well God, bro... you never showed how scared you were... I don't know how but I never got the feeling that you were worried or angry or scared,\" Nicki said, tears still trickling down her cheeks.\n\n\"Then I did my job... you were the smart one, sis. You were the one who had the chance to make it. I was just a dumb stoner and the only job I wouldn't allow myself to fuck up was getting you into college and on your way.\"\n\nNicki slammed a fist into Harry's chest. \"You weren't a dumb stoner!\"\n\n\"I know that now, love, but at the time I was convinced that was all I was, and all I'd ever be.\" He stared, unseeing, at the stained glass windows, his mind years in the past. \"Then when I got to college... I thought for sure there was something wrong... it wasn't as hard as everyone said it was. I mean, it wasn't high school, but high school was so easy even morons like me could get through. College was supposed to be tough.\"\n\n\"It was, you were just nowhere close to being stupid,\" Nicki replied.\n\n\"Yeah well, again, in retrospect I'd agree with you, but at the time? That couldn't have been it. I didn't see any serious cracks in the wall of 'stupid' I'd built up in my mind until Karen and I were in business together. I'd be shooting out ideas at a mile a minute, from a hundred different directions, and there she'd sit, one of the smartest women I'd ever known, looking at me like I was from another planet. But even then I could find a way to lie to myself and figure it was just a knack... not real intelligence or ability, just a trick of sorts.\"\n\n\"Damn, I don't think I've ever met anyone as determined to think of themselves as stupid as you were!\" Nicki said, punching him in the chest, much more lightly, again.\n\n\"Oh, very guilty as charged, sis... no doubt about it... but we made it through... you're okay, getting more so every day... other than this inexplicable desire to make love with your brother. I'm okay... hell, I'm living in a dream, even with the attack and a fucked-up knee. And you know we'll all help you deal with the bombshell I've dropped on you.\"\n\nHer tears continued and she sobbed into his neck.\n\n\"Have I told you lately how glad I am that you've come home, sis?\" Harry asked, softly. \"It's not the sex, I mean, that's great and kinky and touching beyond my ability to express and a whole lot of other feelings as well... more than anything, it's just so good to have you home.\"\n\n* * * * *\n\nAfter awhile her tears had run out and Harry had warmed up the water again before his fingers brought her to a gentle orgasm as they kissed tenderly in the tub. Afterwards, his hard-on was standing up proudly but he told her not to worry about it.\n\n\"Well, I won't, but it will make this easier,\" Nicki replied, scooting over and grabbing the soap. \"I've always found it simpler to clean an erect cock than a limp one. Come on, it's time for sister Nicki to give her big brother his bath.\"\n\nLater, as he was lying on his stomach, what little weight the water wasn't supporting resting on her legs as she soaped the back side of his body, she asked \"I wonder what's taking the council so long? I'd have thought they'd be through quite some time ago.\"\n\n\"I don't know either,\" he murmured, enjoying the sensations of being bathed, \"but I'm hoping it means they took me at my word when I asked for serious penance for not saying anything about my knee. Oh, and if you keep playing with my asshole like that, this bath is going to get shortened considerably because me and my gimpy leg are going to throw you, kicking and screaming if necessary, on that bed in there and fuck you senseless.\"\n\n\"Sorry... wasn't really paying attention.\"\n\n\"Uh huh, sis... sure you weren't.\"\n\nLater still, after Nicki had turned him over and had him sitting between her legs while she washed his hair, he said, \"Okay... you've got me... this feels so goddamn good it's positively sinful... what do you want, you wicked woman... name it.\"\n\nAs she dug her fingers in close to his scalp, gently scrubbing, she replied, \"That's an easy one... bathe me when I'm finished with you.\"\n\n\"Damn, you're easy to please,\" he said.\n\n\"Yeah... well, don't let that get around... quickest way for a girl to get a reputation.\"\n\n\"Oh, worry not, your secret is safe with me... now, I don't know if it's safe with the Grimes Estrogen Brigade, but it's safe with me... unless I'm tortured... like this...\"\n\n\"Oh yeah, I can tell, my secret's real safe,\" she replied as her arms slipped down around him in a hug.\n\n* * * * *\n\nWhen Carol, Margo and Kelly finished their deliberations and went in search of their husband and sister-in-law, they found them in the bathtub, laughing. Harry had made shampoo horns with Nicki's hair and was in the process of making a second set.\n\n\"Looks like fun,\" Kelly said.\n\n\"Yep, but let's get business out of the way first,\" Margo responded.\n\n\"Harry, the family council has a decision, but it does need to be unanimous for it to do anyone any good,\" Carol said. \"We think that, in addition to any counseling or therapy any of us are getting individually, we need to start seeing a family counselor at least once a month, twice a month would be better.\"\n\n\"Sounds reasonable, got anyone in mind?\" he replied without hesitation.\n\n\"Yes,\" said Margo, \"I called Hal and asked for his advice. He recommended a Dr. Susan Lowenstein... she's family counselor, among other things.\"\n\n\"Among other things?\" Harry said, eyebrows raised.\n\n\"She's also into a whole melting pot of alternative therapies and alternative... well, everything's,\" Margo continued. \"Hal felt she'd be the family therapist most likely to accept us and our lifestyle, as well as have a broad enough range of experience to be of some use to us.\"\n\n\"Sounds good to me, let's make an appointment with her,\" Harry replied.\n\n\"Harry honey,\" Kelly said, \"just out of curiosity, why'd you agree so quickly?\"\n\n\"Kelly, sweetheart, why wouldn't I? To make a marriage succeed with just two people takes a lot of work and compromise. There are probably many more couples who would profit from family counseling than pursue it. Now, let's up that relationship to three people... the potential problems don't simply increase by half again, they increase... well, it would seem exponentially. Now add a fourth... right now it's all 'hearts and flowers' and the bloom of first love... but sooner or later we'll have to get down to the serious and difficult business of making our marriage work long term. Family counseling to me is not only a good idea to help deal with my problem, hell, all our problem of keeping things bottled up and hidden, but it's a good idea as preventative medicine, so to speak.\"\n\nKelly leaned over the tub and threw her arms around her husband's neck. \"I knew I loved you for more than your sparkling smile and winning personality.\"\n\n\"So,\" Harry squeaked as Kelly hugged him tightly, \"do y'all want to join us in here or do you want to help me rinse off Nicki, throw on some clothes, go see a movie or something?\"\n\n\"Well, you go ahead,\" Nicki said, grabbing the spray head and beginning to rinse the soap out of her hair, \"but I really need to go do some shopping and such, and then get back to the new place and continue making it mine.\"\n\n\"Fair enough,\" Harry said, helping her to get all the shampoo out, \"let's get you on your way then we'll decide what to do with our lazy Sunday.\"\n\nAs Nicki was about to leave, Carol said, \"Sis, since I won't be talking to you this week, we're taking Hal and Tori Stallings to Dominique's Friday night. It's a club/sex-show/match-making kinda place. You up for it?\"\n\n\"Wouldn't miss it for the world... what time?\"\n\n\"Leave here probably about 9, 9:30.\"\n\n\"I'll be here with bells on.\"\n\n\"Better yet be here with something slinky-kinky on,\" Carol shot back.\n\nAfter Nicki'd gone, Harry looked at Carol, \"What, we're not going to see her this next week? There are no phones at her new place? Cell service doesn't reach there?\"\n\nCarol stuck her tongue out at him. \"No, she's just going to be real busy. She's going to immerse herself in the notes Tony left me, see who she can identify and who we'll have to ask Nick or Big Vic about. She told me she tends to get a little anti-social when she's working like that... said you'd understand.\"\n\n\"Oh yeah...her around exams time was a barrel of laughs... in that whole 'who-is-this-demon-bitch-and-what-did-she-do-with-my-sister?' sense of the word 'laughs'. Dad used to tell me she was just 'intense', to which I'd reply, no, she's just 'insane'.\"  \n\n* * * * *\n\nThe four of them sat on the bed, all cross-legged except for Harry with his bum leg outstretched, facing each other in a circle, knees touching each other, each lost in their own contemplation of the eternal. 'Church' had become a welcome and necessary part of their week. First Carol, then Kelly, then Margo and lastly Harry opened their eyes and sat looking at the others, relaxed and at peace.\n\n\"Before we break the circle there's something I need to talk to y'all about,\" Carol said. \"In the spirit of not keeping things in that should be shared... I really need more submissive time.\" She looked at her family apprehensively but found only openness and attentiveness. \"It's not that I need, or even want, to give up any of the duties I'm responsible for... it's that when I'm not dealing with those, I need to be treated like a submissive.\"\n\n\"Do you mean in the bedroom or-\" Kelly began.\n\n\"No sweetie, I think she means everywhere,\" Harry said.\n\n\"You're right, my love, everywhere. 'Submissive' is what I am. It's not a role I play. Any time I'm not being submissive I'm playing a role. I don't know if any of you can truly understand... 'submissive' and 'dominant' are roles for you, Kelly, you too Harry, 'submissive' is definitely a role for you, Margo, while 'dominant' is more than a role but it's still not what you are.\"\n\nKelly said, \"Well, I'd ask you to let us know when we need to be more dominant but that rather defeats the purpose... Margo, when you're home, why don't you try to keep Harry and I focused where Baby Girl is concerned?\"",
        "\"Works for me,\" Margo replied, \"how about you, Harry my love?\"\n\n\"Sounds like a plan.\"\n\n\"Certainly works for me,\" Carol squealed happily.\n\n\"Little Cunt!\" Margo said sternly. \"Nobody asked you... but you may feel free to express your gratitude.\"\n\n\"Yes Madam,\" Carol whispered, the smile on her face lighting up the room. Her body shivered with bliss as she gave herself over to service.\n\nThree minutes later Margo, Kelly and Harry were lying on their backs. Carol had buried her face in Margo's cunt, happily humming as she plunged her tongue in and out. With one hand she was slowly and sensuously stroking Harry towards an orgasm, the other hand had four fingers buried in Kelly's ever-ready cunt while she teased Kelly's clit with her thumb. \n\nKelly and Harry shifted themselves, carefully, closer to Margo and the three of them cuddled as their happy pet performed her magic on them.\n\n\"It's going to be hell keeping her happy,\" Kelly said breathlessly.\n\n\"Oh... torture...\" panted Margo.\n\n\"I wonder how we'll survive,\" added Harry with a moan.\n\n* * * * *\n\n\"Why don't we invite the rest of the family over for some tub time tonight?\" Margo asked later as Carol bathed them in the shower. \"Then we can tell them they've been volunteered for the whole 'extended family council' thing.\"\n\nWhile Karen and Patricia, Eddie and Tamara sounded enthusiastic in their acceptance, Margo couldn't help but notice that Tattie sounded rather distracted... and distressed.\n\n\"Tattie, mind if we stopped by this afternoon?\"\n\n\"No... no... I mean, yeah, uh, come on ahead...\"\n\nThey arrived at Tattie's to find the house in a complete and total state of disarray, with Tattie and a rather cute brunette who looked to be in her early thirties sitting in the middle of piles of boxes of clothes, books, toys, and electronics equipment. Around the boxes were pieces of new furniture for the boys' rooms that had been delivered and just left sitting in the huge foyer of Tattie's home. Both women looked to be on the edge of tears and were nursing huge cups of coffee, a bottle of Tullamore Dew on the floor between them.\n\n\"Holy shit, Tattie, what the fuck?\" Carol said, looking through the doorways out of the foyer to see the rest of the house was in a similar state.\n\n\"It was all going so well... then the ratfuck cocksuckers couldn't deliver until Friday, and more stuff started coming in late, and I promised the boys they could come home tomorrow and now Julie and I are just...\"\n\n\"Overwhelmed,\" the brunette said.\n\n\"Yeah, fuckin' overwhelmed,\" Tattie added.\n\nMargo turned to Tattie and knelt on the floor beside her. \"Tattie darling, why didn't you call and ask for help?\"\n\n\"I just... I didn't... y'all've been through so much...\"\n\n\"Bullshit, you should know better. Now then, you, Julie and Harry will be supervising, soon as the rest of the family gets here, we'll get this place squared away in no time.\n\n\"Carol, assemble the troops, have Eddie stop by the house and pull the clothes we were wearing yesterday at Nicki's out of the dryer.\" \n\nWhile they waited the rest of the family was introduced to Julie Elliott, the teacher Tattie had hired to help with Yuri and Vashti.\n\n\"It's nice to finally meet the rest of you... Tattie's talked about you so often, and of course I knew Margo from years back, but now I have faces to put with those outrageous stories.\"\n\n\"Trust us, all the stories are true... unless they make us look good, in which case they're scurrilous lies and slander,\" Harry said, smiling.\n\nIt wasn't long at all before Karen, Patricia, Eddie and Tamara arrived and much to the amazement of Tattie and Julie, in only a few hours the majority of the work was done.\n\n\"You guys are... amazing,\" Julie stammered.\n\n\"Nope, not amazing, just very good at following orders,\" Tamara said with a smile. \"You'd already done the hard work by deciding where everything went... you just needed strong backs to get it all there.\"\n\n\"That's a load of horseshit,\" Tattie exclaimed, \"y'all're amazin'... we didn't have a clue where half this shit was going. Y'all walked in to a total 'FUBAR'. Now then, where am I takin' y'all to supper?\"\n\n* * * * *\n\n\"So there I was,\" Kelly said as they sat around the table after dinner in the trailer house room at Chez Bubba's, \"I'd made it to high school, the big leagues, so to speak. My body'd finally gone from the skinny, gangly stick figure it had been to something that was beginning to resemble a woman more than a Cub Scout-\"\n\n\"There have GOT to be pictures of you in that 'Cub Scout' phase,\" Eddie said.\n\n\"Yes and my parents will happily show them to you, I have no doubt... after which I will contemplate killing them,\" Kelly continued. \"And the boys began to be sniff around me... one in particular, Paul Knox, a white boy, the running back for our football team, a junior. He was hunting my cute little freshman butt like I was the last gazelle on the veldt and my dumb ass didn't know any better. I'd gotten used to being a wallflower as far as dating and such, so I really didn't have any experience with pussy hounds.\n\n\"I finally give in and agreed to go out with him on a Saturday night, lied to my folks about it, said I was going over to a friend's house, and I met him a couple of blocks away from home.\"\n\n\"Why do I smell disaster on the wind?\" cracked Julie.\n\n\"Because you're a teacher and you know what animals teenagers are,\" Kelly said. \"We grabbed a quick supper at some burger joint, talked for a bit. I didn't think about it at the time, but there was an undercurrent of unthinking, subtle racism evident throughout the entire conversation. He asked me about my favorite basketball team, seemed a little surprised when I told him I didn't watch basketball, talked a lot about barbeque, wanted to know where we went to get good barbeque, seemed real surprised my mom was a teacher and that my Dad worked with her. But I didn't pay any of it any mind, I was too busy being amazed that I was out on a date with a first-stringer! After we got through eating, we went riding around, he found a place to park and things got interesting. \n\n\"Now I don't remember what I thought was going to happen on the date, but I know it wasn't having this big ol' boy try to crawl into my pants. He gets grabby, I say 'no', he doesn't listen, I slap his face, he sits back and looks at me. I tell him I'd like to go home and he tells me no one is stopping me but he sure as fuck isn't going to drive me.\n\n\"Now, growing up Earl Culberson's daughter might have left me unprepared for the realities of high school dating, but it didn't leave me scared of a long walk home. I just knew that unless I was very, very lucky, there'd be little hiding that I'd lied to my folks by the time I got back to the house.\n\n\"So I hop out of the car and take off and to this boy's credit, not only did he not try to rape me, or hit me back when I slapped him, but he did follow me trying to get me to get back in the car, let him take me home. But by that point, I had a good mad on, and I wasn't in the mood to take a chance on him again. He stayed with me though till I got back into the part of town with streetlights, then he drove off, shaking his head.\"\n\n\"Didn't you have a cell phone?\" Harry asked.\n\n\"Yeah but I didn't use it... I still had faint, very fucking faint, hopes that they'd be asleep when I got home and I could sneak in and no one would be the wiser.\n\n\"It was an hour-and-a-half after I'd said I'd be back from my friend's house when Dad found me walking down the street. They'd already called my friend and knew I wasn't where I'd said I'd be. He started to ask me what happened and I told him it could wait until we got home so I'd only have to tell it once. Otherwise that was the quietest, most tense ride I ever had with my father... until very recently.\" She smiled. \"This whole marriage business kind of set a new standard.\n\n\"So we get back to the house and after the initial outburst from Mom, everyone calms down and I tell them what happened, everything that happened. When I'm finished, Mom looked at Dad and asked him what he was going to do about it. She was real upset with Paul, evidently thought Dad should go speak to him, speak to his father, beat the shit out of him, I'm not sure what. Dad said he wasn't going to do a damn thing about Paul; I was of course grounded until further notice. Said if Paul'd laid a hand on me after the slap, well, he'd be over there kickin' his ass in a heartbeat, but while Paul was a shithead, he wasn't any worse than any other teenage boy, and better than most in that he hadn't left me on my own until I was in a well-lit part of town. As far as the issue of Paul was concerned, it was Dad's opinion that I'd gotten me into that situation, I'd gotten me out of it and any dealings with Paul in the future were my problem.\n\n\"Mom wasn't too happy with that, but she allowed that Dad was right.\n\n\"I figured I'd gotten off lucky until I got to school that Monday and found out I was the subject du jour. Oh, lemme tell ya, I was one hot piece of ass! Why, I was the wildest thing Paul'd ever sank his cock in, damn near more animal than human being. His belt was firmly notched with Kelly Ann Culberson as his latest conquest.\"\n\n\"ANN?\" Eddie said.\n\n\"Yes 'Ann', and using my middle name will guarantee you going through life with one testicle... or less,\" Kelly replied.\n\nShe continued \"I was embarrassed, I was hurt, and I was fucking livid. I sat through my classes the entire day and just fumed. Every time one of my friends saw me and started with the \"have you heard what they're saying about you?\" it was all I could do not to rip off their heads and shit down their necks... but it wasn't their fault I'd gone out with him, so I restrained myself.\n\n\"When I got home that afternoon, I didn't say anything to Mom, but when Dad got home I pulled him aside and asked him if he'd be willing to help me deal with Paul... my plan, my responsibility, I just needed a little assistance.\n\n\"He told me he didn't have a problem in the world helping me and then proceeded to tell me he knew pretty much exactly what Paul was saying... I asked him who told him and he said 'No one... he's a teenaged boy... they're very predictable'.\n\n\"So the next day at lunchtime he shows up at the school, hands me a bag containing what I'd asked him to get and then sits in the car and waits. I went to the courtyard where most of the student body hung out to eat and made a beeline for Paul.\n\n\"I walked up close and told him, loudly, 'Paul, I'm sorry for the way I treated you Saturday night, getting you all hot and bothered and then refusing to put out... to help make up for it, I brought you lunch' and I pulled out a huge, hot, and very greasy pork butt sandwich from Rufus', a little barbeque place we frequented. I told him 'I got you barbeque, a pork butt sandwich, since you seemed to think I'd know a lot about barbeque' and then I whipped the top off and ground it into his crotch.\"\n\n\"Oh my God,\" Carol gasped as she laughed. \"Hot grease... barbeque sauce...\"\n\n\"Well, not too hot... it had taken awhile to get it from Rufus' to the school and so on, but definitely warm... and LOTS of barbeque sauce, all over the crotch of his pants.\n\n\"And while he's scooting back on the bench at full speed, trying to get away from this crazy girl, I told him, real loudly, 'This is the only piece of ass you have ever, or will ever, get from me'... and then I stepped back and waited to be taken to the principal's office.\"\n\n\"I imagine you didn't have long to wait?\" said Tattie.\n\n\"Nope, pretty quickly both he and I were in there, he told his side of the story, pretty much a complete fabrication. I told Principal Stacy it was a pack of lies, related my version of the events and told him he could talk to any number of students who'd back me up on the trash Paul was spreading around school about what had happened Saturday night.\n\n\"Well, while football isn't quite the religion in Ohio that it is here in Texas, Stacy still came down on Paul's side, said I was suspended for a week, he was going to have to call my parents and have one of them come get me. I told him to have Mrs. Albrecht, his secretary, go out to visitor parking and get my father; he was sitting in his car waiting.\n\n\"Once Dad was brought in, Principal Stacy told him the whole sorry story from Paul's side, as Paul had already been sent home to change, and told him that he'd suspended me for a week and that he sincerely hoped that Dad and Mom would punish me as well.\n\n\"Dad told him they would... starting that very evening. He and Mom were going to punish me by taking me to Rufus' for supper, since my lunch had gone to serve a higher purpose. And he was planning on taking off from work at least some of the days I was suspended so he could punish me with trips to the mall, to the movies, any other similar punishments that the two of us could come up with. He told Stacy that he was convinced that Stacy was, and I quote, 'a goddamn moron' and that if anything retributive happened to me once I was allowed back in school, he was, and I quote again, 'going to visit the wrath of Almighty God and the laws of the state of Ohio and the United States of America' upon any and all involved.\n\n\"You've all met my father, well, with the exception of you, Julie... I think Principal Stacy pissed himself.\"\n\n\"Why not, I damn near did,\" Eddie exclaimed.\n\n\"Yes sir, but yours is from laughter,\" Tamara said.\n\n\"This is true,\" Eddie answered. \"But if I had Earl threatenin' God's wrath and legal troubles, I definitely wouldn't be laughin' and I might well be makin' a mess in my bree-bree.\"\n\n\"Well, Mom was still seventeen kinds of unhappy with me and the whole situation, but over supper that night Dad and I got her to chuckling a little, and by the end of the meal she was laughing about it, having me describe the look on Paul's face for the twentieth time.\n\n\"When Mr. Stacy oh-so-graciously allowed me to return to school, I heard a little about some of the shit Paul caught because of what I did, but there wasn't much cross-over between our social circles in reality, and after what I'd done there was even less. By the time things calmed down there were new topics of conversation and new gossip galore. \n\n\"The next year, Paul's senior year, he and I had a class together and we got to know each other a little better... we became, well, not 'friends', more like 'friendly acquaintances' and I finally got to hear what happened to him when his father heard about it... which explained why the lawsuit we were in fear of never manifested. His old man beat the shit out of him. Well, not really, but his family was still firm believers in corporal punishment and so he had his ass lit up like a Christmas tree. And while that might really excite some among us,\" Kelly said, looking at Carol, \"it apparently didn't go over too well with Paul. \n\n\"And while we were getting to know each other, we discussed the casual racism he'd exhibited several times and I got a better understanding of just how subtly it crept into peoples' subconscious', how he'd learned to think in those terms without ever knowing he was doing so. And how the last term he'd ever think to use to describe himself was 'rascist'... I think talking about it with him was more educational in that regard than any five 'afro-centric' courses in college would've been. He turned out to be a pretty nice guy, overall.\n\n\"And he did tell me one bit of teasing that warmed the cockles of my little vengeful heart... we saw each other at prom and he asked me for a dance, a slow one, and while we were dancing he told me that with the help of his girlfriend and her folks, his running buddies had set him up... when he showed up at her house to pick her up, there was a twenty-pound ham waiting for him, dressed in a pretty little prom dress. The parents didn't quite understand it, but they got a laugh out of his embarrassment nonetheless.\n\n\"We exchanged the occasional email while he was at Ohio State and after he was drafted by the Dolphins-\"\n\n\"You're shittin' me... Paul Knox, running back for the Miami Dolphins?\" Eddie said.\n\n\"None other... well, after he was drafted he sent me a couple of pictures of him at the signing party with the big old fake check in the amount of his first year's salary. The only words in the email were the subject line which read \"Don't You Wish You'd Said Yes?\"\n\n\"I sent him back pictures of me wearing a Lotus Hunan cap, a tiny fluorescent pink thong and holding a bag of Chinese takeout. The subject line read \"Don't You Wish You Hadn't Pushed So Hard?\"\n\n\"I got back a two-word reply. 'You win'.\"\n\nAfter the laughter died down around the table, Harry asked, \"So how did things go that week of suspension?\"\n\n\"Dad was true to his word... he had enough time off accrued and finding someone to cover for him at the school wasn't hard... everybody was looking for overtime and his supervisor was happy to authorize it. That turned out to be the best week I ever spent with my Dad. We saw a couple of movies, did some shopping, but most of it we spent fishing and talking. I think in that week we worked out a lot of the problems that might've arisen during my high school years, just him and me talking about life and growing up and all those kinds of things. Mom and I, we had our talks spread out over my high school years, but Dad and I got the important stuff all handled that one week. \n\n\"Good thing too, because once he got his teaching certificate he got real busy real fast. Whereas before he was sort of a glorified assistant, filling in here and there, once they could stick him in a classroom he got as busy as a one-armed paper hanger.\"\n\n\"I've kind of wondered,\" Harry said, \"you've said your father worked as a correctional officer here in Texas, you were born here, how'd y'all end up in Ohio?\"\n\n\"Well, when Mom had her accident and Dad quit to take care of her, they knew they'd need family to help so we moved up to Ohio to be near Mom's family. Then inertia set in and until the whole 'grandchildren' issue came up, I think they were just as happy there as they would've been here... but now they're looking for teaching positions in this area.\"\n\n\"They do know we're not planning on children any time soon, right?\" Margo asked.\n\n\"Oh yeah, we had a little talk about that, reaffirming the fact when I took them to the airport after they met y'all,\" Kelly replied. \"Mom serenely assures me that they'll be ready whenever the grandbabies start coming and in the meantime, they've missed me and they're looking forward to the chance to get to know all of y'all better.\"\n\n\"I won't mind... it'll be nice to have parental types around that I actually like,\" Carol said, smiling. \"What about you, Harry? Margo?\"\n\n\"I love your parents, Kelly,\" Margo replied. \"Really warm and wonderful people, once we got past that initial awkwardness.\"\n\n\"Me too,\" Harry added, \"although I'm still not sure your father doesn't want to shoot me.\"\n\n\"I think he's past that now,\" Kelly said. \"Or at least he's as past it as any father-in-law ever is.\"\n\n\"Don't worry Harry, once he gets to know you better he'll want to shoot you for a whole new set of reasons,\" Karen said with a smirk.\n\n\"Thanks Sappho, from the bottom of my tiny, stone-cold, hate-shriveled heart. So, moving on to subjects that don't involve fathers shooting me, Friday night we're taking Dr. and Mrs. Stallings to Dominique's, Saturday afternoon is the G &amp; P picnic, Sunday we lay about like dead people. Y'all up for coming out with us Friday night, Tattie, Julie?\"\n\n\"While I'd normally be up for a visit to whatever pit of sin and degradation y'all're headed for, I'll have had the boys home for less than a week... I wouldn't feel comfortable about leaving them just yet. What about you, Julie?\"\n\n\"Uh... what's Dominique's?\"",
        "Carol explained. \"About five or six years ago, a slave owner named Dominique Duvalier noticed there really wasn't a place in town where those who wanted to be slaves and those who wanted to own slaves could meet and greet. The dominants and submissives, the sadists and masochists \u2013 and all mixtures thereof \u2013 had several social venues open to them, but for those who were really just more into the whole sex slave or pleasure toy thing, well, there really wasn't anyplace. And there'd been a few mysterious disappearances that nobody was really talking about.\n\n\"So she sold the business she'd inherited from her father and created one. She originally called it the 'The Slave Block' but that started catching her all kinds of flack with various groups, as you might imagine, so she changed the name. When she started it was a rather open and free-wheeling kind of place, but then there was an AIDS scare when one of the slaves who frequented the place tested positive so she instituted more stringent policies. Now it's very much like when you adopt a pet from the Humane Society. There's paperwork, on both sides. That might throw some visitors off, but she has a very large stable of slaves registered with her that are quite happy about her regs. They see them as not only providing a potential owner with some documentation as to the slave's health and such, but it insures that should anything happen to the slave, there's a place for any official investigation to begin. Usually though, the type that might cause that kind of problem balk at the fingerprinting-\"\n\n\"Excuse me, fingerprinting?\" said Eddie.\n\n\"Oh yeah, fingerprinting. That's part of 'Master' registration. Those looking to 'adopt' are fingerprinted, as well as having their identification examined and information recorded. On the flip side, the health information the potential slaves provide has been checked with calls to the doctors involved and their other background information has been checked by a friend of Dominique's who works as a private investigator and has friends in the police department.\"\n\n\"How in the world does she make any money at this?\" Harry said. \"I'd think she'd be broke inside a month!\"\n\n\"Damn near did put her in bankruptcy... until word started getting around that some of the best live sex shows in the southwest were at her place. For the slaves who registered with her, it became kind of a family thing and they weren't going to let the family business go down the tubes so they did the whole \"Let's put on a show!\" routine. She quickly had to make it a private club and charge membership so that they could get away with what was happening on stage and now the family has been augmented by a whole new crowd of performers who really get off on being watched. And she's becoming a regular venue for touring sex-related productions as well. Annie Sprinkle has performed there on her last four tours. So with the occasional special event, memberships, the take from the bar, as well as the adoption fees, she makes out okay.\"\n\n\"Adoption fees?\" Julie said. \"Isn't that... what, pandering?\"\n\n\"No, not exactly... she and the slaves registered with her have a perfectly legal client/agent relationship. As their agent, she receives the adoption fee for legitimate management expenses. She's got a very good lawyer who has done her very best to make sure it's as legally above board as it can be.\n\n\"Still, there are provisions both at the website and the club for donations to help keep the place afloat and I plan on dumping some cash in one or the other.\"\n\n\"Did you ever register with her... and if you didn't, why not?\" Kelly asked. \n\n\"The one time when I was Master-less and could have used her services... well, there were reasons I was avoiding the club at that time. One of her regulars and I had some very bad blood between us... literally. And if that little bastard is still there and we run into him Friday night... well, I won't be the one who starts anything...\"\n\n\"Are we likely to have to bail you out of jail?\" Harry asked. \"If so, I'll go ahead and email Daggett a head's up.\"\n\n\"No... I don't think so. That would be bad for Dominique and for my family. I think at worst it'll get a little tense.\"\n\n\"Isn't that what Custer said as he rode into Little Big Horn?\" Eddie said.\n\n\"Hmm... sounds interesting,\" Julie said. \"I'll have to see how things are going with the boys and Tattie and get back to you. If you haven't heard from me by Friday around noon, please give me a call over here and check, Margo. I may well have gotten so busy I've forgotten.\" \n\n\"Anybody else got any questions?\" Carol asked.\n\n\"Uh yeah... I'd like to know if Kelly still has that little pink thong,\" Margo said with a leer.\n\n* * * * *\n\nThat evening when they got home, the four of them wandered out to the hot tub, sitting around on the deck naked, waiting for it to heat up.\n\n\"Harry, did you ever think you could find yourself sitting naked on your back deck, waiting for your hot tub to heat up, with three of the most divine women on the face of the planet, who you just happen to be married to?\" Kelly asked.\n\n\"Wow Kelly, fishing for compliments much?\" chuckled Margo.\n\n\"No honey, I never did... not until recently. I really thought my life would either stay the way it was or end... I suspect I was really hoping for that 'end' result.\" Harry leaned over and put his hand on Margo's thigh. \"I gotta admit, this beats the hell out of ending.\"\n\n\"Hello?\" someone called from the side of the house.\n\n\"Hello!\" Harry responded. \"Karen, is that you?\"\n\n\"Yeah, y'all in back?\"\n\n\"Ahyup, hold on,\" he said as he started to rise. He sat back down as Carol was already off the deck and headed for the gate. \"Carol's coming to the gate.\"\n\nIn a moment she was back, followed by Karen and Patricia, who were both already pulling at clothing. \n\n\"Is that tub ready yet,\" Karen asked, pulling off her sports bra.\n\n\"Geez Sappho, just walk in and plop your muscular ass in our tub, why don't ya?\" Harry said, smiling.\n\n\"Thanks, don't mind if I do.\"\n\nWithin minutes the six of them were happily soaking in the tub.\n\n.\"Carol, darlin', make sure you get keys made for everyone in the extended family,\" Harry said as he enjoyed the subtle stimulation of the jets.\n\n\"Certainly, my love,\" Carol replied as she worked on setting the jets up properly for Karen and Patricia. \"If I'd have thought about it, I'd have done it already.\n\nThere was the faint sound of the doorbell ringing inside.\n\n\"There's something we didn't take into account,\" Carol said, jumping up and grabbing a towel. \"Should have put a another ringer, or a light or something back here to let us know when someone's at the door.\" She hurried off to answer it.\n\nWithin a few minutes she returned, carrying the hookah, followed by Eddie, Tamara and a somewhat nervous looking Tattie.\n\n\"Look at who we found parked out front of the house,\" Eddie said. \"Somebody left us a crazy woman.\"\n\nThat snapped Tattie out of her nervousness. \"I may be a crazy woman,\" she said as she eyed the gradually revealed naked form of Eddie, \"but at least I am of the genus and species 'homo sapiens', unlike some unshaven genetic throwback to a time when the ignorant ruled the earth.\" She began to remove her clothes. \"And furthermore, Mr. Janak, I'll thank you to remember that when someone of my maturity voluntarily takes on the raising of two abused and emotionally scarred boys, it elevates me-\" She paused imperceptibly before continuing to undress by removing her t-shirt and panties. \"-to a whole new level of insanity that deserves a far more pithy epithet than 'crazy', so if you're going to toss around such phrases I'll thank you to beg, borrow or steal the creativity required to come up with an appropriate label.\" And with that she slid her naked form under the water of the hot tub amid laughter at her chastisement of Eddie.\n\nEddie stood by the side of the tub, lip trembling, then scooped up Tamara in his arms and held her like a teddy bear. \"My Tamara still loves me!\" he cried, then stuck his thumb in his mouth.\n\nEveryone continued laughing as the great hairy naked man carried his tiny love into the hot tub.\n\n\"Have I mentioned recently how nice it is to live close enough to walk over?\" Patricia asked.\n\n\"Isn't it?\" Tamara agreed. \"Edward and I have a little farther to come but even so, in such a nice old neighborhood with all the trees, lots of shade, we were relatively cool all the way over.\"\n\n\"Yeah, beats the hell out of living in the middle of the concrete sea that was the condominium,\" Karen groused. \"Felt like living in a skillet sometimes... come to think of it, felt like living in a skillet about nine months out of the year.\"\n\n\"Carol my love, once you get everybody's jets set up, save the settings to memory and put things on a nice, relaxing flow, more of a sore muscles and aching back setting, alright?\" Harry said.\n\n\"Sure thing, won't take long now,\" she replied before going back into quiet conversation with Eddie as to where the jets were hitting him.\n\nOnce everyone was happy she saved the settings and then returned the jets to a less titillating arrangement.\n\nThe four explained the family council and extended family's role in it. No one had any problems with their inclusion in the extended family or on said council. \n\n\"Y'all are being remarkably clear-headed about this,\" Tattie said as Carol switched the nozzle and jet arrangements to the more stimulating settings.\n\n\"Well,\" Kelly replied, \"I'm the most inexperienced one in the marriage, and even I've got enough sense to see that we're going to require some relationship care and maintenance now and then. This council setup is going to be necessary. I mean, I doubt I would've thought of it on my own, or at least not for awhile, but then again I don't have some of the 'road scars' my wives and husband do.\"\n\n\"For which all of us are extraordinarily grateful,\" Margo said. \"It's nice to have someone in the relationship who's just carrying around normal human emotional baggage, without having the added 'relationship hell' package as well.\"\n\n\"Yeah, I can see how that would be nice,\" Eddie said. \"Of course, to consider Kelly the saner one of y'all, in any respect, is just damned disturbin' to me.\"\n\n\"Tamara, darling, be a dear and whap your lover upside his thick ol' head,\" Kelly said, splashing water their way.\n\n\"Sorry Kelly, not gonna happen... I love you, you're a precious friend, a sister of sorts... but he's my Edward.\"\n\n\"Traitorous bitch... I can see that the bonds of sisterhood have been weakened in you. Tattie, darling, be a dear and whap that big gorilla upside his thick ol' head.\"\n\n\"Excuse me, Kelly,\" the older woman said, \"but do I look like an idiot to you? I'm sitting next to him, so close I'm sure that body hair of his could reach out and ensnare me if he wanted it to, mutant throwback that he is. I'm Switzerland in this little conflict, I'm remaining neutral.\"\n\n\"I am surrounded by cravens and turncoats. I have no option left but to turn to a weapon of mass destruction... sic' 'im, Karen!\"\n\nKaren lay back in the hot tub with a blissful smile upon her face and said, \"Karen's naughty bits are being delightfully stimulated by titillating jets of water right now, so she can't come to the phone. If you'd like to leave your name and number and a brief message, she'll get back to you as soon as she's feeling MUCH better.\"\n\n\"You may have won today, you hairy escapee from the red-assed baboon cage, but I will have my revenge upon you... later...\" Kelly said, grinning as she loaded up the pipe.\n\nCarol asked \"Anyone have their cell phone close?\"\n\n\"Mine should be in my clothes, why?\" Tattie asked.\n\n\"Couple of calls I need to make... thought I'd better do it while I was thinking about it, before I got stoned... but now that I'm pondering the issue more thoroughly, I need to go put on music anyway. Back in a flash.\"\n\n\"No my love, if you were running and we only got a glimpse of your gorgeous naked form, it would be a 'flash'... you'll be back in a lust-inducing perambulation,\" Margo said, giving her a quick kiss before Carol climbed out of the hot tub.\n\nCarol turned and asked \"Karen, Patricia, Eddy, Tamara... are you interested in doing some shopping for special outfits for Friday night?\"\n\nAfter a chorus of assents, she disappeared into the house.\n\nBefore too much longer, the group in the tub was being serenaded by Dinah Washington from her album 'Back to the Blues' and only a few moments later Carol rejoined them.\n\n\"We have an appointment tomorrow evening; 8:30 PM at Carmine's. Nicki will be meeting us here so we can go to supper, reservations at Jimmy Claude's at 6, meet here about 5, dress in something light and cool, make sure you're wearing comfortable shoes... sound good?\"\n\n\"I've never even heard of Jimmy Claude's,\" Harry replied.\n\n\"You'll love it,\" Tattie said. \"Just walk in prepared to be pleasantly surprised.\"\n\n* * * * *\n\nConversation had waned as people so inclined smoked and everyone felt themselves being gently eased towards first excitation, then orgasm courtesy of Carol's carefully programmed jets. When Eddie neared his, Tamara's head disappeared beneath the water momentarily, as did Carol's when Harry reached the same point.\n\n\"You know... it's been awhile...\" Tattie said, \"since I've sat... and just gotten high... and come... in the company... of friends.\"\n\n\"I was kinda... worried... when I was... setting the jets,\" Carol said, \"but it was... pretty clear... what I was doing... and you didn't object.\"\n\n\"Almost chickened out... then thought... what the hell... but after those... could you turn mine... back to normal?\"\n\n\"Not a problem.\"\n\n\"I am at one... with why you call this... the Cum-Master 5000,\" said Patricia. \"If there wasn't one... so close... Karen... we'd be getting one... ourselves.\"\n\n\"You're right... we would,\" Karen agreed, a wide smile plastered across her face.\n\n\"It is an evil... tool of depravity... and I thank God for it,\" Margo said. \n\n\"Of course... we do have to run it... with a slightly higher... level of water treatment-\" Kelly said before she gave forth with a prolonged sigh.\n\n\"Because of all the... biological contamination?\" Patricia asked.\n\n\"No,\" Kelly continued, \"because Eddie... isn't as regular... about bathing... as he should be.\"\n\n\"Cute Kelly... real cute,\" Eddie said. \"If I wasn't bathing... regularly... you'd know it.\"\n\n\"Oh yeah,\" Harry said, \"he gets funky... he can knock... buzzards off shitwagons.\"\n\n\"Now I feel like I'm back in high school,\" Tattie said. \"May I trust you shan't be lighting farts anytime soon?\"\n\n\"Only on special occasions... Tattie darlin'... only on special occasions,\" Eddie said, grinning like a madman.\n\n* * * * *\n\nLater, after everyone but Tattie had gone home, and she had called Julie to let her know she was staying over, the four tired, but happy, lovers took a long hot shower together and fell into bed. Margo and Carol curled up together and were out like lights, but Harry and Kelly found themselves awake, staring into each other's eyes.\n\n\"Hail Arthur, my liege and love... what wrinkles your brow this evening?\"\n\n\"Lady Kay... I have missed you of late. As to what troubles me, I know not myself. Some vague unease lies upon me like a fog that the sun cannot drive away.\"\n\n\"Come my most noble love, rest your head between my breasts and find peace.\"\n\nHarry nestled in her arms, his face resting against her chest.\n\n\"And what has the beautiful Lady Kay awake at this hour?\" he asked, his voice somewhat muffled by her body.\n\n\"The fear that I am not awake but sleeping still, and have yet to wake and find this all but a dream.\"\n\nHe put his arm over her, his hand caressing her bottom then moving up to the small of her back and held her tightly against him. \"Fear not... it is no dream but as real as the very earth itself. You are here, they are here, I am here and we are all blessed beyond any I know.\"\n\n\"My lord, although this may sound strange, thank you so much for being miserable and depressed enough to stop at that tavern where Merlin found you.\"\n\n\"To someone else, my lovely Kay, it would perchance sound strange but to me it is an oft-repeated prayer of thanks... as is my thanks for our desire for Chinese food one evening.\"\n\n\"My lord, you say the sweetest things.\"\n\n\"Only to the sweetest of people, my love.\"\n\n* * * * *\n\nIn the guest room, Tattie wasn't sleeping. She was worried and knew exactly why. \n\nIn less than twenty-four hours she was going to be taking charge of two boys with more problems than anyone would wish on their worst enemies. And while she had Julie to help her she was still terrified that it would be more than the two of them could handle.\n\nTwo lives, already damaged and scarred; Yuri quite probably beyond anyone's ability to help, Vashti as wounded in his own way, just able to pretend that he wasn't... a pretense that Tattie was afraid would shatter someday into a million irreparable pieces.\n\nAnd she'd taken the job to try to heal them. She thought to herself that she must be crazy... or stupid... or both.\n\n* * * * *\n\nWhen they awoke in the morning, Tattie was gone and voicemail from her said she'd left about 3 in the morning and had made it home safely.\n\n\"She's really stressing over adopting those boys,\" Margo said, \"not that I can blame her... that'd be a huge undertaking for anyone, much less someone sixty years old.\"\n\n\"Well, if anyone can do it, I have faith that Tattie can,\" Carol said. \"Like Tony used to say, she's got more pure 'gumption' than any two other people I know.\"\n\nAfter a leisurely breakfast, the four of them sat around the table enjoying their coffee and gentle tinkling of the wind chimes on the back deck.\n\nHarry leaned back in his chair and grinned. \"Now I know I'm home. Nobody here but the four of us, and a day where we have nothing to do till this evening. Then we have supper and... oh shit! I've got therapy this evening! Therapy with Helen Mondays, Wednesdays and Fridays! I wonder if I can reschedule.\"\n\n\"Well, first see if she can fit you in earlier today at some point. You don't need to start getting ready for supper until around 4, 4:30,\" Margo suggested.\n\n\"No, this is my day with my family... it was bad enough that I had to have a therapy session in the evening... this day is ours.\"\n\n\"Yes it is my love,\" Kelly said, \"and as it's all of ours, we're telling you to try and schedule your physical therapy for some time during the day today. Call her now.\"\n\n\"Yes ma'am. Is she like this when she's the Queen?\"\n\n\"Oh, I'm much more demanding then, Harry, much more demanding,\" Kelly replied.\n\n* * * * *\n\nNatalya Pedachenko had hated her husband with the kind of hatred only twenty years of marriage, or twenty years in a gulag, could produce. For her, she thought with a smile on her face, there had been certain similarities between the two. They had survived the disintegration of the Soviet Union together, left the Russian Republic together, and carved out a place for themselves in the United States together... a place that owed as much to her calculating intellect as to her deceased husband's ruthlessness.\n\n\"What are you smiling about, Aunt Natalya?\" asked the young man at the table with her. Her nephew Boris was still in town after attending the funeral. Soon he would be going back home to Minneapolis where, as he said, 'it got as cold as a Moscow autumn' in the depths of winter. His sophomore year of college awaited him, and a life far away from the one she and Dmitri had made.\n\nShe smiled at him and said, \"Nothing my boy, at least nothing important. Something funny crossed my mind; I cannot even remember what it was.\" \n\nHis curiosity fended off, her thoughts returned to the organization she and her husband had built. To do all that they had done didn't require that she love him, it required that she be willing to work with him. One thing growing up in the old Soviet system had taught her... even sucking Satan's cock was preferable to being powerless. Being married to Dmitri Pedachenko was nowhere near as bad as all that... he had his little boys, she had her young men and the payoff was that they were far from powerless. He had still been nekulturny, uncultured, but he had her to open those doors for him. It had been a profitable relationship... until this weak American gangster had upset everything. But even though he struck her as weak, she thought perhaps that this 'Nick Philouma' played more chess than poker, and after recent events she was sure she wouldn't feel too confident facing him across a poker table either. His opening move had been bold, fearless, and expertly planned and executed. To use not only his own personnel, but the U.S. Government, in the case of the Chinese... and disguising of his killers as INS had been a master stroke. Sometimes, he seemed almost Russian... he confused her.",
        "Still, to leave the families alive, to let them remain in town... what kind of fuzzy, soft-hearted thinking was that? \n\nIt worried her that even as sentimental as he seemed to be, he had found out about the killers she'd been bringing in and handled them swiftly and efficiently. At least there was no sign he'd found out about her other plans.\n\nThe high-powered round entered the back of her skull and sprayed the contents all over her table at \"Hudson's on the Bend\", grey matter and blood mixing with her complimentary chilled melon-guajillo soup. Boris drew breath to scream, sucking minute bits of his aunt into his lungs. And then he did scream, the first voice in a chorus that was to fill the street around the patio where they were sitting.\n\nIf she'd been able to, she would've approved of Nick Philouma's latest move.\n\n* * * * *\n\nHelen McReady arrived at the Grimes house promptly at 2 PM. Her Mondays were far more open than she liked. A conflict with her supervisors at the hospital over her tattoos was resulting in fewer cases being assigned to her. They had no problem with her tats as long as they were completely covered, but her work involved physical activity with her patients which resulted in her rolling up her sleeves, not to mention therapy in the pool, and so the situation kept worsening. At least she wasn't going to have to worry about that with this patient.\n\nCarol answered the door. \"Hello Helen. He's already in the pool, let me show you the way back.\"\n\nAs she walked through the living room it was impossible to miss the smell of pot smoke and she recognized some of the 'specialty furniture', no matter how artfully it had been integrated into the d\u00e9cor. As she had recognized the meaning of the collar around Carol's neck the first time she'd met her, that was no big surprise. That all four of them seemed to be happy together did surprise her somewhat. \n\nBut physical therapy allowed her to get to know the people under the masks they normally wore... hard to keep a fa\u00e7ade up when you were sweating, in tears, pushed to the point of wanting to quit. And she'd gotten to know his wives as one or another of them came and cheered him on with the therapy during his long weeks in the hospital. \n\nShe liked them... liked them all.\n\n\"Hello Harry, hard at it I see,\" she called as she crossed the deck and saw her patient floating in a pool chair next to Kelly.\n\n\"Oh yeah Helen... I tell you, there are few things in life harder than lounging in the pool with a beautiful woman.\" Kelly smiled at him. \"I suppose I should hop out and get ready for warm-ups, right?\"\n\n\"Yeah, by the time you're out and at least somewhat dry, I'll have the mat set up over here in the shade.\"\n\nAn hour and a half later they were finished for the day and even through the physical tiredness, Helen could see that her patient was in a much better place emotionally than he had been at the hospital.\n\n\"So, I notice you're still humming 'Ave Maria',\" she said as he eased into the hot tub.\n\n\"Yep... this shit still hurts and I still need something to keep my mind off the pain... care to join us?\" He motioned her towards the tub where he sat with Kelly and Carol. \n\n\"Well, the rest of the day is mine to do with as I will... why the hell not?\" she said, shucking down to her t-shirt and panties in almost as little time as it took to say it.\n\nWhile Harry had kept on the pair of shorts he'd worn for his therapy, the other two women were naked and most unselfconsciously so. Carol rose up out of the tub and drug over the hookah.\n\n\"Care to share a bowl?\" she asked.\n\n\"Don't mind if I do,\" Helen answered. \"I'm finished for the day.\" The casualness of the situation emboldened her. \"So Harry, I notice the collar... is Carol yours?\"\n\n\"Technically, yes, although if we're being truthful, she's pretty much all of ours... and to continue the truthfulness, I'm a pretty lax owner.\"\n\n\"That's not entirely true, love,\" Carol replied. \"You really just don't have a Dom's personality.\"\n\n\"No, no I really don't... oh, I can play the role from time to time, and there is an aspect of me that is, but really, the dominant one among is-\"\n\n\"Margo!\" Carol and Kelly said together.\n\nHarry laughed. \"Little doubt about it, is there? She's much more suited to the role than me. And Kelly here does an enchanting turn as a Domme, from what I hear. But as far as who collared our little lovely, yes, that would be me.\"\n\nCarol cuddled up next to him and passed him a mouthful of smoke with a kiss. \"Yes, and I'm quite happy about that... besides, I love you the way you are.\"\n\n\"So if you aren't really a Dom, how did you end up with a Sub?\" Helen continued.\n\nAs Margo slid into the tub to join them, an abbreviated version of their tale was told, with all parties taking part. Helen laughed through most of it as it came off almost like a comedy routine.\n\nWhen they were finished, Carol said, \"Glad you asked that, Helen... I figure sooner rather than later we're going to need a short-form answer to that question... thanks for giving us some practice.\"\n\n\"I'd imagine so... the four of you are definitely 'together'... no disguising it,\" Helen replied. \"It's bound to engender curiosity... although I'm not sure most people would believe how you ended up together.\"\n\nMargo curled up in Kelly's arms. \"That's alright Helen, most days I don't believe it either.\"\n\n* * * * *\n\nWhen Helen left the four of them realized they were all far too mellow to drive, so Carol called around and found a limo company glad to have the business on a Monday night. Then the four of them were making their passes through the shower and sedately scrambling to get ready, with the rest of the party trickling in while they were in the process. Carol was ready first and played hostess, also passing out the keys they'd had made when they went out for lunch that day. \n\n\"Now you guys can just come on in,\" she said when the next-to-last key was given to Nicki, \"instead of doing that whole annoying 'knocking' thing.\"\n\n\"Personally I think Edward enjoys annoying you with the knocking and calling out loudly,\" Tamara said. \n\n\"I know Liz does,\" Patricia added.\n\n\"Well, I shall trust the two sensible partners to curtail the mischievousness of Eddy and Karen,\" Carol said with a smile. \"Or I'm afraid I'll have to start letting Princess open the door, naked and inflamed with lust. Things could get... interesting.\"\n\n\"Point taken,\" Tamara said, grinning from ear to ear.\n\n\"Taken indeed,\" Patricia said, smiling as well. \"You are an evil bitch, Carol... I like that.\"\n\n\"Thank you, you are too kind.\"\n\n\"Neanderthal, I think our characters are being impugned,\" Karen growled.\n\n\"Me no know what big word mean,\" Eddy grunted, \"but me think they say bad things about us.\"\n\n\"We will punish them later tonight when we get them home.\"\n\n\"Yes, me like. That we do.\"\n\n\"I live in fear,\" Patricia said, deadpan.\n\n\"As do I,\" Tamara agreed, equally expressionless.\n\nHarry and Margo walked out of the bedroom into a living room filled with laughter.\n\nThe limousine arrived and shortly after that, Kelly joined them in the living room.\n\n\"Damn Kelly,\" Eddy exclaimed, \"glad you could finally join us.\"\n\n\"Mongo, don't make me hurt you... it takes time to look this good.\"\n\n\"That's bullshit, pure and simple,\" Eddy replied. \"I've seen you first thing in the morning... it doesn't take much effort at all.\"\n\nShe threw her arms around him and hugged him hard. \"For that, you may live,\" she said.\n\n* * * * *\n\nThe ride to Jimmy Claude's was relaxed and cozy with everyone enjoying a round of drinks courtesy of the limo's minibar. \n\n\"So, what type of restaurant is Jimmy Claude's? I mean, what's on the menu?\" Harry asked.\n\n\"Sir, it'll be Cajun food, it'll be superb, and as to what's on the menu, well, that'll be whatever Jimmy Claude felt like cooking today. He has no set schedule, except for certain dishes he prepares on holidays, and so there's just no telling what we'll be eating tonight. But whatever it is, it'll be some of the best food you ever put in your mouth.\"\n\nAs the limo drove east out of town Harry asked, \"How far out is this place?\"\n\n\"Oh, not too far... it's pretty much in the middle of five hundred acres that JC steadfastly refuses to sell.\"\n\n\"How come none of us have ever heard of this place,\" Margo asked, \"other than Tattie and you? What's the story?\"\n\n\"Well, Jimmy Claude Duvalier was the personal chef of T. Collin Hughes, founder and head of Bayou Petroleum from the time JC was in his early twenties. Hughes ran across him cooking in a little restaurant probably much shabbier than this place looks from the outside when Hughes was tromping through Louisiana looking for oil, fell in love with his food and hired him on the spot. Fast forward about forty years and Hughes was looking to reward his service, so asked him if he wanted to retire back to Louisiana, maybe open up his own restaurant or just sit back and take it easy. JC told him he missed the bayous and the swamps but there was no way he wanted to go back to Louisiana, it was too damn hot and he'd miss Texas. He did want to run his own restaurant though.\n\n\"So Hughes bought him this parcel of land out here, they did some extensive landscaping and \"Jimmy Claude's\" opened up, but with a twist... JC had to know you... hell, had to like you for you to be welcome. So people would come as guests of 'members', for lack of a better word, the members knowing that they were responsible for their guests' behavior, and if JC liked them, they'd get put on the list. Tattie and I got in on Tony's arm, JC liked both of us. That way he's kept his clientele very select, to his own somewhat odd standards and the place doesn't get swamped, pardon my pun. He does enough business to keep himself and his staff comfortable. But since it's not open to just anybody, has sort of a private club feel really, 'members' tend to not talk about it much... avoids hassle that way.\"\n\nThe limo turned onto a well-packed gravel road and proceeded through the thick-packed oak and elm trees that seemed to fill the property until they came around a bend in the road to a large parking area and a ramshackle-looking building that extended out over a very large pond, supported on piers. As large as the parking lot was, it was almost full but their driver managed to find a spot on the side where he could park. \n\n\"My God, it does sort of look like we're out in the bayous,\" Karen said, \"sorta...\"\n\n\"Well, it looks as close as JC wants it to... just enough to feel like home, not enough to be too miserable,\" Carol replied.\n\nOnce the doors were opened there was no mistaking the sounds of Cajun music coming from inside.\n\n\"Now I understand the 'comfortable shoes' part,\" Margo said as Harry, Eddie and Karen found themselves being stared at by the rest of the party. \"We're going dancing tonight!\"\n\n\"Would it matter at all if I said I don't have the foggiest idea how to dance, much less how to dance to Cajun music?\" Eddie asked.\n\n\"Nope Neanderthal, not in the least,\" Karen replied. \"I know that look... we're going to do what they want us to or the punishment will be severe.\"\n\n\"I have to agree with Sappho, Eddie,\" Harry said. \"The only consolation we have is that the ladies are looking so stunning tonight no one will notice what complete idiots we look like on the dance floor.\"\n\n\"You are wise beyond your years,\" Patricia said, giving Harry a peck on the cheek. \"Now then, let's go inside... even this make-believe bayou has too many mosquitoes for my taste.\"\n\nMargo grabbed Kelly who then added Nicki, Carol took Harry, Tamara and Eddie paired up, Karen and Patricia too and the group began their dance education with a simple waltz across the parking lot.\n\n* * * * *\n\nThat Monday evening, while their daughter and her husband and wives and their friends were being shown to their table at Jimmy Claude's, there was a short, sweet and to-the-point conversation in the Culberson home in Columbus, Ohio.\n\n\"Earl, the school in Texas is interested in interviewing us. It sounds like they want us for this next term. Book us a flight for tomorrow, I told them we'd be there on Wednesday.\"\n\n\"Yes darling.\"\n\n* * * * *\n\nCarol did her shot of Jack Daniels, followed by a long pull on her glass of Dixie Blackened Voodoo Lager. \n\n\"Alright Harry, time to take it to the dance floor,\" she said, grabbing his hand. \"They're playing a nice slow song so we can get you broke in easy.\"\n\n\"Sounds like a plan,\" Harry said, getting up. \"Come on everybody; let's get the embarrassment of the male-types started.\"\n\n\"I'll sit with the purses and such,\" Nicki said.\n\n\"Next dance it's you and me,\" Margo said to her as Kelly dragged her onto the floor. \n\nThe band, \"Boudreaux's Bayou Boys\", was playing a Cajun waltz, as the couples took the floor.\n\n\"Ya know, this ain't so bad,\" Eddie said as he carried Tamara above the dance floor.\n\n\"True, Edward,\" she said, giggling. \"I'm the only woman here who doesn't have to worry about her partner stepping on her feet,\" she continued before going back to keeping the count for him until he got the hang of it.\n\n\"Alright,\" Harry said, \"I'll allow as dancing with one of my beautiful wives is not the horrifying exercise in making a fool out of myself that I was afraid it might be, in spite of my brave words.\"\n\n\"Harry, you're doing beautifully,\" Carol replied.\n\n\"I wonder what this song is?\" Margo mused as she and Kelly swirled by.\n\n\"It called 'La Valse De Kaplan',\" answered a man's voice from behind them. Around Margo and Kelly came Nicki, dancing with a short, skinny bald man with a pleasant face full of laugh lines who looked to be in his sixties. \"It a classic Cajun waltz, make ya dance de night away.\"\n\n\"JC!\" Carol said.\n\n\"Hey chere, see you brung some peoples. Dey friends o' yours I reckon,\" he said, \"but why you leave dis pretty li'l rose sittin' dere by her own self?\"\n\n\"We didn't have a partner for her... and before you ask, I was gonna be busy teaching my husband here how to dance to pull off Tony's old trick of dancing with two partners.\"\n\n\"Then it a good thing I come along. And you say he you husband! When you get married, girl?\"\n\n\"Well, officially not yet or else I would've gotten you an invite.\"\n\nThe song ended and they all headed back to their table. After introductions a few explanations were made, JC said, \"So de four o' you, you be married all to each other, you two ladies be together, Eddie de big man be with the tiny girl... you sure you of legal age, chere? And so out o' all dese lovelies, de only unattached woman be dis ravishin' blonde creature?\"\n\n\"Ahyup JC, afraid so... we only brought you one woman to charm tonight,\" Carol replied with a grin.\n\n\"Oh chere, you know me better den dat, I try my damndest to charm all y'all... but dis de only one I try to convince to come home wit me tonight,\" he said with a laugh. \"Now lemme get back to de kitchen, see what I gots dat I kin feed y'all wit.\"\n\nAfter another round of drinks the group headed back out onto the dance floor, Carol leading Harry and Nicki.\n\n\"Now, I've never led two partners before, but Tony did it all the time, made it look easy, so here we go,\" she said, taking Nicki's left arm with her right and putting her right arm around Harry's waist. \"You two figure out how you're gonna hold on to each other.\"\n\nAfter a few turns it was evident the arrangement wasn't going to work. Harry said, \"Nicki, you take this dance with the adorable one, I'll go have a seat and watch all y'all look gorgeous.\"\n\nHe'd no sooner sat down when a waitress passed by and he ordered another beer. Before it arrived, a plate of appetizers made it to the table and at the sight of food, all thoughts of dancing left his friends' and family's minds.\n\n* * * * *\n\n\"Oh my God, JC, that was incredible!\" Carol said, pushing herself away from the table. \"If you even think about offering us dessert I'll explode.\"\n\n\"Me too... I've been to New Orleans and I didn't eat nearly this well,\" Margo said. \n\n\"Well t'ank you ladies and gentlemen, it was my pleasure.\" Jimmy Claude had pulled up a chair when dinner came out and had sat talking with them while they ate. \"You know, seein' Miss Karen and Miss Tricia together remind me o' my Aunt Jeanette.\"\n\n\"Uh oh, here we go,\" Carol whispered sotto voce, a big grin on her face.\n\n\"You be polite li'l girl or I turn you over my knee an' no spank you,\" Jimmy Claude replied, the matching grin on his face giving the lie to his words. \"Now Aunt Jeanette, she live out on de Bayou du Morte, or like we called it, de Bayou du Merte, way back some ways northeast o' Baton Rouge. We used to go visitin' her about onest a year, maybe twicest. She dindint have too much use for mos' peoples, an' since she scare de hell outta dose dat know her real well, much less dem dat dindint, mos' peoples dindint have much use for her. \n\n\"She was a big ol' woman, used to hunt de gator all by her own self an' I ain't talkin' dem li'l ol' gators you see 'round de cities an' such, where gators been hunted damn near till dere ain't none left so dey all small an' puny. I'm talkin' big bull gators had nottin' to do but eat anyt'ing and everyt'ing dat get close to 'em for years and years. Well, she go off in her boat at night, she come back wit one o' dem, we say \"yes ma'am\" no mattah what she tell us to do and we go do it.\n\n\"Well, eve'ybody in de family done knowed for years dat she ain't got much use for de mens, not to say dat dere was many dat would get too close to her anyway cause she scare dem so much, bein' so big and strong, although dey nevah admit dat, dey just say she too damn ugly, an' it true, she weren't no bathin' beauty but she was a handsome enough woman long as you wasn't scared of her. But anyway, de way I heared it tell, one day she went down to Baton Rouge and about t'ree or four days later she showed up at my cousin Moline's house wit de prettiest li'l girl you ever seen, name o' Polly Ann. Frail, delicate li'l ol' thing, an' Aunt Jeanette say to eve'yone \"Dis is my wife, Polly Ann, y'all treat her right or I'm'a whomp you.\" And, like mos' t'ings where my Aunt was concerned, dat settled de matter.\n\n\"She started comin' to de family get-toget'ers and holidays and such, an' always pretty li'l Polly Ann be with her an' pretty soon de family got over itself an' eve'ybody jus' accepted dat dat was de way t'ings was gonna be, and it dindint hurt none dat Polly Ann was de sweetest, kindest li'l ol' t'ing, always helpful an' polite an' jus' a joy to visit wit.\n\n\"Well, even back in de bayous de attitudes o' de times, an' dis woulda been de late fifties, done be stickin' dey nose in an' one Sunday when Jeanette an' Polly Ann was visitin' wit my family, we was all out in de front eatin' some big ol' slabs o' gator dat she had done brung, up drives de parish priest in his pretty car, come to visit wit his parishioners de Duvalier family.\n\n\"Don' nobody t'ink too much about nothin' cause we all used to Jeanette and Polly Ann but onest dis priest get it figgered out in his head dat dey be livin' together like dey was married an' all, well he commenced to preachin' an' yellin' an' tellin' dem dat dey was gonna be goin' to Hell an' it was startin' to upset li'l Polly Ann, cause she was real religious. Well we all knowed de signs but de priest he dindint an' so when Jeanette ast him \"Father Mondragon, is de Good always gonna triumph over de Evil?\" he says \"Yes.\" And she ast \"And de Evil, it never, ever, never ever gonna defeat de Good?\" an' he answer \"No.\" \n\n\"Oh my God, I couldn't have watched,\" Eddie whispered.\n\n\"We was kinda sorry we did, Mr. Eddie, cause she reach down and picked up a big ol' length o' 6x8 dat we had got to replace a porch post, swung it lickety-split an' she damn near chop his leg in half wit dat board, she hit him so hard. Dey prolly heard dat thigh bone break all de way in New O'leans.",
        "\"Well, as you might imagine, he layin' on de ground all of a sudden, screamin' an' cryin' an she lean over him an' say \"Well, I just whomp your ass with one shot, so I guess I'm de Good an' you de Evil an' me an' my Polly Ann, we'll make it to Heaven afore you do. You give my family any trouble over dis I'm'a come find you an' sen' you off to see if I'm right.\" Den she look at my big brother Reynard an' tell him to drive the priest into town and get him to a doctor. \n\n\"An' I'm'a tell you what, dat priest never said another word on the subject of de homosexuality.\"\n\nAs the table laughed Jimmy Claude sat back and bathed in the appreciation of his audience. As the laughter was dying down Karen said, \"Well Jimmy Claude, I'm honored that I remind you of your Aunt Jeanette.\"\n\nIn Jimmy Claude's eyes the twinkling light of 'I-got-you' shone. \"Oh no chere, you done got me wrong, you remin' me o' Polly Ann... I done tolded you, Aunt Jeanette was a BIG ol' girl...\"\n\nThere was little doubt in the restaurant that night as to which table had laughed the loudest.\n\n* * * * *\n\nAs the group made their way back to the limo, on the very edge of running late for their appointment at Carmine's, each and every one of them had a black card with \"Jimmy Claude's\" and a phone number on it, printed in gold.\n\n\"So, we all passed,\" Patricia said.\n\n\"Yep,\" Carol replied, \"not that I had any doubts, but it's nice to see it validated.\"\n\n\"I cannot believe I walked into that,\" Karen said, grinning. \n\n\"I can,\" Patricia answered, hugging her partner close to her. \"You're Harry's partner; you're a natural straight man.\"\n\n\"Hey, I resemble that remark... well, all except for the 'straight' part... and the 'man' part...\"\n\nIf there had been such a competition, they would've won loudest group in the parking lot as well. "
    ],
    "authorname": "Fillmore",
    "tags": [
        "drama"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/oil-of-roses-ch-32"
}