{
    "title": "Kiss Me Cate Pt. 06",
    "pages": [
        "I hope you enjoy reading this as much as I did writing it. \n\nI've had a long standing love of Irish lasses. Their eyes, complexion, smiles have always warmed my heart, and a few have broken it.\n\nConstructive criticism as always is welcome in the comments, others will be dealt with in the usual manner.\n\n*****\n\nWe sat at the gate, the noise of bustling humanity racing around us. I was nose down in my phone, Cate's arm looped through mine as she watched the ebb and flow of the crowd.\n\n\"So far everything looks good, cloudy with intermittent showers in Dublin.\"\n\n\"That's not really a surprise.\" She said leaning her head on my shoulder with a smile.\n\n\"It's warmer there than it is here.\" I said laughing.\n\n\"That's why I made you dress like this.\" She said tugging on the fabric of my jacket, which was over a sweater, and a shirt and a tee. I felt like I was layered for a trip to the Arctic, or New York in Winter, which is can often be similar. \"By the time we land you'll be glad you can take off a layer.\"\n\n\"Are you going to be okay with a manual for a rental car?\"\n\n\"I think I can handle it. It's here that they seem to be a dying breed.\" She patted the front of my coat. One of the gifts she'd gotten me for Christmas was a leather travel wallet which held my passport, and documents. \"Got everything you need in there?\"\n\n\"Everything I need is right here.\" I said kissing her forehead.\n\n\"Look.\" She whispered with the slightest lift of her chin. I glanced side-long in the same direction, to see a toddler sitting on the floor in front of his parents playing with a stuffed animal. \"He's in his own little world. He'll probably never think twice about the fact that he's sitting in a busy airport, surrounded by thousands of people, coming and going to somewhere else.\" \n\n\"He'll never realize that it once it took months, even years to traverse the globe until he learns about it in school.\" I said smiling. \"Do you like kids?\" I said looking down.\n\n\"A bit soon for that isn't it?\" Her grin lighting her face. I rolled my eyes in fair imitation of one of her usual expressions. \"I like them well enough. I'm not sure I'm at that stage in my life though. Diapers, getting spit up on, sleeping in snatches if at all, and the crying.\" She did roll her eyes.\n\n\"Sounds like Auntie Cate has some experience with the little one?\"\n\n\"A little, Sinead took to it like a duck to water once Declan was born. I gave her a break as often as possible, but sometimes he was inconsolable and wanted his mum.\"\n\nI grinned. \"I know you don't even realize how strong your accent is right now, but it is the most adorable thing I've ever heard.\"\n\nShe laughed. \"Probably because in a few hours I'm not going to have people wondering what I said if I don't enunciate every syllable in the Queen's English.\" Which she did just then. \"It's going to be fun watching you the first time you hear a few strong accents and wonder what in heavens someone said.\"\n\n\"I'm sure glad I have a translator. Dia duit, conas at\u00e1 t\u00fa?\" I tried slowly. Cate watching my mouth sound it out.\n\n\"Doot, not do-wheat. You might hear it pronounced like, hewt, as well. The emphasis is at the beginning, fast at the end.\" She corrected. I repeated it. \"Good. People will know you're not Irish, but they'll appreciate the effort.\"\n\n\"That worked well for me when I was in France. If I at least tried people would light up and help me. I saw other tourists who wouldn't try and they would get the sourest of looks from the natives. I remember, I was at a little cafe in the countryside with my host family, and they were chattering away, and I was trying to pronounce some of the food on the table. Jean Baptiste was helping when an old guy sitting at a table nearby interrupted and corrected both of us. I guess it was a particular kind of sausage there on the cutting board. Pas seulement une saucisse. When he found out I was American he lit up. He spoke in heavily accented English about when the Americans came during the war to liberate his village. He didn't look like it but I did the math in my head and even if he was a kid then, he had to be nearly ninety. He grinned and asked if I had any bubble gum like they did. Sadly I didn't or I would have gladly given it to him.\" I said smiling.\n\n\"It's amazing when you put some effort into something how quick people are to help you, but if you just go off half-cocked and demand things be done your way they'll ignore you just as quickly. I think knowing that, is the sign of a good traveler. I had the hardest time when I was in Munich until I fumbled through some basic German phrases. As soon as someone recognized I spoke English they would change almost immediately without batting an eye.\" She paused. \"I'm glad that they've made Irish language a requirement in school again. I'd hate to think of it fading away.\"\n\nI nodded. \"My folks decided to trace their roots up into Canada years ago and went on a two week trip driving up through Quebec and out to the Maritime provinces. Mom found it odd that the English speakers had such animosity towards the French, and vice versa.\"\n\n\"Cultural survival, sort of like the English. Everywhere they went, they did their best to try to bend everyone to their will. In some places they succeeded, mostly through sheer bloodshed, ask a Scot, just the mere mention of the English is enough to get you in trouble in some places.\" She said referring to a remark I made the day we met.\n\n\"Aye, I'll never call ya an English woman again. I was clearly mistaken and ask your forgiveness for my carelessness.\" I said softly so as to not mock any Irish people who may be sitting around us.\n\nCate smiled. \"Be careful with that. Some people might take offense.\"\n\n\"I only do it to tease you, and I'd like to think I'm a bit more culturally sensitive than that.\"\n\n\"Oh really. This from the man who said he was going to wear a hat covered in shamrocks and a Boston Celtics jersey to meet my father.\" She said squinting harshly at me.\n\nI laughed and held up my hands. \"I'll have you know that I don't own, and did not purchase either of those items. I'm not even sure I packed anything green to wear the entire trip.\"\n\n\"Good, it's nice to see you exercise your cultural sensitivity with others at least.\" She added smartly.\n\n\"All this time I thought I was being funny. I'm sorry.\" I said and kissed her on top of the head.\n\n\"Oh I'm only teasing you.\" She said with a smile.\n\n\"Is bre\u00e1 liom t\u00fa go m\u00f3r, and if I didn't say it right, then it's one I'm definitely going to practice.\" I said. Cate smiled, the tips of her ears turned pink.\n\n\"That one you got right. I love you very much as well.\" She tilted her head up and kissed me. A small ding came from the board for our flight and I looked over, there were agents at the counter. The announcement for boarding came soon after. We got called early due to the row of our seats and Cate and I collected our carry on luggage and got in line. \"A fine dinner, a little nap and you'll be in the old country. Are you excited?\"\n\n\"Very!\" I said, and it was completely genuine. Despite any trepidations I had about meeting her family I was excited to be going somewhere I'd never been. I've often wondered if everyone has that explorers itch to go to new places and see different things, or if it's just a select few.\n\n\"Wow, it feels like I'm on a space mission.\" She said noting the led screen, directional lamp, plugs and switches around her seat. \"Mission control, we are a go for lift-off.\" She said chuckling.\n\n\"This is nice.\" I said laughing. \"I just wish they weren't separated seats.\" \n\nShe leaned over and gave me a kiss. \"We'll have plenty of time to cuddle when we get there.\"\n\n\"So you say. You won't be looking down the barrel of your fathers gun.\" I said laughing. It had been an on-going joke between us that her police sergeant father was going to be the characteristic father and greet me armed and with an understanding of how things were going to be. She assured me he would not be like that, and that he preferred fist fights.\n\nA short while after take-off sipping champagne, there was an announcement stating that people on the starboard side could look out into the clear darkness and see the lights of Boston in the distance, and the curved outline of Cape Cod a little closer and that our slightly northern route would take us close to Nova Scotia before setting out across the Atlantic. Since it had been my longest flight as an adult, Cate gave me a few pointers, no more drinking after the champagne, only water. Don't eat a heavy meal, and try and sleep since it was an overnight flight.\n\n\"It will ease the jet lag. When we arrive in the morning, we'll get settled first before we go to my parents.\n\n\"Get me settled.\" I corrected.\n\nShe shook her head. \"Before we left, I let Mum know I wouldn't be staying at the house. I'd be staying with you.\"\n\nMy eyebrows went up at that. \"How did that go over?\"\n\n\"Well, she understood. I'm sure she would have rather had me at home, and I'm not saying I might not stay a night or two depending on how things play out over the next two weeks.\" She added raising her own eyebrows in reference to the amount of time we would have there. \"I'm sure she'll calm Dad down after she tells him. They're a bit conservative. I'm sure if I pressed him on it he'd consider it improper that I were staying with a young gentleman that I'm not married too. They also trust that I won't make them grandparents out of wedlock.\" She added chuckling.\n\n\"You make it sound like the 1950's here in the states. Parents sleeping in twin beds on either side of a nightstand. The girls always wear dresses, the boys in starched, white dress shirts and slacks. School dances where the boys are on one side of the gymnasium and the girls on the other, with a lot of sharp eyed chaperones between.\"\n\n\"I like to keep you wondering.\" She said with a wink. \"It's my turn to tease you.\" Cate relaxed, reclining her seat and spreading the thin little blanket over lap and nodded off. I tried to join her but was still restless, eventually I fell asleep.\n\nI'm not sure how long I'd slept when I heard a soft whisper above me. \"That's the sweetest thing I've ever seen.\" I sighed deeply and peeked up to see a flight attendant standing nearby talking to another. They quietly moved up the aisle. I stretched a bit and realized that they may have been talking about us. At some point, even with the space shuttle seating, we'd found a way to hold hands while we slept. I closed my eyes and faded off again.\n\nA time later I was woken by the ping from the intercom. There was no announcement but the lights were coming up in the cabin slowly. The flight attendant was working her way back from the few rows ahead of us.\n\n\"Good morning. We're just passing over the coast into Ireland, and should be landing in about thirty or forty minutes depending on air traffic. Would you and your companion be so kind as to bring your seats up and stow any loose items in preparation for landing, please.\" I nodded and gave Cate's hand a strong squeeze.\n\n\"Rise and shine sleeping beauty.\" I got a gimlet eye in response.\n\n\"She at least got a kiss.\"\n\n\"I haven't seen my toothbrush in hours so I apologize ahead of time.\" I leaned down and kissed her.\n\n\"You taste like an old cheese.\" She said laughing as she sat up, bringing the seat upright. She folded the blanket neatly and laid it across her thighs.\n\n\"That's fair since that was the last thing I ate. I'm guessing so close to landing we'll be out of luck for coffee.\"\n\n\"We'll get some when we land. I'm sure there will be a few coffee stands open while we wait for the luggage. We might even find you a bacon roll.\" She said smiling.\n\n\"My first introduction to Irish cuisine?\"\n\n\"Something like that. We need to get you through immigration as well. They'll want to dip in your wallet for a few Euros for all that loot we brought with us too.\"\n\n\"We're going to be in the airport until lunch time!\"\n\n\"It won't be that bad, you've already filled out the paperwork, they'll probably do a cursory check, stamp your passport and hand you the bill.\"\n\n\"This trip is going to cost me a fortune.\" I said rolling my eyes. Cate just gave me that look she was getting famous for, that of an overly tried school marm with a particularly slow student.\n\n\"I'll just be glad if they don't arrest me for bringing you along on this trip.\" She said archly. I couldn't help but laugh.\n\n\"I promise to behave.\"\n\nThe pilot came over the intercom giving us an update of the air traffic, we should be able to land in about fifteen minutes, the temperature was a chilly eight Celsius but the weather was fair with only a few wispy clouds. Another voice repeated the the announcement in Irish right after.\n\n\"Chilly, they should try the Great Lakes in February, then they'd know chilly.\" I said chuckling. Cate smiled at me and gave my hand a squeeze.\n\nA few minutes passed and the pilot announced there would be about a ten minute delay due to a back up at the gate we were directed too and would be landing a few minutes later than expected.\n\n\"They're probably herding the sheep out of the way.\" Cate said with a grin. The woman across the aisle from me heard and chuckled.\n\nI leaned over to her. \"It's my first time in Ireland, I don't know if she's kidding or not.\" Which sent her from a chuckle into fits of laughter.\n\n\"Beidh turas\u00f3ir\u00ed Creidim rud ar bith.\" Cate said aloud. She leaned over to me. \"Tourists will believe anything.\" She translated quickly. That lady kept laughing.\n\n\"I'm guessing you're a returning native then?\" I asked.\n\n\"I flew to New York for work. That was the best thing I've heard all week.\" She said still bubbling with laughter.\n\n\"Ugh, you had to work over the Christmas holiday?\"\n\n\"Goes with the territory. I'm a musician.\" She said smiling. \"I'll celebrate with the family when I get home.\"\n\n\"You weren't kidding about music being in your blood.\" I said to Cate.\n\n\"That's a bit much, at least in my case, but it's very important to us. Our history was passed down by story and song, not as much in the written word.\" She said smiling and spoke past me to the lady across the aisle. \"What do you play?\"\n\n\"Harp.\" She said laughing. \"Stereotypical isn't it?\" Cate joined her in a laugh. \"What about you?\"\n\n\"Piano, my mum taught a bit, and organ as well.\"\n\n\"She sings too.\" I added. Cate rapped her knuckles into my thigh.\n\n\"I do not. Well not outside of the house anyway.\" She said with a blush.\n\n\"Don't hesitate to sing as often as you can.\" The lady reproached her. \"You don't have to be the loudest or most talented to get joy from it.\"\n\nThe pilot announced that we were next in line for landing and should be at the gate in ten minutes or so and gave a few quick directives to the flight attendants to take their positions as well.\n\nWe parted company with the lady as we disembarked. She wished us a good trip and welcomed Cate home. Cate wished her a welcome home as well. Cate held onto my shoulder for a moment and stretched her legs like a stork standing up after a long time idle.\n\n\"Not enough leg room on the plane?\"\n\n\"Not enough movement for seven hours.\" She said smiling. \"We'll get plenty now that we have to run around and gather our things.\" We made our way to the luggage claim and took a seat waiting for the luggage to start appearing on the carousel.\n\nDespite the heated and short argument we'd had last week. I'd moved money into a new account and requested joint credit cards to use on the trip. I'd also given her some of the Euro's that I'd picked up since I was sure she'd exchanged all but a few coins when she arrived in the US. \"The only reason I got your name printed on it was so that nobody would think you'd stolen it.\" I looked at her sternly. \"Otherwise I'd have just added you to my current card as a signatory. It's not carte blanche to go shopping, though you have that if you want it, it's security if we need it.\" I told her if it bothered her that much then she was to bury it in her wallet, if she needed it she wasn't to hesitate to use it because that's why I got it for her. Cate grudgingly admitted it was a good idea to have a back up.\n\nCate had found a change machine and converted a bill into some coins and unlocked a luggage cart for us. The luggage didn't look any worse for wear and I was glad since there was a nice bottle of Kentucky's finest bourbon in there for her father. We got out of the way and gathered our documents and passports and went to the customs queue. Cate went through quickly, I assume it was due to the Irish passport and short declarations list. We'd separated it so she wouldn't have any fees or taxes to pay and I had the bulk of the gifts we'd brought in my cases.\n\nThe customs agent lifted and searched the bags. He checked the size of the bottle and seal. \"First time meeting her father.\" I said conspiratorially, tilting my head towards Cate who waited at the end for me. He looked up and back down with a slight grin.\n\n\"Good idea.\" He went down the list of the form and saw nothing wrong and slid me down the beltway. \"Welcome to Ireland Mr. Butler.\" He handed me my documents and directed me to the window. I was allowed to zip up the cases and made my way there.\n\n\"What was that about?\"\n\n\"What?\" I got the look. \"Oh he was looking at the bottle of bourbon and I said it was to appease your dad for debauching his daughter.\"\n\n\"You did not!\"\n\n\"I didn't.\" I said laughing. \"I said it was a gift for that beautiful lady's father, that's all.\"\n\nShe gave me the look a bit longer and let it slip away with a sigh. We found the car rental counter and as is usual with car rental agencies the world round, we had to hassle and harass to get the rental I'd requested. I knew we'd need a larger car due to the luggage. I also knew what Europeans considered a large car was a sub-compact in the US, being taller than Cate's five foot nine frame there was no way I was going to fold myself into a Mini for the next ten days. Before things got out of hand we were handed the keys to an Audi, a significant upgrade from what I wanted, but I wasn't going to complain.\n\n\"Ah ah ah! That's my license and insurance information.\" She said swiping the key from the counter. \"Besides, I'm not letting you drive the thing in the city, I'd like to survive this trip.\" She said with a grin.\n\n\"Just remember, you're here in the old country, drive on the wrong side.\" I said laughing. \n\nWe found the car and loaded the luggage. I went to walk around to the passenger side. \"Wrong side.\" She laughed. \"Pretend I'm letting you drive at home.\" It was an odd feeling to be on the left side in the front seat and not have a steering wheel in front of me. I had printed the directions to the apartment I'd rented online and pulled them out. Cate looked them over and said so long as there was no construction diversions she knew how to get to the area at least. \"Phoenix Park is a nice area.\"\n\nCate pulled out onto the M1 and headed into the city. She turned onto the M50 and soon we were getting off the motorway in an area called Castlenock.\n\n\"Wow, town homes seem to be pretty popular here.\" I said noting the long multi-home buildings.\n\n\"Economy of space. You may be rather surprised at the size of this apartment when you get there. Your apartment back home is bigger than a lot here.\"\n\n\"Mine isn't very large either. I looked at some much larger before I chose that one.\"\n\nCate smiled as she pulled into an apartment complex and located the unit. I got out and looked around nodding. I'd called the lady I was renting from when we got through customs, she said she'd be able to meet us when we arrived.\n\nI knocked on the door of the apartment and a middle aged woman opened the door. I introduced myself and she beamed.\n\n\"Well hello there Mr. Butler, Miss Murray. Welcome to Ireland, and in your case, welcome home.\" She gave Cate a little wink. She showed us around and gave us a list of contacts including herself and another in case of any issues arising with the apartment. She had a stack of local travel brochures laid out on the entry way table and a map of the area showing grocery shops and a few pubs. \"Though with your own guide I'm sure you'll do very well.\"",
        "She left soon after giving us a quick run down on the appliances. \"Wow this is small.\" I said chuckling.\n\n\"Actually it's not as small as I expected.\"\n\n\"They make them smaller than this?\"\n\n\"Yes, space is a premium, the smaller it is the cheaper it is to heat and keep up. Doesn't do well for elbow room, like your place.\"\n\n\"Our place?\" I said gingerly. She rolled her eyes and grabbed the key.\n\n\"Let's unload the luggage and explore a bit hmm?\" She had a glint in her eye and I wasn't sure why. We unpacked and hung up our clothes. \n\nWe bumped and rubbed quite a few times in passing, and at one point I took her by the hips because I couldn't get past and leaned in and gave her a kiss. \"You know, these tight quarters have some benefits.\"\n\n\"That they do.\" She said turning fully so she could kiss me back.\n\n\"Wait, did you call your parents to tell them we're here?\"\n\n\"I texted Mum, she says we're to be round for tea at four, any later and she's sending Da after us.\"\n\n\"Well it's ten now. What shall we do to while away the time.\" I said looking over at the bed.\n\nShe rolled her eyes at me. \"We'll have plenty of time for that later. If you lay down now you'll fall dead asleep, I know that much about you.\" We finished unpacking and Cate locked up and headed to the car. She drove east through Phoenix Park and followed the signs to the Dublin Zoo.\n\n\"You're taking me to the zoo? Aren't I a bit old for that Mum?\"\n\n\"I can't help it, I love it.\" We entered the zoo and toured the exhibits, Cate laughed at me for exclaiming at the wolves. \"They may be from America or Canada, the sign says they're North American Timber Wolves.\"\n\n\"They're probably from the US, that one looks like he's got a gang tattoo and a switchblade.\" I said sending Cate into gales of laughter. \n\nWe stopped in a local pub for some lunch. \"What's this?\" I pointed to an item on the menu.\n\n\"Boxty, they're like potato pancakes, good with a dollop of sour cream.\"\n\n\"Hardly a meal on their own now are they. I think it'll be the bangers 'n mash.\"\n\n\"Good choice.\" She said with a smug look.\n\n\"You're enjoying this too much.\"\n\n\"What, waiting for you to decide on lunch?\" She laughed.\n\n\"The power has changed hands, now I'm on your turf and don't know which way to turn.\"\n\n\"I don't think it's a power issue, I think it's more about comfort. You don't look too uncomfortable, but you do seem a little more wary of the surroundings. You gape like a tourist.\" She said smiling.\n\nWe walked through the different areas not stopping at any one attraction throughout the afternoon. \"We'd best get back and clean up. It's nearly showtime.\"\n\n\"Ugh.\" I said rubbing my chin.\n\n\"Are you alright?\"\n\n\"Sure, what's the state of emergency medicine around here? I'm sure I'm going to need it once your father sees that smile on your face.\"\n\n\"Don't you think he'll be happy to see that I'm happy?\" She said threading her arm into mine and laying her head on my shoulder as we walked slowly.\n\n\"I think he'll see that you're happy and want to throttle me for it!\" I said. I thought a moment. \"Are you happy Cate?\"\n\nShe looked up quickly and stopped walking, turning me around by the arm. \"Of course I am, don't I look it?\"\n\n\"You do. I just wanted to be sure.\" I said with a wink and gave her a kiss. We continued on back to where the car was parked and drove back to the apartment. We stopped on the way to do a little grocery shopping, and get some things to have on hand for breakfast the next morning. After all Cate pointed out, what was the point of getting an apartment and eating out every meal.\n\nGetting ready to meet a girls father is one thing, but this felt like I was suiting up to go to my own funeral, and I said as much to Cate.\n\n\"Relax, you'll be fine.\"\n\n\"I probably wouldn't mind half as much if you hadn't kept teasing me about his size and likelihood to choose fists over firearms.\" I said pouting.\n\n\"Heaven help me.\" She rolled her eyes, grabbed me by the cheeks and kissed me. \"You've been teasing me forever. Surely you can tell I've been doing the same to you. We'd best get going. We've got a bit of a drive, they live on the other side of the airport in Swords.\"\n\n\"Swords? Even where they live is the name of a weapon!\" I said, shock and humor blended into a scared look. Cate just rolled her eyes again and grabbed me by the arm propelling me towards the door. Traffic was moderate, and disorienting for it kept appearing from other directions than I was used to. We made it in one piece to a quiet road lined with townhouses. She pulled up in front of an end unit and parked on the street. It looked like a working class neighborhood a few cars here and there, though there wasn't one in the drive. I only just realized that Cate was watching me closely. \"Is this where you grew up?\"\n\n\"No, they moved here after we moved out, well most of us, Shannon has been known to linger about here and there from the stories I've heard. Got into a row with a flat-mate and stayed for a few months while she got back on her feet.\" Cate knocked on the door and a moment later I heard the bolt click and the door open. Cate's mother was tall, though not quite as tall as her daughter, dark haired with only a few silvered streaks, and had the same pale blue eyes.\n\n\"Catelyn!\" She shouted and grabbed her through the open door hugging her close.\n\n\"Hello Mum.\" Cate beamed.\n\n\"Come in, come in!\" She ushered us in with excited swiftness. \"You'll be Dylan I suppose.\" She said smiling up at me.\n\n\"I am. Thank you for inviting me Mrs. Murray.\"\n\n\"Oh, you were right Catelyn, he is a handsome one.\"\n\n\"He'll do well enough.\" Cate said with a smug look on her face. It was my turn to give her the raised eyebrow look she was known for, she grinned back at me.\n\n\"Come in and sit. Your Da will be home in a little bit I'm sure. There's been a rash of thefts going round keeping him busy. Shameless thugs preying on people, and at Christmas no less.\" She added disgusted.\n\n\"How is everyone? Is little Declan driving Sinead crazy yet?\"\n\n\"Oh that boy's got a bit of the devil in him, but then don't all boys.\" Mrs. Murray rolled her eyes. Now I know where Cate got that trait. \"Oh, present company excluded.\" She said smiling shyly towards me.\n\n\"I assure you that you're correct, as one of them myself, the amount of the devil in the boy varies with age, but never completely goes away.\"\n\n\"Shannon is away in Cork playing with friends at one of the local hotel pubs. I hope she gets an audition before long. She's been seeing some rascal down there.\" She added with a little scowl.\n\n\"Catelyn tells us you're a student at the university too.\"\n\n\"I am.\" I went into a short description of what I was studying and hoped to eventually do after graduating. \"That's so exciting. I spent my years teaching literature and drama at secondary school.\"\n\n\"High school in the US.\" Cate added softly.\n\n\"Cate tells me you teach piano as well?\"\n\nCate's mother beamed. \"Yes. I love it too. Do you play Dylan?\"\n\nI shook my head. \"I'm not musically inclined at all.\"\n\n\"Well you should take a lesson or two from Cate. She was my prize pupil.\" She said with a wink.\n\n\"He doesn't believe I know any more than Chopsticks.\"\n\n\"Has he not heard you play?\" She asked incredulous.\n\n\"Well I don't have a piano in New York.\"\n\n\"Come, come, I need to see if you remember how.\" Her mother stood and began chivying us into another room, a small study or den by the looks of it. Along the wall stood a small Spinet piano. She pulled out the bench and bade Cate to sit. She rolled her eyes and sat and began stretching her fingers and lifted the keyboard cover. She began playing Chopsticks right away and her mother let out a laugh. She progressed into something classical that I didn't recognize.\n\n\"This may be more close to home.\" She said looking up at me with a grin and began playing Piano Man.\n\n\"I wonder if my Dad ever kept my harmonica.\" I said with a chuckle.\n\n\"We're all in the mood for a melody, and you've got us feeling alright.\" She sang sweetly. I knew she could sing but usually did so under her breath with the radio. She didn't finish the song and turned to look up and slightly past me.\n\n\"Da!\" She leapt off the bench and charged past me towards the door of the room.\n\n\"Cat!\" He responded open armed, she gave him a hug and got one in return. Cate's father was a tall man, taller than I was and broad shouldered as described. Even at his age of what I guessed was his early fifties, he was an imposing figure. He was slim but wiry like a boxer. I felt myself swallow carefully hoping he was in a good mood.\n\n\"So is this the young man you were telling us about?\"\n\n\"This is Dylan Butler.\" She turned to me, \"my father David Murray.\" She was still tucked under his left arm, his right hand held out to me. I took it shaking firmly. I'd need any benefit I could get, so I started there.\n\n\"Dylan Butler, your name sounds like you're from around here.\" He said smiling. I thought I saw a small light of approval appear in his eyes.\n\n\"We'll see. I've got the family history with me, and my father said he would like a little research into it since I'm here. As far back as he knows, it may be well over a century since we've been back here though.\"\n\n\"Well there's plenty of places to research it in the city. It's a popular pastime. Either way, welcome to the old country.\" He added with a wink. \"Is there tea Maeve?\"\n\n\"Oh, I forgot! Come give us a hand Catelyn.\" They disappeared through the door and I felt my heart sink.\n\n\"Come Dylan.\" He beckoned me back to the living room and had a seat. He looked towards the door and began softly. \"Cate told me about her run in with a fellow at the university. I want to thank you for keeping an eye on her and doing what you did.\"\n\nI swallowed hard and nodded. \"I wouldn't do any less for anyone. Chad is a piece of work and I hope they throw the book at him.\" I paused. \"Then pick it up and throw it again.\" Her father chuckled. I worried about how much she had said, but knew she wasn't about ready to tell him everything we'd been doing, other than the fact that we were dating.\n\n\"I just want you to know how much we appreciate that she has someone there to turn to if she needs help. I can't say I was keen on her globe trotting ways, but her field is pretty limited here yet and I knew she may find herself abroad the deeper she got into it. She makes us proud.\" He said smiling.\n\n\"She's an amazing girl.\" I said.\n\nHis eyebrow went up slightly. There's the origin of that trait.\n\n\"If we were meeting ten years ago, I'd be asking your intentions.\" He said smiling.\n\nI wanted to say, \"If we'd met ten years ago I would have been too young to date her.\" I just smiled. \"She's wonderful, but we're just dating for now. We've only known each other a few months.\" The eyebrow went up. \"My intentions are purely honorable. That you can be sure of.\" I glanced down and back up. \"I won't say that I haven't thought of the future, but I don't want to scare her off. She seems,\" I thought how I wanted to say this, \"afraid of the future.\"\n\nHer father broke into a grin. \"Despite the fact that I'm certain she's made a good choice in you, I had to ask. She told me that you were worried you'd be looking down the barrel of a gun when we met.\"\n\nI laughed. \"Well she did paint you as a rather large and daunting figure. She was right.\"\n\nHe looked up towards the door and looked back at me. \"Truth is Cat is more like me than her sisters, they take after their mother. She's a thinker, and is smart and quick under pressure.\" I suddenly had flashback to the night someone, which I still think was Chad, pitched a rock through her apartment window. \"I'm sure she would've have fixed that fool on her own, but I'm glad she didn't have to. I taught her a few things about protecting herself before she went abroad. I wasn't overly thrilled with her decision to move to New York. You've got a bit of a reputation over there in America. It seems to have been justified in this instance.\"\n\n\"I hope you don't think it's like that everywhere. We get a bad rap, New York isn't as bad as it's portrayed on TV or in the movies.\" I said with a chuckle.\n\n\"Thing is that she's also got my stubborn streak and won't give up on anything easily.\" He stopped and looked me in the eye and sighed. \"I want to know...\"\n\n\"Trust me.\"\n\n\"Can I?\"\n\nI nodded. \n\n\"Then bide your time. She's worth the wait.\" He said with a smile.\n\nThe noise from the other room rose as the ladies came back this way. Cate gave me a sharp look over the tray she was carrying. She looked quickly at her father as well. Cate's mother took over as soon as the tray was set down and began pouring.\n\n\"Do you like tea Dylan? If not I'm sure we can scare up something else for you.\"\n\n\"Yes, actually, it was a tea shop where Cate and I first met.\" I looked over casually and noticed Cate's eyes had gone wide. \"I first saw her sitting at a table out front reading a book. I made a comment on the weather and we chatted for a few minutes and I foolishly went on my way without even making a pitch for her number. I was an idiot.\" I said smiling. \"As fate would have it we bumped into one another a few months later at school.\"\n\n\"That's wonderful! It must have been fate.\" We continued to chit-chat about school and how I was enjoying the sights so far. Cate told them about the possibility of an assistant professorship becoming available and how she'd been mentioned to fill the role. Her mother was so excited I thought she would begin to bounce in her seat like a child.\n\n\"D'ye hear that Davy, Professor Murray. Has a nice ring to it, eh?\"\n\nHer father grinned at his wife's excitement. \"Yes that does sound nice, though I'm not sure which goes first, doctor or professor.\"\n\n\"It would be Professor Catelyn Murray, PhD. One of our next courses is forensic investigation. We'll be learning how to wheedle all that info the police want out of peoples electronics.\" Cate said.\n\n\"Oh great, Professor Murray, Computer Hacker.\" He added laughing.\n\n\"Well, we need to learn how they do it so we can catch them at it.\" I nodded.\n\nCate's mother disappeared for a short while stating she needed to start supper. Cate smiled at me. \"You're in for a treat, you're second authentic Irish meal. Shepherd's pie and soda bread.\"\n\n\"We have Shepherd's pie in America.\" I said laughing.\n\n\"Not like this you don't.\" She smiled back. \"I've had the American version and it was sorely lacking.\"\n\n\"Don't tell me you make it from actual shepherds?\" I asked with a gasp. \"Does your mother need a hand?\" I sat forward to get up. Cate held out a hand and patted me on the knee. \n\n\"She doesn't even want one from me. She must have heard about the strawberry and pickle omelettes.\" Her father gave us an odd look as we laughed. \"This one,\" she said pointing a thumb at me, \"told his parents I was a lousy cook and made him a strawberry and pickle omelette our last night before leaving. He bent the truth a bit, it was a cheese omelette with strawberries on the side. A few minutes after we ate he was fishing pickles out of a jar as if I he hadn't just eaten and suddenly the story is that I don't know which end of a spoon to hold.\"\n\n\"Sounds like something your Mum would have made when we were first together.\" He said softly, checking to see if he'd been heard. Before long the house began to smell wonderful, and I had to admit I was surprisingly hungry again considering the lunch I'd eaten. \n\nWe had a wonderful dinner, it was incredibly heart-warming to see Cate so happy. I thought her cheeks must hurt from smiling so much. It was obvious she was homesick, and missed her family. I wondered if I looked that way when we were at my parents home. We had been invited back on the weekend when the girls would be home, ostensibly to meet me. We hadn't discussed it much beyond visiting Dublin but Cate stated a desire to take a tour maybe to Cork while we were here to see the countryside and her sister a bit more. We had time obviously as we were here for nearly two weeks. After dinner, over coffee, we got to know each other better. I don't know if I impressed or not but Cate's parents were still smiling as we left them early to get some rest after the travel and long day.\n\nI stretched out in the car. \"Okay, how did I do.\" I was very curious myself, but no longer concerned.\n\nCate looked over at me, a lop-sided smile on her face in the lights from the dash. \"I don't think you could have done better.\" She said gripping my leg before throwing the car in gear and driving off. I chuckled. She concentrated on her driving, it had been a while since she'd been here, I didn't want to distract her. \"Mum gave me the third degree while I was in the kitchen with her. I bet you faired about as well with my father?\"\n\n\"That's a leading question if I ever heard one.\" I said chuckling.\n\n\"Well you didn't have any bruises or a bloody nose when I came back, so you must have got along.\"\n\n\"I was surprised that you told him about Chad.\"\n\nShe let her breath out slowly. \"I didn't give him details. I just told him I had an ill set student who thought more of himself than he should, and it went awry.\"\n\n\"You told him that I was your knight in shining armor?\"\n\n\"Denim and flannel is more like it.\" She laughed. \"You look good in jeans.\" She said with a little wolf whistle.\n\n\"You should see me out of them.\" I said laughing.\n\n\"Give me time to get us back to the apartment and I hope to!\"\n\nWe got back and fumbled for light switches and divested ourselves of our coats. Cate fell into my arms without delay. When we came up for air. \"Okay, out with it. What did Dad say?\"\n\nI leaned back laughing. \"He said you were the family trouble-maker and wished me good luck with you.\"\n\n\"He did not!\" She said thumping her forehead into my shoulder laughing.\n\n\"Why does he call you Cat?\"\n\nShe giggled. \"Well it has to do with my quiet nature. I used to sneak up behind him all the time and watch what he was doing and was often startled when he'd turn and see me. He said I was quiet footed as a cat.\"\n\n\"I'll have to keep that in mind. Cate is sneaky.\"\n\n\"Mmm hmm, don't let me catch you doing anything you shouldn't be.\" She said grinning.\n\n\"Perish the thought.\" My hands slid slower cupping her backside and kissed her again. \"You look tired, maybe we should get to bed.\n\n\"I think you have ulterior motives.\" She said as I kissed my way down her neck.\n\n\"Maybe?\"\n\nWe got ready for bed, both standing over the tiny sink brushing our teeth. \"I'm impressed we can both be in here at the same time without one of us standing in the tub.\"\n\nShe spit and nearly choked laughing. \"Well she has a tub, so that's a big upgrade.\"\n\n\"I looked for one specifically in case you wanted to relax in the bath.\"\n\nCate looked up at me and toweled off her chin. Her eyes opened a little wider. \"You did that for me?\" I just nodded. I spat into the sink and looked up again and her eyes were watering.\n\n\"What?\"\n\nShe leaned in and kissed me hard, toothpaste and all. When she pulled away she was smeared with foam around a big smile. \"Seriously, what?\"\n\n\"The things you do for me, even the smallest details, are so carefully thought out. I sometimes wonder if you're real.\" Since she'd tossed the towel over my shoulder, I wiped her face off again and wiped mine as well.\n\n\"I think about you every moment of every day.\"\n\nShe let out a low growl in her throat and wrapped her arms around my neck. Somehow we made it to the bed, our clothes did not.\n\nCate laid squarely on top of me, one of her legs between mine as we kissed, the taste of mint on her lips. I ran my hands down her back taking her ass in my hands and pulling her down pressing her against me. She shifted her hips slightly grinding my hard cock between us.\n\n\"I could do this all night.\" She said running her hands through my hair pulling my head up to meet her mouth. I ran my hands up the smooth skin sliding them around to her sides, her body lifted ever so slightly. She knew where I was going and was enabling me. Her breasts filled my hands, the nipples stuck out hard and my thumbs grazed them both. She let out another low growl and bit my lip. \"You are the most obnoxiously gentle lover, ever.\" I smiled up at her, and held her as I rolled her over onto her back.",
        "\"Am I now? Would you like me to turn up the heat a bit?\" I growled and put my lips to her neck feigning a bite.\n\n\"No, no!\" She laughed and began beating on my shoulders. \"Not the neck I don't think I brought a turtleneck.\"\n\nI promptly kissed my way down her chest, taking her hard nipple between my teeth. She inhaled sharply, letting it out as a hiss. I ran my hand between her legs, the heat and moisture were incredible as I slipped a finger into her. Her hips arched looking for more as I slid it slowly upward and back out to the sound of a low moan. Her hands were on my shoulders, the need almost animal as she pushed me lower. I kissed my way down her flat stomach, tracing my way around her navel. Her hands moved to my head, attempting to direct, but not finding much purchase. I danced around, teased her as her legs parted, opening herself up to me.\n\n\"You're not going to have a hair left on your head if you don't stop teasing... ohh!\" I lifted my tongue delving into her just as she began to speak, and stopped her complaint cold. She was melting on my tongue, all warm and sticky and I couldn't get enough. I didn't let up, taking every advantage I'd learned from her body to bring her to the edge as quickly as possible. She went over like a storm driven wave crashing into the rocks. Her legs wrapped around me pulling me down hard, her back arching up to me keeping the pressure on fully in case I tried any tricks. Her moans were short and sharp as she rode out her orgasm.\n\n\"Stop. Please, stop.\" She pushed me away. \"Ooh that's tender.\"\n\n\"Sorry.\" I said with a grin as I licked my lips.\n\n\"You look like a cat who's just finished off a saucer of cream.\" She said laughing.\n\n\"Well, in a way.\" I said laughing with her.\n\nShe looked down between us and saw my cock was as rigid. She looked up at me, concern in her eyes. \"Sorry about that.\"\n\nI pushed her knees together, then flipped her onto her stomach.\n\n\"Dylan!\" She sounded worried. I spread her knees back apart and lifted her hips back up she was now on her knees. \"Dylan!\" I held her hips and slid into her. \"Oh dear lord!\" She said gasping.\n\nI was fully in her and leaned down to place several kisses between her shoulder blades. She leaned down and hugged the pillow to her. \"Is this okay?\"\n\n\"It's a little late to ask. I was afraid you were headed elsewhere. Don't be too ungentle.\" She said, wiggling her hips gently. I could see the smile on her lips when she turned her head to reply. I slapped the palm of my hand against her ass eliciting a little \"whoop.\"\n\nI began rocking back and forth, a low hum came from the pillow. I took long deep strokes, changing the rhythm and depth. She arched her head back at one point and said something unintelligible. I reached forward and took one of her hands and reached it up underneath us. I pushed her fingers around her clit, squeezing them gently. She gasped. \"Oh fuck.\" I felt her clamp down on me hard. I only had spare enough air to chuckle as I picked up the pace. She did too and began bucking back towards me urging me on. She was moaning loudly into the pillow now and I was beyond control and pushed forward once, twice and on the third I let out a long moan. I felt like I'd lost control of myself as my hips continued to flex forward. I was nearly ready to collapse when Cate actually did and fell flat to the mattress her back heaving as she regained her breath.\n\n\"Are you okay?\"\n\nShe waved a hand weakly and let it fall to the mattress with a thud. I laughed with the little breath I had left.\n\nI leaned forward on my hands, holding myself none to steadily and kissed my way up her spine. \"Remember last week when you were looking for something on the bottom shelf of the fridge at home? The view inspired tonights lack of gentleness.\" I said.\n\n\"Remind me to buy another pair of those jeans when we get home. Everything is going on the bottom shelf from now on.\" She said laughing.\n\nCate rolled over beneath me and spread her legs and pulled me down. \"Come to me.\" She said kissing me.\n\n\"Again? You're joking right?\" I said, still gasping.\n\n\"Lay your head.\" She pulled me down and nestled my head next to hers as I fell onto her, trying not to put all my weight on her. \"Rest, we've both had a long day.\" She kissed my ear and I relaxed further. I felt her slip gently from beneath me and snuggle against me, a few minutes later the bedside lamp went out.\n\nA short while later, her voice came out of the dark. \"Can I tell you something?\"\n\n\"Mmm hmm.\" I said muzzily, teetering on the brink of oblivion.\n\n\"I've had doubts,\" she turned over quickly to face me, \"about us.\" I could feel her breath on my face.\n\n\"What doubts?\" I asked pushing up against the tide that was about to take me into sleep.\n\nShe took a shaky deep breath. \"I've been worried that this isn't any more than an infatuation. A short lived whirlwind of fun and amazing sex.\" I didn't need to see the smirk to sense it was there.\n\n\"Well that's a hard life to have. I'm sorry that you're not enjoying it.\" I was suddenly awake after the punch I got in the shoulder. \"Ow! What was that for?\" I said chuckling.\n\n\"Don't be a gimp. I'm serious.\"\n\n\"Cate? Do you doubt me when I tell you that I love you?\"\n\n\"No.\" She thought entirely too long before denying it. \"Are you sure you know the difference though?\"\n\nI rolled onto my back and looked up. \"Yes, I do. At least I'm fairly certain I do. What does it mean to you?\" I set her up with a loaded question and I waited patiently for her to form an answer.\n\n\"I've always thought of it as an unbreakable connection made up of attraction, like-mindedness, respect, admiration and trust.\" \n\nI smiled. \"You have all that, so what's the matter Cate? I know you're not worried that I love you. You sat on my chest and spelled it out very specifically only a few short days ago.\"\n\nShe snuggled up to me again and rested her head on my shoulder. \"I don't know, fear I think.\" I rubbed my hand up and down her spine, the softness giving way to the individual bones, and then back to softness again. I waited to see if she would spell out what she was afraid of. \"What did you and my father talk about?\"\n\nI laughed aloud at that. \"Are you afraid that he divulged your deepest, darkest secrets?\"\n\n\"No, I'm more concerned with the possibility that you or he brought up our future together.\"\n\nThere it was, the shoe dropped. \"Well I was surprised when he thanked me for being there for you with regards to our run-in with Chad. I told him that I would have done the same for any girl and that Chad is a first class asshole. I didn't think you'd enlightened your father as to how it all came about so I wasn't going to dive into the subject. He then told me that he was glad that you had a friend in America to turn to when you needed someone. I told him that there was nothing I wouldn't do for you. He laughed and then said that for forms sake he should ask me my intentions towards his daughter.\"\n\nCate snorted. \"There it is.\" She traced patterns and whorls on my chest with her fingertips.\n\n\"I told him that we'd only been seeing each other a few months and I love you very much but we're just dating. He said that we would normally been having this conversation ten years ago, I didn't tell him that I would have been thirteen. He wouldn't mind, would he?\"\n\n\"If you were thirteen? He'd tan my hide if we were teens and I were that much older than you, I don't think it will be an issue now though.\" She added with a little laugh. \n\nI kissed the top of her head. \"Between the flight and meeting your folks this has been a long day. Don't be mad at me if you hear snoring soon.\"\n\n\"If I hear it, it will mean you woke me up with it.\" She said through a timely yawn. \"Love you.\" She tilted her head up and gave me a kiss.\n\n\"Love you too.\" I hugged her a little closer under the covers.\n\nWe woke later than usual, not having an alarm clock was one of the best benefits of being on vacation, and planned our day over breakfast. Some of the attractions she wanted to show me, and a few she'd never seen herself were on the agenda. I laughed when I pointed out that she lived here and hadn't been to some of these places.\n\n\"Sure we're a lot smaller, but I'm sure that many people in New York City haven't actually been to Liberty Island or Carnegie Hall now have they? I was a student, I didn't have a lot of free time to explore. I sometimes wonder if I'm this pale because I spent all my time in computer labs.\" She said smiling.\n\n\"Well it's still several months off, but I promise to let you out of the cave when the sun comes back out.\" I began mimicking her, \"But you do freckle terribly, so we'll have to get you sunscreen and a hat.\" She smirked, put her spoon down, reached over and began tickling me.\n\n\"Smart ass. Eat up, the city is likely to be busy this week with school out. We may have to hack around for a parking spot.\"\n\nWe visited the Dublin Castle and took a short tour of St. Patrick's. \"It blows me away to see dates that pre-date Europeans even getting to America.\"\n\n\"St. Patrick's opened around the same time as Notre Dame in Paris was even begun.\" She said smiling. \"It was a grand time for cathedral building I'd say.\"\n\n\"Well it says here that in 1861 a prominent local businessman helped to rebuild the cathedral to it's current status.\"\n\n\"That he did. His is probably one of the most famous Irish families known the world round. Since it's lunch time let me show you their place 'round the corner.\" She said grinning. It wasn't a long trip on foot but it was cold and blustery enough that we hopped the bus for a few stops, getting off at a large brick industrial complex teaming with tourists.\n\n\"Seven stories,\" I said looking up, \"you folks know how to build a pub.\"\n\nCate laughed, looped her arm in mine and we went inside. \"The man who rebuilt the cathedral was this ones son.\" She said nodding to a bust of Arthur Guinness in the ground floor visitors center.\n\nI whispered. \"I feel like a pilgrim in the Holy Land.\"\n\nCate laughed. \"Well do we take the tour first or shoot up for lunch?\"\n\n\"We take the tour, build a little anticipation for that first pint.\" I said laughing. \"Take it easy, you're driving.\"\n\n\"Yes dear.\" She answered rolling her eyes upward.\n\nWe went on after lunch visiting the modern art museum. Cate constantly worried that I wasn't having fun, and offered to do anything else. I smiled and told her that I was having fun. The truth was we could have been anywhere as long as we were together. I had time to think while looking thoughtfully at oddly shaped sculptures and strange, abstract paintings. This is what I wanted. I wanted someone to enjoy being with me as much as I enjoyed being with them. It didn't matter what we did, so long as we were able to enjoy each other in the activity. We had laughs folding laundry, we never bumped into each other in the kitchen, we danced, knowing each others next step. Whenever we were near, our hands seem to find one another, not always in a conscious grasp, sometimes in a soft touch or stroke as if to say, \"I'm right here.\" We weren't even touching but I felt something. Cate tensed like a cat seeing a rival. I looked up at where she was looking and saw a few people milling about. Her hand slipped into mine, it was cool and stiff.\n\n\"What's wrong?\" I whispered. She just shook her head gently and turned to walk into another gallery.\n\n\"Would you like to go?\" She said, her smile strained.\n\nI looked over my shoulder to where we came from trying by will of force to see what set her off. \"Someone you know?\"\n\nThe smile relaxed. \"Yes, and not someone I'd like to speak with actually.\"\n\n\"Catelyn?\" I heard a slightly accented voice from behind me. Cate closed her eyes in a long blink. \"I thought that was you.\"\n\n\"Hello Samar.\" She had a half-hearted smile on her face and stepped to her side so I wasn't blocking her. When I turned her arm snaked under mine pulling me slightly closer. He wasn't tall, probably the same height as Cate, with an olive complexion and dark eyes. He was good looking, dressed well. Oddly I didn't feel jealous with Cate firmly grasping my arm. \n\n\"You look well. How have you been?\"\n\n\"Good thanks. This is my boyfriend Dylan.\" She said turning slightly.\n\nThere it was, the flash in his eyes was unmistakable. A turbulent blend of jealousy, envy and something else, resentment maybe.\n\n\"How do you do?\" I said holding out my hand for a shake.\n\n\"Good to meet you.\" He said lying through his teeth as he gave me a quick limp handshake. I trusted my judgement and I didn't like him already.\n\n\"How have you been? I'd heard you had gotten a job in New York.\"\n\n\"I did. That fell through, but I found another as an assistant professor at a university upstate.\"\n\n\"Decided to not come running home?\" He said, the taunt clear. I flexed my arm, Cate held it tightly. I felt the hair on my neck starting to rise. If he kept this up they'd be cleaning blood off the floor soon.\n\n\"No, I don't give up that easily. You should know that.\" She said piqued. There was a story I was sure to hear later. \"Have you found work here?\"\n\n\"Yes I interned at a firm here in the city and got hired on permanently.\"\n\n\"Samar studied international law at the university.\" She said in an aside to me.\n\n\"Nice, that's got to be a lucrative field.\"\n\n\"I do well.\" The expression on his face was smug and easily punchable. I forced myself to relax my hand from the fist it was forming. \n\nI thought about a retort, and before I could say anything Cate jumped in, \"Dylan owns a software company in the States.\"\n\nI could go with that. Samir's beady little eyes opened wider. \"That's great.\" The jealousy ticked up a notch.\n\n\"Thanks.\" I wanted to say something about hitting my first million while still an undergraduate but decided to not stoke the fire.\n\nThere was an awkward pause. \"So are you here for the holidays?\" He asked. Cate nodded.\n\n\"Yes, a little sight seeing and back to work next week.\"\n\n\"You do have to get back to your doctoral thesis.\" I reminded her, hoping that would figuratively flick his nose. I turned to him. \"All work and no play, that's why I insisted she take some time off and come home for a visit.\" I didn't have to look. I could feel the eye roll and smiled inwardly. Cate hadn't asked if he was seeing anyone, and I hardly think she cared at this point.\n\n\"We do have to get going Dylan. It was nice to see you Samar. Good luck with your work.\" We shook hands trading insincere niceties.\n\nWe were outside walking in silence in the general direction of the parking garage. She sighed. \"Okay, out with it.\"\n\n\"What?\" I said innocently.\n\n\"Don't give me that.\" She said giving me a nudge with her elbow.\n\n\"He treats women like accessories, not people. He's a small minded, arrogant, shit weasel, and if he'd made one more smart ass remark he would have made me get blood all over that nice marble floor.\"\n\nCate was laughing. \"You got all that in such a short visit?\"\n\n\"Am I wrong?\"\n\n\"Not in the least, your observation is one hundred percent accurate. That wise crack about not running home nearly made me hit him.\"\n\nI smiled, that's the Cate I knew and loved. I wondered how someone as terrific as she is would settle for a jerk like that.\n\n\"He likes to pretend he's some upper class gentleman, dressing the part, being a pretentious nit-wit. The truth is that he got lucky, his parents own a popular curry place in the city and were able to send him to school. I bet they were surprised he didn't take business management so he could take over the restaurant when they retire.\"\n\n\"What is this fascination you all have with curry? These places seem to be everywhere. I expected to find corned beef and cabbage everywhere.\" I said laughing. \"I turn a corner and see golden arches instead.\"\n\n\"Stereotypes are not always true you know. On any given street back home there's Italian, French or Chinese restaurants.\"\n\n\"So... Are you ready?\" I asked, wondering when I'd get the rest of the story.\n\n\"Ready for what?\"\n\nI just looked at her and slowed our pace. \"I don't give up that easily.\" I said arching an eyebrow at her.\n\n\"Well I don't.\" She snapped back at me with a scowl.\n\n\"I know. It's one of the multitude of things I love about you.\" I leaned over and gave her a peck on the cheek. The scowl dissolved into a little smile.\n\n\"That's one of the multitude of things I love about you. Unlike you, he would have started putting me down in his own little passive aggressive manner.\"\n\n\"Well I'm glad that's not a problem any longer.\"\n\n\"Me too.\" She turned and gave me a peck on the cheek in return.\n\n\"What do you say to doing it up on Friday? Dress up, nice dinner in the city, find something to do.\" I asked.\n\nShe smiled. \"I'd like that very much. We'll have to look up what's going on this week. I'm sure there's plenty since it's the holidays.\"\n\n\"Since we'll be spending Saturday with your family, and Sunday is the first so I'm sure there won't be much going on we can set out for Cork on Monday.\"\n\n\"Sounds grand. Even though we have the car I was wondering if you'd rather drive or go by train.\"\n\n\"It's a few hours on the highway and since I'm not sure I'd get us there without crashing into oncoming traffic, that's up to you. We can take the train and that way you don't have to worry about getting tired on the way.\"\n\n\"I'd like that if you don't mind.\"\n\nWhen we got back to the apartment I went online and booked a couple rail tickets, and looked around for somewhere to go on Friday night. I was able to find a table at an upscale restaurant in the city. It was in the sub level of a historic building, the chef-owner was well renowned. I showed it to Cate her eyes bugged out slightly.\n\n\"I may need to go shopping. I didn't bring anything fancy enough for that.\"\n\nI just smiled. \"Oh no, more shopping.\" Cate rolled her eyes at me and turned my head back to the screen.\n\n\"Figure out what we're doing after and I can have a better idea of what to wear.\"\n\n\"You can wear whatever you like, I'm sure nobody will care about the wrapping when they see the contents.\"\n\n\"The only one that gets a peek at the contents is you.\" She said kissing me on the head.\n\n\"Music, drama, dance, any input here?\"\n\n\"Such a discerning gentleman.\" She said chuckling. \"Are you sure you wouldn't prefer a burger and a second rate action flick?\"\n\n\"We can do that at home.\" I said turning and kissing the hand she'd laid on my shoulder.\n\n\"Music then, or a musical.\"\n\nI found a Celtic group doing a Christmas show and was able to book a couple tickets, not bad considering the late order time. She nodded when she saw the show on the page. \"No Led Zeppelin? That's too bad.\" \n\nI laughed. I knew it was a poke at my favorite music. \"No, not since the Seventies.\"\n\n\"I keep thinking of you in upper class society, it must be the accent.\" I mused. \"Then I remember just how incredible you look in blue jeans.\"\n\n\"You should see me out of them.\" She wiggled her eyebrows. I was so madly in love with this woman and she continually fortified every reason I felt that way.\n\n\"I have, and I completely agree.\" I said wiggling my eyebrows back at her. \"What is your preferred outfit?\"\n\n\"Much like any girl, a good pair of sweats, thick socks and a sweatshirt.\" She smiled. \"Though I've grown quite fond of your football jersey. You may have lost that.\"\n\n\"Why? A sudden fondness for American football?\"\n\nShe stepped behind me and wrapped her arms around my shoulders. \"Because when I'm wearing it, it feels like this.\" She hugged me tightly and set her chin on the top of my head, then gave me a quick kiss on the top of the head.\n\n\"It's yours.\" I said softly rubbing her hands as they crossed my chest. \"If you ever feel that you need the real thing, and I'm not already doing the job, you let me know. Hugs are available around the clock.\"\n",
        "\"Is it okay if I leave you behind in the morning?\" She whispered in my ear.\n\n\"No, never ever leave me.\" I replied in my most melodramatic voice. \"Okay, but only if you keep me company tonight.\" I lifted her hand and kissed it.\n\n\"That was a given.\" I slid the chair back and she sat on my lap. \"You'd have to call some of Da's boys to keep me away.\" She kissed me slowly, our tongues danced. She retreated and I followed her quickly, my ardor rising quickly. She smiled. \"You're so easy to get going.\"\n\n\"I've said it before, I don't think you realize just how incredibly beautiful you are.\"\n\n\"You keep saying that and I'll be expecting no less from you in twenty years.\"\n\nMy eyes opened wider. \"Was that a proposal?\" She blushed when she realized the gaff.\n\n\"Be careful with that word. I've warned you before.\" Her left eyebrow rose slightly.\n\n\"What are you afraid of Cate?\" I asked, a small smile spread across my lips.\n\nShe sighed heavily. \"What aren't I afraid of would be a more apt question. Things move quickly, people change, you may come to loathe me and want never to see or hear from me again, and it could all start over something as silly as what to have on a pizza.\" She made a little grimace and looked deeply into my eyes. \"You could, and very likely already do, catch the fancy of some young filly and could leave me high and dry, crying.\" She was silent for a moment and inhaled sharply. \"It's all happened very fast, and that alone makes me nervous.\"\n\n\"Do you think I worry any less about things like that? Some dashing gent sweeping you off your feet and right out of my life. I've thought about us, and wondered what it was you see in a kid like me.\" I said, my eye drifting down, not quite focusing on the slight dimple in her chin. Her hand came up beneath my chin and lifted my eyes back up to hers.\n\n\"Some dashing gent already has.\" She had that crooked little smile on her face. \"I admit our age difference made me wary at first. I felt like a downright cradle-robber.\" She laughed and slapped the thumb from my mouth. \"Wise arse. Then I got to know you, and I had a hard time believing that you weren't putting me on to get into my drawers. Which I let you do anyway.\" She said putting her hand over her eyes as she blushed. \"Despite your attempts to remain a gentleman and sleep in the next room.\" I reached up and took her hand away, she had her lower lip between her teeth and I pulled it gently free. Her voice softened. \"That night I decided to let go and see where fate would lead me rather than trying to guess it's outcome. I knew, that first night at the hotel that you were very different and very special. Everything you'd said, everything you'd done was loving and selfless, and you'd truly set yourself apart to help me at every turn. I realized then why, it's because you were already in love with me.\" She placed her hand gently on my chest. \"It just took me a little longer to realize, or admit that I was in love with you. Fear lost out that morning, and I was glad I let it go. It was liberat...\" I kissed her quickly.\n\n\"What was that?\" She asked gasping for air a few moments later.\n\nI laughed. \"I loved what you were saying and I was afraid you were about to over-think it so I had to stop you the best way I know how.\"\n\nThe most dazzling smile spread across her face as she leaned forward and rested her forehead against mine. \"Proving my point once again. You even rescue me from myself.\" Her smile faded away and her lips tightened. \"If things ever were to turn and we,\" I placed my finger on her lips trying to stop her, \"no, let me say it. That brutally honest streaks needs its say as well. If things ever did change, please let's part as friends, with respect and dignity.\" She looked at me in the eyes, and my heart nearly broke.\n\nI shook my head slowly, hers mirroring mine where we touched. \"I don't want to even consider a future without you.\"\n\n\"Nor I you, but fate is a fickle bitch Dylan, we both know that.\"\n\nI sighed.\n\n\"Do you know why I think this works so well for both of us?\" She added.\n\n\"I think I have an idea. I love you, I respect you and I don't, I can't hold anything back from you. I tell you things even though I'm not sure they're the best things to say, because I want you to know how I feel. Even more than that, I feel like we compliment one another. You're like a baby bird who needs a nudge to open her wings and fly. I'm more of the foolish bird who needs to be chivied back into the nest before I land on my head.\"\n\n\"See I knew you were a smart one.\" She said smiling. \"Promise me!\" She growled and grabbed the sides of my head pulling us closer together as she looked into my eyes attempting to look menacing.\n\n\"I hope the day never comes, but should it ever come to pass I will always be your friend first and foremost.\"\n\nShe kissed me in the center of the forehead, then between the eyes, the tip of my nose and finally brought it home.\n\n\"Who's the most beautiful woman you know?\" She asked grinning.\n\n\"Well there was this one, I met her in a nightclub in Toronto when I went with Jimmy, redhead, tall and... Ow! Ow! Let go!\" I said laughing.\n\nCate's lips were pursed and her scowl warred with her desire to laugh as she held a dozen or so of my chest hairs between her fingers and was twisting. She let go.\n\n\"Once more?\"\n\n\"It is, and always will be, you my love.\" I gave her a light smack on the backside causing her to give me a shocked look.\n\n\"How dare you make free with my body!\"\n\n\"I'll do more than make free with it, I'll ravish it like a pirate on his first night of shore leave.\"\n\nShe stood up and reached up beneath the skirt she was wearing and pulled down tights, and panties, kicking them aside before straddling my lap. She licked her lips. \"Was that enough or should I keep going?\" I looked at her for a long moment and she pushed her hips into mine grinding against the front of my slacks. I took the hem of her sweater and dragged it up over her head and tossed it aside before reaching up and pulling the straps of her bra off her shoulders exposing her breasts to my waiting mouth. \"Ah, I guess that was enough.\" She said with a breathless laugh. I reached beneath the skirt and grabbed hold of her ass and stood. \n\n\"Arrgh! Nice booty.\" Cate let out a yelp and tried to hold on to me as I turned and dropped her onto the bed.\n\n\"I warned you.\" I said as I dragged my shirt over my head and added it to the heap of her clothing and quickly unbuckled my belt.\n\n\"Oh, you beast!\" She said putting the back of her hand to her forehead swooning. She stuck her tongue out and laughed. I leaned down and slowly tugged her skirt off, while she divested herself of her bra. I stood beside the bed watching her drag her fingertips slowly up and down the length of her torso. The effect it was having was blatantly obvious and directly within her reach. She took me in hand and pulled me gently further up the bed and leaned forward taking me into her mouth.\n\n\"Ahh, who's the one ravaging whom?\"\n\nShe took a long lick up the underside before responding. \"You were just standing there with your mouth hanging open. I felt it necessary to remind you what you were supposed to be doing.\"\n\nI closed my eyes before they rolled back in my head. She used her hand to slowly stroke me into further hardness. \"You are so not going to last.\" She said grinning. I leaned forward, trying not to fall over, and ran my hand up the inside of her thigh. She parted her legs slightly allowing my intrusion. She was already slick, and I slipped my middle finger into her causing her to arch her hips upward to me. \"Ungh!\" Her breathing got shallow and fast as I stroked slowly both with finger and thumb. Her hips began to lift and circulate with my ministrations and she begged me not to do it like this. Her grip on me was firm and she was pushing me towards her, wordlessly encouraging me to mount her.\n\n\"Two can tease you know.\"\n\n\"You're not going to make me beg for it I hope.\"\n\n\"No I'd never do that. The last thing I want is to have to do the same.\"\n\nShe rubbed her thumb up the tip of my cock and slid the thumb into her mouth. \"Mmm, you know I've never really been into that until I met you.\" She smiled.\n\n\"Here's to firsts.\" I said withdrawing my finger and licking it clean. Her smile widened. She decided to roll over and grab the pillows bunching them under her raising her bottom to me. I looked down and felt my cock twitch hard. I placed a knee beside her on the bed and leaned forward sliding into her slowly. I'm not sure which one of us groaned louder. I began pumping immediately, she was right, I was never going to last, but I tried because I didn't want this feeling to end. My orgasm rose like a wave washing over me and I pushed and pushed, Cate's cries mounted as well and I stopped against all the will I had. \"Am I hurting you?\"\n\n\"Don't stop!\" I felt her hand beneath us moving at lightning pace and I plunged forward into her and tried to match the tempo. It wasn't long before the wave finally crashed over me and I took her with me over the top. She clenched down on me hard, the spasms irregular and quick. Her long low moans were buried in the pillow. Her body fell limp, supported only by still being impaled on me. A soft mewling sound rose from the pillow as I stepped back falling wetly from her. Cate slid forward and crashed limply to the mattress. I reached down and rolled her over giving me room to join her.\n\n\"You're going to kill me with that thing one of these days.\" She noted it hadn't dissipated as usual. \"Looks like it might be today.\" She said smiling and let her head drop back as she parted her thighs. I entered her slowly and we took our time.\n\n\"Dylan, do I have a single or perhaps a multitude of women to thank for your um, prowess?\" She said with a breathy laugh in the darkness.\n\n\"No, not really. I spend a lot of time on the internet.\" I said chuckling as I stroked her back slowly with my fingertips.\n\nShe leaned over and kissed my cheek, and I turned and received the next full on. \"You don't learn this on the internet any more than you can look at a drawing of a rocket ship and get a job at NASA.\"\n\nI laughed at that, then fell silent, my hand still sliding up and down her back kneading softly. I wasn't sure that I wanted to tell her and wondered if she would press the question. I got my response a moment later.\n\n\"Hmm?\" \n\nI laughed again. \"Are you sure you want to know?\"\n\n\"No, I'm not, but whomever it was did excellent work teaching you.\"\n\n\"I guess that's par for the course.\" It was only a moment before the realization dawned on her.\n\n\"Oh Dylan, you didn't!\" She sat up suddenly.\n\n\"Didn't what?\"\n\n\"Another professor?\"\n\n\"No, no. Well not really, no.\" I'm not sure how, but I felt the eyebrow rise in the darkness as she waited for the story. I turned towards her and took her hand. She tensed as if to pull away and I held it tighter. I started with a deep sigh. \"She was one of my old high school teachers.\" I wasn't sure if I sounded as guilty as I felt right then, but I continued. \"She was an art teacher and it was a mandatory course.\"\n\n\"Eww, how old were you?\"\n\nIt was after I'd graduated and told Cate so. \"Karen had gone through a nasty divorce. She was very cool in class, no sense of humor, and she didn't suffer nonsense from her students. She was teaching photography course that semester, and we were in the darkroom after school one day. I heard an odd sound, a sob, and turned and noticed she was crying, the dim red lights showed the dark streaks on her face. It was only her and I and I don't know what possessed me but I just reached over and gave her a hug. She turned into my arms and let loose. We never talked about it after that day, though she subtly began treating me a little more friendly than others, she picked me out for tasks and I stuck around after class to help clean up.\"\n\n\"Those dastardly emotional women.\" The sarcasm dripped from her voice. \"Was she your first?\"\n\nI laughed. \"Is that important?\"\n\n\"It may have set a precedent.\"\n\n\"I'll have you know that while sitting at a table outside a tea shop in July wearing a very pretty and quite short sundress, you my love gave no indication of either your age or occupation.\"\n\n\"Touch\u00e9.\" She added softly. I brought her hand to my lips and kissed it softly.\n\n\"She was lonely, disheartened and I don't know, spurned seems like the best word for it. She was bitter and I could see why. He'd cheated on her.\"\n\n\"How did it happen then?\"\n\n\"We had done a few class photo trips, into the urban areas of the city, out to the state park, things like that. As the semester went on fewer people signed up for them and they went about on their own. After I'd graduated she contacted me and asked if I'd be up for one her photo safaris. I was the only one that showed up, it was a hike through a wildlife refuge in early summer. It was at least two hours from the city to get there. We spent the day hiking the trails. It was the first time I'd heard her laugh. She splashed me with icy water from a brook and got me full in the face. I splashed her back.\" I let my voice trail off. \"It was weeks before I realized she hadn't actually invited anybody else that day.\" \n\nCate let go of my hand and ran hers along my arm to my shoulder gripping it firmly. \"Were you in love with her?\"\n\nI snorted. \"I thought so. She'd taught me so much more than how to take pictures.\"\n\nCate chuckled. \"I'll say.\"\n\nMy hand found hers on my shoulder and I gave it a squeeze. \"I don't mean that. Well not just that anyway.\"\n\n\"I know what you meant. I didn't mean to make light of it.\" She whispered.\n\nI chuckled. \"This is where you offer up your story. Isn't it?\"\n\n\"I should have known you'd seize on that opportunity. It's only fair. It was an awkward teen affair. I was infatuated with him, and when he showed me interest I swooned. I ended up giving him the proverbial keys to the city soon after and once he'd been allowed entry decided he wasn't nearly as infatuated with me as I was with him.\" She said, remorse colored her tone. \"I kneed him in the balls a few weeks later when he made a rude comment to me in front of his mates.\"\n\n\"Sounds very normal compared to mine doesn't it? Yes, to answer your question, she was my first.\"\n\nCate reclined again and nestled herself against me and I wrapped her into my arms. \"I've always wondered if the people we meet along the way are put there intentionally to teach us something as we go through life.\"\n\n\"What have I taught you then?\"\n\nCate buried her face in my chest. \"Well, that you can be both gentle and strong at the same time. Faith in people is deserved when they've earned it. Trust isn't as foolish a gift as it would seem. Love.\" She paused. \"You've taught me love means shifting your focus from yourself to another.\"\n\n\"All that? That last bit sounds familiar.\" I said with a chuckle. She poked me in the side with her finger.\n\n\"What about you? What have I taught you?\"\n\n\"That network resources should have a single entitlement per request and not be opened indefinitely by applications. It may slow down communication but it's far more secure. Ow!\" I got the finger a lot harder that time. I leaned over and kissed her, laughing out of the corner of my mouth. \"You've taught me that love isn't something you gain, it's something you give. I think that's the big mistake a lot of people make in life.\"\n\n\"You're so philosophical for a young chap.\" The sarcasm in her remark was not lost on me.\n\nI had drifted off to sleep at some point. I awoke with a start the next morning. I reached out and found the bed beside me was empty. I sat up and listened for Cate and heard nothing more than the usual hums and rattles of heating and appliances. I got up and poked my head into the bath but she wasn't there, not in the apartment at all. I couldn't see the parking area from here as it was on the other side of the building. I checked for a note and didn't see one, then went to my phone and there were no calls or texts. I looked around with a more critical eye. Her earrings lay on the nightstand where she took them off the night before, her luggage was all there. She must have run an errand. It was later than I had expected to sleep but still early. I decided to not panic. I chuckled inwardly thinking that was exactly what I had done. I texted her to ask where she'd gone off too. Relief flooded me when she texted back, \"Surprise, make coffee.\" Some fifteen minutes later she came in with a box, handling it carefully as if it were full of glass. She leaned up and kissed me before shrugging out of her coat. She'd only thrown on her jeans and the shirt I'd been wearing last night before she went out. Her nipples stood out and I noted that she'd neglected to don her bra before going out.\n\n\"That shirt looks better on you than me.\"\n\n\"I thought you were going to say it looks better off.\"\n\n\"Well there is that. What got you out of bed so early on a chilly mornin' such as this?\" I teased in poor imitation of her accent. She rolled her eyes and broke the tape on the box and lifted the lid.\n\n\"It's a wonder I'm not absolutely massive because of this place. I'd stop in at least once a week and they would have some new concoction I just couldn't pass up.\" She tilted the box gently showing four fancy pastries. \"I'm not sure why but the memory came back to me as I woke up. I looked them up and decided to surprise you.\" She gave me another quick peck before reaching for a couple plates.\n\n\"It's times like this that I wonder what I did to deserve you.\" I grinned as I pulled down two mugs from the shelf and poured the coffee.\n\n\"Funny I've been thinking the same thing of late.\" We debated over which to start with, and ended up sharing a couple of them out, swapping bites with one another. Her legs crossed beneath the table, her stockinged foot rubbed against my leg as we ate. \n\n\"I want to go shop for a dress for tonight.\"\n\n\"So you said, and you don't want me along this time.\"\n\nShe scrunched up her nose and grimaced before looking down at her plate with a heavy sigh.\n\n\"Let me guess.\" I said. \"Checked your bank account?\" \n\nShe scowled at me. \n\n\"Use the card Cate.\" I said with as little exasperation as I could.\n\n\"But you worked hard for that money, and I feel guilty spending it on me. It's not fair after everything you did.\" Her voice trailed off.\n\nI sighed and looked at her, I kept my expression carefully bland. \"What is it going to take to get you to see past that?\" I shrugged. \"So what, I didn't work nearly as hard as you think for it, and it's not as if I've lost it all playing blackjack. I'm not saying go out and buy a Rolls Royce, it's a dress, it could be a really nice dress too, and it wouldn't matter what the price was. If you've got some diamond buying trip in mind, there's a limit on the card for security's sake.\" I said grinning. \"So a side trip to Antwerp is out.\"\n\nHer grimace changed slightly into hopelessness.\n\n\"If that expression doesn't change then I'm coming and you don't get to look at tags all over again.\"\n\nHer eyes went wide at that. \"No, no.\" She held up her hand. \"I'll manage. Besides that's what I was hoping you'd say.\" She scrunched up her nose and smiled this time causing me to laugh.\n\n\"Wretched woman, making me go through all that!\" I grabbed hold of her and kissed her repeatedly as she squealed in delight.\n\n\"What will you do while I do my best to spend all of your hard earned money?\"\n\n\"I don't know, try to stay out of trouble I guess.\"\n\n\"Good, I'd hate to have to bail you out of jail.\"\n\nWe drove into the city where Cate dropped me off, she reminded me I promised to stay out of trouble. I just wiggled my eyebrows and kissed her before getting out of the car. I flipped up the collar on my jacket to cut down on the draft as she pulled away from the curb. I'd done a little research and got my bearings and began walking. It was warmer than home for December and as I walked I warmed even more. I found the shop I'd been looking for and went in. I glanced through the cases hoping something would stand out, and something had. I caught the eye of the proprietor who was following my movements closely.",
        "\"A tall one is she? I'd go with the longer chain.\" He showed me how it would look and I agreed. I got the slip and a little bag and we bid each other a good day and I moved on. I stopped in a cafe and smiled as I ordered coffee and sat by the window. I had paused long over the case with the engagement and wedding rings, and thought hard about the decision, the actual decision to propose wasn't the problem, not for me at least, but the timing was everything. I was very sure that Cate loved me as much as I did her, I was also very aware that we had only been together a very short time, which was the major issue between us. Our biggest argument to date was her jumping on me in her apartment over feelings of lost freedom. I'd carefully shied away from making decisions on everything from what to eat, to what to watch on television. She chilled any time the subject came up, whether it be her 'be careful' response to the word 'proposal' or once or twice when the word engagement came up. I wouldn't make the decision until I found the source of her apprehension. Until then I hoped the pendant I got her would be a welcome addition, and nice accessory for her outfit tonight."
    ],
    "authorname": "Member389",
    "tags": [
        "student",
        "teacher",
        "holiday",
        "ireland",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/kiss-me-cate-pt-06"
}