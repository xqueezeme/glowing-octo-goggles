{
    "title": "A Dangerous Man",
    "pages": [
        "This is our seventh story that features Karin Roland, Private Investigator, and the third Karin Roland mystery since the Roland family moved to Portland, Oregon. We hope you enjoy the tale as much as we enjoyed writing it. As with our other Karin stories, there's no explicit sex in this one. We publish these stories in Loving Wives because that's where the majority of our followers found us and, well, Karin is a loving wife. \n\nThis is a work of fiction. All characters and incidents portrayed and names within are fictitious and any similarity to the name, character or history of any person is entirely coincidental. \n\n\n\nA Dangerous Man\n\nKarin Roland started to drift off in the chaise lounge, the paperback mystery on her lap closed before she had a chance to mark her place, when she felt a shadow blocking the sun. Karin opened her eyes to see the hulking form, all six foot-four and two-thirty pounds. \n\n\"You're in my sun; not to mention you woke me.\" Karin lifted her sunglasses to get a better look at him.\n\nBill Roland held out his right hand to offer his wife the frozen daiquiri. \"Thought you could use another cold drink.\" \n\n\"Bill Roland, are you trying to get me drunk?\" She said it with a smile.\n\nBill returned her smile. \"Not drunk, a bit loopy, maybe.\"\n\n\"And then?\"\n\n\"Then I take you back to our room and ravage your body.\"\n\n\"And you think you need to ply me with liquor first? When have I ever refused you such an offer?\"\n\nKarin and Bill were enjoying the second afternoon of a long five-day weekend in the Palm Springs sunshine. Back home in Portland, the weather was only now coming out of the grey cloud cover of winter and spring. It had been a wet winter, their neighbors claimed it was probably the worse in the past decade and the Rolands needed this dose of desert sunshine.\n\nBill handed Karin the drink before sitting down in the lounge next to her with his beer. Karin caught him looking.\n\n\"What are you staring at?\"\n\n\"Never thought I'd ever see you in a bikini that small, that's all. Can't blame me for looking.\"\n\nKarin couldn't help but laugh. \"I can't believe you talked me into wearing this thing. I'm a forty-eight year old mother of two teenagers. Do you realize Hannah will be twenty next month?\"\n\n\"None of that changes the fact you look great in that bikini.\" Bill was pleased, not only because Karin was wearing that tiny suit, but she seemed less self-conscious about her legs. Granted, Karin made certain they were sitting in the least crowded area of the pool, where few people walked past. Karin's right leg ended just past her knee and the left leg still carried the scars of both shotgun blasts.\n\nKarin decided this was as good a time as any to tell Bill what she was planning.\n\n\"I've been thinking of getting an office in the city and starting to take on more PI work. Anthony will be graduating next year and I don't want to be one of those empty-nesters without a purpose after he leaves for college. You have at least a dozen years or so before you retire and I can't be sitting on my ass 'til then.\"\n\nNone of this surprised Bill. In fact, he'd been expecting it. He saw the spark and extra zest in Karin's attitude after the last few cases she'd taken. The only surprise was Karin had lasted this long since she sold her half of the New York detective agency to her partner. Both of their kids benefited from the nearly three years Karin spent as a homemaker, and it was nice to have her run roughshod over the family's move to Portland, but it was time to let her do what she did best.\n\nKarin waited for Bill's response, but after twenty years of living together, understood he was letting her talk it out, so she continued. \"Meeting in the coffee shop lacks professionalism and I'm not comfortable meeting in our home office. I found an office in the Pearl District; it's a two-year lease for seven-fifty a month. The Covid shutdowns have really left the landlords scrambling for tenants. What do you think?\"\n\n\"Well, I like that your office will be near mine; and the price is right. Are you planning to hire a receptionist?\"\n\n\"Not yet; it will take a while to get established. One nice thing, with online advertising, I can get my name out there right away. Remember last time? I had to wait over six months for the new Yellow Pages phone book to be published.\"\n\nThey spent the next fifteen minutes discussing Karin's plans until their drinks were empty. Karin was slurping the bottom of her drink with the straw. \"Let's go to the room.\" Bill didn't need to be asked twice. \n\nBill picked up their books and things while Karin started her way to their room on her crutch. She had left her prosthesis in the room since the resort had a saltwater pool. Bill hurried to catch up, enjoying the sight of his wife's ass in that bikini. \n\n***************************\n\nAn hour later, Bill was lying on his back staring up at the ceiling, a grin plastered on his face. In the nook of his arm, with her head on his shoulder, Karin was breathing quietly, almost asleep. Bill loved these moments, even after twenty years of marriage. Karin's naked skin against his, her left leg over his, her arm across his chest; both relaxing after their love-making. How lucky can one man be?\n\nTwenty years ago Karin literally fell into Bill's arms as she tripped going up the subway steps, six months pregnant with Hannah. \n\nKarin and Hank Price, Hannah's biological father, had ended their brief affair before she knew she was pregnant. They had met while both were assigned to an anti-terrorist interagency taskforce shortly after the Twin Towers came down and the country was fearful of what might happen next. Karin was a NYPD detective and Hank was with the FEDs. The affair ended when Hank was reassigned to the Middle East. Within a month of his leaving, Karin's pregnancy was confirmed. \n\nSo Hank Price was off fighting terrorists in the Middle East, working for one of the U.S. alphabet agencies, Detective Karin Baker was given a desk assignment when she started to show in her fifth month. Karin didn't expect a marriage proposal from Hank, their relationship wasn't based on that level of love; but she was pleased when Hank agreed to help support the child. \n\nThen fate intervened. Karin was walking up the subway stairs on her way to work when she stumbled and fell backwards - right into the arms of Bill Roland. Bill bought Karin a cup of coffee and the rest, as they say, is history. It didn't take Bill more than a few dates to fall in love with Karin. With Hank's approval, Bill adopted three month old Hannah when Bill and Karin married. \n\nNow, nineteen years later, Hannah was finishing her freshman year at the University of Oregon and Anthony, their son, was finishing his junior year of high school. In fifteen months, Anthony would be going off to school and for the first time in their marriage, Bill and Karin would be in a house without children. That thought brought a smile to Bill's face. Imagine, walking down to get his first cup of coffee without throwing on a robe. Better yet, imagine Karin doing the same. Bill nodded off with that picture in his head.\n\n***************************\n\nThe resort's Italian restaurant was fairly crowded at seven-thirty when Karin and Bill made their way down for dinner. Karin wore a pair of stylish slacks and sleeveless blouse. She only wore skirts when she could wear opaque leggings to hide her prosthetic right leg and the scars on her left; tonight was too warm for leggings. \n\nThey were seated behind a table where two couples were finishing their meal. Bill nearly asked the Ma\u00eetre d' if they could change tables because one of the women was obviously drunk, she was too loud and too shrill. In retrospect, he wished he had, but held off when he saw they were having dessert and assumed they'd be leaving soon. Hindsight is almost always twenty/twenty. \n\nBill and Karin finished giving their orders to the waiter when it happened. The drunk woman, who was facing away from them, said in a voice loud enough for several tables nearby to overhear. \"And did you see the middle-aged MILF-wanna-be at the pool? For god's sake, cover your damn legs.\"\n\nThe woman across from the drunk loud-mouth looked at the Roland's table in horror. \"Quiet Joyce.\" She tried to stop the drunk from continuing, without luck.\n\n\"Whatta ya mean, quiet?\" she slurred. \"Don't shush me. I'm not the one grossing out everyone at the pool with that stump.\" \n\n\"Joyce - shut the fuck up - now!\" The two men at the table followed the woman's eyes and saw Karin at the next table. Joyce started to say something; but was interrupted by one of the men.\n\n\"Joyce - stop!\" He stood up and grabbed Joyce by the arm, pulling her to her feet. \"Jim, Maggie; could you escort Joyce out of the room? I need to apologize to this couple.\"\n\nAs the other couple led a now screaming Joyce out of the restaurant, the man stayed behind. His face red from embarrassment. \n\n\"I won't ask you to excuse my wife's behavior; there's no excuse for such unkindness. I'll only ask that you accept my sincere apology for her display.\" The man stood there, not knowing what else to say. He literally ached when he saw the look of hurt on Karin's face, he then turned and left the restaurant.\n\nKarin placed her hand in Bill's. \"I don't think I can eat. Call our waiter over and cancel our meal, please.\"\n\nBill could see Karin holding back her tears. Of all the lousy luck, it was only yesterday when he finally talked Karin into ignoring the stares she got whenever someone saw her legs. Today had been such a special day; Karin swimming in the pool and sunning in that tiny bikini. Bill caught the waiter's attention and cancelled their meal. The waiter, having witnessed some of the event, said he perfectly understood and offered his apology as well.\n\nBill and Karin made it back to the room and before the door closed, Karin sat on the edge of the bed and let it out. For maybe the fifth time in their twenty years together, Bill saw Karin cry. He sat next to her with an arm around her shoulders without saying a word. \n\nKarin broke the silence. \"Did I ever tell you I was voted 'best set of legs' in my high school yearbook? Damn it Bill, I had great legs!\"\n\nBill actually knew this; Karin's mother had shared this tidbit about the yearbook when the two of them were sitting in the hospital waiting room while Karin was recovering from the operation to remove her right calf and foot. Karin's mother took the amputation harder than Karin; but never shared it with anyone but Bill. \n\nBill let Karin cry and talk for a while. After fifteen minutes or so, he suggested they walk outside to enjoy the evening's warm desert air. Karin agreed and the two of them went out to walk one of the resort's golf cart paths. After a half mile they sat on the bench near the third tee. This is when Karin became Karin again. \"I know I'm being too sensitive.\" \n\nBill almost laughed out loud when she said this. He was married to one of the toughest men or women he knew.\n\n\"It wasn't your legs that first attracted me to you.\"\n\nKarin looked into Bill's eyes. \"No? What was it?\"\n\n\"Your glow.\"\n\nKarin laughed. \"That wasn't glow, it was heat stroke and sweat. I was six months pregnant and it was eighty-plus degrees in that subway car. No wonder I almost fainted going up those stairs.\"\n\nKarin squeezed Bill's hand and spoke. \"I know how lucky I am. And I shouldn't let some drunk bitch ruin our vacation. And I won't. Take me back; let's go get a drink and have some hors d'oeuvres. I couldn't eat a full meal, but I need something.\" Karin stood up and grabbed Bill's hand to pull him off the bench.\n\nThey had just sat down at the bar when they were approached by the resort's assistant manager. \n\n\"There you are Mrs. Roland. I knocked on your door and just now saw you walk in here. Mr. Tinsdale asked me to give you this note. He also asked me to tell you that he's paid for your stay here for all five nights, including your bar and restaurant bill. Mr. and Mrs. Tinsdale have already checked out, so there's no arguing.\" He handed Karin the note and walked away. \n\nKarin opened the note.\n\nMy dear Mrs. Roland (and Mr. Rolan):\n\nMr. Avery gave me your name so I could address this directly. Please, once again, accept my apology for my wife's drunken display. I am appalled, but unfortunately not too surprised, by what transpired this evening. Mrs. Tinsdale is, to put it bluntly, a spoiled brat and has a habit of hurting people.\n\nMy wife suggested this weekend to 'reconnect'. I'm afraid it only reinforced for me all the reasons why we'll soon no longer be husband and wife. I can no longer tolerate her behavior, nor can the couple with whom we were dining tonight. I'm telling you this personal information so you both know that my wife is an aberration, and not reflective of most people. I write this in hopes that you both can enjoy the rest of your time here. Please accept my humble gift, your room and other fees, with that intent.  \n\nWith humble apologies,\n\nSimon Tinsdale\n\n\n\nKarin finished reading and handed the note to Bill. \n\n\"I'll be damned.\"\n\nOver the next three days there were moments of angst; but they did their best to push through those moments and enjoy their time before returning to Portland - tanned, rested, and relaxed.\n\nFour Months Later\n\nKarin spent the past half-hour cursing her terminal. Whoever said this QuickBooks accounting program was a snap had their head up their ass. After cursing out her terminal, she reserved a few choice words for herself for being so damn computer illiterate. If it wasn't for Anthony, she'd be totally lost. Karin decided to wait until the weekend and let Anthony take care of the bookkeeping. The outgoing invoices and bills which needed to be paid would just have to wait.\n\nOn the other hand, at least there were invoices to be sent out. Less than three months after restarting her agency in earnest, things were going better than expected. Roland Investigations was earning enough to pay the rent and expenses; and she had already contributed a few thousand into the Roland's retirement fund. Not bad. Her old friend at the Portland PD, Captain Glenn Hutchins, helped by sending clients her way. A few other officers, impressed with her work solving the Miller murder, did the same. \n\nJust last month, Karin was able to find a fifteen year old runaway. The young teenager was found living in the hills east of Eugene with a twenty-five year old meth addict. Her parents were happy to get their daughter back, although Karin knew from experience that the young girl would be spending months in rehab; the girl exhibited every indication of the Stockholm syndrome. Hopefully, she'd be fully recovered before the meth addict was released from prison in ten or twelve years. \n\nThe personnel background checks for a half dozen commercial clients still helped pay the bills. If the other business continued to grow, Karin would have to consider hiring a part-time employee to do the more routine background work. Not a bad problem to have after such a short time.\n\nKarin shut down the computer and was getting ready to leave the office for lunch when the phone rang.\n\n\"Good morning, Roland Investigation; Karin Roland speaking.\"\n\n\"Good morning Ms. Roland. My name is Larry Parker. I have a situation and need your help. It involves a paternity issue. Are you available to meet to discuss it?\"\n\n\"I'm available at nine tomorrow morning. Will that work for you? We can meet here in my office.\"\n\n\"I'll be there. Is the address on the website correct? On northwest Marshall street?\"\n\n\"That's it. Hit two-five on the callbox and I'll buzz you in. See you tomorrow at nine.\"\n\nKarin spent the rest of the day clearing her inbox, getting ready for what tomorrow might bring.\n\n***************************\n\nAt eight-thirty the next morning, Karin parked her car and walked the two blocks to her office building. As usual, Randall was sitting in the doorway; his sleeping bag rolled up and his two backpacks filled and ready to move. \n\n\"Good morning Karin.\"\n\n\"Morning Randall.\"\n\nRandall moved out of the doorway to allow Karin room to open the door.\n\n\"Am I the first in the building today?\"\n\nRandall picked up his two bags after stuffing his sleeping bag in one. \"No, Mr. Nesbitt came in earlier. He said I could wait until now to move on. Hope you don't mind.\"\n\n\"Any trouble last night?\"\n\n\"No, most everyone knows this is my spot now.\"\n\nRandall is one of the many homeless who have made Portland their city. When Karin first started renting here, there were two or three men who would jockey for the privilege of bedding down in the sheltered doorway of this building. One of those men was particularly malicious; refusing to move when any of the tenants or their guests tried to enter the building. He also had the nasty habit of urinating in the doorway. Calling the police was a waste of time, so Karin made a deal with Randall, who seemed to be the most well-mannered, not to mention the largest, of the men. Karin paid Randall one-hundred-fifty a month to make the doorway his own, keep it clean, and vacate it in the morning when the tenants started to show up. Two of the other building tenants showed their appreciation to Karin by splitting the cost with her. \n\nKarin just finished brewing a cup of coffee in the Keurig when the callbox buzzed. \"Twelve minutes early,\" she thought, \"must be anxious.\" Karin buzzed Larry Parker in.\n\nLarry Parker sat across the desk, a fresh cup of coffee in his hand. The best way to describe Mr. Parker is average. Five-ten, brown hair cut short, brown eyes, medium build and neither handsome nor plain. The kind of man you could pass in the street a dozen times without noticing. Mr. Parker could be described as average, but the reason he needed help was unique. Karin took notes as Parker talked.\n\n\"Ten years ago I met my wife, Julie.\" Parker paused. \"When I say my wife, I mean ex-wife, she died four months ago. She had a congenital heart disease that was never detected, never treated, she was only twenty-nine.\" Parker paused again; Karin reached for a box of tissues because he looked as if he was about to cry. \n\nParker held it together and continued. \"When I met Julie, she was working as a waitress at a diner where I always ate breakfast. She wasn't wearing a ring, so I asked her out. On our second date she surprised me by letting me know she had a one-year-old son. Hard to believe because Julie looked too young to have a baby; turns out she was only nineteen. \n\n\"I met the boy, Gunner, the following day. He was the cutest kid, so happy. Most everyone thought I was nuts, continuing to date Julie; I was only twenty-two and most guys my age weren't interested in an instant family. Especially raising a kid who's not his.\"\n\nLarry Parker stopped to take a sip of his coffee. He couldn't know what Karin was thinking at that moment - that Bill Roland may have been a little older than twenty-two when they met, but Bill never hesitated in adopting and raising Hannah, her child conceived by another man. \n\nParker put his coffee down and continued his monologue. \"Julie didn't talk about her past except to tell me she grew up in Ohio, that her mom died when she was thirteen and her dad when she was seventeen. She said Gunner's father took off after learning she was pregnant. \n\n\"So, call me na\u00efve, but the lack of details didn't give me pause. I was head over heels in love with Julie and with Gunner. Within a year we were married and everything was great. Julie got her GED and started working as a receptionist-admin for a State Farm agent here in Portland; I finished my degree at Portland State and have been working as a systems analyst for Nike - I work remote. I adopted Gunner within the first year after we married and Gunner and I get along great. I'm his 'Dad'.",
        "\"Everything was great until four months ago when Julie's heart gave out on her. I won't lie to you; it's been tough, but Gunner and I have had each other to lean on. Then, three weeks ago, I received a summons to have Gunner's DNA tested. A man claiming to be Gunner's biological father turned up out of nowhere and got a court order. The test results came back last week; Gunner's this George Westphal's bio-son and he wants custody. I need you to find out who this guy is, where he's been and why he wants Gunner now.\"\n\nKarin finished writing and looked up. \"Any idea why this Westphal guy showed up now?\"\n\nParker shook his head in disgust. \"It's my own damn fault. I was cleaning out Julie's personal stuff and came across a letter from before we met. Julie and a friend from Ohio communicated while Julie was living in Indiana, the year before she moved to Portland. From what I can tell from the letter, Julie never told her friend she was pregnant.\n\n\"I doubt Julie even remembered she had the letter. Anyway, I found this Crissy Walker in Toledo through Facebook. I let her know Julie had passed and told her about Gunner. Next thing I know, I get a call from some woman in Dayton, asking about Gunner. I got suspicious and shut the woman down. Then I get the summons to get Gunner tested for paternity. What a frigging mess!\"\n\n\"What do you want, Mr. Parker?\"\n\n\"I want to keep my son. I raised him for the past ten years, since he was one-years-old. I don't know who this other clown is. All I know is what Julie told me - the guy took off as soon as he heard Julie was pregnant. Who is this guy and why does he want Gunner after ten years? He could have found Julie if he wanted to, she didn't change her name from Jenkins until she married me.\" \n\n\"Okay, I can do that; but I can't even guesstimate how much this will cost. I might even need to travel to Ohio, so it won't be cheap. Is that going to be a problem?\"\n\n\"Not really. Julie was working for an insurance agent and she had life insurance. Most of it will go to Gunner; but enough goes to me. I couldn't live with the money if it means Gunner isn't my son. So, do what you need to; just find something about this guy that prevents the court from giving him custody.\"\n\n\"I assume you've hired an attorney.\"\n\n\"Yes, John Brohn at Brohn and Curtis. They gave me your name.\"\n\n\"When's the hearing?\"\n\n\"John Brohn is asking for a continuance. It was scheduled for two weeks from now; but he assures me we can delay for another few weeks.\"\n\n\"That's good; it should give me enough time to answer your questions. We'll hope they're the right answers.\" Karin handed Parker a pad of paper. \"Now, I have some questions for you; first, the name and contact information for Crissy Walker.\"\n\nKarin waited while Parker took out his phone, flipped through the thing and started writing. \n\n\"What's the name of the woman who called you from Ohio? And do you have a phone number and-or an address?\"\n\nParker flipped through the phone again before writing on the pad. 'Janice Clarkson, lives in Dayton, Ohio. 937-555-2424'.\n\n\"Finally. Everything you have on Gunner's biological father.\"\n\nParker pulled a copy of the summons and other legal papers out of his satchel and handed them to Karin. \"This is everything I have.\"\n\nKarin flipped through the papers; skim reading the four pages of documents. \"All right; this should be enough to find out who Mr. Westphal is.\" Karin pulled out a contract from her desk drawer. \"Read through this; sign and give me a check as a retainer. As soon as I receive both, I'll get started.\"\n\nParker leafed through both pages of the contract before signing. \"John said you're the best and what to expect. He also warned me to bring a check.\" Parker wrote the check out for the retainer. \"Let's get started.\"\n\nAnd so began one of the oddest cases Karin ever had.\n\nOver the next two days, Karin exhausted every resource she knew. Every avenue was a dead end. George Westphal did not exist. \n\nKarin called Larry Parker. \"Larry, have you ever met George Westphal?\"\n\n\"No. The one meeting we had with his attorney, Westphal wasn't there. The attorney said he was traveling and had Westphal's Power of Attorney. Why?\"\n\nKarin didn't want to get Parker upset. \"Just need a physical description. There's more than one George Westphal. I'll talk to you soon. Bye.\" Karin pressed 'end' the call, wanting to get off the call before Parker started to ask questions.\n\nKarin's next call was to John Brohn. After the greeting courtesies, she got right to it.\n\n\"John, can you give me the name of the clinic that did George Westphal's DNA sample?\" \n\n\"Give me a second Karin.\" Within two minutes, Karin had the information; it was a clinic in Tempe, Arizona. A quick call to the clinic confirmed she would need a court order for the clinic to release any information related to George Westphal, including a physical description. Karin called John again to get that started. \n\nWhile John worked on that, Karin contacted Crissy Walker, introduced herself and confirmed she was working for Larry Parker, Julie's widowed husband. Crissy was a fountain of information.\n\n\"When Mr. Parker told me about Julie and her son, I called my mom; she still lives next door to Julie's step-mom. Julie's step-mom and Julie's dad divorced within a year after Julie disappeared and she remarried a guy named Clarkson. That's why the different names. I guess the guy is an invalid, never gets out of bed.\n\n\"Mom says Julie's dad isn't dead; he's living down in Florida; some retired folks trailer park outside of Tampa. Mom doesn't think he remarried, at least not as of a few years ago when they stopped exchanging Christmas cards. \n\n\"Julie had a step-brother, a real creep. None of the other girls were allowed to spend the night at Julie's house as long as her step-brother lived there. He was about five years older than Julie. He joined the Army and was gone most of the time after that; but he did come home for Christmas and holidays. Mom says she hasn't seen Jesse in over a year.\"\n\nKarin interrupted. \"Any chance your mother has an address for Julie's father?\"\n\n\"I'm sure she does. I'll call her after we hang up.\"\n\n\"Why did Julie disappear all those years ago?\"\n\n\"Well, that was always the great mystery. We were halfway through senior year and Julie just left. Neither her dad or her step-mom knew why she took off or where she went. I received a letter from her, she was living in Indiana, I think. I wrote her back, then never heard from her again. The last letter I sent to her at that address was returned; undeliverable, no forwarding address.\"\n\nKarin made a note to herself to get a copy of Crissy's letter from Larry Parker. \n\n\"Do you remember the step-brother's last name?\"\n\n\"Clarke, with a 'e' on the end.\"\n\n\"I'd really appreciate Mr. Jenkins' address down in Florida. Could you get that from your mother and call me back right away, please?\"\n\n\"Sure.\"\n\n\"Thanks Crissy.\" Karin hung up. \n\nIt was only fifteen minutes later when Crissy called back with Jenkins' address at the mobile park near Tampa and his phone number. Karin thanked Crissy and called Jenkins immediately. \n\n\"Mr. Jenkins. My name is Karin Roland; I'm a private investigator. I have some information regarding your daughter, Julie. I wonder if we could get together and talk.\"\n\n\"About Julie? Where is she?\" \n\nKarin realized Julie's father didn't know that his daughter was dead. He may not even know she had a child. \"Mr. Jenkins; I'll be happy to share any information I have regarding Julie. Can we meet on Saturday at your home?\"\n\n\"Can't you tell me where she is?\"\n\n\"Not until we meet, sorry. But I'll try and answer your questions then. Can we meet?\"\n\n\"Yes, I'll be here all day. Do we have to wait until Saturday?\"\n\n\"Sorry, yes. I'll call you with a time when I land in Tampa.\"\n\nJenkins was still asking questions when Karin begged off and got off the call. \"See you Saturday, Mr. Jenkins; goodbye.\"\n\nKarin booked the flight to Tampa, then called Parker to ask for a copy of the letter. Friday evening she flew out of PIA, connecting through Dallas and arriving in Tampa late in the evening. She called Bill from the hotel to tell him she arrived safe and after exchanging 'I love you' with Bill, she tried to get some sleep. \n\nFirst thing Saturday morning, Karin called Samuel Jenkins to arrange the meeting. Jenkins was so anxious for news of his daughter that he told Karin to come right out. Thanks to the GPS app in the rental car, Karin was able to find Jenkins' trailer within the hour. She wasn't out of the car before the screen door opened and a wiry old man with thin grey hair came rushing toward the car.\n\n\"Mr. Jenkins, I'm Karin Roland.\"\n\nJenkins stopped in front of Karin, holding his hand out in greeting; the look of hope was apparent on the old man's face.\n\n\"Let's go inside and sit down, Mr. Jenkins.\" Karin's words and the tone of her voice, spoken softly deflated any anticipation Jenkins sought from the detective's visit. He knew this wouldn't be good news; his face seemed to age another ten years as he turned, walked to the door and held the screen open for Karin.\n\n\"Would you like a cup of coffee, Ms. Roland?\"\n\n\"Karin did a quick look around the small room; it was neat and clean. \"Yes, please.\"\n\nJenkins pointed to a chair; indicating where Karin should sit before stepping into the next room. Thirty seconds later he returned with two cups. \"Cream or sugar?\"\n\n\"No, just black. Thank you.\" \n\nAs they sat facing each other, Karin dreaded having to speak the next sentence. \"Mr. Jenkins, I'm sorry to tell you that your daughter, Julie, is deceased. She suffered from a heart ailment.\"\n\nTears appeared in the old man's eyes. \"That's what killed her mother.\" He paused here for a moment. \"Can you tell me anything about her life for the past dozen years? Was she happy? Do you know?\"\n\n\"She lived in Portland, Oregon with her husband, Larry Parker. They appeared to be a happy, loving couple. Julie had a son, he's almost eleven now. Mr. Parker is raising the child, he adopted Julie's son, Gunner, when the boy was one. That's the reason I'm here; at Mr. Parker's request. Julie didn't talk about her family; in fact, she told her husband that both her parents were dead. Can you tell me why she would say that?\"\n\nSamuel Jenkins began his statement of contrition. \"It was all my fault - all my fault. When Julie's mother died, I was a lost soul, raising a nine-year-old girl all on my own. A couple years later, I met and within a year married a single woman, Janice Clarke; she had a fifteen year-old-son, a real wild boy. I tried to bring some fatherly discipline to the boy's life, but Janice didn't like it when I did the least thing to correct the boy's behavior. My problem, well, one of my problems was, I was so captivated by Janice that I became a whipped puppy. I let her control the household while I went to work to pay the bills. My relationship with Julie suffered while I basically came under that bitch's control.\n\n\"Janice's son, Jesse, got into some trouble his senior year of high school. They let him graduate and he enlisted in the Army. By now, Julie was fourteen. Jesse would come home on leave for holidays and such. He seemed to be growing up and maturing. He always had his mother fooled, but now they both convinced me that Jesse had his shit together. \n\n\"One year, Jesse came home for Christmas leave; by then Julie was a senior. Janice and I spent the evening at my office Christmas party. When we came home, we heard a commotion in Julie's room. When we opened the door to her room, Julie and Jesse were in bed, Jesse on top of Julie, having sex. \n\n\"Jesse got off Julie and they both started screaming, Julie claiming she was raped, Jesse claiming Julie asked her to come into her room and seduced him. It was a 'he said-she said' back and forth; then Janice started yelling at Julie, calling her a tramp; saying all the rumors she heard about Julie had to be true, that she'd been having sex with half the boys in school. \n\n\"My head was spinning and I made the biggest mistake in my life, I believed my wife's lies about my own daughter.\"\n\nJenkins stopped at this point and looked across the room to the wall filled with framed photos. There were photos of a little girl and the same girl as a teenager. One with a young woman, obviously Julie's mother, Jenkins' first wife. Another, a professional photo, with Jenkins and the woman, Julie between them, aged about five. Jenkins lifted the photo of the teen-aged Julie off the wall and held it between his two hands. \"It's the last time I saw my baby daughter. Within a week she was gone.\"\n\nKarin finally interrupted Jenkins' soliloquy. \"When did you learn the truth?\"\n\n\"Not soon enough. Jesse went back to Camp Bragg in North Carolina. It wasn't more than two months later that I found out Janice was a lying sack of shit!\n\n\"Janice tried to hide it from me; but I found out Jesse was in trouble with the Army. Turns out one of the civilians on the base complained that she had been raped by Jesse. It was another 'he said-she said' but how many times does that have to happen before you stop questioning who's telling the truth? The Army didn't have enough to put Jesse on trial; but they gave him a less than honorable discharge and turned him out.\n\n\"I talked to Crissy, our neighbor and Julie's friend. I asked her about the rumors that Julie was having sex with the boys at school. Crissy was beside herself; swore that that couldn't be, that Julie had a reputation as one of the good girls.\"\n\nJenkins put the photo back on the wall and took his time to straighten it. He then methodically straightened the others; Karin waited patiently while he finished the simple task.\n\nJenkins turned back to Karin. \"I wrote Julie in Indiana, at the address Crissy had for her. I never heard back from Julie, never a word.\"\n\nSuddenly, as if remembering something, Jenkins turned to Karin. \"You say Julie has a son? Do you have a picture of the boy? I sure would like to see a picture of the grandson I never met.\" \n\n\"Yes, I do.\" Karin reached into her folio and opened a folder. She handed the photo Parker gave her of Gunner to Jenkins' outstretched hand, which was shaking. \n\n\"Oh my god!\" Jenkins raised his voice as he stared at the photo. \"Son of a bitch!\"\n\nThe old man's outburst surprised Karin. \"What's wrong?\"\n\n\"The boy, Gunner; he's the spitting image of Jesse.\"\n\nKarin shook her head. \"Can't be. There was a DNA test that proved the boy's father is a man named Westphal.\"\n\n\"I didn't keep any pictures of Jesse, but I'd swear he was the spitting image of that boy.\" \n\nSuddenly, Karin realized why she hadn't had any luck finding information on George Westphal. Jenkins interrupted her chain of thought.\n\n\"Do you think this Larry Parker will let me meet the boy?\"\n\n\"I'll find out. In the meantime I'd appreciate it if you'd keep all this between the two of us. At least until I find out why a man named Westphal has the boy's DNA.\"\n\n\"Who am I going to tell? I don't communicate with anyone from Ohio anymore.\"\n\n\"Well, Crissy's mother knew where you lived and had your phone number. In any case, just promise you won't spread the news about Gunner and Jesse. Not until I get to the bottom of this.\"\n\nJenkins agreed before Karin left the house and drove to the airport. Within a few hours, she was on a flight to Ohio. Saturday night was spent in a hotel outside of Dayton. Sunday midday, Janice Clarkson would receive a surprise visit. Karin decided that the best approach was shock and awe. \n\n***************************\n\nSunday at noon, Karin knocked on the door of a 1920's Craftsman-style house that could use a paint job and some landscaping TLC. The woman who answered the door had lines on her face that you would suspect bore witness to many years of hard times and scowls. Karin wanted to keep the old lady off balance, so as soon as the woman opened her mouth, Karin crossed over the threshold, forcing the woman to back into the living room.\n\n\"Mrs. Clarkson, I'm here to ask you about your son Jesse. Can you tell me when you last saw your son?\"\n\nObviously puzzled by the intrusion, Mrs. Clarkson stuttered. \"Who are you, what do you want with Jesse?\"\n\n\"I'm a private investigator from Portland. I'm looking into a paternity case involving a boy in Portland. What can you tell me about that?\"\n\nThe old lady was caught off balance and confused; exactly what Karin hoped to accomplish. \"If that little slut had Jesse's baby, then I deserve to know it and see my grandson. She had no right keeping my grandson from me!\"\n\nKarin tried to trip the old lady up. \"So, if you think it's Jesse's son, why is a man named George Westphal claiming paternity?\"\n\nMrs. Clarkson looked like the proverbial deer in the headlights and couldn't speak. Just then, a man's voice came from the back of the house.\n\n\"Janice - who are you talking to? Come here!\"\n\nMrs. Clarkson hurried out of the room. Karin heard both their voices rising in anger as they argued back and forth, but she couldn't make out the words. She looked around the room and saw the family photos on top of the mantel. Karin quickly took photos of them with her phone, noticing the resemblance of an early photo of a young Jesse to the Parker boy. She was back in the center of the room when Mrs. Clarkson returned.\n\n\"My husband says I don't have to answer your questions.\"\n\n\"You refuse to tell me where Jesse is or why George Westphal is claiming paternity?\"\n\n\"I - I can't. Now get out of my house!\"\n\nKarin went to the door; it was still open; but before leaving turned to the old lady. \"I think you'll be sorry you didn't talk to me.\"\n\n\"You're the one who'll be sorry. You don't know who you're messing with! Now get out or I'll call the police!\"\n\nKarin caught a commuter flight from Dayton to O'Hare. She had a two hour layover at O'Hare before her flight to Portland; it would be good to be home again. The previous evening, Karin tried to find some information on Jesse Clarke using the hotel's wi-fi. Almost nothing came up, it was as if the man didn't exist. She would need to get back to her office Monday and make a few calls to some of her contacts; a man like Jesse Clarke doesn't at least leave a few breadcrumbs to follow. \n\nJust as Karin finished writing notes to herself and closed her notebook, a short man approached her.\n\n\"Ms. Karin Roland?\"\n\nKarin looked up at the man; as she did, he flashed his badge and ID; it was a U.S. Marshall ID. \n\nThe man handed Karin his business card. \"I'm Fred Cummins with the U.S. Marshall's office. May I sit down?\"\n\nKarin looked at the badge again, verifying the authenticity of the badge and that the name matched. She nodded to the chair next to her in answer to his question.\n\n\"We understand you've been talking to Mr. Jenkins and Mrs. Clarkson, among others, in reference to Jesse Clarke. Can I ask why?\"\n\nBeing a former police officer and skilled investigator, Karin knew how this game would play out. She answered Cummins' question with a question. \n\n\"I'm actually investigating a George Westphal; can you tell me why he's trying to claim paternity on a child that's most likely Jesse Clarke's?\"\n\nCummins smiled. \"Ms. Roland, I know you're a better investigator than that. You certainly know by now that George Westphal and Jesse Clarke are 'unus et idem'.\"\n\nIt was Karin's turn to smile. \"Latin, Mr. Cummins? My, my - you did your homework. Now why don't you tell me why Jesse Clarke is in witness protection.\"\n\n\"I can't tell you all of it, but I will say that Clarke helped a certain DA in Southern Florida in busting up a drug cartel. That DA is considering running for office, governor or senate, I don't know. The bust made him a big star and he's doing what he can to protect Clarke.\"\n\n\"So, you're going to help a guy who raped his teenaged step-daughter, raped another woman at Fort Bragg and - if I can read between the lines - was involved with foreign drug runners, to get his biological son, who he has never seen - from the man who loves and raised him?\"",
        "Cummins looked embarrassed. \"Clarke doesn't want the kid; it's his mother. She wants her grandson. As soon as 'Westphal' gets custody, he'll dump him off at his mom's to raise.\"\n\n\"And let her screw up a good kid? Raise him like she raised Jesse? You've got to be kidding me. Have you met the woman?\"\n\n\"Can't say I have. Look, being assigned to WICSEC sometimes makes my skin crawl and sometimes makes me feel like I'm doing some good. There are people I protect who have done some real good, placing themselves in danger to put away the bad guys.\" Cummins paused here. \"Then there are the assholes like Clarke, who made a deal to avoid prosecution.\"\n\n\"So, what do you want from me? Do you expect my client to sit back while his son - and I consider the boy to be Larry Parker's son - is taken away from him?\"\n\nCummins lowered his voice and in a conspiratorial tone, answered Karin's question. \"No; you're right, I did do my homework and I know enough about you to understand what I say next will stay between you and me. \n\n\"I've just delivered the message I was told to deliver. Now I'm going to tell you that as far as I'm concerned, Jesse Clarke, George Westphal can rot in hell. There are some powerful people in Bogota that are looking for Clarke, not only because he ratted out on them, but because he stole a significant amount of money while doing it.\"\n\nJust as he finished the last sentence, Karin's flight was called. Cummins stood up. \"Goodbye, Ms. Roland. Thanks for listening.\" He walked away without another word and before Karin could reply.\n\nIt was after nine when Karin's plane landed at Portland International. Karin was exhausted and thanked goodness that she had let Bill talk her into having him drive her to the airport three days ago and now would be at the curb to pick her up. She was walking out past the security gate when she spotted Bill with a bouquet of flowers in his hand. Maybe because she was so tired, but her eyes misted a bit and a big smile pasted across her face. Bill wrapped his arms around his wife and gave her a squeeze. \"Welcome home, babe.\"\n\nKarin kissed Bill's lips as he released her to take her bag and hand her the flowers. \"It's only been three days, Bill. What's got into you?\"\n\n\"I don't know, it just seemed like a long three days. I knew you had a rough weekend and I wanted you to feel missed.\"\n\n\"You don't know the half of it. Wait until I tell you what happened at O'Hare.\" Karin had already told Bill about her theory that George Westphal was Jesse Clarke and that the stepbrother had raped his stepsister. Now she knew that was only a tip of the iceberg.\n\nOn the drive home, Karin filled Bill in on what she learned in Dayton and Chicago. Bill listened, then asked the sixty-four thousand dollar question. \"So, what are you going to do with this information?\"\n\n\"Don't know yet. The last thing I want to do is get in the middle of some bullshit between the Columbians, some DA and his snitch. Somebody is going to get hurt. I don't want it to be Parker, his son, or me.\"\n\nWhen they pulled up to the house, Karin let out her breath, she hadn't realized until then how much she was holding it in. Walking through the door, Anthony greeted her with a hug of his own. Mom and son spent fifteen minutes catching up on Anthony's weekend, which included the latest news on the girl Anthony was dating. \n\nAfter Karin showered and changed into comfortable loungewear, she went downstairs where Bill was sitting in the den, a glass of wine waiting for Karin. They talked about everything but the case; Bill knew Karin needed some down time or she would never be able to sleep. Within ten minutes, Bill had Karin in uncontrollable laughter while relating the latest antics of the young couple next door. It was like living next door to a TV sitcom, Tom Taylor had spent Saturday morning in his garage spray painting some outdoor furniture before Amy Taylor noticed the paint was going all over the side of their Mercedes. \n\n\"Amy's new SL?\"\n\n\"Yep\"\n\n\"What'd she do?\"\n\n\"I was out front digging up that bush you wanted out when I heard her screaming. I walked over in time to see Amy pick up the can and spray Tom's shirt. I was just about ready to step in when Tom tore his shirt off, grabbed Amy, and carried her into the house while shouting he'd get her car repainted.\"\n\nKarin laughed harder. \"Damn, those two are the horniest couple in the world; everything sets them off.\"\n\n\"Yea, but they've only been married a year. Wait until they have kids.\"\n\n\"It didn't stop you from being a horndog, Mr. Roland.\"\n\n\"That's because I'm married to you.\" \n\nKarin stood up, hopped on her good leg over to Bill and plopped down into his lap. They were in the middle of a kiss when Anthony walked in to say goodnight. \n\n\"Again, you two? Do me a favor and keep it down, would you please?\"\n\nBill answered, \"No promises!\" He picked up his wife and carried her up the stairs. It was a good night.\n\n***************************\n\nOne thousand miles south of Portland, as Bill met Karin at the airport terminal, Jesse Clarke was hanging up the phone after listening for the last half hour to his mother cry while berating him for all the lost years she never knew her grandson. When she wasn't crying, she was screaming at him to do everything he could to make certain the boy was placed in her custody.\n\n\"Ma, I'm trying. But you know I have to be careful, there are still guys searching for Jesse Clarke, I'm already bending the rules of my agreement with the Feds by trying to get custody as Westphal. If people get the connection, I'm dead meat.\"\n\n\"Well, this detective must have made some connection Jesse, why else did she show up here?\"\n\n\"We don't know that yet Ma.\" But, as the words left his lips, Jesse knew this Roland dame must suspect, if not know. Time to make a contact with Roland. \n\nJesse immediately looked up Karin Roland on the Internet. Unfortunately, the same Internet that made it simple for Karin to advertise her new agency, made it just as simple for Jesse Clarke to know where her agency was located. And for Clarke to book a flight to Portland first thing Monday morning. \n\n***************************\n\nKarin got up the next morning and headed down to her office; Larry Parker was scheduled to meet with her during his lunch hour to get a status report. Although the information could have been passed on a phone call, Karin felt a face to face was a better option, especially given the information and how the billables were piling up.\n\nKarin saw Randall across the street as she opened the front door; he was standing in front of the grocery store with a hat in his hand quietly asking for hand-outs from the people passing by. Randall saw Karin and waved a greeting. Neither paid much attention to the large man standing two doors down the street.\n\nIt didn't take long for another tenant to show up. Jesse piggy-backed into the building, explaining he had an appointment with the detective on the second floor. Jesse took the stairs to the second floor and was pleased to see the door to Roland Investigations was open. He walked in to find Karin sitting at her desk, reviewing some files.\n\nIntimidation was Jesse Clarke's specialty. \n\nHe stood in front of her desk and puffed out his chest, making himself look big. \"I want you to stop hassling my mother, stay the fuck out of my business and tell Larry Parker you're no longer on his case!\" Jesse was pointing his finger at Karin while making his threats.\n\nIt's easy for a big guy like Clarke, a guy who was used to pushing women around, to underestimate a woman like Karin. Five-seven, one hundred thirty pounds, she wasn't physically intimidating. The fact she was highly trained in the martial arts and an expert marksman was not apparent by looking at the pretty woman. \n\nIt happened so fast; Clarke didn't have time to blink. Karin pulled that finger back towards his arm, without breaking it, while pulling the gun from under the desk and pointing it at his face. \n\n\"Get the hell out of my office.\"\n\nClarke couldn't believe his eyes; his mind reeled, \"This skinny bitch is ordering me around.\" he thought to himself. \"No woman orders Jesse Clarke! Who the hell does she think she's dealing with?\" He backed out of the office as Karin kept the gun pointed at him.\n\nClarke spoke out loud. \"You'll be sorry, Roland.\" To himself, he added, \"You don't know how sorry, bitch!\"\n\nJesse Clarke swore he'd never underestimate that woman again. He wouldn't take any chances next time they met. And he swore there would be a next time. \n\nKarin took a minute to get her breathing back to normal, got up and locked the door. She pulled the business card out of her wallet and made a call. Fred Cummins answered his phone. \n\n\"Cummins, this is Karin Roland. Your boy just came into my office and threatened me. All bets are off. You might want to let him know that. Maybe he'll be smart enough to get the message.\" She hung up before the Marshall had a chance to reply. If he would have said anything, it would have been, \"I doubt it.\" Jesse Clarke was a pain in the ass and deep down, Cummins hoped George Westphal would just disappear. \n\nKarin had made up her mind and her next call was to Hank Price. She spent twenty minutes reviewing everything she had learned to this point, including how Clarke might be a threat. \n\n\"I know you have contacts at the DEA; think you can get a contact with the Columbians who I can meet with?\"\n\nNormally Hank would try and calm Karin down, but this was different. Nobody threatens the mother of his daughter and the wife of his best friend. \"I'll get back to you. In the meantime, be careful.\" Hank hung up.\n\nHank made the contacts and the arrangements. That night Karin told Bill she would be traveling to New York and why. It was late, one a.m. in New York when Bill called Hank's number; Hank picked up on the first ring.\n\n\"Yea?\"\n\n\"Hank, it's Bill. Karin just told me what you two have planned. Will she be safe?\"\n\n\"I'll do everything I can to assure it.\"\n\n\"I can't lose her, Hank. Is it really necessary for her to be there?\"\n\n\"You know her; you married her.\" Hank chuckled. \"She thinks she needs to be there; if for no other reason than to have my back.\"\n\n\"I get it. I wouldn't let her do it with anyone else, you know.\"\n\n\"I know and that's why I won't let anything happen.\"\n\n\"Thanks Hank; goodnight.\"\n\n\"Goodnight Bill.\" They both hung up. \n\n***************************\n\nFour days later, Karin was in New York. She and Hank had a meeting with a Carlos Castillo. In the past four days Hank was able to confirm that Jesse Clarke wasn't hiding out only because he turned state's evidence against his former employers, but he had also stolen at least four million from them. The Columbians were anxious to retrieve as much of that money as they could and would probably offer a 'reward' to whomever helped them recover it.\n\nThe meeting took place in the hanger of an executive airport. A sleek private jet stood in contrast to the seven folding chairs set in a circle. When one of the Columbians tried to pat them down for weapons, Hank refused. \n\n\"What? Do you think we're stupid enough to start a firefight in here? There's five of you here that I can see. You all keep your weapons and we'll keep ours.\" The Columbian turned to see one of the men in the circle nod in agreement. Hank and Karin joined the men in the circle. As much as it bothered her feminist sensitivities, Karin was a realist. Having dealt with this macho culture in the past, she allowed Hank to do the talking. Introductions were made and Hank initiated the negotiations.\n\n\"If we could give you the name he's currently using and a good idea where you could find him; what's the finder's fee?\"\n\nKarin was surprised when the man who had been introduced as Arias answered instead of Castillo. \"What are you proposing?\"\n\nHank responded. \"Ten percent is fairly standard.\"\n\nAlmost everyone in the circle was stunned when Arias countered. \"Or I could just torture the two of you until one of you talks, saving my boss the ten percent. I might even get a bonus.\"\n\nHank reacted coolly. \"That would be short-sighted on your part. Karin and I both have friends; hers is in the New York PD, mine have drones. My friends in Langley know we're here and that I'm talking to you. Some of those friends would welcome any excuse to go all Bruce Willis on your boss in Bogota, sending a drone down his chimney.\"\n\nArias knew he had gone too far; nervously looking over at Carlos, who still remained quiet. Arias tried to recover. \"I thought we were negotiating. You asked for ten percent, I countered with nothing.\"\n\nCarlos broke his silence, saying something to Arias in Spanish before turning to Hank and Karin.\n\n\"Please excuse my young compadre. He has seen too many of your Hollywood gangster movies and because of his youth, believes if he talks tough, it will earn the respect of others.\"\n\nHank smiled at Carlos, knowing this was the man who made the decisions. \"We were all young once.\"\n\nCarlos smiled back. \"Yes, I thought I'd give him an opportunity to learn today. A chance to grow.\"\n\n\"He'll be fine. He has a good teacher.\"\n\nArias listened to the two men talk; understanding this is how men with power showed respect and power. He also realized that during this back and forth, neither man disrespected him in front of the others. Arias learned something this day.\n\nCarlos asked Hank. \"Would you consider five percent adequate? We will have considerable expenses before we recover anything.\"\n\nHank looked at Karin, who nodded in agreement.\n\n\"Five percent is fine. How will it be paid?\"\n\n\"It will be deposited in an account on the Caymans. Whatever we recover, five percent will be paid within the month.\"\n\nHank didn't have to ask why they could trust the Columbians; he already had it on good authority that Carlos Castillo was a man of his word; despite how he earned his money.\n\nAs Karin and Hank drove away, they talked. \n\n\"It's drug money of course.\" \n\nHank was waiting for this from her. \"If you're uneasy, give it to a worthy charity. No one says you have to keep it.\" \n\n\"How did you get to be so damn cynical?\"\n\n\"Oh, come on Karin. It could have something to do with working for the government for so long. Do you know how many politicians became millionaires while serving in Congress? Do you think all that money came from legitimate sources, always in the altruistic, best-interests of the citizens they supposedly serve? At least I'm not pretending to work in the best interests of the 'common man'.\"\n\n\"You are cynical!\"\n\n\"What about Clarke? Any qualms?\"\n\n\"I'm not going to lose any sleep over him. One less rapist in the world.\"\n\nHank glanced over at Karin as he drove the car. \"And who's cynical now?\"\n\nThey crossed the bridge back into Manhattan. Hank broke the silence. \"When the deposit comes in, give me a third. Do what you want with the rest.\"\n\n\"I was going to split it with you - fifty/fifty.\"\n\n\"I know you were, but you earned it. You know you won't be able to bring any of the money into the States, right?\"\n\n\"What do you suggest?\"\n\n\"Spend it in the Caribbean. You and Bill can have a couple 'vacations of a lifetime'. Get out of that wet Portland winter and go swimming in the warm blue sea.\"\n\n\"Sounds wonderful; but I guess I should wait to see what happens before I spend the money.\" \n\n***************************\n\nA week passed with no news. Karin did her best to calm Larry Parker down; without promising anything, she tried to assure him that things were in the works to prevent him from losing Gunner. But it was now two weeks before the hearing on paternity and custody. Parker was getting nervous; and if she would admit it, so was Karin.\n\nBill dropped Karin off in front of her building. The first thing that caught her attention was that Randall wasn't in the doorway, which meant he either spent the night in one of his girlfriends' tents, which he was apt to do on occasion, or one of the other tenants came in early that morning. The post-covid/remote workplace concept was keeping companies from renting offices here; there were only five offices occupied in this entire building and rumor had it that the top two or three floors, which were now empty, would soon be converted into condos instead of offices. \n\nAs she entered her office, she didn't have time to react to the jolt of electricity; her mind flashed brilliant white, then went black.\n\nSometime later, Karin woke up to find her arms and left leg bound to a stiff chair; her mouth gagged so she could mumble, but not scream. As her vision cleared, she saw Jesse Clarke standing in front of her with a large Bowie knife in his hand.\n\n\"Waking up, Karin? Good girl. It's time to have some fun. Well, I'm going to have fun; you, not so much.\" Clarke saw Karin's eyes staring at the knife. \"Oh, did you notice the blood on the handle? I didn't have time to clean it after I got rid of that bum squatting in your doorway. Maybe they'll find his body when it starts to stink in the dumpster out back.\"\n\nClarke moved the knife from her face down to her chest. Karin followed the knife blade's movement and only then noticed she was only wearing her bra and panties. Clarke continued his threats.\n\n\"The thing is, I never understood these guys who worry about whether their bed partner is getting off on the sex; maybe it's just me, but if I'm having fun and getting off, that's good enough for me.\"\n\nThe blade slipped under the front clasp of Karin's bra. It must have been razor sharp because the fabric split and the two cups fell down, held only by the shoulder straps. Karin tried to say something, but the binding in her mouth made the words unintelligible. This made Clarke smile.\n\n\"And that bitch at Fort Bragg - she didn't enjoy it, but I did. I'm sure you heard about her. Same with my stuck-up stepsister. The same with so many since then - and now you. The difference is, they all lived through it. Sorry, you won't.\" He slipped the blade, spine side against her skin, down to Karin's panties. He twisted the blade to cut the right waist band. \n\nClarke leaned back. \"Have you figured out where you are yet?\" He paused, \"We're on the fifth floor of your own building. There are two empty floors between us and any of the occupied offices. You'll be able to scream, although not loud enough for anyone to hear with that binding in your mouth. I thought about using a ball-gag, but then I'd miss the pleasure of your moans - or is it groans?\"\n\nThe sinister smile never left Clarke's face as he approached Karin again with the knife. \"Time's up; let's get to it. We have a few hours until your hubby comes back to pick you up. See - I did my homework, too.\" Clarke began to unbuckle his belt with his left hand as the blade neared the left side of her panty, Karin heard the 'pffft' and saw the dart in Clarke's neck.\n\n\"What the fu...?\" is all that came out of his mouth as Clarke reached to his neck with his free hand before dropping to the ground. Three masked men came into Karin's line of sight, picked up Clarke and began to drag him away. Then Carlos stepped up to the chair, holding Karin's blouse.\n\n\"Let me get those off.\" Carlos used the Bowie knife to cut through the plastic straps, untied the binding in her mouth and handed Karin the blouse. \"I'm sorry we couldn't get here sooner.\"\n\n\"I'm just glad you came when you did.\" Karin slipped the blouse on and was pleased when Carlos handed her the prosthetic and slacks from the floor without staring at her nakedness.\n\n\"Fausto was watching the building and called as soon as Clarke showed up this morning. We had people watching his house in Tempe, at your office and your house. We didn't know where he'd turn up so our plane has been sitting on the tarmac in Sacramento, waiting for a call. As soon as Fausto called, we flew right up. Are you OK?\"",
        "\"Embarrassed, but fine. I can't believe I let him get to me like that. Where are you taking him?\"\n\n\"Out of the country; it's best you don't know any more than that. We need to find out where our money is and have him get it back for us. That's why Fausto wasn't allowed to intervene when he saw you get taken. He was under strict instructions not to get involved until we arrived. I'm sorry. Had it gone any farther, I'm certain Fausto wouldn't have stood for it. He was between a rock and a hard place.\"\n\nKarin understood what it must be like to work for a man with Carlos' reputation. \"Tell Fausto I said, 'thank you'.\"\n\n\"I have to leave now to get to the plane. I have a big favor to ask of you. Can you wait three hours before contacting the police about the man in the dumpster? It will take us that long to clear US airspace.\"\n\n\"You know about Randall?\"\n\n\"Yes, Fausto didn't have time to intervene before Clarke killed him with the knife. Again, I'm sorry. Do you think you'll have any trouble with the US Marshalls?\"\n\n\"I can wait before I call, but I'll probably ask my husband to take the afternoon off and sit with me. I won't have trouble with the Marshalls. That DA in Florida will make a stink, but he can stick it up his ass.\"\n\nCarlos couldn't help but grin; this Gringa had grace and grit. She reminded him of a woman he once spent a year fighting alongside when he spent that year in Nicaragua. He was a twenty-year-old idealist fighting the Contras and he loved that woman, even though she never treated him other than as her little brother. \n\n\"Goodbye Karin.\" He kissed her on the forehead. \"You'll know if the accounts are credited, but I doubt we'll ever see each other again.\" He turned away.\n\nKarin thought to herself, \"Cops and criminals.\" How many times in her life on the right side of the law had she experienced a connection of respect with someone on the other side of that line? And at the same time, she wouldn't hesitate to put that same person behind bars given the chance.\n\nKarin walked down the stairs and into her office. She picked up the phone and made the call. \n\n\"Bill, can you take the afternoon off? I need you.\"\n\nEpilogue\n\nKarin waited with Bill until four hours had passed; then made an anonymous call to the police about a man in the dumpster. No one claimed the body or answered the Personal notifying the death of Randall Harvey. Karin paid to have Randall cremated and a month later spread his ashes on Mt. Hood. More than once Randall talked about his reason for choosing Portland, \"So I can see that mountain on a clear day.\"\n\nKarin waited until the next morning to let Larry Parker know that he probably didn't have to worry about George Westphal. \"My sources tell me he decided to go back underground, out of the country for good.\" is the way she put it. When George didn't show up for the hearing, Larry was given permanent custody. Janice Clarkson called a few times; but was told she would never see the boy. Her attempt to steal the boy from Larry was the nail in that coffin. \n\nSamuel Jenkins was allowed to meet his grandson. He took the Amtrak cross country and spent a full week in Portland. One day he called Karin and asked to meet. \n\n\"Thanks for softening Larry up for me. I know you did it, he told me so.\"\n\n\"Mr. Jenkins, you can't live your life kicking yourself for something that happened over a decade ago.\"\n\n\"Yes, I can. Julie was a good girl and she depended on me to keep her safe after her mother died. And I failed her. I've been praying there's a heaven so Julie is there with her mother. She deserves a heaven. My problem is - if there's a heaven, is there a hell? Because that's where I belong when I die. Then I find myself praying God doesn't exist because I know a just god will punish me for my sin of not protecting my daughter.\"\n\nKarin took a minute to gather her thoughts before answering. \"Most every religion allows for repentance and salvation. If I were you, I'd talk to a priest, minister or rabbi. You need to forgive yourself if you're truly sorry. I didn't know Julie, but from what Larry has told me; she would want that. She ran out of time, that's all.\"\n\nJenkins looked up from his coffee cup. \"You remind me of Julie's mother. She had that way of saying the kind thing, even when it was only wishful thinking. That's why I was so lost after she died. Thank you.\" Jenkins patted Karin's hand, got up and left the caf\u00e9. \n\n***************************\n\nJust under three months later Karin received an email that simply read, 'your account has been credited'. Karin ran the virus and keylogging protection programs that Anthony previously installed on her computer, and when the programs finished with an 'all clear' she signed on to the Cayman account. There it was, one-hundred-fifty-six thousand dollars. \n\nKarin wired a third of the funds to Hank's account in Dubai, a third to an international charity in Toronto that helped recover children sold into sexual slavery, and kept a third for her own purposes.\n\n***************************\n\nA year later, Karin treated the Roland family and select guests to a full luxury, all-expense paid week in a private beach villa on Little Cayman Island. \n\nOne dark night, well past midnight, Bill and Karin stepped out of the villa and down to the beach wearing only their robes. There were a billion stars out on this cloudless, moonless night and, except for one small, fifteen watt bulb near the front door of the villa, no artificial lights to spoil the view. \n\n\"I can't believe you've talked me into this.\" Karin whispered as she took off her prosthetic and her robe. \n\n\"C'mon\" Bill whispered back, \"when will we ever have a chance to skinny-dip again?\"\n\nKarin didn't answer as Bill picked her up and carried her into the water. She began to float on her back looking up at the stars. Bill could just make out the nude body parts that weren't hidden by the water, her wet skin glistening. He knew better than to try to fulfill his other fantasy - making love in the water - so he was content with the view as Karin rolled over to swim, the cheeks of her ass now above the water's surface. The two of them continued to swim in the shallows, enjoying the feeling of freedom. \n\nLess than a hundred feet from where their bathrobes lay in the sand, Anthony and Lisa, his girlfriend, were lying on a towel. Although the night was almost as dark as ink, they did see the two figures walk toward the water and shed the robes. Anthony and Lisa lay quiet until they realized his parents were naked. \n\n\"Oh, jeez\" he whispered. \n\n\"I think it's kind of cute.\" Lisa said as Bill was carrying Karin to the water.\n\n\"What if it were your parents?\"\n\n\"Okay, I get it. Gross, but still cute. I still can't believe your parents were nice enough to invite me on this trip.\"\n\n\"They really like you.\"\n\nLisa's eyes misted up and she addressed the subject they worked so hard to avoid. \"Do you think we have a chance to be that happy someday? I mean with each other?\"\n\n\"I hope so; I love you.\" Anthony kissed Lisa with all the passion an eighteen-year old has for another eighteen year old. Both would be going to college in another month and the odds were against them; but some kids beat the odds. As Anthony and Lisa broke the kiss and looked up at the sky, everything and anything in the Universe seemed possible. \n\nThe End"
    ],
    "authorname": "BillandKate",
    "tags": [
        "romance",
        "loving wife",
        "loving husband",
        "skinny dip",
        "mystery",
        "wife",
        "romantic"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-dangerous-man-1"
}