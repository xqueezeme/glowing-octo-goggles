{
    "title": "A Mind of Winter",
    "pages": [
        "It was a bit too late to be having second thoughts, but I couldn't stop myself from wondering if I'd really done the right thing in signing up for the study. I desperately needed the money, but I was already starting to get a bad feeling about the whole business, and my bad feelings were rarely wrong. The others didn't seem nervous at all. I looked around and saw that the five other subjects were all either dozing or staring vacantly out the limo's tinted windows. I couldn't sit still, and the guy sitting next to me, I was pretty sure his name was Nate, kept letting his head fall on my shoulder as he slept. You'd think that they'd be a little bit more alert considering where we were being taken. \n\n\"What the hell am I doing?\" I muttered to myself, shoving Nate's head off of me. I tried to keep calm, but by the time an hour had passed, I had started shaking. Some part of me really didn't want to go through with this, and it was trying to convince the rest of me to just open the limo door and jump out onto the side of the road. No, I thought. I need this too badly. Four thousand dollars. Four thousand dollars. Just keep thinking that. At the end of this, they're going to pay you four thousand dollars.\n\nI forced myself to ignore the shivers wracking my body. When I get a bad feeling about something, and then do it anyway, my body revolts. I start shaking and sometimes I get headaches or feel nauseas. I guess that's why Doctor Andrew's was so interested in putting me in the study. He was writing a book about the effect of haunting phenomena on psychics. I had never thought of myself as a psychic, but Andrews told me that my test results were incredible, said he'd never seen anything like it. He said the symptoms that accompany my bad feelings are indicative of a very high level of psychic sensitivity. I guess he's the one with the degree, but I still have difficulty thinking of myself as a psychic.\n\nSomeone cleared their throat loudly in the sleepy stillness of the limo, and I almost jumped out of my seat. My shivering had gotten worse, and I had to clench my jaw to stop my teeth from chattering. I looked around and saw that the opaque glass which divided the front seats from the rest of the limo had opened up, and that Doctor Andrews was leaning through it, waiting to address us. I poked Nate a few times to wake him up, and eventually managed to get him to crack an eye open.\n\n\"Doctor Andrews wants to talk to us,\" I said.\n\n\"Why?\" he grunted.\n\n\"How should I know? He probably wants to brief us or something.\" \n\nNate sat up in his seat and yawned, stretching his arms towards the ceiling. The rest of the limo's occupants had already awoken, and were looking expectantly at Doctor Andrews. \n\nAfter he was sure that he had everyone's attention, Andrews cleared his throat again and began to speak. \"First of all, I want to thank you all again for enrolling in this study. I know some of you may be a bit apprehensive about the nature of the experiment--\" \n\nFrom beside me, Nate snorted and rolled his eyes. I shot him a nasty look. Everyone else seemed to feel similar to Nate, though. Amused looks shot around the limo, and one of the women even giggled. I huddled in my corner and glared at them. Was I the only one taking this seriously?\n\nAndrews cleared his throat for a third time, and I was tempted to offer him a cough drop. \"As I was saying, I know some of you may be feeling a bit nervous.\" He looked at me, and I tried to smile at him, but I couldn't unclench my jaw. \"That's completely normal. We are, after all going to be spending the next four weeks in a 'haunted house,' if you will excuse the dreadful clich\u00e9.\" He laughed, and looked around at us as if expecting we would join in. When no one did, he continued. \"We will be arriving in about ten minutes, and I wanted to go over a few details beforehand. This is all in your informational packets, of course, but I want to make sure that everyone understands the procedures which we will be following.\" He fumbled for a page of notes and looked down at it before continuing. \n\n\"As I'm sure you know, Carleton House is over two hundred years old. No known tragedies have ever occurred there, but almost as soon as it was built, the house began to gain a reputation as a haunted dwelling. Also, an inordinately large amount of people seemed to have died of natural causes within its walls. I have spoken to a few of the house's previous occupants, but they were all unwilling to speak about their experiences with the house, so I am unsure as to what we should expect. As psychics\u2014\"\n\nThe woman who had giggled before released a peal of laughter which she quickly stifled with a hand over her mouth. Doctor Andrews ignored her. \n\n\"As psychics, I anticipate that you will all be more sensitive to any spiritual disturbances within the house. I ask that you record anything you see, hear, feel, or sense within the house in the journals which I've provided for you. I also ask that you keep a daily record of your activities and that you write down any dreams you might have during your stay. The goal of this study is to see if we can determine the nature of the haunting within this house as well as studying its effects on the psychic mind, so any visions or sensations you might experience must be recorded in detail. Anything might provide a clue as to the reasons behind the house's rather intimidating reputation. Also, let me remind you that we will be operating on the buddy system. No one is to go wandering the house alone, so if you have not already selected a partner, please do so within the next few minutes. Any last minute questions?\"\n\nWe all shook our heads, and Andrews nodded. \"Alright then. We'll be there shortly.\" He settled back into his seat and the opaque divider slid closed once more, obscuring the front of the limo from view. Silence fell as we rounded a curve and got our first look at Carleton House. \n\nMy first glimpse of it was not at all encouraging. The house stood perched on a hill, seeming to brood over the town below. From far away, the building looked black, but I knew from photos which we had been given that it was really made of weathered dark gray stone. The windows were all shuttered and dark, and reminded me of eyes which have been closed in a facsimile of sleep. Suddenly, a searing pain shot through my temples, and I must have given a little squeak, because Nate turned to look at me curiously. \n\n\"What is it?\" he asked.\n\n\"Nothing,\" I said, massaging my forehead. The pain had settled into a dull, pulsing ache inside my skull. \"Just a headache.\" He looked at me for a moment longer and then shrugged before turning to look out the window. \n\n\"Ugly place, isn't it?\" He commented, staring up at Carleton House as we began our ascent up the hill. \"Glad I don't have to live here permanently.\"\n\n\"Yeah,\" I muttered, still rubbing my head.\n\n\"So, Penny, what kind of psychic are you pretending to be?\"\n\n\"What do you mean?\"\n\n\"Well, I'm a telepath, and so are Leon and James. Susan and Linda are both clairvoyants. Or at least that's what we told Andrews so we could get places in the study.\" Nate grinned at me, and I stared back at him.\n\n\"You're all just pretending?\" I asked, inwardly wincing at how childish I sounded. The whole car burst into laughter.\n\n\"What, and you're not? Come on Penny, don't be bashful, everyone knows that we're all just here for the money. Hell, I'd pretend to be a mutant from beyond the stars if I thought it would make me four thousand dollars.\"\n\n\"None of you are psychic at all?\" I asked. \"What about those tests Andrews gave us?\"\n\n\"Lucky guesswork, and some minor bribery. Andrews' secretary has a fondness for designer clothes which she can't afford on her normal salary.\" He folded his arms over his chest, looking smug. \"Are you saying that you didn't cheat, Penny? Are you a real psychic?\" he asked this with the mock intensity of one pretending to be deeply impressed. I scowled at him.\n\n\"No. Sometimes I just get these feelings about things, and some of the time they turn out to be right.\" Most of the time, actually, but I wasn't going to tell them that. \n\n\"Oh, look guys!\" Nate crowed. \"We've got a real psychic in our midst! Want to look into my future Penny?\" He grabbed my hand and held it to his forehead. \n\nI jerked away, and was on the verge of smacking him when the car rolled to a halt in the gravel driveway of Carleton House. I took advantage of the others' fits of laughter to open the door and slip out of the limo. Another sharp flash of pain seared through my head, and black blotches obscured my vision. I was sure for a moment that I was going to collapse. My whole body was shaking, and I wrapped my arms around myself, closing my eyes tight, and willing the blackness to subside. \n\nA few seconds later, it did, but when I opened my eyes, I was trembling worse than ever. I wanted nothing more than to get back in that limo and tell the driver to take me as far away from here as we could get, but I couldn't. I needed the money too badly, and I didn't have anywhere to go.\n\n\"Are you alright, Miss Morgan?\" I jumped and turned around to see Doctor Andrews standing behind me.\n\n\"I'm fine. Just nervous.\"\n\n\"Well don't worry. We're all here together. There is safety in numbers, my dear.\"\n\n\"I suppose,\" I mumbled, watching as he strode off to talk to the limo driver. I turned back to the house. The shuttered windows really did look uncannily like eyes... \n\n\"Hi Penny,\" For the second time in as many minutes, I almost jumped out of my skin\n\n\"Jesus Christ! What?\" Nate was standing next to me, a sly smile on his face.\n\n\"Ooh, touchy. Sensing any supernatural vibrations?\"\n\n\"Very funny. What do you want?\"\n\n\"Well, everyone else seems to have been paired up, so I was wondering if you wanted to be my buddy.\"\n\nI groaned inwardly. Great. Not only would I be spending the next month in a haunted house fighting off migraines, but I'd be spending it with this asshole. \n\n\"It doesn't look as if I have much of a choice, does it Nate?\"\n\n\"Nope,\" he said. \"You're stuck with me.\"\n\n\"Just what I always wanted.\"\n\n\"Oh Penny, you're too kind.\"\n\n\"Look, could you stop talking for a minute? I have a god awful headache and you're not making it any better.\"\n\n\"Your wish is my command.\" He closed his mouth and made a zipping motion across his lips. Then he walked off to go talk to the other subjects, who were all huddled in a circle next to the limo. I heard him say something, and they all laughed and looked over at me. I ignored them and closed my eyes again, trying to subdue the ache in my temples. A few moments passed, and then I heard Doctor Andrews' voice. I opened my eyes and had to struggle for a few seconds before I could bring him completely into focus. \n\n\"I think that we're ready to enter the house, now,\" he was saying. \"If you would all get your baggage from the trunk and then follow me, we can get this study underway.\"\n\nFear ripped at me, and again I was seized with the urge to get back in the limo and command the driver to take me as far away from here as it was possible to get. Instead, I went around to the back of the limo with the others to collect my suitcase. Nate had made himself the designated bag handler, and when he handed my bag to me, he fumbled and his hand 'accidentally' brushed against my breasts. I stiffened, blushed, and then glared at him, fighting the urge to smack the self-satisfied smirk off of his face. I didn't want to get into a confrontation when I had this bad of a headache, though, so I turned on my heel and walked back over towards the house, trying to look haughty and unruffled. \n\nI joined the cluster that had formed behind Doctor Andrews, who, after making sure all of his subjects were present, led us up the porch steps. We stood in front of the vast black double doors, staring up at the enormous iron gargoyle's head that served as a knocker, and even the others began to look apprehensive. Andrews pulled out a large antique key and used it to unlock the door, which opened without a sound on the darkness within. The Doctor took a deep breath and then stepped through the door. One by one, we followed him over the threshold of Carleton House. I was last in line, and I had to force my feet to move forward. The pain in my head got worse with every step, and by the time I reached the doorway the black dots had begun to collect at the edges of my vision again. \n\nStepping towards the threshold was one of the hardest things that I've ever had to do. My head was pounding as if someone was driving blunt nails into both of my temples, and I could barely see. Every limb shook, and my teeth clattered together uncontrollably. I took a long, deep breath, trying to steady myself, and then I walked through the doorway. \n\n       \n\n*****************************************\n\nThe next thing I remember, I was lying on a couch, propped up on several lumpy pillows. My head was pounding dully, and it felt as though someone had taken a large amount of cotton and shoved it down my throat. My hair was plastered all over my sweaty face, and I tried to whisk it away with my hand, but my limbs didn't seem to want to move. I gave a soft groan, and suddenly a cluster of faces popped into my range of vision. It was Doctor Andrews and the subjects, most of whom wore expressions of concern, all except for Nate, in fact, who looked bored and condescending.\n\n\"Are you alright, Miss Morgan?\" Doctor Andrews asked.\n\n\"I think so,\" I said, speaking very slowly. \"What happened?\"\n\n\"You collapsed the moment you stepped into the house, Miss Morgan. Were you overcome by the psychic vibrations? Did you, by any chance, experience a vision?\" Andrews sounded excited, but Nate gave a snort, and removed his head from my circle of vision. \n\n\"No. I just had a really bad headache. A migraine or something.\"\n\n\"You told me when I interviewed you that you sometimes experience symptoms of physical distress when you have what you call, 'bad feelings.' Did you experience a premonition of some kind? Did you sense a malevolent presence in this house?\" \n\n\"No Doctor Andrews, I didn't. I think I just have a migraine. Does anyone have any aspirin?\" \n\nOne of the other female subjects, Linda, I think it was, walked away and came back a second later with a small plastic bottle of generic pain killer. She handed me the bottle, but I couldn't open it because my hands were still trembling. Eventually, Doctor Andrews did it for me, opening the bottle and shaking out three red pills onto his palm. I took them and swallowed them dry, coughing as one lodged itself in my throat for a moment before sliding the rest of the way down. \n\n\"I think,\" said Doctor Andrews after a moment, \"That I will show everyone to their bedrooms, Miss Morgan, but I want you to stay here and rest before you try to move around too much. Who is your buddy?\"\n\n\"Nate,\" I rasped, my throat still dry from the pills. \n\n\"Nate, please stay with Miss Morgan. I will show you both to your rooms once she has recovered.\" With that, he gestured for the others to follow him, and they walked from the room. \n\nI sat up slowly, my head still painful, but now down to a bearable dull throb. The room I was in fit perfectly with the impression I had gotten from the outside of the house. The floor was done in gleaming dark wood, and the walls were papered in deep scarlet. A huge stone fireplace protruded from the far wall, the mantle carved into the figures of imps and goblins. The couch I sat on was black velvet, and the room's illumination stemmed from a massive crystal chandelier fixed to the ceiling. The molding around the ceiling had also been carved with the figures of demonic imps. They seemed to leer at me. I shuddered. Hopefully the bedrooms weren't going to be this bad, or I'd never be able to get any sleep. Not with those imps staring down at me. \n\n\"What is the matter, Penelope Morgan?\" Nate asked from across the room. Startled, I turned my head and saw him standing by the fireplace, staring at me. He looked different, somehow. Maybe it was the way the light was falling, but his eyes looked as though they had changed color. Outside they had been blue, but now they looked silvery gray. \n\n\"Nothing,\" I said, giving my head a shake to clear it. I was seeing things. I looked back at him, but his eyes were still silver.\n\nNate stared into the empty fireplace for a moment, and then walked over to me, seating himself on the end of my couch. \"I have never met a woman like you before, Penelope Morgan. So much power. I can feel it coming off of you like heat.\" His voice was soft and cold and strangely accented by a language I couldn't place. \n\nHe ran his eyes over me, and I became suddenly much more aware of the fact that we were the only ones in the room. His gaze made me feel naked, and my hand reached down all of its own accord to make sure that my skirt was covering my knees. This seemed to amuse him, because he smiled, although the gesture didn't reach his eyes, which now held an almost predatory gleam. I was on the verge of trying to get to my feet and running to find the others, when my head gave a violent jolt of pain, and I fell back against the cushions with a pained yelp.\n\n\"Hush,\" he murmured, \"Let me help.\" Before I could stop him, he laid a cool hand on my forehead. At first, the pain in my temples escalated until I thought my head would burst, and I cried out helplessly. Then he began massaging my forehead with both hands, and gradually, the pain began to fade away. I didn't even think of trying to stop him. I felt frozen to the spot. A long minute passed before he removed his hands, but the moment he withdrew, my paralysis broke, and I took a long shaky breath. It took me a few seconds to realize that the pain was gone. I lay there for a minute, trying to put my mind back together, trying to figure out what exactly had just happened.\n\n\"Nate?\" I asked in a voice I barely recognized as my own. He was standing by the fireplace again with his back to me, acting as if he hadn't heard me. I struggle to my feet, and walked over to him. \"Nate?\" I reached out and tapped him on the shoulder. He jumped and spun around, almost knocking me to the floor.\n\n\"Jesus H. Christ Penny! Don't sneak up on me like that!\"\n\n\"Are you ok?\" I asked, completely bewildered. The cold accent had gone from his voice, and he sounded now as he had before we entered the house. Had I imagined the change?\n\n\"Yeah, yeah I'm fine,\" he mumbled, running a hand distractedly through his blond hair. His eyes looked blue again. \"Just don't come creeping up behind me like that. You scared the shit out of me.\"\n\n\"What happened just now?\" I asked.\n\n\"What do you mean?\"\n\n\"Just now. You went all strange, and you made my headache go away. How did you do that?\"\n\n\"I don't know what you're talking about. I've been standing here the whole time. I thought you'd fallen asleep again. You must have been dreaming.\"\n\n\"I don't think I was dreaming,\" I said, but doubt had crept into my voice. The whole incident had been so unreal. Maybe it had just been a dream. I supposed it was possible, but I had no memory of falling asleep again.\n\n\"Must have been. I think I would have noticed if I'd magically cured your headache.\"\n\n\"I don't know,\" I mumbled, walking to sit on the couch again. \"Maybe you're right.\" Silence fell. I fidgeted where I sat, raising my hand to my forehead every few minutes, wondering if the pain had gone away on its own. I would have been absolutely certain that I hadn't been dreaming were it not for the fact that my dreams have gotten me into trouble in the past. A few times, I had dreamed things so real that I was certain they had actually happened. I once told a male co-worker that I'd had a wonderful time on our date last night, only to discover that this date had actually occurred only within my own head. Needless to say, the work environment got a bit uncomfortable after that. I had to leave that job a couple months later. Things had just gotten too embarrassing. ",
        "Nate seemed preoccupied as well. He kept running his hands through his hair, and he jumped at every creak of the old house. By the time Doctor Andrews returned to show us to our rooms, we were both on edge. \n\n\"Are you feeling better, Miss Morgan?\" asked the Doctor as he strode through the door.\n\n\"Yeah,\" I said. \"I'm fine now.\" That wasn't exactly true, but I didn't want to confide my conflicted mental state to the doctor. He would probably try to make it out that I had witnessed a ghostly manifestation or something.\n\n\"Good. Now, if you two will come with me, I'll show you where you'll be sleeping.\"\n\nMy bag had been placed in a corner, and I went over to retrieve it before joining Nate and the Doctor in the doorway. The sitting room let out onto a long narrow corridor paneled in dark wood carved with more imps, and lit by crystal sconces in black iron holders. We walked along it, towards a long staircase at the far end, our feet silent on the thick Oriental rug which covered the hardwood floor. The house creaked and groaned around us as every old house does, but there was something different about this one. It had what I could only describe as a deliberate watchfulness about it. I felt that the house was only creaking to put us at our ease, to fool us into thinking that this was just an ordinary old building. The hairs on the back of my neck prickled, and I kept glancing over my shoulder as we walked up the stairs and down the upstairs hallway, half-convinced that I would catch a glimpse of eyes peering at me from out of the shadows.\n\nA part of me was finding this whole thing comical. It was like something out of a dozen bad horror movies. Seven people staying in an old haunted house, trying to prove the existence of spirits. Next thing, I'd discover a secret passageway in my bedroom which led to some horrible secret. Or maybe I would discover that holes had been cut in the eyes of all the portraits, and that someone had been watching me as I slept. I was actually a breath away from giggling, when something soft brushed over my face, and I gave a sort of choked scream instead. Andrews and Nate turned around, and stared at me as I wiped frantically at my face. \n\n\"Something touched my face,\" I sputtered, twirling around in circles in an effort to discover what it was that had brushed me. \n\n\"It couldn't be that, could it?\" Nate asked dryly, gesturing to something directly behind me. I looked around and saw that a tapestry had come partially loose from the wall and that several pieces of overlong fringe were dangling in the air, just at eye level. \n\nA hot flush filled my face, and my stomach knotted with embarrassment. \"Yeah,\" I mumbled, \"Yeah, that must have been it.\" They turned away and we continued down the corridor, me lagging a bit behind now, feeling ashamed for losing my head. It seemed that an age passed before Doctor Andrews came to a stop in front of a door set in the hallway. \n\n\"Mr. Miller,\" he said, gesturing at Nate and then at the door. \"You will be in here.\" Nate nodded, and went to the door, opening it and stepping inside. Light flared briefly in the dim hallway as he flipped a light switch, but it was cut off a moment later when the door was shut again with a loud click that made me jump. Doctor Andrews walked a few more feet down the hall and then pointed to a door which looked almost exactly the same as the one Nate had entered, except that where the handle on the other door had been of unadorned brass, this one was of engraved silver. \"This will be your room, Miss Morgan.\" I looked questioningly at the door's silver handle and then at Doctor Andrews. None of the other doors we had passed had sported such elegant handles. They had all been brass, like Nate's. \"Is there something wrong, Miss Morgan?\" he asked.\n\n\"No, I was just wondering why this door's handle is different from all the rest.\"\n\n\"Ah, well this is the house's master bedroom. The original owner, James Carleton, the one who built Carleton House, was a rather eccentric man. I can only assume that he wished to visibly differentiate his room from the others in the house. I wasn't able to find out much about Mr. Carleton except that his death was the only unnatural one ever to occur within the house's walls. He was murdered, stabbed through the heart with an ornamental sword which he kept over his desk. They never found out who did it. It happened in this very room, in fact.\"\n\n\"What?\" I squeaked, hoping that I had somehow misunderstood him, hoping that he was not intending to put me in a room where someone had been violently murdered.\n\n\"The maid discovered him the next morning,\" continued Doctor Andrews happily, completely oblivious that I had said anything. \"Blood all over the place, and an injury which could not possibly have been self-inflicted. They looked high and low for the murderer, and eventually for just a motive, but none was ever found. In fact, there was no evidence that anyone else had been in the room at all. A real locked room mystery, wouldn't you say?\" Andrews glanced at me, looking positively jolly, and it took him a few moments to notice how white my face was.\n\n\"Is something the matter, Miss Morgan?\"\n\n\"I can't stay in that room,\" I said, my voice beginning to shake again. I thought I had thrown off my headache, but as I stared at the silver handle of the door, it began to push its way once more into the back of my skull. \n\n\"Why not?\"\n\n\"I just can't\"\n\n\"Miss Morgan, there are no other rooms available, and I put you in this room for a purpose. You are, as I'm sure you've discovered, the only true psychic here. The others have a small amount of talent, enough so that they sometimes know who's on the phone before picking it up, or to give them uncommonly good luck at cards, but you are the only one who managed to pass my tests without cheating. I want you in this room because I feel that it might hold the key to unlocking the mystery of this house. You are the only one capable of understanding any messages that the spirits might try to send.\"\n\n\"Look, this is ridiculous. I'm not some kind of human satellite dish. I've never had any 'spirits' try to tell me anything. I don't even know if I believe in ghosts. What I do know, however, is that I will not sleep in that room. I'll ask Nate to switch with me.\" I started down the hallway, but Andrews stepped in front of me, all amiability vanishing from his face. \n\n\"Do I need to remind you, Miss Morgan, that this is a paid study? You are being paid to do as I tell you, and now I am telling you that you are going to sleep in this room for the entirety of the study. If your fear of it is really so great that you would give up your salary, then you may leave. No one is stopping you.\" \n\nI gaped at him, my insides writhing with something close to panic. I couldn't go into that room. I couldn't. But I also couldn't give up four thousand dollars because I was afraid to sleep in a room where some guy had been killed over a hundred years before. In any case, I told myself, even if you thought you could give up the money, you have nowhere to go, remember? You got kicked out of your apartment a week ago, and how are you going to find another place to stay without any money? \n\nI straightened, and raised my eyes to Doctor Andrews'. \"Alright, I'll sleep here. But just know that I hate it.\"\n\n\"I think I can live with that on my conscience, Miss Morgan,\" replied the doctor, observing me with narrowed eyes. \"Please, go in. I would like to see you settled before I head off to my own room.\"\n\nI glared at him and walked over to stand in front of the door. I was shaking again, and the headache had begun to spread into to my temples. I stared at the door handle for several long seconds, and then taking a deep breath and holding it, I reached out and grasped the cool metal. Nothing happened. My breath whooshed out in a relieved sigh. I had been expecting an electric shock or something. Feeling more confident now, I turned the handle and pushed the door open. \n\nNo smell of charnel houses rushed out to meet me. No shrieking ghosts descended from the darkness. I stepped inside the room and fumbled on the wall for the light switch. I found it after a moment's searching, and flipped it. The room was suddenly illuminated in a pleasant golden glow, which emanated from the glass sconces dotting the walls. I looked around, tremendously relieved that the master bedroom was not quite as ridiculously gothic as the sitting room had been. The walls were papered in midnight blue silk, and the carpet was of rich ivory. An elaborately carved mahogany dresser and writing desk stood against one wall, and against the other stood the largest bed I had ever seen. It looked as if it could comfortably have slept six, and it was heaped with pillows and blankets, all of the same shade of blue as the wallpaper. \n\nI set my suitcase down beside the dresser, and then went to sit down on the edge of the bed. The coverlet was satin, and although I was relieved that the room wasn't some blood red and black monstrosity, the feel of the fabric slithering against my bare skin still made me shudder. I looked up at Doctor Andrews, who was standing in the doorway. \"Sorry, Doctor, but I'm just not sensing any spiritual vibrations,\" I said, giving in to a little bitchiness. \n\nHe frowned at me. \"Well, if you do happen to feel something, then I expect you to write it down in your journal.\"\n\n\"Sure.\"\n\n\"Dinner will be at seven. The dining room is downstairs, directly across from the sitting room we were in today. Please don't forget that you are to be accompanied by your buddy any time you leave your bedroom.\" Then, without another word, he turned and left, closing the door behind him.  \n\nI spent the next few hours trying to keep myself busy. I unpacked, explored the dresser and the writing desk, checked out the bathroom, and then got out one of the books that I'd packed, some new mystery novel by an author I'd never read. I sat down at the writing desk and tried to read, but I couldn't concentrate. My body was no longer shivering, but bolts of pain kept shooting through my head, making me wince and close my eyes. Now that I was alone, the feeling of watchfulness that I had noticed earlier returned ten-fold. It was so acute that I kept spinning around and looking over my shoulder, utterly convinced that I would find someone standing in the middle of the room, observing me.\n\nBy the time seven o'clock rolled around, I was so on edge that when a knock sounded on my door I had to stifle a shriek. I jumped up from my chair, heart in my throat, and had to take several long, deep breaths before going to answer the door. It was Nate of course, ready to head downstairs for dinner.\n\n\"Ready to go, buddy?\" he asked, grinning. I flashed back on what had happened in the sitting room earlier, and I tried to stare at him without being too obvious about it. His eyes were blue. His voice was normal. There was absolutely nothing to lead me to believe that the changes I had seen in him this afternoon had been anything but an extremely vivid dream. I let it go. It had just been a dream. \n\n\"Yeah,\" I said, slipping out the door to join him in the hallway. \n\n\"Great, I'm starving,\" He set off down the corridor and I followed, forcing myself to keep my eyes focused straight ahead. I kept wanting to glance behind me, but I told myself that I was just being an ass. No one was watching me. That was the stuff of B horror movies. \n\nWhen we arrived at the dining room, the others were already seated at a long, narrow table. The room's d\u00e9cor was almost identical to that of the sitting room we had been in before: scarlet, black, and gothic. Nate and I sat down next to each other at the two remaining places and looked down at our plates, which were covered with silver lids. \n\n\"Now that we're all here,\" said Doctor Andrews from his place at the head of the table, \"I think we can all dig in.\" He lifted the cover from his own plate and began to eat without further comment. We all followed suit. Tonight's meal consisted of some kind of white meat in a delicate sauce, green beans, and roasted potatoes. At first, I ate ravenously but just as I was starting on the potatoes, Andrews said something which managed to take my appetite away. \n\n\"I just wanted to let you all know that Miss Morgan is not to be disturbed tomorrow. She will be staying in her room for the entirety of the day, resting in order to better sensitize herself to the house's psychic vibrations.\"\n\n\"What?\" I said, dropping my fork onto my plate with a loud clatter. \n\n\"I'm sure that I didn't stutter Miss Morgan.\"\n\n\"I'm not staying in my room all day.\"\n\n\"You are if you wish to remain a paid member of this study.\" \n\nWas I imagining it, or had I seen Andrews' eyes flash briefly silver? No, I was seeing things again. My dream was playing tricks on me. I opened my mouth to tell the good doctor that he could shove his precious study up his pompous ass, but then I remembered myself. I clamped my teeth together and stared at my plate as if it was the most interesting thing I'd ever seen. That's how I passed the rest of the meal, not eating or chatting with the others, but staring at the pattern of red flowers on the rim of my plate. \n\nWhen Nate had finally finished and suggested that we go back upstairs, I was only too ready to oblige him. Not only was I still trying to stop myself from throwing any number of curses at Doctor Andrews, but my headache had gotten worse. Even the gentle light of the dining room was sending shooting pains through my skull. I swayed a little bit when I rose from my seat as the black dots tried to take over my vision, but I managed to steady myself. I was not going to collapse again. Nate seemed to realize that I was having difficulties, because he walked forward and took my arm in a very gentlemanly way. I leaned gratefully against him as we walked out of the dining room, beginning to think that maybe he wasn't such an asshole after all.\n\nWe managed to get to our respective bedrooms without incident, and Nate even saw me to my door before heading back to his own. I didn't flip the switch when I got inside my room, but blundered around into the darkness until I found the small lamp I had seen on a nightstand beside the bed. The dull glow that it produced was just tolerable to my poor head, and I used it to find the bottle of Tylenol I had packed in my suitcase. Ignoring the directions on the back of the bottle, I took four of the little red and white capsules, and then began to undress. The air of the room was a lot colder than I had thought, and I hastily pulled my favorite sleep t-shirt over my naked body, shivering as goose flesh formed on my limbs.\n\nI walked over to the bed, but hesitated before climbing in. Had a murdered man once slept here? Had he dreamt and made love here until an unknown assailant had run him through with his own sword? The shudder that went through me had nothing to do with the cold. I was just scaring myself. The bed had probably been installed by one of the house's other owners. There was no reason for me to think that this was the same bed that had been here a hundred years ago. Still, it took more of an effort than I would have liked to pull back the sheets and lie down on the vast mattress. As the softness of the sheets engulfed me, my head gave a jolt of pain so violent that I almost retched. I willed myself to be calm, knowing that soon the Tylenol would take effect and I would feel nothing. I reached for the lamp, and after a moment's hesitation, clicked it off. I wasn't going to sleep with the light on like a frightened child.\n\nI lay awake for a long time, staring up at the shadows on the ceiling and listening to the house creak around me. The pain in my head lessened, but didn't vanish completely, and I knew that I was in for a long, sleepless night. I began to amuse myself by trying to find shapes in the shadows on the ceiling. There was a duck, and there a rabbit. The Empire State Building. A snake. A man...\n\nA soft voice was whispering in my ear. At least, that's what I thought at first, but then I realized that the words that I was hearing were being delivered directly into my head. \"The living have not entered here for many years, Penelope Morgan,\" the voice murmured, \"and no one like you has ever passed through this house's doors.\" The voice was cold and accented with an unknowable intonation, and it made me feel like a chill wind was blowing through me. I moaned, and tried to struggle back to wakefulness, but I couldn't. My limbs were too heavy, and my eyelids wouldn't lift. \n\n\"I can feed off of the life force of others if I wish,\" the voice continued, \"and indeed I have grown stronger already since your party's arrival this afternoon, but you are different. I can take from you and your body reproduces the energy immediately. The others notice nothing even as I suck years of their life away, and yet you are acutely sensitive to my presence even though my attentions do you no lasting harm.\"\n\nI shook my head feebly back and forth on the pillow, trying the shake the voice out of my head, but it wouldn't go. Instead, it laughed at me, and hearing its laugh was like being stabbed with icicles. I moaned again, and tears began to leak from beneath my closed eyelids. I needed to wake up. I had to wake up.\n\n\"I am not going anywhere, Penelope Morgan,\" the voice murmured. \"I am strong enough now to keep you in the limbo of sleep if I wish it. Soon you will be able to hear me when you are fully awake, but not yet. I have more feeding to do before I have that strength. I think, however, that I will abstain from you for the time being. The others will provide an adequate enough substitute, although it will be like eating stale bread when I could just as easily have the richest cake.\" The voice paused, and I hoped for a fleeting second that it had gone, but then it spoke again. \"How wonderful for me that your power comes in such a delightful package,\" it breathed. A cool wind brushed my cheek, a touch that would have felt like a hand had it been solid. \"I have not expended the energy which it would cost to indulge in the fleshly pleasures for almost a hundred years, Penelope Morgan, but now I find myself sorely tempted. It may very well prove to be worth it, if I could reap the energy that was produced. We shall have to see.\" \n\nI felt the sheets slide down from my chest, and then the fabric of my t-shirt slid up, baring my breasts to the night. A chill wind began to play over my nipples, making them harden and tingle, and I whimpered, trying vainly to force myself awake, to dispel this nightmare. I heard the cruel laughter again, and my tears came faster. \"Alright, Penelope Morgan,\" the voice, purred, \"I will leave you be for the moment. It is only your first night here, after all, and you will need time to adjust. But expect a visit from me soon. Now sleep.\" I couldn't disobey the voice, and as I dropped into darkness, I sensed something cold slip away from me and out of the room.\n\nThe next morning, I awoke feeling like I was recovering from a bad bout of the flu. I was weak, but my head no longer hurt, and the almost constant shivers of the day before had vanished. I sat up, groaning and stretching, and then worked up the courage to peel back the sheets. I bolted out of bed and towards the bathroom, expecting to find myself covered in goose flesh as soon as I hit the air of my bedroom, but it didn't feel nearly as chilly as it had last night. I slowed my pace and walked to the shower with my usual early morning stagger. \n\nI turned on the shower, noticing that the showerhead was carved in the likeness of a yowling gargoyle, and while I waited for the water to heat up, I shucked off my t-shirt and turned to face myself in the mirror over the sink. I made a few faces at my sleep-disheveled reflection and was about to turn to see if the shower was ready when I noticed some peculiar marks on my breasts. There were five patches of pink skin encircling each nipple. They looked almost like fingerprints, ovular, with tiny arcs and swirls barely visible on the surface. I raised a hand to touch one of the marks and confused fragments of a dream I had had the night before came rushing back to me. Dropping my hand away, I shuddered and turned to the shower. The water was steaming now, and I stepped gratefully into it, relishing the scalding heat as it erased my recollections of the dream. ",
        "As the hot water flowed over my skin I tried to figure out where those marks could have come from. There was no way they could be fingerprints. Maybe I had fallen strangely when I collapsed the previous day, and something had pressed into the skin of my breasts. That didn't sound very convincing, even inside my own head, but it was a hell of a lot more believable than the idea that someone's fingerprints had somehow been branded into my flesh. By the time I had finished my shower, I had managed to put the marks out of my mind, and when I glanced at my reflection in the mirror as I dressed, I saw that they were beginning to fade. \n\nThe rest of that day followed what would become the typical pattern of my days at Carleton House. As per Dr. Andrews' instructions I stayed the entire day shut up in my room. Nate was sent up to bring me first breakfast, and then lunch, which he did with much grumbling about the unfairness of such menial labor. Nate had apparently been attached to another pair of subjects in the group, and was no longer my official buddy. That bit of news made me suspect that being confined to my room for the entire day was going to become a regular practice, and I was right. At dinner that night, when I was finally allowed to leave my room, Andrews told me that he wanted me to spend my days in my room for the rest of the study. I didn't argue with him because I knew from the look on his face that it wouldn't do any good. \n\nOn most days, I alternated between bouts of pissed-off anxiety and moroseness. I wanted nothing more than to tell Doctor Andrews that he could find himself another guinea pig for his little study, but I couldn't forget how much I needed that money. 'Four thousand dollars' became a kind of mantra whenever I was feeling particularly upset. I didn't faint again, and although my head would sometimes go through bouts of aching and I would occasionally be seized by fits of shivering, the pain that had crippled me when I first arrived at the house didn't reappear. \n\nMuch to Doctor Andrews' disappointment I didn't provide any reports of supernatural activity. My journal entries basically consisted of an account of my days, which were none too exciting considering the fact that I spent almost all of my time confined to my room. The only strange things that had happened to me since my arrival were the appearance of those marks on my breasts, and a half-remembered nightmare, neither of which I thought the good doctor needed to know about. When the first week ended and no one in the house had reported anything unusual, Andrews began to look rather downcast, which cheered me up a bit. Hopefully this whole study would end up being a total waste of his money.\n\nI was beginning to feel hopeful that Carleton House was just your normal, everyday house, albeit one that looked as if it had been decorated by a blind Satanist. No ghosts, no ghouls, no spiritual vibrations. Those bad feelings that I had been having on the way over and the ones which seized me every now and then during the days didn't mean anything. Maybe whatever it was inside of me that told me when I was heading into trouble had stopped working. In any case, nothing happened after that first night, which led me to believe that there was nothing unusual about Carleton House. \n\nOn an evening at the beginning of the third week, I arrived at dinner about twenty minutes late. I traveled the house by myself now, despite Dr. Andrews' initial command that everyone must have a travel buddy. The doctor didn't really seem to care anymore. In fact, he didn't seem to care for anything much just lately. All the enthusiasm he had exhibited on our arrival had vanished. I was also beginning to wonder if he was sick, because, physically, he had changed a great deal since we arrived at the house. His hair seemed to me to have acquired quite a few more streaks of gray, and the lines of his face had deepened and increased in number. Dark circles permanently ringed his eyes, and his walk had become stilted and slow, the walk of a much older man. \n\nWhen I walked into the dinning room, the others all raised their heads from their plates to look at me, and I was shocked to see that they all looked rather ill. Their faces were pallid, and all of them had lost weight, enough so that their cheekbones protruded slightly, and their eyes had sunk back into dark hollows. Why hadn't I noticed it before? Maybe it was because I was usually the first person to arrive at dinner, and I rarely looked up from my plate when the others walked in. I never really talked to them, and they never tried to talk to me, but now that I saw them all together, I was amazed that I hadn't picked up on how tired they all looked. Maybe there was some kind of bug going around that I had yet to catch.\n\nI was just sitting down when Doctor Andrews cleared his throat. \"Now that we are all here, I have an announcement to make.\" His voice was a lot feebler than I remembered it to have been outside the house. We all waited for him to continue, which he did after a lengthy pause. \"I will be leaving Carleton House tomorrow afternoon. There has been absolutely no progress in my research, and I have fallen ill. I don't think that staying here is making me any healthier. If any of you would like to come with me, I will pay you half of your promised salary. If anyone wishes to stay, I will of course pay them the full amount promised at the close of the fourth week.\" The others had suddenly perked up, and identical expressions of relief had appeared on all of their faces. I, however, was not feeling so cheerful. I couldn't leave now, no matter how much I wanted to do so. Two thousand dollars was not enough, I needed it all. Apart from not having a place to live, I had racked up quite a list of debts as I floated from place to place trying to find a job. People just didn't want to hire me. I was too weird. \n\nDoctor Andrews cleared his throat. \"Will anyone who wishes to leave raise his or her hand?\" Everyone at the table raised a hand, everyone but me. They all turned to stare at me with incredulous expressions on their faces. Even Doctor Andrews looked surprised. \"You wish to stay, Miss Morgan?\"\n\n\"No, I don't,\" I said, looking down at my plate. \"But I need the money.\" \n\n\"I see. Well, I'm afraid you will be here all by yourself. You'll have to prepare your own meals, and take care of your own housekeeping. You'll be quite isolated.\"\n\n\"I think I can deal with that,\" I said, not sure that I could.\n\n\"That is up to you Miss Morgan. I promised four thousand dollars to subjects who completed the study, and I will not go back on my word.\"\n\n\"Good to know,\" I muttered, pushing my food around with my fork, no longer hungry. Silence fell around the table, punctuated only by the sound of knives and forks scraping against china. After about five minutes, I stood up and walked out of the room. My head had begun to hurt for the first time in several days. It was as if my body was punishing me for not escaping this place when I had the chance. As I made my way back to my room, I tried to ignore the panic growing inside of me. Tomorrow, I would be here all alone. I hadn't experienced anything that could justify the dread I felt at that prospect, but I felt it all the same. Maybe it was that dream I'd had on the first night, or the one from when I was recovering from my faint. The remnants of those dreams were playing tricks on me.\n\nI reached my bedroom door, and turning the silver handle, I slipped inside. As I flipped the light switch, and then turned the lock on the door, I suddenly realized that the room felt much colder than usual. The air conditioning must be working in overdrive. I stood in the middle of the room, indecisive about what I was going to do next. It was really too early to go to bed, but I didn't feel much like reading or doing the book of crosswords I had brought along with me. Maybe I could take a bath. That might help with my headache. I wandered into the bathroom and took a look at the large white tub standing on its old-fashioned clawed feet. I hadn't used it yet, probably because I had always found those old tubs vaguely creepy. I was really getting pretty cold, though, and a soak in a tub full of hot, soapy water sounded like just the ticket. \n\nI turned the tub's brass taps, and adjusted the temperature until it was just short of scalding. Then I went back into the bedroom to wait for the tub to fill. I checked the thermostat on the wall, and it said that the room was now about fifty-eight degrees. I had no way of adjusting the temperature from here, though. I would have to talk to Andrews about that before he left the next morning. I went to the armoire and picked out my favorite set of pjs, an oversized t-shirt and a pair of worn out plaid boxers. I set them on the bed and then walked back into the bathroom to check the progress of the tub. It was just about full, so I shut off the taps. I began to undress as quickly as I could. The cool air made goose bumps rise on my skin. It felt more like twenty-eight degrees than fifty-eight, but that was probably just my imagination. For one fleeting instant, I could have sworn that I felt a light puff of wind brush over my torso, but then I lowered myself into the tub, and intense heat immediately drove away the cold. It felt divine, and I tilted my head back and gave a soft groan of pleasure as the hot water lapped at my skin. \n\nI just lay there, eyes closed, letting the water relax my muscles and drain away the lingering ache in my head. At first, I thought of nothing, my mind a blissful blank, but after awhile, my thoughts began to coalesce into fantasies. Maybe it was the heat, or the pleasure of being almost weightless in the water, but I felt a heat growing between my legs that had nothing to do with the water temperature. My mind began playing out an elaborate fantasy, a fantasy which seemed to come out of nowhere. It was as if someone was playing a movie in my head. \n\nI was lying on the huge four-poster bed in the next room. I was naked save for the silk scarves tied to my wrists and ankles. The ends of the scarves were all secured to a separate bedpost, so that I lay spread-eagled on the bed, my limbs stretched to their limits. My head was propped up on pillows, and I watched as a man walked slowly towards me. I had never seen him before. He had long blonde hair, shining grey eyes, and his skin was so pale that it appeared almost transparent in the moonlight that was the only source of illumination. He wore old fashioned clothes of black and silver, garments that looked as though they would have been very fashionable a couple centuries ago\n\nI realized that I was incredibly afraid of this man, yet at the same time, I was terribly, desperately aroused. My pussy was swollen and throbbing, and moisture had already begun to dampen the sheets beneath me. As the stranger drew nearer, I tried to get away, but the scarves held me pinned to the bed, completely helpless to do anything but await my fate. \n\nIn the bathtub, I crept a hand down to my pussy and found the bud of flesh nestled between its lips. I began rotating it slow, languid circles with two of my fingers. \n\nWhen the man was near enough to touch me, I ceased my struggling. I waited, prone and terrified, wondering what he was going to do to me. He laid a hand on my trembling belly, and I gasped at how cold it was. He ran his fingers over my skin, and wherever he touched, gooseflesh rose in his wake. His hands went up to cup my breasts, and he squeezed them hard enough to make me cry out in pain. This made him smile, a cruel smile that sent a bolt of fear lancing through me, but then his thumbs began to brush back and forth over my nipples, and I forgot all about fear. I arched up off the bed, releasing a mewling gasp of pleasure as my nipples hardened and swelled, and the throbbing between my legs intensified until I thought I would burst. I had never felt so aroused in my life, so desperate for relief. \n\nI moved my hand faster now, frowning in concentration as I tried to bring myself to orgasm. I was more than ready for the release, but it wouldn't come. I worked myself harder, adding another finger to the pair already on my clit, and sliding another two inside of me to glide in and out of my pussy. I moaned and twisted in the water, and increased the pace of my stroking, but still I couldn't come.\n\nThen his hands were gone, and I cried out both in protest and relief. I looked up at him, tears rolling down my cheeks, and with my eyes, I begged him to grant me relief. He smiled his cruel smile again, and then laid a hand on my pussy, cupping it in his cold palm. I whimpered, and he gave a squeeze, sending a jolt of sensation through me. I almost came, right then and there, but the man shook a finger at me, as if remonstrating with a naughty child. \"Oh no, Penelope Morgan. You are only allowed release when I give you permission.\" His voice was like a winter wind, and his words filled me with dread. My tears fell faster, even as my pussy ached for attention. \n\nI began to cry softly, hardly aware of the warm tears coursing down my cheeks. I couldn't come. For some reason, I just couldn't manage to do it. It hurt, it hurt so badly to want to come this much and yet to be unable to do so. I was almost brutalizing my poor pussy in an attempt to reach orgasm, and water had begun splashing out of the tub as I thrust my hips, rammed my fingers in and out of myself, and rubbed desperately at my swollen clit.\n\nHis hand left me, and he climbed up on to the bed. He positioned himself between my splayed legs so that his head hovered over my pussy, and I cried out in terror. A moment later, an icy tongue began to stroke its way up and down my slit. The chill of his flesh revolted me, but at the same time, it felt incredibly good. His tongue teased me, licking at my opening, but not passing through it. I moaned and tried to raise my hips to entreat him to dip inside of me, but I was bound too securely to do anything more than jerk my hips a bit. Just when I was sure that I could bear it no longer, his tongue forced its way inside of me. I cried out in ecstasy and revulsion as I felt him begin to lap at my wetness.\n\nI was moaning so loudly now that my voice echoed throughout the bathroom. It took me a moment to realize that I was no longer touching myself. Both of my hands were clutching the tub's white porcelain sides so hard that it hurt.\n\nHe wasn't gentle. He sucked and licked and nipped so fiercely that the pleasure almost bordered on pain, but if he had tried to pull away, I would have died. He had not yet touched my clit, and the little bud was throbbing so hard that it seemed almost alive, almost as if it was screaming for his attention. And then he gave it. His mouth clamped down upon my clit and he began to lash it with his tongue. He bit at it and sucked it with his cold mouth until my screams rebounded off the bedroom walls. If he didn't let me come soon I would go insane. I fancied that I could hear my sanity creaking under the strain that he was putting on it. There was no way I could go on like this, no way...\n\nThe sounds coming from my mouth no longer even sounded human. My hips pumped in and out of the water, my pussy clutching desperately at nothing but tepid water.\n\nSuddenly his mouth was gone, and I released a broken wail of despair. He sat up and looked down at me, his smile wide and diabolical, his eyes dancing with savage delight. He looked down at me, taking in my trembling limbs, the blotchy scarlet flush of my pale skin, and the mist of perspiration that had collected on my face and chest. He crawled up so that he lay beside me. He turned on his side and molded his body to mine, pressing himself against me so that I could feel the chill radiating from him, and feel the hardness of his cock against my flesh. \"I think that you have had enough for now, Penelope Morgan,\" he purred into my ear in a voice like springtime frost. \"You may climax.\" Then he leaned forward and kissed me, an almost chaste touch of his lips, but suddenly I was sent hurtling over the edge. \n\nMy hands clenched on the sides of the tub. My entire body went rigid and arched up out of the water. My limbs quaked, and my pussy began to convulse. The bathroom disappeared as I was sent headlong into a climax that was only a breath away from agony. My body jerked and seized, splashing more water out of the tub, and colored spots danced across my vision. Every nerve seemed to be on fire, and I screamed until my throat cracked. My breath left me in ragged bursts, and I tried to close myself to the sensations, the feeling so pleasurable that it wandered into the realm of pain. I could do nothing, however, but ride the waves of sensation to their finish. It seemed to go on for hours, but when the ecstasy finally began to diminish, I felt my consciousness beginning to dim. The last spasms of my orgasm followed me down into blackness. \n\nI woke up with a jolt. I foundered for a moment, sure that I was drowning in the water of the tub, but then I realized that I was lying in bed. I looked around, completely disoriented, and saw that the lights in my bedroom were all burning brightly, and that a sliver of a moon was just visible outside the window. I forced myself to take several deep breaths, and then glanced at the clock on the nightstand. It read 8:00 pm. I blinked and rubbed my eyes, sure that I had misread the glowing numbers, but when I looked again, the time hadn't changed. This couldn't be right. I had gotten into the bath at eight o'clock. I went over to my suitcase and dug out my old Timex. It also read 8:00 pm, but at the bottom, the word \"Sunday\" was illuminated. Shock flooded me. When I had gotten into the tub it had been Saturday. I had been asleep for twenty four hours. I had slept the day clean away. What the hell had happened last night?\n\nMy brow furrowed as I tried to bring my most recent memories into focus. They all seemed far away and hazy. I had gotten into the tub and at first I had just laid there, but then I had started to...a flush crept into my face as I remembered what I had done to myself. I shivered and shifted on the bed, noticing for the first time that I was naked. Reaching down to pull the sheets around me, I tried to recall what exactly it was that had gotten me so heated up the previous night. I was pretty sure that it had involved me being tied to this bed, which was strange, because I had never really been one for bondage play. The only other thing that came to mind when I strained my memory was numbing cold. I had no idea where that had come from. And how had I gotten into bed? Why couldn't I remember anything clearly? \n\nI reached up and touched my head, thinking that maybe I had bumped it against the tub and passed out, but there was no lump to be found. Maybe I had passed out from the heat or something and then stumbled to bed. I shook myself and tried to put the strange loss of time from my mind. At least I hadn't drowned in the bathtub. That would have been embarrassing, although maybe then Doctor Andrews would have had something interesting to put in his book. He could have made it out that I had been murdered by the vengeful spirits of Carleton House. \n\nThen I remembered that Doctor Andrews had left this morning with the rest of the subjects. I realized that I was the only person left in the house. Sudden shudders wracked my body, and I drew the sheets closer around me. \n\n\"There is no need to be so afraid, Penelope Morgan, I will take good care of you.\"\n\nMy head flared with pain, and I shrieked in surprised terror as fragments of half-forgotten dreams came rushing back to me at the sound of a strange, cold voice from across the room. I jerked around in bed, clutching the sheets to my body, and saw that a man was sitting on top of the writing desk, a man who had not been there a few seconds before. He had long fair hair and silver eyes, and his skin was so pallid that he looked almost insubstantial in the golden light from the lamps. \"Who are you?\" I whispered, even though a part of me already knew.",
        "\"I am the master of this house,\" the man replied, hopping down from the writing desk. He glided over to the bed, and I saw with a sick wave of fear that his feet were only just brushing the ground. He came to a halt beside the bed and stood looking down at me, his head cocked to one side like that of a bird of prey. I couldn't move. My body had shut down. He reached out and curled an icy hand around my chin, using it to force my eyes to his. \"So shocked, Penelope Morgan, and yet I have spoken to you several times before now. I have even made love to you, after a fashion. The living are so good at forgetting things which they do not wish to remember.\" He stroked his fingers over my cheek, and my body convulsed with violent shivering. \n\n\"What do you want?\" I gasped, trying to convince my paralyzed body to move away, to get up and run from this house as fast as I could. \n\n\"I would have thought that was obvious, Penelope Morgan. I want you.\"\n\n\"Me?\"\n\n\"Yes, you. You have so much power, Penelope Morgan, power that is mine for the harvesting. Last night, I discovered the perfect method with which to milk you.\" He moved his hand away from my cheek and slid it down to my chest, where he pulled the sheet away from my unresisting fingers. His fingers crept to my breast and began toying with the nipple, his cold touch immediately making the bud stiffen and swell. \"I found out last night that the amount of power that you release at climax is absolutely staggering. I am old, Penelope Morgan, older than you could ever dream, but in all of my existence I have never felt so much power emanating from a single living human. I drank my fill, drank enough to assume a solid form, and yet there was much to spare. I cannot let a treasure like you escape me. You are mine.\"\n\n\"No. I can't stay here. I have to leave. I have to leave right now. You're not real. You're a hallucination.\" Black spots danced before my eyes, and a distant part of me was amazed at how thin and warbling my voice had become. I struggled up from where I sat in the bed, knocking the cold hand from my breast as I did so. But of course, there was no hand. That was just my imagination. Maybe the doctor had slipped something into my food before he left, and it was giving me hallucinations. Yes, that made sense. That's why I had passed out in the tub last night, and that's why I was talking to a ghost right now. \n\n\"You are not going anywhere, Penelope Morgan,\" said the ghost who wasn't there. I didn't listen. I had to get out. I had to get out of this house. I crawled to the opposite side of the bed, and almost toppled off of it before I managed to gain steady footing on the floor. Nothing happened for a moment as I began to run for the door, but I had barely taken my second step when I felt myself being lifted from the ground. It started slowly at first, I rose so that my toes just barely brushed the carpet, but then I shot towards the ceiling and came to a halt several feet off of the ground. I shrieked and began thrashing wildly at the air, causing the sheet around me to slither to the floor, and leaving me utterly exposed.\n\n\"Let me go! Let me go!\" I screamed over and over again, twisting and writhing in the air, a part of me still unable to believe what was happening.\n\n\"No, Penelope Morgan, I will not let you go. Stop your thrashing.\" The man's face drifted into my vision. He was floating at my level, staring at me. He reached out a hand and laid it on my shoulder and suddenly I couldn't move. My limbs were pinned to my sides and my legs locked together. My jaw felt as if it had been welded shut, and all I could do was listen to my heart beating wildly in my ears, and the panicked sound of my breathing. \"It would have been easier for you had you not given into hysterics,\" said the ghost, his face still level with mine, both of us still hanging suspended in midair. \"You have made me hungry with your little struggles, and I do not think that I will wait to be fed. Your fear is almost as intoxicating as your pleasure.\" His hand slid from my shoulder and he stroked it across my breasts a couple times before moving lower. When he began to caress my pussy with his icy hand, terror exploded within me. It was the dream again, but this time it was real. A groan tore from my throat, but was muffled by my clenched teeth. I tried with all of my might to get away from him, but none of my limbs would move, and I could find no purchase in the empty air. Helpless tears began to leak from my eyes and shudder after shudder ripped through my body. \n\nHis hand nudged against my thighs, and they were drawn apart, stretched to their limits even as my muscles trembled with the effort to keep them closed. He backed away from me and made a gesture, and then I was being pushed by invisible hands until I lay parallel to the floor. My arms were pulled upwards until they were also spread, splayed over my head. And all the while, the ghost hovered there, observing me dispassionately with his shining silver eyes. When I lay spread and trembling, the ghost approached me. He ran his hands up and down my body, a cruel smile on his lips as he listened to my muffled moans and whimpers. His skin was so cold that it almost burned, but when he brought his hands back up to my breasts and began to work my nipples between his icy fingers, jolts of pleasure shot through me. \n\n\"I am going to release your voice, Penelope Morgan\" he hissed into to my ear \"If you scream, no one will hear you, so I would advise against it.\" I felt his hand caress my jaw and suddenly, I could open my mouth again. My first instinct was to scream, but I remembered what the ghost had said and choked back the shrieks which struggled to burst from my throat. My eyes rolled in their sockets, and I think that I was on the verge of passing out, when a cold hand fell on my forehead and the world solidified once more. \"You will not escape me through unconsciousness, Penelope Morgan. There is no place you can hide where I will not find you\" His voice grated on my ears, and my chest began to hitch with sobs, but the ghost only began to run his hands up and down my body once more, as if inspecting a piece of livestock. \n\nHe came to a stop at my pussy, and to my absolute horror, slipped a long, icy finger inside of me. I wanted so badly to close my legs, to buck and writhe in an effort to expel him, but I was utterly helpless in my paralysis. All I could do was release broken moans and concentrate on not screaming. His finger prodded and circled, delving into my deepest hollows, and I wept at the violation and at the knowledge that much worse was inevitably to come. The hell of it was that my body was not unaffected by my captor's attentions. On the contrary, I felt myself becoming more and more aroused as his finger continued to probe at me. He soon joined it with another and the coldness of them shocked me anew. It was like being violated by an icicle, but at the same time, it was dizzyingly, staggeringly arousing. He began to pump his fingers in and out, curving them upwards so that they brushed deliberately against my g-spot. I moaned and tried to buck and squirm, but whatever magic he had used to bind me held, and I was forced to watch as he manipulated my own body against me. Soon my pussy was slick with moisture, and a flush had crept into my flesh. I was panting, and I knew soon that despite my fear, despite my revulsion, I was going to come. I was as helpless to prevent it as I was to prevent my heart from pumping or my lungs from drawing breath. Just as I was sure that I was about to fall over the edge, the cold fingers were removed. I realized that my eyes had been closed, and when I opened them, the ghost was still there, still hovering above me and looking down at me with his preternatural silver eyes. My body ached from being pulled back from climax, and I closed my lips tightly against a moan of desperation. My pussy ached like a bruise. \n\nI must not have been able to hold in my desperate moan completely, for the ghost gave me a chilling smile and said, \"Calm yourself Penelope Morgan. I will not leave you languishing. I think only to increase the strength of your climax when I finally allow you to have it. I am curious just how much power you will be able to generate if I have frustrated you beyond what you think possible to bear.\" With that he began again, using his cold fingers in ways which I had not believed possible. It seemed to go on for hours. He stroked and pinched my clitoris until it was stiff and swollen, he probed inside my opening and caressed my g-spot, he ran his fingers over and over my slit until I was wetter than I had ever believed possible. Moisture ran down my thighs and onto the floor, and his fingers delved in and out of my hollows as smoothly as if they had been oiled. \n\nThen, without warning, he inserted one of those slick fingers not into my pussy, but into the smooth puckered opening of my ass. This time I could not hold back my cry. No one had ever touched me like that before, and the muscles of my anus contracted indignantly at the intrusion of such a foreign object. The cry had absolutely no effect on my tormentor, and the first finger was soon followed by a second. The strangeness of the intrusion blossomed into discomfort. When he dipped a third finger into the wetness he had created and inserted it to join the first two, discomfort turned to pain. He began to pump those fingers in and out of me, heedless of my pain, going slowly at first, but gaining speed. My body tried wildly to expel him, but it was of no use. I was forced to lie still, stifling my cries behind clenched teeth. \n\n\"This is something new to you, is it not, Penelope Morgan?\" The ghost said conversationally, still working his fingers in and out. \"It is causing you pain now I daresay, but do not worry, the pain will soon disappear. Let me help to ease it.\" A look of concentration passed briefly over his face, and I released a strangled cry as I felt two pairs of hands at my pussy, one pinching and stroking at my clit and the other pumping in and out of my opening. I looked down the length of my body, but saw nothing but the ghost, continuing to work his cruel fingers in and out of my ass. Somehow he had conjured an extra pair of hands to torment me. As I thought this, the ghost looked into my face and smiled. \"Yes Penelope Morgan, I have more power than you know. Your fear and your pleasure are feeding me even now. Let me give you another demonstration.\" The look of concentration passed over his face again, and suddenly, two skillful, invisible mouths were sucking and lapping at my nipples, making them stiffen and ache once more. I moaned and cried out, but I might as well have stayed silent for all the good it did. The ghost continued to violate me and to my shame, the pain really had gone away. It had been replaced by a sensation of pleasure unlike any I had ever experienced. The pain in my ass had vanished to be replaced by a feeling of pleasure both like and unlike that evoked from my pussy. My muscles had relaxed in their frantic attempts to expel him, and the sensation of those fingers in my ass combined with the skillful hands at my pussy and the hungry mouths at my nipples to make me struggle against screaming at the top of my lungs.\n\nSoon, I felt sure that I was going to come, and this time there was no way he would be able to stop it. Even if he took all of his torturous, damnably pleasure-giving mouths and hands away, I would still come. Nothing could have prevented me. He looked at me as I thought this, and a slow smile curved his face. It was a smile that a tomcat might give to a mouse as he plays with it. The look of concentration flitted over his face yet again, and suddenly it was as if a dam had been erected in my soul. The pleasure built and built behind it, threatening to break through its wall, but the dam only grew larger to accommodate the growing force behind it. \"You will not climax until I am ready, Penelope Morgan,\" the ghost said, his glowing silver eyes boring into me, freezing my soul. I moaned, a desperate half-mad croak, but he simply shook his head and continued to work his dark magic upon me. I don't know how many times I felt myself on the verge of climax only to be brought down. Soon, there was no bringing down, just a constant sensation of being on the edge, but being unable to fall over it. \n\n\"Please, please stop!\" I gasped over and over, but it did no good. He just shook his head and smiled. Finally, however, it did stop, but not at my entreaty. When every inch of my skin was flushed crimson, when my every muscle was trembling as if I were having a seizure, and sweat beaded my entire body, the tormenting hands and mouths suddenly disappeared. The ghost glided so that he lay over top of me, his body hovering several inches from my own. \n\nHe looked down into my face and said, \"Now it is time that I take my pleasure as well as give you yours. I will allow you to climax soon now, Penelope Morgan, but not yet. I have one last experiment yet to try.\" Suddenly he was naked, his clothes had melting away from his body in wisps of silver smoke. Some distant part of my mind could admire the cold, masculine beauty of the ghost's form. His limbs were long and slender, but well defined, his chest was smooth and firm, and his cock was very large, thick, and quite hairless. It jutted from between his spectral legs, fully erect, brushing against my belly as he hovered above me. My trembling redoubled as fresh wave of fear washed over me and my stomach twisted into a sick knot. I knew what was coming, and it took every inch of my self control not to start screaming for help. My tears, which had ceased a little while ago, began to roll down my cheeks once more and my chest hitched once in a sob which I stopped before it could leave my mouth. I wouldn't give this bastard the satisfaction of seeing me lose my head. A part of me, a cold, ironic part of me which seemed to have remained untouched throughout this ordeal laughed at the idea of my trying to maintain my dignity. What use was pride now? I could scream or I could lie here silent. The end would be the same. \n\nThat cruel smile quirked the specter's lips again and he floated closer, so that his face was only a couple inches from mine. His tongue flickered out and licked the tears from my cheeks. The touch was icy cold and I shuddered, screwing my eyes shut. When my cheeks were clean of tears, he pressed his lips to mine, and after sucking them with apparent relish, he forced his tongue into my mouth. I groaned in revulsion and fear as he kissed me. The gesture was devoid of any tenderness; it was a conquest. His tongue tasted every part of me, its chill making me feel as if someone had forced an ice cube into my mouth. My traitorous body was not nearly as affronted by this kiss as was my mind. On the contrary, my hips jerked helplessly against the enchantment which held them in place, trying desperately to find something which would ease the maddening ache between my legs. My body seemed to remember the diabolical pleasure that this cold tongue could bring, even as my mind reviled it.\n\nSudden anger, hot and strong surged up within me. This ghost, this thing, had turned me against myself, all for its own sick pleasure. Who was this creature to use me like some kind of farm animal? His attentions meant nothing. He had said it himself. He was milking me, coaxing the power out of my body with indifferent skill. Somehow all of this degradation might have been a bit more bearable if there had been some kind of infatuation. If this ghost, and I only thought of him as a ghost now because I couldn't think of a word for what he was, had been some tormented spirit condemned to an afterlife of loneliness, it would have been different. It would have been romantic. Romantic in a sick, twisted, gothic way, but at least I would have felt like a person rather than a cow. I knew that this was a ridiculous thing to think, but I couldn't help it. Somehow I knew that the thing floating above me had never been human, so all human emotions, from love to anguish, were beyond him. He was not some poor soul driven to wickedness by centuries of neglect. He was a metaphysical leech. The fury within me boiled over, and I began to struggle, not with my body but with my mind. Everyone kept telling me that I was so powerful; Maybe I could use that power to save myself. I had spent my entire life trying to pretend that things like psychic energy didn't exist, trying to pretend like I was normal, but if there was ever a time to give this whole psychic thing a try, now was definitely it.   \n\nThe ghost was still kissing me, acting as if he was trying to suck my life out through my mouth. Maybe that was what he was trying to do. It would probably save him time. I ignored the kiss as best I could and concentrated on myself. My entire body throbbed with repressed desire. I could feel the dam that the ghost had erected within me, the one which held back my climax. It had grown huge, and I fancied I could hear its foundations creaking as it struggled to keep the energy behind it at bay. That was promising. He wasn't all-powerful after all. The metaphor of the dam was as good as any I supposed, so I went with it. I imagined a gigantic siphon sucking the energy back from behind the dam, imagined the power flowing back through my body, and to my shock I felt heat wash over me, erasing the chill of the specter's presence. I was on the brink of pushing that energy out at my tormentor when the kiss abruptly ceased.\n\nI opened my eyes and found myself looking directly into the ghost's face. His eyes had narrowed and his mouth was twisted into a surprised sort of sneer. I gathered myself, and not knowing how exactly I was doing it, prepared to hurl at him some of the energy I had gathered. Before I could even begin, agony blossomed in my head. It felt as if someone had driven twin spikes into my temples. I felt the power slip away from me and I released a cry of pain and despair.\n\n\"If you try that again Penelope Morgan,\" the ghost hissed, his face still hovering directly above my own, \"I will make you very, very sorry. You think this is pain, but this is only a sample. I can take power from anguish as well as ecstasy. It is a harsher vintage, but if you dare cross me again, I will soon have you begging me for death. Do you understand me?\" As if to drive his point home, another bolt of pain flared in my head and I cried out. \n\nFresh tears leaked from my eyes and I nodded. The pain receded and I went limp against my invisible bonds. Well, that hadn't worked. But all the same, I knew now that I could use my power just as well as he could, and apparently he didn't like that idea. I didn't quite know what I was doing, but the energy was mine, and I had a strange feeling that it liked me a lot better than him. It wanted to obey me, but how could I access it without the ghost delivering on his threat? Enough pain like that would drive me mad. I thought feverishly, almost unconsciously erecting a wall in my thoughts so that the ghost couldn't listen in. He had begun to lick and suck and bite at my nipples, and the sensation made me moan, but still I thought. I had been on the very edge of orgasm for what might very well have been hours, and when I came, presumably all of that pent up energy would come rushing out, ready to be feasted upon by this leech. What if, in the instant of orgasm, I gained control of the power rather than the ghost? If he wanted it so badly it had to be very formidable indeed. Could it be enough to destroy the bastard? A spark of hope glimmered within me. It was a chance; indeed, it seemed to be the only chance. If I didn't take it I would end up trapped in this house acting as this creature's milk cow until I either died or he killed me.\n\nMy thoughts broke off abruptly when I felt something large, cold, slick, and softly yielding enter my ass. It was larger by far than his fingers had been and I screamed in pain as it thrust in and out of me, heedless to the frantic contractions of my muscles. I looked down my, expecting to see him fucking me, but he was still lapping at my nipples, his cock pressing against my belly. He had conjured another one of his invisible appendages to torment me. I moaned and tried to expel the intrusion, but it was like fighting against a hurricane. In the end I lay back and tried to relax my ass as much as I could. To my surprise, the pain soon gave way to that same delicious friction I had experienced before, only it was magnified. ",
        "\"That's right Penelope Morgan.\" The ghost had lifted his mouth from my nipples, and now he smiled at me, displaying a mouthful of pearly, pointed teeth. \"The less you resist the easier it will be. Acquiescence is a virtue.\" He idly ran a few of his fingers over my swollen clit, and I jerked. \"I don't think I will wait any longer,\" he said conversationally. \"I am going to take you now, Penelope Morgan, and then we shall see if you are as powerful as I think you are. I will release your legs for this. They are very pretty, and I quite fancy seeing them wrapped around my waist.\" That look of concentration fleeted over his features, and suddenly, I could move my legs. I fought the impulse to kick out at him. It wouldn't do any good; the blows would probably just pass right through him. \n\nHe shifted slightly above me so that his cock prodded my slick opening rather than my belly. I held my breath and braced myself. The invisible cock still pounded away at my ass, making thought difficult, and the fear of having him inside of me tried to cloud my mind still further, but through it all I grasped tightly to my plan, my one hope for salvation. \n\nHis cock, winter cold, almost painfully thick, and at least eleven inches long breached my opening and slid slowly inside of me. Just when I thought that I could never in a thousand years take the entire length of it, the last few inches disappeared and he began to thrust, a slow and steady rocking of the hips which mocked solicitude. He timed his strokes so that they came at a counterpoint to those driving into my ass, and the pleasure was almost too much. I had had no idea that pleasure could hurt so much. I had been on the edge for hours, but now I was in that state which occurs the instant before orgasm, that frantic, desperate period when you would keep going even if your mother, your father, your grandparents, and your local priest walked in. But instead of consisting of a mere moment, it went on and on, spinning out into eternity. I could almost feel my sanity creaking, and I think the only thing that kept me sane was the part of me which clung to the small spark of hope which lay at the end of this ordeal. I had to endure, I had to.\n\nI felt invisible hands grasping my legs and wrapping them around the specter's waist, and the position shift caused his thrusts to rub maddeningly against my g-spot. I screamed so loudly that it burned my throat, and unable to stop myself, I began to buck my hips up against him, forming a counterpoint to the two cocks inside of me, the invisible one plundering my ass and the corporeal one, so cold that it was as if I was being fucked by a chilled marble statue, thrusting deep inside of my pussy. Scream after scream tore from my throat, but far from granting me release he only increased his pace, plunging in and out of my soaking pussy faster than any human being ever could have. The cock in my ass sped up to match the pace, and I writhed, my body trying desperately to find a position which would finally allow it release. Time passed, marked only by the tireless thrusting above me, and I endured as best I could, but soon I began seeing patches of blackness at the corners of my vision. The human mind and body are not designed to bear such strain. If I didn't come soon I was going to pass out.\n\nThe ghost seemed to sense this, for he bent his head and whispered in my ear. It was strange to hear him sounding so calm when the lower half of his body was doing things to me which I hadn't even know were possible. \"I am going to let you climax now, Penelope Morgan, and then we shall see exactly how much power is inside that pretty frame of yours.\" The familiar look of concentration fell over his face, and I felt the dam he had erected inside of me burst. I screamed, screamed louder than I had ever done in my life. Every part of me seemed to be on fire as the orgasm rocked through me, erasing even the coldness of his touch. My pussy and ass spasmed and jerked around the two cocks inside of them, the contractions so strong that I was surprised I didn't expel him by sheer force. All the blood seemed to rush to my head and colored lights danced in front of my vision. I writhed and jerked against him, cry after cry tearing from my throat. This was too much, I would die, I would die\u2014\n\nThe small part of me that was still thinking spoke up. Now! It shouted, now! With an effort I turned all of my will to the power pouring out of me, reining it in, gathering it to me. It came willingly, and the strength of the orgasm redoubled as it surged back into me. I screamed again, and as I did so, I pushed out with my mind, putting everything I had behind the blow. \n\nThe ghost flew off of me as if he had been blown by a gale, and the spectral cock left my ass. As I continued to orgasm I poured all of my will into the ghost's destruction, and as I watched he began to grow transparent. There was a look on his face of incredulous fury, and I saw that he no longer looked quite so human. The pupils of his eyes turned to vertical slits, and his face became angular and almost catlike. I could see the opposite wall through his body, and joy surged through me. I was beating him! I felt his efforts to stem the flow of my power, but I batted them away like the trifles they were. \"You bitch!\" he shrieked, showing long, pointed fangs. His eyes gleamed red, and he lunged at me. I gave a final mighty heave with my mind, and suddenly he exploded. It was a silent spectacle, but impressive. It was as if someone had planted a bomb in his transparent flesh. Scarps of gray mist flew out in every direction and soon, where the specter had stood there was only a cloud of silver vapor. Then even that disappeared. \n\nAs the last wisp faded, my orgasm came to an end. I went limp, sure that I was going to pass out, and then I fell abruptly out of the air and landed hard on the floor. The wind was knocked out of me, and I simply lay there, not moving, gasping for breath. Then, hardly aware of what I was doing I struggled to my feet and staggered to the bed. I collapsed on top of it and a moment later unconsciousness took me. \n\nWhen I woke, bright sunlight was streaming through the bedroom windows, making the gloomy room seem almost cheerful. I felt as if I had a bad hangover. My head pounded, and all of my muscles felt weak and lax. I sat up in bed and looked over at the clock on the bedside table. It was ten o'clock in the morning. I sank back against the pillows, exhausted even by the effort it took to remain upright. I took a deep breath, and then I concentrated. The force which I had felt so keenly last night was still there inside my head, a bit diminished perhaps, but I sensed that it would replenish itself with time. I frowned, and with a bit of effort, I sent a wave of energy coursing through my body. Immediately I felt better, better in fact than I had felt in years. All of those accumulated aches that people carry with them as they go through life seemed to have vanished from me. I got out of the bed and stood up, relishing the crackle of my spine as I stretched. Realizing that I was still naked, I went to my suitcase and put on some clothes. Then I began packing up my things. I didn't think about what had happened last night. There would be time to think about that tomorrow. In fact, I didn't think that there would ever be a time when the events of last night would not be at the back of my mind, hovering over everything that I did. But I wouldn't think about that now. \n\nI wasn't afraid. It might have been shock, but I think a lot of it was the fact that I knew a little bit more about myself than I had the day before. I think I realized that the things that go bump in the night had more to fear from me now than I had to fear from them. When my bag was packed, I walked out of the bedroom, closing the door firmly behind me. Then I walked through the empty house, seeming to see it anew as I did so. Before, everything about the place had seemed ominous, full of a dark and terrible power even though I had tried to laugh it off, but now it all seemed like a bad joke. The gothic carvings and dramatic furnishings looked like props in a trashy horror movie. I walked through the house until I stood before the front doors. I reached for the handle and took one final look back at the interior of the house. Gargoyles and carved imps leered back at me, and I felt laughter bubbling up in my throat. In let it out. What a ridiculous old house. Still chuckling, I opened one of the massive front doors and stepped outside into the sunshine. Fuck Doctor Andrew's and his money. It was going to be a beautiful day. \n\n\n\nI hope you enjoyed the story. Thanks for reading Feel free to comment, and please vote. Look for more from me soon! "
    ],
    "authorname": "Nameless_Rose",
    "tags": [
        "ghost",
        "rough",
        "psychic",
        "anal",
        "m/f",
        "oral",
        "haunted house",
        "bondage",
        "orgasm control",
        "horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-mind-of-winter"
}