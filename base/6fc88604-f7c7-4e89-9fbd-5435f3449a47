{
    "title": "The Unbucket List",
    "pages": [
        "Author's note: This is my entry for the Literotica 2020 Summer Lovin' contest. Although this story is a stand-alone tale, many of the characters previously appeared in So Many Kinds of Love. \n\nAll sexual encounters occur between consenting, eager and loving adults. \n\nCopyright \u00a92020 to the author. \n\n**\n\nThe chatter of the sprinkle-smeared children at the next table echoed through my head as I dug my spoon into the sundae the server had just placed before me. Across from me, my best friend already had the first bite of peanut butter cup ice cream in her mouth, and I watched with amusement as her eyes fluttered shut and she leaned back to swallow, then moan.\n\n\"What a good idea this was,\" Gabriela said, slowly opening her eyes once more. \"Why don't we come here more often?\"\n\nMaking sure I had the perfect ratio of ice cream, cookie dough, fudge sauce and whipped cream on my spoon, I laughed. \"Because we' both weigh four hundred pounds if we did?\"\n\nGabriela shook her head. \"Don't be silly. You're still too skinny.\"\n\nThe giant spoonful finally made it past my lips, and the contrast of its sweet, smooth coolness to the afternoon heat was everything I could have wanted. Letting it melt slightly in the warmth of my mouth, I luxuriated in the feel of the rich cream coating my tongue. It tasted heavenly, and I moaned in my turn.\n\nThe older lady overseeing the noisy brood at the next table turned to us and smiled. \"I'll have what she's having!\" Catching the movie reference, we all laughed before she returned to the full-time job of keeping the energetic kids from destroying the ice cream parlor altogether.\n\nTo me, Carolyn's Creamery smelled of chocolate and childhood. I vaguely recalled a birthday party here once, and the large mirror behind the counter triggered a memory of myself looking at my reflection as I sat on my father's broad shoulders, scared I might fall despite his large, strong hands holding me firmly in place.\n\nPeering into the mirror, I had sighed. My dad had died when I was just six, and I had few recollections of him. That in itself made today doubly precious to me.\n\nI hadn't eaten here in years, but now that I had entered remission from the cancer that had nearly killed me, I found myself wanting to revisit places from my past. Gabby, a psychiatric resident, said it was part of reintegrating myself. Me, I just wanted to reassure myself that I had even existed before cancer.\n\nBefore Cancer. B.C. How appropriate. Sometimes, my old life seemed like an ancient dream. Still, however hazy my past looked, it nevertheless appeared a whole lot clearer than my future.\n\nHaving wrung out the full pleasure of our first bites, Gabby and I turned our attention back to our sundaes. Her new engagement ring twinkled in the afternoon sunshine streaming in through the blinds, lifting my spirits further. My brother adored Gabby, and I might have felt more excited than they did when he proposed. Gary and I didn't have much family, so the idea of having a sister-in-law I already knew and loved filled my heart to bursting.\n\nIt seemed like we had always been friends, but we had met in my first year of college and her first year of medical school. We had bonded right away over a bizarre performance of Shakespeare's monologues in the library where we both studied. After security took the would-be actor away -- I had never heard anyone shout \"Unhand me, varlet!\" in a non-theatre setting before -- we started talking and never really stopped.\n\nHad Gary not come home and immediately fallen for her, Gabby and I would have remained close, but our friendship wouldn't have deepened in quite the way it did. She made a sacrifice for me during my cancer treatments that went far beyond the boundaries of normal friendship, and I will never forget it -- or stop loving her for it.\n\nAlways beautiful, Gabby's face had found a new glow as her relationship with Gary had grown and blossomed. I felt so happy for them, and yet...\n\nPutting her spoon down, Gabby regarded me. \"OK, what's up?\"\n\nStartled, I looked into her deep-set brown eyes. \"Nothing.\"\n\nCocking her head, she gave me her best \"don't fuck with me\" look. \"Try again.\"\n\nShrugging, I poked at a pool of hot fudge with my spoon. \"I'm just wondering ... well, it sounds silly.\"\n\nMy friend's look seemed to pass right though me and into my soul. \"Which means it's probably not silly at all.\"\n\nLooking at the little tableaus of ordinary life all around us, I saw parents and grandparents trying, with varying degrees of success, to restrain the children with them; a few singles staring at their phones while absently eating their ice cream; and couples, some loving, others some bored but together anyway. I wondered if any of them knew how fast and easily they could lose it all.\n\nI took a deep breath. \"It's just ... how do I start again?\"\n\nGabby nodded encouragingly, and I stumbled on. \"I feel like I had this life, and it was a good one, and I worked so hard to build it! And then cancer almost took it away. But I got lucky. I had a good doctor. I survived.\"\n\n\"You did,\" she agreed, her voice barely audible over the shrieking kids and eighties pop music playing from the ceiling speakers\n\nI thought for a second. \"Then I got through the pandemic, too. And that was hard in its own way. I always thought I was an introvert -- until I was forbidden to be around people.\"\n\nGabby nodded. Like most mental health professionals, she was still seeing the fallout from the pandemic, the fault lines in relationships and individuals exposed by isolation, grief and distrust.\n\n\"I think a lot of people found that out,\" she said, her voice gentle. \"But go on.\"\n\nOne of the nearby children demanded more sprinkles on her ice cream, making me smile. \"But now I feel good again and my hair's growing back, even if it's different.\"\n\nDiverted, her eyes darted to my hair. \"It's cute, though. You look good with curls.\"\n\nStill amazed at their springy softness, I fluffed my new ringlets and came to the crux of the matter. \"Dr. Hsu says I'm in remission and I'm good to go ... but where? And how?\"\n\nSteepling my fingers, I looked at the tin ceiling tiles as if they held my answers. \"I feel like I've been shoved on a stage in front of an audience with no script and everyone's looking at me to deliver the next line. But I don't know it. I don't know which character I am. I don't even know which play I'm in anymore. I look around and everything looks the same, but somehow I don't recognize it anymore.\"\n\nSpooning up the last of her sundae, Gabby swallowed blissfully, licked her spoon and set it down, giving me all her attention.\n\n\"Do you want me to listen, or do you want advice?\" she asked.\n\nShrugging again, I set my own spoon down in the melted remains of my sundae. \"Either. Both.\"\n\nWe smiled at each other, and I thought again how lucky I was to have a best friend who understood me so well.\n\n\"I think you're trying too hard, and maybe overthinking this,\" she said.\n\n\"Overthinking is what I do,\" I protested, only half joking. \"I overthink, therefore I am.\"\n\nSnorting lightly at the old joke, Gabby regarded me for a long moment, the outlines of her face softening as a cloud hid the sun.\n\n\"Of all my friends, you're the one I'd call truly self-made,\" she finally said. \"You crawled out of a terrible situation and put yourself through college with no help from anyone. I mean, Gary loved you and supported you, but he was in the navy. He couldn't be there in the lifeboat with you.\"\n\n\"He would have if he could, but -- yeah. I rowed that damn boat all by myself.\"\n\n\"And you got back to the shore safely.\" She laughed suddenly. \"Gary's infected us both with his metaphors! Silly writer man.\"\n\nGiving her ring a fond glance, she took a breath and forged on. \"And you kept rowing, and got to shore, and built yourself a good, secure life, the kind you wanted as a kid and couldn't have. And now, you're left with the trappings -- you still have a good job and a beautiful home -- but that security is gone. And now, the person you thought you were is gone too. Is that fair?\"\n\nShivering from a sudden blast of air conditioning, I nodded, relieved to hear her say it out loud. \"That's exactly it. If I'm not Layla 2.0, who am I?\"\n\nThe sun shone through the blinds suddenly, picking up the dark reds and browns in my friend's almost-black hair. She gave a little shrug. \"Layla 3.0?\"\n\n\"I guess. But how do I figure out who she is?\"\n\n\"Who says you have to do that right away?\" She folded her hands in front of her and leaned forward. \"Here's my advice, for what it's worth: Take some time just to be. Get out of your head and just enjoy the summer. Write down some cool things you always wanted to try and start doing them. I think that's how you find Layla 3.0 -- through action, not thinking.\"\n\nI smiled. \"You realize I've already written down my list, right?\"\n\nGabby grinned back at me, no longer the psychiatrist-in-training. \"An un-bucket list! What's on it?\"\n\nChair legs scraped on the tile floor, and the colorful brood of kids next to us trooped out, leaving only the plaintive wail of Simon Le Bon closing out \"Ordinary World\" to distract us.\n\n\"Well, I've wanted to take a hot-air balloon ride since I was a kid. And travel overseas, maybe to England and Scotland and Ireland.\"\n\n\"Outlander country, in other words?\" Gabby asked, knowing my obsession with Diana Gabaldon's books and the TV show based on them. I didn't ordinarily go for redheads, but Sam Heughan had made me rethink my position on that point.\n\n\"You know it! Maybe I'll find a sexy Scot.\" I sighed. \"And I want to keep learning French and maybe travel to Quebec and France someday.\"\n\n\"For the crepes, or the Frenchmen?\"\n\n\"Both!\"\n\nWe laughed, and I let myself imagine a dark-haired man with a seductive accent plying me with crepes Suzette and hot, deep kisses.\n\n\"What else?\" Gabby asked after a bit.\n\n\"Hmm. Speaking of France, I want to learn to make some delicious French foods -- the perfect souffl\u00e9, coq au vin, onion soup, crusty bread and crepes. All served with wine, or really good coffee, of course.\"\n\nDespite having just filled up on the best ice cream sundaes in York County, we both sighed at the thought of all that deliciousness.\n\n\"You'd better invite me over for dinner, then. You're already a good cook,\" she said. \"If you master the art of French cooking, look out, world! What else?\"\n\nI considered this. \"I want to fly a plane. Get a really good massage. Buy a hammock for my backyard so I can nap out there.\"\n\n\"I love my hammock!\" Gabby interjected. \"So relaxing.\"\n\nI chuckled. \"I know! Gary told me. And speaking of him, I'd like to sing in public, maybe with him when he does an open mic. Get back to collecting good books. Have some wonderful sex with a man who truly cares for me. And make a difference. Give back.\"\n\nI paused. \"Even this hot fudge sundae was on my list. When chemo destroyed my taste buds, I'd try to imagine anything that might taste good.\" Glancing down at my dish, I sighed once more. \"I can't tell you how amazing it is to be able to taste properly again.\"\n\nLooking up, I spotted tears in Gabby's eyes. \"What are those for?\"\n\nBlinking, she wiped her eyes. \"You just reminded me how close we came to losing you -- and how much I take for granted.\"\n\nReaching across the table, she gave my hand a little squeeze. \"That's an awesome list. Let me know what else on it I can help you achieve.\"\n\nA new gaggle of brats took over the table next to ours, and we didn't even need to look at each other to decide it was time to go. As one, we rose and grabbed our dishes to take to the counter, following a slender middle-aged man with a boy. Probably his son, I decided, and killing some time on his custodial weekend.\n\n\"So which one do you want to check off first?\" Gabby asked as we made our way through the dining room.\n\nI grinned at her over my shoulder. \"Some are more doable than others. But the singing, balloon ride and hot sex are definitely at the top of the list.\"\n\nTurning back around, I nearly ran into the man in front of me, who had almost stopped while I wasn't looking. \"Sorry.\"\n\nSquinting at me from under his frayed baseball cap, he attempted a smile. \"No worries. And hey, if you want any help with that list...\"\n\nExasperated with his presumption, I shot him a look. \"I don't.\"\n\nThe boy tugged at his arm. \"Can we go now, Dad?\"\n\nSlightly forlorn, the man looked at me again. \"Sorry. It was my attempt at breaking the ice.\"\n\n\"You need to work on your technique. It sucks,\" Gabby informed him briskly, sliding her dish into the pan of sudsy water.\n\n\"Come on, Dad!\" The boy was hanging on his father's arm, pulling with all his strength towards the front door.\n\nMouth slightly open, the man stared at me helplessly even as he followed his son out the door.\n\nDumping my dish into the water, I shook my head. What had just happened?\n\n\"I predict you'll have no trouble at all with at least one item on your list,\" Gabby said thoughtfully, and we trooped out the door, squinting and shading our eyes against the late afternoon sun.\n\n**\n\nThe pandemic changed the way a lot of us do our work. My boss had decreed that we would all work remotely until scientists developed a vaccine, and that policy change had worked out very well for me during my cancer treatments and recovery. Whenever fatigue hit me, I could collapse on the couch and either nap or simply work from there until I felt well enough to sit up again.\n\nMy brother, mother and I had converted part of my large living room to an airy, sunny workspace. A round wooden table fit the odd space created by the old bay window, and a guy Gary knew from the hospital had painstakingly lifted the floorboards to install an electrical outlet right by the table. After months of enduring an experimental cancer treatment, my balance and motor skills had needed serious retuning. One thing I didn't need on top of everything else was to trip over a power cord and have a bad fall, my mother had pointed out. As usual, she was right.\n\nNow reasonably strong again thanks to yoga and regular workouts with Gary, I simply enjoyed the space. From my ergonomic, comfortable chair, I never tired of watching the trees ringing the playground across the street from my rowhouse or hearing the gleeful shrieks of kids at play, so different from my own bleak childhood.\n\nMy home pleased me too. The glowing oak paneling, original to the 1900s-era building, felt like satin when I ran a hand over it. Shelves under the windows held all my favorite books, and a row of herbs on the top of shelves scented the air with rosemary, lavender and sage.\n\nMy furniture and art came in all shades of the rainbow, of course -- the minute I had bought my own place, I had indulged in all the beautiful hues my stepfather had denied me during my childhood. Gary gently teased me about living in an Easter basket, but I ignored him. Color had always made me happy, and I felt sure it had helped me heal.\n\nAs I worked on a spreadsheet, a bubble popped up with Smitty's smiling avatar.\n\n\"Hey baby -- how's my favorite Pennsylvania girl?\"\n\nA couple of jabs, and the spreadsheet went away, replaced by the gap-toothed portrait of my brother's best friend from the navy. He'd started emailing me during my illness and we somehow had never stopped.\n\n\"I'm good -- happy to hear from you! Where are you this time?\"\n\n\"Stateside for once! San Diego. Got here yesterday. They got a nice big base here with the prettiest senoritas nearby...\"\n\nI smirked. Smitty loved to boast about all his women.\n\n\"How many have you already seduced?\"\n\nA little pause stretched into a longer one, and I frowned. Smitty normally messaged like he did everything else -- fast and flirtily. Well, not that I had never met Smitty in person. But that's what Gary told me.\n\n\"Only two or three dozen,\" he finally texted.\n\nI grinned, comfortable once again. \"You're slowing down!\"\n\n\"Yeah. I'm thirty now. Getting old.\"\n\n\"Yeah, time to get yourself a rocking chair and a ratty old cardigan. And some butterscotch candy to keep in the pocket.\"\n\nAnother odd pause.\n\n\"Look, I got a question for you.\"\n\n\"Yes?\"\n\n\"Remember when you were so sick, I said I'd come to Pennsylvania and take you on the best date of your life?\"\n\nI sat up straight and looked at the screen again to make sure he had really typed that. The faint sounds of children playing outside penetrated the drafty old window frame as I stared at the words.\n\n\"Yes,\" I finally replied.\n\n\"How does next month sound?\"\n\nDisoriented, I gazed at the computer screen for several seconds. Smitty and I had great conversations, but mostly kept to the surface -- places we'd like to visit, our favorite foods and movies, stuff like that. I had even sent him my un-bucket list. But he had given exactly no signs of anything but friendly concern for his buddy's sister.\n\n\"Sounds good -- but are you sure?\"\n\n\"Sure I'm sure. Are you not sure?\"\n\nI thought for a moment. At the time, his promise had given my spirits a huge boost, but I hadn't taken it seriously, so this whole conversation seemed slightly surreal.\n\n\"It's just kind of random,\" I texted.\n\n\"Only to you, baby. I've been planning to visit for a long time. I want to see Shorty and meet you and his fianc\u00e9e in person. This is the first time I've been near the USA in months.\"\n\nBlinking, I gave myself a shake and decided he wasn't the only one who could flirt.\n\n\"You're pretty cocky to think you can give me the best date of my life. What makes you so sure?\"\n\nHis reply was swift and certain.\n\n\"I've got your list, baby. I guarantee you'll have at least four things crossed off by the time we're done.\"\n\nAnother pause as I sat back and stared at the screen.\n\n\"What do you think?\"\n\nThe sheer reckless momentum of it grabbed hold of me then, and I giggled.\n\n\"I'm in!\"\n\nI'm pretty sure the kids outside heard my squeal of joy.\n\n**\n\nThe weeks leading to his visit flurried by as July deepened into August and I got to work on my list. One of Gary's colleagues at the hospital knew a fantastic message therapist, and she gave me the rubdown of a lifetime. I had never considered how good it would feel to have even my toes massaged, but before the end of the session, she had converted me to the cause.\n\nGabriela's sister Jessica found me a signed copy of Julia Child's The Way to Cook, and I started making recipes from it each week for the family suppers that brought my mother and brother to my home each Thursday evening. The dinners had started during my cancer treatments as a way to keep my morale high, and it felt good to take over the cooking and give back to the people who had seen me through those excruciating days.\n\nMeanwhile, Mom had a buddy who worked at the state capital in Harrisburg, and he gave us a VIP tour of the building. We agreed later that the highlight was standing on a balcony outside an executive office and singing part of \"Don't Cry for Me Argentina,\" trying hard to keep from giggling as we sang and hoping the official wouldn't return unexpectedly.\n\nWith every step, I gained confidence that my future looked better than I could have imagined.\n\nPennsylvania can get as gaspingly hot as the Deep South when it puts its mind to it, and the summer heat every night made me long for central air conditioning as I listened to my window unit rattle away the hours. My medical insurance had paid for most of my cancer expenses, but I still had bills. Central air would have to wait till next year.\n\nBut even lying in a clammy bed couldn't keep me grumpy for long. As I got on with living, my growing friendship with Smitty became an important part of that. The sporadic texts between us caught fire, and soon we were exchanging dozens every day. The messaging app we used had a call function, and within a couple of weeks, we found ourselves talking for at least an hour each night.",
        "Smitty had a lot more going on than I had ever realized -- and I wondered if even Gary knew just how deep those waters ran. In the service, they had been best friends, wingmen, drinking buddies and sparring partners, but I didn't get the feeling either had ever looked below the surface much. Having gone through basic training together, they knew they could depend on each other without hesitation if shit went down, and for guys in their early twenties, that had been enough.\n\nIt was not enough for me, though. During my convalescence, I had given a lot of thought to what I wanted in a partner. Gorgeous and powerful as Smitty was -- and I had seen plenty of photographic evidence to that effect -- he needed a good mind and heart to keep me interested. When I had said as much in one of our early calls, he had burst into laughter.\n\n\"Baby, you and I are gonna get along great!\"\n\n\"Why's that?\"\n\n\"Do you have any idea how many women have ever said that to me?\"\n\nEven though he couldn't see me, I had shaken my head. \"Um, no?\"\n\nThat had made him laugh harder. \"Counting you -- one!\"\n\n\"Why is that so funny to you?\" I had asked, mystified.\n\n\"It just is.\" He had paused, and his laughter had faded as he regained control of himself. \"I've lived my whole life with everyone assuming things about me.\"\n\n\"What do you mean?\"\n\n\"OK. First, there's a whole lotta Northerners who hear my accent and assume that if I talk slow, I must think slow. And then there's a whole lotta racists who look at my skin and assume no way am I smart. And a whole buncha intellectuals who see my muscles and think anyone who spends as much time in the gym as I do must never crack a book. And finally, it's a pretty much universal concept with the general public that anyone who's big must be stupid.\"\n\nHe had said it in a light-hearted way, but I had thought I caught an underlying tone of bitterness.\n\n\"I'm guessing they're all wrong?\"\n\n\"Damn right, baby! Now, it's true that I spent my high school days studying sports and girls and not much else. And I got good enough grades to get by, so nobody ever made me study. But I always knew there was more to life. I guess I was kinda like that saint who said, 'Lord, make me chaste -- but not yet.'\"\n\nRecognizing the quote, I had laughed. \"St. Augustine?\"\n\n\"Yeah, that's the one. Sub in 'smart' for 'chaste,' and that's what I prayed for.\"\n\nDrawn in, I had gazed at my phone. \"So what happened to wise you up?\"\n\n\"A few things. My parents, of course. My mom's a teacher and my dad was army before he got into city government. They always set a good example, at least when I bothered to pay attention. But with four kids, and one with special needs, they were always stretched kinda thin.\"\n\n\"Special needs?\"\n\n\"Yeah, my brother Victor. He had cerebral palsy.\" He laughed suddenly, a sort of humorless bark. \"He's one reason I learned to fight so young. He walked real slow and had kind of a funny way of doin' it, and some of the kids at school picked on him. I had to protect him.\"\n\n\"Was he your little brother?\"\n\n\"No, a year and a half older. He was in the grade ahead of me.\"\n\n\"And you took on kids in his grade? Brave.\"\n\n\"Not really. I was always a big kid. My dad's six-foot-three and my mom is five-eleven, and all us kids were tall for our age. I was bigger than everyone in his class, even if they were older. So don't be thinking I was some little shrimp, taking on a bunch of big kids. If anything, I had the upper hand. Now the fifth graders -- some of them were a challenge when I was seven. But I learned, and after a while, nobody messed with Victor anymore.\"\n\n\"What happened to him?\"\n\n\"Oh, he graduated with honors. My mom and dad and grandmother were so proud!\"\n\n\"Did he go to college?\"\n\n\"Only for a semester.\" He had paused. \"Like I said, Victor always walked slow. When he went back for his second semester, he went to an event one night -- a drama club thing, he loved acting -- and while he was crossing a street on his way home, a car hit him. Drunk driver. Victor died at the scene.\"\n\nHorrified, I had drawn in my breath. \"I'm so sorry!\"\n\n\"Thanks, baby,\" he said gently. \"I still miss him, ya know? He was so smart, but so funny too, always telling jokes, making the whole family laugh. I bet he's making God laugh even now.\"\n\nI hadn't known what to say to that, and we had both fallen silent for a moment.\n\n\"Now, speaking of smart, my Uncle Harvey -- he's my mother's brother -- he's a pharmacist. Very smart man. He's quiet, but the kind of quiet you listen to when he finally says something. He always told me I was the smartest kid in the whole family, even smarter than Victor -- if I'd only apply myself.\"\n\n\"So, did you apply yourself?\"\n\n\"Of course not! That would have been work!\" He had paused before continuing. \"After I left home, he'd email me every Sunday night after he got home from church. He'd fill me in on the family gossip, of course, but he'd also include something for me to look up. A TED talk, or a podcast, or maybe a news article. Science, religion, politics, literature -- something to make me think. I used to roll my eyes, but I always read or listened to whatever it was, because I knew he'd ask about it. He and my Aunt Sharon couldn't have kids, and he always told me I was the closest they'd ever get to a son. So I didn't want to disappoint him.\"\n\n\"Sounds like he really loved you.\"\n\n\"Oh, he's still alive, and still sending me links. He'll probably set up a service to keep doing that after he passes!\" Smitty and I had both chuckled at the thought. \"Anyway, I finally started listening to him and my grandmother. And then I met your brother. He was always reading something and trying to learn new things, and then wanting to talk about them. All three of them finally got my size fourteens on the right path.\"\n\nAs the days passed, I looked forward to our conversations more and more. We talked about everything: #MeToo and #BlackLivesMatter; religion and our own beliefs; whether we'd spend a day as someone of a different race or gender or sexual orientation, and what we thought it would be like; what the United States might look like a hundred years from now; where in the world we'd live if we had to leave our own country forever.\n\nOf course, Smitty had the advantage in that last conversation. His adventures had taken him to exotic locales like Hong Kong, Italy and Sydney, places I couldn't even imagine.\n\nBut as we talked, we learned from each other and found a lot in common, including the same dilemma: trying to figure out what to do next with our lives.\n\n\"I've been a lot of things in my life, baby,\" he told me one night, his soft coastal Texas accent becoming more pronounced as he reminisced. \"I've played football, worked construction, been a line cook, sold cars, run deliveries for my uncle, been a bouncer, been a sailor.\"\n\n\"And a lover,\" I added, sitting in my living room and watching the shadows deepen as the sun dropped below the horizon.\n\nHe hesitated. \"Yeah, I've known a few ladies in my time.\"\n\n\"A few?\"\n\nHis rich chuckle made me smile too. \"OK, more than a few.\"\n\n\"More than a few?\" I challenged him again.\n\n\"OK, a lot.\" He laughed again, and I tried to imagine what he would look like in real life, how he moved, whether those dark brown eyes would sparkle with humor when we finally met. All the photos I had seen made him look like an action film star: perfect, remote, unattainable. But in our conversations, he became so much more than that.\n\n\"And?\"\n\nI could almost see him shrug. \"I'm thirty now. My grandmother keeps asking when I'm gonna grow up. And you know what? She's right.\"\n\n\"And Uncle Harvey?\"\n\n\"He doesn't have to say a word. He just looks at me through those wire-rimmed glasses from the nineties, and I know what he's thinking.\"\n\nWe both chuckled.\n\n\"But you told me you applied to officer candidate school. That sounds seriously grown up.\"\n\nHe snorted. \"Oh, it is. And I've been studying hard for the last six months. But I don't know if I'll get it.\"\n\n\"Why wouldn't you? You're smart, you're experienced, you're talented.\"\n\nHis warm laugh came through loud and clear. \"Just what has Gary been telling you?\"\n\nWincing, I drew my feet up under me as my new kitten, Geddy, discovered the sport of attacking my bare toes. Repositioning the phone, I grabbed the little grey puffball off the floor and placed him beside me on the couch. \"He's told me a lot about your adventures together. How much fun you are. How you saved his life once.\"\n\n\"Oh, that.\"\n\nIn my mind's eye, I could see him waving a hand to dismiss that, but Gary had never really told me the whole story. It seemed to embarrass him.\n\n\"Yes, that. What really happened? I can never get Gary to tell me.\"\n\n\"It's not a happy story, baby. I'd rather not.\"\n\nClimbing onto my lap, Geddy made his way up my shirt to my neck, driving in his sharp claws with every step. I gritted my teeth with each new puncture.\n\n\"I don't know how to tell you this, but I am a grown woman who just cheated death. I can handle the story, whatever it is.\"\n\nAfter a short silence, Smitty spoke again. \"Well, look. Neither one of us comes outta this story looking very good, but ... okay.\"\n\nAs Geddy decided my neck and shoulder made an admirable napping spot, I nestled into the couch, now decidedly curious about what had happened.\n\n\"Thanks.\"\n\n\"Yeah. Well. Shorty and I were out drinking at a bar one night. A hot night, summertime. It was just us that night, no other guys from the ship. The place was a little dive with a bar and a couple of pool tables and a little dance floor, nothin' fancy.\"\n\nEven though he couldn't see me, I nodded, picturing the scene.\n\n\"We met a couple of pretty girls, and one had a thing for big black guys like me, and other liked little white guys like your bro. We all had a few drinks and a lot of laughs, so it was looking like a good night for Smitty and Shorty.\"\n\n\"Where was this?\"\n\n\"Pensacola.\"\n\n\"Ah. Big navy base there, right?\"\n\n\"Big enough, yeah. And enough of us that there's tension between the local guys and the navy guys. They don't like us poaching their women.\"\n\n\"Does that happen a lot?\"\n\n\"Of course, baby,\" he replied, his tone dry. \"Some women like anything in a uniform. And some men like anything with two ... never mind.\"\n\nI smirked, but let it go as he continued.\n\n\"So we were out on the dance floor with our two girls, don't remember their names, and things were heating up. A slow song came on, and Shorty's girl was rubbing up against him like a cat in heat.\"\n\nGeddy's purr sounded in my ear just then, and I couldn't help but grin at the coincidence.\n\n\"And that was when our night turned into a country song.\"\n\nMy head jerked up, causing Geddy to clench his rear claws in protest. \"What do you mean?\"\n\n\"Old Lynyrd Skynyrd, baby - Gimme Three Steps.\"\n\nI thought I knew every seventies song in existence, but that one didn't ring a bell. Before I could say anything, though, Smitty moved on.\n\n\"Just about the time we all thought they were gonna give us a live sex show right there on the dance floor, her husband showed up.\"\n\nAs I sat straight up and leaned forward in shock, Geddy slipped off my shoulder and slid down my back.\n\n\"What? Her husband?\"\n\n\"Yeah, her husband. And he was not in a good mood.\"\n\nSmitty paused for effect. Reaching behind me, I found the writhing ball of fur-covered indignation and hastily placed Geddy on my lap. \"What happened next?\"\n\n\"I guess everyone except us knew him, 'cuz they cleared the floor right quick.\" Again, I heard that Texas twang, so different from the slightly nasal tones of central Pennsylvania. \"This guy was pretty big -- not as big as me, but bigger than Gary -- and he had the advantage of being stone cold sober.\"\n\n\"Holy moly!\"\n\n\"Yeah, it wasn't lookin' good for your brother. He'd been through basic combat training, but he was a lover, not a fighter, besides bein' at least halfway drunk. So the guy sized him up and swung at him. Shorty ducked and the guy missed -- but only once. He musta had some professional training somewhere, 'cuz he went to town on Gary.\"\n\nFascinated, I looked at my phone as if Smitty could beam the scene right to my screen. \"Seriously? Mr. Self Defense Instructor got his ass kicked?\"\n\n\"Yeah. Big time. Although Gary did land some good punches too. And he's a great blocker. But the longer it went on, the crazier that guy got. I'm betting his woman had stepped out on him before, but Gary was the only one he'd ever caught.\"\n\nI thought for a few seconds. \"So where do you come in to this?\"\n\n\"I'm gettin' to that. I wouldn't have gotten involved at all, except one of the guy's buddies slid him a knife.\"\n\nGasping, I sat up again, once again irritating the kitten.\n\n\"A knife?\"\n\n\"Yeah. When I saw that, I had no choice. Crazy with rage as that guy was, he'd have done something stupid. And I couldn't let my friend get badly hurt.\"\n\n\"But you were willing to let him take a beating...\"\n\n\"Well, you don't fight someone else's battles, and even drunk, Gary was takin' care of business. But if the opponent escalates the battle to a war, that's different. You step in and end it if you can.\"\n\nI let out a breath I didn't know I had been holding. \"So what did you do?\"\n\n\"He was so focused on Gary that he didn't even see me. So I just walked up behind him, grabbed his wrist when he drew it back, and, uh, squeezed till I felt his bones grate together. Meanwhile, I grabbed his hair with the other hand and pulled him off Gary.\"\n\n\"Holy moly. Did you break his wrist?\"\n\n\"Little bit. He went kinda green after he screamed, and then his buddies were looking from him to me, trying to decide whether to help him or jump me. So I decided that was a good time to say good night and leave that fine establishment. So I grabbed Gary, slapped a fifty on the counter, and got the hell out.\"\n\nSmitty went quiet. Sensing the story hadn't quite ended, I asked what happened next.\n\n\"We went back to the barracks and a couple of us cleaned him up before putting him in his rack. He got chewed out the next day for having a black eye, but the guy never lodged a complaint, thank the Lord. Too embarrassed, I reckon.\"\n\nHe paused. \"We never went back to that bar again, either. And your brother got a lot more conscientious about checking for wedding ring tan lines.\"\n\n\"Is that when he started working out more with you and learning your hand-to-hand techniques?\"\n\n\"Yeah.\"\n\n\"You know he's teaching women how to defend themselves now, right?\"\n\nAs he replied, I could hear the smile in Smitty's voice. \"I think that's great! Too many women don't know how to take an attacker down -- and too many men take advantage of that.\"\n\nThinking of Michael, I sighed. I had convinced myself that I loved him, had been so excited before our first, and thank God, only encounter. Ultimately, he had forced me, and hurt me. If I'd known how to disable him, I would have.\n\n\"Whatcha thinking, baby?\" Smitty asked, his voice gentle, after my silence stretched longer than expected.\n\n\"About a guy I once knew,\" I answered sadly.\n\nAnother pause. \"You know I'd never hurt you, right, baby?\"\n\nI looked at the phone, wondering how he had known. \"Yeah. I know.\"\n\nI must not have sounded convincing, for he spoke again.\n\n\"I mean it, Layla,\" and his voice sounded deep and emphatic. \"I've never forced a woman to do one thing she didn't want to do, and I am not gonna start with you. I'm not that kind of man, and I don't want to be that kind of man. Okay?\"\n\nI gave the phone a half smile, even though he couldn't see me. \"Okay.\"\n\nOn my lap, Geddy stretched and my fingers stroked his tiny belly. He turned up his chin and I scritched him there, prompting more purrs in my now-dark living room.\n\n\"Good. Now, are you ready for some adventures next week? 'Cuz I've got some good things lined up.\"\n\n\"Really? Like what?\"\n\nHis chuckle sounded mischievous this time. \"That's for me to know and you to find out! But it's gonna be amazing, baby. Me and Shorty have been working it out, and you're not gonna know what to do with all the awesomeness coming your way!\"\n\nButterflies fluttered in my tummy as I grinned at the phone. Cancer, and Michael, could go suck it -- I had Smitty in my corner now!\n\n\"I can't wait!\"\n\nHis voice softened. \"You sound like a sweet little kid before Christmas, baby.\"\n\nI nodded in the darkness. \"I feel like a kid before Christmas -- and I just know it's gonna be the best Christmas ever!\"\n\nHe laughed. \"That's right! Smitty Claus is comin' to town!\"\n\n**\n\nI still felt like a kid waiting up for Santa the night Smitty arrived. He had texted me that he expected to arrive around eight -- so naturally, from about seven on, I found myself pacing around the living room, picking things up and putting them back down, opening books and not reading a word, changing my clothes four times, unable to settle my mind or body.\n\nAfter half an hour, even Geddy gave up trying to stick by me and stalked to the silver armchair to curl into a ball. I envied him for having that option.\n\nMy motto -- \"I overthink, therefore I am\" -- had never demonstrated itself more strongly. My mind kept racing around the possibilities. Would he like me? Would I like him? Would the chemistry we had built together virtually survive a physical meeting? Or would we take a single disappointed look at one another and remember urgent appointments elsewhere?\n\nJust when I thought I'd have a nervous breakdown, a firm knock at the front door ended my suffering. Taking a deep breath, I smoothed my shirt, ran my fingers through my curls ... and opened the door.\n\nMy friend Kara once told me about the first time she ever saw her girlfriend, Emma. \"I swear, my mouth went dry and my knees went weak and I felt like my heart would hammer right through my ribcage,\" she had said. \"I had never seen anyone so sexy and perfect in my life.\"\n\nAt the time, I had nodded, but I hadn't really understood how that might feel.\n\nNow I did.\n\nClutching a dozen pink roses, he stood on the step, his brown eyes level with mine, dark skin glowing with health, the gap-toothed smile I knew so well from his avatar firmly in place. I don't know how long I stood there staring at him -- certainly long enough for my body to shotgun into total readiness for a man. For this man.\n\n\"Layla?\" he said at last.\n\nUnable to speak just yet, I nodded.\n\nHis dimples deepened as he took me in. \"Can I come in?\"\n\nGiving myself a little shake, I stepped back so he could enter. \"Of course.\" To me, those two words sounded like an adolescent boy going through the change. I cleared my throat as he moved over the threshold and tried again.\n\n\"Sorry, Smitty. I just can't believe you're really here.\"\n\nHe set the flowers down and turned to me. \"Neither can I, baby. You're way prettier in person -- I feel like an eighth-grader with his first crush right now.\"\n\n\"My, you're very tall for your age,\" I quipped, and then I was in his arms.\n\nMore than a year had passed since I last hugged a man like that, and it felt both like a homecoming and like embracing an alien. His chin rested atop my head as my head nestled into the groove at the center of his broad chest. He felt solid in my arms, but more importantly, he came across roughly twice as alive as anyone I had ever touched.\n\nOne large hand came up and delicately caressed my hair as we stood there, and I smiled into his chest, contemplating happily what a good idea men were. As one, we drew in a big breath and released each other, both beaming.\n\n\"It's good to meet you,\" I said, somewhat inadequately.\n\n\"The pleasure's mine,\" he answered, eyes twinkling, and we both cracked up.\n\nThe tension broken, I led him to the kitchen so I could put the roses in some water.\n\n\"Beautiful house,\" he remarked, chin on hand as he watched me. \"It reflects you.\"",
        "I looked around at the walls, golden in the incandescent light. \"How do you mean?\"\n\n\"All this color! It's feminine, and strong too. It tells me you're someone who's not afraid to do what she wants.\"\n\nPlacing the pink roses in a cobalt blue vase, I swiveled to meet his eye. \"How do you get that?\"\n\n\"Baby, most people spend their years living in beige or white or grey walls, with brown or black furniture. Navy blue if they're really feeling crazy. Safe, but boring, know what I'm saying?\"\n\nI nodded, knowing exactly what he meant.\n\n\"But you -- just from your front door to here, you used almost every color in the rainbow. Walking into this house is like walking inside a piece of art.\"\n\n\"You know, that may be one of the nicest compliments anyone's ever given me. I love color. I always have.\"\n\n\"A lot of people love color, baby. But most of them don't commit to it like this.\"\n\nClutching cool drinks, we headed back to the living room to watch the last of the sunset fade into grey. Already, the days were growing shorter and I gave a little shiver.\n\n\"Why do you think that is?\" I asked.\n\n\"They're afraid of what people will think.\"\n\nWe sat down and I took a sip of ginger-infused lemonade, one of my latest and most successful experiments in the kitchen.\n\n\"One thing I don't do much of any more is give a damn what people think.\"\n\nSmitty smiled, his perfect white teeth gleaming in the dim light, and took his own first sip. \"That's good!\" he exclaimed, holding the drink up and peering through the glass at it. \"Ginger and lemon?\"\n\n\"With a little bit of lavender syrup, too. It's part of my summer drink series. I stopped drinking alcohol during chemo and never really started again, except for a glass of wine every now and then.\"\n\nHe took another smooth sip. \"It's really good. Refreshing. You'll have to teach me how to make it.\"\n\n\"Easy enough.\"\n\nWe talked of this and that, mostly taking each other in as we did. He was leaner than I had thought, and looked younger, too, with his almost bashful way of looking at me from under his thick eyelashes. A tremor ran me as I considered how it would feel to hold him, to feel his breath on my neck, his full lips all over my body...\n\n\"Am I what you expected?\" he asked, bringing me back to reality.\n\n\"You're much more,\" I relied sincerely. \"And me? Am I what you expected?\"\n\nNodding, he set his glass down and turned to me. \"You're also much more. And less too -- you're still on the skinny side.\"\n\nRolling my eyes, I looked down at one thin thigh. \"It's odd -- before cancer, I was at a pretty good weight after being heavy for a long time. But I got under one hundred pounds during treatment.\"\n\n\"Damn, girl. I haven't weighed that since fifth grade!\"\n\nI laughed back. \"Neither had I! But coming back has been a journey. It's like cancer rebuilt me or something. My hair's curly now, and my body -- it's different. If I had been a scarf, I'd say I was pulled apart and knit back together tighter.\"\n\n\"Mmm.\" He regarded me for a few second and I held still, wondering whether he was seeing my face or my soul. \"You were pretty before, judging from the pictures I saw. But now, you're so much more beautiful.\"\n\nI giggled. \"Flatterer!\"\n\nHe shook his head, his expression serious. \"No, I mean it. There's a big difference between a pretty, perfect girl who hasn't been touched much by life, and a woman who's been through the valley of the shadow, and come out the other side. The woman may have scars, but she's far more beautiful, because she also has that inner light you get from traveling through the darkness.\"\n\nI didn't know what to say to that, so I sat sipping my drink and watching the sky darken through the big bay window. The silence between us was easy, though, and companionable. I didn't feel like I had to fill it with words, and I felt grateful for that.\n\nFinishing his drink at last, Smitty stood up and smiled down at me. \"Much as I'd like to stay, I gotta finalize some things for tomorrow. You ready for your big day?\"\n\nGrabbing his proffered hand, I stood too, feeling another thrill as his energy flowed into me. \"Absolutely! When should I expect you tomorrow?\"\n\nHis grin deepened. \"I'll be here at five-thirty, so be ready.\"\n\n\"In the morning? What the hell?\"\n\n\"You wanna have adventures, or you wanna sleep in?\"\n\nI looked down. \"Have adventures,\" I admitted grudgingly. \"I guess.\"\n\n\"Then you gotta make sacrifices. See you at oh-five-thirty, baby.\"\n\n\"At least give me a hug before you go. I need something to get up for.\"\n\nLaughing, he took me into his arms. Feeling his firm muscles through his clothes, I started drooling, just managing to close my mouth before I could embarrass myself. Swallowing, I exhaled and relaxed against him, feeling his heart pound and his breath on my hair.\n\nI'm sure the world may offer better experiences than a friendly, fit man holding me close, but right then, I couldn't think of any.\n\n\"You feel so good,\" he murmured. \"I could get used to this.\"\n\n\"You and me both.\"\n\nIt took a long time for us to let go of each other, and my bed, when I got there, seemed even emptier than usual.\n\n**\n\nThe sound of footsteps outside my door woke me with a heart-stopping jolt. For a second, I lay in my bed, terrified but still a little sleep-fogged, before recognizing Gary's baritone voice saying something, then Smitty's lower one in response.\n\nI groped for my phone -- five o'clock -- and saw a figure in my doorway. The overhead light flicked on and I blinked and rubbed my eyes, now exasperated. From the hallway, I heard the sound of the shower starting.\n\n\"Oh, good,\" Gary said as casually as if it were five in the afternoon. \"You're up.\"\n\n\"I thought you were burglars,\" I snapped.\n\nGrabbing my fuzzy robe from its hook, my brother tossed it to me and started for the door.\n\n\"I'll go down and make you some coffee to take in the car. Your shower's already started, so get moving. You've got a big day ahead.\"\n\n\"I hate you.\"\n\nHe turned to grin at me. \"Now, now. Is that any way to talk to someone who's helping make sure you have the best day of your life?\"\n\n\"The best day of my life wouldn't start in the middle of the fucking night,\" I growled, thrusting my arms into the robe, then shoving my feet into my bunny slippers.\n\nAnnoyingly, he kept on grinning. \"You never were a morning person, sis, but Smitty and I are here to make sure you don't waste a second of this gorgeous day!\"\n\n\"Whatever. Mission accomplished. Now go away.\"\n\nResigned to getting up at this insane hour, I rose and started for the door. The sound of Gary and Smitty thundering down the stairs and laughing like lunatics made me frown at first, but then I couldn't help but feel touched. No doubt they would rather be asleep too. And it was nice of them to care about me.\n\nThe hot water pounded my shoulders, releasing the last of my waking-up-in-the-dark tensions. Despite the temptation to linger, I toweled my short hair dry, combed it, dressed quickly and returned to the bathroom to apply a little mascara to bring out my blue eyes. Even at five-twenty-five in the morning, I still had my vanity!\n\nThe scent of coffee drifted up the stairs, and I pounded down the stairs as noisily as the guys once I finished up, eager for that first heavenly sip. They both looked up from the table and grinned in greeting.\n\nGary checked the kitchen clock. \"Five-twenty-nine! Perfect timing!\"\n\nHe handed me a brand-new traveling mug filled with my favorite hazelnut coffee brew. Shooting him a grateful smile, I inhaled the fragrance deeply, took a sip and held it in my mouth for a few seconds before gratefully swallowing. My shoulders dropped another half inch.\n\n\"You're looking good, baby,\" Smitty said, and I jumped a little at his admiring tone, coffee sloshing.\n\n\"Hey, I just made that! Don't spill it,\" Gary fussed.\n\nSmitty stood up, looking uncertain. \"I didn't mean to startle you.\"\n\n\"It's early,\" I replied, taking him in properly this time. He looked just as good as the day before, clad in a purple sweatshirt with \"Just be a good human -- spread joy, peace and love\" written in gold letters across the chest, and faded jeans and gleaming boots below. Meeting his eyes, I smiled at him. \"You look great.\"\n\nHis answering smile spread slowly across his face, and my heart skipped a beat. \"Much as I love being complimented by a beautiful woman, we need to get going. Got everything you need?\"\n\nI patted my bag with my free hand and nodded. \"You'll lock up?\" I asked Gary.\n\nHe grinned at me. \"Don't worry, girly. I got this.\"\n\nOutside, Smitty unlocked the car and held the door for me as my eyes adjusted to the darkness. Sliding into the car, I leaned back a little further than usual and noticed the emblem on the dashboard.\n\n\"A Mustang! You got a Mustang.\"\n\nIn the pre-dawn darkness, the front panel glowed as he turned the key in the ignition.\n\n\"Yeah, baby.\" He gave the dash a fond caress and pulled into the street. \"My dad's older sister had one of these when I was growing up. A sixty-six, olive green convertible. Damn, she looked good in it! She'd take us kids for rides on our birthdays and for holidays. Down in Corpus, it was almost always warm enough to put the top down. Even if it wasn't, Aunt Janet would blast the heat, and we'd shiver and ride anyway.\"\n\nHe sighed gently. \"We loved that car. And she still has it. She married a mechanic and he keeps it in perfect condition. We joke that she married him to make sure her car would be taken care of.\"\n\nSipping my coffee, I peered at the winding road ahead, enjoying Smitty's driving and voice, both equally smooth. \"Did she?\"\n\n\"Well, she claims he married her so he'd have access the car. But the truth is they're crazy about each other, always have been.\"\n\n\"How'd they meet?\"\n\n\"Her car needed work, and her old mechanic had retired, so she took a chance on the new guy in town. It was a summer day and she was wearing a short skirt. He took one look at her legs and fell in love.\"\n\n\"You men are so shallow! So what made her like him?\"\n\n\"She said he had a smile just like Usher and a body like D'Angelo. She always had a thing for both of them.\"\n\nUsher I knew, but the other name didn't sound familiar. \"Who's D'Angelo?\"\n\n\"R&amp;B singer. He did a video called 'How Does It Feel?' My aunts all said women could get pregnant just by watching it. Didn't even have to have a man in the room -- their ovaries would just shoot out fertilized embryos.\"\n\nLaying my head back on the seat, I giggled. \"I'll have to watch it sometime.\"\n\nHe gave me a quick look. \"Watch it now if you like, baby.\"\n\nShaking my head, I glanced at his profile silhouetted against the deep gray sky. \"Too early to be getting pregnant. I'd rather finish my coffee first.\"\n\nWe drove in silence for a couple of miles before he spoke again. \"Would you ever want to get pregnant?\"\n\nI shrugged. \"I don't know if I can. The doctors said the cancer treatments probably killed that chance.\"\n\n\"Probably, not definitely?\"\n\n\"It was an experimental treatment so they're not sure. I'm in a long-term study on its effects.\" I thought for a moment, gripping my smooth new mug in both hands now. \"It was pancreatic cancer, so I still have all the baby-making equipment, but ... they don't know.\"\n\n\"How do you feel about that? Did you always want to have a family?\"\n\nI stared through the windshield as he turned onto a side road narrower than the county two-lane we had been on. \"I never really thought about it. I was always focused on school, then getting started with my career and buying a house and all. I figured I had plenty of time to think about kids.\"\n\nMy eyes prickled and a tear started down one cheek. \"Turns out I didn't. And things happened so fast, I didn't even think about harvesting eggs before the treatments started.\"\n\n\"I didn't mean to make you sad, baby. I'm sorry.\"\n\n\"Not your fault. Sometimes life is sad.\"\n\nOut of the corner of my eye, I saw him nod. \"That's right. But sometimes it's happy, too. Like today.\"\n\nWe pulled into a parking lot with several other cars. In front of us stood a mobile home with a sign proclaiming it York's County premier hot-air balloon adventure company.\n\nForgetting my tears, I felt my entire body and soul perk up. Beaming, I turned to him. \"Holy moly! A balloon ride? This is awesome!\"\n\nWe both clambered out of the Mustang, and I ran around it to hug him. \"I can't believe it!\" I shrieked, wrapping my arms around his waist. \"You're the best!\"\n\nHe hugged me back, his arms firm around my shoulders and the scent of soap, aftershave and fresh male filling my sinuses as I buried my face in his sweatshirt. Blinking back tears -- of joy now, not sorrow -- I gazed up at him. In the dim light, I couldn't make out his features, but I could feel his heart pounding as fast and hard as my own, and that was enough.\n\nKeeping his arm on my shoulders, he turned so we could walk over to the small group already waiting near the trailer.\n\nA middle-aged woman wearing a denim jacket against the morning's coolness smiled at me. \"We couldn't help but hear you, dear. Is this your first balloon ride?\"\n\n\"Yes! I'm so excited.\" In fact, I was practically jumping up and down from the adrenalin surge and Gary's military-strength coffee.\n\n\"You're gonna love it!\" her husband piped up. \"We've done half a dozen and they never get old.\"\n\n\"Half a dozen?\" Smitty asked in surprise.\n\n\"Every five years, for our anniversary, he takes me for a balloon ride in a different part of the country,\" the woman said, patting her man's arm affectionately and introducing themselves as Carrie and David. \"Last time, it was the Hudson River valley in New York, and before that, the Grand Canyon. We've done the Columbia River gorge and the Albuquerque balloon festival and Acadia National Park too. It gives us a good excuse to travel and reminds us both to see the big picture.\"\n\n\"Plus, they're a lot of fun,\" her husband said. \"Way better than some anniversary waffle iron.\"\n\nWe all laughed and another man spoke up.\n\n\"We're both small-plane pilots,\" he said, his arm around the waist of a shorter, and startlingly handsome, man, \"but this is our first balloon ride. I hear it's very different.\"\n\nSuddenly, everyone was talking, joking and sharing their experiences and theories. Smitty's arm felt warm and solid on my shoulders and I leaned into him, again inhaling his scent and feeling the slight giddiness he seemed to inspire when we touched.\n\nWe stood there until a youngish woman, probably Smitty's age, hurried out from the trailer as two men followed her. They jogged in the other direction as she approached us.\n\nAs the woman spoke to us, I tuned out and watched the men unroll the balloon and set it all up in the now quickly brightening day. Since childhood, I had wondered how it would feel to drift above the earth in a balloon. It seemed impossible that I would know in less than half an hour!\n\n\"You all right?\" Smitty murmured into my hair.\n\nNodding, I gave him a squeeze. \"Just can't believe it's really happening.\"\n\nOur eyes met, and I thought he might kiss me, but the woman shooed us all toward the balloon right then, so we started moving with the group.\n\nOnce in the basket, Smitty stood behind me and encircled me with his muscular arms. I leaned back, feeling safe and happy, and the middle-aged anniversary couple smiled at us.\n\n\"Special day for you two?\" David asked.\n\n\"Kind of,\" I answered, then trailed off, not sure what to say next.\n\n\"She beat cancer,\" Smitty added. \"We're celebrating the next chapter of her life.\"\n\nEveryone, including the balloon operator, had to exclaim over that announcement, and I felt torn between gratitude for their good wishes and irritation that I couldn't forget about cancer for five minutes.\n\n\"You picked the best way to celebrate,\" Carrie said. \"See? It's already perfect!\"\n\nGlancing from her face to the horizon, I felt a thrill as I realized we had already risen several feet into the air.\n\n\"Amazing! I didn't feel a thing.\"\n\n\"Now you know why we love it,\" Carrie said, and moved to nestle into her husband's shoulder so they could both watch the landscape as it flowed under us.\n\nYork County, Pennsylvania, doesn't conjure many images for most people -- the more famous Lancaster County and Amish country lie east of here -- but it is one of the loveliest places you'll ever see. A friend of mine who grew up here once visited Ireland and came back saying the she couldn't understand all the fuss -- it looked exactly like home, just with Guinness instead of Yuengling. Both are green, hilly, and lush, with lots of farmland; our creeks all undulate their way to the Susquehanna River rather than the Atlantic Ocean or the Irish Sea, but otherwise the places mirror one another.\n\nOr so I hear. I'd still like to see Ireland for myself.\n\nAs we cleared the trees and adjusted to the quiet roar of the burner, the sun peeked over the horizon and a light wind pushed us to the southwest. The morning air smelled fresh and clean -- no whiff of the nearby paper mill today. The balloon operator said we would stay fairly low, and as the sounds of cattle lowing and birds chirping reached our ears, I beamed with joy over the intimacy of it all.\n\nSometimes in my dreams, I fly. This reminded me of those dreams, only better.\n\nSunlight now streamed over the landscape, casting everything in a golden glow. A rooster crowed and as the sharp cry pierced the serenity of the morning, we all jumped, then chuckled. In a few minutes, the chattering birds, bleating sheep and goats and barking dogs joined the lusty bird and formed a chorus. We could hear every sound with crystalline clarity.\n\n\"I never thought of myself as living in the country, but I guess we do,\" one of the pilots mused.\n\nI felt Smitty's diaphragm rumble as he spoke into my ear. \"I can't seem to stop smiling, baby. This has to be one of the most beautiful views I've ever had.\"\n\nSeveral people had their phones and cameras out, capturing the images, but I remained content to lean against Smitty and just take it all in. No photos could adequately capture this grand morning, and I didn't want to try.\n\nCarrie had her phone out and as she turned to put it back in her bag, she looked at us standing there peacefully and quickly took one last shot.\n\n\"Text it to me?\" Smitty asked.\n\n\"You bet,\" Carrie said. \"Just promise me you'll do another ride after you get married.\"\n\nWe both snorted, but Smitty kindly did not take away her illusions. Somehow, drifting between the earth and the clouds inspires one's best possible self, and neither of us wanted to ruin that.\n\nWe remained thoughtful on the way home, still under the spell.\n\n\"Was it what you expected?\" he finally asked.\n\n\"Way better,\" I answered. \"Definitely one the happiest experiences of my life.\"\n\nSmiling, he kept his eyes on the road as we headed back into town. \"So that's one thing off your list. Ready to cross off another?\"\n\n\"I think I might need some food first,\" I replied, and as if to agree, my stomach growled.\n\nHe grinned. \"Aren't you lucky I already thought of that, Miss Layla? As it happens, we are on our way to the best breakfast you're ever gonna eat.\"\n\nMy stomach rumbled again. \"Where? Is there some new place in town you're taking me?\"\n\n\"Not exactly. You're eaten here before, but they've got a brand new chef. Gabriela says he's the best.\"\n\n\"Gabby was in on this?\"\n\nHe laughed out loud at that. \"Baby, half your friends are in on this. Everybody wanted to help give you a perfect day.\"\n\nBlinking back tears for the third time that day, I fell silent. After a minute or two, I felt his hand wrap around mine, giving me his warmth, his strength.\n\n\"You're a very loved woman, you know -- and very lovable too. I haven't known you very long, but I've been seeing that for weeks.\"",
        "By now, we had entered York and Smitty was threading through its streets as if he had lived here for years. Grateful for a new topic, I asked how he did that.\n\n\"Can't help it. Innate sense of direction. The whole family has it. I grew up thinking everyone did.\" He paused, reflecting, before speaking again. \"Then I met my first love. She had no sense of direction at all. We used to argue because I thought she was only pretending to get lost just to be cute or act helpless or something.\"\n\nI raised my eyebrow at that. \"Seriously? You thought that?\"\n\n\"Yeah. Even worse, I said it out loud to her! I didn't know much about women then.\"\n\nHe parked in front of my house and walked around the car to open my door for me.\n\n\"My lady?\" he said, offering me his hand. I grasped it and we both laughed as he helped me out of the car. He bowed as I stood up, then kissed my hand and gestured at my front door.\n\n\"Shall we?\"\n\n\"I thought we were getting breakfast first.\"\n\nHis eyes gleamed. \"Yes. And here we are.\"\n\n\"But...\"\n\nHe took my hand once more. \"Follow me.\"\n\n**\n\nThe scents of fresh-baked bread and coffee reached me before I heard people in my kitchen. Shooting Smitty a look, I approached the kitchen cautiously, wondering what I would find.\n\n\"Knock, knock!\" Smitty called, and the voices stopped, replaced by the sounds of bustling and giggling. I passed through the door, and blinked.\n\nGabby and Gary stood beside my table, elaborately set for breakfast with the pope and Beyonc\u00e9, judging from the assortment of crystal and silver I saw there. But even that captured my eye for only a second or two. The real star of the kitchen stood in front of me, a genuine chef's toque perched jauntily on his head, brown eyes twinkling as he took in my stunned reaction to him and the assortment of ingredients and equipment on the counter.\n\nHe gave a little bow. \"Enchant\u00e9, mademoiselle! Je m'appelle \u00c9tienne Dupont.\"\n\nFlustered, I stared at him for a long moment before stammering my reply in French. Dimples showed as he answered, and the conversation took off from there, my friends stepping back to let me enter the French-speaking world more fully.\n\n\"This morning,\" he said, continuing to speak in French, \"I will teach you to make the perfect souffle. We will make one with ham and Gruy\u00e8re, and the other with spinach and parmesan. This way, you have your own to learn with.\"\n\nHe gestured to Gary, who handed me a spotless white apron that covered me from my neck to my knees, along with a much smaller toque to keep my curls out of my face. Gabriela helped me put them on, her dark eyes sparkling as she checked the results.\n\n\"You look like a true cook,\" she proclaimed. \"Now crack some eggs, 'cuz we're all starving!\"\n\n\u00c9tienne watched us, lips quirking with amusement, then waved me to the counter even as he sacrificed one of the still-warm baguettes to the group.\n\nAs they tore into it, he turned to me. \"We start with the bechamel. It's one of the mother sauces.\"\n\nBy the time we needed to assemble the souffl\u00e9, the kitchen had quieted and everyone was watching, fascinated. Like a lot of amateur cooks, I found folding in the egg whites intimidating -- I had visions of getting a flaccid souffle because of my inadequate technique.\n\nBemused, \u00c9tienne oversaw my tentative efforts until he could stand it no more. Holding his hand out, he took my whisk and mixed everything together fast and furiously.\n\n\"Be aggressive with the eggs!\" he cried. \"Beat them!\"\n\n\"Won't they lose their air?\" I asked, my French barely adequate for this discussion.\n\n\"Eggs are tougher than people think,\" he replied. \"They will rise again. Do not be afraid.\"\n\nEncouraged, I mixed the other bowl's contents. We each poured the results into our two souffl\u00e9 dishes, pushed them into the oven, and turned the oven temperature down to three hundred and seventy-five degrees.\n\nThen we waited. As we did, \u00c9tienne demonstrated how to make a simple salad to accompany the souffl\u00e9s, and we all switched to English so the chef could answer Smitty's questions.\n\nIt turned out \u00c9tienne spoke English with a New Jersey accent, and he and Smitty fell into the slang of professional kitchens at once. Suddenly tired, I sank into a chair and listened to them talk, interested in this different side of Smitty. He had mentioned he had worked as a line cook, true, but I had not appreciated what that really meant.\n\nGary pushed a mimosa into my hand as he and Gabriela finished prepping the table for brunch. \"You look like you could use a little something to perk you up, girly.\"\n\nI took a grateful sip, taking pleasure in the cold, fresh-squeezed juice and feeling the champagne fizzing on my tongue.\n\n\"Delicious!\"\n\nWe smiled at each other comfortably, each of us thinking how different this sparkling morning was from our adolescent days under our stepfather.\n\n\"To life,\" Gary said, raising an imaginary glass to mine.\n\n\"And love,\" I answered, taking another gulp of my divine drink.\n\nBy the time the souffl\u00e9s came out of the oven, fluffy and puffy and altogether camera-ready, the men had become fast friends. \u00c9tienne flicked his fingers towards the table, indicating we should sit down.\n\n\"You want any help?\" Smitty asked.\n\n\"I got it,\" \u00c9tienne replied, placing one souffl\u00e9 on a trivet and going back for the second one. \"You sit down. Then I'll get a photo of you all before they deflate.\"\n\nThe souffl\u00e9s tasted every bit as delicious as promised, and we all devoured our shares, along with the salad and bread, as our chef worked quietly at the stove. Looking around the table as we all talked and joked, I beamed at my brother and friends. At my right, Gabby caught my eye and cleared her throat.\n\n\"A toast!\"\n\nTheir faces expectant, the men stopped eating and faced Gabby and me.\n\n\"To the bravest person I've ever known,\" she said, touching the silver cross at her neck with her free hand. \"When I was a little girl, going to Mass with my family, I used to hear the words of the psalm: 'yea, though I walk through the valley of the shadow of death, I will fear no evil.' I never really knew what those words meant until I saw my best friend walk through that same valley. More than once, I thought she wasn't going to come out the other side, but she did.\"\n\nAs she turned to me, I felt my chin quiver and prayed I wouldn't cry again. \"Layla, you are without a doubt the most courageous person I know -- and that includes these two warriors sitting at the table with us.\"\n\nThe men nodded solemnly, no laughter in their eyes now.\n\n\"And I want you to know, every person at this table wishes you health, and happiness, and love, and all good things.\"\n\nShe raised her glass. \"To Layla!\"\n\nThe three of them clinked their glasses together, then all leaned towards me to clink mine. Gulping, I felt tears spill down both cheeks.\n\n\"Don't cry, girly,\" Gary said, but it was Smitty who dabbed at my tears with a soft cotton napkin that smelled of lavender.\n\nSniffing, I gulped back more tears. \"You guys are the best,\" I said. \"But I'm not brave at all.\"\n\n\"Yes, you are, girly. Courage isn't the absence of fear. Courage is feeling the fear and moving ahead anyway.\"\n\n\"That's right, baby. You kept putting one foot in front of the other, and you never gave up even when you wanted to. That's true bravery.\"\n\nBowing my head, I considered their words. Maybe I was brave. But I sure didn't feel that way.\n\nAfter we finished our main souffles and salads, \u00c9tienne cleared our plates, then set smaller saucers before us.\n\n\"Il y a plus?\" I said, surprised to learn more food was on the way.\n\n\"Naturellement,\" he replied with a wink, turning back to the stove to grab a cast-iron skillet.\n\nMoments later, a whoosh of flames rose from the skillet.\n\n\"Crepes Suzette!\" I cried, clapping.\n\nHe swirled the alcohol around the pan to keep the blue flames alive as we all admired the sight. Once they died down, he served us all, quick and neat and professional.\n\nHeaven on a plate! The orange crepes tasted just as marvelous as everything else \u00c9tienne had created and we savored every molecule.\n\n\"You are happy?\" \u00c9tienne asked as we stirred from the table later.\n\n\"Very,\" I assured him. \"That might have been the best meal I ever had. Definitely the best breakfast.\"\n\n\u00c9tienne's eyes shone. \"That's the best thing you can ever tell a cook. I'm so glad you enjoyed it.\"\n\nYawning suddenly, I clapped a hand over my mouth, but everyone laughed.\n\n\"You've been up a long time,\" \u00c9tienne observed, collecting his things to leave. \"Perhaps you need a nap.\"\n\n\"That sounds wonderful,\" Gabriela agreed. \"It's the perfect day for a hammock.\"\n\n\"Don't tease me,\" I replied. \"You know I don't have one.\"\n\n\"Don't you?\" she asked, her wide eyes feigning innocence. \"I feel sure I saw one in your backyard earlier.\"\n\nI looked from her to Gary to Smitty, and all three smirked at me.\n\n\"Check it out,\" Gary smiled, jerking his head toward the back door.\n\nLooking out into the yard, I spotted a gleaming frame with a close-woven white string hammock.\n\nFor the fifth time in one day, I cried.\n\n**\n\n\"This,\" I said dreamily, about half an hour later, \"is the life.\"\n\nI lay on the new hammock, basking in the early afternoon sun. Stretched out in the opposite direction, Smitty took one of my bare feet in his hand and commenced rubbing it.\n\nReplete with pleasure, I closed my eyes once more, relaxing into his touch. From far away, I could hear someone's radio. Much closer, the occasional chirp came from the nest above us, and the lilac shrub Gary had planted for me last year filled the yard with its fragrance. The sun shining through my eyelids turned them red. I sighed happily, stretched, then slipped into sleep.\n\nA dream of being on a ship in high seas awoke me in time to see Smitty heading into the house -- evidently his jostling and rolling on the hammock had translated itself into my dream. I thought of calling out, but let him go, content to consider the day so far instead.\n\nI felt warmed through and through not only by the sun, but by the love and the friendship everyone had shown me. And Smitty -- he truly was much more than I could have hoped for. Sure, his physical presence made my insides do backflips, but it was more than that. I felt a connection with him unlike any I'd ever had before. And increasingly, I wanted to act on that attraction.\n\nAfter a while, a shadow crossed my face and I looked up and into his shining eyes.\n\n\"You're getting kinda pink, baby. Let's go in for a while.\"\n\nIn the kitchen, I showed him how to make the lemonade concoction he had enjoyed the night before, and we headed back to the living room. As we sat together on the couch, his text alert beeped.\n\n\"It's from that lady on the balloon!\" he said, and I scooted closer to see.\n\nEvery so often, a picture will capture more than simple appearances, and that's what had happened here. I knew I had been leaning against Smitty in a pleasant daze, but I didn't know that I also looked blazingly happy. And the bigger surprise was his expression: dreamy, thrilled, loving -- a mirror of mine, in fact. As if we both had been waiting for something vital and finally had found it floating a thousand feet above the earth at the instant she had taken the picture.\n\nWe stared at the image for the longest time.\n\n\"Holy moly,\" I finally ventured.\n\nHe put down his drink and the phone. \"My God, you're beautiful,\" he whispered. \"Come here.\"\n\nPlacing my own drink on the table, I slid over to his side and he pulled me up onto his lap. I had little experience with men's laps -- my own dad had died when I was just six, and my jerk of a stepfather had certainly not invited any cuddles -- so the comfort I felt once I had landed there surprised me. Leaning into his broad chest, I felt his arms slip around me and I wriggled a little closer.\n\n\"Is this the day you were hoping for?\" he asked, his lips brushing my ear.\n\nI nodded, then shrugged. \"My instinct says yes, but the truth is, I didn't know what to expect.\"\n\nShifting slightly, he snorted. \"You realize you don't have to include a mathematical proof for every answer, right?\"\n\nChuckling, I gave Smitty my stock response: \"I overthink, therefore I am.\"\n\nHis breath tickled my ear and a shiver ran through me. \"You know, my grandmother's a churchgoing woman. Reads her Bible for thirty minutes every day, no matter what.\"\n\nUnsure where that had come from, I swiveled my head to look up at him. He smiled at me.\n\n\"You're wondering what my grandmother has to do with anything, aren't you?\" I nodded. \"Well, she loves to quote Ecclesiastes. You know, 'to every thing there is a season, and a time to every purpose under heaven. A time to be born; a time to die.' Like the song.\"\n\nMystified, I nodded again.\n\nHe drew me closer, settling me more comfortably on his lap. \"So here's what I'm saying to you, that there's a time for thinking and a time for doing. And baby -- this ain't the time for thinking.\"\n\n\"Then what are you proposing we do?\"\n\nThe look in his eyes was tender as a baby's cheek. \"I'll do whatever you want me to do, sweet Layla. All you have to do is ask.\"\n\nAll my desires battled for primacy, but in the end, analysis paralysis took over and I couldn't voice any of them. \"I -- I don't know.\"\n\n\"Tell me what you want,\" he whispered, and again I felt the full lips brush against my ear before moving into my hair and then down my neck.\n\nPausing to enjoy those sensations, I lost track of my thoughts.\n\n\"I want about ten million things, and I can't put one into words right now,\" I finally answered, frustrated.\n\nHis fingers slid down my arm, and he covered my own hand with his.\n\n\"Then show me,\" and his low voice barely broke the quiet of my living room.\n\nInhaling deeply, I shook my head, then inched up to kiss him. Instead of pulling me to him, he simply waited, a little smile playing over his face as he watched me, and somehow that seemed like the sexiest thing in the world just then.\n\nMoving in slowly to savor the moment, I could feel his heat, then the thudding of his heart as I leaned against him. Tilting my head just a bit, I almost touched his lips, teasing him for a few seconds, before finally making contact. For such a big and muscular man, his lips seemed oddly soft and I spent the next several seconds losing myself in the kind of kiss I had only fantasized about till then.\n\nLooking back, I'm not sure what about him had that effect on me. He didn't devour me, or demand that I surrender to his virility, or bruise my lips with passionate urgency, like some trite hero in a romance novel. He just ... flowed into me, setting me alight with an energy and spirit I still can't quite describe. I could feel every nerve in my body activate, like a living network of Christmas lights.\n\nClasping his warm face in my hands, I kissed him more deeply, feeling his ribs rise and fall with every breath. His eyes closed as if he needed to concentrate, and I swear I could almost see tendrils of energy swirling around us as we kissed, and kissed, and kissed some more.\n\nA shock pulsed from the crown of my head to the arch of my foot and I jerked, breaking off the kiss.\n\nSmitty gathered me in his arms, cradling me against him. \"Damn, girl.\"\n\nAgain, I could barely hear his voice. \"What?\"\n\nHe shook his head in wonder. \"I've kissed a lot of women in my time, but I've never felt anything like that.\"\n\nI laid my head against his shoulder, feeling dazed. \"Me either. That was -- amazing isn't quite the right word, but...\"\n\nHis chest shaking with amusement, Smitty pressed his fingers against my lips.\n\n\"Amazing's a good word and it'll do me just fine.\" Giving me a brief hug, he leaned forward. \"How 'bout a dance, beautiful?\"\n\nLeaving his lap, I walked to the middle of the living room and twirled, just for fun. \"Sounds good. Got a song in mind?\"\n\nFumbling with his phone, he nodded. \"You know I love some of those reaction videos on YouTube, right? One of my favorites did this one a few weeks back and I filed it away, just in case. Old school, sixties, but man, is it good!\"\n\nA fifties-style chord progression filled the room as Smitty put his phone on the table and opened his arms for me to snuggle in. As the singer hit the first long note, I grinned.\n\n\"The Righteous Brothers! This is a great song.\"\n\nAgain, I felt the rumble of laughter in his chest as we danced. \"Figures you can name this tune in two notes! You're just like Gary sometimes, you know?\"\n\nI arched one brow at him. \"Just like Gary? You sure you wanna go there?\"\n\nBiting his lip, he smiled down at me. \"Well, you're definitely prettier. And smarter. And a better dancer.\"\n\nPretending to misunderstand, I stared at him, eyes wide. \"You've danced with Gary before?\"\n\nSmirking, he bent his head to mine. \"No, Layla. I haven't danced with Gary before. Haven't kissed him, either.\" As he pressed his lips to my forehead, one hand wandered down my back to my butt and danced on the flesh there. \"Haven't done that with him, either.\"\n\nMy right hand drifted down his back and did some exploring of its own. \"So it's safe to assume he hasn't tried this with you?\"\n\nClosing the distance between us, Smitty embraced me tightly. His heart pounded at the same tempo as my own as I caressed him, and he made no move to hide his growing arousal any more than I tried to hide my own. \"No. And that's a good thing.\"\n\nAbandoning all pretense of dancing, we stood there in the large room, touching and swaying and trembling with emotion. Again, he didn't press me for more; instead, there in my living room, Smitty seemed as vulnerable as I felt.\n\n\"What now?\" I finally asked.\n\nHe kissed the top of my head. \"Whatever you want.\"\n\nMy curiosity finally got the best of me and I dropped my arms and stepped back. \"You know, you're nothing like I expected.\"\n\nHe cocked his head and raised one eyebrow. \"What do you mean?\"\n\n\"Gary always said he'd never seen a guy with a smoother game than yours. You just had to snap your fingers, and every woman within a block would swoon, and her panties would slide down her legs of their own accord.\"\n\nCrossing his arms over his chest, Smitty smiled sardonically. \"And?\"\n\nI shook my head. \"I don't see that guy.\"\n\nHe snorted lightly. \"That guy doesn't exist, baby.\"\n\n\"But you said yourself...\"\n\nNodding, he looked at the ceiling before meeting my eyes once more. \"It's true that I've had a lot of women. Can't help it -- a big guy like me gets noticed, and yeah, I took advantage of it. But that was five, ten years ago. And it was a lot of fun. I won't deny that. But, at some point, it gets old.\"\n\nIt was my turn to look and sound sardonic. \"Oh, really?\"\n\n\"Yes, really. After a while, you meet a girl and she looks familiar and you can't remember whether it's because you fucked her a couple of months ago or maybe it's just she rides the same bus you do. You can't remember -- you don't know. And that is depressing. It's not the life I want anymore.\"\n\n\"What do you want?\"\n\nHe didn't hesitate. \"Someone to love. Someone who knows my whole story, and doesn't judge any part of it. A good friend who enjoys gettin' a little freaky in bed. And...\" He broke off, looking for the right words.\n\n\"And?\"\n\n\"And someone who's not afraid.\"\n\n\"Afraid of what?\"\n\nHe smiled. \"Anything! Afraid of me. Afraid of herself. Or of what other people think. Afraid of living, or dying.\" His eyes gleamed in the darkness. \"Someone who's not afraid to be who she is, and people who don't like it can go fuck themselves. That's who I want.\"\n\nStepping forward, he placed his hands on my shoulders. \"That's one of the reasons I'm attracted to you, baby. You're not afraid. You've faced death, and come out the other side. What can scare you now?\"\n\nI gulped. \"Spiders.\"",
        "His rich laugh echoed off the walls as he placed his arm around my shoulders. \"Spiders, but not death! Don't worry, baby. I'll take care of the spiders.\"\n\nMy heart lightened, and my head seemed to fill with champagne bubbles. \"Deal. Wanna come upstairs?\"\n\nHe reached down and took my hand and once more, I felt electricity between us. \"Why go upstairs when we could just stay here, baby?\"\n\n**\n\nIt took maybe thirty seconds for all our clothes to hit the floor. In fact, I'm not even sure my bra had reached the floor before I found myself back in Smitty's arms, doing my best to burrow into his firm body. I couldn't decide what to touch first, so I simply slid my hands straight up his back and slowly serpentined them back down again, caressing as much hot, soft skin as I could manage.\n\n\"I like that enthusiasm!\"\n\nHe bent his head to mine, and we shared a kiss that went from zero to sixty in about ten seconds. Unexpectedly, he began to chuckle against my lips.\n\n\"How turned on are you, baby?\"\n\nMy insides gave a lusty lurch. \"Feel me and find out.\"\n\nHe ran one finger down my slit, feathering it into me, and chuckled again at what he found there.\n\n\"So wet,\" he murmured, continuing to play with me. \"You up for an adventure?\"\n\nSo help me, I nearly came on the spot! \"Fuck, yes! This whole summer has been about new adventures -- and I can't wait to have this one with you!\"\n\nRemoving his finger, he grinned, and the mischievous glint in his eye warned me to get ready for whatever happened next.\n\nReaching down, he grabbed my thighs and hoisted me up. Instinctively, my hands slid up and around his neck even as my legs wrapped around his waist. My breath came heavy as I felt his shaft against my lips. So sexy! I squirmed against him, rubbing my folds against his cock.\n\n\"That thing feels huge,\" I told him as we slid against one another, juices flowing.\n\n\"Feels huge? Didn't you see it?\"\n\nI shook my head and kissed him. \"Never got the chance.\"\n\nAdjusting his grip on my thighs and ass, he grinned. \"This is a first for me too, then. I'd put you down and let you play with it, but damn, I'm turned on. And so are you.\"\n\n\"Less talk, more action,\" I told him, running a finger from the back of his neck to his mouth. \"Isn't that what you said not ten minutes ago?\"\n\nHe nipped at my finger and I drew it back, giggling. I didn't have much experience with sex, but this felt more like play than anything else -- and after the last year and a half, that's just what the doctor ordered.\n\nMarveling at his rippling muscles, I continued to caress him where I could while keeping one hand carefully on his neck.\n\n\"You afraid of falling, baby?\" he asked suddenly, and I nodded.\n\nArms firmly around me, he walked us across the room until my back rested against one satiny oak panel. Sandwiched between the wall and his body, I felt much more secure -- and free to move with him and in response to him.\n\n\"Aren't you tired?\" I asked.\n\n\"Baby, you ain't heavy enough to wear me out.\"\n\nA tide of warmth rushed through me then, suffusing my face and chest before moving down. I felt as slippery as clarified butter as I gulped in a lungful of air.\n\n\"You look ready for anything,\" he said approvingly.\n\n\"I feel ready for anything.\"\n\n\"Good. 'Cuz this adventure is about to get wet and wild.\"\n\nBracing me against the wall, he reached under my thigh to position himself at my opening. The feel of that hot flesh against mine sent me into overdrive, and I wriggled, trying to get it inside me.\n\n\"Wait for it, baby,\" he advised with a quick kiss.\n\nWith that, he inched back from the wall to give me more room and carefully lowered me onto his waiting shaft. It felt unlike anything I had ever experienced and I closed my eyes to concentrate as he filled me with his heat and hard flesh.\n\nAs my lips stretched to accommodate him, I moaned, wishing I had seen what exactly I was getting into -- or rather, what was getting into me.\n\n\"Almost there, honey. Almost there.\"\n\nJust when I thought I'd have to stop him, all movement below ceased. With one hand, he pulled my shoulders toward him so he could give me a deep kiss. Suddenly, I relaxed internally and felt utterly, wonderfully full.\n\nSensing the change, he began thrusting up with his hips, grabbing and kneading my ass to keep me suspended. Overthinking Layla left the building then, replaced by an insatiable bitch I didn't even know lived within me.\n\n\"More,\" I demanded in his ear. \"Give it all to me.\"\n\nHis thrusts grew more forceful, hitting something inside me that seemed to turn my body to lava. My climax seemed to come screaming out of nowhere, and the shock waves shot through me like the world's tiniest and most pleasurable tsunami.\n\nHe held still then, nuzzling me, holding me tightly, and letting me drift down from the heights in my own time. When my eyes opened, he lifted me off him and set me on my feet. As he rubbed his back, I got my first look at his erection.\n\n\"Holy moly! That was in me?\"\n\nBiting my lip, I stared at it as his laugh filled my living room.\n\n\"Mm-hmm. Want some more?\"\n\nI did. A lot more.\n\n\"How about I lie down on my back and you do the work this time?\"\n\nI grinned at him and gave him a little push. \"Fair enough.\"\n\nHe lay down on the rug and I grabbed a throw pillow off the couch to cushion his head. I stood over him, my feet on either side of his thighs. Striking a pose, I placed my hands on my hips and stuck out my chest, superhero style.\n\nSighing happily, he gazed up at me, eyes flickering over my entire body and as one hand absently rubbed his shaft. \"You look like my own personal porn star up there, baby. It may not take me very long now.\"\n\nKneeling, I placed his tip at my clit and slid it around on me. That felt great too, and I moaned, getting into it, changing my angle so I could glide up and down his full length.\n\n\"Oh, baby,\" he whispered, clutching at the carpet and opening his legs. \"Oh, fuck!\"\n\nWatching him, I realized I had never felt so powerful in my life, and with that thought, another orgasm took root. Reaching down, I re-aimed his cock and slid down hard, enveloping him in one movement. Riding him hard now, I felt his hands on my thighs, my belly, my breasts before they dropped to the floor and he came with a shout.\n\nThat first convulsive twitch sent me into orbit with him, and my own cries would have brought down the walls in a less well-built house.\n\n**\n\n\"So what do you think, baby? Did you have a good day?\"\n\nWe had returned to the backyard hammock and lay together, watching the sky deepen into night.\n\n\"No,\" I replied, deadpan.\n\nHis voice sounded stunned as Smitty struggled to sit up. \"No?\"\n\nI winked at him. \"The word 'good' doesn't begin to cover it. It was brilliant. And breathtaking. The best day of my life.\"\n\nGrinning sheepishly at falling into my trap, he settled back down. For a couple of minutes, we stared at the sky.\n\n\"Wanna do it again tomorrow?\" he asked.\n\nDedicated to all those people who beat cancer, including my mom. \n\nThank you for reading! Please remember to vote."
    ],
    "authorname": "vanmyers86",
    "tags": [
        "bucket list",
        "love story",
        "interracial",
        "pennsylvania",
        "interracial romance",
        "survivor",
        "cancer survivor"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-unbucket-list"
}