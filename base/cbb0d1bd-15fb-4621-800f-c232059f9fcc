{
    "title": "Jax and the Brown Eyed Girl",
    "pages": [
        "Author's Note:\n\nThe following story is complete fiction. I'm not related to, or affiliated with, any characters depicted in this story. I sincerely hope everyone enjoys reading it.\n\nA sincere and heartfelt 'Thank You' to LadyVer. She graciously edited this story, despite a busy and demanding professional schedule, and her edits, recommendations, and feedback improved the story immensely. She was a joy to work with and a consummate professional. I accepted 98.9% of her changes, but also added some material after the editing process was completed.\n\nAny errors are mine alone. It's highly likely she recommended I change them.\n\nAs a fan of the main female character in this story, I highly recommend her work. She's naturally beautiful and completely genuine\u2014a rare combination.\n\n*\n\n\"Attention in the terminal.\"\n\n\"US Airways flight 1694 has been delayed approximately two hours. Sorry, folks. There is serious weather in the northeast and it's delayed this flight. As soon as we receive another update, we'll inform everyone in the terminal.\"\n\n\"Also, due to other flight delays and cancellations, we will have to re-seat some passengers. We will call individuals up and inform them of their new seat assignments.\"\n\n\"Thank you for your patience and understanding.\"\n\nGroans, sighs, and curses filled the air. Flight 1694 was already an hour overdue. Now all the passengers were stuck waiting another two hours. A line immediately formed at the counter, angry faces staring bullets at the airline attendant.\n\nPoor woman. It wasn't her fault, but she was the one dodging bullets. Matt watched the stressed-out attendant do her best with the frustrated passengers. Phoenix Sky Harbor airport was pretty comfortable as airports go and Matt figured it could have been a lot worse. Sky Harbor was certainly more comfortable than the Albuquerque or San Luis Obispo airports.\n\nMatt's destination was San Diego, his home for the last five years since leaving the military. A weekend of serious fishing and light partying was waiting in San Diego. Or was it light fishing and serious partying? Unfortunately, he was now stuck in Phoenix for at least two more hours.\n\nMatt sighed and stowed his Kindle, the bar across the hallway beckoning. He smiled when he saw the waitress. He couldn't resist attractive Latin women. Then Jackie slid into his mind.\n\nShe's an employee, dude, back off.\n\nGrabbing his black soft leather laptop bag, Matt stood and stretched. That's when he noticed them.\n\nPredators. Four of them.\n\nMatt's training barely prevented him from doing a double-take.\n\nSitting together on a row of chairs against the wall in the seating area, each of the men wore the lean, hungry, intense look that all predators displayed, whether they walked on two legs or four. They were trying hard to appear casual, to blend in, and most folks wouldn't notice them because they were too busy dealing with their own shit.\n\nMatt now had another reason for heading into the bar. He'd be able to watch them without being conspicuous.\n\nHe walked over to the bar thinking about the men. Not law enforcement. Definitely not military ... they didn't stand right.\n\nAn empty table at the bar gave Matt a good view of the terminal. The table also had the added benefit of being out of the predators' line of sight. Placing his worn leather briefcase onto the empty seat across the table, Matt pulled out his Blackberry. There was no better way to look occupied and oblivious to the world than with a smart phone. They were better cover than anything else invented by man, except kids. As Matt typed several fake messages on his Blackberry, he watched and evaluated the four men.\n\nNo formal training.\n\nNo obvious weapons.\n\nDefinitely foreigners.\n\nDark hair, dark eyes, light complexion, little facial hair. Freshly cut hair ... cut close ... trying to look American. Brand new fashionable clothes.\n\nProbably Central or South American.\n\nIt was hard to forget some things, especially things that saved your life once upon a time. Matt had been out of the game for a while, but the training came back easily. Although given what he did for a living, most people would say he was still in the game. His unique skill set was like an old coat that fit perfectly, even though it hadn't been worn in a while.\n\nPredators for sure, but who was the prey?\n\nThe terminal was packed. Understatement of the century. The Fourth of July was only a week away. Kids were running all over. Stressed-out and tired parents following, limiting the damage. Businessmen and women talked into cell phones or typed frantically on smart phones and tablets.\n\nVacationers were the easiest to spot. They were disappointed, but relaxed, otherwise not worried about being stuck in an airport for another two hours.\n\nMatt envied them.\n\nThe four predators did a passable job of looking in every direction, but one. They didn't look at the windows, which was odd because most travelers liked to watch the planes come and go. Matt focused on the row of chairs in front of the windows.\n\nSingle mom, three kids.\n\nNot her.\n\nOld guy, mid-sixties, AARP, Medicare.\n\nDefinitely not him.\n\nBusinessman ... cheap suit, wrinkled. Been traveling for a while. Late 20s, early 30s. Salesman. Building his career. Hair plastered back by god-knows-what grooming product.\n\nA possible. Four guys for him, though? The single mother could take that guy. Hell, her five-year-old daughter looks capable of putting him on the floor.\n\nWoman. Single, or at least sitting by herself. Mid to late 20s. In shape. Excellent shape, by the look of her. Athletic, but curvy. Brown hair, probably brown eyes. A woman alone.\n\nBingo!\n\nOne of the predators separated himself from the group, walked over slowly and casually, and sat a few rows behind her. The dumbass didn't even have a magazine. He simply stared out the window looking completely creepy and out of place. Matt looked for a sign on his back that said \"Creepy Dude\" but didn't see one. That's all he was missing. Matt waited to see if the single woman noticed him.\n\nInstincts. Hopefully she'll have good instincts.\n\nHuman beings were basically animals with animal instincts they've tried to ignore or suppress for thousands of years. But the instincts are still there and occasionally come in handy. One of the instincts most people have is the ability to know when a creep has taken a seat behind them and is staring holes into the back of their head.\n\nThe single woman was no exception. Hallelujah!\n\nWhether she saw the creep's reflection in the window, or she just had good instincts, Matt wasn't sure. Either way, she stood up. Keeping her eyes averted, she walked over to the bar.\n\nMatt continued to focus on the four predators.\n\nThey had no idea what to do. It was kind of funny.\n\nAfter watching them for fifteen minutes, he sensed they were outside their mission plan. Matt was ready to bet dollars to donuts they had never anticipated being delayed in the terminal. Now they were forced to do something they hadn't planned on and definitely hadn't trained for, and their stress level was going up. Lost in the sauce, was what we used to say. Matt guessed their original plan was to join the woman's flight at the last minute and make their move after she retrieved her luggage from baggage claim. It was the way he'd have done it.\n\nWhy would they be interested in her, though?\n\nDrug mule?\n\nNo. Doesn't fit.\n\nProstitute?\n\nMaybe, but why four guys?\n\nEyewitness?\n\nDefinite possibility. But she should have had some sort of law enforcement escort.\n\nThe last possible option was one he didn't want to consider.\n\nHuman Trafficking.\n\nMatt sighed heavily. Yeah. She fit the profile. Single woman, attractive, traveling alone. Landing in a big city, busy airport, close to the border with Mexico.\n\nFuck!\n\nThat had to be it. Bottom line? They wanted her alive\u2014alive at first, anyway. Who the hell knew what would be in her future if the four men snatched her. Having attended military and law enforcement briefings, Matt had heard the ugly and brutal stories about victims of human trafficking. He wished he could erase them from his memory.\n\nHuman trafficking organizations (HTOs) were a growing global menace. They recognized no borders, feared few law enforcement agencies, and operated with impunity in many countries. Drugs. Weapons. Organized Crime. HTOs were involved with anything and everything. Violence was their currency and they never hesitated to use it. If Matt was right, this lady was in some pretty deep shit. If he was wrong, she still had four seriously creepy dudes shadowing her.\n\nThey'd sent four guys.\n\nSo she was important ... a high-value target. An HTO sent four guys to make sure the snatch went perfectly. No screw-ups. Likely the predators were independent contractors who would hand her over to another organization later and who probably had little information other than a picture and a flight plan. Well, a picture, a flight plan, and instructions not to fuck up, or they'd be the ones disappearing.\n\nCarefully, Matt moved his eyes back to the woman who was now sitting alone in the bar reading a magazine on her iPad. She was facing him at an angle, so Matt didn't have a direct line of sight to her face. Something about her kept picking at his brain. He couldn't place her, but she looked familiar.\n\nUsing flash recognition, Matt tried looking away and then looking suddenly back. No luck.\n\nActress? sports star? politician? politician's mistress?\n\nMatt started over. If she looks familiar, go with actress.\n\nActress ... actress ... actress ...\n\nGotcha! Adult actress! Matt recognized her now.\n\nBrooklyn Chase!\n\nAt thirty-three, Matt was still single. He ran his own business with a partner and was extremely successful. And as a single guy living in San Diego, he had seen his share of porn.\n\nSouthern California was home, and it was also the home of the porn industry. Matt didn't live in the San Fernando Valley, which was porn central, but it was a booming industry all over Southern California. Occasionally, an adult actress caught his eye.\n\nMatt smiled. Brooklyn Chase was one of those actresses. Matt profiled her in his head.\n\nThe girl next door, only her beauty multiplied by 100. Gorgeous, shiny, cascading brown hair. Amazing brown eyes\u2014a horrible description because her eyes were absolutely captivating. Way beyond captivating. They were almond shaped, a light milk chocolate, and supremely expressive. Brooklyn's smile? It captured a person's attention so completely they lost their train of thought. A smile so perfect, the world stopped spinning just for a moment. A smile so beautiful, it made a person warm and happy just being in its presence. Brooklyn Chase was the epitome of beauty, grace, and style. Throughout history entire nations had gone to war over women like Brooklyn.\n\nMatt snorted. Easy, now.\n\nHe wasn't obsessed with her. Everyone appreciates beauty. Simply acknowledging someone as beautiful was a far cry from being creepy and mentally unstable. Matt wasn't either one of those. Brooklyn Chase was amazing, beautiful, and genuine, but he wasn't remotely interested in stalking the woman.\n\nThat's my story, dammit, and I'm sticking to it.\n\nLiving in Southern California provided the opportunity to see celebrities every day, so Matt had seen his share. Celebrities didn't do anything for him. He wasn't star struck or a groupie. The lack of privacy most celebrities had to endure was unbelievable, and he didn't think money or fame were acceptable trade-offs.\n\nBusiness, Matt. Focus.\n\nMatt's eyes slowly returned to the predators. Three were still sitting against the wall, but the fourth had moved to a table in the corner and now had a good view of Brooklyn. Fortunately, Matt was out of his line of sight. The glass divider next to Matt's table and its reflection gave him a clear, unobstructed view of the fourth predator.\n\nThe cute waitress finally made it to Matt's table, interrupting his surveillance. They exchanged a few words and he ordered a drink and some appetizers. She rewarded him with a smile and then hurried to Brooklyn's table. Brooklyn ordered water with a slice of lime. Matt was relieved she wasn't drinking. He wondered briefly if she sensed the presence of Creepy Dude and his pals. It's more likely she doesn't want to be impaired when she's by herself.\n\nA few minutes later, Matt's bourbon arrived and he slowly sipped his Booker's on the rocks. One was the limit though. At over 100 proof, Booker's was intended to be sipped.\n\nThe PA system came to life just then and passengers were asked to see the attendant for their new seat assignments. Matt pitied the person behind the counter because that had to be the worst job in the airline business. Sure enough, the first person in line started waving his hands around and pointing his finger at the attendant.\n\nWhat a dick! What is it about airports that brings the worst out in people?\n\nMatt shook his head and turned back to the fourth predator, the Head Creepy Dude, who had ordered a Dos Equis. Feeling more confident that the predator was from south of the border, Matt turned his attention back to Brooklyn. Her drink and a vegetable tray were on the table, but she was gone.\n\nMatt managed to avoid whiplash when he realized Brooklyn had been called to the counter to be re-seated. He didn't recognize, or remember, the name the airline had used to call her up. It didn't matter and wasn't important. Brooklyn stood quietly in line facing forward. Matt cursed under his breath at the sight of one of the predators in line behind her. He'd apparently been called up as well.\n\nUh oh. Shit just got real.\n\nBrooklyn was given a new boarding pass. The creepy dude behind her grabbed his new boarding pass, looked over at Head Creepy Dude, and nodded meaningfully. An ugly smile crossed his face as he walked back over to the creepy dude ensemble.\n\nAssumptions were normally unwise in Matt's business and typically the result of bad planning or just plain laziness. In this case, however, Matt was willing to bet serious money that at least one of the creepy dudes was seated close to or next to Brooklyn Chase on the plane. If he was correct, then whichever creepy dude was closest would be in a great position to slip something into Brooklyn's drink while the plane was airborne. In an airport as busy as the San Diego airport, it wouldn't even be noticed. He'd simply be a boyfriend or husband helping his wife to baggage claim.\n\nMy girlfriend drank too much, Officer. Just lost her mom, you see. Don't worry. I'll take care of her, and our car is right outside.\n\nThe waitress returned with Matt's appetizers and put the plate down with a smile. \"Here you go,\" she said, slipping the check under the plate.\n\nMatt smiled. \"Thank you. Can I ask you something?\"\n\n\"Sure.\"\n\n\"I need to go talk to the airline. Will you watch this table for me? I'm definitely coming back. I just need five minutes.\"\n\n\"Of course!\" the waitress replied. \"We do it all the time.\"\n\n\"Great. Thanks.\"\n\nWhatever appetite Matt had was gone, replaced by a sinking and slightly nauseous feeling. Drugging Brooklyn wouldn't be hard. Fear, laced with resigned certainty, surged through him. He couldn't risk it, couldn't live with being a bystander. The situation developing didn't involve him. It wasn't his business and it damn sure wasn't his problem, but he couldn't sit by and let something happen to Brooklyn. His conscience wouldn't let this situation develop for any woman, actress or not.\n\nI really hope I'm not going to regret this later.\n\nMatt slid out of his chair and walked over to the counter, taking his laptop with him. The woman behind the airline counter looked stressed and ready for battle. Matt smiled widely as he approached, trying hard to convey humor and an I'm-not-an-ugly-customer appearance.\n\n\"Hi. How's it going?\" Matt asked.\n\nShe smiled briefly. \"Ugh. Good. What can I do for you?\"\n\n\"Listen, I think you handled the first jerk really well. Situations like these can't be easy, but you're doing great.\" Matt finished by giving the attendant a high-five. His comment was cheesy, but kindness cost nothing, and sometimes it really paid off. He was rewarded with a genuine smile and a friendly eye roll.\n\n\"Thank you.\" She sighed. \"I appreciate it. Now, how can I help you?\"\n\n\"You served a passenger a second ago. A young lady ... brown hair, brown eyes,\" Matt started carefully. The lady behind the counter narrowed her eyes, suspicion breaking out over her face.\n\nMatt quickly held up his hand.\n\n\"Please. Just listen to me.\" He lowered his voice and leaned forward. \"I'm not asking for her name, and I don't want any information about her. Truthfully, I'd really appreciate it if you wouldn't mention my involvement.\"\n\nThe attendant nodded slowly. \"Okay.\"\n\n\"I want to upgrade her to first class. Are there any available seats left?\"\n\nShe hesitated, but after giving Matt the once-over, she looked down at her terminal and typed away for a moment before nodding. \"We have one seat left.\"\n\n\"I'll take it,\" Matt said, taking out his credit card.\n\n\"You just doing this out of the kindness of your heart?\" she asked with a smile.\n\nHe nodded. \"Sort of. Please just tell her there was an extra seat or something.\"\n\nThe attendant nodded and swiped Matt's card. \"Well, she's just been upgraded. I'm not going to call her up here again, but I'll walk over in a few minutes and give her the new boarding pass.\"\n\nMatt nodded. \"Fine. Thank you very much.\"\n\n\"You're welcome.\" She paused and then winked at Matt. \"Good luck.\"\n\nThe attendant wouldn't have understood or bought any other explanation, so Matt just smiled and walked back to the bar. It was highly unlikely the creepy dudes had first-class seats, so moving Brooklyn to first class would keep her out of their reach during the flight.\n\nMatt couldn't shake the feeling that something about this situation felt ugly, and that a really shitty situation was brewing. He glanced at Brooklyn as he slid back into his seat. She looked lost in her iPad. Now that she was marginally safer, Matt picked at his appetizer.\n\nHe thought of San Diego. Do I do anything when we land? It was likely Brooklyn had a boyfriend or relative who would pick her up, so she probably wouldn't be alone.\n\nThat's why there's four of them ... enough guys to deal with Brooklyn's significant other. Boyfriend or husband. Either way, they needed enough muscle to handle him.\n\nFinally, the plane arrived and the boarding process started. Matt deposited a hefty tip for the waitress and got in line with the other first-class passengers. A few minutes later he slid into his seat with a sigh and retrieved his Kindle. He had just started an amazing new Brandon Sanderson book, the second in a new epic fantasy series. A few minutes later, Brooklyn boarded, a confused, but happy look on her face, and took her seat in First Class.\n\nA wry smile crossed Matt's face when he noticed that Brooklyn wasn't sitting anywhere near him. So much for being a Good Samaritan. Well, you're not helping her for recognition. That's never been your style, bud.\n\nMatt returned to his Kindle.\n\nThe creepy dude ensemble came through eventually, each marking Brooklyn's seat on the plane. Head Creepy Dude looked supremely pissed, a scowl painting his face as he trudged back to Coach.",
        "Good. Brooklyn may get lucky and get her bags before those guys even get off the plane.\n\nMatt shook his head, and his seatmate gave him a strange look. Matt ignored him.\n\nI'll check the sky for pigs while I'm at it.\n\nWhen the plane arrived in San Diego, Matt kept a respectful distance from Brooklyn. She walked in front of him while he trailed about twenty feet behind. His position allowed him to keep an eye on her and to also keep an eye on the terminal as the first-class passengers made their way to baggage claim.\n\nHe walked out of the terminal and caught an escalator down to baggage claim. A huge smile crossed his face when he saw Jake. Jake was holding a sign above his head that read: Dumbass! Matt burst out laughing, as did the other passengers as they passed by.\n\nJake was his best friend and business partner, which was like saying the ocean was wet. Jake and Matt had served together in the military and they'd been there for each other through almost every type of situation. Combat, PTSD, family, friends, deaths ...\n\nJake also turned heads. He would have attracted attention even if he hadn't been holding a ridiculous sign. He stood 6'4\" and carried enough muscle for four guys and was also quicker and more agile than anyone Matt had ever seen. Dark brown hair and light blue eyes ensured he got a lot of attention from women. Over the years, Matt had seen women almost snap their necks to get a better look at Jake, and he accepted the fact Jake was better than average looking.\n\n\"It's about time,\" Jake said as Matt stepped off the escalator. \"My grandma is slow, but she's old. You don't have that excuse.\"\n\n\"Screw you,\" Matt replied, barely concealing his laughter. \"I'm still faster than you.\"\n\nJake stepped in beside his best friend and threw the sign into the trash. He gave Matt a crooked smile. \"I can see you're still drinking heavily. You're obviously hallucinating. You need to lay off the Booker's.\" He paused dramatically. \"I know! You should try drinking cosmopolitans!\"\n\nMatt punched his best friend in the shoulder. Snide comments and light physical violence were an integral part of their friendship. Jake recovered and rubbed his shoulder theatrically as they walked over to get the luggage and Jake caught Matt up on business. Fortunately, things were good, really good.\n\nMatt caught a reflection of himself and Jake in a window near baggage claim. They didn't look like brothers but no two brothers had ever been closer. Jake was two inches taller than Matt, which he pointed out as often as possible. While Jake was taller, Matt didn't surrender anything to him in terms of muscle. They both hit the gym regularly. Where Jake had dark hair, Matt's was sandy blonde. Matt's eyes were green, Jake's were blue.\n\n\"Bring the Hummer?\" Matt asked.\n\n\"Nope,\" Jake said. \"The Ferrari.\"\n\nMatt glared at him. \"Are you kidding me? Where the fuck am I going to put my bags?\"\n\n\"Damn, dude. I'm only kidding.\" Jake shook his head. \"You need another drink. Yes, I brought the Hummer.\"\n\nMatt exhaled softly. \"Good.\"\n\nThe creepy dudes were on the escalator making their way down to baggage claim when Matt caught sight of them again. Jake caught his look. They'd served in some tight spots and knew each other's game faces. To his credit, Jake didn't move, didn't flinch, and definitely didn't crane his head around.\n\n\"Who?\" was all he asked.\n\n\"Four Tangos,\" Matt said softly. Tango was the military term for target that was used for unsecure communications. If a bad guy was monitoring a specific frequency, the last thing the good guys wanted him to hear was the word target. Matt's gaze stayed fixed on the baggage carousel. \"They're tracking the brunette. Blue shirt, blue jeans. Hourglass figure. In your two o'clock.\"\n\nJake did his own covert surveillance of the baggage claim area. A few minutes later he said, \"Tallyho\" indicating he had identified everyone, had them in sight, and he'd watch them as well. \"Who's the mark?\"\n\n\"Brooklyn Chase.\"\n\nJake did a small double-take. A smile broke over his face. \"The Brooklyn Chase?\"\n\n\"Yep.\" Matt glanced at Jake, a quirky smile pasted on his face. \"How do you know who she is?\"\n\nJake laughed. \"The same way you know who she is, dumbass.\" He paused briefly and then asked softly. \"Why are they following her?\"\n\n\"No idea.\"\n\n\"What's our play?\"\n\n\"Let's just watch and see what happens. Could be nothing.\"\n\nJake didn't respond immediately. A few moments later, he looked at Matt. \"Could be something. Recognize the big one?\"\n\n\"No.\"\n\n\"Former cartel member. Enforcer, I believe. Low level. Into violence.\"\n\n\"Shit.\"\n\n\"Yeah, shit. Here.\" Jake passed Matt a collapsible baton.\n\n\"Good thinking, buddy.\"\n\n\"I'm going tactical.\"\n\nMatt nodded. \"Good idea.\"\n\nJake made a show of shaking Matt's hand and patting Matt on the back before walking away. It was bullshit. Tactical meant he and Matt were separating so they couldn't be taken together. Jake would stay within sight of Matt, but he'd make his own decisions about where and how to follow the developing situation.\n\nMatt's bags finally appeared. He used the motion of grabbing his suitcases to check out the creepy dudes again. They had separated as well. Two were waiting by the carousel, a few steps away from Brooklyn Chase, and two had apparently gone outside.\n\nBrooklyn was still waiting for her bags. She was on her phone, likely arranging for a ride, but she didn't look happy.\n\nMatt headed for the nearest exit. He saw two of the creepy dudes standing outside, smoking cigarettes and looking suspicious.\n\nDefinitely foreigners. Anyone with any sense wouldn't light up on the job. First, it's a bad habit. Second, it's a distraction. Finally, it marks you as a smoker and you stand out, especially in health-conscious San Diego. Americans don't smoke anymore, at least not like those two chimneys, and there were laws about that shit now.\n\nHis phone buzzed in his pocket. Matt stepped off to the side, away from the doors, and checked his phone.\n\nJake: \"Got Hummer. 20 seconds away. Stay mobile, I'll park at curb.\"\n\nMatt: \"10-4 good buddy!\"\n\nJake: \"Watch ur ass. I'll have u in sight in 10 seconds. 10-4 good buddy? U are such a geek.\"\n\nMatt pulled out his Blackberry, dialed a fictitious number, and held the Blackberry next to his ear. Jake pulled the black Hummer up to the curb. He was 30 feet away waiting and watching for his play.\n\nGame time.\n\n\"Fuck you!\" he yelled loudly into his phone. \"We're fucking done, you bitch!\"\n\nSurprised faces turned towards Matt as he shook his head angrily. He stashed his phone in his bag, cursing under his breath. He then reached down, snatched his bags, sighed theatrically, and walked over to the two creepy dudes.\n\nStopping an arm's length away, he slid his bags to one side and nodded at their cigarettes. Stressed-out guy needs a cigarette to calm down. Woman troubles. It was a universal situation in just about any country.\n\n\"Can I bum a cigarette off you?\" His voice was light and friendly.\n\nThe first creepy dude was small and lean and built like a boxer. He moved like a boxer, too, weight evenly distributed over his hips as he looked at Matt suspiciously.\n\nMatt held his hand out and smiled wider. \"Name's Gilligan.\"\n\nThe creepy boxer stopped suddenly and smiled. \"Gilligan! Like the TV show,\" he said excitedly.\n\nDefinitely foreign, and a moron. Matt nodded and laughed. \"That's it.\"\n\nBoxer creepy dude spoke heavily accented English, his smile revealing generously stained teeth, and his handshake was a dead fish handshake. His large buddy gave Matt an unfriendly smile and lit another cigarette. Boxer dude turned to his friend and chattered quickly in Spanish. Matt spoke the language fluently but acted as though he didn't understand a word. The little boxer ended his conversation with \"Maricone,\" so the gist of what he was saying was obvious.\n\nMatt's ruse worked. The boxer grabbed his pack of smokes and fished one out. Matt let go of his bags with a thankful smile. As the boxer held the cigarette out, Matt purposely let it slip through his fingers. When the cigarette hit the ground, boxer dude bent over to grab it. That's when Matt struck.\n\nMatt's left hand materialized from behind his back, flicking the baton open in the same movement. He swung hard and fast with the business end of the baton. It hit the boxer perfectly, right behind the ear. The boxer dropped hard and didn't move after he hit the pavement.\n\nGood night, peaches.\n\nThe other creepy dude, his mouth open and slack, stared stupidly at Matt.\n\nIdiot.\n\nSidestepping quickly, Matt came at him at an angle, shifting the baton to his right hand. The big dude's hands were already half-raised from lighting a cigarette. Crushing the pack of cigarettes in one hand he started towards Matt, but he was late getting into motion, which cost him dearly. The big dude took a wide swing at Matt. It never connected. It never came close.\n\nAs the big dude's fist swung at Matt's head, he dropped into a kneeling position and took out all his frustration on the big guy's knee. The baton vibrated strongly in his hand when it exploded against the guy's knee. A garbled scream, mixed with a colorful Spanish curse filled the air. The big guy automatically clutched his busted kneecap, and Matt used his downward momentum to finish him off.\n\nHis opponent fell forward grasping his knee and shuddering with pain, leaving his face exposed. Matt twisted his hips and let the baton get up close and personal with his descending jaw.\n\nThe second creepy dude hit the pavement as unconscious as his friend. Matt looked up to see Jake jogging over.\n\n\"Holy cow, man, are you ok?\" he said loudly.\n\nJake came up and pretended he was checking Matt out. He slipped the baton out of Matt's hand and made a big show of the situation, loudly pointing out how Matt had been attacked. Pedestrians and passengers filed quickly by, not wanting to get involved.\n\nJake and Matt moved the two guys up against the wall. Law enforcement would be along sooner or later and they hoped they'd be gone before airport security or police came to investigate. Worst case, they could handle it. Matt was conscious, Jake was a witness, and the two would-be kidnappers were unconscious. The situation was in their favor.\n\nJake checked the terminal, made a quick circle motion with his hand, and walked over to the other side of the door. Matt remained next to the two unconscious kidnappers.\n\nHead Creepy Dude came through the doors first, his eyes scanning the area in front of him. An angry expression spread quickly over his face when he didn't see his friends.\n\nFinally, his eyes found Matt.\n\nHe motioned to him with his thumb, \"These your guys?\"\n\nLoud curses in Spanish erupted from Head Creepy Dude. His eyes locked on his men on the ground. He completely dismissed Matt as he walked over. Matt thought the men must be drunks, drug users, or both, because Head Creepy Dude didn't seem surprised to see them on the ground.\n\nWhat the fuck was in those cigarettes?\n\nHead Creepy Dude strode over to his guys, checked their pulses, flicked open their eyes, and then straightened. He looked suspiciously at Matt. \"What happened?\"\n\nMatt shrugged. \"I think they slipped. I found them this way.\"\n\nStalling for time, Matt needed to account for creepy dude number four and Brooklyn Chase. He needed more time. Meanwhile, Jake stood on the other side of the door and kept an eye out for the two missing people.\n\nHead Creepy Dude looked down at his men again and then back at Matt. \"I don't think so.\" He paused. \"Do you know who we are? Who we work for?\"\n\n\"Nope.\" Matt smacked his lips carelessly as he uttered his response.\n\n\"My name is Chico and believe me, amigo, you don't want to learn anything more. Walk away now.\" Chico smiled at Matt. His teeth were perfect. \"Walk away now and you may live, for a little while longer.\"\n\nMatt looked at Chico, then laughed and motioned to the two stiffs. \"I could make you the same offer, amigo. Two of your guys are down, out cold. It took less than 60 seconds. You should forget your plans for Brooklyn Chase.\"\n\nChico was obviously the brains of the outfit. Matt's response appeared to register in his brain, and he could see the squirrels running around in his head. Chico grew still. When someone was competent and unafraid, it signaled trouble in Matt's business. Chico had tried bluffing. He'd tried bravado. Neither had worked. Now he was doubting whether he had the skill or the muscle to finish the job. That Matt knew who his target was made him worry even more.\n\n\"Holy cow! It's Brooklyn Chase!\" Jake's voice was high and excited, completely out of character for him. Jake's response broke Matt and Chico's staring contest.\n\n\"Miss Chase! Miss Chase! Can I have your autograph? Maybe a picture?\" Jake's voice was loud enough that other people turned to look. Chico did as well. Matt waited until Chico's attention was focused on Jake before moving a few steps away. \"I just love your work. Are you single?\"\n\nThe last of the creepy dudes had his arm around Brooklyn's shoulders, gripping her tightly. It was the big one. The former cartel enforcer. The one guy Matt and Jake knew was into violence. His other hand was inside his jacket. Matt suspected he held a knife against Brooklyn's side, possibly a gun.\n\nA knife. My money is on a knife.\n\nTerror shone in Brooklyn's eyes and they latched on to Jake, clearly communicating she needed help. Jake walked quickly up to them, his eyes focused on Brooklyn. By design, he completely ignored her partner.\n\nMatt would have smiled if this had been a training exercise and would have laughed if they had been watching this on tape. Unfortunately, this was real and a civilian was in the middle.\n\nAt Jake's approach, the big creepy dude's hand came out of his pocket and away from Brooklyn's body. As Matt suspected, he'd been holding a knife, a big one. He attempted to keep Jake away from Brooklyn, but he seriously underestimated his opponent and Jake didn't hesitate. He rushed forward, trapped the enforcer's knife hand and viciously disarmed him. The knife clattered to the pavement several feet away, while shock, pain, and surprise crossed the cartel enforcer's face.\n\nJake wasn't done. The cartel enforcer was disarmed and off-balance and Jake made the most of it.\n\nFirst order of business, separate the civilian from the threat.\n\nJake pushed Brooklyn out of the way in the opposite direction of Matt and Chico. Brooklyn tripped and fell on the concrete. Hard. It looked as if she might have sprained an ankle from where Matt stood. It didn't matter however, she was away from the bad guy and safe.\n\nSecond order of business? Turn out the lights.\n\nThe enforcer was better trained. Not well trained; just better trained than his friends. He didn't make any wide swings or try to box his way out of the situation. He executed several controlled, well-balanced strikes at Jake, none landed. The Cartel Enforcer was outclassed.\n\nNot by a little. By a lot.\n\nJake blocked each strike effortlessly. He smiled at the big man in front of him and counter attacked, feinting quickly and rushing forward. Inside the cartel enforcer's guard in a heartbeat, Jake slammed a knife-hand strike into his solar-plexus. Potentially a killing blow, Jake didn't hit him as hard as he could have.\n\nPain erupted across the enforcer's face as his chest and diaphragm seized up, breathing now impossible for him. The enforcer started to crumple. Jake put out his opponent's lights with a solid, perfectly timed uppercut to the chin. The big guy's back hit the ground first. He was unconscious before his body came to rest.\n\nJake nodded at Matt before stepping over to help Brooklyn.\n\nChico narrowed his eyes suspiciously at Matt.\n\n\"Walk away, Chico. Walk away now and you'll be able to live for a little while longer.\"\n\nChico was pissed. Using his own words against him only made it worse. Matt guessed it was a machismo thing. He also detected a slight tinge of fear in Chico's eyes.\n\n\"This is not over,\" Chico said quietly. \"We have to deliver her. Our client will not accept failure and they will not accept a substitute.\"\n\n\"You've lost, amigo,\" Matt replied. \"The police will be involved soon and you will not get another chance at her. Walk away.\"\n\nChico sighed heavily. \"This I cannot do. We have taken money. If we don't return with her, we die. If we don't bring her back, they will send another team to get her. Sooner or later, we'll have Miss Chase.\"\n\nMatt stepped closer to him and lowered his voice. \"Why Brooklyn Chase?\"\n\nChico looked at Matt. \"I don't know for certain. We were told little when we accepted the contract.\" His gaze slipped over to Jake and Brooklyn. He started to continue, but then closed his mouth.\n\n\"What?\" Matt pressed.\n\n\"I heard she is wanted by someone powerful in southern Mexico,\" he continued. \"She is beautiful, no?\"\n\n\"More than beautiful.\"\n\n\"You have won this round, senor, but there are more rounds to go.\" Chico's face didn't hold pleasure or excitement. It simply held resolve.\n\nMatt replied. \"I'll win those as well.\"\n\n\"Part of me hopes you will, Senor. You and your friend are skilled. Also, I do not like this business. Drugs are OK. Buying and selling women though, it is not for me. The things I heard about the man who has paid for her, well, they are not good.\"\n\nJake walked a little closer, holding Brooklyn who limped slightly and appeared to be in shock.\n\nMatt motioned with his head. \"Leave, Chico. Forget this contract.\"\n\n\"I cannot. Soon, I will take her back.\" He started to move away and stopped. \"I have never failed, senor. Not once.\"\n\n\"Neither have I, amigo,\" Matt responded.\n\nMatt and Chico stared at each other for a moment longer. Chico finally turned and checked on his men. They were still unconscious, but the first guy who hit the concrete started to stir.\n\n\"Let's go, Matt.\" Jake's voice broke through his thoughts. \"Security will be here soon. I'm surprised they're not here already.\"\n\n\"I've got her,\" Matt replied, gently taking Brooklyn from Jake.\n\nJake smiled. \"Good, because you can't drive for shit.\"\n\nGently, Matt put his arms around Brooklyn's shoulders and guided her over to the Hummer while Jake got into the driver's seat. When Brooklyn was in a seat belt, he drove off. As they were driving out of the airport, they saw several security guards gathered around several men. A fight had broken out.\n\n\"Decoy?\" Jake asked.\n\nMatt nodded. \"Definitely.\"\n\nJake drove through the parking gates. Once they were clear, he looked over at Matt. \"I'm surprised that dude didn't have back up.\"\n\n\"I worried about that was well.\" Matt replied. He glanced at Brooklyn in the back seat. \"When we talked, I got the sense it was a rush job.\"\n\n\"Good for us,\" Jake said after a minute. He kept his eyes moving as he carefully merged with traffic, but he also kept an eye on their six o'clock position.\n\nBrooklyn's eyes looked clearer, and Matt expected she'd snap out of her funk soon. No one appeared to be following them, so he looked back at Jake. \"Think he got the license plate?\"\n\nJake gave him a sly smile. \"I hope he did.\"\n\n\"Seriously. You had time for that?\"\n\nJake nodded. \"Damn straight. It probably saved our asses.\"\n\n\"True.\"\n\n\"You calling?\" Jake asked.\n\n\"Who do we call first?\"\n\n\"Ummm. Why don't you start with our attorney and then the local PD.\"\n\nMatt sighed. \"There goes our weekend.\"\n\n\"Yeah. That sucks big time.\"\n\nMatt pulled out his phone. They had contacts in the local San Diego PD that were important to their private investigative agency, which also doubled as a security consulting firm focusing on corporate clients. They'd worked in conjunction with several law enforcement agencies in the past. Matt and Jake's professionalism and skill had resulted in solid relationships with the local police department. It also didn't hurt that they hired ex-law enforcement personnel whenever they had an opening.",
        "Matt made the phone calls. Now their weekend was ruined. Jake and Matt had reserved a yacht for the weekend and had planned on lots of sun and fishing. That's what they had told the owner of the yacht. It was possible they might do some fishing, in between all the drinking. He and Jake needed a break after working six days a week for a while. Matt also needed to quit thinking of Jackie all the time and he hoped a weekend of heavy drinking would help him forget her.\n\nThat plan just went to shit, Matt thought sourly as their San Diego PD contact picked up the phone.\n\nTheir friends in law enforcement assured him they'd take it from there. The police department needed a formal statement, of course. Matt indicated that they'd be down at the station as soon as possible. The likelihood of charges being filed against them was between zero and \"no fucking way.\"\n\n\"Thank you,\" a soft voice said from the back seat.\n\nJake cocked his head to the side and Matt turned to look at their passenger.\n\nBrooklyn looked first at Matt and then at Jake. \"Thank you for helping me, for saving me, back there.\"\n\n\"You're welcome, ma'am,\" Matt replied.\n\nJake looked at his best friend and mouthed \"ma'am?\" He made an L on his forehead.\n\nThe military had drilled the 'sir' and 'ma'am' thing into Matt's head permanently. It always came out, especially if he didn't know someone well. Matt wasn't sure if it was a blessing or a curse, but whatever it was, Jake didn't share the same burden.\n\n\"Our pleasure.\" Jake laughed. \"Hell, it was fun. Although Matt got to have more fun than me.\"\n\nBrooklyn looked over at Matt and cocked her head. \"What did you do?\"\n\n\"Nothing.\" He shrugged and motioned at Jake. \"This guy was hallucinating.\"\n\n\"What's your name?\" Matt asked before Jake could object.\n\n\"Brook. Please call me Brook.\"\n\n\"It's nice to meet you, Brook,\" Matt said. \"I'm Matt and this idiot is my best friend, Jake.\"\n\n\"What happened?\" she asked. \"Why did those men try and take me?\"\n\nJake and Matt exchanged a look, but it was Matt who responded. \"Brook, it sounds like they wanted to take you to Mexico. Do you know anyone in Mexico?\"\n\n\"No.\" She shrugged. \"Occasionally, I'll do some work, advertising for clients in Mexico. I just finished a campaign for someone there. I've never been to Mexico, though, and I don't know anyone from that country.\"\n\nMatt and Jake's eyes met. Who ever paid for that custom \"advertising campaign\" (video), probably wanted Brooklyn as his personal pet. It was a clue at least. A place to start.\n\n\"Um. Where are you taking me?\" Brook asked, her voice more curious than scared.\n\n\"Good question,\" Matt said. \"Brook, it's likely the men who tried to take you tonight already know where you live. They may even have people watching your place.\" Her face grew pale. \"I'd rather not take you back to your place, only to have you abducted again.\"\n\nShe stared at Matt blankly for several seconds before motioning for him to continue.\n\n\"If you insist, however, we will take you home. We just don't think it's a good idea.\"\n\nBrook looked out the window, tears glistening in the corners of her eyes.\n\nJake decided to voice his opinion. \"It's a horrible, shitty idea.\"\n\n\"Brook ...\" Matt waited until their eyes met. \"Jake and I are private investigators. We know some safe places in the city where you can stay free of charge and you'll be safe. We've already contacted the police. They may also provide you protection for a while.\"\n\nThe situation was clearly overwhelming for her. She'd been a normal person when she boarded the plane. Now her life was in danger. In the last forty-five minutes, she'd been attacked, saved, pushed into an SUV with strangers, and then driven around San Diego. It was a lot for anyone to absorb.\n\n\"Is there anyone we can call for you? Husband? Boyfriend?\" Matt asked. \"They could come stay with you, or you could stay with them.\"\n\nBrook shook her head. \"My parents moved several years ago. They live in Montana now. I have a boyfriend, but he's out of town for several months.\" She looked down for a moment, but perked up a second later, grinning. \"I have a dog.\"\n\nJake snorted. \"Really? I figured you for a cat person.\"\n\nClassic Jake.\n\n\"You are not funny,\" Brook countered. \"I'm a dog person, not a complete loser.\"\n\nIt looked like Brook's personality was reasserting itself. A good sign. She'd been shocked and shaken tonight, but not broken. It spoke well of her. Matt started to envy her boyfriend. Ok, it's not a date, Matt. Time to get the conversation back on track. \"How is your dog around strangers?\" he asked.\n\n\"Ummmm,\" she began, \"he's fine, once he's been introduced. I wouldn't recommend trying to break into my house. He's a little territorial.\"\n\n\"A little?\" Jake asked.\n\n\"OK, he's territorial. But he's really a sweetheart.\"\n\n\"Yeah. A 'sweetheart,'\" Jake mimicked. \"He'll only take a little chunk out of your ass. He's a sweetheart.\"\n\n\"Jake,\" Matt warned. \"I'll get the dog.\"\n\n\"Damn right you will. I still have scars from the last little sweetheart we dealt with. Remember?\"\n\n\"Yeah. You squealed like a girl.\"\n\n\"Fuck you!\" Jake shook his head. \"I yelled like a man when that Rottweiler clamped onto my calf.\" He laughed. \"It fucking hurt.\"\n\n\"Yeah, yeah.\" Matt looked back at Brook. \"Okay, how's this sound? We'll get your dog and then get you to someplace safe. Then we'll call the police again. You can give them your statement when they arrive. When you're done with the police, you can decide what happens next.\"\n\nBrook nodded. \"Okay. Sounds fair.\" Matt faced forward again. \"Thanks again,\" she said quietly.\n\nThe trio rode in silence for a few minutes before Brooklyn gave directions to her house.\n\n***\n\nGuadalajara, Mexico\n\nRinging. Ringing. Ringing.\n\nCurses, low, hard, and guttural filled the air, followed quickly by a groan of pain.\n\nThe fat man rolled over onto his back, breathing heavily, as he tried to make sense of his surroundings. He wasn't sure if the ringing was just in his head or if it was the phone. Either way it made his headache worse.\n\nHe cursed fluently in Spanish again before sitting up slowly to avoid puking. The party had lasted long into the night. It had been a good party. Lots of tequila, cocaine, and women. The lavish surroundings came into focus, and he realized he was in his own master suite. There were women in the bed with him. Naked.\n\nIt was a good party. And the boss gets to fucking party whenever he fucking wants.\n\nDon Pedro Aragon. That's what his men called him. That's how he thought of himself. It wasn't his given name. It sure as hell wasn't what he was called in the ghetto where he grew up. The stinking sewer where his whore of a mother gave birth to him. The crowded, smelly streets where he learned to steal, cheat, and kill. It was also where he learned the rules of the game.\n\nThe strong win. The ruthless get rich. Power comes only to those willing to be both strong and ruthless.\n\nDon Pedro Aragon. The name he'd picked when he'd taken over the drug operations in this part of Mexico. Taken over? He'd fucking killed the arrogant bastard who controlled the territory before him. Killed him, his family, his children, and his dogs.\n\nDon Pedro Aragon was strong and ruthless.\n\nIt was regrettable killing his family, but important. It was important because it sent a clear message.\n\nDon't fuck with Don Pedro Aragon.\n\nSince then his organization had grown rapidly, becoming richer and more powerful than almost anyone in Mexico or Central America. His kingdom was Southern Mexico. His rule there was absolute. Southern Mexico was perfect because it kept him off the radar of the U.S. law enforcement agencies.\n\nFucking Norte Americanos. They're soft. The only thing they produce is drug addicts and porn stars. Fortunately, they produce both in large numbers.\n\nDon Pedro was in his middle 50s. He was overweight and balding and sported a well-trimmed mustache. He didn't look like a powerful drug lord. He didn't look like a cold-blooded killer, or a fugitive wanted in over twenty countries. He looked like a banker, a barber, or a lawyer.\n\nDon Pedro Aragon was a king in Southern Mexico. No one stepped out of line, no one questioned his orders, and no one stood in his way. He had true power. The power over life and death in this part of Mexico.\n\nLife and death.\n\nHis gaze fell on the three naked women in his bed. They were beautiful and boring. Sensual and plain. They looked like any other women in this part of Mexico. He could end their lives with a gesture, but it would require that he care about them. He didn't. They weren't valuable enough, or important enough, to kill. What would be the point? It would be like destroying luggage or furniture.\n\nDon Pedro hadn't met an interesting woman in years. Until recently. One of his men, a long-time employee, showed him a movie with a woman so beautiful, he couldn't get her out of his head. She consumed his thoughts and filled him with desire. She haunted his dreams every night, and his desire grew stronger.\n\nThe fat drug lord slipped a robe on, tightening the belt as he walked out onto his patio. He motioned to his butler for coffee. He surveyed his backyard. It was lavish, beautiful, and all of it belonged to him.\n\nBrooklyn Chase.\n\nA woman of rare beauty. He had to have her. Not just on film. That was for losers like his employee who had to rely on videos for his enjoyment. Don Pedro Aragon was a better man. His appetites could never be satisfied by moving pictures. Brooklyn Chase. Her name filled his mouth, slipping off his tongue deliciously. He needed to possess her completely.\n\nThe beautiful American brunette would belong to him. A part of his life. A fixture at his estate. Don Pedro needed to see her lounging around his pool. Needed her on his arm when he attended parties. He needed to see the jealousy in other men's eyes as they looked at Don Pedro, the better man. Brooklyn Chase also needed to grace his bed every night, happy to give him pleasure, and satisfy his needs.\n\nOne day after seeing a video clip of her, he had placed a call to his attorney in the U.S. He demanded a custom video. He instructed the attorney to pay whatever was necessary to make it happen. Money didn't matter. Brooklyn Chase mattered.\n\nDon Pedro also instructed his attorney to extend an invitation to visit his estate. Ideally, Don Pedro wanted the video to be shot at his estate in Cabo San Lucas. He also extended an invitation to Brooklyn Chase to visit him in Southern Mexico after the video was completed. Women were stupid creatures. They were attracted to money and power. Don Pedro had expected Brooklyn to immediately accept his offer. Money and power were items he had in abundance.\n\nShe will come to me willingly.\n\nThe possibility of Brooklyn refusing him was unthinkable. Unfortunately, his attorney told him Brooklyn Chase stubbornly refused to leave the country. More money would not change her mind, his attorney told him, and it would only make her more suspicious. The video would have to be done in Phoenix, Arizona.\n\nFury gripped Don Pedro Aragon after he ended the phone call. It took several hours for him to calm down. The idea someone would refuse him, especially a woman, was infuriating. Rage and humiliation burned within him.\n\nBrooklyn Chase.\n\nHer name mocked him now. She'd refused him. She'd defied him. Refused Don Pedro Aragon!\n\nDon Pedro muttered another curse. He grabbed his phone and called another employee. A different employee. This employee was definitely not an attorney, but he solved more problems than any ten attorneys combined. Several hours later, the employee visited his estate and explained to Don Pedro that everything had been arranged.\n\nBrooklyn Chase would be at his estate within a month, possibly sooner, but no longer than a month.\n\nWe will make another video when she arrives. We will make many videos of Brooklyn Chase.\n\nThe fat drug lord opened his humidor and selected a Cuban Cohiba. He lit it, enjoying the aromatic smoke billowing up from the end.\n\nShe will learn never to refuse Don Pedro Aragon.\n\n***\n\n\"Fuck me!\" Matt hissed, frustration coloring his voice as he looked at Brooklyn. \"I thought you said he was friendly!\"\n\nThe brown and white canine in question was growling menacingly, and staring at Matt as though he were a tasty item on the menu.\n\nNice doggy. Yeah, right! The nice doggy's about to munch on my nuts!\n\nMatt backed up against the wall and looked for something to throw at the growling hunk of fur and teeth.\n\nBig, white, nut-munching teeth.\n\nJax wasn't all that large, maybe forty or fifty pounds, but he had an intensity that projected strength.\n\nIf he sinks his teeth into me, I'll probably have to shoot the little fucker to get him to stop.\n\nBrooklyn giggled. \"I said he was a sweetheart. I never said friendly.\"\n\nShe was obviously enjoying Matt's discomfort. He glared at Brooklyn. Finally, she took pity on him and called to her dog.\n\n\"Jax!\" Her voice was firm. \"Out!\"\n\nJax, the sweetheart boxer, gave Matt one last warning look before padding over to Brooklyn. He circled her once before sitting next to her and looking up hopefully. A wide, loving smile broke over Brooklyn's face as she looked at Jax. She reached down and rubbed and petted her sweetheart.\n\n\"Good boy! That's my boy, Jax. Way to scare the big man.\"\n\n\"Easy,\" Matt said. \"I wasn't scared, just cautious.\"\n\nBrooklyn rolled her eyes. \"Whatever. God, you men have such fragile egos. Ugh.\"\n\n\"Yeah, Yeah.\" He looked at her meaningfully. \"Hey, remember. Bad men. Attempted kidnapping? Maybe we should get your little mutt and leave?\"\n\n\"OK. OK. Let me throw a bag together and we'll get out of here.\"\n\nJesus, we're probably going to be here all night. Women take forever to pack.\n\nMatt didn't follow her back to her bedroom.\n\nHe didn't offer to help her.\n\nAnd he didn't start checking out her place.\n\nBrooklyn was a client in Matt's mind now, not an actress. Definitely not an adult actress. This was a job. Matt was dispassionate, calm, and professional, now that the sweetheart was out of the room.\n\nIt was hard to look at Brooklyn Chase and not see a beautiful, smart, sexy woman. At the same time, however, Matt's training and experience had taken over. She was truly more of a client now in his mind.\n\nMatt stepped over to her patio and looked out the window. They'd entered through the back. So far, their exit looked clear. No obvious surveillance. No sign of more bad guys. Jake was waiting a block away. Matt would text him when they were ready to leave. The plan was to go out the back again, walk down the alley, and meet Jake at the end of the block.\n\nFortunately, Matt was now armed. Jake was as well. Things were better\u2014not good\u2014but better.\n\nBrooklyn appeared a few minutes later with a large gym bag over her shoulder. She was dressed in yoga pants, a tank top, and a zip-up hoody. Sensible. Comfortable.\n\nWow. She looks good.\n\nHe must have looked shocked because she glared at him and put her bag down.\n\n\"What?\" she asked. \"Oh. I'm a woman, right? We can't pack anything in less than an hour? Jerk.\"\n\n\"Uh ...\" Matt's super-fast, razor sharp wit was on display.\n\nBrooklyn walked over and attached a leash to Jax and then glared at Matt. \"Can we go now?\"\n\n\"Yes, ma'am.\"\n\nYeah, some superhero you are. \"Does your dog bark?\"\n\n\"No. He'll stay quiet.\"\n\n\"Excellent.\" He paused and explained carefully. \"Same way we came in. I'll lead off. You stay directly behind me, about three feet, and just do as I say.\" She nodded. Matt gave her what he hoped was a reassuring smile. \"Jake's ready for us, so we just have to walk down the alley.\"\n\nBrooklyn took a deep breath and adjusted her gym bag.\n\nThe sliding glass door opened smoothly and quietly. Matt and Brooklyn stepped out into the night. It was a typical Southern California summer night. Cool, light breeze and no humidity. Perfect.\n\nMatt moved forward carefully and fluidly, his firearm in the ready position, and they moved silently down the alley. A quick check behind him showed Brooklyn was following his directions. He walked quickly down the alley. Only silence greeted them, and even Jax seemed calm.\n\nNo unusual noises, no voices, no gunning engines or screeching tires, nothing.\n\nThey reached the end of the alley. The Hummer pulled up and the passenger doors sprang open. Jake kept the motor running and gave Matt a thumbs-up. The last few feet were tense for everyone. It was the place where most experienced individuals hit a security detail. The transition from walking in a prepared position to moving the client into a vehicle safely was a challenge.\n\nFortunately, it went off without a hitch and they were on the highway a few minutes later.\n\n\"No one,\" Jake said a minute later. \"I guess it was just one team.\"\n\nMatt holstered his firearm and nodded. \"Yeah. They probably expected to take her at the airport with no problems and whisk her to Mexico.\"\n\nJake gave Matt a weird look. \"Whisk?\"\n\n\"Fuck you.\" Matt laughed. \"Drive, leave, abscond, snatch and grab, extract, whatever.\"\n\n\"You da man!\" Jake said sarcastically. \"A one person thesaurus.\"\n\n\"Um, where are we going?\" Brooklyn asked from the back.\n\nJax had taken over her lap and was panting happily as she stroked his fur. He looked cute sitting in her lap.\n\nHe's cute all right. Now that he isn't trying to make a meal of my testicles.\n\n\"We have a condo ready. It's a few miles away, so sit back and relax. We should be there within thirty minutes.\"\n\n\"OK. Are the police going to be there?\"\n\n\"That depends on you,\" Matt replied. \"It's late. If the police come, it will be several hours before they're done questioning you. We could wait until morning. It would give you a chance to rest and recover a little.\"\n\nTruthfully, once the police arrived, they didn't know for certain what would happen next. They could take everyone down to the station for questioning. It was even possible that Jake or Matt could be arrested for their actions at the airport. It was highly unlikely, but it was possible.\n\nBrooklyn sighed and looked out the window.\n\n\"You will be safe,\" Matt said quietly. \"It's a big condo. You'll have your own room, your own bathroom, and privacy. I promise.\"\n\nBrooklyn continued to look out the window for a moment longer. \"I'll be safe? You promise?\"\n\n\"Yes,\" Matt replied.\n\n\"Absolutely,\" Jake added a second later.\n\n\"OK. We can call the police in the morning then.\" Brooklyn said, closing her eyes.\n\nThey arrived at a brand new building twenty minutes later. The building had been built along the beach in an upscale neighborhood. Matt and Jake had recently purchased it through a shell corporation they'd set up in the Cayman Islands. It didn't show up on any of their tax forms or records. It was as \"off the books\" as they could make it.\n\nThe condo was amazing. The windows all faced the beach. Nearly all the rooms had a wonderful view of the coastline for several miles. They'd bought it for exactly this purpose. Occasionally, they needed a safe place to stash a client or potential customer. The condo was perfect.\n\nThe building had a guarded entrance, and the security company took its job seriously. The gate guard was armed and experienced in using firearms. Their weapons weren't just for show. Additional armed security was inside the lobby.\n\nJake and Matt took Brooklyn and Jax up to the condo. Brooklyn had kept her gym bag and Jake and Matt were happy to let her carry it. They didn't want their hands full of crap, in case they needed to use their firearms.",
        "Brooklyn gasped when she stepped inside the condo.\n\nJake's ex-wife, who ran her own interior decorating businesses, had decorated it and done a fantastic job. Despite doing the job for her ex-husband, she had charged the full rate. No ex-husband discounts. They were lucky she hadn't charged them extra. Brooklyn dropped her bag, then slowly walked over to the floor-to-ceiling windows to take it all in.\n\nJake cleared the condo while Matt waited next to the door and kept an eye on Brooklyn. A few seconds later, Jake returned. \"Clear,\" he said quietly.\n\nMatt picked up Brooklyn's bag and took it to the master bedroom, which had its own private bath. It also had its own fantastic view. The gym bag was dropped on the bed. Jake was speaking quietly into the phone as Matt came back into the room.\n\nMatt looked over at Brooklyn. \"The master bedroom is that way.\" Matt motioned over his shoulder. \"It has its own bathroom. Jake and I will stay in the other rooms, at least for tonight. The refrigerator is fully stocked, as well as the pantry. We even have some beer, wine, and liquor. Help yourself and don't be shy.\" Matt paused. \"We won't bother you.\"\n\nBrooklyn gave Matt a thankful smile before walking to the master bedroom, Jax following right behind her pausing to give Matt a wary look.\n\n\"Rookie is on his way.\" Jake's voice broke into Matt's thoughts. \"He'll spell us after a few hours.\"\n\n\"Great,\" Matt replied. \"I'm going to shower and change. You taking first shift?\"\n\nJake nodded. \"Yeah. I'm rested.\" He walked over to the coffee maker.\n\n\"Thanks man. Thanks for helping me out today.\"\n\nJake filled the coffee pot all the way before dumping some coffee grounds into the coffee-maker. \"No problem. It was fun.\" He turned to Matt. \"Any idea who wants her?\"\n\n\"No.\" Matt shook his head. \"Whoever it is wants her pretty bad. That was pretty ballsy to try and snatch her at the airport.\" Jake nodded and continued making caffeinated goodness.\n\n\"Rush job,\" Matt added after a minute. \"I wonder if her \"ad campaign\"\u2014he made quotation marks in the air\u2014\"for her Mexican client had anything to do with it.\"\n\nSarcasm colored Jake's response. \"Gee boss. You think?\"\n\nJake had sarcasm on tap for anyone within earshot. Despite being one of the best operators in the business and the best friend anyone could ever ask for, Jake never took life too seriously. Personally, Matt thought it was because he'd never met anyone who was an actual threat to him. Matt wasn't exaggerating. Jake simply never met anyone who could beat him. Not hand-to-hand, and not with any kind of bladed weapon short of an actual sword. Jake's physical abilities made him confident. They also imparted a level of sarcasm that was maddening to most people.\n\nMatt on the other hand?\n\nWell, he'd been on the receiving end of a few ass-kickings. Most of them when he was starting out, but they'd been certified ass-kicking and he remembered each one. Valued each one. They grounded Matt, kept him humble. Most importantly, his ass-kickings made him careful.\n\nLife hadn't handed Matt many easy lessons, so he didn't resent the hard ones.\n\nCareful was good.\n\n***\n\nThe phone vibrated on the coffee table. Once. Twice.\n\nFinally, a well-dressed man reached over and picked up the phone. \"Do you have her?\" No greeting.\n\n\"No. There were complications at the airport.\"\n\n\"Excuses. You were paid to do a job. Do it.\"\n\n\"I will. It will just take more time than I anticipated.\"\n\n\"You agreed to deliver her within a month. A week has passed. You have three weeks left. There will be no extensions. Either you deliver the girl as you agreed or\u2014\"\n\n\"Yes, I understand,\" Chico interrupted. \"We will deliver her. Just tell Don Pedro it will be a little longer.\"\n\nThe well-dressed man laughed. \"If you do not deliver her, it will not be Don Pedro you need to worry about, Chico.\" He paused. \"I will personally hunt you down like an animal. You will not be the first to die, my friend. I will kill your team and your family first. Then you will die. Slowly.\"\n\nSilence.\n\nChico finally responded. \"She will go to the police. Do you have any contacts in the police department? It will help us find her and fulfill our contract.\"\n\nThe well-dressed man sighed. \"Yes. I will make some calls.\"\n\n\"Thank you.\"\n\n\"Do not thank me. Finish the job. Finish it early and I will pay you a 20% bonus. You, Chico. No one else.\" He paused. \"I will call you with further details.\"\n\nThe phone call terminated.\n\n***\n\nMatt's alarm went off and he was instantly awake. It was a gift. He'd always been able to go from a dead sleep to wide awake in seconds. He rubbed his face a few times, then slid out of bed. As he walked to the bathroom, Matt took a moment to admire the view out the windows. The night sky was getting lighter. The sun would be up soon.\n\nFuck, this is a nice condo.\n\nThe view of the San Diego coastline was something he never grew tired of seeing. The beach would fill quickly because summertime had arrived. Tourists and locals mixed excitedly on the Southern California sand. The beach was lighter than the ocean water at this time of night and the waves created a white foam along the beach.\n\nBeautiful. Home.\n\nA few minutes later, Matt emerged from his room, walking softly down the hallway to the living room. Jake was gone, but their new guy had taken his place.\n\nRookie was the new guy. He'd joined the firm right out of the military. Matt and Jake were working hard at turning him into something resembling a civilian. Their new guy was enormously skilled, but stiff and socially awkward. He didn't blend in well. Truthfully, Rookie stuck out in any group like a sore thumb. Everything, from the way he spoke, to the way he carried himself, screamed military.\n\nRookie was a nickname. It was also an oxymoron. They called him Rookie because he was new to their firm, not because he was unskilled or inexperienced. Rookie had \"been there, done that and got the t-shirt\" on several different continents. He also had several specific skills that made him invaluable to Matt and Jake.\n\nLanguages. Languages were Rookie's first skill and he was fluent in four of them. Not four years of high school fluent. Rookie was Defense Language Institute (DLI) in Monterrey, California, fluent. A graduate of DLI spoke a language so fluently, they would be indistinguishable from a native speaker.\n\nSpanish. Rookie got that from his mom, but he could switch his accent easily. He could sound like a native Spanish speaker in Spain, the Caribbean, and most Central and South American countries.\n\nGerman. He learned that at grandma's knee. His grandma on his dad's side. She'd helped raise him, and to this day, she only spoke to him in German.\n\nArabic. It was the language du jour. Arabic was the language Rookie attended DLI to learn initially.\n\nMandarin. Matt didn't understand why Rookie studied that language, so he asked him.\n\nRookie looked at Matt as if he didn't understand the question. Finally, he shrugged. \"Because I was bored with Arabic and I had extra time on my hands in Monterrey.\"\n\nThat was Rookie's answer. Once Matt thought about it, he realized it gave him a good insight into Rookie's personality.\n\nRookie spoke English, but no one counted English. Rookie had other talents, but those were mostly classified or unconfirmed. Matt and Jake knew about them, of course, but never mentioned it to anyone.\n\nMatt nodded at Rookie, who motioned to the coffee pot. It was full. Rookie was good people.\n\n\"It's quiet, boss,\" he said after Matt got a cup. \"I checked with security and they haven't seen anything unusual. I also did a quick scan of the two floors below us, walked the hallways, looking for anything out of the ordinary. We're clear.\"\n\nMatt nodded and took a sip of coffee. He added coffee-making to the list of talents Rookie possessed. \"Good work. You need a break?\"\n\n\"No. I'd like some more Intel though, Jake didn't tell me much.\"\n\nIt was a good response. In their business, you could never know too much about your situation. If Rookie would loosen his vocabulary a little and relax his military bearing, he'd be downright dangerous as a private investigator.\n\n\"Our client is Brooklyn Chase\u2014\"\n\nRookie interrupted before Matt could continue. \"The Brooklyn Chase?\"\n\nMatt shook his head. \"Yes. The Brooklyn Chase. Although she prefers Brook, apparently. She didn't mention her profession, by the way. We're going to continue acting as though we don't know what she does for a living.\"\n\n\"No problem.\"\n\n\"Well, Brook is apparently wanted by someone in Mexico pretty badly. A team of four guys tried to snatch her at the airport. Jake and I intervened, prevented the bad guys from taking her, then we brought her back here. We're going to call the police in the morning. Once our attorney gets here, she can make her statement.\"\n\n\"How good was the team?\"\n\n\"Hard to say,\" Matt replied, taking another sip of coffee. \"Jake and I caught them unprepared. We made the most of it. If they had been prepared, it would have been a lot harder.\"\n\n\"If they were any good, they would have been prepared.\"\n\nMatt didn't argue. Rookie was right.\n\n\"What happens after she gives her statement?\"\n\n\"That's up to her,\" Matt replied. \"We're not getting paid. Brook hasn't asked us for help beyond last night. We took control of the situation last night, but that was temporary. Once she gives her statement, my sense is Brook will want to assert herself.\" He smiled at Rookie. \"I don't blame her.\"\n\nRookie checked his watch. \"I'm going to check with security again. Be back in twenty minutes.\"\n\n\"Watch your ass,\" Matt cautioned, then checked his watch. \"Twenty minutes. Let's use that as our new time limit for check-in.\"\n\n\"Sounds good, boss.\"\n\nThe door shut quietly. Matt walked over to the windows and stood quietly for several moments, enjoying the view and the coffee.\n\nThe ocean is beautiful. I don't care what your vantage point is, the ocean is beautiful.\n\nThe sky was getting lighter and the stars were making way for the sun. Daylight was preparing to reclaim this part of the earth. The ocean waves rolled softly over the beach while boats crisscrossed out in the distance. Seagulls competed for whatever nuggets the tourists dropped, and relentlessly stalked the occasional jogger, hoping for a snack.\n\nNot bad, for a kid from the trailer park.\n\nFootsteps. Light, tentative footsteps from behind. He pulled his focus from the ocean to the windows in front of him. The reflection in the window revealed Brooklyn walking slowly into the kitchen, her eyes bleary from too little sleep. Matt was happy to see that Jax wasn't with her. She pulled a bottle of water from the refrigerator.\n\nMatt looked over his shoulder as she approached.\n\n\"It's beautiful isn't it?\" she asked.\n\n\"What's that?\" Matt was thinking Brooklyn looked beautiful, but he knew she was talking about something else.\n\n\"The ocean. Duh.\"\n\n\"Yes, it is,\" he replied. \"I never get tired of it, even though I've lived in San Diego for five years.\"\n\n\"Not a native Californian?\"\n\n\"Nope. Not even close. I grew up in Montana.\"\n\n\"Really? That's where my parents are right now.\"\n\nMatt nodded. \"I remember you mentioned that earlier. Small world.\"\n\nShe gave him a wide smile. \"Sure is.\"\n\nMatt took another sip of his coffee and moved away from the windows, finding a seat on the couch. Brooklyn joined him, but she sat on the loveseat. They weren't close to one another and that was fine, neither of them were looking for anything romantic to happen. Matt and Brooklyn enjoyed the silence and the view together for several minutes.\n\n\"What happens in the morning?\" she asked.\n\n\"Well, we're going to call our attorney first. Then we're going to call San Diego's finest and you're going to give them your statement.\"\n\nHer face looked worried. \"Am I in trouble?\"\n\n\"No.\" Matt almost laughed. \"Not at all. You're the proverbial victim in this situation.\"\n\n\"Oh.\" She laughed. \"I guess you're right. What happens after I give my statement?\"\n\n\"I'm not sure,\" Matt replied carefully. \"I guess that's up to you.\"\n\n\"Can I go home?\"\n\n\"Of course. Jake and I will take you home as soon as you're done.\"\n\nBrooklyn kept her eyes on him. \"You don't think that's a good idea, do you?\"\n\n\"Do you?\" Matt countered.\n\n\"I guess not. I mean those guys could come back at any time.\"\n\n\"Yes, they could. And they will. I spoke to one of them last night and they've already been paid to abduct you.\"\n\n\"Why?\" she asked fearfully. \"I'm nobody.\"\n\n\"I think it has something to do with your ad campaign for your Mexican client. The guys last night were South American, probably Mexican.\"\n\nBrooklyn looked down at her hands and sighed softly and then took a long drink of water before looking back at Matt. \"I knew I should have refused the job, but they paid so well.\" She laughed. \"Three times the normal rate. That was the first clue. The second clue? The very insistent offer for an all-expense-paid vacation in Mexico after the campaign. Cabo San Lucas.\"\n\nMatt finished his coffee. \"Cup of coffee?\" Brook shook her head and he went to refill his cup. \"Honestly, I don't think it would have mattered if you took the job or not,\" Matt said when he sat down again. \"The people who want you just used the campaign as an excuse. They wanted you to come to Mexico willingly.\" Matt leaned forward and met Brook's eyes. \"Willing victims are the best.\"\n\n\"I don't understand.\"\n\nMatt shook his head. \"Unfortunately, I do understand and I really wish I didn't.\"\n\nBrooklyn still looked confused, so Matt explained further.\n\n\"You arrive in Cabo San Lucas. They pick you up at the airport, probably in a limousine, so you don't think anything's wrong when they take your luggage. Once you're at the estate, your passport disappears so you can't leave the country. Suddenly, you find yourself in a foreign country, no passport, you don't speak the language, and you're helpless. Your captors throw in some alcohol and drugs and before long, you're another victim of a human trafficking organization.\"\n\nBrooklyn's face grew pale. \"That's horrible.\"\n\nMatt nodded. \"The team at the airport was their second option. It's a risky option, but I think it's the only one they had left.\"\n\n\"Risky? How's it risky?\" Brooklyn asked.\n\n\"Well, it's obvious San Diego, or Arizona for that matter, isn't their normal territory. If it were, they'd have brought a lot more men last night. Jake and I would have been unable to help you if we'd been facing more than four men. You'd have been taken, Brook. By now, you'd probably be deep inside Mexico.\" Matt shrugged. \"So that means they're not local. When a team like the one we encountered last night starts operating in someone else's territory, it raises eyebrows. If more than one team starts operating in another territory, it starts to make people nervous. That's when people start to disappear, other people get upset, and turf wars begin.\"\n\nBrooklyn stared at Matt for several seconds, her face pale.\n\nMatt sipped more of the coffee, before continuing. \"No. Most cartel members will tolerate a small team on a specific job. They don't tolerate multiple teams from somewhere else hanging out in their territory. That's bad for business, and it's really bad security.\"\n\n\"You seem to know a lot about this stuff.\"\n\nMatt's reply was deliberately vague. \"Yeah, well, in our business, you learn a few things.\"\n\nRookie returned to the apartment fifteen minutes later. He introduced himself to Brooklyn, no indication on his face that he knew her profession, then he excused himself.\n\n\"Get some sleep, dude,\" Matt ordered as he walked out of the room.\n\n\"Sure thing, boss.\"\n\nBrooklyn looked at Matt. \"You're in charge?\"\n\n\"Not really,\" he replied. \"Jake and I are partners.\"\n\n\"Yeah, I get that, but he followed your lead last night.\"\n\n\"No, he didn't. Jake and I operate as a team. We both know what the other is thinking most of the time. Last night, he was my backup. I've been his backup plenty of times. We're partners.\"\n\n\"Ahh. I see.\" She smiled at Matt. \"Kind of testy, aren't you?\"\n\n\"No. It's just that I didn't want you to get the impression I'm in charge. I'm not. Now, in Rookie's case, he recently joined our organization, so Jake and I are his employers.\"\n\n\"He's kind of frightening,\" she said softly.\n\nMatt laughed. \"He can be, certainly. But like most people, once you get to know him, he's a great guy.\"\n\nMatt and Brooklyn talked until the sun came up. It was a beautiful morning. They spent a lot of time just watching the beach come to life. Their conversation covered a lot of territory, but nothing important and nothing personal. Brooklyn didn't mention what she did for a living. It wasn't important.\n\nJake finally appeared and smiled widely at Matt and Brooklyn. \"Don't get attached to him, Brook,\" he whispered loudly. \"He'll break your heart.\"\n\n\"That's not true,\" Matt said.\n\nBrooklyn laughed at their back and forth. \"Don't worry, Jake. My heart's already spoken for.\"\n\n\"Where is he?\" Matt asked.\n\n\"He's a Marine. He's serving in Afghanistan right now, but he should be home in a few months. I can't wait. I miss him.\"\n\nJake sensed the mood getting heavy and his sarcasm went into action. \"Wow. I knew your critical thinking skills were pretty weak, Brook, but I didn't realize they were non-existent.\"\n\nBrooklyn turned suddenly on the couch, anger flushing her cheeks. \"What the fuck is that supposed to mean?\"\n\n\"Are you kidding me?\" Jake feigned surprise. \"You're dating a Marine. You clearly have a sickness or mental illness. I'm sure there's a medication you can take that will make you all better. Hopefully, it's not a permanent condition.\"\n\nAs Jake went through his spiel, Brooklyn's anger dissipated. By the time he was finished, she was glaring at him playfully.\n\n\"You, sir, are a jerk,\" she said.\n\nJake shook his head. \"No. I'm an Army Ranger. Former Army Ranger anyway, and I am smarter and better looking than any Marine alive.\"\n\n\"I'll bet you recite that into the mirror every morning,\" Brooklyn shot back.\n\n\"And before I go to bed each night,\" Jake countered.\n\nBrooklyn wasn't finished. She walked over to Jake, hands on her hips. \"Brainwashed. Typical of an Army puke.\"\n\n\"Unlike the Marine Corps, the Army issues you brains and insists you wash them regularly.\"\n\nIt was getting serious between these two. Matt's money was on Brooklyn because Jake had never fought a smile like hers before. It was deadly.\n\n\"Ding, Ding!\" Matt said loudly. \"Neutral corners, you two.\"\n\nThey both stopped talking but continued to stare at each other. Finally, Jake crossed his eyes and stuck out his tongue at her. Not to be outdone, Brooklyn made her own face. It was definitely cuter than Jake's.\n\nAhhh, bonding moments. Aren't they sweet? Matt thought.\n\nJake finally turned to Matt. \"I like her.\"\n\n\"Good to know.\" Matt's voice was dry as the desert.\n\n\"You're OK, too, for an Army puke,\" Brooklyn replied with a smile on her face.\n\nMatt decided to leave them alone for a moment to call his attorney. He agreed to meet them at the condo. Thirty minutes later, he arrived and indicated he'd stay while the police took statements from everyone. Matt made the introductions, and then called his contact at the San Diego police department. His contact was less than thrilled that Matt had waited so long to contact him.\n\nThe police arrived forty-five minutes later: two patrolmen and a detective. Jake and Matt were finished quickly because there wasn't much to say. The guys they'd taken out hadn't been seen since the incident at the airport and they definitely weren't pressing charges against Matt and Jake. Aside from Matt's suspicions, there wasn't anything to indicate an ongoing threat to Brooklyn Chase.",
        "The detective took a while with Brooklyn. He was a total creep and he was more interested in getting a date with Brooklyn than taking her statement. Matt's attorney had to step in a few times to sternly remind him why he was there in the first place. The detective tried to intimidate everyone, he puffed up his chest, and implied Matt and Jake were in a lot of trouble. Their attorney stopped him cold.\n\nTruthfully, their attorney verbally beat the shit out of him. Everyone was impressed.\n\nBy the time Matt's attorney was finished with the detective, he looked as if he were about to wet his pants, or cry, or both. The two patrolmen exchanged covert smiles. Apparently the detective wasn't a popular fellow. A few minutes later, they left the condo, and security called Matt when they left the premises altogether.\n\nEveryone gathered in the living room. Brooklyn sighed and looked over at Matt and Jake. \"What happens next?\"\n\n***\n\n\"What a fucking asshole!\" the detective muttered as he left the building. He walked towards his car, the patrolmen in tow. \"Fuck, she was hot. She looked familiar, right?\"\n\nThe detective wouldn't shut up about her. \"Marc,\" the lead patrolman said tiredly. \"Enough.\"\n\n\"What? A man can't appreciate a beautiful woman?\"\n\n\"Detective.\" The patrolman reverted to rank. \"We're leaving now. We'll file our report when we get back to the station. As far as we're concerned, we're done here.\"\n\n\"Whatever.\" The detective slid into his unmarked car. \"Fuckin' assholes,\" he muttered under his breath.\n\nDetective Marc Davidson turned on the car and switched the air conditioning on full blast. He sat back, letting the cold air wash over his face.\n\nSan Diego in the summer time. God, I love this fucking place.\n\nMarc was a native Californian who'd grown up in Orange County. He loved Southern California and he knew he'd stay there the rest of his life. It had to be the most beautiful piece of real estate God ever put together. San Diego was the best part of Southern California. It didn't have all the problems of LA and Orange County, but it had all the benefits. Marc loved the beaches. The nightlife was fucking awesome. The women. Well, the women were top of the line.\n\nFirst Class Ass. Like that little honey upstairs. Whew, she is smoking hot.\n\nSan Diego was awesome, but it was also expensive, especially the First Class Ass. Even on a detective's salary, Marc was struggling to make ends meet. That he tried to live a champagne lifestyle on a beer budget was his biggest problem. Unfortunately, he didn't see it that way. As far as Marc was concerned, the city should pay him more because of all the good he did for society. He deserved more.\n\nFuckin' right I do. I solve murders for God's sake.\n\nMarc had decided long ago, if the city of San Diego wouldn't cough up more money, he'd go into business for himself. He passed on information to certain clients and they paid him handsomely for it. It worked perfectly.\n\nSo a few snitches die or a material witness disappears. So what? It's their own fucking fault for getting mixed up with bad people.\n\nMarc checked his note pad. The little honey upstairs had given him her phone number. Now all he had to do was come up with a bullshit excuse to call her and invite her to lunch.\n\n\"Sorry, ma'am,\" he mimicked out loud, \"I just need to clear up a few details. Did you say you prefer thong underwear or no underwear? Exactly how do I get you naked? What position do I get to fuck you in first?\"\n\nMarc laughed coarsely at his own jokes and shook his head slightly. She looked familiar to Marc, but he couldn't place her. The name she'd given him didn't ring any bells, but he'd damn sure check her out more thoroughly when he got back to the station. The car had cooled down and he slid the shifter into reverse, when his phone rang. He recognized the ringtone and slammed the shifter back into park. \"Yeah.\"\n\n\"We need information,\" the voice said quietly.\n\n\"That's what you hired me for. What do you need?\"\n\nThe well-dressed man clenched his fist. Arrogant fucking gringo! \"We need you to locate a woman.\" He paused. \"Her name is Brooklyn Chase.\"\n\nMarc couldn't believe his ears. \"What was her name again?\" No way I heard this dude right. That's her! Holy Shit! That's the woman upstairs! She's Brooklyn Chase!\n\n\"Brooklyn Chase,\" the voice replied slowly.\n\n\"I see,\" Marc said. \"How much?\"\n\n\"Your usual fee,\" the voice said curtly.\n\n\"Uhh ... Hey, listen, man, I appreciate your business and all, but when an actress goes missing there's always shitloads of attention. Brooklyn Chase is famous. If she suddenly disappears, there will be a lot of questions. Know what I mean, amigo?\"\n\nThe response was immediate. \"You know this woman?\"\n\nMarc laughed. \"Hell, yes. Every red-blooded American male has seen her work. She's fucking incredible.\" And I know exactly where she is, right this second.\n\n\"Find her quickly and I will double your normal fee.\"\n\n\"Y'know, friend, I'm thinking you're going to triple my normal fee,\" Marc said carelessly.\n\nSilence broke into the phone call. Seconds passed. Then minutes. Finally the voice spoke. \"Let me ask you something, Marc Davidson, who lives at 2416 Avenue B, San Diego, California...\" The voice continued. \"When a detective goes missing, how many questions are asked?\"\n\nMarc's heartbeat spiked and sweat broke out instantly, all over his body. He loosened his tie and took a deep, silent breath. A few seconds later, when he could trust himself to speak normally, he replied. \"Double my normal fee is fine.\"\n\n\"Good.\" The voice paused. \"Do not attempt to negotiate again. You are not that important to us.\"\n\n\"Okay.\" It was all Marc could manage.\n\n\"Call me when you have found her.\"\n\n\"Wait!\" Marc blurted out. He worried the voice would terminate the call. \"I know where she is, right now!\"\n\n\"Give me the address.\"\n\nMarc recited it quickly, then repeated it. This phone call needed to end. Marc already had a plan for the money this call would generate. He had his eye on a brand new Corvette. The fucking thing was awesome. Truthfully, he really wanted the new Porsche or Acura's new sports car, but those cars would draw too much attention. Cops couldn't afford shit like that, no matter how much overtime they worked.\n\n\"Stay by your phone,\" the voice said, terminating the phone call.\n\nMarc realized he was sweating profusely. He'd sweated through his t-shirt and dress shirt. Both were sticking to his chest. He turned up the air conditioning. A few deep breaths later and he started to feel in control again.\n\nI could use some meth though. That shit's awesome.\n\nAn idea, a plan for the rest of his day, started to percolate in his head. The more it evolved, the more he liked it. Finally, he got the car moving and headed toward his dealer's house.\n\nI'll get a little meth, then swing by and pick up my sexy Mexican honey. Fuckin A'. Time to party!\n\nMarc called into the station and let them know he was going to be working leads all day. He'd have his radio with him, but he may need to leave it in the car when he talked with his confidential informants. A complete fabrication, but it kept him from having to take personal time.\n\nI can't wait to see Maria.\n\nMaria Gonzalez was a young\u2014probably too young\u2014extremely attractive, illegal immigrant from Central America. Marc had met her when he was working a case. He got her out of an ugly sweatshop that was run by some dangerous people. Once Maria was safe, Marc put her up in a cheap apartment and convinced her he was working on getting her a green card. It was bullshit, but as long as Maria thought he was going to make her a citizen, she didn't mind fucking his brains out whenever he wanted.\n\nMaria would learn the truth eventually, or simply give up on him, but when that happened he'd notify Immigration. Maria would cease to be a problem. If she looked like she was going to cause a shitstorm, he'd drug her and drive her across the border himself.\n\nSimple. She goes away and I find another one. Life is fucking good!\n\n***\n\nEveryone had gathered in the living room.\n\n\"What happens next depends on you, Brook,\" Matt's attorney explained. \"Right now, the situation at the airport is done. The police probably won't follow up on it because the men have disappeared and no one is pressing charges.\" He shrugged. \"As far as they're concerned, you're safe and the criminals are gone. Case closed.\"\n\n\"Oh.\" She looked at Matt. \"What do you think?\"\n\n\"I think those men are going to keep coming after you,\" he said. \"The man I spoke to said he'd already been paid to deliver you. Unless you can go stay with your parents in Montana, or you have friends who can protect you, the chances are good those men will try again.\"\n\nJake and Rookie nodded seriously at her. Tears welled up in Brooklyn's eyes and she buried her face in her hands, her shoulders shaking. The men in the room waited patiently, and uneasily. The attorney was married, but Matt, Jake, and Rookie were all single. Crying women scared them.\n\nMatt retrieved a box of tissues and put them on the table in front of her. She grabbed several and wiped her eyes.\n\n\"Thank you,\" Brooklyn finally said after the tears abated. \"What do you think I should do?\"\n\nSuddenly all eyes turned to Matt. Rookie and Jake nodded at him. Matt looked over at their attorney. He nodded as well.\n\n\"Brook, why don't you let us help you?\"\n\n\"I can pay you,\" she said, then looked around the luxurious condo. \"Well, I have some money saved anyway.\"\n\n\"Don't worry about paying us. Trust me. You can't afford us.\" Matt moved to the end of the couch. \"We can help you and we won't charge you a dime.\"\n\n\"Why?\" she asked.\n\nA good question. As a rule, they didn't do charity cases. They sponsored a little league baseball team and co-sponsored a girls' soccer team, but that was the extent of their charity. The cases Matt and Jake took for their clients were always risky, so they charged their clients appropriately.\n\n\"Brooklyn, we haven't known each other long, but Jake, Rookie, and I think you're a good person. You're just stuck in a really bad, really dangerous situation.\" Matt motioned to the guys in the room. \"We can't walk away now. It wouldn't set right with any of us.\"\n\nBrooklyn looked at Matt for a moment. \"Brooklyn?\" she asked softly. \"You called me Brooklyn. Not Brook, but Brooklyn.\"\n\nDammit. Way to go. It's her fucking smile, dammit. It's disconcerting.\n\n\"You know who I am.\" She paused and then continued quietly. \"You know what I do, don't you?\"\n\nTension slid into the room, quietly building. \"Yes,\" Matt replied softly. The truth being the best option in this kind of situation.\n\n\"How long have you known?\"\n\n\"I recognized you in Phoenix,\" Matt replied evenly, then motioned around the room. \"Jake recognized you at the airport. Rookie recognized you when he saw you this morning.\"\n\n\"I don't know what any of you are talking about, if it helps,\" the attorney offered.\n\nEveryone ignored him. The tension continued to build in the room.\n\n\"Why didn't you say anything?\"\n\nMatt knew his answer was critical. Brooklyn's actions, potentially her life, would be influenced by his answer.\n\n\"Brooklyn ...\" he began slowly, \"it simply wasn't a relevant factor for me or Jake or Rookie. We would have assisted any woman in your situation.\"\n\n\"I see.\"\n\nMatt sensed her doubt and leaned forward on the couch. \"We deal with a wide variety of people in our business.\"\n\nJake joined the conversation. \"That's an understatement.\"\n\nAlways helpful, that's Jake.\n\nMatt ignored him. \"We stopped caring about what people did for a living a long time ago. In your case, what you do for a living is legal, it's highly regulated, and it's extremely popular. People who consume your product, do so willingly. Adult films are basically mainstream nowadays and several adult actresses have transitioned to mainstream films.\n\n\"Adult films are what you do for a living, but they don't define you. It's not who you are as a person. We didn't think it was important to disclose we knew you were an adult actress. In fact, it may have hampered our ability to protect you. That knowledge could also have driven you away from us, at the exact moment you needed our help.\" Matt sat back. \"That's our explanation for not saying something sooner.\"\n\n\"I accept it. Thank you.\" Brooklyn looked around the room. \"I'd appreciate your help.\"\n\nThe tension dissipated and everyone responded at the same time.\n\n\"Sure thing.\"\n\n\"Absolutely.\"\n\n\"Consider it done.\"\n\n\"I'll contact my firm and let them know ... I'm working with a new client.\"\n\nAs soon as the words were out of everyone's mouth, they started laughing. Once the laughter died down, Matt again took the lead. \"OK. You asked what's next? Here's what I'm thinking.\" He paused. \"You may be here for a little while and I doubt the gym bag you brought has enough stuff. Am I right?\"\n\n\"Yes. Definitely.\"\n\n\"I thought so.\" Matt turned to Rookie. \"Are you OK with going to her place and getting her some more stuff?\"\n\n\"Sure, boss\u2014\"\n\nBrooklyn interrupted. \"Wait! Why don't I go myself?\"\n\nMatt shook his head as Jake immediately said, \"It's too dangerous. It's safer if you stay here for the time being. We don't know enough about the situation to risk your leaving at this point.\"\n\n\"OK. It's just ... just that... well, it's awkward having a stranger rifle through my stuff.\"\n\nRookie nodded. \"Miss Chase, I understand completely. You can trust me to be discreet, but if it really bothers you, we have a few female employees who can escort me.\"\n\n\"Good idea, Rookie,\" Matt added. \"We need a female over here, anyway. Why don't you stop by the office and pick up Jackie? Both of you can go get Brooklyn's stuff, then come back here.\"\n\nRookie stood up. \"I'm on it.\"\n\nOnce Rookie left, Matt turned to Jake.\n\nWith a crooked smile, Jake said, \"Beats the sandbox, doesn't it?\"\n\nMatt agreed. \"Damn straight.\"\n\nJake and Matt hated their time in the Middle East, which they referred to as the 'sandbox.' No matter what job they took, no matter how much of an asshole their client was to them, they always told each other it beat the sandbox.\n\n\"Listen, I'm thinking we use this as our primary location.\"\n\n\"I agree.\" Jake nodded. \"Use the office as the secondary?\"\n\n\"Well, I thought of that, but I think it's too obvious.\"\n\n\"Where then?\"\n\n\"You're going to think ... I'm nuts,\" Matt said slowly.\n\nJake laughed. \"Too late, buddy.\"\n\n\"Yeah, you're probably right. Anyway, I was thinking we could use the boat as our fallback location.\"\n\n\"Boat? What boat?\" Matt looked at Jake steadily for a moment, then comprehension dawned on Jake's face. \"Dude, seriously? First, it's a yacht, not a boat. Second, we don't own it.\"\n\n\"That makes it perfect,\" Matt replied. \"First, it doesn't show up on our corporate records, so no one will connect it to us. Second, no one but you and I know we rented the damn thing. Finally, it's mobile. We can stow our stuff on board and be gone in minutes.\"\n\nJake sighed, shaking his head. \"There goes our security deposit. I agree, though. Good thinking.\"\n\n\"Thanks, man. I'll call Fox and have her equip it.\"\n\n\"Hey, why don't I call Fox? Y'know, just to tell her she can stay on the yacht ... I mean, to keep an eye on it, make sure no one sneaks aboard,\" he added lamely.\n\nLaughter bubbled up from Matt. \"Dude, would you just tell Fox how you feel about her already? Or did you two break-up again?\"\n\nJake's face revealed nothing. \"No idea what you're talking about.\"\n\n\"Uh huh.\"\n\nBill, their attorney, was talking softly to Brooklyn. Jake and Matt joined them. Bill smiled as they approached. \"Guys, I was just telling Miss Chase\u2014\"\n\n\"Please, call me Brooklyn.\"\n\nBill looked at her, nodding. \"I was just telling Brooklyn I'll serve as her attorney.\" Bill handed her his card. \"As of now, I'm representing you. I need you to follow my instructions, OK?\"\n\nShe nodded.\n\n\"First, do not speak to the police again without me being present. I'm completely serious. I haven't met an attorney yet who would say, \"I just wish my client talked more to the police.\"\n\n\"Okay.\"\n\n\"Second, if that creepy detective calls you for any reason, refer him to me. I'm serious. That guy has trouble written all over him.\"\n\nBrooklyn laughed. \"I agree. I can't believe he hit on me in front of everyone.\"\n\n\"I'd be happy to kick his ass for you,\" Jake said, helpful as always.\n\nBill's response shocked the entire room. \"Jake, it's an option, but let's wait and see how things develop.\" Matt's mouth dropped open, and Jake cocked an eyebrow at Bill, who responded with a smile. \"Hey. You'd be surprised how often a simple ass kicking solves problems.\"\n\nMatt raised his hands carefully. \"Whatever you say, Counselor.\"\n\n\"Finally, I'll run a check on the corporation that hired you for your video shoot in Phoenix. It will probably turn out to be nothing, but I'll check it out anyway.\"\n\nBill smiled at Matt and Jake, then walked to the door. Turning, he said, \"Miss Chase, it was a pleasure.\" He looked at Matt and Jake. \"Watch your ass. These guys won't be coming with attorneys and search warrants.\"\n\n\"10-4, good buddy,\" Jake drawled, saluting.\n\nBill shook his head and then left the condo.\n\n\"He's nice,\" Brooklyn said after Bill left.\n\nJake snorted. \"You just don't know him yet.\"\n\n\"What do you mean?\"\n\n\"I mean, he's absolutely lethal in a courtroom, or in a deposition, or in any legal capacity. He was a JAG officer for a few years before leaving the military and then went into private practice as a defense attorney. He's seen it all, done it all, and nothing ruffles his feathers. He's kind of scary, actually.\"\n\nBrooklyn cocked her head at him. \"The indestructible Army Ranger is afraid of someone? Say it ain't so,\" she said.\n\nA second later, Brooklyn and Jake were back at it. Matt's money was still on Brooklyn, but it was touch and go because Jake had gotten used to her smile. Brooklyn was poking Jake's chest with her finger when he walked out the room.\n\n***\n\nThe air conditioning didn't work.\n\nThe hotel room was hot and stifling. Four men in a room designed for two didn't help the air quality one bit.\n\nChico (Head Creepy Dude) sat near the door. The other three men, Chico's team, watched a pornographic movie on the small TV. The movie featured their target and Chico had to admit she was gorgeous and talented. The men traded coarse remarks as they watched Brooklyn Chase perform. When Chico's phone vibrated, he answered it immediately.\n\n\"I have her location.\"\n\n\"Excellent. Thank you,\" Chico breathed quietly.\n\nThe man on the other end of the line read off the address. \"The target has two men guarding her and one old lawyer. I don't know anything about them, but you should be prepared for resistance.\"\n\n\"We are prepared,\" Chico assured him.\n\n\"Good. If you fail this time,,,\" the voice said, trailing off.\n\n\"We will not fail.\"\n\nThe call terminated.\n\nChico put the phone down, cursing fluently at his men, in rapid-fire Spanish. They reluctantly turned the TV off and then shuffled over to their leader. Chico brought up the address on Google Maps and they started planning.\n\n***\n\nFox agreed to equip the boat and stay on it for the next few days. Truthfully, Matt didn't know the difference between a yacht and a boat. At what point does a boat become a yacht? Is that different than a ship?\n\nThe fucking boat\u2014yacht\u2014whatever, was big and luxurious. Fox wasn't going to be disappointed with her assignment. The crew had gotten it ready and were nearby. They weren't staying on the boat, but they were within fifteen minutes of the dock. The boat could be in international waters in thirty minutes.",
        "Fox and Jake had an on-again, off-again relationship. That's why Jake acted weird about calling her. They were perfect for each other and it was obvious to everyone but them. Fox was a tall (6'2\") blonde Viking type, with blue eyes and naturally thick, blonde hair, courtesy of her Scandinavian heritage. She was gorgeous and extremely dangerous. Exactly like Jake.\n\nFox was her nickname; she'd picked it up in the gym. Since the age of six, she had studied a variety of martial arts. Her dad, a former special ops guy, insisted his daughter be able to handle herself. She held a black belt, or equivalent, in several popular martial arts and some Matt had never even heard of. Pick a weapon and it's likely she was already proficient in it. Firearms proficiency came from her dad, and he didn't let his daughter slide one little bit.\n\nFox volunteered her time at a battered women's shelter helping the ladies pick up their lives and teaching them to protect themselves. The shelter, where she taught beginning self-defense, was down the street from the local YMCA. One day, a visiting instructor\u2014also a black belt with several degrees\u2014made a pass at her after she finished teaching a class.\n\nBig mistake. The visiting instructor also gave her the nickname Fox.\n\nMaking a pass at her wasn't the mistake. It happened often enough. Fox was single, so she didn't mind. The instructor's mistake was not taking no for an answer. Fox finally had to shut him down loudly and publicly. Unfortunately for the visiting instructor, once his pride got hurt, he had to make it physical.\n\nClass had just finished and twenty women were filing out of the room when he challenged her to a sparring session.\n\n\"Fine,\" Fox replied quietly, walking to the center of the mat.\n\nThe women noticed the interaction. They stopped leaving, stepped off the mat, and lined the walls.\n\nThe douchebag instructor smiled. \"You don't want to wear pads?\"\n\nFox shook her head. \"I won't need them.\"\n\n\"You're a stone-cold fox, honey. I don't want to hurt your pretty face.\"\n\n\"Are we sparring or not?\"\n\nThe women along the wall giggled and the instructor's face turned red. He glared at Fox for a moment before approaching her. Assuming a relaxed fighting stance, he bounced lightly on the balls of his feet.\n\nTae Kwon Do, Fox told Matt later. Korean in origin, Tae Kwon Do was one of the more popular, highly effective martial arts among martial artists. Flashy high kicks were a hallmark of the sport. The visiting instructor held a black belt and anyone on the receiving end of one of his kicks wouldn't be happy.\n\nFox nodded that she was ready and her opponent flashed into action. Punches, well balanced and quick, were thrown in Fox's direction. The visiting instructor followed them with precisely executed kicks. The kicks were high and flashy.\n\nShe blocked his punches and easily evaded his kicks. Fox moved smoothly, almost like smoke, and nothing landed on her or even came close. She slid to one side and then another as the instructor threw more punches and kicks and punctuated his blows with shouts that at first sounded impressive, but quickly became pathetic. Obviously, he had thought the match would be short.\n\nCalm, poised, and confident, Fox's face was sphinx-like. She let the instructor go through several sequences before she stepped back, breathing easily. Her opponent's eyes narrowed as he moved around the mat keeping a steady distance between himself and Fox.\n\n\"I thought we were sparring,\" he said contemptuously. \"What, you don't have any offense?\"\n\nFinally, he got a reaction from Fox. A big smile. \"I just wanted to give you a chance to show all the ladies your big kicks.\" She paused. \"Clearly, you're over compensating for something.\" She deliberately looked at his crotch.\n\nThe ladies had giggled before; now they laughed out loud.\n\n\"Fuckin' bitch,\" the instructor hissed.\n\nA loud shout preceded his attack.\n\nThe douchebag launched himself forward, as did Fox. His right leg blurred upward and Fox slid fluidly to that side of his body. As his leg came up kicking at a target that was already gone, Fox's arm snapped out and her hand connected solidly with his throat. She pulled the blow slightly so it wouldn't do any permanent damage.\n\nHer opponent's forward momentum continued and Fox's strike moved in the opposite direction. The effect was predictable. The douchebag's eyes bulged when her hand impacted his throat and his legs flew out from under him as Fox's high strike robbed him of his balance and momentum. All the air was driven from his lungs when he hit the mat a second later, where he laid holding his throat and coughing.\n\nFox stepped back. She received a round of applause from the ladies lining the wall. She smiled at them briefly before walking into the locker room, leaving the douchebag still coughing and gasping for breath on the mat. The self-defense class had since doubled in size and all the ladies now called her Fox.\n\nThe nickname had stuck.\n\nMatt had stood quietly along the opposite wall watching his prospective employee in action. Fox had been recommended to him as a potential employee and Matt had gone to the YMCA to evaluate her, intending to speak with her after the class was finished. The visiting instructor unwittingly arranged the best possible situation for Matt to evaluate her. Matt had laughed along with the ladies as the douchebag got his ass kicked. It could have been a lot worse.\n\nFox drove a truck. Big surprise. Matt stood next to it as she exited the YMCA. When she walked up and saw him, she wasn't the least bit surprised.\n\n\"What?\" she asked. \"Why are you following me?\"\n\nMatt smiled. \"You saw me?\"\n\n\"Yes.\"\n\nMatt liked that she didn't say where or how she had seen him, just that she was aware of his surveillance. She has potential. \"You could have killed him. Throat strikes are always a risk.\"\n\nFox looked at him steadily before responding. \"That douchebag threw several strikes at my throat and several strikes at my face that were way too hard for a sparring session. Any one of them could have done serious, possibly permanent, damage.\" She shrugged. \"He had it coming.\"\n\nMatt studied her. There was obviously more to it.\n\n\"Besides,\" Fox continued after a moment, \"I wasn't the first woman he hit on in there. A lot of those women have been mistreated by jerks just like him. He deserved a beating far worse than I gave him.\"\n\nMatt had heard enough. \"I'd like to offer you a job. I think you're perfect for the position we have open.\"\n\nA quirky smile flashed on Fox's face. \"Is that right?\"\n\n\"Yes.\" Matt very slowly held out a business card.\n\nFox kept her eyes on him for a moment before taking his card and looking at it. \"Corporate Investigations and Security,\" she read aloud.\n\n\"That's us. Are you available to come down to our facility tomorrow? I'd like you to meet with our team and see if you're a fit.\"\n\n\"What time?\"\n\n\"We're open 24/7, but why don't you stop by at 8:00? Everyone should be there by then and we can talk.\" Matt paused. \"We won't waste your time, and I promise you'll like what we have to offer.\"\n\nFox showed up at 7:30.\n\nThe rest was history. She'd been with Matt and Jake for the last several years. She and Jake had become an item shortly after she joined the firm. Although Fox was naturally quiet, she had loosened up over the years. Now she communicated in full, complete sentences and even joked with everyone.\n\nFox called Matt. Everything was ready at the boat. She'd even brought some extra equipment and miscellaneous items and offered to stay on the boat as long as necessary.\n\nRookie arrived with Jackie about two hours later. Jackie was ex-military security police who'd joined the firm two years ago. She was a petite, Latin female and gorgeous, in a girl-next-door kind of way. She had an investigative background and probably the keenest mind Matt had ever known. The fact that Matt was seriously attracted to her, was something he kept to himself.\n\nNo one, absolutely no one, considered Jackie a threat, which was her biggest advantage. Fox and Jake had helped expand her skill set and now she was one of their most effective employees. An artist with any kind of knife, her other weapon of choice was the collapsible baton. Jackie was so precise with the baton she could write her name in bruises and welts on anyone stupid enough to attack her.\n\nMatt tore his eyes away from Jackie, cursing under his breath. Jackie occupied his thoughts way too much and it bothered him.\n\nYou're her employer. Idiot!\n\nJackie and Brooklyn clicked immediately. Instant BFFs. Jackie confided to Brooklyn that she had made Rookie wait outside while she packed her stuff. That earned her a big hug from Brooklyn. Jackie even included a foldable jewelry pouch and a long, hangable pouch containing several different pairs of shoes.\n\nThey were trying to protect Brooklyn from a team of South American bad guys and Jackie packs high heels?\n\n\"You are awesome!\" Brooklyn squeaked excitedly as she hugged Jackie.\n\nJackie winked at Matt. \"Hey, a girl's gotta have shoes.\"\n\nRookie looked at Matt, who shrugged. \"Dude, don't look at me. They might as well be speaking Russian.\"\n\nRookie didn't get the joke. \"No. I'd recognize it if they were speaking Russian,\" Rookie said. \"I'm working on that language now.\"\n\nJackie and Brooklyn rolled their eyes and then carried Brooklyn's stuff into the master bedroom. Jackie whispered something to Brooklyn as they walked down the hall, both breaking out in nervous giggles before disappearing into the bedroom.\n\nRookie still didn't get it, so he sighed loudly. \"I'm going to check in with security, then check the perimeter.\"\n\n\"Sounds good,\" Matt said, sitting on the couch and looking out at the water.\n\nWhat's next? Matt asked himself.\n\nJake's sleeping.\n\nRookie's checking the perimeter.\n\nFox is lounging on the rented boat\u2014sorry\u2014yacht.\n\nJackie is helping Brooklyn.\n\nBrooklyn is as safe as we can get her.\n\nBill's looking into the Mexican connection.\n\nLunch, Matt finally decided. Lunch is what's next.\n\nIt was a little known fact that Matt was a whiz in the kitchen. OK, maybe not a whiz, but pretty damn good. He'd learned to cook from his mom, who basically raised him by herself. Anytime he got the chance, he took formal cooking classes. Cooking relaxed him.\n\nI need all the relaxation possible.\n\nSummer had arrived in San Diego and the weather was perfect. High 70s, low 80s, no humidity, light breeze. Perfect. The beaches were full and the water was great. Summertime on a Southern California beach was pretty close to paradise.\n\nMatt hoped they could clear up this issue with Brooklyn soon so his team could get some down time. The yacht idea is toast anyway.\n\nA one-time client had a house right on the beach. Matt and Jake had a standing offer to use it. Since it was likely they weren't going to use the yacht, a BBQ right on the beach sounded like a great substitute. A family BBQ, sort of. A family BBQ with Jackie.\n\nFood, focus on the food, Matt.\n\nWhenever Matt thought of the beach, he always thought of the families he saw there having fun and making memories.\n\nFamily.\n\nFamily had been on his mind a lot lately. His last serious relationship had been over a year ago. He'd dated a little since, but nothing serious. Everyone at his firm had someone they thought was \"perfect\" for him. Everyone except Fox. Matt liked Fox.\n\nMatt was still searching for Mrs. Right. So far he'd only found Mrs. Convenient and her sister Mrs. Hot, But Temporary.\n\nFood. Summertime.\n\nThe rule for food in the summertime was simple. The weather is hot, the food should be cold or chilled, and light. The food had to be light.\n\nBingo, baby! A Caprese Salad.\n\nChilled Pepper Pasta (Matt's own dish) with basil, arugula, cilantro, and prosciutto. A little Parmigiano-Reggiano cheese to top it off.\n\nFinally, some flan. Matt didn't make the flan. It was store bought, but it was chilled and tasty. Matt stored everything in the refrigerator for later and poured a glass of iced tea.\n\nWhat I really want is some bourbon on ice or a nice microbrew.\n\nMatt checked his watch, then quickly picked up his phone to recheck the time.\n\nThirty minutes? Rookie should've been back by now.\n\nJax, Brooklyn's boxer, started growling low and hard from his spot in the corner. The unmistakable sound of gunfire erupted, barely a second later, in the hallway.\n\nShit!\n\n***\n\n\"Chico, what are we waiting for?\" the big man asked.\n\n\"Patience,\" Chico replied. \"We need to know where the guards are before we move in.\"\n\nThe big man groaned. \"There are only two guards, Chico.\"\n\nChico held up his hand, then pointed at the building. The third guard, the one roaming the property, came around the corner and lit up a cigarette. The big man patted Chico on the shoulder and nodded his respect to his team leader.\n\nChico turned to the men in the SUV. All were armed with pistols. Rifles were too unwieldy and attracted too much attention in the U.S. Each one of his men nodded back at him, serious and ready expressions on their face. They all wanted to fulfill this contract and get paid. More than money however, each one wanted revenge on the men who had embarrassed them at the airport.\n\n\"Now we go.\"\n\nThe Cadillac SUV moved down the block and approached the gate slowly. The guard held out his hand and Chico stopped the SUV. He lowered the window and waited as the guard came over to the vehicle.\n\n\"Sir. This is a private facili\u2014\" The guard's head snapped back.\n\nThe bullet, fired from a suppressed pistol, made a small hole when it entered the guard's forehead. It made a much larger hole when it exited. The guard was dead before his body hit the ground. The big man smiled and lowered his pistol. It was a good shot.\n\nChico quickly pulled the SUV through the gate and into the garage. He turned to his least experienced man who had a large purple bruise on one side of his face. \"You. Take the third guard, near the corner of the building. Then come back here and guard this vehicle.\"\n\nChico and his two remaining men exited the vehicle.\n\nThey entered the building through a side entrance and made their way to the lobby. The big man was in the lead, Chico right behind him. The third team member trailed a few feet behind Chico, dividing his attention by constantly checking behind them. Chico's team moved fast. They had little time and it was a big building.\n\nThe big man slowed as he came to a corner. He glanced back at Chico for a second before stepping quickly around the corner. He started shooting immediately at the guard behind the counter. His aim was poor. It took several shots to hit the guard and he was only able to hit him in the shoulder. The guard was down, but not dead.\n\nChico moved around the corner, focusing on the security counter and backing up his lead man. The security guard was down, but Chico heard him speaking quickly and calmly from his position. He was calling for back up or the police or both. Now they had even less time.\n\nThe big man stopped a few feet away from the security desk and motioned to Chico with his head. He would go left, Chico right, then they would finish the security guard. Chico silently mouthed to the big man. Uno ...Dos ...\n\nGunshot. The unsuppressed report of a gunshot exploded through the lobby. Chico and the big man jerked in surprise. The sound of a body falling on the marble tile echoed through the lobby.\n\nChico turned to see his third man slumped on the ground, blood seeping from the hole in his forehead. Chico had just lost a man and he hadn't even seen the shooter who killed him. A bad feeling started to grow within him.\n\nThe big man hissed and pointed to a side door that was slowly closing. Whoever the gunman was, he'd just disappeared through it. Chico nodded at the security desk. The big man didn't wait this time. He jumped behind the counter and opened fire. A few seconds later, Chico led them through the same door the gunman had used.\n\nFear. It spread slowly through Chico as he moved quickly up the stairs behind the big man. Chico was down to two men and one of them was still guarding their escape vehicle. Chico and the big man had to finish this quickly and leave.\n\nFinish the team upstairs and leave with the girl. Two objectives. Simple.\n\nThey reached the tenth floor and the big man was seriously winded. He was also limping badly. His knee was swollen and obviously still painful. He stopped outside the door and took several deep breaths while Chico waited for his team member to recover. His face was impassive, but Chico was enraged.\n\nThis is our last job together, Chico thought contemptuously. I may kill him myself when we get back to Mexico.\n\nA minute later, the big man grabbed the door handle, glancing back at his team leader before jerking the door open. Chico followed him through the door, keeping right behind him. Gunshots greeted them after only a few steps.\n\nThree shots. Two quick shots, followed by a third barely a second later. They were measured and precise, all the bullets meant for the big man. Chico threw himself to the side as the big man's body fell backward towards him, almost hitting him as it fell. Chico lost his balance and fell hard on the carpet, losing his gun in the fall.\n\nChico's eyes found the former cartel enforcer. The big man had two holes in his chest and one in his forehead. Dead. Each hole a killing shot.\n\nA hard voice pierced the quiet in the hallway. \"Move, and I'll end you.\"\n\nChico looked up into the hard eyes of the gunman who'd killed half his team.\n\nDeath. It was reflected in the man's eyes. Chico knew the gunman hadn't made an idle threat.\n\nSlowly, he put his hands out. The gunman watched him for a second longer before holstering his weapon, then slid a plastic zip tie around his wrists, securing them tightly.\n\nThe gunman didn't waste a single movement and didn't speak another word. He simply jerked Chico to his feet, frisked him thoroughly, and then pushed him down the hallway. He knocked a pattern on the door.\n\n\"Friendly. Requesting entrance with a secured package.\"\n\nA second later the door swung open. Rookie and Chico walked into the large condo. It was full of people with guns. Chico counted three people with guns pointed at him.\n\nBitterly, Chico realized his team would have failed to take the girl with this many people protecting her. He had only four men on his team. He'd assumed there would only be two guys watching her. Two guys and an old lawyer. That's what the police contact had relayed.\n\nBad Intel. Worse assumptions.\n\nThose were the two reasons he failed today. It cost him and would likely result in his death. He sighed quietly.\n\nI will die well.\n\n***\n\nMatt drew his weapon.\n\nThirty minutes. Rookie should have checked in already.\n\n\"Jake, Jackie,\" Matt called out. \"Contact, front!\"\n\nBarely a second later, Jackie exited the master bedroom, armed and ready, and stayed in front of Brooklyn's door. Matt motioned for her to remain stationary.\n\nJake came out of his room a split second behind Jackie wearing cargo shorts and nothing else. His hair was wet and Matt guessed he'd just finished showering. Jake was ready though, he had his 1911, .45 caliber firearm, in the ready position. Matt would have bet serious money that Jake had several extra clips stashed in his pockets.\n\nMatt was sure the gunshots he'd heard earlier were from Rookie's 9mm. Jake and Matt carried .45 caliber 1911s. Rookie carried a Sig P226, 9mm. A smaller round, it sounded distinctly different than a 1911. Jake and Matt never objected to him carrying the Sig 9mm, weapons were a personal choice.",
        "Jake took a spot close to his bedroom door while Matt remained in the kitchen. Jackie moved to the end of the short hallway so she could see the front door, while still keeping Brooklyn's door at her back.\n\nThey waited.\n\nTime was on their side. Waiting still wasn't easy.\n\nSeveral long seconds later, a knock at the door. Rookie's voice carried through the door. \"Friendly. Requesting entrance with a secured package.\"\n\nJake looked back at Matt, who nodded at him. Silently, everyone breathed a sigh of relief. If Rookie were under duress, he would have used another phrase. Jake opened the door, then stepped back quickly. Rookie pushed his captive into the room. Matt watched with satisfaction, as the team leader he'd spoken to at the airport realized he would have failed to take Brooklyn.\n\nUnprepared and ill-equipped.\n\nIt happened to everyone at least once and it royally sucked. Rookie pushed the guy to his knees, keeping him covered, and looked at Matt and Jake. \"We should be clear,\" Rookie said. \"This guy and his team came up in a single SUV. I saw them approach but was too far away to engage them at the gate. I didn't see any other vehicles or personnel. By the time I was in position, one of their guys had already taken out the roving guard.\"\n\n\"The smoker?\" Matt asked.\n\n\"Yep.\" Rookie snorted. \"They took him out just after he lit up.\"\n\nNo one had liked the smoker. Matt and Jake had pointedly asked the security firm to assign him to another building, but they had refused.\n\n\"I eliminated the shooter who took out the roving guard and tried to intercept the rest of them in the lobby.\" Rookie winced. \"I was too late. They'd already shot Mike at the desk.\"\n\nEveryone swore silently. Mike was good people, a single dad with a little girl at home. Matt made a mental note to ask his attorney to look into her situation.\n\nRookie continued. \"I got one of their guys in the lobby before I made it up here.\" He smiled viciously. \"The cartel enforcer was laid to rest in the hallway.\" He motioned at Chico. \"I bagged this fucker without a shot. Dumbass was following too close to the big guy. He had to throw himself out of the way or get crushed when the big guy fell. Lost his gun in the fall.\"\n\n\"You didn't see anyone else?\" Jake asked.\n\n\"No. As far I could tell, they were alone. One team.\"\n\nJake looked at Matt. \"Extract to the boat?\"\n\nMatt weighed the options and looked at their captive. \"Amigo, you have two choices. You can come with us, cooperate, and eventually we'll let you go.\" Matt paused, then added, \"Unharmed.\"\n\n\"My second choice?\" Chico asked.\n\n\"Your second choice is we drug you, then dump you in the ocean.\"\n\nMatt wasn't bluffing. Not even a little. This fucker and his team had killed his friends. They had planned to kill everyone in the condo. A little girl had just lost her dad because of this guy and God only knows what they would have done to Brooklyn if they'd been successful. No, Matt wasn't bluffing.\n\nChico looked at Matt for a long moment. \"I will go with you.\"\n\n\"Anyone waiting for us downstairs? Another team, perhaps? Sniper?\"\n\n\"No. We were alone.\"\n\n\"You will die first if you're lying,\" Matt said.\n\n\"We were alone,\" Chico repeated.\n\nMatt didn't want this guy to hear their plans or hear the other names of their team members. His team knew what that had to do. Jackie went to the master bedroom to call Fox. Jake went to his room to call their attorney. Rookie slipped a pillow case over Chico's head, then sat him on the couch.\n\nThree minutes later, Jake and Jackie came out of their respective bedrooms and nodded at Matt. Brooklyn was behind Jackie, a worried expression on her face. Matt smiled reassuringly at her, then winked at Jackie and said, \"Guess what you're driving.\"\n\nJackie's smile almost split her face in half and she clapped her hands. \"Yayy! Finally!\"\n\nJackie got to drive the Ferrari. Sure, it would draw attention, but it was also fast and fun to drive. The attention it would create was almost as good as an armed escort. Two extremely attractive women, driving a bright red Ferrari, in Southern California. They would be safe. Jake took point with Jackie and Brooklyn. He'd clear the parking garage, make sure Brooklyn and Jackie left safely, and then wait for Rookie and Matt to bring Chico down to the parking garage.\n\nRookie, Jake, and Matt would follow with Chico in the Hummer. Once everyone was on the boat and in international waters, Matt planned to have a little chat with Chico. Matt also made another mental note.\n\nThe police department has a leak.\n\nFox met Jake and Matt on the dock. She was armed, of course. \"Nice boat,\" she said dryly.\n\nJake smiled. \"It's a yacht?\"\n\n\"What's the fucking difference?\"\n\n\"Size, baby. Size.\"\n\nFox snorted and rolled her eyes at her sometimes-boyfriend. She motioned for them to go on board. She'd stay behind and keep watch for a few minutes until the yacht was ready to leave.\n\nSeveral tense minutes later, Matt's team was underway. Fox stayed on the bridge with the captain and monitored the ocean around them. They stashed their captive in a small stateroom.\n\nJackie and Brooklyn had already claimed the two biggest staterooms. They'd clicked earlier, but now they were the best of friends. Surviving a gunfight, then the ride in the Ferrari had bonded them, and a few minutes later, they changed into bikinis. Amazing bikinis. They made their way past Matt, who was trying hard not to notice them, out onto the deck. Jackie gave Matt a warm smile as she walked by.\n\nSunbathing? Are you fucking kidding me?\n\nBrooklyn looked gorgeous of course. Surprisingly though, Matt's eyes didn't linger on the adult actress. Instead, he found himself unable to tear his eyes away from Jackie.\n\nUmm. Wow.\n\nMatt didn't know why it surprised him that Jackie looked so good in a bikini. He guessed it was because he'd only seen her in street clothes or tactical clothing and because her hair was always up in a bun or ponytail. At work, she wore little makeup. Matt only knew Jackie when she was all business.\n\nHe was completely unprepared for the Jackie he saw today, however. The new Jackie was wearing a white bikini that contrasted nicely with her lightly tanned skin. Her hair was beautiful. It was naturally wavy with light blonde highlights and the summer wind was blowing it around her face. It was longer than Matt had thought and attractively styled. He watched as Jackie moved her hair behind her ear, and a smile grew on his face.\n\nWow!\n\nJackie was naturally pretty, but today she'd put on some make-up and had transformed from pretty to gorgeous. Simply put, Jackie looked beautiful, sexy and she rocked that fucking bikini. Matt was still staring at Jackie through the window when Rookie's voice washed over him.\n\n\"Need help, boss?\" Rookie asked. His voice jerked Matt back into the main cabin. Jake and Rookie were grinning at him.\n\n\"Help? Help with what?\"\n\n\"Closing your mouth?\" Rookie was barely able to continue. \"Picking your jaw up off the floor?\"\n\nJake added, \"You want a towel for the drool pouring from your mouth?\"\n\nRookie and Jake burst out laughing while Matt did his best to maintain his dignity. Matt decided to communicate effectively with them.\n\nHe gave them the finger.\n\n***\n\n\"His name is Don Pedro Aragon.\"\n\nTheir guest had started talking. Chico had been hired over the phone. The guy who hired him had mentioned who was taking out the contract. It was a break in protocol, but the middleman had said if this job went well, he would be well paid, and there would be more jobs. Between the name of the client and the amount of money for this contract, Chico couldn't refuse.\n\nThe job was simply to capture Brooklyn and take her into Mexico. Once in Mexico, they'd be told where to take her. That was it.\n\nMatt and Jake left Chico in the stateroom and called the team together.\n\nAn hour later, they came up with a plan. It wasn't perfect.\n\n***\n\nThe phone buzzed on the table. The well-dressed man checked the caller ID.\n\n\"What?\" he asked quietly.\n\n\"I have her,\" Chico replied.\n\nThe line was silent for a full minute. \"We heard your team was killed.\"\n\n\"Yes. It's unfortunate. All of my men were killed, but I waited until they left with Miss Chase and then took her from them.\"\n\n\"I see.\" He paused for several seconds. \"Well done, then. The money will be wired to your account.\"\n\n\"Gracias.\"\n\n\"Once we have proof you actually have Brooklyn Chase and you deliver her to us,\" the well-dressed man added meaningfully. \"Our police contact just verified she disappeared, but that's all. How do I know you actually have her?\"\n\n\"I will send you proof.\"\n\n\"Good. When I see your proof, I will tell you where to bring her, and we will conclude our business.\"\n\n\"Fine,\" Chico said. Chico hung up the phone and looked at Matt.\n\nMatt smiled down at Chico. \"Excellent. Now let's get him some proof.\"\n\nSurprisingly, Brooklyn was willing, almost eager, to go along with their plan. They made a short video of her and it was compelling. She was a good actress. The tears and fright on her face seemed genuine. A big part of Matt had thought she'd want out, but Brooklyn said she wanted to see this finished, to know she was finally safe.\n\nEveryone was impressed.\n\nChico sent the video to his contact. A few minutes later his phone rang.\n\n\"Well done.\"\n\n\"Thank you. Where do I deliver her?\"\n\n\"Cabo San Lucas. There is a small bay called Playa Santa Maria. Don Pedro has an estate there. It's brand new and it's accessible by water or the Transpeninsular Highway.\"\n\nMatt held up two fingers and Chico responded into the phone. \"I will be there in two days.\"\n\n\"Bueno. Well done.\"\n\n\"Please have the wire transfer ready.\"\n\nThe call terminated.\n\nChico looked up at Matt. \"Why two days?\"\n\nThe trip from San Diego to Cabo San Lucas wasn't a two-day trip in the yacht they were using. Matt needed the extra time to set up their plan. The yacht arrived in eighteen hours, plenty of time to put everything together.\n\nMatt dropped Fox and Jake off at the docks in Cabo San Lucas. They had passports, credit cards, and enough cash to stay for several weeks if necessary. Fox had thought of everything when she equipped the boat.\n\nRookie got dropped off a few miles outside of Cabo and a few miles off the coast.\n\nChico, Jackie, Brooklyn, and Matt proceeded to the small bay, Playa Santa Maria. The bay and surrounding area were gorgeous. A large estate was on one side of the bay, and the white stucco gleamed brightly in the morning sun. A wide, perfectly white sandy beach stretched in front of the estate. Matt had the captain anchor just outside the bay. The yacht came equipped with a small, but powerful motorboat, that Matt planned on using to meet Don Pedro and his crew.\n\nNo one slept that night.\n\nThe next morning Chico informed his contact of his early arrival. Jackie and Matt borrowed some uniforms from the crew. The captain was less than happy, but he was former Navy, so he went along. As they approached in the motorboat, three men left the estate, and walked to meet them on the beach. Two of the men were obviously security. They carried short-barreled, AR-style rifles and walked slightly in front of the third man.\n\nDon Pedro Aragon.\n\nMatt finally got a look at the man who had twice tried to abduct Brooklyn Chase and attempted to kill him and his team. He was not impressed.\n\n\"That's Don Pedro Aragon?\" Matt's voice was incredulous.\n\nChico nodded. \"Si.\"\n\n\"The fat guy who can barely walk across the sand and looks like Jabba the Hut?\"\n\nChico looked confused. \"Who is Jabba the Hut?\"\n\nMatt's mouth dropped open. \"Are you seriously telling me you haven't seen Star Wars? What the fuck is wrong with you?\"\n\nJackie piped in. \"Guys. Can we focus on the mission here?\"\n\nMatt shrugged his shoulders. Jackie had a point. Brooklyn was quiet, tense, and pale in the back of the boat. Matt knew she was scared and he didn't blame her. If their plan failed, she'd be dead, or worse. Alive in Mexico and at the mercy of the fat fuck now walking towards them.\n\nMatt drove the boat directly onto the sand and everyone got out. Jackie and Matt stayed next to the boat while Chico and Brooklyn walked over to Don Pedro. They were only ten feet away, so Matt and Jackie heard everything clearly.\n\nDon Pedro stepped forward, past his two security goons, who remained behind him, looking bored. \"Ahhh. Miss Brooklyn Chase. You are even more beautiful in person,\" he said, his voice sounded oily, dirty and Brooklyn didn't respond.\n\n\"Don Pedro,\" Chico began, \"senor, with all due respect, has the wire transfer taken place yet?\"\n\nDon Pedro smiled widely. \"Of course. Of course. I also added a bonus. You've done well, Chico. I will have more work for you in the future.\"\n\n\"Gracias, jefe.\" Chico bowed.\n\nChico stepped back and grabbed Brooklyn harshly. She took one step forward and then jerked back out of Chico's grasp, and ran to the boat, where she jumped in and ducked down. Jackie moved back into the boat, covering Brooklyn.\n\nIt was the signal.\n\nOne of the security goons behind Don Pedro suddenly flew back at an angle, his entire body flying to one side as if jerked hard by an unseen force. A pink mist hung in the air where he had been standing. He was dead when his body landed in the sand. A second later, the other security guard followed the first.\n\nDon Pedro cursed in Spanish, and moved forward after Brooklyn, unaware his security team was dead on the sand behind him. As he moved towards the boat, Matt and Jackie leveled their guns at him and he stopped suddenly. His face was flushed with anger and sweat, and a snarl split his face.\n\n\"You are a dead man,\" he hissed at Matt. \"I am the most powerful man in Mexico.\"\n\n\"Yeah, yeah,\" Matt replied. \"Save it. Right now you're a man with a gun pointed at his head.\"\n\n\"I will watch you die, pendejo.\"\n\nThe fucker was out of breath from just a few steps. He was staring down the barrel of Matt's gun and he still didn't consider the possibility that his life could end on this beach.\n\n\"Don Pedro Aragon.\" Matt said the name slowly. \"Why do you want Brooklyn Chase?\"\n\n\"She is beautiful, no? Why else does a man desire a beautiful woman?\" A slow, nasty smile grew on his face. \"When you are dead, I will take her and make her mine. She will perform for me whenever I want, however I want.\" He took another step forward and puffed out his chest. \"When I tire of her, I will give her to my men. Eventually, I will have her work one of my broth\u2014\"\n\nJackie's shot pierced Don Pedro's forehead. Dead Center.\n\nLike his bodyguards, Don Pedro Aragon was dead before his body met the sandy beach.\n\nMatt looked back at Jackie. \"I couldn't listen to another word.\" She shrugged and spat over the side of the boat. \"No person ever deserved death more than that monster.\"\n\nWhat could he say? Jackie was right.\n\nMatt turned back to Chico. \"We're leaving. You're staying.\"\n\nChico's mouth dropped open. \"You're leaving me here?\"\n\n\"No. I'm... fulfilling a promise,\" Matt said slowly. \"I promised we would let you go, unharmed if you helped us. You're free to go.\"\n\n\"You can't leave me here!\" Chico yelled. \"Don Pedro has men all over this part of Mexico. They will know he hired me. They will know he came here to meet me.\" Chico stepped toward Matt. \"You must take me with you.\"\n\nJackie put a round in the sand at his feet. Chico stopped.\n\nMatt pushed the boat back into the surf while Jackie kept her gun on Chico. Matt jumped into the boat and turned back to Chico. \"You're staying, Chico.\" Matt's voice was cold, hard, and filled with venom. \"It's more than you deserve. If I ever see you again, I'll kill you on sight.\"\n\nJackie started the engine.\n\nThe yacht stopped again in Cabo San Lucas and picked up Rookie, Fox, and Jake. Their feet had barely touched the deck when Matt instructed the captain to make for international waters.\n\nMatt could barely contain his smile, as he walked into the main cabin. Jake handed him a drink and smiled widely at the entire group. He filled everyone in on how their part in the plan actually played out. Fox rolled her eyes and provided the truth when Jake started embellishing.\n\nAn old married couple, Matt thought.\n\nJake and Fox had rented a car in Cabo San Lucas and driven to Don Pedro's estate. Making a big show of being lost and arguing, they had managed to distract a good portion of Don Pedro's security team. The tiny bikini Fox was wearing helped immensely.\n\nJake's facial expressions and Fox's punch in the arm caused the entire group to start laughing.\n\n\"I'm burning the bikini, by the way,\" Fox said dryly, when Jake finished.\n\nRookie cleared his throat and calmly related his activities. He had made it to shore easily using the scuba gear that Fox had brought on board earlier. Once on shore, he had removed the high-powered rifle from the water-tight bag. It was then a short hike to an elevated position overlooking Don Pedro's estate.\n\nRookie had a lot of talents. One of his first jobs in the military was serving as a scout-sniper in Iraq and then Afghanistan, a tough, dangerous job. The targets in Mexico were unbelievably easy in comparison to the battle-hardened Taliban. Once Don Pedro and his two goons hit the sand, Rookie had dispatched all the visible, roving security at Don Pedro's estate. The few security personnel who weren't already being distracted by Jake and Fox.\n\nBetween the disturbance Jake and Fox had created, and Rookie's marksmanship, the only remaining security available to Don Pedro were the two goons he had taken with him to the beach. Rookie's instructions were to eliminate the security on the beach and he said he could have shot them in the dark, blindfolded, with a BB gun. Once the shooting stopped, he buried the rifle, and made his way to the Transpeninsular Highway, where he met up with Jake and Fox. All three of them were back in Cabo San Lucas within an hour and waiting on the dock.\n\nJackie stood close to Matt and leaned against him lightly. He wasn't sure whether it was planned or not, but it felt good. When Rookie finished, he looked over at Jackie and she then briefed everyone on Matt's actions. Venom and bitterness filled her voice when she described putting a bullet into Don Pedro Aragon. Jackie's animosity surprised everyone.\n\n\"My family emigrated from southern Mexico,\" she explained. \"We were fortunate to leave just as Don Pedro Aragon was coming to power. Other members of our family were not so lucky.\"\n\nThe yacht was now in international waters, speeding away from Mexico. Brooklyn was safe and Don Pedro was dead. Chico would probably live another twenty-four hours before he was found by Don Pedro's men.\n\nMatt was certain Chico would try and give them up to save his own ass, but Chico knew less than nothing about Matt's organization, so Matt wasn't worried. It was likely Chico wouldn't even get a chance to talk before Don Pedro's men tortured his ass to death.\n\nDon Pedro's infatuation with Brooklyn Chase had been completely unrelated to his business. It had been personal. He had no family, no sons or daughters. Whoever succeeded him wouldn't give a shit about Don Pedro's personal obsession with an adult actress in the states.\n\nIt was over. Brooklyn was safe.\n\nMatt's team had earned a break and now it was time to relax. The yacht had enough fuel for several days, so the team decided to enjoy every minute. Matt was happy to learn Jackie had several bikinis, just like the first one he had admired so much. Jackie wore every one of them while they were at sea. Matt and Jackie also had a chance to talk, like two normal people, and get to know each other better.\n\nMatt was very happy to learn that Jackie looked even better without a bikini.",
        "Fox and Jake managed to reconnect on their way back as well. No one dared guess what their future held, but the looks they were giving each other were serious. Matt sensed it could be permanent this time.\n\nRookie was rechristened as Rowdy, which happened to be his real first name. Rowdy had earned a substantial bonus. Matt had called his business manager and had her wire the funds directly to Rowdy's bank account and then made Rowdy promise to take a real vacation when they arrived in San Diego. Matt had to tell him to take a vacation or he was fired.\n\nThey arrived back in San Diego three relaxing days later.\n\nTheir attorney arranged for everyone to give short statements to the police. The leak in the police department had been plugged. The creepy asshole detective was arrested after police officers found him in an apartment with a large amount of crystal meth and an undocumented young woman who proved to be seventeen years of age.\n\nThe former detective was now in the county jail awaiting trial. He'd been giving up witnesses for the last three years and several states desperately wanted to extradite him for trial. One of them was Texas where the death penalty wasn't an idle threat. The detective was singing like a bird, trying to avoid extradition.\n\n***\n\nSix Months Later.\n\nAVN Awards Ceremony, Las Vegas Nevada\n\n\"The award for Female Performer of the Year goes to ... BROOKLYN CHASE!\"\n\nMatt's entire table stood up, clapping hard, and smiling at Brooklyn. Her boyfriend leaned over and kissed her quickly. Jackie gave her a tight hug before she walked up to the stage to accept the award.\n\nBrooklyn's acceptance speech was classy and funny, just like her. It was also great to see her receive the recognition and acclaim her work deserved.\n\nJackie had received a call a few months previously from Brooklyn, who had invited the entire team to the AVN awards ceremony as her guests. Matt's team accepted, of course, and Brooklyn had reserved an entire table for them. They had also gotten the chance to meet Brooklyn's boyfriend, and Jake being Jake, he immediately insulted his Marine heritage. A lively and entertaining discussion soon followed.\n\nAs everyone sat back down, Matt took a sip of bourbon and heard Jackie groan softly. \"What?\" he asked.\n\n\"I want a drink,\" she whispered to him.\n\n\"Sorry, baby.\" He smiled at his wife. \"Soon.\"\n\nJackie rubbed her stomach and smiled at Matt. She wasn't drinking because she was pregnant with their first child.\n\nFamily.\n\nMatt had proposed to Jackie three months after their return to San Diego. She had arranged the wedding in record time. Matt had simply nodded and smiled through the entire process. Thirty short days after Matt's proposal, they had their wedding. Matt had felt like the luckiest guy on the planet. Jake had been there, but he wasn't Matt's best man. Rowdy was the best man. Actually, Rowdy was the best man for both Matt and Jake.\n\nIt had been a double wedding.\n\nJake had proposed to Fox about a week before Matt proposed to Jackie. Jake and Matt had met the women of their dreams, and they weren't about to let them get away. The timing was purely a coincidence.\n\nJackie had informed Matt they were pregnant just over a month ago.\n\nLife is good. "
    ],
    "authorname": "JayCuck",
    "tags": [
        "drama",
        "suspense",
        "thriller",
        "hero",
        "human trafficking"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/jax-and-the-brown-eyed-girl"
}