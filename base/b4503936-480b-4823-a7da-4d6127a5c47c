{
    "title": "The Journey Pt. 01",
    "pages": [
        "This is a long story. I considered publishing it in parts but decided to go ahead and submit it all at once. It is a story of a man and woman whose marriage has become dull and mundane. The husband talks the wife into a game that changes their lives. He had always harbored a secret desire to see her with other men. In the end, he gets that and more. You should pass this story by if you don't like long stories, or stories about slut wives. However, if enough people like this story, I may do a second part. Gary \n\n* * * * *\n\nChapter 1\n\nTim and Janice Harwick met while in college. He was a business major and she was working on her undergraduate degree in law. They dated throughout college and fell madly in love. They decided to get married after Tim graduated, and Janice would continue her study for a law degree. \n\nThe wedding was held in Tim's hometown. It was a large traditional wedding with over five hundred guests crammed into the small church. The newlyweds ran from the church to a chorus of cheers and rice; they were off to make a home and live the American dream.\n\nTen years later both had made their mark on their chosen professions. Tim was a partner in a large advertising agency and Janice was a well-respected associate professor of law at the local university. Both made good salaries, affording them a nice standard of living. There were no children yet but that was in their plan at some point. However, Janice knew that at 35 years of age, her biological clock was ticking. Unfortunately, there had always been something that delayed the event. While Tim wanted children, it was hard for him to see how they would have the time to fit them into their busy schedule without adversely influencing their life style. \n\nIf you asked either of them if their marriage was good, they would both give a resounding yes. However, that answer would belie the true emotions lying just beneath the surface. Despite their comfortable outward appearance, there was a deeper feeling that something was missing. Over the years, the stress of two professional wage earners had taken its toll on their personal lives, resulting in less and less time for each other. Sexual relations had become routine, if not mundane. Sex was relegated to the back burner and often turned into a quickie every couple of weeks when they weren't too tired.\n\nThe deplorable condition of their sexual relationship was on both of their minds often. However, neither of them felt comfortable talking about the subject: Janice because of her strict upbringing and Tim for fear of her anger. The result was the construction of an emotional wall, locking them on opposing sides. It had reached a point where they each thought that the other felt that sex wasn't important anymore in their marriage. \n\nOne Friday night, Janice and Tim had a rare night at home together. Tim was reading in the family room when Janice came in with a book on tort law that she had assigned for reading by her first-year class. She had to brush up on the subject herself, and then grade some papers. \n\nTim looked up and smiled as Janice walked toward him. She was wearing a baggy sweat suit, her hair pulled back in a ponytail. The thought occurred to him that she still looked sexy even in sweats, even with no makeup on. He knew that she had gained a few pounds in the last couple of years but it all went into the right places. In fact, Tim had always felt that she was a little too skinny anyway. She had been a dedicated exerciser when they met and had even participated in several marathons. As a result, her legs were still firm and she had a gorgeous, well-rounded butt. \n\nAs Tim watched her walk by he could see her bare breast bouncing under her top. On impulse he reached out and caressed a buttock, bringing a yelp from her.\n\n\"You're frisky tonight, Timmy,\" Janice said with an indulgent smile. \n\nTim reached up quickly, before she could get away, and pulled her onto his lap, bringing another surprised yelp from her lips. \"It's all your fault for coming in here looking so sexy,\" he said and kissed her passionately. His hand slid up under her top and began to caress her breast as his tongue searched her mouth.\n\nJanice pushed Tim away gently but firmly. \"Boy, you are really hard up if you think I'm sexy in my sweats,\" she admonished him gently. She was just a little breathless. Then she moaned as she felt Tim begin to squeeze her nipple again, pinching it between his fingers. Janice knew that she had a lot of work to do tonight if she was going to be prepared for class the next day. \"Tim, I have work to do!\" she complained, grabbing his hand and pulling it from her breast. \n\nTim's smile turned to a frown. \"It seems like you're always too busy,\" he said with undisguised frustration.\n\n\"What is that supposed to mean?\" Janice returned as she stood up.\n\n\"It means that we never have any time for fun anymore.\"\n\nJanice started to say something then stopped. Unfortunately, he was right. Janice sat back down on Tim's lap and said, \"You're right, we're both far too busy. Truthfully, it's been bothering me lately as well. Everything is always so rushed.\" Janice snuggled comfortably into Tim and said, \"I'm not sure what we can do about it though.\"\n\n\"I don't know either,\" Tim said, hiding his real feelings, adding another brick to that wall. No damn it he thought, it was time that they talked. \"Janice, we need to do something or I'm afraid we'll drift away from each other.\" \n\n\"Do you think we're drifting away?\" Janice asked in shock.\n\n\"Sometimes, yes! We hardly have time to talk, let alone time for sex. I remember not too long ago when we used to talk for hours. And... and we would make love for hours too.\"\n\n\"Yes, I remember,\" she sighed.\n\n\"We have to find time for each other.\" Then Tim remembered an article that he had read in Playboy. He didn't think Janice would go for it but he figured he had nothing to lose. \"I read an article last month about what one couple did to spice up their life. It was about SEX so I'm sure you wouldn't like it.\"\n\n\"What do you mean that I wouldn't like it because it was about sex? I like sex.\" \n\n\"You do?\" Tim said sarcastically. \n\n\"What makes you think I don't like sex?\" Janice said defensively. \n\n\"Because you are a pru...\" Tim started to call her a prude but realized that that would start a major argument. They were already treading on thin ice. \n\nIn truth, he did feel that she was a prude. She looked like the proverbial sex machine; tall, great shape, stylish blond hair and breasts with nipples that seemed to always be hard. Yet, behind closed doors she was anything but a sex machine. She had only given him oral sex on a few occasions and he had rarely done it to her. They never talked about it. Once he brought up anal sex and she just about went off the deep end, calling him a pervert. \n\n\"I'm a prude!\" Janice almost screamed. \n\n\"I wasn't going to say that.\"\n\n\"Yes you were!\"\n\n\"All right, I was, because you are!\"\n\nJanice stood up again, her face red with anger. \"So I'm the prude. What about the time I wanted to wear that low- cut dress to your stuffy old Christmas party? You almost had a stroke. Then there was that time that Sally and Bill wanted us to watch a porn movie. I said yes, but you made a big deal about it. And I'm the prude!\"\n\n\"It's not about dresses or movies,\" Tim said, returning her anger. \"It's about the bedroom. When is the last time you... you... you know... oh, never mind,\" Tim said in frustration. \n\nJanice was fuming now. She could barely speak. \"Fine, I don't want to talk about this anyway.\" She stormed out of the room. \n\nTim started to respond but decided to shut up. It wasn't any use talking when they were both angry. The wall was getting bigger. He lifted his paper back up and tried to read. It was no use. His mind drifted to those forbidden thoughts that seemed to be coming quite often now. \n\nIn his dreams he was watching Janice lying naked on the bed. There was a man with her, but it wasn't him. They were kissing and he was fondling her breast. Tim's excitement grew as he watched the stranger kiss his wife, then move his hand under her skirt. She squirmed and sighed, pushing her hips down, demanding that he pleasure her. He watched though a dream -like fog as his wife spread her legs, opening herself for this stranger. She let him press his fingers deep into her. \n\n\"Sweetie, can we talk?\" \n\nTim jumped, startled by his wife's voice. \"Sure,\" he said, trying to shake the perverted vision from his head. \n\nJanice sat on the sofa close to Tim and placed her arm over his shoulder. They sat quietly for a while gathering their thoughts. Tim spoke first. \"Listen, Janice, I'm sorry I called you a prude,\" Tim said sincerely.\n\nJanice put her fingers to Tim's lips to silence him. \"The truth hurts,\" she said. \"I'm afraid I have been a prude. You know that I was raised in a religious family and sex was never talked about. The truth is that I would love to really let go and do some of the wild things I've read about in magazines or heard the girls at school talk about. I... I... Oh damn,\" Janice said, her voice cracking with emotions. \"Oh God, Tim, I fantasize about things all the time. I've even... even been masturbating lately.\"\n\nIt shocked Tim that Janice had been fantasizing, not to mention masturbating. His first inclination was to blame himself for not being man enough for her. Then he felt anger at her for closing him out. However, he was smart enough to know that the issues were a lot more complicated then secretly masturbating. Hell, he had done it plenty of times himself. Tim hugged Janice to him and they sat silently again for a long time. \n\n\"Tim, what was it you were going to suggest a little while ago...? Before I blew up?\"\n\n\"It's too crazy. I don't even know why I brought it up.\"\n\n\"No, come on, what were you going to suggest?\"\n\nTim took a deep breath and said, \"Well, I was reading an article in Playboy magazine.\"\n\n\"Oh yes, that great philosophical journal,\" Janice said sarcastically. \n\n\"Fine, forget it,\" Tim said, anger flaring again.\n\n\"I'm sorry!\" Janice apologized. \"Please tell me.\"\n\nTim hesitated then started again. \"It was about a man and woman whose sexual relations had become boring... like ours. They were about our age, however they had three children. They agreed to take a week where one partner would do anything the other partner wanted. Anything!\"\n\n\"Wow, that sounds dangerous, but tell me more,\" Janice said trying to sound interested but thinking that it was totally crazy.\n\n\"The guy came up with all these things that turned him on and his wife would have to do them. She had a safe word that when she used it, whatever he was doing he would stop. However, he would go on to something else. If she used the safe word three times they agreed to end the game. If she didn't, the husband had to do whatever the wife wanted for a week. If the wife beat the husband, by using the safe word less then him, she would get a present of her choice.\"\n\n\"Did she get her present?\" Janice said, suddenly interested.\n\n\"Yep! She got her husband for a week. When he used the safe word twice, she got a trip to France. The guy claims that now their sex life is an adventure ever day. However, I don't know if you can believe the story or not.\"\n\n\"Sounds very interesting, but what kinds of things did he make her do?\"\n\n\"Well, you know Playboy, it's always wild. He made her do things like going out without panties and flashing people. He experimented with all of his sexual fantasies. Some of them were pretty far out.\" Tim stopped for a moment, waiting for Janice to say something. \n\n\"Go on,\" she said with interest.\n\nTim took a deep breath and said, \"Well, they tried oral sex, sex in public places, anal sex and even a little S&M. He even had her fool around with other guys.\"\n\nJanice opened her eyes wide in shock. \"Would you do that?\" Janice asked, astonishment clearly in her voice. \n\n\"What?\"\n\n\"Would you let other men fool around with me?\" she asked, almost trembling now.\n\n\"Uh... uh... I don't know,\" Tim said, his face turning red, giving himself away.\n\n\"You would!\" Janice said is shock. Yet her shock was not entirely because of Tim's fantasy. Janice had her own fantasy lovers. \n\n\"I didn't say that! I... I... guess the thought of you teasing some guy does have an appeal to me. But that doesn't mean I don't love you or that I would let you go too far,\" he hastened to add.\n\n\"But you would let me do something with another guy? And, what does 'too far' mean anyway?\" Janice asked nervously, her mouth suddenly dry as a vision of one forbidden evening not so long ago jumped into her head.\n\n\"I don't know,\" Tim said, now wishing he hadn't brought the subject up.\n\n\"This is hard to believe,\" Janice said, trying to act indignant but feeling her heart race in her chest. \n\n\"I knew that I shouldn't have brought it up. Let's just forget it.\" \"No!\" Janice said a little too loudly. Then she lowered her voice and said, \"This seems pretty crazy to me, Tim.\" After a few minutes she whispered almost bashfully, \"I would probably use the safe word the first day.\" \n\nTim could feel his heart begin to beat rapidly. It sounded like she might be interested. \"That's what this guy said his wife said to him. However, she took it as a challenge. She never used the safe word, but he did, twice.\"\n\nJanice was staring silently into space, a plethora of emotions running though her. On one hand, she was shocked by Tim's willingness to involve another man. However, on the other hand, she could not deny that she was feeling a tingle of excitement. \n\nTim took that opportunity to pull Janice to him and kiss her lips tenderly. When he heard her moan, he moved his hand under her sweatshirt again. This time she didn't push his hand away. He could feel her breathing speed up as he began to play with her already hard nipple. As their tongues worked together, Tim's hand slid under the waistband of her sweats and into her panties. He almost gasped when his fingers found her wet and already- swollen sex lips. It was obvious that the conversation had been more exciting to her then she was letting on. \n\nJanice was embarrassed; her crotch was a swamp of sex juice. In fact, her juice had already soaked through her panties and was making a stain on the crotch of her sweat pants. Janice moaned as she felt Tim's fingers push into her pulsing hole. She spread her legs to give him better access. As his finger began to slide in and out, her hips moved up from the sofa, encouraging him to go deeper. She moaned in frustration when he suddenly pulled his finger out. \n\nTim quickly pulled Janice's top over her head then began to pull her pants down. She lifted her hips up and let him strip her naked. Then he stood up and looked at his sexy wife. She was lying back on the sofa, her legs were spread slightly apart, her thighs almost quivering. Her chest was moving up and down with her excited breathing and her eyes were hooded over with approaching pleasure. \n\nWhen Tim's eyes moved down her body, he had to suppress a gasp. Her large nipples were hard, sticking out like pencil erasers. Her beautiful breasts sat up proudly, firm, yet soft. When he looked a little lower, he could see the very large inner lips protruding from her hair-covered vagina. He had always loved the way her vagina looked. He liked that the lips were long and fat. In fact, he had never seen any woman with lips as large as hers. Unfortunately, she rarely let him look at her like this. His mouth practically drooled as he looked at the dripping flesh between her legs. The few times she had let him eat her, it had been incredible to feel those fat lips in his mouth; he could practically fill his mouth with the swollen flesh. \n\nTim stripped off his clothes in record time and moved quickly into her arms. He moaned as his penis slid into his wife's willing body. \n\n\"Oh God, baby, you feel so good,\" Tim moaned as he began to move in and out of his wife's slick hole. When he felt her legs wrap around his waist, he began to pound into her with rapid strokes.\n\n\"Yes, yes, fuck me,\" Janice whispered, her excitement rising rapidly.\n\n\"Fuck me!\" Tim thought. She never used language like that. Two could play that game, he thought. He bent to her ear. \"Yes, I'm going to fuck you, baby. I'm going to pound into your pussy until you can't stand it anymore,\" Tim whispered, using words he had never spoken to her before.\n\n\"Oh yes, God yes fuuuucccckkk me!!!\" Janice moaned as her excitement built beyond control. \n\nSoon their bodies were covered in sweat as their moans filled the room. Tim worked to control his excitement. It had been a long time since he had been inside his wife and frankly, the conversation had excited him tremendously. Still, he wanted to make sure Janice enjoyed herself before he climaxed. He tried to think of anything but his wife's incredibly tight vagina. Suddenly, his dream flashed before his eyes. He wasn't with his wife any longer. He was watching... watching as she made love to another man. That was the wrong thing to think of. \n\nFortunately, Janice couldn't last very long either. \"I'm going to cum,\" Janice breathed. \"Yes, yes, ohhhhhhh!!!\" she moaned as her body began to convulse in pleasure. \n\nIn his fantasy, his wife's lover bellowed that he was going to cum. He watched his beautiful wife wrap her legs around her lover, pulling him deep into her, waiting for his cum. This was the point at which time Tim always lost control.\n\nTim could feel his own balls pull tight to his body. \"Oh God, baby, here it comes,\" he moaned. Then his penis throbbed and began to spurt juice into the welcoming hole of the women he loved.\n\nJanice pulled Tim tightly to her, her heals digging into his buttocks, forcing him as deep as possible into her. She could feel her already saturated hole fill with her husband's seed. Suddenly an unwanted thought raced though her mind. It was no longer Tim between her legs, but rather her fantasy lover taking his pleasure inside her body. Without warning, a second, even more intense, climax rushed through her. She had never had two climaxes this close together. Hell, she was lucky to have one good one. \n\nIt was an intense coupling for both Tim and Janice. Maybe it was the argument... makeup sex was always good. Maybe, it was the thought of the suggestion Tim had made or the fantasy they secretly shared. Whatever the reason, it was the best sex the two had had in many of years. There was just a little crack in that emotional wall they had built.\n\nChapter 2\n\nFor the next several days, the only thing on Janice's mind was the proposition that Tim had made. At first, she dismissed it out of hand as a totally crazy idea. However, she couldn't deny that every time she thought of it, she could feel excitement begin to course through her. \n\nThere were a thousand questions going through her mind as well. What if Tim really wanted her to do something with another man? God, what if he wanted her to go to bed with another man? Could she really do it? Having someone in a fantasy was entirely different than doing it in real life. She knew that fantasies were innocent most of the time. She had read where most women dreamed of fantasy lovers. \n\nAnd what about all the other things Tim had suggested? Sure she could go out without panties but could she really flash strangers? What about oral sex? She had grown up thinking it was dirty. Yes she had loved it the few times she had let Tim do it to her, but she had had too much to drink. At least that was her excuse. As far a performing oral sex, well, she really couldn't remember the few times she had done it to Tim because she had been intoxicated then, too. She knew that if she agreed to this wild game, she wouldn't be drunk. \n\nThen there was the nagging thought that worried Janice more than anything else. Would Tim stray if he got the chance and she didn't change their sex life? She had seen his roving eye. He was a very handsome man and it would be easy for him to attract some immoral slut. Maybe he had already done it? ",
        "Janice knew that Tim loved her with all his heart. She felt the same way. But was that enough? Was love without true sexual satisfaction enough, especially for a couple in their thirties?\n\nSuddenly, Janice knew what she had to do.\n\nTim had also been agonizing all week over their conversation. He had thought a hundred times that he should call her and tell her that it was all a joke,; that he could never do those things that he had read about. Yet, every time he thought about it, he felt an erection coming on. \n\nHe reached for the telephone to call Janice and tell her to forget what he had said when the telephone rang. \"Hello.\"\n\n\"Tim,\" Janice said in a whisper, her voice strained.\n\n\"Janice, what's wrong?\" Tim asked, clearly concerned.\n\n\"Nothing sweetie. I just wanted to tell you that I love you and that I have thought about your proposition. In fact, I have thought about nothing else. I have decided that the answer... the answer is yes,\" Janice said breathlessly.\n\n\"No honey, it's not necessary,\" Tim answered. \"I don't want you to do anything that you don't want to do. It was a crazy idea.\"\n\n\"I want to do it. I've thought about it all week and the truth is, it excites me.\"\n\nTim could feel his heart begin to pound in is chest. \"Are you sure?\" he asked uncertainly.\n\n\"Yes.\"\n\n\"Oh God,\" Tim said aloud without realizing it. Tim's brain began thinking of all the possibilities. He could feel his penis begin to harden in his pants. \"God, I love you.\"\n\n\"I love you, sweetheart,\" Janice answered, her heart suddenly overflowing with love. \"When do we start?\" she asked hesitantly. \n\n\"Well, we both need to check on vacation. I think I can get off week after next,\" Tim said, taking a deep breath.\n\n\"Vacation? We have to take vacation?\" Janice seemed surprised.\n\n\"That's what the couple in the article did. They even went out of town for a couple of days so that no one would recognize them.\"\n\n\"God, what did they do?\" Janice asked, her voice shaking.\n\n\"I can't tell you that. Besides, we might not do the things that they did. I have my own ideas,\" Tim said with a little nervous laugh. In truth, he wasn't as confident as he wanted to appear. This was all new to him as well. However, he had a very active imagination and knew that he would come up with some pretty wild things. \"Tim, I hope this doesn't get out of hand.\"\n\n\"We will make sure it doesn't honey,\" Tim reassured her. \"Remember, you will have a safe word. Now do you think you can get some vacation?\n\n\"I have some time coming to me and I have a student teacher that wants to get her feet wet. However, I do have a guest lecturer coming in on Thursday, week after next,\" Janice said, thumbing through her calendar. Yes, Dr. Dan Forsman was coming to lecture her class that week. She didn't want to miss him. A little shiver ran through her as she thought of Dan. She hadn't seen him in over a year. No, she couldn't miss him. \"If we can arrange it so that I can go in for several hours that day, I think I'm okay. However, let me check and let you know.\" \n\n\"Great! I love you so much,\" Tim said sincerely. \n\n\"Love you too sweetie, goodbye.\" Janice could feel her hands shaking as she hung up the telephone.\n\n\"Yes!\" Tim said loud enough for his secretary to peek in to see if everything was okay.\n\n\"Is everything okay, Mr. Harwick?\" Danielle asked, walking into Tim's office and closing his door.\n\nTim looked up at his pretty secretary. She was a gorgeous woman in her early 20's. She wore skirts too short and blouses too tight. It was clear to Tim that he could have her anytime he wanted. He had been tempted many times but had thus far resisted all her charms. He looked at the closed door with a frown then watched her walk over to the credenza that held the customer files.\n\n\"Everything is wonderful, Danielle,\" Tim smiled.\n\n\"I just need to get the Donnelly Fabrics file,\" Danielle smiled back and bent over to open the drawer.\n\nTim wanted to look away but found his eyes drawn to her rear as she bent forward. The short skirt pulled up in the back until he could see just the hint of her nylon tops. He already knew that she never wore pantyhose. He stared, fascinated by her sexy legs and the shinny nylons covering her thighs. Suddenly, he realized that she was looking back at him. He felt his face flush and turned away.\n\n\"The file isn't there. It must be in your desk.\" She turned and started to walk over to his desk. \n\nTim looked up at Danielle as she stopped suddenly and stood frozen, a strange expression on her face. However, she wasn't looking at his face. When he followed her eyes, he realized that she was staring at his crotch. He almost gasped. A large wet spot was forming on is slacks where his erection had slipped out of his underwear as it hardened down his leg. Now it was Tim that was paralyzed, but with embarrassment.\n\nDanielle moved as if in a trance. She walked over and stood above Tim, her eyes never leaving the site of his erection twitching and leaking in his pants. Slowly she slid to her knees, her hands coming out to grasp his thighs.\n\nTim tensed. \"Danielle,\" he gasped as he watched her hands slid up his thighs toward the tent in his pants. \"Oh God,\" he moaned as her hand touched his swollen cloth- covered penis. He wanted to stop her but his hands wouldn't move. \n\nDanielle could feel his penis twitching under her fingers as she slowly moved her hands across the large protrusion. God, she had wanted to do this for so long, she thought. She wasn't sure what had made him excited but she knew she couldn't miss the chance she had wanted for so long. Slowly her shaking fingers reached for his zipper.\n\nThe rasp of his zipper sounded loud in the quiet room.\n\n\"Danielle...,\" Tim gasped, his voice sounding like a squeak. The sexy woman between his legs ignored him.\n\nDanielle moved one hand into the opening of his pants, searching for his hot flesh. A little moan escaped her lips as her hand wrapped around the smooth skin of his hard penis. She could grasp it but she was unable to pull it out. Sighing with frustration, she reached up, quickly unbuckled his pants, and began to tug them down.\n\n\"Danielle, we can't,\" Tim said feebly. \n\n\"Lift up,\" she said, ignoring him again. Danielle almost smiled when she felt her boss lift his hips and let her pull his pants and underwear to his ankles. Then she sucked in her breath when she saw his throbbing organ standing proudly before her eyes. It was beautiful, just like she had imagined a thousand times. The mushroom- shaped head pulsed with life as the entire penis throbbed in excitement. His testicles were large and squirming in their sack, swollen with sperm. A clear liquid was running out of the slit in a steady stream. \n\nTim's eyes were wide with excitement and fear. What am I doing? he thought. This is so wrong. Yet, there was no strength in his body to stop her. He moaned as he watched her cool hands caress his penis. Blood was rushing to his head, making everything fuzzy. It was almost like he was watching someone else - not him and his secretary. It was another woman's pretty hands with the bright red nail polish wrapped around some other guy's penis. Tim began to tremble. Suddenly, he saw his wife's face.\n\nDanielle stared at the throbbing flesh in her hands. She caressed it, squeezing more of his clear juice from the slit in the head until it bubbled out and ran down the shaft and across her fingers. As she ran one hand up and down the shaft, she brought the other hand to her mouth and licked the slick juice from between her fingers, her eyes glancing up at her amazed boss. A smile appeared on her lips. Suddenly, she needed to taste his flesh in her mouth. With an animal- like groan she moved her head forward and enveloped the head.\n\n\"Oh my God,\" Tim moaned as he felt her warm mouth on the stretched skin of his penis. His hands gripped the arms of the chair as he watched the top of her head begin to move up and down. \n\nDanielle was moaning as well. All of her senses were focused on the swollen knob in her mouth. She could taste the sweet juice running from the hole, she could smell his excitement. She sucked the head and ran her hand up and down the shaft as if she were milking him. In fact, she was milking him, desperate for the sweet juice in his swollen testicles. Danielle loved to perform oral sex. She was an expert. Sometimes she thought that she was obsessed with fellatio and drinking sperm. \n\nSoon the room was filled with the sounds of Danielle's sucking mouth and their combined moans. \n\nTim couldn't believe how good it felt as he watched her mouth slobber over his rod. He had enjoyed it the few times Janice had done this but she was never very enthusiastic. Danielle appeared to love it.\n\n\"Oh God, Danielle, be careful or I'll...\" he tried to warn her. It was already too late. Then with his last ounce of strength, he reached out in panic to grab her head. It was a weak and useless attempt to pull her head from his nearly climaxing penis. \n\nDanielle moaned and shook her head, refusing to let him spoil it for her. She had waited too long not to get her reward now. She grabbed Tim's hands and pulled them from her head, holding them away. Then she worked her head up and down frantically, sucking hard; wanting desperately to bring him off before he could stop her. It worked!\n\n\"Ohhhhhhh!!!\" Tim moaned when he felt his juice traveling up the shaft like an oil well ready to blow. He couldn't stop it now, even if he wanted to. Suddenly, his sperm exploded from the swollen head. His hips bucked up into Danielle's mouth. He vaguely heard her gurgling in pleasure as she drank his thick juice.\n\nDanielle swallowed repeatedly as Tim filled her mouth with his sweet sperm. His penis throbbed repeatedly, forcing his thick juice into her mouth and down her throat. She wrenched one hand from Tim's grasp and wrapped her fingers around the shaft again. Her hand worked rapidly, pumping up and down in time with the throbbing shaft, milking the juice from him. Finally, she moaned in frustration when no more juice would come from the slowly deflating tube in her mouth. She swallowed one last time then let his penis slip from her lips. She looked up at her amazed boss and then stood up, smiling. \"You have an appointment with Mr. Donnelly in fifteen minutes.\" \n\nTim sat in stunned silence as he watched Danielle wipe a drop of sperm from the corner of her mouth and lick it from her finger. She smiled devilishly before leaving his office. A few seconds later he realized that he was sitting in his office with his pants around his ankles and his wilted penis dripping onto the material of his slacks. With a deep sigh, he pulled his pants up and straightened his tie. Then he rushed red- faced past Danielle to the men's room to clean the whitish stains from his crotch before his client arrived.\n\nWhen Tim left work that day, he was having pangs of guilt. He had never cheated on Janice. Maybe it wasn't really sex he told himself --- Clinton got away with that. However, deep inside he knew better. He stopped at a flower store and bought Janice a dozen roses. \n\nIt took Tim and Janice a couple of days to work out a mutual time for vacation. They told everybody that they had big plans for their vacation but were mysterious about where they were going or what they were doing. \n\nTim didn't say much to Janice about what was going to happen. He was being very secretive about everything. He knew that this was driving Janice mad but that was all part of the plan. He wanted her to be a little worried and excited, - that was part of the fun. \n\nTim made mysterious telephone calls. As hard as Janice tried, she couldn't figure out what was going on.\n\nFinally, on the Saturday that their vacations started, Tim sat down with Janice. \"Sweetie, I want to make sure you still want to do this?\" Tim said as he took Janice's hand. He held his breath, hoping that she hadn't changed her mind.\n\n\"Sweetie, I want to make sure you still want to do this?\" Tim said as he took Janice's hand. He held his breath, hoping that she hadn't changed her mind.\n\nJanice didn't answer for a long time. \"Yes, I still want to do it, but I'm scared,\" she finally said, her hands shaking and moist with her sweat. She looked at her husband of ten years and wondered if she really knew him. It almost seemed that he had become someone different. Not bad, just different. There was a light in his eyes and a bounce in his step that she hadn't seen in years. \n\nTim saw her pensive look and said, \"You know that I would never, ever, hurt you, don't you?\"\n\n\"Yes, but I don't know what's going to happen. What if I don't like it?\" Janice said, tears coming to her eyes.\n\n\"If you don't agree to something that I am about to do you will use the safe word 'Geranium'. However, remember, if you use it three times, it's over and I win.\"\n\n\"What do you get if you win?\" Janice asked. \n\n\"I want you to give me sex any time I want for the next year. However, if you don't use it three times, I am yours for a week. Then, after my week and you have used the code word less than me, you get to buy that convertible you have always wanted.\"\n\n\"It's confusing to me.\"\n\n\"Well, just remember that this is supposed to be fun and enhance our sex lives. Don't worry, I'll keep score,\" he said with a smile. \"Listen, Janice, I know you have ideas about sex that have been drummed into you since you were young. Frankly, I have my own hang-ups. I think many marriages fail because couples never explore their relationship. I 'm sure that some of the things we will do, you will not like at first. I will be sensitive to that. However, I think that deep down inside that you will love most of it.\"\n\nJanice could feel her head spinning with excitement and confusion. Who was this new man sitting across from her? she thought. She had slept almost every night with him for the last ten years yet never really knew him. God, maybe she didn't know herself any better.\n\n\"Tim?\" she said quietly.\n\n\"What, sweety?\"\n\n\"I don't want a convertible if I win.\"\n\n\"All right then, what do you want?\"\n\n\"I want... uh... I want a baby!\" Janice said hesitantly.\n\nTim's eyes opened wide in surprise. Not because Janice wanted a baby now but that she would bring it up as a bargaining chip. \"I thought we were going to wait a few more years for that.\" \n\n\"I know, but I'm not getting any younger and neither are you.\"\n\n\"I know, sweetheart, but a baby makes life a lot more difficult with our careers and all,\" Tim answered in a less than convincing tone.\n\n\"That's the deal. Take it or leave it,\" Janice said trying to sound defiant.\n\nTim was silent for a few minutes as if he were mulling over the offer. The truth was that he was thinking that time was getting short as well. He was about to say that she could have her baby without winning the contest. However, the challenge might help him reach his objective of sexually liberating both of them. \"Well, I guess I don't have any choice,\" he answered with a sigh. \"However, if I win, I get all the sex I want and we wait another year. Deal?\" \n\n\"Deal!\" Janice said, her heart thumping with excitement. \"Now, we have a couple of appointments at the mall,\" Tim said.\n\n\"At the mall?\"\n\n\"Yep, we need to get you some new clothes,\" Tim smiled.\n\nChapter 3\n\n\"But why do I have to wear this short skirt just to go to the mall?\" Janice asked as she tried vainly to pull the impossibly short skirt further down her thighs. It was a skirt that she had never worn because it was too short when she bought it. Now it was definitely too tight as well. \n\n\"Short skirt, white blouse, no bra and no panties,\" Tim responded.\n\n\"No bra or panties!\" Janice practically screamed, as she stood topless with her hands on her hips in defiance. \n\n\"It's my rules. Now get those panties off and the thigh high nylons and the white blouse on,\" Tim said pointing to the clothes on the bed. \"You look so cute when you're mad,\" he added.\n\n\"But we're just going to the mall,\" Janice tried to reason with Tim again.\n\n\"No buts. Now hurry up, I'll see you downstairs in ten minutes. Don't be late,\" Tim said with a confidence in his voice that he didn't really feel. This was the first test for Janice and him. He wasn't at all certain what the outcome would be.\n\nTim sighed a quiet sigh of relief when he saw Janice come down the stairs wearing the clothes he had asked. He felt a little twinge of excitement when he saw her dark nipples under the thin blouse. His hands went to her ass as he hugged her to him. She shivered when he squeezed her firm ass cheeks. Tim was satisfied when he felt her bare ass under her skirt. \n\nA half-hour later he and Janice arrived at the mall. The first place they went was to a department store where Tim picked out four or five skirts, blouses, and dresses for Janice. Each piece of clothing had in the same thing in common:; they were short, tight, and revealing. No matter how much Janice protested, Tim wouldn't relent and made her try each article on. \n\nJanice felt very uncomfortable trying on the clothes because she was naked under them. She had never tried on clothes without underwear except for when she was buying bathing suits. However, as much as she tried to deny it, the situation was exciting her. Her hands were shaking as she tried on one lacy blouse, looked in the mirror, and saw her nipples poking through. Then she put on one of the little skirts Tim had selected. God, you could practically see my crotch in this, she thought. She turned around and looked at the rear view in the mirror as she bent forward slightly. A sudden thrill of pride went through her when she saw the long expanse of her thighs revealed below the short hem. \"My legs still look pretty damn good,\" she said in a whisper to herself. Then she bent a little further forward and gasped. The cheeks of her ass were revealed and the puffy pouch of her vagina could be plainly seen between her thighs. \n\n\"Are you ever going to come out of there?\" Tim asked from outside the curtain. \n\nJanice's face was flush when she peeked out of the dressing room and was told by Tim to come out so he could see the clothes. She rushed out, praying that there was no one else around. Unfortunately, there were two older women waiting for a booth. They both looked at Janice with surprise and a hint of disapproval. As soon as Tim gave his nod of approval, she rushed back into the privacy of the dressing room, her heart pounding in her chest.\n\n\"Old biddies!\" she said to herself.\n\nFinally, she had tried on every article of clothing. Tim took the ones he liked most and purchased them while Janice dressed again. \n\nThe next stop was the exercise section where Tim made Janice purchase several pair of skin-tight stretch shorts and tops. He said she needed to get into shape.\n\nAs Tim and Janice walked hand in hand down the mall, he noticed that all the men who passed them would look at Janice's bouncing breasts. He could feel her tense beside him when one would stare for too long. Yet, there was nothing she could do to stop the staring. There were several men who seemed to pass by more than once. It almost seemed to Tim as if Janice was walking taller, with her chest thrust out. Tim smiled with pride. \n\n\"Yes, this should do,\" Tim said almost to himself as he stopped in front of a shoe store. Then he turned to Janice. \"I want you to go in and pick out three or four pair of four -inch high heels. They can be any color;, you decide.\"\n\n\"Aren't you coming in?\" she asked.\n\n\"No, I'll wait out here.\"\n\nJanice thought that was strange but walked into the shoe store and began to look around. As she stood looking at a pair of shoes, a young man came up to her and asked if he could help. She looked around for a female clerk but saw none. Suddenly it dawned on Janice. There were two young men in the store and she was going to have to be waited on by one of them. Her heart started to pound as she realized that when she sat down there would be no way that she could prevent the young man from looking up her skirt. When Janice turned to look for Tim, she saw him standing outside looking through the window with a smile on his face. ",
        "\"Ma'am, may I help you?\" the young man asked again.\n\n\"Uh... I'm sorry, uh... I would like to see these shoes in various colors,\" Janice said nervously, pointing to a pair of stiletto heels. \"Size 8 medium, I think.\"\n\n\"Have a seat right over there. Let's get a measurement first,\" the young man said with a bright smile. The clerk led Janice over to a chair and had her sit down. He knelt at her feet, fiddling with the measuring device.\n\nJanice could feel her face turning red as she saw the young man's eyes on her very exposed thighs. He was so young, maybe just out of high school or - God forbid! - still in high school. She looked away, unable to watch as the clerk sat on a low stool and reached for her foot. Then he lifted her leg in order to get her foot situated in the measuring device. She could feel her thighs separating and knew that he could see far up her thighs.\n\nThe young man had seen plenty of women come in with short skirts on. He and his partner would fight over which one of them would wait on the best-looking women. It was his turn. He was delighted when he saw this older woman come into the store. From the angle that he was sitting now, he had a fairly clear view up her skirt. She wasn't wearing nylons and it almost looked like she wasn't wearing any panties either. \n\nThe clerk took an inordinately long time to get the proper measurements. He even took the other foot and measured it saying that everybody had one foot that was smaller than the other. His eyes were rarely on the measuring device though. Subtly, he tried to maneuver her legs to get a better view. \n\nHowever, Janice wasn't going to make it easy for him. She continually pulled her skirt down and shifted to protect her modesty. It was a losing battle. \n\nFinally, when the young clerk could delay it no more, he got up, excused himself, and went over toward the stock room to get several pair of shoes.\n\n\"Hey, Ron,\" he whispered excitedly as he passed his partner. \"We have a hot one over there. I don't think she has any panties on. And I know she isn't wearing a bra. God, you should see those nipples!\"\n\n\"No kidding?\" the other clerk said excitedly. \"Can I help?\" \n\n\"She's mine,\" he said smugly. \n\n\"Come on man! I let you work with one of mine,\" the other boy pleaded.\n\n\"All right, if you loan me ten bucks until payday, you can bring a couple of pairs out.\"\n\n\"No problem,\" the other boy smiled, pulling a ten-dollar bill from his wallet and following his friend into the stock room.\n\nThe clerk hurried back to Janice with a stack of boxes of shoes. \"I wasn't sure which style you would like, so I brought a couple in each color.\"\n\nJanice tried to concentrate on getting a pair of shoes that fit but it was nearly impossible. In spite of her embarrassment, she could feel herself getting excited. She tried vainly to keep her legs together as the young boy moved her feet carelessly around again, pretending to have trouble fitting her foot into the shoes. Finally, she sighed in resignation and decided that if Tim wanted her to act like a slut that's what she would do. She looked one last time at Tim through the window. She gave him a tight-lipped frown and thought briefly about sticking her tongue out at him. Then she turned back to the young man sitting on the low stool in front of her.\n\nHer heart was pounding in her chest when she lifted her leg, setting her foot on the chair to buckle a strap around her ankle. This caused her skirt to slide up her leg. One thigh slipped away from the other in the process. If the young man had any doubt that she was wearing no underwear, it had been removed. Janice saw his eyes staring directly at her exposed crotch. She suppressed a moan when she felt her large sex lips pulse and juice begin to trickle out. \n\nIt became almost comical watching the two young men scurry around, bringing her shoe after shoe. By the time she had purchased three pair, both young men had tents in their pants and Janice was worried that she was going to leave a stain on the back of her skirt. She walked up to the counter and gave the boy her credit card with a smile. She saw his face blush when she looked him in the eyes. When he handed her the card back she said, \"Thank you, young man. You were very helpful.\"\n\n\"Uh... uh... you're welcome,\" he stuttered.\n\nWhen Janice walked out of the store with her shoes in a bag, Tim was standing there with a wide grin on his face. \"Was that fun for you?\" she asked, trying unsuccessfully to act angry.\n\n\"Yes, it was. Now we have one last stop at the lingerie store.\"\n\nJanice moaned and walked with Tim down the mall. She could feel her thighs sticking together as her juice still trickled from her swollen lips.\n\n\"Hi, Tim,\" an attractive woman said in greeting as the two walked into the store. Then she hugged him in a familiar fashion and kissed him briefly on the lips.\n\n\"Hi, Felicia,\" Tim said, returning the hug. \"Felicia Raymond, this is my wife, Janice,\" Tim said turning to introduce his wife.\n\n\"Hi, Janice,\" Felicia said with a bright smile. \n\n\"Hello,\" Janice said in a less than friendly tone. She wondered how Tim knew this strikingly beautiful older woman. Suddenly she felt a little twinge of jealousy.\n\nIt was easy for Tim to see the look of concern on Janice's face. \"Felicia and I go back a long way together. I worked with her when she left her ad agency. She is going to help us pick out some nice sexy outfits for you.\"\n\nJanice looked at Felicia in surprise. She didn't need any help picking out underwear. Tim acted like this had all been prearranged she thought.\n\nFelicia smiled at Tim. She was surprised by his call yesterday but readily agreed to go along with his plan to make his married life a little more exciting. Felicia would do anything for Tim because he was more than a friend. She owed him... she owed him big. When she was in her thirties, everybody thought she was washed up. Though she was still beautiful, no one wanted a model in her thirties. Tim took her into his agency and got her work that made her enough money to be comfortable for the rest of her life. She and Tim had never been intimate but she would have done anything he wanted. \n\nFelicia was a divorced woman in her early forties. She had taken some of the money she had made working for Tim's agency and bought the store. While she didn't really need the money, the store kept her busy and gave her the opportunity to stay involved with the modeling business. In fact, she had been instrumental in starting several young ladies in the business. When she looked at Janice she mused that she was pretty enough to be a model herself. \n\nFelicia still had a classy look and moved like the model she had been. She was tall with black hair and penetrating blue eyes. Her body was still in great shape and she had even avoided the surgeon's knife, unlike so many of her friends. \n\n\"Come with me,\" Felicia said, taking Janice's hand and led her toward the back of the store. \"Sandy, take the counter for me,\" Felicia said to a young woman who was straightening up clothes.\n\n\"Certainly, Ms. Raymond,\" the woman replied and hurried to the front. \n\nJanice saw that there were a number of sexy outfits hanging on a bar in the dressing room area and some lying on a table. \n\n\"Jim tells me you are about my size but I can see that you have a much larger chest,\" Felicia said with an indulgent smile at Tim. \n\nJanice blushed when she saw the woman look directly at her almost see-through blouse. She knew that her nipples were still hard and plainly visible through the thin material. \n\n\"Men!\" Felicia said with a little smile as she sized up Janice's full breasts under the thin blouse. \"I'm sure I have some sexy bras that will fit you. Try this corset on while I go and get larger- sized bras,\" Felicia said, handing her an outfit on a hanger.\n\nJanice stepped behind the curtain and took off her blouse and skirt, leaving her naked but for her heels and nylons. She picked up the first piece of clothing. She looked at the tiny piece of material in her hand. It was skimpy waist cincher that had garter straps hanging from the bottom. Before Janice could put it on, the curtain opened and Felicia walked in. Janice jumped and pulled the little piece of material over her body. It was much too small to cover her nakedness.\n\n\"Here are some larger bras. The material is soft but under-wired to help support you when you are wearing a low- cut outfit,\" Felicia said, smiling at Janice's embarrassment. She appraised the naked woman in front of her. She looks even better with her clothes off, Felicia thought as her eyes ran up and down the younger woman's body. \"Don't worry, sweetie, I've been in the modeling business for a lot of years and I have seen more naked women then you can count.\" Felicia reached out and pulled the waist cincher from Janice's hand. \n\nJanice stood naked and in shock, as Felicia then wrapped the little piece of clothing around her waist and snapped it up the back. It had cup areas where the breasts would be supported, but her upper breasts and nipples were left bare. It squeezed her waist in, emphasizing her hips and bust. When worn under clothes, it would look like she was braless. \n\nFelicia moved around Janice, touching her body here and there making sure the outfit was comfortable. She put her fingers under the sides, checking for fit. She even lifted the cups under Janice's breasts insuring it was the correct size. \n\nJanet stood tensely as this attractive woman touched her body in places that not even her doctor dared touch. \n\n\"There, that looks very sexy,\" she said and pushed the curtain slightly aside and motioned to Tim.\n\nTim looked into the dressing room at his mortified wife. \"Wow, that looks great. We'll take it,\" Tim said excitedly.\n\n\"All right, calm down, boy. We have a lot more to try on. I'll call you when we need you.\" Felicia closed the curtain. \n\nFor over an hour, Felicia helped Janice try on outfit after outfit. With each piece of clothes, Felicia took more and more liberties with Janice. Janice, for her part, felt helpless. No matter how hard she tried to hate what was happening, her body betrayed her. She could feel herself quivering inside. Her heart was racing when she saw Felicia kneel in front of her to clip a pair of nylons to the garter around her waist. She was embarrassed when she realized that Felicia's face just inches from her swollen crotch. Janice was afraid to look down for she knew that her large inner lips were swollen and protruding from between the outer lips. She could even smell her own excitement so she knew that Felicia could smell it as well. \n\n\"Oh my,\" Felicia said when she looked at Janice's crotch. Her thighs were literally covered in a clear juice. It hung in silvery strings from her pubic hair and the swollen inner lips. \"Excuse me just a second.\" Felicia left the dressing room and returned a minute later with several Kleenex tissues. \n\nJanice stood paralyzed with fear as Felicia again knelt and pushed her legs apart. She used the Kleenex to gently wipe her glistening thighs. It seemed that she spent more time than was necessary wiping up the juice. Little shivers rippled through Janice's body as she felt the breath of the woman on her upper legs. When she looked down, she could only see the top of the woman's head, but she could tell that her eyes were staring at her vagina. For a second she thought that she was going to lean forward and kiss her. \n\n\"I've never seen lips that large before,\" Felicia whispered almost to herself.\n\nThen Janice saw one of Felicia's fingers slide up her thigh. \"Oh God,\" she moaned as she felt the finger slide across her thigh. Slowly it moved upward until it touched her swollen lips. The finger slid between the lips and across the swollen clit. Suddenly, and incredibly, Janice felt a climax run down her body. She felt like she might collapse as her hands reached out and grasped the older woman's shoulders for support. \"Ohhhhh!!! Oh Jesus,\" she whimpered as her body shook with illicit pleasure. \n\nFelicia stood up, placing her hands on Janice's hips to steady her. The older woman was breathing heavily as well now. She looked into Janice's surprised face. \"I think we have enough clothes for you today,\" she said breathlessly, pulling her naked body to her. \n\nJanice was staring right into the classy woman's eyes, her breasts flattened against the Felicia's cloth-covered chest of Felicia. Again, she felt like Felicia was going to kiss her. This time she was right. Her eyes opened wide in shock as Felicia moved her lips to hers for a wet kiss. Janice stood tensely as the older woman's mouth opened and her tongue pushed on her own closed lips. The probing tongue was insistent and forced itself into her mouth. Janice moaned in spite of herself when she tasted the woman's sweet saliva. \n\nFelicia pulled away from her naked friend. \"Tim is a lucky man and you are a very sexy woman,\" Felicia said and touched Janice's face gently with her hand. \"Maybe I'll see you again, sweetie.\"\n\nJanice was speechless. She never remembered feeling attracted to a woman before. Yet, as she stared into her eyes, she almost felt drawn to kiss her back. With all her will, she restrained herself and pulled away. She saw a little disappointment in Felicia's eyes. \"Uh... thank you... you were a big help,\" Janice quickly added, her face turning red at the thought of what she was really thanking her for.\n\nFelicia's face brightened. \"You're welcome. , Anytime.\" \n\nTim almost had to carry Janice from the mall that afternoon. Her legs felt like rubber. The entire experience had almost been too much for her.\n\nAs soon as Tim and Janice left the store, Felicia went over to her assistant. \"Sandy, put a sign on the door that we are out to dinner and then come back in the back room.\"\n\nSandy's face broke into a wide grin. \"Yes, ma'am,\" she said and hurried to put the sign in the window. Felicia was already naked when Sandy walked into the back of the store.\n\nChapter 4\n\nTim made Janice a strong drink when they arrived home. He left her sitting on the bed and went into the bathroom. A short time later he came out and pulled Janice from the bed. She was like a rag doll as he stripped her clothes off and led her into the bathroom. \n\nThe bathroom was lit in the glow of a dozen fragrant candles. The large Jacuzzi tub was filled with a steaming bubble bath. \n\nJanice stepped into the steaming water and settled down with a moan of pleasure. Tim handed her another drink, then leaned over the tub, and gently began to bath her. At one point he looked at her face and smiled. \"I love you,\" he whispered and kissed her lips gently. \n\nWhen he was finished washing her, Tim left, letting Janice soak for a long time before he came back in and pulled her to her feet. He took a soft fluffy towel and dried her but didn't let her get out of the tub.\n\nJanice saw that he had brought with him a pair of scissors, a razor, and shaving cream. She looked at him quizzically as he placed them on a towel on the side of the tub. She felt a sinking feeling as he picked up the scissors and began to trim her pubic hair. When he had it very short, he lathered her up and used the razor to remove all of her pubic hair. Then he rinsed her with a gentle spray of warm water and patted her dry.\n\n\"Beautiful,\" Tim said to himself as he looked at his handiwork. \n\nTim took Janice's hand and began to lead her out of the bathroom. When he felt her stop, he turned to look at her. He saw that she was staring into the mirror at her smoothly shaven pubic mound. \n\nGod, I almost look obscene, she thought as she looked at her large protruding inner lips hanging from her hairless pubic area. She had never really noticed how incredible large they were. She knew that they got even larger when she was excited. Then she felt a tug on her hand and followed Tim into the bedroom.\n\n\"Get on the bed on your back,\" Tim ordered.\n\nShe looked at him like she didn't understand. \n\n\"Come on, get on the bed.\"\n\nJanice climbed onto the bed and laid on her back in the middle. She was shocked when Tim began to tie her hands to the bedpost above her head. \"Tim, what are you doing?\" she asked, frightened.\n\n\"Shhhhh!\" Tim whispered, as he finished tying her hands then went to her feet. He pulled her legs apart and tied each leg to a bedpost. When he had her spread and helpless on the bed, he stood back and stripped off his clothes. Then he crawled onto the bed, between his wife's legs, on his hands and knees. He looked up at her and said, \"You never seemed to have really liked it when I have eaten you before. I'm going to eat you this time for my own pleasure. I hope you enjoy it as well.\"\n\n\"Tim, no, oh God!,\" Janice exclaimed as she watched Tim bend his head. It's dirty! her mind screamed. \n\nTim kissed slowly up her thighs, taking time to touch every inch of her soft inner thigh. He could feel her legs tremble as he neared her vagina. However, when he got close, he moved back - all the way to her knee. He kissed down her calf to her ankle until finally he reached her toes. \n\nJanice watched as Tim opened his mouth and took her big toe inside. She felt a chill run down her spine. It tickled, yet suddenly her vagina began to throb. She would have never believed that having her toe sucked could be sensual. Yet, she could feel her sex lips begin to swell as Tim sucked first one toe then another until ever toe was wet with his saliva. His tongue moved between each toe, sliding in and out slowly, sensuously. Then he moved to the other foot, kissed, and licked it until he felt Janice quivering. Finally, he began to kiss up her legs again, stopping to lick the sensitive areas around her knee.\n\nNow Tim could feel Janice begin to squirm, pulling unconsciously against her bonds. He smiled to himself as he neared her vagina again. He could smell her excitement and he could see that her lips were now swollen. There was a clear liquid running from her hole. Her beautiful, smoothly shaven vagina excited him beyond reason. He was shaking as he settled between her legs. Tim stuck out his tongue and gentle licked Janice's swollen lips.\n\n\"Ohhhhhhhh!!!\" Janice moaned.\n\nTim used his fingers to pry the outer lips open, leaving the inner lips exposed. He stared at the wrinkled flesh for a long time. Finally, he gently blew warm air on the sensitive skin and watched it quiver.\n\n\"Oh God, Tim!,\" Janice pleaded, pulling on her bonds. \n\nTim looked up at her lust- filled eyes. He stuck out his tongue and touched the swollen clit with the tip of his tongue.\n\n\"Ahhhhhh!!!\" Janice moaned and threw her head back, her fists closed tightly.\n\nThen he flicked his tongue rapidly on the quivering nub. Janice began to shake like she having a seizure, her arm's and leg's pulling at her bonds. \"Ohhhhhhh Godddddd!!!!\"\n\n\"Ohhhhhhh Godddddd!!!!\"\n\nTim opened his mouth and sucked the swollen lips inside. His mouth was practically filled with her sweet flesh. Tim moaned deep in his throat at the taste of his wife's vagina. He knew that he would never be denied this pleasure again. \n\n\"Oh my God! Oh my God!,\" Janice screamed, pulling violently against the bonds holding her arms and legs. Suddenly, it felt like her body might go into convulsions. Every muscle was stretched like a rubber band. Her hips lifted off the bed. \n\nTim grabbed her hips, holding them down and began to suck her swollen vagina like a madman, ignoring her screams. \n\nFireworks were going off in Janice's head, causing bright flashes of light behind her tightly closed eyes. She had never felt anything like it in her life. Shock waves emanated from her groin and ran up and down her body. \"Tim, Tim, ohhhhhh God, Tim,\" she breathed as the most incredible climax of her life rolled through her. \n\nTim continued to eat his wife long after her shuddering stopped. He was lost in his own world until he heard her moans change. He realized that she was becoming sensitive. When he pulled away and looked up at her, he saw that her eyes were closed and there were tears rolling down her cheeks. Suddenly concerned, he untied her hands and feet, crawled in bed next to her and pulled her into his arms. \"Is everything okay?\" he asked, clearly worried. ",
        "\"Everything is wonderful,\" she whispered, her voice heavy with emotion.\n\nTim was relieved when he saw a smile come through the tears. The hardness of his penis had diminished some when he thought he had gone too far. However, as soon as their lips met, he was rock hard again.\n\n\"Thank you, thank you. That was... That was... incredible. I never knew what I was missing,\" Janice said sincerely. \"Where did you learn that stuff?\"\n\n\"I read a lot,\" Tim said, his face turning red at the admission. \n\nJanice looked at him, searching his eyes for the truth. It was there. \"Do you... do you... uh... want me to you know... do the same to you?\" she struggled to say.\n\n\"Not tonight. Right now I want to be inside you,\" Tim replied, almost embarrassed again.\n\nJanice smiled and lifted her leg and placed it over Tim's hip, her breast pressed to his chest. She reached down and grasped his hard penis and felt it pulse in her hand. She was almost surprised at the size. It somehow seemed larger, almost like she was feeling him for the first time. She heard him moan as she brought the swollen head to her still sensitive lips. First she rubbed it up and down her slit, letting her fat, blood filled inner lips massage the head. Then she placed it at the opening of her hole, grabbed his hips, and pulled him slowly into her, humping her hips at the same time.\n\n\"Oh Jesus,\" Tim moaned as he felt his wife's warm tunnel caresses his flesh, taking him deep inside. Tim began to slowly move in and out, trying to control his excitement. \"Oh God, baby, I'm not going to last very long,\" he said with regret.\n\n\"It's okay. I want you to cum in me. I want everything that you've been saving for me all day. I want to sleep all night with your sweet sperm inside me. I love you Tim.\" Janice kissed Tim's lips, forcing her tongue deep into his mouth.\n\nTim moaned deep into his wife's mouth as his penis jerked inside her body. It was his turn for fireworks to go off in his head as his pent- up excitement and love released itself into his wife's loving body.\n\nJanice could feel her husband's sperm filling her. She felt closer to him then she had ever felt before. \n\nThey fell asleep in each other's arms, Tim's penis gradually losing its firmness and slipping from her body, followed by a trail of his sperm. \n\nChapter 5\n\n\"Wake up, sleepyhead,\" Tim said as he walked into the bedroom with a tray of food.\n\nJanice opened her eyes slowly then smiled as she remembered last night. \"Good morning, sweetheart,\" she said as she set up in bed and stretched. \"What's this? , Breakfast in bed? Did I die and go to heaven?\" she joked.\n\n\"Nope, I just wanted to make sure that you had plenty of strength for today.\"\n\nJanice looked at Tim with a worried look. \"What's going to happen today that I need my strength?\" she asked as she watched Tim sit a tray with cereal, toast, orange juice, and coffee on her lap.\n\n\"Well, we are going to go to the gym. I think you are a little out of shape,\" he said with a smile. \"Then I'm taking you to dinner at a nice restaurant. I have a little surprise for you that will make our dinner very interesting.\"\n\n\"What kind of surprise?\" Janice asked with dread in her voice as she slowly began to eat.\n\n\"You'll find out. That's all I'll tell you for now.\"\n\nJanice moaned as a shiver raced through her. \"Tim, yesterday was wonderful but I don't know about the other stuff.\"\n\n\"Well, you know the safe word. If you say it three times, we will stop everything,\" Jim said with a frown.\n\nJanice was quiet for a long time, thinking as she ate. She couldn't deny that yesterday and last night was the most exciting time of her life, even more exciting than her wedding night. She wasn't about to use the safe word for this. \"No, I don't want to use the safe word,\" she stated emphatically. \n\nTim sighed with relief. He was so excited about the week ahead that he could hardly wait. Yet, he knew that he had to be calm and take his time. If he made a critical mistake, it could all be over with and that could be a serious blow to their relationship.\n\nWhen Janice finished breakfast and got out of bed, she realized that she needed another shower. She had dried cum all over her legs and her vagina. She took a long shower then dried herself and used a scented cream on her body. When she lifted one leg to the vanity to smooth cream on the back of her thigh, she almost gasped. She saw her vagina almost obscenely exposed, the large lips dangling between her smooth outer lips. With trembling fingers she opened herself, exposing her little clit and already wet hole. The little nub was still swollen some. It was smooth and almost looked like a miniature penis. When she touched the bump of flesh, it quivered and she moaned. It was still sensitive from the previous night. Then she slid a finger into her hole. Another gasp escaped her lips and her hips began to move. With great will power, she pulled her finger out. It was shinny with juice. On impulse she brought the finger to her mouth and sucked it clean. Her finger tasted like her, yet there was something more. Suddenly she remembered that she probably had some of Tim's sperm left inside her. An excited shiver raced through her as she moved her fingers back to her vagina. This time she slid two inside and worked them around. When she pulled them out, they were slick with juice. Again, she brought the fingers to her mouth and one at a time she sucked them clean. \n\nJanice spent a long time exploring herself like she should have done as a little girl. Unfortunately, she had been taught that it was dirty. Finally, she concluded that there was nothing dirty about her sexual parts. In fact, she liked the way she looked. \n\nWhen she finally came out of the bathroom, she saw that Tim had laid out a pair of exercise shorts and top. Just as she picked up the shorts, Tim came in carrying her exercise suit and wearing his own exercise outfit.\n\n\"Come on, sweetie, we have to get moving.\"\n\nJanice started to get a pair of panties from the dresser.\n\n\"No panties!\" Tim said, sitting on the bed to watch her dress.\n\nJanice looked at Tim and gave him an indulgent smile. She put her feet into the shorts and pulled them up her thighs. She immediately realized that these shorts were very, very tight. By the time she had them around her waist, she knew that there had to be a mistake. \"These shorts are too small. They must have made a mistake at the store.\"\n\n\"No, they didn't. I got them two sizes smaller,\" Jim smiled lecherously. \n\n\"God, I can't wear these,\" she said as she walked over to the full-length mirror on the back of the door. She gasped when she saw that the skintight gray cotton shorts revealed her vagina in an obscene manner. The seam of the shorts ran directly between her lips, separating them and emphasizing their size. The only good thing was that the shorts had an absorbent pad in the crotch. However, the pad only served to further separate and stimulate the lips of her vagina. \n\nTim watched from the bed as Janice looked at herself in the mirror with shock on her face. He loved the shorts. From the rear, they shaped and outlined her ass to perfection. He could even see the little dimple she had on her right cheek. The seam in the rear separated her ass cheeks, emphasizing their firmness beautifully.\n\n\"Tim, I'll be arrested if I walk out of the house in these,\" she pleaded. \n\n\"That's why I have an exercise suit for you. Now, come on. , Put your top and shoes on and let's get going,\" Tim ordered.\n\nJanice sighed in resignation and pulled the sport top over her head. It was not a surprise to her that the matching top was just as tight. It shaped her breasts like the shorts shaped her ass. Her nipples could be seen without them even being hard. Even the bumps on the areola could be plainly seen. The top came just below her breasts, leaving a long expanse of her stomach bare.\n\nTim and Janice drove silently to the gym. They were both excited, but in a different way. Tim was excited that he was going to expose his wife to all the lecherous men. Janice was excited as well, but she was also worried. She hadn't been to the gym in a long time. However, there still could be someone there that she knew there. That thought worried her and made her heart beat rapidly.\n\nThe gym was a large facility on the outskirts of town. It had a very large room that was mirrored all around with treadmills, exercise bikes, step machines and other aerobic equipment. There were several physical trainers available for a fee. There was also a swimming pool, sauna, juice bar, and every piece of weight equipment made. The facility was always packed with people. However, it seemed to Janice that most of the people there didn't need a gym because they were already in great shape. It was a great place to show off. \n\nTim and Janice walked into the gym and found a couple of treadmills together. Tim began his warm-up exercises and watched Janice begin hers. When he was sufficiently warm, Tim slipped off his sweat suit and got on the treadmill. He watched as Janice continued to warm up, delaying the inevitable.\n\n\"Come on, Janice,\" Tim coaxed.\n\nJanice knew that she couldn't delay it forever so she slowly slipped off her pants and top. She looked around and saw that no one was looking her way yet. She adjusted the treadmill and began to walk at a rapid pace. It only took her a few seconds to realize that she was in trouble. The seam of the tight shorts was moving back and forth between her sex lips. Within seconds, every step began to send a little sexual shock through her groin.\n\nTim smiled as he watched Janice begin to run. He could see the look on her face and knew exactly what she was feeling. He congratulated himself on being so diabolical.\n\nWithin ten minutes, Janice was struggling to remain calm. Her heart was beating rapidly but not just from the exercise. She wasn't sure how long she could stand the rubbing between her legs. God she thought, she could even feel the seam rubbing on her little rear hole. It was a sawing motion, moving from back to front with each stride. \n\nSoon, Janice's face was red and dripping sweat. She could feel her heart beating in her temples. Suddenly, she looked in the mirror in front of her and saw several guys standing behind her, pretending to talk. However, she knew that they were looking at her ass. An unwanted thrill raced through her, adding juice to her already sodden crotch. Suddenly, her legs started to quiver and she grasped the support bars in her hands. No matter how she fought it, her body betrayed her. She quickly moved her feet to the side of the moving treadmill as her vagina started to quiver and her legs shook. Her head bent forward and she gripped the bars until her knuckles turned white as ripples of pleasure coursed through her.\n\nTim looked over and saw Janice leaning forward, no longer running, her body quivering. He knew what was happening; Janice was climaxing right in the middle of the public gym. He had been successful beyond his wildest dream.\n\nThe two men behind Janice were not paying attention to her face; they were staring at her ass as she bent forward.\n\nJanice couldn't believe what had just happened to her. She had never had a climax that fast or that easily. Her legs were still shaking as she got back on the treadmill. She reduced the speed until it was only at a fast walk. Even then, she could still feel the seam rubbing her now very sensitive vagina. She fought her rising excitement again. It was the longest half-hour she had ever spent on a treadmill.\n\nTim came over to Janice when he was finished on the treadmills. \"I have arranged for a little lesson for you with Steve Jackson on the weights,\" he said.\n\n\"Oh God,\" Janice groaned, as she wiped her sweat covered face and then wrapped the towel around her waist to cover her shorts.\n\nTim led Janice over to the weight exercise area. There he introduced Janice to a good looking and very fit young man. He was in his mid twenties with a gymnast's body. His upper body, under his tight shirt, rippled with muscles. He had on a pair of jogging shorts, exposing most of his muscled legs. \n\n\"I'll leave you in Steve's very capable hands dear. I'm going to get a fruit drink at the bar.\"\n\nJanice stood in front of Steve, holding her towel at her waist to cover up her obscene shorts. However, she could see his eyes staring at her very hard nipples.\n\n\"Okay, Mrs. Harwick, we'll start out with the free weights. Have a seat here and lean back. Have you used weights before?\" the young man asked, smiling as he watched Janice pull the towel from her waist.\n\n\"Uh... yes I have,\" Janice said as she lay back under the barbell. Her face flushed at the thought of the view she was giving the young man. In this position, her legs were spread and her lower half was exposed to anyone that wanted to see her. She could already feel Steve's eyes on her groin. She even thought she heard an intake of breath on his part. \n\nSteve put Janice through an exercise routine that was designed for someone that had not exercised for a while. He had her lift with her arms, her legs and even had her on her stomach, letting her lift with the back of her lower legs. In that position, her ass was on display to the steady stream of men that seemed to need to pass by.\n\nAt one point Steve stood over Janice's prone body, straddling her chest to support the barbell she was attempting to lift. Janice had to gasp when she realized that she could look directly up his short leg. My God, she thought, he doesn't have any underwear on. She could see his half hard erection up the leg of his shorts. A little whimper escaped her lips as she felt her vagina quiver with renewed excitement. \n\nJanice was relieved when the lesson was finally over. Even with the pad in her shorts, she could feel her juice soaking through. \n\nSteve handed Janice a business card. She looked at the card and saw that he was a certified fitness trainer and licensed masseuse. It also showed that he gave private lessons and massages in the home.\n\nChapter 6\n\nTim was waiting for Janice when she came out of the bathroom after her shower. \"I have a reservation at seven at Gerardo's. I've laid out everything you will need to wear. However, when you're dressed, I have one little addition.\"\n\nJanice looked at him suspiciously as she put on the pretty summer dress. The dress was bright yellow and made of a thin cotton material. It was short as usual but this time it was also low cut with little spaghetti straps holding the material covering her bare breasts. She knew that she would have to be careful when she bent over or one or both breasts would fall out. She was surprised when she saw that there was a pair of panties lying on the bed with her dress and thigh high nylons. When she was dressed, she put on a pair of the four-inch high heels that she had purchased yesterday. \n\nTim whistled when he saw the total package. \"You look gorgeous, sweetie,\" he said sincerely.\n\nJanice spun around in front of the mirror. I do look pretty good, she thought. Her nice tan went well with the yellow color of the dress. The impossibly high heels emphasized her calf and thigh muscles.\n\n\"Now, I have a little addition to your outfit.\" He held up a small, penis shaped, rubber vibrator. It was flesh colored and looked to be about five inches long. In Tim's other hand was a remote control device.\n\n\"What is that?\" Janice asked, already knowing the answer.\n\n\"Pull your dress up for a second.\"\n\nJanice shook her head in amazement and then pulled her dress up to reveal her little cotton panties. She watched as Tim pulled her panties to her thighs. A moan escaped her lips when he slowly slipped the fake penis into her vagina. \"Tim,\" she moaned when the rubber penis was all the way inside her.\n\nTim quickly pulled the panties up, securing the base of the device inside her body. \"Now let's test it.\" Tim turned on the vibrator.\n\n\"Ohhhh!\" Janice gasped as the penis vibrated inside her. She could feel her entire pubic area vibrate, especially her rapidly swelling clit.\n\nTim turned the knob to the second notch. \n\n\"Tim,\" Janice pleaded as she felt the movement inside her increase.\n\n\"One more.\" The control device was moved to the third notch.\n\n\"Oh God, Tim! Stop it, please.\"\n\nTim smiled, leaving the device on for a few more seconds. He watched his wife begin to quiver in excitement. Mercifully, he finally turned the device off. \"That should do it.\" He smiled and took his wife's shaking hand and led her down the stairs.\n\nTim felt proud of his creativity. All his years in the creative side of the ad business had paid off, he thought with a smile on his face. He had purchased the device at a local porn shop. It was a little expensive because it was cordless, but worth every penny. The battery-operated remote worked from about ten feet away so he could turn it on and off anytime he wanted. Tim was going to have fun tonight.\n\nJanice could feel the fake penis moving inside her with every step that she took as she walked to the car. She gave Tim a dirty look as she sat carefully on the seat and slid into the car. A little groan escaped her lips as her weight forced the penis deeper into her. She squirmed on the seat until she found a place where she could sit comfortably. It wasn't exactly lady like, as she had to scoot forward and open her legs. \n\nTim hurried around the car and got into the driver's seat. After he had started the car, he paused and took the device out of his pocket. He smiled evilly at Janice and turned the knob.\n\nJanice closed her eyes and squeezed her thighs together as a little moan escaped her lips. \n\n\"Still works,\" Tim said and turned the device off.\n\nTim and Janice sat quietly as they drove to the restaurant. When they stopped at a light about a block from the restaurant, Tim turned the vibrator on again. \n\n\"Tim, please,\" Janice pleaded, her hips squirming.\n\n\"I'm going to leave it on until the light changes,\" Tim said in a matter -off -fact tone.\n\n\"Oh God,\" Janice moaned as she stared at the red light as if that would make it change quicker. However, it was a long light, lasting several minutes. Within a few seconds, Janice was breathing heavily and she could feel her panties getting soaked. Her buttocks began to lift subtly off the seat. \"Tim,\" Janice moaned, clenching her fists.\n\nTim watched his wife with a big smile on his face. His only concern was that she would climax before he was ready. He didn't want that to happen. It was his intention to tease her until she was wild with passion. Then he was going make love to her. Or better yet, he was going to FUCK her. \n\nFortunately for Janice, the light changed and Tim turned off the device before she lost control. She let out her breath and sighed with relief and frustration.\n\nTim held Janice's hand as they were led to an intimate table in a corner of the restaurant. He could feel her squeezing his hand with each step. He knew that the fake penis was moving inside her.\n\nTim held the chair for Janice as she sat carefully. She frowned at him, her lips pursed. Tim just smiled back and moved over to his chair and sat down, placing the control device on the table next to his silverware. After the waitress had taken their drink order, Tim picked up the device, holding it idly in his hand.\n\nJanice watched her husband wearily as he fingered the device. When the waitress came back and sat the drinks on the table, Janice saw Tim move the device under the table. Immediately she felt the vibrations begin again and tried to suppress a moan. \n\nThe waitress heard her gasp and said, \"Is everything okay, Miss.?\" \n\n\"Uh... uh... yes, everything is fine,\" Janice stuttered. \n\n\"What's that noise?\" the waitress asked when she heard a low humming sound.\n\nJanice's face turned beet red when she realized that the end of the vibrator was touching the wooden chair under her. ",
        "Tim turned the device off quickly. \"I didn't hear anything,\" Tim said, suppressing a laugh.\n\n\"I thought for sure I heard a noise. Oh well, my hearing isn't what it used to be. Are you ready to order?\"\n\n\"Just a moment more,\" Tim said.\n\n\"When the waitress had left Janice looked at Tim and said, \"Tim, this thing is driving me crazy.\"\n\n\"You know the safe word,\" he said, confident that she wouldn't use it for this. \n\nJanice grew quiet, squirming in her chair again.\n\nThroughout the dinner, Tim would turn the vibrator on and off. By the time they were ready to leave, Janice's panties were soaked and she had been on the verge of climax too many times to count.\n\nIt was dark outside when they walked to the car. Tim held Janice around the waist because she was having trouble walking. When they reached the car, Tim turned Janice to him and pressed her to the door. He brought his lips to hers for a passionate kiss. \n\n\"God, Tim, I'm so hot,\" Janice whimpered as she pressed her hips into him.\n\n\"So am I, sweetie,\" Tim answered and brought his hands to the hem of her dress and began to slide it up her legs. By the time Janice realized what was happening, Tim had the hem almost to her waist.\n\n\"Tim, stop, not here,\" she protested. She felt incredibly exposed standing in a public parking lot with her dress around her waist, leaving her with just her panties holding the bulging penis inside her. Then she gasped as she felt Tim pulled her panties down her legs. In a panic she looked around and saw that the parking lot was deserted. \"What are you doing?\" she whispered tensely. \n\n\"I'm going to replace the fake cock with a real one,\" Tim said and pulled the fake penis from her very swollen vagina. It almost seemed that the hole didn't want to let go. There was a sucking sound as the rubber left her body. \"My, my,\" Tim exclaimed when he saw the dripping rubber penis he held in his hand. Janice moaned as her stretched vagina closed. The rubber penis had been in her so long that she felt very empty now.\n\nHe put the slick penis in his pocket then reached for the tiny straps holding her dress top up.\n\n\"Tim,\" Janice whined again as his hands slid the straps off her shoulders. Janice gasped when she felt the cool night air on her now exposed breasts. The little dress was now bunched uselessly around her waist. She shivered at her total nakedness as a masochistic thrill went through her. \n\nJanice felt and heard Tim pulling his zipper down. \"God, Tim, not here!\" she protested again. However, she knew that her protests were useless when she felt Tim pull his hard penis from his pants. Then she didn't care anymore as Tim lifted one of her legs and placed his swollen gland at the opening to her dripping hole. \"Oh Godddddd!!!\" she moaned when he slowly slid into her. His penis slid in deep on the first push. \n\nTim moaned as he felt his wife warm and wet vagina surround him. He knew that he was taking a big risk that someone would see them --- maybe someone they knew. However, that was part of the thrill. He had never been so excited in his life. \n\nAny worries Tim had disappeared as he started to move slowly in and out. Soon, the movement of his hips increased until he was pounding into his wife. One of her legs was on his arm. The foot of the other leg barely touched the ground, almost lifting up with each upward push. He could feel her juice running down his penis and dripping to the ground between their feet. \n\nThe only sound in the parking lot was the sloppy sucking sound of their joined sex and their grunts of pleasure. \n\n\"Oh yes, fuck meeeee!!!\" Janice almost screamed, no longer concerned where they were. She pushed her hips down onto Tim's plunging penis as her body began to race toward climax. Janice wrapped her arms tightly around Tim's neck as her legs began to shake. \n\nTim lifted the other leg, pressing her back against the car for support. Almost all of Janice's weight was held up by Tim's penis. \n\nJanice's body tensed. \"I'm... oh yes... I'm... oh God, I'm going to cummmmmmmm.\" \n\nThe excitement of the evening was too much for Tim as well. No matter how hard he tried, he couldn't control the inevitable. \"Oh God, baby,\" Tim moaned as he felt his sperm rush up his shaft then exploded into his wife. \n\nTim and Janice clung to each other as an intense climax rushed through both of them. \n\nWhen their bodies stopped shaking, Tim pulled away and staggered backward, letting Janice's legs drop to the ground. A rush of sperm followed his penis out of his wife's stretched hole. \n\nTim suddenly remembered that they were in a public parking lot and looked around. Fortunately, the lot was still deserted. He sighed with relief then turned and kissed his wife tenderly. \"I love you.\"\n\n\"I... love... you,\" Janice answered, barely able to speak. She was physically drained and had to lean against the car door for support. Her legs were so weak that they were barely able to hold her up. She let Tim help her into the car. When he was sitting in the driver's seat, Janice snuggled into him lovingly. \n\n\"Sorry that I got carried away,\" Tim said.\n\n\"I'm not,\" Janice answered.\n\nTim smiled.\n\nChapter 7\n\nThe following morning, Tim let Janice sleep in. He was anxious for her to get up to see how she felt about last night. When she hadn't stirred by 10 am, he couldn't wait any longer. He went apprehensively into their room and gently awoke her. \"Good morning, sweetheart.\" \n\n\"Good morning,\" Janice said, rubbing her eyes then opening her arms to Tim.\n\n\"Are you recovered from last night?\" Tim asked as casually as he could.\n\n\"I'm not sure,\" she moaned in answer.\n\nUh oh, Tim thought. Then he saw her smile.\n\n\"I think my little hole is still throbbing.\"\n\nTim sighed with relief then asked, \"Did you enjoy our little escapade?\" \n\n\"As much as I hate to admit it, I have to say it was incredible.\"\n\nTim's face broke into a wide smile. \"Good! There is hope for you yet,\" Tim said with a self-conscious laugh. \n\nThey snuggled for a few more minutes then Tim said, \"Come on and get up. , We have a lot to do.\"\n\n\"What wild and crazy things do you have for me to do today?\" Janice asked with a smile.\n\nTim was heartened by her smile. \"Well, I think it's time you learned how to please a man with your mouth,\" Tim said as he pulled his wife from the bed and toward the bathroom. \n\nJanice followed reluctantly. She had known that this was going to happen. She was both looking forward to it and dreading it. The few times she had given Tim oral sex she had been drunk. In fact, she couldn't remember too much about it. It wasn't that she didn't want to do it; she knew that men loved it and had read that many women loved it as well. However, it violated all of the things she had been taught. Good girls didn't do that, they had said. In school \"those\" girls were always the sluts. What she didn't know was that most of her friends were \"those\" girls. \n\nIn the bathroom, Tim pulled Janice into the shower with him. They spent a half hour giggling and washing each other. When they were rinsed off, Tim got out and brought over the scissors and razor he had used to remove her pubic hair. She looked at him in surprise. She didn't need to be shaved again.\n\n\"It's not for you,\" he said to her unasked question. \"It's for me.\"\n\n\"What?\"\n\n\"I want you to shave me so that we will both be clean shaven,\" Tim answered with a smile.\n\nTim had Janice trim his bush then shave him the way he had done her. As she worked on him, his penis began to lengthen. Janice tried to ignore it as she maneuvered around the now stiff rod. She giggled when she tried to push the stiff shaft out of her way, but it kept bouncing back. When she was done, she looked at him and giggled again. His entire pubic area was smooth, including his balls. He would have looked like a little boy if it hadn't been for the throbbing shaft jutting out. \"You look like a little boy,\" Janice said turning her thoughts into words.\n\n\"A little boy with a big cock,\" Tim answered, thrusting his penis at his wife's surprised face. \"Now come with me. You are going to make love to this little boy's hard cock with your mouth.\"\n\nJanice's heart began to pound in her chest. All kinds of thoughts were running through her head. What if she wasn't any good? Would Tim be mad at her? What if he wanted her to drink his sperm? Could she do it? \n\n\"Come on,\" Tim said pulling a hesitant Janice by the hand.\n\nTim led Janice over to a comfortable chair in the corner of the bedroom. He sat down as she stood in front of him. Slowly he spread his legs almost obscenely. His still hard penis and smooth pubic area was now on display. \n\nJanice stood frozen, looking at her husband. \"Tim, I... I... don't know what to do.\"\n\n\"Don't worry, I'll show you,\" he whispered tenderly as he pulled her to her knees between his open legs. He took Janice's head in his hands and leaned forward, kissing her lips. \"I want you to make love to my cock, like I did to your pussy,\" he whispered into her ear. \"I've wanted this for so long.\" Then Tim sat back and looked down at his wife. \"Take it in your hand and hold it as you lick my balls.\"\n\nJanice reached up with her now- shaking hand and held her husband's hard penis. Slowly she bent her head and brought her lips to his smoothly shaven balls. Her tongue came out and she tentatively licked the wrinkly skin. She felt his balls move, squirming in their sack. She licked the skin again, up one large testicle and over to the other. She watched as the two flesh covered balls moved again. It was like they had a life of their own. She placed her tongue under one ball and lifted it with her tongue. When she heard Tim moan, she knew she was doing okay. Then she opened her mouth as wide as she could and sucked one ball inside. She heard another groan from Tim as she gently sucked. She let the ball slip out of her mouth then sucked the other one in. Janice decided that she liked this. She felt great power when she had his tender balls in her mouth. He had to have great trust in her to let her do this. \n\n\"Oh God, that feels so good, baby,\" Tim said as he watched Janice's cheeks bulge with his testicle.\n\nJanice just moaned in increased excitement.\n\nWhen both testicles were dripping with her saliva, Janice sat back and watched his penis throb in excitement. She felt proud that she had made that happen. Without being told, she pulled his penis down until it was pointed straight at her mouth. She looked at the swollen head. She studied the mushroom crown and marveled at how the skin was stretched taut, almost shining. As a large drop of clear liquid bubbled out, Janice impulsive stuck out her tongue and licked it off, surprising even herself. The sweet flavor of his pre-cum juice filled her mouth. That's not bad, she thought and squeezed him again, forcing a larger drop out. She licked that up as well. \n\n\"Oh God, suck me,\" Tim said in excitement.\n\nJanice smiled, now feeling heady with the power she had. She stuck out her tongue and licked around the head, teasing the sensitive skin below the crown, tasting his flesh but avoiding taking the head inside. Then she held his penis up and used little butterfly licks to move up and down his penis. She vaguely heard Tim moaning but she was so engrossed in what she was doing it didn't register. She moved her tongue all around his penis and balls until his entire groin was dripping with her saliva. \n\n\"God please, baby, suck me,\" Tim pleaded in frustration. When he tried to grab her head, she pulled away, smiling smugly at him. This iswas fun, she thought. It gave her such a feeling of power. \"You want me to suck you?,\" Janice teased, holding Tim's throbbing penis close to her mouth. \n\nTim could feel her breath on his swollen head. \"Yes, please,\" Tim said, almost wild with excitement now.\n\n\"You want me to take this big, swollen head into my little mouth and suck it?,\" Janice teased, then kissed the head quickly and noisily. \n\n\"Yes! Yes!\"\n\n\"Well, I guess you have been a good enough boy,\" Janice said and opened her mouth. She looked up at her husband as she slowly brought her mouth over the dripping head. She gurgled deep in her throat as she felt his hot flesh fill her mouth.\n\n\"Ohhhhhh!!!\" Tim moaned.\n\nJanice held the penis head in her mouth without moving, letting it soak in her saliva. She liked the feel of him inside her mouth. She liked the way the large head stretched her lips. Slowly she began to suck the head, but just the head. Her cheeks pulled in as she sucked like it was a round lollipop. Her lips remained wrapped around the crown as her tongue teased the head. \n\n\"Oh suck me, sweetie!\" Tim moaned and tried to pull her head down on his penis.\n\nJanice pulled quickly away, letting the head slip from her mouth with a pop. \"Calm down, honey. You wanted me to make love to your penis and that's what I'm going to do.\"\n\nTim moaned in frustration but his hands let go of her head. Yes he had told her that he wanted her to make love to his penis but he didn't mean he wanted her to drive him crazy.\n\nJanice moved back to his throbbing shaft. Slowly her mouth covered the head again. She sucked the head for a long time, reveling in is the excitement of it. Each time she felt Tim getting too excited, she would pull away and let him calm down. Then she would start all over again, starting at his balls. She even lifted his legs and used her tongue on the tender under side of his balls. Then she would run her tongue up the backs of his thighs, making him quiver. Janice's own vagina was dripping now. She could feel the large swollen lips throbbing between her thighs. As she began to squeeze her thighs together, she grasped Tim's penis in her hand and took it in her mouth again. Slowly she moved her lips down until the large head was at the back of her throat. She started to suck as her hand began to move up and down the shaft slowly. \n\n\"Oh God, Janice, if you keep that up I'm going to cum,\" Tim warned.\n\nJanice moaned deep in her throat and began to move her hand faster. She could feel Tim's legs begin to tense and his balls squirm. She knew that he was very close. As his penis began to throb, she had a decision to make. Should she let him cum in her mouth? She decided to take it in her mouth - she could always spit it out. \n\n\"Ohhhhh,\" Tim moaned as his penis began to throb. He wasn't sure what Janice was going to do. He was going to let her decide this time. He hoped she would keep it in he mouth. \n\nJanice felt Tim's hips lift off the chair. Suddenly, she heard him moan and felt his penis quiver in her hand. The already large head expanded even more. The first shot hit the back of her throat. Seconds later, her mouth began to fill with his thick sperm. She slowly but firmly squeezed his penis with her hand as squirt after squirt poured into her mouth. Soon, her mouth was filled until there was no room for anymore. She had to do something. Janice closed her eyes, her head spinning with excitement. She swallowed. \n\nTim was so wrapped up in his pleasure that he didn't realize that Janice was swallowing his sperm. When he opened his eyes, he saw her looking up at him, his penis still in her mouth. He quickly realized that there was not a speck of his cum anywhere on him. He figured that she still had it in her mouth. Then he saw her sit back, letting his flaccid penis slip from her mouth. Her tongue came out and she licked around her lips. Tim knew that she had swallowed his sperm.\n\n\"Did I do a good job?\" Janice asked rhetorically.\n\nIn answer, Tim pulled Janice up to him and brought her lips to his. If he needed proof, he could taste the remains of his cum in her mouth. He moaned when she pushed her tongue into his mouth. Then he picked her up and took her to the bed. Without a word, he spread her legs and brought his mouth to her very swollen vagina. Within minutes Janice was screaming in pleasure.\n\nChapter 8\n\n\"All right, what's going on now?\" Janice asked as she stood in the bedroom with a thigh length bathrobe on. Tim had asked her to get naked and put the robe on but he wouldn't tell her why. \n\n\"I have a special treat for you. I thought you might enjoy a nice professional massage tonight.\"\n\n\"I can't go out like this!\"\n\n\"Who said anything about going out? I have a licensed masseuse coming over in exactly fifteen minutes.\"\n\n\"Here?\"\n\n\"Yep! Right in our own living room.\"\n\n\"All right. I guess that would be nice,\" Janice said hesitantly. \"It's been ages since I had a good massage.\" However, Janice knew that it would be more than a simple massage.\n\n\"Good,\" Tim answered just as the front doorbell rang. \"I'll get the door and take care of the money. Give us a few minutes. He'll need a minute to set up.\"\n\n\"He?\"\n\n\"Yes, I hired Steve Jackson from the exercise club. They tell me he's very good.\"\n\n\"Tim!\" Janice said in shock. \n\nTim stepped over and hugged Janice. \"What difference does it make if it is a him or her? He's a professional.\" Tim's hands slid down her back and under the hem of the robe. \"What's this, panties? You know that panties are not allowed.\" He quickly slipped the panties down her legs, ignoring the protests. \n\n\"Tim, are you crazy?\" Janice felt more than naked now without the panties under the robe. The short terry cloth robe barely covered her buttocks. \"Are you going to use the safe word?\"\n\n\"No!\" Janice answered quickly. \n\n\"Okay, then come on down in ten minutes.\" Tim walked out of the room holding Janice's panties in his hand.\n\nTim greeted Steve at the door and helped him bring his massage table into the living room and set it up. \n\n\"Thanks for coming on short notice,\" Tim said.\n\n\"No problem. Mondays are generally very slow days anyway.\"\n\n\"Have you been doing this long?\" Tim asked.\n\n\"No, I just got my licensee a few months ago. I've been trying to fit it in with my physical training appointments because there's good money in massages,\" Steve said. He saw a questioning look on Tim's face. \"Don't worry. , I'm new at this but I'm pretty good.\"\n\n\"I've heard that. Steve, I want you to make sure Janice enjoys herself. She is a little shy but I'm sure you can get her 'loosened up' if you know what I mean,\" Tim said with a wink.\n\nSteve gave Tim a strange look. \n\n\"Listen, just make sure she has fun,\" Tim said. He wasn't sure how to tell him that he could take some liberties with Janice. In fact, he wasn't even sure what liberties he wanted him to take. He handed Steve a $100 bill as a tip. \n\nSteve's eyes opened wide in surprise as he looked at the $100 bill in his hand. \n\n\"That's because I know that you will do a good job. Now, I have some errands to run so I'll be gone for an hour or so. You have her all to yourself.\" \n\nSteve still wasn't sure what Tim wanted him to do. He looked at the bill in his hand again then back at Tim. It almost sounded like he was asking him to get a personal with his wife. He was new at this work but he had heard a lot of wild stories. He shrugged his shoulders as Tim walked out the door, deciding he would see how things went. However, the last thing he wanted to do was jeopardize his license. A few minutes later, Steve saw Janice walk quietly into the room. He almost gasped. She looked gorgeous with her short robe barely covering her thighs. She also looked very uncomfortable. His first job would be to get her to relax. \n\n\"Nice to see you again, Mrs. Harwick,\" Steve said with a boyish smile. He knew that his twinkling blue eyes and smile could be very disarming. \n\n\"Yes,\" Janice answered in a noncommittal tone, glancing at the young man. He was wearing a skintight tee shirt that emphasized his strong chest and arms. Instead of shorts, he was wearing a pair of baggy exercise pants. The pants almost looked like harem pants, gathered in the front, tied at the waist, and held around his ankles with elastic. On his feet, he had a pair of white socks and running shoes. Janice had to admit that he did look very good: tan, young and fit like a beach boy or lifeguard. ",
        "\"Okay, Mrs. Harwick, you can take the robe off, then get on the table and cover up with this sheet. I have to get some supplies from the car.\"\n\n\"Where's my husband?\"\n\n\"He said he had to run out to do some errands.\"\n\nJanice felt even more nervous now.\n\n\"Excuse me. I'll be back in a minute,\" Steve said. \n\nAfter Steve walked out of the room, Janice stood nervously, fidgeting with the belt around her waist. She knew that she couldn't wait long or he would be back. Quickly she stripped off her robe and got onto the table naked. She lay on her back and pulled the sheet up to her neck. \n\nSteve came back into the room carrying a container of his massage supplies and a portable CD player. He saw Janice's robe on the floor and that hershe was lying on the table. Good, he thought, at least she wouldn't run out of the room screaming. He immediately noticed her large breasts covered by the thin sheet. He could already see the hard nipples poking through the material. \"Okay, Mrs. Harwick, you can turn over on your stomach and I will start with your shoulders first. Give me just a minute.\"\n\nJanice turned over and lay on her stomach. She saw Steve walking around the room placing scented candles here and there. He lit the candles then dimmed the lights in the room. Then he put some soft music on a portable CD player. When he was done, he took a position at the head of the table. Then he gently and neatly folded the sheet down her back until her upper body was bare. Janice squeezed her arms to her sides to keep him from seeing her breasts as they squished out to the sides.\n\nSteve poured massage oil onto his hands and rubbed them together rapidly, making the oil warm.\n\nJanice almost jumped when she felt his hands touch her shoulders. She could feel the material of his pants touch her head as he began to work on her shoulders, his hands strong and soothing.\n\n\"Wow! , You're very tense. Just relax,\" Steve said as he rubbed the warm, scented oil into her shoulders. Within a few minutes Steve could feel the muscles in her upper back begin to relax.\n\n\"Ummm!\" Janice moaned in spite of herself as she felt his hands massaging the tension from her muscles.\n\nSteve worked on her shoulders, and then moved down her arms until he reached her fingers. He took each one in his hand and rubbed them until they were limp. He moved on to her neck, then her back again, his hands sliding downward until he reached the end of her spine. \n\nJanice found herself very relaxed as the young man continued to work his magic. When he moved from her head to her legs, she began to tense again. She felt him folding the sheet up until only her backside was covered. She felt exposed as she lay on the table naked but for the thin sheet across her buttocks. This is silly, she thought. He is a professional. Just relax and enjoy it.\n\nSteve began to work on her feet, massaging the tension from them. Then he moved up her legs, caressing her ankles. He was very impressed with the muscle tone of her legs. \"You have great legs,\" Steve said. Then he blushed when he realized how his comment sounded. \"Uh... uh... I mean you have great muscle tone in your legs.\"\n\n\"Thank you, Steve,\" Janice said realizing that the young man was as nervous as she was. \n\nSteve began to move his hands on her tight calf muscles then up to her thighs. He couldn't help but look at the juncture where the sheet covered the back of her thigh. If that sheet were only a couple of inches higher I would have a great view, he mused. Did she have panties on? he wondered. A little shiver of excitement went through him. You're a professional, he told himself in admonishment. Then he remembered Mr. Hardwick's instruction: --\"Make sure she has fun.\" As his hands worked up her thighs, they gently pushed the sheet a little higher. He heard Janice moan and realized that she was enjoying his fingers working the tightness out of her thighs. His fingers worked a little higher and toward the inside of her thighs. \n\nJanice was truly enjoying the hands on her thighs. When she felt his fingers work toward the inside of her thighs she unconsciously moved her thighs a little bit apart. She didn't realize that she was giving Steve a very intimate view between her legs.\n\n\nSteve's hands stopped for a moment when he realized that he could see between Janice's thighs. He suppressed a gasp when he saw the puffy lips of her sex between her legs. No panties! he thought excitedly. He was also surprised that there wasn't any hair on her pubic area. He knew that it wasn't unusual for some women to shave. However, he didn't picture this professor of law as one of them. Suddenly, he felt himself becoming erect. Down boy!\n\nJanice realized that Steve's hands had been between her thighs for quite some time. Still, it felt so good that she was reluctant to say anything. \n\nSteve, felt his face flush hot as he continued to work on her thighs, gradually spreading them further apart. He knew that he was on the verge of stepping out of bounds. Excitement was taking over.\n\nJanice felt fingers move perilously close to her vagina. Suddenly, she felt a little thrill run through her. Could he see anything? What if he could?\n\nSteve regained control of himself and pulled the sheet down her thighs and over her back, covering her again. \"You can turn over now, Mrs. Harwick.\"\n\nJanice sighed in relief, but she also felt a little disappointed. But disappointed at what? She wasn't sure. Had she wanted the young man to go further? Her body was tingling all over, but not just from the massage.\n\nSteve folded the sheet up Janice's thighs again, exposing the front of her legs. He worked on her legs, slowly moving higher. The front looks just as good as the back, he thought. \"Were you a runner?\" he asked.\n\n\"As a matter of fact, I was. But that was a long time ago,\" Janice said feeling pride that a young man still thought her legs looked pretty good. \n\n\"I thought so.\" \n\nJanice lay quietly, feeling his strong hands work up her thighs. Suddenly, she realized that her breathing was becoming more rapid. Her eyes were closed as she felt Steve sensuously work on her upper thigh muscles, kneading the flesh like cookie dough. Almost imperceptibly Janice moved her legs apart. She knew it was wrong but she felt thrills running through her. However, she still wasn't sure what Steve could see.\n\nSteve didn't miss the subtle movement. As his hands squeezed her thighs, he pulled gently outward, causing her them to open wider. If only that sheet was an inch higher, he thought lecherously. With a shaking hand he reached up and folded the sheet back a little further as if it was nothing unusual. Suddenly, he had a clear view of her vagina. His eyes stared and his hands stopped moving when he saw the fat lips of her sex exposed in the dim light of the room. His penis sprang to hardness again. \n\n\nJanice's heart was pounding in her chest. There was little doubt that Steve could see her vagina. She should stop this. It wasn't right to tease the young man. Still, what harm did it do? she reasoned. It was just a little teasing. Besides, didn't Tim really want this? He loved it when she had done it to the boys at the shoe store. \n\nSteve's hands started moving again, working slowly up her legs.\n\nJanice realized that Steve was leaning into the table and that her left hand, which was holding onto the table, was also touching the material of his pants. She almost gasped when she felt something hard touching her knuckles. Could that be his erection? Janice shivered again.\n\nSteve felt her hand touching him. As much as he wanted to stop, he couldn't. Subtly, his hips pressed forward, pushing his erect penis into her knuckles. He felt her hand move. Was that an accident? he thought.\n\nJanice was holding her breath as her hand moved almost out of her control. It pressed toward the hardness. Then it slowly moved up and down, rubbing the backs of her fingers against his cloth-covered erection. There could be no doubt now that he was hard and that he knew what she was doing. Janice felt her vagina swell and her juice begin to coat her swollen sex lips.\n\nSteve's hips began to move up and down in time with her movement. He pressed harder into the hand as his fingers began to move further up her inner thigh. He continued to stare at the swollen lips, his hands moving on the soft flesh of her inner thigh. He could see her vagina begin to glisten with excitement. He knew that she was getting excited now. Boldly, he moved his fingers still higher until his little finger touched the smooth skin of the outer lip. It was just a delicate touch, almost like an accident. He heard Janice moan but she made no move to stop him. He looked up and saw that her eyes were still tightly closed. She was biting her lower lip.\n\nJanice's brain was screaming, No, No, but her excitement was screaming Yes, Yes.\n\nSteve grew bolder and gently flicked his finger over the smooth skin until he reached the swollen inner lips. He thought he heard a little whimper and saw her hips begin to lift slightly off the table. \n\nJanice had no doubt that this had gone beyond a professional massage. Yet she couldn't move to stop him. Instead, her legs slid further apart, exposing her entire groin. \"Ohhhh!!!\" she whimpered as she felt Steve's fingers slide between her swollen lips. He rubbed her gently, smearing her clear juice across the wrinkled inner lips. Then ever so slowly the finger began to slide inside her body. Janice held her breath as the finger continued until it was all the way inside her vagina. \n\n\"Oh God,\" Janice whispered. \n\nSteve was amazed at what was happening as he pulled his juice-covered finger from the clenching hole. He couldn't believe that he using his finger on this beautiful woman. He knew it was wrong and very unprofessional but nothing could stop him now. Taking a chance, he reached up and pulled the sheet off of Janice's chest. A gasp escaped his lips when he saw her gorgeous breasts exposed. The breasts were milky white with tan lines emphasizing their nakedness. The large brown nipples were hard and long, sitting proudly on her firm breasts. With one hand in her crotch, he reached up with the other and caressed a breast.\n\nJanice moaned as Steve's strong fingers began to play with one swollen nipple. At the same time she felt his finger begin to move slowly in and out of her wet hole. Her breath came in short gasps as this stranger's hands caressed her breast and vagina. Her hips began to move up toward the probing finger in little jerks. \n\nSteve removed the hand from her breast and untied the rope holding his pants up, letting them fall to his feet. He wore no underwear. Steve's large penis stood proud in front of him and pulsed with forbidden excitement. He reached for Janice's hand and picked it up. He could feel it trembling. Cautiously and gently, he placed it on his shaft, fearing her scream of indignation.\n\nJanice almost jumped off the table when she felt the hot flesh in her hand. Her head lifted up and her eyes opened in shock as she looked down at his huge tool. It was much larger than Tim's and had a gigantic purple head, dripping his clear juice. It was almost impossible to believe that she had another man's penis in her hand. It was only the second penis besides Tim's she had held since she had taken her marriage vows. \n\nWhen Janice looked up at Steve, she saw his wide eyes staring down at her. She knew that he was waiting for her to stop him. She also knew that she should yet instead she moaned and closed her eyes again, laying her head back on the table. God, what if Tim saw me now? she thought.\n\nWhat Janice didn't know was that Tim could see her now. When he left the house, he drove down the block and parked the car. He snuck back to the house, letting himself in by the back door. He now stood in the shadows in the dinning room watching his wife and another man. Steve had his back to him so he obviously didn't know he was there. He couldn't see Steve's penis but from Janice's look it must be big. Tim held his own hard penis in his hand.\n\nAs Steve's finger began to move in and out, Janice moved her hand on his rod. It filled her hand, barely letting her fingers touch. She wanted to look at it but couldn't bring herself to open her eyes again. Somehow she thought that if she didn't look, what she was doing wasn't so bad. \n\nSteve was incredibly excited now. He didn't know what to look at --- this woman's beautiful vagina with his finger working in and out or her soft hand working on his throbbing penis. Then there were those gorgeous breasts. He moved his hand back to her chest and began to play with her nipple. He watched Janice began to squirm on the table. He thought about climbing on the table but realized that Tim could come back at anytime. Occasionally he would look out the window in front of him, watching for headlights. The table blocked his lower region so someone coming up in front of the house would not know he was naked from the waist down. \n\nJanice became delirious with excitement. The fact that it was so wrong and against all of her upbringing added to the thrill. It was almost like she was flaunting her sexuality at all those narrow-minded people that had taught her that pleasures of the body were wrong.\n\n\"Oh God,\" Janice moaned when Steve added another finger to her dripping hole. Her body began to shake and she knew that she was getting very close to losing control. Her hips lifted off the table as Steve began to move his fingers in and out rapidly, causing a squishing sound that echoed around the quiet room. Janice's hand matched Steve's fingers as it flew up and down the large shaft. \"Ohhhhhh!!!\" she cried as her vagina began to pulse around the probing fingers. The pulsing turned to shudders of excitement as a climax overtook her senses. She felt like all her relaxed muscles had tightened back into a knot. Janice moaned as her body convulsed in pleasure and her back arched off the table.\n\nSteve watched in amazement as Janice trembled in pleasure, her hand halting its movement as her climax took over. The finger's squeezed him tight as illicit pleasure consumed her. \n\nIt took Janice a few minutes for her to calm down. When she did, she realized that she still held Steve's penis in her hand. She opened her eyes and looked at the large shaft. It was just as hard and maybe larger then it had been before. Incredibly, excitement still coursed through her. Throwing caution to the wind, she pulled Steve by his penis toward the head of the table. She turned on her side, her face just inches from his dripping organ. \"Oh Jesus,\" she whispered and opened her mouth and took him inside. \n\n\"Oh my God,\" Steve hissed as he felt Janice's mouth close around him. Normally Steve prided himself on his control. However, this was too much for him. Within seconds, he felt his balls tighten and his penis throb. He threw his head back and moaned as he began to pour his sperm into her sucking mouth. \n\nJanice was a little surprised that Steve was coming so soon. I still have a lot to learn about men, she thought. Her cheeks bulged with Steve's sperm. Without a thought, she began to swallow. It was thicker than Tim's and tasted slightly different but she liked it. She moved her hand on the large shaft, milking him, pumping a little more of his sperm out. She couldn't believe how much sperm he had. It must be the healthy diet, she thought with a smile. Finally, she couldn't pump or suck any more sperm from his deflating penis. \n\nAs the head of his penis became sensitive, Steve moaned and pulled away, leaving Janice's mouth with a pop. \n\nSuddenly, from behind Steve, Janice saw movement. When she looked closer, she could see Tim staring back at her. Oh no! she thought.\n\nTim scurried from the dinning room, heading out the back door. He was breathing heavily as he rushed to his car. He had never seen anything so exciting in his life. It was all that he had imagined and more.\n\nSteve was packing up his equipment when he saw the headlights in the driveway. Janice had climbed off the table without saying a word to him, put on her robe, and disappeared upstairs. She hadn't even said goodbye. He couldn't tell if she was upset or not, but, suddenly he felt guilty. He was worried that he had lost a customer, but more worried about his career as a professional masseuse \n\n\"I'll be done here in a second, Mr. Harwick,\" Steve said as innocently as possible when Tim walked into the house.\n\n\"No hurry, Steve. Did Janice have a good time?\"\n\n\"I... uh... I think so,\" Steve stuttered. \n\n\"Good. , Maybe I'll call on you again.\"\n\n\"Anytime,\" Steve said as he hurried out of the house with his equipment.\n\nChapter 9\n\nTim gently opened the door to their bedroom and looked inside. He could see Janice lying on the bed, her face in the pillow. Slowly he walked over and sat next to her. When she didn't move or acknowledge him, he pulled her up from the pillow. There were tears streaming down her cheek. Tim hugged her and she began to sob on his shoulder.\n\n\"What's wrong,\" Tim asked stupidly.\n\n\"You... you... know what's wrong,\" she sobbed.\n\n\"It's okay sweetheart. I love you.\"\n\n\"How... how can you say that after... after you saw what I just did?\" \n\n\"I'm not mad, sweetie. I guessed that something was going to happen. I saw the electricity between the two of you at the gym.\"\n\n\"You knew something was going to happen? Then why didn't you didn't stop it?\" Janice asked drying her eyes on Tim's shirt.\n\n\"I didn't want it to stop. But you could have with the safe word. Janice, I think that was the most exciting thing I have ever seen in my life. \n\n\"You mean you enjoyed watching your wife sucking another man? You saw me swallow his sperm and you're not jealous?\" she asked incredulously. Again, she though about how little she knew about this man.\n\n\"Well, I really didn't see you suck him or swallow his sperm. His ass was blocking my view,\" Tim said in an attempt at humor. \"But to answer your question, yes I did enjoy it and no I'm not jealous.\" Tim pulled Janice to him for a passionate kiss. \n\nJanice resisted the kiss at first, knowing what she had just done with her mouth. However, Tim was insistent. Janice could feel his passion as their tongues dueled. When she pulled away, her breath was coming in short gasps again, excitement coursing through her as well. God, what's happening to me? she thought. I'm getting excited all over again.\n\n\"I love you,\" Tim said and pushed her back on the bed, searching for her lips again. Janice pushed him away and sat up. \"Tim, wait. I have to tell you something that has been bothering me for a long time.\" It was time to fess up, to come clean, she thought.\n\n\"What?\" Tim asked.\n\n\"Last year... uh... last year when I went to that convention in San Francisco, there was this guy there, a professor at a university. He... he and I... well, we went out one evening.\" Janice stopped, tears coming to her eyes again.\n\n\"Yes? So what happened?\" Tim said, clearly interested.\n\n\"Oh God, this is hard. We went out and I had a little too much to drink. He... he wanted me to come back to his room.\" Janice stopped, still sniffling.\n\n\"And?\" Tim said, with growing excitement.\n\n\"I didn't go.\"\n\n\"Oh.\" There was a note of disappointment in Tim's voice.\n\n\"But that's not all. We... we went to his car and did stuff,\" Janice continued elusively.\n\n\"What did you do?\" Tim felt his penis spring to erection.\n\n\"You're going to hate me. Tim, we sat in his car and he started kissing me. It was the wine, I sear.\"\n\n\"Then what?\" Come on, he thought.\n\n\"I... I let him open my blouse and he played with my breasts. I was so excited that I couldn't stop him when he put his hand up my dress. He... he... he put his finger in me. Then he did like Steve did and pulled my hand to his... his... penis.\" Janice turned and buried her head in Tim's shoulder. She waited for the recriminations but none came. She could feel Tim's chest moving up and down with his rapid breathing. When she pulled back, she looked into his eyes, fearing hate but seeing only excitement."
    ],
    "authorname": "rgjohn",
    "tags": [
        "tim made",
        "still tim",
        "tom jerry",
        "moaned penis",
        "janice suddenly",
        "god janice",
        "smiled janice",
        "shock looked",
        "tim watching",
        "wife warm"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-journey-pt-01"
}