{
    "title": "The Last of Her Kind Ch. 05",
    "pages": [
        " If this is your first time seeing this story, start at Ch. 01. It is written as a novel, and you will be so confused otherwise.\n\nReturning reader, welcome back! I want to say thank you for the nice comments and feedback I have already received, but an extra big thank you to my readers who are Vietnam veterans. Some of you have shared your stories with me, and I don't think I have words to adequately convey how many emotions I've experienced while reading them. Some of you have made sacrifices that I would never wish on anyone, and I am glad you are still with us.\n\nPlease don't forget to rate or comment, it's what inspires me to write every day, and I will keep writing these stories as long as you keep reading them! More info in my bio on release dates for the rest of this saga.\n\nCaught in the Web\n\nSludge leaked from the busted pipe into a bucket Darren had hung just beneath it. The women's restroom had flooded over the weekend, and he had moved into the crawl space beneath to deal with the issue, only to discover that the plumbing was completely shot.\n\nThe crawlspace was around four feet tall, and was a maze of pipes, vents and cobwebs. When people walked on the ground floor above, dirt trickled through small gaps in the floorboards. Donning a face mask and a pair of safety glasses, he had been underneath the library all day, attempting to repair rather than replace, but the process had been slow going. As the minutes trickled by, his memories threatened to surface like hungry fish, snapping at him for attention.\n\nMoving a particularly large web to the side, he winced when a large brown spider tumbled free, then ran away in a panic.\n\n\"Sorry,\" he mumbled to the little creature as it disappeared around one of the dark corners. \"Your house is in the way of progress.\" He held up the replacement pipe to ensure it was long enough and then slid it onto the old pipe with a fitting. Using his torch, he sweated the pipes and then soldered them together. The intense heat and humidity tickled at his sense memory, but he ignored it.\n\nThis morning, Ana had greeted him at his bedroom door, pushing him back to his bed. Leaning forward in her wheelchair, she had sucked him dry once again. Ever since that first night in the park almost two weeks ago, she had become more aggressive, initiating oral sex every day or so. Afterward, it was almost like she was a different person, caught up in some sort of post-orgasmic bliss, which he knew wasn't possible. She had assured him more than once that she felt nothing from the waist down, yet she looked so satisfied after she was finished with him.\n\nLike every other sexual encounter, this one had left him feeling relaxed and at peace. The painful memories were still there, but they were now muted, distant somehow. He no longer heard Cutter's voice berating him, demanding justice for a death he felt he didn't deserve.\n\nStill, the dark confines of the crawlspace did their best to amplify those dark feelings, and Darren kept his eyes on his work, thinking only of the pipes above and Ana. She was still such a mystery to him, but he figured with time he would get to know the woman who hid behind the facade.\n\nUp above, he heard the soft chatter of children, followed by Ana's voice. It was storytime, and he stopped to listen in. No matter how cold she acted with others, she showed a special softness with the children. He wondered if she would be capable of such softness with a child of her own.\n\n\"Do you think that's even a possibility?\" Dwayne asked him. His brother squinted at the pipe Darren had just soldered. \"You've got a weak joint on this side, by the way.\"\n\n\"Oh?\" Darren moved the lamp over and frowned. \"Yeah, you're right.\" He grabbed the solder and went to work once more, heating the metal.\n\n\"I mean, she's numb from the waist down, but can she function? Like, could she have babies?\"\n\n\"Hmm. I don't know. Ow, shit.\" He stuck his finger in his mouth, cooling it. While heating the pipe, he had accidentally touched the edge. \"I guess maybe? Not something I figured I would bring up just yet.\"\n\n\"Yeah, that makes sense. Remember that one girl from high school? Kathryn?\"\n\n\"I do.\" His lips curled into a smile. Kathryn and his brother had dated for a couple of months when she thought she had become pregnant. \"You even got mom's old wedding ring and were ready to take the plunge junior year.\"\n\n\"Yeah. I wasn't ready to be a dad, but I was still excited. Then she had her period and cheated on me with Tommy Stiles.\" Dwayne chuckled. \"Guess it was all for the best though.\"\n\n\"She got fat.\" After he had come home, he had run into her and her two kids at the grocery store. Kathryn had packed on sixty pounds and cut her hair super short, further emphasizing her chubby cheeks. When he saw her, she had been yelling at her bagboy for packing her groceries wrong. \"And nasty.\"\n\n\"Weird, right? Like, you think someone will be the same way forever, but a couple of years is a really long time. It can chew you up and spit you out as someone completely different.\"\n\n\"Like Ana.\" What had she been like as a teen, before her accident?\n\n\"Man, you're obsessed.\" Dwayne playfully punched Darren's shoulder. \"That joint looks way better now.\"\n\n\"Thanks.\" Darren rolled over and crawled over to another spot and looked up. Beads of water still clung to the underside of the pipe, remnants of a pinhole leak. \"Think this is the last one here.\" When he looked back over his shoulder, Dwayne had picked up the lamp for him to bring it closer.\n\n\"I wonder why they all burst suddenly?\" Dwayne pushed the lamp into place.\n\n\"PIpes are old. I suspect some air got in and created a hammer. Louise mentioned that she had heard a rattling or something whenever the water turned on, but never told me about it until the floor was all wet.\" The cold water pipe to the women's sink had cracked badly, and when he had checked the crawlspace for flooding, he had discovered the severity of the damage. It had failed in multiple places, spraying water everywhere. Luckily, it had drained quickly, but he was still cold and wet.\n\n\"It's amazing how one simple thing can cause everything to collapse.\" Dwayne picked up the epoxy and handed it over. \"Just like that, the system fails.\"\n\nDarren grimaced. \"Yeah, that's how it goes. Do you remember when we used to talk about coming home, maybe starting our own construction company and working on houses?\"\n\nDwayne nodded, then slid a half-eaten Snickers bar from his pocket. \"Oh yeah. Double-D Construction. Building your home while tearing down prices.\"\n\n\"That slogan is still stupid.\" Darren finished drying the pipe with his last clean rag and was now filing it down with sandpaper. \"But yeah, Little Mike convinced us we could make some good money doing it. We learned a ton about construction from the Corps.\"\n\n\"Easy money in electrical. That's what he always used to say.\"\n\n\"Yeah, he did.\" Darren smeared epoxy over the hole, making sure it was sealed along the edges. Triple checking the pipe for moisture, he used a couple small pieces of electrical tape to add a piece of toilet paper beneath it. When he checked on it later, he would know if any water was still getting out. \"Get out of the military, make some good money, and then drink beers on a speedboat in the Gulf of Mexico. I was able to take the first step, but that's as far as I got.\"\n\nWhen he looked to Dwayne for his response, his brother had gone. Letting out a sigh, he spent the next several minutes cleaning up and clearing out, then stumbled upstairs, his legs cramping from being crouched down for so long.\n\nStepping outside the library he closed his eyes, letting the warm sun wash over him. He crossed the street, his tools in hand, and went to the basement beneath the church to drop off the toolbox and put his things away. Once he was finished there, he went upstairs and peeled off his overalls, careful to toss them directly in the washing machine to avoid spilling mud.\n\nWalking around in just his shirt and underwear, he opened a can of soup and ate it cold, his mind running over his list for the day. Tossing the can in the trash, he made a beeline for the shower hoping to warm himself up. After a relatively quick rinse, he changed into a white tank top and his fatigues.\n\nPicking up his boots, he saw a wolf spider scurry for safety. He turned them upside down and gave them a shake, just in case.\n\n\"That's not your web in the church, right?\" He watched the spider squeeze its fat ass through a hole in the floor. The giant web in the church had been on his mind a lot lately, but he hadn't had the time to properly investigate. Between time with Ana and his job, the only opportunity to go clean it up was late at night, and not only was the church unlit, but he didn't want to wake her up.\n\nHe had done some research in the library. Apparently some spiders around the world could form giant webs in times of floods, or even for giant spider orgies. Going back for another look, he had realized that though the web was large, he saw no movement in it, nor spiders in the church itself. It was almost as if they had built the giant web and abandoned it. Realizing that the web was most likely empty, it had dropped to the bottom of his list of priorities. Besides, it wasn't like they needed the church for anything.\n\nAs long as a bunch of spiders didn't start swarming into the house and freaking out Ana, he had decided to leave it alone. Maybe he would talk to Walters or Louise someday and look at renovating the church to expand their living quarters.\n\nLacing up his boots, he went back outside, walking toward the library.\n\nA state of awareness fell over him, and he froze on the spot. It was the exact same feeling he had gotten back in 'Nam, right before a sniper had blown away a guy named Jackson just ten feet ahead of him. The feeling of being observed was so powerful that he almost turned around and went back home. Scanning the area, he couldn't shake the sensation of being watched, and took a cautious step forward, half expecting to experience a bullet passing through his skull and carrying him into darkness.\n\nIt didn't come. Shaken, he hurried across the street and entered the library, stepping away from the door. When he looked out the window, he still saw nothing, so he made a beeline for the utility room, then climbed the ladder up to the roof. Someone was out there, and he wouldn't feel safe until he knew who. Up on the roof, he crouched down near the edge, hoping to spot before being spotted. Looking down on the park, he saw nothing out of the ordinary. He sat this way, motionless, for nearly an hour, his heart pounding in his chest. Some primal instinct had activated, and he knew better than most he needed to follow it.\n\nWhen the sensation passed, he moved cautiously toward the ladder, then back inside. Whatever had been watching him, the danger had now passed.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\n\"That was really close,\" Jeffrey said, his voice emanating from a tiny speaker in Cyrus' ear. It was the latest technology, a walkie-talkie with an earpiece small enough to wear, and it was like Jeffrey was standing right next to him. \"I thought he had spotted me.\"\n\n\"I'm glad he didn't,\" Cyrus whispered, his attention on the large hardbound novel in his hand. He sat by an open window that overlooked the park outside. Even knowing where Jeffrey was, it was impossible to spot him up in the tree. He was using a magical cloak that mimicked nearby colors, much like a chameleon, and the only evidence of his presence was the unusual thickness of the tree's trunk about twenty five feet up. \"But I am starting to think we are wasting our time.\"\n\nJeffrey let out a sigh, but didn't argue. Darren had seemed like a perfect candidate for the type of man who would aid the Arachne. He went on regular jogs toward the edge of town, and both Cyrus and Jeffrey had thought the hunt would end by following him. He apparently did it for fun, because he always ran to the edge of town and back, never stopping to check traps or take any goods to a third party.\n\nFor the first few days, Cyrus had felt like Jeffrey was onto something in his suspicions, but now he wasn't sure. Darren didn't act like a man who was hiding a secret, and certainly didn't seem to be in cahoots with anyone. Jeffrey had climbed the tree after breakfast, leaping up into the branches when there was a break in foot traffic. Cyrus had watched from inside the library, but Darren had been absent most of the morning. After a little snooping, he had discovered from the talkative Head Librarian that some pipes had burst under the library. Later on tonight, Cyrus was planning to break in and look around the library itself. It hadn't occurred to either of them that the Arachne could be hiding somewhere among the books.\n\nDown below, he heard the front door of the library creak open, and Darren walked up the desk where Louise sat.\n\n\"You're clear,\" Cyrus told Jeffrey, his eyes back on the street. Jeffrey dropped from his position, landing in a crouch, the cloak billowing up to reveal his legs, then changing color to match the thick grass. Jeffrey ran across the yard toward the church, disappearing in the thick brush. Minutes passed, and Cyrus looked over at the reference desk and saw Louise checking over a list with Darren.\n\n\"There's a cellar here,\" Jeffrey muttered, his voice crackling. \"Might be a good spot.\"\n\n\"Potentially. You need me?\"\n\n\"Not yet. Just gonna take a quick peek.\"\n\n\"Roger.\" Cyrus moved to a different window, affording him a better view of the church. The building was old, and looked better suited for squatters than any other occupant. The silence was nerve racking, and he had to fight the urge to wander over and look for himself.\n\nDownstairs, another round of storytime had started up. Louise, the Head Librarian, ran this one, and she was putting on a show for some mildly interested six-year olds. The woman had been friendly, but had struck Cyrus as a small town girl who had simply aged out of the role. His eyes on the church, he heard the eerie squeak of a wheel behind him.\n\n\"Excuse me.\" It was the other librarian, the crippled one who lived with Darren. She adjusted her glasses, an icy stare fixed on her face. \"I just need to get past you, but my chair won't fit.\" She held up a pair of books destined for the shelves with several more positioned in her lap.\n\n\"I beg your pardon.\" Cyrus smiled and pressed himself against the window, giving her more room. She pushed the knob on her chair and moved forward, her chair squeaking as it passed. \"You should have someone oil that for you,\" he offered.\n\n\"Probably.\" She disappeared down an aisle, and he could hear her squeaking between the rows.\n\n\"I'm back,\" Jeffrey said.\n\n\"And?\" Cyrus whispered.\n\nThe loud sigh on the other end told him everything. Cyrus glimpsed his own reflection in the glass, his face stuck in a scowl. Darren had been their best lead, and he was about to become a dead end.\n\n\"Breaking in,\" Jeffrey said, and Cyrus heard metal picks being jostled. \"I should be in and out in just a few.\"\n\nCyrus said nothing, hearing the squeaking noise behind him. The librarian went past again, her face fixed into a sneer as if she smelled dog shit. He looked down at his book and cleared his throat, signaling that someone else was there. Jeffrey went quiet too, and Cyrus sat there in silence, hating the idea that his partner could be attacked by an Arachne in hiding.\n\n\"Front room clear,\" Jeffrey said. \"Moving toward the back.\"\n\nThis reminded Cyrus of the time he and Jeffrey had tracked down a vampire to an old house in the middle of Nevada. The beast was preying on young women in Vegas, then driving them to the outskirts of town in his hearse and keeping them like cattle. Most vampires had some human thrall to do their bidding, and he had been forced to watch for the thrall's return while Jeffrey cleared the house on his own. Cyrus had listened as Jeffrey moved from room to room, his blade ending the lives of the vampire's nest-mates before they could awaken. The thrall had come rushing back with a pistol, and Cyrus ended up in a firefight with the man while listening to Jeffrey almost die while killing the vampire.\n\n\"Bedrooms clear,\" Jeffrey said. \"Guess I'm checking the church now.\"\n\nCyrus kept his lips tightly pressed together, his attention straying to a small spider descending the window panel. The creatures abdomen had two points on it, reminding him of a cat. It regarded Cyrus coolly with blank eyes before crawling into the corner to hide.\n\nA loud bang in Cyrus' ear made his heart pound, and he fought the urge to run across the street.\n\n\"I'm fine, I'm fine,\" Jeffrey muttered. \"Stepped on some rotten wood and my foot fell through.\"\n\nCyrus let out a sigh of relief. \"Anything in the church?\"\n\n\"Nothing obvious, but I'm still... hold on.\" Painful seconds went by, and he clenched the book he held so tight that his fingertips lost color.\n\n\"Holy shit,\" Jeffrey hissed in his ear. \"This is it. We found her.\"\n\n\"Are you sure?\"\n\n\"I'm looking at her web right now. Looks like nobody is home.\"\n\n\"That means she's out. But where?\"\n\n\"Hunting? She's gotta come home sometime. I'm guessing that soldier boy has been helping her, she moved in when he did. That librarian bird probably doesn't even know about it. Her chair would bust right through the floor in here.\"\n\nCyrus closed his eyes, relief flooding through him. \"I'll be there in a few minutes. We should wait until she comes back and set a trap of our own.\"\n\n\"Agreed. What about the librarian?\"\n\nHe heard Jeffrey chuckle. \"What, you think she's gonna be a problem?\"\n\nCyrus heard her squeaking on the other side of the shelf behind him even now. She was small, but seemed tough. Then again, without her chair, she couldn't do much. \"If she comes home first, we can knock her out, park her somewhere safe. I would hate for her to get needlessly involved.\"\n\n\"You don't suppose she's already involved? Sounds like she and soldier boy have been spending a lot of time together lately.\"\n\nSomething about the question bothered Cyrus, but he couldn't put his finger on it. She had lived here for almost two years now, and he couldn't see any benefit to her involvement. Unless the Arachne had promised her a cure for paralysis, he imagined she was blissfully unaware.\n\n\"I'm guessing he's either trying to get her out of the house so the Arachne can feed in peace, or...\" Cyrus shivered, the thought suddenly unnerving. \"She might be a future meal. A crippled girl getting all that attention from a soldier? Soften her up a bit and then, one day, she just disappears. If anything, we're probably saving her life.\" He heard shuffling on Jeffrey's end, then silence.\n\n\"Bet that would be like veal to a monster. All soft and tender.\" Jeffrey smacked his lips, causing static. \"Let me know when you're on your way. I've found a good vantage point, we should be able to spot her if she shows up before he does.\"\n\n\"Good.\" Cyrus said a silent prayer. The end was finally in sight.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nHer blood had become ice, pumping violently through her veins. The little Cat-faced spider waved its arms at her, communicating as best as it could, and she had placed herself by one of the lower windows, one floor beneath where her pursuer sat, her eyes on the church. Keeping her eyes on the upper windows, she saw a shadow behind the dirty glass, his partner on the upper floor.\n\nThey had found her nest. Looking at the church, her home, being so violated caused an angry surge to travel through her. If she wanted, she could go back upstairs right now and snap the mage's neck and reduce her problems by half. However, doing so in a library full of children would cause a panic, and the last thing she needed was to cause a scene.",
        "Still, she had the element of surprise. They still didn't know who she was, and she needed to use this to her advantage. She couldn't go home now, couldn't access the meager possessions she had collected. They were looking for her now, and she didn't want them catching on. What she could do, however, was vanish in the middle of the day, run to the sanctuary Emily had offered her and live out the rest of her days in peace.\n\nHer belly ached, causing her to groan. She still needed to become pregnant with Darren's seed, and her efforts at self insemination had failed so far. Already, a battlefield had been drawn in her mind, the war between logic and instinct now begun. If she ran, she wouldn't have time to find a suitable mate, and the longer she had spent with Darren, the more attached she had become. It seemed stupid, but their faux dates that ended with a blowjob had become the highlight of her day. Those intense moments of intimacy had connected her to another being in a way she hadn't expected, and the thought of leaving such a connection behind was painful.\n\nHowever, the thought of being unable to reproduce scared her even more. She could take a chance and harvest his semen again before she left, but there was no guarantee it would work. Attempts had been made with her own hands, an old turkey baster, and even some plastic markers to push his seed deep inside of herself, but the efforts had been for naught. Her body hungered for this pregnancy, and every instinct in her body demanded that she do it right.\n\nShe dismissed the spider in front of her, and it departed with a wave, vanishing into one of many cracks in the window frame.\n\nThey were going to wait in her home to ambush her. She needed to act now, but how?\n\nThe best option wasn't ideal, but none of them were. She would have to leave today, to sneak away before the trap could be sprung. Clearly they hadn't sussed out her true identity, which meant she still had the element of surprise on her side. She took the long ramp around the outer wall of the library down to the main floor and made her way into the staff bathroom, locking the door behind her. She opened a secret compartment in one arm of her chair to reveal the thick wad of cash she had stashed away. Unrolling it, she pulled the piece of paper from the middle and read the numbers again.\n\nShe had looked it up on a map more than once and knew right where she was going. It was a patch of wilderness with no accessibility to cars or hikers, and she knew it was where she had to go, and she needed to leave today. She tucked the scrap of paper in her pocket and put the money back inside the wheelchair. Once she left, she knew that the Order would catch on to her deception, so she would lay a few more false trails of her own.\n\nLeaving the bathroom, she continued her rounds, watching the man surveilling her home. After almost forty minutes, he left, walking out the front door and then down the street. She rolled over to the desk and found Louise stamping cards and humming to herself.\n\n\"Hey, Louise?\" She cleared her throat for the librarians attention.\n\n\"Yes, dear?\"\n\n\"I'm not feeling super well and was planning on going home early, if that's okay.\"\n\nA frown of concern rolled across Louise's face. \"You're never sick. Of course, I'll close up for you.\"\n\n\"Thanks.\" Ana put a hand on her stomach for emphasis. \"I appreciate it.\"\n\n\"Do you want me to come check up on you?\" Louise asked.\n\n\"Um... actually, I was going to have Darren help me out. I'll write a list of some things I need from the store for later that I'll take to him, if that's okay. I just want to sleep, and he'll be there in case I need anything.\"\n\n\"I certainly am glad to see how close the two of you have gotten.\" A smirk crossed the older woman's face.\n\n\"Um, yeah, I guess.\" You have no idea, Louise.\n\n\"Call me in the morning though and let me know if you'll be in. And if you need anything.\" Louise leaned forward across the desk and gave Ana's bicep a loving squeeze. \"Can you do that?\"\n\n\"Of course.\" I'll miss you so much. Ana turned her chair around and rolled over to one of the desks and scribbled a quick note to Darren. Those men were waiting for her and she couldn't have him going home, not yet. If they started asking him questions, she'd never get the chance to breed and would have to flee.\n\nShe did, however, know what would get him moving.\n\nIt was tough to find him, but she eventually spotted him outside, cleaning up the garden bed. Bent over the begonias, he made a few soft snips of the clippers to remove some dead bulbs from the bed, then tossed them into a bucket.\n\n\"Hey,\" she called out to him, trying hard to avoid looking at the church. \"The sheriff called.\"\n\n\"Walters?\" Darren stood up, suddenly all business.\n\n\"Yeah. He needs your help with something right away.\" She handed him the slip of paper. \"Told me to tell you to meet him at that address as soon as possible.\"\n\n\"Okay, I guess I'm off.\" He rubbed the dirt off his hands and picked up the bucket. \"I just need to put these away first.\"\n\n\"I got them.\" She grabbed the bucket out of his hands and picked up the clippers. \"I could use some fresh air anyway.\"\n\n\"I...uh...\" He rubbed the back of his head, a slight grin crossing his face. \"Yeah, sure, no problem.\"\n\n\"Do you know where you're going?\" Ana asked.\n\n\"Street sounds familiar, I'm sure I can find it.\" He pointed down the road. \"That way, right?\"\n\n\"Yep. Six blocks and then turn north across the bridge. It's the building with a red roof on it near the top of the hill.\"\n\n\"Okay, well, I guess I'll be back later.\" He wiped the sweat off his brow and broke into an easy jog, casting an odd look at the church once he got to the end of the street.\n\nAna clipped a few flowers and then rolled her chair around the corner of the building before tossing it behind some bushes. She headed toward the path she had led him down for their first date, but forced her chair to pass between a thick pair of bushes, the branches scraping at her sides. The address had been for the dugout at an old baseball field that rarely saw any use. She tilted the chair forward, her front legs walking on the ground to carry it over a pair of rocks before setting it down on an old trail that few people knew about.\n\nMoving as swiftly as she could, she followed the old trail down to the river and then alongside it. Sensing no humans nearby, she crossed over to the other side, rolling through an inch of water. Once across, she rolled through the brush until she emerged on the sidewalk behind a real estate office. Her legs spun the wheels quickly from inside as she raced to beat him there.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nIt was an easy jog, but Darren's mouth was dry from the heat. Licking his lips, he ran across the bridge and saw the street name he was looking for. Satisfied that he was on the right track, he slowed down a bit when he came to the hill.\n\nIf Walters had wanted him so badly, he wished the man had come pick him up. Then again, if the man couldn't break away from his work, then it was likely that it was super important anyway. There were only a couple of buildings up the hill, and they soon vanished behind clusters of trees and brush. A long wheat field lay before him, broken up by a large patch of dirt and a parking lot. He slowed down, his eyes on a building with a red roof.\n\nSomething didn't feel right. He didn't see Walters' car or anyone else for that matter. Maybe Walters was still on his way? He slowed down to survey the terrain.\n\nSeeing nothing, he continued. The dugout building had a door that long ago busted from its frame, and he stepped inside for a quick peek. Seeing nothing, he walked back outside\u2014only to have his world go black.\n\nThe universe was a fog of voices and shadows, his mind floating in a pool of memories. He was in the jungle, the church, his old elementary school, a military jeep on patrol. He was everywhere and nowhere, his mind tumbling like a stick in a river.\n\nEverything eventually came into focus, but there wasn't a lot to be seen. The walls of the dugout had been exchanged for stone, and the ceiling for sky. Looking around, he realized he was in a type of pit, and the sky told him that some hours had passed.\n\nWhen he tried to turn, he realized he was restrained. Puzzled, he turned his head to look at the ropes binding him and was horrified to see that he was pinned up by a giant, sticky web.\n\n\"Help!\" he cried out, convinced he was dreaming, but not entirely sure. He wiggled his whole body back and forth, but the webs were like steel bands. Letting out a few more screams, he let himself go limp, hanging in the air. He is feet were easily two feet off the ground, and he realized that he had been stripped naked, his cock hanging limply in the open.\n\n\"Darren.\" A dark figure emerged from a gap in the rocks, rolling forward in her chair. \"We need to talk.\"\n\n\"Oh, Ana, thank God! Do you have a knife or something? I need to get out of this. Where are we?\"\n\n\"A small box canyon, out on the edge of town. Nobody comes out here anymore. The hunting is no good and the trail gets too dark at night.\" Ana let out a huge sigh and rolled closer. It took a second, but Darren realized that she hadn't pushed the knob on her chair.\n\n\"Why are we here?\" he asked.\n\n\"This was something I was really hoping to avoid.\" She shook her head, her hair shimmying across her breasts and shoulders. \"Truly.\"\n\nThis had to be a dream, Darren thought, flexing his arms. Certainly he had gotten tangled in his sheets at home, the sensation transferring to this lucid dream world he had found himself in. Still, he somehow remembered being summoned by the sheriff, but nothing after he had arrived. Was the whole day just a dream as well?\n\n\"Look, cut me down and we can talk. I'm... I really don't like it up here.\"\n\n\"I wish I could.\" Ana hung her head now, her cheeks flushed with embarrassment. \"I... can't let you down. Not yet. There's something I need first.\"\n\nHe stopped struggling, contemplating the small woman before him. \"What do you need?\"\n\n\"I need... lots of things.\" An inner war played across her face. \"My life is complicated, Darren. I mean to say, it was super complicated already, but even more so the moment I met you.\"\n\n\"This is a weird way to break up with a guy.\"\n\n\"We can't break up, Darren because we were never truly together. You knew that.\"\n\nHe shrugged, sending a ripple through the web. \"Okay, that's fair, but I also think it's only fair you tell me what's going on before they show up.\"\n\n\"They?\" Ana looked over her shoulder. \"They, who?\"\n\n\"Charlie. My squad. Cutter. Ana, my dreams have been shit for a long time now. Up until recently, I'm not even sure I could properly sleep. That being said, I fully expect this dream to change soon, and I suspect it won't be pretty.\" He wiggled his arms for emphasis. \"But don't worry about me. I'll still wake up in the morning, good as new.\"\n\nAna sighed and just shook her head. \"You're not dreaming, Darren. The web is real.\"\n\n\"I don't see how it could be.\" He tensed up again, feeling the web stretch a little. \"This is just like the giant one in the steeple. That's probably why I'm dreaming about it, I haven't taken care of it yet.\"\n\n\"You know about the web in the steeple?\"\n\n\"Well, yeah. I mean, I didn't tell you, because I didn't want to freak you out. Thought maybe I would clean it up, but it's not like it was hurting anybody, so I haven't done it yet.\"\n\n\"How are you feeling right now?\"\n\n\"I'm... feeling good, actually.\" He flexed his arms again. \"It's weird, but I feel like I should be scared right now. I'm just kind of... relaxed.\"\n\n\"That would be the venom kicking in.\" Ana rolled forward, indecision in her eyes. \"I... this web is mine. The one in the church is also mine.\"\n\n\"I guess I don't follow. Do you have a pet spider the size of a horse or something?\" He exaggerated a grin at her, expecting her to laugh.\n\n\"No. Darren, I need you to listen to me. This isn't a dream. You are awake. And this is my web.\"\n\nHe shook his head. \"How? How is such a thing possible?\"\n\n\"I...\" She looked down. \"I'm going to show you, but I want you to know something. I'm not completely in control here, not anymore. If it was up to me, I would have just walked away and left you behind. There are people here, people hunting me. They aren't after you, so don't worry about that, but if they knew I was here, they would kill me.\"\n\n\"Why?\" Darren's tone was now serious. \"Did you do something?\"\n\n\"No. I didn't, but my family did.\" She let out a sigh. \"Darren, my family was wiped out by these people in Europe when I was still very young. I can't even blame them\u2014my family did some terrible things. But now... now they want to finish the job. And I have to go.\"\n\n\"Ana.\" His dark eyes bored into hers. \"I could protect you. Walters could protect you. Whoever these people are, we can stop them.\"\n\n\"No, you can't. And even if you could... you might not want to.\" She rolled backward, away from him. \"I'm about to show you something, but I want you to promise me something first.\"\n\n\"Anything.\"\n\n\"Promise me you won't scream.\" She bit her lower lip. \"If you scream, I'm not sure what I will do.\"\n\nThe gears in his brain turned, but he had no answers. He thought back on his life, in the moments where he had truly lost control. If what she had to show him really was so scary, it wouldn't matter what he promised, because he sensed it was going to happen either way. \"I'll do my best.\"\n\n\"Okay.\" She tugged her boots off, and the first thing he noticed was that she didn't have feet. Not normal feet, anyway. It was like a flattened horse hoof, pressing into the cool rock.\n\nWiggling forward, she undid some velcro on her tartan skirt and shifted forward. Somehow, she stood on her front two legs, her face frozen in a wince as if she was lifting something heavy.\n\n\"You... you can walk?\" he asked.\n\nShe ignored him, her body coming out of the chair now, but it was more than that. A large black mass extended behind her, and pair of metal poles emerged. He blinked, his brain trying to settle on what it was he was seeing, his heart racing as he watched the metal poles bend and settle on the ground like a pair of insect legs.\n\nMore followed. A thick, black abdomen that looked like it was made of metal, and four more legs. The chair was, in fact, hollow, and her body expanded a bit, revealing that she now stood on eight black legs. Her skirt dangled over her pelvis, and from the waist up, she was as beautiful as ever, her pale skin glowing eerily in the shadows.\n\nFrom the waist down, she had the body of a spider.\n\n\"Darren.\" She took off her glasses and her whole face shifted. Her hair slid away from her face, revealing several almond shaped orbs that now regarded him coolly. He could see his own reflection in each of them, realizing now that he was looking at her other eyes.\n\nShe waited for several moments, allowing him to take it all in. His mind reeled in horror, but also fascination. It didn't make sense, seeing a woman's body melded with that of a spider, and his first instinct was to scream, to fight his way free.\n\nHowever, he noticed the way she regarded him, holding up her chin and waiting. She was expecting to be rejected, to hear his inner fears manifest and, in turn, be shattered. In this moment, she was far more afraid of him than he was of her.\n\n\"Well?\" she asked, her front leg tapping impatiently.\n\n\"I... this is a lot. I don't know what to say.\"\n\n\"You're scared, aren't you?\"\n\n\"This is quite the shock, but I don't know that I'm scared.\" He looked at her legs. They seemed smooth at first glance, but he could now see hundreds of fine hairs that hooked upward like barbs near the bottom. His eyes traveled up along her body. Other than the extra eyes on her forehead, she was still very much Ana. \"It's kind of weird seeing you without your glasses.\"\n\n\"I see.\" She blushed, then rubbed her stomach. \"Um, so you're not freaked out?\"\n\n\"A bit, I guess. This is like one of my dreams, only you aren't trying to kill me.\"\n\n\"You dream about giant insect people?\"\n\n\"Not quite. I dream about the jungle, and I see their faces everywhere, the people I've met, the ones who died. In the rocks, the trees, the mud, and yes, even the bugs. I'm still not entirely certain that I'm not dreaming, to be honest.\"\n\nShe walked toward him, the movement in her legs smooth. Her legs extended until they were at eye level with each other.\n\n\"I am the last of my kind,\" she told him, her voice quiet. \"And I planned on keeping it that way, but... nature has a way of getting what she wants.\" She touched his face with one hand, tracing his chin with the back of a finger. \"I don't want you to hate me for this, but it's something I have to do.\"\n\n\"Ana.\" He didn't know which eyes to look in, but settled on the human ones. They were familiar, and if he didn't know better, she was still that girl in the wheelchair that he lived with. \"Talk to me.\"\n\n\"I have to mate. Need to. And I can't hold back much longer.\"\n\n\"You and I have already done... some stuff. I guess I don't see the big deal here.\"\n\n\"My kind captures men and uses them. And when they're done...\" she leaned in close and lifted her lips, revealing the sharp fangs beneath her lips. \"We eat them.\"\n\nA cold chill went through his body. \"Do... do you have to? I mean... kind of hoping you don't.\"\n\n\"My venom keeps you from struggling, from trying to fight your way free, to make it easier. You are actually far more scared than you realize, but...\" She shivered again. \"The point is that I don't want to eat you. I don't want to go down that path and I never have.\"\n\n\"Then don't. I don't see what the problem is.\"\n\n\"Darren, half of me might be human, but I'm all predator. I rely on my instincts to survive.\" Her lips were near his, and she licked them hungrily. \"I want to say that I am in control of things, but I'm not. The fact that we are even here having this conversation is proof of that.\"\n\nDarren shook his head in disbelief. \"Why are you telling me all of this?\"\n\n\"Because I want to give you a choice.\" She took a step back. \"I wasn't planning on it, but I think back to how kind you've always been to me. I want to mate with you, to bear your children, but I might kill you when we are through. And I don't know that I could live with myself if I did. So I want to give you a choice. Tonight, I have to leave town, to keep from being caught by the Order, the men who are hunting me. If I give myself a head start, I'm sure I will find someone else, someone I don't care about, maybe even someone who won't be missed. But I need your answer soon, before I can't hold back any longer.\"\n\n\"You want sex, but you also might kill me?\" Darren could see the lust in her eyes, hovering just over the flames of intelligence. She was on the edge, emotionally and physically, and he realized that it didn't matter what he chose. If he denied her now, than she was likely to pounce anyway, consumed by her own hunger.\n\n\"I might. When we are finished, I might turn on you, consuming you that my children might live.\" A single tear formed in her eye, then rolled down her cheek. She stepped close enough that he could feel her breath on his face. \"I don't want to do that to you. I've never felt the way I do when I'm with you. I don't think it's love, not yet anyway, but in a different world, maybe...\"\n\n\"Ana.\" He placed his forehead up against hers, closing his eyes. She was far more human than she gave herself credit for, and he didn't know how to make her see it.\n\nNo, he did. He could grant her request, and take that leap into the strange unknown. He was dimly aware that his thoughts were heavily influenced by whatever venom was running through his veins right now, but he supposed it didn't matter.\n\nAnd if it killed him? He nearly laughed. Ever since Vietnam, he had been a dead man who just hadn't heard the news yet. Maybe Ana was fighting her own instincts, but it was time to rely on some of his own.",
        "\"I don't think you will,\" he told her. \"The fact that you would even consider letting me leave tells me that you aren't just a predator. You are still a person, and people can control their fate if they try hard enough and have some help.\"\n\nShe shuddered, then tilted her head, her lips finding his. When she kissed him, he felt a tiny puncture in his lips, her venom now entering his bloodstream, his body becoming hot. He was suddenly rock hard, his dick standing at full attention and bumping against her belly, which made her step back, her face bright red.\n\n\"I've never done this before,\" she told him, her trembling fingers undoing the buttons of her blouse.\n\n\"Well, I have.\" He tilted his head at the webs. \"Let me down and I'll show you.\"\n\n\"I can't.\" Ana shook her head. \"You might try to hurt me. I want to trust you, but there's a part of me that doesn't.\" She waved a hand over her backside.\n\n\"Maybe, but I was willing to trust you.\" His heart was pounding in his chest now, his cock now bouncing in rhythm with his heart. \"Maybe you can try trusting me, just a little bit.\"\n\n\"Just your hands.\" She stepped to the side and casually shredded the web with her fingers. They parted like magic when she touched them, the silky threads falling away. \"For now.\"\n\n\"That will do.\" He touched her face, running his fingers over smooth cheeks, then pulled her in for another kiss. She hungrily lapped at his tongue, and when they disconnected, a thin string of spit connected them.\n\n\"Please,\" she begged him, stroking his cock with her hand. Already, he felt like he was going to burst.\n\n\"No, not yet,\" he told her, the gears in his mind whirring. \"Don't rush it. Not yet, anyway. You're worried about giving in to your instincts, yes? Well, maybe if we cater to something else, you won't have to.\" He held her face in his hands now, pulling her close. Her eyes gazed deeply into his own, full of longing.\n\n\"Darren, I\u2014\" she let out a moan when he kissed her again, running one hand along her neck and wrapping his arm around her torso, pulling her close. Her lips were hot while the rest of her felt cool, and he let go of her long enough to tug aside the blouse she was wearing, revealing the dark bra she wore underneath. It contrasted beautifully with her pale skin, and he kissed his way down her torso, nibbling at the tops of her breasts.\n\nShe sighed, leaning her head back to give him better access. Her breasts were firm and her torso was fairly lean. Her skin was extremely soft, and it was only with the sensitive skin of his lips that he discovered that she was covered in an extremely fine layer of hair.\n\n\"Your skin is beautiful,\" he told her, running his hands along her ribs. She straightened her legs a bit, raising her torso so that he could kiss his way down her stomach. Pheromones had flooded his senses now, his entire world now concentrated on the being before him.\n\nHis hands slid behind her back, and he fiddled with the clasp of her bra. It took him several seconds, his fingers fumbling over each other, but she was patient. Finally undoing the clasp, he pulled the bra away to reveal a pair of perky, ice-blue nipples that stood at full attention.\n\n\"Wow,\" he whispered, touching them with reverence.\n\n\"This is... a little embarrassing,\" Ana said, her face bright pink.\n\n\"There's no need to be embarrassed. I think you're body is wonderful.\" He sucked one of her nipples into his mouth, rolling it around on his tongue. Ana's moans fueled him on, and she resumed jacking his cock with her hand.\n\n\"Oh, Darren,\" she moaned, looking down at him. \"That feels so good.\"\n\nHe grinned, then sucked on her nipple a bit harder, then gave it a playful bite. He switched breasts to give her other nipple the same treatment, happily sucking it down.\n\n\"Um, Darren?\" She pulled away from him. \"I need to... to get you ready.\"\n\n\"I don't understand. I'm already ready.\" He pointed at his cock. \"See?\"\n\n\"No, it's... you'll understand in a second.\" She kissed him, then moved her face around to the side of his neck. He felt the pinch of teeth for just a second, but the pain vanished shortly after, replaced with a floating sensation, as if he was drunk. He grinned like an idiot as she kissed her way down his body, lingering briefly on his chest to lick at his nipples.\n\n\"How does that feel?\" she asked, pausing for a second.\n\n\"Feels nice,\" he told her, watching in fascination as she slowly moved down to his cock. She pumped it a couple of times and then took it sloppily into her mouth. She was actively drooling now, and the sensation of her throat squeezing around his glans as she took him all the way in nearly had him burst.\n\n\"That feels fantastic,\" he whispered, shivering in delight. He put his hands on the back of her head and let her do her thing, moaning in encouragement. He felt a couple of small bites on his shaft, but they only hurt for a second. She pulled her mouth free and pumped him with one hand while sucking gently on his balls, and he felt that piercing shock a couple of times down there as well.\n\n\"Is that more of your venom?\" he asked.\n\n\"Yes.\" She looked up at him, his cock near her cheek now. She kept stroking him, her dark eyes on his. \"Most potential mates are less... accommodating than you are. There's usually only time to couple once, so we have to make it count.\"\n\n\"I see.\" His balls were suddenly bursting with pressure, and he could tell that they were already slightly swollen. He thought about the blowjobs, and the sheer amount of cum that had covered her mouth and face afterward. \"It's like a performance enhancer.\"\n\n\"Yes.\" She sucked him back into her mouth, her hands dropping to her sides. He heard the subtle rip of velcro and she tossed aside the tartan skirt, followed by a black shell. Her eyes were on him suddenly, full of intensity.\n\n\"I'm nervous,\" she told him upon spitting out his cock.\n\nHe laughed. \"That makes two of us.\"\n\nShe took a step back, revealing the rest of her body. Her abdomen was human all the way down to her groin. Where her thighs should have been, the dark skin of her arachnid body started, and he saw that she had several hard bumps where her pubic hair should have been. Her vulva was light blue in color, much like her nipples, and she raised up her whole body, her crotch now level with his.\n\n\"Oh, wow,\" he whispered, getting a better look at her pussy. Alongside her pussy lips were a pair of thick protrusions that looked similar to fingers. Fleshy in nature, they flexed hungrily, massaging the skin around her vagina.\n\n\"It doesn't scare you?\" The whole world seemed to balance on that question.\n\nHe lifted his head to look her square in the eyes. \"You don't scare me. At all.\" In truth, he was fighting a battle between fear and lust, but was hoping that he could trick her predatory instincts by remaining largely confident. He reached for her, pulling her body against his. The webbing was pulled tight, and he kissed her lips, wrapping an arm around her back and squeezing the dark shell where her ass should have been.\n\n\"You're so smooth back there.\" He tilted his head to look at her behind. The thick abdomen had swirling patterns in its ridges, like a giant fingerprint.\n\nHe felt her shudder in his arms, then shift her body. His cock was now placed tightly against her opening, and the fleshy protrusions grasped at him, trying to pull him in. She shifted some more, and he sank deeply into the tightest pussy he had ever felt.\n\nBoth of them moaned, and he felt those weird fingers squeeze him tight, forming a weird cockring. Ana held still for several seconds, making odd sobbing sounds into his shoulder.\n\n\"Are you okay?\" he asked her.\n\n\"I've wanted to feel this for so long,\" she said quietly, then began moving her hips. Her whole body had to undulate to do this, and she stood on her back four legs, her front pair wrapped around him. The remaining legs were spread out, balancing on the thick strands of the web. \"To feel a man inside me.\"\n\n\"It feels good for me, too.\" He thrust himself into her, his cock moving slickly through her tight canal. The inside of her pussy was covered in weird bumps that felt like they were shifting over the skin of his cock. The sensation was indescribable, so he sucked on her neck while moaning.\n\nShe wiggled her whole body, moving in a circular patterns and then thrusting down on him. Her face was scrunched up in concentration as she moved, her human eyes closed, but her spider eyes were wide open. With every gasp and cry, he could feel her arousal growing, and he knew that her inexperience was working against her.\n\nAna drooled, her torso tensing up, and she let out a high pitched squeal when she came, her pussy fingers clamping down on his shaft. Trembling, her upper body leaned back, and he grabbed her by the waist and held her tight, thrusting into her. She flipped back up, her eyes glazed over.\n\n\"I'm sorry, I couldn't... couldn't hold back...\" she gasped. He could see how tired she was by the slump in her shoulders. Her back legs weakened, and he found himself supporting most of her weight with her arms. His balls were aching for release, the pressure within driving him out of his mind.\n\n\"Cut me down,\" he ordered. \"Let me be a part of this, too.\"\n\nHe could see the indecision on her face, feel the war inside of her head, but she nodded and ran her fingers over his body, slicing clean the lines that bound him. He fell from her web, and they both fell to the ground, Ana landing on her back with her abdomen behind her. His cock popped free, sliding around on the smooth skin of her pelvis.\n\n\"You're really flexible, aren't you?\" he asked, marveling at how her body had twisted about. Lying on top of her, he grabbed the base of his cock and lined himself up with her soaking wet entrance.\n\n\"You have no idea,\" she muttered, and then cried out when he slid himself back inside of her. Her front legs wrapped around his waist, followed by the second pair. The four legs in the back curled themselves up to support the both of them as Darren thrust himself into her, his hands on her hips. In that moment, all he could see was her, the pure lust on her face as he pounded her from above. They both moaned, cursed, and cried out to one another as he felt that magnificent pressure building, her pussy fingers squeezing him tight.\n\n\"Ana... Ana, I'm gonna come!\" His hands were on her breasts now, and he looked deep into her eyes. She opened her mouth to say something, a pair of dangerous fangs now visible. Her face had twisted up, her eyes unfocused. \"Look at me, c'mon, look!\"\n\nAna's eyes snapped onto his, and he felt that connection once more. Her features rapidly softened, her fangs sliding back into her lips. In this moment, he needed her to know who he was. Grabbing onto one of her shoulders for support, he pushed himself into her as hard as he could, the pressure in his balls now at critical mass. Her legs wrapped around him tightly, those fine hairs scratching grooves into his back.\n\nDarren let out a low roar, his whole body tightening up as he flooded her insides with hot, sticky come. Instead of just a few spurts of semen, he could feel his cock unload inside of her, a steady stream of spooge leaving his body and filling hers. His whole body shook, and his mind went blank as a second, third, and then fourth orgasm struck him. The venom in his body hadn't just gotten him hard, but had transformed his biology just enough for this moment, enabling him to empty every single sperm cell he had all at once.\n\nHe let out a scream of his own, his cries echoing off the canyon walls, and his whole body went limp beneath him. Ana caught him in her arms as he fell, his face next to hers. Gasping for air, he realized that he had become completely numb, unable to move his arms or legs any longer. When his cock slid out of her, the fingers closed, holding her vagina shut.\n\n\"Ana.\" He whispered her name, completely helpless in her grasp.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nThe moment Darren came inside of her, she felt the quickening begin. Her body soaked up his seed like a sponge, her DNA mixing with his. On an instinctual level, she immediately knew that this had been a success, that she would bear his children and carry both of their legacies forward.\n\nShe was also starving. It took a tremendous amount of energy to mate, and she had a perfectly good meal lying on top of her. When she had looked in his eyes earlier, she had fought off the urge to kill him immediately, but it had come back.\n\n\"Ana.\" When Darren said her name, he was no longer a meal to be had, but someone she knew. She couldn't eat him, not now! He had trusted her, had given her everything she could ever want in this moment. He had been tender with her, loving even, and if she turned her back on that now, she would lose herself forever.\n\nMinutes passed. She slid him off of her body, letting him rest on the dirt. Picking up her clothes, she got dressed, concentrating on the task before her.\n\n\"Your clothes are over there,\" she told him, pointing to the alcove where she had hidden. \"There's also some water and food, you're going to be hungry. There's a small hole in the back that you'll fit through.\"\n\n\"Wait, what? Are you leaving?\" His voice was weak, but slowly gaining strength. She had less than ten minutes before the paralysis wore off.\n\n\"I have to. I need to feed, and I can probably catch a deer or something.\" She let out a heavy sigh. \"I won't have to eat you after all.\"\n\n\"That's... that's great.\" Darren let out a sigh of his own. \"So... after you eat, where should I meet you?\"\n\nThe question stopped her heart for a second, but she pushed through the pain. \"You won't. I'm leaving town tonight, and won't be coming back.\"\n\n\"Wait. Why can't I come with you?\"\n\n\"You know why.\" Grabbing her chair, she undid a few pins on it and collapsed it down so that it was smaller and easier to carry. She didn't know if she would need it again, but figured that it still had its uses before reaching Oregon. \"The path I travel isn't for you. I must go it alone.\"\n\n\"You... you really don't.\" He managed to roll over, his eyes imploring her. \"Please, let me come with you. Don't you see? There's something here, between you and I.\"\n\n\"That's the venom talking,\" she told him, pinning the wheels in place.\n\n\"It is and it isn't. I feel peaceful around you. Calm even. Look, I don't fully understand where you are coming from, but I don't think you understand where I'm coming from either. You're worried about giving in to your instincts, worried about killing people and eating them. You just proved that it doesn't have to be this way.\"\n\n\"This time.\"\n\n\"Never. I can come with you, and we can teach our children the same thing.\" He let out a weak laugh. \"Our children. I'm going to be a father. How weird is that?\"\n\n\"You're going to be a father to a bunch of monsters.\" Ana shook her head in disgust. Now that the urge to mate had fled, she was left with self loathing. She had perpetuated the cycle once more.\n\n\"Ana, please. So what if they're different? It isn't what you look like that makes you a monster, it's who you are and what you do.\" Darren tried to sit up and failed. \"I'm probably a bigger monster than you, and can prove it.\"\n\n\"Darren. I need you to let me go.\" He was getting to her, and she hated him for it. Emotions welled up inside of her, and she placed a hand on her belly, her thoughts on the life that had already begun. Her body would go through so many changes soon, and she was thoroughly unprepared to go through them alone. Still, it was for his own good.\n\n\"Ana, no.\" He managed to get up on his arms. \"Please! It doesn't have to be like this.\"\n\n\"But it does. My future is dangerous and uncertain, and I don't know that I could ever forgive myself if something happened to you.\" She took another step away. Tears formed in her eyes at the sight of him, lying on the ground so piteously. She could see the heartache in his eyes as he struggled to stand, so exhausted from their lovemaking and the venom in his body.\n\n\"But what about what I want?\" In that moment, he was truly pitiful, his eyes so full of sadness and despair. \"I don't care that you're different, nor do I care about the danger. Please, let's just talk about this.\"\n\nIt was time. If she didn't leave now, she never would.\n\n\"Don't come looking for me,\" she said, holding back a sob. \"Go and live.\" She grabbed her folded up chair and scrambled up the walls of the small canyon, ignoring the sound of her name on his lips. The night her nest had burned down, she had felt no small amount of sadness, but she would gladly do it again if it meant never having to relive this moment.\n\nOnce out of the canyon, she caught a glimpse of the afternoon sun over the trees. It was time to leave this life behind and head west to Oregon, but first she needed to run, to leave the man she thought she loved behind.\n\nThe Order might catch up to him, but he didn't know anything. As long as he kept his mouth shut, he would be fine. It was with that thought that she broke into a run, Darren's cries slowly fading into the woods behind her.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nStumbling in the dark, it was with great relief that he finally saw the top of the church in the distance. Happy to see the landmark, he pushed his way through the thicket and finally finding the trail that Ana had likely brought him by. When he closed his eyes, he could see her again, her body heaving beneath his, the look of joy and rapture fixed on her pale face.\n\nIt had taken him some time to move, and getting dressed had been like trying to do a puzzle while drunk. He had eaten the food she left and drained the water, leaving all of the trash behind. It had been almost an hour before he squirmed out of that canyon, and the woods had taken no pity on him. Covered in scratches, bemoaning his return journey, wondering where everything had gone wrong.\n\nSomewhere in the back of his mind, he heard that small voice shouting at him to snap out of it, to wake up to the reality that Ana was, somehow, a monster walking the earth. The voice bounced around inside his skull like a stray bullet, fighting for any sort of acknowledgement, but Darren could only think about the look of sadness on Ana's face when she had left, her final words floating to him across the darkness.\n\nDon't come looking for me. Go and live.\n\nWere those the words of a monster? She had clearly been using him, but to what end? Hers was a body built for killing, yet she had let him go. Did she not fear discovery? Being hunted down by scientists, hunters, or even the media? While Bigfoot was a big deal, what would people say about a giant spider-woman roaming the forests and eating hapless hikers?\n\nMaybe he should follow her. His hands patted his front pocket, where a small slip of paper lie. He had found it on the ground where her clothes had been, a set of coordinates written on them. It had to be where she was going, but for what purpose? Nothing made sense anymore, and he needed to get home, to lie down and sleep off whatever she had poisoned him with. He could always make a decision tomorrow.\n\n\"Man, you've got it bad.\" Dwayne ducked to avoid a branch that swung back when Darren pushed it out of the way. \"First girl you really like, and she's got eight legs.\"\n\n\"Must be a leg man,\" Hayden added from Darren's left. \"Think of all those silky smooth thighs you could squeeze. Absolute heaven.\"\n\n\"Shut up,\" Darren mumbled, thinking of the scratches along his backside. He imagined there were four of them, radiating outward like a star. He wanted to be horrified, but had instead been enthralled. Something about seeing that large body hovering before him, that strange feeling of being helpless had made him hard as a rock. Seeing Ana's sweet face looking down on him had flipped the script, the terror of the moment stripped away by his trust for her. Perhaps it was misplaced, but something about being trapped by a woman caught up in the throes of lust had overpowered any fear he may have had.",
        "\"Super intense, though. I'm surprised you can walk.\" Little Mike kicked a branch off of the path, his rifle held low.\n\n\"Why are you guys still here?\" he asked, blinking tears of confusion. \"Why do you still follow me around?\"\n\n\"That's simple, little brother.\" Dwayne put his hand on Darren's shoulder. \"No man left behind.\"\n\n\"But I left you behind. I left all of you behind.\"\n\nLittle Mike chuckled. \"If that were true, would we still be here?\"\n\nWhen Darren stepped off of the path and onto the road, he felt the cold chill of the night breeze across his face, and he was once again alone. The stars were smeared across his vision, and he wiped his eyes off with his shirt. Sticking to the sidewalks, he navigated through town, his eyes focused on the steeple of the church. So many things made sense now. Ana hadn't planned this either, hadn't forced the two of them together. He had moved into her territory against her wishes, had probably put her existence in danger, and she had done her best to tolerate him.\n\nHow many times could she have killed him? He slept just a door away, after all, and she could move so quietly. If she had killed him that first night, everyone would have assumed he just up and left. These thoughts tumbled through his head, the vision of her face as she mounted him, her voice crying to the sky above when she came. Truthfully, she had every opportunity to be the monster his mind told him she was, but his heart said something different.\n\nShe was no more a monster than he was. Stepping beneath a streetlight, he saw the phantom blood on his hands for just a moment. He supposed now that she had injected him with something, the spider's bite chasing away the shadows that had tormented him. Now that she was gone, how long would his peace last? Was her absence something he could deal with, or would those old feelings gradually return, threatening to consume him once again.\n\nThe walk across the front yard of the church was long, his footsteps weary. He fumbled the keys out of his pants pocket and opened the door to his home, his eyes on the yawning darkness before him. He hadn't known it this morning, but Ana would never come here again. This place was now his, but for how long? Ana had disappeared so suddenly, and he knew that suspicions would arise. In granting him his freedom, she had consigned him to a different kind of prison.\n\nFire blossomed in his right temple, the punch coming from nowhere. He fell sideways, crashing into the wall and raising his arms to block the following kick. Clumsily pushing his attacker's foot aside, he stood and tackled him into the opposite wall, plaster cracking and falling down around them.\n\nA strong fist knocked him for a loop and then he was launched across the room, colliding with the couch and rolling over the top. The lights came on and he saw Jeffrey, the guy from the bar, walking toward him. His friend Cyrus stood in the kitchen, leaning against the counter.\n\n\"What do you want?\" Darren groaned, pushing to his feet, but he already knew. His lower half was concealed by the couch, so he took the slip of paper from his pocket and tucked it into his boot. He couldn't let them find it.\n\n\"We want the spider,\" Cyrus said, a jar of peanut butter in one hand and a spoon in the other. \"We know that she lives here, and we know that you're involved.\"\n\n\"I have no no idea\u2014\"\n\nThe air was knocked out of him when Jeffrey kicked the couch and sent it into Darren's gut. Such a feat should have been impossible, but Jeffrey followed it up by circling around to grab Darren by the throat, lifting him off the ground.\n\n\"We really don't have time for this. We've been watching, and we know.\" Cyrus licked the spoon and then eyed the jar with shame. \"We've been waiting a long time for you to come home. Sorry about this.\"\n\n\"I... you...\" He couldn't speak, not with the grip that Jeffrey had on him.\n\n\"Tie him up,\" Cyrus said, and Jeffrey forced Darren to sit in one of the kitchen chairs. A rope appeared in Jeffrey's hand, and with a casual toss, it circled Darren's arms and legs, binding him to the seat as if by magic.\n\nOf course. Why not? Darren glared at them.\n\n\"I must admit, she had us fooled. We racked our brains for quite some time, trying to figure out where she was hiding. And then we couldn't quite lock down how you kept her hidden from your roommate.\" Cyrus took another bite, then set the jar down. \"Neither of us expected her to be playing the role of crippled librarian. That was a new level of subterfuge.\"\n\n\"Probably waiting to snag a kid when their parents weren't looking.\" Jeffrey gave Darren's chair a kick. \"Do you know what kind of monster you've been helping?\"\n\nHe looked back and forth at the two of them, his heart racing. Who were these guys?\n\n\"It's not like that,\" he told them. \"She's not like that.\"\n\n\"How long have you even known her?\" Cyrus asked, pulling up another chair and sitting across from Darren. \"Do you even know what she is?\"\n\n\"I... um...\" He hung his head. \"I want to talk to my lawyer.\"\n\nJeffrey laughed, and Cyrus just shook his head.\n\n\"You're not under arrest,\" he explained, pulling out a handkerchief and dabbing Darren's lips. Fresh blood came away, staining the white fabric with crimson. \"We answer to a much higher authority than the sheriff.\"\n\n\"She's not like that, though. She isn't.\" He shook his head in denial, the walls closing in on him. First she had left him, and now these two had found him. What other surprises did life have in store for him this evening?\n\n\"She's a killer, Darren. Her kind, they treat us like a delicatessen. They pick out the fattest cuts and take us home to feed to their children. They toy with humans, tying us up in webs and sucking out our insides. They are a lot of things, but human isn't one of them.\" Cyrus regarded him for several moments, sympathy in his eyes.\n\n\"She got to him,\" Jeffrey said, kneeling down. \"Look at his pupils.\"\n\n\"My... pupils?\"\n\n\"Yeah, you're right. They're dilated.\" Cyrus leaned toward him. \"Has she bitten you?\"\n\n\"I... don't...\"\n\n\"Fuck it.\" Jeffrey grabbed the chair and tilted it forward, examining Darren's neck and arms. Darren shifted back and forth, doing his best to fight back, but Jeffrey slapped him in the face, stunning him. Unable to move, he felt the neckline of his shirt torn open, his chest exposed to the light of the kitchen.\n\n\"Yep, right here.\" Jeffrey flicked Darren's nipple, causing him to flinch.\n\n\"Several times, it looks like.\" Cyrus let out a sigh. \"We need you to tell us where she is. Right now.\"\n\n\"Fuck you.\" Darren's mind cleared and he glared at the man in front of him. \"You attack me in my own home and then\u2014\"\n\nJeffrey punched him in the face again, his head rocking back and his vision dimming.\n\n\"I hate repeating myself almost as much as Jeffrey hates hearing me repeat myself. This doesn't have to be unpleasant.\"\n\n\"No.\" What little he even had to offer would do them no good, but he refused to give them the satisfaction. Ana had left him, and the least he could do was ensure she had a head start.\n\nCyrus gave Jeffrey a nod. Jeffrey pulled a short knife from his belt and jammed it into Darren's thigh.\n\nDarren screamed, fire ripping through his leg and bullets of sweat blossoming across his brow. His vision went dark again, but he was brought back suddenly by the warmth that spread across his leg. Letting out a cry, he looked down to see Cyrus holding a ball of white light over his bloody leg. His skin knitted itself back together, the sensation akin to a bad burn.\n\n\"We can do this all night,\" Cyrus told him. \"Death won't come for you. By the way, the process of fixing you hurts just as bad as getting cut. It's a cost that you have to pay, but it works to our advantage.\"\n\n\"Eat... my... dick.\" Darren spit in Cyrus' face.\n\n\"Fuck this guy,\" Jeffrey muttered, slashing Darren's face with the knife. Darren cried out once more, the pain of the wound ripped away by the fiery sensation of his skin knitting back together. The knife found a perfect place between his ribs, and he coughed up a copious amount of blood.\n\n\"These ones will hurt the worst,\" Cyrus told him, but Darren was looking past Cyrus now, his eyes locked on the dark shadow that had formed behind him. The leaves of the jungle hung low in his kitchen, and the shadowy figure sneered when he stepped into the light.\n\n\"Taste of your own medicine, ain't it?\" Cutter asked, an evil grin on his face. \"Serendipitous, I would say.\"\n\n\"You deserved it,\" Darren growled, earning a pause from his attackers.\n\n\"What did he just say?\" Cyrus asked.\n\n\"I didn't deserve it, none of us did!\" Cutter spat on the floor, his phlegm a tarry black color. \"None of us deserved to rot in that God-forsaken country, and you couldn't even leave enough of me for the rats to eat.\"\n\n\"What you did was wrong.\" Darren tensed up against his ropes, his eyes boring into Cutter's. \"You got what was coming to you.\"\n\nA knife in his gut made him cry out his brother's name, but Dwayne didn't come. Cyrus asked him something, but all he could focus on right now was the stink of the jungle, the dank smell of rotting vegetation, and the his former squad captain hopping from one foot to another, his pistol gripped tightly in one hand.\n\n\"They deserved it, they were nothing more than animals.\" The room was gone now, and Cutter stood in a small hut. Behind him was a young girl of about ten, bent over backwards on a table with blank eyes on the ceiling. \"This is what we do! We aren't just here to fight Charlie, but to demoralize them, to make them regret taking up arms against us!\"\n\nLittle Mike gagged and stepped outside. Hayden just shook his head in disappointment.\n\n\"This is FUBAR, Cutter. She was just a kid.\"\n\n\"Yeah, well, she was a woman when I was done with\u2014\" Cutter's words were cut off when Dwayne crossed the room and, in one smooth movement, ripped off his helmet and clubbed Cutter across the face with it. He fell to one knee, blood pouring from his nose.\n\n\"Fuck you!\" Cutter shrieked, lifting his pistol at Dwayne. Dwayne smacked him again and the gun went off, barely missing him and punching a hole in the house. Dwayne threw his helmet at Cutter to distract him, but Cutter swatted it away, standing up to shove the barrel of his pistol into Dwayne's chin.\n\nDarren tackled him, both of them colliding with the table and knocking the girl's body down. When those lifeless eyes met his, something inside him snapped.\n\nCutter tried to pick up his gun, but Darren drew his knife and stabbed him.\n\nWith each flash of American steel, Cutter let out a cry of agony, yet nobody tried to stop him. Each time he pierced flesh, he felt it in his own body, years later and thousands of miles away. Darren screamed in agony, grief, anger, and sorrow as he plunged the knife into Cutter even after he was dead, lost in the moment. Every time he pierced Cutter's flesh, he saw their faces, the faces of the men and women he had watched die, staring at him through the fog of war.\n\nIt was Dwayne who pulled him away, dragging him off their dead captain. Darren was crying now, but nobody said anything, not even Little Mike who had come back at the sound of the gunshot.\n\n\"Hey, it's okay, shhh.\" Dwayne looked at the others, his features hard. \"What happened here can't leave this room, do you hear me?\"\n\nThe men looked at Cutter, then at each other. There had been no love lost for their captain, and they had all been worried about his recent behaviors. War was hell, and Cutter had decided to cope by becoming a demon.\n\n\"Take him outside,\" Hayden said. \"We can report him for desertion, or even MIA. Just walked off in the jungle one day and never came back.\"\n\n\"Bring him over to the jeep,\" Dwayne said, supporting Darren. Little Mike and Hayden dragged Cutter through the dirt toward where they had parked. The jeep was stacked with jugs of diesel for a generator back at camp.\n\nThey moved quickly while Darren watched, tears streaming down his face. They dug a small trench and, after removing anything of value from Cutter that didn't have his name on it, tossed him in. They soaked the trench in diesel fuel, the smell burning Darren's nose. An hour had passed since Cutter had demanded they stop and inspect the village. Fifty minutes had passed since Darren had heard him shoot the girl. Cutter's eyes stared blindly at the sky as Little Mike used an acetylene torch to light the trench, all of them watching as the fire burned away any evidence that Cutter had ever existed.\n\nSatisfied that he was done, they took turns filling in the hole. Nobody was left in the village to watch their deed, and only Darren remained to tell the tale.\n\nCutter's burnt hand forced its way through the dirt, smoke emanating from his charred flesh.\n\n\"Where is she?!?\" Jeffrey screamed, and the jungle was gone. He stabbed Darren in the side, and his lungs filled with fire and blood, and Darren screamed in agony, one hell exchanged for another.\n\n\"She isn't coming back!\" he screamed. \"She's gone!\" Cutter's ghost was no longer in the room, but he knew that he was on his way back. It was a long walk to get here, after all.\n\n\"Where did she go?\" Cyrus asked. Jeffrey placed the edge of the blade under Darren's kneecap.\n\n\"I don't know. I really don't know.\" Tears streamed down his face now, his chest aching. \"She left me behind. She left me...\"\n\n\"I've had enough of this.\" Cyrus put the orb back in his pocket. \"He's hallucinating half the time, and now he's apparently broken up over her. We would have more luck squeezing blood from a rock, and every minute we waste here makes it that much harder to catch her.\" He pulled a fancy pocket watch out of his jacket. \"We'll just have to use this.\"\n\n\"Ugh. I'm not looking forward to that.\" Jeffrey spat on the floor. \"Makes me motion sick.\"\n\n\"Yeah, well...\" Cyrus looked at Darren and then flipped open the watch. Jeffrey smeared some of Darren's blood across the face of it using the knife, and then Cyrus snapped it shut. \"Here goes.\" He twisted the knob on the top. At first, nothing happened.\n\nSlowly, Darren became aware of movement all around him. Turning his head, he saw his own face, twisted in agony. Surprised, he leaned away from the phantom as it squirmed. Almost immediately, a wave of nausea rushed over him, and he leaned to the side and retched.\n\nPhantom Darren twitched for another couple of minutes and then stood up, his legs bent oddly. After a few more seconds, the phantom tossed itself to the floor, then bounced off the wall and walked backwards out the door.\n\n\"God,\" Darren muttered, his eyes wide.\n\nCyrus coughed into his hand, his eyes face looking a little green. \"I've got it paused for now. We should be able to track him for the last four hours at least, if not longer. Based on the dilation of his pupils, she bit him more recently than that.\n\n\"Good. The sooner the better.\" Jeffrey held onto the kitchen counter for support. \"What about him?\"\n\nCyrus shook his head. \"It pains me to say it, but he is under her thrall. You don't have to be with us, but you can't be against us.\" He stood up and put a hand on his stomach. \"I'll be outside. We need to get rid of all of the evidence, and that includes the web.\"\n\n\"Cleansing fire?\" Jeffrey asked.\n\nCyrus nodded. \"Make it look like an accident.\" With that, he stepped outside. The overwhelming nausea was already fading, and Darren felt like he could breathe again.\n\n\"Always do.\" Jeffrey knelt in front of Darren. \"It didn't have to be this way. That's something that you should think about for the rest of your life.\" He reached into his pocket and pulled out a pair of plastic rods filled with a neon pink fluid. He cracked them in his hands and gave them a shake, an intense glow forming within.\n\nJeffrey walked out of the room and into the church. Darren fought against his bonds, but only succeeded in tipping his chair over. A soft pink glow came from down the hall, and he heard the subtle crack of another rod in the distance. When Jeffrey came back, he knelt down and frowned at Darren.\n\n\"Sorry it's gotta be this way, soldier boy.\" He cracked one of the rods and dropped it near Darren's face. \"They burn pretty hot. Once it ignites, the end will come quick.\"\n\nDarren didn't respond. So much hatred burned in him right now that he couldn't.\n\n\"Give my regards to your brother.\" Jeffrey slapped Darren's face playfully. \"Yeah, we read about that when we looked you up. I know what it's like to lose someone, too. I'm actually envious, cause the two of you won't be apart for much longer.\" He stood up and looked around the living room, then grabbed the jar of peanut butter off of the shelf. Holding it up in a mock salute, he walked out the back door and disappeared.\n\nDarren struggled against his bonds, yelling for help, but knew it was useless. Every time he felt like he was about to get a hand free, the rope around his wrists would retie themselves. However, he was able to twist himself around enough that he could give the glowing rod a quick kick with the toe of his boot, sending it a few extra feet away.\n\nThe soft puff of ignition rolled down the hallway, and a small plume of smoke drifted in as if checking the place out. Darren closed his eyes and stretched, hearing the wood of the chair creak. No matter how much the rope restrained him, it couldn't keep him tied to something that was broken.\n\n\"Yeah, that's right, wiggle!\" Dwayne stood above him now, his hands balled into fists. \"This is just like State Championships, remember? You and Robbie Thomway, only this time, you could actually win!\"\n\n\"Fuck you,\" he muttered, straining his biceps. The arms of the chair creaked some more, and he heard the soft crackling of wood. Nearby, the glowing rod had changed color, and waves of heat came off of it, reminding Darren of a bonfire. He swallowed, his throat suddenly dry, memories of men with napalm burns in the medic's tent. Not like this, he thought to himself, adrenaline surging through him.\n\n\"That's right, pull!\" Dwayne knelt down and grabbed Darren's wrist. \"This one! This one is about to go!\"\n\nDarren let out a shriek of rage and yanked, the rope cutting into his wrist. The arm snapped free of the back, allowing him to move his forearm back and forth. He shoved against the ground, moving away from the glowing rod as the couch began to melt.\n\n\"Go! Go!\" Dwayne cheered. \"Kick those legs!\"\n\nUsing his free arm, he tilted up onto his back, then swung himself over and onto the ground. The chair let out a pitiful groan, and he felt another joint loosen. Spasming wildly, he managed to tilt his legs back into the air, then bring them down again.\n\nThe front left leg of the chair snapped off and he kicked his right leg, the wood flexing beneath it. It broke just as the carpet caught fire, and he watched in horror as a ball of fire expanded from the rod, slowly encompassing the room. Scrambling onto his front, he made his way to the back door, using the hallway wall to help him stand. Hunched over, he grabbed at the doorknob, pulling it open and tumbling into the yard.\n\nAbove him, the sky glowed red, and he could hear the loud crackling of the steeple as it burned. He continued his slow crawl, moving farther and farther from the church, the heat licking at his back. Able to stand a bit, he scurried even farther away, his eyes on a nearby tree.\n\nOnce near, he crashed into it backward, breaking the back of the chair. The rope squirmed around his body like a nest of snakes, and he fought to get a hand free of them, searching the ground for anything sharp. A loud boom sounded, and took a second to watch a wave of fire roll its way toward the top of the building. The steeple let out a loud groan and collapsed inward, firing a ball of flame into the sky.\n\nHe watched the fireball climb into the sky. Though it had been brief, that had been his home. A wave of grief rolled over him, followed by anger. He wasn't going to allow them to get away with it.",
        "A dark figure ran toward the back of the house, then took several steps back, gazing up in awe.\n\n\"Walters!\" Darren hollered for the man, but doubted he could be heard over the flames. Fighting off the rope's grip, he grabbed a semi sharp rock and tried to cut his other hand free. \"Walters, over here!\"\n\nEventually the lawman turned and saw him. Running across the yard, he came to a stop when he saw Darren struggling to free himself.\n\n\"What in the hell happened here?\" The sheriff asked, kneeling down with a knife. He quickly cut through the band of rope by Darren's wrist, and the rope went limp. Walters had Darren free in a matter of moments. \"Where is Ana?\"\n\n\"Not here. She...\" He tried to think of what to say. \"She left.\"\n\n\"Did she do this?\" Walters looked back at the church. \"Why did she leave?\"\n\n\"This wasn't her. It was the guys from the bar. They're after her, so she ran.\"\n\n\"I'll put out an APB then. Maybe the state police can catch them.\"\n\nDarren stood up, leaning against the tree for support. \"You don't know these guys. By all means, put the word out, but they're slick.\"\n\n\"You don't suppose...\" Walters looked at the house and then back at Darren. \"I've always wondered if that girl was running from something. Now I wonder if it's caught up with her.\"\n\n\"I think it has.\" Darren bent over, taking several slow breaths. His ribs ached from getting free and it was so hard to breathe right now. He coughed a few times, then stood back up. He thought about the slip of paper he had seen, focusing his mind's eye on remembering them. They had been coordinates. \"Look, I need a big favor from you.\"\n\n\"I don't know that now is the time, son. We have a major mess here to consider.\"\n\n\"Just hear me out. These men are after Ana, and they mean to hurt her. I think I know where they're going, but it's way out of your jurisdiction. They did this to get rid of me, and I need them to think they succeeded.\"\n\n\"So what do you want from me?\"\n\nDarren's face tightened into a scowl, and he grabbed at the dogtags just beneath his shirt. Soaked in his own blood, he turned his hateful gaze on the sheriff, who took a step back.\n\n\"These are the type of men who operate above the law. When you call this in, you can't mention me. They're expecting you to find a body eventually, and I need that extra time to prepare.\"\n\n\"To prepare for what?\" Walters asked.\n\nOne at a time, they stepped from the shadows, illuminated by the light of the fire. Little Mike with his over-sized pack and his rifle. Hayden with a cigar stuck in his teeth, his gun casually resting on one shoulder. Dwayne with his arms crossed, the wrapper of a Snickers bar dangling from his front pocket. Darren's eyes met theirs, and they all nodded in agreement.\n\n\"To prepare for war.\"\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nOkay everybody, only two more chapters left in this story. I hope you're ready to see how it ends because I'm excited for you to find out!\n\nAs always, rate, comment, or send me a feedback letter. I read them all (but don't always respond). Follow my bio or click on it to find out when the next release is coming (schedule is posted there).\n\nI'll see you all again soon! Take care of each other!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "biting",
        "bondage",
        "breeding",
        "creampie",
        "monster sex",
        "reluctant",
        "spider girl",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-last-of-her-kind-ch-05"
}