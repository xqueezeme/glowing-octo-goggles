{
    "title": "The Rebellious Slave Ch. 02",
    "pages": [
        "Author's Note: Hello, fabulous readers! And holy crap, this chapter is long. It covers the original Chapter 4 and parts of Chapter 5, but contains about 10k words worth of new content. I wanted to make sure that our story starts off with a solid introduction to the world and characters, so be warned, there is a lot of exposition. Hopefully it's not too much, but that's for you all to decide. If you are so inclined, I'd really appreciate it if you would rate this chapter and share any comments/criticisms in the comments. Even now, I am hoping to improve my writing skills. I'll be hanging around, so feel free to ask questions as well. And thanks so much for the warm welcome I received on the last chapter. Your continued support makes all the long weekends and late nights worth it. :)\n\n\u2014HisPet21\n\n***\n\nKara sat in the corner of her cell, her knees pressed against her chest and her hands wrapped around her legs. It was hard to be optimistic, but at least she was comfortable. The room was hardly the size of a walk-in closet and utterly bare, but it was pleasantly warm and every surface was covered in white padding, even the ceiling. If Kara hadn't been so nervous, she could have easily lain down and taken a nap before the upcoming auction, letting the humming of the air vents lull her to sleep. But there was a one-way mirror built into the far wall and it fascinated her. Its shimmering surface caught the light in interesting ways and though she wasn't sure why, Kara couldn't stop staring at it. \n\nTentatively, Kara stood to her feet and pressed her hands against the mirror, letting the coolness of it sink into her still-warm skin. Her reflection, as if in a trance, followed suit and then they were fingertip to fingertip, fogging up the glass with their mutual breath. For a brief moment, Kara wondered if there might be someone else just beyond the mirror, staring into eyes that could not stare back. She thought about what they might look like and why they might have chosen to stop by her cell. Then Kara glanced up and as her eyes met those of her reflection, she started.\n\nIt was as if...it was as if she were looking into the eyes of a stranger. \n\nTruth be told, it had been almost two months since Kara had happened upon a mirror. In that time, there were so many little things she'd forgotten about herself. There was a small brown mole above her left cheek that she'd mistaken for a smudge of makeup, and dozens upon dozens of freckles dotting the \"adorable pigeon nose\" Uncle Florence had always teased her about. There was a barely noticeable scar on her neck from a flying piece of shrapnel that had narrowly missed the vein and running a single finger across it, Kara realized that she'd forgotten about that, too. Those details were hers and distinctly hers, but somehow, they seemed out of place on her freshly painted face. The woman now staring back at Kara looked more like her doppelganger than it did her, perhaps from another era or even another world. \n\nIs this...is this me? Kara wondered. Is this what I look like now?\n\nDuring the war, Kara hadn't had any time to contemplate her reflection. She had only ever caught glimpses of it, usually in a muddied puddle or a broken storefront window. It had been dirty and distorted then, but more jarring still, the woman staring back at her hadn't looked anything like this current manifestation. That Kara had been covered in fresh and dried blood, from the numerous procedures she'd performed on the field: removing bullets from downed soldiers, patching up gaping wounds, and aligning broken bones. Her arms had been covered in bruises from when she'd been forced to dive against concrete for cover, and her eyes...her eyes had been utterly blank. Once so lively and hopeful, they had been deadened by the never-ending shifts of work and the ever-present smell of death and despair. Appalled, Kara studied herself in the mirror and realized she'd forgotten she could be beautiful. \n\nWhen was the last time I wore makeup? Kara thought. Or even brushed my hair?\n\nYet tonight, she looked stunning. Her captors had spent hours prepping her for auction, until she practically sparkled beneath the cheap, fluorescent lighting of the cell block. Dark, brown locks cascaded past her shoulders, framing a face that was gentle, but not naive, while her perfectly pouted lips and lightly flushed cheeks hinted ever-so-slightly at the baser tasks awaiting a slave. Glancing back into the mirror, Kara thought she looked brand new, as if she'd been made for nothing more than standing still and looking pretty. But her fabulous blue eyes\u2014accentuated with dark liner and heavy mascara\u2014told another story entirely. They told the story of a woman who had seen war and tried to be brave in spite of the horrors. No amount of makeup would be able to cover up the determination behind those eyes, but it seemed to have softened it well enough and Kara supposed that was kind of the point.\n\nIt's not so bad, Kara told herself, pressing her fingers to her lips and then eyeing the dark, red splotches that now clung to them. It...it looks nice.\n\nBut the clothes...the clothes were just too much. Red and gold were traditional for a newly captured slave and in those suddenly obscene colors, Kara felt more naked than she ever had before. Even her nails had been painted a deep, dark red and then stamped with gold leaf. The vibrant hues stood out with sickening clarity against her pale, white skin and made it impossible for her to hide her shame. Maybe it was unfair of her, but she did feel shame\u2014shame at having been captured so easily and then allowing herself to be trussed up like this. They had put her in a gorgeous, unlined lace bra and then secured a small, silver ring around each of her nipples to ensure that they stood out against the cloth. There was also a matching pair of panties, as well as an ankle-length loincloth which hung from her hips on a gold-plated chain. The fabric was all maroon, but it had been trimmed in still more gold and there were tiny, clear gemstones sewn into the lingerie. \n\nNot diamonds, Kara thought, looking down at them in horror. It has to be moissanite, or maybe even cubic zirconia. But not diamonds. \n\nIt seemed grossly negligent to dress someone like her in such flashy, expensive things. The material was softer than anything she'd ever touched and she kept worrying that it would snag on her nails. That seemed like a stupid thing to fret over about at a time like this, but she did anyway. She couldn't help it. In that moment, Kara felt like an overly rich dessert: the kind that comes in portions that are much too big for one person, all covered in chocolate and caramel and cream. Seeing herself like that, Kara knew precisely what the monsters who had enslaved her intended. They had dressed her up only so that she would inspire hunger in her enemies and could then be devoured inch by precious inch, until her new master grew full and then sick on her. She eyed the matching red and gold cuffs around her wrists and ankles and was reminded that as lovely as she looked, it was only so that she would appeal to those who liked to own pretty things and then ruin them. \n\nDecadent, Kara thought, finally finding the perfect word for how she was feeling. Decadent, and just...nauseating. Clutching her hands to her chest, Kara could feel her heart grow cold and shivered. Oh god, someone's going to buy me tonight.\n\nFor possibly the hundredth time that day, Kara turned away from her reflection and pulled back her hair, just to see if it was still there. It was, of course. It always was. Conspicuously tattooed onto her left shoulder was her official registration number, a simple barcode with the digits \"365785\" written underneath. The ink was still fresh and the surrounding skin was red and raised, so that the bold black lines stood out even more prominently than they normally would. Tentatively, Kara touched the tender skin and winced, watching as a small bead of blood trailed down her back. Clothing and cuffs could always be taken off. Lipstick and blush could be washed away, but this...this was permanent. It seemed so ugly to her, tainting her in ways that she couldn't quite grasp, and the tracking implant was still worse. Kara couldn't even get a glimpse of it. No matter how hard she tried, she couldn't angle her head in just the right way. But she could feel it, a little lump along her spinal column situated in the center of her lower back. The mere thought of it blinking under her skin made her shudder and she quickly pulled her hand away.\n\n\"Alright, girl. You ready?\"\n\nKara swung around violently, unaware that her cell had been opened. There was a man leaning against the door frame, dressed in the silver, navy-blue uniform of a Martkorp handler and looking pointedly over at her. The little red logo she'd come to hate was embroidered on his chest and with a slight nod, he motioned for her to come forward. Kara hesitated. On the one hand, this was going to happen with or without her consent. On the other hand, she couldn't quite get her feet to move. Up until that moment, Kara could rest easy in the knowledge that Martkorp's employees could only be so cruel without risking their livelihood, but once purchased, that safety net would disappear. Her new owner could do whatever they wished with her and there'd be nothing she could do about it.\n\n\"Look...,\" the handler sighed, and he ran his fingers through his hair, then offered her a reassuring, if not entirely convincing, smile. \"I know this must be hard, but I'll take good care of you. Promise. I'll cross my heart and everything.\" And true to his word, he did, but Kara stayed where she was, still frozen in time beside the one-way mirror. \"Come on, there's no sense in dragging this ordeal out. I'll answer any questions you may have, but we have to get going. Now.\"\n\nI have to move, Kara thought, staring down at her feet and willing them to obey her. I have to move, or they'll take me by force.\n\n\"Last chance,\" the handler warned, reaching for the roll of chain hitched to his belt. \"I'd honestly rather not have to parade you through the halls on a lead.\"\n\nIt was the push Kara needed to finally overcome her fear. With a deep breath, she nodded, then let the handler guide her through the doorway. Just outside, there was a long, marble hall and either side was lined with additional holding cells, most of which were empty. The sales floor would undoubtedly be packed, but this place seemed to be for overflow or, in the case of an upcoming auction, storage. As Kara glanced around, looking in on those who couldn't look back, she found her mind wandering. Who were these people? How had they gotten here? And what terrible fate awaited them? But then the handler gripped her firmly by the upper arm and tugged her forward. She was grateful that he still hadn't cuffed her wrists together and in order to keep it that way, obediently walked along beside him. Their footsteps echoed off the marble and Kara found the sound strangely hypnotic.\n\n\"So, um...,\" Kara began, once they'd made it to the service elevator at the end of the hall and had started to descend. \"What are these things usually like?\" \n\n\"I suppose that it varies from party to party,\" the handler told her with a nervous little shrug. \"Tonight's a big one and all of the major dignitaries will be there, so we're doing a combination silent and live auction. For the first two hours, clients can peruse the merchandise and put in bids to try and reserve a piece. If the bidding war on a piece hasn't settled by the end of the second hour, the auction goes live.\"\n\n\"Wait, it goes live?\" Kara sputtered. The awful, twisting butterflies in her stomach had suddenly begun to flutter about more violently and groaning, she hugged her stomach. It was all too real. The adrenaline of the first 24 hours of capture had worn off long ago and now, the terrible situation before Kara was coming into focus. \"They...they're doing live auctions? Tonight?\"\n\n\"Of course,\" the handler replied, sounding confused. \"It's more fun that way, isn't it?\"\n\n\"But I...I don't...\"\n\nThen the elevator doors parted and in spite of herself, Kara gasped. The sheer size of the auction hall was enough to take her breath away, never mind the lavish atmosphere. An ancient, glass chandelier as big as an armored tank hung from the center of the room and below it were several dozen sitting tables, packed with prospective buyers chatting idly away as waiters in dark, black tuxedos offered them hors d'oeuvres and champagne on silver platters. There were at least a hundred of them, and the hall wasn't even full yet! Glancing out front, Kara could see that the line to get in extended well beyond the doorway and a steady stream of prospective buyers was filing into the auction hall, all dressed in fine evening wear and looking cheery. They formed little cliques as they waited, laughing, slapping each other on the back, and congratulating one another for some reason? Then once they reached the front desk, the prospective buyers would hand over their ID cards, sign in, and pay the entry fee in exchange for an event catalog, a bidding card, and what looked like drink tickets. There was a buffet near the back of the hall and a bar, too. But then, something far more interesting and far, far more sinister caught Kara's eye. \n\nImmediately beside the front door were rows upon rows of chairs, all arranged before a well-lit, wood panel stage. The instant she saw it, Kara knew it was for the live auctions. There was a podium directly in front of it and a large, leather-padded \"X\" with wrist and ankle restraints at the center of the apron. Kara swallowed hard as her eyes drunk it all in and tried not to think too far ahead. Instead, she forced herself to focus on her current predicament. On the right and left sides of the auction hall, Kara could see a wooden platform draped in strips of red cloth and decorated with golden throw pillows, but more importantly, that's where her fellow slaves were being held. Not all of the spots along the wall had been filled yet, but a number of slaves were already kneeling there with their ankles chained to the platform and their wrists held high above their heads. Instinctively, Kara backed away, but met resistance as she ran into her handler's chest.\n\n\"It's not as bad as it looks,\" the handler promised, and gently grabbing her by the shoulder, he offered Kara a comforting squeeze. \"Take a minute to get your bearings and we'll get you set up, okay?\" \n\nKara silently nodded, then let the handler guide her to her assignment along the wall. It was easy enough to spot. There was a copper plaque next to it, and the words Kara Chrystein: Military Medic had been engraved into the metal. That was disconcerting, but even more so was the little clipboard resting precariously on the ledge. It was attached to the platform with a silver chain and when Kara glanced over at it, she saw that it was for placing bids during the silent auction. There was a line for each bidder's offer and then their corresponding signature, as well as some room for \"additional notes.\" Kara was stunned to discover that her starting bid was 50k qualid, a full year's salary when she'd been a military medic. \n\n\"Alright, girl. Here we are,\" the handler told her, and he grabbed a stepping stool out from under the platform. \"Once you're up there, kneel on the pillows for me and get yourself comfortable. You probably won't be moving for a few hours, so keep that in mind.\"\n\nKara cringed at that, but chains seemed to be the norm now and she'd have to learn to live with them. With a deep breath, she relinquished herself to her fate and stepped up to the stool. The handler helped her onto the platform, then gave her a few minutes to get situated. Kara used that time to strategically arrange the pillows underneath her, doing her best to minimize the strain on her knees. When she was done, the handler took her wrist cuffs and attached them to a set of chains dangling down from the wall behind her, then her ankle cuffs to a pair of screw eyes embedded in the platform. When he came back around to face her, she realized that she would now be at eye level with her prospective buyers and perfectly positioned for each and every hungry gaze that came her way.\n\n\"We should probably go over the rules,\" the handler began, pulling a well-worn piece of paper from his pocket and unfolding it. \"Let's see...ah, yes! Gags. We don't normally like to gag the slaves, not unless we have to. Sometimes, the clients like to ask questions. Answer respectfully and you can go the night without an uncomfortable ball in your mouth. Make sense?\"\n\n\"Yes,\" Kara answered, even though nothing about selling human beings made sense to her. \"I guess.\"\n\n\"Great!\" the handler exclaimed, and he want back to his piece of paper. \"Let's see now...I mean, obviously, don't be an ass. Spitting, biting, swearing\u2014none of that's allowed. A medic will come by in a little while with some medication for you, which should hold off any nausea due to nerves. Any questions?\"\n\nWhy? Kara thought. Why are you doing this? But she knew better than to ask that question aloud.\n\n\"No, I...I think I'm fine,\" Kara told him instead. \"I, uh, think.\"\n\n\"Wonderful!\" the handler beamed. \"Now, the auction should be starting soon, probably in about...,\" and he shook down his sleeve so as to get a better look at his watch, \"...thirty minutes or so. Try not to panic, and you'll be fine.\" Then the handler gave her one last sympathetic look, nodded a goodbye, and started back toward the elevators.\n\n\"No, w-wait!\" Kara cried, because she had something to say still, and the handler stopped. \"It's just...you were kind to me. Thank you.\"\n\n\"You're welcome, princess,\" the handler replied with a sad little smile. \"Keep your chin up, alright?\" Then he turned around again and was really gone.\n\nProbably to fetch someone else for the auction, Kara reasoned. But right now, I need to worry about myself.\n\nFirst things first, Kara wanted to test her range of motion. She wouldn't be getting up from the platform anytime soon, but the chains had enough slack in them for her to rest comfortably and even change positions to some degree, thank god. Unfortunately, there wasn't much else to do once Kara had finished with her little experiment. She already had a fairly good grasp of the auction hall's set-up, but after a few minutes of people-watching, she started to pick up on details she'd missed the first time around. For one thing, all the servers were wearing iron collars with \"Lyndone Catering\" engraved into them, along with the company logo. It was...utterly bizarre. Kara had only ever heard stories of Isleydor's slave culture, but now she was in the very midst of it. There was the general buzz of chatter, the clinking of glasses, and every so often, a laugh would break through the din. Closing her eyes, Kara let the chaos of a hundred different conversations hum inside her ears and let the sweet aroma of good food and fine wine fill her nostrils. Eventually, an orchestra set up at the front of the hall and then classical music filled the air. It was actually kind of peaceful, until...\n\n\"Cowards!\" \n\nSuddenly, a harsh male scream cut across the hall, suffused with almost inhuman fury. It was so terrible, Kara very nearly jumped out of her skin. Instantly, her eyes snapped open and she could see that a small crowd had gathered on the other side of the auction hall. Kara had hoped to get a better look at whoever was behind the commotion, but she couldn't make out anything from so far away and with so many people blocking her view. Other than, of course, more screaming.",
        "That voice...Kara was sure she had heard it before...\n\n\"Godforsaken, brazen cowards! Get these confounded cuffs off of me, and I'll show you how well I can beat you into the ground! This war is far from over, and I swear, I'll\u2014\"\n\nThere was the sound of glass shattering, a table being overturned, and then a tussle. As the room erupted into laughter, the screams were abruptly cut off and Kara realized that whoever had been shouting must be gagged now. \"Look at the vein in his temple!\" one of the prospective buyers cried, and there was another burst of laughter. \"Poor boy's gonna pass out if he's not careful!\" Cursing under her breath, Kara cringed and suddenly realized that her own heart had started racing. But the chatter of the auction hall had soon resumed and then the music of the orchestra. The screaming became a distant memory and the atmosphere was cheery once again.\n\nAs the minutes wore on, Kara could see more and more people crowding into the room and the low hum of chatter gradually grew louder, until it had reached a gentle roar. There were more than a few more outbursts among the soon-to-be slaves\u2014each one awakening new anxiety in her\u2014but they were all quieted quickly. Eventually, Kara could feel the platform beneath her shaking as her neighbor was set up next to her and given the same little speech on gags, etiquette, and medication. The thirty minutes were almost up when a medic finally stopped by to ask her some questions\u2014mostly harmless, about how she was feeling and if she had any history of fainting\u2014then gave her the medication she'd been promised via injection. The medic was polite, but she also didn't dawdle and quickly moved on to the next person in line once they were through...\n\n\"How are you feeling\u2014let's see\u2014Terrance?\"\n\n\"What do you think? Like shit. What are you going to do about it?\"\n\n\"That depends: any headaches, coughing, nausea, vomiting...?\"\n\nThe new person snorted in disbelief, but Kara didn't dare look. Her respect for patient-doctor confidentiality kept Kara staring straight ahead, but it wasn't exactly easy to ignore her neighbor, either.\n\n\"You people are fucked in the head, you know that?\"\n\n\"Terrance, I can't help you if you won't let me.\"\n\n\"I haven't had a cigarette in a week; there's gotta be laws against that kind of thing.\"\n\n\"I can't help you with that, Terrance, and you know it.\"\n\n\"Then fuck off already.\"\n\n\"At least let me give you some nausea medication\u2014\"\n\n\"Like I'm scared of you fuckers? That's funny. You're funny.\"\n\n\"\u2014just in case. Better to have it and not need it.\"\n\nBut the new person only laughed, a surprisingly genuine, guttural laugh.\n\n\"Oh, I'd fucking love to send one of these pompous pricks to the dry cleaners before I get carted off; haha!\"\n\n\"Good evening, ladies and gentlemen!\" the loudspeakers suddenly cackled, and once again, Kara nearly jumped out of her skin. She was starting to feel self-conscious about that, even a little annoyed. These days, it seemed like pretty much anything could set her off. Still angry, Kara scanned the room for her tormentor and finally narrowed in on a well-dressed man in a suit beside the front desk, holding a microphone and addressing the room at large. \"Please, gather 'round! Gather 'round! And welcome, ladies and gentlemen, to tonight's auction!\"\n\nIt's just so...casual, Kara marveled, more fascinated than disturbed, but still disturbed nonetheless. The atmosphere is so cheery and nonchalant; it's almost obscene.\n\n\"We hope you'll be pleased with tonight's selection,\" the loudspeakers continued, and now the well-dressed man was absentmindedly swinging the cord of his microphone back and forth, while the general chatter of the auction hall began to die down and several of the patrons turned toward the front in order to better listen. \"As I'm sure you all know, a great deal of time and effort went into tracking down and acquiring each unique piece we have on display this evening. Your event catalogs will include a short overview of each one\u2014if you haven't picked one up yet, they're being handed out by the front desk\u2014and feel free to track down one of our sales associates if you have any questions. They're the ones in the purple and black uniforms. Associates, if you wouldn't mind giving us all a wave so our guests can spot you?\" \n\nOn cue, the numerous sales associates scattered throughout the hall all raised their hands in unison. Their smiles were so wide and so bright, Kara thought they looked almost painful. By then, most of the prospective buyers had started skimming through their catalogs and were already staking out the most interesting pieces. A murmur rippled through the crowd, and Kara grew concerned. Nearly all the patrons had formed little groups and were pointing out the slaves along other side of the auction hall, whispering to one another in lowered voices. \n\n\"We'll begin with the silent auction,\" the loudspeakers blared, and now the well-dressed man was looking over the evening schedule. \"As you peruse the merchandise, you'll find that each piece is associated with a small clipboard. The starting bid will be listed at the top and the minimum bidding increment will be twenty thousand qualid. Any piece that hasn't been reserved in the next two hours will be handled with a live auction and a bid must go uncontested for twenty minutes in order for the associated piece to be considered reserved.\" There was a pause as the well-dressed man scanned the crowd, making sure that the information had time to sink in before continuing. \"Finally, please be careful before you place a bid. Nearly all of our pieces tonight require specialty registration and cannot be easily re-sold. All winning bidders will need to present their license at check-out. There is a buffet in the back and an semi-open bar. So please, enjoy yourselves!\"\n\nWait, no! I'm not ready! Kara suddenly realized, taking note of the cruel, almost maniacal faces all around her and feeling sick. No, no...I'm not ready! \n\nBut the loudspeakers went dead and then the chatter of the auction hall resumed, twice as lively as it had been before. As the prospective buyers began to tour the room, Kara realized she hadn't the slightest idea what to do with herself and the awkwardness of the situation crashed into her with the force of a tidal wave. \n\nHow am I supposed to act? What am I supposed to do? What's the proper etiquette for...well, being a piece of meat dangling from a hook? \n\nIt wasn't as if Kara had been on the auction block before. People kept stopping to stare at her, but she had no idea whether she should stare right back at them or pretend to be interested in something far away. It didn't feel right to smile at them\u2014wouldn't that be creepy?\u2014and it didn't feel right to do nothing at all. At least zoo animals were able to eat, sleep, and play while they were being ogled. Kara could only sit still and wait for it to be over, wondering how she might be embarrassing herself in the meantime. Her left bra strap had started falling down and with her arms chained above her head, there was nothing she could do except watch it happen and steadily grow more and more annoyed. \n\nAt least they're only looking, Kara reassured herself, but she'd had the thought too soon.\n\nLooking over her shoulder, Kara watched as one of the slaves nearby was roughly grabbed by the breast and violently molested. There was a gasp, and then a startled scream of pain. A Martkorp handler rushed over to reprimand the offending patron, but he only laughed and offered a half-assed apology before wandering off with his friends. He was dressed in impossibly expensive clothing and the women with him were covered in so much gold and silver, they were practically walking jewelry stores. Growing panicked, Kara was suddenly reminded that whoever bought her would have the money to make sure she never got away. \n\nStop thinking like that! Kara chastised herself, forcing the evil thoughts aside. Stop it! You're smart. You'll figure something out! Just stay focused.\n\nHoping for a distraction, Kara scanned the room. She wasn't sure what she was looking for or how any of it might help her, but she needed to do something or else relapse into feeling entirely helpless. She eyed the other slaves\u2014wondering how they had ended up like her\u2014and then caught herself doing a double take. Not four slaves to her left, Kara thought she recognized someone. Squinting past the light from the chandelier, she desperately tried to pin down the details of the woman's face: short, boyish blond hair, green eyes, a triangular scar on her left cheek...\n\n\"My god!\" Kara whispered, unable to believe her eyes. \"Elandra?!\"\n\nElandra had been the head medic from her unit back in Gardok, on the east side of the city. Kara had never been particularly fond of her, given the Commander's often cold, apathetic nature. She had refused to let anyone in her unit care for a soldier on Isleydor's side, which had been the source of many arguments. Kara took her Healer's Oath very seriously and felt that discriminatory care, even in the face of war, was a mortal sin. But Elandra had saved her life on more than one occasion and even if Kara couldn't like the Commander, she still respected her. \n\nThere was a gorgeous, but stern-faced woman staring at Elandra, wearing a red sequin dress and holding a dark glass of wine in her hand. Her raven-black hair was tied back in a little bun and her eyes were positively devilish, like those of a sadistic child standing before an anthill. Sneering, she gripped Elandra's face in her free hand, letting her perfectly manicured nails dig painfully into her captive's skin, and leaned down to whisper something into her ear. Whatever it was, it must have been positively terrifying. Very little could rattle Elandra, but her eyes had suddenly grown wide and almost immediately, she began to weep. Still grinning from ear to ear, the woman in red released her, only to bend down and scrawl something onto the clipboard beside them. When she was finished, she lifted it up so that Elandra could see the exact bid she'd made. \n\nGloating, Kara realized, feeling sick and then angry. The woman's only gloating! \n\nElandra was desperately shaking her head now, as if that might win her some mercy. There seemed to be no end to the miserable tears trailing down her face and they had started to gather at her chin, then drip down onto the platform below. It was hard to watch, but Kara couldn't bear to look away. To do so would feel an awful lot like abandonment. In one final bid for her dignity, Elandra tried to wrench her head free, but the woman in red wouldn't let go and kept on whispering terrible, sweet little nothings into her ear. A nerve-wracking sob of desperation escaped into the air and that was the last straw. Whatever sliver of self-control Kara still had, it instantly evaporated.\n\n\"Hey, you!\" Kara shouted, and when the woman in the red turned around, she grew bolder. \"You! Yes, you! The ugly crone in the red dress, who else?\" The woman in red only narrowed her eyes at first, but when Kara wouldn't stop, she began to step menacingly forward. \"Do you even know who that is? That woman's saved more lives than any other medic in Gardok, you self-absorbed, backwards fucking twit! That woman's done more for mankind in an hour than you've done your entire wretched life!\"\n\n\"Shut it, Callihistra scum!\" the woman in red snarled, raising her arm over her head and preparing to strike. \"How dare you even think of speaking to me that way!\" But Kara wasn't finished. Not yet. \n\n\"You break it, you buy it!\" Kara cried, surprised by her own gall, but it seemed to work. The woman in red paused, though she was none too happy with the truth behind her prey's words. \n\n\"If you were mine, you wouldn't be so cocky,\" the woman in red hissed, eyeing the clipboard beside Kara meaningfully. \"Not for long. By the end of the night, you'd be licking my heels between your sobs for mercy.\"\n\n\"Then why don't you put your money where your mouth is?\" Kara scoffed, because she was in this deep already, so why not go all in? \"Talk is cheap, but the privilege of beating my ass is expensive. Fifty grand, to be exact. And that's the starting bid.\"\n\nHer eyes livid, the woman in red sneered at Kara, but eventually, she lowered her arm. Reaching into the pocket of her dress, she pulled out an event catalog and began to skim through it, looking perturbed at first, but then finally breaking out into another terrible grin. Stepping still closer, the woman in red leaned in until Kara could smell the sweetness of her breath from behind her flawless, slightly parted lips. Her dark, brown eyes were positively sparkling with malice.\n\n\"Oh, I see...Elandra was your Commander, was she?\" the woman in red crooned, and Kara could feel her own eyes turn to daggers. \"Such a pity. I'd love to have a pair, but I've already spent quite a bit to reserve that decadent little piece. Don't worry, though. I'll take amazing care of her. She's crying now, but eventually, she'll learn to love me.\" Stuffing her catalog back into her pocket, the woman in red turned on her heel and gave Kara a gentle, but cruel farewell smile. \"Love doesn't come naturally to everyone. Sometimes, love is thrust upon us.\" \n\nGoddammit! Kara thought, watching as the woman in red melted back into the crowd. How many of the men and women that I worked with are lined up here? \n\nFrantically, Kara skimmed over the remaining slaves in her line of sight, trying to see if she recognized anyone else. There was so much commotion that it was difficult to get a handle on the sea of faces, but eventually, she spotted General Benjamin Karrington just across the hall. He had been a major figurehead in Callihistra's military and later, the head of the White Horse Rebel Alliance. Kara had only seen him in person once before and only from the back of a very large crowd, but he had still left a remarkable impression on her. Although she couldn't read the plaque Martkorp had provided, she was suspicious the second she saw his brown, wavy hair and his cool, gray eyes made her certain.\n\nIt's him...I know it's him...\n\nHalf-naked and wearing only a pair of sheer, yellow-gold harem pants, Karrington had been forced to kneel with his body bent double. There was a thick, metal collar locked around his neck and the chain dangling from it had been affixed to the front of the platform. It didn't look to be more than a foot long\u2014the general could barely lift his head\u2014but that wasn't the end of it. As extra insurance, Martkorp had also strapped him into an armbinder and there were leather bands securing his lower legs to his thighs. There was a gag in his mouth and the thick, rubber ball was covered in bite marks. If nothing else, that set-up was proof of the terrible danger Karrington posed. No one else in the auction hall had been so thoroughly tied and they'd assigned two handlers to him for good measure. While one of them managed the crowd, the other was constantly pressing a taser into his neck as a warning. Every time a prospective buyer got too close, the general would lunge forward and the Martkorp handler would have to pull him back, jabbing the taser ever more painfully into his skin. But they never once electrocuted him.\n\nHow did they ever get hold of him? Kara wondered, both shocked and appalled that she'd somehow found herself at the same auction as the famed First General. How...?\n\nWhile Kara knew very little about the general, his stubbornness was legendary. Even bound and gagged, he never stopped fighting. Kara could see his muscles bulge with effort as he strained against leather and metal, seemingly oblivious to the futility of the exercise. His naked chest rose and fell erratically as he breathed and soon his body was covered in a fine sheen of sweat, but it didn't matter. Martkorp had taken every precaution to ensure that the general stayed put and that's exactly what he did. Despite his fervent struggles, he managed to do little else but rattle the chains holding him. In all his rebellious glory, Kara thought that the general was stunningly beautiful, but that only made his fall from grace all the more devastating. In the light from the chandelier, she could see dozens of bright, white scars decorating his skin and they glimmered like so many tiny, terrible stars. \n\nIt wasn't long before Karrington was swarmed and there was no doubt as to why he was so popular. When Isleydor had first begun its attack on her homeland, Callihistra's Elected Council had almost immediately surrendered. There were rumors that bribery and blackmail had been involved, but regardless, the move hadn't been a popular one. Callihistra was a proud country and Isleydor had been despised for a long time. For weeks afterward, the news media was solely focused on condemnations of the Elected Council and a persistent call to action, but it wasn't until Benjamin Karrington took a stand that the war effort was reignited. In direct violation of his orders, he started the White Horse Rebel Alliance, uniting the people of Callihistra under one banner to continue the war and push back Isleydor. Later, he'd managed the defense of Gardok's west side, fiercely protecting it for roughly two years before it had finally fallen.\n\nWho else could they possibly have? Kara thought, unable to help the panic that had started creeping up on her. In a distant corner, she could see a second cluster of prospective buyers and squinted her eyes to get a better look, then immediately wished she hadn't. No...no, it can't be. Not the Eastside General. Not my general. Not Tamius Sue.\n\nOn cold, dark nights when there'd been nothing else to do and they'd already played poker a few dozen times, Callihistra's soldiers had swapped propaganda posters from the other side. As with trading cards, the rarest had been worth a full day's rations or even a pack of cigarettes. Several had targeted General Tamius Sue, but the agreed upon favorite had her sitting atop a pile of bleached bones, armed to the teeth and sporting heavyset boots that were speckled with blood. Kara had occasionally seen her general on the hospital floor visiting high-ranking officials and the caricature wasn't all that far from the truth. Just like in the poster, the general kept her hair tied back in a thick, high ponytail and the gorgeous, yellow-blond locks perfectly complimented her fierce green eyes. Even all the way across the hall, General Tamius Sue was easily recognizable, but it was hard seeing her so vulnerable. Dressed in the same yellow-gold harem pants as her counterpart and then a matching bralette, she stood out almost obstinately amid all the red and gold and, perhaps, that was the point. Worse still, nearly everything underneath her clothes was clearly visible through the paper-thin material.\n\nOnce an acrobat in a family circus, Tamius had left to join the military at a very young age and had been one of the first to stand behind Benjamin Karrington after he'd defected. Not only that, but she'd held onto Gardok's east side long after the north, south, and west sides had been taken. When it became obvious that the White Horse wouldn't win, she hadn't made a run for it. Instead, Tamius had diverted her men and their resources to escorting fleeing families from the city, doing her best to provide safe passage to any survivors. When she'd finally tried to leave Gardok, it had been too late. They'd found her and her most loyal men barricaded inside the National Library, with their rations rapidly depleting and hardly any ammo left. Yet, it had taken Isleydor an entire Special Ops Unit to get inside and capture her or, at least, that was the rumor.",
        "All that hard work, all that sacrifice, and now...now this. \n\nTamius looked eerily stoic atop the platform, kneeling on a set of throw pillows with her arms chained high above her head. While the surrounding crowd screamed and jeered mere inches from her face, she only glowered at the them with eyes made of poison and ice. Meanwhile, a pair of Martkorp handlers were desperately trying to hold the patrons back and protect their charge, but they were very nearly overwhelmed. Everyone wanted a look at the \"last general to fall\" and more importantly, get a rise out of her. But Tamius had nothing for the mob other than disdain and her cool demeanor only fueled their bloodlust. Suddenly, one of the patrons broke free and spat directly into her face, but she didn't so much as flinch. As one of the Martkorp handlers began screaming for security, the other gently wiped away the glob of saliva sliding down her cheek. Afterwards, he offered his charge a few sips from a bottle of water and when he pressed it to her lips, she gulped it down gratefully.\n\nWho else? Kara wondered, her eyes flickering back and forth between the hall and the platforms, trying to look past the crowd and get a good look at whoever was chained up just out of sight. Who else? Who else!?\n\nBriefly, Kara thought she recognized Tremilar Aldius, a bearded monster of a man and a well-renowned military mechanic who had, by some miracle, managed to keep their vehicles in working order, even after it became impossible to import parts from outside the city. And she saw Arianna Maysion too, a weapons designer from Scorce who had snuck into Gardok mid-war to help Callihistra construct explosives. Kara even got a glimpse of Dryden Lane, a dark-eyed intelligence expert who had vanished without a trace soon after Gardok had fallen, though she now supposed she knew why.\n\nThat's odd...\n\nNow that she was paying attention, it seemed that Kara was surrounded on all sides by famous medics, spies, and soldiers\u2014war heroes she'd seen on TV or in newspapers\u2014all chained up and looking both angry and a little afraid. That's when the dots finally started to connect and form a coherent picture. Kara could hear Catherine's voice in her mind now, telling Mr. Charthe how embarrassing it would be to have her and the violinist on the auction block and angrily lamenting that they would \"stick out.\" \n\nNo...no, it can't be...\n\nIn that instant, Kara was done looking at the other slaves. Now, she only had eyes for the prospective buyers, mingling among themselves, sipping champagne, and laughing heartily. In the sea of color and noise that made up the main floor, it was hard to pick out individual faces, but eventually, she saw one she recognized. Lord Algeris had supposedly planned the original attack on Gardok and had been a mainstay of the anti-war posters that had started circulating just before the White Horse had taken power. Then, in the same little group, she saw General Myiat, the woman who'd finally captured Gardok's south side, before joining up with the offensive on the east. As her eyes flitted across the room, Kara could see dozens upon dozens of faces she recognized and, more importantly, the military sigils several had pinned onto their evening wear.\n\nThis isn't an ordinary auction... Kara realized in terror. This is a conquest auction!\n\nKara had heard stories of Isleydor's conquest auctions, spoken in whispered tones far below the streets of Gardok. She had spent a week hiding out in the city's sewers immediately after it had fallen, trying to navigate her way to the Middle River Forest and into Nardia. Most of that time she'd spent alone, but on a few occasions, she'd stumbled across a trusted party and had shared their campfire in exchange for a little bread or wine. Those were dark days. Isleydor's various slaving companies had all been competing for the most valuable, high-profile targets and the city had been absolutely crawling with hunters. The acoustics of the sewers would carry any and all noise with sickening clarity and there was rarely more than an hour or two free from all the screaming. It was only natural for Gardok's refugees to be preoccupied with their seemingly inevitable capture and they'd often traded rumors. Some of them were worse than others and it was impossible to separate the truth from the embellishments, but Kara had a good grasp of the basics.\n\nIt all makes so much sense now!\n\nIsleydor was a notoriously imperialistic nation and after a successful invasion, their slaving companies would round up the most stubborn of the opposition and sell them off to the elite. Surrounded on all sides by the best and brightest of the White Horse Rebel Alliance, Kara was trapped in the middle of a feeding frenzy. Drunk on victory and wine, the patrons eyeing her were among the most ruthless of Isleydor's top military personnel and clearly eager to purchase, enslave, and brutalize the opposing \"Callihistra Scum\" who had caused them so much trouble during the war. Unfortunately for Kara, there was no telling if the circling sharks would be able to differentiate her from their real prey.\n\nThat's why we're 'embarrassments' only fit for a raffle, Kara realized, thinking back to the violinist from her medical workup. Our part in the war was minimal and these people are only interested in revenge. But there had been other clues, too\u2014things Kara had overlooked, but now understood. Martkorp, for example, had sent her to the auction block without ever bothering to train her, which she had found suspicious at the time, but not worth dwelling on. And now I finally get it, Kara thought, feeling sick. Isleydor's dignitaries don't want us trained. They want to break us themselves.\n\n\"Hey...hey!\" a voice beside Kara suddenly cried, and that seemed to snap her out of it. \"Don't ignore me, kid. Are you okay?\"\n\n\"I'm fine, alright?\" Kara snapped, turning around, but almost immediately, she felt guilty for lashing out. \"I'm...I'm sorry. It's just that...I was supposed to be at a Captly's auction. Not here. Anywhere but here.\"\n\nUp until now, Kara had largely ignored the slave who knelt beside her. It wasn't a conscious decision on her part and she hadn't meant to be rude, but with so much else going on, making friends hadn't exactly been her top priority. But now, surrounded on all sides by power hungry enemies hell-bent on retribution, perhaps a friend wouldn't be such a bad idea. \n\nGlancing at the plaque beside her, Kara saw that the woman's name was Alyssa Terrance and apparently, she was a weapons specialist from Recon & Intelligence. At the moment, they were both wearing the same embarrassing uniform, but other than that, they were nothing alike. Alyssa had short, electric blue hair and was covered from head to toe in scars of all kinds: a few bullet wounds, a stab mark, and a spray of burns, among others. Kara winced, imagining all the medical work that must have gone into keeping the woman alive. But the wounds were charming in their own twisted way and seemed to go well with the tattoos covering the rest of her body. Alyssa had a cluster of dark, multi-colored cobwebs inked onto the right side of her neck and somehow, she'd managed to wipe most of the makeup from her face onto her arm. Together with all her old injuries, the badly smeared mascara and eyeshadow made her look very slightly crazy. \n\n\"Wow that...sucks,\" Alyssa agreed, and she gave Kara a sympathetic glance. \"Tough break, kiddo. That really, really sucks.\" \n\n\"Do you know how I might be able to get out of here?\" Kara asked, suddenly feeling hopeful that this person\u2014someone capable and famous, surely\u2014might know enough to help her. \"Please?\"\n\n\"Eh...it's not likely,\" Alyssa told her, grimacing in a way that looked...thoughtful, at least? \"But if you're last-minute filler\u2014\"\n\n\"Filler?\"\n\n\"If they can't get all their slots filled in time, they'll just throw in someone random to try and beef up their lineup,\" Alyssa explained. \"No offense, but if you were picked up by Captly and their ill-equipped, incompetent fucking\u2014\"\n\n\"No, you're right,\" Kara sighed. \"I'm a nobody.\"\n\n\"Where were you stationed?\"\n\n\"In Gardok, on the East Side.\"\n\n\"Ah, you were one of Tamius' then,\" Alyssa grinned. \"Congratulations.\"\n\n\"Congratulations? On what?\"\n\n\"On being the last side to fall. I lost a bet over that, actually. I owe a man back in Scorce a hot meal and a bottle of fine scotch.\"\n\n\"A scotch,\" Kara groaned. \"I'm going to miss those sorts of things.\"\n\n\"It's not over till it's over.\" \n\n\"What...what are you talking about?\" Kara asked, more incredulous than anything else. \"It is over.\"\n\n\"That's what they think and honestly, it's better that way,\" Alyssa replied, nodding toward the main floor. \"But, here's the thing about keeping a dangerous pet in your house...you only have to forget the latch once and you're dead.\"\n\n\"You were saying I'm probably...filler?\" Kara prodded, trying to get them back on track and focused on more realistic methods of escape. \"How would that help me?\"\n\n\"Well, if you're filler, it's possible no one will end up buying you,\" Alyssa shrugged. \"Most of these guys are in the market for vengeance and bragging rights, so being a nobody might be your saving grace. In that case, I suppose you'll end up back at Martkorp. Still not great, but better than being sold to one of these pieces of shit.\"\n\nAlyssa emphasized that last bit a little too loudly, and Kara watched in horror as the nearest table of guests\u2014smoking, drinking, and having a good time\u2014actually stopped their chatter and turned around to look at them! \n\n\"What are you doing?\" Kara whispered, her voice rife with anxiety. \"They'll hear you!\"\n\n\"Good, fucking pigs.\"\n\nThis time, one of the men at the table narrowed his eyes at them and flipped Alyssa off, but she only smiled back and returned the favor.\n\n\"What the hell do you think you're doing?\" Kara cried, even more frantic now, trying to keep her voice low and failing. \"These people are Isleydor's military. Are you trying to get us in trouble?\"\n\n\"Really?\" Alyssa scoffed. \"All this, coming from the girl giving Charlotte\u2014Charlotte fucking Reigner\u2014shit?\"\n\n\"Charlotte?\"\n\n\"That woman you were screaming at? In the red dress? Nice form, by the way. 'You break it, you buy it'? Beautiful stuff.\"\n\n\"That...that was different,\" Kara tried, looking back over at Elandra and feeling her heart grow cold. \"That was before I knew what...what this is. And who these people are.\"\n\n\"Oh, they fucking love it,\" Alyssa laughed. \"This is all a game to them. A spectacle. A show. It really gets their dicks hard.\"\n\n\"Please, please shut up!\"\n\n\"Oh, relax,\" Alyssa groaned. \"Here, I'll show you. Watch this...\"\n\nThe second Alyssa opened her mouth to shout something else obscene, Kara reached out her arms in an attempt to cover it up and perhaps save them, but then the chains holding her went taut.\n\nOh, fucking hell...!\n\n\"Hey!\" Alyssa cried, and there was nothing Kara could do but watch it happen. \"I said, hey! Any of you assholes want to bring your secondhand smoke over here? I'm fucking dying of withdrawal!\"\n\nThe entire table turned around again, looking less than amused, and the man from earlier gave them an annoyed little frown.\n\n\"Fuck off, Terrance; you're only embarrassing yourself.\"\n\n\"Fuck you too, Benette.\"\n\n\"I said, shut it, Terrance. Do I need to call over a handler?\"\n\n\"Oh, that's no fun,\" Alyssa pouted, and she gave them all an exaggerated, sulky expression, like that of a recently scolded child. \"Come on, just one fucking cigarette, for god's sake? Or a shot of whiskey even? Karl's been nursing that poor drink for thirty minutes now and he either needs to put it out of its misery, or man up and order a martini like the prissy little fuck he knows he is.\"\n\nThe man who'd been reprimanding Alyssa tried to hold it in, but a few seconds later, he burst into laughter. The only blond-haired fellow at the table had turned red as a tomato and now the rest of the group was roaring with glee, until they were all crying and gasping for air amid their hysteria.\n\n\"See?\" Alyssa bragged, looking smug. \"Swear to god, it gets their dicks hard.\" \n\nWelp, this is great... Kara thought, tugging on her chains once again and finding that, same as always, they wouldn't budge. I'm at a conquest auction, and I'm also chained next to a lunatic. Fan-fucking-tastic.\n\n\"And have you seen the outfits they put us in?\" Alyssa grumbled, glaring down at her uniform as if it were being loud and gaudy on purpose. \"Do I look like a fucking circus performer to you? Do I look like I can wrap my legs behind my head?\"\n\nAlright, Kara thought. At least that's one thing we can agree on...\n\n\"And honestly, I think this bra counts as false advertising. They gave me a padded one and it's only 10% titty in here, best case scenario.\"\n\nAnd now we're back to being a lunatic again...\n\nIn her state of near panic and frustration, Kara didn't realize that she was being eyed by one of the prospective buyers until he was only a few feet away, fidgeting awkwardly in the periphery of her vision. He was a short man, maybe even shorter than Kara, with ink black hair and equally black eyes, wearing a green military uniform. He continued to stare at Kara, but not with lust or malice. He looked...confused, as if reaching into a foggy memory whose details had been blurred long ago. Hesitantly at first and then with more and more certainty, the man stepped toward Kara and gripped her face in his hands. She cringed and tried to wrench herself free, but the man refused to let go.\n\n\"Um...,\" Kara tried, not sure what to say and yet, needing to say something, because there was a strange man grabbing at her and she couldn't just pretend it wasn't happening, right? \"Can I...can I, uh, help you?\"\n\nThe man let go, stepped back, and squinted his eyes at her. Kara waited while he walked over to the far left and then the far right, still pondering her...still eerily staring. Then, he stopped. His face lit up with sudden recognition, and a triumphant grin crossed over his face. In that instant, Kara could feel her stomach drop, but she wasn't sure why.\n\n\"You're that explosives girl,\" the man said, his voice quiet at first, then louder and with more and more conviction. \"Yes, yes! That girl from the train!\"\n\n\"I think you must have the wrong person,\" Kara told him, trying to be firm and afraid that, if she wasn't, she just might end up bearing the brunt of someone else's escapades. But then she stopped mid-thought. This man did look slightly familiar and in a sudden rush, the memory came flooding back to the forefront of Kara's mind. \"Oh, fuck.\"\n\n<center>*******</center>\n\n\"Who here can shoot a gun?\" \n\nOnce, Elandra's medical unit had been gifted a few soldiers to protect the secondary school where they'd hastily put together a half-assed sort of hospital. But Isleydor's forces had almost overtaken the city. The south side was gone, and the west side as well. If General Tamius Sue were to hold onto Gardok's east side, she would need every man available and that meant taking away what little protection Elandra's unit had held dear. Now, the medical team was all alone, hunched in the basement of the school as the air raids from above shook the ground. The afternoon cleanup would be brutal, as usual, and with medical supplies running low, Kara doubted most of her patients would survive. Exasperated, she tried focusing on Elandra and whatever else the Commanding Medic had in mind. \n\n\"Come on, don't be shy,\" Elandra demanded, impatient. \"Who here can shoot a damn gun?\"\n\nA few medics raised their hands wearily, and Kara raised her hand as well. Elandra hadn't asked if she could shoot a gun well, only if she could shoot one at all. She had never been particularly violent, but her Uncle Florence had insisted she learn. As one of Callihistra's foremost weapons specialists and a demolitions expert, he'd demanded it once the war had begun. Her parents\u2014both career medics and pacifists\u2014had protested, but Kara had learned anyway. Now she knew the basics, but to be honest, she knew very little beyond those.\n\n\"Alright, then.\" Elandra skimmed her unit carefully. \"Trundle and Caseway, after the raids are over, head upstairs. There's some ammunition in the cafeteria we've been gifted. It isn't much, so use it sparingly, okay? Your new job is to protect this hospital with everything you've got and only after are you to work with patients.\"\n\n\"But, Commander...\" Trundle began nervously. \"We need every man working on medical duty if we are going to save these people\u2014\" \n\nElandra suddenly hit the back wall with her fist, shutting Trundle's protests down almost immediately. These days, the tiniest hint of insolence could set the Commander off and Trundle had every reason to be nervous.\n\n\"If all our stable patients die because of an attack, all our work is out the window,\" Elandra hissed, and Trundle winced. \"We can't save everyone, and you need to get that through your thick skull. Do I make myself clear, Trundle?\"\n\n\"Yes, ma'm, absolutely!\" Trundle sputtered and when looked Elandra glared over at him, he averted his eyes, opting to stare into the concrete of the ground instead. \"Orders are orders...\"\n\n\"Good. Okay, then. Who here has experience with explosives?\"\n\nThis time, Kara was the only one to raise her hand. Growing up in the countryside beside her Uncle Florence and his farm, she had learned quite a bit about explosives. Though her parents had forbidden it, she'd often snuck over to his house to build bombs and then set them off. They had only been small ones\u2014meant for blowing up dummies made of straw and dirt or stacks of rotten vegetables\u2014but her parents had forbidden it anyway. Whenever Kara had been caught, they'd grounded her and chewed out Uncle Florence for good measure, but that had never deterred the pair for more than a month or two. Together, they'd spent many an afternoon blowing up old stuffed animals, heaps of garbage, and other odds and ends, ducking for cover before the explosions burst forward, leaving the pair laughing ecstatically. It had been great fun, but Uncle Florence had also thought it was practical.\n\nDemolition is a very valuable skill, Kara, her Uncle Florence had told her. I know your mother doesn't want me to teach you this stuff\u2014I know she says you don't need to know this stuff\u2014but trust me, kiddo. Someday, medic or not, this shit will be useful.\n\nAnd now, here was Kara\u2014in a nearly demolished \"hospital,\" one without military protection\u2014the only medic on her team who could build a bomb.\n\n\"Excellent, Kara!\" Elandra told her, clearly surprised that anyone at all had raised their hand. \"Stay here with me. The rest of you, clear out for a while!\" \n\nWithout needing further prodding, the remainder of the medical unit quickly filed outside and then Kara was all alone with Elandra. Feeling a little worried and very much confused, she watched as the Commanding Medic unrolled a map on the rickety table before her, carefully laying a stone at each corner and smoothing it out as best she could. Leaning forward so as to get a better view, Kara could see that it was horribly faded and Elandra had scribbled little notes all over it in bright red ink.\n\n\"There's no time to spare,\" Elandra told her, and Kara could see something resembling desperation in her eyes. \"Do you see this railway?\" \n\nKara watched as Elandra ran her finger across a thin gray squiggle, which ran down from the northern reaches of Isleydor and into Gardok, crossing over the Larrian Mountains in the process. ",
        "\"Yes,\" Kara answered.\n\n\"It runs past a munitions factory in Isleydor,\" Elandra told her, and as another explosion went off somewhere nearby, Kara braced herself against the table, until the lights stopped flickering and the ground was still again. \"For god's sake!\" Elandra cursed, barely managing to stay upright herself and clutching the table tightly. \"Another one?\"\n\n\"They're getting less frequent at least.\"\n\n\"But not for long.\"\n\n\"Wait...what?\"\n\n\"Like I said,\" Elandra continued. \"This railway runs past a munitions factory in Isleydor, then leads right into Gardok where we're just barely hanging on. I've heard word that a huge deposit of weaponry is being transported down here now, along this route. If we can stall this train or, better yet, destroy its cargo, we'll have a much better shot at securing Gardok for the White Horse.\" \n\nBut that didn't lessen any of the confusion on Kara's face.\n\n\"I'm sorry...,\" Kara began, looking questioningly over at Elandra. \"But aren't you a medic? How is this kind of operation your job? And I'm a medic. How is this kind of operation my job? We aren't trained for this. Just forward the info to Tamius at the front and I'm sure she'll dispatch a team to\u2014\"\n\n\"Stop,\" Elandra sighed, placing a sympathetic hand on Kara's shoulder. \"Just stop. In an ideal world, yes. That would be the plan. But we're losing, Kara. Another three weeks like this, and Gardok will fall. General Tamius Sue already knows about this\u2014we got this intel from the front\u2014but if she loses anyone else to stalling a train\u2014especially a demolitions expert\u2014Gardok will be captured before the munitions it carries can become threat. So, she's turning to us and others, asking if anyone might want to take a stab in the dark at this. You in?\"\n\n\"Of course not!\" Kara cried, wrenching herself free from Elandra's grasp. \"It's a suicide mission. I can build a bomb, but I probably can't get myself onto and off of a moving train\u2014one crawling with Isleydor's soldiers, no less\u2014in order to detonate it! Find someone else.\"\n\n\"There is no one else!\" Elandra hissed. \"Not on the east side. And you must know that communications are down; we can't exactly coordinate with the north to build a better offensive.\"\n\nBut Kara only shook her head.\n\n\"Look,\" Elandra tried. \"It's not ideal, but you wouldn't be alone. There will be others on your team to help you get onto and off of the train. You'll have armed protection\u2014\"\n\n\"Well, that changes everything, doesn't it? I'll have armed protection, will I?\" Kara scoffed, eyeing her Commanding Officer indignantly. \"You mean more medics, and mechanics, and fucking military chefs who've shot a gun once in their life? More last-minute grabs, like me, who have never had any combat experience? Is that what you mean by armed protection, Elandra? Is it?\" \n\n\"Yes,\" Elandra sighed, barely holding in her anger. \"Yes, it is, but\u2014\"\n\n\"Absolutely not!\" Kara cried. \"I'm not going to be a sacrificial lamb in your experimental operation. Without a trained team of men\u2014one with actual combat and stealth experience\u2014this won't work!\"\n\n\"This is an order from your Commanding Officer!\" Elandra screeched, and finally, she lost it. Kara could see her eyes turn red in the dim light of the basement and they were bugging out of her skull. \"You will do this! You will join the team assigned to this task, and you will help the White Horse stall this train. Do you hear me, Kara? You will do as I say. Whether you like it or not doesn't matter!\"\n\n\"Where the hell do you get off?\" Kara retorted, equally angry now. \"What sort of authority do you think you have? We're losing this war, Elandra. We're up to our knees in the blood of our soldiers. Do you think there's anyone available to incarcerate me and then put me on trial for insubordination? We follow you on faith now\u2014not on your authority\u2014and I have no faith in this stupid, stupid plan!\"\n\n\"Goddamn it, Kara, there's more than one way to save lives,\" Elandra groaned, rubbing the bridge of her nose in exasperation. \"You could prevent a lot of good people from being blown to smithereens, rather than just try and patch them up after the fact. Will you be able to live with yourself after the munitions arrive and the air raids get more frequent?\"\n\nElandra had Kara by the throat and she knew it. Kara could see the triumphant little sneer in her Commanding Officer's eyes, confirming everything, but the hint of desperation she'd seen earlier was still there, too. Elandra might not be playing fair\u2014Elandra never played fair\u2014but as always, her heart was in the right place and she did have a point. Kara wouldn't be able to live with herself if the air raids became more frequent, not while knowing there was something she could have done about it and yet, hadn't. It would have been easy to walk away then\u2014no one would have stopped her, no one would have even tried\u2014but she didn't. Instead, Kara sighed deeply and said, \"Alright.\"\n\nThe next morning, Kara was standing outside of an old burger joint somewhere in downtown Gardok. It was an older structure, rather close to the ground and with a strong foundation designed to last centuries, which sat squashed between two demolished apartment buildings. Decades of renovations to the surrounding area hadn't yet claimed it and it had been continually sold, bought, and then revamped, until it'd finally ended up as a lazy little family restaurant. Kara suspected it was the building's tough exterior and stumpy design that had saved it from the air raids raining down on them for months. It seemed as good a place as any to conduct a briefing. \n\nWith a groan of defeat, Kara stepped past the only guard and through the front door. It was dim and dirty inside, lighted only by a few ugly, broken windows. In the glow from the early morning sun, she could see that the floor was absolutely littered with overturned tables and chairs, garbage from squatters, and whatever rubble had been dislodged from the ceiling. A thin coat of dust covered every surface and as she walked, Kara could see her footprints in the filth. Amid all that desolation, the briefing table stood out like a sore thumb, the only piece of furniture in the whole place that didn't have an apocalyptic vibe. The other five people assigned to the mission were already sitting there, bundled up in blood-stained clothing and looking weary. As she took a seat, Kara found herself questioning the precise nature of their skills, but dared not ask about them. She was sure they had little to no combat experience and didn't need any more reason to consider abandoning ship last minute. Realism wasn't going to save them and ensure a successful mission, but perhaps optimism would. \n\nKara was put in charge of the mission and quite frankly, she wasn't too happy about that. She didn't have any leadership experience and would rather not be placed in a position of power as a matter of principle, especially when she wouldn't be able promise her men a decent chance of getting back home. But she didn't have any choice in the matter and her superiors ignored all her protests. Their reasoning was sound, if not greatly inconvenient: Kara was the only one among them with the ability to construct and detonate explosives and if something went wrong, she'd be the only one with the expertise to improvise. She was given several boxes worth of supplies with which to build the necessary bombs, all terribly disorganized and severely lacking. Still somehow, she was able to scrounge up enough parts to produce thirteen of the crude-looking things. Kara had hoped they would be able to fashion remote detonators for each, so as to avoid actually getting onto the train, but alas, the necessary components simply weren't there. \n\nAs they worked, Kara and her team were given a quick rundown on the plan and it wasn't long before they started, almost affectionately, to refer to their target as the \"death train.\" There were many reasons for the nickname, not the least of which was the massive amount of munitions hurtling straight toward Gardok, perhaps to destroy it for good. But deep down, everyone knew why the nickname had really stuck: their mission was a suicide mission and they would all most certainly die aboard that wretched, god-forsaken train. Scouts had already been sent out to report back on its progress and the team was informed that the train was well-guarded, fast approaching, and unlikely to lose steam. Their only saving grace was that it was also behind schedule and a bit on the small side, with only twelve cars in total. Six of those were cargo cars and situated at the rear, while the remainder carried passengers. Once aboard the train, Kara and her team would place two bombs inside each of the six cargo cars and then the thirteenth bomb\u2014dubbed the \"uncoupler\"\u2014would be used to detach the cargo cars from the passenger cars. Afterwards, the team would retreat into the rearmost passenger car and wait for detonation. The timers on each explosive would ensure that the uncoupler went off long before the munitions themselves were enveloped in flame. That would give everyone at least a chance to survive, however minimal.\n\n\"And afterwards?\" Kara asked, looking up at the portly man sent to brief them on the mission. \"How do we get off the train after detonation?\"\n\n\"You'll jump,\" he replied, his tone humorless.\n\n\"Are...are you serious?\" Kara asked, bewildered. \"We're on a moving train, in the frigid mountains north of Gardok, and we're supposed to just...jump?\"\n\n\"Pretty much,\" the portly man admitted, looking grim. \"Duck and roll when you land\u2014to reduce the force of impact\u2014and hope that you don't fall on anything sharp. Other than that, yeah. Just jump.\"\n\nFive hours and thirty-six minutes later, Kara and her team were all blindfolded, herded into a military transport truck, and then driven through Gardok to the fabled sewer line. She absolutely despised the blindfold\u2014they were traveling through the middle of a war zone, for god's sake!\u2014but it was also imperative that the location of the sewer line remain absolutely secret to all but the most high-ranking military personnel. Nearly a century ago, Gardok had replaced its original water supply system with one that wasn't falling apart and leaching lead, but it would have been too expensive to justify tearing down the old one afterwards. Instead, the city had voted to merely seal it off and thank god they had. The sewer line was the only way into and out of Gardok and without it, the White Horse would have run dry on food, water, and ammunition months ago. Isleydor had been desperately trying to block it off, but for every entryway they found, there was at least one more they hadn't. Kara was told that if she were caught and had information on the sewer line, they would absolutely get her to talk. It had been built so long ago and in so many different phases that no reliable blueprints existed and its inner workings were known only to those who had explored and mapped its winding, multi-level passageways themselves. Isleydor was desperate for a lead and Kara wasn't trained in interrogation resistance.\n\nIt was a long, bumpy trip through the sewer line and out of Gardok. As Kara was jostled along in what she assumed was a kind of underground railcar, she could hear dripping water above her and occasionally the squeaking of rubber tires on concrete. Eventually, they came to a stop and she was escorted on foot through a series of passageways, then out into unbearably cold air. The blindfold was removed, and Kara and her team found themselves on a mountainside covered in snow. They were each handed a bundle of winter gear and then ushered onto horses to avoid satellite detection. After a dark, torturous evening of nonstop riding, they arrived at a secondary location and then switched to snowmobiles. It took them almost two days to finally reach Pickling, a small town at the foot of the Larrian Mountains and one of the only train stops before Gardok.\n\nPickling had been taken almost a year ago and according to intel from the front, Isleydor had recently raided its winter stores and was preparing to send the spoils to their troops on the east side. Kara and her team would make their move when the death train stopped to load the extra cargo. Luckily for them, sneaking into town wasn't terribly difficult. They had a guide, and Isleydor wasn't about to waste more than a handful of soldiers on a small mining town. But the temperature was rapidly dropping and by the time they reached the train station, Kara wasn't sure she'd ever feel warm again. They just barely made it. The platform was coated in a fresh, thick layer of snow and a few dozen bulky, over-sized food crates were already stacked beside the tracks and ready to go. Only three soldiers were on duty, but Kara and her team still waited until nightfall to approach. As the guards sat huddled by an open fire and drank their fill of booze, they crept toward the outskirts of the platform, jimmied open one of the crates, and slipped inside.\n\nCrowded together in the cold and darkness, Kara and her team anxiously waited for their target to roll into the station. No one dared say a word, and they were all far too afraid to sleep. Surrounded on all sides by jugs of water and cans of preservatives, it was impossible to even move without making noise. To keep herself sane, Kara carefully took off her backpack and started counting the bombs, then checking their timers. She also had a pistol dangling from the holster in her belt, but it was only partially loaded. The cheap-ass bastards who had sent her on this suicide mission had insisted that they couldn't spare more than a few bullets for her protection. With nothing else to do, Kara fumed and thought about how she might get her revenge if they ever made it out alive. But then she could suddenly hear the whirring, brisk sound of a train approaching and all her vengeful thoughts were cut short. The whole platform shook as it came to a screeching halt, and then the blare of a whistle split through the air. Kara held her breath and\u2014given the lack of white fog surrounding her\u2014was certain that no one else was breathing, either. There were heavy footsteps on the platform and the grunts of men as they loaded crates onto the train. Then there were shouts, barely discernible over all the chaos, but Kara could still make out a solitary male voice...\n\n\"Don't check them all!\" the man said, frantic and frustrated. \"We don't have time for that! Just look into them at random!\" \n\nImmediately, Kara could feel her heart start to race beneath her breast, but in all fairness, they had been warned. During their briefing, the portly man had told them that the cargo crates might be inspected prior to loading. Swallowing hard, Kara remembered the seriousness in his eyes as he'd spoken. As the train whistle went off again, she recalled his exact words with sickening clarity and tried not to panic.\n\nIf they find you\u2014and they might\u2014you'll likely be executed on the spot, the portly man had said with a grimace. But since the train is running behind schedule, it's equally possible that they won't bother with an inspection. There's no telling which way it'll go. If you believe in a god, I'd pray.\n\nBut Kara had already prayed to her gods and now there was nothing left to do but hope they'd listen and empathize. Gathering up all her courage, she withdrew her pistol and eased her finger over the trigger. There was more shouting above them, and Kara could hear splintering wood as the crate just beside them was busted open with a crowbar and then haphazardly ransacked. But in the end, her team went unnoticed and was safely loaded onto the train. Sighing with relief, Kara whispered her thanks to the gods, just in case they were responsible for her good fortune and, if appreciated for their efforts, might offer up more of the same. There was a loud bang as the door to the cargo car was slid shut and then a creeping roar as the train started up again. The commotion died down and in the aftermath, all Kara could hear was the gentle clicking of wheels against train tracks. \n\nThey emerged from the crate only once they were certain the coast was clear. Rummaging through her backpack, Kara handed each member of her team two explosives and then assigned them a single cargo car. It was true that they were all inexperienced last-minute grabs, but the determination in their eyes made her proud. There was a reason each and every soldier on her team had joined the White Horse and hadn't yet deserted, even though Gardok would likely fall. They were fighting for a cause and a country they believed in and that wasn't nothing. As the train rattled and shook beneath them, Kara took comfort in the fact that even if they died that night, at least it wouldn't be in vain. They ran through the plan one more time, synced their watches, and then they were off. \n\nImmediately, Kara headed south and toward the front of the train. She was responsible for setting up bombs in the very last of the cargo cars, then for uncoupling the train and guiding her team to safety. The operation was supposed to be completed in under twenty minutes and hopefully, it would all go down without a hitch. Kara was halfway into setting up the final bomb when she heard gunshots in the cargo cars and cursed under her breath. Someone had run into a guard and the commotion would attract even more unwanted attention. Thinking fast, she abandoned the uncoupler, ran into the rearmost passenger car, and locked it from the inside, so that no one would be able to investigate the noise without breaking down the door. The warning alarm on her watch began to blink and grimacing, Kara noted the time. It had been seventeen minutes since they'd synced watches and no one had made it back to the passenger cars. To make matters worse, there was a furious banging on the locked door behind her, followed by intense shouting and a number of profane curses.\n\n\"Oh god! Oh god, they're dead!\" \n\nStartled, Kara whipped her head around, only to find that just two of her teammates had made it back to her. One of them, a very young woman with red hair by the name of Amelia, was sobbing. \n\n\"I saw two of them and...and they were dead. Totally blank eyes, and they weren't breathing. We're the only ones left now. We're going to die here...\"\n\n\"And what about our sixth man?\" Kara cried, because above the roaring of the train, it was impossible to be heard otherwise. \"I said, 'What about our sixth man?'\" But Amelia was too far gone to be of any help and wouldn't stop sobbing.\n\n\"You incompetent fool!\" Behind her, Kara could hear glass shattering and then a persistent thump, thump, thump as the locked door was slowly busted inwards. \"Give me that! I'll take care of this!\"\n\nIt was a miracle, but somehow, even amid all the chaos, Kara realized she'd forgotten something...the uncoupler! \n\nCursing, Kara looked down at her watch and saw that she had less than a minute before the cargo cars all went up in flame. If she didn't finish uncoupling them from the passenger cars and do so immediately, then what remained of her team would be going up in flame, too.\n\nShit, shit, shit!\n\nStill cursing under her breath, Kara rushed back to the uncoupler and wrenched open the outer cover of the explosive. She'd have to reset the timer on the fly and she'd have to do it quickly. One little misstep, and she'd blow them all to smithereens. Adrenaline took over and her mind went on without her. Kara was now floating somewhere far above the scene, watching someone else\u2014someone that looked remarkably like her\u2014doing strange, complicated work. She watched as her hands disconnected and rearranged wires, but wasn't entirely convinced they were hers. Then in a flash, it was all over and she returned to her body. Kara honestly wasn't sure how she managed it, but the instant the explosive was ready, she knew it and dove headfirst into the rearmost passenger car. ",
        "\"Get down!\" Kara cried, and it was the last thing anyone heard for a while. \n\nAs the uncoupler went off, Kara could feel a sudden swell of heat behind her. There was an intense, burning pain shooting through her calf, but she dared not look back. Hunks of metal and wood flew in all directions and not a second later, the rest of the bombs followed suit. The uncoupler hadn't been particularly powerful\u2014its only job had been to detach a set of railcars\u2014but those other bombs were a different story. They had been designed for absolute devastation and when they also went off, the whole earth shook. For a brief moment, the sky was lit with a fire so blindingly bright that the stars disappeared and the landscape was as clear as day. When darkness returned to the world, Kara could see only dazzling splotches of light against the blackness and there was a loud ringing all around her. Stumbling to her feet, she tried to cover her ears and block out some of the noise, but of course, that didn't help. She screamed for her teammates, but even though her lungs were burning, no sound came out. \n\nNauseous and disoriented, Kara turned around and watched as every cargo car in succession exploded into angry reds and yellows and blues, throwing flaming debris into the air and then raining down from the sky. Something huge, half-melted, and utterly mutilated crashed into the tracks just behind them, warping the metal beyond recognition and sending a jolt through the entire train. Kara almost lost her balance then, but she quickly leaned into the nearest wall and braced herself against the wood. Her nostrils were singed with gunpowder and she could barely stand, but in spite of the pain, she couldn't look away. The cargo cars were derailing now, sending sparks in all directions as their wheels fought to stay rooted to the tracks. As Kara saw them fading into the distance, they tumbled into the snow and the giant, smoldering heap that was left behind blotted out the sky with thick, grainy smoke. \n\nIt was beautiful...and it was terrible.\n\nThen there was a crash and a bang and the door in front of them finally gave way. Against her better instincts, Kara turned to look in the doorway and that's when she saw him. There was a short, stocky man standing in front of her and his face was contorted with fury. He held a gun in his right hand and, as if in slow motion, pointed it towards the trio of shell-shocked soldiers. Kara only looked at the man for a second and certainly not more than two, because she couldn't afford to spare anymore time. As a series of poorly fired shots ricocheted off the walls, one of her teammates pulled her to her feet and pushed her toward the back of the car and the opening there. Kara could see white rushing below her and, as gunfire exploded all around them, heard the red-haired girl screaming \"Duck and roll!\" before pushing her out of the train.\n\n<center>*******</center>\n\n\"You remember me now, don't you, slut?\"\n\nOh, fuck, Kara thought, groaning inwardly. Fuck, fuck, fuck... \n\nEven if her life depended on it, Kara wouldn't have been able to pick the man out of a crowd. She'd barely gotten a look at his face, but somehow, he could still place hers? How was that possible? In spite of all the chaos and after so much time had passed?\n\nBut it's definitely him, Kara thought, feeling sick. And he definitely remembers me.\n\nGrinning sadistically, the prospective buyer strode over to the clipboard beside Kara. He picked it up slowly\u2014so as to savor the anxiety in her eyes\u2014before taking a pen from his pocket and writing down his bid with an almost menacing flourish. \n\n\"I'm Commander Belvodeil, by the way,\" the man told her, eerily nonchalant. \"I was in charge of providing ammunition to Gardok's east side. Now, let's see, I think I can afford this...\" \n\nJust as the woman in red had done with Elandra, the buyer lifted her clipboard until she could read what he'd written there. It took a minute for the numbers to register, but when they did, Kara's face instantly fell. \n\nThree hundred and fifty qualid? Three times the minimum? Kara thought, hardly able to believe it, but it was right there in black and white and suddenly, she understood. Oh god, he's trying to reserve me for himself...\n\n\"Do you have any idea?\" Belvodeil began, grabbing hold of her chin and forcing her to look up at him. \"Do you have any idea\u2014any idea at all\u2014how embarrassing it was to explain over twenty million qualid in munitions damages to my superiors?\"\n\n\"Come now, Belvodeil, surely it wasn't that bad?\"\n\n\"Hu!\" Instantly, Belvodeil let go of Kara. He made a noise in his throat that was half-squeak and half-gasp, then spun around to the face the voice. It all happened so fast, it would have been comical if not for the look of complete and utter panic in his expression.\"My...my lord!\" \n\nTruth be told, Kara had never been too terribly invested in the politics of war. She'd been far too busy saving its victims to worry over the finer details of bloodshed and bureaucracy. While her fellow soldiers had sat huddled around the campfire at night and argued over big name diplomats and their battle tactics, she'd been practicing her sutures. Still, she recognized Lord Arlington the instant she saw him. It would have been impossible not to. He'd been responsible for taking over Gardok's east side and for nearly a year, his face had plagued nearly every newspaper she'd managed to get her hands on and almost every active news station still running by summer's end. Kara had always thought he looked fearsome in print, but it was nothing compared to his presence in person. Something about the way he held himself immediately demanded respect and a certain degree of reverence, too.\n\nAt a solid six feet tall and then some, Lord Arlington was a monster of a man. He wasn't bulky by any means, but Kara could definitely see more than a hint of muscle shifting underneath his clothes and swallowed hard. Dark, raven-black hair framed his face and there were three thin, parallel scars cutting across his left cheek. They seemed to have faded long ago, but given Isleydor's incredible medical technology, the mere fact that she could see them at all meant that they had been deep. Yet despite all the danger in his demeanor, there was elegance, too. Not to be outdone by the rest of the company, Lord Arlington wore a fine navy dress cloak with a white button-down shirt and black trousers. They looked plain, but Kara could tell even at a distance that the material was expensive. His fingers were covered with rings, but she was most entranced by the longsword on his belt. The handle was incredibly intricate and the cross-guard was dotted with tiny gemstones, green and blue and white.\n\nIsleydor's colors... Kara thought, looking up, but it was a mistake. Cold, calculating blue eyes were burrowing straight through her and they were so unnervingly steady, it chilled her right down to the bone. She hadn't realized that she'd been gawking until that moment, but Lord Arlington had clearly noticed and was happy to return the favor. Please blink... Kara thought, hardly daring to breathe. Please, please blink...\n\n\"I like to think of myself as a merciful man,\" Lord Arlington continued, and thankfully, he turned away from her. \"It could have been much, much worse for you, Belvodeil.\"\n\n\"But of course, my lord, and am I ever grateful for your mercy,\" Belvodeil quickly conceded, bowing low. \"Nevertheless, this woman has caused me quite a bit of distress and once I get her home, I intend to wring an apology out of her.\" \n\nArlington snickered. \"Come now, Belvodeil. You should have had every crate of cargo inspected prior to having it loaded, as you'd been told to do many, many times. It's not the poor girl's fault you aren't capable of following basic protocol, no matter how often it's been drilled into your skull.\" \n\nLooking contemplative, Lord Arlington stepped toward Kara and as Belvodeil reluctantly moved out of the way, looked down on her with an uncomfortable degree of interest. \n\n\"So, this is the little wretch responsible for the Eastern Ammunitions Incident,\" Arlington drawled, and his lips formed a thin, firm line. \"Do you have any idea how cold it is in your god-forsaken country? I had hoped to be out of there by mid-August, but alas, you can't capture a city without guns, can you?\"\n\nOh god, the Eastern Ammunitions Incident? Kara thought, and she could suddenly feel her stomach drop. They've given it a name? \n\nKara had always assumed that in spite of her best efforts, her work on the death train had done little to delay Callihistra's eventual defeat and had certainly done nothing to stop it. After leaping from the smoldering train into the snowy banks below, Kara and her two companions had traveled back to Gardok all on their own, only to find it captured. At the time, there had been no reason to suspect that the attack was anything more than a minor inconvenience for Isleydor's forces.\n\n\"Uh, my lord?\" Belvodeil interrupted. \"Have you put in a bid for General Tamius Sue? She was your primary opponent during the war, was she not?\"\n\n\"Indeed, she was,\" Lord Arlington nodded, and he leaned casually against the platform beside Kara, skimming through a copy of the event catalog he'd pulled from his pocket. \"But, as I suspected, Tamius will end up going live. I'll have to snag her then. In the meantime, I thought I'd see who else was available from the east side.\"\n\n\"You're in the market for a another, my lord?\"\n\n\"And why not?\" Arlington shrugged, glancing up for just a moment before returning to his catalog. \"After all, Tamius won't break easy. If I do manage to buy her, I'll probably have to keep her in solitary for a few weeks, so as to soften her up. It would be nice to have another piece to work with while I wait.\" \n\nKara watched in morbid fascination as Arlington flipped through page after page of human merchandise, thumbing past a number of names and faces she recognized and many more she didn't. Then eventually, he stopped and Kara spotted her own picture, squashed between those of Avonna Lence and Cayla Moore, a couple of Naval Officers. She watched as Arlington carefully read over her entry with a bemused expression on his face, then frowned thoughtfully. Trying not to be too conspicuous, Kara leaned over to get a better look, but the print was too small and Arlington was partially in the way.\n\n\"What about Elandra?\" Belvodeil suggested, looking twitchier and twitchier by the second. He kept glancing at her and then Arlington, and Kara was starting to get concerned. \"She's a Commanding Medic from the east side. She might be entertaining.\"\n\n\"No,\" Arlington told him, and he shook his head. \"Charlotte has made it very clear to me that Elandra is hers. Apparently, they have a very complex history and I wouldn't want to get in her way. And well now, what's this?\" \n\nLord Arlington paused then, double-checking something in Kara's description which seemed to intrigue him, a slight grin disturbing the smooth features of his face. \n\n\"Well, I'll be damned,\" Arlington chuckled, gesturing toward the catalog. \"Will you look at this? The little wretch is related to Florence Querren. I swear to god, if you let that man get his hands on a fucking ketchup packet, he'd find some way to make it explode.\" \n\n\"You knew my Uncle Florence?\" Kara asked, but she immediately regretted it. She hadn't thought Arlington's vicious grin could get any wider, but it did.\n\n\"My dear,\" he told her, setting the catalog face down upon the platform. \"I've come close to killing the man a few times.\"\n\nAt first, Kara was too stunned to speak, but her shock quickly turned to anger and then raw, visceral hate. Uncle Florence had been a godsend to the west and south sides during the war and the mere thought of someone as slimy as Arlington getting his hands on him instantly sent her into a rage.\n\n\"How dare you!\" Kara hissed, her voice low and deadly at first, but before long, it had morphed into a full-on scream. \"You're lucky my hands are tied, bastard! Vile, loathsome bastard!\" The commotion caught the attention of several bystanders and as half a dozen heads turned in their direction, Kara felt herself growing even more bold. \"It doesn't matter that you've won\u2014that you think you've won\u2014my uncle is ten times the man you'll ever be!\" Now she was really drawing a crowd and from across the hall, Kara could see a Martkorp handler turn toward her and then, as his eyes met Lord Arlington's, pale and break out into a run. \"You are...nothing! Do you hear me? Nothing!\"\n\n\"My lord, I am so s-sorry!\" the handler cried, finally coming to a halt in front of them and doubling over to catch his breath. \"If you'd like I c-could have her gagged?\"\n\n\"Don't bother,\" Arlington replied, and he waved his hand dismissively. \"She'll wear herself out in a moment anyway.\" Turning toward Kara, he grinned devilishly at her and to her horror, she realized that he was enjoying the outburst. \"They're simply adorable when they scream like that, wouldn't you agree?\" \n\nIt really gets their dicks hard, Alyssa had told her. This is all a game to them. A spectacle. A show. \n\nMaybe Alyssa was right and reluctantly, Kara shut her mouth. Ultimately, she'd rather stay silent than allow Arlington to take pleasure in her torment, but he wasn't finished with her yet. \n\nStill watching Kara curiously, Arlington stepped toward her and as he approached, she honestly wasn't sure whether to feel anger or fear or something else entirely. She didn't want to be touched, but all she could do was lean back farther and farther and farther, until her chains went taut and she was trapped. There was less than a foot between them now. Kara cringed away, but Arlington took her face in his hands and forced her to look at him. His grip wasn't painful, but it was close. Turning her head from side to side, he studied her as thoroughly as if the meaning of life were hidden somewhere behind her eyes and she could hardly stand it.\n\n\"Don't touch me,\" Kara hissed from between clenched teeth, and Arlington chuckled. \"Asshole!\" \n\n\"You know, this one is quite obstinate for a no-name medic from the countryside,\" Lord Arlington observed, finally releasing her. \"Even for a relative of Querren, I'm rather surprised by the nerve. She'd look absolutely stunning strung up in my living room, screaming her little lungs hoarse.\" \n\nThen to Kara's complete and utter horror, Lord Arlington picked up her clipboard, put down a bid, and signed his name. Poor Belvodeil looked like he'd been punched in the gut, but his lord hardly seemed to notice.\n\n\"Really, sweetheart,\" Arlington sighed. \"It was rather a nuisance having to deal with that train incident. Still, I'm rather curious. I'd never heard of you before this evening, but Belvodeil assured me that you were a highly trained weapons specialist with an elite team and that even the best preparations wouldn't have prevented the Eastern Ammunitions Incident. Care to enlighten me?\"\n\n\"Honestly?\" Kara replied, still seething. \"Tamius wouldn't even give me a fully loaded pistol.\"\n\n\"Marvelous,\" Arlington sneered, and he glanced sideways at Belvodeil, who by then was looking positively horrified. \"Just marvelous.\" \n\n\"M-my lord, I can explain...\"\n\n\"Oh? Can you?\" Arlington growled, but before he could really lay into Belvodeil, Alyssa interrupted him with an obnoxious, obviously fake little cough. Arlington stiffened as if he'd just been bitten in the ass, then turned around sighed. \"What do you want, Terrance?\"\n\n\"I'm right fucking here!\" Alyssa spat, looking furious. \"I'm five feet out of your way, and you weren't even gonna say hello?\"\n\n\"Hello, Terrance,\" Arlington groaned, as weary as if he had lived a thousand years and never once closed his eyes. \"Now, will that be all?\"\n\n\"No,\" Alyssa told him. \"No, it won't. Where's Greenwood?\"\n\n\"I don't know why Alan bothers with you,\" Arlington commented, and he crossed his arms over his chest in a most indignant fashion. \"If he wanted a challenge, fine. I'd have been happy to give him a recommendation. But you\u2014\"\n\n\"\u2014yeah, yeah. I'd be better off in front of a firing squad, or something like that. You're not still sore about last November, are you?\"\n\n\"Not at all. I didn't even need stitches.\"\n\n\"But you did need a new assistant and, if my memory serves me correctly, a new pair of pants.\"\n\nKara couldn't believe how wide Alyssa's shit-eating was and it just kept getting bigger and bigger, threatening to swallow them both. She expected Arlington to unleash hell on the lot of them, but he only raised an eyebrow condescendingly. \n\n\"Very mature, Terrance. As always.\"\n\n\"It's the truth, isn't it?\"\n\n\"You keep telling that story without any context, just to get a rise out of me, but quite frankly, I've got bigger problems than you and your mouth,\" Arlington hissed, stepping toward Alyssa and bending down so that their eyes met. \"Speaking of which...you've been disconcertingly quiet this evening. I don't suppose you plan on behaving for once?\"\n\n\"Meh. I'm saving my voice for the live auctions.\"\n\n\"Lovely...\" Arlington groaned, and he rubbed the bridge of his nose, then gave Alyssa a mean sideways glance. \"You know, I was told they found you in tatters, cowering in a ditch just outside of Gardok and smelling of death.\" \n\n\"Who told you that!?\" Alyssa cried, and her expression suddenly turned sour. \"Who?!\"\n\n\"It was Demson, actually.\"\n\n\"Of fucking course he did, that lying prick!\" Alyssa snarled. \"I'll have you know that Martkorp cashed in at least five life insurance policies the day they found me in that ditch. There was no cowering, and Demson knows it!\"\n\n\"Temper, temper...\" Arlington chided, and he shook down his sleeve to look at his wristwatch. \"I can't believe it's been... Wow, an hour and fifty minutes? And you haven't gotten yourself gagged yet? I must say, I'm impressed.\"\n\n\"Careful, Arlington, you keep being nice to me and we're gonna have a problem.\"\n\nThey squared off then, with Arlington glaring at Alyssa and Alyssa glaring right back, until she finally gave him a sadistic little smirk and squashed her boobs together with her elbows.\n\n\"Care to make a bid, my lord?\"\n\n\"Ugh,\" Arlington shuddered, and he took a step back, eyeing her from top to bottom with a disgusted little frown on his face. \"I hardly think you'd be worth the effort.\"\n\n\"Aww, how sweet; you really know how to make a girl feel special, you know that?\"\n\nBut Arlington only rolled his eyes and before Alyssa had a chance to reply, he turned his back on her and disappeared into the crowd. Kara was hoping that was the end of it, but Belvodeil was still there and he wouldn't stop staring at them. Snatching up the clipboard beside Kara, he took note of the bid his lord had made and instantly, all the blood drained from his face. Cursing under his breath, Belvodeil took one last look at his stolen prize before storming off, perhaps to get something to drink.\n\n\"Nice,\" Alyssa observed, nodding her head in approval. \"Very, very nice...there's few greater pleasures in life than watching Arlington's subordinates squirm.\" But Kara wasn't listening. \"Hey, you okay?\"\n\n\"Oh my god...\" Kara whispered, still trying to process what had just happened. \"That was...that was the Fourth Lord...the Fourth Lord of Isleydor...\"\n\n\"Yeah, I know. Small world.\"\n\n\"Oh my god...oh my god...oh my god!\"\n\n\"I always wondered who they recruited for that suicide mission,\" Alyssa laughed, and looking over, Kara saw that she was positively beaming with pride. \"Didn't think it'd be a medic, but hey...great job! You could have told me you were involved in the Eastern Ammunitions Incident. I wouldn't have tattled.\"",
        "\"I didn't know it had a name!\"\n\n\"You unassuming little liar!\" Alyssa teased, not at all seeming to hear her. \"Telling me you're a nobody when\u2014\"\n\n\"I am!\" Kara very nearly screamed. \"I didn't do anything!\"\n\n\"You kinda did, though. You blew up a train.\"\n\n\"No, no...that's a misunderstanding,\" Kara protested. \"Someone else got hold of the intel and the materials, then came up with a plan. Someone else transported the team into Pickling and then snuck us onto the train. When you think about all the work that went into that mission, I didn't really do anything.\"\n\n\"Except blow up a fucking train.\"\n\n\"I pressed a button!\" Kara hissed. \"That's it!\"\n\n\"Uh-huh, and I've never killed anyone, I only ever pulled the trigger,\" Alyssa replied, looking thoroughly unconvinced. \"What's your point, medic?\"\n\n\"My point is that I'm not supposed to be here,\" Kara groaned, grabbing onto the chains above her to try and steady herself, just as a new wave of nausea hit. \"I was supposed to be at a Captly's auction and I...I think I'm gonna puke.\" \n\n\"Shit...okay, deep breaths,\" Alyssa told her and her voice suddenly took on a commanding, but gentle tone. \"Come on, give me a few deep breaths. You can do this.\"\n\n\"No, I can't.\"\n\n\"Yes, you can. But you have to listen to me. Give me just five good, long deep breaths. Come on.\"\n\nIt was hard\u2014her heart was pounding so loudly in her chest, it hurt\u2014but finally, Kara managed one deep breath and then another. Now three, and four, and then five. The room stopped spinning\u2014her heart stopped pounding\u2014and though she was far from being okay, Kara was good enough.\n\n\"Better now? I can call over a medic if you need more drugs?\"\n\n\"No, no...I'm okay now. I think I'm okay.\"\n\n\"Look, this isn't going to be easy, but if you're interested in resisting Arlington, I can help you,\" Alyssa told her, her expression frighteningly serious for someone who had just spent half the night taunting their captors with an obnoxious grin on her face. \"Are you ready to listen?\"\n\n\"You say that like he's already bought me,\" Kara whispered, and she found that her voice had grown hoarse. \"But that Belvodeil guy really wants me, don't you think...?\"\n\n\"Oh, please,\" Alyssa groaned, rolling her eyes. \"Belvodeil doesn't have the stones to try and outbid his Commanding General\u2014let alone the Fourth Lord of Isleydor\u2014so unless there's someone else out there who wants you, you belong to Arlington now.\"\n\n\"Do you have to say it like that?\" Kara hissed, and in that instant, her fear had turned to anger. \"You don't know that for sure!\"\n\n\"Yes, I do,\" Alyssa hissed right back. \"I know this is rough, and it'll only get worse. But if you want to make it out the same way you're going in, you should heed my advice. I've worked in intelligence a long, long time. I know how these guys work. I did a six month stint in Calphore and during that time, I was interrogated by a lot of fucked up people. I'm telling you, if Arlington's interrogation style is anything like his slave-breaking style, you ought to be worshiping my words right about now.\"\n\n\"Alright, alright!\" Kara relented, finally letting resignation sweep over her. \"I'm listening.\"\n\n\"Good, because you're gonna be on your own soon,\" Alyssa told her, glancing anxiously around the room. Martkorp was already setting up for the live auctions and a crowd had started to form around the stage. \"First things first, Lord Arlington is the man they bring in when pain isn't an effective interrogation technique. He's a mind fucker; he fucks with minds. So, it'll be imperative that you learn to recognize when he's bluffing and when he isn't.\"\n\n\"I...I don't know what that means.\"\n\n\"Arlington will push you until he finds a line, and then he'll work on making you cross that line. When he's done, he'll push some more until he finds a second line to work with. The key is to try and prevent him from finding a line in the first place, so resist every dumbass little thing. Indiscriminately resist every question, every order, every punishment he doles out,\" Alyssa told her, and an eerie smile crossed her face. \"And have fun with it, too. Get creative\u2014make up some imaginary fears for yourself. I've heard Arlington wears these stupid little kitten slippers. I don't know if it's true, but if it were, that'd be hilarious. Anyway, you could feign a kitten phobia.\" Alyssa rattled her chains as if helpless, faking a terrified voice. \"Oh god, master! Not the slippers! Don't make me kiss your kitten slippers!\"\n\n\"This isn't funny!\" Kara screeched defensively. \"And what the hell is a line?\"\n\n\"You know, a fucking line,\" Alyssa told her, looking a tad annoyed, but not unsympathetic. \"Let's see...we all have certain things we're willing to do under enough duress, right? Things we're willing to sacrifice for our comfort or our dignity. But then there are those things so totally abhorrent to us that even under extreme duress, we won't fucking do them. That's a line. The more lines an interrogator can push you past, the more information he can extract. Or, in your case, the more subservience he can demand.\" Just then, Alyssa scanned the room and stopped at a face she recognized. \"Well, speak of the devil...\"\n\nKara looked up just as an older gentleman began to head toward them, his eyes and hair a dark, foreboding gray. He wore the black military uniform of a man exclusively from intelligence and the corresponding sigil of his department\u2014a sword, piercing through a book\u2014as silver pin on the left side of his chest. Alyssa must have recognized him, for she grinned wickedly as he approached. People kept stopping him as he walked by and he would pause to chat with them, but eventually, he made his way over to their portion of the platform. \n\n\"Greenwood, my feelings are hurt,\" Alyssa complained, her smile never once wavering. \"Have you been here this whole time, but have only now decided to visit?\" The man paused in front of her, his serious eyes unamused, and Alyssa laughed. \"Oh, come on. Don't be like that...\"\n\n\"I assume you'll be going live in a little while,\" the man observed, stepping toward Alyssa and picking up the clipboard beside her. As he absentmindedly flipped through the bids, Kara realized that there were multiple pages worth and felt her eyes grow wide. \"If that's the case, I suppose I shall see you on the floor in a moment. Still, I was hoping to get a closer look before I made any bids.\" Lifting his eyes from the clipboard, Greenwood considered Alyssa carefully, then gave a little cluck of disapproval. \"God, you're even more scarred up than I remember, but I suppose you'll have to do.\" \n\n\"You sure you don't want to cop a feel?\" Alyssa taunted, and she squashed her boobs together again. \"You don't want to come over and get a free sample first?\"\n\n\"I'd prefer to stay out of reach,\" Greenwood replied tersely, and he glanced at the chains holding her as if he were most unimpressed. \"If you wanted to get out of\u2014well, whatever the hell that's supposed to be\u2014you could easily do so and we both know it.\"\n\n\"Ha! You scared?\"\n\n\"I'm cautious,\" Greenwood clarified, seemingly oblivious to her provocations, and he started pawing through her clipboard again. \"My god, look at this list...what the hell have you been up to?\"\n\n\"What?\" Alyssa scoffed, and Greenwood raised his eyebrows. \"What?!\"\n\n\"Both Ethan Telmer and Elizabeth Wylde are placing bids,\" Greenwood sighed, now looking a little less stoic and a little more frustrated. \"What on earth did you do to piss them both off? You only got free a little over three months ago.\"\n\n\"I'm just a popular girl, I guess.\"\n\n\"You're obnoxious,\" Greenwood corrected. \"Unfortunately for me, you seem to have turned that into a selling point.\"\n\n\"Ah, don't be angry, sweetie...\"\n\n\"I'm going to have to outbid Wylde,\" Greenwood groaned. \"There goes my budget.\" \n\n\"I promise you won't regret it,\" Alyssa purred, her eyes sparkling with something resembling madness, but also triumph. \"I've really missed our little chats, Greenwood. I swore on my life that I'd only scream for you, and I kept that promise. Now it's time to finally reconcile our differences one-on-one, don't you think?\" With that, Alyssa's persistent grin suddenly turned malicious. \"But you better make sure you lock me up tight and even then, I'd sleep with one eye open.\"\n\n\"You just about done?\" Greenwood asked, not the least bit phased by her scary little monologue. \"I don't want to interrupt, but you're not the only item on my to-do list, so...\"\n\n\"You're no fun, you know that?\"\n\n\"Nonsense,\" Greenwood told her, his face utterly expressionless. \"I'm loads of fun.\" Then he turned on his heel, and Alyssa watched him slink back into the crowd.\n\n\"You...you know that man?\" Kara asked, unsettled by the exchange, but Alyssa only shrugged.\n\n\"We've been engaged in...how do I describe it? A sick, twisted love affair of sorts?\"\n\n\"Thank you for your patience this evening!\" the loudspeakers suddenly boomed, and Kara almost leapt out of her chains a third time. \"We'll be starting the live auction in just a few minutes, so please head on over to the main stage.\" Turning toward the front of the room, Kara saw that the well-dressed man from earlier had taken to the podium to serve as the auctioneer and the seats laid out before him were absolutely packed with prospective buyers. \n\n\"Ugh, fucking finally,\" Alyssa growled. \"I have shit to do.\"\n\n\"Gather 'round again, gather 'round!\" the loudspeakers continued, and those patrons still mingling on the outskirts of the auction hall began to head toward the stage. There was an excited, almost sinister little undercurrent of chatter and Kara could hear her heartbeat pounding in her ears all over again. \"We are running out of seats, ladies and gentlemen, but there is still plenty of standing room. If you have a disability and need any specialty accommodations, please let the host know. And now, let's get started! Typical rules will hold for the live auction. The minimum bidding increment will be fifty thousand qualid, and we ask that you please don't harass the merchandise. We'll begin with the most highly contested pieces and work our way down from there. First up is...ah, yes! General Benjamin Karrington, head of the White Horse Rebel Alliance. Or, at least, he was.\" At that, the crowd erupted into laughter and dozens of heads turned as Callihistra's famed First General was hauled toward the stage. \"Give him a wide berth, ladies and gentlemen. We've been having a little trouble with this one.\"\n\nIt took four fully grown men to drag Karrington toward the stage and despite the auctioneer's warning, the crowd did not give him a wide berth. As the general and his escorts made their way through a veritable sea of prospective buyers, the patrons laughed and jeered and spit in his face. Some of them tried to reach out and snag a handful of his clothing or rip out a chunk of his hair, but the handlers had been prepared for this and did an excellent job of fending them off. Even so, Kara couldn't stop biting her nails or, at least, the psychological equivalent. The mob was incredibly zealous and she was desperately afraid that the handlers would be overwhelmed. If this was indeed a \"spectacle\" and a \"show,\" then the main event had just begun and everyone wanted to be involved.\n\n\"Please, please don't harass the merchandise!\" the auctioneer begged. \"Please, let him through!\" But no one was listening.\n\nFinally, the Martkorp handlers managed to pull their charge onto the stage, but it was a struggle to secure him to the leather-padded \"X\" at its center. The general had no intention of making their jobs easy and fought them every step of the way. Two men had to hold him down while the others frantically tried to affix his cuffs to their corresponding clasps, racing to finish up before being shaken off. At one point, Karrington miraculously broke free, but the handlers quickly grabbed hold of him and dragged him back. He turned around and swung at one of them, but he missed and the room immediately broke into applause. Then eventually, he lost altogether. Chained spread-eagle upon the stage, Karrington looked a lot more like a wet, beaten dog than a person. His body sagged with exhaustion and his hair was positively soaked through with perspiration, but the hatred in his eyes never once wavered. Defiance was written in every line of his face, even as drool dribbled down his chin from the gag in his mouth. \n\nLooking at him like that\u2014with rage, and desperation, and grief seeping from every square inch of his skin\u2014it suddenly occurred to Kara that he had been responsible for the harsh, male scream earlier that evening. The look in his eyes told Kara that if he hadn't been gagged, he would still be screaming his lungs hoarse, until they either gave out or he lost his tongue altogether. \n\n\"We'll begin the bidding at six hundred thousand qualid...\"\n\nFrom then on, it was utter chaos. Kara suspected that the semi-open bar in the back was largely to blame. She could barely hear the auctioneer over all the din and was amazed that he was able to keep track of all the distressed bidding and shouting. Someone came close to being involved in a fistfight and security had to be called over. But finally, Benjamin Karrington was sold to a mousy-looking woman wearing thick rimmed glasses and a beige dress suit. As her competitors sighed or otherwise groaned in defeat, the auctioneer banged his gavel three times and accepted her bid. At over three million qualid in total, it would likely be the highest that evening. The woman pushed back her glasses and Kara could see that her eyes had been dyed to match her long, maroon hair.\n\n\"Hey, Alyssa...,\" Kara whispered, because she seemed to know damn near everyone there, probably a side effect of working in intelligence. \"Who is that woman?\" \n\n\"Honestly?\" Alyssa shrugged. \"I don't know. She must be above my pay grade.\"\n\n\"And now, an especially tasty treat,\" the auctioneer continued, and as Karrington was taken away, a gentle chuckle rippled through the crowd. \"Ah, and now I see that some of you are getting ahead of me. Very well. Without further ado, may I present the lovely Tamius Sue!\" Glancing toward the back of the hall, Kara watched as her general was led toward the stage, looking solemn, but strangely complaint. \"And there she is, ladies and gentlemen\u2014the very last of the White Horse rebel scum to finally fall.\" The crowd laughed, and Kara saw that the auctioneer was positively grinning from ear to ear. \"Don't let her shy away, folks! Let's get some applause going and congratulate the general on her stunning victory!\" \n\nThe auction hall was suddenly filled with enthusiastic clapping and cheers, but Kara only had eyes for her general. It was surprisingly difficult to see her captive like this, being flanked on either side by a pair of Martkorp handlers and marched toward a hostile crowd hungry for her anger and her tears. But Tamius gave them nothing\u2014not a whisper, not a glare\u2014and stepped toward the stage with cool, almost regal confidence. Once there, she allowed the Martkorp handlers to secure her to the leather-padded \"X\" without so much as a word of protest. Kara thought she'd never seen someone so brave and it almost hurt to look at her. \n\n\"Do I hear three hundred thousand qualid? Three fifty? Four?\"\n\nThere was chaos again and more jeering, but Tamius didn't acknowledge any of it. She stared down at the patrons as if they were less than dirt and just as filthy. At least two dozen of them were fervently placing bids and two women on the outskirts of the hall got into an argument, but eventually, Tamius was sold to Lord Arlington for one and a quarter million qualid. From all the way across the room, Kara couldn't see the man who had bought her general and who would undoubtedly buy her, but she could hear several hearty voices congratulating him and cursed under her breath. No one was really paying attention as Tamius was taken down from the leather-padded \"X.\" It all happened so abruptly, Kara could hardly believe it had happened at all, but it did. One moment, the handlers were on their feet and the next minute they were on the ground. \n\nThe second her wrists and ankles were free, Tamius lunged at the nearest handler and dropped him with a single blow. Kara recognized that move. It was a brachial stun, delivered at the neck just below and slightly in front of the ear. Done right, it'd compress the carotid artery, jugular vein, and vagus nerve all at once and the result was instant unconsciousness. The handler fell and he fell hard, his eyes rolling into the back of his skull. But the second handler was a lot more cautious and jumped back just in time. He grabbed the taser on his belt and charged Tamius, but she was quick as lightening and maybe even quicker. She expertly dodged every attempt to make contact, dropping her weight with unnerving fluidity and then slipping carefully from side to side. The next time he tried to shock her, she grabbed his outstretched arm, turned sideways, and then threw him to the ground, knocking the wind clean out of him. \n\n\"Haha! Reverse wrist throw!\" Alyssa grinned. \"Fucking beautiful!\"\n\nWhile the handler on the ground was still too stunned to move, Tamius twisted his arm back and shocked him unconscious with his own taser. Kara heard a bloodcurdling scream pierce through the air and then suddenly, there was silence. Two other handlers rushed the stage, and now the stairs on either side were blocked off. But Tamius was hardly finished. Kara could see the gears spinning behind her eyes as they darted from one handler to the other, then finally grew still. Her feet lifted off from the ground and not a second later, Tamius was hurtling across the stage. She rushed upon the third handler with her fists raised, then tucked in her elbows and immediately began throwing punches. Her attacks were so fast, they existed only as flesh-colored blurs. \n\nBut this handler was better prepared than the first two had been. As Tamius continued her barrage, he slipped in and out of reach, blocked a few blows, and then almost landed one of his own. Unfortunately, he was so focused on her upper body that when she crouched down and swept his leg, he was completely unprepared for it. He went down, but the fourth handler had been running toward them the whole time and he was now less than a yard away. Thinking quickly, Tamius leapt backward and over the floor, performing three successive handsprings. Her feet hit the ground and she used her momentum to slip to the side. Now she was behind the handler and it honestly looked like she'd teleported there. Before he had a chance to reorient himself, she delivered a spinning wheel kick to the back of his head and he was knocked out cold.\n\nHoly shit! Kara thought. \n\n\"Haha, holy fucking shit!\" Alyssa cried.\n\nBut Tamius wasn't going to escape, not from a Martkorp auction hall somewhere deep inside Isleydor. Kara watched as four handlers ran past her on their way to the stage, loading their tranq guns as they went and disengaging the safeties. Soon, Tamius was surrounded on all sides and Kara held her breath, waiting for the inevitable to unfold and holding back tears. But Tamius had known all along that it would come to this. As the Martkorp handlers rushed the stage to subdue her, Tamius complacently spread her legs shoulder width apart and positioned her hands behind her head with her fingers interlocking. Then with cold eyes, she looked down at Lord Arlington and though she didn't shout, Kara could hear her in the dead quiet of the auction hall. \n\n\"That was your only warning, Arlington,\" Tamius said, her voice frighteningly serious. \"If you intend to bury me, you had better bury me deep.\"",
        "Kara now understood why Tamius had been the last general to fall, and had outlasted all the others. While everyone else had been fighting their captors, she had been luring them into a false sense of security and then she had waited. Tamius must have known that she would get one and only one chance to make a move and she had decided to make hers on stage. The entire auction hall had been her captive audience and her message had rung clear: Watch yourselves; we're not done yet. It was definitely intended as a threat, but in her own bloody-fisted way, Tamius was also saying goodbye to her friends and reminding them to stay strong. The auction hall erupted with cheers, but this time, it wasn't the prospective buyers who were jeering, but the slaves. \n\nIt took a while for the commotion to die down after that, but eventually, it did and the live auctions resumed. Five more yellow uniforms were auctioned off and soon after, so were a few red ones. Dryden Lane was sold to Lord Algeris for 750k qualid, and Kara thought she'd never seen a man pale so quickly. It was an hour before they finally got to Alyssa. Much like Tamius, she didn't object as she was led onto the stage, but she wasn't exactly stoic, either. She waved to the crowd as if she were in a parade, blowing kisses to disgruntled-looking patrons and baring her teeth menacingly if anyone got too close. As a pair of handlers secured her to the leather-padded \"X\" at the center of the stage, she flipped off the entire floor and there was an immediate uproar. Patrons were cursing at her from just below the apron and the auctioneer was trying to calm everyone down, but Alyssa had no intention of letting the chaos fizzle out. \n\n\"You must be at least nine inches to buy this bitch!\" Alyssa laughed, and as the horrified Martkorp handlers rushed to gag her, she only laughed harder. \"I don't do tiny dicks!\" \n\nA lot of very angry-looking people started bidding on her after that. Somewhere in the second row, Kara thought she saw Greenwood roll his eyes as he raised his card into the air. He got locked into a fierce bidding war with a passionately vocal, silver-haired woman, but won out in the end. Alyssa was sold to Greenwood for 450k qualid and soon after, she was taken away. As the night wore on, Kara watched as more and more slaves were led onto the stage and then whisked off to a room in the back, until the platforms were all but empty. By then, her arms were getting tired and her knees were starting to throb. But all of that stopped mattering the second Kara heard the auctioneer calling out her name into the crowd. \n\nWait...what? Kara thought, and it was as if she'd been punched in the gut. She'd been under the impression that Lord Arlington already owned her and that she wouldn't have to suffer through a live auction. I didn't...but I thought... \n\nAnd then, Kara remembered...\n\nEarlier that evening, the auctioneer had explained that a bid had to go uncontested for twenty minutes in order for the associated piece to be considered \"reserved.\" Since Arlington's bid had been made fifteen minutes prior to the start of the live auctions, Kara was technically still up for grabs. A serious case of stage fright caught hold of her as a pair Martkorp handlers took her down from her spot along the wall, cuffed her hands in front of her, and gently guided her toward the crowd of prospective buyers. The closer they got, the higher the stage appeared, until she felt smaller than she ever had before. When they finally reached it, her handlers tried to force her up the stairs, but Kara refused to go any further. She was far more afraid of being up there on display\u2014the eyes of Isleydor's most notorious military personnel on her\u2014than she was of the Martkorp handlers flanking her. But when the auctioneer looked at her handlers impatiently, one of them picked her up, slung her over his shoulder, and carried her up anyway. At Kara's terrified squeal, the audience roared with laughter and she felt herself grow cold.\n\nAs the handlers cuffed her wrists and ankles to the leather-padded \"X,\" Kara closed her eyes tight shut and imagined she was somewhere else. It was one thing to be one of many slaves chained along the wall, surrounded by patrons who often passed her by or only glanced in her direction. It was another thing entirely to be strung up on a stage, the focus of everyone's attention, and she simply couldn't bear it. Rather than face the crowd, Kara decided that she would stand perfectly still and wait out the ordeal. But then, she remembered her general's defiant stare and suddenly felt embarrassed. And angry. Angry at herself for being so weak, even now, when she'd already lost everything and had nothing more to lose. Taking a deep breath, she forced her eyes open and was met with a sea of sinister faces. She spotted Lord Arlington among them and he gave her a curt little nod. \n\n\"Before we begin, I'd like you all to take a moment and look through your event catalogs,\" the auctioneer began, and for some reason\u2014perhaps his tone or the way he was gesturing\u2014Kara could feel an overwhelming sense of dread creep up into her stomach. \"We would like to apologize for an error on our part or, rather, an unfortunate omission. It has recently come to our attention that the piece on display, Miss Kara Chrystein, is the young lady responsible for the Eastern Ammunitions Incident. For those of you who were affected by the incident, this information may be useful when deciding whether or not to place a bid.\" \n\nLooking down into the crowd, Kara was horrified to find that the guests now looked much more interested than they had been just moments before. There were whispers between neighbors, curious looks, and a few patrons who had previously seemed bored were suddenly skimming through their catalogs to learn more. Kara desperately wanted to cry out and explain to them that the mission she'd led had been a fluke, that her Commander had guilted her into it, and that she really wasn't as interesting as the auctioneer claimed. But she knew now that any adverse reactions would only pique further interest in her prospective buyers and kept her mouth shut. As a murmur rippled through the crowd, Kara glanced around the room and tried not to throw up. \n\n\"We'll begin the bidding at fifty thousand qualid. Do I hear fifty? One hundred?\"\n\nA dozen or so bidding cards were raised into the air, but slowly the number dwindled, until there was only one bidder left. Lord Arlington made an offer for 250k qualid and when no one else could match it, the sale was set. Kara's eyes met his and she felt her stomach drop. A small part of her had secretly hoped that he'd lose interest in her by the time the live auctions started or that someone else might outbid him in spite of his interest, but it had been foolish to hope. Tired and dejected, Kara didn't fight as she was led off the stage and towards the back room. The auction hall was getting quiet now and even though there were still a few pieces left to go, the guests were starting to head home. Looking back over her shoulder, Kara wondered what had happened to the violinist and it occurred to her that she'd likely never know. \n\nThe room at the back of the hall was pretty unremarkable and there wasn't much to see, aside from a stainless steel chair and a matching cart. However, on closer inspection, Kara recognized the set-up. Atop the cart, there was a bottle of antiseptic, a jar of cotton balls, and a series of sinister-looking syringes, all individually capped. Kara noted the labels on each and it hit her.\n\nDrugs, Kara realized. They're going to drug me. \n\nThen a door opened up in the back and an attendant came wandering into the room, carrying a crate that was padded with white cushion and secured on all sides with heavy metal locks. At first, Kara assumed it was just more medical equipment, but then she saw the breathing holes. The crate wasn't for things, it was for people! Kara swallowed hard, trying to figure out how on earth they were going to fit her inside a crate hardly big enough for a large dog. The farther they stepped into the room, the more anxious she became, until she was very near the end of her rope. If they drugged her, Kara would have no idea where she was being taken or how she had gotten there and then she would truly be lost.\n\n\"No,\" Kara whispered, but no one heard her and she grew more frantic. \"No, no...no!\"\n\nA sudden surge of energy overwhelmed her and she tried pushing back against her handlers, but they had been cramming highly experienced soldiers into crates all evening and she must have seemed like a gnat in comparison. Kara wasn't even rewarded with a flinch\u2014let alone freedom\u2014and when she started flailing, they only picked her up. Screaming bloody murder, she tried to claw out the eyes of whoever was holding her, but she soon found herself in the stainless steel chair. No one listened to Kara or her pleas as they buckled her in place and the medic assigned to her began to swab her shoulder.\n\n\"No, no, no! Let me go. Let me go!\"\n\nThere was pain, but Kara hardly felt it. She tried to wrench her shoulder free, but it was too late. Cool liquid filled her bloodstream and seconds later, Kara was struggling to keep her eyes open. She blinked, and the world evaporated into darkness."
    ],
    "authorname": "HisPet21",
    "tags": [
        "noncon",
        "nonconsent",
        "non-consent",
        "submission",
        "dominance",
        "master",
        "slave",
        "bondage",
        "manhandling",
        "slave auction"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-rebellious-slave-ch-02-1"
}