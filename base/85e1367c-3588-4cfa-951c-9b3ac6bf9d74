{
    "title": "XAd, Inc Pt. 04",
    "pages": [
        "XAd, Inc. - Ch. 5\n\nThe next morning everyone slept late, until nearly noon, in fact. Not surprising if the others had gotten no more sleep than John, James, Catlin and Meg. She was still sore everywhere - not really sore enough to be actually very uncomfortable, but enough to remind her that her body had gotten quite a workout. The group had a late brunch instead of lunch and afterwards everyone went back to the hot baths to relax. This time, while there was, of course, some playing, there was not the intense sex there had been the afternoon before.\n\nBy the time she had spent a couple of hours either soaking in the hot water or swimming to loosen up, Catlin felt considerably better, not to mention, aroused once more. When she thought about it she found it hard to believe she had been anywhere near as turned on as she had been the past few days. She was a girl who liked sex, no doubt about that. But until a few days ago she had confined herself to one man at a time (except for that incident at the frat party) and, while she had had some hot fantasies in her imagination, her real life sex was not nearly so wild. But in the last few days all that had changed. She had had more sex in more variety than she would have thought possible in six months. She had experienced a number of new things: real spankings and whippings and a whole lot of bondage; anal sex; sex with women; sex with more than one man, not only serially, but even with two or three at the same time. And somewhat to her surprise she had loved every second of it! She still had no desire to try such wild things when she went back: she was all too aware of the vast risk this behavior would entail there. But here, with the assurance that everyone was safe, both medically and psychologically, she could give herself over to pure pleasure.\n\nWhen at last everyone climbed out of the water and began to dress - that is, everyone except the four captives, who remained naked - Catlin felt relaxed and fully ready for more sex play. She and the other three were taken outside into the warm sunshine and tied spread eagled on the soft grass. Catlin felt herself flood with moisture as her arms and legs were stretched wide and she was very ready to be taken by one or more of the men (or even one of the women!), but she was soon disappointed. That is, she would have been disappointed if she could have stopped to think about it. For the next two hours the four girls were tickled and sexually teased with nearly constant stimulation, but never received enough to push them over into climax. Their anguished cries indicated their frustration each time one of their tormenters stopped his attentions and withdrew. Finally, with all four of the women nearly hysterical with arousal and frustration, everyone stopped and backed off, leaving them squirming against their bonds. Their bindings were loosened slightly and then the lords and ladies disappeared, leaving them tied and frustrated, lying on the soft grass in the warm sun.\n\nTo her own amazement Catlin suddenly realized she had been asleep. She looked around and saw the lords and ladies returning and guessed that their talk and laughter were what had aroused her. At least aroused her from sleep. She was aroused in other ways even more than she had been earlier and twisted and pulled desperately, wishing she was being soundly fucked.\n\nThe women were untied and taken inside for a bathroom stop and then into dinner. After a light meal, their hands were bound, and they went again to the music room where the curtains had been pulled back from a large window. At least Catlin thought it was a window at first glance, but when she looked closer she saw that beyond the \"window\" was really a rear projection screen with a film of the outside grounds showing. Everyone was seated, with the four captives still bound. The room lighting was very dim and now even that was removed except for one small candle. As they watched the window, two bound and nude women were led into view by four young men. The women were tied with their hands raised above their heads to a pair of what looked like whipping posts and soon the men began to administer a lashing with a variety of whips. For nearly an hour the assembled group watched as the two women were whipped and otherwise abused as well as used sexually by all four men in a number of ways. Catlin realized that they were watching a custom made porn tape, but admitted that it was still a really hot experience. By the end she was squirming in her bonds - not to mention under the teasing hands of Thomas and Edward - and wanting to be laid even more than she had earlier.\n\n\nAfter the six figures moved out of the scene, the lords rose and pulled Catlin and Tyra along after them. Linda and Anne took the other two girls somewhere, but Catlin and Tyra were led downstairs to the dungeon once again. They were allowed a bathroom stop along the way with the warning that it might be a long time before they got another chance. When they arrived in the dungeon the men quickly tied them spread eagled on their backs atop a thick pad - or thin mattress - and began to play with their exposed bodies.\n\nSoon all the men were naked also and Catlin was nearly ready to scream with frustration. Then suddenly Robert was above her, lowering himself, his long, hard cock sliding inside her and meeting almost no resistance. She came within seconds, but Robert didn't seem to notice and spent the next fifteen minutes driving her to one orgasm after another before exploding inside her himself. But it wasn't over. William quickly took his place. Then John.\n\nAt some point the thought crossed Catlin's mind that this day had been unusual in that she hadn't had any real sex for nearly eighteen hours. Not in itself surprising, but in this magical place where she seemed to spend eighty per cent of her time engaged in sex, it seemed very strange indeed. But she also realized that the relatively long deprivation had served to bring her to an unbelievable height of sexual arousal. She really did feel insatiable!\n\nThe parade of men continued, some of them using tongues or fingers or vibrators or other sex toys to stimulate her while others would fuck her with long, deep strokes, frequently withdrawing before they expended themselves. At intervals she and Tyra were unfastened and rearranged in different positions. Bent over the end of a padded table she was not surprised - or in the slightest disappointed - when the first lubricated cock pressed against her anus and pushed deeply inside. Once she was tied over a curved surface, like a large barrel or a small arched bridge, bent backwards into a tight bow while a steady procession of cocks and pussies - the two ladies as well as Mary and Meg had joined them at some time - lowered over her mouth and she used her tongue on whatever was within reach. As this was happening a variety of tongues - both male and female - stimulated her open slit.\n\nShe was retied in the spread eagle and was eaten by both men and women and engaged in sixty nines with both. With her hands tied behind her she was placed on the cock of a reclining James while another man - she wasn't even sure who - penetrated her rear. As they began a rhythm , rocking back and forth, plunging in and out, another cock was presented to her mouth and she eagerly began to suck at it.\n\nAfter far more orgasms of her own than she could count - as well as many, many more climaxes of her partners - Catlin began to reach the point where, while she still felt interested in sex, her mind was becoming slightly dulled and her body nearly exhausted. After a series of several hard and hot fucks, she and Tyra were released and helped - they couldn't have managed by themselves - to shower and clean up. They were then taken, both half asleep from shear exhaustion, to separate rooms where they were lightly bound to the bed and went instantly asleep.\n\nCatlin awoke late the next morning with a smile on her face, soreness in a lot of places, and feeling - astonishment! - horny again. She lay twisting against her bonds for a few minutes, unable to satisfy herself, until Robert appeared. \"Good morning. I see you appear to want something.\"\n\nCatlin stopped her twisting. \"Yes, my lord, I would greatly appreciate being soundly fucked.\"\n\nRobert threw back his head and laughed loudly. \"You are incredible, Catlin. Last night you spent a total of seven hours being, as you say, soundly fucked. And you still want more this morning.\"\n\n\"Seven hours! Was it really that long? It's all a little mixed up to me. I remember a lot of sex and wanting more and more and then it gets a little fuzzy.\"\n\n\"Yes, it was really seven hours. And you spent nearly every minute of it undergoing some kind of stimulation, if not actual sex. And quite a lot of actual sex, I might add.\" He reached out and rolled Catlin's already hard nipple between his thumb and finger.\n\nCatlin sucked in her breath and tried to arch her chest out to bring her breast towards his hand. \"I would never have thought this kind of thing would have been possible, much less that I'd love it the way I do. But the last few days have been incredible. I wish it could go on for months.\"\n\nRobert switched to the other nipple. \"Actually you probably wouldn't want it to. These people - I mean the XAd,Inc people - have found that this level of sexual excitement can be kept up for more than a couple of days by only the mostly highly sexed individuals. You definitely seem to be one of those.\" He pinched her nipple, bringing another sharp breath. \"But no matter how much people like sex, after much more than a few days of this the senses will dull and - don't laugh - but this stuff would begin to seem a little boring. That's why their adventures are limited to a maximum of a week. You've got a couple of days to go and I'll bet you spend those still interested, but sooner or later any of us would begin to wear out.\"\n\nRobert had moved his fingers down to her clit and was beginning to rub that hard nub and let his digit penetrate her slightly every few strokes. Between gasping breaths, Catlin managed to say, \"Maybe. At the moment I'm not sure I think I could ever get bored. Oh. Oh, yes, that feels good. But, whatever I'll feel like in a few more days, now I want to be really, really fucked. Please.\"\n\nRobert laughed again. He stood and began to remove his clothing. \"Ah, wench, such talk to your lord. You'll get your wish, but I suspect we'll need to punish you later for your words.\" Then both of them forgot about talking as he mounted her and drove his stiff member into her hot core with hard, almost brutal, strokes which Catlin echoed with her own manic thrusts, until both of them climaxed in noisy satisfaction.\n\nLater he released her and both of them cleaned up in a long and playful shower.\n\nCatlin and Robert went to the dining area where they found Tyra and Edward just sitting down to eat. No one else was around and when Catlin asked, Robert explained, \"You two had quite a workout last night so we let you sleep late. Everyone else is either outside or in the baths.\"\n\nBy now Catlin didn't even seem to notice her own or Tyra's nudity even when, like now, others were dressed. Being naked had become a natural state to her and, if anything, added to her nearly constant arousal.\n\nAfter they had eaten, the two men led the girls outside where Meg and Mary were spread eagled on the lawn and being teased by the others. Catlin watched as Anne and William knelt on either side of Meg. They donned fur covered mittens and began to lightly stroke her bare body. The gentle slide of the fur over her naked skin caused an instant reaction and by the time they began just skimming over her erect nipples, Meg was straining against her bonds and crying out in frustration. They kept it up for a good twenty minutes and then yielded their places to John and Thomas who began to apply a couple of vibrators to her more sensitive spots. Anne and William moved over to Mary and began to give her the fur treatment.\n\nWhen they had left the dining room the men had placed padded wrist and ankle cuffs on the two girls and clipped their wrists together behind their backs. As Robert and Edward watched the two other bound women being tormented they both causally stroked and teased Catlin and Tyra. The girls both responded and were quickly in a high state of arousal themselves. After about a half hour of voyeurism, Robert suddenly said, \"I believe you are beginning to enjoy this too much. I seem to remember something about your needing punishment for some bold words this morning, don't you?\"\n\nCatlin, already breathing fast and heavy, sucked in her breath. \"As you will, my lord.\"\n\nRobert grinned and took her wrist, leading her away from the group. As she started to go, Catlin saw James and Linda coming to join Edward in teasing Tyra, but then her attention was drawn to where Robert was leading her.\n\nIn front of her were two posts, about eight feet high, set in the ground about ten feet apart. There was a beam fastened between the tops of these, and from the top of one post hung a light chain fastened to the end of what looked like a thick plank with a rounded edge. The board, which was polished smooth, was six feet in length and about six inches wide by two inches thick. One edge - the edge to which the chain was fastened at one end - was rounded into a near semicircle and covered with thin leather. Another chain was fastened to the rounded edge at the other end.\n\n\"We call this the 'horse',\" Robert explained, \"and I'm going to let you take a little ride.\"\n\nCatlin had seen a reference to a similar horse on the net and had an idea of what was coming when Robert had her stand between the two posts with her legs spread on either side of the board. He uncuffed her wrists and then refastened them in front of her. A single strand of chain hung from the center of the crossbeam and dangled above Catlin. Robert raised her hands and attached them to the chain so that she was not stretched, but couldn't move her hands more than a few inches. Next he placed two wood blocks, about six inches thick, on either side of the board and had Catlin stand on these. He took the free end of the chain which was attached to the end of the leather covered plank and, using a small stepladder, pulled it through a ring at the top of the second post. As he pulled on the chain end, the plank rose between Catlin's legs. He continued to raise it until the rounded, leather-covered edge was pressed firmly, but not uncomfortably, against her pussy. He spread her pussy lips so the rounded edge slipped into her slit and moved her back along it until she had to lean slightly forward because of her bound wrists. Next he took a pair of nipple clamps with small lead weights attached. Catlin's nipples were already rock hard, but he sucked them and rolled them firmly between his fingers before snapping on the tight clips, bringing a gasp from the bound girl.\n\n\"One more thing,\" he said, and picked up a small butt plug. He smeared it with lube and used his finger to press some of the slick substance around and into Catlin's anus before pushing the plug in to seat its flared base against her ass cheeks. \"Now you can ride,\" he said, and removed the two wood blocks from beneath her feet.\n\nHer weight sank onto the bar, and Catlin felt the pain as her sex pressed against the leather covered wood. Instinctively she stretched up on her toes to alleviate the feeling and was able to obtain some relief. Her pussy still pressed slightly against the leather, but without the pressure of her weight it didn't hurt too badly. But as Robert stood watching, she realized that her legs would soon tire and her sex would once more take the punishment when she could no longer hold herself up on her toes.\n\nRobert grinned as her expression showed this revelation. \"Makes an interesting dilemma, doesn't it? But don't worry. I'm sure I can find something to take your mind off it.\" He held out his hands which had been hidden behind his back. One hand held a long feather and the other a cat with eighteen inch lashes. Catlin's eyes flew open wide just before the feather began to trace small circles across her taut belly. When she could no longer contain herself she gave in to laughter, which caused her to drop to the bar. The series of emotions which crossed her face as she went from restraint against the tickling, to laughter, to the sudden pain of her weight on the bar was definitely something to behold.\n\nRobert let her recover, but when she had again been standing on her toes for a minute or two, he suddenly swung the whip against her tight rear. This, too, caused her to drop down on the horse and just as quickly try to rise on her toes again.\n\nFor twenty minutes Robert teased her with the expectation of both the feather and the whip, as well as actually applying them at times. By then, even when he did nothing, Catlin was barely able to hold herself up for more than ten or fifteen seconds until her tired muscles gave way and her sex once again rode hard against the leather horse. Just as she was beginning to think about using her safe word, Robert loosened the chain and let the plank drop away from her crotch.\n\nAs Catlin stood catching her breath Robert asked, \"Enjoy the ride, wench?\"\n\nCatlin opened her mouth to answer and a sudden look of astonishment crossed her face. \"Actually, yes. I don't think I could have taken much more. In fact I was about to ask you to stop because it was hurting too much. It's not that I like being hurt, but riding it did turn me on. I can't believe I'm saying this. I don't really like being hurt, or 'tortured', but I love what it does to me. I can't believe I'm even more horny now.\"\n\nRobert laughed. \"Catlin, you are a natural at this. I can tell you're not a real masochist, but you do love this kind of play, don't you? Don't worry, most of us feel much the same way. I like both sides, myself, but I guess I enjoy tormenting a pretty girl more than having her torment me. But I'd never want to really hurt someone and never would I do anything to someone who didn't want it herself. However, I'm not quite finished with you yet.\"\n\nHe released her hands and moved her over a few yards to where there was a horizontal pole, sort of like an old fashioned hitching post, set thirty inches or so above the ground. He tossed a folded blanket over this and stood Catlin so she was facing it. He spread her legs a couple of feet and anchored them to stakes set in the ground. Then he bent her well over the rail, her stomach on the blanket, and tied her hands to other stakes set in front of her.\n\nAfter running his fingers all over her exposed body he stepped backed and raised the cat. \"I think maybe about thirty, wench,\" he said, and brought the leather tails down hard across her protruding ass.\n\nHe whipped her with strokes of varying strength, concentrating on her ass, but sometimes letting the tails fall on her flanks or the sides of her still clipped breasts. When he stopped, her bottom was covered with a network of red lines and he could see her squirming against her bonds. He slowly pulled the plug from her ass and immediately replaced it with his hard cock, slick with lubricant. Catlin hadn't realized he had shed his own clothing and was surprised when she felt his bare body press against her own hot and abused flesh. He fucked her rear for a long time, sometimes pushing in and out slowly and at others slamming all the way in to the hilt in one strong motion. Before he finally shot his load deeply inside her bowels, Catlin had come twice herself.\n\nCompared to the her recent activities and those of the previous evening, the rest of the day was very tame. They had a light lunch and another nap which Catlin spent tied to Lord John's bed. Though he did take her twice, there was no whipping or other abuse involved. After another dinner which the four spent nude while the others were dressed in period costume, they retired to the music room where they watched the couple from the second night put on another show. Catlin was seated between Robert and James and was kept in a constant state of arousal, not only by the hot show, but also by their hands stroking her breasts and the insides of her thighs.",
        "When the show ended Catlin had expected to be taken to the dungeon once again, but instead she was led to a different room which turned out to contain a variety of leather covered furniture. Well, maybe not exactly typical furniture. There were a couple of vaulting horses, three low leather-covered longues, a leather-covered table, a couple of footstools, and several other pieces. Catlin, Meg, Tyra, and Mary were all bound to various pieces. Catlin found herself tied on her back on the leather table, arms and legs spread and tied to the corners.\n\nFor the next two hours the four were teased continuously. This time there was no whipping or other pain, but constant stimulation was nearly as great a strain. Catlin had fur covered gloves used to stroke her body, the tips of the fur just touching her. It felt like a million butterfly wings were caressing her in all her most sensitive places and had her squirming and straining against her bonds. The edge of a large feather was drawn up between her spread legs, tickling the insides of her thighs, her sensitive pussy lips, and her swollen clit itself. She was also stimulated with light strokes of leather thongs, silken cords, and the slightest touches of tongues and finger tips. Several times ice cubes were used to touch her nipples, clit, and anus.\n\nDuring all of this Catlin was driven to and held right at the edge of orgasm, but not allowed to come. She could hear constant cries of frustration and several times was surprised to discover some of them were hers. At last when she was nearly delirious with arousal, Linda, now also naked, mounted the table and kneeled above her mouth as James thrust his hardened cock into her dripping tunnel. Catlin immediately began to come, straining against her restraints and screaming in release. She came. And came again. And a third time. When James began to spurt inside her, she was not even aware, so lost in her own sensations that she was nearly unconscious.\n\nWhen she did come back down to earth, she saw that James and Anne were standing beside her engaged in some discussion while Linda slowly stroked her sensitive breasts. Linda saw she was once more aware of her surroundings and said, \"Welcome back. I've never seen a woman come as hard as you did, Catlin. I think even among this select group, you stand out as more highly sexed.\"\n\nCatlin answered, \"I really don't have much to compare with, but I can say I never dreamed I could be as turned on as I have been here. I guess this kind of sex really does get to me.\"\n\n\"I'll say,\" Linda replied dryly.\n\nJames and Anne finished whatever they had been discussing and he turned back towards her. He bent forward and sucked at each of her nipples, causing a sharp intake of breath and making them instantly hard once more and then he and Linda began to release her from her bondage. When she was freed and sitting up on the table, Linda gave her a hard kiss on the mouth and then went over to talk to Anne and John.\n\nJames sat on the table beside her and said, \"Catlin, you seem to take to this kind of sex better than almost anyone I've ever seen. Tell me, has there been anything we've done that you didn't like?\"\n\n\"Not a thing,\" Catlin replied. \"Before I came here I knew I liked some bondage and spanking, but I had no idea how much. I still don't think I'm a masochist, but I'll admit that being whipped and so on makes me hotter than I ever thought possible. But I wouldn't want it to go any further - I don't want to be branded or anything like that.\"\n\n\"No, I wouldn't think so. Catlin, I'm going to make you an offer. Don't feel under any obligation to accept unless you really feel you want to. Anne was just talking to me about something we both saw when we came here on an earlier adventure, and then it was done as one of the shows that were put on for us. She suggested she might like to try it as a participant if we could find another girl.\"\n\n\"Just what was this?\" Catlin asked cautiously.\n\n\"I guess you'd call it a contest for want of a better word. The way it works is like this: Two women are tortured and used non-stop until one calls a halt. Of course, I mean torture like we've been doing - no real damage, but definitely some pain. If you and Anne agreed to such a contest you'd be teased, whipped, and otherwise abused by all of the rest of us as well as taken sexually again and again. You've said you wished this could go on and on. Well, I can promise you it might seem like it. And I can guarantee you will be exhausted and very sore by the end of it. But I would guess you would also be pretty sated.\"\n\nCatlin was looking at James, but it was obvious she was seeing other things in her head. She shook it slightly and asked, \"I could stop any time I wanted?\" He nodded. \"And no real damage - no scars or broken skin or anything?\"\n\n\"No, but things would be more severe than what you've done so far. No real damage, but you will hurt.\"\n\nDo you mean right now?\" Catlin asked.\n\nJames laughed. \"No, not right now. Even if you could handle it, I doubt if the rest of us could. If you want to try, we'll do it tomorrow, starting after lunch and continuing until one of you calls a halt.\"\n\nCatlin thought about it for a few seconds. \"Anne wants to do this?\"\n\n\"She was just saying how hot it was when she watched and how she'd like to try it herself if we could find someone else.\"\n\nCatlin seemed to come to some decision. \"Could I talk to Anne about it for a minute?\"\n\n\"Of course. I'll get her.\" In a few seconds he was back with Anne. \"Did you want to talk to her in private?\"\n\n\"No,\" Catlin answered. \"I don't care if you stay. Anne, James says you want to try this 'contest' with me.\"\n\n\"I want to try. If you're interested, I'd be happy to compete against you, Catlin. I think you are as into this kind of sex as I am. As to the contest. I guess part of it is against myself, to see how much I can take. You've probably observed yourself that you can always do better, keep going longer, take more - sex or anything else - if there's someone else putting up with the same thing. It's a way to push your own limits.\"\n\n\"I can understand that,\" Catlin replied. \"It's just that you're a client, paying for this stuff.\"\n\n\"For this, we'd both be just victims, neither client nor employee. I get part of my fun from the challenge.\"\n\nCatlin suddenly broke out in a wide smile. \"I'm willing. After all, I came here for an adventure. What better adventure than to be tortured and fucked by eight or ten people - and get paid for it.\"\n\nAnne laughed. \"When you put it like that, I guess I can't argue. But in my case, the money isn't the important thing. It's the adventure.\"\n\nJames had been standing quietly by. \"All right, since both of you agree, I'll announce the contest and we'll start tomorrow. To be absolutely fair, when we leave here you will both be treated the same. You'll spend the night tied to your beds and get uninterrupted sleep tonight. You can sleep late and have a brunch while the rest of us play or something and then at one tomorrow we'll take you to the dungeon and keep going until one of you calls a safe word. How does that sound?\"\n\n\"All right with me,\" Catlin replied.\n\n\"Same here. But I'd like to make one small change. We need a prize for the winner. If I win I want to whip each of you other seven clients. Since Catlin isn't a client, I propose we make her prize something else - say financial. If Catlin wins, she gets an extra thousand dollars.\"\n\nCatlin's eyes shot open at this. \"That's not necessary,\" she said. I started this for the money, but now I'm doing it for the fun.\"\n\n\"I know it's not necessary,\" James replied, \"but I think it's an excellent idea and perfectly fair. Don't worry, Catlin, if you win, you will have earned it.\"\n\nJames called for attention and announced the coming contest to the response of loud cheers, especially from the few who had seen a previous one. Meg and Tyra looked at Catlin as though they weren't sure of her sanity and Meg didn't help her resolve any by saying, \"I was here when they did this before. If it's going to be like that, I don't think I would want to try it. Not even if they doubled what they're paying me.\"\n\nBut Catlin kept finding her mind going back to what might be taking place the next day and, although she was definitely apprehensive about how much she could stand, she found herself looking forward to it. She also found that what Anne had said was true: The real incentive was not the money, but to see how much she could take.\n\nShe and Anne were both taken to one of the bedrooms and, both naked, loosely tied to the beds. The lights were turned out and the men left. Catlin found she wasn't sleepy and when she heard Anne moving around slightly she quietly said, \"Anne, are you awake, too.\"\n\n\"Yes,\" she replied. \"I expect it will take a little while before I calm down enough to sleep. But they'll give up plenty of time so we should be rested tomorrow.\"\n\n\"Tell me, how did you get into this stuff?\"\n\nAnne gave a little laugh. \"Just lucky. No, seriously, I have enjoyed bondage since I was a kid and we played cowboys and Indians and such. When I started to be interested in sex, I kept imagining scenes where I was tied or spanked or something and found the idea really turned me on when I masturbated. Sometimes I tried tying myself while I played with myself and found that made it really hot. When I started having sex for real, it was sometime until I tried anything like that and then it was just an over the knee spanking, but it did make me hot. I managed to get several guys in college to spank me and even a couple to tie me up. I loved it and a couple of them seemed to also, but some guys thought I was a little odd. Although one of them did even let me tie and spank him and I found I liked that side also.\"\n\n\"I did some reading and found out there were a lot of people out there who were into this kind of thing. Anyway, some time after I graduated I met a man who was really into it and he took me as his slave for awhile. I found that though I loved the bondage and punishments, I didn't really care for the domination, so we finally broke up. While I was with him I met a number of others and also saw that a lot of the slaves went a lot further than anything I wanted to do.\" Catlin could hear her shudder, even in the dark. \"Over the next couple of years I played games with several different men who enjoyed them but weren't really into the lifestyle full time. That's also when I was building up my own business, so I didn't have a lot of time to devote to games, no matter how much fun. Then a couple of years ago I found out about XAd,Inc. The rest, as they say, is history.\" She gave a short laugh. \"But I hope it isn't published history. I doubt if a lot of my clients would appreciate it.\"\n\nCatlin told her about her experience with the frat party and then the on-line quiz. \"I seem to have been very lucky, too,\" she said. \"I mean to have found Xad,Inc. And also to have gotten away with that stunt at the party without getting into any real trouble.\"\n\n\"Yes, you do have to be careful. Accidents can happen easily when you play these games. You need to be sure that whoever you're with is very careful about safety rules. Things like safe words and never leaving anyone alone when they're helpless.\"\n\n\"Aren't we alone now,\" Catlin suddenly asked. She had just realized that both she and Anne would be unable to free themselves or each other in case of some emergency.\n\n\"Not exactly,\" Anne replied. Whenever someone is bound by themselves there is always a monitor - audio or video or both - turned on. Not that anyone is eavesdropping, but if you cried out for help, someone would be here in seconds. XAd,Inc. is very careful about stuff like that. If you're playing with someone else you need to be sure you can trust them to follow safety rules. Also, there are a lot of guys - well, men and women both - out there who get off on really hurting someone. You do need to be sure of what you're getting into.\"\n\nThey talked for awhile longer and finally, yawning, both drifted off into sleep.\n\nAs promised, the two women were allowed to sleep late the next morning, until nearly ten when James and Robert came to release them. After showers they were led downstairs where they ate a light, but filling, meal. Afterwards the two men took them into one of the large bathrooms upstairs where each was given a series of several enemas to \"help them prepare\" as James informed them. When both were thoroughly emptied and had taken another shower to clean up outside, they were allowed to rest until one, at which time the two men once again appeared and led the two women down to the dungeon, where everyone else was already waiting.\n\nCatlin and Anne were fitted with heavy, but soft, leather cuffs on both wrists and ankles. Otherwise both were completely nude, as were Meg, Mary, and Tyra, as well as several of the others. They were then stretched spread eagled from the ceiling, arms and legs three feet apart. This time, Catlin realized, she was pulled more taut than any time before. The strain on her bonds did not allow her feet to rest flat against the floor, but forced her off of her heels.\n\nThe group assembled facing them and James explained the contest. \"Lords, Ladies, and you other wenches. These two will each be subjected to various stimulations, tortures, and numerous sexual activities. As near as possible, each will receive the same treatment at the same time. The yellow safeword will be allowed in case of something like pinched skin in a tie or a twisted joint, but not to reduce or go easier on the torment. To stop, the red safeword must be used, and the first woman to use it will lose. Punishments will be more severe than usual, but not enough to do damage. No deep bruising or broken skin is allowed. Frequent and constant sexual stimulation is encouraged, but must be applied to both. John and I will act as final judges and may call some halts to allow the victims to catch their breath or have a drink, but otherwise the activities will continue until one calls the red safeword. If at any time one of you has a suggestion as to what might be done to them, feel free to tell it to John or myself.\" Then he turned to Catlin and Anne. \"And you two remember that this is just a game. Don't push yourselves too far, OK? If there are no questions or comments, we will start with a mild whipping. So let the contest begin.\"\n\nCatlin watched as James and John each shook out the thirty inch tails of a cat. The two men moved behind them and a second later Catlin felt a searing band of pain across her ass as one of the whips landed a severe blow. A sharp cry escaped her lips. Mild whipping indeed! There had been no warmup or teasing caresses, but only the sudden sharp bite of the lash. Several more followed, each as hard. Then the men delivered another dozen or so strokes, spreading these around their bodies, lashing legs, backs, stomachs, and breasts. When they stopped, Catlin had tears welling from her eyes and was beginning to wonder just what she had gotten herself into.\n\nThe whipping stopped, but seconds later a pair of strong nipple clamps bit into her flesh. She hardly had time to even begin to adjust to this pain when a tongue began to lick between her legs. Despite the pain Catlin was aroused and when the tongue first touched her clit she attempted to twist and strain against the tight bonds holding her, but they allowed almost no movement. She could hear Anne reacting to a tongue on her own crotch, but quickly forgot about her as Catlin herself was driven into her first orgasm of the afternoon.\n\nBut it certainly wasn't to be her last. She hung there while three men ate her to more climaxes than she could count. Occasionally they would stop for a few seconds while a strap or paddle was applied as a searing counterpoint to her pleasure. Catlin was sweating and felt strained from the taut position, but hadn't even thought of a safeword. She suddenly realized that even this level of punishment was making her more aroused..\n\nThe two continued to hang there and be tormented for nearly an hour. Then the whipping and the oral stimulations stopped and their bonds were released. But only long enough to bind them into a new position. Catlin and Anne were placed at opposite ends of a leather covered table, each facing away from the table, their backs towards each other. Their feet were spread two feet apart and tied to the table frame. They were than each bent backwards onto the table and their arms stretched above their heads and tied. This placed their heads side by side and Anne turned towards Catlin and said, \"Sorry you agreed to play?\"\n\n\"No way,\" Catlin answered. \"It hurts, but I love it.\"\n\n\"So do I,\" admitted Anne. \"But sooner or later we're going to reach a limit. No one can take this kind of treatment indefinitely.\"\n\nThen they were both distracted as leather tails landed across their breasts, stinging hard nipples. This was followed by hot candle wax, dripped on tits, belly buttons, and bare pubes. After some of these areas had been pretty well covered, the wax was scraped and pulled away and the leather flails delivered another half dozen burning reminders of their predicament.\n\nCatlin was paying attention to the cat, trying to guess where and when the next blow would land when she suddenly felt a hard cock thrust deeply into her pussy. She looked down to see Robert between her legs, but suddenly another hard cock dropped across her lips from the side and her eyes snapped around to see Edward beside her, even as she opened her mouth and began to lick and suck at his hard member.\n\nThe two men fucked her until both sent streams of their juices into and onto her. Then they were replaced by others. Before Catlin even had a chance to swallow everything and finish licking her lips, John's cock was teasing her mouth. Robert's juices were just beginning to drip from her well used pussy when Catlin felt another hard shaft slide into her. She looked around John's hard shaft and saw that the intruder was attached to a harness around Meg's waist. Meg grinned at her and began to enthusiastically pound in and out of her hot slit.\n\nCatlin and Anne were repeatedly ravished by cocks, strap-ons, and vibrators as well as being frequently whipped all along their fronts for what seemed like hours. Then they had their hands released and were allowed a few minutes of rest and a drink of water. But before much time had passed, the men were moving them into new positions.\n\nThey were taken to two vaulting horse devices. These were about three feet long and looked at though they were made from four by six beams, padded and covered with leather. The two girls were placed at the ends, facing down the length of the beam and the devices were adjusted so that the top of the beam came just to the top of each girl's pubic bone. Their legs were spread and fastened to the supports of the vaults and a wide leather belt used to fasten their waists snugly to the top of the beam.\n\nThe two vaults were standing in line with their ends spaced about three feet apart, and Anne and Catlin had been placed at opposite ends so they were facing each other. Catlin realized she would be in a perfect position for punishment on her back and ass as well as leaving her pussy and anus open and fully exposed.. She expected to have her hands tied to the support at the other end of the beam, leaving her stretched along its length. Instead, one of the men brought her wrist cuffs together and clipped a chain to them. He then pulled the chain high above her back, making her arch backwards, her waist held down and her arms pulling her up. Catlin's arms were pulled until she was stretched very taut and bent about as far back as she could stand. Then the chain was anchored to the ceiling.\n\nLooking forward, Catlin saw Anne stretched into the same position and had to admit that not only was the strain on her body turning her on, but, if she looked anything like Anne did, she also looked sexy as hell in this position. She could feel the muscles in the backs of her legs and those in her stomach and arms already beginning to burn from the strain and the stress of being bent backwards. Two of the men began to roughly fondle her tits and soon Catlin could feel her globes swelling and her nipples straining to stick out, almost aching in their hardness. Then the men stepped back and Catlin saw a grinning Mary move up beside her as Tyra did to Anne. Mary was grinning because she held a cat with narrow fifteen inch lashes and was focusing her gaze on Catlin's breasts. Catlin thought that Mary might not like being whipped, but she certainly seemed to be looking forward to doing some of the whipping. Then the first lash struck directly against Catlin's sensitive tits, landing directly on a hard nipple and eliciting a scream which mingled with a similar cry from Anne.",
        "The two women were whipped on their taut fronts for ten minutes before two of the men moved forward to attached weighted clamps to their aching nipples. When the first clamp closed on Catlin's right nub, she cried out as she realized that these were not smooth but serrated, biting in even more when small lead weights were attached. Then she felt the first taste of a heavy cat across her ass. Catlin's bottom was already sore and she felt each strand of each stroke. Her rear went from pink to a hot red and each stroke caused her to jerk against her bonds, straining her muscles and making the weights on her nipple clamps bounce around. Just being in that strained position was agony and the stinging cat only added to it. Once the whipping stopped while Linda and Meg pushed long dildos, surfaced with protruding rubber spikes, deeply into their vaginas and started them vibrating. Then the lashing began again.\n\nTheir tormentors didn't limit themselves to the cat. Straps, riding crops, and a thin wood dowel were also used and soon Catlin's flesh was covered with red stripes and welts. She knew she would ache the next day and now each blow really hurt, but Catlin was surprised to find that she was still aroused. When, after thirty minutes of being tightly stretched, the lashing halted and she felt a lubed finger penetrate her rear passage, Catlin nearly came at the first touch. A few seconds later when the first of a series of cocks and strap-ons entered her rectum, she did come. By the time the last of her tormentors had reamed her rear, Catlin felt swollen, stretched, and sore, but she had come a dozen times.\n\nThe two women were subjected to a constant stream of stimulation, both painful and sexually exciting. Catlin lost all track of time as well as the number of orgasms she had had. They were always tightly bound, often switched from one position to another, and penetrated again and again in their mouths, pussies, and anuses. Catlin still felt each whiplash or other torment, but sometime along the way they had stopped having quite the same effect. She still was sexually aroused, but her body couldn't really seem to react to it any more. Mentally numb seemed to somewhat describe her condition. Looking up at Anne, Catlin got the idea, as much as her fuzzy mind could get any idea, that Anne was in similar shape.\n\nThey were hung upside down, ankles spread, and whipped between their legs, alternating with oral stimulation. They sucked the men while hanging in their inverted position. They were arched backwards and forwards. They were stretched. They were whipped and strapped and clamped. They were given enemas with Bardex nozzles and made to hold them while being whipped and being fucked. They were tickled with fingers, fur, and feathers. And they were fucked repeatedly, in every hole, with cocks, strap-ons, and dildos. When Catlin felt that she was nearing her limit, they were both brought over to a device at one side of the dungeon.\n\nThe previous morning, Catlin had ridden the \"horse\" which consisted of a board with a rounded edge. She could avoid putting her weight fully against the board by standing on her toes until she tired, but now she and Anne were introduced to a variation of this device. This had an eight foot beam which was supported between two vertical posts. This beam was made of two boards joined at right angles along their length and turned forty-five degrees from the vertical. Thus it presented a wedge shape, narrow end up, at a height just below her crotch. The narrow edge of the wedge was at least slightly rounded and sanded smooth.\n\nLarge butt plugs were worked into each girl's rear and then Catlin and Anne were both placed straddling the beam, facing each other about two feet apart. The beam was low enough so that even standing flat footed it didn't quite touch Catlin's pussy. Their wrist cuffs were attached to ceiling chains which hung just in front of where they were standing. Their wrists were at a height that didn't stretch them, but allowed only a couple of inches of movement. While the cuffs were being attached, Catlin looked at Anne and said, \"I've almost had it, I think. I expect you're going to win, Anne.\"\n\nAnne dully shook her head back and forth. \"I doubt it. I'm about done in myself. I don't know what they're going to do to us here, but I'm not sure I can handle much of it, whatever it is.\"\n\nThen they found out what this ordeal was to be. A three foot bar was attached to each girl's left ankle cuff. One of the men made sure that each girl's pussy lips were spread so the top of the wedge bisected her slit. Then John moved behind Catlin and James behind Anne. They nodded to each other and together raised each woman's left foot, bending her leg at the knee. The three foot bar was placed across the top of the beam and then the girl's right foot was raised and attached to it. This placed each girl's weight directly on the wedge top, lessened only by what weight the girl could support with her chained arms.\n\nBoth women cried out as their weight came down on their private parts, but that wasn't to be the end of it. Five men and women surrounded each of the two victims, each with some kind of whip, and all began to lash the helpless girls at once. Hot strokes stung Catlin's stomach, her tits, her ass. Lines of fire seemed to touch her everywhere. Catlin and Anne cried out and screamed for several minutes and then Catlin was calling her safeword. What she couldn't tell was that Anne had also called hers within seconds.\n\nThe torment immediately stopped and both women were released and helped to gently collapse onto the floor. They lay there a minute or two and then two of the men lifted them and carried them upstairs. They were held while the four other women helped wash them and then they were carried into one of the bedrooms and placed on the satin sheets. Catlin was only dimly aware of all of this and really didn't register anything that was happening until she awoke late the next morning.\n\nShe awoke with a wide smile which lasted until she tried to move. A groan escaped her lips as each muscle and each square centimeter of skin screamed a protest. By the time she was able to sit up, Anne was awake, making the same kind of groans. Linda and Meg appeared and helped the two women to the bathroom where they soaked in a hot shower for several minutes. By the time she had dried, Catlin had begun to feel somewhat better. But she still ached everywhere. Her pussy and anus felt stretched and tender and definitely not interested in being used. Her tits felt bruised and still swollen. She still had a number of red lines and welts, but she noted that there didn't appear to be any cuts. She looked over at Anne and saw she looked the same.\n\n\"I guess you must have won,\" she finally said. \"I don't seem to remember much of anything after they started us on the ride.\"\n\n\"I don't either,\" Anne replied. \"I expect you're the one who won.\"\n\nThey turned to Meg and Linda who glanced at each other. \"Come on down and eat something and then we'll tell you all about it,\" Linda said, leaving them just as lost about the outcome as they were before.\n\nThey left the bathroom and Linda asked, \"Anne, would you like to get dressed?\"\n\nAnne stopped a second and thought. \"No, I don't think so. The idea of anything on my body doesn't sound too good right now. Besides, since Catlin stays naked, I should, too.\"\n\nLinda nodded and led the two of them down to the dining room. As soon as she smelled the food, Catlin found she was very hungry. She and Anne both demonstrated more of an appetite than they would have expected and when Anne commented on this, Linda replied, \"Well, by midnight you must have burned a lot of calories.\"\n\n\"Midnight!\" Anne exclaimed and Catlin paused with her fork half way to her mouth to stare at Linda.\n\nLinda laughed. \"Lost track of time, huh? It was just before midnight when they put you on the horse for that last ride. You two were going for nearly eleven hours. I don't know how either of you lasted that long.\"\n\nStill not quite believing it, Catlin and Anne finished their meal. When they were done, Linda said, \"The men are waiting in the other room, so if you feel up to it, let's join them.\" Everyone went into the room where Catlin had been taken when she first arrived to find the men, dressed in period costume, as was Linda, waiting for them.\n\nAnne and Catlin were led to the front of the group where they stood facing James. Catlin hadn't noticed before, but on her way through the room she saw that Meg and Tyra bore fresh whip marks and Mary had some red lines which looked to be the result of tight bondage. It appeared that the others had been playing while she and Anne had slept late.\n\nWhen they were both standing in front of him, James raised his voice. \"My Lords and Lady. As you know, yesterday we had a contest. I understand that the two contestants - Lady Anne and the captive Catlin - are not yet aware of the outcome. Before we enlighten them, I want to say that both performed beyond anything we could have anticipated. They have endured more and given more pleasure that could have been expected. The previous such contest I, and several of you, witnessed lasted nearly eight hours. Both of these women beat that by a good three hours.\"\n\nHe stopped for a second and Anne could contain herself no longer. \"Lord James. Pray tell, what was the outcome of the competition?\"\n\n\"I would have thought you would know, Lady Anne.\" She started to say something, but he stopped her. \"However, by the end, I believe neither of you were overly aware of what was happening. I'll tell you the results in a second, but first I want to make you aware that Lord John and myself, as the judges, were about to call a halt. We had decided the contest shouldn't be allowed to proceed much longer. If you had endured the ride, we would have ceased at that time. Now as to the results. You both called your safeword, Catlin only slightly before Lady Anne, but so close together that we have decided to call the contest a draw. You have both been declared the winner.\"\n\nBoth Catlin and Anne looked surprised at this announcement as neither had thought she had won. James continued. \"In addition to the agreed upon prizes, we also wish to award you each a medal. As you know military metals are usually pinned on the recipient's chest.\" Both Anne and Catlin open their mouths to speak, but James continued before they could get a word out. \"However, in observance of your current apparel, we will hang them around your necks instead. So, Lady Anne and Miss Catlin, we would like to present each of you with The Order of the Golden Cock.\" John reached forward and handed James two gold colored chains. Each had a two inch gold replica of a rampant cock with a set of balls hanging from it. James took the necklaces and placed one of them around the neck of each girl to the sounds of cheers from the rest of the assembled company.\n\nHe turned back to face the rest of the group. \"As her prize Lady Anne has requested that she be allowed to whip each of us. So during the other activities this afternoon and evening, we will stop each hour, on the hour, and one of us will be bound for her pleasure. Lady Anne, you will be allowed twenty strokes with the cat for each of us. I will be first and then the order will be determined by lot.\" Then he looked back to the group and added, \"Since Catlin is a captive herself, it would not be proper for her to receive the same privilege. However, in addition to a financial reward, she will be entitled to be exempt from being used today and she will be allowed to give each of us one stroke with the cat with the exception of Lord John and myself. She will be allowed to give each of us two strokes.\"\n\nAgain everyone cheered and Catlin felt herself embarrassed by their response. Here she was, naked with this group she had only known a few days. She had been exposed to them and used in any number of ways and yesterday they had witnessed - and participated in - her being tortured and used sexually in ways that should embarrass anyone and that hadn't bothered her at all. Now they were cheering her and she was turning red.\n\nAs the noise dropped down once more, Catlin realized something, completely surprising herself. She turned to James and said, \"Lord James. I thank you for the honors and will gladly accept them with one exception. While I admit to being a little too stressed to enjoy more punishment today.\" The group exploded in laughter, but when it died down, Catlin went on, \"I would not enjoy more punishment, but I would request I be allowed to receive the other activities.\"\n\nJames looked at her with a question on his face. \"Exactly what do you want to receive, Catlin?\"\n\n\"My Lord, I may be too sore to be whipped, but I am still horny. Please include me in your fucking plans.\" Once more the room was filled with laughter and cheers.\n\nWhen he could speak again, James said, \"Catlin, a man would have to be a complete eunuch to leave you out of any such plans and even if we all did, I suspect the Ladies would still find use for you.\"\n\nThe group adjourned to the grounds outside. Soon the three other captives were bound in various ways for torment and sex and the afternoon's play began. A half hour later, as three o'clock approached, James called a temporary halt. Everyone moved over to where a horizontal beam was suspended about nine feet above the ground. The beam was eight feet long and two leather cuffs hung from chains below it. James quickly stripped off his clothing and moved below the beam. \"Lord John, will you do the honors?\" he asked. John moved over and soon James was stretched tightly, his wrists separated by three feet and his ankles spread and tied to rings set into the ground.\n\nJohn produced one of the heavy cats with thirty inch tails and handed it to Anne. \"I will call the count, Lady,\" he said.\n\nAnne smiled at him and swung the whip sharply back and forth several times, the tails making a loud swishing sound. Then she moved behind James and raised her arm. Suddenly her arm snapped down and the tails landed with a loud slap across James' bare buttocks, bringing a cry which was quickly controlled.. \"One,\" John announced.\n\nAnne continued to slowly flog James, mostly on his ass, but spreading a few strokes elsewhere. Catlin watched fascinated. She could well relate to the feel of leather striking flesh and even the sound made her aroused. In the last several days Catlin had discovered just how much she liked this kind of sex play. But not only was she becoming aroused, she could see that the whipping was having a similar effect on James. At the fist stroke she had noticed a reaction in his cock and by twenty it was sticking straight out.\n\nAfter John had called, \"Twenty,\" James hung there breathing hard and fast and Anne slowly turned and handed the cat to John. Then she went around in front of James, put her arms around his neck, and gave him a long, hard kiss.\n\nWhen she broke free, John moved over to Catlin and handed the cat to her. Catlin had been so absorbed in watching the events that she had completely forgotten she was supposed to give James two strokes herself. Gingerly, she took the handle of the whip in her hand. Catlin had never whipped or spanked anyone else though she loved being on the receiving end. Now, as her hand closed around the handle of the whip, she felt a totally new feeling. It was as though the instrument itself conveyed a sense of power. Suddenly she was nearly overwhelmed by the sensation of being able to inflict the kind of stimulation she had so loved receiving. She dragged the tails slowly through her open hand and then slowly moved over to where James hung, stretched and open. Slowly she walked around him, looking at his body and twice reaching out a hand to gently stroke his skin. She stopped in front of him and looked into his eyes. Then she suddenly dropped to her knees and took his hard cock into her mouth. James threw back his head and sucked in his breath as Catlin began to suck his hard member. However, she only gave him such attention for a few seconds and then she stood and moved behind him. She raised her arm as she had seen Anne do and brought the whip down in a hard, slashing blow, laying the tails across his rear.\n\nAs the thin leather tails struck his already abused ass, James gave a small cry, sucking in his breath and jerking against his bonds. John called, \"One,\" and Catlin changed her stance slightly and delivered the second blow to his ass on the opposite diagonal.\n\nAn hour later it was John's turn to be stretched naked below the beam while Anne turned his ass red and Catlin added her two strokes. This time she was ready for it and found that at her first swing of the whip she felt such a wave of excitement that she nearly came.\n\nEdward and Robert each took their turn at the next two hours and Catlin wished she had more than one stroke for each of them. After Robert was released, the group went back inside for dinner and a short rest before going down to the dungeon for more play. During the next several hours each of the Lords took his place, stretched and available, while Anne lashed them and Catlin added her single stroke, trying to make it really felt. When at last Linda was stretched between ceiling and floor, Anne whipped her severely but Catlin could see it was turning the bound woman on also. Anne surrendered the cat to Catlin and as Catlin walked slowly around Linda, the bound woman said in a tone that carried to the others in the room. \"Catlin, don't stop with one. Give me ten.\"\n\nCatlin looked over at James for confirmation and received a nod. A rush of power flooded her as she delivered a hard stroke to Linda's rear. Strokes two, three, and four followed, each a little harder. Then Catlin placed her fifth and sixth strokes across Linda's breasts, bringing quick screams at each. The final four were laid on her ass once more and it was a toss up who was more stimulated from them, Linda or Catlin.\n\nThroughout the afternoon and evening the men had watched Catlin deliver her lashes with intense interest. This girl was turning out to be one of the sexiest if not the sexiest - any of them had encountered on any of these adventures. She had asked not to be left out of the sexual activity that afternoon and had gotten her wish. She had been fucked in all three holes and had eaten Linda and Meg to orgasms while bound helpless. Now after she had finished her tenth stroke across Linda's body, James approached her while John was releasing the bound woman. His hand reached out to her bare shoulder and he felt her shudder at his touch. He leaned forward and whispered in her ear, \"I want you, Wench. Maybe along with a couple of others.\"\n\nAt his words a shiver ran up Catlin's spine and when he turned her towards him, she pressed her body against his and almost hissed, \"Yes, my lord. You and any or all others.\" Soon Catlin found her wrists bound behind her as she was lowered onto John, his hard tool penetrating her soaked pussy. Then Edward put his tool to her lips and she felt James begin to probe her anus. She was still sensitive and a little sore in all of her orifices, but the slight pain only excited her more and when James pushed his rigid cock into her rear she started to come immediately. The three men began to thrust in their own rhythm and before the last of them shot his load, Catlin had come four more times.\n\nCatlin spent the night bound to one of the beds and before morning, each of the six men as well as both Linda and Anne, had made the trip to her room and driven her and themselves to even more climaxes.\n\nAfter breakfast the group returned to the library. Catlin had lost track of days and was totally surprised when James began with, \"As you know. Today brings an end to our adventure. To my fellow lords and the two ladies, I want to say I think we'll all agree that this has been one of our best. To our captives, I hope you have enjoyed it as much as we have. I believe you have. Now I think there is a car waiting for each of our four guests - he nodded towards where Catlin and the other three captives stood - so I'm afraid it's time we allowed you to get dressed, much as I prefer you the way you are.\"",
        "There were a lot of greetings exchanged between the eight clients and the four captives with wishes that they might meet on some future adventures. Then the emerald cloak was draped about her shoulders and with a last embrace and kiss from each of them, Catlin was led out the door where the car with \"Miss Smith\" was waiting for her.\n\nWhen Catlin entered the car, Miss Smith smiled at her. \"Enjoy your adventure, Catlin?\"\n\n\"More than I would have dreamed possible,\" Catlin replied. \"I certainly wouldn't have minded if it had lasted longer.\"\n\n\"Well, from what I've heard, I expect you will have more of them. Now, I'm afraid I'll have to blindfold you again.\" She placed the black silk around Catlin's eyes and soon they were driving, supposedly retracing the route they had taken on the way there, wherever \"there\" was.\n\nThe same plane and pilot was waiting and when they boarded he looked at Catlin and said, \"Well, did you solve the mystery?\"\n\nCatlin hesitated a second as she remembered the cover story which had been given to the pilot. Then she smiled and said, \"Some of it. But I may have uncovered even more questions. Maybe I'll get another chance.\"\n\nThe flight back was uneventful. Catlin was given back her own clothing during the flight but as she started to put on the shorts she realized that there were several red marks which would clearly show below them. She started to say something when Miss Smith handed her a pair of jeans in her size and a long sleeved shirt. \"Just in case, we packed these. The marks look like they will be gone completely in a day or two at the most, and even now I doubt that anyone would think anything about them, but just in case, you might want to wear these instead.\n\nCatlin thanked her and put on the more concealing clothing and then Miss Smith handed her a check. Catlin had almost forgotten about the money and was surprised to see that the check included the promised extra thousand as her prize from the contest. When they landed Miss Smith drove Catlin back to her apartment. \"I expect Rick Hardin will be contacting you in the next day or two for, what you might call a debriefing. We just want to find out your thoughts about everything. Then, just like this time, someone might approach you and say 'Code Green.' In fact, I'm almost certain someone will. The next adventure will almost certainly be to somewhere else and completely different, but I suspect you will enjoy it just as much.\"\n\nAs Miss Smith had told her, Rick Hardin called a day later and over dinner he probed to find out exactly what she had liked (everything), what she disliked (it ended too soon), and if she was still interested in another adventure (YES! YES! YES!). He obtained a lot of details and this time Catlin found she wasn't embarrassed at all.\n\nComing back to her ordinary life was a little hard for a few days. Among other things Catlin had to make a real effort to remember to put clothing on in the mornings. She also found she was masturbating at least two or three times a day and sex seemed to occupy more of her thinking that it had before the trip. But in several days she was beginning to return to her old routine and, except for her bank balance and her strange new necklace, there wasn't anything to show what had really happened.\n\nThen one night about seven, as she was digging out the key to enter her apartment, a man in his early thirties stepped up to her. \"Catlin Reed?\" he asked.\n\nCatlin's heart began to beat faster. \"Yes,\" she said.\n\n\"Code Green,\" the man replied. "
    ],
    "authorname": "professorjames",
    "tags": [
        "meg tyra",
        "catlin suddenly",
        "robert explained",
        "catlin felt",
        "constant stimulation",
        "extra thousand",
        "allowed give",
        "facing james",
        "stroke linda",
        "side board"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/xad-inc-pt-04"
}