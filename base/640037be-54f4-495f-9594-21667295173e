{
    "title": "I'm 51",
    "pages": [
        "Edited by blackrandl1958\n\nChapter 1\n\nUsually, I didn't hit the meat markets, but I was with a friend who wanted to go out to celebrate his divorce. It made me think back to mine. That was a petty, bitter situation that developed into a slugfest pretty quickly. She cheated, got caught, and didn't want to face the consequences. When her lawyer told her there was no way she could get the prenuptial agreement thrown out, she went into a rant of epic proportions. I still have a recording of it on an old phone that I purposely kept, and I would listen to it on the anniversary of the divorce, just to remind me I'd made the right decision. \n\nThere was no celebration for my divorce. A divorce was an admission of failure, of promises made and broken, and I didn't celebrate failures.\n\nI noted there seemed to be a preponderance of \"mature\" women at the club, and it suddenly hit me that Rex was cougar hunting. Maybe he had Mommy issues. Maybe he was a bit of a perv. It didn't matter because there we were. He had just turned forty, and I was just past my forty-fourth birthday. Sometimes I felt like I was ninety. A pretty active lifestyle and a gym addiction kept me in excellent shape, but there were mornings when I creaked and popped when I got out of bed. My doctor once told me I might be 44, but condition-wise, I had the body of someone in his early thirties. In the mornings, my back said that wasn't necessarily true.\n\nWell, it wasn't for me to judge, so I made the best of it. I danced a lot, and some of the women I danced with had to be in their sixties, but they damn near wore me out. One really hot one told me she was 67, then grinned. \"I much prefer 69. There are things I could show you honey, things that would rock your world.\"\n\nI had no doubt she was right, and while I was trying to come up with an exit strategy, Rex blundered up, grinning like mad and drunk on his ass. \"Who's the hottie?\"\n\nPretty soon they were cheek to cheek with his hand firmly latched onto her ass while she had her hand between them and you could see it moving. They disappeared 20 minutes later, and I didn't see him again until Monday.\n\nDeciding I'd had enough fun for the night, I started towards the door. Then she walked in. Her flaming red hair went almost to her waist. Her skirt was seriously short, to the point a wardrobe malfunction would occur if she moved the wrong way. The white silk blouse was unbuttoned to the point that it was pretty evident there was no bra. Her face was round, with a cute nose and killer blue eyes.\n\nThe woman was exactly what I was looking for. IF I was looking for sex without strings. Sadly, she did nothing for me. The mercenary look on her face confirmed my opinion. She was looking across the club like it was a buffet, trying to find the perfect morsel. Her eyes went across me and then flicked back for a second look. I was pretty sure I was on the short list.\n\nNow the woman who she was with was a completely different matter. She carried an air of understated elegance, the clothes, the accessories, the style of her platinum blond hair didn't scream money; it said she had it and it wasn't worth talking about. She was perfect, in the quietest of ways.\n\nYou could also tell this wasn't her natural habitat. She didn't look uncomfortable, she looked more...unimpressed. She sipped on one martini while her friend gulped down three drinks, in between dance partners. Several men, young men, asked her to dance, but she refused them with a haughty stare.\n\nShe intrigued me, so I walked over as a slow waltz was being played. \"May I have this dance?\"\n\nShe looked me over, judging, dismissing me with her eyes. \n\n\"I' m 51.\"\n\n\"Congratulations. Does your age preclude you from dancing?\"\n\n\"Not if the guy is in his thirties!\"\n\n\"Well then, perhaps we should find one here and warn him not to ask. I'm a lot closer to your age than you think, and I'm certainly well past my thirties. You have a pleasant evening, madame.\"\n\nI was halfway across the hall when I felt her arm. \"I'm sorry. It's pretty obvious I don't want to be here, but I am. I may as well have a dance with a handsome man and make the best of it. That is, if you'd still like to...\"\n\nShe was light as a feather and a really good dancer. I commented on it and she smiled with a tinge of sadness. \"My husband and I took lessons as a form of exercise. I enjoyed it, but not as much as he did, especially when he started doing the horizontal mambo with one of the instructors. The girl was 25 and got her claws into him. We divorced so he could marry her.\"\n\n\"That had to sting.\"\n\n\"Oh, it did. At first anyway. But on the other hand, we had a really successful business and didn't have a prenuptial, so I ended up owning half of it, plus our investments had grown nicely. She bled him dry in three years and I ended up buying half his share of the business just so he could pay her off. He's still the President, because when it comes to business he has a good head on his shoulders, but it galls him no end to have to answer to me. I bet if he could have a do-over, he'd have never signed up for those lessons.\"\n\nBy then we'd moved off the dance floor and had found a quiet corner. I grinned. \"So then, you're hot, rich, own a business, why isn't there a second Mister Angela?\"\n\nShe grimaced. \"There's been one or two who applied for the position. Unfortunately, their qualifications didn't meet my standards. How about you?\"\n\nIt was my turn to grimace. \"She got a better offer from someone a lot like your ex. I don't think it's the ideal life she wanted, word has it he made her sign a pretty rigid prenuptial and watches her like a hawk. After what she did to me, he has to know under the right circumstances she'd not hesitate to do it to him.\"\n\n\"Is there a little hottie out there anywhere practicing writing \"Mrs. Reggie\"?\"\n\n\"There was one two years ago. Let's just say our life goals were different and we didn't part on the best of terms.\"\n\n\"Love sucks.\"\n\n\"Personally, I think love is a grand thing, if you have the right person.\"\n\nI raised my glass. \"To love when you get it right.\"\n\nShe raised hers. \"To knowing when it's right.\"\n\nWe talked for another hour. I was surprised time went by so quickly. I looked behind her and grinned. \"I think your friend found the guys in their thirties.\"\n\nHer smile evaporated as she watched her friend approach. She hesitated when she saw me, but kept grinning. \"Look what I found, Angie! I brought you one, but it looks like you already have a stud. I think I'll keep them both. I'll see you tomorrow.\"\n\nShe looked back over her shoulder as they walked away, both guys fighting to grab her ass. \"Maybe!\"\n\nAngela looked disgusted. \"It hit her hard when her husband dumped her. She had a boob job and a few wrinkles removed, hoping to get him back. He wouldn't have anything to do with her, and now she's on a pretty destructive path, trying to prove herself as an attractive woman. All she's been attracting lately are leaches cashing in on the free sex and her bank account. I hope she comes to her senses. It's so sad, she really is a nice woman and quite attractive for her age. There are three more close friends in our circle, all of us going back to college, and we take turns trying to babysit her and keep her safe until she comes around. I'm about to lose hope.\"\n\n\"I have no doubt she'll wake up someday with a massive hangover, in bed with a man 25 or 30 years her junior, try to remember what his name is and it will hit her. 'I'm too old to be this stupid anymore.' Then she'll start coming back. One should always remember that the first person you have to make happy is yourself, and she's obviously not happy.\"\n\nHer face slowly lit up. \"Thank you, Reggie, for that excellent bit of advice. I think in the near future I will be worrying more about my happiness than that of others.\"\n\nHer phone chimed and she checked it. \"My Uber is here. Will you walk me out?\"\n\nI took her arm, we strolled along, and she suddenly started giggling.\n\n\"What?\"\n\n\"Don't look, but those platinum plated bitches are staring holes in me.\"\n\n\"Why would they do that?\"\n\n\"Because they think I won the grand prize. You. You're the most handsome, fit man in here. Plus, they think just like I did, that you can't be out of your thirties. They have in their heads I'm going to whisk you away for a night of lust, where you pound me for hours while I go crazy, having orgasm after orgasm until I pass out from exhaustion, only to wake later and find you still pounding away. I won't be able to walk the next day, but you'll spring out of bed ready to run a marathon, if you can get your raging erection to go down. Then you look at me and we're off to the races again.\"\n\nI grinned. \"I vote for that plan.\"\n\n\"Not in this lifetime, honey. I'm afraid you really would do some damage.\"\n\nWe were beside the Uber. \"I think, sweet Angie, that you sell yourself short. I have a feeling you would be like a volcano, ready to erupt any minute and lay waste to those in front of you. I think it would be a good way to die. Goodnight, Angela, it was a pleasure to meet a woman of your quality.\"\n\nI meant to kiss her on her cheek but she grabbed my head and put a full on, lots of tongue and promise kiss, then stepped back flushed. Then she grinned. \"Seismic shifts, honey. Don't get too close.\"\n\n\"I'm already too close,\" I said as I grabbed her shiny mane and dragged her head up for a serious kiss. We were both almost gasping when we broke. The Uber driver looked at us and grinned.\n\n\"Do I need to leave?\"\n\n\"No. You need to convey this treasure to her vault. Goodnight, Angela.\"\n\nShe was still trying to form words when I shut the door and he accelerated away.\n\nChapter 2\n\nThree weeks went by. I thought about the blond goddess a couple of times before filing it away as a treasured memory.\n\nRex had a hard time looking me in the eye until I told him what happens in the Cougar Cave stayed in the Cougar Cave. Then he relaxed and grinned. \"She nearly killed me! The woman couldn't get enough, then she passed out for ten hours. I was starting to get worried, but she woke up, looked at the time, and dashed to the shower. She looked back and asked me if I was coming. She said we didn't have time to fuck because she was about to be late for a family function, but there might be enough time for a quick blowjob.\n\nWhen we were done, she showed me pictures of her grandchildren, saying she was going to have four of them for the day. I asked about seeing her again and she grinned.\"\n\n\"I doubt it. I'm too old to limit my experiences and I usually don't do repeats. You're a good fuck, honey, but you're just one in a long line of good fucks. Thanks for the night.\"\n\n\"So the cougar chewed you up like a piece of meat and now she's ready to go hunting again? That's kind of cold.\"\n\nRex just grinned. \"There's lots of cougars out there, buddy. Up for another hunt? Rumor has it you left with one seriously hot GILF.\"\n\n\"I didn't leave with her, we just walked out together. And truth be told she was a lot hotter than I was expecting to see in a place like that.\"\n\n\"Your loss, dude. You should have nailed her.\"\n\n\"Dude? Nailed? What are you, sixteen? Maybe you do need to spend time with the older ladies. Maybe they'll help you grow up.\"\n\n\"Ain't never gonna happen. I tried the whole responsible adult thing with the wife. We all remember how that worked out. I ain't taking any woman seriously ever again. \"\n\n\"You'll be married again before two years go by.\"\n\n\"Bet you a case of beer I won't.\"\n\n\"If you win, I'll throw you a party. If I win, you have to hand me the beer and tell me how right I always am.\"\n\n\"You do have an annoying habit of being right, but not this time. That case will be the sweetest beer I'll ever drink.\"\n\nRex walked away laughing while I grinned. We'd see.\n\nChapter 3\n\nTwo weeks later I met him for tennis, and he was grinning like the cat that ate the canary.\n\n\"What the hell's up with you?\"\n\n\"Nothing. I just made some unexpected money over the weekend, and it's put me in a good mood.\"\n\nWe volleyed for serve. He was younger and faster, but he'd spent way too many nights in the bars while I spent them in the gym. Conditioning won over talent, and I beat him in straight sets. My knee was telling me just how costly the victory was when we stopped. \n\nWe were wiping down before heading for the showers when his grin came back. \"Remember that extra money I talked about? I made it off you.\"\n\n\"Me? What did I do?\"\n\n\"You made a serious impression on Grandma Hottie. She showed up at the club looking for you. When they told her I knew how to find you she grabbed me. I thought I was going to get lucky, but she shot that down pretty fast.\"\n\nShe made me a proposition. \"I'll give you 200 dollars if you'll tell me how to get in touch with Reggie. Better yet, give him this card and tell him to call me. I'd like to talk to him.\"\n\n\"Man, I thought it would be funny, so I asked her if she was knocked-up. Word of wisdom here. Don't piss her off. Her slap still has my jaw a little tender. Anyway, I promised her on all I held holy that I would give you the message and her card. Here.\"\n\nWhen I was home, I looked at the card. It was her business card, Angela Bassett, CEO of Bassett Enterprises, and her cell was written on the back. It was only 7:30 so I called.\n\n\"Hello?\" She seemed a little cautious and I realized she didn't recognize the number.\n\n\"Hi. Am I speaking to Angela Bassett, the one voted Hottest Grandmother in the state two years running? It's Reggie Wilkes.\"\n\nYou could hear the humor in her voice \"The same Reggie Wilkes rumored to be the successor to Dorian Gray? How old do you look now? Thirty-three, thirty?\"\n\n\"I'm old enough to look damn good having you on my arm. How are you, Angie? I hear you put a bounty out on me.\"\n\n\"Just a little one. I did wonder how much it would take to have you delivered to my door, but after I thought about it, I decided to try the old-fashioned way. What are you doing next Saturday.\"?\n\n\"I have no pressing social engagements.\"\n\n\"Excellent. My company is having an awards ceremony, and as the big cheese I have to be there. The ex is bringing his bubble gum aged flavor of the month, and I'd like to show him up.\"\n\n\"So you'd be using me for my body? How mercenary, Angie.\"\n\n\"Let me put it to you like this. You come to this thing with me, and maybe I'll let you do some light, pleasurable things to my body.\"\n\n\"What time should I pick you up?\"\n\nHer laugh sounded like verbal sunshine. \"I'll be picking you up, in the limo. I'm going in with guns blazing. I'm telling you now, look for unexpected PDAs throughout the night.\"\n\n\"I think we should have dinner and strategize. I don't want to be unprepared if he asks me which thong is your favorite.\"\n\nThere was silence for a little bit before she giggled. \"I'm not a fan of thongs, but if he asks, say light green.\"\n\n\"I will not. I will tell him that your new favorite is the black one I took off you in the limo on the way over and put in my pocket. Gotta love those privacy panels.\"\n\nThere was a bit of silence that turned into a snicker. \"This is going to be so much fun!\"\n\nWe went to dinner Sunday. She had a very nice home. Not overly large, not gaudy, more simple clean lines and elegance. Looking it over with a builder's eye, I told her how much I liked it.\n\nShe frowned for a second. \"You should have seen the McMansion he talked me into buying. Why do two people need six bedrooms? This one has three, but my square footage is about the same. I gave it to him in our divorce, and he lost it in the next one. He lives in a one-bedroom condo now, and can barely afford it.\"\n\n\"Sucks to be him, huh? First, he lost the quality, then he lost the quantity. His next will probably be more of a pay-as-you-go type deal.\"\n\nShe shot me a sharp glance as she choked back her laugh. \"Do not make me start bellowing at the dinner table. It wouldn't be seemly. And thank you, Reggie.\"\n\nI shrugged. \"Sometimes all one has to do is speak the truth. That lobster sounds really appealing, doesn't it?\"\n\nWe had a nice, leisurely dinner, and our conversation bounced all over the place. We talked about places we'd been, places we'd like to go back to, and places that if we saw them again in a thousand years it would be too soon.\n\nSoon dinner was over, and we both seemed not to want it to end, so I took her to a little place most never knew about. It was a roots music venue. One week it might be folk singers, the next country or bluegrass. Some weeks they have African groups that only played percussion, and some weeks it was blues or acoustic jazz.\n\nShe sat enthralled at the act for the night, a blues duo consisting of a woman in her thirties and a man pushing fifty. He played guitar and keyboards, other songs he'd be on bass and doubling on harmonica. She was a very good guitarist, as well. They had a kick drum and a high hat and sometimes you wouldn't believe there was only two people on stage if you hadn't seen it with your own eyes.\n\nWhen they were on break, the others would glance at us sideways. I had on a very nice suit and Angie was dolled to the nines in a copper-colored silk sheath with diamonds literally dripping off her. Most were in jeans and tees. She broke the ice with the woman sitting beside her, and soon she had her phone out punching in acts she suggested she sample if she liked what she heard that night. Soon, she had a crowd around her at the snack bar. This was a family venue, so alcohol was never served. We'd caught the second show and most of the kids were home and in bed.\n\nAngie was still high on adrenaline when we left, talking a mile a minute. I walked her to her door, and she sighed. \"I want very, very much to invite you in for breakfast tomorrow, but it's too soon. We'll just put it on an IOU and a promise that if you're a good boy very, very nice things will be happening soon. In the meantime, here.\"\n\nIt was about as hot a make-out session as a couple of mature people could make it, acting like horny teenagers who hadn't figured out exactly what sex was, yet. We both broke, gasping and giggling, before going back to it for another five minutes. She finally shoved me away. \n\n\"Enough! Any more, and we're going to break the PG rating for this front door. Goodnight, Reg.\"\n\n\"Goodnight, my hot little GILF. Look it up if you don't know what it means. I'll see you Saturday.\n\nChapter 4\n\nIf I thought she was outstanding on her dinner date, the dress she had on for the event was nothing short of spectacular: floor length black in some shiny fabric, with a high slit and a neckline that plunged deeply enough to let you know there was a very nice pair of breasts just aching to get out. Her well-shaped legs were enhanced by what had to be four-inch heels. She grinned at my reaction.\n\n\"Close your mouth, honey. I told you I was going all out. Do you like how the girls look? I have on a very impressive bra.\"\n\n\"You have a very impressive chest. Now I'm going to wonder all night how the bra looks.\"\n\nShe giggled, then she handed me something. \"Here. A little present to commemorate the night.\"\n\nI looked down at a very tiny thong, lace, black, and moist. Her grin got wider. \"Yes, I wore it for a bit. Wouldn't do for him to see it and it be unauthentic. Just so you know, it matched the bra.\"\n\nIt took every bit of willpower I had not to sniff it in front of her.\n\nWe arrived at the hotel, and I guessed her business must be pretty big, judging by the turnout. There were almost two hundred people there, and most of them were lining up to kiss her ass. A lot of them were looking me over, trying to figure where I fit in the grand scheme of things. Angie was gracious and friendly, in just the right combination.\n\nWe mixed, we mingled, and about forty-five minutes later I felt her stiffen. \"That's the ex,\" she whispered. I looked to see an average, slightly overweight man with a woman who looked barely out of her teens on his arm. It looked sad and vulgar at the same time. He approached us.",
        "\"Angie.\" It was said flatly, with no emotion at all.\n\nShe, on the other hand, was all smiles. \"Hello Ben. Let me introduce my date. This is Reggie Wilkes. Reggie, my ex-husband, Ben.\"\n\nHe had a limp handshake, the type that would immediately make you not trust him, but then again, maybe my first impression was colored by what she had told me about him.\n\nHe barely spoke, but the girl he was with chattered away. She had the act down pat, but her eyes gave her away. She was looking at me like she was gauging my net worth. I had accumulated a good bit with my business, but I doubted I was in the same tax bracket as Angie, I wasn't foolish with my money and lived reasonably well.\n\nAngie was polite and looked like she was trying to choke back her laughter. We dined, a surprisingly good meal, and Angie made her speech to a good round of applause. Then her ex made a speech that was boring and uninspired, promising as long as he was at the helm the company was in safe hands. I got the feeling that wasn't a widely held opinion. The applause seemed lukewarm at best.\n\nThen the orchestra started. Angie was an excellent dancer, and I was no slouch, so we stayed on the floor for a while. Then she had to do her obligatory dances with people in the company. I danced with the wives and girlfriends. \n\nThe most common topic was an inquiry into how serious we were. I had a stock answer. \"I'm just arm candy. She'll take me home tonight and drain me to an empty husk, then banish me until she has need of my services again.\"\n\nSome thought I was serious, but most of the ladies giggled and said she'd made a good choice. I kind of laid it on thick when I danced with the ex's girlfriend, telling her we were going to go on a grand tour of Europe in the late summer, and would be staying at my villa in France and my condo in London, then maybe jet off to the islands. I thought I was going to have to pry her off me.\n\nAngie noticed my distress and rescued me, gently pulling her hands off me. \"Mine, darling. Mine. Cheer up, you got the consolation prize. Another dance, honey?\"\n\nI told her what I'd said, and she went into gales of laughter. Her ex came up to me as I was refreshing our drinks.\n\n\"Are you guys serious?\"\n\n\"If I have my way there may be a new name for the business.\"\n\nHe exploded. \"The company is mine! There will be no name changes.\"\n\n\"The company was yours, and from what I've been told, you literally fucked it away. Surely you understand by now that the little head tends to make poor business decisions. From what I understand, you better be careful with Bimbo No. 2, or you'll end up owning twelve and a half percent.\"\n\n\"You sonofabitch. I'm gonna...\"\n\n\"You're gonna what, Ben? Look at Reggie. That suit isn't padded. It's plain he does a little more than twelve-ounce curls, and he'd take you apart. I'm more than willing to watch, so go ahead. I'll make sure no one interferes until you're done. No? Wise choice.\"\n\nAngie turned to me with a wicked gleam in her eyes. \"Honey, I seemed to have misplaced an article of clothing. Have you seen...\"\n\n\"This?\" I was holding the thong in my hand. \"Sorry honey. The limo didn't take as long as we thought, and you didn't have time to put it back on, remember?\" \n\nShe took the thong out of my hand, grinning at her ex the whole time. \"Thanks for taking care of it honey. I'd put it on again, but it would be a waste of time; you'd have it off again before we got out of the parking lot. I suddenly have a strong urge to call it a night. Shall we go?\"\n\nA ripple went round the room as snatches of the conversation were repeated, and many of the ladies and a few of the men hugged her as we left. Her husband was really not very well liked.\n\nChapter 5\n\nShe was still giggling when we got into the limo.\n\n\"Did you see his face? I thought he was going to melt through the floor. And his little honey was looking at him with entirely new eyes. If she thought she could have gotten away with it, she would have mounted you on the floor in front of the whole crowd. Of course, if she tried anything with you, I'd have slapped those silicone bags right out of her fake boobs.\"\n\n\"Wow. Remind me to never get on your bad side. The evening was fun. Some parts were better than others, though.\"\n\n\"Which parts?\"\n\n\"The parts where I had you to myself and snuggled up on the dance floor. You really are an attractive woman, and I noticed.\"\n\nThe giggle was back. \"Believe me, honey, when we were snuggled together, I noticed that you noticed. It was very flattering.\"\n\nIf it hadn't been dark in the car, she would have seen my blush. \"I'm not apologizing.\"\n\n\"I'd be offended if you did.\"\n\nWe were gradually sliding towards each other and soon we were doing some pretty serious kissing. Hands wandered and I had to wonder just how much her bra had to do with how firm her breasts felt as I stroked them.\n\nHer hands wandered south, and I heard the gasp and giggle as she latched on to the front of my pants. It was just getting interesting when the car delivered us to her door. We straightened our clothes a little, but we both saw the driver's smirk. He should be used to behavior like that.\n\nWe stood in her entranceway, grinning like idiots. She gave me a look I couldn't decode and kissed me hard, then shoving me away. \"I'd like nothing better than dragging you inside and fucking your brains out, but it's too soon. You're the first man I've taken seriously in ages, but it's just too soon. We need to build on this gradually. That being said, it's time for you to ask me out on a real date.\"\n\nI pretended to be angry. \"As far as I'm concerned, this was a real date. A real date that ended in a lot of discomfort for the man when the woman ramped him up and then sent him home. Have you no compassion?\"\n\nShe smirked and ran her hands across the front of my pants again. \"Does this thing ever deflate? Take it home, honey, and keep it safe and ready. You never know when It's going to be needed.\"\n\nI sighed dramatically and gave her a chaste peck on the cheek. As I got into my car, she pressed something in my hands. \"Here. This is what I really wore beneath the dress.\"\n\nI looked as she shut her door. A pair of red lace boy shorts. Wet boy shorts. I had no shame at all as I held them to my nose and inhaled deeply.\n\nI sent flowers to her office Monday, with a card. \"Please accept this as a token of my great affection for you. Would you honor me with your company Friday at 7?\"\n\nI knew her personal assistant would read the note and share it. She carried the flowers into the office. \"Boytoy sent these and asked for a date Friday. If you're not interested, can I have him?\"\n\n\"Joanne, honey, you know I love you, but say something like that again and I'll transfer you. My ex needs a new assistant.\"\n\n\"Noted. If I beg on my knees, will you keep me?\"\n\n\"You're worth your weight in gold. But say something that stupid again...\"\n\n\"Got it boss. Where do you think he'll take you?\"\n\n\"I'll let you know Monday.\"\n\nChapter 6\n\nWe had a couple of very pleasant phone conversations during the week. I told her to dress down, jeans and a comfortable top, as the activities I'd planned were very informal. I found out later she took her personal assistant shopping with her to make sure she got the perfect pair. I didn't know it. but up until then, there were no jeans in her closets.\n\nWhen I picked her up, I heartily approved of her choice. They weren't skintight, but they were very, very snug, and she filled them out perfectly. She had on a light green top that had a bit of scoop to the neckline, and it was very enticing. She grinned when she saw me and ran her hands over my chest.\n\n\"Do you manscape?\"\n\n\"My, that's a very personal question. I think I'll wait and let you find out for yourself. By the same token, do you prefer the smooth look?\"\n\nShe went three shades of red and laughed. \"I'm going to return in kind. You'll just have to find out for yourself. Now, where are we going?\"\n\nI took her to a little buffet restaurant I'd discovered. The menu for the evening was posted by the kitchen door and was served family style. There were no individual tables, just several long ones that almost ran the length of the place. The food was served in large bowls, and if you wanted more mashed potatoes or meatloaf you had to ask the person beside you to pass it along. It was rude not to talk, and soon you'd find yourself in conversation with the person across the table or the one beside you. Once Angie got used to the idea, she talked almost the whole time. She shared dessert recipes with the little old lady across from her, makeup tips with the young wife beside her. I talked sports, cars, and avoided politics. Once she held a baby while the mother could use the restroom and beamed the whole time. She had told me she had two small grandchildren of her own, but they lived in California, and she barely got to see them.\n\nShe was very happy and when we pulled into the parking lot of the roots venue, she just plain grinned. There was an acoustic jazz quartet playing that night. A guitar, upright bass, violin, and accordion. The guitar player was a woman, she and the bass player shared lead vocals and the others joined in on choruses. They played a lot of instrumentals that showcased their skills. Some we recognized, but most were brand new to us. They were selling old-fashioned CDs, and Angie bought three.\n\nThey played some slow pieces and invited those who wished to get up and dance. We were on the floor for three songs.\n\nThis time I got as far as her couch, and we were just millimeters away from putting a serious stain on it when she stopped us. \"I want this very, very badly. The trouble is I think If I get it, I'll want it on a consistent basis. Please, let me set the pace. I promise that if we stay the course the destination will be worth the journey.\"\n\n\"It's already worth the journey, honey. I can wait, but I don't know if I can restrain myself much longer.\"\n\n\"Soon, my sweet.\"\n\n\"My sweet?\"\n\nI loved her giggle. It made her sound so young. \"Yes, MY Sweet. I've always wanted to say that to a man and mean it.\"\n\nTwo frustrating weeks later she called me and asked if I liked boats.\n\n\"I suppose,\" I said. \"I owned canoes and kayaks when I was younger, and my dad had a bass boat when I was a kid.\"\n\n\"Will you take me boating Saturday? I own a boat, well actually, my ex owned a boat. I made sure I got it in the divorce. I did it just to piss him off, and it worked. I've got it at a marina, and they keep it maintained for me, but I've never actually used it. In all the time he owned it he never took me out on it. I want to know if it's a pleasurable enough experience that I'll want to keep it or put it up for sale.\"\n\n\"Sure. If I remember right, they can be a lot of fun. Give me directions.\"\n\n\"Thank you, honey. Don't worry about bringing anything, I'll have that covered. Eight o'clock too early?\"\n\n\"It would be perfect. It will still be cool and comfortable then. The afternoon sun reflecting off the water in the summer can be very intense.\"\n\n\"We'll time the trip to stay cool. See you then.\"\n\nIt was a high-end marina, and I had a feeling her 'boat' would be a luxury model. After I got my breath back over the outfit she was wearing, genuine Daisy Duke shorts and a man's white dress shirt tied under her breasts exposing her toned tummy, unbuttoned enough to see the bikini top under it, she led me out to the slips. We were heading for an obviously restored mahogany Chris-Craft, and I couldn't help but admire it. I was surprised she walked right past it and to the very end of the slips.\n\nI think I might have actually gawked. It wasn't a boat. It was an RV on floats, 45 feet long, it was almost completely enclosed, with an almost full-length upper deck, complete with canopy.\n\n\"This is his boat?\"\n\n\"No honey. This is my boat. It's fully fueled, everything is charged and all we need to do is cast off. Ready?\"\n\nThere was a set of controls up top, as well as on the foredeck below. I felt better on top because I could see better, and I wouldn't let her talk as I concentrated on getting the boat away from the dock. Once we were clear of the marina, we opened it up a little and we were both surprised at the speed it could muster.\n\nGetting out into the main channel, we cut the speed and puttered along. Angie handed me a craft cider she knew I loved. I reached for it; suddenly glad I wasn't driving a car. I'd have wrecked it. She'd stripped down to her bikini while I was concentrating. Even for her age she had a very tight body and was wearing a very flattering bikini, yellow with white polka dots. The top made her breasts stand out high and proud, and her bottom was about two fingers' width shy of a thong. I knew that ass would be killer, and I was right.\n\nShe giggled again. \"Eyes on the lake, big guy.\"\n\n\"Yeah, that's gonna happen.\"\n\n\"It better. I have good things planned, things that do not include running aground. I have a map the marina operator gave me, honey. He said the landmarks would be easy to find and besides, we have GPS on our phones and the nav system. Another hour or so should get us there.\"\n\n'There,' turned out to be a little cove between one of the larger of the lake islands and a smaller one barely covering two acres. This was a mountain lake, the first of a chain of lakes that went all the way through the low country, each progressively getting more and more polluted. Here, the water was clear and almost pristine, allowing you to see into the depths.\n\nIt was the kind of water you wanted to be splashing around on a hot summer day. As soon as the boat was securely anchored, Angie suggested we swim for a bit.\n\n\"I told you I would supply everything,\" she said with a wicked gleam in her eye. \"I got you a swimsuit. It's on the bed. Why don't you go get changed?\"\n\nI hadn't realized how big the interior was on this thing. The lounge/gallery was pretty impressive. There was even a fairly large television mounted to the wall. The bedroom was smaller, just barely containing the enormous bed. The tiny scrap of fabric looked even smaller lying on it. I picked it up, grinning. It was a Speedo, light blue and even for that style it was small. It was an experience getting into it, and I had a brief thought about pushing two bowling balls into a marble bag as I shimmied it up my legs. Looking into the full-length mirror in the bathroom, I thought how glad I was of the time I'd spent in the gym. I didn't rock it like a twentysomething, but I had nothing to be embarrassed about.\n\nI walked back on deck with a towel wrapped around my waist, mostly for effect. She was about to ask me if I'd put it on when I let it slip to the floor. Her hand flew to her mouth, and she reddened a little before the grin came back. \"You look good enough to eat.\"\n\n\"You've been looking tasty since we left the dock. Shall we?\"\n\nThe water was cold! At least at first. Then we got used to it and it felt great. Angie seemed in her natural habitat, swimming with the grace of an otter. We'd play, snuggle, we even indulged in a little grab-ass and she shrieked when I unsnapped her top. The glimpse of her twin peaks in their natural glory was very enticing. She retaliated by diving under, grabbing the band of the Speedo and pushing down. \n\nShe had a hungry look on her face when she came back to the top. She snuggled up to me, rubbing those hard nipples across my chest. \"I think we better get undercover before this goes past playing. There's not a lot of people around, but it's still a public lake.\"\n\nI let her go up the ladder before me, and when that mouthwatering rump got level I grabbed her, biting it while she squealed, then I slid the bottoms down and licked those firm globes for a minute. Angie moaned as I did, pinned against the steps and unable to move.\n\nWhen she got her breath, she told me to either take them off and finish the job or let her get up the ladder. I let go and she didn't bother to pull them back in place.\n\nWe were on each other with a hunger that belied our age. Apparently, her ex wasn't much on oral, while I loved it, especially with an appreciative partner. She screamed through her first orgasm, then moaned through the second. I kissed my way up and she tried to wriggle me off to return the deed, but I couldn't wait. She was soaked and I slid in easily, amazed at how tight she was. Angie let out a low moan that turned into a high keening as I sped up. Pretty soon, I was slamming into her as hard and fast as I could go while she wrapped her legs around me and lunged up to meet my thrusts. It had been a while and I didn't last as long as I would have liked to, but I think I gave a good accounting of myself.\n\nI held myself above her as I went rigid and spewed inside her. She gave a little moan as she ran her fingers through my chest hair. I was going to slide to the side, but she pulled me down on her and wouldn't let go until it became too much. When I eased down beside her, I thought I saw tears in her eyes.\n\n\"Are you all right, honey?\"\n\nShe just tugged my chest hairs. \"I'm beyond all right. I'm just, just... dandy! For some reason, that's the only word that comes to mind. It had been a while and I wondered if it would be as good as I remembered. This was so far beyond that good just isn't an adequate word. You are by far the best lover I've ever had.\"\n\n\"Don't sell yourself short. You are the first woman I've even been with to display so much passion. You, we, were in the glory of the moment far beyond anything thing I've experienced. It's the first time the words 'as one' ever meant anything to me.\"\n\nThen she started crying, but she kept a death grip on me as she did. When she recovered, she just lay there, tracing small movements across my chest.\n\n\"I'm glad you don't shave, honey. The ex does, and he doesn't have the body for it. It just makes him look pudgy and soft. You would probably look good, but I much prefer the feel of your hair. It reminds me that I'm with a real man.\"\n\nI stroked her well-trimmed pubic hair. \"The same here. You're a grown woman, and should feel like one.\"\n\n\"It's shorter and smaller than it's ever been. The bikini was the tiniest thing I've ever worn in public, and I had to adjust my trim line or it would have looked funny.\"\n\n\"It's just right,\" I said, as I let my fingers wander lower. She started squirming and five minutes later she was on top, riding me with intensity. Angie told me it was the first time she'd ever done it. Her husband had been a straight missionary, rarely doggie, type of lover. It seemed to make him feel more dominant.\n\nI played with her magnificent mammary glands until she turned around, then I rubbed that tight butt and ran a finger across her rosebud. When I did, she slammed down on me hard. By the time she had reached her climax I had a finger worked in to the knuckle and she was pushing back.\n\nWhen we were snuggling again, she told me it was the first time anyone had ever done anything like that to her. \"You know, I'd see porn from time to time and that would happen, and I always wondered what it was like. Have you ever done it?\"\n\n\"Yes, a few times. The trick is getting your partner prepared. If you don't, it just ends up painful and unpleasant.\"\n\n\"Could we maybe try that sometime? Promise me that if I say no, you'll stop.\"\n\nI almost got another erection thinking about it and promised her faithfully when the time was right, we would. We fell asleep entwined and by the time we woke we were starving and it was dark.\n\nShe slipped into a robe, I put the Speedo back on and we puttered around in the gallery putting a light meal together. \"You don't have to do that,\" she told me, as I helped.\n\n\"I don't. Sometimes I won't if we expand this relationship, but sometimes I'll make you sit at the counter with a glass of wine while I impress you with my culinary skills. It's called a partnership, honey.\"",
        "Tears came to her eyes and I thought I'd done something wrong. Then she grinned. \"I'll try my best to pretend to enjoy it when you do. What would you like as an appetizer?\"\n\n\"This,\" I said as I slipped her robe open and latched down on a nipple. She tried to push me away but stopped and moaned as I gave them both a good and proper seeing to. She finally pushed me away.\n\n\"Stop, or we won't finish dinner. They'll be right here for you later, I promise.\"\n\nWe ate the simple meal and cleaned up, separately, because the shower just wasn't big enough. I put on a pair of boxers and she had on a silk robe that just barely hid her teddy. She put on a jazz CD she had gotten at the roots venue, fixed a couple of drinks and we snuggled on the amazingly comfortable sofa.\n\nShe suddenly started laughing. \"He bought this thing thinking he was being clever. Now there would be no trail of motel receipts and all he had to do was take it out and meet his little bimbo at the next marina. I would never find out.\"\n\nHow long did that last?\"\n\n\"Until the first time I saw it. It was titled in both our names and it cost very little to have it wired for video and sound. I let him go three times to get enough footage, then used it to get a more favorable settlement. I made damn sure he knew I was going to take it and gave him a Corvette worth half as much in return. The first bimbo took it when she divorced him.\"\n\n\"Please excuse me for asking, but why did you marry such an idiot?\"\n\nI could hear the sadness in her voice. \"Hue was a good man when we got together. As we got more successful, he got more arrogant, thinking his success should justify anything. Age became a factor and honestly, I think she was the physical equivalent of a sports car during a midlife crisis. She wasn't smart, but she was very savvy and had him tied up pretty quick, asking him why he was still with a tired old woman when he could be seen around town with her on his arm? When I caught them, it played right into her hands. By then, I didn't care. She was welcome to him.\n\n\"Instead of everyone admiring him for what he did and who he did it with, most thought him foolish and many actually pitied him. I think when he realized that, it crushed what little ego he had left for a while. Then she screwed around on him and he was left with nothing to show for his bad decisions. For all practical purposes, I owned the company and he just had to deal with it.\"\n\n\"That pretty much mirrors what happened to us. I thought I was doing great but she had tastes for finer things and it didn't take her long to find somebody, once she decided to trade up. It killed me for a long time before I got over it, and made me really gun shy about relationships. I think I told you before, but it didn't work out quite like she had in mind. It's one thing to indulge a hot young lover, quite another to give her the keys to the vault after you marry. The prenuptial was pretty draconian, and by then she had burned her bridges, so she went along. I hear she has an allowance, and if she goes over that she's broke for the rest of the month. I look for it to end badly in the next couple of years. After all, he's proven he doesn't mind playing with people in relationships.\"\n\n\"Maybe yours and mine will find each other after their next divorces. That would be hilarious. Time for bed.\"\n\nShe slipped off the robe and twirled a time or two before getting in to bed. We had visions of great things but she was asleep as soon as we snuggled. I grinned in the dark as I felt her breath. Quality over quantity. A lifestyle I could live with.\n\nChapter 7\n\nWe jumped in and out of the bed and the water for the rest of the weekend, getting back to the marina just before dark Sunday night.\n\nI asked her as we motored back if we were exclusive. Even in the waning light I could see her eyes glitter. \" I've got a good notion to throw you overboard. I haven't been with another man in almost a year, and I'm pretty happy with the one I got now. Any more stupid questions?\"\n\n\"No dear.\"\n\n\"Good. How about you?\"\n\n\"Mine isn't quite as long, but I will tell you I hadn't been with anyone else since two weeks before I saw you at the club for the first time. I can assure you I like what we have just fine and have no intention of ever screwing it up. So then, we're officially a couple?\"\n\n\"Shall I have a contract drawn up?\"\n\nI just hugged her tighter to me. \"No. I think in matters like this verbal commitments work best, don't you?\"\n\n\"Absolutely.\"\n\nWe stood on the dock for a few minutes before I mustered my words. \"What now?\"\n\n\"Now we go to our separate homes and think about this weekend and what it means to us individually. After a couple of days of deliberation, you're to pack a few changes of clothes that you can keep at my house, move them in Wednesday or Thursday and we see where it goes.\"\n\n\"How about Monday or Tuesday?\"\n\n\"Don't push it. I need to process. I've gone a long time without being half of a couple. I need to ease into it.\"\n\nThat's what we did. I showed up Thursday and she practically dragged me into the house. I left Sunday night and returned Wednesday. It took almost two months before she sat me down for a talk. Her version of a talk usually meant she was the one talking and I was the one agreeing.\n\nShe asked me once why I did as much as I could for her. \"Because I... like pleasing you. It gives me pleasure to give you pleasure. Over time, if I truly believe you're making a bad decision or if I plain don't like what I'm hearing, you'll know it. I believe you're smart enough to know the line between lo... affection and weakness.\"\n\nShe was glowing. \"Well then. I've decided I like you enough to see if I can stand you on a regular basis. When can you get everything over here and move in permanently?\"\n\n\"Gee, this is so sudden. I don't know how lo...tomorrow! Most of my stuff is already here. I'll put a few things in storage I want to hold on to, and maybe a few months down the road I'll get hold of a leasing agent. It does a house no good to stand empty.'\n\nI took her hands. \"Now then, to brass tacks. You own your home and I own mine, so there are no house payments to contend with. I insist we split the domestic bills down the middle. I can't stand the thought of being considered a kept man, and you know the rumors are going to fly. That goes for the household chores, as well. I'm sure we'll agree you're better with laundry but I'm pretty handy with everything else so I'll handle more than my share of that. And if you can't stand to be pampered, now would be a good time to back out.\"\n\n\"I know how much you like to work outside. The lawn service will be cancelled next week and we'll consider that a trade off with the laundry. Everything else is 50/50. Shall we seal it with a kiss?\"\n\n\"No. Let's seal it with this.\" I had her over my shoulder and she was screaming and laughing, pounding my back as I carried her to the bedroom.\n\nWord got around at her company. Angie just grinned when the ex tried to warn her about me being a gold digger and put up pictures of us together on her desk and wall. Bimbo no. 2 was making hard hints about a ring, and he had his own problems so he let it go.\n\nAfter six months, we had our schedule down pat. I was more of a morning person, so I was usually the first up, getting the coffee going and maybe fixing a light breakfast. She usually did dinner. I mowed the grass and came to her with an idea, an idea I would pay for. In the end, we split the costs and I put in an outdoor kitchen and patio. Angie would get into sweats and help when she could, even when I told her she didn't have to. \n\n\"This is OUR home, and I will not be left out of any projects we do to improve it.\"\n\nt took almost three months, and we were inordinately proud when we finished. The little covered enclosure held a really nice gas grill, a charcoal grill, a four-burner gas range top built into the granite countertops, along with a small refrigerator and a deep sink. We could have easily have contracted it out, but that wasn't the point. The point was we did it together and it was a labor of love.\n\nWe'd have friends over from time to time, especially after we redid the outdoor area. Angie would sometimes entertain clients. I had to talk her into that.\n\n\"It's far more effective to invite them to your home instead of some sterile restaurant. It makes a connection on a more personal level. This is your home. You live here. You're showing them parts of you they normally would never get to see, and usually that alters their perception of you, often for the better. They'll relax and be far more open to any negotiation you enter into. DO NOT allow them to talk business while they're here unless it's in the most general of terms.\"\n\nHer business associates were impressed. It was pretty easy to see. They were used to dealing with her ex, and with him it was all business and sometimes included hard drinking and strip clubs. He offended one vendor so badly Angie had him come over so she could apologize and insisted he bring his wife. They were supposed to book a hotel, but she got hold of his wife and insisted they stay the night. It became a quarterly thing and he reciprocated, inviting us up every six months or so. That usually degenerated into shopping trips for the ladies and sporting events for us, but it was in good fun. We took them out on the boat once, and it impressed them so much they got their own.\n\nAngie invariably introduced me as her life partner. At first it was gratifying, but now it was starting to grate on my nerves.\n\nChapter 8\n\nAlmost a year after I moved in, I got to meet her son and his family. They lived on the other coast and she rarely got to see them. When he called and asked if he could come out, she was over the moon, cleaning until I made her stop.\n\n\"Do I need to disappear so you can spend quality time?\"\n\nShe slapped me. \"You're part of my life now. They know about you and I've sent them pictures. So no, just... no.\"\n\nHe looked a great deal like his mother, but I could see traces of his father in him, especially in some of his attitudes. Still, if he wasn't really friendly, he wasn't snarling at me.\n\nHis wife and children were a whole other matter. The little boy was nine and the little girl was seven. Heather was a California blond, a true beauty, and was as warm as fresh apple pie. When she and the kids saw the garden, they were excited because it was as close to real food as they'd ever come. Before I thought, I promised them a trip to the farmer's market Saturday.\n\nAngie had bought the house and three acres of undeveloped land at a time when there were no close neighbors. I'd wanted a garden, but the woman that ran the HOA saw me tilling and stormed across the yard, yelling for me to stop. She then proceeded to tell me how many association bylaws I'd violated and she was going to make sure we got fined.\n\nThe drawback to that plan was Angie and her property weren't in her development. It was already there and the development grew up on two sides of her. I just laughed and broke ground, making sure I was very neat. When I had the land prepped, Angie helped me put a white picket fence around it. You couldn't tell what it was from the street. She promptly took over the garden, telling me to go heavy on tomatoes, lettuces, and green beans.\n\nShe searched websites relentlessly and ordered enough to plant ten acres. I made her pick and choose based on footage available, and she immediately wanted to expand the garden.\n\nThe HOA President went on a screaming rant and threatened to tear the fence down. I just grinned and told her it might not be the best idea she ever had, so she decided to take me to court. \n\nAngie took the day off to be with me. The President pulled out charts, graphs, the bylaws, and pressed a fairly convincing argument. Then it was our turn. Angie showed the judge her property deed and when she read it, she laughed and rapped her gavel.\n\n\"Case dismissed!\"\n\nWe thought the woman was going to stroke out when the Judge explained to her since our property wasn't in her development, we were free to do whatever we wanted with it, within reasonable bounds. The Judge had to threaten her with a weekend in jail to shut her up.\n\nAngie had a wicked gleam in her eyes when she asked me to build her a scarecrow frame the next month. While I did that, she went shopping. When the scarecrow was done, it was dressed in the same clothes the HOA President favored, down to the big straw hat she liked to wear in the summertime. Maybe Angie slightly exaggerated how big her ass was. It took two bales of hay to stuff those stretch pants. She grinned. \"I read about a guy in a similar situation, and that's what he did. I couldn't think of a better way to thumb our noses at her.\"\n\nEvery time she drove by our house to get to hers, she saw it. The other owners had quite a laugh over it but made damn sure she didn't see them. She lost when her term was up, and the new guy is a lot more lenient with the owners. He even put it to a vote to allow small gardens in the back yard, if they were properly fenced. Suddenly we got to know our neighbors a lot better as they sought us out for advice.\n\nI'd gone a little overboard and had purchased a huge rear-tined tiller that had pretty much sat idle after I had prepped our ground, so I volunteered to help. Angie would come along and she would sit with the wives on the patio or in the airconditioned house while the husband and I struggled in the hot sun. Pretty soon they had a Facebook group to exchange tips and show the veggies they wanted to brag about. If they had more than they needed, they offered it to the group. Very little went to waste.\n\nHeather showed up Saturday without Jr. When I asked, she said he wanted to talk to his mother, alone. Something wasn't right.\n\nWe piled into her rental car because it already had the car seats in it. She seemed to really enjoy the market, although she didn't smile much. The kids ran themselves ragged trying to see everything. Besides offering fresh vegetables, there was a subgroup of artisans present. Potters, painters, jewelry makers, there was even a guy there who would compose a whole poem just for his customer for ten bucks and print it out on his laptop gear. I thought it foolish, but he told me he made two to three hundred a day; not bad for a starving literature major.\n\nThe kids ran into a face painter and practically begged to have it done. Heather hesitated, but I grinned and pointed at the kids. \"He's a lion and she's a tiger. Full face.\"\n\nI walked off and was talking to one of the artisans when Heather joined me with the kids. The elaborate face paintings made me smile.\n\nHe grinned. \"Does Angie know you're gallivantin' about with this hottie?\"\n\nHeather blushed and then gave one of her rare smiles. \"Mom knows, but if a girl can't trust her father -in-law, who can she trust?\"\n\nThat caught me off guard and I had to blink a couple of times. The kids were wanting some crystals, and she looked embarrassed but Bob grinned. \"Now you're about to learn how handy it is to have a loaded father-in-law. If he's true to type, he'll buy his grandkids anything they want.\"\n\nDamn this dust. I forgot how bad it got this time of year. Before Heather could object, Lynette had picked out a pair of earrings, small fairies holding a tiny sliver of crystal. Jeremiah got a necklace with a perfectly formed crystal. It was supposed to bring good luck and protection.\n\nLynette had heard what Bob said, and she wrapped her little arms around my knees. \"Thank you, Grandpa.\"\n\nJeremiah thought he was too old to hug, but he grinned. \"Thanks, Gramps.\"\n\nI had Lynette in my arms now and she seemed to be quite comfortable. Bob was showing Heather a ring, a crystal with wrought rings of gold around it to form a flower. I bought it for her without a thought, not recoiling at all when Bob told me how much I owed him.\n\n\"I can't take this!\"\n\nI grinned at her. \"I know you haven't been around us much, but it's not smart to piss off Grandfathers. It looks right on you. Bob told me it had been sitting in his case for a year, just waiting for the right finger to come along. Don't fight the magic.\"\n\nI still held Lynette, except now she was asleep. Heather locked on to a hand and Jeremiah took her other one as we walked. I was so proud I don't think my feet hit the ground until we got back to the car.\n\nThe kids went out before we made the highway. I let a few minutes go by before I started talking. \"I'm a pretty astute man, something you might want to bear in mind for the future, and I can tell something is wrong. Why don't you tell me what's happening so Angie and I can help you out?\"\n\nShe tried to protest but it died on her lips. Then she started talking. \"We're broke. It took every dime we had to get us here!\"\n\nI wondered what Jr. was telling Angie as she spilled her tale of woe. Jr. had been fired under less-than-ideal circumstances, and was having a hard time finding a position. They had always lived a high-end lifestyle and the money evaporated fast. It made him sound a lot like his father, but I let it pass. They lost their house, her leased car, and they had to take the kids out of private school.\n\n\"It killed him to his soul to come here, but we have no choice. We asked his father first, but thanks to his personal choices...\" she gave a snort of disgust, \"he couldn't. Mom is our last hope.\"\n\n\"You shouldn't worry too much about Angie. She isn't going to let her grandbabies go without. Neither am I, for that matter. What's he asking for?\"\n\n\"I have no idea. A short-term loan, I guess. Something to get us by until we can find work. He doesn't want me to have a job, but if I get one before he does it'll be tough tomatoes for him.\"\n\nI knew Angie. She would not let her child and his family starve. I also knew she wouldn't just blindly hand Jr. money, not if he was anywhere near like his dad. He'd get something, but there would be hooks in it.\n\nWhen I asked Heather how much cash they had, she blushed and wouldn't answer. I made her pull into the parking lot of a branch of the bank I did business with and pulled a thousand in cash out, giving her the envelope.\n\n\"Don't fuss, don't argue, just put it in your purse and use it as you see fit. And if you ever say the first word about paying me back, I will be deeply, deeply offended. You'll lose your favorite daughter-in-law status pretty quickly, you understand?\"\n\nI decided to drive to give her time to cry it out. She was composed by the time we got back to the house. Angie and Jr. were waiting in the living room. Lynette came charging in and jumped on her lap. \"Grandma! I'm a tiger! See what Grandpa got me? Aren't they cute?\"\n\nI saw him tighten up, but Angie just grinned as she cuddled the child. \"They're adorable! Grandpa has never gotten me something this nice.\"\n\nThat wasn't necessarily true if you counted the ring I had hidden in the garden shed. I just hadn't had the right opportunity to present it to her yet.\n\n\"It's because I'm the youngest and a girl. Grandpas are 'sposed to do stuff like that. That what Jenny says, anyway.\"\n\n\"Well then. Your friend Jenny seems to be very smart. Jeremiah, did you get anything?\"\n\nHe grinned and pulled the necklace out from under his tee shirt. \"Grandpa's friend said it was supposed to protect me from evil spirits. Mommy got something, too.\"\n\nShe hesitantly showed Angie the ring. She looked at me in surprise before tears leaked down her cheeks. \"From now on I'm going to have to watch your grandfather pretty close or you'll be swimming in bling. Lynnie, would you and Jere like to help me make cupcakes?\"\n\nSoon they each had a hand, dragging her to the kitchen. Jr. stared at me for a minute. \"You're not their grandfather!\"\n\nHeather gasped. I just looked at him calmly. \"No, I'm not, not by blood. Think that makes any difference to them? Does it hurt a child to think they there are more people out there who love them? Where's your father at, Benny? Is he too busy to see his only grandchildren, his testament to immortality? Do you have any idea how precious that is? Probably not, but you better learn.\"",
        "I kissed Heather on the cheek and walked out.\n\nChapter 9\n\nI went out to the garden shed and sharpened tools for forty minutes. My father had taught me early on that hoes, shovels, mattocks, they were all just like a knife. They were cutters, in this case, soil. If they had a sharp edge, they did their job better. After I finished, I started on the pruners and by the time I was done you could have cut hair with them.\n\nThere was a little knock and Heather asked if she could come in. I just nodded and she stood uncertainly. \"Please don't hold it against him. He's facing the worst failure a man can, the inability to provide for his family.\"\n\n\"I understand that, honey, but that especially means you don't snap at the hand that's trying to help. His father made poor choices in life. That's not Jr.'s fault. It's his fault. His shining bright future with a woman of exceptional quality disappeared one day between the legs of a slut, and he'll never get it back. He needs to make peace with his choices and try not to repeat them a second time.\n\n\"His son also needs to make some choices. Angie has told me many times how much she misses you guys, especially her grandchildren. Heather, she will take care of her family, I know her well enough for that. But I also know she won't just blindly give him money and hope for the best. She's wanted you to live here for years, and this is her chance. I'll bet you as sure as that ring on your finger that she offers him a job. He's her heir. Not me. I've already told her I wanted no part of her company. It's not mine to direct.\n\n\"Changing the subject, where are you staying?\"\n\n\"We're at the Marriot, for the night. After that I have no idea.\"\n\n\"I think I may, but I have to talk to your mother-in-law first. Come on, it's getting close to dinner time and I'm pretty sure Jeremiah doesn't like missing meals.\"\n\nShe gave me a big hug. \"I wish they WERE your grandchildren. I'd sleep a lot better at night.\"\n\nI looked at the kitchen, noticing the debris from letting small children try their hands at baking, and made a decision. \"Tonight, we grill.\"\n\nI asked Heather what their favorite foods were, and sent her in my car to the market. Junior went with her. I wondered what kind of conversation they were going to have. Angie had put the kids down for a nap after getting them cleaned up and we took advantage to spruce up the kitchen.\n\n\"Was it fun?\"\n\nHer face glowed. \"I wished I had filmed it. Heather helped until she went looking for you. Junior went to see his father for a bit.\"\n\nHer tears leaked down. \"I wish we could keep them. Lynette is a big fan, honey. She told me Grandpa Reggie was going to cook the corn you picked up for her tonight. Do you mind them calling you Grandpa?\"\n\n\"About as much as I hate it when you call me honey. Gee, how disgusting!\"\n\nShe giggled. \"Uh-huh. Maybe I need to call you something else. How's sweetie sound?\"\n\n\"Ugh. Stick to honey.\"\n\n\"All right,\" she said, just before she wrapped herself around me. We were in the middle of a serious kiss when we heard the giggles. Lynnie had woken up. Before she could move, I snatched her up and we both showered her with kisses for a minute.\n\n\"Grandpa, are we going to cook the corn?\"\n\n\"Yes, we are. Come with me.\"\n\nI had put the ears of corn in ice water earlier, and they were ready. I stood Lynnie on a big chair behind the prep table, and showed her how to pull the shucks back enough to put the butter inside, then close them tightly. I tied them snugly with fire-proof ties and they were ready. By then, Jere was up and helping. Their mom came in and they rushed her, wanting to know if she had got their favorites, hot dogs and burgers. She had indeed, as well as steaks, chops, and a few chicken breasts. Jere helped me rub the chicken thoroughly and wrap it in foil. Mom rubbed the steaks and chops, letting them rest and get up to room temperature.\n\nAngie nabbed her after that to help with the sides: coleslaw. big fat steak fries, and sliced zucchini that had been marinated, ready to hit the grill. The cupcakes sat proudly on display, our dessert for the evening. Junior had opted to stay with his father, and I think Heather was relieved about it.\n\nI grilled enough for three big meals, knowing they would want a little bit of everything. Lynnie ate three bites of chicken, three bites of steak, a few fries, and a whole ear of corn, giggling as she removed the charred husks. Jere managed a hot dog and half a chop and steak, skipping everything else except for an ear of corn.\n\nThen we had to have a cupcake. Lynnie brought one to me, so proud she was about to burst. The icing was about two inches tall. \"I made this one for you, Grandpa.\"\n\nShe was beaming with pride as I kissed her cheek. \"Thank you, baby. It looks great.\"\n\nShe watched anxiously until I ate every bite.\n\nThey actually looked happy when Heather told them they would all be spending the night and baths were drawn. After they were in their pajamas, I held Lynnie while Angie held Jere, gently rocking him until he was asleep. They roused when we put them in their beds and insisted that we take turns reading them a story. Angie had a death grip on my hand the whole time, looking like she was going to explode from simple happiness.\n\nHeather was in the living room with a glass of wine. \"Thank you. You don't know what it's like to get a chance to relax.\"\n\n\"I remember,\" Angie said. \"Jr. was a hyperactive child and demanded a lot of attention. Well, as long as you're here you have built in babysitters. You may get tired of having to come over and rescue them.\"\n\n\"That might take a while, and I'd love to get to that point. It all depends on your son.\"\n\nAngie sat beside her and gave her a cuddle. \"I know, honey. I'm working on it.\"\n\nThat night as we lay in bed, we had a pretty intense conversation. \"You know their situation?\" I asked.\n\n\"Most of it. I got so angry when I found out. They should have come home then. We would have taken care of them.\"\n\n\"I think your son has as much misplaced pride as your ex. What did you talk about while I had Heather and the kids?\"\n\n\"He has this get rich scheme he wants me to invest in. One million! I have money, I have that kind of money, but it isn't just laying around and even if it was, I wouldn't let go of it until I investigated. I told him to let me look into it before I committed and he got angry. They're broke, this is their last night in that hotel. They can come here, but he hates that idea.\"\n\n\"Mind if I offer you a solution?\"\n\n\"I'm all ears.\"\n\n\"The tenants in my house moved out last week. I knew it was only going to be six months, but they checked out and the only reason they needed a house was to have some place to live while theirs got finished. Let them live there rent free. It will give them some privacy while they come to grips with their situation. Maybe we can find Heather something to do while he gets his head right.\"\n\n\"I love you!\"\n\nIt came out with force and it made me smile. It was like pulling teeth sometimes getting her to say it. Every time I got close to talking about marriage, she would put me off, citing the age difference. It really started getting on my nerves, and one day she said it one time too many. \n\n\"But honey, I'm seven years ol...\"\n\nI snapped. Before she knew it, I had her over my lap. I took a minute to admire her well-shaped ass before my hand came down. She was writhing and raising all kind of hell.\n\n\"Ow! Damn it, that hurts. Who do you...\"\n\nHer words stopped as she shrieked and I'm kind of embarrassed that I took quite a bit of frustration out on her bottom. Still, I only paddled her exactly seven times, something I reminded her off as she slid to the floor whimpering. \"That's gonna happen every time you bring that up, you hear me? And I'm gonna add a stroke every time. Get your head out of your ass and come to grips with the fact that I don't give a flying fuck how old you are. You're the one I chose. Maybe this is your way of telling me we're not going to last. if that's the case I might as well leave now.\"\n\nShe was still on the sofa snuffling when I went by with the suitcase. Her eyes got wide and I had a feeling she hadn't believed me. \"Honey, wait. We...\"\n\n\"I'll call you, but not for a while. Give me a little breathing room while I decide whether I'm wasting my time or not.\"\n\nShe was begging when I went out the door.\n\nI was third owner of a construction company, and one of the field managers if there was an emergency. I decided there was an emergency and spent a week out of town, getting an office complex off the ground. The unions were giving us a hard time and some of the suppliers were bending to their 'suggestion' that our materials become a little scarce.\n\nI was not in the mood, so I called all our company employees off the job and sent them to other projects. Two days later a realty sign went up in front of the property, shocking everyone. The unions threatened, but I was within my rights and told the papers and local television stations the truth, backing it up with facts and figures.\n\nThe unions suddenly started getting pressure from members who didn't have a job to go to, and the politicians were making noises about permits and investigations. The suppliers had a heart attack when I canceled almost two million dollars' worth of orders.\n\n\"We have a contract!\"\n\n\"You do indeed. And in the fine print of that contract, it states if you're late on deliveries over three times in a month, we are free to find other suppliers. Y'all have a good day.\"\n\nEverybody tried to make me out to be the bad guy, but the public wasn't fooled. A month later we were back with more favorable contracts from the suppliers, and the unions were a lot more flexible in making sure they met their new goals. Both my partners thought I was a genius, but I was just pissed and needed someone to take it out on.\n\nNine days after I'd left, I walked out of the trailer that housed the construction office to see Angie, sitting in her Mercedes. She looked scared to death, but determined. As I approached her, she got out and I think both our hearts were in our throats. When she got to me, she stood, trying to talk, before letting out a small scream and jumping into my arms, trying to kiss me and talk at the same time. I finally gave up and carried her into the office. I looked at the engineers and production assistants, and they all suddenly had an urge for coffee at the diner next door. I locked up behind them. \n\n\"I'm sorry I spanked you. There was a lot of frustration built up and I just kind of snapped. I'm asking you, if we stay together, that you just stop. By now I hope you know how little that number means to me.\"\n\nShe unconsciously rubbed her bottom. \"I think I finally got it. I forgive you, as long as you never do it again.\"\n\n\"All I'll promise is that you get dangerously close to saying it again I'll remind you how it ended the last time.\"\n\n\"Fair enough. Now come home. You need to kiss this butt seven times, for every time you hurt it. Good kisses, not little pecks. You do that, and I may let you kiss other places.\"\n\nI couldn't help but grin. I liked kissing her butt, as well as the rest of her body. \"I'll make it a two for one, to apologize for my transgression.\"\n\nWe sat and talked, and kissed, until the crew got brave enough to come back. I looked at my assistant. \"You're on your own for the rest of the project, Mark. You've shown promise, so consider this a test. If you do well, we can always use another project manager. And Mark, no shit from anyone, understand? They'll test you, hard. Stomp on it as hard as you can the first instance and absolutely refuse to back down, got it? Good. See you at the home office.\"\n\nHe came in a week ahead of schedule and 20,000 under budget. He had ten of our people involved, and I told him to give everyone a thousand as a bonus, and to make sure he was the one to hand them the money. I gave him three.\n\nAngie and I had gradually gotten back to where we were, but I wasn't as happy as I should have been. The fact that she shied from discussing marriage really bothered me. If she wanted to wait, that was fine, as long as I could see a happy ending. I remembered my first marriage, before the bad stuff, and realized I liked being married, of having a pledge and document to prove to the world we were as one.\n\nNow her son was there and she was really tense.\n\nChapter 10\n\nTwo weeks later, she gave her son the bad news. She had checked his opportunity out, and it appeared to be little more than a Ponzi scheme.\n\nAngie insisted he go to work for her in the short term, just to generate a little money. He resisted at first, until Heather lost patience and got a job of her own. She went to work for a construction company as a general office assistant. The pay was better than average, and it wasn't because of who she was. It was because my partners and I decided early on to recruit the best and pay them accordingly. Sarah was in charge of all office functions, and one of the first things she did was to pitch a daycare for our employees, free of charge.\n\n\"You're guys, and you have no idea what a strain childcare costs can be, especially to a single mother. We do this, and we'll have employees for life.\" She was a single mother herself. and her part of the startup was covered by an inheritance from her grandmother. David and I had been talking about going out on our own, but it was mostly talk. She was office manager for our old firm and she basically got us off our asses and into business. We were so grateful we named the business SDR Construction, for Sarah, David, and Reggie. David was an engineer, and I was the construction end. We had very good personal reputations and some of our corporate customers weren't happy with management, so they gave us a chance. In ten years. we were a multimillion-dollar construction company known for excellent quality at a reasonable cost.\n\nOur old company was so pissed when we left and cherry picked a few to come with us they threatened legal action. Our lawyer told us they might try something like that while he worked out all the paperwork, and to tell them to kiss our collective asses. We let Sarah tell them, because she had had to put up with a lot of shit and office politics during her years there. She said it was one of the best times she'd ever had in her life.\n\nIf I got there before Heather, she was required to bring the kids by before they went to daycare. I got hugs and kisses and really liked the idea of starting out the day that way. Heather always kissed my cheek. A month later I came in and noticed that everyone was grinning at me. On my desk was a huge mug with the pictures of Lynnie and Jeremiah on the side. The other side said, \"Best Grandfather Ever!\"\n\nThe one that got me hardest was the smaller one beside it, with a picture of Heather and the words \"Best Father-In-Law Ever!\" I put them on a shelf where they would be the first thing I saw every morning, right beside the picture of Angie and me.\n\nHeather was called into Sarah's office and told her position had changed. She would now be running errands for the company, she had to have good transportation and she was to pick out a suitable SUV to make sure it could hold everything. After she got done crying, she made me go with her to the Ford dealership, where she picked the same model I drove, a four-door sports model with a small truck bed. Angie just grinned while she went on about it.\n\nThe closer I got to Heather and the kids, the more distant her husband became. Ben Sr. came to see me one day, apparently to threaten me. \"Stay away from my grandchildren! They're not yours.\"\n\nI think I made him nervous when I grinned. \"Have you told them that yet? Oh yeah, to do that you would actually have to spend time with them, wouldn't you? How much time have you spent with them since they've been here? Have you taken them anywhere or hung out at home just to watch them play? According to them you haven't, and whether I stay on the scene or not, you need to change that. If you want them in your life the best way to accomplish that is to include them in your life.\"\n\nThe aggression went out of him like air from a balloon. \"KayCee doesn't care for them much.\"\n\n\"Then you need to make a choice. Bimbo Barbie, or your grandchildren. That ought to be a no-brainer but I don't know your priorities. Just to be clear, I'll stay out of their lives if Angie or the children's parents say so, but I don't think that's likely. Now if you'll excuse me, I have a play set to put together. Wanna help?\"\n\nI must have made an impression because he followed me to the house. You could have knocked Angie and Heather over with a feather when he got out and the kids swarmed both of us. It was a pretty elaborate set, but I was a construction company owner and once Benny caught on, he wasn't half bad. An hour later he was pushing Jeremiah while I pushed Lynnie.\n\nThe ladies took over and we had a beer while we watched. He had tears in his eyes. \"I've made so many stupid choices in my life.\"\n\n\"From what I hear I have to agree with you. We don't know each other that well, but today has cast you in a different light. The thing about stupid choices is that eventually we learn from them. So, wanna come to our weekly cookout Sunday?\"\n\nHeather had taken a lot of pictures and they hit her Facebook page later that evening. It showed Benny and I tightening bolts while the kids waited anxiously. Some of the last were of us each pushing a child and had a caption. \"Grandpas Rule!\"\n\nAngie was all over me after everyone left. \"You are gonna get some really good loving tonight! How did you do it?\"\n\n\"I didn't do anything unusual. Honey, you know by now if something needs said I don't hesitate much. He deserves to be in their lives if he can. I know it would break my heart if I lost them.\"\n\nDamn it, then she started crying and almost ruined the mood. Luckily, she had recovered by bedtime.\n\nChapter 11\n\nA sort of truce existed between us and Benny. He'd come over about every other Sunday for grilling. Sometime he helped, but mostly he played with the kids.\n\nBubblegum Barbie saw him slipping away and issued an ultimatum, but he didn't respond very well. She moved out of the townhouse within two weeks. She got to take all her clothes and jewelry, but had a meltdown when he told her she couldn't have the sports car he'd leased for her. He finally told her when she wouldn't shut up about it, she could have it, and the 27 payments left on the lease.\n\nHeather was happy and enjoying her job. They treated her like any other employee, even if their father-in-law was one of the owners. That only happened a very few times, early on, and she dealt with it. After that, everyone bitched at her just like the other worker drones, and she just smiled and shoveled it back at them.\n\nI looked at my life and realized there were only two things that would make it perfect. One would be the day Angie and I walked down the aisle. The other would be when Junior finally settled down and accepted his life. For some reason, he decided all his troubles were directly tied to me.\n\nAngie and I had some tense discussions about the way he tried to treat me, and when Heather tried talking to him about it things went downhill. It developed into a full-on, don't hold anything back discourse with the upshot being if he didn't like his life here, he had two options. Make it better through his own efforts, or leave, but she and the kids were staying.\n\nHe rode his dad's couch for a few nights before he got tired of it and threw him out, telling him to man up and go back to his family.\n\nHe did go home, but he was surly and snapped at his kids quite a bit. Heather was just about at the end of her rope and suddenly it got worse. Angie fired him. It almost killed her and she spent quite a few nights clinging to me while she cried herself to sleep.",
        "She had started to trust him and he was doing a lot better at the position she'd given him, but he still harbored resentment and wanted to move back to California. Heather was not really receptive to the idea. \"Why would we do that? I've had to uproot this family once and start over. I don't care to ever do it again.\"\n\nShe sighed. \"You need to think about this. You're making more right now than your best year in California, and unless you've devolved into a screaming idiot, surely you understand both your parents are hoping you'll take over the business in a few years. I've got a job I really love, we don't have a house payment, we don't have car payments, basically all we have are living expenses, and we're living pretty well. The most important thing, though, is the children. They absolutely love it here; they adore your mother and think both grandfathers could change the world if they wanted to. Think about how they would feel if we up and left.\"\n\n\"They've only got one Grandfather! The other guy is just a loser Mom's shacked up with.\"\n\nHeather slapped him. Hard. \"Don't you ever say that in front of me again, not in this lifetime. In case you haven't noticed, we're living cost free in the 'loser's' house, I'm driving a car that he got for me, and if I picked up the phone and said 'I need' whatever it was would be here in no time. Lynette told me the other day she was going to build houses when she grew up, just like her grandpa. I think Jeremiah is going to be the next business magnate; he loves to go to the office with Grandpa Benny. We've got a very bright future here, honey.\"\n\nHe brooded on that for a few days and then used his job to tap into the company funds and 'borrowed' two hundred grand to invest in the scheme he'd wanted to, all along. The plan was to jump in, make a killing, jump back out and replace the money, and let the profits ride until he had enough to return to California in style. It failed when there were no profits and the scheme fizzled out, leaving a lot of investors holding the bag. The accountants caught it three weeks later.\n\nAngie fainted when she found out, and her assistant called me and Ben. They called the EMT's and they took her to the hospital for observation. We met at the ER, the doctor told us she was being treated for severe shock and they wanted to keep her overnight. Ben and I walked the floor for four hours and he only went home when his new girlfriend came and got him. She was still a younger model, but only by about eight years. She wouldn't let him by with much, kept him on the straight and narrow, and the grandkids loved her. He wouldn't admit it yet, but he was so in love with her he couldn't see straight. He told me one day as we were manning the grill, while Angie and Vicky watched the kids in our new pool, that he was tired of condo living and was looking for a house. Vicky was actively helping him, just for a woman's opinion, he explained. What he was really saying was he that he'd buy the one she picked out.\n\nI had the stray thought he would actually be married before I was, and it made me feel bad. I never left the hospital, sleeping in a chair by her bed. She woke up about three and I spent another two hours holding her while she cried before the day shift came in and gave her another sedative.\n\nShe got discharged that afternoon and Heather was there to take her home. When they wheeled her out, Heather noted how frail she looked and burst into tears. I ended up driving while they sat in the back hugged up to each other.\n\nWe got her settled in at the house and Heather told me what was happening in her world. \"He's gone, Dad. I came home and the bedroom was wrecked. He'd packed as many clothes as he could and disappeared. I don't know if he's coming back.\"\n\nShe'd started calling Angie Mom after six months. Her parents had retired to Portugal and if she was lucky, she got to see them every four years, so we became Mom and Dad, the ones she could go to with a problem. She grinned when she called me Dad for the first time. \"I call Angie Mom, and you're the best father figure I ever had, so unless you object, it's Dad.\"\n\nI had no objections. \n\nChapter 12\n\nHeather checked the bank accounts and he had emptied them. There had been a pretty nice figure in the savings. She told me once that sooner or later I would probably kick them out and they needed a fallback plan. Angie clued me in that what they were really doing was saving up enough for a down payment for a house that I would be building for them on an acre of her land.\n\nHeather was beyond angry and she spent most of a week with us. The kids loved it, but eventually they wanted to go home.\n\nAfter two weeks, Angie had gotten angry enough to activate the GPS on his car: a car that belonged to her company. According to what the app showed, he was in a little town in Texas. Ben and I flew down to get him.\n\nWe found him in a little hole in the wall bar, holding court with the barflies about what a great businessman he was. As long as he was buyin' they were agreein'.\n\nBen tapped him on the shoulder. \"Son, it's time to come home.\"\n\nHe twirled around on the bar stool; eyes wide. Then he saw me. \"Come to gloat, asshole? You took my family away from me, you bastard! I Just about puked every time Heather says 'Reggie did this' or 'You have to see what Reggie got the kids.'\"\n\nThen he turned to his dad. \"And you! You just stood by and let him take it all! What kind of man are you?\"\n\nBenny gave him a long look. \"Know what Reggie took away from me? Not a damn thing! Everything I had, I threw away long before I ever heard his name. It took me a while to get my head out of my ass, but I have. I'm actually closer to your mother now than I was when we were married. She's a friend now, and for a long time I didn't have any friends.\n\n\"But you know what? This isn't about Reggie, or your mother, or even me. It's about you and what you've done. Now man up, get your ass off that stool, and come home to face the music!\"\n\nI didn't see it coming or I would have reacted. He jumped off the barstool and plowed his dad, right in the face. He went down, out like a light. He stood there grinning, weaving slightly. \"Want some of this, old man?\"\n\nI grinned. \"Why yes, as a matter of fact I do.\"\n\nI'd like to say it was an epic struggle and we fought up and down the bar until we stumbled outside to continue, but it wasn't to be. Jr. knew diddly about fighting. I did. My father was an amateur champion when he boxed Golden Gloves as a teenager, and was on the elite boxing team while he was in the Navy. The military taught him a whole new perspective about fighting, and he passed it on to me. I didn't box, but I wrestled in college, and he made it a point to train me, just in case. It stood me in good stead during my early construction days. Sometimes you just can't reason with a guy. Sometimes you just had to make a point.\n\nWith Junior, I felt like I needed to make a point. He swung a clumsy right cross, and I grabbed his arm as it went by, yanking and throwing my hip out. It sent him sailing across the floor. He had grit, so he got up and charged again. Again, I evaded him, using his momentum to slam his face into the bar. I could have done this all day, but a deputy tapped me on the shoulder.\n\n\"You can stop now. We'll take it from here.\"\n\nThe bartender had called when he knocked his father out. Another deputy pulled Jr. up across the bar to get the cuffs on while the EMT's checked on Benny. He'd taken a pretty good lick and was sent to the local hospital for concussion evaluation. We didn't have to press charges. The bartender and the cops were happy to do it for us. Disturbing the peace, damage to personal property (technically that was on me; when I threw him across the room he landed on a chair and it collapsed under him), two counts of assault, and one count of assault on a law enforcement official, when he kicked the deputy cuffing him. She put her baton between his legs and tapped. He instantly became much more cooperative. His bond was set at $25,000 and neither Benny or I were inclined to post it.\n\nHe spent three weeks in jail before he had his first hearing. On the advice of the public defender, he pled guilty to lesser charges, was found guilty, sentenced to a year, and let out for time served and probation. He also had to pay damages to the bartender for the chair and a five thousand dollar fine.\n\nAngie flew down and paid it, on the condition that the state allowed him to serve his probation at home. This basically trapped him, which didn't help his attitude. Three weeks after he got home, Heather asked him to leave.\n\n\"You're not the man I married anymore. Why aren't you happy? You had it all and you were too stupid to appreciate it.\"\n\nThey were at home and the kids were with us. He drew back to hit her and she laughed in his face. \"Go ahead, but as soon as you stop swinging, you'd better start running. Dad will come after you if he has to track you to the ends of the earth, and I'd would love to be there when he finds you.\"\n\nHe was gone in three hours, but was back two days later because Angie called and told him if his ass wasn't back by the time he was supposed to check in with his parole officer, then he was on his own.\n\nBenny had found a house by then and he let him live in his condo until the sale went through. Heather wasn't kidding around, and when she hit him with divorce papers and filed for temporary child support, he flipped out. Angie had made it clear he could no longer work at the company, and he was unemployed. If he didn't get a job soon, he'd violate his probation terms.\n\nI thought about the whole situation as Heather cried on my shoulder and Angie petted her from the other side. Angie had been depressed for almost two months, Heather's nerves were raw, and even the children were starting to feel the strain. It made them lock down on all of us even more.\n\nAfter we had Heather in bed, I told Angie I needed to go out. \n\n\"Out? Now? It's kind of late.\"\n\n\"This won't take long. You better not have all the covers wrapped around you when I get back.\" Angie was a notorious blanket hog. Many times, I'd awakened uncovered and she'd be wrapped up like a cocoon. I tried several times and took to keeping a spare blanket by the bed. She would always apologize the next morning, but it was hard for her to keep a smile off her face. \n\n\"Shall I get the heating pad? I won't be gone long, and I'll snuggle you until you're purring like a kitten when I get back.\"\n\nShe just kissed me and rolled over, asleep before I had the car in drive.\n\nI drove straight over to Benny's condo and beat on the door. Junior opened it a crack, saw me, and tried to slam it. I kicked it open so hard it sent him sprawling. I shut the door and took a chair while he tried to get up.\n\n\"If you wanna swing, swing. There's no one here to save you and I'll stomp your ass into mush and enjoy the hell out of it.\"\n\n\"I'll call the cops!\"\n\n\"Try. I'll be on you before you can hit 9. We're going to have a little discussion about your future. Let's do a little recapping first. You went broke in California and moved back home. Your mother was over the moon, already planning her retirement in a few years and gave you a pretty responsible position. We gave you a place to live, vehicles to drive, and watched the kids as often as you would let us. You should have thought you'd died and gone to heaven. Heather said it was the happiest time of her marriage.\n\n\"You literally fell into the flames and discovered you were fireproof. Was that enough for you? Fuck no, it wasn't, so you stole from your parents and got into some harebrained scheme to prove you were smarter than the rest of us, when in fact you were the dumbest son of a bitch on the East Coast. You threw away a successful company worth more than you could ever accumulate in your lifetime. It looks like you've given up on a woman worth three of anyone else you can find and two really great kids. That sum it up?\n\n\"So then, having said that, what is it you want, Jr.? What's it gonna take to make you happy? The misery of everyone around you? If that's your goal, you're doing pretty well. This is a one-time offer, refuse and I'll walk away. Just so you know, a woman like Heather won't be single for very long, even with two kids. Some good man will realize what a prize she is and make it his lifelong ambition to get her to love him. \n\n\"Maybe you want to go to jail. That would be a real eye opener for you. I'll clue you in, boy, you're a pussy, and there is nothing lifers like more than fresh pussy.\"\n\nI was on a roll, letting go of things I'd held in because of my love for his family, but now it was time for the gloves to come off. I was up pacing by then while he sat on the sofa and cringed. Finally, I stopped in front of him. \"Well, what are you gonna do? You gonna man up, or prove you really are a bitch?\"\n\nWell, damn, he started crying. I thought it was entertaining and sat while he cried it out. \"I got no job, and no one in this area would touch me with a ten-foot pole. I can't leave the state or I violate probation, if I don't get a job soon, I violate, if I even get a traffic ticket I violate. I'll never get my family back, my parents despise me, and you must be enjoying the hell out of it.\"\n\nI slapped him. Really hard. \"Done with the pity party? I'm going to do something for you even though it grits my teeth. Rest assured I'm not really doing it for you, I'm doing it for the family I love.\"\n\nI threw one of my business cards down. \"You be at that address Monday at eight. If you're not, I wash my hands of you. Don't wear a suit. It may be a long time before you need one, if ever. Wear tough jeans, good boots and a work shirt. You just went into the construction business. You'll work your ass off and you won't complain, whine or cry. You'll man up and do what you're told. I'll know if you don't.\"\n\nI walked to the door. \"By the way, 25% of your pay will be deducted weekly and sent to Heather. You still have children to support and if you have any hope of winning your family back, that's a good place to start.\"\n\nI wondered as I drove home if anything I said connected. We'd see Monday. I grinned when I saw Angie wrapped like a mummy. I told her once she must have been a lizard in a past life, because I'd never met anyone so coldblooded. She just grinned.\n\n\"Lizards like to lie on warn rocks, I understand that, I like to lie cuddled up to a man who'll keep me warm.\"\n\nChapter 13\n\nNo one was more surprised than I was to see him in the office Monday. I assigned him to a crew working locally and told the supervisor and leads not to coddle him, but to take it easy on him. \"Give him a chance. He has a lot riding on this job.\"\n\nI found out later he went home and cried the first day because his body ached so badly. He could barely function the next day, but he showed up. A month later, his body had adjusted and he had real muscles for the first time in his life. They tried him on every job and he seemed to have a real aptitude for hanging and finishing sheetrock. I'd see him from my office sometimes as he got out of a work truck, looking like a ghost from being covered with sheetrock dust.\n\nHeather had moved to payroll so she saw his name, and his first check. Then the support hit her account. She charged into my office. \"This your doing, Dad?\"\n\n\"Somebody had to give him a job, and I didn't want you to have to take the kids to the county jail to visit. I paid him a visit and asked politely.\"\n\n\"I bet. More likely you beat the hell out of him and made him show up.\"\n\n\"I did no such thing!\"\n\n\"If you didn't, it was because he was more afraid of you than I thought. Think he'll last?\"\n\n\"Time will tell, baby girl. Now go get the kids out of daycare so I can get my goodbye kisses.\"\n\n\"Only if the big girl gets to kiss him first.\"\n\nThey would pass each other in the hallways from time to time, and they barely spoke. Then one day he begged her to let him have lunch with his children on the picnic tables outside the day care. She almost didn't, giving him a pretty strict lecture about how to behave. She decided to eat with them, just to be sure.\n\nThey were doing good until Lynnie crawled into his lap and showed him the little hard hat I'd gotten her. \"Look, Daddy, I got a hard hat, too. We're both going to be builders, just like Grandpa.\"\n\nFat tears coursed down his cheeks as he hugged her, then Jeremiah, turning and thanking Heather in a choked voice for being so kind to him. A few tears trickled down her cheeks, as well.\n\nHe made it a point if he was working locally to stop by for lunch as often as possible. He always asked Heather to eat with them if she had time. She made time.\n\nHe left his father's townhouse and got a little studio apartment close to the office. I let him drive one of the company trucks for transportation, and he was very careful to drive it only when necessary. It was a four-door model, so he could take the kids when Heather would let him.\n\nSix months went by and Heather came into my office and shut the door. \"Daddy, can I talk to you for a minute?\"\n\n\"Sure, hon. What's on your mind?\"\n\n\"Benny.\"\n\nI knew she meant her Benny, so I nodded. \"We've been talking a lot lately. He comes by the house at least twice a week to have dinner with us. He's changing, I can see it happening. I need to ask a favor. He really wants to talk to his parents; can I bring him Sunday?\"\n\nHis parents had written him off. Angie didn't know I had given him a job, and I made sure not to bring it up in conversation. I'd warned Heather, and she just said in passing that he'd gotten a new job and was paying support for the kids.\n\n\"Let me talk to your mother first. I will not ambush her. I'll see which way the winds blow and get back to you.\"\n\nChapter 14\n\nAngie and Ben weren't keen on the idea, but they agreed to try for Heather and the kids. He came by, looking scared to death. The kids were all over him, showing him the new pool complete with waterslide and talking a mile a minute. We left them alone and after the meal he asked his parents if he could talk to them. I gathered the kids and Heather and we went out for ice cream, back in forty-five minutes.\n\nHe had left. Angie had tears in her eyes and Ben looked a little troubled. \"He apologized and I think he meant it. He swore he would pay us back, but we told him if that's really how he felt to pay it forward to the babies. We made it clear we could never let him work for us again, or at least until enough years had gone by to make us think him reliable. He said he didn't expect that much forgiveness and he'd never let us down again. I hope he's sincere.\"\n\nAngie surprised me by being a bit more forceful. \"I listened to him, then told him words were easy. He wants our forgiveness, our respect? Then he needs to start earning it, both with us and to his family. Benny has a lot of failures to overcome, and I hope he mans up and does it.\"\n\nLater, while we were cuddled in bed, she surprised me with a few more tidbits. \"He had nothing to say about you but good things. You've really made an impression on him and you may be his role model right now. Then to my surprise, he gave ME advice.\"\n\n\"He told me I needed to get your ring on my finger and quit stalling. If I was that afraid of permanent commitment maybe I should let you go so you could find somebody else.\"\n\n\"I'm starting to like that boy.\"\n\nShe poked me. \"Shut up! This is serious!\"\n\n\"Yes, it is, and while we're on the subject, do you ever intend to marry me?\"\n\nShe froze up and I sighed, turning my back to her. A few seconds later she snuggled up to me. \"Honey, I've been so scared. You couldn't prove it now, but back when Ben was Junior's age, he was a lot like him. I put up with things that I shouldn't have for years. I still sometimes have nightmares about what kind of person I was back then. I swore it would never happen again, that I would never again allow a man that much power over me.\"",
        "I would have gotten up but she clung to me tightly. \"I'll leave tomorrow.\"\n\nI never saw the slap coming, but it was a doozy. Lights flashed and my jaw stung. \"You will not! What I'm trying to tell you is that I've changed. You have more power over me right now than anyone in my whole life. Your smile, your touch, the way you light up when you've done something special for me and see I like it, the way you almost glow when Heather brings the kids by, I've started living for that. So then, in the clumsiest way ever, I'm telling you if you asked a certain question, you might like the answer this time.\"\n\nI could see her holding her breath in her mind and I shrugged. \"Let me think about it. I'll get back to you tomorrow, Monday at the latest.\"\n\nShe went rigid and I heard her deep breath. I rolled back over as quickly as I could and smothered her with kisses. When I let her up for breath, I jumped out of bed. \"Stay right here!\"\n\nIt's a good thing Heather and the kids weren't there or they might have seen me by the light of the full moon as I streaked by the window naked. I charged into the garden shed and fumbled around until I found the box behind a bag of bone meal. I knew if I hid it there, she would never find it. Angie was scared to death of spiders, saw a writing spider on the wall once, and wouldn't set foot in the building again unless I was with her.\n\nShe was up, sitting in bed with her knees up and her arms wrapped around them. She looked like a teen, not like a woman with two grandchildren.\n\nI slid up to the bed and jumped her, rolling her in the covers. Then I kissed her until she calmed down. \"Honey, I have something for you. There's a secret word you have to say to get it. Would you like to see it?\"\n\nShe nodded and I grinned, showing her the box and opening it. I knew she would never have picked that particular ring out, but I thought it was perfect and she wasn't paying for it anyway. Her eyes got huge and she tried to get out from under the covers. \n\n\"You don't want it? I thought you would like it. I can always take it back.\"\n\nBy then she had her left hand out and was thumping on my chest. \"Give it to me!\"\n\n\"No, no, you haven't said the magic word. Wanna try again?\"\n\n\"You suck at this! Yes. All right? Yes, with all my heart I'm ready to be Mrs. Reginald Wilkes. That being said, I believe you have something that belongs to me, something that I will cherish for the rest of my days. Now give!\"\n\nI made her kiss me first, then I gently slid the symbol of my love on her dainty little finger. She sighed. Then she held me and cried. I held her and cried. When we were done crying, we started kissing. After about five minutes of that she jumped out of bed and grabbed her phone. \"I need to call Heather! And Vicky, Barb, Alice, and...\"\n\nI eased the phone out of her hands. \"You can't.\"\n\n\"Why?\"\n\n\"Because it's 1:30 in the morning. They will all be thrilled to find out, but not as much as you'd think if you called them now. Let's go back to bed.\"\n\nThis time she was the one that knocked me to the bed. I laughed. \"State GILF Of The Year, two years running and still undefeated!\" It went through my mind as she grabbed me. By then, I was 48 and she was 54 (She was only 6 &1/2 years older, she sometimes reminded me), but you would have thought there were two teenagers in bed that night. We didn't wake up until nine, when Heather came by.\n\nAngie stumbled out of bed, yanked the door open and instead of talking she just stuck her hand in Heather's face. Then Heather screamed, which triggered Angie so I got up and made coffee. I was halfway through making breakfast before they calmed down enough for coherent conversation. As soon as they ate, their phones came out. I beat a hasty retreat, called Ben, and we took the boat out.\n\nI told him about the night before as we fished off the platform designed just for that, and after he reeled in a bass he grinned and held his hand out. \"Congratulations, you won a hell of a woman. However, if you ever treat her the way I did, well, I can't kick your ass but I'm a damn good shot.\"\n\n\"Keep your guns in the safe. I think I can handle it.\"\n\nHe called from the boat to wish her the best. He hung up laughing. \"I'm to be your best man, Heather and Vicky will be bridesmaids, and while they're a little old for it, Jere and Lynnie will be the ringbearer and flower girl. Think you can get away with moving out until after the wedding?\"\n\n\"I'll grit my teeth and deal with it.\"\n\nChapter 15\n\nSixteen years later, Angie and I, along with Ben and Vickie, watched with pride as Lynette was awarded her Master's in Construction Management and Engineering, a double major earned at the same time. Her thesis for the management degree was entitled \"Building A Box.\" She used part of her thesis for her commencement speech.\n\nShe explained her progress from the time when she was nine and built her own keepsake box, complete with hinges and a handle. She still had it. She went on to describe how she built a birdhouse, then a doghouse, then a playhouse, a few small sheds, and then oversaw and built a vacation bungalow she had been designing in her spare time. It was built for the family to use.\n\n\"My Grandfather Wilkes taught me building, guiding me through the progress from keepsake box to bungalow. He taught me anything one built was basically a box, they just got bigger and more complicated, so you needed to build the best box you could.\n\n\"Then my Grandfather Ben Bassett Sr. taught me how to build business relationships, how to always deal fairly and honor your word, and if you did that you would always be successful whether you made money or not. I've found the same to hold true in relationships of any kind. You build a strong box and repair any weaknesses or flaws you discover. My grandfathers, my grandmothers, and my mother always made sure my box was strong. When I marry and start my life with another, you can rest assured a box will be built around our love, and there will be no weaknesses in it.\"\n\nIt was very moving. So why didn't she thank her dad in the speech? He had moved back in a few months after he came for the cookout, and it took another month before they slept together. I made him a lead man because he deserved it and by the time a year had passed, I thought they were over their problems.\n\nOne day he just disappeared. No warning, he just missed work, packed his stuff in his truck, and left. He did leave a brief note, saying he was going back to California, that he was sorry, and he'd send support for the kids.\n\nHeather was devastated again. We had to get her and the children into therapy to deal with the abandonment. Ben and I stepped up to try and fill the void and it worked, a little.\n\nOf course, we put detectives on his trail and they found him two months later. He was working with a construction company as a subcontractor on a major apartment contract, and was living with one of his old girlfriends. It seemed she was the reason he wanted to get back to the West Coast. She moved on and married when he came home. It didn't last a year. They had stayed in touch by email, emails on an account Heather didn't know he had, and when she told him she was single again and really missed him, he was gone the next day. \n\nHeather mourned him for a little, then got on with her life. She didn't have the luxury of riding off into the sunset and leaving the children behind. She filed for divorce three months after he left and had him served on his jobsite. In the paperwork was a provision for child support, but she gave him an out. Sign over parental rights and he was free. His new woman was not happy about having to give up that much of his income and pressured him until he signed.\n\nTwo years later, Heather was assistant head of Payroll and HR, and had to deal with every employee in one capacity or another. I had sent her to school to finish her degree, letting her work half days so she could attend classes. She returned to full time with a vengeance, storming into my office and jumping into my lap. \"Why are you being so good to me?\"\n\n\"I never told you, but my first wife was a selfish b... person and lied to me about being able to have children. She fought me on adoption, and after we separated it came out she'd had her tubes tied to avoid pregnancy. I was destined to be a dead end, biologically, dying unloved and unmoored, and then I met Angie. I knew we could never have children, but her love was worth it to me. Then you came along and gave me a do over. You and the kids were in my heart from the first weekend, and my feelings just kept getting stronger. Heather, you're the closest I'll ever have to a daughter, so I've decided to adopt you. Not in the legal sense, you're too old for that, but in the emotional sense. And as my child, that automatically makes you my heir. It's why I pushed you to get your degree. When I retire my part of the business goes to you. I've talked to Sarah and David, and they think it a good idea to keep it in the family. The paperwork has already been done and all you have to do is step up when I step down.\"\n\nShe got so emotional I had to call Angie to help calm her down. She petted her until she stopped snuffling and smiled. \"Did you really not see this coming? You've been his pride and joy since you arrived. Honor his love and do a good job. You've got about ten to twelve years to be prepared.\"\n\nThen David's son came by to do some insurance paperwork and met Heather. Sparks flew and fifteen months later I had the honor of giving her away. Talk about keeping it in the family! Sarah was David's sister, and her son was a career military man, so Heather and DJ, David Jr, were going to get it all. They were in their mid-thirties by then, and no one was surprised when they had a son they named David Reginald. Heather had to warn us. \"Mine! You got the two older ones almost all the time now, let me have this one.\"\n\nIt was really, really hard, but we restrained ourselves.\n\nJeremiah took after Benny, working summers and school breaks at the company while both grandparents mentored him. Lynette did the same at my firm; she even worked with the construction crews for two summers before going into the office to learn from her mother and Sarah. Jeremiah got his business degree and after two years, it was apparent he would be running the family business in a few years. His grandparents couldn't wait. By the time Lynette got her degrees, Angie was 70 and I was 64. Angie had retired three years earlier and this was my last year before Heather stepped up.\n\nWe planned to stay active, travel and watch over the next generation. Jeremiah had already married with a small son and had his second on the way. Lynnie wasn't ready to settle down just yet, but we knew it would only be a short time before she would be snatched up by someone who didn't deserve her.\n\nFourteen years after he left, we got notification that Benny Jr. had passed away due to a construction accident. He was trying to unload a full hack of fourteen by four and a half sheetrock, 32 sheets, with an electric winch. Safety protocols stated there had to be two winches used at the same time with a safety spotter present, but he was in a hurry. He had it nine feet into the air when the weight shifted and it came down on him. According to the accident report, it crushed him on impact.\n\nWe didn't get the notification until three weeks after the funeral, when the state was going through the paperwork looking for a next of kin. It seems his new wife had run off three years before and left him with two daughters to care for. The mother could not be found, and California wanted to know what to do with them. Ben, Vickie, Angie, and I all flew out right away.\n\nThe children were both girls, one eleven and the other nine, and they were the rudest, most disrespectful children I'd ever run across. The oldest snarled at us. \"If you our grandparents, how come we never seen you, huh?\"\n\n\"Because until a few days ago we never knew you existed. If we had you'd know a lot more about us now.\"\n\n\"I ain't going nowhere with any of you.\"\n\nAngie and Vicky were tearing up so I took over. \"If they can't find your mother, you might not have a choice. If it comes to wealthy grandparents taking you off the state's hands, of putting you in foster care and pay for raising you, the state is going to look out for themselves. I suggest that if you don't have anything important keeping you here, if they can't find your mother, you come back with us and check the situation out. Think about it.\"\n\nThe older one looked defiant, but the little one just looked scared so I targeted her. \"How about it, Princess? New clothes, big house, an older brother and sister to help keep an eye on you if you need it, and rumor has it I can be a heck of a grandparent. I have references, if you're interested.\"\n\nBenny echoed me, saying we sometimes competed to see who could spoil grandkids more, and then we backed off and let the ladies go after them. Angie finally got through to them when she started showing them pictures of their older siblings, remarking how similar they looked, and how we had plenty of room at either house, showing them pictures including the outdoor kitchen and pool, plus a few of our boats. Benny and Vicky bought themselves a streamlined runabout as a retirement present, but we still used the big boat, the third one, when everyone wanted to ride. The house Vicky had chosen was out in the country and had some acreage. They had an assortment of animals, including three horses.\n\nWe never felt any inclination to ride, but Jere and Lynnie loved to, so they were there as often as they were at our house. Despite the massive efforts to spoil them, we also tempered our excesses with life lessons, and they were a pretty well-balanced set of youngsters.\n\nIt hit a nerve with the little one, Vanessa. \"I never been on a horse.\"\n\nVicky grinned. She was like me and never had kids, and this was a golden opportunity for her. \"Come home with us, baby. I'll have you riding in no time.\"\n\nCharlene was obsessed with the boats. \"I've never been fishing.\"\n\n\"Well, if you come home with us you'll spend so much time on the water you'll feel like a duck.\"\n\nWe stayed two weeks while they finished their search for their mother. We took advantage and got permission to take them places, so we went to an amusement park, a 'dude ranch' where we took them riding for the first time, but mostly we just spent time with them, convincing them we weren't ogres who roasted children for breakfast.\n\nVanessa bonded with Benny and Vickie, and Charlie seemed to like us better. In the end they went home with us, and since Vanessa insisted, they lived with Benny and Vickie. Charlie went with them, as well. We were a little disappointed, but realized they were going to need breaks and we usually had them on weekends. It was a rough first year as we had to get them out of some pretty bad habits, but by the second year, they relaxed enough to feel safe and loved, and they calmed down and were integrated into the family.\n\nHeather and her husband mentored them, and Jere wanted them to spend time with him and his wife, a woman he'd met through business. They dated for a year before he brought her to a cookout, scared to death because she was Indian. None of ever found out where that came from and welcomed her with open arms. She cemented her place in the family when she started bringing dishes for the cookouts. Once she brought an enormous pan of curry, and we emptied it, ignoring the steaks and chicken.\n\nHe told his little sisters they were going to use them as training tools for when theirs came along. They were so enthralled with Mary, her Americanized name, that they insisted on saris to wear to a wedding of one of her friends. The pictures hold a place of honor on our wall.\n\nI think they kept us young. Angie made it to Vanessa's high school graduation but it was her last public appearance. She was two months shy of being 80 when she fell and shattered her hip, dying from complications two weeks later. It was sudden and left me desolate, but after I mourned her for six months, I came to realize we had a pretty good run. From the day we met we were never with anyone else. No dates, no flings, no other relationships, we just joined at the hip and never let go. Even for the second time around, that was unusual.\n\nEvery night I'd look at the plaque I'd gotten her a couple of years after we got married. It was an award plague that proudly proclaimed: \"Hottest GILF,\" with the name of our state and the date in a little insert in the bottom. Every year I'd take it back to the award shop I got it from and have another insert added for the current year. When Lynette had her first child, I got a new plague that read \"Hottest GGILF Of The Year\" and started adding inserts. She'd giggle every time I added a year, and turned bright red when Vanessa asked her what a GILF was one day. I told it stood for Grandmother I'll Love Forever, which made her glow even brighter.\n\nI had talked it over with Angie, and we agreed after we'd gone if Vanessa didn't already have a house, she would get ours. Benny and Vickie agreed that Charlie would get theirs.\n\nThe next year, Benny passed in his sleep. I held Vicky and made all the necessary arrangements; I developed a habit of keeping her at my house a couple of times a week just to make sure she was all right and a year later she moved in. We were never in a relationship, although we loved each other as friends, we were just two old people that didn't want to be alone. The kids all grinned, and I bet Angie and Benny were laughing their asses off.\n\nSometimes we'd sit on the veranda in rockers, watching the sunset as we talked about our departed loved ones, and we both agreed that no matter how we started out, our golden years were about as shiny as they get and we were damned lucky in who we chose to love. One night we talked until well past dark about everything, and when I got up to go in, she told me she wanted to sit a bit, to enjoy the coolness. I left her for about forty-five minutes, wondering about the tears in her eyes, and then decided to take her a blanket if she was going to stay, or help her inside if she was ready.\n\nIt seemed she would never need a blanket again. She had passed, still warm, and with a smile on her face. I'd be willing to bet that right about now she and Benny were hugging like crazy while Angie smiled.\n\nI sat down beside her and waited for the ambulance, talking to her. \"Vicky, it may have come a little late in your life, but you got your heart's desire. A good man to love, children to raise, surrounded by a big family that loved you for who you are. Not a lot of people that leave this life can say that. If you can hear me, I want you to give a message to Angie. You tell her I'll be along soon enough with a brand-new plaque. It'll say 'Hottest GGILF In Eternity\" and will be the absolute truth.\" \n\nThe EMT's showed up and I kissed her cheek, wishing her a safe journey, before they gently laid her on the gurney. Sighing, I started the round of calls, knowing the house would be full shortly. I thought about the girls, who stopped calling her Grandmother in less than a year, and called her Mom. She told us that was the second biggest moment in her life, right behind marrying Benny. They would be devastated and we'd have to be strong for them. Honestly, I didn't know how much strength was left in me.\n\nI looked up at the stars and smiled. \"Soon, baby, soon.\""
    ],
    "authorname": "qhml1",
    "tags": [
        "cheating",
        "divorce",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/im-51-2"
}