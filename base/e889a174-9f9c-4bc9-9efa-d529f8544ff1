{
    "title": "Speech and Debate Pt. 12",
    "pages": [
        "Apologies that this chapter took a little longer than expected. As you can see, the chapters are actually getting longer and longer each time. There are still more chapters on the way...and a possibility of a side line extension once this main series comes to a close. Fingers crossed!\n\nDISCLAIMER: The following fictional story deals with sex among males. If you are offended by such material, are too young, or reside in an area where it is not allowed, depart. Though not observed in this story, care enough about yourself and humankind to practice safe sex.\n\nThe author retains all rights. No reproductions or links to other sites are allowed without the author's consent.\n\n~D.A.M~\n\n*****\n\nCarrot or Stick? Yes, Please.\n\nBy D A Mackey\n\nFor a lot of people, maybe even most people, the week of Final Examinations is full of late night study sessions, Red Bull, espresso and stress fueled panic attacks complete with existential melt downs. For me, it was like closure: a sweet and easy goodbye to a course and a teacher who had helped me expand my horizons just a little bit more. Or, if they hadn't, and I had been bored and coasting or worse, completely uninspired, then it was a lovely \"Dear John\" letter to end the torment and make a clean break. \n\nI floated about without a care in the world. At least not an academic one. This was my final Finals week and I wanted to make sure I remembered it. It signaled the end of a very significant portion of my life to that point and the changes I had gone through to get there. I pushed the other hypotheticals that buzzed around this transitionary time to the back of my mind. \n\nWhat would happen to Daniel and I, what the summer might hold in store, and our futures,...I did not want to think on that. Not yet. This week was special to me for a different reason, reminding me where I came from and the person I still was inside, keeping me grounded as the rest of my life swirled in semi-organized chaos. \n\nI was in one of my daydreaming modes, having just handed in my final exam to Dr. Plarston. I was going to miss her after graduation, but she had given me her personal email address in case I wanted to keep in touch in college. I was lost in a fantasy of my future educators, men and women I had yet to meet, when a 200 lb boulder of man flesh crashed into me from behind.\n\nThe breath was squeezed from my body like I was an old balloon and I swear I could hear my ribs creak when Ian gathered me up into a crushing bear hug. My feet dangled uselessly half a foot above the ground and he shook me from side to side like a dog with a chew toy until I got dizzy.\n\n\"Put me down, jack ass! You're gonna kill me!\" I croaked, hoping he could hear me as the darkness crept in on the edges of my vision.\n\nAs quickly as it started, it was over and I gulped air into my lungs with audible gasps.\n\n\"Dude!\" Ian exclaimed, \"You are the absolute best!\"\n\n\"Thanks,\" I replied, unsure what he was driving at. \"I know that already, but it's always good to hear.\"\n\nI winked at him and he favored me with a broad smile and a punch to my shoulder that sent me reeling backwards. He steadied me with one massive arm and a blush that said he still wasn't always aware of his own strength.\n\n\"I just finished my US History final,\" he continued, \"and I think I blew that mother fucker out of the water! At least, I knew most of the answers right off the bat.\"\n\nI smiled at him with genuine happiness. I hadn't done much to improve his academic efforts. Not really. Just a few pointers here and there about study techniques and ways to remember things for taking tests. It seemed as if my meager efforts had paid off for him. I was thrilled to have provided some minor assistance.\n\n\"I'm glad to hear it, Ian,\" I said and did my best to return his friendly punch to the arm, but with little effect. As I watched Ian's joyous expression begin to return to normal, I saw something from the corner of my eye that caught my attention.\n\nThe annex with its cadre of small benches and big lush trees was filled with students milling about between tests. At one of the benches, the one closest to my favorite reading tree, sat a familiar figure. \n\n\"I'll see you later today, Ian. I have to go, okay?\" I said to the big wall of man that stood between me and my next task. Ian turned and followed my line of sight.\n\n\"Be careful,\" he cautioned, understanding what I was about to do without me saying it outright. \"I'll see you later. Text me if you need me.\"\n\nI nodded and gathered myself. \n\nI stood behind the seated figure for a moment, taking deep breaths and steadying my nerves before I spoke.\n\n\"Hi,\" I said quietly, \"mind if I join you?\"\n\nAmy looked up at me from her crossed-legged seat on the bench. Her eyes were wide and I realized immediately that I was not going to get anywhere, even with the best of intentions. \n\nHer face twisted in such a way as to actually mar her physical perfection. I didn't think it was possible, but the hatred I read on her features finally made her appear ugly for the first time in my memory. Her arched brows drew down and her mouth became a thin, pinched line slashing across her face. Her knuckles were white as she clenched the leather strap of her handbag to her lap as if it were a life preserver; not for her, but rather for me. If not for the crowd of people around us, none of whom were paying her any attention, I would wager that she would have launched herself at me and torn me limb from limb with her bare hands. Manicure be damned.\n\nWhen she spoke, it was through teeth clenched so hard that I imagined I could hear them creaking under the pressure.\n\n\"Get the fuck away from me.\" \n\nThere was no doubt that she wanted to do me harm. Real, physical, lasting damage. Her voice was pure murder. I suddenly wished that I hadn't approached her alone like that, that I had asked Ian to remain behind the tree and on high alert in case she decided to put her previously threatened machinations into real world practice.\n\nI was just beginning to formulate a response, plan a way to get out of there as fast as possible and reassess the situation when Amy's eyes went wide once more and her face drained of color, even through the makeup. She stared past my shoulder.\n\n\"Hey!\" Katy chirped behind me. I turned and saw the reason that Amy had been so thoroughly cowed. \n\n\"Hi, Katy,\" I replied. She smiled at me, one graceful hand resting easily on my shoulder. I watched her face transform just as quickly as Amy's had. She looked like nothing so much as a very stern mother figure getting ready to lay down the law.\n\n\"People are speaking, Amy. Don't you have somewhere to be?\" \n\nAmy's mouth hung open and her jaw worked silently. I thought I saw her eyes begin to moisten with what I could not bring myself to believe were tears. \n\nAmy didn't cry. I barely believed she was human, so she COULDN'T cry. But she wore a look that I recognized immediately. I had worn it myself. Many times. The irony was I had usually worn that look BECAUSE of Amy. \n\nBut there was no Daniel to come to her aid. No Ian or baseball team to back her up. Not even her army of minions to support her. That was all gone for her now. I know, logically, that she brought it all on herself. She well and truly deserved what was coming to her. Unlike me and the countless other tormented souls on the bottom of the social hierarchy who were treated with impunity for simply existing, Amy had actually accrued the malice that now rained down upon her. But, I still couldn't help feeling a little bit sorry for her. Only a little.\n\nAmy gathered her bag without a rebuttal and stalked off towards the main building. Just like that, Katy was her usually smiling self. It was beyond strange to NOT be on the receiving end of a popular smack down. I felt like I had just watched a lioness turn on and dismember a decrepit former ruler, put her out of her misery for the good of the pack. It was heartless and cruel in a way, but it was the way of the world, both in the animal kingdom and most especially in high school. Which of the two was more \"human\" is up for debate. \n\n\"Are you excited for the last home game?\" Katy asked, Amy totally forgotten, no hint of remorse or pity for her former mistress even grazing the edge of her voice. \"Everyone is going to be there!\"\n\n\"Of course,\" I said quietly, doing my best to keep my conflicted emotions to myself for the time being. \"It's going to be a great game, I'm sure.\"\n\nKaty leaned close and put her lips next to my ear.\n\n\"Try and keep your hands to yourself until the game's done okay? We can't have our star player distracted.\" \n\nShe winked one mascaraed eye at me and promptly sashayed away towards the senior parking lot, leaving me a little slack jawed myself. And even more conflicted.\n\nKaty had not been exaggerating when she said everyone was going to be at the final home game. \n\nOur normal audience (yes, I realize that a sports event does not usually call its' spectators an audience, but everything is at least a little bit of theater when you get right down to it) was more than tripled from the 30-40 we normally expected to well over 100 students, teachers, administrators, parents, and friends crowding the aluminum bleachers. I smiled to see that Dr. Plartston even sat demurely on a seat between the Upper School Headmaster and Coach B. Unless I missed my guess, Coach B's leg came into contact with Dr. Plarstons' more often than was absolutely necessary. \n\nAfter all, it was late Spring; the birds and the bees and all of that.\n\nI felt a little sense of foreboding as the game started. This was going to be the final time I would ever be here, doing this, sitting and chatting with the young men who had inexplicably become my friends over the past few months. I wondered, or rather assumed, that each and every one of them had gone through this end of the season transition countless times before, so the effect was much reduced for them. But for me, this would be the first time that something I had participated in with a group, came to a close. I wasn't exactly sure how to respond, or even if the situation demanded a response at all.\n\nI actually contemplated buying a little autograph book and having all the team members sign it for me. But, thankfully, I thought better of it and decided a simple masculine handshake and a hope for continued friendship would suffice. That's what people did in these situations, right? No emotional outpourings or sincere showings of true feelings. That just wasn't done. \n\nApparently, High School sports are at least somewhat of a rigged or choreographed spectacle. This was the final game of the season and a send off for a large chunk of the team as they headed into college. They wanted to go out on a bang, so to speak. \n\nThus, Coach B had arranged for the opposing team to be a rather underfunded, brand new, 2-22 team. Most of the guys that lined up to shake our hands before the game began wouldn't need to shave more than once a month. Their largest and most developed player would just barely give me a run for my money, and I'd never swung a baseball bat in my life. The fact that Coach B felt that he didn't even need to stay with the team to coach the game, but rather sat in the stands with Dr. Plarston spoke volumes of what he thought of the other teams' chances. \n\nDaniel got to pitch a few innings as well as take a turn at shortstop. Watching Daniel in his tight white baseball pants lift his leg and hurl that ball towards the terrified freshman at home plate stirred something in me. I had to remember Katy's advice and struggled to keep my hands to myself. \n\nIan, however, followed no such logic. He smashed an over-the-fence home run in the fifth inning and, after his victory lap and fist pumping machismo, returned to the dugout where he promptly slapped my ass so hard that my feet left the ground; I yelped like a puppy who just got his tail stepped on.\n\nWe won the game handily and I completed filling out the stats sheet I was charged to keep before the final runner had crossed home plate. I handed the sheet to the assistant coach and took my seat on the dugout bench while the rest of the team lined up single file for the \"good game\" handshake that was customary.\n\n\"Get up, dude,\" Ian commanded from outside, his body far and away the largest in the long line of athletes. \"You're a part of this team too. Get out here and shake some hands.\"\n\nI had never taken part in this ritual with them previously. When our games ended, I always just began my duties of packing up the equipment and tidying up the dugout while my teammates completed the ceremony. \n\nDaniel looked at me and smiled broadly. He jerked his head and motioned for me to come and join them. I rose and walked towards him, still unsure of my place in all of this, or if it was really okay for me to be there. I stood in front of Daniel and behind Ian near the back of the line with the rest of the Senior players. Paul and Gordon were last in line.\n\nI felt Daniel's fingers on my shoulders, his strong grip kneading the tension and unease from my muscles. He leaned forward and placed his lips close to my ear.\n\n\"Don't worry babe. Just breathe. It's alright. You deserve to be here.\"\n\nBefore I could stop myself, before I thought of the possible ramifications, I felt my hand rise and grasp Daniel's own on my left shoulder, squeezing him tightly in my fingers.\n\n\"Thanks,\" I whispered, struggling to control the ever growing mass of emotions that swirled inside me. \n\nAn above average intellect does nothing to prepare you for the undulating sea of hormones and feelings that growing up can sometimes be. \n\nIn fact, now that I think about it, intellect may actually be a hinderance.\n\n\"You two sure have gotten close since Prom,\" Tall Paul quipped jovially from just behind Daniel.\n\nIan burst out laughing, a raucous and booming chuckle that drew eyes even from the still cheering crowd behind the chain link fence.\n\n\"Dude, you need to get your eyes checked,\" Ian shot over his shoulder, shaking his head in disbelief at Paul's apparent obliviousness. \n\nDaniel and I turned to look at Paul and Gordon who exchanged confused and bewildered looks. To his credit, Daniel's hand never left my shoulders until the first player of the opposing team held out their palm to him.\n\nThe final walk to the locker room was a clouded mixture of elation tinged with the sadness of an ending. Jokes and jockeying were exchanged all around, of course, but the light hearted boyishness that usually pervaded the air after a game was lessened.\n\nFor my part, I began to shelve the bags of bats and balls and clipboards as I normally did. I took my time now, trying to remember the feel of everything, the smell, the detail of the mesh bags beneath my finger tips and the plywood storage shelves I threw them onto. I doubted I would ever have the opportunity to do something like this again. Though it was never something I had ever thought I would do in the first place, it was amazing how quickly it had become almost precious to me. \n\nI wasn't used to endings like this. The closest thing I could compare it to was that sinking feeling I got when I finished a really engaging novel, turned the last page and had to say goodbye to the characters and plot lines I had grown so fond of as they came to life in my head. But even that kind of ending was different; that literary sadness was tempered by the knowledge that I could always turn to the first page once more and find myself right back there, in their world, part of their life. There was no turning back to the beginning now. This book, this chapter, this piece of my life was coming to an end; when that back cover slid shut, there would be nothing left but memory for me to relive. \n\nIf you ever find yourself in a place like that, where you KNOW for certain that this is the last of something, do your best to burn it into your heart, for it can keep you company and warm your soul in the darkest of times.\n\n\"Get in the shower, Mr. Manager,\" Gordon's voice suddenly slurred from the doorway to my storage closet, shaking me from my rather dark internal philosophical musings. \n\nHe had a length of white towel wrapped around his waist but was otherwise naked. Even in my heightened state of emotional conflict, my eyes traveled over his smooth and toned torso, slid down to the outline of his average cock beneath the terry cloth. \n\n\"Hmm?\" I asked, raising my eyes so as to not stare. Well, not for too long.\n\nI'm only human, after all, and a gay one at that. Anyone with working eyesight would stare.\n\n\"Come on! Don't be shy. We've all got one. Plus we've already seen yours,\" Tall Paul added, his head popping into view above Gordon's shoulder, a smile on his pale and newly-freckled face. The warmer weather and increase in sun exposure was not easy on men of Irish descent like him. \n\n\"You guys go on. You're the one's who got all sweaty.\"\n\n\"Don't sell yourself short,\" Gordon admonished lightly. \"Math and stats and filling in paperwork is sweaty work too. Come on. It's just us Seniors.\"\n\nPaul and Gordon both looked at me with open, questioning eyes. They weren't eager for me to join them for any nefarious or even remotely sexual purposes. I got the distinct impression that they actually wanted me there because they truly felt I belonged. I felt my throat clench and my chest tighten, the sincerity of their overture hitting me harder than I would have anticipated. \n\nSo I nodded, flipped the light switch to the storage room, closed the door behind me for what I guessed would be the last time and followed my friends down the hall towards the already steam filled Shower Room.\n\nPaul and Gordon dropped their towels and headed to their respective shower heads without stopping to see if I followed. Though I had seen the guys in the shower many times before, it was still a bit of a surprise to have that much taut and tantalizing man flesh on such ready display. Like stepping into a real life wet dream. \n\nPaul twisted under the stream of hot water and turned to urge me to join them beneath the spray with a jerk of his head. I did my best not to watch his long, thin cock dangling between his lean thighs. I had no such luck with Daniel.\n\nHe was in the middle of the group, Paul and Gordon to his left, and Ian to his right. Like the Sun beside a flashlight, he was all my eyes could truly see. He was facing me, his black hair pushed back from his face and glistening like ebony silk. His beautiful brown eyes drank me in, standing in the doorway, still in my uniform. He raised his eyebrows and his face took on a air of lust and starvation. \n\nI kicked off my baseball shoes and stripped my socks from my feet, uncaring where they landed or even if they got wet. I wouldn't be needing them any time soon anyhow. I kept my eyes on Daniel while the other guys chatted and washed themselves as if we didn't exist. \n\nI fumbled with the button of my pants, unzipped them and pushed them to the floor. I watched Daniel's eyes follow them as I stepped out, shivered a bit as his gaze traveled up my calves, my pale thighs, and came to rest on the bulge in my white jock strap. I grabbed myself and pushed my cock and balls towards him a little, loving the way his pupils widened.\n\nMy shirt followed quickly after and finally, I pushed my jock to my ankles and took a step towards the shower. How many times had we been here before, the two of us? Naked together in this very shower, the rest of the world a forgotten blur outside the tiled walls? \n\nThe tip of Daniel's tongue traveled across his bottom lip and I felt my skin tighten in goosebumps. My body seemed to recognize our surroundings, wanted to commence with what it normally did when it was here, in this room with Daniel.\n\nThe little rivers of soapy water that flowed across Daniel's hairy chest reminded me of watching my own cum drizzle slowly over him. I felt my cock twitch. Daniel's dark brown nipples stood out, hard and erect on his rounded pecs, and my mouth watered, my teeth wanting to bite down on the little nubs of skin and taste him on my tongue.",
        "His stomach tensed, each muscle suddenly becoming a distinct rectangle, covered in soft black hair that joined like a river to flow down the center of a valley, leading to the square forrest above his cock. His shaft was thickening, the skin plumping a bit, the thick vein that ran across the top pulsing slightly before my eyes. I watched a little more of his foreskin pull back from his cock head, exposing it to the hot water as his dick rose another centimeter towards full mast.\n\nThe water shocked me when it hit my chest. I hadn't been paying attention as I walked forward, only focusing on the man I loved displayed in all of his erotic glory before me, like a Christmas feast I was forbidden to touch. I sucked in my breath against the change in temperature and my eyes fluttered closed, breaking my contact with Daniel.\n\n\"Jesus Christ. I know I've seen your cock before, but still...God Damn, Dude, that thing is massive!\" Paul nearly giggled, his voice cracking unusually at the end of his outburst, making his face flush red in an instant. \n\n\"Thanks,\" I replied meekly, letting the water run over my body. I tugged at my cock a bit, since that was the current object of conversation and felt it respond immediately, growing longer and thicker beneath my hand. Daniel's own beautiful cock was already at half-mast, standing almost horizontal but still arching gently towards the floor a bit.\n\n\"It is impressive, isn't it,\" Ian added from behind Daniel. \n\nHis head was full of shampoo and his arms were raised to his scalp, his chest and back drawn up to form a hugely intimidating triangle of strength. When you are that large and that well developed, there is little that can shame you, certainly not your cock: Ian's average member was fully hard and pointed straight at the ceiling, twitching slightly. Paul and Gordon took no notice of it, or seemed not to; but I certainly did. \n\nI remember when I had taken that rigid shaved cock to the base and sucked the cum from him until he trembled beneath my touch. The memory went a long way in inflating my own dick.\n\nDaniel stared at my hardening cock openly, as did the others. His cock bobbed and expanded in time with my own, growing harder by the second, as if they could sense their mate close at hand.\n\n\"It is very impressive,\" Daniel said languidly. Ian snorted from behind him as he rinsed the shampoo from his hair, his cock still at attention.\n\n\"How do you even work with something that big?\" Gordon asked. I couldn't tell if he was genuinely curious or just trying to instigate...something. \n\nBut I didn't have time to formulate an answer before one was given for me.\n\n\"It's simple really,\" Daniel said. \n\nThe hot water was as nothing to the jolt of pure white hot electricity that rocketed through my body when Daniel's hand closed around the base of my shaft and jerked me towards him, pulling my whole body forward in a rush\n\nMy chest thumped into his, my hips and painfully erect cock ground roughly into his stomach. His free hand gripped the back of my neck and pulled my open-mouthed face downward to meet his in a kiss that sent my entire world hurtling into darkness.\n\nI don't know how long we stayed like that, Daniel's kiss freezing me in place, my tongue following his in a lazy dance around my mouth. My cock pulsed a small jet of precum that I felt slide across Daniel's firm, hairy, stomach. His moan against my tender lips made it clear that he'd felt it too.\n\nWhen he pulled back he was smiling at me as if we'd just won the Nobel Prize, beaming with such love and joy that I was very nearly overwhelmed. \n\n\"Wow,\" Paul whispered, catching my attention. His eyes were wide and he seemed frozen in place like I was. \n\nIan laughed.\n\n\"Seriously. Ditto. Wow.\" Gordon added, his voice for once not slurred, but crisp and clear.\n\n\"We're together,\" Daniel started. \n\nHe pressed my body to his and slid his strong hands down my back and rested them firmly on my ass, squeezing my cheeks gently. My eyes fluttered a bit and I heard Daniel continue, \n\n\"We have been for months now. Okay?\"\n\nSilence. \n\nFor moments that stretched on for weeks in my head, no one spoke.\n\n\"He asked you a question, douchebags.\" Ian finally interjected, his hands on his hips, his still rock hard cock pointing at Gordon and Paul like a wagging finger of admonishment. \n\n\"Yeah. Yeah. We got it.\" Paul and gordon tripped over themselves to respond. \n\nI will never be sure if they answered because of Ian's imposing physical form or because they actually got it. From the wide eyed bewildered looks they still wore on their slack jawed faces, I doubted they had fully processed the new information. But they hadn't run screaming in terror from the shower either. So that was something to hold on to.\n\n\"Well for my part,\" Ian said snidely but breaking any lingering tension, \"I don't think one little kiss and a grab on the ass is going to prove it to me.\" \n\nDaniel's neck nearly snapped when he whipped his head around so fast to face his teammate. Ian stared back innocently and winked. I knew exactly what he was up to, and so did Daniel. I just hadn't expected him to be so forward so soon and in front of the others.\n\nI was still trying to process Ian's overt dare when my shoulder blades slammed into the cold wet tiles of the shower wall. Daniel's hands were on my chest, pressing me backwards, pinning me where I stood. My eyes were wide and rolled in absolute terror.  \n\nWhat was he doing?\n\nHe looked at me, his fingers digging into my skin lightly, pressing gently, letting me know that he was there, he was supporting me. He brushed a gentle kiss against my quivering mouth, momentarily stopping my fears, and then moved his lips to my ear.\n\n\"It will be fine baby. Just watch me, and remember... I love you.\"\n\nThose final three words echoed in my head over and over again. It felt like a dream, something that couldn't possibly be happening, not to me. \n\nI watched Daniel's eyes slowly lower from my face, but he never broke my gaze. One of his hands stayed on the middle of my chest, pressing into me, feeling my heart beat racing at light speed. His other hand gripped the base of my still rock hard cock.\n\nHis tongue made contact with the tip of my prick and he flicked a drop of precum from my slit. He took it into his mouth and tasted me. I watched the light in his eyes crackle like a sparkler on the fourth of July when my essence coated his tastebuds. I saw the fire ignite behind those deep brown pools. As usual, he mesmerized me so that even Paul and Gordon muttering, \"holy shit,\" in tandem only just registered on the edge of my consciousness.\n\nDaniel opened his mouth and I watched the pale pinkish skin of my cock head outlined on his wide tongue and shivered again, for a much different reason this time. \n\nHe sucked me inside, closing his full soft lips around my girth and moving his tongue in ever increasing swirls and flicks against my slit and the super sensitive underside of my shaft. He took his time and my body shook beneath his tremendous efforts.  \n\nHe pushed a third of my length into his mouth and I felt his finger nails raking into the skin of my chest, leaving small red furrows in their wake, like a signature that named me his. My fingers, balled into fists held tight at my side until that point, loosened; I moved my hand to the back of his head, winding through his wet silken hair, urging him to continue, go further, take all of me.\n\nSomething about the semipublic spectacle, our friends and teammates standing so near, ignited something in Daniel. He began bobbing along my shaft quickly, taking more and more of me into his throat each time. I felt my sensitive cock head press into the strong muscles of his throat and then felt them loosen as my cock sank ever deeper into him. Soon, his hot breath tickled my pubes and his throat muscles pulsed around my entire cock, now engulfed inside him.\n\n\"Oh fuck, yes, baby,\" I moaned.\n\nMy head fell back to the tiled wall and my eyes closed so I could focus more on the intense pleasure he was giving me. He held me inside for a few moment before pulling me out entirely so he could kiss and lick the entire length of my shaft and take my aching balls into his warm wet mouth.\n\nHe pulled them both inside and rolled them on his tongue like dice. My raging cock laid like some kind of massive scar across his perfect olive skinned face, his beard hair tickling the underside. He moaned around his full load and released me.\n\n\"I want to taste your cum,\" he sighed lustfully. \n\nIf I had been able to pay attention to anything other than the beautiful man kneeling at my feet I would have seen Ian's, Paul's, and Gordon's eyes go as wide as tea cups when they heard those words come from Daniel's lips. \n\nI also could have seen that all three of them were erect and leaking pre cum. Ian made no pretense and slowly stroked himself with one massive hand as he watched his buddy get ready to take my cum into him.\n\nDaniel's hands slipped down my sides and rested on my hips. He kissed the base of my cock, where my hips met my plate and stared up at me with longing.\n\n\"Please?\" He asked quietly. \n\nI nodded.\n\nHe opened his mouth once more and took me inside, his cinnamon colored eyes gleaming, his skin flushed and still glistening with a mixture of water and the sweat from his effort on my shaft. I thrust forward and felt him open as my cock disappeared into him.\n\nHis hands reached around me and grabbed at my ass, kneading and prodding at my muscles, pulling me forward so he could take more of me into him. He urged me to guide my cock. I obliged. \n\nSlowly at first but with increasing speed I began to push my hardness in and out of his mouth, watched as his lips accommodated my girth, his eyes alight with pleasure.\n\nHis fingers continued their work on my ass and one eventually found its way to my hole. He pressed lightly and I felt my cock spew a large blast of precum into Daniel, who took it gratefully with a loud moan. \n\nI nodded down at him, hoping he would understand what I wanted. \n\nHe did. \n\nHe pushed his thick finger slowly inside me, letting my ass get used to the new invader, driving me onto my toes. He wiggled it inside me and I knew this wouldn't last much longer. \n\n\"Again...god, yes, Daniel...again!\" I whined and grabbed onto his hair roughly. \n\nI pushing his head further onto my crotch. His finger sank all the way into me, to the final knuckle. Daniel's eyes were wild with lust when my vision could focus enough to see them. My body writhed against his hand, fucking myself on his one digit as he rapidly invaded my hole, in and out in and out, each time arching his thick digit forward to brush my magic button.\n\n\"Ahhh...oh fuck...baby...I'm gonna cum...fuck, don't stop.\"\n\nHis finger took on a blistering pace and I felt myself climbing higher and higher, my muscles tensing on their own, my hole lost to a firestorm of pounding pleasure. My fingers gripped Daniel's hair as tight as I could. Daniel read the signs and pulled back from my cock to open his mouth with about two inches of me still inside.\n\nEach blast of my cum that hit the back of his throat made him moan loudly, echoing and bouncing from the tiled walls so that it seemed to rain down on me from everywhere, auditory proof of his pleasure. In the midst of my orgasm I thought I heard similar sounds come from the other boys arrayed behind Daniel. By the fourth or fifth stream Daniel closed his lips over my twitching member and held me inside him, gulping down my offering with ease.\n\nMy head spun and I found it difficult to catch my breath. Daniel added to my pleasurable distress when he rose from his crouch to kiss me deeply, pushing his tongue into my mouth with characteristic gusto. I tasted my own seed, still coating his tongue, and my mind daze began anew. \n\nDaniel's strong hand on the back of my neck stabilized me and kept me from sinking to the ground on legs that refused to work properly. \n\nWhen his kiss ended and he pulled back from me, his fingers lightly stroking the nape of my neck to reassure me, I stared into his eyes and saw boyish glee and pleasure dance across their surface like shadows of soaring birds over a calm lake.\n\nHe pressed his forehead to mine and kissed me lightly, contentedly, uncaring that the others witnessed our little moment of closeness. The warm breath of his contented sigh played like a summer breeze across my skin. His still erect cock ground into my hips in small circles and my arms encircled his waist without forethought, pulling his body closer into me.\n\n\"See?\" he whispered, \"Nothing to worry about.\"\n\n\"Holy...Jesus Christ!\" Paul squeaked, his voice cracking once again. \n\nGordon stood at his side with his mouth hanging open. My vision was just clearing enough to take in the three men who surrounded us and had watched Daniel's display and my own eruption. \n\nIan's cock twitched in the open air and a river of thick white goo slid down his shaft, occasionally dripping to the floor in a viscous stream. Gordon's prick was at attention and slick with precum while Paul seemed to struggle to remain on his feet, his long thin cock pulsing to the rhythm of his heart, a visible pool of his seed being washed down the drain some two feet in front of him.\n\n\"We're gonna leave you to it then,\" Ian said. \n\nNo one moved. \n\nIan cleared his throat and we all jerked to attention. \n\n\"Right, guys? Off we go.\" \n\nHe jerked his head and raised his eyebrows to indicate that the other guys should exit the shower as quickly as possible. \n\nPaul and Gordon shuffled towards the exit but before they reached it, while I was still in the middle of scoping out Paul's high, tight, hairless ass, he turned.\n\n\"Does this mean you guys are boyfriends now?\" \n\nHe seemed embarrassed by the question, and the word \"boyfriends\" was awkward on his tongue. His eyes dropped to the floor the instant the label left his mouth, unable to look at either Daniel or me. Daniel rolled off of me and leaned against the wall at my side, his hand finding my own and lacing his fingers through mine.\n\n\"Don't worry about it. We're together and that's all that matters right now. Just thought you should know is all.\"\n\nI marveled at his calm. \n\nHe had just revealed something about himself and about US to his friends that could very well have shifted the entire balance of their relationship, thrown all of the past four years into an entirely new light and effectively ended their friendship. It very well still could. Paul and Gordon were obviously processing all of the information and lack of information, drawing conclusions and formulating questions I was sure they would ask us later. Thus far, the signs were positive, but one can never know which way the winds will blow, only adjust the sails accordingly.\n\n\"Do you still like girls?\" Gordon asked sheepishly. \n\nHis question was obviously meant for Daniel, though he didn't look at either one of us. His still rigid cock gave me the hint that both Paul and Gordon would eventually reconcile to this. I mean, their bodies obviously had no problem with watching what had just happened.\n\nDaniel smirked a little and snorted a small laugh.\n\n\"Maybe. Yes? No? I don't know, really. But it doesn't matter. I'm with David now and as you can tell,\" he reached over and gently fondled my softening cock, making my eyes go wide again and sending an ice cold shiver down my spine, \"he is most definitely NOT a girl. So it doesn't matter.\"\n\nIan grabbed each of the two boys buy the shoulder, gave Daniel and me a sly wink and a gentle lick of his lips, and lead the group from the shower.\n\nI released a breath I felt like I had been holding inside since the moment Daniel had kissed me in front of them.\n\n\"What are you thinking?\" Daniel asked softly, his hand still holding mine but a hint of vacillating disquiet in his tone. \n\nI had gone with him on his seemingly reckless voyage of voyeurism before our teammates, but I hadn't been in the driver's seat. Daniel had to be wondering if I would be angry or upset with him for revealing us, though we had made no real try at remaining hidden.\n\n\"I'm thinking that you are amazing, and that I love you. And that was one of the bravest things I've ever seen, not to mention one of the \n\nbest blow jobs you've ever given me.\"\n\nDaniel let out a raucous laugh and swung around to kiss me again.\n\n\"If you liked that, you should see what else I can do,\" he added coyly. \"Come on, let's get going. We have the Baseball Banquet tonight remember? We've got three hours to get home, get dressed, and get back. I need at least an hour of that for other things...\"\n\nI can't remember another time I had been motivated to get dressed that quickly in all my life. \n\nLuckily, Daniel had prepared and packed the clothes he needed to wear for the Banquet before he came to school that morning. We decided to spend the intervening time at my house. My parents were gone to a conference for the weekend and my little sister was staying with her friend. She had decided that it was better to remain under someone else's parental supervision and give up the freedom she could have enjoyed by staying home in order to avoid having to acquiesce to my commands as the older sibling left in charge. Fine by me. \n\nDaniel helped me pick out an outfit for the evening that he laid out on a chair: a pair of well fitting dark blue jeans that Daniel said made my ass look good enough to eat, a white button down shirt with a skinny black tie, and a grey sport coat that he had bought for me a few weeks ago after a particularly enjoyable evening in which his toes had curled so hard, his feet cramped for a full half hour.\n\nMy mind wandered. \n\nIt was a sure sign of my distracted thoughts that I paid little attention to Daniel who lay on his stomach across my bed in his black jeans and black suit jacket. He was, of course, perfection; I would be hard pressed to decide wether I preferred to stare at his ass when it was clothed in denim or displayed in all of its naked glory. \n\nI shuffled the note cards in my hand and paced back and forth in my cramped room, wishing that we had chosen Daniel's larger domicile so I could take more than two steps before I had to turn and pace in the opposite direction.\n\n\"You'll do fine, baby,\" Daniel said reassuringly from his prostrate position. \"You always do.\"\n\n\"It's the Valedictorian speech!\" I huffed. \"They record it and send copies to every student after graduation! I can't be just FINE!\"\n\nMy nerves were getting the better of me. I had received word only 24 hours previous that I had clenched the Valedictorian spot and would thus be giving the speech at graduation in a few days. While my initial glee at having beaten my rival nerd, Elizabeth, for the top honors hadn't completely faded, the reality of my situation had begun to take effect. \n\nSure, I was a member of the Debate team, but I hadn't had to speak in front of people I KNEW, people who knew ME, and had spent the past four years with me. This was, as they say, a horse of a different color. \n\nAfter Daniel's show for the team in the showers a few hours ago, I wondered if this would soon become a horse of rainbow colors. The fallout remained uncertain.\n\n\"If you wear your current ensemble I can assure you that no one will even remember you spoke at all,\" Daniel said as he eyed me up and down.\n\nHe was right about that. My outfit was still draped over my chair and I paced my room in nothing but a pair of rather tight bright green undies. I don't know why I hadn't thrown them out years ago, they were far too small for me now. My bulge pulled so hard against the fabric that the elastic at the legs left a 2 centimeter gap and didn't even touch the skin of my thighs. Daniel stared at me hungrily.\n\n\"You might not, but trust me everyone else will,\" I groaned.",
        "Daniel maneuvered himself off the bed to stand beside it. He caught my shoulders between his arms as I made another whirling pass and stopped my pacing. \n\n\"Read me some,\" he said. \"I'll do my best to listen and give you my thoughts, if I can stop looking at you.\" \n\nHis strong grip on my cock through my underwear coupled with a firm kiss made me forget my fears for a moment. I cleared my throat and shuffled my deck of note cards to the first one.\n\n\"My fellow students, teachers, administrators, parents, and friends,\" I began shakily. \"We stand here today at the cusp of our futures.\"\n\nDaniel's arm over my shoulder directed me towards my desk. I was engrossed in the mediocre words I had written and barely noticed the change in location until my thighs bumped into the wood.\n\n\"Go on,\" he urged, \"sounds good so far.\"\n\n\"The past four years have taken us from our first bright day on this campus, through the twists and turns of academic achievement.\"\n\nDaniel kissed the nape of my neck and the words blurred on the card before me.\n\n\"Baby,\" I sighed. \"How am I supposed to concentrate on this speech when you do that?\" \n\nHis hands were on my hips, his thumbs working their way underneath the elastic of my undies.\n\n\"You just read and let me worry about the rest.\" He kissed my neck again. \n\n\"We have all grown,\" I continued, \"not just physically, but as people. And this school helped us to do that.\"\n\nDaniel pushed my underwear below the curve of my ass and my cock flopped out and landed with an audible thump onto the top of my desk. I lost my concentration for a moment and had to struggle to regain it.\n\n\"We have been shaped by the devotion of our teachers and their unswerving diligeeeAAhhhhh oh, my god!\"\n\nDaniel's tongue snaked a very light line down my lower back and through the valley of my ass. I hadn't even heard him kneel behind me but he pressed his face to my cheeks and buried himself between them. His tongue darted over and around my hole, just teasing it lightly, not trying to enter.\n\nJust as quickly as I felt him there, he disappeared.\n\n\"See, if we can practice this and get you through the entire speech while I...have some fun with you...then it should be a breeze when you actually have to give it.\" \n\nHis lips were pressed to my ear, his teeth clamping down lightly on the tender skin. His body was pressed to my back and I arched my ass into him by instinct, my eyes closing, brain igniting with passion.\n\n\"Never gonna happen,\" I admitted. \n\nThere was no way in hell I would ever be able to get through this entire speech if Daniel was toying and twisting and tweaking my body. \n\n\"Maybe not,\" he admitted, \"but it's going to be a lot of fun trying, huh?\" \n\nHe nipped at my ear again and my cock throbbed in response. \n\n\"But right now, we gotta get you dressed and out the door. We have 30 minutes to get back for the banquet.\"\n\nMy heart sank, realizing we didn't have time to continue what Daniel had just hinted at. Not right now anyway. I had squandered what little chance there had been with my nervous pacing and unnecessary anxieties. I sighed and nodded as I felt Daniel's body grow distant from me to return to the bed. He sat on the edge placidly, hands folded in his lap. \n\nI turned to look at him, my cock still hanging from my underwear. \n\nHis eyes widened a bit. I saw my advantage and took it.\n\n\"You sure I can't convince you to skip it?\" I asked demurely, grabbing my semi-hard cock and wagging it in his general direction. \n\n\"Oh, you could convince me, I'm quite sure. But then you'd miss out on my surprise,\" he said, barely concealing his obvious desire in his eyes. \n\nHis pants betrayed him, tenting out in front of him, the slimming black doing little to hide what was lurking beneath.\n\n\"Surprise?\"\n\nDaniel nodded.\n\n\"What surprise!?\" I asked gleefully as I plopped myself down across his lap, my arm going around his shoulder and giving him a peck on the cheek.\n\n\"You'll just have to wait and see, Beautiful.\" \n\nHe turned my face to kiss me and I melted into him. I could feel the hardening length of his shaft against the still bare skin of my exposed ass, only one thin layer of black denim between me and an hour of ecstasy. \n\nGod, how I wanted to waste that hour with him!\n\n\"Okay, I'll take your word for it.\" \n\nI leapt from his lap and started towards the clothes he had laid out for me, stuffing my cock back into my too-small underwear in the process.\n\nDaniel leaned back on his elbows and watched me dress, instructing me to turn and show him my ensemble every few moments. I strongly believe that he just wanted to check out my body in various states of undress, but I didn't blame him then and I don't hold it against him now. Not that I was anything much to look at, not in comparison with him or Ian or even Paul and Gordon. But Daniel had a way of making me feel like the most perfect boy in the world, the most pristine and desired, the most beautiful. Just when he looked at me. \n\nWe were only 10 minutes late to the banquet. Daniel had spritzed a bit of Calvin Klein Obsession cologne on his neck while we walked to the car. That had ended with a make out session that very nearly derailed the entire evening. Something about that particular scent...\n\nBut we made it, all the same.\n\nThe banquet itself took place in the gym. \n\nLong folding tables were set up in an open rectangle right on the basketball court, with the team taking the longest table under the hoop. The bleachers had been pushed back and the entire gigantic room, much too large for the rather small gathering, glowed under the huge dangling fluorescent lamps. The tables were covered with white table cloths and arranged with blue and green accents. Folding chairs lined the outside ring for the team and the spectators to sit and eat from the buffet table near the entrance.\n\nI was struck by the difference between this gathering and the swanky affair that had been Prom. The term \"banquet\" implied an English Country Estate type atmosphere, at least to me. I was rather shocked to find that the set up would not have been out of place for any Church Bazaar on any given Sunday in any State below the Mason Dixon Line. \n\nPlayers and coaches, teachers and parents all milled about the room at their ease, taking seats at the table to eat the barbecued chicken, corn on the cob and cornbread offered as sustenance for the event. I was glad for the much more casual vibe, having just barely survived the more formal prom setting. \n\nWhen Daniel and I entered, Ian greeted us almost immediately. He was dressed smartly in a tailored suit, marking him as the most well-dressed among the spectators who, like Daniel and I, wore some combination of jeans or khakis with polos and button downs. \n\n\"You guys look nice,\" Ian said casually, his red plastic cup clenched easily in his massive fingers.\n\n\"Thanks,\" we replied in tandem. \n\n\"So,\" Daniel started, \"how are Paul and Gordon taking things?\"\n\n\"Well enough,\" Ian said. \"Neither talked much on the way to drop them off, but they seem alright now. I don't think you have anything to worry about.\"\n\nDaniel smiled at his friend, our friend, and clapped him on the shoulder.\n\n\"You've been really great with all of this. I can't tell you how much I appreciate it.\"\n\n\"We both do,\" I added.\n\nIan shrugged.\n\n\"Hell, hot sex is hot sex, right? Plus, the two of you are good together. This one had a tendency to brood a bit and it could get fuckin' annoying as hell before you came along,\" Ian joked and returned Daniel's friendly clap on the shoulder.\n\n\"He's sexy when he gets all dark and moody, though,\" I replied to a round of light hearted laughter.\n\n\"If you say so,\" Ian added. \"Come on, Coach is getting ready to announce MVP in a bit. We should take our seats.\"\n\nWith that, Ian turned and walked towards the long table reserved for the players and Daniel and I followed.\n\n\"So you think I'm sexy when I get broody and moody, huh?\" Daniel whispered so that only I could hear.\n\n\"You're sexy when you just stand there and exist, baby.\" \n\nHis strong grip on my ass made me jump a bit.\n\n\"I don't deserve you, you know that.\" \n\n\"I know,\" I joked, \"but now you're stuck with me.\"\n\nHis hand lingered on my lower back as he lead me towards the center of the table. I glanced at the name cards arrayed before the folding chairs, searching for my own name as we neared the center of the table. I didn't see it anywhere and my trepidation grew steadily.\n\nIan pulled out a chair near the very center of the long table and Daniel found his spot next to him, right in the middle. Even Daniel's hand on my back couldn't halt the shock when I read my name on the white card placed to his right. \n\nWhat was my name doing in the center of the table?! \n\nSurely that was a mistake! I should have been down at one of the ends, mingling with the freshmen and sophomores who would move steadily inward as their baseball careers progressed over the coming semesters. I was a senior, of course, but I'd never expected to be placed with the actual players in the seats of honor.\n\n\"Surprise.\" Daniel whispered, pulling out my chair and motioning me to sit. \"Well, a small part of it. Coach asked me if it was alright. It was his idea.\"\n\nI sat in the seat numbly and did my best not to blink, scared I would dislodge a tear and give away my feelings. This was a room full of athletes after all. Tears were something to be shed after losses or injuries, not moments of unexpected joy and belonging.\n\n\"I don't know what to say,\" I murmured as Daniel took his seat beside me. \n\nHis hand rested on my thigh beneath the table and squeezed gently. He didn't remove it. Gordon sat to my right and I suddenly felt very much a part of something. I had feared that our last home game that afternoon would be the end of this camaraderie only to find it extended to this evening. It bolstered my small hopes that perhaps this would just be a transition to something different and new. Not a final curtain. My heart raced at the prospect. \n\nJust a few short weeks ago, I had no close friends, no one to whom I felt beholden or very much cared about beyond a passing interest. Things had changed so quickly and I had grown accustomed to feeling included. With that inclusion, came the near crippling fear that it would all come crashing down and I'd be thrown once again into my former state of loneliness.\n\nI hadn't truly felt lonely then. But then, I hadn't known what I had been missing. If I were to return to that place now, knowing what I knew, feeling what I felt, the loss would be devastating.\n\nA vision of Amy flashed in my mind and I made the note to attempt another reconciliation. If I felt that fear after only a few weeks, she must have been terrified after four solid years of being on top of the social world. Her world must have been transformed in some rather horrific ways.\n\n\"Don't listen to any of those jerk offs, David,\" Gordon leaned in to whisper to me. \n\n\"What?\" I asked. \n\nMy eyes must have been wide and my face a mask of fear or worry. Gordon nodded towards the end of the table where I noticed a few of the younger players looking in my direction and whispering to each other, occasionally laughing to themselves. \n\nTo be honest, I hadn't even noticed them. Gordon must have assumed that my apparent showing of emotion on my features was a direct result of the whispers and twitters coming from the younger students. \n\n\"Guess they figured something out,\" Gordon continued. \"Pay them no mind, they are just ass holes trying to be cool.\"\n\nSo, it seemed the younger players had been paying more attention to the little hints and whispers about me and Daniel than our closest friends had been. If they knew, or assumed, then it was only a matter of time before the rumor was completely enmeshed to all levels of the UpperSchool. At least I had some warning. I would have to prepare Daniel for what was most likely coming our way.\n\n\"Can I have your attention!\" Coach B bellowed. \"Everyone, take your seats please. Settle down.\"\n\nThe room quieted quickly. There was a reason Coach B was a coach and not a teacher. He could command a room with ease. Parents and teachers and athletes alike began to shuffle to their chairs and turned their attention towards Coach who stood at the center of the array of tables.\n\n\"As you all know, we had a fantastic season this year. Any time you can win more than you loose, you can call it a good season. And we certainly did that.\"\n\nThe room applauded and Coach B waited for the noise to die down before continuing.\n\n\"Now, none of that would have been possible without the efforts and skills of these young men behind me.\" \n\nHe swung his arms wide to indicate the team, which amazingly, included me. \n\n\"They gave their all to this team and displayed great skill and prowess throughout this season. While each and every one of them deserve to be named Most Valuable Player for this season, that honor can go to only one player. It was a hard decision to make, but one man stood out above the rest. His personal skill, selfless devotion to his teammates and willingness to do anything and everything for our little group went above and beyond. Ladies and Gentlemen, please put your hands together for our MVP...Daniel!\"\n\nThe room broke into waves of applause and cheers that rang from the iron rafters. Daniel stood slowly to receive his applause and my heart swelled in my chest. I clapped so hard I thought my hands might bleed. When the room quieted, Daniel took a deep breath and began his acceptance speech.\n\n\"Thank you Coach B, and thank you to every player that worked so hard this season. Without you, I never could have done this. As most of you know, a lot of what this award symbolizes is leadership. Courage and bravery in the face of obstacles and interference. For that reason, I can't accept this award on my own. The man sitting next to me has shown those qualities far and away more adamantly than any one I've ever met. He's shown not only me, but the entire team what it means to be a man, to face your fears with openness and honesty, and in the process to change the world around you for the better. So I thank you for this award and I ask that you put your hands together for our team manager who made this team worth playing for, David.\"\n\nAs Daniel spoke, my hearing faded to a buzz in my ears, my heart beat the only sound I could focus on. The wild applauding and standing ovation started by the seniors on the team passed in my eyes like slow-motion images in a silent film. Daniel's arm on my shoulder and Gordon's urging from my right somehow managed to lever me onto my feet but I was unable to react with the expected smiles. \n\nI felt like I had just been struck by lightning. \n\n\"Surprise, my love,\" Daniel whispered into my left ear.\n\nThe tear I had worked so diligently to hold at bay broke though and traveled down my cheek. Daniel brushed it away with a gentle flick of his thumb and smiled at me. \n\nThe remainder of the \"banquet\" passed by like a dream. I shook hands and nodded and smiled as best I could, but I was only ever able to utter a simple \"thank you,\" to their heart felt congratulations. As the evening wore on and people began to trickle back to their cars to head home, I was still in a state of shock.\n\nDaniel never left my side. His hand on the small of my back held me up and encouraged me, lending me his strength while sending the signal that he was my protector. He smiled proudly at me whenever someone approached, beaming at me and reveling in the attention everyone was paying to the man he so obviously loved. \n\nThe fact that this man was me had yet to truly sink in.\n\nDaniel didn't push my response. He let me work through the varying emotions on my own, never asking if I was okay or needed anything, simply standing by my side with resolute determination, a sure sense of himself and an even more sure sense of us. \n\nI didn't think it was possible to love him more than I already did, but I was proved wrong. \n\nSo very very wrong.\n\nThe drive back to his house was made with my fingers laced into his, squeezing him so tightly I could feel my pulse and his joining together, humming in concert through our skin. \n\nI was still a nearly silent shell of my usual self when we arrived at Daniel's house. Daniel ushered me into the living room and had me sit and get comfortable on the large white leather sofa.\n\n\"I'm gonna go get changed, babe. I'll bring you something, too. Back in a bit.\"\n\nHe kissed me on the top of my head and bounded off towards his room. I stared at the giant big screen TV and tried in vain to organize my thoughts. \n\n\"If it wouldn't be an insult, I would write you a check for everything you've done for my son,\" came the familiar voice of Daniel's mom. I turned by wrote, still a little in shock and numb, to find her ensconced behind the big kitchen island. She wore a gorgeous white and gold sleeveless dress and held her keys in her hands. She smiled at my warmly.\n\n\"Sorry, sweet pea,\" she said gently. \"Didn't mean to startle you.\"\n\n\"You didn't, Ma'am. I'm sorry, Daniel just surprised me is all. Still processing it.\"\n\nShe beamed at me.\n\n\"So he decided to share MVP, did he? God, I love that boy. We did \n\ngood with him, didn't we?\"\n\n\"You KNEW!\" I squeaked. \n\nShe nodded gently.\n\n\"He's my special boy. We've always been close. He asked my advice when Coach B told him he'd be getting MVP a few days back.\"\n\nAny organization of my thoughts and emotions I had been able to achieve to that point was once again thrown into massive disarray. \n\n\"So...,\" I mumbled sheepishly, unsure why I was still hesitant when the truth was very apparent. \"So, you...know, then? About us?\"\n\nShe nodded again.\n\n\"I saw the way he looked at you that first day you came here to tutor him. Didn't want to assume anything, but it's become more and more clear that my Daniel has found his first true love in you. And, my sweet boy, his father and I couldn't be more thrilled for the both of you.\"\n\nI wanted to cry. So I did. \n\nHot tears streamed down my face. I couldn't have stopped them if I'd tried. Daniel's mom rushed towards me on beautiful white high heels that click-clacked against the tiled floor. She sat down next to me on the couch. Before I could react my head was cradled on her shoulder and her gentle hand smoothed my hair.\n\n\"Hush now, sweet boy. No need for the tears. My son loves you and you obviously love my son, right?\"\n\nI nodded against her shoulder and the tear continued to flow.\n\n\"So much it hurts sometimes,\" I sobbed quietly.\n\n\"Shhh,\" she quieted me tenderly. \"He's my son and I will love him no matter what. Forever. You love him and he loves you. That makes you family, sweet pea. You'll have a home here for as long as you want it. Quiet those tears now. It's a happy time.\"\n\nShe pushed my head from her shoulder and wiped my tears from my cheeks and placed a gentle kiss to my forehead.\n\nI nodded to her, my eyes still watery, my heart expanding in my chest. It was all just so much. The Banquet, Daniel, and now his Mamma. I never thought it possible for a heart to break from happiness, but I was rapidly pushing towards that possibility. \n\n\"I just came to grab our keys. My husband has the memory God gave a goldfish and left them on the hook. We are headed out for the evening and Adam is back at Vanderbilt until next weekend. You take care of my special boy okay? Be good to him, and be safe.\"\n\n\"I promise.\"\n\nShe kissed my cheek again and wiped an errant tear from my skin.\n\n\"Call us if you need us. I'm off!\" \n\nShe rose from the couch and scuttled towards the garage door. Before closing it behind her, she flashed me a motherly smile that very nearly set my waterworks flowing all over again. \n\nShe was gone when Daniel returned, dressed now in a pair of flannel Pajama bottoms and a black tank top, a similar outfit over his arms for me. He must have misread my tear stained face because he dropped the clothes the moment he saw me and rushed towards me instantly. In a flash my head was on his chest and he, like his mother before him, stroked my hair and quieted my fears.",
        "\"I'm sorry baby. I'm so sorry. I didn't mean to make you cry. I'm so so sorry.\" \n\nHe apologized over and over, panic rising in his voice.\n\n\"Kiss me,\" I commanded, pulling away from him. \n\nHe looked at me, confused.\n\n\"Just kiss me,\" I repeated when he hesitated.\n\nHe pressed his lips to mine and I leaned into him, letting my body collapse onto his, my tension and fears and happiness melt over his skin like a wave breaking on the rocks. My wet cheeks pressed to his face and I breathed him in, not just his scent or his breath, but him. His selflessness, his passion, his love for me mixed with all of those qualities I held on my own, like cream blending with coffee to make something new, until you couldn't separate his from mine ever again.\n\nWhen I couldn't take anymore, I broke our kiss and snuggled to his chest, laying my smaller body on top of his entirely. His arm wound around my shoulder and he kissed the top of my head.\n\n\"I love you, David,\" he whispered while his finger tips ran over my forearms. \n\nI beamed. I smiled into his chest, feeling the heat of his body radiate into me, through me. \n\nI knew he loved me, of course. And he knew I loved him in return. But that night it felt like I'd discovered a secret part of the already deep river that was our love for each other; a portion that miraculously tunneled to the core of the earth, rising from the primal sea beneath, connecting us to the very beginning of time. \n\n\"I love you too, Daniel.\"\n\nWe stayed snuggled together on that huge white couch for a long time. Silent, but not needing to speak. \n\n\"Are you hungry baby?\" Daniel asked after an eternity. \n\n\"I could eat,\" I said in typical Southern non-committal style.\n\nDaniel gently unwound himself from around me and rose from the couch. \n\n\"Get comfy,\" he said, throwing the discarded pair of pajamas in my direction, \"I'll grab some snacks and something to drink. I'm in the mood to watch a horror film. Sound cool?\"\n\n\"As long as I can shield my eyes against your chest, I'm down for something cary,\" I replied as coyly as I could manage.\n\n\"That would be the major reason I'm in the mood to watch that particular genre, babe,\" he quipped. \"I'm not an idiot. Now, get out of those clothes. Give me a little show while I grab us some food.\"\n\nI laughed and stripped down to my underwear for him before pulling on the red pajama bottoms and white tank top he'd picked out for me. \n\nIn short order we were re-seated on the couch with a bowl of popcorn, chips and salsa (whole-grain chips because his mamma was on a health kick again, I was informed) and a bag of double stuffed Oreos Daniel found hidden behind a bag of granola. Unfortunately, there was only Almond Milk to dip them into, but you can't win them all. \n\nDaniel picked something from the massive collection of DVDs arrayed in leather bound binders and alphabetized on a shelf beneath the massive TV.\n\nTo top it off, he had found a bottle of red wine and opened it, pouring two glasses while the previews were still playing. After one sip it was readily apparent that neither of us possessed the necessary palette to enjoy the Vino. It was left untouched for the rest of the evening.\n\nI snuggled into him as the movie started and turned my face up for a kiss. He complied and the film began.\n\nI couldn't tell you what the movie was about. Or who starred in it. Much less the outcome. Not even sure if any character even survived the entire two hour event. We didn't make it through the first five minutes before Daniel's arm over my shoulder and mine resting on his chest had evolved into our tongues wrestling in an intense make out session that set the movie to mere background noise. \n\nDaniel positioned himself flat on his back on the sofa and pulled me on top of him. His kisses moved across my face to the side of my neck, his soft stubble scratching at my skin and making goosebumps rise on my arms.\n\n\"Yes, baby,\" I moaned as his fingers slipped beneath the elastic of my pajama bottoms to cup my firm ass beneath his big palms. \n\nHe squeezed me tightly and pulling my body upwards with sheer force. His lips moved to my collar bones, kissing and licking gently and driving me crazy. My hips thrust against him and drove his pelvis deep into the couch.\n\n\"Fuck me, Daniel,\" I breathed softly. \"Be my MVP, baby.\" \n\nI knew it was corny, even as the words left my lips, but I didn't care. \n\nI knew how to get Daniel's motor running full force. He pushed himself from the couch and pushed me up along with him. Without another word, he stood, took my hand and lead me towards the kitchen.\n\nHe yanked my arm hard and twisted my body around so that my chest faced the big center island. His hand, firmly placed in the center of my back between my shoulder blades, pushed my chest to the counter and forced me onto my toes. With a forceful yank he tore my pajama bottoms from my hips and legs, pooling them around my ankles.\n\n\"You want me to show you what the MVP can do?\" he said, his lips closing around my earlobe. \n\nI nodded and bit my lower lip. I wiggled my ass back and forth and screamed in pleasure and pain combined when his open palm smacked smartly into my bare skin as he spanked me. \n\nMy hard cock pressed firmly into the wooden counter beneath the marble top, pulsing my clear precum onto the shining cabinets, running slowly down their slick surface. Furniture polish would have to be added to the weekly shopping list. My thin cotton tank top did nothing to stem the cold of the hard stone on my skin; my nipples were at peak attention.\n\n\"You liked that? Huh?\" \n\nI nodded. \n\nHe spanked me again, a little harder and I moaned. \n\nAnother river of precum joined the first on the cabinet below. I don't know how Daniel had known I would respond to this rougher side of him, especially after our hours of cuddling and the emotions he'd driven me to over the past few hours. But there are many many ways to show love.\n\n\"I didn't hear you. I asked you if you liked that.\"\n\n\"God, yes. YES, I liked it,\" I hissed.\n\nHis palm massaged the spot where he'd smacked my bare skin.\n\n\"You want me to do it again?\"\n\n\"Yes.\" It was barely a whisper, an elongated hiss through clenched teeth, my cheek pressed to the cold counter and my fingers gripping the edge preparing for what I knew was coming.\n\n\"Yes, what?\"\n\n\"Yes, MVP.\"\n\nA third smack echoed through the empty kitchen and my entire torso scooted forward on the counter from the force of his swat. Suddenly his lips were at my ear again, his open palm kneading the sore skin where he'd just punished my tender ass.\n\n\"You tell me when to stop, if it gets to be too much.\"\n\nI nodded and wiggled my ass again. \n\nIt was far from being too much. I wanted more. \n\nI wanted him to empty his raw unrefined passion into me, to wash me with everything he had, all the raw masculine strength he had to give. I'd had so much love showered upon me today, so much joy. Daniel seemed to understand that I needed to feel alive in my physical body, too. \n\nA fourth spank had me moaning his name into the marble counter as I bit my lip again to keep from crying out.\n\n\"I love your ass, baby. Do you wanna know why?\" his iron voice taunted from behind me. \n\nWhen I tried to twist my torso to see him, he pushed my chest back to the counter with one hand. My hole throbbed and my cock spewed another gush. I didn't understand how I could feel so dominated and yet so safe at the same time. But I didn't think too hard on the subject, just floated on the dichotomy. I craved what he was doing to me, craved more of his touch, the roughness of it. No teasing my nerves slowly this time. Just ratcheting up the dial to 10 from the get go. \n\n\"Why do you love my ass?\" I whimpered, answering his question.\n\n\"Because it's mine.\"\n\nI nearly passed out. \n\nHe was correct. My ass was his to do with as he wanted. As was the rest of me: body heart and soul. \n\n\"Get on your knees and suck my cock,\" he growled, \"Make sure you get it real wet. It will be easier for you if my cock is nice and wet.\"\n\nThe pressure between my shoulder blades that held me to the counter was suddenly gone; before it was even fully absent I crashed to my knees, ignoring the thud and the dull ache that shot through my body, and turned.\n\nI looked up at Daniel, his chest heaving mightily in his tight black tank top, his nipples standing out beneath the thin fabric so I thought I could almost make out their borders. His thick cock was clearly outlined beneath the flannel of his PJs, a dark spot beginning to form at the head. My mouth watered and I reached for it only to have my hand slapped away.\n\n\"Ask nicely,\" Daniel scolded when he saw the hurt expression on my face. He winked.\n\n\"Can I please have your cock?\" I said quietly, staring at his taut thighs beneath my palms, feeling his thick muscles tense and imagining the power of them, the possibility. \n\n\"You sure you can handle an MVP cock?\" he teased. \n\nHis eyes burned like golden coals, shining in the light of the kitchen, his face seeming to gleam with some newfound internal fire.\n\n\"Yes, sir,\" I replied.\n\nHe reached into his bottoms and yanked out his dick, hooking the elastic beneath his huge, full balls. He was fully hard, his foreskin pulled almost entirely back from his head, a drip of precum about to fall from it. I opened my mouth and caught it on my tongue before it could fall to the tiled floor.\n\n\"Good boy,\" Daniel praised, taking my chin in his hand and turning my face up to meet his smile. \"Get it good and wet, baby.\"\n\nI could have sworn I was part snake considering the way my jaw nearly seemed to unhinge and devour Daniel's delicious tool. I sucked hard and fast, wetting his shaft and head as best I could, my tongue never stopping. I pushed him all the way down my throat, taking none of the usual time to enjoy the feeling of fullness and completion I normally sank into when I held him inside me. This was just the beginning, a utilitarian necessity for the future schemes I just knew Daniel was concocting in his passion addled brain. \n\nI made sure his entire cock, from base to tip, was gleaming with my saliva when I pulled him out. I was panting from the effort a bit, swallowing hard as I tried to catch my breath. Daniel's hands under my arm pits yanked me to my feet like a marionette on silken strings. He pushed me to the counter, this time pressing my back to the frigid marble and leaning his chest on top of me. His lips were just millimeters from mine, the feel of his breath hotter than I could ever remember it. My eyes widened in a mix of pure lust and unavoidable fear. \n\n\"For your sake, you'd better hope you got my big cock wet enough,\" he growled low in his throat. \n\nHe pressed his lips to mine, dominating me and forcing his tongue into my mouth. I lost any resistance I may have had and let him overwhelm me, surrendered my body to his even more. I was lost in the daze of his powerful kiss, so I didn't recognize the feeling when my bare feet left the tiled floor. My forgotten pajama bottoms and too-small underwear slipped easily from my legs as Daniel lifted me straight up off the floor in a dead lift. He pushed me high into the air but never broke our kiss until the last possible second when he'd raised me so far above him I could no longer crane my neck down far enough.\n\nHis chest bulged with the effort, his shoulders tense and straining but sure and unwavering. The lines and striations in his big biceps proved just how physically superior he truly was. My legs rose on their own and I hooked my ankles behind his back, my hard cock pressing against Daniel's chest, leaving a stain of precum on his black tank top. My arms hooked around his neck and I saw him relax a little as I took some of the pressure from him. \n\nI felt the warm skin of his palms on both of my ass cheeks, spreading them and holding me up at the same time, his fingers digging deeply into my flesh. My ass still ached a bit from his firm spankings. I could sense his slick, hard cock just beneath my exposed ass, my hole opened to the air and vulnerable. Daniel spread my ass with his hands; my spine straightened at the thought of what was sure to come.\n\nSlowly, I felt my body lower, controlled with ease by Daniel's unyielding strength, sliding against his chest. The soft fabric of his tank top tickled the underside of my cock, making me sigh as I grew closer and closer to his cock head. \n\nFirst contact was a rush nothing could have prepared me for. I felt the heat of his slick dick press into my open hole, my thighs instantly squeezing around his waist. He didn't hesitate or slow my downward progression, keeping the pace steady, forcing my body to adapt.\n\n\"Oh, shit!\" I screamed and dug my nails into his shoulder blades as his uncut cock opened me up and pushed deeper inside. \n\nMy ass burned with the pain and pleasure and intense pressure as inch after inch he sank into me with ease, my spit and passion the only lube we needed. It felt like his cock was a good three feet long as it squeezed into me, filling me up and making my spine go straight, my legs numb and my vision blurry. I was an incoherent ball of nerve endings and panting groans by the time his thick hardness slid past my magic button and I felt my hips settle to the base of him.\n\nSuddenly, my breath was knocked from my lungs and I grunted; the room swirled before my eyes. \n\nIt took me a moment to realize that Daniel had slammed my back against the pantry door. He pressed me hard against the wall, my legs still clinging tightly to his waist as my ass hovered in mid air, impaled willingly on his throbbing cock.\n\n\"You like that MVP cock buried deep in your tight ass?\" Daniel growled, quickly pressing his lips to mine in a rough kiss. \n\nI nodded and whimpered as I felt his cock pulse a little pre cum deep inside me.\n\nI felt every last inch of him as he slowly withdrew himself from my ass, keeping just the head inside, collecting extra lubrication on the backstroke. He slammed all the way back inside with a hard thrust and drove every other thought from my head in doing so.\n\n\"Pound me, baby,\" I begged, my voice a mindless slur. \"Fuck me hard...ohhhh, fuck\" \n\nI was a whimpering ball of near panic and pleasure. He kept me just on the edge of logical thought, on that blurry line where I knew what was happening one moment only to be driven by instinctual lust and passion the next before the tables turned again and logic took over again. \n\nHis cock was like a machine: constant, near super human speed. His cock glided in and out of me with ease, each time pouring full force into my prostate and making the world go white again. My finger nails dug deep lines into his shoulders and back, feeling them tense and release as he continued to pump into me.\n\n\"Take my cock! You want my MVP cum deep in that tight ass?\"\n\nI whined my agreement and somehow found the strength of mind to unwind my arms from his neck so I could cup his face in my hands and kiss him. I panted through the kiss in time to the powerful thrusts, barely holding on as he drove me higher and higher, still pushing my back into the wooden door.\n\n\"Oh fuck...I'm gonna cum baby,\" I moaned into his mouth, holding on tight to the nape of his neck as I continued to kiss him while his thick uncut cock cut through me like a knife.\n\nI felt my entire body start to tingle, the familiar unhinging of my soul from my physical body that preceded a hands free orgasm.\n\n\"Don't cum until I give you permission, Nerd.\"\n\nMy eyes fluttered shut. It had been a while since he'd called me Nerd like that and it dredged up the sex-fueled beginnings of our relationship, before love and truer feelings had deepened our bond, when we were still exploring what we could maybe one day become. \n\n\"God, Daniel...I don't think I can stop it...fuck me harder...oh, god yes, fuck baby! Fuck my ass with your MVP cock!\"\n\nI lost all inhibitions, I didn't care what came out of my mouth. I just craved more of what he was giving me, more of the lack of control, the freedom to just be, just feel him devouring my body.\n\n\"I'm gonna fill your tight ass, nerd. You ready for it? You ready for this load?\"\n\nHe sounded like someone else, but his eyes were still My Daniel. Still the same soft brown lakes I loved to lose myself in. The fantasy that burned on their surface couldn't ever hide that, not from me. But it went a long way in turning up my desires.\n\n\"Cum in me, MVP!\" I screamed, \"Give it to me, baby. Cum inside my tight nerd hole!\"\n\nAstoundingly, he increased his speed, slamming himself in and out of my spasming hole so quickly I couldn't catch my breath, just moan wordlessly as sight and sound began to fade and my soul disconnect even more. His balls slapped into my ass, his fingers dug harshly into the skin until I thought there would be a permanent imprint of him there.\n\nHe growled like some primordial beast, vibrating through our kiss, a sound rising from deep inside him, from that unbroken line of ancestors that stretched back to the beginning of time itself...\n\nand he emptied into me. I felt his cock expand and jet after jet of his cum spilled into my twitching ass, driving my own orgasm over the brink. I felt my cum soak into his tank top, trapped between our torsos. My entire body stiffened as I took his load, my muscles locking in place. I felt some of his hot whiteness leak from my hole. I clenched tight, trying to keep him inside.\n\nWe both panted from the effort, but Daniel proved his strength once again. My back left the pantry door and Daniel carried me in shuffling movements, his still twitching cock firmly ensconced inside my now sore hole. I kissed him over and over, using his body like a tether to draw myself back down to earth from the highest places he had just taken me. I didn't know or care where he was taking us, just as long as he never withdrew his thick cock from where it was right at that moment.\n\nDaniel knelt easily to the floor, keeping himself inside me and lowering my back onto a very soft rug. I finally had the sense to look around and discovered he had carried us all the way down a long hallway to the Den: an oak and mahogany lined room with reading chairs and an elegant old Hollywood style sofa in dark maroon silk. My back was pressed to a luxurious fur rug and to my right, the bricks and stones of the huge gas fireplace loomed.\n\n\"Cliche, I know,\" Daniel whispered, the machismo and domination now gone from his voice, \"but I can't help it. Fur rug and a fireplace are just...God you look so beautiful.\"\n\nMy legs were still wrapped around his waist, his hard cock pulsing inside my ass and my arms wound around his neck as he rested easily on his palms and hovered above me. I pulled his face down and kissed him gently.\n\n\"Light that fire place,\" I suggested. \n\nDaniel flicked a switch somewhere and the blue and orange flames soon danced around the faux logs. I stared at him in the new light, watched the way the yellow and gold and orange danced against his olive skin and made shadows flicker across his square jaw and broad forehead. I didn't think it was possible for him to be more beautiful, but he was continually proving me wrong.\n\nI pulled his cum soaked black tank top over his head and threw it aside so that I could run my fingers over his tight chest. I pinched his nipples lazily and got a jolt of my own in return. My tweak caused his hips to thrust forward and press his cock a little deeper into me.\n\nWe both giggled when we realized what I'd just done. He smiled down at me and I pulled him in close for a long and passionate kiss. The heat of the fire place wasn't even registering while my hands moved up and down Daniel's muscled back, felt his deltoids give way to his lats, and then the strong chorded muscles of his lower back. I came to rest on his spectacular ass. I couldn't help but pull him closer towards me, burying his rock hard cock deeper into my cum drenched ass. I pulsed my hole around his girth, making him shiver on top of me.",
        "\"Do you think you have another one in you?\" I asked.\n\n\"For you, Always.\"\n\nHe kissed me and slowly pulled his cock from my hole, pushing back in with ease. His tongue flicked lightly into mine, his hips never slamming into me, just gently and slowly thrusting and clenching his powerful ass each time he was fully inside me again.\n\n\"God, baby. I love you so much,\" he moaned as he pushed inside again.\n\n\"I love you, too. Show me. Give me another...\" I encouraged in a breathy sigh. \n\nIf you asked me to choose which \"style\" I preferred of the two options presented that night, I wouldn't be able to tell you. All I know is that I was in ecstasy both times. \n\nWhere it took him only minutes before to send my body into a whirlwind of passion, he took his time now. His cum lubricated my hole already and I reveled in each and every new sensation he drove into me. \n\nDeliberate and controlled, masterful, he pulsed his thick cock every time he pressed into my spot, and smiled when my eyes fluttered shut. I rocked on the fur rug, Daniel's hips guiding and undulating into me.\n\nIt didn't take long for the tingles to grow. Slower this time, but almost agonizing in their intensity. When it happens all at once you can't really focus on the minutia, just the big picture. But now Daniel was turning the dial slowly; each new notch I could feel in perfect detail.\n\nI felt my legs begin to weaken. Then the tips of my fingers start to tingle. My breathing picked up. My ass began to clench onto Daniel's thick cock in waves as I lost control in slow but unyielding increments. My heart beat increased like a metronome going from legato to andante at a measured clip. Each new change was slowly building up inside me.\n\nDaniel noticed immediately. \n\n\"I want you to cum first,\" he said. \"I want to watch your face when you blow, okay?\"\n\nI bit my lower lip and nodded.\n\n\"Keep doing that...oh, god...and you won't have long to wait.\"\n\nHe smiled the crooked half smile that had first sent me on the path to where we were today; my cock pulsed a huge stream of pre-cum mixed with the last of my recent orgasm.\n\n\"I love your eyes,\" Daniel said, still undulating his lower body and sliding in and out of my ass with ease. \n\n\"I love your nose,\" he continued.\n\n\"Oh, god,...\" I groaned.\n\n\"Your lips,...\" he kissed me softly. His cock pressed against my spot and he pulsed his cock into it hard.\n\n\"Your neck,...\" His lips kissed and licked softly at the side of my neck.\n\n\"Your chest,...\" he placed one hand on my chest and squeezed, keeping himself aloft on his other arm.\n\n\"Your adorable nipples,...\" He flicked at one softly.\n\n\"Fuck, yes...\" I hissed. I felt my balls pulling up. I was close.\n\n\"I love your stomach.\" \n\nHe traced a line down the center of my stomach to my belly button.\n\n\"I love your belly button.\" \n\nAll the while, he never slowed or picked up the pace of his hips and thrusts into me. Constant and steady as if he were keeping time to some piece of unheard music.\n\n\"I love your beautiful, big, thick cock.\" \n\nHe closed his fingers around my shaft and squeezed gently.\n\n\"Ahhh...oh fuck. I'm gonna cum again...\" I whined, writhing uncontrollably beneath him.\n\n\"And most importantly,\" he leaned in to kiss me again, staring into my blue eyes deeply, still thrusting, and now gently stroking my twitching cock, driving me closer and closer to where he wanted me, \"most importantly: I love you.\"\n\nHe squeezed my cock hard and pushed inside me with a final deep thrust as he leaned into kiss me hard and deep.\n\nI lost all control of my muscles. I felt my cock spew a long stream of hot cum, felt it splash into my chest and chin, but other than that...I was hypnotized by Daniel. \n\nI lay sprawled out beneath him, joined at three points, lips, cock, and ass. I was like a puddle. I felt myself spread out and my mind disappear into nothingness. I never believed in near death experiences, seeing the white light and the tunnel and all of that. But I certainly do believe in extreme orgasm experiences. Maybe your soul leaves your body in both cases.\n\n\"You back?\" I heard Daniel whisper as if from a great distance, his fingers stroking my cheek softly.\n\n\"Huh?\" \n\n\"Your eyes kinda glazed over there for a minute.\" \n\nDaniel lay beside me, his back to the flickering fire place, his head resting on his palm as he levered himself up on an elbow. I wondered if maybe I had died. Surely no one mortal human had the right to look like that?\n\nI hadn't even felt him remove his cock from inside me, or roll off of me. By instinct, I scooted myself to mirror him and snuggled my chest as \n\nclose to his as I could.\n\n\"I'm coming back now,\" I assured him, feeling myself center and coalesce into a unified body and spirit. I pressed a gentle kiss to his lips.\n\n\"Thank you for that,\" I offered.\n\n\"For which one?\" \n\nI snorted a laugh and playfully slapped Daniel's hairy chest, letting my fingertips linger on his flushed, glistening skin.\n\n\"Don't make me choose!\" I mocked. \"They were both phenomenal.\"\n\n\"At your service, my love.\" \n\nHe returned my gentle kiss.\n\n\"Well, we need to get cleaned up eventually or else risk ruining this rug and giving away our fun to the entire family,\" Daniel quipped rather matter of factly a few moments later. I would have been more shocked at the change in tone if he hadn't coupled the outburst with a swift smack to my still sore rear end. As it was, I yelped, my eyes going wide, and collapsed into a fit of giggles.\n\nI was still nervously twittering away as Daniel put an arm around my shoulder and levered me onto my feet. He kissed me gently and turned towards the kitchen to collect our forgotten, discarded pajamas. \n\nI got the encore performance of a lifetime, trailing behind his naked body by two full paces so I could stare at the round perfection of the powerful being who had just driven me to explosion...twice.\n\nHe flicked the switch to throw the kitchen into darkness and put an arm around my waist, pulling me in to snuggle close to him as we walked. He carried our bundled clothing in the crook of his arm.\n\n\"Shower, then bed, babe,\" he listed, planning the remainder of the evening.\n\n\"I make no such promises,\" I added.\n\nDaniel laughed. We began to take the stairs up to his room.\n\n\"We have to get up early in the morning. We have a lot of shopping to do.\"\n\n\"Shopping?\" I asked, confused.\n\n\"Mhmm,\" he said with a knowing nod. \"You do know what's happening this weekend right?\"\n\nI did know what he was talking about. I just hadn't realized it was this weekend. Finals week had always been so...final for every other year in high school. Of course I would forget that after your Senior Finals week, you went to the Senior Camping Trip.\n\n\"The Camping trip!\"\n\n\"Yep.\" Daniel agreed. \"And I just figured you and I could go get the gear. A tent, backpack, all that stuff.\"\n\nI snuggled in to him a little more.\n\n\"That's very sweet of you. I promise I'll stick to your plan. Shower and Bed. No funny business.\"\n\n\"Hey, now!\" Daniel interjected quickly, \"there's no need to be Puritanical ya know? I mean, I'm not saying don't touch me! You're allowed to touch me!\"\n\nI laughed long and loud.\n\n\"I'm allowed to touch you huh? Like this big cock, I'm allowed to touch?\" I grabbed at his semi-hard cock with my free hand and opened the door to his bedroom with my other. \n\nThe schedule he'd picked was quickly amended. As I intended. \n\nAs they say, turn about is fair play; Daniel had spent a good hour rocking my world and fucking me senseless. Didn't he deserve the same in return? Nay, dare I say it, REQUIRE the same in return!\n\nWe delayed the planned shopping trip by 4 hours when we finally snuggled in to bed and set his alarm clock."
    ],
    "authorname": "DAMackey",
    "tags": [
        "spanking",
        "gay",
        "highschool",
        "jock",
        "nerd",
        "bareback",
        "baseball",
        "shower",
        "gym",
        "anal"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-12"
}