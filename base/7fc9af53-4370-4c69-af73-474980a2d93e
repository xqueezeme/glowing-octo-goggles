{
    "title": "Little Packages Ch. 02",
    "pages": [
        "A quick author's note:\n\nWhen I wrote this, it was designed to be stand alone if people hated it or just ignored it. But if a few people liked it and the reviews were kind, I had more stories I could tell with these characters.\n\nThere is no way I would have predicted it would get such a high rating, that so many people would comment, and that they would say such kind and encouraging things. So thank you. I'm genuinely floored.\n\nI've already started work on Chapter 3, although maybe don't expect me to turn out 19,000 words in a week like I did with this. I've notes on Chapter 4 and beyond. I don't know how long it will run, but I promise it will have an ending.\n\nOne minor note. In the last story I said Ashley goes to Laval. Turns out Laval has a design school, but it is graphic design. Further research turned up LaSalle, which is a fashion design college in Montreal. Going forward, that's where Ashley attends school.\n\nBecause we all know how important accuracy is in pornography.\n\nOnwards.\n\n----------------\n\nAshley\n\nI sat by myself in the train, enjoying the luxury of not having someone sit next to me. I normally get stuck sitting next to someone who views a tiny person as an opportunity to expand their personal space by moving into mine. I often bundle up in puffy coats or hoodies on public transit and keep to myself which, I dunno, seems to signal to a certain kind of person that what I really want is for them to get as close as possible and give me an anxiety attack.\n\nBut it was my lucky day as nobody sat next to me. I had a puffy coat on the seat next to me, but that rarely worked as a deterrent. And I doubt my outfit was scaring anyone off - I had on a black baseball hat with a bat symbol on it, a black mini-dress with red trim and mostly black thigh high socks with red stripes at the top (daddy likes me in thigh high socks, daddy's getting me in thigh high socks). I looked pretty cute if I do say so myself.\n\nMy red hair might scare some off. You know what they say about redheads. But if I had to guess it was likely the frantic energy radiating off of me. Some might say I was giving off a crazy lady vibe. Which was fine with me if it meant I didn't have someone with a \"wide stance\" in the seat next to me. Because soon I would see my daddy again and that meant I didn't have the brain power to deal with creepy assholes.\n\nWell, that and I had been edging since Wednesday to get myself ready for the weekend. I was already super horny and struggled to focus in classes this morning. I warned him that I needed my daddy this weekend and I was probably going to be little for a lot of the next couple of days, if that was ok. He said he'd take good care of me.\n\nOver the last two weeks we'd texted back and forth on how our daddy-little girl relationship was going to work. He was big on making sure we were on the same page which, after years of being talked to it was nice, although a bit intimidating sometimes. I did tell him that I often needed to be little when I was either really stressed or really horny.\n\nThat led him to ask how school was since I came back from comic con and I told him it was fine. But even as I texted that to him, it felt like something a kid in Grade 7 says when a parent asks how their day went. It wasn't fine, but you're not telling mom and dad that because you don't want them involved in your drama. Fine covered a wide range of sins. Were my classes fine? Sure, I was getting good grades and I enjoyed what I was learning. Things were fine.\n\nWere my classmates spectacular assholes determined to bully and torture me? Why, yes they were. But things were fine.\n\nI thought Heather and Lesley would be bad after we returned from the con; I just underestimated how awful the reality would be. When I got to class the Monday after the con I discovered they'd started a rumor that I'd whored myself out to a creepy old dude at the comic con for some geek stuff I wanted. The fact I was still wearing daddy's collar with the lock on it only made things worse. For a lot of the last two weeks I was getting stares, people whispering and pointing, and laughter behind my back on a regular basis.\n\nSome part of me knew I should fight back, find that anger I had at the con when I told them to fuck off and leave me alone. But I just couldn't locate it. I had always avoided the queen bitches in high school. I just couldn't sustain the viciousness and delight they seemed to take in trying to ruin people's lives. I could sprint; they ran marathons. \n\nI remember being told it would be different when I got to college. That all the pettiness and drama would get left behind. Then I went to fashion school. All it did was level up.\n\nI kept thinking if I could just cosplay in class I would be ok. I could pretend to be Batgirl or Black Widow and give them a look that let them know I could kick the crap out of them anytime I want. I could pretend I was strong.\n\nThat didn't happen. However, I did start wearing the Batgirl t-shirt I \"borrowed\" from daddy to go to sleep at night. That helped. It made him feel closer.\n\nAt least I had my roommate, Gillian. We had little in common, but when I answered her ad looking for a roommate we hit it off immediately. I was doing fashion design, she was studying video game design. She had a good 6 inches on me and buzzed her hair. She had no concept of fashion and didn't care much for anything not on her computer. She was also, proudly, a dyke. But we'd both grew up in small towns - me in Saskatchewan, her in Northern Ontario. We'd both been picked on for who we were. I was a weird geeky kid who made early bad choices with drugs, alcohol and men because I needed to be loved. Gillian didn't talk much about what had happened, but I saw scars on her body one time when I walked in on her getting out of the shower. So it wasn't good. \n\nShe had zero tolerance for bullies and assholes, which made video game design an interesting career to pursue, but she lived for a good online brawl. So when she found out what Heather and Lesley were doing to me, she was ready to go and beat the shit out of them. I had to talk her down from it.\n\n\"I know they're being bitches,\" I started.\n\n\"Fuck that. Some of my best friends are bitches. They are cunts,\" she said, her jaw snapping hard on the last word, to emphasize the point.\n\nI laughed. Gillian loved the word cunt. She'd read online that the Scots viewed the word as punctuation. She liked that line of thought and immediately subscribed to it. We were sitting in the tiny living room, chatting to each other over our laptops. I was looking at cosplay from the con on Instagram and making notes for future costumes. Gillian was multitasking between studying, Twitter fights, and porn.\n\n\"Seriously, what kind of cunt does that? Making someone feel like shit just because you think it makes you look better? Fucking people like that need a good shitkicking.\"\n\n\"Daddy doesn't have much time for bullies either. If I told him what was going on, he'd lose his shit.\"\n\nShe nodded her head approvingly. She'd obviously noticed the collar when I came home and pumped me for information, which I gave up quickly. She was skeptical about the kind of man interested in a 19-year-old girl, but when I told her I'd thrown myself at him, she just thought I was nuts as opposed to him being a total scumbag.\n\nShe didn't get the daddy thing, but she was gay, so that was a given. I told her to imagine being with an older, successful woman who would take care of her, let her zone out when things got too stressful, and she would get to have spectacular sex with this woman and in return all she had to do was call her \"mommy\". The dreamy look in her eyes said it all. After that, she at least understood the appeal so she didn't give me any more crap about it.\n\n\"You should still tell him,\" she said, turning her attention back to her screen. She was definitely watching porn. \"If he cares about you, he'll help you figure it out and not just rush up here to kick the shit out of them, as much as the cunts deserve it.\"\n\nI said I'd think about it. And now, here I was, minutes away trying to figure out how to tell him what was happening that didn't involve him driving to Montreal and yelling at people. I knew how hard the last two years had been for him. I just wanted to make him happy, not give him more problems.\n\nPlus, there was a lot going on this weekend. The con was one thing, this was an entire weekend of just the two of us. I was pretty sure things were going to go well. Almost certainly they would. So maybe I'll wait until the next time before talking to him about it. Just to take a little pressure off.\n\nBut then the train is pulling into the station, and I'm wrangling this stupid overloaded suitcase out of train and then I see daddy and everything blisses out and, for the first time in two weeks, I feel safe again.\n\n***\n\nI'm sitting in daddy's very boring and practical black car with my legs curled up underneath me. I'm shivering a bit because Kingston is cold and I'm wearing a mini-skirt. I also might have neglected to wear panties and the seat is cold which means my ass is numb. Daddy glances over and sees me bundled up and flicks a button. The seat immediately starts to warm up, making my butt warm for the first time in hours.\n\n\"Ohhhh, that's nice, daddy,\" I said. \"Maybe this isn't such a boring car after all.\"\n\nOoops. Said the quiet part out loud. I do that sometimes when I'm nervous.\n\n\"I have a boring car, do I, little girl? Maybe I should trade it in and get a sports car. If I have a teenage girlfriend I might as well completely dive into the middle age man cliche,\" he said.\n\nI could tell from the look on his face that he was teasing. I liked looking at him. He looks so much happier than the first time I saw him at the con in New York. He looks relaxed. His jaw is less tight, there are fewer lines around his eyes and his shoulders are relaxed. He looks happy to see me. I feel lighter just looking at him.\n\n\"I always thought that men who got sports cars when they hit a certain age were compensating for an...absence in their life. That they're lacking something,\" I said. And then I remembered. \"Oh, and the same thing with big ass pick-ups. God, I saw so many large pick-ups in Saskatchewan. You just knew they had small dicks.\"\n\nHe roared laughing. I felt myself getting even lighter listening to him laugh like that. Then he glanced over at me, looking very serious.\n\n\"Do I need to get a big ass pick-up, little girl?\" he said in a deep and serious tone.\n\nI leaned over, rested my hand on his upper thigh and gave him my best lustful little girl look. \"You've got nothing to compensate for, daddy,\" I purred.\n\nHe smiled and bent down to kiss my head while still keeping an eye on the road.\n\n\"Good answer, princess.\"\n\nI bounced back in my seat, squirming that I'd made my daddy happy and that my butt was warm. \n\n\"By the way, what on Earth do you have in that suitcase? Did you finally kill Heather or Lesley and you need to dispose of the body on the land behind my house?\"\n\n\"I wish,\" I said a little too quickly. Shit. He gave me a look.\n\n\"Can we talk about it later, daddy? I'm just really happy now and I don't want to get into that.\"\n\nHe nodded. \"Fair enough. So what's in the suitcase? All your sex toys?\"\n\n\"Daddy!\" I squealed, blushing. I had a small vibrator and that was it. When I needed to get off I normally just used my fingers. Not many sex shops in small town Saskatchewan and I'd been too nervous going into one by myself in Montreal. Gillian had an extensive collection, but it's not like I could borrow something.\n\n\"Judging by your reaction, I'm going to go with no. But seriously, what's in there?\"\n\n\"I thought I'd save time and bring a bunch of outfits that I could just leave here so that in the future I could travel lighter,\" I said.\n\n\"Makes sense.\"\n\n\"Plussss,\" I drawled out, \"Gillian is getting a bit annoyed at all my cosplay 'crap' all over our place and I thought maybe I could keep some stuff here and maybe work on some of it on weekends when I come to visit. I know I should have asked, but you said you had lots of space and I didn't think you would mind and besides...\"\n\nHe laughed, and I realized I was babbling again. \"It's fine, princess. I have tons of room.\"\n\nGod, he was such a good daddy. I could feel myself sink into little space, like sinking into a fluffy cloud. Plus the car seat was now heating up more than my ass. Combine that with a couple of days of playing with myself and not cumming, and I knew I was starting to turn red.\n\nAnd, of course, he noticed.\n\n\"Have you been edging, princess?\" he asked, resting his hand on the part of my thigh that didn't have a sock or skirt covering it. I felt my breath hitch and my brain start to slow down. \"Because you've been squirming an awful lot and you're very flushed.\"\n\nShit. There was no way I could lie to him when he was looking at me.\n\n\"Yes daddy,\" I said in a small voice. Don't ask since when. Don't ask since when.\n\n\"When did you start edging, princess?\" he asked.\n\nFor fuck sake. Daddy always figured this out. And with his hand rubbing my thigh and coming really close to my pussy, I just blurted out the truth.\n\n\"Since Wednesday morning, daddy. I know you said no edging until Thursday evening but I had easy classes and I needed to be in a really little headspace for this weekend and it was really hard to resist because I missed you and I was getting super horny and...\"\n\nHe shot me a look and I stopped babbling. He also took his hand off my leg. I felt like I could cry. I wanted his warmth back.\n\n\"Start edging now and don't stop until we get to the house,\" he said. \n\nI gasped. We'd been driving for about 20 minutes. It was getting dark out, so it was hard to see where exactly we were going but I could tell we were outside Kingston and there wasn't much traffic. I didn't know how long it would be until we got to daddy's house. I could ask but I was sure I'd get no answers.\n\nHe was still looking at me. I bit my lip and uncurled my legs. I slid down in the seat a bit and then hiked up my dress. I could see him trying to look at me while still keeping his eyes on the road.\n\n\"No panties,\" he said. \"I figured as much.\"\n\nI began gently rubbing around the outside of my pussy and groaned. If I touched my clit at this moment I was afraid I'd explode. Days of being wound up, daddy watching me, driving in a car, fuck it was so hot. I did this for a few minutes, the hum of the car, the heat from the seat, daddy's eyes, all working on me, driving me nuts.\n\n\"You're a naughty little girl, aren't you,\" he asked, sliding a hand over my left sock, but not touching bare skin. Fuck, he was not going to make it easy for me to last. I was lightly brushing my fingers over my pussy, trying hard not to touch my clit or put any fingers inside. I was already so primed that I felt ready to explode.\n\n\"Oh daddy,\" I groaned. \"I'm going to need your cock when we get home, daddy. I'm so horny for you, daddy. I've been waiting two weeks for you to fuck me again and...\"\n\nThat's when daddy hit a pothole, my hand slapped onto my clit and I arched my back and screamed. If it hadn't been for the seatbelt I might have rocketed through the roof of the car.\n\nBut I was a good girl and didn't cum although I have no idea how.\n\nEven daddy was distracted by the display and slowed the car down a bit.\n\n\"Are you ok, princess?\"\n\n\"Please let me cum, daddy. I'll be a good girl from now on. I'll suck your dick all weekend, just let me cum now, please daddy, please daddy...\"\n\n\"No,\" I heard him through the haze. My fingers were working again, carefully because I was so desperate to go off. The slight touch of my fingers on my pussy made me twitch. \"But I'll give you something to help distract you.\"\n\nThat's when I felt his fingers around my face. His thumb rubbed against my lips and I greedily latched onto it and began to suck. It wasn't his cock, but I had something hard in my mouth I could suck on. I looked at daddy's face and there was a look on his face I couldn't process. Happiness? Lust? Awe? I kept sucking on his thumb and then I just zoned out. My brain just went away. I just had a dim thought of sucking on daddy's thumb and my fingers lazily playing with my pussy. I was edging still and it felt amazing, but there was no danger of cumming. I was just riding the wave of bliss. Maybe it was sub space, I don't know. I hadn't felt anything like it before. I felt so little and content.\n\nA couple of infinities later I felt his thumb slide out of my mouth and I moaned at its absence. The car had stopped. I heard some crunching noises and some doors slam, but I was still way out of it. And then daddy was gently shaking me.\n\n\"Put your arms around my neck, princess.\" I did and then I felt myself leveraged out of the car with daddy's arms around me. I moaned at the sudden cold, but then it was warm again. Then I was gently laid down on something soft. And that's the last thing I remembered as I passed out.\n\n***\n\nWhen I woke up, I was covered in a blanket and I could smell food cooking. That reminded me I had been too nervous and excited to eat today and I was starving. I sat up and my brain was still fuzzy, but I was able to process I was in daddy's living room. There was a huge window to the left of me, but it was dark so I couldn't see much outside. Although it looked like there were a lot of trees. There was a wood stove in front of me throwing off heat which felt nice because I realized that even with the blanket I was still chilly. I glanced around the room, but it was sparse. I didn't see many pictures or art. Daddy said he'd only moved here a few months ago so I guess he was still setting up.\n\nI stood up and my legs wobbled, but held. It was the weirdest thing; I hadn't cum in the car, but my brain just shut down. I hope daddy wasn't too freaked out. Man, my body does weird things when I get little and horny. Actually, it does weird things when I'm horny and around my daddy, which was interesting when I thought about it.\n\nI turned around and started to walk towards the sound of food only to see daddy leaning over the stove. It was a big open space with the living room, dining room and kitchen basically one room, but it curved a bit, which explained why I didn't see him at first. He must have heard me stir because he turned around, saw me, and smiled.\n\n\"There's my sleeping beauty. How are you feeling?\"\n\nThere was an island breaking up the kitchen and I sat on one of the stools around it. I positioned the blanket around me. The combination of no food and the bliss left me chilled, wood stove or not.\n\n\"I thought sleeping beauty was supposed to wake up when her prince kissed her,\" I said pouting.\n\nHe came over and kissed me on the forehead.\n\n\"I tried, princess. It didn't take. You might just have to find another prince.\"\n\nI shook my head vehemently against that idea.\n\n\"But you were pretty out of it. And I'm betting you skipped lunch, so I thought the smell of cooking food would eventually make your stir. It's a good thing it did. You had another 10 minutes and I was going to wake you up.\"\n\nSomething was rattling around in the fog in my head about that sentence. \n\n\"Daddy, what time is it?\"\n\nHe had an old school wrist watch. I loved that he wore a watch. Not an Apple watch or something that measures steps, just a simple, classy watch with a leather strap. \n\n\"It's about quarter to six,\" he said. \"You've been out for about 45 minutes.\"\n\nThat's when what I had been trying to remember came crashing out of the fog. Gillian.\n\n\"Fuck!\" I said, getting a raised eyebrow from daddy. \"Where's my phone? Please! It's an emergency!\"\n\nHe pointed his spoon toward a hallway I hadn't noticed before. \"I think it's still in your coat, hung up in the porch,\" he said, but I had already thrown off the blanket and bolted out of the kitchen. It was a short corridor and then a junction. The left looked like it led to a deck on the front of the house, the right towards the back of the house. Through the door I could see the car parked. Mercifully I spotted my coat right away hanging on a rack on the wall. I reached into my coat and pulled out the phone. As I feared, there were a series of increasingly urgent texts from Gillian. The last one was five minutes ago.",
        "\"Bitch, if I don't hear from you by six I am sending the fucking army to that house.\"\n\nI finally got the phone to unlock and quickly texted back.\n\n\"I'm fine! I'm fine! I passed out and just woke up.\"\n\nGillian had insisted that if I was going to spend the weekend at the house of a man who was living in the middle of the woods, then I was absolutely going to text her at prearranged times to make sure I was ok. I thought it was silly, but agreed to Gillian's plan. Now, I'd almost accidentally had daddy arrested.\n\nMy phone buzzed. \"Ashley, you can't scare the crap out of me like that. Come on.\"\n\nI felt myself getting teary. I'd really screwed up. I'd come too close to really, really screwing up.\n\n\"I know, I'm so sorry. I'm safe and fine.\n\n\"Daddy's making me supper right now.\n\n\"I'll text tomorrow at the right time.\n\n\"I'll make it up to you next week.\"\n\n\"Better fucking believe it,\" she responded. \n\nPause.\n\n\"Ashley, what else are you forgetting?\"\n\nFuck. I'd forgotten to give her the pass phrase. To let her know I wasn't being coerced or anything. I'd wondered what had happened to make her quite this paranoid, but didn't ask. I texted back.\n\n\"Gillian is the sexiest bitch at LaSalle.\"\n\n\"God damn right I am.\" I was about to apologize again when another response came through.\n\n\"I'm ok. Just don't forget tomorrow.\n\n\"Now go get laid.\"\n\nI laughed as I wiped the tears away.\n\n\"Working on it. Talk tomorrow.\"\n\nI put the phone in the pocket of my dress and made my way back to the kitchen. I was really, really hoping daddy wasn't going to be furious with me when I told him I screwed up. I walked in and he was setting down some plates of food across from each other at the island. It looked like a stir fry. I wanted to eat, but I needed to confess my sins.\n\n\"Everything ok, princess?\"\n\nAnd I stood in the doorway and told him what happened. I thought he would get mad at me and yell. I was terrified he might kick me out. I thought he might spank my bottom, which I was honestly having kind of mixed feelings about. Instead he sat down on a stool at the island. I slunk over, figuring the yelling was about to start.\n\nInstead he gently got me to sit down on his lap. He tilted my head towards him.\n\n\"First, it's ok. I'm not mad at you,\" he said.\n\n\"But I screwed up and forgot to text Gillian and I nearly had the army come and invade and then they would have taken you to jail and...\"\n\nHe put his finger to my lips. \n\n\"Princess, that was a smart thing you and Gillian arranged. I always want to make sure you're safe, so I'm glad you set that up.You're a good girl for doing that.\"\n\nI could tell that him saying \"good girl\" to me was going to be something that was going to melt me every time.\n\n\"And I'm partly to blame because I zapped your brain pretty good. It's not your fault you passed out and forgot to text your friend. I doubt you remembered your own name the last 10 minutes of the car ride here. And you were up only a few minutes and you knew you had to do that. So let's not beat yourself up,\" he said, kissing me on the head again.\n\nI could feel the anxiety melt away. I'd had guys previously who would have chewed me out or used it as an excuse to berate me and say I was stupid. Now daddy was saying I was a good girl and it was so much better.\n\n\"Ok daddy,\" I said.\n\n\"Finally, I don't want to know if you have other times arranged this weekend, but if you do, you're now responsible for making sure you text your friend, ok? I really don't want to go to jail.\"\n\nI nodded my head, and he hugged me and that was that.\n\n\"Can we eat?\" I asked.\n\nHe laughed and I started to get off his lap but he held me down. Instead he reached over, and grabbed my plate of food and put it next to his. He grabbed a fork and put some of the rice, chicken and veggies on it, and then put it up to my mouth. I leaned forward, opened my mouth and let him put the food in. I then closed my mouth and chewed appreciatively.\n\nIt was good. It hit the spot and gave me some much needed calories. Oh, and sitting on his lap and having him feed me? So very hot. \n\nThis went on for a few minutes, with him taking some food, and then giving some to me. I asked for some water and he would get the glass and hold it to my lips until I indicated I was finished. One time I spilled some and he used his thumb to wipe away the water. It was all I could do not to take it back in my mouth and start sucking. I could tell he was hard. Probably because I was fidgeting and squirming on his lap. I also was pretty sure I was soaking his pants.\n\nAfter we finished, I bounced up off his lap, kissed him on the lips and then took the plates and went to the kitchen to clean up.\n\n\"Supper was awesome, daddy. Thank you for cooking.\"\n\nI could feel him watching me. I put on an apron that was way too big for me, but kept my dress safe. I gave my ass a little shake as I started putting things in the sink.\n\n\"You're welcome princess.\n\n\"If you're going to be cleaning up around here I'm going to need to get you a little maid outfit, I think.\"\n\n\"Who says I didn't pack one?\"\n\nHe laughed. But I did turn around and lean back against the sink. I wanted him to look at me. I needed to put myself together for a moment so he knew.\n\n\"Seriously. Thank you for everything. Thank you for letting me come here, and letting me be little and ditzy this weekend because I really do need the break. And thank you for not freaking out at me for almost getting your arrested and making supper for me. A lot of guys wouldn't have done that. So thank you, daddy.\n\n\"You're more than welcome, princess.\"\n\n\"Although...does that mean you're not gonna punish me, daddy?\" I said, as I slipped quickly back into my little space. I looked down at my feet and tried not to grin.\n\n\"Well, I never said that...\"\n\n***\n\nAfter everything was put away in the kitchen, daddy gave me a tour of the place. The house was huge, with lots of windows and natural wood. It was also on the side of a hill. Out front, during the day time, you could see a lake, but the house was mostly hidden from view by trees. It was also all one-storey. I could understand why. With daddy's knee, why deal with stairs? There were also three bedrooms, an office, a mechanical room, a bathroom and an en suite off the master bedroom.\n\nI made a little squealing noise when I saw the master bedroom. It was at the opposite end of the house from the living room. It had a huge window facing out from the front of the house with a view of the woods and lake. There was a giant king-sized bed. I jumped on it and made happy noises. I also saw my suitcase in the corner. I desperately needed to change out of this dress, but it could wait a moment. I flopped on the bed, enjoying how comfortable and huge it was. It reminded me of the hotel in New York. But this was his bed. It smelled like him. It made it much better. \n\n\"I love this bed. I am going to spend so much time in this bed,\" I said.\n\n\"You can help me break it in,\" he said. There was something in the way he said it that made me push myself up to a sitting position. He was leaning against the door frame, looking at me.\n\nAnd then I clued in.\n\n\"You got rid of all your old furniture before you moved in here,\" I said. \"That's why everything looks so new and the place looks kinda empty.\n\n\"Clever, princess. Yeah, I just couldn't have most of our old stuff in here. It felt like bringing ghosts with me. I still have a few things from our condo, but most of it is in a storage shed out back. I haven't bought much or decorated much because, well, I thought I had all kinds of time. You threw a pleasant wrench into those plans.\"\n\nI must have looked sad because he walked over to the bed and sat on the edge. I scooted over and cuddled him from behind. He took one of my hands and kissed it.\n\n\"The house is ridiculous, of course. Much more space than I need. But...I spent most of the last 20 years living in a very modest condo on the 15th floor of a building in Toronto, surrounded by other condo towers. We tried to buy a house, but I imagine even in Saskatchewan growing up you might have heard of house prices in Toronto,\" he said.\n\nI nodded my head against his back.\n\n\"So I needed out. I needed a place where when I bought something, something else didn't have to leave because space was tight. I needed something where the view was the condo across the way. I needed something where when I stepped outside I wasn't encased with hundreds of other people and their problems.\n\n\"So when I found this place, well, it was the easiest decision I'd made in awhile,\" he said.\n\n\"It's a beautiful house, daddy.\"\n\n\"It is. It just lacked warmth. I didn't realize that until you came here today. So thank you for bringing some much needed joy to my home, princess.\"\n\nGod, he was such a good daddy. He knew just what to say to make me feel like I was filled with magic. I was about to drag him down on the bed to make out with him, when he suddenly stood up. I looked up at him with surprise.\n\n\"Anyway, I'm not going to be maudlin when I only have a few days with my princess. Hop up, I have one more thing to show you.\"\n\nI groaned and flopped dramatically on the bed. \"But I can never leave the bed, daddy. It has ensorcelled me. I am doomed to stay in your bed forever.\"\n\n\"That is a very appealing thought, but I think you'll like this. Trust me.\"\n\n\"Fine,\" I grumbled, crawling out of the bed. \"Dragging a perfectly willing little girl out of bed. Mean daddy.\"\n\nHe laughed. \"I am an awesome daddy. I will prove it to you.\"\n\nHe took me back to the porch where my coat was hanging. He went over to the door and pressed his hand on a touchpad I didn't notice before. As he hit a few buttons I could see through the window in the door some lights flash on outside. They lit a path going up towards the woods. A little ways up the hill I could see a small wooden building come to life. And, with the extra light I could also see steam floating up into the air in front of it. I got excited.\n\n\"Is that...\" I squeaked?\n\n\"A sauna and jacuzzi. It's more house than I need, but that sauna and jacuzzi was the final tipping point.\"\n\nI got on my toes and kissed him quickly on his lips. \"Can we go soak now?\"\n\n\"Of course,\" he said. There was something in the way he said it, though. I was suspicious. I also didn't have a swimsuit this time, but I knew that wouldn't be a problem this time. But as I went to get my coat and head up to jacuzzi, he gently grabbed my hand. I looked at him, puzzled.\n\n\"I believe my little girl said she deserved to be punished for almost getting her daddy arrested.\"\n\nI looked baffled for a moment, and then it clicked. \"No...daddy, it's freezing out.\"\n\n\"Wuss. It's 2C outside. Plenty warm enough for you to dash up there. I'll let you keep your shoes on. That's fair. But you can give me the rest,\" he said. The grin was that of an evil, evil man.\n\n\"Worst daddy ever,\" I grumbled, as I pulled my sneakers off. I then rolled my socks down my legs. There was nothing sexy or seductive about the way I was stripping. The faster I got undressed, the faster I could get to the jacuzzi and get warm again. I then shoved my feet back into my shoes. He held out his hand and I gave him the socks. I reached behind me and unhooked my bra and worked the usual magic that girls learn young but baffles men. I then pulled it out of a sleeve and handed it to him.\n\nI looked pleadingly at him, but he kept his hand out. Fine. I reached behind me and unzipped the dress. It slipped down my body and pooled on the floor. Then, before he could say anything else, I ran out the door and bolted towards the jacuzzi.\n\n\"Fuck it's cold!\" I screamed. My nipples hardened into diamonds and it felt like every inch of my skin was covered in goosebumps. I was a swimmer in high school and had no patience for track, but I bet I broke a national sprinting record covering those couple of hundred metres.\n\nI got to the edge of the jacuzzi, kicked my shoes off, and jumped in. I swear I could hear hissing. \n\nI was huddled in the jacuzzi, water up to my chin, trying to will my body to suck all the heat out of the water. My collar was now soaking wet, which was also pissing me off since I'd worked so hard the last two weeks to keep the leather dry. That's when I heard the steady tap of his cane. I scrunched my eyes closed and tried very hard not to chew his head off when I heard him ask \"are you ok, princess?\"\n\n\"No. Now I know what a french fry feels like when you put it in a deep fat fryer.\n\nHe chucked.\n\n\"That was really mean, daddy,\" I said, cracking my eyes open. That's when I noticed that he was also naked. I couldn't help myself, and I took in a deep breath and felt my pulse go up. Even in the cold, his cock was still semi-hard.\n\n\"I am sorry, princess. You're right, that was very mean of me. It's colder out than I thought. So I thought it was only fair that I made the trip the same way.\"\n\nHe was just standing there. He had to be freezing, but he was there naked except for his cane and a pair of sandals. I think he was waiting for me to invite him in. And as tempting as it was for me to keep him out there for the next 30 minutes, he had something I needed and I didn't want it getting frostbite.\n\n\"It was still mean, but I'm ok. I said I needed to be punished, I just thought you'd spank me or something. Get in the jacuzzi, daddy. Please. I'm cold looking at you.\"\n\nHe took off his sandals and with some maneuvering slipped into the jacuzzi. I took some pleasure at watching him shudder at the plunge into the hot water after standing out in the cold. We sat there for a few minutes, across from each other, just soaking in the warmth and the relaxation. He had his eyes closed and I think he was also giving me my space, realizing I was grumpy with him. Gradually, I started to relax and made a move to go over and be with him when one of the jets pulsed water into my pussy. I gasped and made a squeaking noise.\n\nHe opened his eyes to see what happened, figured it out, and grinned.\n\n\"Having fun with the jets, princess?\"\n\nFortunately I had color back in my face from the hot water so he couldn't see me blush. I moved over closer to him and placed my head on his shoulder. He put his arm around me and there was a warmth that had nothing to do with the water.\n\n\"I brushed up against one and it caught me off-guard. Guess I'm still a little sensitive.\"\n\n\"If you want to play with the jets for a bit, I think you've more than earned it.\"\n\nTempting. Very tempting. But I hadn't spent two weeks missing him, three days edging, almost exploding in a car, and being dragged away from a super comfy bed to get myself off on jacuzzi jets. I stood up in the tub and straddled his waist and then sat down. I could feel his cock rubbing up against my pussy and clit, but not sliding in. I leaned down and put my lips next to his ear.\n\n\"I want something harder than what those jets can give me, daddy,\" I whispered and then nibbled on his ear.\n\nI could feel his hands grabbing my ass, slowly sliding my hips back and forth so that my pussy was rubbing against his cock. He leaned over and gently bit my neck. I groaned.\n\nIt went like that for minutes, with each of us teasing the other. I ran my nails through his hair, he'd lean me back so he could suck on my nipples. I kissed his lips and he would run his fingers lightly up and down my back.\n\n\"Ohhh, daddy. This is just what I needed,\" I moaned. \"I've missed you so much the last two weeks.\"\n\nHe gently pushed me back and looked me in the eyes, his fingers playing in my soaking wet hair.\n\n\"I've really missed you too, princess. It's been awfully lonely without my little girl here to keep me company.\"\n\nI could have cried, right there. No man had ever said they missed me. I bashed my lips against him and pressed myself against him as hard as I could.\n\nAfter we came up for air, I looked around and groaned. I need daddy's cock in me...now. But even I knew fucking in the jacuzzi was asking for trouble. I'd heard enough horror stories in high school about that. But it was too cold to do it on the deck and the house and that wonderful bed seemed like it was miles away. I'd never make it.\n\nFortunately daddy saw my dilemma. He gently lifted me off him and then stood up in the jacuzzi. That wonderful cock was there right in front of me, hard. It was all I could do not to latch my mouth on it, but daddy had his hand out to take mine. I looked at him, with what I'm sure was fear. I didn't want to get out of the warm water and into the cold. But he stood there with his hand out. He was still my daddy and I had to listen to him. I took his hand and he helped me out of the jacuzzi.\n\nI whimpered, but he quickly directed me towards the building behind the jacuzzi. Between daddy and staring off in the woods, I'd almost forgotten about it, He opened the door and pulled me inside.\n\nThere was a porch area inside the sauna. There was a shower and a cabinet for hanging clothes.\n\n\"We need to rinse off from the jacuzzi. Ordinarily this should blast cold so that you can appreciate the sauna more. But seeing as how you're a wuss...\"\n\nI rubbed up against him. \"Your wuss, daddy. All yours.\"\n\nHe kissed me and, somehow, managed to turn on the shower. It was colder than the jacuzzi so I squeaked when the water hit me, but it wasn't screamingly cold. We both rinsed off quickly and then he opened the door to the sauna and we went inside.\n\nI hadn't been inside a lot of saunas. There was a lot of cedar wood and two ledges. One was lower and one was higher. The lighting was subdued. It was already hot, about 35C, and I could feel myself starting to sweat. It felt amazing. I turned around getting ready to kiss him when I felt his arms around me and gently lifting me up.\n\n\"Daddy!\"\n\n\"Trust me, princess,\" he said, putting me on the higher ledge in the sauna. It immediately felt hotter.\n\n\"Daddy you're going to hurt your leg if you keep lifting me up,\" I said. He was too. He must have carried me from the car earlier not to mention the luggage. He was going to hurt himself. And I didn't have a good nurse cosplay to tend to him.\n\n\"You weigh next to nothing and I like carrying my little baby girl around,\" he said. Because with the jacuzzi, shower and the sauna I didn't think I could get much wetter, but hearing that certainly did add to things. Then he gently moved my legs apart and leaned forward. My breath hitched when I realized what was going to happen.\n\n\"Daddy,\" I whispered.\n\n\"Shhhh, baby girl. Let daddy take care of you,\" he said and then began kissing and gently biting the inside of my thighs.\n\nThe momentary clarity I had a few minutes ago from running in the cold evaporated from my brain. When we got out of the jacuzzi I'd had every intention of bringing him into the sauna and sucking his cock followed by riding him. And I was going to cum with his cock buried in me. Not before.\n\nNow I could feel his beard brushing and tickling against my thighs, making me squirm. He alternated between his lips, teeth and tongue all around my pussy, but not touching it. It was amazing. It was maddening. His touch and the heat from the sauna were turning me into a slutty, dumb little girl.\n\nOne of the last coherent thoughts I had was \"fuck it.\"\n\n\"Oh, lick my pussy, daddy. Please lick my little clitty. I need you so much...\"\n\nWithout missing a beat I could feel him center himself. He placed his lips gently over my clit and began to suck it into his mouth, running his tongue around it.\n\nI arched my back and screamed. As I did that I could feel his fingers slide into me, gently moving in and out.\n\nNow it was the lack of oxygen that was making me a ditzy little girl. Some part of my brain kicked in as I realized I was holding my breath so I gasped, sucking in oxygen and began panting and moaning. He kept doing this for a few minutes, licking and sucking on my clit, his fingers sliding in and out.",
        "But it wasn't enough to get me off. He'd get me to the edge and then change things up, switching off my clit back to my thighs. His fingers would stop moving and I'd groan in frustration. I needed it and he knew it, but we also both wanted me to go insane, apparently. No, he wanted me to beg. Fine. But not in the way he wanted.\n\n\"Daddy, daddy, daddy, daddy, daddy, daddy...\"\n\nHe looked up and stopped licking for a moment, although his fingers continued to torture me.\n\n\"Yes, baby girl?\"\n\nI looked down and gave him my best little girl look. I had been using my hands to grip the bench and now I lifted them up and placed them on my nipples, pulling on them. I gasped. Finally, in a moment of brain damaged inspiration, I threw in a lisp when I spoke again.\n\n\"Pwease let your baby girl cum, daddy. I weally, weally need to cum, daddy.\"\n\nFor a change I heard him gasp. I felt my clit sucked hard into his mouth and his fingers moved again, curving and hitting what I assumed was my g spot. Just to make sure I pulled hard on my nipples. My orgasm exploded through my brain, cutting off reality for me in a shower of colors and flashes.\n\nWhen I caught my breath and came back to a semblance of reality, I noticed he had shifted me to one of the lower benches. He was holding me and stroking my hair, which was sticking to my face and back. I gently separated myself from him, because we were both sweaty and sticking to him was a little uncomfortable. My eyes refocused and I looked at him. I had fucked my share of guys. The guys close to my age were always clumsy and couldn't get me off like that. The older ones, even the ones I thought of as a daddy, always looked smug after I came. Like they were the greatest lovers in the world. Never mind I have a fairly quick trigger.\n\nNone of them got me to go off like daddy...Ben...had. Not even close. And he was just sitting there, not smug, or proud or even worried. He looked...happy. Happy that I was happy. It was the weirdest thing.\n\n\"You can do that to me anytime you want, daddy,\" I said.\n\n\"I plan to,\" he said, like I said he could have a drink of water if he wanted to. Despite the heat of the sauna, I felt myself take an involuntarily chill.\n\nI'd been so focussed on his face that I'd failed to notice his cock. I reached out with my hand and gently touched it. It was hard. And hot. I could feel it twitch.\n\nI looked at his face again. I knew what he wanted. Ordinarily I'd ask if he wanted me to suck him, but that's not what he wanted. And after two weeks of not being together, of me blissing out in the car and eating me out in the jacuzzi, I knew what he needed. I wanted it too. \n\nI stood up in the sauna, a little woozy from the heat and orgasm and turned around to face him. Sweat was pouring off me and I knew my hair had to be a mess. Daddy was also covered in sweat, his hair plastered to his head and his beard was wet, whether from sweat or from me, I didn't know nor care. I grabbed a towel from a hook on the wall and placed it on the wooden bench. Then I bent over, gripping the top bench with my hands. I then put my knees on the lower bench and shifted my legs apart. My pussy was at the perfect height for him. I looked back.\n\n\"Fuck me, daddy. Hard. I need you to use me so you can cum in me.\"\n\nFor a man with a bad leg he could move quickly. I felt him behind me, and he placed one hand on my left hip. With his right hand he took his cock and put in at the entrance of my pussy. There was no teasing this time, but he also wasn't vicious and careless. I could feel his cock push into me. Steady. Inevitable. Like there was nothing that could stop it from filling me up even if I wanted him to stop.\n\nI didn't. I wanted more. I wanted it all.\n\n\"Oh fuck, that's amazing,\" I heard him groan. I grinned. Good, time for me to torture him a bit.\n\nI pushed back at him, so that his cock was buried in me. I could feel his hips pressing against my ass. We both groaned. Then he slid back, his cock hovering at the edge of my pussy, as if to tease me. I wasn't having it, and used my leverage to slam my hips back at him, burying him back in me again.\n\n\"I said fuck me, daddy.\" \n\nHe took the hint and when he pulled his hips back this time, he slammed back into me almost immediately. God, it felt so good. I loved how he filled me up. I loved it when he was gentle and took care of me, but sometimes a little girl just wants her daddy to use her so she can take care of his needs.\n\nPlus, I was going to cum again. I knew it was going to happen. It was inevitable.\n\nI also knew from New York he liked it when I talked dirty. That, I could do.\n\n\"Oh, fuck your little princess, daddy. Pound her. Give her what she deserves. She's been such a brat and needs punishing.\"\n\n\"Oh, does she?\" he said, picking up the pace a bit. I could feel him grinning. I wanted to look back at him, but my head was buried into my arms, and sweat was freely running down my face. It was a challenge.\n\nBut I wanted more. The next time he pulled back, I pushed back at the same time, trapping his cock deep in me. Then I wiggled my ass. I turned my head, flicked the hair out of my way and looked back at him.\n\n\"Yes, daddy. Punish me.\"\n\nThrough the sweat, the heat and the mental haze, I could see something darker on his face. Like I'd told him it was ok to unleash something he'd bottled up. Then I felt his hands leave my hips and reach for my hair. He grabbed it like a leash and pulled me back to him. Then he started to fuck me, using my hair to control me.\n\nIt was great. It wasn't enough.\n\n\"More, daddy. I need more.\"\n\nHis left hand remained wrapped in my hair. His right, brushed against my ass. Finally. I felt his hand pull back and then slap my ass. I groaned. But it wasn't enough. It was a light slap. Like it was testing what I could take. I could take more.\n\n\"Harder, daddy. I almost got you arrested today, you need to punish me for that.\"\n\nThe next slap cracked out against my cheek and echoed in the sauna. I screamed out.\n\n\"Yes! Like that, daddy. Punished your ditzy little girl for almost getting you arrested.\"\n\nThe slaps alternated on each of my cheeks while he continued to pound me and pull on my hair. It was amazing. My ass and pussy were going to be sore and I did not care. But the heat of the sauna made me afraid I was going to pass out before we came.\n\n\"Fuck me, fuck me, fuck me, daddy. Punish me for being so dumb. And then cum. I need you to cum in me daddy. Cum in your silly little girl.\"\n\nHis strokes in me were becoming more erratic. He dropped my hair and stopped slapping my ass, and just grabbed my hips and pounded me. I could feel the short circuited getting ready to trip in my head.\n\n\"My silly little slut needs daddy's cum,\" he gasped out. I knew he was close.\n\n\"I doooo, daddy,\" I said. And then, just to finish him off. \"How else am I going to have your babies if you don't fill me with your cum?\"\n\nHe roared, slammed into me hard three more times and then buried himself into me all the way. I could feel his cum flood into me. I also heard him yell \"Jesus Christ, I am going to fucking breed you one day.\" And then the switch slammed shut, causing me to scream and my brain to explode all over the sauna.\n\nA few minutes later I was able to focus and was mildly surprised to find my brain still where it should be. Daddy was still buried in me, but resting his head on my back. He was breathing hard. Part of me grinned. Good. I wiggled my hips to let him know I was back to semi-consciousness.\n\n\"You are an evil, evil little girl,\" he said, still breathing hard. He then slowly pulled out of me, causing us both to groan in disappointment. He then collapsed on the bench next to me. With a lot of inelegance, I twisted around so I was sitting next to him. It was too warm to hug him, but I brushed my fingers against his. The towel caught his cum dripping from my pussy.\n\nPart of me was sorry to see it go. I was 19, so having kids was stupid. Yet, the thought of having him breed me was undeniably hot...for both of us. Sex was deeply weird sometimes.\n\n\"You ok, daddy?\"\n\n\"You tried your best to kill your old man, yet here I sit. Barely.\"\n\nI leaned over and nipped at his shoulder with my teeth and reached over to gently grab his cock. He moaned.\n\n\"Oh, that wasn't my best, daddy. It was really, really, really good, but I can do better.\"\n\nHe looked over at me and I grinned back at him. Then he shook his head, laughed, and laid it back against the bench.\n\n\"Fuck it, you've got to die of something...\"\n\nWe sat like that for a few moments, enjoying the aftermath. Then he stood up and held his hand out to me. I wobbled as I got to my feet. It'd been a long day and I was shutting down.\n\n\"Ok, quick rinse here,\" he said, and then he reached into a cabinet and pulled out a couple of fluffy bathrobes. Oh thank god. The idea of going out naked into that cold made me want to cry. \"Then we go back to the house and get properly cleaned. We grab a snack, watch some videos and then bed. Does that sound good, princess?\"\n\nDespite the heat and sweat I hugged him, burying my face in his chest.\n\n\"Perfect, daddy.\"\n\n***\n\nNext morning I woke up in bed alone. I'd fallen asleep with my head on daddy's chest and when I woke up in the middle of the night I was on my side with daddy spooned behind me, with his arm around me. I grabbed it, pulled myself tighter against him, and crashed again.\n\nSo the lack of the big, warm daddy in bed with me was disappointing. I sat up in bed and called out, but there was no response. I rolled to the edge of the bed and dropped my feet to the floor. Then I stood up, and stretched. The latest geek shirt I'd robbed from him to wear to bed featured Captain Marvel on it and it rode up on my hips. She wasn't my favourite, due to the lack of red hair, but she was ok. \n\nI reached over to a chair by a heater. Daddy had convinced me to take the collar off so it could try overnight. I hated taking it off, but he was right. Wet leather against my neck wasn't pleasant. I picked it up and it felt mostly dry. I quickly put it back around my neck, slipped the lock through the hooks and clicked it shut. I felt better already.\n\nI walked out of the bedroom and headed down the hall towards the kitchen. It was already quite bright out. Daddy's house faced south and light came in from the windows. I had to rub my eyes not to get blinded. As I got closer to the kitchen I could smell food. I grinned. Such a good daddy.\n\nBut then I heard daddy's voice and someone talking back to him.\n\n\"I keep telling you, Meg, I'm doing fine. I'm taking my meds, I'm getting out and meeting people. I'm good.\"\n\n\"Mmmm,\" I heard a voice over the phone say. \"I dunno, you sound weird.\"\n\n\"Happy? Content? Not suicidal?\"\n\n\"Just...weird. You're shitty at hiding things, you know. So if this you pretending to be happy so I'll leave you alone it's not going to work.\"\n\nI peaked around the corner and could see daddy standing in front of the stove. He was making breakfast for me and I could feel myself getting all light again. Then I heard him huff. We'd only been together a few weeks, but I knew that was the sound of him getting frustrated and losing his patience.\n\n\"Meg, I swear on top of the stack of expensive geek artwork that I haven't gotten around to framing yet that I am actually fine and I'm at no risk of hurting myself or anyone else. Is that satisfactory?\"\n\nDespite myself, I couldn't help but giggle a bit when he said that. During the tour of the house he showed me his office space. If the rest of the house was a bit spartan, his \"office\" where he kept most of his art, books and toys was crammed full and not entirely organized. I could happily spend a few weeks curled up on the big comfy chair he had in there reading and daydreaming.\n\nI could see his shoulders stiffen a bit and I suspected I hadn't giggled quite as quietly as I should have.\n\n\"If you say so. I'm not trying to be a bitch, you know. I just worry,\" Meg said.\n\n\"I know you do. And I love you for it,\" daddy said. It sent an odd pang through my stomach. Did he love love her or just as a very good friend? \"But the comic con did me a world of good and I've taken on some consulting work. Hence the upbeat mood.\"\n\n\"Ok,\" she said, although she didn't sound convinced. \"I believe you. Same time next week?\"\n\n\"Ok Meg. Talk to you soon,\" daddy said, and touched his phone to end the call. Then he called out, \"Little girl's should not be snooping on their daddy.\"\n\nI came out from around the corner, trying to look bashful. \n\n\"Sorry daddy. I just woke up and you weren't there and I missed you and then I heard you talking and I was confused because I didn't think there was anyone else in the house other than us, and then I saw you talking on the iPhone and it was soooo confusing to me...\"\n\nHe knew he was being played, but went along with it. \"And how was my princess confused by that?\"\n\nI leaned up and kissed him on the cheek. \"I thought you could only text on those things. I didn't realize people talked to each other too,\" I said, doing my best wide-eyed waif look.\n\n\"Brat,\" he said, pulling me close to kiss me on the head. Then he swatted me on my ass, causing me to squeak and jump. I broke his hold and headed over to the island, rubbing my ass. It hadn't really hurt and judging by my pussy's reaction, it wouldn't mind a few more swats like that. I sat down and watched as he put the final touches on breakfast.\n\n\"Your timing isn't bad, actually. Although if you'd waited a few more minutes and been less curious you would have gotten breakfast in bed. Now you'll just have to eat here,\" he said, sliding an omelet onto a plate for me. He also took some toast, bacon and an orange and then brought it over to me. I'm sure my eyes were as wide as saucers.\n\n\"I can't believe I found a daddy who will cook for me. You're the best,\" I said, digging in. He put the last touches on his omelet and came over to join me.\n\n\"Can you cook?\" he asked.\n\nI did a see-saw motion with my hands. \"Gillian and I take turns trying not to burn the apartment down. I did enough to stay alive when I was home with my mom. She didn't really trust me in the kitchen.\"\n\n\"Well, maybe next time you come here we'll do some cooking together. I never used to do much of it. When you live in downtown Toronto it's almost as cheap to eat out all the time. But the last couple of years, I like it. It zens me out.\"\n\n\"I'd really like that,\" I said. The idea of wandering around the kitchen in just an apron and cooking with daddy suddenly sounded like a really great idea. I needed to make a sexy apron for my next visit. But then, my brain and curiosity got the best of me.\n\n\"Daddy, who were you talking to,\" I asked, trying not to be too nosey and also trying hard not to ask if he really did love her.\n\n\"She's an old friend,\" he said between bites. \"She's actually Beth's best friend from back in university days, but we hit it off pretty well. It was only when Meg signed off on me did Beth start to seriously consider me marriage material. She has an almost psychic ability to know if something is wrong, if someone is lying to her, or if someone is up to no good. It makes her a fairly terrifying divorce lawyer.\n\n\"She also helped keep me sane the last two years. She was the one who kept on me to see a psychiatrist and to take antidepressants when things got bad. And she...saved me at a bad moment,\" he said. There was something about the way he said it that scared me. I'm pretty sure I knew what \"saved me\" meant, but I didn't want to ask.\n\n\"I might have sounded frustrated with her just then, but she's a good person. And I haven't always been a delight to be around these last two years.\"\n\n\"I see,\" I said, looking down at my plate. It was one of those reminders that daddy didn't magically spring from the ground two weeks ago just to take care of me. That he had a life before he met me. That he had one before I was born. It just felt weird to be reminded of that.\n\nHe could see I was overthinking things. He reached his hand across the island and gently took one of mine. I looked up at him.\n\n\"You heard me tell her I love her, yes?\"\n\nI nodded.\n\n\"She is a dear, dear friend. I've known her for more than 25 years. She means the world to me, but I do not have a romantic thought in my body for her, nor she for me. It would be extraordinarily weird. Ok?\"\n\n\"Ok,\" I said, feeling foolish for thinking the way I had. \"Sorry I'm such a silly baby, daddy.\"\n\n\"I'm not,\" he said, taking my hand, turning it over and lightly kissing my wrist. If he had told me to hop up on the island that moment and spread my legs, I would have done it in a heartbeat.\n\nInstead, daddy started outlining our plans for the day.\n\n\"After we've finished breakfast, I thought we'd go out for a drive. It was dark coming here last night and you were...distracted. It's actually quite beautiful with the leaves turning color and there's a bunch of fall fairs and other cool Halloween things going on.\"\n\nThat caught my ear.\n\n\"I can dress up?\" I asked hopefully.\n\n\"Of course,\" he said. \"In fact, there's some early Halloween events taking place in Kingston this evening. I figure we can drive around the area for a bit and then get some lunch at a nice spot I know. After that we'll go into Kingston, hit a few cool stores, have some supper and finish the day at some of the Halloween events.\"\n\nI had cosplay stuff packed and other than teasing daddy with some of the outfits I didn't think I'd actually get to use it so quickly.\n\nI scarfed down the rest of breakfast and bolted back to the bedroom to pick out a couple of outfits. Daddy yelled that he wanted to get going in 45 minutes and to not spend all morning picking out costumes. I yanked open the suitcase, huffed a bit, and yelled \"fine\" back down the hall at him.\n\nNow what was I going to wear?\n\n***\n\nFifty minutes later, I met daddy out by his car. I'd opted to go with Merida, mainly because my hair was a mess this morning and no amount of combing was going to solve things. Also, I loved the long green dress with the belt across the waist, even if I didn't have the bow and arrows to go along with it. People would probably think I was probably a medieval maiden or something, but I bet daddy would figure it out.\n\nPlus, the costume did have a long, wool cloak that would keep me warm. That and the kick ass boots would also work well with the other outfit I had put in my bag. Assuming I had the guts to wear it out in public. \n\n\"My Disney princess at last,\" he said, opening the car door for me.\n\n\"Please, I'm only five minutes late. I'm practically early,\" I said with mock indignity. I threw my cloak in the back of the car. Daddy got in and we headed off. \n\nAnd he was right, it really was beautiful. All the leaves were turning color. I made him pull over a couple of times to get pictures of me, even if I was cursing that I didn't have my bow and arrows, I knew the bright leaves, my hair, and the green of the dress would look great.\n\nAt one of the fall fairs daddy was telling me about, I was posing when an older lady came up to us.\n\n\"Would you like me to take a picture of you and your daughter? She's such a lovely young lady,\" she said.\n\nDaddy, with a straight face, said that would be fantastic and handed her his phone, and then walked over to me. He put his arm around me and I bundled into him hard. She took a couple of photos and gave daddy back the phone. Our first pictures together. Somehow, at the con, it never occurred to us to have our picture taken together.\n\n\"I can't believe we haven't had a picture before now,\" I said, after the lady moved off.\n\n\"Well, at the con I didn't want to be creepy asking you to pose for photos for me. Remember, I was still nervous about coming across as a creepy old guy. Besides, a guy asking for photos...it can be a tricky thing sometimes. All the pics you've been sending me the last couple of weeks have been risque, but playful and no nudity. So I wasn't going to push you on it,\" he said.",
        "\"I was literally photographed thousands of times at that con,\" I said.\n\n\"Yes, but by strangers. It just felt...different. I was making sure you were good.\"\n\n\"You're very sweet, daddy, but you can have all the pictures you want of me. And I want lots of the two of us,\" I said. \"I want to show you off.\"\n\nLater we were eating lunch at a nice little restaurant that was quiet for a Saturday. Daddy said they did a lot of their business during the summer, but it wasn't as busy during the off-season. I was busy eating so it took me a moment to notice he was picking at his food. I could tell he was thinking.\n\n\"Is everything ok, dad,\" I asked. We'd agreed in the car that out in public today I'd call him dad or Ben, just to be safe.\n\n\"Just thinking about Meg. Things are going to come to a head about us sooner or later. Knowing Meg, probably sooner,\" he said.\n\nOlder guys always reached a point where they worried about what their friends will think about our relationship and it made me sad. For me, and many girls, you start young when it comes to chasing after older guys. When I was 13 I chased after the 17-year-old guys. That's when many girls discovered that if 13-year-old boys were immature assholes, 17-year-old boys were just a slightly more mature variation of asshole. It took longer, but you figured it out eventually. \n\nThe girls I went to school with either backed away and dated guys closer to their own age or took it. I doubled down. Well, maybe 22 was better. No? How about 30? No? \n\nI dated a guy for three months last year and he had been 35, and I found out too late, still married. Ben was the oldest guy I'd been with. He hasn't asked and I was really hoping he wouldn't because he might freak out. \n\nI knew a lot of people frowned on the age difference. But I knew what I liked. I wasn't some wide-eyed naive girl. I liked older men and was often the one convincing them it was ok. I just wanted someone older, kinder, and more experienced who could take care of me and make me feel safe. What was so horrible about that?\n\nThe hard thing was finding a man who was all those things and not embarrassed to be with me. I hoped Ben wasn't about to disappoint me. A lot. \n\n\"So what are you going to do?\" I asked.\n\nHe played with his salad a bit. \"The problem, you see, is that I'm a planner. This is what policy wonks do...we plan. Here's a problem, now research it, read everything you can, talk to people, talk to some more people and then write until your eyes bleed and voila! You create a document, a game plan where you advise everyone what to do.\"\n\n\"Wow,\" I said. I hadn't realized quite what daddy did before. \n\nHe laughed. \"Don't look so impressed. I neglected the part where people ignore you, rewrite your advice, and then do what they wanted to do in the first place.\"\n\n\"Oh,\" I said. \"That sounds...frustrating.\"\n\n\"It used to be, but then I realized I still got paid and they liked the work, even if they ignored it. You make your peace with it. Besides, the schadenfreude you get when they ignore your advice and what they do turns out to be a disaster is pretty amazing,\" he said.\n\nI took a sip of my coffee and looked at him and waited for him to get back to his original point.\n\n\"But I don't want to be the guy that plans everything anymore. That guy never would have taken a leap of faith with you. He'd study people that had gone through May-November romances and see what they did right and wrong. He'd plan, analyze and then probably conclude it was madness to get involved with you,\" he said.\n\n\"That guy sucks, dad,\" I said with a hint of brat in my voice.\n\n\"Well, he had his good moments too. So I've been thinking of what I'm going to do, that doesn't involve doing everything I just said.\"\n\nI must have looked confused, because he laughed.\n\n\"Yeah, I know how it sounds. Ride with me for a moment,\" he said. I nodded, curious as to where he was going with this.\n\n\"I'm greedy so I still want the next month or so just us and not have to share you with anyone else. The holidays are right out because there's no way I subject you to that kind of horror. Christmas is nothing but unending drama.\n\n\"Maybe after Valentine's Day,\" he mused.\n\n\"Oh god,\" I said. Inner voice outside again. Damn it. \n\nHe misunderstood my reaction. \"Is that too long? We can do something sooner...\"\n\n\"No, no,\" I said, interrupting him. \"Sorry. I didn't mean to cut you off, but my birthday is February 14.\"\n\nHe looked puzzled. \"What's so awful about having a birthday on Valentine's Day? I figure at least it's romantic.\"\n\n\"God no,\" I said. \"First of all, it's worse than a Christmas birthday. People will combine gifts at Christmas, but maybe you get something awesome that they spent a little more money on. Valentine's Day, they combine the gift, but it's always something cheesy and 'romantic'. Do you know how much awful lingerie I've got on my birthday and then be expected to model it for the guy?\"\n\n\"Oh god,\" he said, looking horrified but also trying not to laugh. \"Wait, you're 19. How many years have you been getting shitty lingerie?\"\n\n\"Since I was 13,\" I said. That got a bit of a look from daddy. I shrugged.\n\n\"The first few years it was from dumbasses hoping to wow me with lingerie. They didn't get anywhere. Besides, most of it was just awful. Not sexy. Not even slutty, which I could handle. Just...trashy and literally cheap. A 'hey, so I was in Wal-Mart and I thought you would look awesome in this, why don't you go try it on?' level of cheap. \n\n\"So I get one gift instead of two, it's crap, I might get supper in a crowded restaurant that everyone in town eats at anyway and then I have to wear said trashy outfit and I'm expected to put out. Bah, humbug.\" I said, ending my tirade.\n\nDaddy started laughing so hard I thought he might not be able to breath.\n\n\"Ok, actually, I'm glad I know. I promise you'll get at least two gifts, and no trashy lingerie to be found,\" he said.\n\n\"You better,\" I said, trying to look serious and scary, which is hard when you're wearing a Disney princess dress. \"Or at least make the lingerie trashy and expensive.\"\n\n\"Ok, so this is what I'm thinking,\" he said, wandering back to the main topic while wiping tears from his eyes. \"I'll probably use Christmas to lay some of the groundwork that I met someone in New York, I like her but we're taking it slow and if things keep going well I'll start to introduce her to people after Valentine's Day. Does that sound ok?\" he asked.\n\n\"You want to introduce me to your friends and family? You don't want to try and keep me secret? It's ok if you want to, I understand,\" I said.\n\nI was lying, of course. But I was trying to be a brave little girl. Fortunately, daddy didn't bite.\n\n\"Why would I want to do that? Yes, it makes sense to wait for a few months to make sure this is a good thing, although I'm already pretty damn sure of that. But there comes a point where all I'm doing is hiding you from others because I'm behaving like a dick who is embarrassed by the age difference. I don't want that.\n\n\"You went to school for the last two weeks wearing your collar and I know you got crap for it, no matter how much you deflect. But you did it because wearing it means something to you. I mean something to you. How can I not be as brave as my baby girl?\"\n\nI wanted to jump across the table and kiss him. If he had said we're going home to fuck right now, I'd say there was no need, just find a secluded spot and I was good to go. Instead I grabbed his hand, hard.\n\n\"Thank you, daddy. That sounds good.\" I said, feeling a little teary. \"Are you going to get a lot of grief over the age difference?\"\n\nHe gave me a look I'd seen before in New York. \n\n\"As I said before, little girl, after you go through certain things, you learn what's important and what's not. Friends giving me shit over your age is not important. And they should know better.\"\n\nI nodded. Ok, he might be a keeper. Then I had another thought.\n\n\"You're not waiting for my birthday so when you introduce me, you can say I'm in my 20s and not a teenager, are you?\"\n\nHe took my hand and kissed it. \"Trust me, princess, it's not going to matter. I can say you're in your 20s and given how young you look, no one is going to believe me anyway. They're going to assume I'm a lecherous pervert preying on a young woman.\"\n\n\"Pfft, like I have a problem with that.\"\n\n***\n\nAfter lunch we drove into Kingston. I ruthlessly grabbed control of his car's music system with my phone and subjected him to a K-pop playlist I had. Ok, so maybe I was still a little grumpy about the run to the jacuzzi last night. He suffered through it because I'm cute and awesome.\n\nOn the way I noticed the time and sent Gillian another text.\n\n\"Still alive. Not buried in a back yard.\" I hit send.\n\n\"You just think you're funny. Did you get laid?\"\n\nFor a lesbian, she liked knowing about my sex life. I sent back a lust filled emoji. And then, for added badness.\n\n\"I think I saw another dimension for a moment.\"\n\n\"I fucking hate you. Was I getting laid in this other dimension?\"\n\nI sent a sad face emoji. Because I am a bitch sometimes.\n\n\"Oh fuck you sideways, bitch.\"\n\nWhich was fair.\n\n\"Today's phrase?\"\n\n\"Heather and Lesley are stupid cunts.\"\n\n\"Yes they are. Go. Try not to spread your legs in the next hour.\"\n\n\"No promises,\" I sent back.\n\nWe finally arrived in Kingston and daddy found a place to park. I'd never been there before and other than the weird fetish involving an old rock band called the Tragically Hip (\"Never speak ill of The Hip in Kingston, princess,\" daddy warned me. \"I doubt I'll be able to save you.\") it was a nice place. There were a couple of comic book stores, which we hit. I was reading a Black Widow graphic novel for several minutes when daddy gently took it from my hand and put it in the pile of things he was buying.\n\nA little while later in another store I saw a giant Stitch plushie and made a squealing noise. Daddy promptly brought it up to the cash and bought it for me, despite my protests.\n\n\"You don't have to buy me all the things,\" I said, after we left the store and headed towards his car to put all our purchases in. I had been fairly grown-up at lunch but now I was feeling small again, which made me pouty. And then I added in a quieter voice \"I want a daddy, not a sugar daddy.\"\n\nHe didn't say anything for a few moments and when we got to the car, he put the things inside. I thought I'd made him mad, that I was being an ungrateful little brat. Everything was still so new between us. At lunch I wondered if he was going to say something stupid and he didn't. Now I worried I'd said the wrong thing and he would decide I was more trouble than I was worth. Maybe I should just keep my mouth shut more.\n\nI guess he could see that I was feeling sad, so he leaned down and tilted my chin up.\n\n\"I'm not going to be a sugar daddy for you, I promise. There will be no condo and lingerie budget. I won't be paying your tuition every semester and leasing a car for you. I want to be your daddy and for you to be my princess, my baby girl, my pumpkin and any other of a dozen little names I want to say every time I see you.\n\n\"And yeah, I have the urge right now to buy you all the things and spoil you because, you know, I'm head over heels for you...\"\n\n\"Head over heels?\" I said.\n\nHe made a flipping motion with his hands and I giggled.\n\n\"Totally bonkers for you. That means I want to spoil you rotten, which is probably not good in the long run. So we're going to come to an agreement. There are times I'm going to want to buy you something because it makes me happy to buy you things that make you happy. And that's ok and I hope you're ok with it. Good little girls deserve some spoiling.\n\n\"We are, for example, going to be buying you a bunch of collars,\" he said.\n\nI could feel my eyes getting big. \"A bunch? Why do I need a bunch?\"\n\n\"You bought that collar at an anime table at the con, didn't you?\" he said. I nodded.\n\n\"It is our first collar and it's always going to be special. But we can have more than one for you. One to wear if you want something more subtle. One if you're feeling like a kitten. One if you really want to be really little. One that you can wear in a shower and not have to rig it up to keep dry,\" he said, shooting me a very specific look to let me know he knew what I had been doing the last two weeks. Ooops.\n\n\"And not ones you find in a generic sex store. We'll poke around online and find a few that you really like and get something handmade for you. Does that sound good?\"\n\nIt sounded really, really good. I had visions of multiple collars dancing through my head. All right, maybe a little spoiling was ok. I nodded ok again.\n\n\"And we need to get you some sex toys. Your shocked reaction last night indicates you need some,\" he said.\n\n\"Daddy!\" I giggled in mock shock.\n\n\"But if it ever starts to make you uncomfortable how much I'm spending, or you don't want it, you tell me and tell me why and I promise to listen, ok?\" he said. \n\n\"Ok, daddy,\" I said.\n\n\"If you really don't want the book or the plushie, I'll return them. It's not a problem and if they're making you uncomfortable, then I haven't spent wisely. Do you want me to bring them back?\"\n\nNow it was getting embarrassing. Because I knew he would, but...\n\n\"I kinda do want them, daddy,\" I said, looking down as I kicked the toe of my boot into the pavement. \"I read books in stores all the time because I can't really afford them. And the plushie will keep me company in Montreal when you're not around.\"\n\n\"See, not so hard,\" he said, then kissed my forehead. \"But I'll listen better from now on, ok?\"\n\nI nodded and looped my arm into his. We began walking back down the street towards the lakefront. A couple of young girls came rushing up to me, recognizing I was Merida and wanted to know where my bow and arrows were. In my best Scottish accent I told them I had to leave them in the car and that I thought, for the moment, we were safe from bears. They giggled and asked their mom if they could get a picture with me. Getting pictures with excited kids when you're cosplaying as a princess never gets old. I loved it. So did daddy, who was standing off to the side with a big smile on his face as their mom took the photos. They waved goodbye.\n\nAfter that, daddy said there was a bakery he needed to hit because they had the best sourdough bread he's ever had and mentioned there was a restaurant in the area where we could get some supper if we wanted. And I continued to marvel that, so far, he was not only a kind daddy, and a pretty spectacular fuck, but who also listened to me.\n\nAnd the best part was he didn't even know how rare it was.\n\n***\n\nAfter some more shopping, another run to the car to drop things off, and dinner, it had gotten dark. I could see people in costumes heading towards Springer Market Square, where there was going to be music. Daddy asked if I wanted to go for a while. And I did, even though part of me wanted to get back to his house...home so we could fuck some more.\n\nI touched my bag where I had the other costume. I'd never had the guts to wear it out in public before. If it was still freezing I could easily blow off the idea because it would be too cold. But the temperature had gone up steadily throughout the day and even with the sun down, it was still mild.\n\n\"I'm going to go change into my other costume, daddy,\" I said, gesturing towards a hotel. \"Can you wait in the lobby for me to come out?\"\n\n\"Of course,\" he said.\n\nI blew past the front desk clerk who didn't even glance at me as daddy was there. The bathroom was mercifully empty. I went into the handicap bathroom stall, feeling mildly guilty, but it had more space. I hung up the cloak, which I would be needing again, and quickly took off my dress. Next to go were panties and my bra. Which left me naked except for my boots. The floor looked like it had been cleaned recently so, with reluctance, I temporarily took off my boots, leaving me just in socks. \n\nStep one - Snug nude panties which I pulled up over my hips. It minimized the chance that I was going to flash my pussy at someone and get arrested for indecent exposure. \n\nWith that taken care of the boots went back on so I could at least not freak out about the bathroom floor. Next up, I put the \"chainmail\" loincloth across my hips and then the chainmail bikini top over over my breasts and adjusted things. They weren't real, of course. I couldn't afford real chainmail, but with the right materials I could fake it pretty well until you got up real close.\n\nI put the metal hair band in to push back my hair, and bracelets on my up arms. Then leather straps on my thighs and looped the leather belt with pouches and a holder for my \"sword\" over my hips. \n\nThen I grabbed my make-up kit out of my bag along with a pair of fake leather gauntlet-style gloves, stuffed the old outfit in, and walked out of the stall. Fortunately, there was still no one in the bathroom. I spent the next 10 minutes working quickly on my make-up. More lipstick and eyeshadow, yes, but also some smears of \"dirt\" and \"blood\" to make me look more like a barbarian who just had a rough time.\n\nThen I slid on the gauntlets and threw the cloak back on over my shoulders. I posed in the mirror. Six things became obvious to me:\n\n1. The pink collar was not going to work with the outfit. It killed me, but I was going to have to ask daddy to take it off so I could put the costume jewelry necklace on.\n\n2. I looked damn hot. I knew I was skinny and this was an outfit that required more curves and/or muscles and this was a rush job getting ready, but still, I looked really good.\n\n3. I was also showing off a lot of skin, which was making me a bit nervous.\n\n4. The cloak could hide some of the skin if I got too nervous.\n\n5. But I was in Kingston and nobody knew me.\n\n6. And I had daddy there to protect me.\n\nThen I thought of a seventh thing.\n\n7. There is no way we're getting back to daddy's house with me looking like this without me getting fucked again.\n\nSold. I grabbed the cheap looking collapsable sword (I really needed to work on my props) took a deep breath, threw the cloak back so nothing was hidden, and strolled out of the bathroom.\n\nDaddy was sitting on a chair pointed towards the bathroom. He was looking at his phone when he noticed me coming out. I could see his eyes get large and he used his cane to stand up and come towards me.\n\n\"God damn, princess. You look spectacular,\" he said, giving me a kiss on the cheek, which I appreciated. Didn't want to mess up my make-up after all.\n\n\"It's not too much?\" I said, giving him a little pose.\n\n\"If it's much less you'll get arrested,\" he said with a grin.\n\n\"Can you get the key to my collar?\" I asked. \"I hate taking it off...\"\n\n\"But Red Sonja wasn't really known for walking around with a pink collar?\" he said. \"No problem.\" He took out his car keys, and there was my little lock key. I liked that he had it with him. He quickly popped off the lock and took it and my collar and put it in his jacket pocket. It felt weird not having it around my neck. I quickly put on the metal necklace that went with the costume. It looked good, but I missed my collar.\n\nI handed daddy my bag filled with stuff. If you're going to date a cosplayer, you need to learn to be a beast of burden. We headed out the door and towards the Square where I could already hear music playing. Daddy asked if I wanted him attached to my hip or to give me some place to strut. It's a weird thing when cosplaying. You do get into the character. I was not a reckless, loner barbarian, deadly with the sword, who lived to drink and fuck as much as possible. But walking out of the hotel, seeing some people already turning their heads at me there were only two ways to go...wrap myself up in the cloak and run back to daddy, or adopt the swagger.",
        "I headed towards the Square and the music. I could hear from behind me, the quiet tap tap of daddy's cane, so I knew he was there. That made adopting a swagger easier.\n\nI was getting looks, but no one was being creepy. By the time I got to the square it was easy to see why. The warm weather brought out the sluts. Slutty tended to be a theme of most Halloween women costumes. There were lots of slutty witches, cats, nurses, and school girls. I was showing off a lot of skin, but I was hardly the only one. \n\nI looked back at daddy and grinned.\n\n\"I feel overdressed,\" I yelled over the sound of the noise of the crowd and the music.\n\nHe came close and gave me a hug. I buried my face into his chest. God he felt good.\n\n\"I'm glad you took the plunge. You're the sexiest woman here.\"\n\nI blushed. \"I doubt that.\"\n\n\"I don't,\" he said.\n\nAnd just like that, new panties soaked. Jesus...\n\n\"Just so you know, there's no way you're making it back to your house unmolested,\" I said.\n\n\"Funny, I was just thinking the same thing.\"\n\nWe were going to end up fucking in the middle of the square if we kept this us much longer. Time for a subtle distraction.\n\n\"Can you dance,\" I asked. I suspected he couldn't because most guys I knew couldn't.\n\nHe held out his arms in a ballroom dance pose. I tentatively stepped forward and reached out for one for his right hand. He wrapped his arm and cane around me and we, very slowly, began to dance to a rock band in the square. I laughed with delight.\n\n\"I can't believe you can dance!\" I yelled. \n\n\"Two years of ballroom dance lessons. I'm terrible, and the cane doesn't help, but I can make do for a bit, although you should probably mind your feet,\" he said.\n\nWe moved together and I was back from being a confident barbarian queen to a giddy little girl dancing with her daddy. It was amazing. After about 10 minutes he begged off. We then walked around the square, checking out the costumes, listening to the music and holding hands. I loved it.\n\nAfter an hour I could feel myself getting a bit restless and cold. We'd been on the go all day and I didn't want to be so tired that, you know, I couldn't take advantage of daddy. Or be taken advantage of. Whatever.\n\nThat's when I heard a \"Holy fuck, we're sisters!\" from off to the side.\n\nComing towards me was another Red Sonja. Except she really looked the part. She was almost daddy's height and with her build she looked like an Amazon. I could also tell she was wearing real chainmail and not the stuff I'd cobbled together to look like it. Plus, I think it was a real fur cloak she was wearing. The sword looked real too. I was instantly intimidated, envious, and trying to figure out how to rob her.\n\n\"I love this! Look at you! You look fantastic!\" she said.\n\n\"Me? Look at what you're wearing! This is amazing. Plus you have the body to pull it off. God, I want to rob you,\" I said. She laughed.\n\nAnd so began a mutual admiration society between Michelle and I, as we cooed over details in each other's outfits. I saw daddy drift over and start chatting to a man I learned was her husband. I was amazed at the real chainmail and fur. She was amazed at how good my outfit looked considering how little I had spent.\n\n\"Look, my husband does all the heavy work. He does metal working and photography. Don't get me wrong, I love wearing this and modelling it, but I have no talent for making it. You put all this together on a budget and it looks just as good. It's fantastic,\" she said. \n\n\"Thank you. I really needed to hear that. My classmates at LaSalle think I'm a weirdo. It's one thing to dress up and go to a con, but I actually want to make costumes and go to cons for a living. They think that's stupid, but I've loved cosplay ever since I realized I could make Halloween last all year,\" I said.\n\n\"Your classmates are idiots,\" she said. Then she reached into a pouch on her belt and pulled out a card and handed it to me. \"Look, we have a website where I do modelling and he sells cosplay outfits, props, photography and stuff. Just email me there. I'll drop you a line next time I'm in Montreal and we'll chat. I'd love to pick your brain more, but you look cold and if I were your man, I'd want to warm you up given how sexy you look. \n\nI blushed. \"I don't have your body.\"\n\nShe leaned over and whispered. \"Your man hasn't stopped looking over here since we started talking and I promise you, he's not looking at me.\"\n\nI must have looked startled. I just assumed with little ol' me standing next to this Amazon, daddy would be looking at her, but she nodded her head. Then she got a mischievous look on her face. She reached into another pouch and pulled out her phone. A few quick taps and she showed me a map of downtown Kingston.\n\n\"Where are you parked?\"\n\nI showed her where I thought we were parked. Along the route back to the car she pointed out a church. \n\n\"Go on this side of the building. Lots of privacy there and no cameras. It's safe, you won't run into any druggies or anything. Trust me,\" she said, and winked.\n\nMy eyes got big and she laughed. \"The scandal adds to things. I'm half tempted to go there this evening, but we're meeting friends at a bar soon.\"\n\nWe posed for some pictures together for daddy and her husband and about a dozen others who quickly joined in to grab pics of half naked redheads. I promised I'd email her soon. Then I told daddy I was ready to leave. He took my hand and we headed back towards the car. With the church on the way.\n\nI was 50/50 on if I was actually going to do this. I wasn't religious at all, but having sex on church grounds...it felt disrespectful. But as I got closer, I found myself more and more tempted. To be naked out in public, on \"holy\" ground, sucking daddy's cock knowing I could be caught. Or maybe daddy could take me against the walls of the church.\n\nFuck, there was no way I was lasting for a 30 minute drive home. He'd be trying to drive with me impaled on his cock. We came up to the church and it was exactly as Michelle had described. One side of the church wasn't lit up by any street lights. I looked and couldn't see anyone there. I also didn't see any cameras.\n\nFuck it. I stopped by the gate and daddy paused and turned to ask me if I was ok. Then he saw the look on my face. I was flushed and biting my lip. I reached down and unfasted the gate. It clicked and gently swung open.\n\n\"Are you sure,\" was all he said. I nodded and pulled on his hand and led him into the churchyard. He looked around and there was nobody to be seen. He closed the gate quietly behind us and I led him quickly to the spot Michelle told me about. We quickly saw a little dip in the wall. It hid people from the street and a tree in the yard made it darker. Nobody was there, but judging by the few condom wrappers we saw on the ground we weren't the only people who had this idea.\n\nDaddy quickly pressed me up against the wall and kissed me. I moaned and reached down to undo his belt and pants. I'd loved the slow torture of yesterday, but that's not what either of us needed now. \n\n\"My, my, little girl. Where did you get such a filthy idea and know exactly where to go?\" he asked, and then went to work on my neck. \n\n\"Michelle told me,\" I managed to get out. I finally got his cock out from his jeans and underwear and began stroking it. Not that he needed anything to get hard. It was already rock solid and my tiny hand could barely get around it. It was hot to the touch and I realized that I didn't want it in my hands. I slid away from his kisses and hunched down so that my mouth was at the same level as his cock. Then I ran my tongue from his balls all the way up to the crown of his cock.\n\nI loved it. I loved daddy's cock. I was on holy ground so it only seemed right that I worship it. I put my lips on the tip of his cock and slowly slid down... down...down, swallowing as much as I could.\n\n\"Jesus Christ,\" daddy said, and then laughed at his words. I would have giggled but my mouth was busy. \"Remind me to thank her and Ahmad if we ever see them again.\"\n\nNormally I'd savor a daddy blowjob. Lots of teasing, pausing for dirty talk, looking him in the eyes. But as hot as it was to be sucking his cock, part of me was still nervous doing this where we could get caught. So I started power sucking on his cock, trying to work him hard. At the same time my pussy was throbbing if I didn't do something now, I'd be playing with myself the entire way home. I awkwardly reached under my loincloth and panties and began rubbing myself.\n\nI swear I could feel myself getting ditzier. The obscene noises I was making sucking daddy's cock, the sound of my fingers strumming across my clit sounded loud because I was so wet. But my legs were beginning to ache, but I needed to get daddy off and then me off, and...\n\nThat's when I felt daddy's hands in my hair. He gently, but instantly, pulled my head back. His cock slid out of my mouth and I looked up at him with a dazed and confused look. I was still playing with my clit.\n\n\"It's going to take too long to make me cum that way, princess. But I have another idea,\" he said. He reached under my arms and helped me stand up. Then he picked me up and pressed me against the cold stone of the church, making me gasp. My ass settled on a tiny ledge in the wall with my cloak still under me. It wasn't much, but at least daddy didn't have to hold me up. I looked at him and knew I wasn't going to have to masturbate in the car on the way home.\n\n\"Are you going to fuck your little girl, daddy?\" I asked, kicking my legs against the wall. He reached down, grabbed them, slid his hands up and grabbed my loincloth and underwear and with a quick motion pulled them down off my legs, wrestled them past my boots, and flicked them aside. Some small part of me wished he hadn't tossed them on the ground, but then he opened my legs, stepped forward and I could feel his cock rest against my pussy. My arms went around his neck and I held my breath.\n\n\"No, I'm going to fuck the hot little slut that's been teasing me all night,\" he said, and buried his cock into me.\n\n\"Oh God!\" I cried out, before daddy managed to clamp a hand over my mouth. My legs wrapped around his hips, pinning him to me, keeping his cock deep in me.\n\n\"Little girl, can you be quiet or does daddy need to keep his hand over your mouth,\" he said, his hips starting to move again. I nodded and he lifted his hand and I pulled him closer so that his ear was close to my mouth.\n\n\"I'll be a good little girl, daddy. I'll be, ooooh, quiet as a mouse. Just keep fucking me, I need your cock so bad, daddy,\" I whispered.\n\nWe kept that way for a few minutes, with daddy driving his cock into me and me whispering filthy things in his ear. Although I could tell he was going to have to put his hand over my mouth again as my voice was getting louder. I was getting close and judging by the way he was fucking me, so was he.\n\nThat's when I heard voices coming down the street. I looked and could see a crowd of a half dozen men and women, not much older than me, coming down the street. They were going to walk right past the church.\n\n\"Daddy!\" I whispered urgently. \"People are coming.\"\n\nHe paused in fucking me and we both held still. He didn't even turn his head. I was the one watching them. If we moved, they might see us. All we could is hold still and hope they didn't see us. I could feel my breath getting shorter and my pussy was throbbing around daddy's cock.\n\nThen they walked right past us. I could see that one of the guys was wearing a Senators ball cap. They were that close. But they kept laughing and talking about someone named Karen and didn't notice us. After their voices faded I whispered to daddy.\n\n\"You need to cover my mouth now and fuck me as hard as you can, daddy.\"\n\nHis hand clamped over my mouth and he slammed back into me and I screamed into his hand. We were both turned on and freaked out by the close call and didn't want to chance a second encounter. He buried his cock into me a half dozen more times, before I heard him groan and quietly mutter \"Jesus fuck, princess\" and he came in me.\n\nThat was all it took. His cum surging into me and I came, screaming into his hand. I could feel my pussy pulse around his cock, trying to get every drop of cum from him. He stayed that way for a minute, each of us trying to catch our breath. Then he slowly pulled out of me and helped me put my feet back on the ground. He kept holding me as my legs shook for a moment.\n\n\"Wow,\" he said. I grinned. I wanted to enjoy the moment, but we were really pushing our luck. We should get going.\n\n\"Daddy, can you get my loincloth for me,\" I said, as I fished some tissues from out of my bag that was sitting on the ground to mop up a bit. It was going to be a messy ride home. Fuck it.\n\nHe went to get them and I heard him mutter \"uh oh\" and he came back with them. They were wet and had mud on them. He looked apologetic when he held them up to me.\n\n\"Sorry, princess. Guess I got carried away.\"\n\n\"Daddy!\" I whispered loudly. \"What am I going to wear?\"\n\nHe thought a moment and then got a mischievous grin.\n\n\"Nothing. We're about a five to ten minute walk from the car. You have your cloak and I'm with you. You'll be fine,\" he said.\n\nI looked at him like he was a madman and he shrugged his shoulders and gave me a look that said \"come up with a better idea.\"\n\nI didn't. Cane or not, daddy was going to be moving double time on the walk to the car. But just before we left the shelter of the alcove I had an idea. I reached back and undid my bra, and placed it in my bag. It was a weird kind of public nudity. I still had on my boots and gauntlets. I had on my necklace and headband. And my cloak, of course. \n\nWhen I was putting my bra in the bag, I felt my phone. I'm not sure I'll believe this happened in two weeks time unless there was proof. I grabbed it and quickly set it up to take pictures in low light and made sure the flash was off.\n\n\"Take my picture, daddy,\" I said. He took the phone from me with a dazed look on his face. He double checked the settings and quickly looked around. The street was still quiet. He brought the phone up and I did a few quick poses. Some with me being coy with the cloak; others more blatant. I ended with one of me pressed against the wall, my legs open and touching myself with me looking sultry at the camera.\n\nI could feel myself getting aroused again, but this really wasn't the time. I quickly went over and grabbed the phone from daddy and put it in my bag and handed it back to him to carry. Then I bundled the cloak around me. He put his arm around me and, after another check, we left the church.\n\n\"Let's go home, daddy,\" I said.\n\n***\n\nI woke up the next morning naked and curled into daddy's side. I was really beginning to enjoy waking up that way.\n\nAfter we got home last night I could tell daddy was aching and he told me I had worn him out. He was trying to joke, but I could tell his knee was hurting a lot. I felt bad, and he said I was being silly, that he was a grown man and that a little pain was absolutely worth being with me today.\n\nHe got in the shower and popped a couple of painkillers. I was tempted to join him, but I knew what would happen and I think he needed some recovery time. I hopped in after he got out and scrubbed myself clean. By the time I finished doing all of my pre-bed routines and went to join him he had already passed out. He was naked, with the sheets only partly covering him.\n\nI was still wired and a bit horny from our church adventure. I got in bed and looked at daddy's naked body. I then cracked open my phone and looked at the photos he took at the church. It felt wrong to think I looked hot, but damn it, I looked fucking hot. I looked porn star hot. I looked at the pictures he took and then at his cock again and began rubbing my clit. It only took a few minutes before I gave myself a nice little orgasm. Just enough to take the edge off.\n\nI texted Gillian to tell her I was ok and that I may have desecrated a church. She found that hilarious. I also flipped her the picture of me and Michelle, and she promptly pumped me for details about her until I finally passed out.\n\nI checked my phone and saw that it was 8:45. I debated waking daddy up with a morning blow job and finally christen the bed, but my stomach chose that moment to remind me I was hungry. That's when I got a clever idea. I could make daddy breakfast in bed and then give him a blowjob. I patted myself on the back for being such a clever little girl and slipped out of bed.\n\nIt was still warm in the house and this weekend was my apparent coming out for being a bit of an exhibitionist, so I didn't bother with a shirt or bathrobe. I trotted quietly out to the kitchen and began assembling breakfast. I thought the sourdough bread daddy bought yesterday was still in the car and he might like some. I considered putting on a coat, but decided to continue my exhibitionist \"streak\". I quietly opened the door, ran to the car naked, and grabbed the bags with the bread from the backseat.\n\nI cut up some bread, put some fruit on a plate, found some bacon in the fridge that wasn't used yesterday and began frying it. After the first splatter of grease popped out of the pan, I decided that maybe an apron would be ok. I found daddy's and put it on. It was way too big for me and my ass was hanging out the back, but I bet it would look sexy when I was serving him.\n\nI Googled \"How to make an omelet\", figuring I would really impress him. After about five minutes I decided that he would be just as impressed with scrambled eggs.\n\nI was humming along and putting the final touches on things. I just needed the coffee to finish perking. That's when I heard the door open and close. Damn it, daddy woke up and I didn't hear him. He must have gone out to the car to get the rest of the stuff from yesterday. Oh well, I'm sure I could entice him back to bed.\n\nI heard footsteps coming down the corridor, and I began to wiggle my hips and ass, figuring that would be a tempting sight. I was so focussed on getting the food ready it didn't register that the steps sounded wrong.\n\n\"Well, I was hoping to surprise you with breakfast in bed, but I guess my plan has been foiled. How are you feeling...\" and then I turned around.\n\nIt was not daddy.\n\nIt was a woman in her mid 40s. She had black, curly hair down past her shoulders with grey coming in, but stylishly so. She had sunglasses pitched on her head, a really kickass looking leather coat and a U2 t-shirt. Jeans and some really awesome knee-high leather boots too. I took all of that in because it was genuinely the only part of my brain working at the moment.\n\n\"Hi, I'm Meg. And you are?\""
    ],
    "authorname": "thanagar",
    "tags": [
        "daddy",
        "dd/lg",
        "ddlg",
        "mature",
        "teen"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages-ch-02"
}