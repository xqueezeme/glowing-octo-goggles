{
    "title": "Back to You Ch. 09",
    "pages": [
        "Hey Guys! Here's the ninth chapter of Back to You. I had originally planned to make this the final chapter, however it was starting to get pretty long so I decided to break it in two. Again, I want to apologize for the delay- I was still figuring out the best way to wrap this story up. Hope you guys like it. Please let me know what you think- I really appreciate it. \n\n*****\n\nChapter 9: He deserves something special. \n\nThree weeks after Matt and Ollie confessed their love for each other, the two had been inseparable. Apart from the difficult nights they had to spend in their own beds, you'd never be able to see one without the other. They became a fixture at school, constantly stealing time in between classes and gazing far into each other's eyes during lectures- so much so that neither of them had any idea what topic they were learning this week. They opened themselves up to others too, going on a few double dates with Pete and Jess- often turning into a roast of Oliver which Matty happily contributed to. Oliver was a regular at the Stevens house too, often spending dinners there whenever his mom had to work late. Even little Katie herself had grown to love his company- always asking her annoyed brother where Ollie was whenever Matt was alone. \n\nMatt himself was slowly breaking down the wall that was Mrs. Morrison with moderate success. As kids, Ollie's mom was a no nonsense kind of woman- often showering her golden child with praise yet knowing when to put her foot down. Since their reunion, Matt hadn't spent too much time with Mrs. Morrison, and the few chance encounters he had were pleasant at best. He just felt this underlying guilt within himself for causing her son so much pain. He'd made amends with Oliver already, but Yukiko Morrison was the last person he'd have yet to clear the air with. Still, the teen struggled with figuring out how best to approach the conversation, and as he continued to spend more time with his love, he hoped it would be one he'd never have. \n\n***\n\nMid- September had rolled around and Matt was busy planning a weekend away for the two of them to celebrate Ollie's birthday. It proved to be a difficult feat, seeing as though they barely spent any time apart. He'd resorted to clearing out his browsing history every night so Ollie wouldn't see the dozens of possible Airbnb options he'd looked up for their stay. \n\nThat day during lunch, the two were joined by Pete and Jess at their usual spot at the edge of campus. Jess was just finishing up her rant about having to bust her ass for her little sister's sweet sixteen, complete with lilac centerpieces, a macaron tower and a choreographed dance routine by the entire entourage. The bitterness in her voice was dulling down the decadence of the slice of chocolate cake the two boys were sharing. Pete kept quiet, only shooting them mindful glances as Jess continued to vent. \n\n\"I just don't get why she had this elaborate-ass party. My parents didn't even throw me one when I turned sixteen!\" Jess complained as she finally took a breath.\n\nOliver raised an eyebrow, \"Wow, you don't sound bitter at all.\" He looked back at Pete and Matt, \"Guys, I think this is Jess' way of saying she wants a party!\" \n\nJess threw a rolled napkin at his face, \"Shut it, you.\" The boys shared their laughs as she shook her head, \"I swear, we need more girls in this group. I feel like I'm one of the guys here.\" \n\nOllie snapped back, \"Yeah, no. Matt's not allowed around girls, especially after the last time.\" \n\nMatt threw his arms up, \"Abby Winters had it coming! You should have seen the way she practically threw herself over Oliver.\" \n\nSwinging his arm around Matt, Oliver teased, \"Down boy!\" leaving Jess and Peter roaring out in laughter. \n\nPeter then crooked his head, \"Wait, dude isn't your birthday coming up?\" \n\nOliver nodded just as Jess' eyes grew big, \"That's right! It's on the 27th! Do you have any plans?\"\n\nMatt felt a trail of sweat form at his back as he waited for an answer. He spent the past week trying to plan the perfect surprise and he just hoped he wouldn't ruin it here. Truth was he'd never actually talked to Oliver about the boy's birthday and he was genuinely interested to get his take on it. \n\nOliver sipped his water and shrugged his shoulders. \"Not really. I was probably gonna do something chill this year.\" He reached over and hooked his arm around Matt's neck, \"Probably spend the day with my mom then have a birthday dinner with this cutie.\" Matt let out a nervous laugh, hoping Oliver couldn't feel the damp spots that remained at his back. If there's one thing Matt was terrible at, it was hiding his emotions. \n\nAs Matty slowly worked his way out of Oliver's chokehold, the boys settled back in their seats. Oliver went on, \"But hey if plans change, I'll let you guys know. Maybe you can join us for dinner or something.\" \n\n\"It's still weird how you're one of the oldest in our grade. There's a bunch of kids here who'll show up to college still seventeen!\" Peter mentioned, looking over at the two. \n\nOliver nodded, \"Crazy huh? I don't know- nineteen's such an underwhelming age. I mean, it's not like the newfound freedom of becoming legal or the end of an era when you hit your twenties. You're just kinda in between milestones.\"\n\nMatty silently nodded, looking over towards the open field so to avoid eye contact with Ollie. Sure, a nineteenth birthday wasn't anything to call home about, but he hoped this year was different. Ollie always loved birthdays, even more so than normal people. He remembered all those sleep overs when Oliver would wake up at the crack of dawn, and jump onto Matt, screaming, \"It's my birthday!\" like the worst possible alarm clock there was. It had been years since he had a slice of Mrs. Morrison's famous triple layer chocolate cake, or have to hear an off-key rendition of \"Happy Birthday\" by Oliver's dad, but he was determined to make sure that this year was one for the books. \n\nMatt snapped back to reality as Jess dug her fork into her bowl, stabbing the lettuce. \"Well birthday's are just another year closer to death\", she said as the plastic fork pierced through the crisp romaine. She looked over at a surprised Oliver, \"Life sucks then you die.\" \n\nThe boys sat there for a few seconds before Pete reached over and rubbed Jess' back, \"Jesus, could that have been any darker?\" He looked over to Jess, \"You sure someone didn't piss in your ranch dressing?\" Ollie and Matt awkwardly laughed as Jess shrugged her shoulders, blaming the outburst on post sweet sixteen stress. \n\n***\n\nThe next day, Matt made the short drive over to Ollie's. Considering how much time they spent together, and how they were literally two houses away, it made sense for the boys to ride together. Oliver suggested it himself, as he'd grown to love picking Katie up from school on the days Matty would take her to dance practice. Matt loved the arrangement too, unashamed to admit how he enjoyed a sweaty and heart-racing Oliver at his passenger seat after soccer practice, leaving the boys with a perfect excuse for some afternoon shower fun. He'd gotten over the need to keep his car clean real quick. \n\nMatt knocked on the familiar door this morning, wondering if his fingerprints could be traced by now based on how often he was here. An extra chipper Oliver opened the door, pulling his boy in for a kiss after looking over his shoulder to ensure his mom wasn't around. He'd come out to her two weeks ago and though he was met with nothing but support, he didn't want to push his luck with public displays of affection. \n\nBiting down on the boy's bottom lip as he pulled away, Matty commented, \"Someone's in a good mood this morning.\" He leaned in slightly towards Ollie's ear, \"I thought you'd be sore after the pounding I gave you last night.\"\n\nOllie kissed the boy's cheek, \"You kidding? I had a full night's rest- I fell asleep right when my head hit the pillow.\" The boys snickered like children who'd just heard their first inappropriate joke. Oliver admitted, \"God I love it when your parents take Katie to the movies.\" \n\nThe boys laughed as they pulled away from each other, making sure to straighten out any ruffled pieces of clothing from the kiss. Ollie held onto Matt's wrists, an act that Matty had grown to love. It was his boy's way of making him feel secure, as if every brush of thumbs against his wrists was like Ollie checking Matt's pulse, making sure he was okay. They lingered for a few minutes before Ollie looked over Matt's shoulder at the large clock on the wall. \n\n\"Hey, I'm just gonna swing upstairs real quick. I forgot to print out my reflection papers for third period. Go ahead and grab a drink in the kitchen- I'll be right back.\" Matt nodded as Oliver turned around and jogged up the stairs, skipping every other step. \n\nWalking through the rest of the house, Matt immediately turned a bright shade of red. He looked over at the leather couch, the redwood kitchen table and the countertop just around the corner- all places where he and Oliver had sex a few weeks ago. He swore he'd never be able to walk through this house without picturing Oliver, drenched in sweat and radiating heat as he pounded him; those brown eyes full of nothing but animalistic lust. He could feel his cock stir in his tight pants just at the thought of being on his back with his legs dangling in the air. Those dirty thoughts were cut short as he heard the sound of the sink coming from the kitchen- like a cold shower meant to tame the beast. \n\nAs he turned the corner, he saw Mrs. Morrison standing by the large farm sink, looking out towards the yard. The morning sun had cast a beautiful glare over her milky skin. She looked older these days, less vibrant than Matty remembered all those years ago. Grief does that to someone. It's like Jack Morison took some of his wife's youth with him when he passed. Still, Matty looked at her poised frame drenched in morning light that covered each of the worry lines she'd gone used to wearing. She was arguably beautiful, if not a little more worn. He was about to call out her name, offering small talk as he usually did when she beat him to speaking.\n\n\"He's a lot happier these days\" Oliver's mom commented, still looking out towards the fence line. Matt kept quiet, not sure if she was talking directly to him as her gaze never shifted. She continued, finally turning to him with a wet dish in her hand, \"The other day I caught him singing in the shower. My son, singing?\" She chuckled at the thought as Matty joined in, swinging around to the other side of the island. \n\n\"He was singing, very loudly if I may add, some trashy pop song that you kids listen to these days. God he sounded like is father- beautiful men, both of them, yet they have the ugliest singing voices.\" She paused, placing the dish onto the rack as if the mere mention of her husband brought fatigue. \n\nMrs. Morrison wiped her hands on a clean towel, \"You shattered him. That poor thirteen year old boy was nothing but a pile of debris, and Jack and I didn't know what to do. We had a son who was broken cause his favorite person in the world wouldn't even speak to him. Soon after, he closed himself off. And since then, we've been trying to find the key.\" \n\nMatt swallowed down at the emptiness in his mouth. He hoped he would never have this conversation, but here it was. Mrs. Morrison continued, cutting off the demons that haunted Matt's subconscious, \"Now I'm not telling you this to make you feel guilty. I'm telling you this because you need to know how much of an impact you've made.\" Matt got a clear view of her eyes, but there weren't full of rage or anger like he'd expected. \n\n\"You hurt Oliver all those years ago.\" She paused, \"But you're also the person who brought him back to me; back to this world that includes more people than himself. Matt's face softened a bit, melting the pout he had formed with his silent lips. \n\nMrs. Morrison's expression also softened, wearing a smile as he went on, \"The other week, after what I'm assuming was your first date, he came home and told me that he loved me before he went to sleep.\" She could feel a tear forming at the corner of her eye, \"God I haven't heard him say that in years!\" She chuckled. \"You brought my baby boy back to me.\"\n\nMatt choked back tears as he felt Mrs. Morrison's hands wrap around his. He could feel their softness as they brushed against his palms. \"I'm just so grateful that he gave me another chance\" Matt said as his voice cracked. \n\nYukiko Morrison squeezed Matt's hands, nodding, \"That boy adores you, Matty.\" She looked back at the boy, assuring him, \"You know when he came out to me two weeks ago, he didn't say that he liked boys or that he was gay. He said that he was in love with you.\" Matt looked surprised, not realizing Ollie had harbored those feelings for that long. Letting go of his hands, she shrugged her shoulders, \"It was just that simple.\" \n\nWiping her eyes, Oliver's mom fixed her hair and adjusted her shirt as if getting down to business. She changed her tone, \"So do you love him?\" Her voice was firm, needing an answer.\n\nMatt nodded and said, shyly, \"I've been in love with Oliver since we were thirteen.\"\n\n\"Good\" she said, pleased with the answer and not needing anything more to say. She and Matty both exhaled, shaking away the serious nature of their conversation. Matt sat there with legs as weak as putty, dangling freely between the barstool. Was he pleased that the talk went better than expected? Yes. Would he do something like that again? Hell no. \n\nMrs. Morrison softened completely, wearing a smile as white as the pearls that hung around her neck. She kissed Matty on the forehead, something she used to do when they were kids. He immediately beamed at the act, feeling acceptance from the last hurdle he had to leap over. Pulling back, she cleared her throat, \"Now tell me what you're planning for Oliver's birthday.\" She looked at him knowingly, \"It's only two weeks ago and something tells me you're not the type to settle for a simple dinner and cake.\" \n\nMatt lit up as he looked back at Mrs. Morrison, \"No ma'am. I was actually hoping to go away for the weekend, just the two of us.\" He immediately caught himself, \"With your permission of course.\"\n\nOliver's mom chuckled at Matt's nervousness, nodding her approval as the boy continued.\n\n\"He's just been through a lot, and he deserves something really special\" Matty said, looking off into the distance as a childish grin swept across his face. By now, the boys had progressed significantly in their relationship, yet there was still this innocence of young love that consumed the both of them. \n\nMrs. Morrison smiled at the sight. Matt Stevens, in all his six feet and a hundred seventy pounds of glory was hopelessly and unquestionably head over heels with her son. It was an expression her husband used to wear around her, and in all their twenty two years of marriage, she never had to question how he felt about her. She assured, \"Yes he does. Now you let me know what I can do to help.\" She looked back at a relieved Matt who immediately wrapped his arms around her into a hug. \n\nOliver had made his way down the stairs, shouting out, \"Hey sorry Matty, the printer kept jamming.\" He looked around, trying to find him. Turning the corner he caught sight of his boyfriend and his mother embracing themselves in a hug. He crooked his head, chuckling, \"Uh, what's going on?\"\n\nMrs. Morrison released Matt from her grasp, patting the boy on the shoulder, \"I was just catching up with Matt here.\" She looked over to check the time on the oven, \"You boys should get going so you're not late.\"\n\nOllie nodded as he came around the island, still slightly confused. He kissed his mom on the cheek then reached for an apple, \"Yeah, we'll see you later, mom. Love you.\" Yukiko's face warmed as she felt her son's touch. \n\nMatt followed suit, mimicking his boyfriend, \"Have a good day Mrs. M!\" She nodded, reminding him of their earlier talk. In all the time that Matt had been friends with Oliver, he'd always known his mom as a woman of few words. She spoke when necessary- never the type to speak out of character or to show emotions without reason. Yet today as they parted ways, Matt could tell that she was wearing her heart on her sleeve. And as he turned his back and walked out with his boyfriend, he could feel the wall that was Oliver's mother crumble to pieces. \n\nClosing the front door, Oliver stopped just above the entry mat, \"Was everything okay in there with my mom?\" \n\nMatt simply nodded, wrapping the circle around Oliver's wrist. \"Better than okay\", he admitted, then leaned in to give his boyfriend a kiss. He could feel the worry lines on Oliver's face dissipate into the boy's creamy white skin. The storm was over, only the calm remained. \n\n***\n\nThe day before Oliver's birthday, Matt could hardly contain his excitement. He'd practically said less than five words on the drive to school that morning, turning on the Bluetooth of his car and blasting The 1975 at full volume. Oliver didn't seem to mind as he too rocked out, presumably leaving a trail of noise complaints through their suburban neighborhood. Matt had finished all the details of their weekend getaway and was making sure not to crack on this final stretch of secrecy. \n\nBy the time lunch rolled around, Matt resulted to a series of nervous ticks, from the tapping of his foot on the soft grass or the fumbling of his fingers against the picnic table. Oliver was his usual calm and collected self, looking incredibly comfortable in a bright white hoodie that Matt wished was just one size smaller. The boy pulled out a series of containers and a thermos, arranging them like a game of Tetris in front of the both of them. Matt brought it to his nose to take in the deep aroma of miso before drinking it down and warming his bones. \n\nMatt let out a breath as he handed Ollie the thermos, \"I swear, your mom's cooking is to die for. She gives that Japanese place on Westchester a run for their money.\" \n\nOliver nodded, pulling out a container of homemade onigiri, perfectly wrapped up in crisp seaweed like a Christmas present. \"She makes all this for you, you know. This morning she handed me this Tupperware telling me its specifically for you because she knows how much you like salmon.\" \n\nMatt's heart instantly warmed, and not just from the soup. He grabbed one, nearly devouring half of it in one bite, \"No need to be jealous.\" Oliver rolled his eyes as Matt admitted, \"My mom intentionally makes lasagna whenever you tell her you're staying for dinner, cause she knows it's your favorite.\"\n\nScarfing down the last of the rice ball, Matt shrugged, \"I don't even like Italian.\" \n\nOllie laughed as he snatched one of the pieces from Matt's container, \"Guess we'll both have to get used to it, Stevens.\" He turned to his love, \"Cause we're in it for the long haul.\" \n\nMatt nodded in one of those moments where words weren't needed to convey emotion. He looked out towards the grass, enjoying the warm sun that fell over them. Peter and Jess came walking by with Pete in his usually scraggy look that could only be described as comfortably chic. Jess looked great as usual, trudging through the lawn with some difficulty in her bright red wedges. \n\nOliver called out with his mouth still full of rice, \"There you guys are!\" \n\nMatt waved as they came closer, \"I'd offer you guys some food but Ollie here kinda ate most of it.\" The two laughed as they found their seats with Oliver washing down his last bite with a bottle of orange juice. \n\nJess replied, \"Thanks, but we ate already.\" \n\nPeter nodded, \"Yeah, we wanted to catch you guys before the bell and wish Oliver here an early happy birthday!\" \n\nReturning the boy's high five, Ollie paused, \"Thanks bro. But I'm sure you could've just waited 'til tomorrow.\"",
        "Peter quipped back, \"Yeah well I just figured since we won't be seeing you-\"\n\nJess kicked from underneath the table before he could say any more. She cleared her throat, looking past Oliver towards Matt who had a clear look of panic stretched on his face, \"What he means is that we actually have plans with my parents tomorrow night, so we won't be able to make it, right babe?\" She looked over at Peter with a deadly glare, furred eyebrows and all.\n\n\"Yeah, that's right\" Peter said, as he leaned down slightly to rub the bruise that was undoubtedly forming at the spot where Jess kicked him. Oliver looked back at the boy, confused as ever. Straightening up, Peter stood and grabbed his backpack, \"Well we'd better get going.\"\n\nOllie shot back, \"Wait, I thought you both had a free period after this? Where are you running off too.\"\n\nJess started to walk away. Peter followed suit as she shouted back, \"We have to go to the library on Jefferson- big research project coming up!\" Before Oliver could even respond, the two had already made it to the main building. \n\nHe looked over at Mat who had stayed remarkably silent the entire time, \"Well that was weird wasn't it?\"\n\nMatt shrugged his shoulders and started clearing away at all the empty containers, \"They were your friends first.\" \n\n***\n\nThe rest of the afternoon went off without a hitch. Matt was cruising down the side streets with Ollie telling this drawn out story about his useless lab partner. Apparently the kid had managed to break three beakers and two graduated cylinders in a month. He swore he could sit there and listen to Oliver rant all day about the most mundane topics. That's how he knew how much he loved the boy- that he didn't just tolerate every little quirk, but actually even liked them. \n\nOliver was so lost in his train of thought that he barely noticed Matt stealing glances and fighting between watching him and not crashing into the pavement. He stopped, catching Matt's eye, \"What, was I going off on another tangent?\"\n\n\"I love your little tangents. You're cute when you get all worked up.\" Matt simply said as he felt Oliver raise up his fist and kiss the small space above the boy's thumb. \n\nOliver replied, \"I'd kiss you right now if it didn't mean us veering off onto the sidewalk.\" Matt laughed as Ollie sank back into his seat, actually considering risking an accident if it meant kissing Matty right then. Matt had just pulled onto the street and was making his way down the familiar row of houses- each different in appearance yet somehow blending into one cookie-cutter neighborhood. Oliver asked, \"So mind telling me why we had to rush home? We could have stopped at that boba shop by the park and get that taro drink you love.\"\n\nMatt shrugged his shoulders, barely looking over at the boy, \"Let's just say I have a surprise.\"\n\nOliver raised an eyebrow as they pulled onto his driveway, \"Does this surprise have to do with why my mom's home early?\" He looked over to see his mom's jet black Beemer parked right next to them; a surprise gift his dad had managed to keep secret for their 20th year anniversary. \n\nMatt didn't answer, instead he turned off the car as a confused Oliver followed close behind. Once inside, Oliver called out, \"Mom?\" \n\nMrs. Morrison came from out of the kitchen, still dressed in a black blazer and pencil skirt like she was fresh from the courtroom. \"Hey sweetie, hey Matty\" she said as both the boys shuffled into the living room.\n\nOllie crooked his head, \"What are you doing home so early?\"\n\n\"I came to see you off\" Mrs. Morrison simply said. \n\n\"See me off for what?\" Oliver was now scratching his head as his boyfriend and mom just stood there with huge grins on their faces. \n\nMatt closed the gap between him and Oliver, taking the boy's wrists in his hands, \"We're going up to San Francisco for the weekend to celebrate your birthday! Just you and me!\"\n\nOliver's mouth opened wide, \"Wait are you serious? How were you able to plan all of this?\"\n\nMatt replied, \"Well the hardest part was really just keeping it a secret for the past few weeks. Your mom helped too- she was able to book us a room using all the points she gets from traveling. Now all that's left is for us to hit the road.\" \n\nOliver wrapped Matt in a hug tighter than the boy had ever felt. He could feel Oliver's face pressed at his shoulder, smelling the fresh scent of mint that wafted from Ollie's hair. \"I can't believe you did all this...\" he paused for a second, \"for me.\"\n\nMatt locked their fingers together, feeling the boy's trembling hands- a clear sign that he was giddy with excitement. \"You deserved something special.\" \n\nOliver swore he could break down in that moment had joy not overpowered every other emotion. He reached up and kissed Matty on the cheek, not wanting to push any PDA on his mom who stood there, looking as happy as he was. \"When do we leave?\" he asked, still reeling from the excitement. \n\nMatt shot back, \"Right now, actually.\"\n\n\"What do you mean right now? I haven't even packed any clothes or-\" Ollie said as a thousand thoughts rushed into his head. \n\nMrs. Morrison jumped in, \"That's already done, sweetie.\" She pointed over the boy's shoulders towards the duffle bag sitting at the base of the stairs. \n\nMatty explained, \"I had Peter and Jess come over this afternoon and pack all your stuff so we could hit the road and make it there by dinner.\" \n\nA light clicked in Oliver's head, \"That's why they were acting so weird today! Geez you guys all did this for me?\"\n\nMatt nodded, unable to contain his own excitement, \"Yup. We'll spend two nights in the city and drive back on Sunday afternoon just in time to make it for a belated birthday dinner here.\"\n\n\"Just us three?\" Oliver asked.\n\n\"Actually, I ran into Matty's mom at the grocery store this week and insisted that they all come.\" She smiled, \"Man it's been a while since we chatted. It'll be so nice to have her and Kevin and that sweet little Katie over here. It's been too long since we've all been together.\" \n\nMatt's melted at those words and could feel Oliver feeling the same way. He looked over to see Oliver desperately holding back tears as he held his mom and Matt at each arm. Over a month ago, he felt alone- as if everyone around him was a projection of the kinds of people he thought he needed in his life. But now, he couldn't have felt more like he belonged. Matty had given that to him. And that made him love the boy even more. \n\n***\n\nAfter parting ways with Ollie's mom, the boys set off for the drive up north. They packed into Matt's 4Runner, knowing that they'd have a better chance of finding needles in haystacks than trying to park Oliver's massive truck. The excitement since the big reveal hadn't wavered, even on the nearly two hour drive into the city. Both Bay Area natives since birth, neither seemed to visit the city all that often. In fact, Oliver hadn't been up to San Francisco since he was a kid when his dad brought him up for a Giants game. That was one of the most perfect days Oliver could remember: spending the entire day with his hero and learning about his love of baseball and the place that made a boy from a small town in Ohio feel like he belonged. Oliver could still taste the lobster rolls and garlic fries on the tip of his tongue as the scent of sea breeze lingered in the air. \n\nMatt was cruising for most of the drive, holding onto the steering wheel with one hand while Oliver held onto the other, often running his fingers against the creases in the boy's palm. The car ride was set to the sounds of Passion Pit along with Matt's infectious laugh that Oliver always seemed to bring out like no one else could. The combination of the two had time flying by as Matt made his way up the highway. \n\nA little under two hours later, the boys watched as the buildings seemed to close between them, forming a dense cluster of concrete, glass and steel. Oliver watched in amazement as they went down Market Street past the clutter of shoppers and tourists and techies. He felt this energy around them, the same one that his father often referred to when talking about the City by the Bay. Matt followed the GPS to a T, weaving through the complex grid of one way streets and bike lanes before arriving at the hotel. Poking through the skyline, they looked up at the black clad building with views that stretched over the compact city. \n\nWith a duffle bag over his shoulder, Matt looked at his boy as they made their way through the glistening lobby covered in accents of sterling silver, black marble and warm shades of brown. \"Ready for this weekend?\" Matt asked as Oliver was turning his head at every angle to see the extents of the room.\n\nOllie replied with a smirk on his face, \"Two and a half days with just you and me? Let's get this started, boyfriend.\" He then took off for the elevators with Matty trailing behind him, tugging along the straps of the bag as it swayed by his side. \n\nA dozen or so floors later, the boys hurried down the halls to their room at the end of the long corridor. Flashing the key, Matt opened the door to a massive sized room capped off with a curtain wall of glass that gave them a view of the pier and ocean beyond. A quick look into the bathroom showed a huge shower and separate tub, both able to fit five or six people at once. The crown jewel of the space was the bed: a king size fitted with pure white sheets and pillows that looked like they'd explode feathers at any minute. Matt laughed to himself, remembering that Ollie's mom had opted for a single bed suite rather than two when she booked the room. He didn't know whether to be embarrassed or grateful. \n\nTossing the bag aside, Matt joined Oliver who was standing by the large glass windows and looking at the view. He wrapped his arms over the boy and crossed them at his chest. He loved the feeling of Ollie's warm body and firm ass pressed against his. He sat his head at Oliver's shoulder, \"So what should we do first babe,? Maybe find a nice overlook to watch the sunset. Or there's this burger place in the Marina that I heard was really good.\" \n\nOllie shook his head and turned so he was facing his love, \"There's only one thing I wanna do right now.\"\n\nMatty pursed his lips, \"And what might that be?\"\n\n\"You\" Oliver simply said as he stepped forward, pressing a finger into the crease on Matt's chest. The boy walked backward until he felt the edge of the bed behind his knees. A playful intensity fell over the room as Ollie pushed his boy back with his head landing on the soft bedspread. Matt spread his legs, leaving space for Oliver's knee as he leaned down and kissed him. The boys ravaged at each other's mouth, yet it was Ollie who kissed like he had something to prove. His feelings for Matt had grown more intense in the past few weeks, and the whole surprise birthday weekend only topped off the cake that was the love of his life. He sucked on Matt's plump limps until they were bright pink and dripping wet. \n\nMatt wrapped his legs around Ollie's backside, only making the boy press his body into his even closer. He loved the feeling of getting lost in moments like this- where he could let Oliver take control and have his way with him. He pulled off Matt's lips long enough to whip his shirt off and fling it across the room. Ollie matched him, pulling off Matt's shirt until they were equally exposed. He ran his hands along the boy's furred chest and lightly pinched his soft nipples, leaving Matty squirming beneath him. He then leaned down, attacking the boy's soft, exposed neck. \n\nOliver roared out, in between kisses, \"God, you're so perfect.\" The words only encouraged Matt who cradled the boy's head in his hand so his head was kept close. Ollie bit at the tender flesh, hell bent on leaving a mark. And Matt didn't seem to care. He egged the boy on, running his fingers through Ollie's silken hair and moaning out with every nibble. Once satisfied with the reddened piece of flesh, Ollie moved down, flicking Matt's nipples against the tip of his tongue. He sucked on the hard jewels, feeling the hair on Matt's chest rubbing against his forehead as he continued to move south. \n\nMatt's body was hyper-sensitive underneath Ollie. The boy had this ability to turn him into putty as his expert mouth worked over every inch of unclaimed skin until Matt's body was completely and unquestionably his for the taking. The boy looked over as Ollie sunk his tongue into the crevices of his torso, with creases so deep they could hold liquid. He loved the sight of Ollie's shapely ass peeking through the back of his faded jeans. The boy was a sight to be seen with his once perfect hair completely tangled in the web of Matty's fingers and his mouth glazed in spit as he devoured every inch of flesh offered to him. When Ollie finally made it to the boy's crotch, he nestled his hands on Matt's waist with his thumbs following the v that formed at his hips. He could practically smell the precum that oozed off Matt's jeans- a scent that intoxicated him more than anyone could ever understand. \n\nOliver skipped the fabric altogether, slipping off Matt's remaining clothes in one shot. After tugging at the boy's ankles to remove the stubborn skinny jeans, he looked back to see Matty lying there, with his knees bend and toes dug into the mattress. Between them, he had a clear sight of Matt's swollen cock and large balls that hung over, nearly blocking the view of the boy's pink hole. He practically jumped at the sight, gripping Matt's cock with his fist while sucking on the boys huge balls from below. He loved the feeling of the sensitive skin covering his face and the musk that he took in from the boy's crotch was enough to make him cum if he wasn't careful. Matt too was on the edge, grasping at the loose sheets and raising his legs so his feet sat along Ollie's sculped shoulders. The other boy loved how open Matt was to him. In one of the most vulnerable positions, Matt trusted Oliver more than he'd ever learn to trust someone else. Oliver sucked on Matt's flared head for a few seconds, not wanting the boy to erupt so soon. He then moved down to his real prize, Matt's puckering and deliciously pink hole. He bit down on his lip before leaning down and circling the boy's entrance with his tongue. \n\nMatty cried out as Oliver licked his pucker in a raspy voice that no one else ever had the pleasure of hearing. \"Ollie!\" he moaned out as the boy stuck out his lips, kissing at his hole with as much intensity as how he kisses his mouth. He pulled Oliver closer, digging the heel of his foot into his back until the boy was smothered between his thighs. \"Open me up babe, get me ready for you\" Matt cried out, as a thin bead of sweat started to form along his hairy chest. \n\nOllie jerked the boy's leaking cock while licking up the crack of his ass in long strokes. He could feel Matty relax his hole and open up to him, exposing those delicate pink lips as he spread his cheeks apart. Oliver felt his mouth water as he looked back to his perfect boy, \"Tell me what you want Matty.\" \n\n\"I want you to make love to me, Oliver Morrison\" Matt said, gaining some composure. \n\nOliver couldn't resist any longer. Matt's words were like adrenaline injected into his bloodstream. He aligned his throbbing cock with the boy's pucker and leaned forward so he was on top of him. Matt bit down on his bottom lip as Oliver pushed himself in, filling up the boy's tight hole with little resistance. Ollie felt every inch pierce through his boy as he leaned down to savor his pouted lips. They kissed as Ollie sped up his pace, thrusting into the boy who kept his legs on Ollie's back side, not giving him a way out. \n\nThe boys kissed and touched and even giggled through the pounding that Oliver was giving. Their weeks together had both of their bodies molded to one another, with muscle memory taking over so the boys could get lost in each other. Matt gripped Ollie's square jaw, as he looked at him, \"I swear this feels so fucking good. It just keeps getting better with you baby.\" \n\n\"I'm always gonna make you feel good, Matty\" Ollie said as he kissed the boy's wrist. Matt fell into the comforter, feeling only Oliver's weight on him as he floated out of his body. Every thrust and brush against his sensitive spot sent shockwaves throughout his spine. He could feel the electricity transfer with every kiss and graze against his wet skin. He knew he'd never feel this again with any other person. It was just Oliver. It will always be just Oliver \n\nOllie dropped his head as if he was unable to hold it up any longer, finding solace in the space between Matt's neck and shoulder. The taller boy too, found the boy's spot and began to suck on the milky white skin until it burned red. He had always tried to be careful, knowing that Ollie bruised easier than he did. But, little did he know that Oliver wanted to wear the mark with pride. After a few minutes of getting lost in the boy's sweat dripped flesh, he saw his handiwork and bit down on his own plump lips, pleased with the results. \n\nThe boys had been going at it for nearly twenty minutes, rustling all of the sheets away from their bodies until only their naked frames were left atop the king sized mattress. Over six feet of bed surrounding them, yet the two boys occupied the space of a singular person, with Oliver lying on top of his taller love, pounding into his hole. After having sex so often, the boys were experts at knowing when the other was close. Ollie could feel the curling of Matt's toes from even behind his back while Matt could tell when Ollie's moans turned into panting. \n\nBut before they could do anything about it, the two boys came undone like a slightly punctured helium balloon, slowly falling from the sky. Matt came first, shooting volleys of cum up towards his scruffy chin. The rest of his load fell in the crevices between his chest and abs, like a runway down towards his softening cock. The boy's explosion always left Oliver unable to hold off any longer. He could feel Matt's hole tighten against his cock, coaxing out his cum just as Matt cried out his name every time. He leaned down to taste the boys clawingly sweet lips as he flooded his hole with cum. He had a habit of holding Matt close every time he emptied into him. A habit that Matt wished the boy would never break. \n\nAnd so they stayed like that, still intertwined and dripping in sweat and panting every obscenity there was until all that remained were steady breaths and warm skin. Half an hour into their weekend getaway and they already made love as intense and as passionate as ever. San Francisco was right outside their door, opening herself up to be explored. But as Ollie planted a few more soft kisses against Matt's swollen lips, he knew that the city would have to wait. Matty was all he needed right now."
    ],
    "authorname": "thealphamale",
    "tags": [
        "gay",
        "romance",
        "erotica",
        "bareback sex",
        "cum",
        "teen",
        "muscle",
        "rimming",
        "asian",
        "love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/back-to-you-ch-09"
}