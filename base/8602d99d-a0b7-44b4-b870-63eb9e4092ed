{
    "title": "The Cursed Island",
    "pages": [
        "I looked around the bus feeling a little awkward. I knew most of the people, but there had been a few last minute additions. I had gone to school with many of them for years until we had graduated last year.\n\nWe were supposed to move on to college, but we were what was called 'late bloomers'. We went to a school for the supernatural, to help teens come into their powers. And guide them into developing them and using them.\n\nThe problem was, we never came into ours.\n\nSo, it was 'summer camp' for us.\n\nWhen I say summer camp, it's not cabins and swimming.\n\nIt's an old, abandoned island off the coast of Great Britain that the locals say is haunted. We knew better. It housed an old mystical mound infused with magic, covered by a cairne and a leyline circling the entire island. There was a huge, old Victorian house that couldn't be seen by flying over it, only if you stood directly in front of it.\n\nAt least that was what we had been told. \n\nI looked around again, a little in shock over who was with me on the bus.\n\nIt was considered bad manners to talk about powers and ability level and what sort of supernatural you were, though most people ignored that and talked about it. Some didn't and they were usually from the old families where tradition was ingrained. Some didn't because they were like me and they didn't know. It was never a widely known thing, who hadn't shown yet, no one talked about it or let others know.\n\nIt was... humiliating.\n\nThe Summer Camp was to help force the 'bloom'. \n\nI recognized many of the faces, though most were new to me. The school was fairly segregated. There were the old families, the wealthy, the middle class, and then me. The poor people who had suddenly one day had someone at our door who said we had a scholarship and attendance was not optional. We HAD to go. My family were not supernaturals and none in their blood so far as it was known, so telling them about the school and what I was was a hard no. Nulls could not know unless it ran in their bloodline and they already knew.\n\nI peeked back again at How. Howard Grant IV was not only old blood, but also rich. Everyone knew him, he played football and basketball and he was the face of Grimm High the last three years. He was, in a word, beautiful. Perfect hair, stunning smile, sculpted body and the face of a god. \n\nHe also knew it. He was easy to look at though.\n\nWhat shocked everyone to their toes, though, was when he stepped on the bus.\n\nHow Grant was a late bloomer.\n\nHe sat in the back with the other old bloods and rich students.\n\nI sat closer to the front, near Mrs Ericson, the teacher who was the expert on the island. The others would meet us there on Monday.\n\nThe four students from this country had shown up at the airport to board the bus with all of us after we landed. Three sat huddled together in one seat, whispering and looking back at everyone. The two girls stared at How.\n\nThe other boy sat directly behind Mrs Ericson, hunched down in his seat, a scowl on his face as he glared out the window. He looked angry and the way he dressed made me think he was poor too. I plucked at my faded dress. \n\nMy mom came from a strictly religious family. Even though she had left it behind and married my father, she still had odd notions on how a girl should dress and act. That meant dresses for me, no make-up and no cutting or styling my hair.\n\nIt also made me a sort of freak at the school where everyone else wore the latest styles and looked like they were from this century. \n\nI was teased for years, everyone calling me Laura Ingalls Wilder and prairie girl. After a couple years, it was shortened to just Laura. Everyone called me Laura, even the teachers.\n\nMy name was Mia. \n\nI sighed and looked out my own window at the strange houses and the beautiful countryside.\n\nMy seat moved as someone sat next to me. \"Hey Laura!\"\n\nI turned and looked at Angelique Beaumont. \"Hi Angel?\"\n\n\"Hey. Soooo, you should let me do your hair and make-up!\"\n\n\"My mom doesn't...\"\n\n\"You won't be seeing your mom for MONTHS! Cut loose a little! You can at least try it!\"\n\nI hesitated. Was this a cruel joke? Was she going to make me look like a clown? I shook my head and looked back out the window.\n\n\"Pleeeeease! Look at you! You could be kind of pretty with just a little help! Less like the girl out of The Ring that climbs out of the well.\"\n\nThat stung.\n\n\"Are you making fun of me? Going to make me look like a drag queen or something?\"\n\n\"No! No, of course not! I mean, I know we were never friends and I was never nice to you... but I was never mean either? I'm not a mean person. There's so few of us girls on this trip, I thought maybe we could be friends?\"\n\nI looked at her and she looked sincere. I sat up and turned to her, crossing my legs in the seat. She smiled and clapped her hands. \n\n\"Let me get my stuff!\"\n\nWhen she came back, Hannah Ellinger and Missy Daniels were with her. Hannah had always been indifferent, but Missy had made a lot of fun of me when we were younger. Now, they both just looked excited as they leaned over the seat behind me to watch.\n\n\"You should let me trim your hair!\" Hannah said as Angel began going through her giant make-up tote.\"\n\n\"I'm not allowed to cut my hair.\"\n\n\"Girl, you are over eighteen! You can do whatever you want! You are an adult! Just a trim to get rid of those split ends! And then I'll fix it for you!\"\n\n\"I have some yoga pants I brought with just to sleep in because they are too tight and small to wear normally, but they would fit you fine! Not tight at all, maybe a little loose, but tight enough to stay on!\"\n\n\"And they would look cute with this sweater I brought! It's snug on me to show off my tits, but it would be oversized on you and it would be adorable!\"\n\n\"Oh my gosh! This is going to be fun!\" Angel said gleefully. \"This hour will be gone in no time!\"\n\nI sat back and let them cut my hair, do my makeup and put me in clothes that I never imagined wearing. Angel and Hannah both fixed my hair while Missy painted my nails. \n\n\"We don't have any shoes that would fit you, but your little black ballet flats look fine anyway,\" Angel said while she twisted and tugged on my hair. \"I wish we had a flat iron.\"\n\n\"Once we get there, we can use product and do it right,\" Hannah agreed.\n\n\"I can't even believe how different you look, Laura! You are adorable!\" Angel smiled.\n\n\"She really is!\" Missy agreed, blowing on my nails. \n\n\"I bet Jeremy will fall all over himself when he sees you!\" Hannah grinned.\n\n\"Jeremy?\" I asked. I didn't know who that was.\n\n\"Jeremy Gilbraith? One of How's best friends? You know who How is, right?\"\n\n\"Yeah?\"\n\nMissy giggled. \"I bet she never took her eyes off How long enough to see who he hung around.\"\n\nI blushed.\n\n\"He's easy to look at,\" Angel agreed. \"But girl, he's a user. Don't let him trip you into his bed. Anyway, Jeremy has mentioned more than once that he thought you were kind of cute and he wondered what you would look like dressed normal.\"\n\n\"He did?\" I asked, confused. I lifted up and peeked between Hannah and Missy. \"Which one is he?\"\n\n\"Brown hair, tall, skinny.\"\n\nI looked at the boy sitting in the back, across the isle from How. He was very tall, taller than How, and very skinny. I had seen him, he played basketball with How and hung out with him. I just hadn't known his name until now. He was... I wasn't sure. He looked like a model with striking features, but the sort of unusual features that you weren't sure if they were attractive or not. His cheekbones were high and sharp and his lips very full, his mouth exaggeratingly large. His eyes were normal and he looked like he loved to smile. He wasn't smiling now as he looked out the windows like he was deep in thought.\n\nI supposed he was. We all were. Everyone on this bus was just outed to everyone else on the bus. It didn't matter that we were all in the same boat. Everyone here knew I was a late bloomer and I was ashamed. They were all thinking exactly the same thing.  \n\n\"Everyone take your seats! We are almost to the docks!\" Mrs Ericson yelled back from her front seat.\n\nThe girls sat down where they were and Angel began putting things away.\n\nWe had to take a boat to another island and from there we had to be flown over and up to the island we were staying at. She had told us it was a karst island, though the locals called it cursed island instead. I'd had to look up what a karst was, but basically it was an island that jutted way up high and there was no way to the top unless you flew.\n\nWhen Angel sat back, I saw the lone boy behind Mrs Ericson looking at me, looking me over as he leaned his cheek on his fist. He saw me looking at him watching me, but he didn't look away, he just looked me over again and looked back at my face, making eye contact again.\n\nI looked away, turning to my window.\n\nAs soon as we got there, Angel stood, moved me in front of her, then said to just wait and let everyone else get off first. Missy and Hanna waited too. \n\nThere were several curious glances at me and my heart did a huge leap when How looked down at me as he passed. He looked... interested and confused, like he wondered who I was. \n\nJeremy paused behind him, looking me over with his lips parted. \"Hey,\" he offered.\n\n\"Hi,\" I shrugged.\n\nThe lone boy in the seat behind Mrs Ericson snorted.\n\nThe bus cleared and we got off, the girls giggling as we did. As soon as we did, the wind whipped our hair and our clothes and we had to run to the boat.\n\n\"Oh! Your hair!\" Angel lamented.\n\n\"Messy bun it is!\" Missy smiled, piling my hair on top of my head and wrapping a hair tie around it. \"Cute!\"\n\nJeremy moved over next to Missy on the boat, How following. \n\nJeremy looked like he was trying to get the courage to speak, but How spoke first. \"Hey! You one of the new girls from here?\"\n\nI shook my head, too afraid to speak. Hannah giggled and Missy nudged her.\n\n\"Hey Laura,\" Jeremy said softly.\n\n\"Laura?!?\" How asked, stunned.\n\nI felt anger shoot up. \"My fucking name is Mia,\" I spat at him. \"Laura is the name you all teased me with for years and you never bothered to ask my real name.\"\n\n\"Shit!\" Angel breathed. \"I really thought it was your real name! You never said any different!\"\n\nI shrugged, looking down. \"It's not a huge deal, really, it just... kinda sucks.\"\n\n\"Understandable,\" Jeremy said quickly. \"You wanna come sit with us?\"\n\nI looked down at my old shoes, feeling... off. They had never wanted to speak to me before. Not until I looked different. \"I wanted to stay up here and watch,\" I lied, turning to look out the front window to the island in the distance.\n\nThey all left, but Angel stayed and leaned on the rail next to me, watching out the window. \"Sorry. I really didn't know.\"\n\n\"I'm not upset. Not at you. You came and talked to me and were nice when I was 'Laura'. They didn't notice me until after. You know?\"\n\n\"I get it. Hey, wanna bunk up on the island?\"\n\n\"Sure,\" I smiled, my heart warming towards her a little more. I wasn't just a project to pass the time.\n\nShe left to go sit with the others and I went up on tiptoe to try and see further out.\n\n\"You didn't need a makeover.\"\n\nI turned to the voice and looked up at the lone angry boy who had looked at me. \"What?\"\n\n\"You didn't need a makeover. You don't need to be a clone like them.\"\n\n\"You're American?\"\n\n\"Yeah.\"\n\n\"We were told those who were added at the bus would be from England.\"\n\n\"I was added late to the roster and had to come on a different flight. Mine landed sooner, it was the only flight I could get.\"\n\n\"I don't remember you from Grimms?\"\n\n\"Because I never went.\"\n\n\"Oh...\"\n\n\"You didn't need the makeover,\" he said again.\n\n\"Umm... Oh. What's your name?\"\n\n\"Sam,\" he answered, walking away.\n\nI watched him, confused. I wasn't sure what to make of him.\n\nI turned back to the island and watched it get bigger and bigger until we finally slowed and docked.\n\nIt was another short bus ride across the island to a place that had a helicopter parked on a pad. I frowned. It was awful small? How would we all fit?\n\nI discovered quickly that we wouldn't. We had to be brought four at a time. \n\nMrs. Ericson chose me, Sam and Elliot to go with her. Elliot was a mousy boy who had been teased even more than I had been. He wasn't just poor, he was short and chubby and cripplingly shy as well. He was constantly sent to school with sweat suits that were too small for him, showing a swatch of his belly and back all the way around, and half his shins and wrists. I felt bad for him, but he was a little oblivious to all of it. He ignored taunts and hello's alike, staring into his book always.\n\nFlying in the helicopter was a little bit terrifying, but I got over it quickly when the karst came into view. It was larger than I had expected from the pictures I had seen online, higher too. \n\nHe put us at the edge of the island and we got out. Mrs Ericson led us to a little opening in the trees and leaning in to yell. \"Wait here! Do not go roaming about and do NOT try to find the house on your own! There is dangerous magic here! And you!\" she spat, looking at Sam, \"You keep your mouth shut!\"\n\nWith that, she turned and hurried back to the helicopter, climbing in quickly before it took off.\n\nOnce the deafening noise died down, I glanced at Sam who looked pissed as he glared at the ground. Elliot was already reading a book.\n\n\"What was that all about?\" I asked Sam.\n\n\"I obviously can't tell you,\" he said acidly, turning away and stepping to the edge of the woods to lok in.\n\nI looked at Elliot, \"What are you reading, Elliot?\" I asked. I tried to be nice and talk to him every time I saw him, but he had never answered me. Today was no different.\n\nI sighed and paced, watching the direction the helicopter went. Finally, I went to look into the woods too, leaving my bag sitting. \n\n\"I'm Mia.\"\n\n\"I know.\"\n\n\"Oh. I guess you heard me get mad?\"\n\n\"I did. I knew before that. There was a roster. No one named Laura was on it. We all got it, remember?\"\n\n\"Yeah... I guess. So how did you know it was me?\"\n\n\"Looked all of you up on the plane.\"\n\n\"I am online?\"\n\n\"Only your senior photo from the school on the schools website.\"\n\n\"Where are you from?\"\n\n\"Montana,\" he shrugged.\n\nI looked at him again, trying to figure him out. He had full lips, but not like Jeremy. He was cuteish, but not hot like How. He wasn't especially tall or even very remarkable. Mostly he just seemed angry.\n\nElliot made a noise and I turned to him. He was peeing himself.\n\n\"Holy fuck,\" Sam whispered.\n\nI ran to Elliot. \"Elliot? What's wrong? Why did you do that? Are you ok? Quick, let's get you changed before the others get here!\" I said, pulling open his bag and finding some clean underwear and pants.\"\n\n\"There's no toilet anywhere!,\" Elliot complained, looking terrified. \"I tried to hold it!\"\n\n\"It's ok! It's fine, we can take care of this and no one will ever know, ok? Come on. Sam, help him into the trees to change real quick!\"\n\nSam didn't argue or complain, he just led Elliot to the trees and stood blocking the boy while he changed. He led him back, shirtless, his shirt wrapped around the wet pants.\n\n\"I have to wear the red shirt with the red pants!\" Elliot was saying.\n\n\"We'll find the red shirt,\" Sam said softly, calmly. \"Look, Mia has it right there. Put those wet clothes in the side pocked there and we can wash them straight away. Pull your shirt on. See? Matching and dry and cozy, right? And hey. We're in the woods! Don't you know the rules of the woods?\"\n\n\"Rules?\" Elliot asked, confused.\n\n\"Yeah. You need to piss, you find a tree!\" he smiled. \"Look.\" He walked to a tree and turned away, then undid his pants to pee against the tree.\n\nI spun away horrified.\n\n\"Outside?\" Elliot asked, also shocked.\n\n\"Outside! No one cares here! No bathrooms, no problem! Water a tree!\"\n\n\"Water a tree,\" Elliot nodded uncertainly, then snatched up his book and started reading again.\n\nSam went back to the corner tree and leaned on it, watching the sky where the helicopter was coming in the distance. I watched him, still uncertain about him. He had been nice to Elliot, if a bit uncouth. Would he tell? Make fun of him to get in good with the others and make friends? I didn't think he would.\n\nThe helicopter landed and I went to the trees with my hands over my ears to hide from the wind and noise. The two girls and boy from England got off, along with another boy I didn't really know.\n\nI watched them all talking excitedly as they joined us in the little tree alcove next to the path. Sam went back to watching the woods in the back and Elliot read his book like nothing had ever happened.\n\nIt took a couple of hours to bring everyone over four at a time, but it went by fast as everyone talked and laughed. The girls all joined me and we huddled close as the wind picked up off the ocean, evening falling. Even the English girls joined us, along with the boy and the other girls giggled over his accent and whispered over how adorable he was. I didn't think he was very cute. He reminded me of Alisha Hannover. A rich old blood who lorded over the school and looked down her nose at everyone. She was sort of pretty, but had a nose like a hawk that marred her perfect face. Her parents wouldn't let her get a nose job because it was a Hannover hallmark. She was vicious to everyone else, scathing and horrible, pointing out the most minute of faults as if putting everyone else down would lessen her own imperfection. She had dated How their whole Junior year before he dumped her and started seeing all kinds of girls, none for very long. Even I knew he was a playboy.\n\nHe seemed like her. Cute, but with big ears that he tried to hide with his hairstyle. He was already making remarks about the others and when he landed on Elliot and laughed, I told him to shut his bully mouth.\n\nHe looked at me in shock, then laughed. \"You are adorable, little one, what's your name?\"\n\n\"Leave Elliot alone, he never hurt anyone. He's had enough bullying in his life. Grow up. Your dumbo ears aren't his fault!\"\n\nThere were gasps and silence as he drew up, his face turning pink, then everyone who heard started laughing. His face went still and his eyes turned evil. \"For that, you will pay,\" he hissed. \n\nHe walked away and Hannah fell against me, laughing. \"Oh my god, that was amazing! I never knew you had that in you!\"\n\n\"He shouldn't have picked on Elliot.\"\n\n\"Is he family? Your friend?\"\n\n\"Neither. But he gets bullied even worse that I do. I know how much it hurts. I won't stand by and let someone do it in my hearing.\"\n\n\"That's really awesome of you,\" Jeremy said from behind me. \n\nI spun, looking up at him. I hadn't known they were so close. \n\n\"It's nice to see someone sticking up for others, usually they just fall in and bully too. I was bullied as a kid until I got really good at basketball. Even then, I was called Lurch until just a couple years ago,\" he said, still smiling. \n\nI turned and looked down. \"I didn't do it for anyone's approval,\" I said quickly, blushing. \"Just to save him some pain.\"\n\n\"Still, it's cool,\" he said softly. \n\n\"Mia,\" How called.\n\nI turned, but didn't look up at him. \n\n\"Who are you bunking with?\"\n\n\"Me!\" Angel called happily. \"Me and Hannah and Missy!\"\n\n\"So who will we be bunking with?\" the English girls asked.\n\nAngel shrugged. \"It's four per room, but maybe they will let us have the biggest room and we can move a bunkbed in? Since there are six of us?\"\n\n\"More likely they will split us up 3 per room,\" Missy said glumly. \"You know how Ericson is. Total funkiller.\"\n\nWe all continued talking and I was acutely aware of how close behind me Jeremy was and How right next to him, along with a couple other guys who they were sort of friends with.\n\nI peeked over and Sam was still at the back of the clearing at the treeline, but now he was turned and watching our group with a sour expression.",
        "When the last group came, along with Mrs Ericson, it was getting dark. She handed out flashlights to a few students and started us on the trail. Angel hooked my arm through hers and we walked four abreast, but I pulled back while they were talking and fell to the back where Sam was walking alone with his backpack over his shoulder.\n\n\"Hey,\" I offered.\n\n\"You are fitting in quickly,\" he said almost angrily.\n\n\"Yeah. It's... odd. I don't think they would be talking to me if there were more girls with us.\"\n\n\"Ya think?\" he asked sourly.\n\n\"Why are you so mad that they are being nice?\"\n\n\"I'm not. I don't know why you think you have to be like them, though.\"\n\n\"I'm not like them. Just because I let them do a makeover doesn't mean I have changed who I am.\"\n\n\"It's the first step on the way. And the second is making fun of other people like they do. Like you did.\"\n\n\"I stopped him from making fun of Elliot.\"\n\n\"By making fun of him.\"\n\nThat stung. I had. I had called him Dumbo and made fun of him.\n\nI hurried away from Sam, a little upset that he was being so mean, but also upset that he was right. \n\nI caught up with the English boy who was talking to one of the girls he had come with. \"Hey,\" I said. \"Can I talk to you a second? Please?\"\n\n\"What?' he snapped.\n\n\"I wanted to apologize. That... wasn't me. I've been teased my whole life and Elliot too. It hurts. When you started to tease him, I lashed out and became what I hate. I'm sorry I did that. Truly.\"\n\n\"Sure,\" he snapped. \"Now that you are on my shite list and you know I will bury you. You sneak here and whisper sorry, saving face with your friends. Fuck off, twat.\"\n\nI sighed and caught up with Angel and the others, walking with my head down. \n\nWe finally reached the house, but it was dark and we couldn't really see it. There was also no electricity. \n\n\"It's summer, why is it so cold here?\" Missy asked, shivering.\n\n\"Weather is different here,\" Mrs Ericson announced. \"I told you to pack warm clothes. Room assignments are as follows.\"\n\n\"Mrs Ericson?\" Hannah asked quickly. \"We girls talked. We wanted to all bunk together? Maybe the biggest room with three bunkbeds?\"\n\n\"No. Three per room for you girls, your rooms are already set up. Now step up when I call your group, you get one flashlight per room. The rooms are numbered.\"\n\nWe waited and my heart fell as I was put in with the two English girls who were sneering at me. We didn't have bunks, we had three beds, one on each wall without the door. They immediately claimed the beds on the walls, leaving me the one in front of the window. The coldest one. I threw my bag on the end and climbed in, clothes and all. The bed was old, a feather bed with a heavy quilt and it smelled old. Not bad, just... ancient. \n\nI also realized I felt a sort of buzz of excitement as I lay there. Something I couldn't name, like a current of electricity, very faint, running through my veins. It gave me crazy dreams, most I couldn't remember, I just knew they were vivid and strange. \n\nI woke up early, the light in my eyes as I sat up and looked out the window. The first thing I saw was a large mound in the ground in the front yard, about a hundred feet back. There was a stone doorway in it and a large slab laying on the ground. It felt... weird looking at it. I wanted to see it more closely. \n\nI got up and hurried to the shower, glad there was at least plumbing in this place. I didn't mind the cold water, I was used to it. I was dressed and downstairs before all of the other kids, but Mrs Ericson was in the kitchen, looking at a folder and drinking coffee.\n\n\"Mornin,\" I offered from the door, not wanting to startle her. \n\n\"Early riser, I see,\" she said in her clipped and terse way. \n\n\"Yes ma'am. Is... is that a wood stove?\"\n\n\"It is.\"\n\n\"Is that how you made coffee?\"\n\n\"Yes. In that press there.\"\n\n\"Can you show me, please?\" I asked, curious about how it worked.\n\nShe showed me silently.\n\nI was used to her, I knew her better than most. She was stern, and quiet. She was the proverbial librarian who liked it quiet and didn't suffer fools. I had worked in her library for the last three years and found she wasn't angry, just... different. She liked to teach, but rarely smiled. She wasn't a people person, and she expected people to listen the first time and understand it right away. I didn't have a problem with that. I understood her.\n\nI learned to make coffee in a press and use the wood stove and smiled as I sat down with the coffee across from her on the island. We sat in silence like we always did as she read and I looked out the window to the backyard and the woods so far back. \n\nThe others began slowly trickling down and scowled at the boxes of poptarts on the table and bottles of water. They still sat down and ate them. I watched from the kitchen until almost everyone was down, but it was the English boy I was waiting for. When he sat down, I went out and stood up on a chair. \n\n\"I said something yesterday that I regret. I made fun of that young man there and I shouldn't have. No matter what he said about someone else, it was wrong of me to make fun of him in any way and I am truly sorry. I regret it, becoming what I hate. Someone who puts someone else down, making them feel bad. Not one of us are flawless and instead of pointing out our imperfections, we should be building each other up and helping with insecurities. No one should ever be made to feel bad about themselves. Sir, I am sorry, I hope you can forgive me. I also hope that you can find it in your heart to be more kind to others. People like me and Elliot.\"\n\nI stepped down then and people looked at each other in confusion as they tried to figure out what just happened. \n\n\"Whatever,\" the boy shrugged at me. \"Forget it.\"\n\nI nodded, then went out to the front porch to look at the cairn. I could hear the hum of people talking, but I didn't want to hear what they were saying. Especially now that I was back in a dress and had washed the make-up off. I had put my hair back up. I liked not having it in my face and not in my way. Still. I knew it would be back to jokes and 'Laura'. \n\nThe front door opened and Sam leaned on the doorjamb. \"Not a bad start back. The old lady wants to talk to everyone.\"\n\nI stood, confused and went back inside where Mrs Ericson was talking to everyone as they crowded into the living room. I leaned on the wall to listen, trying not to look around and see who was laughing and pointing. \n\n\"You will not go into the woods unless you are being guided by one of your teachers, you will not take the trail back to the landing site, there is nothing back that way. Listen to everything your teachers tell you, they specialize in bringing out stubborn gifts. They also specialize in developing baby powers,\" she said, glancing quickly at Sam who glared at her. \"Stay away from the cairn, don't climb on it or try to remove the stone. You do not want to disturb the things within.\"\n\nI frowned, confused. \"Mrs Ericson?\" I interrupted.\n\n\"Yes?\" she asked.\n\n\"The cave in the side? Is it supposed to be covered?\"\n\nShe cocked her head, looking confused herself. \"Who said anything about a cave?\"\n\n\"The cave, on the side of it? You can see it. And the slab laying in front of it.\"\n\nShe looked horrified, then ran out the front door. \n\nI followed and so did everyone else. She was stopped halfway to the cairn and we all stopped behind her, looking at the cave.\n\n\"Stay back! All of you, stay back! Go back! That... shouldn't be open!\"\n\n\"Did something escape?\" Angel asked, terrified.\n\n\"No. No, they can't escape, even with the door open, but if you are too close, they can pull you in. Back to the porch! They can't get out. There would have to be a Cailleach here and they no longer exist. Still, stay back. Do not get within ten feet. They can't reach into the world, but if you are close enough, they will snatch you in. You will be lost to us. I need to get in touch with the council, find out what happened. You, boy, get me my sat phone! It's in the room downstairs that is open!\"\n\nJeremy ran inside and came out with a black bag as we all crowded onto the porch. \n\nSam moved in close to me. \"This is fucked up. They shouldn't have us here.\"\n\n\"She said we were fine, they couldn't get us.\"\n\n\"And will she tell you what 'they' are? What they have down there supercharging this island? She didn't and she won't. None of them will.\"\n\n\"What did she mean by baby powers?\" I asked him.\n\nHe snorted. \"Misnomer. They need to get us out of here.\"\n\nMrs Ericson made an angry noise. \"I had this fully charged!\" she said incredulously.\n\nSam snorted again. \"She is in so far over her fucking head.\"\n\nI looked at him again, wondering if he knew or he was just trying to be a cool know it all. \n\n\"What do we do?\" How asked Mrs Ericson. \"Go hang a flag at the landing sight or something?\"\n\n\"The teachers will be arriving on Monday,\" she said decisively. \"In the meantime, stay away from it. You four boys, you go cut some wood. Right over there. You two, go fill the generator with the gas stored outside of it so we can get some power. You know how to start a generator?\"\n\nLuke nodded as him and Garrett took off to the back.\n\nI stood hugging myself and staring at the open cairn. What WAS in there? Would she tell me if I asked her?\n\nSam nudged me. \"Did you hear her?\"\n\n\"What?\" I asked, turning to Mrs Ericson.\n\n\"I said go make sure all the lights are turned off in every room so that we aren't wasting gas on the generator.\"\n\nI hurried inside and quickly went through every room, going up to the third story too. There was a door that was locked and I knew from looking out the window that I was under the little tower on the house. A round room surrounded completely by windows. I was curious about it, wondering what was up there. \n\n\"Hey.\"\n\nI turned and looked at Jeremy. \"I thought you were cutting wood?\"\n\n\"Not a lot four people can do. How and Gene are kind of having a contest to see who can split more and Brandon is stacking. Thought I would come see if you needed help.\"\n\n\"Turning off switches?\"\n\nHe smiled and shrugged a shoulder. \"What's that door?\"\n\n\"I think it goes up to the turret.\"\n\n\"A gun?\"\n\n\"No... the round tower. It's also called a turret, but it's different.\"\n\n\"Cool. Is it locked or something?\"\n\n\"Yeah.\"\n\n\"Luke knows how to pick locks. He used to sneak into the dean's room all the time. Want me to get him to open it so we could see what's up there?\"\n\nI shrugged.\n\n\"It would be a great place to be alone, I think,\" he said, moving closer.\n\nI looked up at him again, feeling a little uncomfortable. \n\n\"You ever even been kissed, Mia?\" he asked softly, reaching out like he meant to touch my face.\n\nI dodged away and hurried down the hall and down the stairs. I curled up in an empty chair in the living room, where few other people were sitting and talking. The English boy looked over at me and I looked down quickly.\n\n\"What's your name?\" he asked.\n\n\"Mia.\"\n\n\"Charles. This is Faith,\" he said, motiong to the English girl with the short pink hair, \"and that is Blaire,\" he said, motioning to the beautiful blonde haired girl. \n\n\"Nice to meet you all,\" I said softly. \n\nSam came in and started to walk by the living room to the stairs, then paused and came in instead. He stood against the wall behind me. I shifted, feeling awkward. \n\nJeremy came down and gave me a smoky smile before going outside. \n\nI looked away, looking over at Elliot. \"Hey Elliot, you doing ok?\" I asked him.\n\nHe stared at his book like he hadn't heard me.\n\n\"Let me know if you need anything,\" I told him, wondering if he was listening.\n\nHannah and Missy came in and hesitated as they looked around, then came and sat on the couch next to my chair. \"Hey!\" Missy smiled. \"Sleep ok?\"\n\n\"Yeah, the bed is nice. Comfortable.\"\n\n\"Mrs Ericson was just showing us how to cook on the wood stove, but she stepped away to go look something up she said. Told us she would finish later. This is crazy, huh?\"\n\n\"Yeah. A little scary, a little exciting. Wish I knew more about what was going on. Hey... did you guys feel a little funny last night?\" I asked.\n\n\"Funny like how? Like, uncomfortable because the bed felt wrong?\"\n\n\"No, like... supercharged or something.\"\n\n\"Leyline,\" Sam offered. \"You felt the power.\"\n\nI looked back at him, my eyes a little wide. \"Does that mean I will show soon?\" I asked.\n\nHe shrugged. \"No clue, don't know what you are.\"\n\n\"Do you know what you are?\" Hannah asked, sounding a little derisive since he had sounded like he was talking down to me.\n\nHe looked at her. \"Of course I do.\"\n\nShe blinked and I looked at him again in confusion. \"Then why are you here? And what are you?\"\n\nHe just smiled at the window, a sardonic smile, then turned and walked out the front door.\n\n\"Think he is lying?\" Missy asked as Angelique came in.\n\n\"I don't think he is,\" Faith said. \"When we met at the airport, there was someone there with him, someone from the council it looked like. He was saying a lot to him that he didn't like. Telling him off and speaking angrily. When they came closer, he was still whispering at him, telling him to stay quiet and do as he was told and not make a scene. Just blend in and shut up.\"\n\n\"That's odd... what do you think happened?\" Missy asked.\n\nI turned away, wondering if I should go find him. Talk to him. Let him know I wasn't going to try and make him talk about something he couldn't talk about. \n\nI eased out of my chair and went to grab my sweater before going out to find Sam. It took two walks around the house before I finally spotted him back by the woods in the back of the house. \n\nI walked out to him and he stayed standing with his back to me. I wondered if he heard me walking, if I should say something or just go stand by him and stay quiet. Maybe he was like Mrs Ericson and silence suited him.\n\n\"What do you want, Mia?\" he asked.\n\nMy eyebrows climbed. \"How did you know it was me?\"\n\n\"What do you want?\"\n\n\"Are you alright?\"\n\n\"Fine.\"\n\nI moved up to stand next to him, looking into the woods. \"You like the woods. Do you live in the woods? Back in the states?\"\n\nHe shrugged.\n\n\"Was it nice in Montana?\"\n\n\"If you like the cold.\"\n\n\"So you didn't like it?\"\n\n\"Didn't say that.\"\n\nI closed my mouth and just stood there, looking out silently. I don't know how long we stood there quietly, but it was pleasant and a little calming to watch the birds and squirrels playing in the trees. The wind making the tops of the trees sway. Even as cold as it was, it was just nice. I could have stood there all day.\n\n\"Hey!\" Angel called. \"I've been looking for you! What are you two looking at?\"\n\n\"Nothing,\" I answered, turning to her.\n\n\"Dinner is ready.\"\n\nI nodded and followed her in, Sam following me.\n\nI was quiet as I sat at the table and listened to everyone talking. Mrs Ericson wasn't with us. Missy said she was still in her room, pouring through books and her tablet.\n\nAfter, we all moved to the living room, whispering what we thought the deal with the cairn was and what had happened.\n\n\"Hey,\" Faith said, waving everyone quiet. \"Who really cares? We'll find out soon enough. I say instead of trying to figure it out we should have fun before the teachers show up. So which will it be? Seven minutes in heaven or spin the bottle?\" she asked grinning.\n\nThere was silence for a moment, then everyone grinned and started moving into a circle. \"Spin the bottle!\" How called, grabbing a water bottle and putting it in the middle of the circle.\n\nI leaned over to Angel. \"What's spin the bottle?\" I asked.\n\nShe grinned. \"It's fun! You spin and whoever it lands on, you kiss them!\"\n\nI felt panic well up. \"I've never kissed anyone before!\" I whispered fearfully.\n\nShe smiled. \"You are about to! You will love this!\"\n\nI sat there, feeling terrified as they started spinning the water bottle and laughing and kissing each other. Complete strangers in some cases. \n\nMy turn came and I looked down at the bottle a moment, swallowing hard, then jumped up and fled the room, going out the front door into the dark yard. I turned away from the house and went over to where I knew the woodpile was, then sat behind it once I found it. I tried to slow my breathing, but I was still stunned. I couldn't imagine kissing so casually. I wasn't raised that way.\n\nSomeone sat next to me and I tensed up, but I knew from their silence that it was Sam. He said nothing, just sat next to me quietly until I calmed down.\n\nAfter an eternity, he finally spoke. \"It's getting past bedtime, they are about to come looking for you. We should probably go in and go to bed.\"\n\nI nodded, realized he couldn't see me and spoke. \"Ok.\"\n\nI got up and he put a hand on my shoulder, leading me to the house as if he could see in the dark. Maybe he could. I had no idea what he was. He opened the front door and I went in, but he didn't. I knew he was going to wait so it wouldn't look like we had been out alone together.\n\n\"Mia!\" Angel cried. \n\n\"We were about to come looking,\" Jeremy said, moving closer and reaching a hand out. His hand was on my face before I could react. \"You are freezing!\" he said, pulling me into an embrace as if to warm me.\n\nI ducked down out of his arms and stumbled back, then turned and hurried up the stairs. I dove into my bed and hunkered down. Why was he so pushy? He didn't even try and talk and know me, just kept touching and saying things he shouldn't. Even if he was cute in an odd way, that wasn't enough. Didn't he know that? I didn't like that. How could you know if you wanted to kiss someone if you didn't even know them?\n\nFaith and Blaire came in and turned on the light. They sat talking quietly and stayed up painting their nails and giggling over how hot How was and how he had flirted with Blaire.\n\nI got up and mumbled about the bathroom and slipped out. I slipped up the stairs and to the end of the hall to the locked door. I tried it again and sighed, wishing I could see what was up there. I turned it again, turning as hard as I could in frustration and something snapped. It swung open and I stared at it in shock. I looked up the stairs and it seemed to be light up there. I stepped in and pulled the door shut and slipped up slowly. \n\nThe light was from the moon shining in all of the windows. The room was surrounded by window seats all around the perimeter and some boxes stacked in the middle. I went to a window seat and sat down, looking out at the moonlit night. It was beautiful, the way the moon turned the night a misty blue color. I leaned against the window sill separating the windows and sighed. It was a lovely, dreamy spot. \n\n\"I thought that door was locked.\"\n\nI jumped and turned. I couldn't see Sam, just his outline against the windows behind him. \"Just stuck,\" I answered, turning back to the window.\n\nHe went and sat on the cushion next to mine and looked out. I could see his face now as the moon lit it up. He looked sad. I looked back out and sighed again as I curled up. \n\nI jerked hard and then squinted at the bright light. It was morning? I looked around and down at Sam's jacket laying over me. He was gone. I got up and looked out. \n\nIt was still early morning. I slipped out and made sure the door was shut, trying to turn it back as hard as I could, hoping to make it stick again so no one else could get up there. I wanted it to be my space, not some place where everyone went to 'be alone'. \n\nI slipped into my room and the girls were still asleep. I grabbed clothes and took a shower, then slipped down the stairs. I hung Sam's jacket on one of the hooks by the door and went to the kitchen to make coffee. \n\nTo my horror, it was Jeremy who came down first. \"Hey,\" he smiled. \"Have any more of that?\"\n\n\"It makes one cup at a time,\" I said, motioning to the press. \n\n\"Maybe I can have a sip of yours,\" he said with another smile, moving closer and taking the cup. He took a drink, then turned it and put the cup to my lips where he had put his lips and tipped it up. ",
        "I reached up with shaking hands and took the cup back and swallowed hard. \n\n\"You always up this early?\" he asked, leaning closer on the counter.\n\n\"Yeah.\"\n\n\"Me too. Basketball practice before school, weights after. Ever been to a game?\"\n\n\"Had to. I lived in the dorms, it was required to attend all home games.\"\n\n\"So you saw me play?\"\n\nI shrugged. \"Probably. I usually did homework or read in the bleachers. I watched sometimes when everyone got all worked up like something exciting was happening.\"\n\n\"Not a sports fan?\"\n\n\"Not so much.\"\n\n\"That's ok. Basketball isn't all I am good at,\" he smirked, leaning close again. \"So how come you took off last night? I was hoping to get at least one kiss.\"\n\n\"I don't kiss casually. I would never kiss a stranger.\"\n\nHe shrugged a single shoulder. \"I'm not a stranger, you know who I am.\"\n\n\"Knowing who you are and knowing you aren't the same thing,\" I said, backing up. \n\nHe followed until I was in the corner between the counter and island and him. \"So let's get to know each other. Take a walk with me. We can... talk.\"\n\nI shook my head, my heart hammering in my chest. \"I don't think so,\" I said softly, looking down, then turning my back to him.\n\nHe moved closer, pressing against me from behind and putting his hands on my shoulders. \"You know... I have had a thing for you for a while. Way before I saw you all fixed up. Don't think I am just interested now because you are smoking hot. I always saw it in you.\"\n\nHis hands slid up my shoulders to my neck and into my hair. He pulled my head back, turning it so he could lean over me. \n\nHis lips were an inch from mine and I shook my head again. \"I don't like this!\" I whispered, tears coming to my eyes.\n\n\"I think you are just a little scared. I think you will like it once it happens. Love it even. I really want to kiss you, Mia.\"\n\n\"Please, I don't like this. Let me go? I want to go.\"\n\n\"It's ok, Mia. I know what I am doing, you will love it, I promise,\" he whispered, moving closer and holding my face more tightly as I tried to pull away.\n\n\"Let her go,\" Charles said loudly.\n\nJeremy let me go and stepped back quickly. \n\n\"She said no.\"\n\n\"Fuck off, man. You misunderstood what was going on.\"\n\nI ducked away and hurried out to the hall and up to my room. I stayed in bed until the other girls were finally up, then went down with them.\n\nI paused as I passed Charles. \"Thanks,\" I whispered.\n\n\"Whatever. That bloke is a twat, him and his friend. Don't let him get you alone again.\"\n\nI nodded and went to eat breakfast.\n\nAs soon as I finished, I hurried out and walked around the house again, walking slowly as I thought. I found myself pausing near the cairn. Not too close, but enough to see slightly into the cave. It wasn't a cave, not really, I could see a wall, like it was just a cubby. I stepped closer, confused, then realized the cave went down, like stairs. \n\n\"You probably shouldn't be that close,\" Sam called.\n\n\"It's dormant right now,\" I answered, but backed away.\n\n\"How could you possibly know that?\" he asked.\n\nI blinked and shook my head. \"I don't... I guess. I was just guessing. Seems reasonable it is only really active at night. Right?\"\n\nHe just looked at me and walked with me as I circled closer to the woods. I noticed he was wearing his jacket. \n\n\"Thanks,\" I offered, motioning to his jacket.\n\n\"Figured you needed it more than me just then. You really sleep up there all night?\"\n\nI nodded. \"I like it up there.\"\n\n\"It's locked again today,\" he said, looking at me again.\n\n\"I turned it till it was stuck again,\" I shrugged.\n\nHe said nothing, just glanced at me with a wry look. \n\nAs I walked, I spied a fallen tree not too far into the woods and turned, cutting in and going to it. I sat on it, then laid back, looking up at the sky. He laid down on the other side so that our heads were almost touching and we had the same view.\n\n\"I never knew I might like the woods so much,\" I whispered\n\n\"It's better out here. Away from people.\"\n\nI said nothing as I pondered that. He was kind of right. I didn't really like people very much either. \n\n\"Did Jeremy corner you this morning?\" he asked suddenly.\n\n\"What? Did... Charles tell you?\" I asked, confused.\n\n\"So he did. He kiss you?\"\n\n\"No... he was going to. Charles walked in, told him to let me go.\"\n\n\"Charles. I think he respected that you apologized the way you did.\"\n\n\"Maybe. Maybe he was just doing the right thing. Seeing a girl saying no and a guy trying to force it. I would hope most people would step in.\"\n\n\"How would have turned around and walked away, letting him do what he wanted. A few of the others here would have. I think Charles did because he doesn't see the social hierarchy among your people. How is an Alpha, Jeremy is a Beta. The rest are more Gamma. Following the leaders, doing what they do. Charles doesn't see that dynamic because he thinks he is an Alpha. Really he is just an insecure asshole.\"\n\n\"I'm not really sure what all that means. What are you?\"\n\n\"Omega.\"\n\n\"What does that mean?\"\n\nHe moved and I was pretty sure he shrugged.\n\nWe went quiet for a long time as I listened to the birds and the whisper of the wind through the trees.\n\nHe finally spoke again. \"Baby powers,\" he said softly. \"That's what they call powers like mine. Powers that manifest out of their school and aren't taught by them. My family... my pack, we lived in a blank spot. It kept them from being able to find us. I was raised by my people, people who know a lot more about what we are than your stupid school. They don't hide things either, they teach us everything. They don't control us, limit what we learn and know. I was stupid though. I was hunting and on the trail. I left the blank spot and showed up on their radar. They grabbed me up and brought me here to 'learn the right way' and 'develop my powers properly'.\"\n\n\"You're a werewolf,\" I breathed, surprised.\n\n\"I am.\"\n\n\"What does omega mean.\"\n\n\"Anyway, I don't belong here. I have full control of my powers. What they really want to do is make me act the way they want and put me in their system so they can control me.\"\n\n\"That sucks... thank you for confiding in me. Do you know what's in the cairn?\"\n\n\"Yeah,\" he whispered.\n\nI sensed that he didn't want to talk about it, so I went quiet again, but it was eating at me. He had sounded a little scared. What would a werewolf be afraid of?\n\n\"They are looking for you,\" he finally said, sitting up.\n\n\"You can hear them... and see in the dark... and smell. That's how you knew about Jeremy. You could smell him on me.\"\n\nHe only nodded and stood and I got up reluctantly, heading to the house. He went the opposite way, staying in the woods to circle around.\n\n\"She's here!\" Luke yelled as he came around the side of the house.\n\nJeremy came around the side and hurried towards me. \"Where were you? No one could find you! We were yelling for you.\"\n\n\"I was sitting there by that tree,\" I said breathlessly, circling wide of him. I made a vague gesture at the woods and hurried past him to where more people were. I grabbed Angel's arm and held on to it as I pulled her to the house. \n\n\"What's wrong?\" Angel asked in a whisper.\n\n\"Don't let him be alone with me!\" I asked her. \"He... isn't nice.\"\n\n\"Jeremy? He's harmless. He's cool, he's How's friend.\"\n\n\"I don't like him! He... tried to make me kiss him! I told him to stop and he didn't! Not until Charles told him to let me go.\"\n\n\"It was probably a misunderstanding,\" she smiled, shaking her head. \"You just aren't used to guys flirting with you is all.\"\n\nI went quiet. Sam was right. They would let How and Jeremy do whatever they wanted, none of them would stop them.\n\nWe sat to dinner and after a few minutes, Sam came in. Noone asked him where he had been. No one really cared, he was under everyone's radar. I wondered if that was what Omega meant.\n\nAfter dinner, I went to my room while they all stayed in the living room and grabbed my pillow and blankets. I paused, then made a note that said I was sleeping over with my friends. I went upstairs to my tower and turned the knob until it clicked and opened, then pulled it shut and went up.\n\nIt was still light enough that I could see, so I opened one of the boxes and looked down in confusion at the really old journals and books. I opened one and it was written in a looping cursive and olde english that was hard to make out. I opened another and it was slightly newer, still handwritten and cursive, but easier to understand. They were all like that, old and handwritten and more than half in olde english. \n\nI opened another box and it had several things wrapped in cloth. I unwrapped one and it looked like a quartz sphere and it also felt warm to the touch. It should have been cool, cold even in this weather, but it was warmer than my body temperature. The next was a metal device of some sort, with gears and lenses and a sharp pin like you used to hold it in place and used the rest of the device around it. I had no idea what it might be for. The next was a piece of amber with some sort of creature in it. It was dark enough now that I couldn't really tell, but it seemed... odd. If I had to guess, I would think it was a fairy. Were fairy's real? The next was a flat, blue disc made of some sort of marble. It made me think of water.\n\nI put it all back and didn't open another since it was so dark. I made a little bed on the cushions of the window seats, then snuggled into a blanket and looked out.\n\nSuddenly Sam was sitting behind me and leaning on the jamb by me. He was looking up at the moon and I looked up as well. \n\n\"It'll be full tomorrow,\" he said softly. \n\n\"Tomorrow is Friday, right?\"\n\n\"Yeah.\"\n\n\"We get to get out of here on Monday,\" I sighed.\n\n\"Maybe,\" he shrugged.\n\n\"You don't think so?\"\n\nHe gave me a grim smile and looked up again.\n\n\"When... when you are a wolf, do you just kill everything you see?\"\n\n\"No. I am me, just... everything is more... heightened. I love the hunt. It's freeing to be a wolf.\"\n\n\"Do you think anyone else is a werewolf?\"\n\n\"No. No one smells like a werewolf. Luke smells like a were though. Not wolf. Some sort of bird.\"\n\n\"You can... tell that? Can you tell what anyone else is?!?\"\n\n\"Maybe one other person,\" he shrugged.\n\n\"Who? What are they?!?\"\n\nHe gave me another wry smile and looked up at the moon again.\n\nI sighed, knowing he wasn't going to tell me. \"Tell me more about being a wolf?\" I asked dreamily, looking out at the woods washed in the blue light of the moon.\n\nHe told me, his voice soft and wistful as I laid on my pillow and looked out.\n\nI fell asleep hearing about it and dreamed of it.\n\nI woke to light again and turned slightly, then went still. He had fallen asleep too, his head on the other side of my pillow. I found I didn't mind that so much. He wasn't like Jeremy at all. \n\nI got up and he shifted, then sat up and blinked sleepily with a scowl, looking around him. I went to the other two boxes and sat down, opening one of them. He moved closer and looked in the other boxes that I had already opened while I looked through the titles of old books in the third box. Most were in a language I couldn't read. The few that were in english were about ancient creatures and myths and folktales. \n\n\"That's gaelic,\" Sam said, looking through one of the books I couldn't read.\n\n\"You can read it?\" I asked.\n\n\"Only enough to recognize it. Look at this one here. It's about the old witches of the mountains and keeper of mountain creatures. Cailleach.\"\n\n\"That was the word Mrs Ericson said,\" I said, looking at the book and the pictures as he flipped through the pages.\n\n\"Look,\" he said, showing a woman in a long gown in front of a cairn and pointing a staff at it. The illustration showed lines like a starburst, signifying magic on the entrance of the cairn. The next page showed the cairn covered by a slab and the same woman doing what looked like sealing the cairn shut with it.\n\n\"What do you think happened?\" I asked, wishing I could read it.\n\n\"Let's look at the other books,\" he said, pulling out the next one. None of the rest were like that one.\n\nThe fourth box held really old papyrus scrolls and I was too afraid to try and unroll them. They would probably break and crumble. \n\n\"Let's close these up and go down to breakfast,\" he said, putting things away.\n\nI helped and we crept down the stairs. I left my pillow and blankets. He listened at the door before easing it open. I closed it and turned the handle until it clicked, then followed him downstairs. \n\nEveryone was too sleepy to notice we came in together, especially since I went straight to the kitchen to make coffee. \n\nJeremy followed me in, but I didn't notice until he leaned on the counter next to me. \"Hey. Wanna show me how to use that?\"\n\n\"Not really,\" I said, moving away from him.\n\n\"Come on, I just want to know how to make myself some coffee. Unless you want to make me some?\"\n\n\"Ask someone else.\"\n\n\"I'm asking you. Come on, babe, loosen up a little. You are so uptight, you need to unwind. Let go,\" he said, moving behind me and pinning me to the counter as he slid his hands around my waist.\n\n\"Mia? Everything cool?\" Charles asked from the door.\n\n\"We're fine,\" Jeremy said, putting an arm around my shoulders to pull me close to him.\n\nI tried to shrug him off and push him back as I looked at Charles pleadingly. I didn't want to yell and make a scene.\n\n\"Come on, Mia,\" Charles said loudly. \"Let's go sit down.\"\n\nJeremy loosened his grip and I ducked under his arm and hurried to the dining room. Sam was standing on the other side of the door, near Charles like he was ready to come in. I sat in my seat and huddled in on myself as the others sat down. I got up before everyone was done and went up to my room to get clothes to shower. When I came down, almost everyone was outside. The boys were throwing a football and laughing and the girls were sitting on the porch and watching. \n\nI looked in the little parlor room with the little library and looked at Elliot. I went and sat next to him, then grimaced. He stank. \n\nI took his book out of his hands. \"Hey Elliot,\" I said softly when he finally looked at me, upset. \"How long since you showered, bud?\"\n\n\"I can't! It's... open. Anyone can come in, anyone at all!\"\n\n\"How about this. I will go up and stand guard on your door. Make sure no one comes in. Ok? I promise no one will come in and you can get showered and feel better. Then you can come back down to this amazing little library again.\"\n\n\"Really?\"\n\n\"Cross my heart and hope to die.\"\n\n\"Why? You hate me. Everyone hates me.\"\n\n\"I don't hate you, Elliot. No one really hates you, they are just angry at themselves and they take it out on you. They make fun of me too. Call me Laura.\"\n\n\"It's your name?\"\n\n\"No. My name is Mia. They call me Laura to make fun of the way I dress and fix my hair. Like Laura Ingalls Wilder and Little House on the Prairie?\"\n\n\"But that's not even a dress like that. That period wouldn't have a dress like that at all, and not with zippers especially.\"\n\n\"I know that, and you know that, but they don't. They call me Laura to make fun of me. They always made fun, saying mean things.\"\n\n\"But you're pretty.\"\n\n\"Thank you Elliot! That was nice of you to say! Come on, let's go on up and I will stand guard, ok?\"\n\n\"K,\" he said glumly and I led him upstairs. \n\nSam gave me a smirk from the wall next to the front door as he leaned on it looking out.\n\nI waited outside the door while Elliot showered and smiled at him when he came out. \"Better?\"\n\n\"I guess.\"\n\n\"Just come to me if you have any other problems, ok? I will always help. I will be happy to.\"\n\n\"K,\" he said as he hurried back down to the library.\n\nI hesitated, then decided I didn't want to go down. Instead I went up to my tower and curled up to read one of the books I could read. It was about ancient magic and creatures that hadn't been seen in centuries. I got completely immersed in it until Sam popped his head in. \n\n\"Dinner. You live up here now?\"\n\n\"Maybe,\" I smiled, getting up. \n\nWe slipped down and sat to eat as everyone laughed and talked loudly.\n\nThey were talking about the game they were playing after dinner and who was going to win, laying down bets.\n\n\"Come out and watch with us!\" Angel said, leaning close to me. \"We hardly see you at all. Come spend some time with us!\"\n\nI smiled and nodded, though I wanted to go read some more. \n\nWatching them play was dull. Listening to the girls giggle and talk about the boys was dull. They were hardly talking to me even though Angel had her arm hooked through mine. I felt like an imposter.\n\nI looked over at Sam as he came out and smiled at me. \"Taking a walk till morning,\" he mouthed, then motioned to the moon.\n\nI nodded. He was going into the woods for the full moon.\n\nI watched him disappear into the darkness, then my eyes were drawn to the cairn. Was it... glowing?\n\nI slipped my arm out of Angels and got up, skirting around the game and circling around to the cairn. I stopped a dozen feet back and stared. \n\nIt WAS glowing. There was a greenish, glowing light coming from what looked like a shield over the opening.\n\nI stepped closer, looking further in and I could swear I saw movement. Another step and it almost felt like it was a vacuum and I was being sucked in. I tried to pull back, fighting it and I saw something... a creature... a man decayed and dead, but glowing a sickly orange like it was an apparition. Following him were women, beautiful stunning women, also glowing. Red and blue and purple. They smiled at me and tried to beckon me closer. I fought harder to move back as the women pressed the creature to the shield and I let out a terrified mewling noise as it began to move through it. \n\nI finally moved far enough back that the suction stopped and I turned and sprinted away to the backyard and the woods. I fell against a tree, hugging it close as I sobbed and shook my head. It was a dream! A vivid dream! That was all! I would wake up in my tower and it would be over!\n\nI curled down to the ground and cried, wondering if I should tell. Who would I tell? They would laugh at me, make fun of me.\n\n\"Mia?\" Jeremy called softly. \"You ok?\"\n\n\"Fine!\" I called, sitting up and starting to stand so I could go back to the house.\n\nJeremy was right there suddenly as I started to stand. \"Hey, You've been crying,\" he said as he guided me back to the ground to sit. He sat in front of me on his knees as he held my arms. \"What's wrong?\"\n\n\"I'm fine! I want to go back to the house!\"\n\n\"Easy, I am just trying to help. Tell me what's wrong.\"\n\n\"Nothing! Really, just... girl issues.\"\n\n\"They being mean to you?\"\n\n\"No! Not like that!\"\n\n\"Oh... you on the rag?\"\n\n\"What?\" I asked, horrified. \"No!\"\n\n\"It's no big deal,\" he said lightly. \"I have sisters and a mom. That kind of stuff doesn't bother me.\"\n\n\"It's not that!\"\n\n\"You can tell me,\" he whispered. \"I'm here for you, babe,\" he said as he leaned over me and eased me to the ground as he laid over me. \"Tell me how I can help,\" he breathed, trailing his lips over my jaw.\n\n\"I want to go to the house! I don't like you, Jeremy! I want you to leave me alone!\"\n\n\"Come on, babe. Don't be mean. You haven't even given me a shot, you could love it, you never know until you try, right?\" he asked, holding my face as he pressed his lips to mine.\n\nI cried out into his mouth, trying to turn away as he forced the kiss on me. He forced my mouth open and shoved his tongue into my mouth as I screamed. He yanked on my dress, ripping it open down the front as he fondled my breast.\n\nHe pulled back and put his hand over my mouth. \"Shhhh, babe, it's alright. It's cool,\" he panted, raising up and pulling the skirts of my dress up.\n\nI shook my head and screamed again, trying to pull his hand off my mouth as I hit him. ",
        "He laughed low in his throat as he grabbed hold of my panties and yanked them as hard as he could, ripping them along the side. He pushed his hand down, sliding a finger in along my slit as he panted in my ear. \n\n\"Fuuuuck, babe. I bet your shit is tight as fuck,\" he groaned as he forced his finger down and then in as he found my opening.\n\nI screamed and fought harder, horrified as his finger invaded me.\n\n\"Mmmm, fuck! That hot little cunt is perfect babe!\" he groaned, raising up to undo his pants. He pushed them down and his cock sprang free, slapping me on the thigh as he shoved his pants down further. \"It's cool baby, shhh, be still babe, you will love this, I promise. Be still.\"\n\nI shook my head as tears streamed down my face.\n\nHe slid his fingers back down and worked them between my legs, then used his knee to shove my legs further apart. He shoved his finger into me again and thrust it in and out, still panting in my ear. \n\n\"Get wet for me babe, fuck! Come on. Feels good doesn't it? Get excited for me. Fuck it,\" he panted, then pulled his hand up and spit on his fingers before reaching back down and wiping it all over my slit. \n\nI screamed in revulsion and bucked, trying to get him off of me.\n\n\"Be still for me babe,\" he grunted, then moved up, pressing his cock against my pussy and rubbing it through my slit, getting the tip wet. He thrust forward and I cried out in pain and terror, then he pulled back and thrust again. I felt a snapping pain and I squealed as he pushed all the way into me with a groan. \"Fuuuuck,\" he moaned, then pulled back and rammed in again and again. I stopped struggling and lay there brokenly, wishing the pain away as I shook my head. \"That's so fucking good, baby. God you feel good! I love this, babe. Fuck, that's amazing, you feel how good that is?\" he groaned. \"Oh god! Tell me how much you love it baby, tell me you love my cock.\"\n\nI only whimpered and cried as he kept ramming, but to my shock, a wave of something nice radiated up my body, then again and again as he kept thrusting. I gasped and went rigid and he groaned again. \n\nHe moved his hand off my mouth, sliding it down to hold my face.\n\n\"Get off! Please stop!\" I cried.\n\n\"Shh, baby, you are loving it, I can feel you getting wet for me. You want this cock.\"\n\n\"Pleeeease! Stop! You...\"\n\nThere was a snarl, then Jeremy was gone in a blur of motion. He screamed as there was another snarl and I scrambled up, to try and see what was happening as I tried to fix my dress. Jeremy screamed again, a high pitched, terrified scream as a blur of fur ravaged his arm.\n\nShouts came from the house and flashlights began coming closer. The blur of fur stopped and back away from Jeremy, then turned and trotted to me. The giant gray colored wolf with amber eyes stopped in front of me, looking at me eye to eye, then licked my cheek before running into the woods.\n\nMoments later, everyone arrived, shining flashlights. I was still crying hysterically as I tried to hold my ripped dress closed. Jeremy was still panting little screams as lights shone on his bloody arm.\n\n\"Something came out of the woods! It attacked me!\" he cried.\n\n\"Did it attack you too?\" Angel asked.\n\nI shook my head. \"Jeremy did! He was raping me. The... thing saved me from him!\"\n\n\"What the fuck ya twat?\" Charles demanded of Jeremy.\n\n\"Help me!\" Jeremy screamed as Hannah yanked her flannel shirt off and wrapped it around his arm.\n\n\"Let's get you both back to the house!\"\n\n\"Are you ok?\" Angel asked, terrified as she helped me up. Missy took my other arm and they helped me to the house as How and the others helped Jeremy.\n\nCharles came closer, but kept his distance as if not to spook me. \"How bad are you hurt? Here,\" he said, passing his jacket to Angel.\n\nShe put it around my shoulders and I held it shut as I trembled.\n\n\"Did he... actually do it?\" Charles asked, \"Or was he just getting there?\"\n\n\"He did... he didn't finish, something saved me. Stopped him.\"\n\n\"Something?\" Angel asked.\n\n\"I didn't see it. It came out of the woods, tackled him off me, bit him, then went back into the woods. It was dark. I couldn't see anything and I didn't really know what happened. He was holding me down one second, then he was gone and screaming.\"\n\n\"So he didn't... cum in you?\" Charles asked.\n\nI blushed and hid my face as I shook my head.\n\n\"So we don't have to come up with a morning after,\" he said matter of factly.\n\n\"We do. It can happen even if he doesn't come,\" Missy said, rolling her eyes. \"Didn't you pay attention in health? Wait? Do you guys have health in England?\"\n\n\"Both of you shut up!\" Angel whispered to them. \"Come on, Mia, steps here.\"\n\nThey got me inside and Mrs Ericson was looking down at Jeremy laying on the coffee table as he moaned and wailed, holding his arm. The shirt was folded open and she was looking at the wound.\n\nShe turned to me. \"What happened? Did it bite you too? What was it? Did you see it?\"\n\nI shook my head, then looked around and blushed. \"Can we speak alone?\"\n\nShe grabbed my arm and led me to her room, slamming the door as she scowled down at me.\n\n\"He... he was... hurting me,\" I whispered, letting the jacket fall open. \"Forcing himself on me. The thing saved me. Got him off of me.\"\n\n\"Jeremy Gilbraith raped you?\" she asked angrily. \"I should throw him off the cliff! Castrate him! I should have known something like this would happen with the cairn open and the full moon!\"\n\n\"Does... that mean something? The cairn and the full moon?\"\n\n\"The moon has power for some creatures... I am guessing like the one who saved you,\" she said, pressing her lips together thoughtfully.\n\nI said nothing.\n\n\"I'm sorry that happened, Mia,\" she said more gently. \"Why don't you go up and get a hot shower and change your clothes? I will see to Mr Gilbraith!\"\n\nI nodded and started upstairs, but Elliot stopped me. \"Want me to guard the door?\" he asked.\n\nI smiled at him, then nodded. \"I would like that.\"\n\nHe followed me up, clutching his book with wide eyes. When I came out, he was standing against the door still clutching it. \n\n\"Thank you, Elliot. I needed that, someone protecting me. You are amazing.\"\n\nHe smiled slightly, then hurried to his room with his book.\n\nAngel met me at the stairs. \"Elliot wouldn't let me in,\" she told me, rolling her eyes.\n\n\"I asked him to protect me while I showered.\"\n\n\"Him?\"\n\n\"Yeah... it's an inside thing.\"\n\nDownstairs, there were heated arguments going on.\n\n\"He needs to be locked up somewhere until he can be sent to jail!\" Faith was yelling.\n\n\"He isn't going anywhere! Look at him, he's in pain, he can hardly move!\" Hannah said, stroking Jeremy's head with a cloth.\n\n\"It's just a bite on his arm, he is being a freaking baby,\" Charles said, rolling his eyes.\n\n\"At least lock him in a room!\" Garrett said to Mrs Ericson. \"He's a criminal! What's to stop him from doing the same to other girls?\"\n\n\"What if she's lying?\" How asked angrily. \"It's her word against his! You know how she is, she freaked out over a little peck the other night, running away like a freak! He probably just touched her face and asked for a kiss and she freaked out!\"\n\n\"We all saw her!\" Missy yelled. \"He raped her! Her clothes were shredded and there was blood all over her legs and dress!\"\n\n\"I have caught him twice,\" Charles said angrily. \"First time he was trying to force a kiss on her, had her cornered. Second time he had her practically bent over the counter while she begged him to let her go. He raped her. I saw the way he looked at her, watched her. I told her not to ever let him get her alone. Just because he's your friend doesn't mean you should excuse what he did,\" he told How with a scowl. \n\n\"She isn't worth him having his life ruined!\" How yelled.\n\nMrs Ericson looked at How in shock. \"This girl is worth a dozen of you!\" she hissed to How, who scowled and stepped back angrily.\n\nI felt sick as I turned from all of them and went to the door. I felt lost and sore and angry and still afraid. I looked out and the glow of the cairn drew my eyes. I stared at the arm sticking out of the glow, waving and grasping and almost peed my pants. \n\n\"Angel?\" I asked in a whisper. \n\n\"Yeah? You ok?\"\n\n\"Look over there, do you see that?\"\n\n\"See what? It's dark out there. Do you see something? Is it the thing that attacked Jeremy?\"\n\n\"No... no, it's nothing. It was just a reflection on the window from behind me,\" I answered, shaking harder now. Could anyone else see it? They must not have, they had been playing football out there and had never seen it. Why was I the only one? What... was I?\n\nSam.\n\nSam knew. The looks, the smiles, like he was just waiting for me to figure it out.\n\n\"That's enough!\" Mrs Ericsons voice cut through everyone. \"You, go get me a clean towel, you go get the peroxide from the bathroom down here. You, go get the tape from the desk drawer in the library. Hurry up! The rest of you, go to your rooms! Mia... if you want to sleep down here, you can.\"\n\nI shook my head. I wanted my tower. \n\nI hesitated again, wondering if I should tell her. Would she know what was happening? Would she be angry at me? Would she know how to stop what was happening?\n\nI hung back, waiting for everyone else to go up, hiding back in the library. Mrs Ericson wrapped Jeremy's arm and gave him two tylenol, then had the three boys to get him up to his bed.\n\nI watched her pace worriedly for a while, looking inward as she made her circuits. Finally, she went to the hall and looked up the stairs where everyone was quiet, then turned off the lights and went into her room. \n\nI waited a few more minutes, then slipped up the stairs quietly, going up to my tower. I moved to the other side of the room where I could see the cairn and looked out. I could still see the glow and the arm. I saw other lights behind the glow. The red and blue right behind it. Waiting.\n\nI shuddered and lay down, watching it warily and wondering what to do.\n\nSam woke me in the morning, dawn barely lighting the sky. \"You ok?\" he asked worriedly?\n\nI jumped up and hugged him. \"Thank you!\"\n\n\"I wish I had come sooner. I ran as fast as I could when I heard your cries. Did he hurt you?\"\n\n\"No... I mean... my heart mostly. Sam? What am I?\"\n\n\"You haven't figured it out yet?\"\n\n\"No? I think you know. I think you know more than Mrs Ericson does.\"\n\n\"Like I said, we are taught everything, even the things they don't want us to know. Like how they trapped the souls of Aos Si in cairns like this, along with a geist of a lich. Their power, trapped here, powers the island, powers the ley lines. It forces the change in people like us, forces powers to surface. You. You only had to get close to the island when yours hit. The second your foot hit the soil here, that slab dropped. Waiting for you. It pulls to you, doesn't it? And you can do other things now. Like unlock a magically locked door.\"\n\n\"But... I don't understand. What does all of that mean? What am I?\"\n\n\"You really can't figure it out?\" he asked, looking over at the boxes.\n\nI felt dread well up. I was trying to pretend I didn't know, but I had been fearing it since I heard the word the first time.\n\n\"Cailleach,\" I whispered.\n\nHe nodded. \"Powerful too. Problem is... there is no one alive who can teach you to control your powers.\"\n\n\"Not even your people?\"\n\n\"Knowing about something in passing and knowing how to teach it are two different things. That, and Cailleach don't all have the same gifts. They have two major, four minor. One of the minor is opening and closing locked doors. Like the Cairn. Only a cailleach can lock a cairn.\"\n\n\"What are Aos Si?\"\n\n\"Daoine Sidhe.\" \n\n\"What's that?\"\n\n\"Fey folk. People of the mounds. They were trapped within by bad people... Cailleach. People like your school. They put a lich in with them and he drained them and they basically died within, their... essence trapped. The lich wasted to nothing and became a geist. But if they can get him out, let him feed and regain his life, he will give them their bodies back and release them so they can all go out in the world and exact revenge. The cairn is open and when that happened, the karst... the island, became invisible to the world of man. No one is coming on Monday, no one will find us. The door has to be locked again before that happens.\"\n\n\"Can't we just... get away?\"\n\n\"It's too high to jump. Even if we could make a ladder, we couldn't make it strong enough to hold our weight as we get further down. Mia... you are going to have to tell the old woman.\"\n\nI sighed and hugged myself, then nodded. \"There's... something else. I think... I think I will just tell everyone. Everyone needs to know what is happening. It's... important.\"\n\n\"It may scare them and they'll panic.\"\n\n\"I know... but they have to understand the importance. You'll understand. Come on,\" I said, trying to build my courage. \"Help me wake everyone. I will get Mrs Ericson and the girls.\"\n\nHe caught my hand as I started to go. \"You sure you are ok?\"\n\n\"Yes... it seems a little unimportant comparatively,\" I whispered, blushing.\n\n\"I really am sorry I didn't get there faster. I should have stayed close.\"\n\n\"It isn't your fault! Not at all. You have nothing to be sorry for, you saved me. You got him off of me.\"\n\n\"But not soon enough,\" he growled, his hand gripping mine too hard.\n\nI looked up at him. \"I will get through it. Especially with someone to talk me through all of this and lean on.\"\n\nHis cheeks turned red as he clenched his teeth. He wanted to say more, but he didn't. He let my hand go and followed me down.\n\nIt didn't take long to get everyone downstairs. Most were tired and grumpy at being woken up. \n\n\"If this is about last night,\" How snapped, \"we don't want to hear any more sob stories.\"\n\nI ignored him, looking at Mrs Ericson. \"I... know what happened here,\" I said softly. \"Why the cairn was open. I did it. I did it when I arrived at the island.\"\n\n\"Why?!?\" Blaire half screamed.\n\n\"Not on purpose! I didn't know! I didn't know what I was any more than any of the rest of you. I am a... Cailleach.\"\n\nMrs Ericson gripped her stomach. \"This explains much!\" she breathed.\n\n\"That's not all,\" I said fearfully. \"I didn't know, still. I had no idea. I saw the door of the cairn last night... it was sort of... glowing. I went over to look, not getting too close. I saw... a thing. A corpse, moving up the stairs and behind him, the spectres of women, also glowing, but differently. The door tried to suck me in and they pushed the creature at me as the door pulled. I... got away, but the thing... it's arm is out, trying to grab, grasp. No one can go anywhere near the cairn. It's direly important. Stay well back. If... if it gets you and pulls itself out, it will be bad.\"\n\nEveryone started panicking, yelling and freaking out.\n\n\"Shut up!\" Sam yelled. He turned to Mrs Ericson. \"Tell them the rest,\" he said with a scowl.\"\n\n\"What do you mean?\" she asked warily.\n\n\"Tell them! Or I will tell them and they will know how you have been lying to them all this time.\"\n\n\"Young man, you have no idea what you are dealing with here, I...\"\n\n\"No. YOU have no idea. So much was hidden, even from people like you! So called experts! There's a reason my people hid from you and your council! What she isn't telling you is that we are invisible. No one is coming Monday or any other day. They knew. They knew if a Cailleach ever came here, this would happen, but they chanced it anyway, playing the odds. They wronged what is in that cairn, they wronged it a LOT. It wants revenge, they all do. The Lich, the Aos Si. They have been using them like a battery, trapped down there. Bringing people like you here, using the power to force you to surface. It builds and builds in you until it is forced out. That's why they leave you here almost a week before the teachers even come, waiting for your powers to get closer to being forced out.\"\n\n\"How do you know this?\" How asked as if he didn't believe him.\n\n\"Because I didn't go to your stupid school where they brainwashed you and lied to you about the past! I was raised by people who know the truth, people have passed it down from generation to generation, hiding from your council to stay out of their cult of servants and followers. Didn't you ever find it odd that you were all assigned jobs around the world where you can work in the COUNCIL'S best interest? You are all sheep, blindly following where these liars lead you! They are the bad guys! YOU are the bad guys. They bind lesser creature's to use their powers and they use everyone they can. They trap the powerful and use them to become more powerful. Or did you not wonder why the council was based in a place like this, in the middle of four cairns? The power there is unimaginable. They have wronged and used so many and you are all being groomed to help them do it. This isn't Mia's fault, this is their fault. They knew what would happen. She didn't.\"\n\n\"What do we do?\" Faith cried.\n\n\"We have to get away! We have to find a way down and swim to the island!\" Brandon yelled, jumping up.\n\n\"Can you swim that far? No one can,\" How snapped. \"We need to build a raft and lower it down, then we can climb down.\"\n\n\"That won't work! Don't you know how physics work? We don't have anything that will hold us that far down and a drop to the water from that high would kill us on impact.\"\n\n\"What if we throw her off the island?\" How asked darkly, pointing at me.\n\n\"It won't change anything that is happening here and you will be throwing away your ONLY chance to get away,\" Sam growled. \"And just TRY and lay a hand on her.\"\n\n\"What if we got a raft down with a flag on it pointing to the island? Would they see that?\" Missy asked.\n\n\"If they did, they wouldn't know where to land. They couldn't get close without risking running into the side of the island!\"\n\nMrs Ericson spoke. \"There is only one way down,\" she said, cutting her eyes at Sam.\n\nHe blushed and looked down. \n\n\"What do you know?\" Jeremy asked. \"How do we get out of here?\"\n\n\"WE don't. I can. He will be able to in a few days,\" he said, pointing to Luke.\n\n\"Me?!?\" Luke asked.\n\n\"You are a were.\"\n\n\"How can you possibly know that?\"\n\n\"Because I am a were! I smell it on him. By the way, that was me, fuckwad,\" Sam yelled at Jeremy, pointing at his arm. \"I should have ripped your throat out for what you were doing to her!\"\n\n\"That was you?\" How asked, standing.\n\n\"Yes. It was me. Do you have an issue with it? Protecting a girl who is 75 pounds soaking wet against a guy his size holding her down and raping her while she begged for help? I guess you think it's his right to take what he wants from a poor little no one. That's how you people see the world, isn't it? Lesser people aren't people at all.\"\n\n\"Stop!\" Charles yelled. \"This is pointless. Just tell us how you can get us out of here!\"\n\n\"I can't. I can get me out of here, maybe one other person. A small person. Our only hope is Mia. She is the only one who can close it and lock it.\"\n\n\"So do it!\"\n\n\"I don't know how!\" I whispered, shaking my head. \"I have no idea!\"\n\n\"We need someone who can read gaelic, or a translation program,\" Sam said, putting a comforting hand on my shoulder.\n\n\"Why?\" Mrs Ericson asked, her head snapping up and her eyes wide.\n\n\"To translate books.\"\n\n\"From where?\" she demanded.\n\n\"The tower,\" I answered.\n\n\"The tower is closed off! Locked! No one can get up there, not even from the outside! The windows can't be broken!\"\n\n\"Cailleach, remember?\" Sam said acidly. \"They specialize in opening and closing doors, locking and unlocking. Even magic ones. She found the books and the other things up there.\"\n\n\"I need to see! Show me!\" she demanded.\n\nI looked up at Sam, feeling odd about letting anyone else up there. He looked down at me, worried.\n\n\"Come on!\" Mrs Ericson yelled.\n\nI swallowed and followed her up to the door. Everyone followed us up. I opened the door and Mrs Ericson pushed me aside to go up, but bounced back. There was something stopping her. She looked at the doorway and pressed her hands to something solid. ",
        "I moved her with a touch, then went in with no problem. She tried again and couldn't get in. Sam gave me an odd look and I nodded. He came in with no issue. Mrs Ericson tried again, then scowled. \"It has to be keyed to you! You have to allow it!\" \n\n\"I don't know how and I don't think so. Sam came up when I wasn't even aware of it. I didn't have to allow him in.\"\n\n\"It has to be keyed to you somehow! Just... bring the books down!\"\n\nI turned and went up, looking through the boxes for the books.\n\n\"I know what it is,\" Sam whispered. \n\n\"What?\"\n\n\"Trust. You don't trust her. You trust me. No one can get up here that you don't trust.\"\n\n\"That... makes sense I guess. Here it is,\" I said, finding the book. I grabbed a handful of others and started down the stairs. I reached the bottom and she reached her hand out. I handed her the books, but the wall was there. They wouldn't pass through the barrier. My mouth opened in surprise as I tried to push them through. It was like pushing them against a brick wall.\n\n\"Damnit!\" she hissed. \"Open it! Let me look at it.\"\n\nI opened it to the page with the picture of the Cailleach making the magic barrier on the cairn, then turned it. The wall turned opaque and then milky. The room was not going to let anyone else look at the books. I closed it with a sigh and the barrier went clear. Mrs Ericson looked livid. \n\n\"What else is up there? I want a list of every title, every object described in detail!\"\n\n\"How about later,\" Sam said in exasperation. \"How about you get your tablet and let her use your translation program? We get the cairn fixed, then you can treasure hunt or whatever. In the meantime, start rationing food and stuff, we have no idea how long we will be here. Get more firewood and turn the genny off of a day. Only on for an hour once it's dark, then we go to bed and get up with the sun. Make use of the light.\"\n\n\"We need heat!\"\n\n\"Make pallets in the living room by the fireplace. We have wood in spades. Or double up if you don't want to do that. Come on. Let's hurry on this!\"\n\nMrs Ericson huffed and pushed passed everyone to go get it. When she left, the others moved closer and touched the barrier, pressing against it. They looked a little in awe. \n\n\"What kind of were?\" Luke asked Sam.\n\n\"Bird, I don't know more than that.\"\n\n\"Like, I will be able to fly?\"\n\n\"Unless you are a penguin or ostrich.\"\n\n\"Is that a thing?\" Luke asked in fear.\n\n\"No. Eagle, raven, vulture, hawk. Things like that. Birds of prey mostly.\"\n\n\"Awesome!\" he said, wide eyed.\n\nI saw Elliot in the back, looking at me and clutching his book worriedly. He was afraid. Afraid I wouldn't protect him anymore. \"Why don't you boys get on that wood,\" I said softly to Luke and Brandon, but meaning all of them. Make pallets downstairs for those that want to. Angel, do you think you girls could help with my bed here in a bit? I want to move it up here.\"\n\n\"Sure! Say when!\"\n\n\"I will be down in a few. I want to talk to Elliot. Hey Elliot. I am still here. All you have to do is knock, ok? I will be right here as fast as I can, ok?\"\n\n\"K?\" he said, still worried. He looked past me to Sam, then back to me, then he came in, squeezing past me and Sam and going up. \n\nI looked at Sam, my mouth an 'O' of surprise. \n\nHe smirked and shrugged. \"That's that giant heart of yours.\"\n\nI nodded and went to peek up at Elliot. He was sitting criss cross on a window seat, reading his book.\n\nI turned and left him there to go get my bed.\n\nIt was a LOT heavier than I had imagined a feather bed would be. It took three of the boys to get it to the door and me and Sam to get it up. I grabbed the bedding and Sam brought up the frame. I set it up against the window seats directly across from the stairs, pointing into the room. I tucked my bag under and looked around, then pushed the boxes under the bed too. \n\nMrs Ericson finally came up with the tablet and stood at the doorway, holding it a moment. \"See if you can take pictures of the pages with it.\"\n\n\"It won't work,\" Sam said. \"It will just erase it. Same as it drained every battery when we got here and no phones work. That only works because it's not networked, it's just a handheld device with apps on it. You try and do something the karst doesn't like, it will wipe that too and then we will have nothing.\"\n\n\"Then write it out as you translate it and bring me the pages! Or read them to me!\"\n\nShe seemed almost rabid. I stared at her, confused. I knew she had a hunger for knowledge and she considered herself an expert in many things. She thought she was an expert on this place and it turned out she knew nothing. I think that infuriated her. She was a pawn too. She hated that. She wanted to remedy that.\"\n\n\"If it's allowed,\" I nodded, but I knew it wouldn't happen. I trusted her even less now. \n\nI went up to my room, I did consider it mine. I was fairly certain it was a room made for me and people like me. Cailleach. If that was true, how old was this house? It had to have been here since the one who closed the cairn, but how was that possible? It would have rotted and crumbled to dust and it was made at least at the turn of the century. \n\nUnless the whole thing was magic, or protected by it. \n\nI glanced at Elliot, but he was engrossed in his book. I sat on my bed and opened the book, opened the tablet and opened my notebook. I started the ridiculously slow and painstaking process of translating. \n\nI got about six words in when Sam came up. He handed me a plate and I took it, eating as I tried to find a word. He sat on my bed, looking over my shoulder.\n\nFeeling him close, his chest almost touching my back, it felt nice. Safe. I liked that he made me feel safe. A protector. \n\nI relaxed, stress pouring out of me as I worked. \n\nSoon, I found myself focusing on how his breath felt on my neck. How warm he was, putting off heat like a furnace. I knew that about were's, their body temperatures were higher than other peoples. We learned that in school. It felt good though, as cold as it was. I leaned back enough to press against him, soaking up the warmth as I closed my eyes. He didn't move or say anything so I stayed there feeling comfortable and warm and feeling like I could sleep. I needed a nap, I was so tired...\n\n\"You stuck on that one? I think it's magestone, see how they combine like that?\"\n\n\"Oh... no. sorry. I've hardly slept. I was nodding off.\"\n\n\"Oh, yeah, you look tired. Why don't you lay down and I will work on this for a while?\"\n\nI nodded and grabbed my blanket, then moved back where I was and scooted down so I was laying on his thigh and curled up between his legs. He said nothing, acting like that was normal as he looked at the tablet and stroked my hair with his free hand as he scrolled.\n\nI woke and he was leaned back on the headboard and a pillow as he scribbled on the notebook. Elliot was still sitting on the window seat, but he had a stack of books now, like he had left and come back. He also had a blanket and pillow on the cushions. I really hoped he didn't think he was sleeping in here.\n\nI sat up and moved up next to Sam and looked over his shoulder now. He had made good progress and I wondered how long I had slept. I could sleep through till morning, I was still so tired.\n\nAfter another hour, he sat up, stretching. \"Let's go eat dinner. Take a break.\"\n\nI said nothing, just got up. I took Elliots book and put it down. \"It's time to eat Elliot. Come on.\"\n\nHe followed us and sat on the other side of me at the table. \n\nI looked up and Jeremy was at the table. He was staring at me, glowering, his eyes making promises. I looked away and How was also staring at me. He looked angry.\n\n\"New pet?\" he asked, looking at Elliot.\n\n\"You are the only one with pets,\" I shot back quickly. \"Dogs, licking your hand, hoping for your attention. You even protect them when they do wrong. Like an owner who claims his pet is innocent even after attacking someone. He knows it should be put down, but then who would fawn over him and adore him? No, How. Showing human kindness isn't a fault, the only fault is someone who makes fun of others and acting like they are better than everyone else. Even worse when they actually think they are. There is no money here, How. No old blood. Names mean nothing. Those creatures have no care who you are. Actually... the might. If it was your ancestors who put them in there, you will probably be who they go after first. Wouldn't that be a kick in the ass? That name you are so proud of being your downfall. If I were you I would stop looking down my nose and start seeing what you can do to help. And you, Jeremy. You will stay the hell away from me. Do you know what I am? Do you know what I am capable of? Ask Mrs Ericson about the Cailleach and their powers.\"\n\n\"We will be coming into ours soon,\" he replied, smiling evilly. \"Then what? You can't hide in that tower forever, can you?\"\n\n\"You really are a cunt!\" Charles snapped. \"What is wrong with you? Just leave her the fuck alone. There are girls here who want you to pay them attention, why bother her? She isn't even that pretty and she is so off. Uptight and sheltered. Forget her. Find one who wants you!\"\n\n\"Fuck off, Dumbo. What do you care? Why don't you go find another cock to suck? Yeah, we all know. Luke told us.\"\n\n\"You think I'm ashamed? You are a right twat. Why does who I am fucking have anything to do with who you shouldn't be raping and harrassing? It's not because I like her, it's because it's fucked up! You don't treat anyone like that! If you care, I fucked Blaire too, and Gene. A good fuck is a good fuck, no matter who it is. I like both. Not cunts like you though, or your jerkoff who is protecting you. So you know, he likes dick too. Doesn't he, Luke? How many times have you sucked him off back by the genny? At least a couple times a day that I've seen.\"\n\n\"Shut up! You're lying!\" How raged.\n\n\"Am I? I don't blame you, Luke is amazing at sucking cock. Luke. How many times you sucked his cock since you got here?\"\n\nLuke blushed and looked down at his plate. \"I don't want to be brought into this,\" he whispered.\n\n\"That's not a none,\" Charles smirked. \"If it weren't true, he would have denied it. He won't lie, so he won't say at all. So there you go, loyal dog, your boy likes dick. You wanna keep using that to put people down?\"\n\nJeremy looked at How, his face red. \"You said you were just drunk that night. To never talk about it again! You lied? You meant to do it, didn't you? You really love sucking cock?\"\n\nHow stood up and left angrily and Charles laughed. \"Keep throwing stones, cunt. Leave the girl alone, because you know what? You aren't the only one who is about to come into a power. You better hope and pray you get something powerful, because if you don't, if the rest of us come into something more powerful than you? That bite will be the least of your miseries.\"\n\nJeremy also stood and left, but from his look, it was less about what Charles said and more about going to find How.\n\n\"Why did you tell?\" Luke asked Charles.\n\n\"You didn't tell them I sucked your cock? It's not like I was the only one who saw you two sneaking off constantly.\"\n\n\"For the record, it was a one time thing,\" Gene said vehemently. \"Got curious, tried it, didn't like it. I like girls!\"\n\nCharles shrugged a shoulder. \"Up to you of course. I wasn't trying to out you, just proving a point. Him trying to use that like it's something bad is BS. It's nothing to be ashamed of. Wasn't trying to embarrass you or hurt you. If it makes you feel better, Faith said you were a great lay too.\"\n\nI was turning more and more red as I sat there. How did they talk about that so casually? It should be private!\n\n\"Sam?\" Angel asked, leaning up. \"Can we ask you some questions? You seem to know more about what is going on than anyone?\"\n\n\"I guess,\" he answered irritably. \"Not in here. Lets go to the living room.\"\n\nHe got up and put a hand on my arm to lead me to the living room, like he thought I might head upstairs instead of going in with him. There was no way I was going up there where Jeremy was all alone.\n\nHe led me to a couch instead of letting me sit in a chair and sat down next to me.\n\nThey started asking him questions and he answered in short, clipped answers. After a few minutes, his hand moved to my lap and he wrapped his fingers around mine. \n\nHe was holding my hand! It felt nice. Right. His hand was huge around mine, but he held it gently and pulled it closer to him. After another moment, he moved his hand, lacing his fingers through mine and holding on a little more tightly. \n\nI realized answering questions, talking to people, it was stressing him out. \n\nI moved my other hand and held his in both of mine, stroking softly with my thumb. I leaned on his shoulder and he immediately put an arm around my shoulders and I moved closer, holding his other hand now. \n\nMissy grinned, leaning close. \"You two make a totally adorable couple.\"\n\nMy face heated and I looked down. \"We aren't really...\"\n\n\"Thanks,\" Sam said more loudly.\n\nI peeked up at him. Had he just said we were a couple? In a roundabout way? Or was he just heading off awkward explanations? \n\nFinally, he spoke up. \"I need to see her to bed.\"\n\nHe stood and pulled me up, still holding my hand. He led me up to my bed and laid me down. He tucked me in without a word as I stared up at him.\n\n\"Be back in the morning,\" he said softly.\n\nRight. Full moon. \"ok,\" I answered softly. \n\nHe stood and grabbed Elliots blankets, taking them downstairs as he left.\n\nI curled up and looked out at the cairn, still worried. I felt alone now and a little scared.\n\nI wished Sam were here. Not that he could sleep in my bed with me, that wouldn't be right.\n\nHadn't I slept with him in my bed earlier? Sleeping wasn't a big deal. He just made me feel safe is all, I knew he would protect me.\n\nI looked out to the woods, wondering if he was there, if he was close. Maybe even watching. That thought comforted me. I was fairly sure he was close, listening and watching. It eased my mind enough for me to fall asleep. \n\nI woke to him half falling into my bed next to me. I rolled and looked over my shoulder at him. He looked exhausted. \n\n\"What's wrong?\" I asked, sitting up.\n\n\"Didn't sleep. I'll be fine, I'll nap after breakfast when you come back up to translate.\"\n\n\"Did you sleep the night before?\"\n\n\"Yeah. Couple hours sleeping as a wolf is all I need, but I didn't sleep at all.\"\n\n\"Because you were watching over me and listening for me?\" I asked softly.\n\nHe smiled slightly, his eyes still shut. \"Let's go eat,\" he sighed, getting up.\n\nWe went down to a lot of excitement and yelling. I peeked into the living room and Gene was pointing at a magazine floating in midair, directing it to move with a huge grin. Everyone else was talking excitedly about how soon they would all be blooming.\n\nThe magazine dropped and Gene was panting. \"Can't do anything bigger yet, but just wait!,\" he cried happily.\n\nMrs Ericson held her hands up for silence. \"We will work on it for a bit each day. I am the only one here right now and my time will be spread thin on teaching. All of you eat, I have a small chore list made out for everyone.\"\n\nIt was a little exciting, seeing someone come into such a neat power. I turned to see if Elliot was watching or reading, but he wasn't in the library. I looked around the living room, then in the dining room and kitchen. \n\nI turned to Sam. \"Which room is Elliot's?\"\n\n\"He's in the library,\" he answered, lifting his nose.\n\nI hurried to the library and looked around at the empty room. \n\nSam looked stunned. \"He's right there!\" he said, pointing at a chair.\n\nI looked, and I could see an indentation in the cushion like someone was in it. I moved closer and reached out and my hand landed on his arm. I followed it down to the book I knew was in his hand and pulled it away.\n\n\"Sam, get Mrs Ericson,\" I said softly as Elliot appeared, looking up at me in confusion as I held his book out of his reach. \"It's ok, Elliot,\" I smiled. \"I think you have your power and it's really really cool!\"\n\n\"I did? It is?\" he asked as Mrs Ericson hurried in.\n\n\"It is,\" I said, giving him back his book. \n\nHe opened it and as soon as he did, he disappeared again.\n\n\"That's not creepy,\" Faith whispered sarcastically from the doorway. \n\nEveryone was in the doorway.\n\nI took the book again and smiled at Elliot. \"You can become invisible! Can you feel it when it happens, do you know you are doing it?\"\n\n\"I always want to be invisible,\" he whispered, looking at all the people watching him.\n\n\"I understand, that would be nice sometimes, wouldn't it? You know what's even better? Having friends to talk to, people to help you learn things and hang out with. Not just people in books, but people like me and Sam. We're your friends, right?\"\n\n\"Yeah?\"\n\n\"You never need to hide from us and as soon as the others mature a little, you won't have to hide from them either. I, for one, am always happy to see you. You never have to hide from me, or anyone. If it makes you feel better, though, I am glad you have that comfort now. It's a beautiful gift that you have.\"\n\nHe grinned slightly, but it slipped when he looked past me.\n\n\"Mrs Ericson is going to be helping you get more control of your gift, ok? When she comes to you, you have to come out of your book for a little while so she can teach you. I know it isn't always fun, not getting to live in your books, but sometimes it's necessary. I'm happy for you, Elliot, your gift is really cool! Let Mrs Ericson talk to you for a few minutes,\" I said softly, handing her his book. \"The rest of us will go to the dining room, but I will be right there if you need me, ok?\"\n\n\"K,\" he said nervously, looking at Mrs Ericson fearfully.\n\n\"You are really good with him,\" Angel said softly, following me into the kitchen as I made coffee.\n\n\"It just takes a little patience and understanding. He hates this world where everyone is so cruel to him, so he lives in another. Whatever book he is reading. It's escapism. It's heartbreaking that he was forced to be that way by cruel people.\"\n\nShe blushed and looked over at the window. \"So... you are really a Cailleach? What does that mean, really? No one really knows and Mrs Ericson is too busy to talk to anyone.\"\n\n\"Sam knows more than I do about it.\"\n\n\"The werewolf? He's kind of hot in a loner bad boy kind of way. Quiet. You hardly notice him unless he wants to be noticed.\"\n\n\"Yeah,\" I agreed, taking my coffee to the dining room and sitting next to Sam. \n\nAlmost everyone was talking to Gene, asking him how it felt, what had become different, what had he done, how did he figure it out.\n\nAngel kept looking over at me and Sam. Finally, there was a quiet moment and she spoke up. \n\n\"Sam? What's a Cailleach? What can they do?\"\n\n\"If she wants you to know, she will tell you.\"\n\n\"She said she didn't know, that you knew more about it than she did.\"\n\n\"I probably do. If she wants to know, she can ask. Then decide if she wants to tell anyone.\"\n\n\"It's not like we won't all know everything about each other's powers,\" Brandon said, leaning up. \"I mean, we know about telekinesis and invisibility, we learned about it in school. No one ever mentioned what a Cailleach was. We're just curious.\"\n\n\"They didn't talk about them because they always control them when one surfaces. They are ALWAYS bound to the council to serve. Who would stick around if they knew they would be a slave to the council because of their powers? So they stay quiet and wait. It's been a long time, but they still know how to bind anyone to their will. They don't teach about them or mention them at all so no one goes looking into them to discover how they are always enslaved. They don't mention any of the powers that they enslave. Or did you think the people in your school who suddenly disappeared had just moved overseas like they told you? Teleporters are the most common power they bind. Moving things across the world with a thought? They want complete control of that. Weather manipulation? Supposedly too dangerous to be in the untrained hand, but notice when bad things happen to happen to places who defy the council. Tsunamis, hurricanes, tornadoes, droughts.\"",
        "\"How do we know you aren't saying all of this to scare us?\" Blaire demanded, clutching Charles.\n\n\"You really think I could make this up? The council is corrupt and power hungry and they use everyone they can to prolong their own lives and bolster their power. They do it by grooming you, brainwashing you into thinking you are serving the greater good of the supernatural community. All you are serving is their interests and if you deviate from that, you are bound and drained of your powers, just like the things in that cairn.\"\n\n\"Why didn't they bind you? Why let you come here and tell us everything?\"\n\n\"Because they thought I was an ignorant kid. A lone supe who somehow stayed off their radar until I bloomed. They think I have no control over my powers and I was all alone. Harmless, ignorant. I let them think it. Right up until we got trapped here by their idiocy.\"\n\n\"That's enough!\" Mrs Ericson snapped. \"Young man, I want to speak to you alone!\"\n\n\"No,\" Sam snarled. \"I will NOT be leaving anyone alone in here while that rapist is walking free. You are acting like he has done nothing wrong!\"\n\n\"He will be charged and prosecuted when we get out of this!\"\n\n\"NOT GOOD ENOUGH! Lock him in a room! Keep him away from the girls! Especially the one he raped! What is WRONG with you people?\"\n\n\"He's right,\" Charles agreed. \"It's insane that he is walking around free, out here sitting next to the girls. Trying to cow the one he raped with his glares and leers. He needs to be locked up in one of the rooms until we can be saved and he can be charged.\"\n\n\"It shouldn't matter who he is or who his friends are!\" Faith agreed. \"He raped a girl!\"\n\n\"Now is not the time!\" Mrs Ericson yelled, slapping her hand on the doorjamb. \"We have bigger things to worry about! Young man, I will see you in my office right now!\"\n\n\"The hell you will,\" Sam snarled. \"What will you do? Turn into an owl and chase me around the room? I am not leaving her alone while he is free. You have lost control of this situation completely! Instead of trying to keep things in hand, you lock yourself away and try to find information that you KNOW isn't there! They won't let you have access to information they don't want you to know about! You keep these people in hand and let Mia do what she needs to do instead of having to worry about people like him and live in fear!\"\n\n\"You WILL tell me what I want to know!\" she screeched.\n\n\"YOU will be an adult and guide these students instead of dropping them to fend for themselves while you obsess over knowing more than anyone else!\"\n\n\"If I tell those boys to take you in hand, they will,\" she threatened.\n\nSam smirked. \"They can try. Just because I HAVE to shift during a full moon doesn't mean I can't shift whenever I want to. They try and put hands on me or Mia and they can see how well they can survive without a throat. I have been training, learning my powers since I was four years old. Learning about the old ways, your council, your so called schools that hold people back from their true powers so they can't rise to their full potential. Can't have the kids rising up too much, getting an original thought in their head, start thinking it's not all as it should be. Keep them tame and small and quiet so they can raise the next generation the same way.\"\n\n\"You're a liar! I have trained kids! I know!\"\n\n\"YOU KNOW WHAT THEY LET YOU KNOW! You know what they told you! How they trained you! They clipped your wings too, taught you how to do the same even if you didn't know you were doing it! Or do you ACTUALLY think were's can't shift outside of a full moon? You ARE a were, how can you think that? No one ever trained you to! You only know when it is forced out of you! So much more! You don't even use your senses outside of a shift! Here is something she won't tell you,\" he grated, turning to Luke. \"If you shift yourself, it doesn't hurt. If you let the moon force it, it sucks! It hurts, it's terrifying and disorienting. You shift yourself and it's like flipping a switch. No pain, no fear, you are immediately aware. Her way, you lay there for an hour just trying to figure out how to move. I could shift where I stand and lunge for your throat in a split second, ripping it out. They don't teach you that. They CAN'T teach you that. They have to keep a thumb on you, make you feel like it's a curse and not a power. They do the same with almost every power! They will never let him stretch his limits and move anything beyond twenty pounds. They will convince him he can't, and he will believe it. They won't let him know that with enough practice and training, he could tear this whole island down. Well. Maybe not him, he is weak as far as telekenetic's go, but he could move a freaking bus. Point it, they suppress ALL of you. They are going to teach that boy that he can ONLY be invisible if he has a book, a way to control him.\"\n\n\"He does need the book!\" Mrs Ericson raged. \"It's his talisman!\"\n\n\"Talismans are BULLSHIT! A way to make people think they need something or help to use their powers. He's invisible because he WANTS to be, it's not the book! He became visible because he likes Mia and wanted her to see him! You are WRONG, old woman! Accept that you were duped and you are unwittingly duping them in turn. You don't know SHIT except what they WANT you to know!\"\n\nShe turned and stormed to her room, shaking with rage, slamming the door.\n\n\"She's a were?\" Missy asked softly.\n\n\"Wasn't for me to tell,\" Sam scowled, his chest heaving with anger. \"But yeah. She shifts in her room though and stays in there. \"Come on, Mia, let's get you up...\"\n\n\"Wait!\" Luke yelled, jumping up. \"You are the only one who will say what is going on! Can't you tell us more? What else can we do? On this island? To help with what is happening.\"\n\n\"Stay away from the cairn so what's in there can't snatch you and pull you in. Stay close to the house. Make sure we have wood, ration the water. No more showers or baths...\"\n\n\"Gross!\"\n\n\"Would you rather die of thirst after we run out?\"\n\n\"The reservoir is spelled,\" How said derisively. \"By a water summoner and a captor.\"\n\n\"Is it?\" Sam asked. \"Have you checked? Or was that another spell that was nulled when the cairn opened. Check, and if it is still full after all the showers and everything, then have at it. If it isn't full, start rationing. Ration food.\"\n\n\"Can't we garden and hunt and fish?\" Blaire asked.\n\n\"You have seeds? This is an island, how would animals get here? There is no fresh water up here, or fish either. We can put out basins in case it rains, but I don't think it rains here. It's just cold and windy. We MIGHT be able to get some gulls, but they nest further down on the karst, closer to the base. Just ration the food for now until we find a way out of this. Even after we fix it, we will have to wait for a helicopter to come.\"\n\n\"There's enough food here to last us all summer!\" Garret groused.\n\n\"We have no idea how long we will be here,\" Sam sighed. \"I don't think you people understand! It takes a long ritual to close that cairn, and that's by a trained Cailleach who knows what they are doing! It is going to take TIME to do this! Not to mention that she has to develop her power more, get stronger and train just to be able to do it! Let us go do it and stop making us waste time!\"\n\n\"Why can't she go alone and you stay and answer questions?\"\n\n\"He is helping me translate,\" I said quickly. \"He knows more about gaelic than I do, and he understands terms I don't. I need him with me.\"\n\nI didn't wait for another comment. I grabbed his hand and pulled him up the stairs. Once we got to the top, he was smiling softly. \"Thanks for saving me,\" he teased.\n\n\"Well... I didn't really. You do know more than I do.\"\n\n\"And you do need me up here?\" he asked, going to grab the book and tablet before throwing himself on the bed. He gave me another half grin. \"For the book. Nothing else?\"\n\nI shrugged and sat on my bed, looking down at the book as my face heated.\n\n\"Probably to keep you warm, right?\" he asked innocently, flipping open the notebook. \n\n\"I mean, that part is nice too. You are really warm and it's cold up here. Weren't you going to nap?\"\n\n\"Adrenaline is a little high right now. I don't do well with idiots.\"\n\n\"I noticed.\"\n\n\"Tonight is the last night,\" he said softly.\n\n\"Last night?\"\n\n\"Of the full moon. Tomorrow night I can stay. Keep you warm all night.\"\n\n\"That will be nice. It's really cold at night.\"\n\n\"No other reason? Just warmth?\"\n\nI shrugged again, hiding my face as I leaned over the notebook.\n\nHe reached out and put a finger under my chin, lifting my face to look him in the eye. \"Would you want me here if it was warmer?\"\n\n\"Yeah,\" I whispered. \"I... feel safe with you.\"\n\n\"Warm. Safe. Starting to feel like you are using me,\" he smirked.\n\nI pulled back and looked down again. \"I... like it when you hold my hand too. It feels nice. I like it when you are close.\"\n\n\"I like it when you are close too,\" he said gently, then opened the book and turned on the tablet. \n\nI peeked up at him and he was smiling slightly as he found where we had left off.\n\n\"You should lay down,\" I whispered, unable to talk louder. I didn't trust my voice just now. \"Get some sleep.\"\n\n\"Maybe. Maybe I need someone close to keep me warm. Safe. Stay close.\"\n\nA smile made my lips twitch as I stared hard at the pencil in my hand. I got up and moved up to the head of the bed and sat down.\n\nHe set the book and tablet on the other side of me, then laid down with his head in my lap. I curled around him and he reached around me to hold my hip, like he would hold a pillow at night. I started translating, playing with his soft hair when I was searching for a word.\n\nIt was more than pleasant. I liked it and I kept looking down at his face. His lashes on his cheeks, his full lips and peaceful expression. He was beautiful. Had I thought he was ordinary at first? He was handsome and so perfect.\n\nI traced a finger down his jaw and along his ear, feeling the soft skin, then down his neck before running my fingers into his hair again.\n\n\"That feels amazing,\" he rumbled.\n\nI jerked my hand back.\n\n\"Don't stop, I like it.\"\n\nI touched his hair again, feeling tense. \"I thought you were asleep?\"\n\n\"Mmm. Hard to sleep holding you so close like this. You feel good, makes my mind wander to other things.\"\n\n\"Other things?\"\n\n\"How your lips would taste. How your bare skin would feel under my hands. The sound of your blissful sighs in my ears. The smell of your excitement as I...\"\n\n\"Sam!\"\n\nHe chuckled. \"You asked. I can hear and feel your heart racing. Now you are thinking of all those things and imagining.\"\n\n\"Go to sleep!\" I told him, my voice choking.\n\nHe grinned and squeezed me tighter with a deep sigh. He seemed to go to sleep, but now I was tense. My mind kept flitting to the things he had said and lingering, then I would panic and wonder if he was awake and somehow knew what I was thinking. \n\nTo my horror, he did finally wake and sat up, yawning. He looked at the paper and tablet and his eyebrows climbed as he looked at me. My face was burning with shame. I had gotten next to nowhere, my mind focused so hard on him and the things he had said. His mouth twitched slightly and he gave me a smug smile.\n\nI jumped up and fled to the stairwell. \"It's dinnertime, I think,\" I breathed, unable to look at him. I shot down the stairs, but he caught up with me at the bottom and took hold of my hand to lead me down to the table.\n\nI didn't mind the half portions, I didn't need much. What I did mind was feeling like everyone was watching me and knowing what I was thinking. They tried to ask Sam questions, but he kept answering in annoyed monosyllabic answers.\n\n\"Let me eat!\" he finally growled.\n\nEveryone went quiet a moment, then started talking softly to each other.\n\nSam hardly waited, standing as soon as he finished. I was already done, so he grabbed my hand and started to lead me upstairs. I tugged on his hand and pulled him to the library. \n\n\"Elliot?\" I called into the seemingly empty room. \"You need to go eat! It's dinner time, ok?\"\n\nI let Sam lead me back upstairs, but the light was waning now. He looked outside and looked torn. \"This is the last night,\" he said apologetically, turning to look down at me. \"Then I can stay every night until the next full moon.\"\n\n\"It's ok, I'm ok,\" I said softly.\n\n\"It isn't. Mia, I can feel your loneliness and sadness already. Smell your fear. I hate that I can't stay.\"\n\nI shrugged and half smiled. \"Maybe you can shift here and stay.\"\n\nHe gave me a wan smile. \"Maybe if I was small, like the old lady. My wolf is big and doesn't like being closed in.\"\n\n\"I understand,\" I said quickly. \"I was just joking really.\"\n\nHis sad smile said he knew I was lying. His eyes searched mine and I felt my heart speed up. He really was so beautiful! \n\nHe looked down, then moved closer and gave me a small hug. \"I'll be here first thing, ok? Sweet dreams and don't leave the tower, ok?\"\n\n\"Ok, thanks. Have fun? Is that a thing? Is it fun?\"\n\n\"It is,\" he nodded with a smile.\n\n\"Have fun then.\"\n\nHe slipped away and I went to my bed to watch him in the waning light. He walked to the edge of the woods and I saw him shrug off his jacket, then pull off his shirt. When he started undoing his pants, I spun away and ducked down.\n\nOf course he had to take his clothes off! Wolves didn't wear clothes. I swallowed hard, thinking about his bare back and shoulders as he had moved. I fell back on my bed and hid my burning face behind my hands as I smiled against my will. \n\nI actually giggled as I curled up in my blankets and imagined he was here. His hand moving my hair as he looked down over my shoulder at me and leaning in to kiss my cheek.\n\nI rolled over quickly, like that would stop the little fantasy.\n\nIt didn't. \n\nI fell asleep with his lips on my skin, whispering lovely things to me. \n\n\"Mia! Mia! Help me! Help me!\"\n\nI sat up and looked at a terrified Elliot in the moonlight. I rubbed my eyes, trying to shake sleep off. \"Elliot?\"\n\n\"There's something in my room! There's... SOMETHING in my room!\"\n\nImmediately, my mind caught on what Sam said earlier about a forced shift. Luke had been forced to shift and whatever he was was laying there disoriented and apparently terrifying to Elliot.\n\nI jumped up and started to the stairs. \"It's ok, Elliot, I will go see what it is. You stay right here until I come back!\" I called. I hurried down the hall to the open door and went in, looking around the room. It seemed empty? The beds all empty, no one there at all. \n\nI started to turn and a hand grabbed me by the hair as another clamped over my mouth.\n\n\"Fucking bitch!\" Jeremy hissed in a whisper. He forced me down to the floor as I whimpered in terror. He straddled me, pinning my arms to my side, then moved his hand quickly, immediately replacing it with a cloth in his other hand. I tried to scream as he shoved it into my mouth, then tied it in place. I shook my head, trying to plead with him as tears streamed down my face.\n\nHe shimmied back and started ripping my dress down the front, further and further, wider and wider as he wriggled down. When he was far enough I could get my hands free, he caught my wrists and tied them together. He flipped me to my stomach and pulled my hands up, tying them to the leg of a bed as I screamed again and again, the sound too muffled to hear even in the next room.\n\nHe continued ripping my dress until he had it completely off of me, then yanked my underwear off too as I kicked at him.\n\nHe grabbed my ankles and shoved them wide as he moved up between them. He landed an open handed smack on my ass, then another and another. \"Bitch! Sicking your fucking DOG on me! Telling people your bullshit stories! You were fucking into it! I should fuck you in the ass. Guess what, cunt? It's a new world order now! We are in charge here now. Just you fucking wait, bitch, you will see. We already took care of that mouthy english fucker, the dog is next! You will be BEGGING me to keep you to myself and fuck me whenever I tell you to. Suck my cock every time you see me. Just you wait and see!\" he hissed in my ear as he pulled his own clothes off. \n\nHe moved down and squirted something slimy and cold between my legs and I squealed in horror, trying to writhe away. He didn't wait, he half fell on me and pushed his cock to my slit, shoving in with ease with the lube. I cried out in pain and shock, disbelief as I panicked.\n\nHe rammed hard and fast, pounding into me like a jackhammer as he growled and grunted in my ear. \n\nPleasure, hot and overwhelming surged up in me and I stiffened as my eyes went wide.\n\nHe groaned, then his cock was throbbing inside me and I felt him spill his hot seed into me. He pulled out and grabbed my hair again, jerking my head back. \"Now you will learn you fucking lesson. Beg me to keep you for myself.\"\n\nHe let me go and got up and left, leaving me tied there. I tried to wriggle up, get my head close enough to my hands so I could until the gag.\n\nHands grabbed my hips and yanked me back, then lifted me so I was forced to my knees. I cried out in confused horror as another cock was pushed to my slit and shoved in. Smaller than Jeremy, but no less intrusive as whoever it was began ramming into me, his hips making a slapping sound on my ass. I shook my head, trying to plead for them to stop.\n\nHe didn't until he shoved in and spent himself in me.\n\nIt was not over. Another set of hands grabbed me and yanked me up. A punch to my abused pussy made me scream and try to crawl away. \n\nThe cock that plunged into me was huge. Much larger than Jeremy and I screamed piteously as it slammed into my inner wall. He began sliding in and out rapidly, a fist yanking my hair back. \n\n\"Stupid little bitch,\" How grunted. \"You never should have fucked with my boy.\"\n\nHe let me go and began ramming faster and harder until I was screaming and panting. After a few minutes, the pleasure reared up again, making me go rigid again as I whimpered. I closed my eyes, ashamed and horrified as it climbed and climbed, trying to suppress it somehow. It wasn't working. The feeling built and built, the pressure more than I could bear and I cried out in a pleading pant as I tried to find relief.\n\nMy body locked up suddenly, my muscles tightening all over my body as the bliss exploded between my legs and I groaned as all of that pressure released with the explosion of ecstacy.\n\n\"Oh... fuck... such a fucking whore! Jesus that was hot. Still gonna pretend to be a prude, bitch?\"\n\nHe pulled out and I realized somewhere in there he had come too. I collapsed, trying to breathe and not pass out.\n\nHe left, but I had no respite as more hands grabbed me and spread my legs wide. I had no fight left in me, I just sobbed as the cock pushed into me and began pumping quickly.\n\nWhoever it was, they didn't last more than a few seconds, grunting, then pulling out and leaving.\n\nAfter a few more minutes, there was a hand in my hair again, yanking my head back. \"This will be your new normal, Mia,\" Jeremy sneered. \"Unless you decide you want to be mine alone. I have wanted you for so long and you were such a cunt to me. You want me to protect you, or you want to be the new cum dumpster? Either way, I will be fucking you as much as I want. You decide if everyone else gets to fuck you too. Tomorrow I will let them have your ass and mouth. The next I let them try and fist you. You know what that is? When the put their whole hand in your pussy and ass and make a fist and fuck you with it. After that, we find toys. Bigger things to fuck you with. Maybe some wood from the woodpile.\"\n\nI only lay there, shaking my head in terror, sobbing harder.\n\n\"Or would you rather be mine? I would fuck you and not be too rough. Make you enjoy it. Eat your pussy and make you come for me. Hold you on my lap and show you affection, kiss you, make you happy. You want that? Mia? Nod your head. If you don't I am going to assume you want the other and I leave you tied here and let all the guys here use you. Fuck you whenever they want. Every hole. Slap you around, hit you, hurt you. Or you can nod your head and agree to be mine.\""
    ],
    "authorname": "gabthewriter",
    "tags": [
        "noncon",
        "nonconsent",
        "reluctance",
        "supernatural",
        "fantasy",
        "magic",
        "romance",
        "romantic",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-cursed-island"
}