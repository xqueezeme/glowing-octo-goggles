{
    "title": "The New Principal Ch. 11",
    "pages": [
        "I came back to hazy consciousness gradually as I looked down to see the aftermath of our lovemaking. I was on my back and Veronica was on my right, with one arm draped over my chest. She was gloriously nude, a lithe goddess, clinging to me. Her hair was tousled all over, covering her face with strands over my chest. I could feel her body touching me all the way down to her foot that was pulled up on my leg. And her smell was incredible. Her sexual musk still hung in the air, but I could also smell something else that was natural to her, something in her hair maybe? It seemed to resonate in my mind, comforting and just right.\n\nI lazily brushed her hair away from her face so I could study her more. As I pushed the hair back behind her ear though, she started rustling. She kept her eyes closed, but she made a delightful little purring noise and writhed her body against me. Her right hand rubbed across my chest then stopped. Eyes still closed, she closed her fist, grabbing tight onto a handful of my chest hair. \n\n\"This is new.\" She plucked a hair.\n\n\"Ouch.\"\n\nShe poked at my chest with her finger.\n\n\"That is also new.\"\n\nShe tilted her head up and opened one eye just a slit as if she were afraid of what she was going to see.\n\n\"Hi there.\" I smiled.\n\n\"Hi.\" Her eyes opened and she smiled the most beautiful embarrassed smile, and her left hand flailed around to find a sheet to pull up over her body. Finding one, she pulled it up over her chest, then higher, over her mouth, and then all the way over her head. \n\n\"That's hardly fair.\" I reached over and tugged the sheet down to show her eyes. \"I was enjoying the view.\"\n\nShe looked at me, clearly trying to figure out how to handle this situation. \n\nI leaned down to kiss her on her forehead. Then I pulled the sheet down past her nose and kissed her nose.\n\nShe giggled a little bit.\n\n\"Should I go further?\"\n\nI could see the smile from the way her eyes crinkled up. After a brief pause, she nodded. \n\nI pulled the sheet down past her chin, and I looked at those sensual lips. She closed her eyes, and I leaned down and kissed her chin.\n\nShe laughed again, this time a full deep laugh. \"A little higher there, bullseye boy.\" Her eyes opened again and sparkled in delight.\n\n\"Why don't you help me out here?\"\n\nShe looked at me for a second, then she let go of the sheet and put her hands on my shoulders as she crawled up on top of me. She looked me dead in the eye and lowered her mouth to mine. \n\nWe kissed long and slow. My hands explored her silky smooth back without urgency, occasionally drifting low enough to slide over her butt.\n\nFar too quickly, she pulled back and sat up on my belly. She arranged the sheet around her in a wrap, then with a dramatic flourish, she tossed the end over her shoulder. She looked like a toga-clad goddess. \n\n\"Oh, my Aphrodite, what would you have of me?\" I gazed up at her in adoration, and she smiled quickly before assuming a condescending gaze, proper to a goddess toward her supplicant.\n\n\"What would I have of you? Well, I think I've already had of you.\" Her eyebrow arched high. She spoke in regal tones, \"Ben Lee, I, your goddess, have a demand of you.\"\n\n\"Command me, my divine beauty.\"\n\nHer royal posture drooped a bit and her gaze softened. \n\n\"Ben, this was really incredible. In so many ways, it was incredible. I mean, I can still feel...\" She shook off the thought. \"I need to figure things out. But I want to make sure we're straight here. I've got no regrets on my end at all. I'm so happy that I got to pounce on you. I can't tell you how much I needed that, but I don't... I mean, I'm not like that. I'm not looking for a relationship, I'm not even sure I can do relationships... You seem like a great guy, but I don't know anything about you. I just need a little space. God, that sounds like I'm such a bitch...\"\n\n\"No, no, no...\" I interrupted. \"You're right, this was incredible, but it was like a force of nature. We were both out of control. I'm glad though. I'm so glad you pounced me too.\" This got a nice smile from her. \"But I totally understand.\"\n\n\"I may actually be a bitch though.\"\n\n\"I doubt that, but hey, maybe it's not bad to be a bitch.\"\n\nShe considered that for a second, then regained her regal posture, sitting up straight on my stomach.\n\n\"Your goddess has a command.\"\n\n\"Anything.\"\n\nShe grinned slightly at the thought.\n\n\"Leave me. Return to your job. I will consider your request for aid.\"\n\nShe hopped off me and stood to the side of the bed, watching to see how I would react. \n\nI slid off and stood up in front of her. \n\n\"I'm sorry, I'd never forgive myself if I didn't do this when I have the opportunity.\" I moved to her and reached my arms around her waist, pulling her tight to me. I leaned in and she tilted her head in anticipation of the kiss. I kissed her with just a hint of passion, and I felt her arms wrap around me and squeeze me into her.\n\nI pulled back and looked her in the eyes, searching for any trouble to come. The main feeling was a whole-body warmth and contentment. The lust that had been taking over her entire mind before was still there and still very prominent, but it only occupied a portion of her mind now. She was happy and comfortable, but very conflicted about those feelings. She was anxious about today, and doubly anxious about me, but on the whole, she was regular woman basking in a lovely freshly-fucked glow.\n\n\"You really look the part, Aphrodite. You really rock a toga.\"\n\nI gave her another kiss, this time on the forehead, and then lost any dignity I might have possibly shown by stooping to scrounge around on the ground for my clothes. She stood still, watching my antics with the occasional giggle and even a gentle kick to the tush as I knelt down to dig a shoe out from underneath the bed. \n\nI looked a hot mess as I left her house, everything wrinkled and more than a couple stains on my shirt that I wouldn't be able to explain easily. But I was wearing an ear-to-ear smile. \n\nI checked my phone as I left to discover that it was already past six. Kimberly had sent me an email to let me know that she was going home, but that she left a couple important proposals on my desk for my approval. She noted they were \"paper only - no digital files\" which seemed a bit odd, but it was the PS that truly gave me pause: \"Long meeting with Veronica? Hope that is good news!!\" I know it's dangerous to read too much into emails, but I didn't think Kimberly was one to use exclamation points in work emails. \n\nSurely, she couldn't suspect anything?\n\nSince it was only a few minutes away, I walked past the Green House and over to my office. The papers Kimberly had left me were just approvals for some of the renovations. I okayed the dormitory work that she had been so happy about. There were still some design choices to make, but I was happily surprised at the cost estimate. \n\nThe second one was a combination estimate for the pool and the athletics center. It turned out that reopening the pool was going to be fairly simple and not too expensive. The athletics center was going to need more work: locker room upgrades, returfing, and buying new gear to support all the Olympic sports. We couldn't make do with second-rate javelins, could we? It was a bit expensive, but it basically seemed in line with what I had expected, so I flipped to the approval page. I was going to sign, but there was a sticky note covering the signature blank. It read, \"Talk about this tomorrow. -K\"\n\nWell, ok, fair enough. That could wait.\n\nFinally, there were a couple of approvals to release funds for purchases. One was for a big spend on new computers for the library and teacher's lounge, and the other was to get the money ready for the advertising campaign. I signed the first without hesitation, but the second one I wasn't so sure about. If things went well, Veronica would be in charge of that, and I wanted her to have full autonomy. In the end, it looked like this would just make the funds available without restrictions, so I ended up signing that one too.\n\nI put all the paperwork in a secure folder and addressed it to the bursar. \n\nThere were still a few things I needed to get up to speed on, so I nestled down in the big chair and got to reading. By the time I went home, I felt like I finally had a fair grasp of the way the school worked. Again, I was struck by how odd Bright Hall was, but also at the potential it had. With some slight adjustments, we could really do great things here. If we were going to make some big changes, it would be best to start soon. Shaking up the system would be a good thing.\n\nThe next morning, I woke up early and full of energy. I suppose that post-sex nap was good for me. My foot felt fine, so I figured I'd try another short run. I was disappointed that this time I didn't meet anyone on the trails, but perhaps that was for the best. I had time for a shower and breakfast, and even got to the office a bit early.\n\nNot earlier than Kimberly, of course. \n\nShe was in her office, and seemed locked into her monitor. I called out, so I wouldn't be sneaking up on her. \n\n\"'Morning, Kimberly!\" \n\n\"Oh! Hello, Principal Lee! How did things go with Veronica yesterday?\"\n\nI tried not to spend to much thought on reading the tone of her question. \n\n\"Really well, I think. Gimme a sec to get situated and we can have a morning strategy session.\"\n\n\"Yes, sir!\"\n\nI got into my office and started to do a little triage on the day's tasks. Today looked like a light day, but I knew the next weeks would be more about responding to crises than careful planning running smoothly. I was going through some advertising ideas when Kimberly poked her head in the doorway.\n\n\"Are you ready, boss?\"\n\n\"Yeah, c'mon in, grab a seat.\" My office was still a bad space for meetings. The easy way was for me to sit behind the gargantuan desk in the gargantuan chair and look down on the other people from above like the Wizard of Oz. The other option was for me to get out from behind the desk and sit in one of the visitors' chairs and share the little tea table. \n\nI opted for the tea table. I needed to work on making sure Kimberly felt like a major part of the decision-making here, and that desk wasn't helping. \n\nWe both got awkwardly situated, and a quick glance at her, no trick required, showed me that her curiosity about my meeting with Veronica was at the top of her mind.\n\n\"So?\"\n\n\"Like I said, I think the meeting went well. I gave her the pitch for what we would like her to take care of, and she's thinking it over. You are right when you said she's hard to read. It seemed like she reacted well, but it's hard to tell. Anyway, she said she'd let us know. Do you think you could do a follow-up call with her this afternoon?\"\n\n\"No problem.\" \n\nI was taking pleasure in watching her inner struggle. She had been here long enough to enjoy the small town gossip. She clearly wanted more details, but didn't think it was her place to ask more questions. She had mentioned that Veronica has some rumors surrounding her. Now I wondered what those rumors were.\n\n\"Right...\" She looked down to her screen and typed out a note. \"I'll call her today and see if I can get a timeline on her decision. How flexible do you want to be with her?\"\n\nI bit my tongue, because I had strong opinions about Veronica and flexibility. \"I think we need an answer very soon. If she's going to be leading the ad campaign, that needs to start getting off the ground by next Monday so we can see at least some effect through the summer term. Feel free to lean on her a bit.\" Again, I had to restrain myself from thinking too much about my dream memories of exactly how I'd seen Kimberly leaning on Veronica.\n\n\"Ok, will do. Actually, there is one thing that I wanted to run by you... well, it was Jennifer's idea. I think it's a great idea, but it will impact the gym renovations and the advertising, and, well... everything. I want her to be the one to propose it. She said she would be today.\"\n\n\"So, she's coming by? When did all this happen?\"\n\n\"She came by yesterday afternoon while you were over at Veronica's.\" The southern twang came back into her voice, as her curiosity rose to the surface. But with a feat of self-control, she moved on smoothly. \"I explained a little bit about our current situation, and she seemed to get really worried about the school. We had a good long conversation. She agreed to come back right on the spot. If you're still willing, we can sign her paperwork today.\"\n\n\"That's great news! Having her on board will hopefully make things a good deal easier. And she's coming by this today?\"\n\n\"Yes, she'll be here in a couple of hours. Probably around noon or so. Most of the things we need to talk about will need to wait for her proposal, so we're at a bit of a block there. There is something else, sort of work-related, but really important, that we need to take care of in the meantime.\"\n\n\"Alright, I'm game. What's up?\"\n\n\"Well, I think it would be a good idea to do a little PR tour. The exams are scheduled for today and tomorrow. In fact, the first round will be starting soon. So I thought it would be good for us to go out to the campus caf\u00e9 and sit for a while and let the student body gawk at the new principal.\"\n\n\"Huh? I'm not sure I follow.\"\n\n\"Everyone knows that you're here. They've all heard about your morning runs and your early nights and all sorts things about you, but it's mostly hearsay at this point. We need to make sure you are seen as approachable and friendly. Someone who isn't going to be handing out demerits willy nilly.\"\n\n\"Willy nilly?\"\n\nShe ignored my teasing. \"So, thirsty?\"\n\n\"I'm not sure I'm comfortable about being sure a subject of gossip, and how do people know when I'm going to sleep?\"\n\nAs I whined, I stood up and slung my jacket on. It was getting a little warm for it, but I knew I didn't want to appear even a little bit sloppy. Had to keep up appearances as a stodgy old coot. \n\nNo surprise, but again, Kimberly's idea was a good one. If I was going to be making big changes around here, I could use all the support and good will I could muster.\n\nKimberly led me out and closed the door behind us, and we started on our way to the caf\u00e9. It was a pretty ratty place at the side of that ugly cafeteria. There was just an awning and a few tables. I thought again about how the cafeteria was low priority for renovations and wished that wasn't the case.\n\n\"The best thing is just to assume everyone knows all of your dirt. That way you'll never be surprised when anyone mentions something. Also, if you assume you're being watched all the time, you'll never do anything you wouldn't want people to know about. I personally overheard one of the students making comments about your style in running gear.\"\n\n\"Can't a guy have any secrets? And my running gear is fine.\" \n\nI did wonder about Kimberly's opinion about being watched all the time, considering that webcam feed I watched on my first night here.\n\nAs we walked across campus, I finally got my first look at the students. They looked nearly identical in their uniforms. Green jackets, white shirts, and long dark skirts for the women and dark trousers for the men. You could mark some of them by height or hair color, but that was about it. The long skirts hid hips and legs, and the bulky jackets reduced all but the most gifted women to anonymous and nearly androgynous sheets of fabric. The men just looked like your standard dude-bros at a country club. They might as well be wearing those straw boater hats. \n\nWe got our coffees and sat down to watch the flow of humanity.\n\n\"The uniforms are really bad.\"\n\n\"Oh, they aren't. Like I said, it's a unity thing.\"\n\n\"No, I mean, the idea of the uniforms, I think I can see the good of that, but they're just badly made. Doesn't anyone tailor them? Nobody looks like they are wearing clothes that fit.\"\n\nAs if on cue, a group of women walked by, led by a short but incredibly busty student. It looked like her jacket was being torn apart, and she couldn't have been comfortable.\n\nKimberly saw where my eyes were aimed and she actually chuckled\n\n\"Ah, that's Louise. She... yeah. Her jacket is a problem. The regulations say that you can't tailor the uniform or make your own, that way everyone is on the same level field. If the uniforms don't fit quite so well, at least you know that it's the same for everyone.\"\n\n\"But it's not such a problem for some girls. For some of them, it ends up looking almost stylish. Who sells the uniforms?\"\n\n\"Downtown, there's... Ah. Well that is interesting. I hadn't thought about that. There is only one store that sells the official uniform...\"\n\n\"Ah, well, there you go. Ten-to-one, the owner of that store struck a deal with the school ages ago. The school says students have to buy their uniforms there and somebody probably got a kickback somewhere. As long as we don't allow them to tailor them or make their own, the store wins big.\"\n\nI was just talking out my ideas, but based on Kimberly's reaction, I has struck some kind of truth.\n\n\"You may have something there...\"\n\n\"Right? The owner of the store is the old principal's... what? Cousin? Brother-in-law? Secret lover?\"\n\nKimberly nearly choked at that last bit. \"No, nothing like that, but I think I could see how things might have been working.\"\n\n\"So, what if you call the store and tell them we're looking at dropping the uniforms entirely. Then when they push back, you could say that the other option would be to keep the uniforms, but allow students to buy from anywhere they like. Maybe they could be convinced to provide alteration service at a low cost? They would still end up with basically all of the sales, and we would get students much more comfortable in their clothes. What do you think?\"\n\nShe was really only half listening, but obviously gotten the gist of what I was getting at. \"Yeah... I think we might be able to pull off sumptin' like that...\"\n\nShe was more aware and much smarter than I was about these things. I'd let her handle this her way. I smiled and let her think things through while I looked back out over the campus. \n\nThe view really was spectacular. With our backs to the ugly cafeteria, all of the buildings looked beautiful. There were old lamps lining the paving stone pathways. The trees and grass were a vivid green and the students were bustling around with nervous purpose. \n\nEven though we weren't technically a college, the scene was exactly that. It had been a long time since I had spent a good amount of time on a campus rather than a high school, and I had forgotten how wonderful it was to just sit back and watch young folks going about their business. Such a wonderful energy to be a part of. \n\nWhile I was lost in my reverie, a squad of girls came up to our table and stood, nearly at attention, waiting for one of us to acknowledge them. \n\nKimberly noticed them first.\n\n\"Oh, girls, sorry, I didn't see you come up. How are you all?\"\n\nOne girl in front seemed to be squad leader, elected to speak for the group.\n\n\"Ms. Adams. We... um... we wanted to ask...\"\n\n\"Oh, girls, this is Principal Lee. He just got here this week, so don't go bothering him with all your troubles.\"\n\n\"Ah, Hello, Principal Lee. I... uh, we...\"\n\nAnother girl took over for her flailing partner.\n\n\"Principal Lee, we just really want to know what's happening for summer term. We know all the teachers left. People are saying that you are going to shut the whole school down and turn it into some kind of vacation hotel. There's a girl on my floor who says she's getting kicked out Friday after exams so they can turn her room into a sauna!\"\n\nKimberly almost stood up, and I could tell she was going to give them a dressing down. I cut her off as quickly as I could without being too rude.\n\n\"Girls, you should know better than to listen to rumors. We haven't been the best at messaging, but I can tell you that we are not closing down. We will have a summer term, although it might start a week or two later than usual. We are not becoming a hotel. When you go into your exams today, you will see that almost all of the teachers have come back, and we're even bringing in some folks who left a while back.\"",
        "I swear I heard one of the girls whisper, \"Miss Lashgari?\"\n\n\"The sauna's not a bad idea though. We'd put that in the gym though, not in the dorms.\" They weren't sure how to take my rather pathetic attempt at lightening the mood. \"We are renovating the dorms though. We're going to get you rooms that you are proud of and happy to live in. To do that, we'll be rotating people from old rooms to renovated ones. It's a bit awkward, but the sooner we start the renovations, the sooner you'll see results.\"\n\nThe girls stood there awkwardly.\n\n\"Does that help?\"\n\n\"Um. Yes. Thank you, Principal Lee. I'm... We're sorry to cause trouble. It's just that I really love it here, and if I had to go back home, things are... I'm not sure that I really could...\" She started to break down and looked like she might start crying.\n\nI stood up and signaled to Kimberly that it was time to head back to the office. I motioned her to the student who had been talking. After a split second, she caught my meaning and put her arm on the girl's shoulder. I thought she needed more of a hug, but that would do, I suppose.\n\n\"Don't worry about it. My main goal here is to make sure things are all set up for all of your success. We're going to make this place even better for all of you. We're going to take care of you.\"\n\nWhen it was clear we were leaving, I swear the girls nearly came to attention. That kind of thing made me very uncomfortable, but perhaps their obedience would be useful in accepting the changes to come.\n\nKimberly and I didn't talk on the way back to the office. My attention was on the whole campus as we passed through it. I was energized just by watching and talking to the students. It really brought home the importance of what we were trying to do.\n\nWe were almost back to the administration building when I got an idea.\n\n\"Kimberly, when do you think Jennifer will show?\"\n\n\"Probably another hour or two? We didn't set a specific time.\"\n\n\"I'm going to take a quick tour through the class building and see how the exams are starting out.\"\n\n\"Good thought.\"\n\n\"Would you like to join me?\"\n\n\"I'd like to, but I need to get back to the office. Piles of paperwork.\"\n\n\"Remind me to add finding an assistant for you to our to-do list.\"\n\n\"Ha ha.\"\n\n\"I'm very serious. We need to free you up for more strategic things.\"\n\nThere was that tilt of her head that I was getting familiar with.\n\n\"Thank you. I'll see you back at the office then.\"\n\nI swung around and aimed myself toward the class building. There were more students milling about than I had seen elsewhere, and their anxiety was palpable. As I walked up, someone opened the main door and they flowed inside. I watched for a while, then followed in behind them.\n\nSomeone had at least opened up all of the rooms on the ground floor, and it looked like they had been cleaned up a little bit, but the overall feeling was still pretty musty. We were going to need a more thorough cleaning between terms. \n\nI peeked my head into each of the rooms and made sure I was seen by the students and the proctors. I assumed the proctors were teachers, but I didn't recognize anyone. I would need to have an all-hands meeting to introduce myself. Next week, maybe? No, Kimberly told me that everyone disappears during the break between terms. Beginning of the summer semester then, I guess.\n\nAfter passing through all the classrooms on the first and second floor, I was satisfied that the exams were starting off smoothly at least. It would be a small, but significant achievement if we could finish off the spring term without too much embarrassment. \n\nOn my way down the stairs I passed by that lovely carved wooden door to the library. It was locked last time I was here, but maybe it had been opened up now. I would love to take a look inside.\n\nHappily, the door swung smoothly open. \n\nI walked inside and I was struck dumb. It was gorgeous. Beyond the alcove with a librarian's table for checking out books, there was a high arched ceiling with painted panels and carved wood pillars lining the walls. The opposite wall even had a massive floor to ceiling stained glass window. How had I not seen that from the outside? Had this been a chapel? If so, it had been retooled with loving care. The main room had imposing heavy wood bookshelves in tight rows to all sides. In the center of the room were several long wooden tables with beautiful old wooden chairs. There were even a few overstuffed lounge chairs scattered about.\n\nI walked around a bit and took in the beauty of the room. The rest of the building was well-built but basically utilitarian. This library was just crafted in a way that was orders of magnitude more thoughtful and loving. It was very much in the style of the administration building. \n\nI thought it was a bit strange that students weren't using it to prepare for exams, but maybe they were used to it being locked up. What a pity that this room was not being used. \n\nIt was also odd that the book selection was limited, and many of the shelves were only partially full. It was mostly reference books: dictionaries and encyclopedias and the like. All the sorts of things that the internet made fundamentally outdated. It was easy to see that they hadn't had a real librarian here in a long while. \n\nLike so many of the classrooms, the library had been closed up for a long time. It seemed that someone had come through and given everything a quick wipe down, but there was still dust in the corners and the wood needed upkeep. It was a pity to see the room uncared for. \n\nI was about to leave, with more questions to ask Kimberly, but as I passed the front desk, I nearly jumped in fright. Behind the desk, inhumanly silent, and statue still, stood Veronica Rai, watching me.\n\n\"Goddammit! What the hell!?\"\n\nShe broke out in high pitched laughter. It was so joyous that my adrenaline-fueled panic melted away. \n\nShe pointed at my face and kept laughing, her face contorted in delight at my clearly hilarious reaction. \n\nWhatever my face looked like had tickled her just right. She was running out of breath, and as she gasped to fill her lungs, she let out a maximum decibel snort before breaking down into laughter again, now half aimed at her own snort.\n\nThat snort was glorious. I couldn't help but join in. There she was, it was obvious that this was her element. She seemed so at ease here, but she was making enough noise that would make any stereotypical librarian would be clutching their pearls in horror. \n\nShe was also dressed like she was yesterday, much more casually than anyone else I had seen on campus. She was wearing a white poufy loose peasant blouse, and dark jeans with black ankle high boots. Her hair was arranged, but only loosely, and it hung down loose, well past her shoulders. I assumed this wasn't her working outfit, which I suppose made sense since she hadn't been hired on.\n\nShe finally started to catch her breath, after a couple more adorable little snorts. By that time, she was leaning over on the circulation desk looking up at me.\n\nThis left her in a very compromised position, and I couldn't help glancing down to see the loose shirt was hanging low. I was far enough away that I didn't get a good look down her blouse, but I could tell she still wasn't wearing a bra, and I liked what I saw.\n\nWith a snap, she regained her composure and stood up straight. I looked back up to her face. \n\n\"Naughty, naughty, Mr. Principal. That's the second time you've tried to pull that trick. Just because I'm not endowed like a cow, like some people around here, doesn't mean you can just look whenever you please.\" She winked, and her wide smile let me know that if I was in trouble, it would be a very enjoyable trouble.\n\nEven though I thought I was reading her well, I wanted to make sure we were on the same page.\n\n\"I'm sorry! I don't want to assume anything...\"\n\n\"Feh! Boys... You are far too easy to play with. We'll deal with all that later though. What do you think of my library?\"\n\n\"Well, Bright Hall's library is just incredible. It's gorgeous, even if it doesn't seem to have many, er... books. But, anyway, it ain't yours unless you agree to come back.\"\n\n\"Yeah, yeah... I'm 90% there. I've just got a couple of conditions.\"\n\n\"I'm listening.\"\n\nShe dropped the playful demeanor and spoke with determination. \n\n\"Number One: 100% autonomy. I'll run the library and the tech for the school, but nobody tells me what to do. I need to run my own little kingdom here with a deep moat. No committees, no special favors for alumni or donors or any of that crap. And no one tells me what books to put on the shelves or what books to take down.\"\n\n\"Well, I can't guarantee all of that, really. I'll be your only boss, so that's easy. You won't report to anyone else. I can guarantee you'll have a voice in all decisions about your... kingdom, but I don't want to say I won't ask you to do things in line with your job. As for the books, I'm sure I'll have requests for acquisitions, and the rest of the faculty will too, but I agree you should have a veto on that.\"\n\n\"Hmmm... Number Two: I'll teach the classes you mentioned: research methods, basic coding, and I'll even run a maker space if you can find the funding to kit it out. But, my condition for that is that I'll need scheduling authority. I only teach when I say I'll teach. I may need to have up to a week on my own with no interruptions. The classes will get taught, and completely, but on my schedule. And they'll be taught in the library classroom, not the regular classrooms.\"\n\n\"Ok. That's a pretty tall ask. Can you give a justification?\"\n\n\"Not right now, no.\"\n\n\"Do you have another job that will cause conflict here?\"\n\n\"Not exactly. I can promise that I have nothing going on that will take away from my work here.\"\n\n\"Well, we can try it out your way. I don't think that will be a problem as long as everyone else doesn't want to follow your example. As long at the material gets taught, I think we can be flexible on the timing. Anything else? What do you say, are you coming back onboard?\"\n\n\"I'll let you know in a little while. First, I think I should let you in on a little secret.\" She spun around and came out from behind the desk. She walked over to a door that I hadn't noticed during my walk.\n\n\"You haven't seen the basement yet, have you?\"\n\n\"I didn't even know we had one.\" I followed behind her, through the door and down a flight of stairs that seemed longer than standard. We were going down deeper than a single floor.\n\n\"The basement runs under the entire building, and even some other places...\"\n\nThe stairs ended onto a hallway with doors off to either side.\n\n\"Here's the library classroom.\" She opened one door. I looked inside. It was fully decked out in the style of the main library room.\n\n\"We've got some storage rooms. That's where our regular collections seem to have been moved. I can't understand why, but I'll get them upstairs as soon as I can. That's also where our special collections are. I'll have to show you those another day, lest you get distracted.\" She looked back at me with a playful grin that I couldn't quite read.\n\nUsing an oddly large key, she struggled to open another door which led to a long hallway. \"Down there, things get really interesting. That's where the secret is. I don't think they've even opened this door in decades. Maybe they don't even know where the key is.\" Again, she smiled archly as she put the key back in her pocket. \n\nShe closed that door and continued down the main hallway.\n\n\"And down here is my old office.\" She led me into a small but nice office space. \"I'll need to update and upgrade all the computers and network infrastructure all over campus, but I'll have to start here. This will be the throne room of my little kingdom. Assuming I do come back that is.\"\n\nShe leaned back onto her desk to watch me enter the room. I was struck again by her beauty. If it weren't for that playful grin, those high cheekbones and flawless jawline would be incredibly intimidating. As it was, the way she smiled at me drew me in closer. With every step I took, her eyebrow arched, and her mouth got wider and wider in mock offence.\n\n\"Is there anything I could do, to... encourage you to come back?\"\n\nShe reached out and grabbed my tie. First, she used it to hold me back. \"See? So easy to control a man. You all have handles everywhere.\"\n\n\"If you are after control, there are better things to grab onto, don't you know.\"\n\nShe giggled. \"Maybe later.\" She still held me at a distance. She got serious again. \"Is this going to be a problem? I'm... This is not how my relationships have usually gone. Mine have always been kind of a mess. Is this going to be a mess? If this is even a relationship. I mean... I don't have a lot of experience to go on, but this is a whole new thing to me. I don't want a boyfriend or anything exclusive, but I think we could still have a whole lot of fun. Only if we're both cool with this.\"\n\n\"I don't know what this is, but I'm cool with it. I'm not looking to be exclusive either. Let's just keep things light and fun, okay? But if anything starts to feel weird or wrong, we have to agree to talk it out, right?\"\n\nI looked into her eyes, and immediately saw and felt the flash of my trick connecting us. She seemed much as she did the day before, but maybe a touch more relaxed, a touch more at peace with her own lust. She was a very sexual woman, and her memories of our last romp echoed strongly in her consciousness. Just looking at me was reminding her of our fun, and I could feel her arousal rising. I didn't feel any deception or reluctance, but there was nervousness in her excitement. She wasn't sure what I wanted out of her. She didn't know if she could trust me entirely. \n\nI pushed lightly on her arousal and fed her lust with my memories of touching her body, dragging my hands over her perfect skin, and running my fingernails down her sides. I tried to push the feeling of full hardness I felt when I fantasized about her body writhing on top of me. \n\nShe was reacting to my ministrations. My influence certainly helped, but she was just wired for lust, and she had chosen to open herself up to me. Sex was so fundamental to her identity that even a small push sent her far. It was delightful to watch the heightening arousal roll over her body, the darkening of that already deep skin tone, the little button nipples appearing though that thin peasant blouse, she even started swaying back and forth lightly on her desk. \n\nHer eyes hooded slightly, and her mouth opened just a bit. Seeing her lick her lips, I looked deep into her eyes and tried to push an image of her going to her knees and pulling my cock out from my pants. Her eyes flashed open, but somehow the connection broke.\n\nShe moaned slightly. \"I want to do so many nasty, nasty things to you, right here, right now...\" She hesitated.\n\n\"But?\"\n\n\"No way.\" She laughed with bright happiness. \"You are not going anywhere near my butt with that pole of yours.\" \n\n\"I didn't mean...\"\n\n\"I know what you meant. You are particularly dim today for such a smart man.\" Again, that thousand watt smile flashed. \"I just mean that I need to get back to work. If I'm going to take this place over, I need to get all of shelves restacked and start ordering the new systems for my little control room. I'm sure you saw how pathetic our stacks are right now. Even with the books we've got in storage, we need to rebuild. What we have now is just awful. That simply will not do. Not in my library.\"\n\nAs she spoke, she scooted away from the desk, and walked right past me toward the door. I reached out and grabbed her hand, spinning her around to face me. I pushed her back to the wall and gently raised her hand above her head as I moved in closer to her. I leaned into her, pushing her back against the wall with my body.\n\n\"Oh, you did get yourself worked up, didn't you?\" She reached down and felt my cock through my trousers. \"I nearly forgot how lovely this thing is.\" She leaned her head in and went up on tiptoe to stretch her lips right next to my ear. \"But I can still feel you from yesterday. When we fucked... it was like nothing I've never felt before. And I can still feel how you pushed into me. God, I get wet just thinking about it.\"\n\nI dropped my head down to her neck and started nibbling. I thought about giving her a giant hickey, but that wouldn't be fair. It was too warm for scarves.\n\n\"When I started cumming, it was like my whole body just rippled with it, and it just didn't stop... mmmm.\"\n\nShe responded well and soon grabbed my chin to pull my face down in a kiss. I leaned harder into her, pressing her into the wall. She split her legs around mine and started grinding lightly on my leg. I pushed my hips into her, making sure she could feel my full cock, making sure she knew that it was for her. All she had to do was ask.\n\nBut she reached her hand down between my legs and gave my balls a quick tight squeeze.\n\nI yelped in surprise and hopped back a little.\n\nShe squirmed out from between me and the wall and slid out the door giggling again. \n\nShe sang out, \"Boys are soooo easy!\" She glanced back at me with a seductive smile to make sure I would chase her.\n\nI groaned in frustration and dutifully started after her. She was most of the way up the stairs what I caught up with her. She had stopped at the door, and I came up behind her and wrapped my arms around her waist. I lowered my lips to her neck again and started kissing her all over.\n\n\"Shhhhhhh\" \n\nSo, she could do the stereotypical librarian stuff too, eh?\n\nMy hand slid down her belly and reached over her jeans.\n\n\"Seriously,\" she whispered. \"Be quiet!\"\n\nI stopped my roaming hands and my kisses. And I heard... something? Someone was in the library? \n\nShe swung her arm around us both, grabbing me by the ass and pushing me harder into her from the back. \"Keep right on me. Keep that cock right there.\" As she said that, she wiggled her ass back into my crotch.\n\nBut she still held me tight against her as she stepped up the final step and slowly slid the door open a little more than a crack.\n\nShe sunk lower to almost to the ground at the top stairs and I crawled up on top of her. This way we could both look through to the sliver of light coming in from the main room of the library.\n\nIt took a second for my eyes to adjust to the light, but then I quickly saw what had caused Veronica pause. \n\nThere were two students in the library, and they certainly weren't prepping for their exams. I couldn't see them perfectly, but it was clear that a girl had pushed a boy down into one of the big chairs. She was saying something to him, but even though I couldn't understand her, I could tell that she was trying to convince him of something. He was uncomfortable, looking every couple of seconds back at the main door. Luckily, he didn't think to look in our direction. \n\nFor a moment she stood silent and still, and I got a chance to really look at her. She was wearing a school uniform, but I could tell she wasn't very curvy, but she was quite pretty. She was a tall girl with very short dark brownish hair. She moved so smoothly that I thought she must be an athlete or dancer. \n\nAs I was leering over her body, Veronica started grinding back against me again. I was already hard and she seemed to be enjoying my cock rubbing against her jeans, but it didn't seem to be enough. She reached back and grabbed ahold of my cock again.\n\nMaybe it was a coincidence, but as soon as she got her hands on me, it seemed that the girl came to a decision. She started to walk away, but before my disappointment fully registered, she spun around and looked back at her man with a predatory glare.\n\nThe way she spun made it obvious. She had to be a dancer.\n\nShe spun around again, making her long uniform skirt fly up. She must have unhooked it in the process, because as she spun again, the skirt flew off in an arc, and she was left bare legged in a pair of very cute basic white panties. The green jacket and blouse flew off immediately after, exposing a lovely pair of tits held in place by a practical white bra. Clearly, she hadn't planned to be performing for her man today. ",
        "Only seconds had passed and she stood there in a pile of clothes. For a while, she stayed still, but then gradually she started swaying at the hips. Her arms slowly raised up, caressing her body as they passed over her hips, her sides. They took an agonizingly long path over her breasts, then up through her short hair and up into the air, pivoting and gyrating to the music that only she could hear.\n\nShe continued her dance, gradually gaining tempo and becoming more erotic with each move. The boy in the chair was in shock. He was facing away from us, so I couldn't see his face clearly, but her dance was clearly something he wasn't prepared for, and he kept looking to the door in panic.\n\nAs I was losing myself in the student's performance, Veronica had gotten needier. She pulled her hand off my cock and reached down to her own pants. I heard a quick zip and she arched her butt, bumping me back, and settling her knees on that top step. Then in a flash, her jeans and panties were down around her thighs. She kept her ass up in the air, and her hand reached down between her legs. There was an immediate wafting of the delicious scent of her arousal. \n\n\"Well c'mon there, big guy. You were trying to catch me, well catch me!\" She was whispering, but her voice was deep and throaty with desire. \n\nI might be slow on the uptake, but when I finally figure out what's going on, I can move with speed. I pulled my trousers and underwear down and slid back up on top of her. I ran my cock down between her legs, but under her pussy so I could rub up and down over her slippery folds. With my right hand I reached up under her blouse, now flowing free, and felt for those nipples that I knew were hard-wired for sensual sensitivity. \n\nEven though she could feel me searching, she yelped out loud when I finally got ahold of one and pinched lightly. She froze in alarm, thinking that she might have been heard, but the dancer, now squatting down to the floor and spinning on one leg, didn't seem to notice at all.\n\nI was rubbing my cock slowly and deliberately over the outside of her pussy, kneading her boob and pinching at her nipple when I thought she least expected it. Her hand was working hard on her clit, and occasionally grabbing hold of my cock as it slid over. She was now dripping with her juices, and they coated me completely. She was starting to lose control. After she realized that the dancer wasn't hearing her, the noises that were coming out of Veronica got louder and more insistent.\n\n\"God... fuck... I can't believe we're doing this.\" She was still whispering low. \"I need more... But if you stick that in me... if I feel that thing splitting me open... pushing... into... me... I know I'll just scream...\"\n\nI pulled back and rubbed myself up and down over her pussy, teasing her as I pinched her nipple again.\n\n\"I can't take it... we need to go back down... my office...\" But she was clearly distracted and didn't make a move to retreat. \"Look at her though. She's dancing... like a stripper. She's never done this before. Why now? what came over her?\"\n\n\"Do you like her? Does the librarian want a nice lithe little student of her own?\"\n\nThat clearly hit a nerve. \"I'd never... I wouldn't take advantage of...\"\n\n\"Look at those legs... Don't think of her as a student then. She's just a girl... a hot fit girl who doesn't know how hot she is.\" I started spinning a story to drive Veronica into a higher passion. \"She's a dancer, just look at the way she moves, but she's only done ballet. She's always wanted to dance like this, but she thought it was wrong. And her guy? He doesn't deserve her. He was trying to get out of here. She needs someone to teach her how to use that tight little body, someone who would appreciate her.\"\n\nVeronica moaned in need.\n\nThe dancer faced away from her guy, and us. She dropped down to grab her ankles and show him her incredible tight ass and thighs. She spread her legs a bit more and we could all clearly see her mound, covered only by that thin layer of cloth.\n\n\"Look at that Veronica. I didn't even realize you were into girls outside of our dreams.\"\n\n\"I wasn't? Not really... I mean... She's so cute though... So hot...\"\n\nThe dancer spun back around and hopped up onto the arms of the lounge chair. She was rocking her hips back and forth. She couldn't have been more than a few inches away from that lucky boy's crotch. She lifted both of her hands to her chest and peeled off her bra. Two impossibly perky breasts topped with dark wide nipples popped free and a heard and felt Veronica gasp with lust.\n\nBut this was just too much for the boy. He blurted out something incomprehensible and tried to stand up. He ended up knocking her to the floor and sent the chair spinning. He bolted out the library.\n\nVeronica and I both froze in place as the dancer lay still on the floor. \n\nHer shoulders were moving up and down, and for a second, I thought I heard crying, but a moment later, I could tell that it was moaning. \n\nShe wasn't crying, she was masturbating!\n\nVeronica made the same realization. She moaned louder than before and started rocking her butt back and forth, looking for my cock. \n\nThe dancer pulled herself halfway up onto the chair, and the way it had spun away, we were now treated to a perfect ass-on view of her rubbing away at herself. It only took her a couple of seconds to realize she needed direct touch, and she nearly ripped her panties down.\n\nRight as her beautiful pussy came into view, Veronica and I lined up perfectly. We both paused, and then as the dancer slipped her fingers into her pussy, I started pushing into Veronica. She pushed back into me, wanting more and faster.\n\n\"Do you see that Veronica? Do you see that perfect little slice of pink? How would you like it if those were your fingers slipping inside of that tight little pussy?\"\n\nEvery line seemed to be like a shot of pure lust into Veronica. By the time I was seated fully into her she was nearly vibrating with sex. \n\nI pulled back slowly and then drove back in quickly. \"Imagine that. She's going to cum all over your fingers.\" I punctuated each line with a thrust, getting faster and harder. \"She's going to be screaming as you push her over. Her juices are all over your fingers, running down your arm.\"\n\nShe felt so incredible around me. Sliding all over my cock, she was pushing back harder and harder, squeezing me erratically. I was about to lose control when suddenly I thrust too hard and knocked her head lightly into the door. There was a thump and the door swung wide open.\n\nIn shock, we both stood up and I slid out of her. We made ready to run away so we wouldn't get caught. Getting some semblance of control, Veronica leapt forward out of the stairway and behind one of the heavy bookshelves. Not wanting to be the one found there utterly ridiculous, my cock standing out hugely engorged and dripping with our lust, I ran after her, but misjudged the distance and ran right into her back.\n\nAll this noise and bustle and still the dancer hadn't altered anything. She still was there on her knees with her head in the chair, her fingers going wild all over and inside her.\n\nVeronica and I could both still see her through the gaps in the bookshelf, but I was still in a rutting fever, so I pushed down on her back to bend her over. She knew exactly what I wanted and immediately complied. So there she was, bent over at the waist behind a bookshelf. And she was perfectly positioned to take my cock again. This time she was so wet and worked up that went I aimed myself at her opening, she just rammed backwards, taking almost all of me in one go.\n\nThat push was just about all she could take though. A wail like a moaning squeal burst out of her mouth. She clamped her hand over her mouth, but it was too late. There was no doubt anyone in the area could hear her.\n\nI looked out through the bookcase only to see that at that exact moment, our dancer had shuddered to a very noisy orgasm of her own. I couldn't stop pumping into Veronica. I was too close. My urgency must have passed on to her because the twitching and out of rhythm jerking that started with her orgasm became more urgent on me. Her mouth was clamped shut by her hand, but she couldn't completely stop her moaning as she continued to came hard. \n\nUnfortunately, her spasms threw her off my cock. I couldn't contain my groan of frustration. She hopped back up and turned to me on her own shaky legs to try and shut me up with a kiss. The kiss was wonderful, but I was uncontrollable by then. I picked her up and lifted her legs up and to either side of my waist. Her jeans were pulled down to her knees, which made things awkward, but I wasn't about to be denied, and she, still buzzing in orgasm, was determined to get me back inside her. I pushed her back up against the bookcase and drove back into her, pistoning into her with no restraint at all.\n\n\"OHFUCK!\" I lost final control and started shooting up into Veronica. Leaning into her with each following thrust, gradually I slowed down, but didn't pull out of her. We stayed there for a moment, soaking in the erotic mood.\n\nOver her shoulder I saw the dancer slowly starting to come back to sensibility. It clearly had been a massive orgasm. She was pulling up her skirt when another student burst into the library.\n\n\"What is going on here? What was all that noise?\" \n\nHe had clearly heard the chair falling over, or maybe the moaning and groaning, or perhaps the shrieking orgasms?\n\nFortunately for her, the dancer had crawled behind a table and was able to put her clothes mostly back on. And her athleticism was on display as she sprinted past the student who had come in.\n\nI was hopeful for her anonymity. Unless her guy friend was a gossipy type, I don't think anyone would have guessed what was been going on. Then again, the smell of sex was a bit thick on this side of the room.\n\nI teasingly pumped once more into Veronica, making her stifle a wide-eyed squeak before pulling out and pulling my pants back up.\n\nA quick check of my clothes seemed okay, so I closed the stairwell door loudly and walked out from behind the bookcase as if I were coming up from downstairs.\n\nI tried to look confused as I rounded the corner.\n\n\"What was that noise?\"\n\nThe student snapped rigid. \"You're the new principal, aren't you?\"\n\n\"Yes, I am. Did you hear something, son?\"\n\n\"Yeah... er... yessir. I heard something that sounded like someone got hurt, like a yell or scream. I ran in here to see what was happening, but there was only one girl here and she ran out without saying anything.\"\n\n\"Ah, well. She probably tripped or something. This chair is knocked over here, so maybe she tripped and yelled out. If she was able to move quickly enough to run, I doubt she was injured. I'll look around to make sure nothing is disturbed or damaged. Thank you for looking into it, though.\"\n\nAs I set the chair back upright, I realized that the dancer hadn't been able to get everything back on. Her bra and panties were in the chair. Luckily, it faced away from the main door, hidden from the student's view. \n\n\"Oh, ok. Yessir.\"\n\n\"You've got more exams today?\"\n\n\"Yessir.\"\n\n\"Ok then, get back to it. Good luck on your exams.\"\n\nHe spun around and sprinted out nearly as quickly as the dancer did. Afraid he would get a demerit, perhaps? \n\nI followed him to make sure the main door was secured. I leaned back on the door after it was closed, looking back to Veronica.\n\nShe had come out from behind the bookshelf, her clothes back in order, and approached the chair. I watched her pick up the panties and bra that the dancer had left behind. She passed the panties back and forth in her hands before looking up to me.\n\n\"Maybe I do need a lithe little student as a pet.\" She grinned widely, but blushed hard and looked back down to examine her new treasures and avoid my gaze.\n\nI started walking toward her, but she halved the gap quickly, grabbed me by the shoulder and spun me around.\n\n\"No, sir! You get your pervy self and that lovely monster cock of yours out of here. I need to get this place in shape, and you are nothing but a distraction.\"\n\n\"So, you're coming back?\"\n\n\"Yeah, I suppose so. You must have convinced me somehow back in that stairwell. Now shoo! Get out!\" She pushed me on the back toward the door before turning away and moving back into the main space of the library.\n\n\"Fine, fine... Come by the office this afternoon so we can take care of your paperwork, alright?\" \n\nNot hearing a response, I looked back to see her sitting in the lounge chair with her knees up to her chin. She still had the cute little underthings in her hands.\n\n\"Veronica?\"\n\n\"Yeah, yeah, paperwork, office.\" She looked up at me. Her face was glowing with happy contentment. \"We're going to have some real fun, aren't we?\""
    ],
    "authorname": "shudai",
    "tags": [
        "mf",
        "school",
        "library",
        "partially clothed",
        "voyeurism",
        "keep quiet",
        "masturbation",
        "stripping",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-11"
}