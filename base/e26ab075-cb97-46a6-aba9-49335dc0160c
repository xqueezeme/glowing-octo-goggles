{
    "title": "The Pulse Pt. 04",
    "pages": [
        "Thank you so much to everyone for the encouragement, the comments and the feedback. It is what keeps me writing and it is truly appreciated.\n\n-- G\n\nThe Pulse - part four\n\nMonday was a mercifully normal day.\n\nThankfully, saving Tina appeared to have been a fifteen minutes of fame thing on a slow summer news day. I was able to cycle into school with nothing more to worry about than weaving through the usual traffic carnage outside the school.\n\nSomething definitely felt different though. Initially I just thought that it was the absence of the bullies that had traumatised my school life to this point. But as the day continued I realised that it was the lack of the snarky remark. The lack of the sneer. People were meeting my eyes instead of turning away and ignoring me. There were greetings in the corridor. A high five from one of the other gymnasts.\n\nThe only missing part in an almost perfect day was Jennifer. She obviously felt betrayed and was far too angry to give me the chance to explain myself. She sat as far away from me as she could at any shared lessons and made it very clear to the popular crowd what she thought of me.\n\nIt wasn't so much the cold shoulder as a bad case of frostbite.\n\nI lost myself in the gym session that evening, working out my frustrations there. I had to force myself to listen to Rob and slow my pace next to the fitter, more experienced gymnasts. But I was really enjoying myself. It did look as though Jennifer's attitude to me was rubbing off on the other girls though who were pointedly ignoring me.\n\nAfter years of being at the bottom of the social ladder I was used to this sort of thing and their disdain and contempt rolled off me like water off a duck's back. A quick shower later I was walking out of the front doors when a familiar voice greeted me.\n\n\"Hello, Jake.\"\n\nMy dick twitched slightly as Mrs Sawyer stood there in her workout gear looking like every guy's wet dream.\n\n\"Hello, Mrs Sawyer.\"\n\n\"No study session tonight then?\"\n\n\"Err...no. I don't think that Jennifer wants to see me again.\"\n\n\"That girl has been like a bear with a sore head since last week. What exactly is going on with you two?\"\n\n\"Err...nothing..?\"\n\nShe scowled at me and crossed her arms under her full breasts stretching her top to its limits.\n\n\" 'Nothing' does not cause my daughter to go into a four-day strop young man. Now talk to me.\"\n\n\"Jennifer saw another girl giving me a hug the day after we'd been studying and I think she took it the wrong way.\"\n\n\"But you're not going out with Jennifer are you?\"\n\nDid I detect disapproval?\n\n\"We...I...err...\"\n\n\"Well are you?\"\n\n\"No. We just enjoyed the study time and had planned to do it again.\"\n\nMrs Sawyer let out an exasperated sigh.\n\n\"Teenagers. So who was this girl that hugged you?\"\n\n\"Tina.\"\n\n\"Tina Lathan? The girl that you rescued?\"\n\nI blushed and nodded looking down at my feet.\n\n\"Ah. Well now things begin to become a little clearer. At last. Thank you for telling me Jake.\"\n\nAnd with that she turned and headed over to her car. I was mystified. Did she like the idea of me being around Jennifer or not? I hadn't imagined that disapproval had I? Or was she just a mother dealing with a moody teenager and trying to figure out what was going on?\n\nI gave up and cycled up the hill. I had an exam to cram for.\n\n= = = = = = = = = = = = = = = =\n\nThe next two days were totally focused on my exams. Jamie did wonders explaining the bits of Chemistry that Dr Maddren wasn't great at getting across. He was a bright man but really struggled to communicate some of the things on the syllabus. The muddle that he'd made of some of the key areas started to coalesce in my mind and I felt much better about my chances with the exam.\n\nI smashed the Biology exam and other than getting drenched on the way home by a summer shower the only other item of note was seeing Tina back in school. She still looked a bit fragile and sad but she didn't avoid me which was good. And she said that her music exam had gone well despite a minor panic attack when she had gone back into the music block for the first time since her attempted rape.\n\n\"You will still come with me to the Muse concert won't you?\" she asked.\n\n\"Of course I will! I'm looking forward to it. It's in the diary - Saturday after next.\"\n\nShe smiled, relieved and some of her bounce and good humour resurfaced as she used her hip to nudge me off balance.\n\n\"Thanks,\" she grinned at me as I stumbled and she headed off to get some lunch.\n\nI watched her well rounded arse sway into the dinner hall and my traitorous cock liked what it saw.\n\nI was nervous as hell going into the Chemistry exam on Wednesday but needn't have worried. A switch had flicked after Jamie's cram session and I genuinely enjoyed the exam. It reminded me how much I'd liked the subject when I began my A Levels only for Dr Maddren to make me second guess myself. Without Jamie I'm not sure where I'd be.\n\nI literally bounced out of the exam grinning like a loon.\n\n\"I knew you could do it, man.\"\n\n\"Not without you my friend. Maddren had me so fucking confused. But you are a genius and should be teaching this stuff. You have a real gift.\"\n\nIt was his turn to blush.\n\n\"Seriously Jamie. I owe you big time for this.\"\n\n\"You owe me nothing dude,\" he said smiling as his eyes focused over my shoulder. I turned to see Susan approaching. She ignored me with eyes only for Jamie and gave him a big hug and a smooch.\n\n\"Susan, I forgot to tell you how great your teeth look. It must be so nice to get that brace off.\"\n\n\"Like you wouldn't believe! I still have to wear a retainer when I sleep to help keep things in place but I missed just being able to bite into an apple or eat toffee or ki...\"\n\nAnd she suddenly flushed and looked embarrassed as her hand found Jamie's.\n\n\"Like I say man. You owe me nothing. Anyway, we just have Maths to go and then we are out of here!\"\n\n\"It's going to be so weird to be finished with all this.\"\n\n\"Do you want to come over on Friday? We could go out and do something if you want?\" asked Jamie.\n\nFrom the look on Susan's face he was already going to be busy but just didn't realise it yet.\n\n\"Thanks man but I can't. I told Fiona that I'd see her on Friday.\"\n\nSusan looked happy and I think Jamie finally realised that he'd nearly put his foot in it. Probably because his fingers were on the verge of being broken by Susan's grip as she tried to get his attention.\n\n\"No worries.\"\n\n\"Do you want to come over to mine to study for Maths?\"\n\n\"Sure. Tomorrow night?\"\n\n\"Cool, see you then.\"\n\nThe two of them walked off hand in hand. I was so pleased that he had found someone and Susan was perfect. Smart, pretty and with the social graces that Jamie sometimes lacked. And he obviously thought that it was all down to me that they were together. Maybe I'd helped to remove the turd magnet that had hovered over our heads for years but I was pretty sure it was him that had done all the rest of the work.\n\nI turned around and headed for the gym.\n\nIt was hot inside the hall and some of the team were going to be competing at an event at the weekend so they were perfecting their routines, focusing on their fundamentals and the small areas that could make a difference to their scores. It was a bit frustrating as they had priority on the equipment. In this heat though, even with a relatively light workout, by halfway through I was dripping.\n\nWith the emphasis on the competition, I got frustrated and decided to help other people rather than take away from their valuable reps.\n\nI ended up helping out at the vault, just making sure that the equipment was dried off and that the mats were properly laid out after each landing. The girls team rotated on to the vault and Jennifer had been assigned the same role as me. She glared daggers at me as she came over.\n\nMy frustration at her treatment of me finally boiled over. As we handed over I said in a low voice,\n\n\"You have no idea just how wrong you are, do you?\"\n\n\"So you're not all over that big titted cow like a rash at every opportunity the very next day after you'd claimed that you wanted to be with me? And then you're with her at every opportunity you get. Even at the Lido! How could I have misjudged things so badly.\"\n\nHer voice grew in volume as she spoke and the rest of the group around us were all taking in the scene.\n\n\"No, actually I wasn't. She was all over me. She wants to be more than friends but I've said no. And we're together a lot because our best friends are going out with each other. And yes, some friends went to the Lido? So what?\"\n\nI was nearly shouting by now.\n\n\"Alright you two. Take it outside. We have a competition to prepare for and your drama is not helping.\"\n\nRob propelled the two of us, both protesting out of the side door and shut it behind us.\n\nWe were both flushed red with anger and embarrassment. The area outside the fire escape was a bit stony and overgrown and it was a long walk around the outside of the building back to the front. Rob had obviously used this cooling off tactic before as I immediately saw how frustrating it was to be on the receiving end of it.\n\nI looked at her. She had her hair up and her face was clenched tight with anger. She was wound tighter than a spring, with her weight on the balls of her feet, her hands balled into fists and looking like she was going to explode at any moment.\n\nI was angry too. Annoyed that she would be so mean spirited that she wouldn't even let me try and explain.\n\n\"What's really bothering you Jennifer?\"\n\n\"What?!?\" Her voice went up an octave, almost screeching at me.\n\n\"You're far too smart not to see that Tina is just a friend to me. And, yes, I know that I happened to be in the right place at the right time last week. But you and I really connected last week. I was on cloud nine riding home that night, do you know that?\"\n\nA myriad of emotions ran over her face before her expression hardened.\n\n\"Just stay the hell away from me.\"\n\nAnd she shoved past me to begin the walk back to the front of the building.\n\nI couldn't help myself and grabbed her wrist, spinning her back towards me.\n\n\"Dammit, talk to me! What the hell is wrong?\"\n\nPulse.\n\nThe pulse spilled out of me unbidden. Blue power flowed over Jennifer. All the tension and anger drained out of her body and she began to cry almost uncontrollably as I demanded to know what was wrong.\n\nI held her hands firmly in mine. Still unsure what the cause of her tears was. What had triggered this? With our physical contact I reached using the blue power that surged around us and...\n\nHeard her mind.\n\nI staggered slightly, unnerved by what I was experiencing.\n\nThe feeling was like nothing I'd had before. It was a whirlwind of thoughts, emotions and feelings as she tried to tell me what was wrong. It all came at me in a rush. It was like listening to a hundred shouted conversations in a club or in a really loud restaurant except that all of them were directed at you from right in front of your face.\n\nBut it was all coming from one person. Her mix of emotions and thoughts babbled at me and it was all I could do to stay in control of myself.\n\nCalm down, I thought. And the stream of thoughts immediately slowed and I could hear words and phrases.\n\n...grateful...sexy...first kiss...scared...\n\n...don't hurt me...hurt before...\n\n...jealous...raging, towering jealousy...\n\n...shame...friend...love?...hateHateHATE...\n\n...mother...damaged...\n\nAnd then buried under all of it, hidden in her darkest recesses.\n\n...too poor...\n\nI stopped holding her. I stopped the pulse and severed the connection. She staggered away from me as if I'd physically pushed her. She steadied herself against the wall, looking unsure and nervous. She looked up into my eyes and was shocked at what she must have seen there.\n\nMy sadness. My scorn. My utter contempt.\n\nShe hid her tear stained face and I left her there without saying a word.\n\nI walked back to the main entrance and went straight to the showers. I cleaned off as quickly as I could and was changed and back in my clothes just as everyone else was finishing.\n\nRob was going through the last instructions to some of the gymnasts that would be competing at the tournament as I approached.\n\n\"...and pick up is at eight thirty on Saturday. Anyone that isn't there needs to find their own way to Guildford. OK?\"\n\nThere was a chorus of groans.\n\n\"Good practice tonight folks. Now go and shower, rest up and eat right!\"\n\nThe last few words were addressed to their backs as they all headed for the showers.\n\n\"So. What was all that about? Lovers tiff?\" he grinned at me affably.\n\n\"Rob, I just wanted to apologise for my behaviour and for the distraction. And to say that I don't think that gymnastics is for me after all. I've enjoyed the last couple of weeks but won't be joining the summer programme.\"\n\nMy words were clipped, clear and cold.\n\n\"The hell you say. You're a natural.\"\n\n\"That's kind of you but it's not for me.\"\n\nAnd with that I turned on my heels and headed out of the door as he shouted my name behind me.\n\nAs I burst through the doors I saw Celia Sawyer leaning against her car on the far side of the car park. She saw my anger and her face twisted into a satisfied smile.\n\nI was incensed and nearly pulled at the thread that connected us like I had with the rugby rapists. But my self-control held. Instead I poured my scorn and utter contempt for her through the link and then severed it.\n\nCelia rocked back as if she'd been punched in the gut. She looked at me with fear and quickly got into her car.\n\nI was absolutely fuming as I got on my bike. It was only when I started to catch one of the cars ahead of me as I cycled up the hill that I realised the blaze of red power that surrounded me.\n\nTwice in one day, I'd let my emotions get the better of me and the Pulse had activated by itself. I couldn't lose control like that. I quickly looked behind me and seeing no one close enough to notice anything and the car ahead of me turning off I simply released the accumulation of anger and red power behind me. I shot up the second half of the hill freewheeling the entire way.\n\nAs I arrived home I was still raging inside. I took some long, deep breaths and then purposely put what I'd heard from Jennifer to one side until I could get some privacy to deal with it.\n\nI managed to be civil with my parents though they must have guessed that something was wrong. I excused myself to go upstairs and study after devouring my third bowl of bolognese.\n\nIt was a relief to finally shut the door and fall into bed.\n\nThen I allowed the anger to flow, to replay the smug smile of that bitch Celia. The bitch that thought that while I was good enough to use as her fuck toy I wasn't good enough to be around her daughter.\n\nIt hurt.\n\nIt was stupid because I knew that we weren't well off. I knew that we had to work and claw our way for everything. That I would end up with a debt mountain after university unless I could minimise my living expenses and get a decent part time job. It made me wonder what that bitch knew about working for anything.\n\nI couldn't forget that almost perfect evening that I'd shared with Jennifer but my sheer contempt almost washed that away. I was too POOR for her. Well that made things a lot easier. Where her family were concerned I no longer felt any moral issues with what I was doing or what I'd done.\n\nThey'd nailed their colours to the wall and righteous indignation soared through me.\n\nI used my anger that night to study late into the evening. I'd also been holding off from applying for a hotly contested sponsorship place at university. The company would commit to support you through university paying for your course and related expenses. Every holiday would be spent working for them. If your grades dropped below a first then they could remove all funding. This was reviewed after every term. At the end of the three or four years there was a commitment from them to offer you a role at the company.\n\nOnly the best and brightest bothered applying and I had held back thinking that I didn't stand a chance. White hot anger did what I otherwise would not have done. The application was completed and sent off that night.\n\nMy parents sensed that something had changed in me but didn't push it. They were delighted that I was at least trying to put myself forward as they knew that they were in no position to help me, particularly as my dad would be moving out soon.\n\nI also remembered that I really ought to be the one to call Fiona this time. After an awkward conversation with her father, which made me feel quite unwelcome, he eventually passed the phone over to her. I quickly realised from her initial answers that something had changed and that her parents were hanging around near the phone.\n\n\"So are we still on for Friday?\" I asked.\n\n\"Definitely!\"\n\n\"I can't wait to hold you again Fiona.\"\n\n\"Uh huh.\"\n\n\"Are your folks listening in?\"\n\n\"Uh huh.\"\n\n\"Can they hear me?\"\n\n\"Maybe.\"\n\nI lowered my voice. \"So can they hear that I have been thinking of nothing but seeing my cock sliding inside your perfect pussy since we were last together on Saturday.\"\n\n\"Err...nooooo.\"\n\n\"And dreaming of bending you over the sofa in your front room, pulling your thong down and forcing my rock hard dick into your pussy until you can't take it anymore and explode all over the place. Can they hear that?\"\n\n\"Unhhh....you're so bad.\"\n\nI could almost hear her quivering at the end of the phone line. I was rock hard just thinking about her like that. I grinned almost certain that she'd retaliate in the future.\n\n\"Do you want to go out somewhere? Or do we get to spend another night in?\"\n\n\"Mum and Dad have invited us to join them to watch a Studio Ghibli movie at home but I know you were keen to go out somewhere weren't you?\"\n\nI caught the emphasis on -weren't you- straightaway. Dammit. And my parents were in too. It looks like a repeat performance would have to wait.\n\n\"Yes. There's a great place in Reading that I'd love to take you to.\"\n\n\"Great. So do I need to dress up?\"\n\n\"It's too hot to get all dressed up,\" and lowering my voice again, \"and you look so good when you're naked in front of me.\"\n\n\"Ugghhh! OK. So casual then. What time can you be here?\"\n\n\"Why don't I pick you up at seven o'clock?\"\n\n\"That's great Jake. See you then.\"\n\n\"Bye Fiona.\"\n\nI heard a whispered \"bastard\" as she was putting the phone down.\n\nI went back off upstairs in a far happier frame of mind. I saw my parents look at each other and shrug.\n\n\"Teenagers...\" I heard my mother say.\n\n= = = = = = = = = = = = = = = =\n\nI woke up in a totally different frame of mind.\n\nI was feeling better about myself than I had in a long time. I felt that I was beginning to get my love life under control and morally was in a better place all round.\n\nSchool was very relaxed. A lot of people had finished their exams and so there was a bit of a party atmosphere. I just had Maths on Friday and then I could relax too. I'd given up trying to find a quiet place in any of the usual public areas and seeing that Mrs Thorne's classroom was empty, I found a corner and got some revision in.\n\nAfter about an hour Mrs Thorne came in and didn't seem particularly surprised to find me there.\n\n\"How are things Jake?\"\n\n\"Oh good thank you. The revision's coming on well and...\"\n\n\"I didn't mean the revision. You'll do well in the exam. How are you after last week?\"\n\n\"I'm OK. Really, I'm fine. I think that Tina is the one that needs the support, not me.\"\n\n\"Well I'm pleased to hear that you're coping well. You might be interested to hear that the headmaster will be announcing his retirement in a letter to parents soon.\"\n\n\"Wow! Really?\"\n\n\"Indeed. The Deputy head has been trying to get him to take bullying more seriously for some time and this was the final straw. Between her, the reporter and the lawsuit from Mr Latham, I think the pressure was too much. He's not a bad man but he is lacking in judgement. Mrs Johnson will make a fine headmistress and she has asked me to be her Deputy.\"",
        "\"That's well deserved Mrs Thorne. So long as you don't stop teaching. You're the best Maths teacher I've ever had.\"\n\n\"Well, thank you Jake. I will still be teaching. But I think I'll be paying a bit more attention to the quiet ones in my lessons from now on.\"\n\nThe bell rang for lunch.\n\n\"Go on, be off with you. And call if you need anything.\"\n\n\"Thank you.\"\n\nAs I was coming out of the classroom I heard a shout behind me.\n\n\"Hey Jake!\"\n\nLooking around I saw Christine and Ami-with-an-i heading my way from the science block.\n\n\"Hi.\"\n\nI stood there and waited for them to catch up. I was still suspicious of Christine. She'd been one of the queen bees since I could remember and that alone was enough to make me wary.\n\nShe was looking great as her hips swung from side to side and her short skirt highlighted her shapely legs. Ami was thin, darker complexioned and not especially pretty. She wore her hair very short in a Demi Moore kind of way but didn't really have the looks to pull it off. I knew she was very bright though and she was best friends with Christine.\n\n\"Working hard Jake?\" she asked, smiling at me with the charm turned up to ten.\n\n\"Just trying to find a quiet spot to revise for tomorrow's exam. How about you?\"\n\n\"Oh mine are all finished,\" and she surprised me by taking my arm as we walked down the hall together. \"I'm going round getting my shirt signed and making sure that all my favourite people are coming to my party on Saturday.\"\n\nShe stopped walking and turned to face me.\n\n\"You are coming to my party on Saturday aren't you Jake?\"\n\nEven I couldn't miss that undercurrent.\n\n\"It sounds like a lot of fun.\"\n\n\"Oh, it will be. We live out by Old Basing. Plenty of space so we won't be upsetting any neighbours and we got a pool put in last year. Plus my parents are relying on my older brother to look after us while they're away for the weekend. It's going to be a riot!\"\n\n\"I'm not sure that I'll know many people, Christine...\"\n\n\"Don't be daft. Half the school will be there. Besides, Ami and I will look after you won't we?\"\n\nThis looked like it was news to Ami, who just nodded.\n\n\"C'mon! Say yes.\"\n\n\"OK, sure. But I have to work on Saturday so I won't be there until later.\"\n\n\"No problem. Come over when you can and bring a bottle of something. And bring a sleeping bag to crash over. There's loads of space.\"\n\n\"That's really kind of you, thanks.\"\n\n\"No problem. See you later.\"\n\nAnd the two of them walked off, leaving me unsure whether I was doing the right thing or not.\n\nAfter school Jamie and I walked up the hill together. He joined us for sausage and mash and then we went up to my room to study for Maths.\n\n\"Did you say that Christine, Christine McConnell no less, invited you to her party?\"\n\n\"Yes! How many other Christine's do we know?\"\n\n\"Well none. But then I didn't think that you knew Christine either.\"\n\n\"I don't. Come to think of it, she did come by the garden centre last weekend with her Mum and Ami, at least I think it was her Mum. She's kind of older lookin...\"\n\n\"Doesn't this feel a bit strange to you?\"\n\n\"Of course it does. But I thought that it would be fun. You and Susan could come..?\"\n\n\"Susan can't stand Christine. There's no way that she's going to a McConnell party. Besides, we're going to Thorpe Park as our way of celebrating.\"\n\n\"But you get motion sick.\"\n\n\"I know.\" He looked crestfallen.\n\n\"Does Susan know?\"\n\n\"No. But riding roller coasters is one of her favourite things in the world to do. I have to go.\"\n\n\"Oh, well nothing bad could possibly happen there could it? Are you going to be OK?\"\n\n\"I'm going to have to be. Mum has given me about five different remedies to take. I'm just going to grit my teeth and try not to hurl. On the plus side, the freshly cooked doughnuts they have there are amazing.\"\n\n\"Man, you have got it bad. You wouldn't go on one of those things with me.\"\n\n\"Yeah, I know. She's brilliant. There's honestly nothing that I'd change about her...other than her roller coaster fixation.\"\n\n\"Is Tina going?\"\n\n\"No, it's just going to be us for once. It's hard though. They've been best friends forever so not including her is tough for Susan.\"\n\n\"Well, it's not like Tina's short of admirers. I'm sure that she can get someone to join you all.\"\n\n\"She doesn't want someone, Jake. She wants you. She's wanted you since before you rescued her but since then no one else stands a chance.\"\n\n\"What am I supposed to do? Tell her stuff that I don't feel? Lead her on?\"\n\n\"No, I guess not.\" He paused and looked up from playing with the calculator in his hand. \"Is she really that bad looking to you?\"\n\n\"Jamie! It's not that she's unattractive. She's a really nice person and we have some stuff in common. I do really like her.\"\n\n\"But...\"\n\n\"But, she just doesn't make my heart rate go up a notch. I don't catch my breath when I see her, you know? And it's not like I've known her for a long time or anything. I hope we can be friends but I don't think that it's ever going to be more than that.\"\n\n\"Well, maybe you shouldn't have said she looked like a goddess then.\"\n\n\"Jamie, you would have called her a goddess too. Her shirt ripped to shit, her amazing tits on full display, hair like something out of Def Leppard, short skirt, ripped tights and holding an electric guitar like an axe. She looked...hot. Really hot.\"\n\n\"Enough to get your heart racing...?\"\n\n\"Yea...now stop that.\"\n\n\"Alright, alright. I just want my friends to be happy, that's all.\"\n\nWe got back to work after that but to be honest we didn't achieve all that much. We stopped earlier than usual in the hope of getting a good night's sleep.\n\nAs I lay in bed later that night my mind was full of images of Fiona, Tina, Jennifer, even Celia. What was so different that I didn't want Tina in that way? My cock disagreed that I didn't want Tina but there was something about her that nagged at me...that wasn't... I just couldn't put my finger on it. I finally drifted off to sleep.\n\nBetween Maths tuition and sheer bloody hard work the exam the next day was relatively plain sailing. It was with some relief that Jamie and I left the main hall with our arms round each other's shoulders realising that school was finally over.\n\nWe'd been longing for this day for such a long time that it felt like something of a let down now that it was finally here. Lots of the other final year students were running around getting shirts signed, hugging friends, throwing study notes in the bin and generally blowing off steam.\n\nIt was noisy, fun and I was hugged more in that one day than I had been in my entire life to that point. People I didn't really know promised to stay in touch and more than my fair share of girls got a bit free and easy with my abs and one even pinching my arse!\n\nA few said, \"see you at the party\".\n\nWe were encouraged to head home after lunch as we were nothing but a distraction for the other kids that still had to stay in school. I cycled home with plenty of cars going past beeping their horns and people waving. It's as if the previous six years as a social pariah hadn't even happened.\n\nI got home to an empty house.\n\nIt was all a bit of an anti-climax after everything that had happened and in the end I grabbed some lunch and went out to the driveway to check over my car.\n\nAll this time that I'd been waiting to drive it, I was fastidious with checking fluids and tyres but since I'd actually started driving that had all gone by the wayside. I rolled up my sleeves and was soon happily humming away, checking the oil, the coolant and everything else that I could think of.\n\nThe vacuum is probably what got Old Bill out of his house and he found me contorted into the back seat trying to get the car spotless for my date tonight.\n\n\"She's looking really good, Jake. It's nice to see you looking after her.\"\n\n\"Thanks Mr Davison. I can't tell you how grateful I am. She's a great little car.\"\n\n\"Nonsense boy. Far better that you are enjoying driving her. I get the pleasure of seeing that nice little car on the road and you with a smile on your face. What more could I ask for?\"\n\nHe grinned, \"though the back lawn is starting to get a little long...\"\n\n\"Oh no! I completely forgot. Let me finish hoovering and I'll get right on it.\"\n\n\"You're a good lad, thank you.\"\n\nOld Bill's garden wasn't that big and his petrol mower soon had it looking tidy again, front and back. I couldn't believe that I'd forgotten my promise to him to keep mowing his lawn! I'd worked up a good sweat though so after cleaning up after myself I hit the shower.\n\nLooking at the clock there was still an hour before either of my parents got home. It felt a bit weird not having school work to keep me busy. I'd been studying so hard for the last few months that I'd barely even picked up a comic or a book.\n\nAt a loose end I started on some food to surprise Mum and Dad. My repertoire was pretty limited but they were always happy not to have to cook. By the time Mum got home I was reading a book, relaxing on the sofa in a pair of shorts and a short sleeved shirt.\n\n\"Mmmm! Something smells good. Are you joining us or are you taking Fiona out somewhere?\"\n\n\"It's just corned beef hash Mum. I hope it's better than last time. And no, I've booked a table at Sweeney & Todd's.\"\n\n\"What a great idea? Has she been before?\"\n\n\"I don't think so,\" I grinned.\n\n\"Fabulous! Bring me back some of their pies will you? They're always great to have in the freezer and they are to die for.\"\n\nI nodded and she bustled off upstairs.\n\nAs seven o'clock rolled round I pulled up in my Mini, finding a spot just a couple of doors down from Fiona's house. As I was getting out of the car I saw her saying something to her mother at the door before pulling it closed behind her.\n\nShe came running over to me looking positively edible. She was wearing a short denim skirt, a strappy top that came down to her belly button and some wedges. I gave her a quick hug and a kiss and she said,\n\n\"Come on, let's go before they come up with some other reason that I shouldn't be going out.\"\n\nWe jumped in the car and I drove off carefully out of their street and headed for the main A road that would take us up to Reading.\n\n\"Is everything alright?\"\n\n\"Yes, it's fine but they're such control freaks!\" she had obviously been bottling this up for some time. \" 'When will you start saving some money? Why don't you go to university? Don't be out late.' Honestly they're just nagging and nagging to the point that I can't wait to go to work.\"\n\n\"Wow, that sounds tough to deal with.\"\n\n\"It's unreal. And ever since they found a condom wrapper in my room they haven't stopped. I almost had to fight my way out the door tonight. And they've told me to be home by midnight come hell or high water.\"\n\n\"They found a condom wrapper? Oh no! What did they say?\"\n\n\"They asked me all sorts of questions about you and demanded to know what had been going on.\"\n\n\"So what did you tell them?\"\n\n\"That you were the best thing that has ever happened to me.\"\n\nI blushed and smiled at her.\n\n\"You're amazing.\"\n\n\"Well, my parents don't think much of me or you at the moment. But dammit I'm nineteen years old! They can't expect to keep dictating my life to me like this. God it's so frustrating!\"\n\nShe almost screamed the last. She sighed like the weight of the world was on her shoulders, before turning to look at me.\n\n\"I'm sorry. You have no idea how much I've been looking forward to tonight. It's so good to see you. Even if you are a total bastard for talking dirty to me down the phone with my parents eavesdropping like that!\"\n\nI laughed.\n\n\"It's great to see you too. You look terrific by the way.\"\n\n\"Not too dressy?\"\n\n\"Not a bit. You'll see when we get there.\"\n\nWe wound the windows down and she turned up the car stereo. Seven Days by Craig David started blaring out of the radio and she grabbed my hand as we drove through the countryside, singing along badly, her cares temporarily released into the aether.\n\nTook her for a drink on Tuesday\n\nWe were making love by Wednesday\n\nAnd on Thursday and Friday and Saturday\n\nWe gossiped a bit about work as we drove and eventually pulled up in the town centre. I surprised her by avoiding the big multi-storey car park where most of the restaurants were situated and instead headed towards the council offices. There on a little side street was Sweeney & Todd's. From outside all you could see was what appeared to be a deli counter that sold pies.\n\n\"Here we are.\" I smiled as we got out of the car and headed for the little restaurant.\n\n\"What's this? Are we getting a takeaway?\"\n\n\"Well, I am under strict orders to pick up some pies for my Mum. But we're here to eat in their restaurant. Shall we?\"\n\nShe took my offered arm and we walked in past the pie counter which displayed their wide range of different flavoured delights. We were met by a long-suffering looking waitress who had to be seventy if she was a day. She checked our booking and led us downstairs past the small bar to a table in the archway niches under the building.\n\nFiona laughed delightedly as we sat down, taking in this hidden gem.\n\n\"I would never have guessed that this place even existed. It's fantastic.\"\n\nI grinned at her happiness and reached for her hand across the table. Just then the waitress approached the table.\n\n\"Do you know what you'd like or would you like me to go through the available pies?\"\n\n\"She's never been here before so if you...\"\n\n\"We've got Plain Steak, Steak and Oyster, Steak and Mushroom, Steak and Kidney, Yorkshire Ham & Stilton, Pork and Apple, Venison and Boar, Rump Steak and Stilton, Chicken and Leek, Cheese and Vegetable, Five Nations, Vicars, Steak and Ale, Sweeney's and Chicken and Ham.\"\n\n\"A vicar's for me with cauliflower cheese and a pint of 6X please.\"\n\n\"And for the lady?\"\n\nI looked at Fiona trying to deal with the verbal menu and the sensory overload and smiled remembering my first experience here.\n\n\"Can I have the chicken and leek pie please, with some chips and a glass of dry white wine?\"\n\nThe waitress took our orders down and bustled off to bamboozle the next table with their pies.\n\nThe food was great and as before we chatted away happily, finding out more about each other and our likes and dislikes.\n\n\"Is there a reason that you went straight into a job rather than looking at university?\"\n\nHer face clouded over slightly as I touched on a sensitive subject. I was aware of it from what she'd said about her parents but I was interested to understand what the friction was.\n\n\"I did have the grades to go to university. I had offers from Bristol and Cardiff to study accountancy there but I just felt that I'd be building a mountain of debt. And if I got a degree as an accountant then that's it isn't it? I'm a dull, boring accountant.\"\n\n\"No one who knows you could ever accuse you of being dull or boring.\"\n\nShe smiled.\n\n\"I've always been a pretty good girl. I've done what my parents suggested and I've tried to make them happy. My older brother is, oh, just so bloody perfect. Straight A's, the perfect son and I'm just Fiona who 'does her best.' So I decided to do my own thing for a while. I'd done part time work at the garden centre for a while and they were looking for someone in finance and I fitted the bill. The pay's OK so long as I'm living at home but I just wanted to see if it was something that I enjoyed before I committed myself to doing it long term.\"\n\n\"And...?\"\n\n\"And it's OK. I don't know. I don't have a real passion for anything. I'm just frightened of getting it wrong. That's why it took me so long to see if you were interested or not.\"\n\n\"I'm so glad you did.\"\n\n\"So am I.\"\n\nAfter paying the bill and making our way outside we took a stroll down to a local pub. Initially I was heading for The Purple Turtle, a really fun, cool place but it was loud with a capital L and we were having a really good time getting to know each other better. After a few drinks there (lemonades for me, spritzers for her) we started walking back towards the car, enjoying the evening. We stopped and sat on a park bench near the local church, holding hands and people watching.\n\nPeople are endlessly fascinating. The things they wear, the way they act, the interactions they have. And Fiona shared my enjoyment of watching them walk past and chatting about them. During a lull in the passing traffic she leaned against me and kissed me before whispering,\n\n\"I've been so horny all week. I just had to think about last Saturday and I was wet. Is there somewhere that we can go...?\"\n\nAnd then she licked my ear and nibbled on my earlobe. My shorts began to tent as I racked my brains trying to think of somewhere. She reached a hand across and gave my cock a squeeze. Before we got out of control in the middle of the town centre I stood up and used her hands to pull her upright. She promptly kissed me hard, grinding her body against mine and there was a wolf whistle from a group of passing lads.\n\n\"Give her one from me, mate!\"\n\nShe stopped, all embarrassed but still flushed with lust. I grabbed her hand and headed back to the car.\n\n\"Come on, I think I know somewhere.\"\n\nWe got back to the car and drove off back down the main dual carriageway. Throughout the drive her hands were stroking me or rubbing her own nipples through her top. She flashed her tits at me driving me crazy.\n\n\"I'm going to come so hard when you push that huge cock inside me. I've been looking forward to it all week. I'm so horny right now, my panties are drenched.\"\n\nShe giggled, \"look, I'll show you.\"\n\nAnd she lifted her rear off the seat, reached under her skirt and pulled her thong off. She held them up to my nose.\n\n\"See what you've done to me.\"\n\nThe smell of her was intoxicating and I nearly lost control of the car. My hard on was fighting to escape my shorts.\n\n\"That looks uncomfortable.\"\n\n\"Uh huh.\"\n\nShe reached across and excruciatingly slowly she pulled the zip down. I felt every tooth of the zip separating through my cock which was rammed up against it. She finally finished and then undid the button. My cock bounced forward still surrounded by my underwear.\n\nShe reached inside my pants and used a finger to catch the gob of precum boiling up out of my cock. She then brought it up to her mouth and licked it with her outstretched tongue.\n\n\"Mmmmm...you taste good, Jake.\"\n\nI all but came on the spot.\n\nHer hand returned to my cock, teasing me mercilessly.\n\nWe turned off the main road and found our way onto some country lanes. I'd been dragged out on some walks with my parents when I was younger and one of the places they liked was near Rotherwick. There was a small lane that led off into a bridleway. There were plenty of trees and no houses nearby.\n\nI pulled into the little layby and before the engine was off Fiona had thrown herself at me.\n\nWe groped and kissed and fondled each other in the car but it was just too small and uncomfortable. I opened the door and went round to the passenger side. Fiona jumped out and into my arms laughing.\n\nI sat her on the bonnet of the car and we started to really enjoy the touch of each other's lips and hands. She stopped me briefly and lifted her arms up straight. I needed no further prompting and lifted her top up to uncover her delicious body.\n\nI reached for her breasts and squeezed them through her strapless bra before reaching behind her and undoing the clasp. Her breasts were beautiful. Firm and round with slightly upturned and very sensitive nipples. They were a perfect handful and I devoured them.\n\nShe began to moan, her hands busy on my clothes, unbuttoning my shirt and pulling my shorts and underwear to the ground. I stepped back out of them and she stood up. She reached into her skirt pocket and pulled out a condom before undoing the clasp and dropping it to the floor. For a second we just stood there looking at one another.",
        "She moved forward and sank to her knees, giving my cock a long, slow sloppy kiss before rolling the condom into place. She stood again and kissed me passionately.\n\n\"I want you so badly. Take me, Jake. Just the way you've been dreaming about.\"\n\nAnd she turned around and bent over the car bonnet exposing her glorious rear end to me. I grabbed her arse cheeks and squeezed them before crouching down and licking the length of her pussy.\n\nShe shuddered and so I did it again. And again.\n\n\"Don't tease!\"\n\nI licked her again, licking all the way up to her amazing little arsehole. Her legs spasmed slightly as I did it and she gasped. I licked all around her arsehole and then pushed my tongue at it and she had a mini-orgasm.\n\n\"Aaaaarrrrrrrrrrr!! Oh god that's so dirty. Do it again!\"\n\nAnd I licked her some more. Her pussy was dripping and I lapped up her juices.\n\n\"Pleasepleasepleasepleaseplease..\" she babbled.\n\nI stood up and pulled her hips towards me, lifting her arse in the air before driving my cock deep into her pussy.\n\n\"OhmygogOhmygodOhmygodOhmygodOhmygod..\"\n\nI drew out and began to thrust hard. There was absolutely no finesse involved, I just fucked her for all I was worth. You probably could have heard our bodies slapping together in Scotland.\n\nShe was incredibly responsive, pushing back on to my cock and fucking back against me. Her tits were bouncing delightfully under her and I reached forward and squeezed her nipples hard. She exploded in orgasm, her cunt quivering around me as I ploughed harder into exquisite body.\n\nI didn't release her nipples and kept the pressure up as I carried on slamming my cock into her. I finally relented, releasing her nipples and the blood flowing back into them set her off again. I was close to coming myself and I focused on prolonging the feeling for as long as possible.\n\nBut the view of her winking rosebud and my cock sliding in and out of her was too much and I came long and hard, buried to the hilt inside her.\n\nShe slumped onto the car bonnet panting. My cock still firmly embedded in her slick, tight pussy. I started to move my cock inside her but the condom threatened to come off so I quickly grabbed it and pulled out of her.\n\nShe sighed.\n\n\"I have been waiting all week for that. I love your cock.\"\n\nI looked at her, lying there across the bonnet of my car like a centrefold from a dirty car magazine. My cock was getting harder again by the second.\n\n\"You do, do you?\"\n\nAnd I walked up to the front of the car and put my cock right by her mouth. She greedily gobbled it up. Sucking my juices off, bobbing up and down on it until it was hard. Her hands were busy on her clit at the same time and her moans grew louder and louder. Hard as an iron bar, I reached into my shorts and grabbed another condom, rolling it into place.\n\nShe looked over her shoulder and wiggled her delectable arse at me.\n\n\"You like what you see?\"\n\n\"Let me show you how much.\"\n\nAnd I slowly eased myself into her. I teased her mercilessly with short thrusts, rolling my hips around to change my angle of penetration. But never going deep. She started to thrust back and I used a hand to force her hips back on to the car. She started to buck backwards against me.\n\nI held her in place and continued to tease her and then without warning rammed my full length inside her. She wailed, so I did it again.\n\nHer arse was mesmerising and as I slid in and out of her writhing body I slicked up my thumb and slowly used the end of it to push at her arsehole. The effect was instant. She came harder than I'd ever seen her come before. Her juices gushed all over my cock and she shrieked her orgasm out to the world.\n\nI thanked the gods that we were so far away from anywhere as surely someone would have called the police.\n\nI was nearly there myself and I started to really hammer into her. At the same time I pushed my thumb a bit harder and it popped inside her arse up to the first knuckle. She was making the most outlandish noises as I fucked her harder and harder, pushing in and out of her arse with my thumb at the same time.\n\nIt was such a turn on that I couldn't last long. My orgasm was so good that it was almost painful. My legs shook with the power of it. I was forcing her so hard up against the car, it was as if I was trying to fit my whole body inside her pussy. I removed my thumb and leaned over her back and kissed her tenderly.\n\nShe was in her own little world.\n\n\"It felt so good when you came. I swear I could feel your come squirting inside me. I felt so dirty and used.\"\n\nShe saw my look of concern.\n\n\"Don't be silly, it was wonderful. But I may not be able to walk if we stay like this much longer.\"\n\nI removed my weight from her body and slowly pulled out of her. I started to remove the condom and looked down in shock. It had burst!\n\n\"Fiona...\"\n\n\"What is it Jake? Oh NO!!!\"\n\n\"Shitshitshitshit...\"\n\n\"Did you put it on too tight or something?\"\n\n\"I don't know, I just pinched the end and rolled it on. Maybe it was a faulty one?\"\n\n\"Or maybe your big dick needs bigger condoms. Oh shit!\"\n\n\"I'm so sorry Fiona.\"\n\n\"Don't be, I'm sure that this stuff happens to lots of people.\"\n\n\"But if I'd just..\"\n\n\"Stop it. We just need to think what to do.\"\n\n\"We can try the all-night pharmacy. Maybe they can suggest the best thing to do?\"\n\n\"Good idea.\"\n\nShe kissed me and started to get dressed. We quickly threw on our clothes and were on our way back to town as fast as the little mini could safely get us there.\n\nThe pharmacy was an embarrassing experience but the old man couldn't have been more helpful. He did make me feel about three feet tall as he talked through selecting the correct condoms and I bought a large pack with condoms that were less likely to split. Fiona was given something called the Morning After pill. He warned her that she might feel sick or even be sick but it would stop any possible pregnancy.\n\nShe took the pill and we got properly cleaned up before heading back to her parents house. It was ten past eleven as my car pulled up and her parents curtains twitched as soon as the car door shut. Fiona gave me a chaste kiss goodbye and I walked her to the door.\n\nThe front door opened as we got there.\n\nHer parents nodded at me frostily and then the door was closed firmly behind them.\n\nI turned away, saddened at this change. I could see that they were only trying to protect their daughter but I hated being the bad guy.\n\nI drove home and fell into bed exhausted."
    ],
    "authorname": "golasgil",
    "tags": [
        "doggystyle",
        "blowjob",
        "anal play",
        "oral",
        "anal sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-pulse-pt-04"
}