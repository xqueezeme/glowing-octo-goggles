{
    "title": "Memories Of Our Babysitter Ch. 02",
    "pages": [
        "All persons engaged in sexual activity in this story, are over 18 years of age.\n\nDue to circumstances, it has been a while since CH 1, but I recently saw Cass, (real name) the babysitter in this story, now a happily married woman and the memories came flooding back. These are real events, as I remember them. I can't recall the dialogue word for word of course, but the flavour of it is as near as I can get.\n\nIt may be worth reading CH1 first, but there are enough references to it in CH2 to make it a stand- alone story if you wish. \n\nAs in CH1, this is the background to the time and place.\n\n**\n\nThis story is based on real happenings that took place in the mid 1980's in the United Kingdom, when the internet was barely an infant and not available to the majority of individuals. As for mobile phones, they were huge, solid, brick-like blocks weighing over two pounds and were owned by only the very wealthy. This meant that knowledge of sex was gleaned mostly by looking at adult magazines aka Playboy, Hustler and so on which were often bought by older brothers or sisters. Certain books like 'Tropic of Cancer' that were 'borrowed' from someone's father's collection also worked a treat. Hearing playground chat amongst more or less 'informed' friends, proved popular too. \n\nFinding out officially what 'sex' was all about was mainly limited to the teachings of the Biology teacher who, if he/she was confident, would talk you through the reproductive cycle of humans or if not, would tell you how frogs and newts reproduced (not very useful and definitely not very sexy!). Boys and girls were nowhere near as mature or knowledgeable about sex at age 18 compared to many of today's 14 or 15 year olds, thanks mainly to the multitude of internet 'information' that can be accessed by anyone that can type 'sex' into a search engine.\n\nAll of this is to set the scene for you, to make you aware that in the late 1970s, early 1980s, unlike the present, many boys and girls at age 18 were considerably na\u00efve when it came to actual sexual encounters and in the UK (as is now) anyone over the age of 18 could buy and consume alcohol.\n\n********************\n\nIt was about ten days after the first incident that we needed Cassandra to babysit for us again. My wife who was a nurse had again picked the short straw and was working a full night shift, which coincided with one of my late shifts, that didn't finish until around 11pm. On the last occasion when I had arrived home, we had had a drink together and following an increasingly intimate chat, things had got a little out of hand, resulting in some heavy foreplay that probably shouldn't have happened. Although she seemed fine when I eventually drove her home, I was a bit concerned about how she might feel now, having had some time to think about it.\n\nI remembered that Cass had asked if her boyfriend could occasionally keep her company in future and I had agreed, albeit reluctantly, on condition that she promised to make sure she was not distracted from her main job of making sure the children were ok. Having only just turned 18, her mom was strict with her, and we had agreed that it would be better if she wasn't aware of the arrangement. I assumed that he would be there with her this evening and would take her home once I arrived, so any lingering awkwardness would be avoided. \n\nI was surprised therefore to arrive home about 11:15pm and find no other car on the drive. I opened the front door and went inside to find Cassandra sitting on the sofa in the living room with the lights dimmed, watching TV alone.\n\n\"Hi Cass,\" I said, in my best, normal, 'nothing ever happened last time' voice, \"is everything ok?\"\n\n\"The children are fine and fast asleep.\" she said, a bit subdued, \"they have been no trouble.\"\n\n\"Thanks Cass, that's great, I will just go and check on them and then I'll take you home,\" I said, turning and quietly walking up the stairs.\n\nWe trusted her with the children, so as I expected, they were just as she had said. After watching them in their untroubled sleep for a few moments, I closed the door quietly and walked back downstairs to the living room. I turned the lights up a bit and sat down on the far end of the sofa and looked over at Cassandra. \n\nI took in the sight of her, dressed in a white, short sleeved shirt and a tartan mini skirt, that I noticed was certainly 'mini', as I could see a good deal of thigh. Although something seemed not quite right with her. It looked as if her eyes were a bit puffy and slightly red and although she was looking at the TV, it was clear she was not really engaged with the programme. She seemed to be shaking slightly too.\n\n\"Hey,\" I said, \"are you ok, are you not feeling well?\"\n\n\"I am not sure I want to talk about it Pete.\" she whispered, and dabbed at her eyes with a tissue.\n\n\"Has something upset you?\" I said, immediately beginning to wonder if it had anything to do with our last encounter and what she was thinking. Also, she had never called me by my first name before and I wasn't sure if that was good or bad.\n\n\"I don't know whether I should say anything,\" she whispered again.\n\n\"Say anything about what?\" I nervously asked, certain now that she had thought about what we had done last time and had had second thoughts. \"Com'on Cass what's the matter, I can see you are upset about something,\" I said gently.\n\nThere was then one of those pauses where I could only hear my heartbeat and the drone of the TV in the background, my heart was beating faster and I felt my stomach tightening up, thinking of the repercussions if she had decided to tell anyone. I rode out the silence and wait for her to speak.\n\nAfter what seemed like an age, but was probably less than a minute, she said quietly, \"It's my boyfriend.\"\n\n\"Your boyfriend,\" I repeated like a parrot, letting out the breath I didn't know I had been holding, \"what about him?\"\n\n\"Well, you know you said he could come and keep me company here occasionally.\"\n\n\"Yes.\"\n\n\"He sort of, did tonight...at least for a while.\"\n\n\"So why did he leave?\" I asked.\n\n\"It's a bit personal and embarrassing,\" she said, \"and I am not sure you can help.\"\n\n\"Look, I could do with a drink,\" I said looking at her, \"how about I get us both one and if you want to, you can tell me what's happened?\"\n\nShe nodded her head.\n\n\"Lager ok?\" I asked.\n\nAnother nod.\n\nI returned with two glasses and handed her one, noticing that she had muted the TV sound and had stopped dabbing her eyes. I sat down beside her, putting my glass on the coffee table in front of us and swivelled slightly to face her, resting my left arm on the back of the sofa.\n\nI waited until she had taken a few sips of her drink, then said, \"So Cass, why don't you start at the beginning and tell me why you are so upset, don't be embarrassed, we are friends, you can say what you like to me, it won't go outside this room.\"\n\nOnce again there was silence for a few moments, so I drank a little of my drink and waited.\n\n\"Well,\" she finally said, a little above a whisper. \"as I said, he did come over and it was nice to start with, being able to sit and talk without my parents listening in. We weren't talking about anything weird or anything, but it felt as though we could talk about anything if we wanted and no one would 'tut' at us, if you can see what I mean.\"\n\n\"Ok,\" I said, \"I understand, a bit of privacy is always nice.\"\n\nShe took a gulp of her drink and continued, \"We chatted about all sorts of things and I was really relaxed with him, until he suddenly put his hand on my leg and started stroking it. I didn't mind at first, but then...\" she paused to drink some more, \"it's awkward telling you this, I am not sure if I can.\"\n\n\"It's ok Cass,\" I said, giving her nearest arm a quick stroke with the back of my right hand, \"I'm not your dad, I won't judge you and you don't have to be shy with me.\"\n\n\"He ...well...he just pushed his hand right up my skirt, in a sort of rough way,\" she said quickly, a red flush gradually moving up her neck and face. \"Before I really realised what he intended, he had his fingers touching me...you know, where you did before... but it felt very different. It was almost like he was forcing himself onto me and all the pleasant atmosphere of earlier just disappeared. While I was struggling to get his hand out from under my skirt, he must have unzipped his jeans with his other hand, because the next thing I saw was his 'thing' sticking out of them. I was scared to make too much noise in fending him off in case it woke and frightened the children\"\n\nBy now her face was very red and she was taking large sips of her drink. I thought she might be on the brink of crying again, I felt relieved that she had also mentioned that we had been fairly intimate last time and didn't seem unhappy about that experience.\n\nI shuffled over on the sofa and put my arm round her shoulders, \"Did he... emm, do anything more,\" I asked, hoping the answer would be no.\n\n\"No, but I am sure he would have tried if I hadn't fought him off. I told him to leave and not to call me again,\" she said, relaxing slightly against me.\n\n\"He doesn't sound like a very nice guy, so maybe you did the right thing. Don't worry though, you are an attractive young girl, I am sure there will be others that will treat you better,\" I said, and remembering how she liked it last time, I ran my fingers lightly in her hair.\n\nAt this, she snuggled in a bit closer, turning slightly, to put her head on my shoulder.\n\n\"Thank you,\" she said, \"for listening and being easy to talk to, I daren't tell either of my parents, I think they might stop me seeing anyone else for a while if they knew.\"\n\n\"I am glad I could help,\" I said, my fingers now under her hair, gently massaging her scalp as we talked. Are you feeling a bit better now Cass having told me?\"\n\n\"Mmmm,\" she whispered, \"thank you for listening, and that's so soothing too.\"\n\nI knew from the last time we had been in this position that she enjoyed having her scalp gently massaged and her hair lightly pulled. I continued moving my fingers around in her hair and up and down the back of her head, feeling her moving her head slightly like a cat when stroked.\n\nWith her head on my shoulder, I could smell a slight hint of perfume, I recognised it instantly as Chanel No.5, one of my favourites, a very sexy and expensive fragrance, that rose from her warm skin. This lady had gone to some trouble for her boyfriend and to be truthful, being so close to her was turning me on somewhat.\n\n\"I think it has not been a great evening for you, would you like me to take you home?\" I asked. \n\n\"No, not yet, if you're not in a hurry to get rid of me,\" she smiled for the first time, \"After the evening I have had, I'm enjoying just sitting here quietly with you, it's very relaxing.\"\n\n\"No, there's no hurry, emmm... shall I top up your drink?\"\n\n\"Please,\" she said.\n\nI got up and fetched another can of lager, using it to top both of our drinks up. I sat back down next to her and she immediately moved up close to me again, back to almost the same position as before. I put my left arm around her shoulders again, pulling her towards me a little and then lightly stroked her hair around the back of her ear with my right hand.\n\n\"I could put up with that all night,\" she said with a gentle sigh. \n\nWith my hand almost cupping her left cheek now, I turned her head slightly more to face me, brushed the hair back round her ear and kissed her lips. She hadn't objected the last time, but I wasn't sure what her reaction might be having had one guy already doing something she didn't want tonight, but to my relief, she kissed me back and held me in that kiss for a while, letting me nibble her sensual lips.\n\nBreaking the kiss, she said, \"You are so different to him, you are very gentle, and it seems like you care how I feel. He only seemed to care for himself.\" And with that, she leaned in again and kissed me, she put one hand on the back of my head and opening her mouth a little and slid her tongue over my lips.\n\nI was surprised she was being so forward, as last time I had led all that we did, Cass just being a willing recipient. I opened my mouth and let my tongue play with hers a little, noticing that her breathing had gone up a notch. Now she definitely had me turned on, my erection already pushing against my jeans. We continued to kiss, our tongues diving in and out of each other's mouths, she may have been new to this, but she could certainly kiss. She obviously enjoyed it, as muffled moans escaped from her as we both breathed noisily through our noses, not wanting to break apart.\n\nShe jumped a little when I moved my right hand down onto her shirt-covered left breast but carried on kissing me with perhaps a little more vigour when I gently ran my palm over it, feeling the nipple harden, even through her shirt and bra.\n\nBreaking the kiss, I ran my lips along her cheek and down onto her neck, nibbling the warm flesh just under her ear with my lips, eliciting murmurs and sighs of pleasure from her. Feeling confident that she was comfortable with what I was doing, one by one I undid the buttons on her shirt until it was fully open and slipped my hand inside, cupping her bra-clad breast and then feeling for her nipple with my fingertips. She turned her head towards me and once again and took hold of my lips with hers, slowly and sensually pushing her tongue back into my mouth. \n\nWhile moving my hand around on her bra, I was surprised to find a front fastening clasp. Had she worn this especially for her boyfriend to make it easier for him? I didn't know, but I opened it easily and with a little push, I released her left breast from its confines and began a more earnest stroking of the warm globe and pulling on her nipple. She didn't have large breasts, but her large nipple more than made up for that. I weighed it in my hand where it fitted just nicely, then dragged my palm over the nipple a few times. After only a few minutes of this, she again broke the kiss and leaned forward. I thought that was it and she was going to get up and leave, but blushing slightly, she quickly slipped her shirt off, followed by her bra and then settled back to the same position as before, giving me access to not only touch but see her pert breasts and very erect nipples. Not wanting to neglect the gift she had offered me, I moved my head down and licked round the nearest nipple, flicking it with my tongue. Her breath came out loudly, almost as a moan. I progressed to sucking her nipple into my mouth and using my tongue to play with it, gently nibbling with my teeth. At the same time, I gave the other nipple attention with my fingers, both nubs now rock-hard, surrounded by her darker areolas.\n\nKnowing that she was actively wanting me to touch her and by her actions had effectively given me certain permissions, was making me wonder just how far she might want to go and had made me very excited at the prospect. I was still worried about her reaction and the consequences if I pushed it further and scared her as her boyfriend had, but the little voice in my head that was saying 'that's far enough, you need to stop now' gradually got fainter the more sexually excited I became. I reasoned that she was enjoying the attention and was comfortable with being semi-nude with me, so I could go further and just see how she reacted. As I had thought on the previous occasion, if I had misread the signs, I could always just say I got carried away and apologise before taking her home.\n\nWith this debate with myself settled in my head, and still sucking and playing with her delicious nipples, I moved gradually off the sofa to kneel on the floor, at the same time as gently pushing her left shoulder round with my right hand and easing her onto her back, forcing her to lift her legs so that she was lying full length on the sofa, her head supported by a cushion.\n\n\"What are you doing?\" she asked, her eyes a little more awake than they were.\n\n\"I was just making us both a little more comfortable\" I replied, still rolling my palm over her nipple, but wondering if she was going to call a halt. \"I was getting bit cramped and errrr... my jeans are sort of squashing me.\"\n\n\"What do you mean 'squashing you?'\n\nI watched a thought process and realisation cross her face, \"Ohhh I see,\" a blush spreading up from her neck again, \"I'm sorry, you must think I am so stupid, I didn't realise what you meant, eerr...how it would...\" she stuttered, \"I haven't really had emmm. .. you know, much experience, to know you might have a problem.\"\n\nI carried on stroking her breasts, gently alternating from one to the other and down over her stomach to the waistband of her skirt, \"Haven't you seen what happens to any of your boyfriends when they see how attractive you are, and you kiss them like you kissed me?\" I asked quietly.\n\n\"I haven't gone very far with them or let them do too much,\" she said shyly, \"because like this latest one, the few boys I have known just wanted to get there quickly to satisfy themselves and I didn't feel they were interested in whether I was enjoying it or not. I might have let him go a bit further tonight if he had been more loving...but..\"\n\nI noticed her eyes had gone a little moist and the last thing I wanted was for her to get upset again.\n\n\"Don't worry,\" I said, \"it's only through experiencing things that you know what you like or don't like, and you don't have to do anything you don't want to do.\"\n\n\"It's ok, I didn't mean you, and don't think bad of me, because I am not normally so bold, but you make me feel at ease and what you are doing feels really good.\"\n\nI leaned over and kissed her and she responded by pulling my head down and pushing her tongue into my mouth again. Now that I was on my knees, my erect cock was not so confined and stood vertically in my jeans. I could feel a small amount of moisture seeping into my underwear, she had got me to that state so easily.\n\nThe next time my hand went down onto her stomach to the waistband of her skirt, I passed over it and down her skirt covered thigh. I am sure she had worn the very short tartan skirt to impress her boyfriend, so it wasn't far to find bare skin where her skirt ended way above her knees. Moving across to her other leg, I brought my hand back up, carrying the hem of her skirt with it. Her tongue -play increased as she felt it and she was breathing heavier still. I wanted to see what underwear she was wearing tonight but didn't want to stop kissing her as it was clear that that excited her too.\n\nMy hand roamed over her panties, she moaned into my mouth, they felt different to the plain cotton white ones I had discovered the previous time. These felt as though they had a texture to them. I could feel the heat from her and smell the fact that she was very aroused. I slipped my middle finger down over her panties between her legs, until I came to a patch that was soaking wet. She moved her hips just slightly upwards and opened her legs a little while sucking vigorously on my tongue, allowing me to run my finger up and down pushing the material of her panties gently between her swollen labia, lubricated by the juices soaking them.\n\nAfter doing this for a while, and feeling her move to meet my finger craving more friction, I let my finger slide out, to an almost audible sigh of disappointment from Cass. I fumbled around the side of her skirt and found a button which I undid and a small zip. I tugged gently at first on her skirt to see if she was happy with what I wanted to do and was thrilled when she lifted her hips to allow me to pull it down her legs and completely remove it. Releasing my tongue from her mouth, I returned to sucking her nipples one at a time and swirling them in my mouth. I put my hand down and returned to sliding my finger up and down the camel toe of her panties. She had her eyes closed now and was breathing heavily and quietly moaning, gently rubbing her thighs together. I looked down to see that she was indeed wearing a sexy pair of panties. They were black and sculptured in a sort of lace and see-though in places. That boyfriend had certainly missed a treat. The next time I reached the waistband, I slid my hand down and under the elastic. I felt the soft down of neatly trimmed pubic hair, damp now from her arousal. Repeating the earlier movement with my finger, but now between her bare pussy lips, I moved it slowly up and down, making sure to cover her clit with her lubrication and slide it over its sensitive little head.",
        "She started to open her legs wider, but before she got too far, I took hold of her panties and tugged them a little way down, exposing half of her pubic hair.\n\nAs a reflex, she suddenly closed her legs. I thought again 'that's it I really have gone too far'.\n\n\"Sorry Cass, I didn't mean to...\" I started.\n\n\"No\", she said, \"it's not that,\" she said looking me in the eye.\n\nShe was certainly a blusher and was blushing again but deep red now, and not just from being aroused.\n\n\"What is it?\" I said, a little puzzled, \"I thought maybe I had got too carried away.\"\n\n\"It's just that...well..,\" she broke eye contact and looked down shyly, \"it's silly really, you are making me feel so good, but if you take those off, I will be naked and it's sort of different being like that in front of you.\" \n\nShe paused.\n\nI sensed she wanted to say something else, so I waited, my hand still nestling in her pubic hair, just moving it around with a light touch.\n\nI could see her plucking up courage, then, \"Would it be ok if you took your clothes off, I would feel more 'comfortable' if I could see you too?\"\n\nI hadn't thought that would be what she wanted and had been wondered whether I was going to go as far as to be naked with her and the temptation that would bring.\n\n\"Are you sure Cass?\" I asked.\n\n\"Yes,\" she almost whispered, \"I told you I haven't had much experience in a 'close-up' sort of way, if you know what I mean, so I would like to see. As you said, I won't know until I experience things.\"\n\n\"Ok, if you're sure.\" I felt almost odd about it, here was our attractive young babysitter, almost naked and both of us aroused wanting me to strip for her, not something I had done before. \n\nI took my shirt off quickly and then unbuttoned and unzipped my jeans, feeling her eyes on me all the time. The bulge in my boxers came into view as I slipped my jeans off. She hadn't moved, but I could see her looking at it, almost mesmerised. Without waiting, I slipped my boxers off and my erect cock bounced up and stood upright touching my stomach.\n\nI heard Cass' intake of breath.\n\nI am only what would probably be considered as average in length, but a good girth and am uncircumcised. However, tonight I felt it was as big and hard as it had ever been. As I suspected, there was some clear liquid pooling out from the end, a sure sign of my excitement.\n\n\"Is that better,\" I asked, moving a little closer to her.\n\nShe nodded, still fixated on my erection.\n\n\"How about moving over a little and I can lie beside you,\" I said, approaching the sofa.\n\nShe shuffled towards the back of the sofa, turning to lie on her side facing me.\n\nI climbed onto it and lay facing her, the restricted width forcing my cock to rest against her stomach, smearing a tiny trail of pre-cum onto her skin. I put one arm round her and pulled her to me, feeling her hard nipples pressing into my chest. I lost no time in clamping my lips to hers and again enjoying the sensation of our dancing tongues. Every so often my cock gave a pulse and she sort of giggled through the kissing as she felt it on her stomach. I gently massaged her shoulders, then the small of her back, going down and over her firm, panty-clad butt cheeks, pressing harder when I got there, moving them around.\n\n\"Could you do what you were doing before, you know with your finger,\" she said timidly.\n\n\"See if you like this better Cass,\" I said, taking my cock in my hand, making it horizontal before pressing it between her thighs against the wet gusset of her panties.\n\nShe moved her legs a little to get more comfortable then closed them, trapping my hard cock against her pussy, only the material of her panties separating us. I began slowly moving forwards and back using her moisture as lubrication. It was an intense feeling to have my cock so close to her pussy and I could tell she was feeling it too as she moaned and sighed at each stroke, her kissing becoming more frenzied. She got the rhythm and started to move her hips back and forth rubbing herself on me so that I almost didn't have to move. I tried to slow her down a little, but she was really into it, grinding herself against my cock. She was getting me too close to cumming and I wanted to prolong it more and see if she would go further, so I gently backed my cock out from between her legs.\n\n\"Please let's just do that some more Pete,\" she whispered, \"I've never done this before and it feels really good,\" she whispered, trying to get closer to me again.\n\n\"I think I can make it feel even better if we do this,\" I said, and reached down to pull at her panties. This time, she let me pull them down her legs and helped by lifting her hips off the sofa and moving her legs until I was able to drop them on the floor.\n\nI moved back towards her and began to press my cock back between her legs but found that she hadn't opened them, and she felt a bit tense.\n\n\"It's ok Cass, we are just going to do the same thing, but I'm sure you will enjoy it more,\" I tried to reassure her.\n\n\"But it won't go inside me will it, I am not sure about that?\"\n\nI wondered if we had reached her limit.\n\n\"No, just as we did before, but better.\"\n\n\"Hmmm, well,\" she hesitated, \"ok then, I trust you not to do anything I don't want,\" she said.\n\nI ran my hand down over her hips and down to that very damp place, parting her fine pubic hair and stroked each of her pussy lips in turn then moved it in-between, down to the opening of her vagina and back to touch her clit.\n\n\"Ohh God Pete,\" she moaned,\" letting out a huge breath.\n\n\"Is that ok?\"\n\n\"Yes, oh please don't stop.\"\n\nAs I had finger fucked her before with two fingers on the first occasion a couple of weeks ago, I knew that although she was technically a virgin, she had lost her hymen some time ago either to her own probing or some sporting activity at school. So, as I moved my finger down to her entrance each time, I began to slip my finger just up inside her, then take it out and continue the up stroke to her clit spreading more of her secretions onto it. She had her arm round me pulling me to her and breathing very heavily, all the time little sounds coming from her.\n\nI didn't want her to come either yet as I didn't want this to end too soon, so as I finished a stroke, I took hold of my cock and put it where my fingers had been, between her bare pussy lips and pushed forwards. With all her juices there, it slipped easy between them and out at the back. Now the top of my cock was in direct contact with her pussy, my pubic bone against hers and it felt amazing. \n\n\"Yesss..mmm... oh God,\" she kept repeating. \"Is that your ...emm thing right against me? It's so warm and firm and much better than your finger. I've never felt anything like this,\" and started to move her hips, allowing my cock to slide in and out between her engorged lips, the top of it rubbing her clit and the rest wrapped inside her labia. \n\nEach time she pulled back, the tip of my cock head grazed her opening, I could feel it just fractionally dip in and out as it passed by. It felt so close to actually fucking her that we could have been doing it.\n\nI was in heaven and it seemed so was she, as I could feel her trembling. She had her hand on the back of my head, pulling my lips hard against hers sucking on my tongue. She was a shy girl and I had no idea there was all this passion inside her, I wasn't sure what I had released.\n\n\"Pete,\" she said, drawing her head away, her voice very quiet and not looking me in the eye, \"I have had these feelings when I have touched myself, but never so intense, it just makes me want more.\"\n\n\"Well..\" I started.\n\n\"No, let me finish, ..oh this is a bit embarrassing, I haven't said this to anyone else but I have used things to sort of pretend it was a man, my friends used to talk about it so I tried it a few times. \n\n\"What sort of things did you try? I asked intrigued as to what she might have used to masturbate.\n\n\"It might sound silly to you, so don't laugh, it was just the usual things, \" she said, \"first just small things like a toothbrush handle, then different shaped hair brush handles and once one of those 'roll-on' deodorant bottle things.\"\n\n\"Ok, experimenting is part of working out what's what, it's nothing to be ashamed about,\" I said not knowing where this was going.\n\n\"But now that I've seen your - 'thing'.\"\n\n\"You can say 'cock' Cass it won't shock me,\" I smiled.\n\n\"Well ok, now that I've seen your... cock , I know the other things weren't anything like it. It's so much bigger and I wonder if I could feel just a bit of it inside me - just to see what it's like, but I don't know if it will hurt.\"\n\nI was so worked up that my thoughts were 'yes, yes, yes,' but a tiny part of me was still\n\na bit apprehensive of going the whole way with her. What would she think afterwards, would she regret it? I had no condoms either and although unlikely, if we were very unlucky, she could get pregnant. That would be a disaster and have long lasting consequences, but the thought of actually putting my cock inside this lovely young girl and it would be 'just a bit', it wasn't really fucking was it? My current state of arousal and skewed logic at that moment supressed any other thoughts I might have had.\n\n\"Cass, you are sure you want to do this, I don't want to hurt you and it's not something we can undo?\"\n\n\"Please Pete, just let me feel it for a moment, it only needs to be a bit, so I can know what it's like. If it's too much I will say stop.\"\n\n\"Well ok if you are sure, just turn a little and lie on your back.\"\n\nAs she did this, I swung one leg over and then the other so that I was in-between her legs supporting myself on my elbows. I could feel her soft thighs either side of mine and my cock head was resting in her pubic hair. I moved my head down and started flicking her sensitive nipples again with my tongue and at the same time, supporting myself on one elbow, moved one hand down to her pussy and gently pushed a finger inside her, finding that she was still very wet. I finger fucked her slowly for a couple of minutes or so, just to keep her on a high and she went back to sighs and moans as she felt the sensations.\n\nWhen she seemed ready, I took my finger out and taking hold of my cock, I rolled the foreskin back and rubbed the swollen head up a down between her pussy lips to lubricate it. I than put it at her entrance and rotated it around feeling for the exact place.\n\n\"Cass, I am only going to put the head in so you can feel it ok?\"\n\n\"Yes, I'm ready.\"\n\nI pushed forwards very slowly and felt her vagina open slightly trying to accept me, I had put two fingers in her the time before, but my cock was bigger than that and she was very tight. She closed her eyes and took an intake of breath and seemed to be holding it as I struggled to get the head past her inner lips into her waiting warm tunnel. I am sure if I hadn't been so hard it wouldn't have been possible despite all the free-flowing juices from her.\n\nThen suddenly the head was inside her, enclosed by warm wetness, \"Oooo,\" she said letting go her breath, \"God PETE, that feels so big, much bigger than anything I have used, I feel really stretched.\"\n\n\"Are you alright, do you want me to take it out?\"\n\n\"No, no, let me get used to it, it feels hard, but soft too, not like brush handles and the like,\" she giggled.\n\nI looked down at our naked young babysitter underneath me and thought what a sexy picture it made. If I looked further down, I could see my cock just penetrating her, surrounded by her very wet pubic hair, but most of my cock still outside of her. Now that I was actually inside her even just this far, I was trying hard to resist the urge to just push it all the way in, but that wasn't what she had asked, so I held still.\n\nShe opened her eyes and saw me looking up and down her body, \"I didn't know what it would feel like Pete, but it is amazing, I'd like to feel a bit more can you just... \"\n\n\"I'm not sure we should Cass, maybe this is far enough for you to feel what it's like.\"\n\n\"You don't want to then Pete?\" she said almost accusingly.\n\n\"Cass, yes I do, of course I do, you are such a beautiful sexy lady, I just wonder if I should.\"\n\n\"Pleeease Pete, you are already inside me, a bit more can't hurt\"\n\nMy pleasure centre had taken over any logical thinking, so I slowly inched forward feeling the head move up further into her channel and another inch disappeared inside her.\n\n\"You still ok Cass?\"\n\n\"Mmmm I am more used to it now, my tummy feels all tingly and trembly, wow, some more Pete.\"\n\n\"Cass, you said you just want to feel what it was like; I want to make sure you know what you're doing.\"\n\n\"I dooo, please, just a bit more.\"\n\nOver the next few seconds, I slowly pushed inside her inch by inch, hearing contented sounds from her until at last our pubic hair cushioned our pubic bones as they came together.\n\n\"You are all inside me now Pete?\"\n\n\"Yes Cass all the way, you have taken all of me.\" I said, feeling the tip of my cock head just touching her cervix. If I ejaculated now, it would not be good. I stayed still not daring yet to move.\n\n\"I can't believe we're actually doing it,\" she said, \"I have your ...emm cock right inside me, I didn't think it would all go in. I feel so full, but it's a nice full feeling and I've got a sort of strong coiled-up feeling in my body like a spring that needs to be released that I've never felt before.\"\n\n\"Can we try moving together Pete, just slowly, I want to feel that too?\"\n\nThere was no going back now, and I wanted it too, so I slowly pulled back, feeling the suction from her tight vagina sucking at my cock as it came almost out then pushing back in all the way. We were both making quiet noises of pleasure as slowly but surely, I fucked her for the first time. She was holding on to me tightly with her arms round me, her feet flat on the sofa and her knees slightly bent in a position I guess she found best for her. Our pace gradually increased as she got used to it, the squelchy noises from her vagina adding to the smell and feel of sex in the room.\n\nHer eyes were closed again, but her mouth was open, she was beginning to make a lot of noise and I was suddenly worried that she might wake the children who were asleep upstairs. I put my mouth over hers and immediately that luscious tongue of hers darted into my mouth and I sucked on it. She was really into it now, her hands on my butt pulling me into her and pushing up her hips to meet me, to get as much of me inside her as she could. I was getting close and even through the sexual haze I knew that even this was dangerous, but I really mustn't come inside her.\n\nI was trying to slow her down a little for my sake as well as hers, as I wanted her to reach her climax before I would have to stop, but as I did so, I started to feel her tense up, and her grip on my cock increase. Her breathing got very rapid. Suddenly she shook violently, her eyes opened but were not focussed on anything, her vagina seemed to pulse and alternately grip and release my cock. I kept moving with long strokes although the renewed friction was pushing me close to the edge.\n\n\"Oh, fuck Pete,\" she shouted, and I felt her orgasm ripple over her with me deep inside. She pushed her hips upwards smashing our pubic bones together, her body seeming to convulse. She managed a few more thrusts before falling back exhausted. \n\nHearing this na\u00efve girl say 'fuck' like that in addition to the sensations she was giving me took me right over the edge and as I felt my cum surging up my cock, I pulled out with lightning speed just as the first ropes shot out of the bulbous end of my cock and landed between her breasts. Two, three, four further spurts covered the front of her body with white liquid and I collapsed on top of her, the remaining few drops of sperm oozing onto her pubic hair where my cock came to rest.\n\nAfter a moment or two, she seemed to start to gather her senses and focus on my face.\n\n\"Wow, Pete, what was that for God's sake,\" she said breathlessly, \"I have made myself feel good before but that was something else. Look, I am still shaking. What did you do to me?\"\n\n\"You said you wanted to feel what It was like Cass, so I have just shown you. It looks like you enjoyed it,\" I said with a grin, \"but no one must ever know. You understand?\"\n\n\"Don't worry, I did ask you to do it and it was way beyond what I thought it would be like, I love that you made it so good the first time, but what's all this?\" she said looking down and putting her fingers in some of my cum on her breast?\"\n\n\"That's what sperm or 'cum', as it's known, looks like when I ejaculate. I couldn't do it inside you as there would be too big a risk of you getting pregnant and I am sure we don't need that complication, so I pulled out and it shot all over you. I'll get a towel and clean you up.\"\n\n\"No, it's ok, thanks, I can just use my tissues. I am not going to shower tonight now, and it will remind me when I get home how great it was to feel you inside me.\"\n\nShe started to dab at the cum covering the front of her body and wipe it out of her pubic hair.\n\n\"I can easily get you a damp cloth Cass.\"\n\n\"No, I'm fine,\" she said, having got most of it off her.\n\n\"Talking of home, I'd love you to stay longer but it is getting late and your parents will wonder what you have been doing until now.\"\n\n\"I'd really like to stay longer Pete, but you are right, I need to get home.\"\n\nWe both got dressed quickly and although I offered to drive her the short distance to her home she decided to walk.\n\nJust before she left, she kissed me and said, \"Thanks Pete, it's our secret and I think there might be more I want to find out about next time you need a babysitter.\"\n\nAfter she left, I realised that throughout the whole encounter, despite how far we had gone, she was so shy that she hadn't touched my cock once, maybe that might be something to teach her..."
    ],
    "authorname": "jasperspen",
    "tags": [
        "mini skirt",
        "naive",
        "shy",
        "sitter",
        "young 18",
        "virgin",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/memories-of-our-babysitter-ch-02"
}