{
    "title": "Requited Ch. 10",
    "pages": [
        "\"It's Em again.\" He says, speaking a little slower than usual. We had a few beers at the pool. Andy's phone has been buzzing for a while. There's a bonfire at the beach and a few people have invited him to come out.\n\n\"Wanna go?\" He asks.\n\n\"Nah. Let's stay home.\"\n\n\"Are you sure?\" He says, looking a little concerned, \"It isn't like you to want to miss out. What happened to your infamous FOMO?\"\n\n\"I'm just feeling chilled here.\" I say.\n\nWe have another beer on the porch. We flirt and goof around for a while, and then he says, \"I've got one.\"\n\n\"One what?\"\n\n\"A game, Dumbass.\"\n\n\"Ugh,\" I say, after how heavy the last game turned, I'm not sure I want to play again. The booze has loosened my tongue, and I have a vague sense of concern that I'm in no state to hide very much right now.\n\n\"It's called, Ask Any Question.\" He says.\n\n\"Sounds like a one-way ticket to trouble.\"\n\n\"Want to play, or not?\"\n\nDespite myself, I do. I do want to play. I still have so many questions. There are still so many things I want to understand. \"Okay, I'll play.\"\n\n\"I'll go first,\" he says, \"I've been thinking about this for a while. It's bothering me. So, you've said that you wanted something with me from early on, right?\"\n\n\"Yes.\"\n\n\"So, if you wanted me, why did you get together with Ashleigh?\"\n\nI don't like talking about Ashleigh. It feels unfair to her. I don't like the way it makes Andy's eyes look, and I don't like the way it makes me feel. \"I, uh, I was going through a bad patch. A very bad patch. I was convinced you didn't want me. I was hurting like crazy. I was trying everything I could think of to give you a hint. Touching you, telling you I loved you, asking if we could jerk off together. Nothing made a difference. Every time you were out of my sight, I felt sick about where you what you were doing and who you were doing it with. Every day, it felt like I was being hit by a hundred rejections. The final straw was when I saw you with that prick, Alex Meeking.\"\n\n\"I didn't know you knew about that.\"\n\n\"I did. I saw you coming out of his room. It nearly killed me. What were you thinking? Why would you be with a guy like that?\"\n\n\"Alex is gay, West. He's as gay as they get, he's just a closeted asshole. I fucked him to get him to leave you alone and stop calling you a faggot.\"\n\nI'm instantly dizzy and wildly enraged, \"What?\"\n\n\"That's why he was doing it. To provoke a reaction from me. So, I gave him one.\"\n\nI run my hands though my hair angrily, \"Well, well done. Very, very well done. You got a reaction alright. I'll bet you got a reaction out of him. You sure as hell got a reaction out of me. After that, I thought there was no way in the world that you wanted me. No way you could want some-one like Alex and want me. We're nothing alike.\"\n\n\"So, you're saying you got together with Ashleigh, because I fucked Alex? Is that what you're saying?\" He rubs his temples, \"God, I'm getting a headache.\"\n\n\"Yeah, I guess I did. I just couldn't spend any more time wondering what guys like Alex had, that I didn't.\"\n\n\"Well, I didn't have to wonder that about Ash, did I? I know exactly what she has that I don't.\"\n\n\"Is that what you're trying to talk about here? Is that the point of this shitty game?\"\n\n\"Maybe it is.\"\n\n\"Fine, what do you want to know?\"\n\n\"I want to know if you're going to wake up one of these days and realise you're missing pussy.\"\n\n\"Are you going to wake up one of these days and realise you're missing a new piece of ass?\"\n\n\"No,\" he says, as if the idea is ridiculous, \"of course not.\"\n\n\"Well, it's the same for me.\"\n\n\"You can't try to tell me men and women are the same to you, West. Don't even try.\"\n\n\"Men and women aren't the same, but they aren't as different as you think. It's hard to explain, because I haven't fully been with any other guys, but when I kissed that Matt guy, it just felt like a nice, exciting kiss. I liked the fact that he was a guy, and I liked the fact that he had a dick, it did feel different, but it didn't feel that different from kissing a new girl. It was different with you though. From the first second we touched, I've never felt anything like it. I-I don't know how to describe it. It felt electric. Out of this world. Like it's from some other time or place. It's different with you. I don't know why or how, I just know, it's different with you. I'm not going to wake up any day, ever, and want something other than what we have.\"\n\n\"I hear you, but it's hard for me, West. I know I can't compete with a woman. I can't, if that's what you want.\"\n\n\"How do you think I feel? I have God knows how many guys to compete with. I don't know what you've done with them or how you felt about it. You never tell me anything about it. I only know, I'm playing catch-up and it doesn't feel good. You're so good, Andy, at what you do. I hate knowing you did it with other guys. I hate it. Right now, I hardly want to leave the house because I keep thinking we might go to the beach and run into your fedora fuck buddy. I can't stand it.\"\n\nHis eyes widen in surprise. I can see he had no idea I felt like this. It's no surprise, really, given I've never felt like this about anyone else.\n\n\"He's not an issue.\"\n\n\"How do you know? Have you seen him?\" I ask, quick panic rising.\n\n\"No, but he sent me a message a while back.\"\n\n\"What?\" Dark jealousy twists in my side, strangling me. \"Have you spoken to him? Has he tried to see you?\"\n\n\"He sent me a message to try to hook up when he arrived.\"\n\n\"When was that?\" I hear a terrible, unfamiliar possessiveness in my voice.\n\n\"A few days ago.\" He says, taking his phone out of his pocket and opening his messages. He hands it to me.\n\nDespite myself, I take the phone from him and I check it quickly.\n\nThere's a message from Oren:\n\nHeyy, just arrived. You down for tonite?\n\nAndy replied, Nah, I'm taken.\n\nOren took a while to reply, judging by the time stamp, but when he did, he said, You know where to find me if you change your mind.\n\nI won't. The guy I'm with is West. He's it for me.\n\n\"Jesus,\" I say, trying not to smile, \"you're cold, Andy.\"\n\n\"I'm not cold with you, am I?\" He says, stepping towards me and putting his hand behind my neck.\n\n\"No,\" I say, as his hand warms me, \"you're not.\" I kiss him softly, \"Are we going to be okay?\"\n\n\"Yeah, as long as you keep staying stuff about electricity and our fucking being out of this world, I'll be alright. You?\"\n\n\"I don't know,\" I moan into his ear, \"I'm jealous when it comes to you. I've never been like this before. I hate admitting it because I know it's a sign of weakness, but it's true. I am jealous. I'll try not to be. I'll work on it, okay?\"\n\n\"Will it help if I tell you, I love you?\"\n\n\"Yes, that helps a lot.\"\n\n\"Will it help if I tell you, you're the best I've ever had?\"\n\n\"Yes, that won't hurt.\"\n\n\"Will it help if I tell you, you have the sexiest dick on the planet?\"\n\nI start laughing, despite myself, \"You like my dick, huh?\"\n\n\"I don't just like it,\" he says, sinking down onto his knees, rubbing his hand up and down me, \"I love it. I love it so much.\"\n\nHappiness gurgles and bubbles up inside me, as he frees me from my jeans.\n\n\"I love it so much, I could write a poem about it.\" He holds me in his hand, pulling me down slightly, talking as if he's talking into a mic, \"An Ode To The Truncheon in West Baxter's Pants.\"\n\nI throw my head back and roar with laughter.\n\n\"Seriously,\" he says, \"I love it so much, I might draw it one day. No, no, I won't draw it. I'll paint it. I'll paint it, so I never, ever forget it.\"\n\nI laugh soft and low, \"Turn around and I'll give you something to remember. I'll give you something, you'll never, ever forget.\"\n\nHis eyes change. They soften slightly. They become receptive. Open. He pulls his shirt off, over his head and then unbuttons his shorts. He's not just undressing. It's an act of surrender. He turns around, facing away from me now, and pushes his shorts down to his knees. He leans forward, over the coffee table, spreading his legs and arching his back slightly so I can see the slightest hint of his hole. He looks back at me. Watching. Waiting.\n\nHe won't be waiting for long.\n\n*\n\nThe next day is as idyllic as a day could ever be. The weather is beautiful. Sunny and warm, without being so hot it's uncomfortable. I make waffles for breakfast and lie on the sofa in the den, reading, while Andy works. He's working on a new piece. He doesn't want to show it to me until it's done. It's driving me crazy, but I know his process, he doesn't usually show me his work until it's complete.\n\nThe back of the easel is facing me and he's standing behind it, facing me. It's not the worst thing, since every time I look up from my book, I see his beautiful face. He's concentrating hard. He has that far-away look on his face, like he can see something everyone one else can't. After a while, I start feeling twitchy. I seem to have a strict limit in the amount of time I can be around Andy, without touching him, nowadays.\n\n\"I'm going for a swim.\" I say, \"Want to come?\"\n\n\"Can you wait for a while? I'm nearly done for the day.\"\n\n\"Uuugh, I'll wait, but it's hard. I'm hard.\" I say, stroking the outline of my dick for his benefit, \"I need to cool down.\"\n\n\"Is that a fact?\" He laughs, completely comfortable with my discomfort. If anything, I can tell he enjoys it.\n\nHe doesn't leave me like that for long, he finishes up and then we head out to the pool, though I'd have been happier to head to the bedroom.\n\nWe swim together for a while. Well, he swims, and I grab him and grope him, like a man trying to drown another. Our limbs wind together slickly under the surface. He laughs and splashes me and gets out of the water, going to lie down on a lounger. I join him, lying on my back, closing my eyes as the sun warms my body. I try not to move. I try to lie still and dry off. But I'm burning and most of the heat is coming from inside me.\n\nAfter a while, he looks at me and smiles. He flicks his eyes at me quickly and then looks away, as his lips turn up.\n\n\"Are you teasing me, Andy?\"\n\n\"No,\" he says innocently, \"I'm just lying here, plotting my attack.\"\n\n\"Attack, huh?\" I say, as my dick pulses and thickens.\n\n\"Uh huh.\" He casts his eyes over me in a way that feels like something warm has been poured over me.\n\nI can't think what to say, so I don't reply.\n\n\"I just have so many great options,\" he says, pulling himself up, swinging his legs round and placing his feet on the ground, \"it's hard to choose one. I could have you on your knees with my dick in your mouth. I could do that. God knows, I'd enjoy it. Or, I could get you out of those shorts and bend you over that lounger.\"\n\nThe lawn-mower whines in the distance. The smell of freshly cut grass fills my senses. My belly clenches as I realise the gardener is here today.\n\n\"I could get you ready and have my cock inside you long before Stavros makes his way to this part of the garden.\" He continues, \"I'd have to be quick, so to make up for that, I'd do it hard. Hard enough that you'll be feeling it tomorrow.\"\n\nMy head swims, \"Oh fuck,\" I whisper, \"is this the Montgomery magic I've been waiting to see?\"\n\nHe smiles and throws his head back as he laughs. He doesn't laugh for long. He drops his chin and his gaze, \"Not even close.\"\n\n\"Oh fuck.\" I say again, swallowing so hard, I hear a hollow gulp. I get up quickly and back up a few paces. The thought of being fucked out here in the open, with Francesca inside and Stavros mowing the lawn on the grounds, has gone straight to my head. I love outdoor sex and I love/hate the thought of being caught. It drives me crazy.\n\nHe reaches into his bag and pulls out a bottle of lube, raising his eyebrows suggestively as he gets to his feet. I take another few paces back, smiling and glancing back quickly.\n\n\"Uh uh,\" he says, \"don't even think about running.\"\n\n\"Why not?\" I twitter.\n\n\"'Cause, I'm faster than you.\"\n\n\"Bullshit! You are you not.\"\n\n\"Oh, yes I am,\" he says with complete confidence, \"I definitely am. I'm faster, 'cause of how much I want what I'm chasing.\"\n\nI snicker nervously and take a couple of tentative steps back. He takes a long, purposeful stride towards me. His eyes are intense. More intense than ever. Menacing.\n\nI turn on my heel and run. I hear him laughing, a deep, hollow sound from his chest. I hear his footsteps, too, as I sprint across the lawn. My heart is pounding as if it's trying to escape from my chest. He's gaining on me. He reaches out and grabs me, catching me easily, wrapping an arm around my waist and pulling me back towards him.\n\n\"See?\" He whispers into my ear, \"Told you.\"\n\nI look around quickly. We are in the middle of the lawn. The house is to our right and the pool is behind us.\n\n\"What do you think?\" He threatens, \"Want me to fuck you right here?\"\n\nI look around again.\n\nWe're too exposed. We can't do it here.\n\nWe can't.\n\nI look to my left and break free, dashing toward the pool house. He takes a second to give chase, giving me a little head start. I run around to the back of the pool house. There's an outdoor shower behind it. It's in the open, but it's obscured slightly by the building and by a wax myrtle hedge that runs perpendicular to it, shielding it from the view of the house.\n\nHe smiles his approval at the place I've chosen. He doesn't say a word, he just pulls my board shorts open and pushes them down quickly. He does the same to his. He turns me around so quickly, I feel a little disoriented. He takes me by both wrists and presses my hands up against the wall of the shower. My hands are flat on either side of the faucet. I look around quickly, as he flicks open the lube, wasting no time at all, before pressing a finger into to me.\n\nI look around again as I'm suddenly hit by the reality of the situation. I'm excited. I'm panting, but I'm also nervous.\n\n\"What if Stavros sees us?\"\n\n\"Well,\" he drawls wickedly into my ear, \"then I'll just make him apologise for seeing my man naked.\"\n\nI laugh a little from the pure thrill of being called his. I arch back and moan as he gives me a second finger. I lean back against him and let him open me. It feels good. It feels so good, I can't stop him. I don't want to. I want him so much, I'm not even sure I would care if someone caught us.\n\nI hear the lube squelching again. This time, he's prepping his dick. I look around again, I can't see anyone. All I see is blue sky and green lawn and perfectly manicured vegetation.\n\nHe puts a hand on my shoulder, pushing me forward a little, as he lines up, \"We can hear the lawn mower,\" he says, \"if it stops, I'll stop and I'll grab you a towel, okay.\"\n\n\"Okay.\" I moan, not that I care very much anymore.\n\nAll I care about now, is the fact that he's forcing his dick into my sphincter. My ass is stretching. Opening. Distending. A long, low groan is forced from my guts. He enters me slowly, like he always does. He's gentle and careful with me but that doesn't mean I don't feel it. I do. I feel it all. Once he's buried deep inside me, he reaches forward and turns the faucet on. The spout is aimed straight at me and icy water hits me straight in the chest and runs down my body.\n\n\"Fuck!\" I exclaim, tensing and recoiling in shock. I tense so hard, I hear him wincing.\n\n\"Don't push me out.\" He says urgently, as he holds me firmly as I struggle to get out of the way of the water.\n\nHe has one arm on my hip and the other around my chest. I'm not going anywhere. He's chuckling softly as the water starts to run warm and then hot. My body loosens as the tension leaves me and is replaced by comforting heat. A warm, soothing heat in the front. A dark, intense burn in the back. He does fuck me hard. Every stroke is long and solid. Punishing. Purposeful.\n\n\"Stroke,\" he says, \"we have to be quick.\"\n\nAnd I do. I stroke with the desperate vigour of a man who could be caught at any second. A man who's painfully full and on the edge. A man chasing relief. A man who can't stop. A man who needs to come.\n\nI have to come.\n\nAnd, I do. I come so hard my knees buckle and moments later, so do Andy's. I feel a surge of heat flood my ass as he comes deep inside me. Our body's dip down for a few seconds as we groan and shake. I cling to the wall, grabbing the faucet for stability as he clings onto me, his body weight heavy against me. As he pulls out carefully, I notice the lawn mower is silent. The garden is soundless, except for the distant sound of waves crashing against the shore.\n\nHe grabs a couple of beach towels that were hanging on hooks near the shower, and tosses one to me, as he quickly wraps the other around his waist.\n\n*\n\nWe eat lunch on the porch, shirtless, in nothing but our towels.\n\nI love being with him.\n\nI love being with him and I love being with him. I love it. I love knowing that he's not wearing anything under his towel. I love knowing that his dick is feeling sensitive and spent right now. I love the feeling of him leaking out of my ass. I love everything about it. Mostly, I love the way he's looking at me. His eyes are soft and open. Light. They're smiling, even when the rest of him isn't.\n\nAndy looks happy.\n\nMy Andy looks happy.\n\nHe looks happier than I can ever remember seeing him. He looks relaxed and content. It makes me so happy to see him like this, I can hardly contain it.\n\n\"Oh man, I love you, Andy.\"\n\n\"I love you, too.\" He says immediately, leaning over to me, pulling my head towards him and kissing my temple.\n\nI sigh deeply, \"I don't think I'll ever get tired of hearing you say it back.\"\n\nAfterwards, Andy spreads a picnic blanket under the old Scarlet Oak tree near the house. We lie back, head-to-head, with our feet at opposite ends of the blanket. Now and again, he reaches over and runs his hand along the lobe of my ear. We drift in and out of sleep, with sound of the ocean lulling us into oblivion.\n\nWhen I wake, it's mid-afternoon. I look up at the clouds sailing by in the sky and don't move until I feel Andy waking up, too. We're both quiet. Tranquil. The kind of feeling that comes from being at the ocean and having a little too much sun. I feel so content, right now, I can't believe there's anything in the world that could ever bother me.\n\n\"Are you happy, Andy?\"\n\n\"Yeah,\" he says, \"I'm happy. I'm so happy, I actually feel a little stoned.\"\n\nI laugh. \"Me too. That's exactly how I feel.\"\n\n\"Is this what it's always like?\"\n\n\"What do you mean?\"\n\n\"Is this what it's like to be in love?\"\n\n\"I don't know,\" I say quickly, \"it was never like this. I've never felt like this before.\"\n\n\"But you've been in love, right?\"\n\n\"Yeah, at the time, I thought I loved Janine and I did loved Ash, despite everything, I did.\"\n\n\"Do you miss her?\" He asks quietly.\n\n\"No.\" I say honestly, \"I honestly don't. I was thinking about her the other day, wondering if I should call her or something, to tell her about you and me, and I realised, I don't miss her at all. I feel a bit bad about it. Like, I should at least have the decency to miss her a little, you know?\"\n\nHe smiles, \"What do you think you'd do if you saw her walking up the drive right now?\"\n\n\"Right now? With you and me lying here, all over each other, wearing nothing under our towels?\"\n\nHe nods.\n\n\"Well, that's easy. I'd throw myself over you, so you could use me as a human shield.\"\n\nHe laughs. \"Okay, okay, I get it.\"\n\nI laugh too and reach over and pull his head to little closer to mine, \"Why do you think it's like this? You know, why is it so different with us? Is it because we're guys? Is this what it's like with two guys?\"\n\nHe sighs softly, hesitating for a second before he speaks, \"I've never been with anyone I love before, so I don't know about that, but I have a little theory about you and me.\"",
        "\"You know I love a good theory.\"\n\n\"I warn you, it's corny.\"\n\n\"I can handle corny. Hit me with it.\"\n\nHe shifts, so we're facing each other. His eyes are soft, reflecting the dappled rays of sun streaming down through the tree above us, \"I think it's because...\" He starts and then wavers, before starting again, \"I think it's different for us...because we were made for each other. You and me, we were meant to be.\"\n\nMy chest expands so rapidly, it feels like it's going to explode. I turn to him and kiss him and hold onto his head, pulling him as close as I can. We don't move. We just hold each other. We stay like that for ages. We stay like that until his phone pings and eventually, he picks it up checks it.\n\n\"Who is it?\"\n\n\"It's Lucy and Em, from next door. They're taking pizzas down to the beach tonight. I'll tell them we're going to skip it.\"\n\n\"You know what,\" I say, \"maybe we should go.\"\n\n\"Oren will be there. We don't have to go, if you don't want to.\"\n\n\"We have to go eventually. Eventually, we'll have to see other people.\"\n\nHe shrugs and laughs, \"I don't mind.\"\n\n\"Surely, you're going to get sick of being stuck here all summer with the same person.\" I tease.\n\n\"I won't.\"\n\n\"Oh, yes, you will.\"\n\n\"I won't. I won't get sick of being here with this person.\" He says, poking me in the ribs, \"'Cause this person, is my favourite person.\"\n\n\"Jesus, Andy,\" I say, blinking quickly, \"you're good. I'll give you that.\"\n\nHe throws his head back and chuckles softly.\n\n*\n\nThat night, we do go to the beach. I feel ready. I feel ready to face the world and I feel ready to see Oren. I don't feel thrilled about it, but I feel ready. It's a beautiful, clear evening. Warm and still. Even down at the beach, there's not a breath of air moving. By the time we get there, a few of Andy's friends have already gathered. Some, I met last year, and a few, I'm meeting for the first time. We chat and crack open a couple of beers and have a few slices. I feel chilled. Relaxed. Andy sits next to me. He sits close. Knee to knee. Every time I say something, he leans his head down a little, so his ear is close to my mouth, so he can hear every word that I'm saying. Every time he does it, he smiles ever so slightly, so slightly, if you weren't paying close attention, you'd miss it. I don't miss it though. I see it, and I love it. Despite what I've been like, I have to admit, it is pretty great seeing other people. It feels good to be out.\n\nI'm glad we came.\n\nNo sooner has that thought crossed my mind, when my gut clenches hard. I see a guy in the distance. A guy carrying a guitar case. Oren. I check myself. I'm definitely a little tense, but Andy's beside me.\n\n\"Do you want anything? Beer, more pizza?\" He asks.\n\n\"I'm good, thanks.\"\n\nHe stays close. We both get up when Oren approaches, and he puts his hand at the small of my back, pressing gently.\n\n\"Hey Andy, how you going?\" Says Oren.\n\n\"I'm good,\" replies Andy, \"you remember West, right?\"\n\n\"Sure,\" he says, giving me a hand to shake, \"how could I forget?\"\n\nAndy turns and looks at me with soft eyes. His eyes find mine and for a few seconds, I can see that he's forgotten where we are and who we're with.\n\nHe moves the hand on my back downwards, snaking slowly, and eases it snugly into my back pocket. I try not to smile too hard, and I try not to breath an audible sigh of relief, but that's how I feel. Relieved. Acutely relieved. After all this time, he's mine. Standing there, talking to Oren, it finally dawns on me - Andy's mine. He's all mine. Mine only.\n\nHe wants me and loves me back.\n\nHe loves me as much as I love him.\n\nOren sets up his guitar and plays for a while. In truth, he's pretty good when he plays covers without the cringey little introductions. In truth, when he's not fucking Andy, he seems like a pretty okay guy, and live music on a beach is always a good thing. It's a great evening. It's an amazing evening. It's so wonderful that by the time we leave and walk home over the dune, I'm high spirits. I'm in the highest spirits you could ever imagine. I'm so happy, I take it upon myself to serenade Andy with an old REM song that I love.\n\n\"Now, Andy, did you hear about this one?\" I belt out, as loudly as I can, ignoring the fact that I can't sing for shit.\n\nI have my arm around Andy's waist, and he has his draped over my shoulder. I feel his ribs contract as he starts to laugh.\n\nI don't know all the words, but I continue, undeterred, \"Something, something...dum, dum, dum, dum...\"\n\nHe's laughing for real now. I slide my other hand up the front of his t-shirt, so I can feel the rippling of his abs as he laughs.\n\n\"Andy, are you goofing on Elvis...pum pum pum puuuum?\"\n\nHe's laughing helplessly, his eyes are alight, and his lips are split open, \"Oh, West, you crack me up. I love you, man.\"\n\nThat makes me laugh, too. I'm laughing and holding onto him, and I swear, I feel bulletproof. I've never felt anything like it. I'm fully present, but I also have a strange sense that this is one of those moments I'm going to look back on in years to come. I'm going to come back to this very moment, time and time again. I'm going to remember today. I'm never, ever going to forget it.\n\n\"Andy,\" I say when we both calm down, \"do you think this might be the best day of our lives?\"\n\nHe looks at me for a second, considering my question, \"Nah.\" He smiles.\n\n\"How do you know?\"\n\nHe pulls me close, \"I know, because tomorrow it's forecast to rain and tomorrow, we'll be home alone all day. When you think about it, tomorrow, there won't be any real reason for us to get out of bed.\"\n\n*\n\nThat day was just the first in a series of perfect days. Day after day, we experience perfection. We enjoy the sun and the summer. We enjoy the beach and the sea. We enjoy being totally carefree. But mostly, mostly, we enjoy each other.\n\nDays melt into weeks, and before we know it, it's almost over.\n\n\"Damn,\" he says, as he sets up his paints to start painting, \"I can't believe my family are arriving tomorrow.\"\n\n\"I know. I can't decide if it feels like the last six weeks have gone slowly or super quickly.\"\n\nI check my emails and make a couple of calls, as he paints. I have a message asking me to call Daniel Reiker. Daniel is the boss of the guy I reported to last summer, when I did my internship in the city. I only met him once or twice, so I'm a little puzzled as to why he wants me to call him, but I call anyway.\n\n\"Andy!\" I yell, as soon as I hang up the phone, \"Andy, you'll never believe it.\"\n\n\"Is everything okay?\" He says, coming out of the den quickly to see what the commotion is about.\n\n\"You'll never believe what just happened. I just got off the phone with KKR &amp; Co and I've been offered a job! Not just a job, a great job. I can't believe it. They're paying $12,000 more than I was hoping for. Can you believe it?\"\n\n\"Yeah,\" he says softly, there's happiness, but not a hint of surprise on his face, \"I really can.\"\n\nHe wraps me into a bear hug and whispers into my ear, \"I'm so proud of you.\"\n\nLater, after I've called my mom and told her the news, he calls me into the den.\n\n\"D'you want to see it?\"\n\n\"Is it done?\"\n\n\"Yeah, I think it's as close as I'm going to get it.\"\n\n\"Then hell yes, I want to see it.\"\n\nHe looks a little nervous as he lifts the easel and turns it round, so that it's facing me.\n\nMy hand flies to my face. I'm stunned. Silent. I don't move or speak. I don't blink, either. I can't. The painting is of him and me. He used the first photograph we took when we got together, as a reference. The photo we sent to Sarah. The background is white, and we appear slightly muted, blurred out. Still, you can tell at a glance that it's us. I have my arm around him and I'm looking straight at the viewer. My eyes look unreal. They look alive. They look like something that's living. He's smiling in the painting, just like he was smiling in the photograph. He looks happy. I look up at him. He doesn't just look happy.\n\nHe is happy.\n\nMy Andy is happy.\n\nI'm so moved, it takes me several seconds to see it, but at last, I do. Finally, my gaze lands on our hands. They're laced together in the painting, just like they were that day. Only, they're different. Our skin is wrinkled like tissue paper, our knuckles are thickened and wizened, marked by the ravages of time. These are our hands, but they're not our hands now. These are the hands of two men who found each other in their twenties and held on. Two men who held on for a lifetime. Two men, who never let go.\n\n\"What's it called?\" My voice cracks as I say it.\n\nHe picks up the painting carefully and turns it around. He's scrawled on the back in large charcoal letters. My whole body breaks out into gooseflesh when I read it.\n\nAlways.\n\nI blink as hard as I can, but it's too late. Tears slide down my face. He comes to me, standing behind me, wrapping his arms around me. I reach up and find his hand, lacing my fingers in his.\n\n\"Always,\" He says softly, \"this has to be always. For me, it's always.\"\n\n\"It will be.\" I say, sniffing and squeezing his hand tight, \"It will be. All we have to do is hold on. All we have to do, is never let go.\"\n\nI turn to him and look up at his beautiful face and I make a new deal. A vow. A commitment.\n\n\"Always.\"\n\n*"
    ],
    "authorname": "herdirtymind",
    "tags": [
        "gay romance",
        "anal",
        "outdoor sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/requited-ch-10"
}