{
    "title": "The Reluctant Journey Ch. 09",
    "pages": [
        "Okay fair warning that this isn't a very sexy chapter. Sorry :( , but it is more of a transitional chapter to where I want the story to go. So please bear with me :) And again thank you all for the support and great comments. \n\n------------------------ \n\n\"Kristen?\" \n\n\"Yeah?\" She answered softly. They'd been lying in bed for over an hour, neither able to fall asleep. \n\n\"Are we going to be able to leave these people here? They don't even know that they are in a prison. These are our friends and neighbors. I've saved these people's lives, and for what? They are chattel.\" His voice didn't have any outrage left, it seemed to have dried up over the last several days. \n\n\"I don't know Jack. If it is the only way to keep our family together then we'll do what we have to.\" \n\nHe nodded. They had had variations of this conversation repeatedly. \"It isn't right. They are punishing the people who only wanted to protect their families.\" \n\n\"I know.\" Kristen gently ran her fingers through her husband's short dark hair. Both lied on their sides, Kristen behind Jack.\n\nHe sighed.\"Was I a coward? For not joining the effort. Should I have helped them? Could I have saved some of them?\" \n\n\"And killed others?\" \n\nThey were silent for several minutes. Kristen continued to absentmindedly stroke Jack's back comfortingly. \n\n\"Jack?\" Kristen suddenly stopped with her rhythmic stroking. \n\n\"Yeah?\" \n\n\"What about Malia? What if he's hurt her?\" Her voice was uncharacteristically small and fragile. \n\n\"I will take great pleasure in killing him slowly.\" Jack stated with no hesitation. Normally such a statement might have made Kristen laugh coming from her gentle pacifist husband. However, there was no doubt in her mind that he meant every word he said. She was silent for a moment. \n\n\"Jack, what do you think he wanted with her?\" Malia had explained nearly everything to them and assured them that she hadn't been harmed, but she had kept away from the subject of why she'd been taken in the first place. Jack didn't want to contemplate the question let alone talk about it, but it was the first time Kristen was talking about Malia's kidnapping instead of shutting down. He rolled to his other side to face his wife. \n\n\"We don't know why. To contemplate the worst scenarios will just drive us crazy. We saw her.\" He forced a smile he hoped was reassuring. \"We saw she was okay, remember?\" \n\nKristen nodded as a single tear slipped out of the corner of her eye. Jack wiped it away with the pad of his thumb. \n\n\"It's just,\" She took a deep breath to hold back her sobs. \"I can't stop thinking that he wouldn't have any reason to take her unless it was sexual.\" \n\nJack gritted his teeth. He had never felt so violent as he had since that prick took his daughter. He was someone who fixed problems, and he felt so damn helpless. He couldn't fix any of this and it made him furious to be so vulnerable. He should be able to protect his family! When he saw the general again it had been the first time he'd ever wanted to kill a man. Jack was a doctor, he'd seen rape victims. When he imagined his daughter bruised and bloody a rage ran through his veins making him see red. He felt like a caged animal ready to strike. Only a handful of days and that cage door would open. Then, if a single hair on his baby girl's head was out of place, he could kill General Cain Malcolm. \n\nA crash of thunder interrupted his violent thoughts. He hadn't noticed the storm approaching until it was over them. The walls shook with the intensity of the thunder. Derek and Aiden were instantly awake on the bed across the room. They ran over to Kristen and Jack's bed simultaneously and jumped onto the mattress fluidly from much practice. They slithered up the bed and created their own space between Kristen and Jack. Olivia wasn't ashamed to follow almost immediately after. It had become a family tradition since moving to the unit. It should have been cramped an uncomfortable in the full sized bed, but when it stormed it was like a personal den that seemed unable to be breeched. Except it had been breeched, because there was one less body squeezing into the bed. \n\n------------------------\n\n\"Daddy?\" Jack had just gotten home from working a double at the hospital and shouldn't have been able to hear the soft whisper, but it woke him nonetheless. One of the superpowers that came with parenthood. \n\n\"Malia?\" He asked into the dark room, still groggy from the hour of sleep he had managed to get so far. He opened his eyes and could see the tiny silhouette of his four-year old daughter standing directly in front of him on his side of the bed. \n\n\"Can I sleep in here?\" She whispered even softer, he had to strain to hear her. Lightning lit the room and Malia jumped and squeaked. \n\nJack smiled despite his sleep deprivation. \"Of course you can baby.\" He leaned over and lifted her small body over him to the middle of the bed. \n\n\"Well hello there stranger.\" Kristen's groggy voice mumbled from across the bed. \n\nMalia giggled. \"Hi mommy.\" She made herself at home instantly in their bed and ended up kicking the hell out of both Jack and Kristen all night long. It was his most precious memory of his oldest daughter. \n\n------------------ \n\n\"I hope you're satisfied.\" Cain said moodily as he walked into the formal parlor where he knew his brother sat alone, waiting for him. \n\nTristan laughed. \"How, pray tell, did you get away from your doting girlfriend?\" Tristan was overly amused. \n\nCain leaned against the doorframe with his arms crossed over his chest. \"Mockery isn't one of your good looks brother.\" \n\n\"Oh, I'm sorry, a sore spot?\" Tristan said snidely. \n\n\"Malia is okay, as you can see. I think I'll go enjoy some cake if you've nothing constructive to say.\" Cain pushed off of his shoulder and turned towards the door. \n\n\"Wait, wait. I'm done, I promise.\" Tristan still snickered but he tried to cover it with a cough. Cain turned back around to face him. \"Please sit.\" He asked seriously. Cain obliged, sitting in a chair across from Tristan. He waiting a moment before continuing. \"Malia seems to be physically intact, yes. But she certainly isn't very chipper?\" \n\n\"You asked me to bring her, I brought her. Her emotional status isn't really my concern. I was doing you a favor by bringing her in the first place. I generally would rather keep my outright lies to my grandmother on her birthday to a minimum.\" Cain viciously spat, surprising his younger brother who wasn't generally spoken to by his brother in this manner. \n\nTristan raised his hands in a motion of defense. \"Okay, Okay.\" His seriousness wasn't the least bit feigned. \"I'm sorry. You're right. I didn't mean to put you in a bad position. Honestly I asked you to bring Malia because I was genuinely worried about her. The two of you didn't exactly leave in the best standing.\" \n\n\"I told you I wouldn't hurt her.\" Cain snapped. \n\n\"No, you told me it was going to take a lot to break her strong will.\" Tristan argued amicably. \n\nCain sighed, mentally damning his brother's good memory. \"Well, you should have known I wasn't going to hurt her.\" \n\n\"Honestly Cain, your reactions where that woman is concerned aren't all that predictable.\" Tristan smiled gently. \"What exactly happened between the two of you?\" \n\n\"What are you talking about?\" Cain was still slightly annoyed. The entire social gathering had put him on edge.\n\n\"Come on Cain, that woman was furious with you when you left the manor, and you weren't exactly happy with her either. She didn't slit your throat in your sleep.\" Tristan studied him for a second. \"In fact, I would say that at times you two are borderline friendly.\"\n\nCain shrugged nonchalantly, \"I guess she got over it.\" \n\nTristan eyed him suspiciously. \"Uh huh.\" He arched an eyebrow. \"So that's your story and you're sticking to it?\" \n\nCain laughed sardonically. \"Tristan, leave the psychoanalysis to the shrinks.\" He stood and walked towards the door again. \n\n\"You don't see a shrink.\" Tristan said to his back. \n\nCain laughed as he opened the door, he looked back at his little brother still sitting in a velvet chair. \"Exactly.\" \n\n------------------------\n\n\"You've been uncharacteristically quiet all night.\" Cain snapped Malia out of her trance. They were outside waiting on the car, as it was unseasonably warm. Cain's grandmother had went to bed after affectionally saying her goodbyes to both of her grandsons. She'd surprised Malia with a doting hug of her own as well. Tristan had also said his goodbyes of a few minutes earlier. She hadn't realized how much she'd missed talking to him as she hugged him goodbye. She was so lost in thought all night that suddenly she was sure she'd been rude. \n\n\"I\"m just thinking.\" She replied softly. \n\n\"Dangerous stuff.\" He was leaning against a brick pillar in front of the house with his arms casually crossed in front of his chest. She just nodded and looked out across from Kate's charming estate. Houses were so spread out now. All of the one's she'd been to didn't have anyone near enough to be considered a neighbor. It must have given everyone a lot of room to spread out when half of the population were imprisoned without their knowledge, Malia thought bitterly. The country road stretched out in front of them with fields on all sides. It truly was a beautiful area. \n\n\"Your mother blames you for Tristan's injury.\" She said suddenly not looking up at him. \n\nHe snorted. \"She never has been one to keep people in the dark about how she feels about something, probably where I get my tact.\" He smiled. \n\nShe frowned at him. \"That's not fair of her. She's your mother.\" Malia's voice was soft and sad. \n\nHe looked suddenly irritated. \"More pity?\" She looked away from him and thought if she pitied him.\n\n\"No, not pity.\" She answered seriously, \"More like vicious indignation on your behalf. I know I don't know your mother Cain, but honestly I'm not impressed.\" \n\nHe laughed. \"I'd love to say she grows on you but..\" He shrugged. \"She has every reason to be angry with me.\" \n\n\"No she doesn't. Being your mother does give her every reason to forgive you and love you unconditionally.\" \n\n\"I can handle my mother Malia, don't worry about me.\" \n\n\"I am worried Cain. You seem bound and determined to be a martyr to some bad choices you made a long time ago that led to an accident. You most certainly didn't murder your friend and you can not be held responsible for Tristan's actions. You would have been the first one to jump off that cliff for him.\" \n\nHe looked at her strangely. \"That's what you've been thinking about all night? I apologize for my mother's rudeness Malia, but I assure you her outburst has tolled you mind much more than my own. I came here tonight to celebrate my grandmother's birthday and in that we were successful.\" He smiled infectiously. \"We convinced them that we're dating. I would call that a success for us.\" \n\nShe looked mock wounded, feeling slightly better at his happiness. \"It isn't that hard to believe!\" She said slowly. \"I mean we are sort of sleeping together.\" \n\n\"Are we?\" Cain arched a brow at her. \n\n\"Aren't we.\" She replied a little unsure where he was going with this. \n\nCain shrugged. \"Well I suppose we did fuck on a bed and briefly fall asleep together. Then we fucked against a tree, quite memorable.\" He smiled to himself. \"I suppose telling my family that we are dating would constitute continuation of such sinful behavior, I mean if my grandmother expects us to be fucking why shouldn't we reap the rewards of actually fucking?\" \n\n\"You silver-tongued devil.\" Malia said stoically, rolling her eyes. His crude language had a thrilling effect on her at each scandalous word he drawled in his grandmother's front lawn. \n\nHe grinned and looked over at her. \"Did you expect hearts and rose petals my sweet?\" \n\nShe laughed cynically. \"Never.\" \n\nA motorcycle and black SUV drove down the road and stopped in front of the house. The man on the motorcycle got off and grinned widely at Cain as he removed his black helmet. \n\n\"Wow.\" The man said, handing the helmet to Cain. \n\n\"You're welcome. Don't get used to it Captain.\" He smiled at the man. \n\n\"No sir.\" The man answered, nodded to both Cain and Malia and got into the SUV to pull out a matching helmet. He handed it to Cain and got into the SUV. It pulled away leaving Cain, Malia, and the motorcycle in front of the house. The entire exchange happened so quickly Malia still had a look of shock on her face. \n\n\"Uh, what is that?\" Malia asked. \n\n\"That, little girl, is our ride.\" Cain grinned like a boy at Christmas. He handed her one of the helmets he was holding. He donned his helmet and mounted the bike. \"Put on your helmet.\" He added impatiently when she didn't move to join him. \n\n\"Um, do you know how to drive?\" Malia asked worriedly. \n\n\"Of course I know how to drive.\" His voice was muffled from the helmet but she thought he sounded offended. \n\n\"Well sorry, you always have people driving you around.\" She mumbled as she walked closer and pulled the helmet over her head. It was cushioned and tinted, like her own personal cave. She looked down at the knee-length peach dress she was wearing. It was very flowy and was sure to blow around like crazy in the wind. \"Um Cain?\" \n\n\"Yes?\" She jumped when his voice was unexpectedly amplified in her helmet. He laughed. \"There are speakers and microphones in them Malia. Get on.\" \n\n\"I can't ride a motorcycle, I'm wearing a dress.\" She whispered. \n\n\"Are you wearing underwear?\" Cain asked seriously. \n\n\"Of course I am.\" \n\n\"Damn shame. Get on.\" He was clearly impatient. \n\nAt least she'd chosen a pair of silvery flats instead of the heels she'd been contemplating. \n\n\"Put your foot here,\" He indicated a small metal bar with his own foot. \"and swing your leg over.\" She did what he asked without any trouble. Her silky pink panties were directly in contact with the black leather seat and the skirt of the dress draped around her thighs. She was pressed up against Cain's back, her thinly clothed crotch pressing against his ass. \"Don't touch those pipes with your legs, you'll get burned.\" He warned and then suddenly the bike came to life. She whimpered as the unexpected strong vibrations affected her intimately. He laughed. \"Something wrong Malia?\" His voice filled her helmet adding to the thrill. Fantastic, he was going to get to hear everything. \n\n\"Nothing.\" She answered annoyed. \n\n\"You may want to hold on.\" He laughed. \n\nShe suddenly realized that she would have to hold onto him. She gripped his torso tightly when he moved suddenly to kick the kickstand up. \"Relax.\" His voice sounded so damn sexy in the dark cavern of her helmet. She moved her arms around his waist and relaxed her grip slightly. She still made an embarrassing squeaking sound as they took off quickly. Cain laughed as she clung to him tightly. \"Alright. let's do some sightseeing.\" Malia relaxed substantially as they continued to ride down dark country roads without crashing. Cain leaned fluidly into the curves and scolded her to follow suit after the first turn when she leaned the other way, terrified of falling. Eventually she caught on and slightly leaned with him. The vibrations had eventually stopped affecting her as her entire lower half became numb from overexposure. She'd been too scared to really enjoy them in the first place. Not that she wanted to give Cain the satisfaction. \n\nEventually the fields turned into buildings and suddenly a lit up skyline appeared. It became closer and closer as they went over a suspension bridge that went over a large river. There were very few cars, but the roads were not abandoned. Malia was mortified as the drivers and passengers were getting a clear view of her panty-clad ass and thighs as her dress flew in the wind. But in no way was she prepared to loosen her iron-clad grip to hold her dress in place. She tried to think of other things. Things like the beautiful buildings across the river.\n\nShe had been sure that none of the country she knew had survived the war. As far as the unit was concerned, every human advancement and creation that had been achieved for hundreds of years was destroyed. She was happy that they were mistaken, it made it feel like maybe her family could still find a place in this new world. Maybe all of the families in the units could. \n\nThe ride lasted for a couple of hours. She eventually laid her head against Cain's shoulder and watched the colors of the lights blur past. The lights and building eventually turned into fields and trees once again and finally they were back at the cabin. Her muscles were tense and achy. \n\n\"Don't touch the pipes with your legs.\" He warned again. \n\nShe avoided them as she dismounted the bike less than gracefully. Despite her muddled thoughts, Malia had had a good time. Cain had pointed out some of the new monuments and buildings that she wasn't familiar with. It was disorienting seeing them mixed in with the sights she knew from childhood. Still she couldn't help but feel like Cain was being uncharacteristically nice. \n\n\"So, what's the motivation behind today?\" She was too conflicted with her own thoughts and feelings to play mind games. He walked the bike until it was near the porch and turned the engine off. He kicked the kickstand down and dismounted. \n\n\"I need motivation?\" Cain asked as he took his own helmet off. She just looked at him impatiently, waiting for a real answer. He studied her, probably contemplating telling her the truth or not. Or maybe the contemplation was skipped and he was coming up with an elaborate lie. Finally he shrugged, \"Tristan wanted to see you.\" \n\n\"So what was with the bike ride?\" She wanted him to say that he at least liked her, something to make her feel just a little more justified in her feelings. She didn't want to fall in love with this man, she'd never wanted that. It was stupid and self destructive and nothing like how she wanted it to feel. She thought that loving someone would feel empowering and thrilling but all she felt was incredibly vulnerable. It was as if she'd painted a personal target for anyone that wanted to hurt her, and the worst thing was she wasn't certain the object of her affection wouldn't be that person aiming at her heart.\n\nCain huffed obnoxiously. \"I don't know Malia. I wanted to ride my bike. You were with me.\" He suddenly became more irritated. \"I don't have to answer to you anyway.\" He shrugged and walked up onto the porch to unlock the front door. Malia just watched him for a moment and eventually followed him up to the cottage. \n\n-----------------\n\nShe was so stupid. God, why did she have to be so incompetent? Gwen mentally lambasted herself brutally. \n\n\"It's p-p-pretty out today.\" She mocked her own voice as she scrubbed the tiled floors. Why did they need so many damn bathrooms? \n\nShe'd finally worked up the courage to say something, anything, to Tristan and she sounded like a stuttering idiot. It was so frustrating to be so eloquent in her head and seem so dimwitted whenever she opened her mouth. She just shouldn't open her mouth. It was a logical conclusion, and had been working for her just fine before Malia had convinced her to become Miss shares-a-lot. \n\nExcept it hadn't been working just fine. Gwen was miserable. She was in love with a man who she was certain didn't even know her name. She couldn't even blame him for not knowing her name, because she hadn't had the damn balls to ever tell him anything about herself. For over a year she'd seen him everyday and she still couldn't even work up the courage to divulge her name to him. He'd of course been a perfect gentleman in response to her neurotic babbling. He'd smiled his sweet polite smile. \"Yes, it is. Will you spend anytime outside? It would be ashamed to waste it.\" \n\n\"I-um- I have to clean the f-floor.\" She blushed furiously and nearly ran out of the room before he could be obliged to try and converse with her further. She hated that he talked to her so politely. She wanted to have meaningful conversations with the man she knew to be so deep and profound. But she never would, not when she couldn't get past the introduction without having a panic attack. So she was cursed to become some sort of creepy stalker figure. And to top it off she was stalking no one other than one of her own bosses. Sure Cain was more the master of the manor than Tristan was, but it was only because it didn't suit Tristan. Cain was also gone for random stretches of time. Gwen had always thought of Tristan more as a master of the house, while Cain was more of an imposing and demanding guest. She knew her opinion in this wasn't the majority. ",
        "She finally finished the floor and stood. Her reflection immediately looked back at her in the giant mirror that dominated one of the walls. Sometimes she would stare at herself for a long time, not out of conceitedness, but to maybe for once feel like she belonged inside the body that she saw there. She'd been countlessly told her entire life how beautiful she was. She could see an attractive face in the mirror, she just didn't feel like she owned that face and body. She didn't have the personality to match her face. \n\nPeople thought she was catty and snobbish on first appearance. She secretly didn't mind, only because it kept them at a distance. If having people think badly of her made her unapproachable, she was more than fine with it. She was at home with her solitude. She knew how to be alone, how to be silent. But sometimes she would lay on her narrow bunk in the dead of night staring at the shapes of the plaster that made up the ceiling above her and wishing that she had someone to talk to.\n\nShe took a deep breath and exhaled in an attempt to cleanse the lonely thoughts from her body. She tried not to ponder on these thoughts. She wasn't one to sit around feeling bad for herself. If she was lonely, it was no one's fault but her own. Malia was right, she needed to take control of her own future. If she wanted Tristan she was going to have to make the first move. Even if, for her, that entailed simply introducing herself. 'Baby steps', she thought to herself as she dusted her black pants off with her hands and tried to tap into any unknown reserve of courage she might have had. Unfortunately, she couldn't find much, but still she had come to a crossroads. She was done staring at the ceiling. \n\n--------------------------\n\nIt was awkward. Malia wasn't sure what the dynamic between Cain and herself was anymore. She didn't feel like fighting with him, which had been the foundation of their relationship hitherto. She also didn't feel like being nice to him, because frankly he didn't deserve it. For once in their time together Malia was at a complete loss for words. The awkwardness was amplified by the small space they were forced to temporarily share. She should have asked to go back to the manor with Tristan. She didn't really need to be in this cabin when they were released did she? She knew that for the cover story to work their leaving of unit 118 and the new guests to Milan manor had to be two separate events. But she didn't necessarily have to be one of the 'new guests', she had been living there for weeks. It wasn't as if anyone was keeping track of her whereabouts anyway, Cain didn't have many houseguests that she'd noticed. She suspected that he just wanted to keep track of her, always in complete control. Well look how that had blown up in his face. He'd been loosing his precious control since the day they'd arrived. But in the end, she guessed he'd gotten what he wanted. Cain had all of the control now, because she'd given it to him. She cared more than he did and that meant he won.\n\nIt was ironic that as soon as Malia was convinced that she was falling in love with Cain was when she wanted to most physically distance herself from him. Maybe she wasn't in love with him. Or maybe it wouldn't last. Maybe if she could just get away with her family she would just eventually forget about him. She felt desperately sad only thinking about it. She felt guilty that she didn't want to go back to living with her family. She loved her parents and her siblings, but she didn't want to be their little girl anymore. Her youth had been forcefully extended as it was. Was it wrong for her to want to grow up just a little? To try her hand at being an independent woman? \n\nShe wished she was confused about being in love with Cain because it sure as hell didn't make anything easier. But she felt it as deeply as she'd felt anything that she wasn't confused, not in the least, and that scared the shit out of her. Maybe she was too isolated, and the first attractive man that had shown her attention had caused her brain to fry. It surely was a pathetic picture if that was the case. She simply couldn't bring herself to believe that this was only a strong infatuation. \n\nShe needed to be alone. She needed to think. She'd already showered for the day so she figured she could just slip away to her bedroom and think herself to sleep. Cain had stopped in the kitchen and was eating an apple. \n\n\"Where you going?\" He talked around the pieces of apple in his mouth, one of which went flying to the floor. \n\nShe arched an eyebrow at him. \"I'm going to bed.\" She stated obviously. \"So don't come looking for me.\" She added. It was the first smart-ass comment that had come to mind all day. It felt good, like she wasn't losing herself. \n\nHe smiled and swallowed the apple in his mouth. \"And here I thought I was going to have to waste time on foreplay. I'm gonna finish my apple and I'll be right there. You can warm up without me if you want.\" \n\nShe looked at him surprisedly. You'd think she would get used to these kind of comments from him but she was as shocked as he'd planned for her to be. Which didn't work well for the part of her brain dedicated to witty comebacks. She was sure she looked stupid just standing in the archway, staring at him. Finally words came to her. \"I'm not going to sleep with you.\" She sounded comically outraged. \n\nHe snorted arrogantly as he took another bite of his apple. She was annoyed at her eyes for repeatedly straying to the muscles of his jaw as he chewed. \"You were the one that said that we were sleeping together remember?\" His words were slightly muffled by the food in his mouth.\n\nShe was incredibly annoyed that he was right. Hell if she was going to tell him that. His casual chewing while talking was also incredibly annoying. \"I thought you had better manners than that?\"\n\nHe stopped chewing, glared at her, and opened his mouth wide to reveal chewed up apple bits, like a child. She laughed despite her will not to encourage him. While she was trying to pull herself together he walked the few steps over to where she stood. \"I think you've underestimated my powers of seduction.\" His voice was suddenly deeper, his eyes darker as he looked down at her. Her mouth went dry. He brought the apple up to his mouth and slowly took a bite, deliberately chewing. He knew exactly how drop dead gorgeous he was and it was frustrating that she was too entranced to put him in his place. He grinned as if he could read her thoughts like a book. \n\n\"What if I get pregnant?\" She asked trying to stop him, but she'd been thinking about it all day. She wondered why she hadn't thought about pregnancy after the first time. Suddenly she was genuinely worried about it.\n\n\"We're both on birth control.\" He answered. She looked at him questioningly and he sighed. \"There was a drug in the first meal you ate at the manor, it will last for three months. Very new age, very expensive, you should thank me. I'm on something similar, you wouldn't imagine the lengths women will go to to trap a man into an obligated marriage.\" She felt relieved rather than violated that he'd once again went to great lengths to control her. \n\n\"This isn't a good idea.\" She whimpered as she felt her control slipping. \n\n\"Best idea I've had all day.\" He growled as he leaned closer to her. He was going to kiss her and then she would be gone. He was so close. She put her hands against his chest to stop him. He was so warm, his heartbeat strong and steady beneath her hand. \n\n\"Cain.\" She whined. If she lost herself to this man she would be truly imprisoned. She couldn't let this go on, she needed to think. \"I think I'm in love with you.\" She blurted out impulsively. It worked like a charm. He pulled back and stilled, his eyes instantly in focus again. \n\n\"You want to run that by me again?\" He finally said after a moment of stunned silence. She took a breath of relief that he wasn't getting closer anymore. \n\n\"You heard me.\" She said softly. \n\n\"Malia, you're not in love with me.\" He nearly groaned the words in frustration. \n\n\"You're probably right,\" She nodded, \"which is why we shouldn't sleep together.\" \n\nHe looked confused. \"You not being in love with me is exactly why we should sleep together.\" He argued. \n\n\"And what happens afterwards?\" She looked for any sign of reciprocation in his face but could only see frustration and growing anger. \n\n\"Some really great fucking endorphins!\" He ran his fingers through his hair. \n\n\"You know what I mean.\" She growled back at him. \n\n\"Don't over think this Malia. It's just sex!\" \n\n\"Maybe to you, but not to me it isn't. Not anymore.\" She bit her lip. She felt incredibly overexposed. \"Cain, you're the only man I've been with, in any way. It isn't just casual sex to me. And if I'm not falling in love with you, then the sex is making me feel like I am. You were right all along,\" A tear finally dripped down her cheek against her will. \"I'm just the little girl you've always called me. You know what they say,\" She smirked cynically through the tears, \"If you can't take the heat, stay out of the kitchen. Well I can't take the heat Cain, because I know that I'm going to be the one who ends up burned.\"\n\nHe was as still as a statue while she finally fell apart in the kitchen. She felt like she'd finally swallowed the lump that had been lodged in her throat all day only to have it tear a hole in her stomach. He didn't stop her when she walked to her room this time. She closed the door and fell apart. Crying was always a better method to get to sleep than thinking anyway. She hoped that this was just infatuation, but she suspected that she was sadly mistaken in thinking so. \n\n-----------------\n\nGod damn it! \n\nCain threw the remaining apple across the kitchen to hit one of the cabinets and fall to the ground. Everything about today had went wrong. He could feel the clutches of everyone around him trying to tear away pieces of him until there was nothing left. He had an obligation to do what his brother asked of him, even if it went against his own wishes. He had an obligation to his grandmother to come to her birthday dinner party and try and play nice with his mother. He owed his mother a debt that would never be repaid in her eyes, though he was obligated to spend his life trying to repay it. He had a full time position as a general that was anything but relaxing work. And the one part of the shitty day where he tried to get a moment of blissful catharsis, added one more person for him to be responsible for. \n\nHe felt like a jackass for being angry with her for not giving in and fucking him. She was the one person that he felt free from obligations and responsibilities. Sure she pissed him off, but she also made him laugh, she let him breathe. And now he'd broken her heart. He didn't think that Malia was in love with him, but he did think that she thought she was. It felt like she was ripping out his insides when he'd watched her bare her soul in the kitchen. He was being incredibly selfish and he knew it, but she had became the only person he was able to be just a little bit selfish with. \n\nHe was her first. He couldn't help but have a certain amount of masculine pride. He'd felt like she was his to do with what he wanted because of that, and when she'd denied him he'd felt like someone had dangled a delicious cookie in front of his face only to rip it away when he reached for it. But she wasn't his, not if he wasn't willing to claim her completely. He wasn't going to marry Malia Yates and have babies with her. He knew that was the future she saw with him. \n\nIt wasn't like he hadn't known what he was doing. It was the same thing he'd done to Milly years ago. Except Malia wasn't like Milly. She wasn't equipped to fool around casually. He'd known that! He had been fighting to avoid this damn it! He told her that before their little forest tryst, that had been so hot it had driven him crazy. So why did this feel like it was all his fault? She was an adult, and she'd initiated their most recent sexual encounter. But he knew that it was mostly his fault. \n\nShe deserved to be with someone who could give her what she wanted. Someone who would fall in love with her. He needed to stop sending her mixed signals. They would coexist until her family was released. He would find them a house and get them established. Then he would be out of her life. She would be free to go into the world and do whatever it is she wanted to do. He could easily see her finding some nice guy and getting married, having a bunch of his babies in suburbia. \n\nHe could picture the guy. Some blond haired, blue-eyed, medium built man. He would have a typical golden boy face. He would like to grill hamburgers and talk about televised sports. He would consider his weekly game of golf, with the assistance of a golf cart, exercise and would end up going soft around the middle. Cain wanted to punch the jackass in his pretty-boy face. He could picture him guiding Malia upstairs by the arm to their bedroom. He would be sweet and gentle, too gentle, boring. Not very well endowed either. She most definitely wouldn't come with him. But still when he pictured him on top of her, thrusting his tiny dick into her, his hands clenched into fists. Cain tried to shake the irrational thoughts out of his head, but couldn't help being angry about another man in his territory, even if he was only imagined. The thought was highly misogynistic and would piss Malia off. Not to mention it was completely counterproductive to what he'd just decided on doing, leaving Malia alone, but it didn't make the feeling any less present and strong. He sighed, frustrated beyond belief, and went into the bedroom alone. \n\n------------------\n\nThe rest of the week at the cabin was both unbearably slow and flew by. Cain spent most of the day at work as well as a good portion of the nights. He was avoiding her and she was conflicted about how she felt about that. A woman came by in the middle of the week to restock the food and clean the house. Malia helped her, talking the entire time about anything and everything. She was getting increasingly on edge as Cain ignored her, and her family's return approached. By the time the woman left she probably was sighing with relief to get away from Malia, though she politely denied it when Malia apologized to her. Now it was the night before she would finally see her parents and siblings again.\n\nShe should be happy. She was getting everything she wanted. Cain was leaving her alone and she was going to be reunited with her family. Why wasn't she happy? She saw how her future would play out. It was normal, what she wanted. She might go to school and get a normal job, maybe a teacher or a nurse. Maybe she could even be a photographer, like she'd wanted. She would meet someone, get married, and have children. It was the blueprint to a normal life. It was the normal existence she'd given up on. She could have what she'd wanted. She just didn't think she wanted it anymore. She didn't know what she wanted anymore. \n\nShe was sitting on the couch with a ruby chenille throw wrapped around her shoulders, with a book in her lap. She was much too lost in thought to actually read so she'd closed it a long time ago. The house was peacefully silent. She'd found some candles in a cupboard and lit them. She was both relaxed and on edge, her body in dispute with her mind. She had no idea how her parents were going to react to being released into the custody of her kidnapper, though she didn't think it would be warm and fuzzy. If they caught on to just how friendly she'd become with Cain she was sure they would be furious. What hurt her more was the suspicion that they would be disappointed instead. \n\nWhat would they think of her complete lack of willpower that bordered on betrayal to them. She tried to think of Cain as she'd first met him. He'd threatened to torture her father with his own medical instruments. She just had a slight issue believing him now. However she didn't think her father would have a forgive and forget attitude about the situation. She didn't blame him. It had taken time for her to realize that Cain's bark was worse than his bite. And she was only about 55% sure that was true. It was strange worrying about her father's reaction to someone. He generally got along with just about everyone, but his reaction to Cain in the house hadn't been especially promising. She was worried about a clash of personalities, which wouldn't be good for either of them, or her. She didn't want to choose sides. The fact that she even considered siding with Cain against her family made her stomach ache with guilt.\n\nShe'd had hours to go around this cycle of discouraging thoughts before the door opened and Cain walked in. She hadn't noticed the car pull up. He hadn't ridden his motorcycle since the morning after their confrontation. \n\n\"Oh, I didn't think you would still be up.\" He sounded surprised. \n\nShe looked at a small clock on the end table by her. It was 3:45 in the morning. \"Wow, I din't realize how late it was.\" She replied just as surprised. They were both silent for a minute. He'd no doubt tried to avoid seeing her that night by coming home so late. She hadn't exactly looked forward to seeing him either. Except a part of her did want to see him. She always wanted to see him and the recent cold shoulder was only making it exponentially worse. She wanted to talk to him. There was so much she didn't know about him. Not that she didn't want to do other, more physical things, with him as well. \n\n\"Are you okay?\" Cain finally broke the silence, though he didn't sound thrilled about it. He walked over to the recliner and sank down with a resigned sigh. \n\nShe nodded.\n\n\"Is that one of those woman, 'I'm okay, no really', kind of things? Cause I don't do well with those.\" \n\n\"I'll be fine.\" She answered softly, watching the candles flicker on the coffee table. \n\n\"Uh huh.\" He replied suspiciously, he didn't believe her. \"Aren't you happy? You're going to see your family again.\" \n\n\"Of course I am.\" She answered probably a little too defensively. She sighed. \"I don't know how I feel.\" She said honestly. \"I love my family, I do. I just don't want everything to just go back to how it was. You know?\" She looked at him. His face was scruffy with stubble and his eyes were bloodshot from lack of sleep. Only Cain could make exhaustion look sexy. \n\n\"I do.\" He nodded. \n\nShe smirked cynically. \"How must I sound to you. Gosh when did I become so whiney? You live a life firmly rooted in responsibility and obligation, and here I am, finally free from everything, whining about it.\" \n\n\"Your future isn't written in stone Malia. It's okay to be scared.\" \n\nShe nodded slowly, staring at the candle. \"Well, I'm going to go to bed. Long day tomorrow.\" She stood. \n\nHe nodded as well. \"Yeah, I should get some sleep too. Goodnight.\" \n\n\"Goodnight.\" She replied. The exchange was so polite and platonic that it made Malia want to cry. She refrained and walked to the bedroom as Cain blew out the candles and went to the bedroom across the hall. Malia didn't get any sleep that night. \n\n-----------------\n\nJack was trying to put on a positive front. Kristen seemed to be doing a better job at it though. He had to think about his children, he reminded himself again. Being homicidal would only make them upset. Olivia was old enough and smart enough to realize that they were acting like everything was all right. The twins were blissfully oblivious and uncontrollably excited. \n\nPacking up the tiny shack was an embarrassingly quick endeavor. They each only had three personal items from their old house, everything else was property of the unit. Still they smuggled personal possessions they'd acquired over the last eight years in with their eclectic items. Kristen had teared up only when she packed Malia's three books with the rest of the family's items. ",
        "They just had to wait for their transportation now. Derek and Aiden were running circles around each other, never depleting their pent up energy. Olivia was quiet in thought, as she often was. Kristen and Jack looked at each other with a look that was nearly telepathic from years of practice that marriage provided. They were scared and excited and angry. Jack was equally conflicted between his excitement to see his daughter again and his black hate at seeing her captor again. They were going to be living with the man, as Malia had been doing. Jack gritted his teeth. If Malia had so much as a splinter Jack would let all of his homicidal inclinations have free reign. Kristen would be on board he was sure. \n\nThe leader of the council was sitting with them in the building at the edge of the unit. This was to be a low-key event. He seemed very aggravated, he was clenching a yellow smiley ball repeatedly as they waited. Join the club, Jack thought cynically. Everyone, spare his seven-year old twin sons, was aggravated. Finally the gates opened briefly to allow the black SUV to enter. Malia jumped out of the backseat as soon as the vehicle stopped. She smiled at seeing them again and ran over to hug each of them. He took a sigh of relief at seeing his daughter completely unharmed and seemingly happy to see them. General Malcolm exited the vehicle as well, the driver stayed seated. He gave a diplomatic half smile to the family as a whole. Jack hated the bastard and showed that as much as possible in his responding glare. The general was seemingly unaffected by the open hatred. \n\n\"I can put your things in the back, if you'd like?\" He spoke politely, very much unlike the threatening manner he'd used during their first encounter. Arguing for the sake of arguing was tempting but he simply nodded at the younger man. As the general took their bag of mismatched items Jack got a close look at the man for the first time. He was much younger than Jack remembered, still in his twenties. Jack frowned at the realization. Before the family could make their way to the SUV the council leader approached. \n\n\"I do hope your respective futures are bright. Always know that your silence is appreciated as it is imperative for the proper functioning of any unit.\" Jack knew the man was trying to be friendly and tactful, but it rubbed the irritated man the wrong way. The general returned to the group and nodded at the council leader. \n\n\"Denizen.\" His smile was just a little too wide to be genuine. He was goading the council leader? \"I believe I can take it from here, thanks.\" Definitely a pissing contest. Jack didn't miss his youth, he thought as he rolled his eyes. \n\n\"Sure General. Anytime you need my help in the future, to fix any problems you may get yourself into, please don't hesitate to call.\" The general laughed. \n\n\"You should hold your breath for that Blake.\" The general gave a mock salute then walked to the car a little more confidently than before. Jack and Kristen followed Malia and they all piled into the SUV. Their time at the unit was over. Only time would tell what the future had in store for them. \n\n-----------------\n\nSeeing her family again gave Malia a brief sigh of relief. She realized just how much she'd missed them as she'd embraced each of them. Things only began to get awkward as they drove out of the unit. Aiden and Derek were overly excited and were speaking a mile a minute, but it still didn't conceal the hostility in the air. Malia sat in between her mother and father who both glared angrily at the back of Cain's head when they weren't asking Malia a million questions. Olivia was in the very back with the boys trying to keep them quiet enough for her to hear the conversation. She wasn't very successful and she was oblivious to the tension. Malia was having a problem focusing on anything. The car ride felt like it too absolutely forever. She was ecstatic when Milan Manor finally did come into view. Derek and Aiden had been complaining incessantly for the last half of the trip and everyone was relieved to finally get out of the cramped vehicle. Derek and Aiden, anything but subtle, blurted out what everyone was thinking as they caught their first glance of the mansion. \n\n\"Wow,\" they said simultaneously. \n\n------------------\n\nCain actually felt nervous. He never felt nervous anymore. Usually he was in charge of the situations he found himself in. He supposed he was technically in charge, it was half his house, but he didn't feel in charge. He desperately wanted to have Mrs. Smith come show Malia's family to their rooms, but the move seemed too cowardly to follow through with. He'd wronged these people. He needed to apologize, and he didn't have the first clue as to how he was going to do that. He felt like he was going to puke. \n\n\"Please come in .\" He expertly hid any hint of nervousness from his voice. \"I'll show you to your rooms.\" \n\nJack Yates was definitely angry with him. Kristen was only slightly less homicidal looking. They followed him to the west wing, farthest away from his own rooms. Hopefully Malia wouldn't mention the fact that he'd moved her room from its original location, which had been quite near his own. He started with the youngest. He'd given his staff free reign to decorate a room for them. \n\nCain was just as surprised as the boys when he opened the door to their room. They'd installed a jungle gym in the large bedroom. Their was a large colorful ball pit in the center of the room. The beds were attached to the ceiling by four chains on each corner, making them large swings. The statement piece, however, was a lime green tubular slide that looped down through a hole they'd carved in his floor. He thought of the layout of the manor. The slide would open up downstairs in the arcade. The twins were ecstatic. Cain found himself smiling at their exuberance despite his own shock. \n\n\"Surprise!\" Tristan came up behind him and affectionately hit him on the shoulder. \"I took it upon myself to redecorate!\" He was excitingly grinning. \"Isn't it amazing?\" \n\n\"It's definitely elaborate.\" Cain couldn't be mad when the three boys, Tristan being now included in that group, were so excited. Tristan showed the boys every crazy feature of the room. Which included lighting that would put a dance club to shame, a music and entertainment system that was definitely advanced for seven year old boys, and a series of tunnels that wound around the high ceiling of the room. Finally Tristan calmed down enough to recompose himself. Cain, Malia, and the rest of her family stood in the entrance of the room just staring. Tristan walked over. \n\n\"Hi, I'm Tristan. Sorry for my lack of restraint.\" He laughed as he extended his hand to Jack Yates. Jack was clearly at a loss for how to respond. He couldn't snub the infectiously excited man who'd so politely introduced himself. That was Tristan's gift, diplomacy, and Cain was very much grateful for it at the moment. \n\n\"Um, Jack Yates.\" He responded after a moment, shaking hands with Tristan. \"This is my wife, Kristen.\" Tristan turned to Malia's mother and hugged her friendlily. \n\n\"It's so nice to finally meet Malia's parents. Your daughter had become one of my closest friends. She'd definitely special.\" Cain smirked internally. Tristan would make a great politician if ever the desire to do so hit him. Malia's parents were thrown off balance by this stranger's kindness, just as Tristan had wanted them to be. \"And you must be Olivia.\" He continued with is exuberance by hugging Malia's younger sister. She shared her parents' stunned reaction but politely responded nonetheless. \n\n\"Yes, it's nice to meet you.\" Olivia said softly. \n\n\"And of course there's you.\" Tristan continued, turning towards Malia. She grinned at him, looking happier than she'd been for days. Cain wondered what it would be like to have her look at him that way when he got home from work. Tristan picked her up in a bear hug and she laughed. \n\n\"Tristan!\" She squealed. He grinned and put her back down. The looks on Jack, Kristen, and Olivia's faces almost made Cain burst into loud obnoxious laughter. Before anyone had a chance to say anything Tristan was speaking again. \n\n\"Well let's continue the tour. Olivia, I believe your room is next on the list.\" He smiled at the girl and walked out of the room, expecting everyone to follow him. Malia was biting her lip nervously and trying to gauge her parents' reaction to this strange man. Cain wondered how long his brother could keep this giddy behavior up. Would he always act like a manic lunatic around her family now, just to keep up the facade? The thought made Cain smile. Everyone spare the two excited boys followed Tristan to the room across the hall. \n\nTristan hadn't really changed the room much, but Cain supposed it would look elaborate to someone seeing it for the first time. There were fresh flowers in various vases around the room. The bathroom was full of luxurious oils and soaps. It was all very girly. Olivia seemed very pleased. She looked very much like her sister, a little shorter and more petite. They had the same dark hair. Olivia had grayish eyes while Malia's were more of a dusty blue. He wondered if things would have worked out differently if he'd gotten the real Olivia. Where would everyone be if his plan had worked out like it was supposed to? Cain guessed he would never know. \n\n\"Cain, you can show Mr. and Mrs. Yates to their suite, yes?\" Tristan said amicably as he made an excuse of showing Malia and Olivia some feature or another of the room. He knew that Tristan also thought that Cain owed Jack and Kristen Yates an apology but it still annoyed him that he was so obviously setting him up for one. \n\n\"Of course.\" Cain replied friendlily. \"Please follow me.\" He walked them into the master suite of the west wing. It was even more luxurious than Olivia's room had been. There were candles lit and more fresh flowers. Clearly Tristan was trying his hardest to impress. He doubted forgiveness would be as easily attained as a nice room. He was using all of his willpower to keep his muscles from trembling from nervousness. He was proud that he was successful, to anyone looking at him they would assume he was at complete ease. He turned to Malia's parents in the entrance of their new bedroom. As he was trying to come up with something to say the thought that he'd taken their daughter's virginity kept flashing thorough his mind like a neon sign. He felt a droplet of sweat drizzle down the center of his spine. He needed to say something. He'd had days to think about what he was going to say to these people and not a single word came to mind. Fuck it. It looked like he was going to wing it and hope for the best. \n\nCain cleared his throat as he faced the very angry, very intimidating couple. \"Mr. and Mrs. Yates, I know that this isn't going to be worth much, if anything, but I want to apologize-\" \n\n\"You're right, your apology isn't worth a fucking thing.\" Jack Yates interrupted. \"If I find out you laid one fucking finger on my daughter I will find a way to kill you. I don't care how long it takes and how many bodyguards you have.\" \n\n\"Yes sir.\" Cain replied as politely as possible. Cain turned to leave the room after an awkward pause. \n\n\"And general.\" Kristen Yates spoke slowly and deliberately. He turned to face the woman Malia resembled. \"If you touched my daughter, I will find out about it.\" Her tone sent a shiver up his spine, but again he hid it well. \n\n\"Yes ma'am. Please inform any of the staff if you need anything, they will be happy to do anything they can to make your stay comfortable.\" Cain nodded to both of them and left the room. He wasn't exactly scared of Malia's parents, they realistically didn't have the resources to follow through with their threat. It didn't provide him much relief however. Part of him would be happy to let Jack Yates do what he would with him. He had no doubt that they would find out about the extent of their relationship, especially with the recent melancholy Malia seemed to have acquired after confessing her love to him. He didn't see her chippering up any time soon. \n\nTristan called him into one of the spare bedrooms as he passed it. Cain closed the door and they were alone finally. \n\n\"Impressive apology brother.\" He smiled kindly at him. \n\nCain shrugged. \"What am I supposed to say to them?\" \n\nTristan nodded. \"I suppose you're right. You've dug yourself quite a hole. Don't fret though big brother. I feel somewhat responsible for this mess you've gotten yourself into. I am going to use my powers of persuasion to win over mom and dad. I believe they are liking me already.\" Tristan grinned. \n\n\"You are certifiable.\" Cain laughed. \"They most likely think you escaped some nearby asylum.\" \n\nTristan laughed. \"All part of the master plan. The tension between you and them is an excess of negative energy. I had to make up for it with an excess of positive energy. An over exuberance of optimism throws people off guard when they are so dedicated to their pessimistic mood.\" \n\nCain shook his head. \"You sure you aren't going to school to be a shrink?\" \n\n\"It isn't rocket science. You just have to know people and their likely reactions. It wasn't fool-proof, they could have reacted badly to my positivity.\" Tristan shrugged. \"They didn't. Anyway, for my plan to work you need to stop sleeping with Malia.\" \n\nIf Cain had been drinking anything he would have spit it out dramatically. \"What?\" \n\n\"You heard me. It's painfully obvious. I think her parents were very serious with their death threat, so it's probably best that they don't find out that you are violating their daughter.\" \n\n\"I'm not-\" \n\n\"Cain don't give me any bullshit.\" Tristan looked like the older brother for once. Cain glared at him sulkily. \n\n\"It was only a couple times, it's over.\" Cain dared his brother to contradict him. \n\n\"Sure it is.\" Tristan laughed. \"Whatever drama you and Malia have going on? It's showing. She's clearly distraught and you are overcompensating with the ignoring her thing. You want to get in mommy and daddy's good graces? Make her happy again.\" Tristan looked at him seriously. \"Just not with your clothes off okay?\" \n\nCain looked down at his shoes. \"She said she was in love with me Tristan.\" \n\nTristan nodded. \"You don't believe her?\" \n\nHe jerked his head up at his brother to glare at him. \"Of course not! She thinks she's in love with me. It was just sex. I shouldn't have done it okay! Are you happy?\" \n\nTristan just studied him for a moment. \"Wow, a lot changed in a week didn't it.\" \n\n\"What's that supposed to mean?\" Cain angrily retorted. He felt so off balance. He definitely didn't feel in charge. Whatever, if Tristan wanted to be in charge have at it. He was done being in charge. Still Tristan's know it all attitude was grating on his nerves. \"You know this is why shrinks don't have any friends Tristan.\" \n\nTristan laughed. \"Don't worry about it big brother. Just think of me as your new public relations expert.\" \n\n\"Fucking Fantastic.\" Cain groaned unenthusiastically. "
    ],
    "authorname": "Darlin92",
    "tags": [
        "drama"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-reluctant-journey-ch-09"
}