{
    "title": "My Country Tis of Thee",
    "pages": [
        "Note: This story is non-erotic. It is also dedicated to Ben and his son and all the others who have written me as a result of my stories: Esther Story and Red, White and Blue Halloween. Most of all it is dedicated to the real live men, women and families who keep us safe and free. Goddess bless and keep you all!\n\n*****\n\nCHAPTER ONE\n\nMaster Sergeant Michael Thomas O'Malley scuffed the toe of his boot in the dry, beige sand. At his feet sat the puke green duffle bag that contained pretty much his whole life. Not much to show for over four decades upon the face of the earth. But then again, Sergeant Mike as his friends called him was starting over. After over two decades in the US Marine Corps, he was hanging up his uniform and beginning a new life as a civilian.\n\nMike checked the time once more on his Blackberry. \"That damned cab should have been here by now,\" he cursed. \n\nIt had taken far longer to complete the paperwork that would signal the end to the only life that he had ever known. The manila envelope that held his honorable discharge papers was tucked safely into the duffle bag along with a couple of pairs of jeans, some sweat pants and a few t-shirts. After more than his share of tours of duty, Mike had learned to pack light. And this new life was no exception.\n\nMike turned and looked once more at the large red and gold sign that boasted 'Welcome to Marine Corps Base Camp Pendleton.' How many times had he seen this sign? How often had he overlooked it? How many of his friends and colleagues would never have this chance to say a proper goodbye to this place? \n\nMike shook his head. 'Enough of that shit, old boy,' he thought. But increasingly over the past couple of years, he had felt his age. Many of the men and women that had served with him in Afghanistan had not even been born when he first saw this sign. Like them, he had been nothing more than a kid himself that day. He smiled at the memory of the bus that had picked him up from the Greyhound station that hot August day in nineteen-eighty-nine. \n\nThis August day was just as hot; hotter maybe. Despite the late afternoon breeze that was beginning to stir off of the Pacific Ocean less than a mile from this place, sweat beaded and ran down the sides of his face. This place was not the stagnant dry heat of the desert, where Mike had spent much of past decade. There were no smells of pungent meat cooking upon open fires, human waste or gun powder. But they seemed stuck in his nostrils and mind, even after two weeks back in this place.\n\nMike jump at the sound of the car horn. \"Hey buddy, you the one that called a taxi?\" the brown faced man called from the yellow checkered car.\n\nHe nodded and bent to pick up the bag. Racing over to the vehicle, Mike opened the door and threw it on the floor board. Folding his six foot four inch frame into the back seat, he gave the man the address that he had stored in his Blackberry for almost a year now. \n\n\"That the motorcycle place on the Pacific Coast Highway?\" the driver asked in his accented English that Mike was almost certain originated from the South East region of Pakistan. \n\n\"Yeah, that's the one.\"\n\n\"You going to buy one of those things?\" the man queried.\n\n\"Bought,\" Mike replied with a smile. \"I'm going to pick it up now.\"\n\n\"Why you want one of those things? They dangerous.\" The man offered by way of conversation. \"You should get a nice solid car. An American model like this Ford. If you get in accident, they keep you safe.\"\n\nMike wanted to argue that safety was just an illusion. That cars or guns or any other machine could never really protect the frail human body from the dangers of life that lurked around every corner. But instead, he simply turned and looked out the rearview mirror as Camp Pendleton as a way of life disappeared forever. \n\nHis hand came up to touch his brow as he saluted the place that had been his home for so long, the only real home he had ever known. His salute meant for the men and women that had entered those gates; too many of whom had never returned.\n\nMike was quiet for most of the drive, answering the cabbies questions with only yes or no until the man finally gave up trying to make conversation and focused upon the crowded Southern California freeway at rush hour. \n\nMike checked the time again on his Blackberry. It was after five already. They would never make it in time. He punched a number into speed dial and waited as the phone rang.\n\n\"So-Cal Cycles,\" answered the voice.\n\n\"Yes, this is Sergeant,\" he began but caught himself. \"This is Mike O'Malley. I am supposed to pick up my bike today. It's a customized Road King. I'm running a bit late. So I wanted to let you know that I will pick it up first thing tomorrow morning.\"\n\n\"Hold on one minute, Sergeant O'Malley. Please.\"\n\nMike frowned at this change of plans. He knew he could ring up a couple of his buddies and have a nice couch for the night. But he had wanted to make it to East LA tonight. Stop in and pay his respects to the Hernandez's before the funeral tomorrow. With this change, he would barely have time to pick up the bike, travel the short distance to Los Angeles and change before the service at thirteen-hundred tomorrow. \n\nHe sighed as a rock anthem played through his phone. He supposed there was nothing to be done about it. But still, he hated to let his men down like this.\n\nThe music stopped and a gruff voice came on the phone. \"Sergeant O'Malley. Come on over as soon as you can. We'll keep the shop open 'til you get here. Just come around to the side door and I'll have my son let you in,\" said the new voice.\n\n\"Thank you, sir,\" replied Mike. He wanted to argue that it was not necessary; that he did want to keep them. But the need to make it to East LA outweighed politeness at the moment. \n\n\"No problem, Sergeant,\" as the line went dead.\n\nMike sighed with relief at this turn of luck. It might not seem important, but keeping to his schedule meant that he would have the chance to speak with Manny's parents before just showing up at the funeral. The last thing he wanted was for his presence to cause the family any distress now.\n\nCorporal Manuel Hernandez was the last of the men under his command to die while serving their country. Except that was not quite accurate for Manny, who was not a United States citizen. The young man had been brought into this country as a toddler when his parents came illegally. \n\nHis two younger sisters were citizens by birth and his parents had been lucky enough to get their status normalized when Manny was a senior in high school. That new immigration status allowed the young man to fulfill his lifelong dream of becoming a Marine. \n\nA couple of months ago, Manny had begun the special process for military personnel that would make him a citizen. He had smiled broadly the day that he showed Mike and his other friends the sealed envelope that contained the completed papers. \n\nBut Manny did not to live to take the oath that would make this country his own. He had been killed when the patrol they were on was ambushed by insurgents. Giving his life for a country that was the only home he could ever remember, but did not claim him as its own.\n\nMike fumbled with his phone, pulling up photographs of friends and colleagues until he came to the one he was looking for, the ever smiling Manny stared back at him. The kid had been a riot, always laughing and joking about everything. \n\nStaring out the window, Mike wondered how many of the people in the cars around him cared or even understood this war that he and his friends had spent almost a decade fighting. The 'war on terror' might have seemed glorious and justified after September eleventh, but now it rarely made the news. \n\nDamned meaningless elections of politicians, who did not know shit about how the world really worked and cared even less, the world's economy, civil wars in the Middle East, hell, even that dumb celebrity girl who married and divorced in the space of a breathe made more headlines than the men and women that were still giving their lives to keep America safe. America and the world might have moved on, but it was a hard thing for him to do. \n\nMike watched as the driver exited the freeway. He checked the time on his Blackberry. It was after five-thirty, which meant it would be almost six before he picked up his motorcycle. He had no idea how long that would take either. He assumed it would not be a quick in and out though. He had organized all the paperwork into an envelope tucked inside his jacket pocket. Driver's license, proof of insurance and the printed bill of sale were all ready to go. Hopefully, that would move things along nicely. \n\nOf course, one good thing about a motorcycle in Southern California was its ability to weave in and out of the traffic jams that were hallmark of this region. Given the time, he could well expect another two to three hours of bumper to bumper cars as people fought just to get home from work. Interstate Five would be the worst. Stop-and-go almost all the way from here to East Los Angeles. \n\nSmog, heat rising off the concrete, and horns screeching at one another was not how Mike wanted to enjoy the first ride on his new bike. Pacific Coast Highway would be a better option. Even if it did take slightly longer to make the trip. He could enjoy the sun setting over the ocean, smell the ocean air and hear the waves hitting the sand. A much better option, he thought.\n\n\"Hey, mister. This is it,\" hailed the taxi driver.\n\nMike smiled at the white washed fa\u00e7ade with its large front display window. Chrome glinted in the glass from half a dozen new motorcycles on display there. He smiled as he counted out the fare and added a generous tip. Handing the money to the driver, Mike opened the door and grabbed his bag.\n\nAs the cab drove off, Mike stood for a moment staring at a vintage Ironhead sportster. It was painted red, white and blue. He could almost picture Nicholson astride it, clad in leather and with that snarky grin that had made him famous. Mike remembered another motorcycle. One that had begun his passion for Harleys.\n\nHe was in eighth grade, a brash man-child, abandoned to the tender care of another foster family. This one was decent enough. There was plenty of food, clean clothes and no beatings. For a kid of thirteen, it seemed the best he could hope for. In an attempt to fit in, Mike had fallen in with a rough crowd at school. They were not a gang exactly, just a half dozen young boys with too much anger and not enough adult supervision. \n\nThat day they were on their way home from school when they saw it. Bright red and silver chrome with yellow flames on its fuel tank. They had all stopped on the sidewalk. Just staring at it like people from Beacon Hill might stare at the Museum of Fine Art. To them this was art. Fast, loud and powerful. \n\nFirst one of the boys had walked over, running his hands down the cool leather seat. Then another had boldly perched his jean clad bottom on it. His hands gripping the handle bars, revving the engine in their imaginations. But that had not been enough for Mike. \n\nHis crew had stolen more than one car. Taking them for joy rides before abandoning them in seedy neighborhoods where they lived. Once or twice they had even taken newer models to a garage where they knew the owner would give them money, then cut the automobiles up for parts. \n\nBut they had never seen anything like this. It was a beacon to Mike. One thought raced through his young mind: I have to have it. \n\nHe had taken out the small pocket knife that he always carried in his shoe. Pushing the other boy aside, he had started to fiddle with the exposed wires. The only good thing about his father had been his knack for anything mechanical. It was a gift that Mike had inherited. \n\nAlthough he was unfamiliar with the specifics of motorcycles, it did not take him long to figure it out. A couple of wires disconnected and re-connected and that powerful engine boomed to life between his scrawny legs. \n\nMike shook his head at the memory. What had that kid been thinking? How had he thought he could manage a metal monster that weighed more than he did? Truth was that he had not. Barely fifty feet down that road, he had lost what little control he had. The bike flipped onto its side and skidded another hundred feet, taking Mike along with it. \n\nHe had torn his best jeans and had a nasty road burn to show for his misdeed. His friends had scattered quickly at his blight, not one even bothering to check that he was still alive. Mike had crawled from beneath the machine. He had half limped, half run back to the foster home. \n\nLuckily, the foster 'mom' was busy preparing dinner and her husband had not come home from work yet. Mike had managed to sneak up the stairs to the bathroom, where he cleaned the wounds as best he could. He had shoved his torn pants under his bed to dispose of later when he took out the trash. \n\nHe had thought he had made a clean escape until the foster family's 'real daughter' had snickered in the door way. At ten, the girl had made his life there hell. She took great pleasure in tattling. Every misdeed that he did was promptly reported to her father. At first, Mike had dreaded it, afraid of another beating. \n\nBut he soon learned that there were other forms of punishments. Long lectures on right and wrong, choices and being a man, extra chores or restrictions on television were their weapons. Mike soon came to dread those 'talks' with the man almost worse than the blows he had taken from his old man or the string of almost a dozen other 'foster fathers.' The sound of disappointment in his voice hurt Mike inside, worse than any bruise. \n\nSo Mike had taken to acquiescing to whatever demands the girl made just to avoid those chats. Looking into her sparkling grey eyes, Mike knew that this one was going to be a dozy. And she had not disappointed him. He had spent the next months jumping through her hoops, doing all her chores and always in fear that she would let something slip about what really happened to those jeans. But in the end it had not mattered, the 'mom' had gotten pregnant and Social Services had moved Mike to a group home. There were just no foster homes that wanted men-children. \n\nBut Mike had never forgotten those few seconds of glory and the feeling of freedom with the wind in his face. He had sworn that one day he would have a machine like that. No matter what he had to do. \n\nThankfully, the Marines had been a better path than the one that he had been on back then. He shuddered at the thought of where that boy might have ended up without the blessing of an old fashioned judge, who had given him the choice...Marines or jail. \n\nMike touched the glass and smiled. He had definitely made the right choice all those long, long years ago. Turning he walked around to the side of the building. Just as the man had said, there was a door open. Mike knocked on it. A young man with dirty blonde hair looked up from shining a bike. \n\n\"Sergeant O'Malley,\" he asked.\n\nMike nodded and extended his hand. \"Thanks for this. Staying open late and all.\"\n\n\"No problem, sir. Just let me get my Dad.\" He disappeared through a doorway and Mike was left standing alone in a room full of Harley Davidsons. He chuckled at the irony, wondering what that boy would have thought. Probably about which one to hot wire first, Mike mused.\n\nMike looked around the room, but he could not spot the one thing he was looking for. His Harley. It had taken months to pick her out. From the moment almost a year ago when he had decided not to re-enlist, he had begun planning this. He was lucky to have quite a little savings. Even though the Marines were not the highest paying job, it offered room and board. With no wives, even ex's, or children, Mike had not had much to spend his monthly salary on. \n\nA Harley Davidson Road King was his first choice. It would be the fulfillment of a life-long dream. It would also offer him the freedom to fulfill his other dream: to travel the country seeing the people and places that he had spent over half a lifetime defending. \n\nMen talking roused Mike from his reverie. Turning back to the doorway, Mike choked back laughter. The huge bear of a man with long, stringy hair pulled backed into a ponytail and the black t-shirt stretched taut over a beer belly was a living, breathing epitome of every bad biker movie there ever was. \n\nThe man extended a slightly greasy hand towards him, \"Master Sergeant,\" he boomed.\n\nMike took the hand in firm grip. \n\n\"Hoorah,\" said the bear by way of greeting.\n\nMike's face puckered in confusion. The man before him was the opposite of the clean cut and discipline that he expected in a Marine. But looking closer he could see the dark grey lines of a tattoo peeking from the man's sleeve. The lower half of a Marine Corps emblem was recognizable. \n\n\"I know. But after six years in the heat and humidity of that God forsaken jungle, I just wanted to shake it all off,\" the man explained as if reading Mike's mind. \"Vietnam.\"\n\nMike nodded. \n\n\"Name's Luke Davidson. Get the irony?\" he chuckled. \"This is my son,\" he replied motioning to the younger man. \"Folks call him Caleb.\" Mike shook his hand as well.\n\n\"Your bike is out back. I was just checking her out myself. Making a few adjustments. Can't let a fellow jarhead down,\" he clapped one of those mammoth arms about Mike's shoulders and steered him through the corridor and out another door. \n\nMike smiled as the sun hit the shining chrome almost winking at him. He fought back the urge to push the man aside and run to her like that kid once had. But this time, she was all his. Earned honestly with blood, sweat and tears too. The sweat and tears were his own, genuine enough. But it was the blood of his men that haunted his dreams and stole his sole.\n\n\"So what you gonna name her, boy?\" \n\n\"Name?\" \n\n\"Yeah. Like a ship. I always name my bikes. It's a tradition. Of course, me, I'm stupid about it. I always named mine after whatever woman I was with at the time,\" laughter boomed from the man's gut. \"My bikes lasted longer than my marriages. All except Little Kim, of course.\"\n\nMike gave the man another quizzical stare. As he walked over to the motor cycle that had been his only passion for so long. Well, almost. \"Esther,\" he whispered the name with almost reverence.\n\n\"Esther, she is then. Sounds like quite a lady, Sergeant. Your wife?\"\n\nMike shook his head. \"Never married. Well, except for the Corps that is.\"\n\nThe man chuckled again. \"Oh, you one of those. Well, I suppose after five marriages what can a guy like me say about that.\"\n\nMike laughed. \"Five?\"\n\n\"Yeah, I told you my bikes lasted longer than my marriages. You want to take her for a spin. Make sure that she feels right to you?\"\n\nMike shook his head. \"Actually, I was hoping to get on the road soon. I have somewhere I need to be tonight.\"\n\n\"Sure, no problem. Well, you have our number. If anything ain't right, you just give me a call or bring Esther in and I'll fix it.\" The man yelled over his shoulder, \"Caleb.\"\n\n\"Yeah, Dad?\" replied the younger man appearing out of the shop door.\n\n\"Master Sergeant O'Malley needs to get going. Can you finish up the paper work?\" he commanded.\n\n\"Sure, no problem,\" the man replied as he held out his hand motioning for Mike to follow him into the building.\n\nThe bear held out his greasy hand once more. \"I'll leave you to the boy. He's much better at this paperwork shit than me. I just want to wish you luck and say thank you. For all you have done. For me. My family. And this country. You won't hear that very much I'm afraid but us jarheads got to stick together, son.\"\n\nMike squeezed the man's paw and nodded. He could not force a single word past the knot in his throat. He might not have met this man before...or ever meet him again. But they were brothers. Members of an elite band, bound by honor and duty. A duty for which some paid with their very lives. While others like them paid with their souls.",
        "Without a word, he turned and followed the younger man into an office. The desk was stacked high with papers as a computer screen glistened in the corner. Because he had everything organized, the paperwork was dispatched quickly. The forms they completed would transfer the title and license to Mike's name. It took less than half an hour to finish the whole business.\n\nAs they walked back to where Mike's bike, Esther he corrected himself, sat outside; Mike looked around for the older man. But he was nowhere to be seen.\n\n\"I wanted to say good-bye to your father. Where can I find him?\" he asked.\n\n\"At home probably. Kim Lee keeps him on a tight leash these days. Never seen Dad so, \" the young man paused and blushed. \"Never saw him so pussy whipped. But then again I suppose marrying a woman that you loved for thirty-five years but never thought you could have, well I guess, that might do strange things to a man.\"\n\nThe idea of loving a woman that you could never have hit a chord with Mike. He was tempted to stay and learn more of the odd Marine and his impossible love story, but he knew that it was almost seven already. It would take him over an hour and a half, if traffic were good, to get to East LA. He did not have time, if he wanted to speak to the Hernandez's tonight. \n\nSo he held out his hand and offered the man thanks. Then throwing the duffle bag that contained his life into one of the compartments on his bike, he straddled her for the first time. She felt good between his thighs. He ran his hand down the bright red fuel tank. \n\n\"Esther,\" he whispered as the image of the woman smiling back from the photograph filled his mind. Mocha skin. Thick, dark curls framing her face as she beamed at her son on his graduation day. The son whose blood stained Mike's hands. The photograph hidden in his wallet stolen from his friend's personal effects was his only connection to the woman, who had captured his heart even though he had never met her. \n\nOh, he could definitely understand loving a woman you could never have, he thought as he turned the ignition and the motorcycle roared to life. He smiled and waved to the young man before he raised the kick stand and took off down the alley way on the one dream of a life-time that he could make come true.\n\nCHAPTER TWO\n\nIt was almost nine o'clock when Mike pulled off the seven-ten freeway on to Olympic Boulevard. He had made good time on the Pacific Coast Highway from Orange County to Long Beach. But an accident between an SUV and a semi-truck right after he got on the seven-ten had cost him almost an hour delay. \n\nSince it was so late, he would not stop at the Hernandez home tonight; just make a quick run by the place to make sure that he knew where he was going tomorrow. Mike had learned to not completely trust any GPS system, especially the one in his Blackberry. After this trial run, he would check into a local motel for the night, get up early and visit the family before the service tomorrow.\n\nBut as he turned right onto the quiet residential street filled with stucco faced homes in an array of pastel colors, Mike noted that the street was packed with cars. A group of young men were congregated on the lawn of a pink house half way down the block. The loud beat of music and Spanish words cut through the stifling heat. Bright lights shone from every window and the porch light cast a glow in the late summer dusk. \n\nMike double checked his GPS. The address matched the Hernandez home. Mike pulled into the driveway next to a black SUV and behind an older model family van. He took off his helmet and stored it in one of the compartments on his bike. \n\nHe felt his heart racing and dampness gathering in his palms. He wiped them on his jeans as he practiced what he would say. He had not gotten any further in his rehearsal than 'Hello, I'm Sergeant Mike O'Malley. Manny served with me,' when a teenage girl in jeans and t-shirt ran up to him.\n\n\"Sergeant Mike? Is it really you?\" asked the young woman with brown hair pulled back into a ponytail. Even in the dim light of night, Mike could tell that her soft brown eyes were red and swollen, but excitement laced her voice as she extended her hand. \"Come. Come. Mama and Papa will want to meet you.\"\n\nMike nodded and lifted his leg over his bike to dismount. The girl looked at the shiny machine and turned to the group of young men gathered on the porch. She uttered something in Spanish, waving her arm towards 'Esther.' Mike had picked up a quiet a few words of several different languages over the years, including Spanish, but she spoke so quickly that he caught little of what she said before she grabbed his hand and raced towards the front door. \n\nThe moment they burst through the front door, Mike felt the change in atmosphere. The lights in the living room were dim. The room was packed with older people. Every chair was in use and other people stood about the small space. Everyone spoke is quiet tones. \n\nIn a large recliner off to one side of the couch sat a woman. Her head was bent forward. Her shoulders were stooped and her frail body shook with silent tears. She clutched a tissue in her hand, her fingers twisting the paper one direction until it was wound so tightly it would go no further. Then she would stop, reverse it, and twist the tissue the other direction. \n\nOn the arm of the chair sat a man, not much older than Mike, but his dark face was lined with wrinkles from too many days spent in the hot Southern California sun and too many worries. His arm was about the woman's shoulders as if trying to lighten her burden, comfort her or even just hold her up. His greying hair curled about his features as he whispered something to the woman. She sobbed louder and shook.\n\nThe girl slowed her pace, pausing as they approached the couple. \"Mama, Papa. Me presentar Sergeant Mike, por favor.\" \n\nMike stood still, uncertain what to expect as the couple looked up. Their eyes traveled almost as one up and down him. Then the much smaller man stood and stepped forward. His arms wrapped about Mike and he squeezed tightly.\n\n\"Sergeant Mike. Manny told us so much about you,\" he said in heavily accented English. The woman stayed in her seat, but nodded her head.\n\nMike forced words past the tightness in his throat. \"Thank you, Senor Hernandez. I am so sorry for your loss. Manny was a fine young man.\" \n\nHis words sounded trite even to his own ears. What did you say at moments like this? How could anyone express the pain and anger at such a loss? A young man, who had barely begun to live was gone. And for what? \n\nMike watched the woman twist the tissue tighter. He wished for his own. Something to do. Anything. As pain and a million questions washed over him like the waves of the ocean breaking upon the sandy beaches along the Pacific Coast Highway. The sound roared in his ears.\n\nReleasing him from the bear hug, the man stepped back and gripped his hand, pumping it firmly up and down as he spoke. \"Gracias. Thank you for coming, Sergeant Mike. This would mean so much to Manny. He admired you very much.\"\n\nMike nodded at the man's praise as it sailed over his waves of guilt. This was not how he had wanted to meet these people. When Manny had spoken of his family, Mike had never thought that his first encounter with them would be at the man's funeral. \n\nOf course, they all knew that the job they did in service of their country was dangerous. That some might never make it home. But it was a reality that did not bear deep thought. Glossed over with laughter and stories of home until one of them made the ultimate sacrifice. Then all would pause and for a moment remember their friend and their own mortality, before pushing it aside once more until the next time. \n\nBut this was different from those times. The mourning here was not for a soldier and friend. These people did not really see it as just part of the job. Something that could happen to any of them. These people felt the loss of a promise. A son. A brother. A young man, who would one day return. Who would go to college. Have a family. Do something with his life. \n\nAs Mike looked into the dark brown eyes of Manny's mother clouded with tears, he realized that to her this was not the loss of a soldier, but a baby. The little boy that she had fed, loved and mended scrapped knees was gone. His injuries this time too deep to be fixed with her love and a Band-Aid. \n\nMike released the man's hand and crossed the few steps that divided him from the woman's pain. He knelt in front of her and enveloped her trembling hands in one of his. \"Manny loved you all very much,\" was all he could find to say. \n\nThis woman did not care that her little boy was a good Marine. She did not need to know how he fought bravely. None of that mattered. Not in the grand scheme of things. Not now. \n\nThe woman nodded her head at his words. Her eyes met his and the pain that Mike saw in their depths froze his heart. He had seen so many men die over the years. He had held his two best friends in his arms as they drew their last breaths. He had mourned their loss and carried a part of them in his soul. But until this moment, Mike had never really understood what sacrifice really meant. This woman had lost her only son. \n\nThe woman looked away, capturing the gaze of her young daughter. She spat out long strings of words in Spanish, few of which Mike could capture. Comida, cocina, and por favor was the limit of his expertize this night.\n\nThe girl stepped forward and translated. \"Sergeant Mike, Mama says we have forgotten our manners. You must have come a very long way and be tired and hungry. She insists that I take you to the kitchen and feed you.\"\n\nFood was the last thing on Mike's mind at the moment. The thought of it felt like a rock in his gut. But he smiled at the woman and nodded his head. Grateful for the chance to retreat from this new level of pain, to regroup. He nodded and with a final shake of the man's hand he followed the young woman out of the room into a brightly lit kitchen teaming with more people. \n\nThe smell of food hit Mike. As if on cue, his stomach growled. He realized then that he had not eaten anything since breakfast that morning in the non-commissioned officer mess hall at Camp Pendleton. The young woman nodded at the sound and led him through the crowd of mostly middle-aged women that scurried about the room, cooking, puttering, cleaning and jabbering in Spanish. \n\nShe took him to the counter top next to the stove that was laden with dozens of pots, pans and dishes. Opening a cabinet over head, she pulled out a plate and began piling it with food. She spoke in Spanish to a couple of women near the stove, who stared at Mike and nodded. When she put the plate in the microwave and set the timer, she walked over to the refrigerator and pulled out a bottle of beer. Opening it, she handed it to him as she pulled the now steaming plate from the microwave. \n\nWith a wave to the women, she led him out the back door to a table. Another crowd of young people milled about the back yard. They chatted in small groups about them, a mixture of Spanish and English drifted to Mike's ears until it sounded like nothing more than a drone of bees. \n\n\"Have a seat, Sergeant Mike,\" she offered.\n\n\"Thank you,\" Mike paused. He had seen several photographs of Manny's family. He knew that the man had two younger sisters, Maria and Lupe. With barely a year between the young women, the sisters so closely resembled one another that Mike was not certain which young woman had served as his hostess. \n\nAs if realizing her error, the girl spoke. \"Lupe. I'm Lupe. Maria is probably in our room. She does not like this many people.\"\n\nMike nodded as he took a seat on the bench in front of his plate. He looked at the food and smiled. Since he had arrived in Southern California over twenty years before, Mexican food had become one of his favorites. He favored it even over the rich Italian fare that he had grown up with in Boston. \n\nHow many times had Manny boasted that he had never tasted 'real' Mexican food until he ate his mama's cooking? As Mike raised his fork and brought the first bite to his lips, he thought of the young man. As the mixture of spice and flavor hit his taste buds, Mike swore agreement with his friend's assessment. He had never tasted anything quite this good before. \n\n\"Good, si?\" the girl asked. Mike nodded his head as he brought another fork full of heaven to his lips. His earlier assessment of food being nothing more than a rock sitting in his gut was forgotten in the wake of the smell and taste. \n\n\"I'll leave you to eat then. I'm just going over there to talk to my cousins. Call me if you need anything.\" She walked away to join a group of teenagers standing near a metal storage building.\n\nMike ate the food as he watched and listened to the young people about him. He guessed that some of them were in their early twenties like Manny had been. But most were younger, teenagers like the girl Lupe. The young men all seemed to be wearing a uniform of sorts, baggy khaki pants and extra-large white t-shirts that hung off them. Some had bandanas tied about their foreheads or arms. \n\nThe group laughed and joked. A couple of the boys even pushed one another about. Some of them lifted beer bottles to their lips. He noticed Lupe drinking and chatting with one young man in particular. The boy stared across at Mike. The couple broke off from the others and crossed the yard just as Mike finished his food.\n\n\"Sergeant Mike, this is Hector. He is our primo, our cousin. He wanted to meet you. He is going to be a Marine just like you and Manny.\"\n\nMike stood and held out his hand to the young man. The boy was stocky, filling out his t-shirt a bit more than the others. \n\n\"Manny told me all about you, Sergeant Mike. He said you were the best,\" said the young man.\n\nMike nodded at the praise. If he were the best, would he be standing here now? At the wake of a young man who had served under his command? If he were the best couldn't he had done something to prevent this? To keep Manny alive? Manny. Billy. Tommy. All their blood stained his hands. But he said nothing as the young man took a seat in front of him.\n\nThey talked for half an hour, maybe more. Several others drifted in and out of their conversation. Until at last, the food, the long day and a life time caught up with Mike. He could not stifle the yawn. \n\nLupe stood up. \"Hector, it's getting late. Sergeant Mike probably needs to go,\" she offered with a smile. Mike nodded his thanks. Gripping the young man's hand he promised they would talk more tomorrow. \n\nHe followed Lupe back into the kitchen. It was almost empty now. The food cleared from the counter tops that gleamed in the bright lights. Lupe led him back into the living room. But the recliner was empty now. Only a few people gathered around the couch talked quietly. Lupe walked over to a large woman that Mike recognized as one of those from the kitchen earlier. They spoke quietly for a moment. Lupe nodded and walked back to him. \n\n\"Papa took Mama to their room. Follow me.\" They walked down a dimly lit corridor to the room at the furthest end. Lupe knocked softly and exchanged a few words in Spanish with a deep voice on the other side of the door. It opened and Manny's father greeted them with weak smile. \n\n\"Come in, Sergeant Mike,\" he offered, stepping back and motioning them into the room.\n\nMike noticed the woman, sitting on the edge of the bed. She was still twisting a tissue in her finger. He wondered if it were the same one from earlier. \n\n\"Gracias, Senor Hernandez,\" Mike replied in his best Spanish. \"I just wanted to say good-bye before I left. And ask if it would be all right if I attended the funeral service tomorrow.\"\n\n\"Of course, Sergeant. In fact, Guadalupe and I were talking. We were wondering if you would like to carry the casket. Some of Manny's cousins will and I know Manny would like it if you did too.\"\n\nMike fought back moisture that pooled in the corners of his eyes. He nodded and managed to choke, \"It would be my honor, Sir.\"\n\nThe man slapped him on the back and pumped his hand once more. \"Thank you, Sergeant.\"\n\nThe woman looked up from her tissue long enough to whisper, \"Muchas gracias.\"\n\n\"De nada,\" Mike replied as Lupe led him from the room. She spoke a few more words of Spanish with her parents as Mike stared at a painting on the wall in hall. \n\nThe Virgin Mary with a golden hallow held the baby Jesus on her lap. Mike thought of this mother and imagined a baby Manuel in her arms. How empty she must feel now? Did she identify with the woman in the painting? Sacrificing their sons for others? Somehow Mike imagined it did not help alleviate any of the pain.\n\nLupe led him down the hall. Only the large woman from the kitchen remained in the living room. She was picking up plates, cups and tissues. \n\n\"Tia Manuela, this is Sergeant Mike,\" Lupe introduced the woman.\n\n\"Sergeant Mike, this is my Aunt Manny. She is Hector's mama.\"\n\nMike extended his hand. \"It is a pleasure to meet you. I spoke with your son earlier. He seems a fine young man.\"\n\nA shadow crossed the woman's face as she spoke, \"He is. When he stays away from those friends of his.\"\n\nMike smiled. \"I know the feeling. I was once just like that.\"\n\nShe smiled broadly. \"Really? There is hope? I worry so much about that boy. Since his papa left, he has fallen in with a bad crowd. Only Manny seemed able to reach him.\"\n\n\"I'm sure he will be fine,\" assured Mike. \"Lupe says he wants to join the Marines after high school. It isn't an easy life, but I promise you he will learn discipline.\"\n\nThe woman made the sign of the cross before she spoke. \"If that boy makes it to graduation without being shot, I will drive him to Camp Pendleton myself.\"\n\nMike's brow furrowed. He had never really considered the degree of danger that young men like Manny and Hector faced even at home. His own crimes were petty enough, certainly nothing that was likely to get him shot. But that was almost a quarter of a century ago, gangs these days were more organized and more dangerous it seemed. \n\nWas it possible that had Manny remained here he would have faced a similar fate? It was not something he had considered. An honorable death in Afghanistan seemed better than being gunned down by a rival gang. Or was it? Manny was just as dead. His family just as grieving. Although at least, Mike supposed they could take some solace in their son's sacrifice for 'his country.' Which reminded Mike, he had emails to send this night.\n\n\"It was a pleasure, Senora. I will see you tomorrow?\" he said as he shook the woman's hand. She smiled and nodded. \n\nLupe led him back onto the front porch. There were only a few young men still hanging about. They nodded at Mike as he and Lupe walked over to his motor cycle in the drive way. \n\n\"Thank you for coming, Sergeant Mike. You don't know how much it means to Papa and Mama to have you here. Manny wrote so much about you in his emails. Mama always smiled and said she knew Manny would be all right as long as he had you.\"\n\nMike choked on the woman-child's words. He longed to scream to the universe at the injustice. Manny was not all right. He was dead and there had been nothing Mike could do to stop the bullet that ripped through the side of the young man's head, tearing the smile from that face forever. His heart stuttered at the memory of watching another of his men fall. \n\nMike lifted his face to the dark night sky. Not a star shone in the sky. He cursed whatever was out there anyway. Cursed fate that left him alive to face the Hernandez's while their son lay in a cold casket somewhere in this city. 'Why?' rang like a ballad in his ears as he shook the young woman's hand and promised to return the next day. \n\nIt was a promise he would keep even if it killed him. Well, something inside of him anyway. This sacrifice was the least Mike could do for Manny. And Billy. And Tommy. And all the others. Tomorrow Master Sergeant Michael Thomas O'Malley would face the reality of death and sacrifice in a way he never had before. Tomorrow he would attend his first funeral since he was just a boy of seven.",
        "CHAPTER THREE\n\nMike pushed the Styrofoam box away. The half-eaten breakfast inside it had long since grown cold. Food was not his priority this morning. The box would probably have tasted better than the pancakes inside it. Mike looked at the time on his Blackberry once more. It was almost seven. Doing the math quickly in his head, he dialed the number in Washington, DC. \n\n\"Congresswoman Martin's office,\" answered a female voice on the third ring.\n\n\"May I speak with the Congresswoman, please?\"\n\n\"I'm sorry, but the Congresswoman is on the House floor this morning. May I take a message?\"\n\nMike cursed under his breath. He had been trying to reach the woman for the past week and he felt his control slipping. He did not expect parades or confetti, but he was not going to tolerate the callous way this woman was avoiding his calls. His request was not that extraordinary. Hundreds of similar requests had been granted. It was the least that Manny deserved. \n\nMike felt the iron control that he had learned over the past twenty years slipping. The discipline that he had bragged about to Tia Manuela deserted him then. Gone was the trained Marine. In his place was the angry young man that he had once been. \n\n\"This is Master Sergeant Michael O'Malley, retired US Marine Corps. I'm trying to reach her regarding the post-humus granting of citizenship for a young Marine, whose family lives in her district. I've called several times and sent emails. I realize that the death of another Mexican soldier in Afghanistan might not rate that high in the Congresswoman's legislative agenda, but the least the woman could do is return my god damned calls. Perhaps my next call should be to a Spanish language television station?\"\n\nThe phone was silent for several heart beats. Then another voice came on the line. \"Sergeant, this is Travis Mason. I'm Congresswoman Martin's constituent officer. I am sorry for the delays getting back to you. Unfortunately these things are not always quick. I can assure you that the matter is being handled though.\"\n\n\"Yeah, well today is Manny's funeral. I had hoped to be able to give his family something more than just the flag of a foreign country. Mr. Mason, I don't know if you have ever been in the military or seen what is happening in Afghanistan, but that young man spent almost a year battling the heat, the cold, a population that does not want us there as well as the god damned insurgents that blew his brains out. All for a country that he was not even a citizen of. This is the least that country can do to show its gratitude.\"\n\n\"Hold on a minute, Sergeant,\" the man asked as the line went dead. Classical music boomed in his ears as he waited for he knew not what. The booming echoed in his head. He was so tired that he was unable to think. His mind was a complete blank.\n\nFinally, the man came back on the line. \"Sergeant, I truly am sorry, but these things take some time. Not even Congresswoman Martin can do much to speed the US Citizenship and Immigration Service. But I have spoken with our Los Angeles office, the Congresswoman will issue an acclamation honoring Corporal Manuel Hernandez's service to the United States. We will have our local representative there by three today.\"\n\nMike's shoulders slumped. It was not the news that he had hoped to bring the grieving family but it would have to do, he supposed. \"Thank you, Sir.\"\n\n\"The Congresswoman has a strong record of supporting our troops. We will keep you informed of any progress on the other matter, Sergeant,\" came the terse reply. \n\nMike shook his head as he checked the notes in his Blackberry. He still had to find a dry cleaners and have his dress uniform pressed, but there was plenty of time for that. The funeral was not until thirteen hundred; one o'clock, he corrected himself. \n\nMike had not slept well. The dreams had returned. Young faces laughing and joking. The smell of smoke, bombs and blood clung to his memory like skin. It was always the same, but they had been getting more frequent lately. These days Mike had the dreams almost every night. \n\nLogically, he knew he should talk to someone. Maybe even have the doctors at the Veterans Hospital here look him over. But the truth was what could they do? Hell, what did they even know about what life was like out there? Let alone the death and pain that Mike could not seem to shake. \n\nNo, Mike felt that his plan offered as much promise as anything the doctors could offer. A few months, a couple of years, it really did not matter how long it took or where he went. Mike was just going to wander the country that he had served since he was eighteen. Visit a few of the men and women he had served with. Check and see how they were doing. Help out in any way he could. And in cases like Manny's offer what comfort he could to the families. Not that that was going too well right now.\n\nMike ran his fingers through his hair, what little there was of it anyway. Hell, he might even let it grow. Maybe not long like Luke's, but it had been almost twenty three years since it was longer than regulation. Of course, it was no longer the deep brown curls that he had watched disappear as a young man, joining the growing pile of locks on the shiny floor. \n\nHe had stared at the inches and inches of hair that collected around the barber's chair at Camp Pendleton. Straight blonde from the California surfer dude. The coarse tight black curls from the guy that looked a bit like Michael Samuels. His own soft brown curls. Even the bright red of the farm boy from Oklahoma, who was to become his best friend during those long weeks of boot camp.\n\nNo, these days there was more grey than brown in Mike's hair. He supposed in the grand scheme of things a few grey hairs was not that much to pay for a life time. Grey hair was not something that Manny Hernandez would have to worry about. \n\nMike shook his head. This was getting him nowhere. Any more than another sleepless night had. Reaching for his duffle bag, he took out a t-shirt and pulled it over his head. There was no need to change the loose sweat pants that he had slept in. Adding socks and his sneakers, Mike was ready for a run. \n\nBut where did you go to run in a big city like Los Angeles? Grabbing his Blackberry, Mike quickly had a plan. There was a bike and jogging trail along the cement river that served to drain storm water from the city to the ocean. It might not be fancy, but it would do. A far sight better than some of the places that Mike had jogged over the years. \n\nHis first day of retirement began to take shape. Drop uniform at the drycleaners. Take a run to clear head. Pick up uniform. Go to funeral. But that left another long evening and night ahead. He could not manage another sleepless night so he added one final item to his agenda. Get so drunk I pass out. \n\n***\n\nThe sun glared off Esther as Mike pulled into the Hernandez's drive way. He was slightly refreshed from his run and shower. He had barely turned off the engine and lowered the kick stand when Lupe rushed through the door. \n\nHer broad smile was a stark contrast to the somber occasion. \"Sergeant Mike, we've been waiting for you.\"\n\nMike nodded as he pulled the plastic bag that contained his dress uniform from a compartment on his bike. \"Hola, Lupe.\"\n\n\"Mama and Papa are in the living room. Mama Nona just arrived from Mexico with T\u00edo Alberto,\" the girl rattled on as if Mike knew everyone, although the names were vaguely familiar. \n\nHe searched his memories of familial stories that Manny had shared with the group. He and Tommy had always entertained the others with their stories. For someone without a family of his own, Mike had found their tales refreshing. He wondered who was entertaining the others now. \n\n\"Mama Nona?\" he finally asked.\n\n\"Si, she is Papa's abuela. My father's grandmother. We would visit her near Hermosillo every summer. But she has never been to Los Estado Unidos, to America,\" the girl was so excited that she switched back and forth between English and Spanish. \n\nMike smiled as his mind made the connection. Goats. His men had been shocked to discover that goats were the primary source of meat in Afghanistan. Coming from a country where beef, chicken and pork were the limited selection, they had found the smell of the roasting delicacy particularly pungent. Manny had told everyone about the summer he spent with his great-grandmother. She raised goats and there was always a big pot of goat stew on her stove.\n\n\"Yes, Mama Nona,\" he nodded as the girl drug him across the yard, up the steps and through the front door. He squinted as his eyes attempted to adjust to the dimness inside. \n\nLooking around, he spotted her immediately. She was a large woman. Her dark dress was simple with a zipper running up the front. Her legs were covered in thick hose and her feet overflowed the floral slippers that they were stuffed into. Her almost white hair curled about her face. Her bright red lips were distinctly out of place with the rest of her appearance. \n\n\"Mama Nona, me presentar Sergeant Mike. El es del amigo por Manny,\" the girl beamed.\n\nThe old woman studied him for a moment as if taking his measure. Then she smiled and nodded as if he had passed an inspection of some sort. \n\nMike crossed the room and knelt beside the chair. He knew that his Spanish was inadequate to express his feelings to the woman. Hell, his English was not that good either. But he could try. \n\n\"Manny was a good man,\" he began. \"He told us all about you. About how much he loved spending summer's with you. About your goats. There were lots of goats where we were and they reminded him of his Mama Nona.\"\n\nThe woman nodded her head as Lupe translated his words. When she was done, he could see the tears glistening in the elderly woman's eyes. Mike was shocked to discover they were not brown like Manny's or the rest of the family, but a hazy blue like his own. Then he remembered that Manny had explained that his grandmother was Castellan, a mix between high born Mexican ancestors and German settlers after the World War. \n\n\"Gracias,\" the woman whispered.\n\nMike stood up. He was not certain what to say or do then. The woman's stare reminded him of the great robed men that he had met when his mother drug him to church as a boy. They seemed to look into your soul. And as always, Mike felt his was somehow lacking. \n\nLupe stepped forward. \"Do you need someplace to change?\" she asked noticing the plastic bag.\n\n\"Yes, please.\" \n\n\"Mama and Papa must be getting ready in their room. And Maria is probably hiding in ours. The bathroom always has someone in it. But you could change in Manny's room, I suppose.\" \n\nMike followed her down the corridor once more, stopping this time at one of the first doors. She opened it and stood back. \n\n\"They said that the cars would be here in a few minutes.\"\n\n\"I won't be long,\" Mike had more than enough years of practice donning his uniform. Placing the insignia and medals did not take as long as people thought. \n\nShe nodded as she left him alone in the room. Mike was not certain what he expected but this room showed no real sign of belonging to anyone. The neatly made up bed was covered in a dark blue blanket. The walls were a drab grey and held only a couple of painting. Saints, he supposed. \n\nOnly the dresser that sat against one wall held any personal mementos at all. On it were half a dozen frames. A collage of Manny's life. His high school graduation with his parents and sisters beaming proudly. The official looking photograph of him in his dress uniform, the one that would accompany any announcement of his death. The one that all Marines had. \n\nBut it was the one at the back that caught Mike's eye. The young blonde girl in the hospital gown leaned against Manny's shoulder as she smiled lovingly at the tiny red ball in her arms. Rachel. Mike wondered if she would be here today. \n\nShe had not written or spoken with Manny since before he joined Mike's troop in Afghanistan. Mike had only learned about her when he helped Manny fill out the paperwork for his next of kin and insurance. He knew that the girl would have been informed along with Manny's parents. But that did not mean she would come or bring Manny's son. Mike put the gold frame back and began to change clothes. Like everything else in life, he supposed only time would tell. \n\nAs he had told Lupe, it took him less than five minutes to change. He stared at his reflection in the mirror which hung over the dresser. The hair might be grayer. There were definitely more lines around the eyes and mouth. But Mike could not help but recognize the man that stared back at him. The Marine. He brought up his hand in a salute. A final farewell to this part of himself. With one final pause, he turned and opened the door.\n\n\"Madre de dios,\" cried Manny's mother as she saw him come from her son's room. She made the sign of the cross as her husband joined her, wrapping his arms about her.\n\n\"I am sorry, Sergeant Mike. We did not know you were here yet,\" explained the man.\n\nMike shook his head, \"No, Senor Hernandez. It is I that am sorry. Lupe told me to change in there. I did not mean to cause your wife any alarm.\"\n\n\"I suppose seeing you, the uniform, coming from Manny's room. It was just not what Guadalupe expected.\"\n\n\"Lo siento,\" Mike said to the woman, who just nodded as she twisted the tissue once more.\n\nHe followed the couple back into the living room. It was filled now with dozens of people. Lupe was standing with an older man in a black suit. His hair was combed back, not one strand out of place. Mike shivered at the sight of the mortician.\n\n\"Papa, Senor Flores says that the cars are ready now. We should get going if we are going to make it to the church on time.\"\n\n\"Of course,\" said the man as he drew his wife further into his arms. The mortician nodded and motioned for everyone to follow him. Mike stood to the side as everyone exited out the door and down the steps. \n\nThere were three long black limousines sitting by the curb in front of the house. Eight or nine young men and women climbed into the last one. A half dozen older people folded themselves into the middle one. Only Mama Nona, the Hernandez's, Lupe and another younger girl remained standing in the yard with Mike. He turned towards his bike, but a hand on his shoulder stopped him. \n\n\"Would you like to ride with us, Sergeant Mike?\" asked Manny's mother. \n\nMike froze at the quiet words. Though heavily accented it was the first time the woman had spoken to him. He nodded and followed her to the vehicle. He helped Senor Hernandez get his grandmother inside first. Then Senora Hernandez and their daughters. Finally, the two men were alone. \n\n\"Thank you, Sergeant. I know that this cannot be easy for you. But you being here, it means a lot to me and my wife. It is good to know that Manny had friends over there. People that really cared about him. Thank you.\"\n\nMike put his hand on the man's shoulder and squeezed softly. \"No, sir. Thank you and your wife. You raised a fine young man. I just wish that we had met some other way. I wish...\" Mike's word hung unspoken. \n\nThe man nodded. Understanding exactly what Mike meant. Both men sighed as they turned back to the waiting car and a very long day that neither wanted to face. \n\nThe ride to the church seemed to take forever. Senora Hernandez clung to her husband and cried softly. Lupe sat on the other side of her mother and squeezed her hand. Mike was wedged between Mama Nona and Maria. Each stared out the window in silence. \n\nMike searched his memory for something to say. Something about Manny that would bring comfort to them. \n\n\"Maria, Manny told me that it is your birthday soon.\"\n\nSenora Hernandez sobbed. Her husband squeezed her hand harder. \"Maria will be fifteen. It was to be her quincea\u00f1era on Friday. But now...\"\n\nIt was the younger girl, who sobbed then, turning away from the window to look at her father. \"But Papa,\" she began. \"It is all planned. The hall is rented. The invitations sent. My dress is almost done.\"\n\n\"Si, Maria, but without Manny, who will be your escort? It just is not right. Perhaps in a few weeks.\"\n\n\"It won't be my birthday in a few weeks,\" she pouted as she turned silently back to the window. \n\nMike felt worse than before. Clearly, he had stepped into a family dispute. But he knew this was not what Manny would have wanted. \n\n\"Senor Hernandez, I know things are hard right now, but Manny would not want Maria's party cancelled. Is there any way?\"\n\n\"See, Papa. Sergeant Mike knows,\" it was Lupe, who spoke up on her sister's behalf then.\n\nThe car stopped. Mike looked out the window at the large stone and stained glass edifice rising above them. A crowd of people were gathering on its steps already. \n\n\"We will talk about it later,\" said the man as he wrapped his arms about his wife. \n\nThe door opened and light streamed into the car. Mike got out first and helped the mortician to assist the women from the car. It took both of them to manage Mama Nona's bulk. Senor Hernandez insisted on helping his wife alone. \n\nThe mortician directed Mike to the long black hearse waiting in front of the car. A few young men stood around it, chatting softly. \"You should join them,\" said the man.\n\nMike nodded and walked over. He immediately recognized Hector, Manny's young cousin, from the night before. The boy grabbed his hand and shook it. He started to introduce Mike to the others when the mortician came over. He opened the back of the black vehicle and sun light glittered off the silver casket. \n\nMike's throat tightened to the point that he was not sure he could breath. Manny was inside that thing. Manny, who had along with Tommy, been comic relief for his whole company. Manny, whose laugh could be heard throughout the camp. Manny, who was almost never without a smile. \n\nA thousand thoughts raced through Mike's mind. But only one stuck. Why? Why not him? He was not like Manny, Tommy or Billy. No one would miss him. No one would mourn his passing. No big funeral. No tears. The unfairness of war and life hit him like a sucker punch to his gut as the man slid the casket forward. \n\nHector elbowed him and motioned for them to step forward, taking the handles from the somber man. It felt heavier than any pack that Mike had ever carried. It weighed upon him. All of it. Over twenty years. All the friends. The lost lives. Unfulfilled dreams. \n\nAll of it centered in this shiny box that weighed far more than it should. A weight that Mike bore with honor just as he had borne the weight of his duty; duty that had put Manny inside this cold, dark box. The decisions he made had cost lives...or saved them, but he did not remember those in that moment. \n\nThe man motioned for them to lift the box to their shoulders. Like the solider he was, Mike followed the order. With the others, he put one foot in front of the other. Marching. He had spent a lifetime marching to the orders of others. Leading men and women like Manny on patrols where marching could turn into something far more dangerous. Just as it had that night. \n\nIt had begun normal enough. Their platoon had patrol in the village where they were staying. It was something they were doing less and less often as they focused more on training the Afghan army these days. But this night, it was one of their most holy times, the month long fasting of Ramadan, so he and his men were taking a few more patrols. \n\nThere were few windows in the simple buildings and most of the doors were shut. Light shone out from under only a couple of doorways. The barking of a dog tied up under a tree was the only sound to break the cool night air. Scalding hot days and desert nights that bordered on freezing were common in this region of the country that sat at the foothills of the mountains. \n\nOver the past weeks, Mike had asked himself over and over again, perhaps a million times, 'had he missed something.' Was there some sign of what was to come? Was the dog barking, not out of hunger or howling at the moon, but because of the movement of men on the roof tops? Should he have known the difference somehow? ",
        "That night it was not a single boom of another IED or smoke that filled the air. It was instead the rapid fire of semi-automatic weapons. He and his men ducked into doorways. Hid behind a cart here or there. Found whatever cover they could. \n\nIt had taken them a couple of minutes to figure out where the fire was coming from. And a couple more to do a head count. Someone was missing. Manny Hernandez was not accounted for. Mike went searching on his hands and knees for him. The others fired back at shadows that they could not see even with night vision goggles. Someone called for help, reinforcements were on the way as was a medical team. \n\nMike found him. Found Manny slumped in a door way of the last building where they were when the gun fire started. He was gone already. A bullet had shattered his face, taking much of his lower jaw with it. The smile that Mike had come to know as Manny was gone forever. Mike has stayed with him, commanding the others as he could. \n\nThey managed to pin down the location of the gun men on top of the house across the way. The Seal extraction team was at least half an hour away. A half an hour they did not have. Mike had ordered an assault on the house, a risky move if there were explosives inside, but it beat the hell out of sitting out here and being picked off one by one. One of his other men had been injured, taken a bullet to his thigh, but thanks to the first aid training that was now as standard as how to clean and load your gun, he would make it. \n\nThe three young gun men on the roof were not so lucky. When Mike stood over the bodies, he could only shake his head in sadness. If Manny had been young, these guys were little more than children. They did not even have a hint of the facial hair that was a sign of holiness for these people. \n\nThe sound of someone clearing their throat brought Mike out of his memory. Hector frowned at him and motioned for them to lower the shiny box onto the stand in front of the church. Mike shook his head to clear it as he followed the young man's lead back down the aisle to a hard wooden bench.\n\nThe priest stood and led the group in prayer. Mike felt every muscle in his body tighten. Prayers and gods were not at the top of his list. What help had god been to Manny? Or even to those boys that had killed him? How many wars, this one included, had been fought in the name of gods? But it was not the gods that suffered, but the fragile humans who fought in their names. Mike let out the breath he had been holding as the man and all those around him said 'Amen.' \n\nThis day was about honoring a young man, who had served his country and his fellow Marines with honor. And it was his country, no matter what a piece of paper might or might not say. Manuel Hernandez had been one of the best Americans Mike had ever known. \n\nSo Mike sat stiffly as the man droned on and on about the will of god and the sacrifices of man. Mike fought back the urge to shout, 'what do you know of sacrifice,' to the old man who spoke in a cracking voice. \n\nInstead Mike focused upon the flag drabbed box. Its silver peeked beneath the sides of Old Glory. Mike knew that Manny was not really in there. Not the laughing, smiling, joking young man he had known anyway. What was in that box was the same empty flesh that Mike had found that night in the door way. Cold. Still. A shell. Just like an empty conch shell that you found upon a beach. Only the echo of life's oceans could be heard. \n\nMike sat ramrod straight as the man continued. In his own way, he became a shell. His mind far away. Dry deserts. Green jungles. Misty mountains. Lands so far from this place that the people around him would probably not even be able to find them on a map. Iraq, Kenya, Kosovo, Afghanistan. They echoed like the six o'clock news, but few knew where or what they were. Hell, he had spent his life time in those places and he barely understood the depths of poverty, injustice and rage that erupted in war for each of them. \n\nWhat he did know was that the people in this church and on the streets outside counted on him and Manny and hundreds of thousands like them to keep those conflicts so distant that they could go on with their lives in peace. That's what they did every single day. And looking around the room at the sea of faces; some light, some dark, all somber, Mike knew that it was worth it. \n\nAmerica was not perfect. There was poverty. People were losing their jobs while fat cat bankers made multi-million dollar bonuses. Hector caught his eye. Mothers might even have to worry about stray bullets killing their babies. Gangs. \n\nBut still, it beat the hell out of any other place Mike had ever been. Even his tours on embassy duty in places like England and Germany, he had never witnessed anything like it. The American Spirit. It was alive and well in the faces of these people even as they wept and mourned. There was hope that tomorrow things would be better. That their children would have and be the things that they never could. And that was worth it all. \n\nMike rose with the others as their voices sang out as one. The song unfamiliar but the sentiment shared. When the song ended, they knelt once more. \n\nMike felt the twinge in his knees. He was getting too old for this. It was why he had decided to retire. When the lives of your friends rested upon your shoulders, when even a moment's hesitation could cost someone their lives, there was no place for knees that hurt so badly you could hardly walk each morning. Or shoulders that ached from the weight of a pack. It had been time. Tommy and Manny were just reminders of that. \n\nThe man proclaimed 'amen' once more. Let it be. The end. \n\nWith the others, Mike made it back to the front of the church. They lined up around that flag draped box and on the man's signal they lifted it once more to their shoulders. Slowly they walked back the way that they had come. \n\nBut this time, Mike studied the faces around them. Manny's family filled the first row. His mother's eyes swollen and red as she fumbled with that tissue. Were Senor Hernandez's shoulder stooped a bit more? A life time of mowing other people's lawns, cutting hedges and now this; his greatest hope, his only son was mowed down before he even had time to bloom. The girls flanked their parents. Even Lupe was quiet. And the bulk of Mama Nona, her head bowed in prayer.\n\nThere were rows and rows of other faces too. A couple Mike recognized from photographs that Manny had hung in his tent. Young men that had been his friends in high school. \n\nBut she was not there. Rachel. The young woman who had been Manny's first love. His only love. Neither was the little boy that was Manny's legacy.\n\nMike slowed as he approached the back of the church. On the last row sat a tattered group, out of place with the rest of this congregation. Old men, much older than Mike even. To a man they wore the freshly pressed and decorated uniform of the US Marine Corps. Some dated, of course. Half a dozen of them. \n\nBut one stood head and shoulders above the others. A great bear of a man. His grey hair and freshly shaved face looked vaguely familiar to Mike, but he could not place it as they marched out of the church into the bright Southern California sunshine.\n\nThe door to the hearse was open and they slid the casket back inside. The slamming of that door echoed in Mike's mind like an IED. \n\nHe stood off to the side and waited as people began to mill slowly out the church. The Hernandez family came first and stood with the priest on the top step. Then the rest of the packed church came one by one to greet the family and offer what comfort they could. \n\nThe band of brothers that Mike had noticed was among the first out. They stopped and gripped Senor Hernandez's hand firmly. They nodded to Senora Hernandez and the other women. Then they walked slowly down the church steps. \n\nThe eldest of the group wore the distinct uniform of an officer. A Colonel. He leaned upon a walking stick but still he stood tall. A Marine to the core. Mike's eyes again centered upon the larger man. He shuffled through over twenty years of memories trying in vain to place him. The group approached him. And the large man spoke. \n\n\"How's Esther?\"\n\nMike's eyes grew wide with recognition. \"She's as perfect as her namesake,\" he replied.\n\n\"Glad to hear it, my boy. This where you were off to in such a hurry yesterday?\" he asked.\n\nMike nodded. \"Manny was one of mine.\"\n\n\"One of ours,\" the oldest man said in a voice gruff from too many years and too many cigarettes. \n\n\"Yes, Sir,\" Mike saluted. Turning back to what had been the long haired biker, who sold him his motorcycle he asked, \"So what brings you here?\"\n\nThe man looked at the ground and blushed a bit. \"We make a habit of it. The group of us attends all the Marine funerals around these parts. Show our respect.\"\n\nMike nodded as he studied the group. Only one of them was anywhere near his age. A black man in a Corporal's uniform. He looked to be a few years older than Mike's forty-one, but not much. \n\nMost of the group was in their sixties. Vietnam veterans, Mike guessed. Guys for whom returning home had brought more pain. Guys, whom this country had shown anything except the respect they deserved. Guys, who were still suffering in the pain of that abandonment. \n\nOf course, the Colonel was older still. A man clearly in his seventh decade upon this earth, perhaps more. He represented another time, when war was still some honorable rite of passage through which most young men passed. \n\nMike smiled...a motley crew for sure. But one of which he was proud to count himself. \n\nThe bear spoke again. \"We usually get together for a drink afterwards. You're welcome to join us.\" He gave Mike the name and address of a bar before he led the others off to waiting cars.\n\nThe Hernandez's were coming down the steps now. Most of the other people were already in their vehicles, awaiting the drive to the cemetery. Mike followed behind them as they climbed into the limousine. \n\nThe drive was just a couple of miles to rolling green hills marked only by the shade of a couple of large trees and the gleaming white marble markers that bore the names of hundreds of people. Mike drew a deep breath as he looked out the window and saw the Honor Guard hidden beneath one of those trees. \n\nIt was not a duty that had ever been his. He wondered how those young men felt. What was it like to hear that tune dozens of times? To lift your guns not against an enemy but in salute to fallen comrades? To watch the faces of dozens of families knowing that one day it could be your own? \n\nThe door opened and Mike squinted into the sun as he stepped out the car. He helped the women out before joining the other young men by the hearse. As the man slid the metal box out, Mike ran his hand over its smooth surface. \"Adios, mi amigo,\" he whispered as he fought back moisture caused by the bright sun light. \n\nTogether they lifted the heavy burden once more and carried it to the green tarp. They sat it down over what Mike knew was an empty hole in the ground. His throat tightened at the thought. The empty hole in his own soul stared back at him as he stepped to the side with the others beneath the dark green canopy that covered a couple dozen folding chairs.\n\nThe priest came to stand near them as the Hernandez's took their places in the front row. Once more the man commanded them to bow their heads in prayer. With his hands tucked behind his back, Mike stood with the others and listened as the man spoke. The words 'yea though I walk through the valley of the shadow of death, I will fear no evil' taunted him. \n\nWhat did the priest know of war? You always feared evil and death. The difference was in what you did, not how you felt. You did whatever you had to in the face of that fear. Just like Manny and the others had that night. You fought on. \n\nThe casket stared at him as the strains of that lonesome bugle reached his ears. Until there was nothing left to fight on with, he thought as the shots rang out across the peaceful green grass. The bright sun glinted off the metal stocks and sparkled like diamonds hidden behind that tree. \n\nMike forced his eyes from that box, scanning the crowd instead. He noticed as the car pulled up behind the others. A young blonde in a designer black dress stepped out. She paused by the door as the last notes of the song echoed out. Then she opened the back door and leaned inside. A moment later, she appeared again cradling a little boy in a navy and white sailor suit. His hair was only a shade or two darker than the woman's. \n\nBut as they approached the back of the crowd, it was his dark eyes and smile that Mike noticed. A smile so like his father's that his heart shuttered in his chest. A smile Mike had thought he would never see again.\n\nMike watched them as the Honor Guard approached the casket. They lifted the flag and began the meticulous process of folding it. Corner to corner they repeated the process until it was a neat triangle. They placed it in Mike's hands. He nodded in gratitude to the young Sergeant, who was leading the guard this day. Had he ever been that young? That na\u00efve? \n\nWalking over to where the Hernandez family sat, Mike knelt in front of Manny's mother. He placed the flag into Senora Hernandez's trembling hands. \n\n\"This country thanks you for your sacrifice, Ma'am,\" he whispered as the words caught in his throat. A country that did not even call one of the bravest men he knew its own. \n\nBut not for much longer. Not if he had a damned thing to say about it. If he had to climb on the back of Esther and drive down the halls of Congress itself. This country was going to acknowledge the bravery of Manuel Hernandez and his family. He swore it then and there as he placed the measly token into her lap.\n\nHe stood slowly and walked out of the shade into the sun. Its warmth failed to reach the depths of his soul as he passed the little boy. \n\nHe was in no mood to ride back to the house with the family, but with his bike parked at their home he saw little alternative. He supposed it would not be too far to walk. He had marched further in his day. But generally not in full dress uniform, he thought as he found a tree near the road to hide behind as people began to find their cars and leave.\n\nMike had not smoked in years. But damn at that moment, he wanted a cigarette. A drink. Hell, a pitcher or a bottle was more like it, he thought. \n\n\"Can we give you a lift?\" asked a friendly voice.\n\nMike looked up at the bear and nodded in relief. \"My bike is back at the Hernandez's house. Besides there is one more thing I need to do there. But if you don't mind dropping me off, I would sure appreciate it.\"\n\n\"No problem, my friend,\" said the man grabbing his hand and leading him towards a SUV. \n\n\"Wait a minute,\" Mike said as he excused himself. He walked over to where Hector was standing with the other cousins and friends, who had served as pall bearers alongside him.\n\n\"I can't believe that puta,\" he heard Hector say. \"How dare she come here today? Manny wasn't good enough for her when he was alive. So why she coming round now?\"\n\nMike stopped at the anger in the young man's voice. \"Maybe for the same reason we all came here. To honor someone she cared about. Or maybe she came so that little boy could say good-bye to the father he will never remember. But whatever reason she came here, I know one thing. Manny would have been happy as hell she did.\"\n\nHector looked at the ground and puffed out his chest. \"Yeah well, it ain't right,\" he mumbled.\n\nMike did not respond to this latest comment. \"Please tell your aunt and uncle that I caught a ride back to the house with some friends. I'll see them there.\"\n\nHolding out his hand to the others, he said his good-byes and turned back to where the motley crew waited by the vehicle. \"This is why you don't do funerals, buddy,\" he said to himself as he double timed it to the relative safety of his comrades.\n\nAs he piled into the car, the men had tried to get Mike to join them for one quick beer before heading off to the Hernandez. Mike was tempted, very tempted. The reality of this day, of a lifetime, rode him hard, but he did not want to dishonor the uniform or Manny by drinking. Just yet anyway. He promised them that as soon as his errand was over he would meet them there. It was another promise he intended to keep. \n\nThe short ride back to the Hernandez home was made in utter silence, not even introductions to mar the solemn occasion. Each of the four men in the vehicle lost in their own thoughts and memories.\n\nIt had been over a decade since he had drowned his troubles in alcohol. Somewhere in his late twenties, he had discovered that the price was just too high. Actually, it was pretty easy to remember when he had given the partying up. It was a day when a lot of people gave up a lot of things. A day that few people would forget. September eleventh, two-thousand and one. Nine-eleven.\n\nHe was coming to the end of his second enlistment. He had just finished a tour of duty, peacekeeping in Kosovo. And he was seriously considering getting out. But that morning, watching those buildings burn and then fall from a television screen in Camp Pendleton, had changed all that. \n\nHe had battle experience. He would be needed. And there was no way he was letting his country or the Marines down, not then. He had known the cost going into things. He had been in Desert Storm and Nairobi when Al Quaid attacked the embassy there. \n\nAs they pulled up in front of the Hernandez home, the men reminded him of his promise to join them later. He nodded and waved as they drove off. No one was back at the Hernandez's home. But that was all right. He could use a bit of quiet. Time alone to get his head together while he smoked that first cigarette in eleven years. It was another thing he had given up that day in his determination to as the saying goes...be all that he could be. \n\nMike drew deeply on the cigarette the cigarette that he had gotten off the Colonel, felt the smoke fill his lungs. These fumes so different from the others that clung to his mind. Gun powder. Burning flesh. But the truth was that it burned his throat and lungs almost as much as those memories. He stubbed it out. \n\nThe limousine had brought the Hernandez's back almost twenty minutes ago. He was sure that the family was settling in by now. Besides the representative from the Congresswoman's office would be here soon. \n\nHe almost missed her. The sedan blended in with the other cars in the neighborhood. If it had not been for the soft sobs coming from the window that was rolled down a bit, Mike would have walked right past it. Rachel was just sitting there, a block down the road from the Hernandez home. He could see the baby sleeping in the car seat on the back seat. \n\nMike tapped lightly on the window, calling her name. The young woman looked up, her eyes swollen and red from the tears. She rolled the window down the rest of the way. \n\n\"Sergeant Mike?\" she asked.\n\nMike halted in shock. How did this girl know him? \"Yes.\"\n\nShe opened the car door and got out slowly. \"Manny told us about you in his letters, sent pictures,\" she explained.\n\nMike was not certain which surprised him more that Manny had told her so much about him or that she had read the letters and emails at all. Manny had shared the story behind their break-up with Mike. It was not what most people suspected. \n\nEven after having Miguel, Rachel had finished high school. Like Manny, she was at the top of her graduating class. Both of them had been accepted at UCLA. For her it was a foregone conclusion. Her father was an executive with one of the Hollywood studios. She could easily afford tuition as well as manage childcare for her son. \n\nBut for Manny it was a different story. Even with grants, scholarships and if he continued to live at home, enduring the hour commute across the city each day, it would still not be enough. He could have gotten part-time jobs perhaps. But then his grades would have suffered. He knew that with two younger sisters, who would soon be off to college as well as a mortgage to pay, his parents could not afford to help out. ",
        "So Manny had turned to the Marines, a dream that he had held since he was a boy. Not only would he qualify for more funding to pay for his education, but he could save a large portion of his pay each month. In five years, he could go back to college without worrying, maybe even help his parents out some. \n\nRachel had not liked the plan. She did not want him gone from her life, from their son's life for long periods of time. She did not want Manny putting his life in danger. She had begged and pleaded with him to reconsider. Her father had even offered Manny money if he would stay. But pride had stood in the young man's way.\n\nMike supposed that standing here now, Manny gone, her concerns born out; Rachel might feel vindicated. If he had known how things would turn out, would Manny have given into her pleas? Swallowed his pride to be with her and their son. They would never know now. \n\nWhat Mike did know was that this young woman was hurting just as badly as the Hernandez family. That the little boy sleeping so peacefully in his car seat could offer solace and reconciliation to them all. That it was what Manny would want.\n\nOpening the back door, Mike fumbled with the buckle on the car seat. The little boy opened his eyes and for a moment Mike's heart stopped beating in his chest. He had his father's brown eyes. Eyes that had seen so much already. Knowing eyes. \n\n\"Hey little man, your grandparents are waiting for you,\" Mike whispered as he finally found the clasp that would release the contraption. Lifting the car seat out the back door with the toddler still strapped inside, Mike smiled at the young mother. \"Let's go.\"\n\nShe shook her blonde head. \"No, you go ahead. Take Miguel with you. I'll just wait here.\"\n\nMike shook his head and shifted the car seat to his other hand. He reached out and circled the woman's arm with his hand. \"No way. You're coming too.\" Capturing her gaze, he pronounced, \"It's what Manny would have wanted.\"\n\nShe sniffled, but all her protests died. Her shoulders slumped and she bowed her head as she nodded, allowing Mike to guide her across the street.\n\nThe yard was once more filled with dozens of young people hanging around just talking. It sounded like the bees were back in their hive. Until the moment that Mike's feet touched the walkway. Conversations stopped and all heads turned to stare at them. \n\nHe felt her go stiff under his fingers. Without even turning his head, Mike whispered \"Head up, soldier,\" he commanded. \"You have more right to be here than most of these people. You remember one thing: Manny always loved you. Now one foot in front of the other. One step at a time.\" \n\nMike heard her exhale deeply and for a moment worried that she would turn and run back to the safety of her vehicle. But she did not. After a moment, he looked at her. \n\n\"Did he?\" she whispered.\n\nMike nodded, \"Yes, Ma'am. I can promise you not a day went by that boy did not say something about you or his son.\"\n\nHer blues eyes filled to brimming with tears once more, \"But I was so horrible to him. I never answered any of his letters or emails. I never cashed any of the checks he sent. I even declined his Skype calls.\"\n\nMike knew the pain of guilt that she bore intimately. He could not deny any of what she said. He knew that after more than one of those calls Manny had moped about camp, his famous smile nowhere in sight. \n\nBut none of that would help now. It was too late to change the past, but in this moment she had the power to decide the future. Not just for herself, but for her son, Manny's son...and for the Hernandez family. Mike had to make her see that somehow.\n\n\"Miguel lost his father. Don't make him loose his grandparents and aunts too,\" he pleaded with her.\n\nBefore Rachel could respond, the screen door flew open. Senora Hernandez ran through it and down the steps. Like a force of nature, she captured the girl in her arms. \n\n\"Raqu\u00e9ela, Raqu\u00e9ela. You came. You came,\" she cried.\n\nMike took a step back as he watched the women embrace. The baby stirred in his seat and let out a screech.\n\n\"And you brought Miguelito,\" she whispered.\n\nRachel nodded as the woman released her from the embrace, but kept one hand firmly in her own as if fearing that the girl would run away if she did not. Manny's mother reached for the car seat but Mike shook his head. \"It's heavy, Ma'am. Let me,\" he said as he followed them inside. \n\nMike sat the car seat down next to the chair where Mama Nona was holding court. Senora Hernandez dropped to her knees, making quick work of the harnesses that had baffled him. The boy jumped from his seat the moment that he was free, running about and giggling as if he knew exactly where he was. \n\nSenora Hernandez smiled for the first time as she sang out in Spanish to her husband and mother-in-law. She pulled Rachel forward and Mike was surprised to hear the young woman join in the conversation in perfect Spanish.\n\nMike smiled, knowing that he had been right. This moment was exactly what his friend would have wanted more than anything else. His mother welcoming the woman he loved back to the family. His son running about the house where he had grown up. The only thing missing was Manny's smiling face. \n\nMike turned back towards the door. His vision blurred a bit as he stepped into the sun light. He would just wait out here for the Congresswoman's representative. He pulled the Blackberry out of his pocket. The woman should be arriving any moment. He would introduce her to the family and explain why she was here. Then he could join the other Marines from the funeral at the bar in a toast to Corporal Manuel Hernandez. \n\n\"Why did you bring that bitch here?\" Mike recognized the voice from behind his back.\n\nTurning, he stared into Hector's glazed over stare. Looking at the empty bottle in his hand, Mike suspected that it was more than just the beer that fired this young man's bravado. \n\nIn complete honesty, Mike was itching for a fight. Connecting his fist with the boy's jaw and teaching him a thing or two about real respect would feel so damned good just then. Except that would not do the Hernandez's or Manny any good.\n\nSo instead Mike simply shrugged his board shoulders and said, \"Your uncle and aunt seem to be happy I did.\"\n\n\"Yeah well, that rich bitch dissed Manny. She wouldn't even let him see his own kid,\" he slurred.\n\n\"But she brought their son today to honor his father.\"\n\n\"Too damned late,\" he said as he stumbled towards the door. \"I'm gonna be a man. Do what none of you seem to have cojones enough to do. Tell her she ain't welcome here.\"\n\nMike stepped up, placing his arm about the boy's shoulder, he turned him. \"Why would you want to do that, Hector? To be a big man? To show off in front of your friends?\" He motioned towards the crowd gathered around them. \"Trust me, kid. Doing that won't make you a man. It will hurt your family and make you look like a fool. Don't do it.\"\n\nThe boy shrugged out from Mike's embrace. \"What you know anyway, old man?\" The young man spat, getting beer on the front of Mike's uniform. \n\nHe fought once more to control the rage inside of him. It was a war he had been waging his whole life it seemed. Some battles he won and some he lost. \n\nTurning to the group of young men that stood off to the side, he commanded, \"One of you take him before he embarrasses us all.\" Three of the group stepped forward and guided Hector off the porch and down the steps. \n\nMike sighed with relief at the averted crisis as he watched them pile the boy into the back of a souped-up old car. It was pulling out from the curb just as a shiny black sedan pulled up. The official government plates told Mike that it was from the Congresswoman's office. \n\nHe walked over and opened the door. A middle aged Latina in a crisp navy blue suit looked up at him. \"Master Sergeant O'Malley, I presume?\"\n\n\"Yes, Ma'am,\" he smiled.\n\nThe woman grasped a large manila envelope off the seat next to her. \"Our office in DC told me about you.\"\n\nMike smiled, \"Don't believe half they told you. My bite is worse than my bark.\"\n\nThe woman laughed as they walked up to the door. \"I hope I won't have reason to find out, Sergeant.\"\n\n\"I mean no disrespect, Ma'am. I just want what's right for a good man. A good man that deserves this country's gratitude and respect.\"\n\n\"So do we all, Sergeant. This is not the first time that the Congresswoman has been asked to handle a matter like this. It is all too common these past few years. Our Latino community has born more than its share of the burden in this war against terror.\" \n\nHer dark eyes pinned Mike as she continued, \"You have my word that she will do all she can to expedite Corporal Hernandez's citizenship, but these things take time, Sergeant. Time and patience.\"\n\nMike nodded as he blushed at her dressing down, \"Yes, Ma'am.\"\n\nShe smiled, \"Now, let's at least give this commendation to the family. It will do until we have something more to offer.\"\n\nMike opened the door and stood back, allowing the woman to enter first. He led her over to where Miguel was fidgeting on Mama Nona's lap. The Hernandez's sat talking on the couch with Rachel as a dozen or so other guests and family gathered around the room talking.\n\nClearing his throat to get their attention, Mike began, \"Senor and Senora Hernandez, I would like to introduce,\" he paused, realizing that in her dressing down he had forgotten to get the woman's name. \n\nShe stepped forward, smoothly taking over, \"Hola, mi nombr\u00e9 es Senora Gomez.\" She explained in Spanish, who she represented and her purpose in coming that day. Mike caught only a bit of the conversation as he stood back blending into the dark paneling of the wall. \n\nThe woman smiled as she read the decree. Someone stepped forward to take a photograph with their cell phone as she handed the certificate to Senor Hernandez. Manny's mother insisted that the woman stay and have a bite to eat, ushering her into the kitchen.\n\nMike walked over to Senor Hernandez, grasping his hand. \"I should get going, Sir. I just wanted to let you know once more what a wonderful young man Manny was. It was my pleasure to serve with him. I know it is not easy, but you can be proud of him.\"\n\nThe man nodded, \"Gracias, Sergeant Mike. I am sure you must be very busy. We are grateful that you took time out from your duties to come here. I know you must need to get back to the base soon.\"\n\nMike shook his head, \"Actually, sir, I retired from the Corps.\"\n\n\"Oh,\" the man's eyes opened wide with surprise. \"Then what are your plans, Sergeant?\"\n\n\"I'm just taking it one day at a time, sir. I bought a motorcycle. Over the years, I've served this country with a lot of good men and women like your son. But I've never had the time to see much of it or keep up with many of them. So I thought I'd spend some time traveling, seeing places and visiting old friends.\"\n\nThe man grasped his hand firmly, \"You are always welcome here, Sergeant. Anytime you are in Los Angeles you have a home with us.\"\n\nMike nodded. \"I better change and get on the road, sir. Will you express my condolences to your wife once more?\"\n\n\"Of course. Use Manny's room again. Your things should still be in there.\"\n\nHe headed down the hall. Relief washed over him. He had done it. He had made it through the second funeral of his life. This one had been no easier than that first almost thirty-five years before. Closing the door behind him, he made quick work of changing into his jeans and t-shirt. \n\nHe was just inspecting the stains on the front of his uniform where Hector had spit beer when he heard a soft knock on the door. \n\n\"Come in,\" he responded.\n\nThe door opened and Maria stood in the doorway. \"I don't mean to disturb you, Sergeant Mike. But Papa said you were leaving and there is something I wanted to ask you.\"\n\nMike could tell that the girl was nervous. He knew that she was shy. Manny has said that his sisters were like night and day. Lupe, the older one, was out-going; a cheer leader and on the student council. But Maria was quieter, books were always her best friends. Manny loved both the girls, but Maria had been special to him, needing to protect her from the world outside her stories.\n\n\"What can I do for you?\" he asked as she studied the beige carpet at her feet.\n\n\"In the car today, you said that Manny would not want us to cancel my quincea\u00f1era. Did you mean that?\"\n\n\"Yes. I know how much his family meant to Manny.\" He walked over to her. Putting his fingers under her chin, he lifted her face. \"You especially. Manny would want you to have your special day.\"\n\nShe nodded. \"Manny was to be my escort though.\"\n\nMike nodded. \"I know. I submitted the paperwork for his leave.\"\n\n\"Will you do it now?\" the words burst from her like water across the top of a dam. \n\nMike did some quick calculations in his head. It was Saturday. The party was scheduled for the following Friday. Almost a week away. He had planned to spend a day or two more in the area, purchasing a few things he would need for the road. \n\nThen he was off to Oklahoma to be with Billy's father Mister Clyde. The man had been in a nursing home for the past two years. Alzheimer's. Mike was listed along with his daughter in Chicago as next of kin. \n\nThey had contacted him a couple of weeks ago to let him know that the man was deteriorating. It would not be much longer. But when Mike had checked in with them yesterday, they said that he had had a few good days. Mike knew that those good days would not last, but maybe they would buy him some time. Maybe he could stretch this trip a few more days. For the girl. For Manny.\n\nHe nodded his head. \"I'd be honored, Maria.\"\n\nThe girl smiled. \"Muchas gracias. Thank you, Sergeant Mike. I'll tell Mama and Papa that we can go on with the party.\" \n\nShe ran down the hall with as much care as Miguel was running about the living room, wreaking havoc with the knick-knacks on the shelves around the room. Not that anyone cared. Some things were important, like family, friends and country. Other things were just things.\n\nMike turned back to the bed and finished packing his uniform into the bag. \"I hope like hell I don't have to wear you again anytime soon,\" he said, thinking of the group of former Marines waiting for him in the bar down the road.\n\nWith his duffle bag in his hands, he paused and looked about the room. Staring at the photograph of Manny in his uniform that glinted in its silver frame on the dresser, he raised his hand in salute. He slipped from the quiet room, down the hall and out the front door. \n\nIt was not until he had stowed his bag in the compartment on his motorcycle and gotten into the seat that he looked up at the bungalow where Corporal Manuel Hernandez had been raised. \n\n\"May whatever's waiting out there treat you well, Corporal,\" he pronounced as he turned on Esther's engine and headed off down the street to join that motley band.\n\nCHAPTER FOUR\n\nThe ride to the bar where he was to meet Luke and the others was not that long. A quick jaunt down the six-ten to where it ended in Long Beach and a couple more miles to Seal Beach, a sleepy Southern California beach community known for its surfing. Mike had visited a couple of bars there more than once back in his younger and wilder days. But that had been over a decade ago. Back before the world changed.\n\nThe place could best be described as a hole in the wall, hidden at the back of a strip mall off of the main drag. The parking lot around it was filled with Harleys as well as SUVs, trucks and even a couple of flashy sports cars. It was an eclectic lot, especially considering the fact that Happy Hour would not begin for at least another hour or so. Mike found a place to park Esther not far from the door. He took off his helmet and stored it a compartment. \n\nTaking a deep breathe of the salty sea air, he steeled himself. He knew from years of experience that alcohol was no solution. He had spent a good seven years after Desert Storm and Billy's death trying to drown it all in a bottle. If he was not on duty, he could be found in any of a half dozen bars around San Diego. \n\nIn fact, he had come damned close to losing it all. His drinking and a couple of bar fights had led to mandatory anger management classes and a demotion. He still had the nightmares of holding Billy's head, red liquid trailing from his nose and mouth, as the sound of him gurgling and drowning in his own blood echoed in his dreams. \n\nIrony was that when he re-enlisted after nine-eleven he knew he was heading back to that hot, dry desert. He knew that there would be more Billy's. He knew that he would lead men to their deaths. Hell, some warped part of him even hoped that it would be him. That the nightmares and the hell that he lived in would end where it had all begun. \n\nBut watching the television that morning, he had realized for the first time how important the job that he and the other men and women he worked with really was. Knowing that those buildings were full of civilians; men and women who were not trained for war, who went to work that morning to type letters and trade stocks or a dozen other mundane things. They had expected another day at the office. They had probably even looked out their windows and wished they were in the sunshine instead. \n\nThen the planes hit and the world changed. Sergeant Michael Thomas O'Malley changed. He became a US Marine perhaps for the first time in the decade that he had served. He was proud of what he did and uniform he wore. Despite it all, he still was. \n\nHe slung his leg across his bike and walked to the door. A large black man stood sentry at it. His arms that reminded Mike of saplings were crossed about his chest as he stared Mike up and down. \n\n\"You with Luke's bunch, ain't you?\" he asked.\n\nMike nodded. \n\n\"Yeah, well, keep it down back there. Those old guys haven't started a fight in over a year. Just because they have fresh, young blood don't think ya'll can tonight. Understand buddy?\"\n\nMike held up his hands in surrender. \"I'm not here for any trouble. Just a few beers and conversation.\"\n\n\"Well, keep it that way. They at their usual booth in the back, past the pool tables.\"\n\n\"Thanks,\" Mike nodded and stepped inside. He stopped just inside the doors, waiting for his eyes to adjust to the dim neon lights. \n\nHe smiled as the lonesome twang of country music drifted to his ears. Leave it to this lot to find the one bar in all of Southern California that had country music on its juke box. \n\nEven with an almost packed room, it only took Mike a moment to locate the group sitting at a table in the back, just as the man had said. He could see that the table top was already littered with a couple of dozen empty beers mugs and shot glasses. If he had thought to drown his own troubles in the bottle, he decided then and there that it might be a better idea to go slow and keep a cool head, watch out for these guys' backs tonight.\n\nHe was headed towards the back when a sultry voice stopped him. \"Hey, jarhead, what you having?\"\n\nMike looked over to the woman standing behind the bar. She was probably a couple years older than he was, but well preserved. Her platinum blonde hair was obviously dyed and the black t-shirt that read 'Kay's' was stretched taut over D-cup breasts that Mike would bet were compliments of one of Southern California's best plastic surgeons. \n\n\"Just a beer. Whatever you have on tap will be fine,\" he replied, walking over to the bar. As he approached, he could see the round curves of her bottom that filled in the tight jeans she wore. \n\n\"You a new addition to that gang?\" she asked with a smile.\n\n\"A temporary one maybe,\" he replied. \"I bought my bike from Luke and then we ran into one another...\" his voice faded off. \n\nHow did one say at a funeral? Death and dying were never comfortable topics in society, but more so when that death was a young soldier in battle. People just did not want to think about the reality, the true cost of their freedoms and safety. ",
        "The woman nodded knowingly. \"They only come in here after one of their funerals.\" Passing the cold mug across the bar, she placed her neatly manicured hand over his where it rested on bar. \"If the beer don't drown it, baby, I can think of other ways. Join your buddies. They'll be closing this place down tonight anyway. Then if you want, you and me can hook up.\"\n\nMike picked up the cold glass and took a long swig of the beer. He looked the woman up and down again. It was certainly not the first time he had been propositioned. Frankly, he admired the woman's straight forward approach and she damn sure was hot. Hotter than anything he had had in...well, in a long time. \n\nHe shook his head and called himself a fool. \"Thank you, Ma'am, for the kind offer. It certainly is intriguing, but I think that I'm going to have my hands full with that lot tonight. Perhaps another time.\" \n\nThe woman shrugged her shoulders and the t-shirt stretched even tighter across her ample chest. Mike cursed himself again. \"The offer stands. I'm Kay by the way. And yes, I own this shitty place.\"\n\nMike extended his hand, \"It's a pleasure to meet you, Kay. I'm Mast...\" his voice trailed off. \"I'm Mike,\" he corrected. \n\n\"Hey, Mike, don't you be sweet talkin' my woman, boy,\" Luke said as he slapped Mike on the shoulder. \n\nKay looked at the bear of a man and laughed, \"Yeah, right. I have Kim's number on speed dial. Want me to call her up and tell her that? You know damned good and well that there won't be no more wives for you, old pal.\" \n\nThe man's laughter boomed around the bar. \"Aw, sweetie, but an old man can dream, can't he?\"\n\nThe woman giggled and nodded her head, \"Get your ass back there with the others. I'll have Stacy clear off the table and bring over another round. But be warned, I'm not having any trouble tonight, Luke. One misstep and I'm picking up this phone and calling her.\"\n\nThe man brought his hand to his forehead in a mock salute, \"Yes, Ma'am.\" \n\nTurning to Mike, he grabbed his hand and pumped it up and down rapidly. \"We were beginning to think you weren't gonna show, buddy.\"\n\n\"Sorry, like I said, I just had a couple of things to handle back at the Hernandez's. Thanks for inviting me.\"\n\n\"Hell, like I told you yesterday, us guys got to stick together you know,\" the man's speech was beginning to slur and Mike could tell he was already less than steady on his feet. Mike was half glad when he wrapped his arm about his shoulder, it would allow him to guide the man's bulk more easily back to the table before he fell.\n\n\"You any good at pool?\" he asked as they passed the tables.\n\n\"Not really. Wish I had back half the money I lost at the tables,\" Mike replied as he eased the giant into the booth. He nodded at the two other men remaining at the table. \n\nThe white haired gentleman Mike recognized as the one who had worn the officers' uniform earlier, but he was now attired in khakis and a Hawaiian shirt. The other man was the African-American man that was about his own age. He nodded to both of them. \"Hello.\"\n\n\"Oh that's right. We didn't have time for formal introductions earlier. Mike, this is Colonel Shaffer, but we just call him Bob. And that is Larry. You guys might have served together in Desert Storm. Me, I'm Nam, dirty, nasty hell hole of a jungle. The Colonel, well, he's seen more than the rest of us; Korea, Nam, and Desert Storm. So you're among friends, boy.\"\n\nMike nodded at the other men as Larry scooted over to make room for him on the bench. The group fell into casual conversation over beer after beer after beer with more than the occasional shot thrown in for good measure. Luke and Larry got louder and louder as the drinks flowed. They took turns bragging about their women and wives, each trying to best the other. \n\nUntil it all ended in a challenge. The winner would be decided at the pool table. Although both men could barely stand, they stumbled together to the table just a few feet away. They used the pool cues and the table to hold themselves upright as they played, scratching more than their fair share of balls.\n\nMike chuckled at the spectacle as he lifted his third mug of beer to his lips. He was barely feeling anything, having carefully nursed each drink slowly. \n\n\"Things never change, do they, son?\" asked the Colonel.\n\n\"What do you mean, sir?\" \n\n\"Those two trying to drink enough to forget it all. Bragging about things that never happened. Trying to be men. All of it just a show to hide the pain.\"\n\nMike stared at the bottom of the glass as he nodded. \"I suppose so, sir.\"\n\n\"You said that boy today was one of yours?\" \n\n\"Yes, sir, he was.\"\n\n\"It's never gets any easier, son. Being the one to give the orders. The one to lead other men to their deaths. There are times you just wish it could have been you.\" \n\nMike could see the old man's hands shaking as he lifted his glass. Mike knew it was not the alcohol talking. The mug was the same one that the man had all night and it was barely half empty.\n\n\"How do you manage, sir? If you don't mind me asking.\"\n\nThe man chuckled. \"Not so well these last couple of years, my boy.\" The man paused a moment and drew a small swig before continuing, \"It wasn't so bad before my wife Ethel died. That woman was the best thing that ever happened to me.\" \n\n\"She stood by me from the day we met in college. When I came home from Korea, we had a rough spell. Things just weren't the same. I had seen too much. And for a while it looked like we might not make it. But she wouldn't give up on me, not even when I...\"\n\nThe man took a long drink this time, almost emptying the glass. Mike swore that he could see tears glistening in the corners of the old man's eyes. He waited patiently.\n\n\"She just would not give up on me, no matter what I did. Of course, when Nam came along, we both knew more about what to expect. It don't change how you feel inside, but knowing that those feelings are natural, well, it helps some.\" The man lifted his glass and drained the last of it.\n\n\"I was probably your commander in Desert Storm. Even though you never saw my face or might not even remember my name, I was the one commanding half of the Marine troops over there. So whatever burdens you bear from those days, don't. They aren't yours to carry soldier. They rest squarely on my shoulders.\"\n\nMike choked on his beer. Billy's head resting on his lap as blood trickled from the edge of his mouth flashed liked a scene from a movie through his mind. After all these years, over twenty of them, he was sitting across the table from the man who gave the orders. Orders that cost his best friend's life. \n\nAnd all he felt was pity. Pity for the weight that the man bore. He had given orders too over the years. Orders that cost other good men their lives, men like Manny Hernandez or Tommy Samuels, but he could always justify it. He was just following orders. \n\nAnd while the man across the table was in his own way just following orders as well, he was the one that had decided strategy. He had called the shots like a football coach in a championship game. And win or lose, it was his decisions that cost the game. Everyone else was just players on the field. \n\nMike did not want to even imagine the weight of this man's burdens. He certainly was not going to add to them by telling him about Billy.\n\n\"Yes, sir,\" Mike whispered. Trying to change the subject, Mike said, \"Your wife sounds like a remarkable woman.\"\n\n\"She was. She held it all together. Me. Our children. Hell, my whole command. She was always there. Every time something happened she was there with a casserole and a hug. I miss her like hell.\" He paused and stared at the empty glass, \"What about you, son? You married? Got a good woman to shoulder some of the pain?\"\n\nMike shook his head. \"No, sir. Afraid the Corps was my mistress for the past twenty years. Not much room in there for a woman. Besides there ain't many like your wife left.\" \n\nAs the words passed his lips, an image flashed through his mind...Esther.\n\n\"Yeah, that's true enough. But they do exist, boy. And here's the best advice this old soldier can give you. You look this world over until you find you one. Then you do whatever you have to do to hold onto her, because that's the only peace you will ever find in this world. In the arms of a good woman, a woman who knows your pain and loves you anyway.\"\n\nMike nodded. The Colonel could never know, never understand. This pain he bore alone. He could never wash the blood of her son from his memory and as long as it was there, he could never be the man that she deserved. \n\nIt was nothing more than one of those stupid Greek tragedies that they had pounded into his head in high school. He smiled at the irony, given that she was an English teacher and probably pounding those same stories into the heads of teenagers somewhere. He raised his glass and drained the last swallow in toast to her. \n\n\"Can I get you another?\" he asked the Colonel.\n\n\"No, one is my limit these days. Plumbing is giving out on me. Prostate cancer,\" the man explained.\n\n\"I'm sorry.\"\n\n\"Don't be. I've lived longer than I should have. Longer than a lot of good men we know. Besides I'm kind of looking forward to it. Seeing Ethel again.\" He motioned to the bar, \"Ask Kay to call me a taxi, will you? I'm kind of tired and want to call it a night.\"\n\n\"Yes, sir,\" Mike nodded as he headed to the bar. \n\nLuke called out to him as he passed, \"Get us a couple more, will you?\"\n\n\"You sure that is a good idea, my friend?\"\n\nThe man laughed, \"Hell, no. It is a bad one, but so were the last half dozen. I might as well enjoy it while I can cause I know I'm gonna pay for it later.\"\n\nLarry laughed, \"Yeah, Kim Lee gonna hit you upside that thick head of yours for sure.\"\n\n\"Yeah well, at least I got a woman to warm my bed. What you got?\"\n\n\"I don't know. If Mike there don't take Kay up on her offer, who knows I might?\"\n\n\"Now that would start a fight. You know better than to even look at that girl. Ty will kick your ass all over town. That's his woman.\"\n\n\"She ain't got no rings or strings. She can do what she wants.\"\n\n\"You keep thinking that. But when was the last time anyone took up that lady's offer. That Seal done put his own seal on the little lady and Marine or not I don't think that is a battle you want to fight, buddy?\"\n\n\"Yeah well...\" The sound of the men trailed off as Mike approached the bar. \n\n\"Excuse me, Ma'am,\" he said, clearing his throat as the woman finished filling up another mug and passed it to the waitress. The place was beginning to empty out now that it was almost one in the morning, but there were still three dozen or so men and women scattered at the bar and tables around it.\n\n\"I told you, call me Kay. What can I get you sweetie?\" she purred as she pushed another mug towards the bouncer who stood at the end of the bar. The man that Mike had met earlier was now glaring at him.\n\n\"The Colonel asked if you would mind calling him a cab. And could I get another round of beers for me and the others?\"\n\n\"Yeah, but this is the last one. We closing soon and I don't want no trouble with you lot,\" said the man.\n\nThe woman rolled her eyes. \"Don't mind Ty, sugar. I'm happy to call a cab for the Colonel. How's he doing anyway?\" she asked as she pulled the tap, filling three mugs with frothy beer.\n\n\"He says he's a bit tired.\"\n\n\"He hasn't been the same the last couple of years. He's had the cancer for years, but it was such a shock when Miss Ethel passed. By the time, the doctors found the breast cancer it was already too late. But that's how that woman was. Always putting herself last, taking care of the Colonel and everyone else without ever complaining. I sure miss her,\" Mike could hear her voice cracking as she spoke.\n\n\"You knew his wife?\"\n\nHer eyes clouded over, \"Yes, the Colonel was my husband's commander. Tony was killed when his copter went down on a training exercise. Miss Ethel was there even before the Chaplain with a hug and a chicken casserole. All us wives knew what those casseroles meant...bad news. But we loved that woman like a mother. I'll never forget her.\" \n\nShe smiled through the unshed tears as she passed the beers across the bar to him. \"She was there for me so many times. Back then I was nothing more than a kid myself, nineteen and a newlywed. I had no idea what the hell I was going to do.\" \n\n\"My parents wanted me to come home to Texas, but I had fallen in love with the surf and big city lights of Southern California. Miss Ethel helped me get settled. Find a job after Tony died, get an apartment, begin a new life. Over the years she kept in touch too. When my boss put this place up for sale, she insisted that the Colonel co-sign the loan. This place is as much theirs as it is mine.\"\n\n\"They just helped out a little with the financing. You are the one that keeps this place going, sweetheart,\" said Ty.\n\nThe woman sighed, \"Well, it is the baby I never had.\"\n\nMike noticed the shadow that crossed the man's face and decided now would be a good time to exit. Lifting the mugs, he said, \"Thank you, ma'am.\"\n\nThe woman flashed him a smile, \"The other offer still stands, Jarhead.\"\n\nMike nodded, \"I'm honored, Ma'am, but I'm afraid I'll have to decline. Nothing personal, it's just that there is someone else,\" he stretched the truth.\n\n\"Good for you, Sergeant. An honorable man is a hard thing to find these days.\"\n\n\"I don't know, Ma'am. I know quite a few of them. I bet you do too,\" he smiled at Ty.\n\nKay laughed. \"You warn Luke that I'm calling Kim Lee after this one. And tell Larry that he can sleep it off in the back room. If you drink that one real slow, I'll let you pass though; it's only your fourth.\"\n\n\"You keep count on all your customers, Ma'am?\" he asked in shock.\n\n\"Not really. Just on my friends,\" she winked before turning back to talk with Ty.\n\nMike headed back to the table where Luke and Larry had collapsed at last next to the Colonel. \"Kay says that she will call your taxi, Colonel. But she said to warn you that she is calling your wife, Luke. And Larry, she said you can sleep this one off in the back.\"\n\nLarry lifted his glass high and looked at Luke, \"See, I told you the little lady has the hots for me, buddy.\"\n\n\"You better not say that too loud or you'll be sleeping it off in the emergency room when Ty is finished with you,\" challenged his friend.\n\nThe Colonel laughed at them both. \"Will you help me to the door, boy?\" he asked Mike.\n\n\"It would be my honor, sir.\" Mike said assisting the elderly man from the booth. They stopped at the bar for a moment. Mike left the man with Kay, giving them some privacy while he pretended interest in the juke box.\n\n\"I don't know whether to knock the shit out of you or thank you,\" said a low voice.\n\n\"No need for thanks, but I would really appreciate it if you didn't kick my ass. I'm in no mood to decide the age old battle over who is tougher, Seals or Marines,\" Mike laughed.\n\n\"We both know the answer to that question, but I'll let you jarheads keep pretending. It's the least I can do for you.\" \n\nMike turned and held out his hand. \"Mike O'Malley. You must be the Ty I keep hearing about.\"\n\n\"Tyrone Williams. And you better believe everything those old boys says. I protect what's mine,\" he replied squeezing Mike's hand a bit too hard as if to prove his point.\n\n\"Yeah, well, a wise man once told me if you find a good woman you should hold onto her and never let her go. So if I was you, I'd clarify my position with the little lady. Unless you like watching her make little offers to guys like me.\" \n\nMike squinted as the man squeezed his hand even harder and stared into his eyes. For a moment he wondered if he was going to be the one that spent the night in the emergency room. But then the man released his hand and slapped him on the back.\n\n\"Damn good advice. I think it is about time I made things a little clearer to the lady.\" \n\n\"Don't thank me. Thank the Colonel. It's his advice.\"\n\n\"Old man always was a wise son of a bitch. On and off the battle field.\"\n\n\"Well, if you will excuse me, I'd better get the old man into his cab,\" he said as he walked back to the bar. \"Are you ready, Colonel?\"\n\nThe man nodded and wrapped Kay in a hug. \"You call me next week so we can get those papers signed, you hear me. I don't want no trouble when...\"\n\nKay nodded her head. \"Thank you, Colonel. You and Miss Ethel were like family to me.\"\n\n\"You know Ethel thought of you as the daughter she never got off this soldier. She loved you, dear.\"\n\n\"Yes, sir,\" this time the woman could not hold back the tears as they spilled from her eyes, trekking dark mascara down her cheeks. She swiped at them with the back of her hand but it only made matters worse, smudging her cheeks and nose as well.\n\n\"And sweetie, one more thing. It's way past time you stopped playing these little games. You aren't a kid anymore. Tony's been dead almost twenty-five years now. You have had your fun and played the field.\"\n\nThe old man looked to where Ty was talking with a middle aged couple at the door. \"But you have a good man now. It's time you grew up and became the woman Ethel always knew you could be. Nothing would please this old man more than to walk you down the aisle before I go be with her.\" \n\nDrawing her back into his arms, he looked her in the eyes. \"You promise me you'll think about it. I know the boy is only a Seal, but we can forgive him that one mistake, can't we?\" He laughed.\n\nKay laughed and slapped the man's shoulder. \"Go home, old man, before your taxi decides to leave without you.\"\n\nMike took the man's hand and felt him lean more heavily upon him as they walked to the door. A yellow cab was waiting by the door and Mike recognized the driver as the man, who had driven him to Luke's shop just the day before.\n\n\"Hello, Colonel. How are you this evening?\" asked the man as he opened the door.\n\n\"Fine, Ahmed. And how is your boy? He doing well at UCLA? Getting good grades and staying out of trouble?\"\n\n\"Yes, sir.\" Ahmed took the Colonel's hand and helped him into the cab as he nodded at Mike.\n\nMike watched as the driver closed the door and walked around to the other side of the car. As the cab drove off, he considered just leaving. He was tired. So tired. This day had been long. Too damned long. But he could not leave without saying good-bye to Luke. Without making sure that this mysterious Kim Lee had the situation well under control. So he turned back towards the bar. \n\nAs he entered he noticed that Kay was talking to Ty as she scrubbed down a table near the door. She looked up and smiled weakly as Mike walked past. He noticed that the dark smudges were spreading across her cheeks as more tears brimmed over. But he figured that Ty was more the man to handle the situation. He would only complicate things...just like he always did.\n\nLuke was laying half way across the booth and snoring so loudly that it almost drowned out the music. Larry was staring into the bottom of his empty glass. \n\n\"You all right?\" Mike asked.\n\n\"Are we ever?\" the man whispered.\n\nTaking a seat next to the man, Mike shrugged his shoulders. \"How long have you been out of the Corps?\"\n\n\"Since right after we came back. I kept having dreams. Nightmares. They said I would wake up the whole barracks screaming. Got to the point that no one wanted to be around me. So the docs decided that a medical discharge was best for everyone.\"\n\n\"Since then?\"\n\n\"I don't know. It's up and down I suppose. I spent some time in the Vet hospital in Long Beach, but there wasn't much they could do for me. Hell, I lost a couple of years sleeping on the streets\" The man toyed with the rim of the glass. His grease stained fingers outlining its edges. \n\n\"I was holding up a sign off the freeway. You know the one...Vet needs help, sort of thing. Luke pulled over and started talking. He helped me get off the crack and even gave me a job. Let me sleep at the shop until I could get my own place. Saved my life, I guess.\"",
        "\"And now?\"\n\n\"Things can still be tough. I have the dreams sometimes. Wake up sweating and it takes me awhile to remember where I am. But Luke is great. He's cool if I call in sick for a few days while I get myself back together.\" He stared at the glass.\n\n\"They right you know. We got to stick together. Take care of one another. No one back here understands. No one knows what it is like.\"\n\nMike placed his hand on the man's shoulder. \"That's what I aim to do my friend. I bought the bike so I could do a bit of traveling and check in on some old friends. See if I can help out the way Luke helped you.\"\n\nLarry nodded. \"You a good man to the Corps,\" they both laughed at the joke.\n\nKay walked over and kicked Luke in the shin. The bear woke and sat up as if coming out of hibernation. \"What? I'm here, Kim Lee,\" he cried out.\n\n\"You damn well better be, because I called her fifteen minutes ago. So unless I miss my guess, we better start hauling your butt towards that door before that banshee comes tearing through my place screaming and turning over my tables and chairs.\" \n\nMotioning to Mike to get on one side of Luke she went to grab the other, but Ty stepped in. \"I got this one sweetheart. You get that brother settled in the back room while the Jarhead and I hand this one over to his true love,\" he chuckled.\n\nKay nodded, \"All right. Larry, can you walk on your own?\"\n\nThe man saluted, \"Yes, Ma'am. As much as I would love to have them arms wrapped around me, I think it is safer if I made it on my own steam.\"\n\n\"Damn straight it is, buddy,\" said Ty as he and Mike used their combined strength to lift the grizzly. \n\nKay began clearing the table as the men headed towards the door. \"Hey, Mike. Come back sometimes. The place ain't always like this. Just when the boys take it over for one their wakes. We usually a pretty fun place to hang out.\"\n\n\"Thank you, Ma'am, but I'll be heading out in a few days. If I'm ever back in these parts though.\"\n\n\"Yeah, bring your lady with you next time.\"\n\nMike nodded as pink stained his cheeks. \"Yes, Ma'am.\"\n\nThey had barely made it out the door when another Harley barreled up to it. The creature driving it defied explanation. With a black helmet shrouding its head and clad in leather from head to toe, it resembled some mythical creature of darkness. \n\nExcept for its size. It was miniscule. Even straddling the bike, Mike could tell that it was barely five feet tall and could not weigh even a hundred pounds. Having tried to maneuver such a machine when he was about the same size, he marveled at the creature's physical strength.\n\n\"You good for nothing, crazy old man. What you think you doing? I told you to come straight home this time. But did you listen to Kim Lee? No.\" The creature screeched as it removed the helmet. Hair as black as coal fell about a face that refused to reveal its age. Despite lines about the eyes and mouth, the woman's features could have been those of the child that Mike had first thought she was.\n\n\"Kim Lee, baby,\" Luke slurred.\n\n\"Don't you Kim Lee me you sorry excuse for a man,\" the woman said as she boxed the giant about his ears. \n\n\"I'm sorry, baby. Honest, I am. But I ran into a new friend.\" Turning to Mike for help, he pleaded, \"This is Master Sergeant O'Malley. The man I told you about yesterday. I just wanted to have a couple of beers with him, sweetie. Talk about the Corps and old times.\"\n\n\"Old times, nothing, old man. If you want talk to your friends, I tell you bring them home. I cook. They drink and eat. Then sleep it off at the house. Not in this place. Not with that woman. Jezebel.\"\n\nTy stepped forward. \"Miss Kim, you know Kay is a good woman. She keeps these guys straight. Just like you do.\"\n\n\"Yeah, yeah, I know. But you know as well as I do that these two used to,\" kicking Luke in the shin she continued. \"That my worthless husband used to warm that whore's bed between wives. Well, no more. I not having you round her no more. You mine now.\"\n\nLuke bent forward and brushed a kiss across the hellion's lips that were still set in a frown. \"Aw, baby, don't be like that. You know me and Kay ain't nothing but friends now. Besides sweetheart, I have always been yours. Since that day I first laid eyes on you forty years ago. No other woman has ever had this old heart.\"\n\n\"Gees man. Have some dignity,\" complained Ty as he and Mike pulled the man towards the SUV that was parked across the lot. Kim Lee followed behind. Mike might not understand a word she was saying but he knew cursing when he heard it. \n\nLuke leaned into the man, \"You take lessons, boys. You got to sweet talk your way out of these things. Women can't resist sweet words and good loving. Ty, I know you might have the good loving down with Kay but it's them sweet words you gotta do now.\"\n\nReaching the car, Ty shoved Luke against it as he jerked the door open. \"I don't need no god damned advice from you on how to handle Kay. You had your chance you sorry son of a bitch. I'd kick your ass right now if I didn't know that Kim Lee was going to do it for me.\" \n\n\"Damn right, I am,\" Kim Lee added as she pushed her husband into the passenger's seat and secured the belt about his hulking mass. Turning back to the men, she addressed them. \"Ty, thank you. I so sorry. I keep him away as long as I can. I promise.\"\n\n\"It's all right, Miss Kim. These guys just need to blow off steam every now and then. You know I don't take it personal. You take care of the old coot,\" said the man as he shook her tiny hand.\n\nKim Lee turned towards Mike. He shrunk under the glare as if something in those deep black eyes could see into the souls of men, read their deepest thoughts. And he had way too many to hide. \n\nAfter a moment, she extended that tiny hand that he noticed was perfectly manicured with bright red talons. He took it reluctantly and was surprised at the strength of her grip. \n\n\"You come to dinner at house Monday night,\" she commanded. \"Call shop and Caleb give you address. Six o'clock. He should be sober by then.\"\n\n\"Ma'am,\" Mike began, but the woman held up her hand.\n\n\"No argument. You come.\" Turning back to Ty, she said, \"You take care of Old Man. Let Larry ride her back to shop when he sober tomorrow.\"\n\nTy nodded, \"Yes, Ma'am. I'll lock it up tight inside the bar tonight.\"\n\nShe handed the man her keys and walked around to the driver's side. Mike stood in awe as she climbed into the massive vehicle, marveling that she could reach the peddles. The two men stood in silence as she drove off.\n\nTy was the first to break the silence, turning to Mike. \"You need me to call a cab for you too? I can put your bike in the bar too.\"\n\nMike shook his head, \"I'm all right. I swear.\"\n\n\"You better be. I ain't dealing with Kay if anything happened to you, Jarhead.\"\n\nMike laughed. \"Yeah, I don't envy you dealing with that one period.\"\n\nTy shook his head. \"I think the Colonel and Luke might be onto something. I think it is about time I got some things straight with my little man eater before I have to kick some nice guy's ass because he ain't got your good sense to know when to politely turn her down. Thanks again for that.\"\n\nHolding out his hand, Mike added, \"My pleasure, man.\" This time Ty did not feel the need to break his fingers as they shook hands. A small blessing that Mike was extremely grateful for as the tiredness settled into his bones. \n\nIt was not the drunken stupor that he had hoped for but he hoped that the beers would relax him enough that the dreams this night would be of soft, mocha skin and thick, dark curls beneath his fingers as he worshipped the thing he could never have. \n\nStraddling his bike, he caressed the hard steel the same way that he longed to touch her namesake. \"Esther,\" he whispered as he listened to her engine purr and imagined that soft lilting Southern voice purring his name as he made love to her. Some men were not as lucky as Ty, Luke and the Colonel. Sometimes all a man had for comfort was his dreams. \n\nCHAPTER FIVE\n\nMike looked around him with shock. He was not certain what he expected, but it certainly was not this. Maneuvering Esther around the circular drive-way, he pulled up in front of the sprawling brick and glass edifice that Luke called home. \n\nThe center of the driveway was filled with a rock garden, small water fall cascading into a koi pond below and even a statue of Buddha. The place screamed money. Big money. Sure, Mike knew that the man was the premier Harley Davidson distributor in the area. But still? Nothing about him spoke of this kind of wealth. \n\nDressed in his dusty boots, old jeans and a t-shirt Mike felt decidedly under-dressed. When he had phoned Caleb earlier for the address, he had asked what to wear and the man said nothing fancy. But clearly their definitions of fancy differed. For a moment Mike contemplated running back into Laguna or even Huntington Beach, see if any of the shops were still open. Maybe find something else to wear, perhaps khakis and a Hawaiian shirt like the Colonel had worn Saturday night. \n\nBut before he could turn Esther's engine back on, the bear burst through the dark wooden doors and descended upon him.\n\n\"Hey buddy, I wasn't sure if you'd have the nerve to come after the ass I made of myself the other night,\" Luke said sheepishly, his cheeks ruddy with embarrassment. \n\n\"Bring man into house, idiot,\" came the shrill call from the door way. \n\nMike looked up to where the tiny creature stood in the open door way. In lieu of the black leather, she wore a loose fitting sarong this night. Its bright red, orange and yellow patterns were an almost perfect match to the shirt that Luke wore along with his shorts and flip flops. Mike smiled realizing that he was not underdressed after all. \n\n\"Yes, Ma'am,\" the men said in unison.\n\nLuke hit Mike on the shoulder as he got off the bike. \"So how's the bike? Any problems?\"\n\nMike shook his head. \"None. Spent the whole day yesterday cruising the Pacific Coast Highway actually. Perfect Sunday ride. Went all the up to Santa Maria then back down here.\"\n\nLaughter boomed from the man, \"Surprised you walking boy. Don't you know that you have to go slow. Break your muscles in with these machines.\"\n\nMike nodded, \"Yeah, I know. I've ridden a few times in the past. Those rental things when I had some time off. I just needed a bit of a break. I didn't even realize how far I had gone until I was headed back.\"\n\nLuke nodded. \"I understand. That freedom is why I love my job so much. These girls are special.\"\n\nKim Lee smiled in greeting as they came up the steps. \"Sergeant Mike, nice to meet you.\"\n\nMike looked at the diminutive woman in the bright light of day. Gone was the creature of darkness that barked orders better than many drill sergeants. In its place stood a remarkably beautiful woman. Again he wondered at her age. The few lines about her eyes and couple of strands of grey hair that he had failed to notice in the dim light of the parking lot gave away nothing.\n\n\"It's my pleasure, Ma'am. I'm sorry if our party the other night caused you any inconvenience.\"\n\n\"This man nothing but trouble for forty years. What one more night?\" she responded as she playfully swatted the bear's stomach with the back of her hand.\n\n\"Aw, sugar, you know you love me anyway,\" Luke teased.\n\n\"I love your money, this house. I love America. You, I put up with, old fool,\" she pronounced as she turned back into the house. She padded bare foot across the marble tiled foray, expecting the men to simply follow her.\n\n\"Don't believe a word she says. That woman waited thirty-five years for me to fulfill the promise I made to her that I'd come back for her and our baby girl. Turned down more than a few marriage proposals from what our daughter tells me.\" The man shook his head as he watched his wife disappear across the designer living room and out glass doors onto the patio. \n\n\"I could never get her out of my blood,\" he declared with reverence. \"You ever met a woman like that, buddy? Someone you know you'll never be good enough for, but can't help loving anyway?\"\n\nMike could not force words past the lump that formed in his throat so he simply nodded. Both men stood for several moments in silent revere, lost in their own demons and dreams. \n\nFate or whatever the hell was out there had granted his paltry wish. His sleep that night had been filled with images of her. Her crown of dark curls spread across the pillow as he ran his hands up and down her full figure. He had worshipped her breasts with his mouth before moving lower still. His name had sprung freely from her lips as she cried out from the pleasure he gave her. That Southern twang that he had heard only when he eaves dropped upon Tommy's Skype conversations. Yeah, he knew intimately the hell of loving a woman you would never be good enough to have. \n\nHe had woken the next morning so hard that even the ice cold shower had failed to solve his problem. Instead he had been forced to take matters into his own hands, standing beneath the spray, his hands moving on his hard cock as his mind replayed every image and sound from those dreams. Dreams that had been his only comfort for two years now. But even when he had come, there had been no real relief. \n\nThe thought of her had ridden him all day long. The Colonel's words. The way that Ty had looked at Kay. The closeness he had felt between the Hernandez's that had sustained them through what was probably the worst day of their lives. Hell, even the way that Kim Lee had bossed Luke about like a little boy. They all served as a bitter reminder of what he would never have...love.\n\nThat should not have been any real shock to the little boy who had lost count of the number of foster homes he had been in. Or the Marine, who had filled his pain with beer and one-night stands. But things were different now. \n\nHe did not have the Marines anymore. No one depended upon him for anything. And for the first time in a decade there was nothing to wake up for. No where he had to go. Nothing he had to do. He was as he had been over twenty years before...nothing. A nobody. And the pain of it all was closing in fast. Too fast. \n\n\"We better get our butts out there with the others or Kim Lee is gonna box us both upside the head,\" smiled Luke, breaking the silence.\n\nMike nodded and followed the man through the living area, noting again the expensive and fashionable furnishing that looked so out of place with what he knew of this down to earth man. \n\nLuke must have noticed his stares because he responded, \"Kim Lee weren't lying. She does love my money. But I figure, hell, let her spend it. Seems the least I can do to make up for all those years of having nothing but the hatred of her own people in that god damned jungle hell hole.\" \n\nWrapping his arm about Mike's shoulder, he led him to a glass case against the wall. It was full of pictures. Pictures that told a story of love and pain. The largest was a silver frame that was obviously a wedding photograph. Luke's smiling face stared out of the frame at Mike, but so too did Kim Lee's slightly overwhelmed one. Beside them stood Luke's son and a breath-takingly beautiful young woman that was almost an exact replica of her mother except for the striking hazel eyes. The younger woman was flanked by a man that was clearly also of mixed heritage, Asian and black. In his arms was a baby girl in a frilly white dress. \n\n\"Lots of girls in her position gave their babies up. The orphanages were full of Amer-Asian children that no one wanted. Hell, some even left them to die in the streets. But not my Kim Lee, she kept Jade Su. Did whatever she had to make sure our little girl had a place to live, food to eat and an education.\" \n\n\"I know my wife has scars every bit as deep as my own. So every time I get a credit card bill, I stop and remember that and thank God that I got it to give her cause she deserves every damned cent. More than those bitches that I write alimony checks to every month,\" he finished.\n\n\"Old man, what you doing now?\" the voice carried on the sea breeze through the open patio doors. \"We waiting.\"\n\nA million questions danced through Mike's mind. The story that Luke told was just scratching the surface and he knew that. Mike wanted so desperately to hear the rest. To believe that for once good things did happen to good people. That for some people there was happiness to be found at the end of the pain. \n\nIt was the only thing that kept him going these days. The thought that the damned money he had saved over the past decade might offer some of his friends hope. That somehow he might use it to bring some relief and maybe a bit of happiness. Before...well, just before.\n\n\"Get a move on, boy. I know that sound. We about to have hell to pay,\" said Luke as he led Mike through the patio doors onto a veranda that overlooked the Pacific Ocean. Waves crashed against the rock cliff upon which the house was built. Their sound blending with the laughter of a dozen or so people that milled about the pool that was the center of attention. \n\nMike recognized most of the faces. Caleb was there with a pretty brunette woman. A little boy that was only slightly older than Miguel sat on the Colonel's lap as he chatted with Larry at a table off to the side. A huge umbrella offered shade from the still bright summer sun.\n\nAnother couple that Mike recognized as Luke and Kim's daughter and the mixed race man from the photograph were sitting at the edge of the pool. Their feet dangled in the water as two children splashed and played nearby. The little girl in a pink bathing suit was about the right age to be the baby in the wedding photo. The boy was a year or two younger. \n\nLuke led Mike over to a bar that was set up near the sliding glass doors. \n\n\"What's your poison? Bud? Corona? Or something with a bit more kick?\" A smile lighting his weathered face.\n\n\"Bud's fine,\" replied Mike looking around once more. Another Asian woman was chatting away with Kim Lee close to where Mike and Luke stood. He could not understand a word they were saying, but the conversation was definitely animated.\n\n\"That's Kim Lee's baby sister Su Kim,\" explained Luke. \"She came over with Danny and Jade Su for a visit this summer. The house is a bit full. Hell, my wife is demanding we buy a bigger one,\" he chuckled. Pointing to his daughter and her family in the pool, \"If we could get Jade Su and Danny to move over here with the grandbabies I would do it in a heartbeat. My little girl not only looks just like her Mama but she's just as stubborn.\" \n\n\"She and Danny run a charity in Vietnam that reunites Amer-Asian children with their American fathers. That's how I found them. I saw this story on the news about them. One look at her and I knew that was my baby girl.\" \n\nHis eyes moved to where his son stood chatting with Larry and the Colonel. \"I pissed Caleb off big time when I hopped on the first plane out of LAX to Vietnam. He thought I had lost my mind. Traveling half way across the world to meet a woman that I did not know for certain was even my flesh and blood.\"\n\n\"I love that boy but it took him a long time to come around. He was certain that they were just gold-diggers after my money and an American visa. But I knew...\" the bear thumped his massive chest, \"I knew in here that they were mine. And I couldn't wait to hold them.\"\n\nLove shown in his eyes as he watched his wife arguing with her sister, \"I went to bring Jade Su home. To fulfill the promise that I made to Kim Lee when they pulled us out of there. I told her I would come back for them.\" \n\n\"Of course, damned politicians, they closed the borders off for decades. I was just a kid then, barely twenty, but I tried my best. I sent hundreds of letter when I got home. The Red Cross, my Senators, the US embassy, anyone I could think of. Hell, I even got my ugly face on the news pleading for information. But it was like they had dropped off the face of earth.\" ",
        "\"It was a decade before I gave up. I almost lost it all then. I had built up my business when I came back so I would have something to offer when I found them. But those days were so dark I came damned close to losing it all in the bottle. Met this gold digging bitch and she took half of it all too. For six months of hell as her husband.\" \n\nThe bear inhaled deeply, \"That woke me up some. But I just tried another drug to stop the pain. I got saved and ended up in this church that kept milking me dry too. But it weren't all bad. I met Caleb's mama there and we got married. We were together for almost fifteen years before my mid-life crisis ended it all. She could not take it when I quit the church and started back to hitting the bottle.\" \n\n\"But I just couldn't stand the pain no more. The religion wasn't deadening it any more than the booze had. I figured at least the booze was more fun than the church. Hell, I always found better friends in bars than I ever did in church. At least with them you ain't got to pretend you perfect,\" the chuckled as he opened a bottle of beer for himself and brought it to his lips. \n\nHe took a long swig, emptying half the bottle before he continued, \"I went through two more temporary wives before I saw that news show. Actually, I was still married to the last one when I left. She told me if I walked out the door not to come back. I called my lawyer on the way to the airport, signed over the house and wrote her a check. Good riddance to bad rubbish, right?\"\n\nLuke waved to his daughter as he continued, \"It was easy enough to find Jade Su. That news story had money and the press flocking to them. I was lucky too. She recognized me instantly from the faded picture her Mama had. But what I was not expecting was what came next.\" \n\nThe smile lit not just his face but his eyes as well, \"She and Danny asked me back to their home for dinner. When I walked through the door, there she was. The only woman I ever really loved.\" \n\nTurning to where his wife was talking loudly and making wide hand gestures with her sister, he laughed again, \"Damned bitch didn't even have the decency to age a bit in thirty-five years. She was just as beautiful as the young girl I had met all those years ago when our platoon cleared out their village ahead of a fire fight.\" \n\n\"At first, she wouldn't talk to me. At all. All those years of shame, holding on to the promise that a stupid kid, who didn't know shit about how this fucked up world really worked, made to her. Paying the price for what her people thought of as treason. She hated me. And I deserved every single bit of it.\" \n\nLooking Mike in the eyes, he spoke in a low tone as if sharing some ancient secret of the universe. \"You know hate is the other side of love. I learned that with my marriages. I could always walk away without any problem. Just pay them off and leave, cause none of them meant anything to me; not really.\" \n\n\"But not Kim Lee, I would do anything to get that girl back, pay any price. That's how I did it in the end. I bought her. With my money and the promise that I would give her everything I ever said and more. After years of suffering, it was just too much temptation to resist.\" \n\nHe shook his head. \"She agreed, but boy what a price. I thought I would go crazy that first year. She barely talked to me. And the separate bedrooms? Well, that weren't my idea of marriage.\" \n\n\"Thank God I had matured from that hot headed kid. I stepped back and decided that the only way we were going to make it through was if we started all over. So I spent that time courting my wife. The old fashioned way. Flowers. Chocolate. Dinners at the best restaurants. You name it, anything to see her smile.\" \n\n\"I meant what I told Ty...sweet talking and good loving will win any woman over in the end. You just got to have the patience. But she's worth it.\" \n\nHe raised the bottle and finished it off. \"I figure we lost thirty-five years, so I'm planning to have just as many loving her. Five down and thirty to go, my boy.\" He said. He opened two more bottles and passed one to Mike. Lifting his bottle, he clanged it against the one that Mike held. \n\nMike smiled. \"Thirty and more, my friend.\" The man's happiness touched something deep inside him fueling his resolve, giving him the strength he needed to face some of what lay ahead. \"Thanks for sharing that,\" was all he could manage to push past the knot in his throat.\n\nLuke's gaze pinned him, \"Your pain rolls off you, son. I feel it. Deep in here.\" He patted his gut. \"I'm gonna tell you something I ain't never told another living soul, not even Kim Lee.\" \n\n\"After Caleb's mama kicked me out, I was staying in the back of the shop. One night, I got drunker than Cooter Brown, as my daddy used to say. I pulled out my old foot locker with all my stuff from Nam. The uniform. Old polaroids of Kim Lee and Jade Su,\" Mike saw the bottle tremble in his giant hand as he lifted it to his lips and drank again.\n\n\"At the bottom of that box, I found my old Colt. There was still bullets it in,\" the man paused in silence as if just speaking about it took him back to that night. \n\n\"I hurt so bad. I felt like everything I did was doomed to fail. I had failed Caleb and his mama just like I had failed Kim Lee and Jade Su. Hell, there was even enough of that damned religion still left in me that I thought I had failed God too.\" \n\nHe pinned Mike with his stare as he spoke, \"I put that gun in my mouth and I pulled that trigger.\" A giant laugh that echoed louder than the waves shook the man. \"The damned thing jammed. I thought what a fuck up is that. I couldn't even kill myself. So I drank until I passed out.\"\n\nLuke walked from behind the bar and came to stand next to Mike. Wrapping his arm about his shoulder one more time, he said, \"Look around, boy. Look at this house. Look at my son and his family. Look at Jade Su, Danny and my grandbabies.\"\n\nMike watched a single tear spilled from the corner of the bear's eye and track down his weathered cheek as his gaze traveled to his wife once more. \"But look hardest at Kim Lee. She'd still be sweating her ass off making barely enough to survive while she sewed designer clothes for rich bitches like my ex-wives.\" \n\n\"If that gun had not jammed that night, none of this would be.\" His eyes bore deep into Mike's soul. \"When that moment comes for you. And I know it will. I can feel that. You remember this moment and you put that gun away, cause somewhere out there is a good woman like my Kim Lee that needs you to save her from life's pain just as much as you need her to push those demons aside and save your sorry soul.\" \n\nExtending his other hand to grasp Mike's in friendship, he finished. \"Trust me shared burdens ain't nearly as heavy as they feel right now. The love you find in the arms of a good woman will save you like not even God can.\" \n\nThe man turned back to the bar and lifted his bottle, bringing it to his lips he drained it before pinning Mike with another of those soul deep stares. \"Don't you damn well forget that. Cause I don't want to be wearing that god damned uniform to your funeral soldier.\"\n\nMike stared down at the beer in his trembling hand. The man's words hit closer to home than he could have imagined. The decision that he had come to yesterday as he walked along the deserted beach just south of Point Hueneme echoed through his mind. As he sat there watching the waves crashing on the sand, the rock cliffs rising behind his back, he had set his course. \n\nHe would make the trip he had planned. Use the blood money he had saved to ease the pain of as many of his friends as he could. Then when his bank balance was zero he would make one final trip to the place where it all began. That grave yard in Boston where his mother and unborn baby sister rested. He would join them...and hope like hell that his journey had cleared the karmic balance sheets enough to buy him peace. \n\nBut how had this man known that? \n\nLooking around at the loving family and friends that littered the patio, Mike doubted his words. This man could not understand. He could not know what it felt like to be totally and utterly alone in this world. A life time of being alone. No one and nothing. How could he?\n\nMike watched as Luke walked over to his wife wrapping his huge arm about her and drawing her into a loving embrace. Pain shot through Mike. Pain a thousand times worse than the burning shrapnel that had torn through his arm as he raced to Tommy's side too late to do more than listen to the boy's final words. His last thoughts of the woman they both loved. Mike thought of the promise that he had made the boy in that moment. To look after her. \n\nGod, what he would give to be blessed with a chance to keep that promise the way Luke was keeping his promise made so long ago. But he knew it was a futile wish. Some people in this world were just lucky. Others, like him, stood looking in like that little boy had looked through the glass window at that shiny red bicycle that had become a curse that followed him to this day.\n\nMike brought the bottle to his lips and drained it in a single swallow. This night he did not have to worry about looking after others. Kim Lee would see to that. She would see to his sorry ass too no doubt. For a moment he felt guilt wash over him that he would be another burden to the woman that had borne so many others. But the need to drown it all was stronger than that niggling guilt. This night it was his turn to get drunker than Cooter Brown as Luke had called it.\n\nCHAPTER SIX\n\nMike stared in the men's room mirror. He was once more attired in his full dress uniform. He could hear the strong beat of the music even through the door. Of course, the Spanish words were muffled. This night was far different than that other one, the first time he had met this family.\n\nThe past few days had been split between spending time with the Hernandez's and his motley Marine crew in Orange County, the OC. He had come to know both groups well. Hell, he had even finagled an invitation for his OC friends to tonight's event. The Hernandez's remembered the group and had been touched that they would come to Manny's funeral even though they did not know him. \n\nMike checked his pocket once more before he left the bathroom. The event was well under way, but the main show was yet to begin. The limousine carrying Maria would be arriving in moments. Mike was nervous. He had never gone to his prom, but he imagined this was how it felt. For far different reasons though. \n\nHe wanted this night to be perfect. He needed to do Manny proud. For young Mexican-American girls, their quincea\u00f1era was the most important of events. In a different time, it was a coming of age of a different sort, an announcement of their availability for marriage. Even in these modern times though, the tradition was a rite of passage. Mike knew how much Manny had been looking forward to this night, his baby sister's special day. He could not screw this up.\n\nMaking his way through the hall that was rented for the evening, Mike smiled at the people, who were already congregating there. Tia Manuela was fussing over the food just as she had that first night they met in the kitchen. At the request of her and Senor Hernandez, he had spent a couple of afternoons with Hector. The boy reminded him of the young man he had once been...angry.\n\nHell, at forty-one, he was still angry. The Marines had just taught him how to control it. Most of the time anyway. A couple more conversation with the Congresswoman's office and that might not be so easy. It seemed that these things took months, not weeks. That was difficult for him to understand considering Manny had filed paperwork months ago. He did not buy the argument that it was two different processes and that this would just take time. Time was the one thing that Corporal Manuel Hernandez had run out of. \n\nAnd Sergeant Mike was running low on patience with the whole damned thing. To his mind it ought to be automatic. This country owed its defenders that much...to call men like Manny its own. Americans. \n\nStepping into the early evening sunlight, Mike looked down the street. Still no sign of them, but what he did see was just as perfect. Rachel was beaten over the back seat of her car, struggling once more with the buckle on Miguel's car seat. The little boy squealed and pushed at her hands. \n\nMike knew that Hector still was not happy that it had taken Manny's death to bring the young woman around. But he recognized that his cousin's son brought comfort and solace to the grieving family in a way that nothing else could. Mike was fairly certain after their talks about being a 'real man' that the boy would not cause any trouble this night. That damned car seat on the other hand had not made him any such promise. \n\nMike walked over to her. \"Need any help with that?\"\n\nShe shook her blonde head just as the buckle sprang free and the child bounced from his seat. \"Thanks, Sergeant Mike, but I got this one.\"\n\n\"Glad to see you.\"\n\n\"Good to see you too,\" she replied as she lifted the struggling toddler into her arms. \n\nAwkward silence filled the air as they walked back to the hall. But the moment they walked inside and Rachel sat her son down, it was as if none of that mattered. Miguel ran across to room to tug at Manuela's skirt and a dozen aunts, uncles and cousins descended on the little man, who adored being the center of attention.\n\n\"Manny would be so proud of him,\" turning to look at Rachel, he added, \"and you. You're doing a great job with that little boy.\"\n\nHer blue eyes misted over and her voice cracked, \"It isn't easy. I still can't believe he is gone.\" She stared at the floor and tears spilled down her cheeks, \"That I never got to tell him how sorry I am.\"\n\nMike put his hand on her shoulder, \"You can't let it keep eating you up. You have to be strong for Miguel. And the Hernandez's.\" Lifting her chin, \"I think that somewhere out there Manny is looking down on us. He knows that when it counted you gave his family the most important gift in this world. Hope. And that's all that matters.\"\n\nRachel looked over to where her son was playing with his family and smiled weakly. \"I hope so.\"\n\nMike's phone rang. He recognized the number instantly. \"Excuse me. I have to take this.\" He walked back out of the hall. \n\n\"This is Sergeant O'Malley.\"\n\n\"Sergeant, this is Maude Landon. I am the duty nurse at Prairie View nursing home. I think we have spoken before,\" said the voice.\n\n\"Yes, Miss Landon. I remember you. How is Mister Clyde?\" Mike waited.\n\nThe heavy sigh that followed told Mike more than words could. \"I'm afraid that he has not been doing well the past couple of days. You should probably come as soon as you can.\"\n\nMike nodded, \"Yes, Ma'am. I have one more duty here, but I'll leave this evening as soon as it is over. I'm driving so it will take me a couple of days. Unless...\" his voice trailed off at the thought.\n\n\"No, Sergeant. I don't think that will be necessary. Of course, you can never tell with these things. But I don't think a couple of days will make a difference.\"\n\n\"Then I should see you shortly,\" Mike said his farewells and hung up. Looking up, he saw them. They were pretty unmissable. A motorcade of sorts. An unlikely honor guard. Half a dozen Harley Davidsons and a white stretch limousine. \n\nHe watched as they pulled into the parking lot of the hall. Kim Lee was the first one off, of course. Clad in her leather, she pushed past Mike mumbling something he thought was \"must change.\" Luke, Caleb and Larry were there as well as the Colonel and a man that Mike did not know. He handed a set of keys to Luke.\n\nMike did not have time to ask what it was all about. He walked over to the limousine and opened the back door. Bending at the waist, he held out his hand for Maria.\n\nThe young woman that emerged was barely recognizable. Her dark hair was pulled up into some sort of curly bun on the top of her head. A light coat of make-up transformed her into a young beauty. Her white taffeta gown flowed in layers about her as she stepped out of the car and took his hand.\n\nIn that moment, Mike felt far older than his forty-one years. If things had been different. If he had been different, this could have been his daughter. Instead, he had nothing and no one, except a lifetime of ghosts to haunt his dreams. \n\nHands stained as red as the stripe that ran the length of his dress pants with the blood of her brother and others gripped her elbow. \"You look beautiful, Maria. Manny would be so proud.\"\n\n\"Thank you, Sergeant Mike,\" she mumbled staring at the ground. Turning, Mike performed his official duty. Walking the young beauty into the hall, he along with her parents presented her to the gathering crowd. \n\nFood and music flowed for half an hour or more. Finally, Mike escorted Maria to the dance floor for the first dance of the evening. He had never been much of a dancer but he managed to muddle through this one without tripping. At the end, he reached into his pocket and pulled out the tiny black box. \n\n\"A little birthday present,\" he handed Maria the box. \n\nThe girl's dark eyes lit up as she opened it. Inside nestled a gold chain and locket with a small diamond. She beamed as she fumbled to open the clasp. Inside nestled, the official Marine Corps photo of Manny that had been shrunk to fit the oval.\n\n\"This way you can always keep him close to you,\" Mike whispered.\n\n\"Muchas gracias, Sergeant Mike,\" tears cascaded down her face, but she was smiling. \"Will you put it on me?\"\n\nMike nodded as the young woman turned about on the dance floor. His large fingers fumbled with the clasp but finally managed to win the battle. He was just about to leave the dance floor when Senor and Senora Hernandez stepped forward. \n\n\"Would you do one more dance por favor?\" asked Senor Hernandez.\n\nMike nodded as Senor Hernandez took his daughter in his arms and passed his wife to Mike. As the strains of music began, they hit Mike like a blow to gut. No sucker punch in a bar fight had ever felt so powerful as the soft tenor sound of the country singer boomed from the speakers. The words prophetic.\n\n\"If tomorrow all the things were gone, I'd work for all my life. And I had to start again, with just my children and my wife. I'd thank my lucky stars, to be livin' here today, 'cause the flag still stands for freedom and they can't take that away...\"\n\nMike fumbled along even more this time as he watched others joining them on the dance floor. Lupe and Hector. Luke and Kim Lee. Larry and Tia Manuela, even the Colonel with Mama Nona. And off to side at the edge of the dance floor, he saw Rachel lift a half sleeping baby Miguel in her arms and rock softly side to side. \n\nMike blinked his eyes because for half a second he would have sworn that he saw a smiling Marine with his arm draped about her shoulders as he looked at his baby son. But Mike knew he had not had that much to drink this night.\n\nBy the end of that song, Mike was barely able to see. Smoke must be drifting in from those congregating outside, because something clouded his vision as he handed Senora Hernandez back to her husband. But the night was not over yet. \n\nLuke and Kim Lee stepped forward. With his wife elbowing him, Luke reached into his suit pocket and drew forth a set of keys. He passed them to Senor Hernandez.\n\n\"It ain't much, mi amigo. A small token compared to what you and your wife have given this country. But with two daughters heading off to college I hope...we hope it helps.\"\n\nSenor Hernandez looked confused. \"I don't understand.\"\n\nKim Lee could barely contain herself as she commanded, \"Come, come.\" She half pulled Senora Hernandez to the door as the other followed, including Mike.\n\nParked right in front of the door was the fully restored 1969 Ironhead sportster painted red, white and blue. The one that had first caught Mike's attention in the display window of Luke's shop. Mike stared at it in awe, knowing the value of this miraculous gift. ",
        "Luke began to mumble, \"It's been sitting in the window of the shop for a couple of years. I restored it awhile back, working on it when I got the chance. I just could never bring myself to sell her though. When I learned from Mike about your family, I knew why I'd been keeping it all this time.\" \n\n\"You can sell it to pay for the girls' college,\" the bear shrugged his shoulders. \"Or whatever you want.\" Stepping back, he motioned to the others in the group, \"We just wanted to say thank you to your family in a way that honored what your son did for this country.\"\n\nSenor Hernandez's eyes were filled with tears as he took the keys, \"Muchas gracias.\"\n\nMike thought at that moment that nothing could get any better until he saw the black sedan with official government plates pull up. Senora Gomez smiled broadly as she stepped from the car. At first Mike thought that in their generosity the Hernandez's had invited the woman to the party as well. Then he saw the large manila envelope in her hand. His heart stuttered in his chest. He fought back hope. \n\nThe woman stopped at the gathering and spoke a few words of Spanish to the Hernandez's before turning to Mike.\n\n\"I have something for you, Sergeant.\" With a huge smile, she continued, \"Someone out there must have your back, because I have never seen these things move this quickly. But the moment it came through I knew I had to get these to you.\" Nodding towards the Hernandez's she added, \"I'll leave the rest to you then. Have a nice evening.\" She said as she turned to go.\n\nMike stood frozen for a moment. He still could not believe that he held them in his hands. For the past weeks since Manny's death, he had thought of nothing but this moment. Now he did not know what to say or do. \n\nDoubt niggled at his mind. Perhaps he had misunderstood the woman. Perhaps this was just another worthless proclamation from the Congresswoman. He had to be sure. He opened the envelope and began to read the certificate. His heart stuttered. It stopped for a couple of beats. Then it began to pound so quickly and rapidly in his chest that he could not hear a word of what was said around him. \n\nLuke brought him back to reality with a slap on his back. \"Not a bad night, my friend.\"\n\nMike smiled. \"No. And it's about to get better,\" he said as he followed the crowd back into the hall. \n\nFinding Senor and Senora Hernandez talking with Mama Nona, Tia Manny and Rachel by the buffet. The man extended his trembling hand.\n\n\"Sergeant Mike, I can't thank you enough. When we heard,\" the man's voice cracked. \"When we found out that Manny was dead, we felt...\" He trailed off once more as if words could not describe their feelings. Mike knew they could not so he stopped him.\n\n\"Senor Hernandez, there is one more thing. Could you gather everyone together? I have something for you.\"\n\n\"Something more? There could not be anything more than this. We have Raqu\u00e9ela and Miguelito back. We have new friends. And their gift means we do not have to worry about money for college.\" The man smiled, \"There can't be anything more than this.\"\n\nMike shook his head. For a moment, he wondered. Was this gift really as important to this family as he had thought it would be? He knew how much this meant to Manny. But the man was right. Perhaps in the grand scheme of things a piece of paper did not matter that much. \n\nHe shrugged and passed the envelop to Senor Hernandez. \"This is for Manny,\" he said and turned to leave. He had barely taken a step before he heard a squeal from Senora Hernandez. He felt the hand on his shoulder stopping him. \n\nHe turned around to see tears once more flowing freely down the weathered brown cheeks of the man, who had risked everything he had to bring his family to this country. The land of the free, who boasted \"Give me your tired, your poor, Your huddled masses yearning to breathe free, The wretched refuse of your teeming shore. Send these, the homeless, tempest-tossed to me, I lift my lamp beside the golden door!\"\n\nYet that country was slow to recognize the sacrifices of this family. Of Corporal Manuel Hernandez. Of its Latino soldiers, who gave their labors and lives for their adopted homeland asking for very little in return...and sometimes receiving even less. But not this night. \n\n\"Please, Sergeant Mike. Uno momento por favor,\" said the man. His voice rang out loud in the hall as he spoke in Spanish to the crowd. Finishing up, he said \"Sergeant Mike has something to say.\"\n\nMike was speechless in that moment. What did you say? He closed his eyes for a moment. The laughing face of the young man sprang to his mind.\n\n\"I could say again what a fine young man Manny was. Or I could tell you that I have rarely served with a finer soldier. But that does not mean anything to you folks. Looking around me, I think you know that Manny loved you all. He spoke so often of his familia and amigos back home.\"\n\n\"But what I can say is that one thing Manny loved almost as much as you was the country that he grew up in. Well, today that country has recognized Manuel Jesus Hector Hernandez as its own.\" Lifting his hand to his forehead and looking up, Mike smiled, \"Here's to you, mi amigo.\"\n\nThe applause that followed was not for his paltry words or the piece of paper that Senor Hernandez passed around the room, but for the young man that earned those words, that paper and deserved so much more than he had lived to realize.\n\nMike slipped outside and pulled his traveling clothes from the compartment on Esther's side. He snuck quietly into the bathroom and changed into the jeans, t-shirt and leather jacket. The man that stared back at him in the mirror this time was unrecognizable. Except for the ultra-short salt-and-pepper hair, he could be any man on the streets and roads of this country. And that's what he was...anybody. And nobody. \n\nMaster Sergeant Michael Thomas O'Malley was no more. Before him stood simply Mike. And he was not sure who or what that man was. But he supposed that the months and years on the road ahead would tell his metal just as the past twenty had crafted the Marine he had become. It was time now. Time to hit the road. Time to begin this journey he had set for himself. \n\nIt was appropriate that it should begin where that other journey had. Billy Hall. Corporal William Clyde Hall had been Mike's best friend. Until that bullet had ripped through his chest. In a time when Kevlar was not even thought of. He shook his head at the waste. He had seen so much of it over his life time. \n\nThis first stop was the least he could do for his friend. Mister Clyde, Billy's father was in the end stages of Alzheimer's. He might not remember Mike or even the son that he had lost, but Mike remembered him and his wife, who had welcomed the orphan into their home during holidays and leaves. Who had treated him like another son. Who had even insisted after they lost Billy that they would not lose him too. \n\nNo, he would make this trip as quickly as Esther could carry him...and with honor he would fulfill the duty of a son. Holding the old man's hand as he greeted whatever was beyond this life. For once, it would not be a young man, a life barely begun that Mike watched slip away. But it would be an ending nonetheless. Another farewell to Billy...this last link to the man that was once his best friend."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "non-erotic"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/my-country-tis-of-thee"
}