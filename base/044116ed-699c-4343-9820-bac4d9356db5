{
    "title": "Holding Out For a Hero Ch. 04",
    "pages": [
        "Chapter 4\n\nRaiders of the Stamner Park\n\nWell, I am very aware that I tend to wander off subject when I should be telling you our story. So I am going to try and stay focused through this chapter. Speaking of which, I am not going to bore you all with a massive catch up on past events. In short, I have been trying to find out just what things make Sasha squeal. And I am not talking about the sort of squeal a girl makes when she sees a mouse. I mean the sort of squeal a girl makes when... well I think you know what I mean. Anyway, amongst other things, I have discovered that Sasha has a bit of a kink about having no clothes in a public space. That doesn't mean she want to go streaking or anything. She gets off on the thought that she may get seen but doesn't actually want to be. Which brings us neatly to where this chapter begins.\n\n\"How are you feeling?\" I asked Sasha as she parked her car. After the events of the previous day in our 'virtual world' I had outlined my plan for the next step. Sasha had agreed quite readily. Possibly too readily really.\n\n\"A little excited.\" She said. Her face a little flushed, and her voice tainted with a slight quiver.\n\nI wasn't totally surprised. Apart from her boots, she was wearing just a light coat that hung to her knees. Taking in to account that it was mid-afternoon and still daylight, this plan would top the walk down the deserted beach in the dark. The up side of this outfit was, we had driven across town totally within the speed limit. A very pleasant change for me. In fact, I was contemplating insisting she drove everywhere like that.\n\nWe had stopped at Stamner park, which it a good size stretch of fields and woods just outside Brighton. There is a tiny hamlet of a few cottages to one side, a church, and a manor house that is used for weddings and such. Over the far side is an area dedicated to low carbon output living, which is basically a bunch of hippies who live in Yurts in the woods. Not my idea of fun, but it takes all sorts.\n\nThere were the usual groups of dog walkers, families picnicking and just people enjoying the fresh air while wandering about.\n\nWhich was basically our plan. Obviously with a slight difference.\n\nThe weather was very nice and warm, so I had opted for actually wearing a dress. Not something I do often, but Sasha has had a bit of an influence on me wanting to dress a little more girly and I do find it difficult to refuse her anything.\n\nWe got out of the car and Sasha locked it and passed me the keys, and I noted that there was a slight tremble in her hand as she did so. Although I was shaking like a leaf with the thoughts of what we were going to do. So again, I wasn't surprised.\n\nI slipped the keys in to the side pocket of the small rucksack I was carrying. This currently just held a bottle of water and my camera, as we were planning on putting stuff in it, as opposed to taking stuff out.\n\nI took my camera out and snapped a quick picture of Sasha looking angelic, in a nervous, sexy kind of way. Her platinum hair looked like a halo in the early afternoon sun, and her pale skin looked beatific. I gave a happy sigh.\n\n\"So where do we go?\" Sasha asked. I noted the quiver in her voice had gotten more pronounced. No doubt from the increased adrenaline in her system as we neared what we intended to do.\n\nI pointed towards the cluster of trees across the green field from where we had parked. \"Shall we head in that direction?\" I suggested.\n\nI got a quick nod from Sasha, and we started walking up the slight incline along a well-trodden path.\n\n\"We don't have to do this Sasha.\" I told her, worried that she may not be up to it. \"It is totally for your enjoyment, so if you feel it is too much, just say and we stop.\"\n\nSasha wrapped an arm around my shoulders and hugged me tightly. \"I am a little nervous.\" She said. \"But also, excited.\"\n\nI smiled back, in a manner I hope would express confidence. Actually, I think I was more worried than she was. To make myself feel more relaxed I slipped my hand between the vents of her coat and gave her bare bottom a quick fondle, which made her make a little yelp of pleasure.\n\nAs we passed in to the shade of the woods the air went a little cooler and I felt a slight shiver run up my spine as my thin cotton dress let the sudden cool air caress my skin. I glanced at Sasha wondering how she reacted to the drop in temperature. She had an odd smile on her face, like she knew something that no one else did. Which I suppose was true. I briefly wondered if anyone who had seen us crossing in to the woods would have guessed Sasha was nearly nude. That thought alone made me feel wobbly.\n\nI grabbed a couple of pictures to capture that expression on her face.\n\n\"How are you feeling Sasha?\" I asked, feeling very curious about what she was experiencing.\n\n\"Very sexy.\" She said as a grin spread from ear to ear. \"Very free, like anything is possible.\"\n\nI felt my muscles tense as a twinge of envy spread through me. I don't know if it was the devilish imp, but I so wanted to be in Sasha's predicament at that moment. The memories of passing my clothes to Sasha in the shop changing room, flooded back in to my mind, and I had to fight them back as I reminded myself we were there for Sasha's enjoyment not mine.\n\n\"Shall we take some pictures?\" I suggested, hoping to keep my mind occupied.\n\nNodding eagerly, Sasha hurried over to stand next to a tree, where she struck a pose leaning against it with her hands in her pockets.\n\nMy camera clicked, and I checked the captured image on the view screen to check the lighting. She looked gorgeous. Now I know Sasha had trained for ballet, but you wouldn't have thought so. Seeing her in that picture made me realise she could have been a very successful model. Although I admit I was glad she was there for just me to look at. I guess I was becoming a touch possessive. Yeah difficult to imagine isn't it, skinny little me being possessive over an amazing luscious creature like Sasha. Like that would happen to anyone in real life.\n\nNext, she bent slightly and placed her hands on her thighs. The unbuttoned top of the coat revealed a decent amount of her breasts, and I snapped about five shots off at various focal points. I know taking the pictures was supposed to be distracting me from getting aroused, but I was acutely aware it wasn't working. Still, Sasha seemed to be enjoying herself, so we carried on.\n\nShe turned her back to me and unbuttoned her coat. From where I was stood I couldn't see anything but a profile of her face looking very suggestive. I managed another three of four pictures before I had to stop to take a few breaths.\n\nFor the next pose, she placed her bare right leg against the tree. Again, I could see very little apart from the expression and her leg from mid-thigh downwards. I felt that lovely tingling sensation start once more. It seemed that feeling was occupying most of my waking hours since I had met Sasha.\n\nShe turned her back to me once more, but this time she dropped her coat to her waist. Now anyone could see that she was naked from the waist up. Even though I could only see her back, my breath caught in my chest and I rapid fired three or four pictures before I passed out.\n\nThe coat returned to on her shoulders, and she stepped behind the tree and peaked around the trunk. Now I could see both her legs up to the top of her thighs and the bare skin of her flanks. Everything else was hidden behind the tree. I ended up deleting the next couple of pictures due to camera shake, but I did get a very sexy picture of her looking directly in to the camera looking almost innocent.\n\nSasha ducked back behind the tree and threw the coat towards me. I knew this had been the plan, but I was still rocked when she followed it through so easily. I am sure it would have taken me a lot longer to do that. If I could have done it at all. As it was I was rooted to the spot, my body acting in a very mixed up way of wanting Sasha and wanting to be Sasha.\n\nIt was Sasha's laugh that brought me back to earth.\n\n\"Little Kitty Kat looks very sexy.\" She said peaking from behind the tree. \"Are you getting sexy at me being nude Kitty Kat?\"\n\nI expelled a breath and finally felt my feet touch the ground again. I quickly snapped a picture of Sasha teasing me about my arousal. Not because I could see anything but her head and a little flesh of her shoulder, more to help me get a grip on myself.\n\nWith my mind under control again I stepped forwards and scooped her coat up. The plan had been to put it in the bag, but as I was still feeling a little chilly, I shrugged it on. When I had managed to get the sleeves under control and I found my hands again, I looked back to Sasha.\n\nHer expression was so adorably sexual. I wondered if I had looked that way when she had put my clothes out of reach and I was at her mercy. I can only assume that because I was wearing her only item of clothing, it made her feel more undressed and now, totally reliant on me for release from the situation we had engineered. She was still stood behind the tree, but her face had taken on a divine sexiness that made me want to take her to bed there and then. I somehow managed to shoot off another few frames to capture that moment in time. I so wanted to hold on to that image forever, and I knew for sure that I loved her more than anything. It wasn't that I had a sense of power over her, if fact quite the opposite. If she had asked for all my clothes, I would have willingly given them to her. It was all madness, I had no idea where these feelings were coming from. I just knew I wanted to make Sasha as happy as she made me.\n\n\"Oh Kat.\" Sasha moaned softly. \"Was this how you felt?\"\n\n\"How do you feel Sash?\" I asked her. Hoping it was the same.\n\n\"Like I am alive.\" She said candidly, then added. \"And very sexy.\"\n\n\"Show me.\" I asked quietly, wanting desperately for her to step out from behind the tree.\n\nI have said this before, but I will say it again, just for prosperity. I am not a dominate person. It isn't in my nature. I suppose if you wanted to put a label on me, I would be more submissive, but not in a sexual way. Sasha on the other hand, could easily be dominant. Even in this situation, she was more in control than I was. As you will guess by what happened next.\n\n\"Do you really want me to show myself to you Kat?\" Sasha said acting coyly.\n\nI tried to speak, but for some reason my voice had decided it was going on strike for better working conditions, and I couldn't persuade it to return to what it was supposed to be doing, not even for a letting it take the weekend off. I nodded instead.\n\nSasha's right leg folded around the tree trunk, as did her right arm. She was still covered, but her body must have been pressed against the bark of the tree. My mind began to run away as it wondered how that would feel. After my experience siting in the chair nude, and how the contact with my bare flesh had sent me in to low earth orbit, just thinking about how sensuous the rough bark of the tree must feel, had my feet leaving the ground once more.\n\nI guess Sasha must had been feeling similar, because when I manage to take a picture, her eyes were pressed closed as she began to lose herself in indulgence. She shifted slightly to her right and her breast popped in to view, its nipple hard and proud. I wanted a close up shot of that, but my legs had joined my mouth in its protest, and I was rooted to where I was stood. I settled for zooming in as best as I could, wishing I had invested in a bigger zoom lens.\n\nNow I haven't seen a real pole dancer, or a pretend one either for that matter. But I am sure Sasha did a semi decent impression of one. She leant back holding on to the tree with her hands and that amazing dancers body of her swung round so I had her entire body in beautiful profile.\n\nMy camera went in to rapid fire mode as I caught every slight change in stance in glorious freeze frame.\n\nTo my disappointment, she swung back behind the tree hiding from view again. I heard some rustling of leaves and Sasha stepped out from her cover.\n\nFor a worrying moment I thought my lungs had joined in the unofficial strike action that parts of my body had taken, as I struggled to take a breath.\n\nSasha was holding three leaves, one in her left hand and two in her right. These leaves she had strategically positioned to provide a small amount of cover for her modesty. A little like a Burlesque dance does with fans, only these were smaller. A lot smaller.\n\nI promise you, I did try to take more than one picture, but she began to do that sexy walk again, sort of like a cross between a super model and a stripper, and the only parts of my body that didn't join the picket line, were my eyes and the bit of me that reacts to a practically nude Sasha doing that walk. Even when she was close enough to touch, I didn't react. I just gaped.\n\nThen the leaves fluttered to the ground as her arms wrapped around me and her lips pressed hungrily to mine. We must have stood there for several minutes, although it could have been a few years, as time became very abstract to me.\n\n\"Do you want to go home now?\" I asked Sasha. I so wanted her to say 'yes let's go and fool around for the rest of the day'.\n\nAs it was she kissed me again, only really softly. The she stepped back and took my free hand and with a foxy smile she said. \"Walk with me little Kat.\"\n\nI sighed as I managed to persuade my body that is should really go back to work, and we walked further through the woods hand in hand. Me fully clothed and wearing her coat that nearly dragged on the ground, Sasha nude apart from her boots. To a casual observer we must have looked like a sexual deviant Snow White and one of her dwarfs who had a crossdressing fetish.\n\nI will tell you that I did enjoy the walk. There was something amazingly erotic watching Sasha wander along the wooded paths while I took pictures of her. I was still amazed at how easily she did it. I know I would have been a nervous wreck if it had been me, but she just pranced around like it was an everyday thing.\n\nOf course, before long the woods thinned, and we could see the green of the fields beyond. My heart felt a little sad that our adventure was drawing to a close.\n\nI hadn't allowed for Sasha's bravado.\n\nShe paused at the tree line and looked out at the field. As we had walked through the woods we were now at the opposite end to where the car park was, and therefore the area ahead of us was deserted. To our left the ground rose steeply and ahead of us, a couple of hundred meters away, was the drystone wall that surrounded the Low Carbon Output farm.\n\nSasha half turned, her eyes sparkling like blue diamonds. \"Can we walk over there?\" She indicated the wall.\n\nMy heart was hammering against my ribcage as I looked out to see if anyone was watching. I almost expected there to be a crowd of people waiting for us to appear. As it was, I could just about make out a few dots at the far end of the park. At that distance those people could very well be nude, and we wouldn't know.\n\n\"Do you want to do that Sash?\" I asked, albeit slightly stupidly.\n\nShe nodded grinning like a Cheshire cat.\n\nI sighed once more, wondering if I would ever see Sasha wearing clothes again. Then wondered if that would be a bad thing.\n\n\"Okay, but I want to walk ahead of you to get a few more pictures.\"\n\n\"I think my little Kitty Kat is enjoying this.\" Sasha said teasingly, then swatted my behind to encourage me on my way.\n\nTaking a deep breath, I stepped out in to the open field. I felt suddenly exposed from being in the closeness of the woods for such a time and I wondered how Sasha was going to cope. After a few meters I turned and beckoned to her. I seriously wanted to capture how she reacted as she stepped out from the woods.\n\nTo be fair she did quite well. We carried on with me running (I say running, I managed to quicken my pace a little but almost tripped over the coat more than once) a few strides then turning to take a few pictures, and Sasha just walking. For a while she managed her sexy walk, then about half way across her pace picked up a little as her nerve began to crumble. She actually over took me in the last few meters until she was huddled by the wall laughing nervously.\n\n\"Are you okay Sash?\" I asked as I shed her coat and passed it back. \"How do you feel?\"\n\n\"Oh, my little Kitty Kat. You need to do that.\" She replied breathlessly as she pulled her coat back on. \"I don't have words.\"\n\nMy brain ran a quick Sasha to English translation. Basically, she couldn't describe in English just how she was feeling, but I got the impression she was very aroused. It may have been the way her nipples could be seen even through her coat, but I think it was more the way she tried to suck my face off with one of her life draining kisses that clinched it.\n\n\"I wonder what my little Kat would do if I start to undress her?\" Sasha panted in to my ear.\n\nHer breathing in to my ear was enough to make my knees go weak, and to hear her say those words made me feel very feint again. As I have said too many times, I find it very hard to refuse Sasha anything.\n\nThis would be a good time for me to describe my dress. It wasn't anything special, just a lightweight black cotton dress that came to just above the knee on me and buttoned up the front. As a small confession, it had been part of my school uniform and was originally blue until I dyed it (I know it is amazing I am twenty-one and still fit in my old school uniform. I'm just a late developer honest). I also wore a studded leather belt to clinch the waist and add a little street cred. Not massively sexy I know.\n\nI don't think it mattered to Sasha how sexy it was. Once she had removed the pack from my shoulder, she slowly undid the belt and slipped it from around my waist. The sensation of it being removed was invigorating, it was like I had felt restricted by it and now freedom beckoned. I could feel the looseness of my dress brush against my skin and I wanted to feel Sasha's hands on my body more than anything.\n\nI don't know if Sasha was aware of what emotions were burning through me at that point in time, she just slipped her fingers around the top button of my dress and popped it undone. I know it didn't expose much of me, but the action of how she did it set my pulse racing.\n\nI took a short breath as I felt the material loosen a little more, and she then raised an eyebrow, almost asking for permission to continue.\n\nThe second button popped open and my small cleavage was exposed to the world. Again, the eyebrow raised. I couldn't make my mind up if she wanted me to stop her. Not that I was capable of doing so.\n\nThe third button exposed the white lace bra we had got on the shopping trip. My brain began screaming 'stop' but my body was shouting 'yeah baby' as it reacted to Sasha's actions.\n\nThe forth button popped open and Sasha slipped her hands under the material of the dress to gently caress my boobies and I whimpered as she tweaked my nipples through the delicate material.\n\nOne hand remained brushing over the white lace, while the other dropped lower until it caught on the next button down.\n\nIt opened and the slight breeze touched my belly making my stomach muscles tighten.\n\nThe unbuttoning hand continued downwards pausing at the next button, while the hand that was toying with my bra slipped around my back and unclasped the small item of fabric that kept my little breasts from exposure.\n\nI wanted to cry as I could feel my body creeping closer and closer to being uncovered under Sasha's wandering hands, but the energy I was drawing from it was just so powerful and pure. I had hoped that when Sasha shed her coat she had felt the same way I had in the shop, but what I was feeling now was far more exhilarating than that occasion.",
        "Another button popped open and I could feel the same breeze that had aroused the skin of my stomach play across the dampness of my underwear. I had no idea how many buttons were left, but I could tell there weren't many by how the thin cotton moved over my skin.\n\nSasha's hands move over my waist and ease my panties over my hips. Now I know I felt a rush as my belt came off, but the sensation of feeling my underwear creep past my bottom and slowly slip down my legs was so tantalisingly erogenous in an indecent way, I wanted to scream her name to the skies. As it was I remained silent. Hardly daring to open my mouth to the delicate kisses that touched my lips, in fear that some would hear and discover us.\n\nHands ran up from my hips, almost brushing my breasts as they passed, before halting on the skin of my shoulders. Mid kiss she softly pushed the dress off my shoulders and I yelped in to her mouth as I felt my body exposed to the open air.\n\nI felt her strong arms wrap tightly around me and she half carried my backwards until I came in to contact with the wall and I gave another little yelp as the hard stone touched my very sensitive skin.\n\n\"How sexy do you feel little Kat?\" Sasha asked as her hands ran over my chest. \"Are you as horny as you were in the shop?\"\n\nIf only she knew... I had surpassed the level I had achieved in the shop, and now I was soaring far higher than I had ever been. I managed a little whimper in reply.\n\n\"So on a scale of one to ten?\" She asked mimicking my question in the restaurant.\n\n\"Ten.\" I gasped.\n\nHer eyebrows arched, and a sexy smile curled her lips. \"And what if I put your clothing out of reach?\"\n\nMy mind went on fire as I remember how helplessly sexy she looked when I had put her coat on. I half crossed my legs trying to hold back the climax that I could feel building inside me.\n\nWhat happened next was a bit of a shock.\n\nSasha dropped her coat on the floor and picked up my dress from where it lay on the grass, pulled it over her arms and attempted to button it up.\n\nThe reason was obvious. She was attempting to recreate for me the feeling I had given her when I put her coat on. The big difference was I am tiny... Sasha isn't. My naked state slipped from my mind as I watch the horrific train crash that was my baby fitting her size twelve body in to my size eight dress. Not to mention squashing her thirty-eight C boobies in to a gap that fit my thirty-two B ones.\n\nNever before, in the field of dress wearing, has so much been covered, by so little dress, held together by so few buttons.\n\nThe space between the buttons gaped open revealing her skin beneath and the top two had to be left undone creating a very desirable cleavage that threatened to erupt like Vesuvius having a bad day. Sasha slipped her coat back on leaving it open so I could still watch her body strain the seams of my old dress.\n\nSasha smiled at me as my underwear went in to the pack along with the belt. With my clothing placed out of my use and the distraction of Sasha's bizarre reverse strip tease over, I felt the sense of my nudity fall heavily on me once more and I glance around nervously.\n\n\"So how sexy does little Kat feel now?\" Sasha asked grinning like a hungry wolf as she picked up my camera.\n\nThe climax was still swirling around inside of me, like a scene from Jaws it prowled below the surface waiting to appear, but at the moment I had it under control.\n\n\"About eleven.\" I replied sheepishly trying hard to be as confident as Sasha had been and not to cover myself.\n\nMy camera made several clicking noises as Sasha began her picture collection of me.\n\n\"And what if I was to run off and leave you?\"\n\nSomewhere inside me a shark fin slipped in to view and the haunting music from Jaws heralded the sensation of my arousal about to break the surface. I know I shouldn't have been worried, as my poorly fitting dress wasn't going to let Sasha run anywhere, but the thought made me squeak like the timid mouse I felt I was.\n\nSasha looked at me with those amazing eyes, and I could tell there was something running through her mind.\n\n\"Can I live out a fantasy Kat?\" She asked shyly.\n\nA million fantasies tripped through my mind, and I wanted Sasha to do all of them (yes, I know I have said that I was new to most of this, but I do have a very active imagination, and the internet had supplied me with an awful lot of fantasies). It wasn't lost on me that even though I was the nude one, she was the one being demure.\n\n\"Well I can't really refuse can I.\" I replied trying to sound sultry, but my voice was still a little mouse like.\n\n\"I wanted to do this since I mentioned it in the shop.\" Sasha said as she rummaged in the bag and withdrew my belt. \"I promise you will be safe.\" She said as she looped the belt around my neck and locked the clasp against one of the studs.\n\nAs she gave it a little tug to see if it held and wouldn't choke me. The sensation was so intense I wasn't sure how my legs managed to support me.\n\n\"Now I have my Kitty on a lead, how horny does she feel?\"\n\n\"Fifteen.\" My mouse voice squeaked.\n\nAs I have mentioned earlier, if I had a label (I just want to make everyone aware, I am actually not a fan of labels for people. We are all individually unique and therefore unlabelable. [yes, I just made that word up]) I would be more a submissive person than a dominant one (Although not like the ones in the BDSM stories I have come across while doing my research). So, I can only assume what I said next was entirely down to the naughty imp, and not a true reflection on my character in any way.\n\n\"Maybe you should tie my hands to complete the look.\"\n\nMy brain went in to melt down. 'Why did you say that?' it asked. 'Don't ask me, I didn't say it.' It replied. The argument my brain had with itself went on for some time, so I won't detract from the story with the details, so let's just say that my brain decided my body was on its own for the time being.\n\nSasha's eyes went very strange and her body wobbled a little. Then she rummaged in the bag again and moved behind me.\n\nI squirmed as Sasha's hands brushed against my bottom and I felt something soft wrap around my wrists. When she returned to take hold of the makeshift leash again she was slightly breathless, and I suspected she had just had a small climax. My hands tested the binding around my wrists. They were quite securely fastened and annoyingly it felt like she had used my panties to do it.\n\nSo now I was stood in a quiet area of a public park, completely naked apart from my panties, which were unfortunately not where they were supposed to be, and a make do leash around my neck. I was very aware of the cool breeze, that before had just been refreshing, but was now like a teasing set of fingers tickling every part of my body at once. The shark fin of my arousal was rapidly cutting through the waves and the imaginary orchestra had gone in to overdrive, as I tensed against the inevitable rolling orgasm that was cresting inside me.\n\nSasha gently tugged the leash again. \"Walk with me Kitty Kat.\"\n\nWe began walking back towards the woods. Every step I took made me feel more exposed, and I was sure I was going to hear a shout for people to come and see the nude girl on a leash. Halfway across and I understood why Sasha had lost her nerve. The feeling of being far away from any form of cover was too much for me, and my control went. I took another faltering step forward and the first wave peaked. I moaned like an over paid porn actress (not that I know what that sounds like). Another step forwards brought in another wave and more moans accompanied it. I tried to take the third step with my thighs pressed together, hoping to hold the rising tide back.\n\nI think King Canute did a better job. Although to be fair, he wasn't nude, with his hands tied by his own underwear, and being led by a super sexy Russian dancer wearing a dress far too small for her.\n\nI bent over as another wave broke over me and my moans began to roll in to one long one. I suppose if Sasha had really been dominating me, she would have made me crawl the rest of the way. As it was she seemed to be having problems with her own response to my climax and her moans of delight mixed with mine.\n\nJust when I thought I was going to collapse to the grass, Sasha pulled me in close and wrapped her coat around the both of us and we sank to a sitting position. The feeling of having Sasha holding me, mixed with the oddly erotic sensation of the grass on my bottom. It only took Sasha to gently run a fingertip down between my legs and I surrendered in to a very happy orgasmic moment. I remember Sasha frantically kissing my neck and caressing my body, and every touch raised new surges inside me. Like it had that very first night. Only far more intense.\n\nI think it was the typical British summer weather that brought us to our senses. I was half laying down, semi covered by Sasha's coat. Her hands were cupping my breasts comfortably and my head was resting on hers. I looked up in to her diamond blue eyes and muttered those three words.\n\n\"Crap it's raining.\" \n\nLarge splashes of cold rain began to impact on my bare skin and I screeched with the shock of each one. Sasha giggled inanely as she hastily shrugged her coat off and wrapped it around my shoulders. I did think that it may have been prudent for her to at least untie my hands, but she just settled for buttoning the coat up and tucking the loose end of the belt inside the coat. I suppose I should have been grateful that I at least got the waterproof option. My dress that Sasha was wearing (if you could call it that) rapidly became soaked and clung to her skin in quite a dynamic way. I know it was tight fitting anyway, but with it being wet it just emphasised every little curve, especially the way her nipples were reacting to the cold rain. I felt the tickle of arousal arise again.\n\nWe chose the shorter route of crossing the grass to get back to Sasha's car. Her striding out in a saturated dress that was fit to burst, and me, trotting besides her, hands still restrained by my underwear, and nude apart from a coat that caressed my hyper sensitive skin with every step. All the way to the carpark, I was gritting my teeth against the climax I could feel running rampant inside me. Thankfully the onset of the rain had emptied the park fairly rapidly and there was no one to witness our indecent journey.\n\nOf course, when we got to her car we couldn't just get straight in because of marking her precious leather interior. Instead Sasha opened the boot and took out a blanket (yes, the same one I had been wrapped in that first night). She folded it around me then shocked me by removing the rain-soaked coat from underneath it. I was left swathed in just the course wool blanket that seemed to want to slip off my shoulders every time I took a breath.\n\n\"Are you going to untie me?\" I asked in my squeaky voice as she helped me in to the car.\n\n\"Soon.\" She said with a naughty wink as she ensured I was covered, then fastened the seat belt around me.\n\nApparently, I was going to remain at Sasha's mercy for a while longer and I squirmed a little, as the prickly blanket did nothing to curb the stimulation to my body.\n\nThe driver's door opened, and Sasha placed another blanket on her seat then joined me in the car looking very flushed. \"This is not so comfortable.\" She said plucking at the wet dress that clung to her skin.\n\nI wriggled about again as the blanket itched my skin. \"At least you look dressed.\" I sighed. \"I feel very vulnerable.\"\n\n\"Vulnerable?\" Sasha asked, puzzled.\n\nI closed my eyes for a moment, not wanting to have to explain to Sasha what being like this was doing to me. \"Helpless.\" I managed to say trying to keep the excitement I was feeling out of my voice.\n\nSasha's hand slipped under the blanket to stroke the inside of my thigh. \"Do you want to be helpless Kat?\"\n\nHer touch made me jump, and the blanket slipped to show a little of my cleavage again.\n\nSasha adjusted the blanket once more. \"You will have to sit very still Little Kat or people will see.\"\n\nI made a noise like a weak kitten as I imagined Sasha driving around town while the blanket slowly fell away allowing anyone to see me.\n\n\"Do you remember how you teased me under the table Little Kitty?\" Sasha asked as her hand edged further up my thigh. \"You wrote your name on me with your finger.\"\n\nI went very quiet in anticipation of what she was about to say.\n\n\"My full name is Sasha Viktoriya Dominika Zakharchenko.\"\n\nAt that moment in time, I was both delighted and alarmed that Russians had such long names. Either way I knew it would be a long journey home, with Sasha writing her name all the way, and me not daring to move.\n\nSasha giggled as she started the engine."
    ],
    "authorname": "TrueMort",
    "tags": [],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/holding-out-for-a-hero-ch-04"
}