{
    "title": "The Twelve Vitali Ch. 26",
    "pages": [
        "Authors note: Hello everyone. Thank you to everyone who takes the time to vote and comment, as always I have been overwhelmed by the generosity of the people who read this series. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\nChapter 26\n\nCat sat nervously in a comfortable armchair in Theresa's private sitting room. It was as if everyone had slowly separated, with the older men leaving first, followed by the younger men a little while later. Theresa had invited her to see what she called 'her haven', and she had agreed eagerly, always wanting to know more about the men she loved and their parents. As they left, she noticed the older women walking toward the kitchen, leaving the younger women in the living room. She felt like something more was going on that just the announcement of the next Vitali table, and tried to think if Matteo or Ricco had told her anything over the last week that she hadn't paid much attention to at the time.\n\n\"I had worried,\" Theresa began, and paused for a moment as if choosing her words carefully. \"I had worried that you may not have the backbone to become the mother of our family table. You have proven to me recently, however, that you are a clever young woman that can hold to her decisions stubbornly in the face of opposition, but also that you can and will compromise when needed.\"\n\n\"I think David is the only person who has ever called me stubborn,\" Cat said, unsure if Theresa's assessment of her was correct.\n\n\"I didn't mean it as an insult, dear,\" Theresa smiled. \"You will need every last bit of that stubbornness to survive the next few weeks, if not months, trust me, and also your compassionate heart that allows you to be so patient and forgiving with others. It will, perhaps, be easier for you than it was for me, but not by much, so it is time for us to plan strategically. I'm afraid we won't have long before they come for you, so I'm afraid you will have to listen while I lecture, and keep your questions to a minimum,\" Theresa took a deep breath.\n\n\"Okay,\" Cat said tentatively, frowning as she realised whatever was happening here was as important as what was happening to the men she loved.\n\n\"We live in what is perceived as a patriarchal society. Marcus would have taught you the family history in that manner, where the men ensure the social, emotional and financial well-being of the family by looking after its assets and assisting those who require help with the vast resources at their disposal. The women are seen as the stereotypical women behind the men, supporting them in their business and community endeavours while raising large broods of children and running vast households. Correct?\"\n\n\"In a nutshell, yes,\" Cat agreed.\n\n\"For generations that myth was perpetuated. Even the daughters of the tables have little idea what awaits them if they marry a man destined for the chair. It's a small and rather secret little society of women who hold the title of the Mother of a table. It's true, we support our husbands, and we have large families, but there is so much more that the mother must do to the good of both the men of the table and the family. To do that you must be the leader of many tables,\" Theresa wished she had rehearsed this, or that her mother in-law was still alive to help her with this conversation.\n\n\"I don't think I understand,\" Cat shook her head slightly.\n\n\"The men. They are all good men, strong men, alpha men, and as such have strong opinions and their own ways of approaching different matters,\" Theresa tried to explain the way it had been explained to her. \"Imagine the family as a company, and each of the twelve men sitting at the table is an executive. The Chair is the face of that executive, he is the one the world sees as rich and powerful and ultimately influential. Yet each of the others has their role and their responsibilities that go along with that. Without each man and role, the Chair would have nothing to show to the world. They are all equal, but only two are given the roles of leaders... The Chair and Oracle. They lead because they are the hub around which the others circulate information, money and power. They gather all of that information, power and money into one place so as to best serve the family.\"\n\n\"Okay, but how does that impact on the women of the family?\" Cat continued to frown, trying to work out what Theresa was trying to say.\n\n\"That is how the business side works, and I have no doubt each of the men in there will accept their role and perform it to the best of their ability to keep our family strong, but they are the executives, the CEO's and the businessmen as individuals working together. There is one thing that makes them a family, one thing that can soothe ruffled feathers and heal wounds borne of harsh words and resentments from having so many alpha men working so closely. There is one thing that turns them from businessmen into a family bound by love and commitment to a common cause, to a common vision. There is one thing that has more power than any one person at that table, or even the table as a whole,\" she paused and looked at Cat.\n\n\"The thirteenth?\" Cat asked, knowing it was the thirteenth table that had insisted that she go to the Battaglia before being deemed worthy to marry Matteo.\n\n\"No,\" Theresa smiled gently and patted her hand. \"The thirteenth table is made up of the Chairs of each of the other tables and a single powerful oracle.\"\n\n\"Oh,\" Cat frowned again.\n\n\"The mother is the most powerful person in each of the families. You told me about your impression of Peri and the absolute respect and love she commanded from each of the men of the Donati table. Maria once commanded that love and respect from each of the Vitali men, and, while they all respect me, the love has not always been there, as I came to the role late and had large struggles to wrest that power from those who would misuse it. That is what we must talk about,\" she checked her watch. \"And quickly.\"\n\n\"I'm still not sure I understand, but I am listening,\" Cat said seriously, unsure if she understood what Theresa was saying, but realising this was important to her future as Matteo's wife.\n\n\"Soon the men will come for you and take you into the room where the men have gathered to talk about the future direction of the family. You will be presented as the mother of the table, and the one who will not only bind them together, but the family together behind them. You will become the little mother, and, as Roberto, Stefano and I retire, it will be Matteo, Ricco and you who will lead this family into the new era. You will hold the power and the future of this family in your hands, and it is they that will support you by ensuring the right people and resources are at your disposal,\" Theresa said. \"Do you understand now? Since Roberto and Stefano first met you, they knew it would be you.\"\n\n\"No!\" Cat said. \"I'm not that woman! How could I be? I never had a family of my own, not really! I don't know how to...\" she raised her hands as anxiety and fear threatened to overwhelm her.\n\n\"Yes, you are!\" Theresa said adamantly. \"All of the men I love, my husband, my lover, my sons, all believe you are that woman. I may not have been convinced, at first, but I have seen glimpses of the strong woman you are beneath that sweet exterior. The men will follow you and adore you until the end of your days. You have already charmed most of them, and more than just one of them is more than a little in love with you. Your hardest trials will come with convincing the women of that table that you can manage this family as well as I have, or perhaps even better than me. You have friends to call on and use, each of the other mothers has gone through the same issues and will help you.\"\n\n\"Why would I need them when I have you, right here?\" Cat asked even more anxiously, thinking that Theresa was leaving her.\n\n\"My journey was different because I am a second wife,\" Theresa admitted. \"It has taken some time for me to wrest the power back from the women who think they know better than me. It can be more difficult dealing with so many strong women, queen bee's in their own rights, than smoothing the feathers of the men who sit on the table. I am lucky that most are good women who will do what needs to be done, but I face more opposition than I should. More opposition than you will receive once each retires. You must make your own path and not be overly influenced by me and my way, because I have not led the women as well as Maria did when she was mother, I made concessions where I should not have after such a tragedy where the Mother's seat at the table had been vacant for so long before my arrival.\"\n\n\"Who?\" Cat asked. She had come up against bullies her whole life, and she could, if she was prepared, allow harsh words to roll off her like water off a duck. She could also fight back if needed. She'd had to fight from time to time throughout her life to protect David, and then to survive being with Ned and still manage to keep her jobs and provide for David.\n\n\"I am sure you will have no trouble working that out on your own. I do not want my biases to influence you, and I want to make it clear once again that I did not always trust Roberto and Stefano's decision. You have proven my early assumptions wrong. I have no doubt you will be the best mother this table has ever seen, but you must be strong and prove your worth, even though you shouldn't have to. Remember, you hold the power in this family now, and no one can take that from you unless you let them. No matter what is said by any of the women of this family from this point on, never forget that over the last few weeks I have come to love you as a daughter and dispelled any doubts I had about your strength and love for my family,\" she smiled softly and hugged Cat to her. \"I have no doubt one or two will try and undermine our relationship by telling you about my early concerns. I have not told them of our closeness now, and they do not open their eyes enough to see it.\"\n\n\"Them, who?\" Cat asked.\n\n\"Each of the wives of the men on the table will become your inner circle, women to trust and rely on. The aunts, as you know them, will stay until their husbands retire, and then will be replaced by the wives of those who succeed them. You will already have Maryanne, Kari and Mia in your circle, each of whom has skills and talents that can help you, and you will have me for a short time to pass on all my knowledge of the family.\"\n\n\"Only a short time?\" Cat said in a panic. \"Even when Roberto and Stefano step down, you will be close, won't you?\"\n\n\"Of course, we are family now, but I won't interfere with your circle or your decision making. You must lead. You must have as much faith in yourself as Matteo, Ricco and their fathers have in you,\" Theresa said. \"You can do this, Cat, I believe you can do anything you set your mind to,\" she impulsively hugged Cat again. \"Just promise you won't let any of the women try to intimidate you. You hold this family in your hands. You, and only you have that power. Do you understand?\"\n\nCat was saved from answering as Ricco knocked on the door and opened it slowly as Theresa took a deep breath and stood.\n\n\"They're waiting for you, Mama,\" he said solemnly, and bent to kiss her cheek as she went to walk past him out of the door. \"We will follow in a few minutes.\" He said softly. Theresa nodded and gave a small smile before leaving Cat alone with Ricco.\n\n\"Did you know? Did Matt Know?\" she asked, trying not to accuse but feeling overwhelmed.\n\n\"To tell you the truth, I never gave any thought to Theresa's role in the family. She was just there doing everything, as she always did. I feel guilty for taking all of that for granted now,\" he admitted. \"The mother was just the mother, and it never occurred to me that no one else ever held that title amongst the Aunts or the amount of work she did to make sure this family held together as a strong force to be reckoned with on a national stage and against the other families.\"\n\n\"How am I supposed to live up to that?\" Cat said. \"I've never had a family at all!\"\n\n\"You did everything for the wedding, with Theresa's help, but you did it. I think you have more talent for event management than you think, and you won't have to do it alone,\" Ricco said, closing the space between them. \"We didn't know, but even if we did, we would still love you and believe in you. We love you, not just as the incredibly sexy woman you are, but for the strong, amazing, big-hearted and loving woman who will be the most amazing mother our family has ever known. No matter what you do, Matteo and I will back your decisions one hundred percent. If anyone thinks any different just because you weren't born to the tables and laws, then they will be sadly mistaken. You are our world, and we would not be where we are without you. Remember that, always.\" He bent her head to kiss her, stopping any further argument she might have about her suitability for such a role.\n\nHis fathers had practically hand-picked her from the moment he had first brought her home to meet Roberto when she had shown her inner strength, love for her brother and her extraordinary resilience. Roberto had just told them all what he had seen in Cat and believed her capable of, and Ricco had to admit that, while painful to hear, she had been strong enough to leave him when it became obvious he couldn't reciprocate her feelings in the way she wanted. She could have stuck around, tried to use him for his money and status, but instead had packed up her life and forged a new path after ensuring her brother was provided for. She left Matteo for similar reasons. Because she wanted to love and be loved in return.\n\nRoberto teased Matteo about finally waking up to himself and convincing her to give him a second chance, something Ricco hadn't been able to do. Then he spoke about what she had endured for that love and everything the family had thrown at her, most of it unpleasant in the early days. Even after all of that, she still forgave and opened her heart up to the love she felt for his sons and, eventually, the entire family.\n\nHe could see that not everyone at the table had been convinced of her suitability, and he worried about her, but he knew she had her supporters who would assist in ensuring this process wasn't too arduous.\n\n\"It's time,\" Ricco said. \"Ready or not, I'm afraid.\" He held her close and kissed her head. \"Just remember, everyone in that room already loves you, and you have nothing to prove to anyone, not even yourself.\"\n\n*****\n\nCat had sat through over an hour of discussion by the members of the tables new and old. The decisions had been made some time ago by the older members, but they had given the younger members time to speak freely, disagree with decisions and put forward alternative scenarios. She heard her suitability being compared with Maryanne and the women of the other tables, in general, and she had been surprised and dismayed in equal measure by what had been said. She had felt both Matteo and Ricco bristle beside her as they sat and said nothing. They were, after all, her greatest champions because they loved her, and this was a forum for free speech and discussion, not indignation and argument.\n\nRemembering what Theresa had told her in the short amount of time they had together, she took a deep breath and, knowing she was probably breaking any number of protocols, prepared herself to speak. She held power here, and the future of this table in her hands, Theresa had said that more than once, as if drumming it into her. It was time to deal with her critics the only way she knew how, by proving them wrong. She had to do this, not for herself, but for Roberto, who had always believed in her, and for the men she loved who would need to gain the trust and good will of these men who would work alongside them.\n\n\"May I speak?\" Cat asked tentatively, looking at Roberto and Stefano.\n\n\"This is a free discussion,\" Roberto said as the men fell silent.\n\n\"It would seem that many of you know less about me than I know of you, and I have heard you judge me by assumptions, so I would like to dispel some of those assumptions, if I may?\" Again, she turned toward Roberto and Stefano as if asking permission, and they nodded at her.\n\n\"Frankie and Brady, you have known my brother and me for several years now. You will probably be able to confirm that I have never been on the dole, been out of work, or dated people based on their bank account or what I could get from them,\" she spoke clearly and without accusation about being called a possible gold-digger.\n\n\"I've never known Cat to have less than two jobs at once, even when she went to work for Vanessa,\" Brady nodded.\n\n\"Even with her work schedule, she still made it to everyone one of David's games and gave charitably of her time and talent to the football club every year. Most of you have seen the painting she did, free of charge, for a charity auction that now hangs in my games room,\" Frankie added. \"She knew every member of that team well, and she cared for her brother better than most people care for their siblings.\"\n\n\"We had our moments,\" Cat admitted, smiling softly. \"My stress levels went down significantly once he started playing for you and the club. I'm not sure I could ever adequately thank you for that, or your friendship to David, Brady. I know how much you both do for that community to help kids like David, and I am unbelievably grateful.\"\n\n\"You've given back just as much, even before you knew who I was and what my name meant in this town,\" Frankie complimented her back. \"You did for the club and community, just as I did.\"\n\n\"Cosimo,\" she moved on before she became emotional. \"You know me as words on paper. It's true, I am an orphan of a drug-dependent mother who probably had no idea who my father was. I don't have a history and heritage to be proud of, which makes learning all about this family so enjoyable. I may have a limited education due to circumstance, but that doesn't mean I can't learn and look at the things you take for granted with new eyes, and perhaps show you some things you have missed, despite being the Watchman.\"\n\n\"Such as?\" he asked, crossing his arms over his chest and narrowing his eyes.\n\n\"Despite being able to drive anything from a Sherman tank to a motorised unicycle, Chase prefers his beat up old FJ Holden that he inherited from his grandfather, because his grandfather taught him to drive at the age of ten in it. He has also never won a road race in his life because he always lets his cousins win and won't compete with his brothers,\" she laughed softly and looked at Chase. \"He claims he can beat everyone, but I imagine no one in this room has lost to him.\"\n\n\"Geez, woman, leave a man some mystery!\" Chase chuckled.\n\n\"Thomas has the uncanny ability to hide in plain sight,\" she grinned and lowered her voice. \"I imagine Matt isn't going to be very happy with a few of the photos from outside the church yesterday, but I won't tell him which ones,\" she whispered conspiratorially as he let a sly smile curl his lip in acknowledgement. Matteo narrowed his eyes at his cousin, looking less than impressed.\n\n\"You've got to admit, she got him right,\" Roberto chuckled as he saw the exchange between the men and Cosimo still looking unimpressed.\n\n\"I have three sons,\" Cosimo said, enjoying Cat's little speech, despite seeming unimpressed. He had to admit that seeing his sons through her eyes was a small revelation.\n\n\"I probably know Henry the best, not because I have spent any great amount of time with him, but because of his social presence online. He's hilarious and generous and so very clever, David and I have been following him for years online, and, while I feel like I know him, he probably thinks I am a weird fangirl, from the conversations we've had. What I didn't know, though, was that he's a robotics geek, and he and Sebastian have been working on a super drone together, which can...\"",
        "\"We don't need to go into that right now,\" Henry said, cutting her off.\n\n\"I'm sorry. Was that a secret?\" Cat faltered for a moment.\n\n\"No, I'm just not ready to unveil it yet,\" Henry shrugged. \"We're still ironing out the bugs.\"\n\n\"I never would have said anything if I knew, I'm sorry, Henry, honestly,\" she said softly.\n\n\"He's a perfectionist, don't worry about it,\" Sebastian said. \"I'm more interested in how you found out about it.\"\n\n\"I've been taking lessons from Thomas over the last week, I guarantee he knows all your secrets. Or at least those of his brothers,\" she laughed lightly. \"I hope your disapproval of me has lessened now,\" she spoke directly to Sebastian.\n\n\"Why would you think I disapproved of you?\" he asked.\n\n\"You weren't exactly subtle the night Ricco took me to see his photographs and retreat,\" she said again with no accusation, just stating a fact. \"It is reassuring that Matteo has such a loyal friend amongst you all. You possibly know me better than the rest of Matteo's cousin's, all except Logan, that is. You should probably know I adore your brother, he's been so much fun to be around this last week, and I am looking forward to working with him fairly closely over the next few months.\" She noted Sebastian's look of surprise before turning to Logan. \"I hope you have had as much fun as I have this week.\"\n\n\"Yeah, it's been great!\" Logan said happily, loving getting one up on his older brother.\n\n\"You have to admit, he isn't the usual grumpy guy we're used to lately,\" Timothy said to his father. \"Now do me,\" he grinned.\n\n\"I would love you to go through their wardrobe and update it,\" she laughed, indicating Matteo and Ricco, feeling more confident now. She spoke to the rest of the cousins, showing that she knew the talents and skills of each of them and their fathers. She wanted to assume that she had proven herself already to Matteo's brothers, so she finally stopped talking and looked at the table.\n\n\"Your turn, let me have it, surely you must know something about me that wasn't written on a piece of paper created by one of Cosimo's watchmen,\" she challenged them.\n\n\"You don't like hot breakfasts,\" Logan volunteered. \"You prefer fruit, yoghurt and muesli.\"\n\n\"The Donati love you as if you were one of their own,\" Thomas said.\n\nThe table fell silent, and Cat smiled, sadly letting the silence stretch as she made her point. They hadn't bothered to get to know her at all before judging her.\n\n\"I shouldn't have to prove anything here today. It should be enough that these two men love me and trust me to always put all of you and your interests first. I am used to being judged, I grew up with it, but I feel for Matteo and Ricco, because in judging me so harshly you have shown your lack of trust in their decisions, as well as the decisions of their fathers,\" she said sadly.\n\n\"Now, if you will excuse me, I have to face the truly terrifying judgement of your wives,\" Cat stood and lifted her chin before walking from the room. Salvatore burst out laughing as the door closed behind her, making everyone else turn to look at him.\n\n\"Sonya is not going to know what hit her if Cat pulls that stunt with her!\" he roared with more laughter. \"I love that little woman, and I dare any of you to say otherwise now.\" He continued to laugh.\n\n\"I think I will go and minimise the fallout,\" Theresa rose gracefully to follow Cat from the room.\n\n\"I'll go,\" Matteo said stiffly, hating that she had looked so sad.\n\n\"Let Theresa see to her, we have other matters to discuss,\" Roberto said. \"She is a much stronger and resilient woman than you give her credit for, than any of you at this table give her credit for. Sal is right to worry about Sonya, I imagine this is not going to be a good day for her.\" He smiled slyly as Salvatore roared with laughter again.\n\n*****\n\nCat sat nervously surrounded by Theresa and her sisters-in-law. She'd taken a seat and waited anxiously as the women all found somewhere comfortable to sit, wondering what was coming after her time with the men of the family.\n\n\"How did you find the Battaglia when you were there?\" Sonya asked abruptly into the silence, a small knowing smile on her face.\n\n\"A little confronting, but I learned a great deal,\" Cat said as honestly as she could. \"Marcus was very nice to me.\"\n\n\"That's a very diplomatic answer,\" Sonya tilted her head. \"Theresa told me you had Edith and Kate design your wedding dress. It was nice to see them at the wedding. It's been some time since I have seen anyone from my hometown. They mentioned some changes being put in place since your visit. Your trial didn't end well, did it?\"\n\n\"Oh yes, I knew you were originally from the Battaglia,\" Cat said pleasantly, trying not to blush, even though it was obvious that she knew something about the incident at the end of her trial. Perhaps she was bluffing, Cat thought, and decided to ignore the question rather than confirm or deny anything. She couldn't believe Hella's breach of protocol would have become gossip. Marcus and his brothers had been horrified and apologetic, and Matteo had said they would not speak of it either.\n\n\"We are all from different tables,\" Sonya said lightly, as if it was an obvious fact that Cat should have known. \"It's unusual for a woman to join a table without having grown up in a family like ours.\"\n\n\"So I've been told,\" Cat said. \"Lucky for me Peri paved the way, and did it so well no one is concerned about that anymore.\" If this was going to be another attempt to see how she would react to Sonya's judgement of her suitability to be Matteo's wife and the mother of Vitali, then she was going to stand her ground. She had jumped through every hoop the family had asked of her, and she wasn't going to apologise for being Mrs. Vitali now. She took a deep breath and looked around at each of the Aunts who now sat looking at her curiously.\n\n\"Sonya likes to try and rattle people, Catriona,\" Anna said kindly. \"I guess we are interested to hear your understanding of the women's role in our family.\"\n\n\"Would you like me to give you rote answer I learned by heart in my training, or the version I have recently learned is the truth? Or are you asking if I know what will be expected of me as the Mother of this family?\" Cat asked, addressing the group. \"I don't mean to be rude, but I think, after what I have just been through with all of your husbands and sons, the time for secrets and asking gentle questions is past. Don't you?\"\n\nAnna sat back speechlessly reassessing Cat and her mood. She had seen this side of Cat before. She had put up her walls and had become unemotional. She was interested to see what Sonya and Angela would do now.\n\n\"I'm all for that,\" Dina said in her no-nonsense way. \"So, tell us, what do you know and what do you need to know?\"\n\n\"I know you are all here to help Theresa in her role as the mother, but because there is a stigma attached to being a second wife you think you can push her around while she runs herself ragged without much help at all from most of you, leaving Mia to pick up the slack. That works out well for me, as Mia will be part of my circle. I am sure she will be able to step up quite ably and help me, despite whether you deign to share the wealth of your knowledge with me or not,\" Cat said simply, and was pleased by the look of shock on their faces.\n\n\"It's my understanding that the choice of charities we support, as well as the organisations we patronise, will also be my choice, so I will work with Theresa to look over those and make decisions about our future patronage, as well as put forth organisations I would like to become involved with,\" Cat continued.\n\n\"Then there are the events, like the gathering, births, deaths and marriages, as well as keeping track of the extended family. In between all of that I will be starting my own family, I think Matteo wants as many children as he has siblings, so luckily we are starting while I am young,\" she smiled tightly. \"Did I miss anything?\"\n\n\"I expect you feel you don't need us at all!\" Angela said testily.\n\n\"On the contrary, I would love all of your wisdom and advice, but if you think I will let you treat me like some uneducated charity case who will leave all of those decisions up to you, then you can think again,\" Cat said. \"I intend to do everything with the help of people I can trust. May I ask why Maryanne and the others haven't been invited to this meeting? They will be my inner circle, after all, along with the future wives of your sons. The younger men sit with their fathers. Why are the younger women not here?\"\n\n\"We didn't realise you would want them involved in this first conversation about women's business!\" Sonya said arrogantly. \"So that you wouldn't be embarrassed to ask questions about the work our circle does while you get to know us and our place in this circle better.\"\n\n\"I know you because I have taken the time to find out and talk to you. Not including Theresa and Anna, who I know well and love dearly, tell me one thing that each of you knows about me that was not read from a paper put together by the watchmen,\" Cat challenged them as she had challenged the men and prepared to show off her own knowledge. She knew which families they had come from and where their talents lay, just as she had with the men, and she was prepared to rattle off her list of facts. \"Bear in mind I have read the paper on me.\"\n\n\"Perhaps you could do us the same courtesy,\" Angela spoke at a severe look from Sonya.\n\nCat went through each woman present, listing their previous family and particular talents they were known for, as well as mentioning their children, to their surprise, as Theresa sat back watching the show and enjoying it thoroughly. This young woman may lack formal education, but she had street smarts and knew people. Theresa was more than impressed, and even a little envious of her bravado.\n\n\"That's was a clever little party trick,\" Sonya said, dismissively waving her hand as if disregarding everything Cat had said. \"It means nothing, however. We will not be working for you. We will teach you what you need to know as we continue our work and you observe.\"\n\n\"It's a shame you feel that way. I will miss your voice amongst this group of women. I am sure I would have learned a lot from you, but I understand your need to retire early if you cannot work with me. I won't think badly of you at all,\" Cat said pleasantly.\n\n\"I have no intention of retiring!\" Sonya spluttered.\n\n\"That's entirely up to you and Theresa, for now, but I'm afraid I couldn't have anyone who talked to me in such a condescending way remain as one of my advisors. Theresa may have put up with it because she needed your good will. I don't, and I can guarantee my husband would not expect me to be spoken to like I had no knowledge or understanding of my own about what was required of me now,\" Cat rose to her feet. \"I think I will go find my circle while you think about what you would like to do, or you can throw some more daggers in my back while I am gone and see how that works out for you.\"\n\nSonya stared at her speechlessly, and Dina stifled a laugh as she watched the exchange. Anna looked at Theresa and raised an eyebrow, impressed by how cool, calm, and collected Cat was during the exchange.\n\n\"As always, we all have a choice in what we do and say, but respect should and will go both ways in this circle from now on,\" Cat said into the silence. \"Theresa, can we make room for the other ladies, please? I won't be long, and then we can talk about the future of this wonderful family.\"\n\nCat walked steadily from the room when every nerve in her body screamed at her to run! She wanted to scream and cry and break down at the unfairness of being so unprepared for this day and all it entailed. Why hadn't anyone warned her? Her subconscious whined. When she finally stepped out of the room and closed the door to walk back through to the main area, she shored up the barrier she had built around herself and lectured herself on keeping everything together, just until she got home, and then she could really think about what was happening to her and her life now.\n\n*****\n\nMatteo looked at Ricco as the discussion wound down about the spate of lookalike threats they had received over the weekend of the wedding and what it meant for the family. Despite the gravity of the discussion and his father's insistence that he stay, Matteo's thoughts had been firmly with Cat, and he looked at his watch, often, wondering what was happening to her with the women of the family.\n\nIt had been hours since brunch, and Ricco could see the strain on Matteo's features, and, although he seemed like his normal relaxed self, he felt the same way, knowing that from the time Cat had left them on Friday morning it had been one confronting experience after another for the woman he loved.\n\n\"We're just rehashing the same information over again here,\" Ricco interrupted Jacobi, whose concern was for Vanessa and her convenient accident last night that had found her in the hospital overnight. The fact that she had seen Mario acting suspiciously and his subsequent anger with her at the wedding reception bothered him greatly, even though Vanessa claimed that there was nothing wrong between them.\n\n\"You have to admit, it's worth investigating the link to Savoy's, if not the Martino's. They are all the same family at the end of the day, and the accident is largely unexplained, so far,\" Jacobi pressed.\n\n\"We agree with you, and Cosimo already has men on it,\" Ricco said evenly. \"I suggest we break for dinner and come back to it with clear heads, if not tonight, then tomorrow, when we have some real information to go on.\"\n\n\"We aren't getting any answers sitting here, that's for sure. Everyone stay with their security from this point on. We knew we would be targeted, as other families have been when announcing the new table. Let's not forget what happened to the Donati, and that the threat ultimately came from within,\" Roberto warned. \"We'll meet tomorrow morning again. Keep your phones on you and your wits about you.\"\n\nHe looked at the younger men as he spoke. It was a gamble to have the eight extra men form a shadow table to assist with some of the roles officially occupied by their siblings and cousins. The aim was to confuse anyone targeting the family, but also to avoid a situation as had happened in the past where tables had been left languishing because replacements were untrained, unavailable, or unwilling to step up when one of the table fell to misfortune or disease. Those eight would not have a seat at the table of twelve, but they would be involved on an intimate level with the dealings of the men who did sit on the table, and back up certain roles within the family that had only grown and gotten bigger as they moved into the modern era.\n\nThe men watched as Matteo stood and walked swiftly from the room, followed by Ricco as soon as Roberto had finished speaking. The others chatted quietly in groups of two and three as the younger ones asked questions and struggled to understand the decision to have so many men so intimately involved with the table. Eventually, they all moved out to the back patio where large platters of antipasto littered the tables, and a bar had been set up with jugs of cocktails, beer and wine. Cat, Matteo and Ricco were conspicuously absent, and Roberto sent Lucca to find them.\n\nMatteo had known as soon as he saw Cat that something was very wrong. Her walls were up, and she wore a mask that hid everything but the pleasant face she chose to show the world when she was upset. He knew that mask well, and had caused her to wear it more than once, much to his shame. Rather than moulding into his body when he embraced her, she remained stiff, as if holding herself tightly against flying apart, so he didn't push her to explain, he merely tilted her head up and murmured, \"I'm sorry,\" before kissing her.\n\nCat closed her eyes, wishing she didn't have to go back out to face them all again and she could ask to just go home, but she also knew that wasn't possible if she was going to maintain any semblance of being the strong, determined woman she had portrayed to the older women. She'd shown his family that she wasn't the na\u00efve and sweet girl they all assumed she was, and it terrified her that she would have to prove herself time and time again to these people.\n\nShe'd known it wouldn't be easy to be the wife of Matteo Vitali, she'd even been prepared for these confrontations, on some level, but she had not expected them today, along with the revelations they brought about her future. She had thought today was all about the table and the men who would work with Matteo in the future. She hadn't realised she would have to step up into her new role at the same time, and hadn't had time to even consider the ramifications of that, or that there would be open hostility from the women of the family who had been so lovely to her before today.\n\n\"I need to go out to the dinner. It's important,\" Cat said quietly, pushing Matteo away before she forgot where she was and lost control of the tight reign she held on her emotions. \"We can talk about it once we go home,\" she gave him a tight smile that didn't reach her eyes.\n\n\"We can go home now,\" Matteo offered. \"Lisa will make us something for dinner.\"\n\n\"No, I need to stay,\" she said, and stepped out of the circle of his arms. \"Besides, we both know Ricco is starving,\" she joked, but it didn't carry to her voice or the tight smile she wore. Matteo frowned and was about to argue, but she held up her hand. \"It's important to me, Matt. We can talk at home about the truly awful things I said and did to your aunts.\"\n\n\"I find it hard to believe you did or said anything awful to anyone,\" Matteo looked at her in surprise.\n\n\"Believe it, but also know I had reasons, which I will explain later,\" she said stiffly. \"Shall we go to dinner? Because I would rather not argue or cry in front of these people, and if you both keep looking at me like that I am liable to do both.\"\n\n\"I'm starving, let's eat,\" Ricco said easily, and gave Matteo a look that told him not to push this.\n\nWhen they went out onto the deck, Roberto looked thunderous, and Mateo wondered what he had missed and if Cat had, as she said, done something so awful that his father disapproved. He was suddenly very protective of her and wrapped an arm around her waist as Ricco stood close to the other side of her.\n\n\"What did you do?\" he murmured close to her ear.\n\n\"Nothing I regret,\" she answered stiffly and shook him off, moving to the bar and getting a glass of wine before turning to face Roberto again. He wanted her to be strong and stand at his son's side, it was too late now to try and tell her how to do that. Ricco had followed her to the bar as Matteo made his way to his father.\n\n\"It doesn't matter what you did or said,\" Ricco said. \"Matt and I will back any decision you made. We love you, and that will never change.\"\n\n\"Don't!\" Cat said more forcefully than she had meant. \"I am barely hanging on here, Ricco, don't do the whole loving and supportive thing right now. Okay?\"\n\n\"Alright, how about this then... You might want to talk to Sebastian, he feels bad about you calling him out on judging us, and I think he is a little jealous that you Adore his little brother,\" Ricco exaggerated the word adore.\n\n\"You sound a little jealous about that, too,\" Logan said with a smirk, coming up behind them. \"You can't blame the girl for having good taste. I have no idea what she sees in old fogies like you and Matt anyway.\"\n\n\"I can see the appeal,\" Tate said cheerily, coming to stand with them.\n\n\"Are you having a team meeting without me?\" Kalum asked, approaching the small group.\n\n\"We wouldn't dare,\" Tate laughed. \"But we probably should have one tomorrow, there are only a few days left, and we don't want to drop the ball now, so to speak.\"",
        "\"I have a feeling Logan and Kalum are going to be pretty busy this week, so why don't we do a breakfast meeting Wednesday morning, that gives me one more day to recover from the wedding,\" she said.\n\n\"Sounds good, we still have a few of the impossible ones to pick up when we have some free time,\" Logan nodded.\n\n\"You may as well text me the list, seeing as I am the only one not so busy this week,\" Tate said without any rancour. \"The least I can do is keep the team points following in.\"\n\n\"Maybe you and I can get together later: I doubt this will go much longer tonight. Most people are still recovering from that wedding and the after party,\" Logan chuckled.\n\n\"Sounds like a plan,\" Kalum said with a chuckle. \"Cat, there's a visitor here to see you.\"\n\n\"Me?\" she frowned as she looked at him. Marina was escorted out onto the deck and escorted to where Roberto stood with Theresa and Stefano, still looking as if he was keeping a handle on his temper.\n\n\"I'm so sorry to interrupt, but the ladies who assisted Catriona yesterday found this as they packed up, and apparently it is quite a valuable prize for some reason,\" She lifted the garter in her hand. \"I'll just return this to its rightful owner and say hello to Sonya. I do not want to intrude on your celebrations,\" Marina said sweetly.\n\n\"Not at all, Marina, I am sure Catriona will be grateful for the return of that item,\" Roberto said magnanimously. Cat frowned as she walked toward Marina. That wasn't her garter, she had her garter at home, and she wondered what was going on, but she said nothing. She went over to thank Marina for coming, but was cut off by Logan, who reached out for the garter.\n\n\"I can take that for her, she adores me, you know,\" he chuckled and gave Matteo a sideways glance.\n\n\"I'm sure Cat adores everyone in your family,\" Marina smiled, \"So it's probably best I return it to its rightful owner,\" Marina smiled and turned to Matteo. \"Congratulations again,\" she leaned in and kissed his cheek. \"I'm sorry to intrude on your big day. May I borrow your wife for a few minutes?\"\n\n\"My wife,\" Matteo grinned, liking the way the words felt on his lips. \"Doesn't need my permission to talk to her friends,\" he smiled widely.\n\n\"You can use my sitting room if you like,\" Theresa offered.\n\n\"I'll show her the way,\" Sonya offered, stepping forward, confident in the fact that she had a good relationship with Marina. \"How is my brother?\" she asked Marina as they walked toward the house.\n\n\"Feeling attacked on all sides at the moment. Bruno is a very unhappy man tonight, I'm afraid,\" Marina said honestly, making Cat gasp.\n\n\"Oh, I'm sorry, I hope it had nothing to do with the incident I was involved in,\" she whispered as they walked through the living room to the private sitting room of Theresa.\n\n\"Not at all, he has nothing but the highest praise for you and your new husband,\" Marina smiled and fixed Sonya with a glare as they entered the sitting room. \"Both Marcus and his father were distressed to find out that your trial with the Battaglia was referenced with innuendo by Sonya earlier today, and I have come to apologise sincerely and reassure you that the only person with details of your time with us is Matteo. Roberto knows of the incident only, and the glowing praise of your tutors, no details at all.\"\n\n\"Thank you,\" Cat said sincerely. It was one of the burning questions she had filed away in her mind to ask Matteo when they returned home.\n\n\"Bruno is being attacked?\" Sonya asked.\n\n\"Bruno is preparing to retire, the embarrassment caused by our own people with both the mother of the Donati and Vitali is too hard for him to live with, I'm afraid. I would hate to think how he would react to this latest breach of protocol that you perpetrated, Sonya. Luckily it is women's business, and the men will rarely get involved in that,\" She informed Sonya in a tone that told her she knew exactly what had happened.\n\n\"I didn't breach any protocols today!\" Sonya argued.\n\n\"Cat, you have friends in your circle who only wish to help and support you, which is how I know of the awful breach of protocol earlier today and do not want you to think any worse of us than you already do,\" Marina said softly, taking Cat's hand as they sat. \"Both you and Matteo have been very generous in your dealings with the breaches of protocol that occurred at the facility, as well as today, and I have come to assure you no such incidents will occur again.\" Marina turned to look at Sonya, who had dropped her air of arrogance and was looking as if she might be ill.\n\n\"Believe me when I say this, Sonya,\" Marina said in a hard voice, despite the woman's obvious seniority over her. \"If I hear that you are anything but this girl's greatest supporter and friend, I will demand justice on her behalf, because she would never demand it for herself!\"\n\n\"There was no need for you to come here to save me,\" Cat said abruptly, hating that she sounded ungrateful, but needing Sonya to know she could and would fight her own battles. \"Sonya and I understand each other perfectly, and we have dealt with that little issue already.\"\n\n\"I am not here to save you,\" Marina laughed. \"You are a strong and formidable woman when you set your mind to a task. I am here to beg forgiveness once again. It is time for a change in our family. I am here merely as an ambassador to explain our position about information regarding trials. Marcus and his brothers will ensure the return of our good name,\" she smiled.\n\n\"There is nothing to be forgiven for. It was nothing more than a testing of boundaries, and I have had all of my limits tested recently, this was only a moment, nothing more. I know, with certainty, that the men I love will support my decisions, even if all of the women do not yet. That, in itself, gives me confidence where I may not have had it before,\" Cat said, trying to come off as flippant, but her unemotional demeanour made her seem wooden and rehearsed.\n\n\"You don't have to keep that hard shell up around me, Cat. I know you. The sweet and enthusiastic you, who can tackle anything head on,\" Marina said, looking at her seriously.\n\n\"It's been a tough couple of days with people coming back from the dead, the wedding, and then all of the pressure of today. I need the shell more than I would like to admit right now. Everything will be fine again tomorrow. It has just been a very long day, and it's best that I keep my emotions under control right now,\" she reassured her friend, admitting that she was feeling a little fragile.\n\n\"I apologise,\" Sonya finally broke her silence. \"I had no idea what you had been dealing with when I asked if you enjoyed your time with the Battaglia.\" She stopped short of admitting she had tried to intimidate Cat.\n\n\"As I said, I am sure we understand each other now. Thank you for coming, Marina, but it wasn't necessary. I think of you and Marcus as good friends, nothing will change that,\" she said softly. \"I should go back. I am hoping to go home after this dinner, and I have a feeling they may be waiting for me to return,\" she smiled, not ready to fully accept a half-hearted apology from Sonya. Actions spoke louder than words, after all. \"I will call you tomorrow once I have had time to really think about everything that has happened over the last few days, weeks, and months!\"\n\n\"It's a lot to take on when you haven't been born to it, but you are doing an amazing job,\" Marina smiled and embraced her. \"Go and tell your husband to take you home,\" she smiled.\n\n\"Thank you for coming and being my friend,\" Cat whispered and returned the embrace, feeling like she had to move before the walls she had built around her heart and emotions crumbled completely.\n\nSonya watched and could see Cat almost relax momentarily before the hard shell closed around her and her face become emotionless again. She knew she would need to make amends properly, but she had no idea what Cat was dealing with, and she vowed to find out, particularly about the people who had come back from the dead. The problem was that Cat, and possibly some of the other women, perceived her as a threat now. She needed to know who had called Marina to tell her what had been said. She'd been betrayed, and that hit her harder than the rebuke by Marina. She had ruled their circle, treating Theresa like an employee rather than a sister, and no one had ever rebuked her before.\n\nTrust was difficult to garner, and she knew from experience that it was almost impossible to repair, she wondered if she could ever expect to be forgiven. Any other woman would have been cowed and docile by Sonya's demeanour, but Cat had stood up to her and shown some backbone of her own. Sonya could respect that, and had this been any other woman that would have been the end of the issue. This wasn't any other woman of the tables, however, and the fact that Marina glared at her now told her just how much she had underestimated Cat and her value, not only to her family, but others as well.\n\n*****\n\n\"I was promised a nap today, which never eventuated, and now I can barely keep my eyes open,\" Cat said softly near to Roberto's ear. \"Would you mind terribly if I got one of your sons to take me home early?\" she asked.\n\n\"Take them both, I could use an early night myself after the wedding,\" he chuckled.\n\n\"In that case, I will, and I won't even feel bad about it,\" she giggled in response. \"Thank you, Papa, for everything you said today.\"\n\n\"I meant every word,\" he smiled and embraced her, kissing her cheek. \"You make my sons very happy, and not just the obvious ones. It is good to see. I owe you a great deal for bringing Matteo back to us.\"\n\n\"He was never truly gone. He loves this family above all else in his life,\" Cat said sincerely.\n\n\"I would have argued that before yesterday, but now you are family too,\" he grinned, seeming fully relaxed after his dark mood earlier. He was as mercurial as her husband, and she had to smile at the similarities between father and sons. \"Matteo,\" he called, \"Take your wife home before she falls asleep on her feet. I'm sure neither of you got much sleep last night.\" Roberto chuckled.\n\n\"That would be my absolute pleasure,\" Matteo grinned at his father, walking closer to where he stood with Cat.\n\n\"And take Ricco with you, that boy hasn't slept in days. Mia and Kalum will check on Vanessa tonight,\" he said, nodding at Kalum.\n\n\"You don't have to tell me twice,\" Matteo said, eager to get Cat home and find out what the hell happened while he was stuck in the library all day. They rapidly farewelled their family and left, with Knox behind the wheel for the short journey home to their penthouse. Cat felt sandwiched between the two men and was grateful the trip home was only short. She desperately needed some space and time to think about everything that had happened to her.\n\n\"Are you going to tell us what happened?\" Matteo said as they walked into the penthouse.\n\n\"What I am going to do is get myself some cool water, some Panadol, and go and sit out on the deck in the fresh air, by myself,\" she breathed deeply. \"I know you are both worried about me, but, please, just give me ten to twenty minutes to be alone to think and breathe. Please?\" she added when it looked like they were going to protest. \"I haven't even been to the bathroom on my own in the last seventy-two hours, you have to let me have some space, just for a few minutes. I love you both, nothing will ever change that, you don't have to look so worried.\"\n\n\"You have a headache?\" Ricco asked.\n\n\"It's not bad, just lack of sleep and too much information downloaded. I feel like a computer stuck on that spinning circle thingy,\" Cat tried to make light of the fact she'd been struggling with a headache most of the afternoon. Turning, Cat walked toward the kitchen and found Lisa waiting for her with a jug of cold water and a glass. \"You always seem to be able to read my mind,\" she smiled at the woman who was rapidly becoming the person she most relied on to help her navigate her life.\n\n\"Would you like anything to eat, Mrs. Vitali?\" Lisa asked.\n\n\"No thank you, Lisa, but if you could bring me some Panadol and one of those small throws we use out on the deck, I would appreciate it,\" Cat said. She turned to look at the men she loved, then smiled softly before walking out to the deck and sitting in a cosy chair.\n\nCat leaned her head back and looked up at the sky and finally let the tears that had been building all day fall. The tension of the day flowed out of her as she wept softly. She wasn't sad, she wasn't even mad, she was just uncertain that she could be all that she needed to be for this family. Lisa's presence startled her, and she jumped guiltily.\n\n\"My apologies, Mrs. Vitali. Is there anything else I can get you?\" Lisa asked, her concern evident on her face. She deposited a small cup with the Panadol tablets, a box of tissues and a fresh glass of water on the small end table beside Cat.\n\n\"Take no notice of me, Lisa,\" Cat gave a half smile. \"I'm just overtired and a little overwhelmed with everything. Do you think we could have a late breakfast together in my studio tomorrow? I plan to sleep for as long as I can in the morning.\"\n\n\"If you wish, Mrs. Vitali,\" Lisa nodded and left her alone. Cat looked through the large glass windows and sliding doors that made the wall of the house bordering the outdoor deck. She could see Mateo and Ricco sitting on a sofa and talking quietly, and nearby two of the personal security detail. This was her life now, and she had known going in that it wasn't going to be easy, but today had been a shock. She had been deliberately kept in the dark about the power of her position within the family and within the circle of women who would gather around her as part of the family. Would she have chosen differently if she knew? she wondered.\n\nThe thought rolled around in her mind. It certainly would have influenced her decision. Would she have walked away from Matteo and Ricco? She'd certainly walked away from Ricco once before because she didn't like the type of hidden relationship she was being pushed into. She may have walked away from Matteo if she had known what would happen today. It was a lot of responsibility and pressure to be the perfect wife, mother, friend, sister, leader... the synonyms kept building in her mind. She would never be perfect. Who was? Could Maryanne have been perfect with her Donati pedigree, as Salvatore had said during the discussion in the Athenaeum? Could she have been a more valuable member of the Mothers Circle? Would Cat ever be good enough in the eyes of those who doubted her abilities?\n\nThe truth was she didn't even know if she believed that she was good enough. She had been warning Matteo from the beginning that she wasn't. That people would find out about her past and judge him because of her. She worried that she had made a mistake in marrying him. Not because she didn't love him, but because of the type of woman he needed, which was clearly not her after today's events. Had she really threatened the formidable Sonya with forced retirement? If nothing else she needed to confess that to Matteo and Ricco, because she had no doubt there would be fallout from her rashness.\n\nShe had also broken protocol and included all of the younger women in her circle. Even if they left for other tables, there was no reason she couldn't take advantage of their skills and talents while they remained part of this family. All of the cousins had been in the Athenaeum with Matteo, and what harm was there in having more people around her to get to know and find out who she could trust?\n\nOf all of the young women, Aria had surprised Cat the most with her reaction to the announcement. She had looked like she was going to cry when she embraced Cat and thanked her sincerely. The usually arrogant and reserved Aria had become animated and grateful and had stayed by Cat's side throughout the rest of the afternoon. Cat smiled through her tears thinking about that. The crying had been cathartic and had lessened the tension headache significantly as she waited for the tablets to take the rest of the headache away. She sniffled and dabbed at her face with the tissues, trying to minimise the damage before she faced the two men who kept glancing at her through the windows as if to reassure themselves she hadn't disappeared.\n\nAs if reading her mind again, Lisa appeared with a cool, damp face cloth and a small mirror, she stood casually as she might any other time, but Cat realised the woman had blocked Matteo and Ricco's view of her while she cleaned her face. The woman really was a marvel, and Cat knew she would take full advantage of her talents and skills now that she was Mrs. Vitali.\n\n\"Thank you, Lisa. You can let them off the hook and tell them they can come out here now,\" Cat gave a small laugh.\n\n\"As always, it will be my pleasure, Mrs. Vitali,\" Lisa gave a rare grin and hurried back inside. Cat watched as Lisa approached the men and saw them immediately come to their feet and move towards the deck and her. Seeing her in her cosy chair for one, they each sat facing her and looked at her expectantly.\n\n\"You could have warned me!\" she said, gazing at them both, realising that she sounded accusing.\n\n\"We didn't know until we got in there, then I was told to get you, and I assumed Theresa had filled you in!\" Ricco said defensively.\n\n\"She did, in a way, but... How could you not know the role your mother had in this family?\" Cat shook her head.\n\n\"You know the saying 'behind every great man is a great woman'. As far as we knew she was always behind Papa one hundred percent, but always one step behind. Papa was always the face of the power in our family,\" Matteo said thoughtfully. \"It's always been done this way to protect the mothers, and, in a way, us. If anything happened to you my world would fall apart, and that includes the table and family,\" he said, moving forward in his chair and reaching out to hold her hand. \"You are my world. I existed before you, but I didn't truly live.\"\n\n\"Hold that thought,\" Cat said anxiously. \"I broke a lot of protocols today. The worse of which was threatening your Aunt Sonya with early retirement from family duties,\" she blurted as if ripping a band-aid off an open wound.\n\n\"You did what?\" Ricco gasped, as Matteo burst out laughing so hard it took him long minutes to get control again. \"I knew you were brave, but that borders on foolhardy!\"\n\n\"That would explain why Papa looked like thunder when we came out onto the deck,\" Matteo said, his voice strained from holding back his laughter. \"I know that wasn't your garter. Care to tell me why Marina set up such a ruse?\"\n\n\"I'm assuming one of your Aunts took exception to what Sonya said and how I reacted and made the call. She said it was women's business, and the men shouldn't get involved, but she apologised once again and told us that Bruno was in the process of retiring now,\" Cat explained.\n\n\"What did Sonya say that was so bad that Marina interrupted a family gathering like that?\" Ricco frowned.\n\n\"It's been dealt with, and you can't get involved and charge in there to save me like she did. How will I ever have credibility if everyone else fights my battles?\" she asked, feeling weary again and the edge of her headache return. \"Can we just leave it as women's business, please?\"\n\n\"I'd like to know what she said in case Salvatore tries to talk to me about it. I won't interfere with your women's circle, you have my word,\" Matteo said.\n\n\"Mine too,\" Ricco agreed. \"We love you and want to know everything that happened today, not to interfere, but to know what you're dealing with and maybe help with some suggestions about the Aunts and their personalities.\"\n\n\"It wasn't a single thing, it was more...\" Cat considered the whole situation again and started from the beginning. \"When I was with Theresa, before you came and got me, she told me a lot of things about the power of the mother and how she wished she could help me more, but, as a second wife, her journey was different from that of the other mothers. I got the impression that some, not all of your Aunts, were respectful and helpful, and she put up with it because she needed their goodwill in the beginning, and then it was too late to change the way things were,\" She paused and looked at the two men.",
        "\"We weren't exactly model step-children to her either,\" Ricco admitted.\n\n\"She warned me not to be intimidated, that I held all the power. She said it in several different ways, but it always boiled down to the same thing, that I had the power and I shouldn't give it up to anyone else, or the consequences could be devastating, not just for me, but for you both,\" Cat admitted. \"Those words rang in my head when I challenged your Uncles in the Athenaeum to prove themselves to me the way they expected me to prove myself to them. I was sad and mad and terrified in there, and then I went straight into a meeting with your Aunts with everything that had happened buzzing around in my head. Can I just say that Sonya tried to intimidate me before anyone else had said a word?\"\n\n\"I want to know what she said,\" Matteo tried to keep his voice even, despite feeling his temper rise.\n\n\"She asked how my time with the Battaglia was, then she said she knew changes were being made at the Battaglia facility and that it was my fault. She gave the impression to the other women and me that my trial did not go well, and she knew the details of why that was,\" Cat said. \"It was a much longer conversation where she tried to make out that even my basic understanding of the tables and the women's role in the family was lacking, but that's the gist of it. Marina didn't want us to think any worse of my time with them at the facility, so she came to reassure me that Sonya knew nothing and beg forgiveness for yet another misunderstanding.\"\n\n\"So, you stood up to Sonya and told her you would force her to take early retirement?\" Ricco asked.\n\n\"I said that I would miss her wisdom and expertise, but perhaps if she felt she couldn't work with someone obviously so lacking that she should consider early retirement from family duties,\" Cat parroted the words that still rang in her mind. \"She said she would not be retiring. There was a little bit more said, and I basically challenged them the same way I did the men, and then I left and got the women of my circle. They hadn't even invited Maryanne or Kari, who had every right to be there with me. I invited all of the younger women, including your sisters.\"\n\n\"Wow!\" Matteo laughed, \"How did that go down?\"\n\n\"I think Aria is my new best friend, but I doubt Sonya or Angela will be sending us Christmas cards this year,\" Cat shrugged.\n\n\"I can live with that. How about you?\" Matteo turned to Ricco.\n\n\"I don't have a problem with anything she said or did,\" he shrugged easily. \"In fact, I'm quite proud of the way she handled it all. Except...\"\n\n\"Yeah, we need to discuss the whole flirting with Logan issue,\" Matteo said seriously, making her giggle.\n\n\"He is adorable. Come on, you have to admit he's a cutie, the way he is just dying to measure up to his brothers. Sebastian was so judgey of me. Why wouldn't I tell Logan how much I like him?\" she grinned. \"I imagine Lucca would like to beat you two at something one day too, and if being my adorable friend gives Logan a little boost, then why not?\"\n\n\"I'm not sure how much of a boost he'll feel once he realised you alienated his mother and big brother,\" Matteo chuckled.\n\n\"Problems for tomorrow,\" she said, feeling much better now that they knew what had happened. She yawned and stretched. \"I need sleep; it's been a very long day.\"\n\n\"I need sleep too,\" Ricco said, yawning with her. He stood and picked her up in his arms and turned toward the bedroom.\n\n\"I'll be a minute or two,\" Matteo said quietly. He followed them inside and then went to his office.\n\n\"What's he doing now?\" Cat asked curiously.\n\n\"Checking on Vanessa and Mama, no doubt,\" Ricco said. \"He can't help but look after everyone. Even when he was a workaholic, he always found the time to make sure everyone knew he was there for them. He's a good man, your husband, and lucky for us he loves us both.\" He placed her on her feet and bent his head to kiss her properly for the first time in days. \"I've missed this.\"\n\n\"I've missed you too,\" she breathed. \"I was worried when you didn't come home last night.\"\n\n\"It was your wedding night, and I needed to be with Nessa,\" he said softly, beginning to undress her as they spoke quietly. \"We will have our time, but tonight you are tired and emotionally drained, so sleep, my love,\" he guided her into bed and quickly stripped off his remaining clothes before crawling into bed beside her and cradling her in his arms. \"Sleep, we have all the time in the world to be together,\" he murmured in her ear and kissed her neck. He was beyond tired himself, and felt his eyes closing, even as he encouraged her to sleep, safe in his arms.\n\nMatteo slipped into the bed over an hour later, moving close to Cat, who slept soundly in Ricco's arms. He loved them both and felt no jealousy, which continued to surprise him, but somehow, because they had never hidden anything from him about their past or their continued attraction to each other, he didn't feel threatened. He reached out, placing a hand on her thigh, and closed his eyes, content that all was right in his world, as much as it could be tonight.\n\n***** "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "mothers",
        "conflict",
        "family"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-26"
}