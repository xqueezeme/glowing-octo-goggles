{
    "title": "Nightmare Master Pt. 02",
    "pages": [
        "One more content warning :). This part has things like needle play, branding, noncon, heavy pain play, anal sex, and total power exchange. It's still a romance, still Sadist/masochist, and still happily dark. I hope you enjoy and have fun!\n\nNynaeve\n\nAsh dressed me again on Friday and I was in a mentally dark, strange place, one I'd never been to before. These games with him had an odd factor of making me feel like I was discovering a deeper level of force and submission. My cane tracks had mostly faded over the days and the pain was gone by then, although I wished I had it again because it was strangely comforting to be sore like that, to feel clear. It had been a reminder that I could survive that much and that I was a bad little demon masochist.\n\nI didn't feel so demonic anymore when Ash was fixing me with Master's outfit of choice, although it did give me a minor distraction with how gorgeous it made me look. It was another black dress, one that crawled in a lace pattern over my breasts and up my clavicle, although it ended there in a sleeveless cut. The feeling of having my shoulders bare made me feel vulnerable, in some strange way. I glanced back at Ash when he tied it at the back and he smiled at me. \"Pretty little slave bunny. Here. One last touch.\" My ears. He fixed the cute black bunny ears on my head and I had to smile nervously. \"Come on. Let's go and put you out of your misery.\"\n\nMisery was right and the reminder ended the distraction the dress had given me. I was terrified and I strangely didn't know what to do about that fact. I had always been the eager pain lover, the one who could take anything, and I'd never met my match before. I was well freaking aware that I had met it now.\n\nAnd it took for bloody ever to get to his house, with a nice, quiet car ride to dwell on that fact. 45 minutes is a long damned time with enough fear. I looked out the window of Ash's car, feeling like a caged pet, and he kept mostly silent, letting me sit in tortured submission, of a sort. The fear made everything sharper, clearer, in some weird sense. I started when we passed a gate into a neighborhood that made my eyes go wide. \"Ash, why are we here? Why are we passing that gate?\"\n\nHe smiled. \"Because we're almost to his place, why do you think?\"\n\nNo. Oh, dear God, what the hell was this? I was going to a house in a gated community outside of my large city? Why the hell was I doing that? \"This isn't right. I can't do this.\"\n\nHe snorted. \"Why?\"\n\n\"Look around you! The only people who live here are upper fucking class! I'm a broke law school student.\"\n\nAsh's smile was dry. \"Oh, that's the deal breaker for the guy who caned you so hard you bled?\"\n\n\"Yes!\" That was a totally different sphere than kinky games. There was that kind of power exchange and then there was real life power, a fact that was highlighted to me when Ash pulled into a massive house that made my eyes go wide. There was a wrap around driveway inside another security gate and he already had the windows down to buzz us entrance into the house since the day was so breezy for once. I felt on the verge of panic when he parked, and it had nothing to do with the original reason. \"No, seriously, this is messed up. I can't do this. Why the hell is someone like him interested in someone like me when I'm, to reiterate it, a scruffy ass law student, Ash! And why-\"\n\n\"I can think of a few reasons why.\" The voice was soft, but it made me yelp with terror anyway after his \"romantic date\" and I cowered, looking up to where he leaned over the car. He had one hand resting over the top of it and casually rested his head against it to talk down at me.\n\nBut the thing that stunned me was how he wasn't wearing a mask. I stared up at him and you would think that having the outline of his face, along with his hair color, his coal eyes, and his deviant smile would have been enough to brace me for the picture of him in full.\n\nIt wasn't, as it turned out. No, all that had definitely not been enough to give the full effect of how his cruel tendencies seemed to settle in his features in a way that wasn't immediately describable. It was in these little things, like how sharp his features were, how his eyes were framed with a hint of sadistic laughter around the edges. And his hair was stark set against his hairline in this way... \"I can't think of any,\" I finally whispered.\n\nHe stroked a finger across one of my bunny ears and I shuddered in a sense of danger. \"No? Not even one?\"\n\n\"There has to be, like, a million other maso sluts that would be interested in you! Look at you! It can't just be that, it can't.\"\n\nHe smiled. \"There haven't been any as pure as you in my experience. Yours is a gift that I think is special, one that makes it feel like you come with your own built in self torture. You truly hate it... and love that you hate it. It's frightening at times, actually, knowing you won't stop me, that the terrible things I do won't be so much that they prevent you from coming even here for an entire weekend. Beyond that, Honey, there are still other things.\" He paused, then smiled one of those strangely shy smiles. \"I have never wanted a wife or a partner and have always wanted a slave, for instance. A lot of masochists hard enough for what I like aren't into the kinds of 24/7 and absolute control I want. A lot of slaves aren't into the hard torture I like. You're the first that's seemed close to both, believe it or not. I could be wrong, but I'd like to find out and hoped you might want to as well.\"\n\nHe said it so calmly and readily, owning what he was looking for without hiding from it. Torture and total slavery. I shuddered at how easy it was for him to say it, at how calm his voice was. Now that I considered it, there had been only one thing that moved him to any kind of excitement thus far and that was my begging him to stop. That moan above me when I'd told him it hurt and I hated it, though... That had been the thing of my hottest nightmares. \"You haven't been very forceful over the slavery thing so far,\" I finally said softly.\n\nHis smile widened. \"The torture is what most people can't get past and what's ruined the other relationships. I thought I'd try a different approach this time and start with it... but I promise that the slavery is a total thing for me.\"\n\nI shivered. \"Oh, no, you mean it. I'm an approach for a relationship, aren't I? That's where this is headed and it isn't some game for you now, is it?\"\n\nHe stroked a finger across my collar charm. \"It was a game, actually. Now, it's not.\" He paused, then added. \"In the sense of a relationship, I should warn you that the slavery part has never been a game for me. It's my life. I feel as if it was a mistake getting married the last time and it's not something I would want to try again. I come with a collar and not a ring, not again. There is no wedding with me, no equal footing, no ceremonies.\" He paused. \"That being said, I've thought for long hours over ways I could give a slave a kind of security in things like finances, for instance, if they did want out. But no more of that specific kind of security. It confuses my partners and it wouldn't be like that.\"\n\nYou know, I had to appreciate the way he said all that too, outright and forthcoming, with no pretenses. But there was more to it as well. That real form of stark terror from his romance before solidified into something rather transcendent in nature with the knowledge that he was interested in me. I had a feeling that couldn't mean good things for my weekend, that this would be a trial of some kind. I stared up at him and knew I was going to hate this, knew he was going to make my life a nightmare. Everything from his soft, direct smile to the way he waited for me to reply said so.\n\n\"Why me?\"\n\n\"Because of how you make me feel,\" he answered quietly and, again, it was direct, no hiding. \"I've spent nights hating myself sometimes. And then you come along, little rabbit, and you have the kind of extreme, dark masochism that I could condition into something truly twisted... and your masochism loves that thought, too.\" He stroked down my hair, his eyes both adoring and terrifying. \"And you're so happy anyway, even with those awful, dark lusts. You ride the adrenaline wave so recklessly and you love it. It makes me happy in a way I would like a little more of in my day to day life.\"\n\nHoly shit. He meant it. I stared up at him, thinking that logic through, wondering at how he made me feel, if it was something I'd want in my day to day life. Because, now that I considered it, that was the best reason to want to date someone that I'd ever heard in my life. I thought of sitting at his knees, thought of how stable he was, how he so calmly let me chatter myself out over the silliest obsessions, how he listened with quiet attention that eventually calmed me, how he gave me the darkest thrill rushes I'd ever had even with that calmness and how it seemed to balance my hyperactivity out somehow. And the answer was yes. I did like how he made me feel.\n\nI liked it an awful lot, even if I hated the things he did, even if that was the point of some of the things he did. Because he got it. He got me. He understood. \"I don't know what to say.\"\n\nHe laughed softly. \"I assure you that you don't have to. You're all on the surface, Honey, and an easy enough read.\" He lowered the hand that rested on top of the car, showing me the red rose he held. \"Come and play with me?\"\n\nI looked back to Ash, who merely waited, and he shrugged at me as if to say, \"Your choice.\" And then I looked up behind Master at the massive house behind him. \"Er. One last thing before that.\" Master nodded me to go on and I burst out, \"What the fuck do you do that you live here?\"\n\nHe laughed. \"Perhaps it would comfort you to hear it from Ash.\"\n\nI turned around and Ash gave me a dry stare. \"He's a partner in Ballistics Weapon Designing. Er. He helped build it from the ground up actually. And now...\" He gestured. \"From my understanding, they're reliable for firearm exports and they're all over the cutting edge research and development.\"\n\nI looked up at him, whispering, \"Woah.\"\n\nTo which, he opened my passenger door and held out his hand. For a long moment, I just stared at it, trying to process what I was getting ready to do, thinking, This is such a bad idea, even while I had a mental image of an angel falling from grace. And then I took his hand. He turned around with me one more time and that time Ash was staring at him with a hard look. Whatever it meant, Master didn't give anything away. He stayed quiet and waved, holding me to his side with one protective - caging - hand around my waist. I followed where he led, in a state of shock, and he guided me up the path, through the front door while I wondered at the pins and needles sensation that was crawling up my legs. My God, it was like riding a roller coaster.\n\nI wasn't even on the fucking coaster yet. Fear was this thing alive and I think I really appreciated him the most in that moment, for how he was. Because I'd had things like a caning before so it wasn't always what he did. It was the way he did them. Right then, for instance, he stopped me in the doorway and tilted my head up to look at him, his thumb soft on my jaw. And the action wouldn't have been so damned arousing if he hadn't had such blatant force and violence as a shadow presence even in those smallest gestures. Whatever he saw made him smile wryly. \"I was going to offer to show you around, but you wouldn't take it in at all right now. Instead of that, then, you'll have to forgive me for how bad of a host and Master this makes me. But let's give you some mercy and put you out of your misery.\"\n\nIt actually took him guiding me through the dungeon door before I realized what he was talking about, and then I felt like an idiot. And it wasn't even really a dungeon.\n\nIt was a motherfucking torture chamber. And I had thought it would be bad, but he blew my world apart within ten minutes. Because it was spectacularly, wonderfully, beautifully horrible.\n\n\u2014\u2014\u2014\u2014\n\nI shifted, in a strangely almost comfortable rack and stock setup. He'd started with the bondage and, like before, it was the kind of bondage that didn't care about my willing submission, the kind that drove me the most wild. A kind of slat setup held me cradled beneath my waist so that I was bent forward over it, tied down with a harness wrapped around my waist and, once again, that harness held an inflated toy in my ass. This time, it had a strange second tube beside the inflation pump and he had fed that into an IV stand, something that made me truly horrified until I realized it was empty and nothing was actually being fed into my bowels. The headfuck of it merely amused him enough for him to leave it there, so that I shivered in terror whenever the tube brushed against my ass with my shifting, with the thought that I was rendered so helpless that he could fill my bowels with whatever he wanted through that IV, if he desired to torture me like that. It gave me a twisted, whimpering gratitude with every second that he didn't use it, even with everything else that he did.\n\nBut beyond that my torso was left bare, my head and wrists locked in a wide stock. Even stranger was the stirrups that held my knees apart in cradles, safe in my bent position. It was far kinder than I'd expected of his bondage when he could have made me truly uncomfortable.\n\nI didn't trust it and I was right to not trust it. I stared down at the slats that held me, where my tits were left free for him to... have his fun with. Cold sweat on the small of my back still made me shiver. He'd been so calm and icy, even while his eyes blazed with that excitement, when he came back with wide eyed forceps and clamped the base of my nipples with them. When he'd turned around with the small metal hammer like thing and the massive hollow point needle, I'd finally broken and begged. \"No, please!\"\n\nAnd he'd smiled, only to twistedly kiss my cheek where the tears had started, then held up the hollow point for me to see it better, to see how it formed a kind of eye screw that would close the metal into a strange piercing, although not one intended to be worn for a long period of time. I couldn't seem to close my eyes when he positioned it with the eye of the forceps and I stared down, in a kind of horror, beneath the stocks in my limited view. I could just see enough for him to abruptly shift with that small metal, barbaric hammer, and then it hit.\n\nThere's this roller coaster called the Top Thrill Dragster and the way it works, the train stops at a stop light and it waits there at the bottom of a 420 foot incline and drop. Then the light goes red, yellow, and once it hits green, the train goes from 0 to 120 mph in 4 fucking seconds. When the hammer hit the massive needle through my nipple, the pain slammed through me sharp and hard, and then it felt like the adrenaline throttled like that roller coaster, except in one second, instead of four.\n\nThe end result was that I gave an erotic scream of horror and then couldn't stop a mad laugh of shock at just how sharp the pain was. He watched me, with a pleased smile at what he obviously considered such a fulfilling reaction, while he went to work on the other nipple, giving it the same attention - to the sound of another scream and laugh - before he fixed the eye screws on both and removed the forceps. That's when he paused to stroke a finger down my cheek. \"See how much fun I can be? Let's make it more fun.\" And that had just been his bondage.\n\nHell or heaven, I couldn't tell what I was in anymore. I shifted in the stocks again and then moaned when he came back with the hooks... and containers. Once again, it was deliberately barbaric, and he stroked one of the hooks down my cheek while I quivered in dread. \"Please, don't, please...\" Except the words were breathless and weak and there wasn't any real protest anymore. I was riding one hell of a wave still, one that turned the pain into something truly wild.\n\n\"How cute. I think I will.\" And the hooks he hung at the pierced eye screws were heavy, but they weren't all that bad. Even the containers he hung from those weren't overly terrible, but I got the gist of it, that this wasn't where this ended.\n\nAnd it wasn't. It got bad when he came back with water. He laughed in excitement when I whined in dread, tears flowing down my cheeks, and he set the water to the side to tug the weird containers instead so that I yelped when his yanking sent shots of pain up through my breasts. Which sounds terrible in those words and it was terrible. But it was the weirdest kind of terrible, after that flood of adrenaline, that sharp shock to my system. I squeaked with his tugs, but couldn't keep from smiling either. I even shook my head to try to get the expression from my face, knowing it would only entice him and his sadism, but I just couldn't get rid of it. God, my tits felt maimed and it hurt so bad and I couldn't stop that damned smile. He stopped to caress my cheek, his thumb brushing the tears beneath my eyes, and he lifted the water with his other hand, soothing me with his strange brand of condescending shushes. \"Take deep breaths. I know, it's so awful of me, isn't it? We'll go nice and slow with the weight since I'm feeling so nice today. I could be so mean and use some of the largest weights on the hooks. Be a polite little pain slave and say, 'Thank you, Master, for going slow'.\"\n\nHe was awful! The worst! We both knew that was such bullshit. He was going slow so he could enjoy every quiver of agony I gave him and he knew that the sudden bursts of weight would be better with another sharp shock to overload me, damn him. It made me moan from how his words drowned me in a flood of submission, even while I was flying on the wings of adrenaline, this wild ride mix that made me burn alive until all that was left was a freed, hurting, horny little slave bunny. I bowed my head and breathed the words eagerly. \"Thank you, Master, for going slow.\"\n\n\"Good girl.\" His words were a coo of pure ecstatic delight and I shuddered at how much he took joy in breaking me. He lifted my face again with a thumb under my jaw, forcing me to look at him, and I started shaking. Jesus, that smile, the way his eyes blazed. He leaned closer, flicking his tongue out to lick my lips and I pant with a hunger I didn't know I was capable of. \"Are you a little filthy rape bunny?\" His hand tightened around my jaw and I couldn't keep from a breathless laugh of fear.\n\n\"Yes, Master.\" It came out a whisper and he smiled back, abruptly snapping his teeth at me so I shrieked and he laughed at the response.\n\n\"If I stroked up your cunt, would you be drenched from this, from me torturing you?\" That time he slapped my cheek when I hesitated, a light little sting that made me thrilled.\n\n\"Yes!\"\n\nHis laughter was wicked where he crouched in front of me and he lifted the pitcher of water, letting it pour out slowly into the weird container pierced to my nipple, making it slowly, but surely, heavier... and heavier. \"Then you probably want more pain.\"\n\nHe held my gaze and watched while he poured more weight so that my breasts started to tug downward in something that made me cry all the harder and then he poured more... and more...\n\nAnd even after that he still wasn't done. He left me with the hellish weight on my tits and paced around behind me to where my pussy felt suddenly very exposed. He stroked the IV tube to the side, reminding me of its presence so that I shuddered, and, sure enough, he walked away to grab two sets of clover clamps. \"You liked these so much last time that it seems like such a good idea to splay you open with them again.\" I had to grit my teeth when he went to work, clamping me the exact same way he had last time and by that time, I lifted my head back as best I could and my eyes rolled back in the darkest ecstasy. My lips parted when he tugged the pussy clamps apart, yanking on the chain just to be mean and cause me pain.",
        "\"Master! Wait, I-!\"\n\nHe heard it in my voice and he responded viciously, by tugging the clover clamps wide apart, stretching my lips open torturously so that he could lean forward and spit against my slit and it was enough. I shrieked in the strangest sensation of a release that wasn't quite the usual release. It wasn't exactly an orgasm or at least I don't think it was, but it was an apotheosis, an apex, when the thrill reached its darkest bliss and I thrashed as best I could in my strict bondage and with pitchers of water hanging from my tits, distending them. I shrieked again when he spanked me, dead center of my pussy. \"How sexy. It's okay, we won't count those as breaking your orgasm rules. You can have as much release from the torture as you can manage to find. Maybe it will give you comfort and help you endure more for me. Speaking of which, when your tits are so stretched out like that, it looks fucking obscene, little rabbit. It kind of makes me want to pull these cunt lips of yours wide and stretch them sometime, with hooks hammered through the lips, perhaps, and connected to chains that we can tighten when you're bad. Maybe later for that one, though, because I truly can't resist giving your tits more punishment when the flesh is just so spread and ready for it.\" I shuddered when he walked around me, when I saw him thumbing the handle of a short whip, and he didn't immediately come back to me. He started music first, playful hard rock that made a sinful pulse in the background, and then he lifted a mask from a wall of different ones, turning around to wink when he placed it to his face. \"I'm feeling this one. Let's make it romantic too, while we're at it.\"\n\nHe snapped his teeth playfully close to my face again, then laughed when I yelped and jarred against my stocks, and then he laughed harder when he swung the whip, flicking it against my already tortured tits so that I shouted. His atmosphere changed, as if weights were lifted from his shoulders. He was still so dark, yeah, but he was more like a playful god than ever. Which might sound strange, but...\n\nYou see, he let himself loose, let more violence course through his actions than he ever had. He whipped my tits again... and then lightly slapped my cheek, so that my lips parted and he could thrust his fingers into my mouth, only to quickly pull away again and flick his whip. Savagery danced in his eyes, at odds with that other, Mastery version of him I knew, and it sank in what this was, what was happening. Holy shit.\n\nBecause I'd never felt more safe to be an extreme maso in my life, had never felt more free to cut loose and ride the terrible, pulsing waves of evil adrenaline sending a dark variant of pleasure to make my pussy a drenched mess. But it sank in that he felt the same way, the exact same way. This was him. This was who he was in the same way that it was who I was. He stood taller, he smiled easier, he practically danced with grace when he cut the whip to hurt me more, and when he spoke, his voice was a sensual purr, even while he tugged the water hanging from my tits again to make me yelp while he laughed. \"What a sick fucking pain slut.\"\n\nI didn't even realize I was smiling up at him until he knelt and stroked my lips, then stroked up to where tears were in my eyes, and yes, there were those as well. He delicately brushed them with his thumb before raising it to his lips and licking it up. \"Evil, sadistic demon,\" I whispered back, in the strangest headspace. I'd never felt that level of emotional connection before, never. I felt charged, but my voice was breathy and respectful too, a flirting kind that I thought might please him, and it made me delighted when he did show pleasure at the words. I was somewhere dark, where the rest of the world didn't matter. There was only him and me.\n\nAnd a world of pain. He stood back up. \"I can't deny that.\" And he struck the whip again. And I flew.\n\n\u2014\u2014\u2014\u2014\n\nSeth\n\nI never wanted her to leave. I had an evil game in mind for her time with me, something that would fuck with her head enough to make for a decent slavery proposal to a masochist of her caliber, but when I finally reached the end of our pain game together, it sank in really and truly that I had to make this good. I had to because, you see, I'd met my match.\n\nIt seemed an impossibility that I would find that with how dark I ran, but she almost topped even me. She never called it quits and even in my dungeon, with no safewords and in a torture fueled, rape fantasy hellscape, there were ways to make it clear to me that I could go no farther. Every single time I would get concerned with how brutal I was being, I would stare into her eyes... and she flirted with me. When I went to her breasts with the talon knives, she lifted her face up, hair matted with sweat from what she was suffering to please me, and her eyes were glazed. Her eyelids fluttered for a moment and she breathily whispered, \"Please don't make me bleed any more.\"\n\nIf I hadn't already been impossibly hard, I would have gotten worse. I thrust my fingers between her lips, pulsing with violence and for the first time in my life, I felt like I could let it flow. \"Look at me.\" It came out a growling mix of lust and threatening sadism, which only intensified with how she obediently met my gaze, her lips curving up in one of those unwilling smiles of hers. \"I'm Master, yes?\" She nodded, eyes glittering with a mix of tears and so much adoration that it hurt my chest. \"Then they're my tits to hurt and I'll draw whatever blood I fucking feel like.\" She moaned around my fingers, sucking, when I drew the talon knife in the smallest of cuts. It wouldn't scar, but it caused enough pain and it satisfied my violence in a deepest way. \n\nThere was no one like her. She was the ultimate masochistic goddess of my dreams brought to life, the likes of which I never would have imagined could be made real. It was a form of romantic magic to me, that she should be able to exist the way she was, and I did mean magic. Because it felt like her beautiful existence went against the laws of nature and evolution. She was a flaunt against self preservation, for God's sake. I wanted to hurt her forever.\n\nAnd I wanted to protect her against any who would abuse that quality in mindless ways. It seemed a sick thought to me that someone would ever recklessly hurt her when every whip stripe should be given to her with deliberation and love. It was I who had to say that it was enough and it was so clear that it was enough for both of us. For her part, she started to look up at me with the most subdued eyes, her protests turned quiet with a kind of serene satisfaction. Although, it was crystal clear that she would keep taking the whip to please me if I wasn't done.\n\nFor my part, my violence was racing to a pinnacle and it was at its end. She came back alive under me when I finally paced around her and released the toy in her ass, taking it out along with the IV tubing I hadn't used, before I unzipped myself and kicked off my jeans. \"No!\" She yelped it and I laughed. \"No, please, don't, I can't take that, too!\"\n\n\"Such a fucking flirt even after all that.\" The only thing that was going to make this last a satisfactory amount of time was the amount of control I exercised, since I favored hurting her more over getting my release, but by that time, it wasn't nearly as favored as when I'd started. I hadn't thought about it with the amount of fun I'd been having with her, but the bubble of pleasure and pressure in my balls was fucking painful. The hard fact of my life was that violence and control flat did it for me. \"Can't take what? Can't take this?\" Poor little Honey bunny. I didn't give her anymore lubricant than what I'd used when I stuffed her with the toy. She yelped when I forced down inside of her, while her hole was still twitching, while it quivered in its efforts to recover from the removal of the inflated toy.\n\n\"Yes! Please stop, it hurts so bad and I hate it like that, please don't!\" I closed my eyes, unable to fully bite back the groan from how hot it made me to hear her say it. Even better was how her asshole squeezed around me with her pathetic attempt to fight me.\n\n\"It seems like you're taking it just fine. Let it happen. We're almost done.\" I couldn't stop the smile of pleasure from how much I enjoyed those words, from how cruel they were when she'd already suffered so much, where there were still gallon containers of water torturing her tits. I slapped her thigh for some release of lingering ferocity, just for the outlet, and she yelped. \"That's it. There's a good little maso slut.\" I thrust inside of her, in a brutal pace, just to hear her whine in protest. \"Poor little rape bunny. It's so sad how much you need it to hurt, isn't it? But it's okay. Master has you and I know what you need, even when you fight me. You'd better learn how to orgasm from these assfuckings alone or you won't find much release in my dungeon.\" She was panting, soft little animal whines that made me feel fucking feral. I quickened my pace, lips parting for a moment with how hot of a visual it made where I pumped inside of her asshole. She writhed in her tight bondage as best she could and I thrilled all the harder, suddenly realizing how goddamn close she was... \"Oh, you already can.\" I slapped her thigh again, hard, feeding her more pain. \"Show me. Show me how much of a little liar you are about how much you hate a thick, hard cock railing your slutty little asshole-\" I laughed, not even finishing the last word by the time she screamed the dungeon walls down, grabbing hold of that wicked wave and riding it for all it gave her.\n\nIt threw me outside of the bounds of my control. Her orgasm was the kind of thing you only dreamed about being part of. Her ass squeezed me so hard with the force of it that I choked with how it almost hurt. Her body went just as tight and I felt her cum squirt out of her against my thigh, enough that it made me laugh again, breathlessly when I pulsed my own release.\n\nShe went limp at the end, with only soft little whimpers and spasms of her body. I had to take a moment to breathe, to collect myself so I could take care of both of us, with how hard the blood was still pounding through my ears. I had never felt so sated after a session in my life, so replete and calmed and soothed to the depths of my being.\n\nCare. I needed to take care. When my little victim was one I wanted to entice back to my arms for me to feed on her body and pain like this over and over again, it was a basic logic that I needed to take care of her. I felt like a vampire, offered a supply of limitless blood so complete that I'd never need another again, so long as I nurtured this little donor. God, I wanted to dress her in diamonds and lace and ribbons. I wanted to adorn her until she glittered with so much beauty that no one who looked at her would ever wonder if she was taken care of. I'd keep her in evening ballet dresses and caress my hand up her thigh as often as I could to feel the marks I left on her body.\n\n\"Honey.\" I had already taken the clover clamps off of her. The first thing was those containers of water. I gently unhooked them, watching her. \"You still with me?\"\n\nShe made a low purr of a sound, one that made me smile. \"Uh uh.\"\n\nI worked in a methodical circle, tracing my fingers over all the wounds I'd left on her, making sure none of them were lasting. The holes through her nipples were large and tortured, but I was always careful with these things, making sure I didn't rip or tear, placing my bases where they could handle the weight I added. She whimpered softly when I stroked those grotesque, stretched little holes, and I smiled with how she met my eyes. \"Here, let me help you up and you can see for yourself.\" She moaned again and I worked through her bondage next, cleaning up.\n\nShe fell at my knees, weak, when I got her up, and then she looked down when I lifted one breast. She almost seemed afraid to touch it and then moaned again when she did feel the wounds there. \"Oh, my God.\" Shudders wracked her body. \"I just... oh, my God.\"\n\n\"Honey bunny, look at me.\" She seemed to have to focus to obey that, her head heavy, and she looked up at me through glazed eyes, mouthing her words again, blinking slowly. \"Hey, there.\"\n\nA tear streaked down her cheek. \"So bad. You're so bad.\"\n\nConcern made me wary and I stroked that tear away, wondering if it was one I would like the taste of or if it was one of the other kind, those tears I despised. \"A bad demon,\" I answered, touching her nose.\n\nHer tears thickened. \"It's the kind of thing you only see in videos and never e-expect to find in real life. It's... it's...\"\n\n\"It's what, little rabbit?\"\n\n\"It's the kind of thing that doesn't even have a lot of videos and you only ever think that only one person in the whole world would actually do it and not just talk about it or fantasize and- and - and that one person goes by the name of Master, I don't know, Viper or something and you're never going to get to meet him. And you wish forever and so badly that you could just see someone like that so you can let them know how wonderful they are, knowing you'll never get lucky enough to ever get his attention to play with you like that, ever! But you're one of those, one of the dreamy ones who have the gall to do it and you know how! You're like a unicorn!\" She was crying and I blinked, then couldn't stop a shy smile. Dreamy, me? \"You know how and you like me for some reason and you get me and it's the kind of thing you never expect to ever have come true!\"\n\nI crouched over her, covering her with my body to better cuddle my adorable little bunny, imagining myself as that dragon coiling over her again. Dragons were much larger than little rabbits and they had long scale covered tails to wrap around the little fluffy creatures, ones that ensured nothing would harm them. She nuzzled me, like a rabbit quivering its nose up at its big, bad dragon captor.\n\nOh, I was done for, with the way thoughts like those kept getting more elaborate. I cooed over her before I could stop myself, kissing her hair. \"Pretty, pretty Honey. I'm glad you're pleased.\" I smiled. \"I am, too, and-\" I paused to touch her nose, winking. \"I have so many more demon games to play with you.\" She giggled breathlessly and tried to lift up to hug me better, but of course she couldn't quite just then. Too much adrenaline ride. I stroked her. \"No, none of that. Be still for Master to hold. I like having you close, you see, and you don't want to be a bad little bunny and mess up my aftercare and cuddle time, do you?\"\n\n\"No, Master.\" She went still after that and my control was as satisfied as my sadism, the two finally in a place of fitting balance. And this time, I didn't have to leave her side until I damn well felt like it, which was not any time the rest of that night. I carried her to my rooms and bathroom for a warm slave's bath.\n\nBy that, of course, I mean that I bathed her, sitting on the side of the tub to stroke a loofa over her skin. And all the while, my little rabbit chattered up at me. I was beginning to realize that if I chose a topic for her, she would give me her excitement for an entire monologue. That night, I started it with the quiet question, \"What are your top five movies of all time?\"\n\nAnd she started. \"Oh, that's hard! Okay. One of them definitely has to be a representation for fantasy movies, so I think that has to be Return of the King, has to, and there has to be a sci-fi one, so we'll go with Empire Strikes Back because there's all bad guys, nobody ends on a high note at the end of the movie, and there's no stupid teddy bears with rocks.\"\n\nI smiled when she paused to wet her hair at my soft command, then rubbed water out of her eyes while I gently massaged her scalp, brushing shampoo through her locks. \"Of course. The Ewoks are obviously a hit against the sixth one, critically speaking.\"\n\n\"Exactly! They were just to sell toys!\"\n\n\"Ah. Most definitely infuriating.\"\n\nShe giggled and kept going because one had to be a horror movie representation but that one was tough for her to choose, so she had to space them out and go through it with a brand of insane logic. I felt so much that night, calmly guiding her through her wild thoughts and obsessive answers. I felt at peace, accepted, calm, soothed to my sadistic edges, in a level of control I wouldn't dare hope for before that. I felt as if this was one of the best possible versions of who I could be as a person in that moment.\n\nBut mostly, I felt like a very happy Master with a very beautiful, well whipped and tortured slave. Now, how to make the fantasy come true. There was a form of romance in what I wanted to do, in the sense that any man might hope his proposal would be grand enough to fit his beloved. Of course, I had worries after that as well. It wasn't enough to just earn her in that way. I had to keep her, too. I lost myself in thought when I dried her hair, since the dryer was too loud for her to speak over. And once I was done with it, she yawned at my knees, her eyelids turning heavy when she looked up at me, so that I had to smile. It was amazing to me that she had the endurance to stay in the land of the living after what I'd put her through for one night. \"Come on.\" I grasped her collar by the back of it, enjoying the way she looked in the little slave's negligee I had dressed her in, thrilling to how she padded along beside me so obediently. Soft little rabbit. \"In.\" She stared up at me with such a forlorn gaze when I tapped the iron cage. \"No. Later, you might be allowed to sleep with Master, but I will not start on that precedent. When you prove to me that you think like my slave, maybe. For now, in.\"\n\nNot that I didn't want her in my arms. But she had already pointed out how we started with masochism and I hadn't enforced the slavery aspect all that much. It was in large amounts due to the fact that I hadn't had her in a position to start the routines. Now that I did have her in my house, I fully intended to. Her eyes turned guilty, something that made me tilt my head curiously, and she hugged my knees, kissing my jeans in the way I'd shown her she could kiss her Master. \"Yes, sir. I'm sorry. I didn't mean to make you be mean or anything like that.\"\n\nI smiled wryly, understanding. \"Little rabbit, if I had a problem with saying no and being strict enough to enforce my own rules and dynamics, I would not be a Master.\"\n\nHer eyes lit up happily and she nuzzled me one last time before she crawled into the cage for me to lock it. \"Night, night, Master.\"\n\nI turned, lifting an eyebrow while I changed beside my bed. \"Ridiculous girl, I'm not going anywhere. You say that as if you're being forced to sleep in an entirely different house.\"\n\nShe giggled, a sweet image in her blankets, and I'd had the cage ready for days. For a few moments she touched the heavy bars, as cruel and unforgiving as my dungeon. And then she looked down at the bedding I'd used to soften that. Then, even while I watched, she collapsed into the blankets. \"Get some sleep,\" I finally said softly, with one last flare of sadism. \"I have you for another day and a half to take my fill and I didn't get to torture your pussy as much as I'd like.\"\n\nA low moan made me smile and I turned off the light. It was a moment that made me realize how I needed to enforce the slavery aspect sooner rather than later, if she'd agree to it. Because I realized within about five minutes that I would have been asleep already if I'd had her cradled in my arms, where I could have stroked the marks of torment I'd left on her, where I could have gently caressed her breasts and pet her while she slept.\n\nI'll be damned. So that was what it felt like to be cut by my own wishes when I had to have the control to enforce them. I had experienced forms of my own denial before in favor of control, but how fascinating that I would become suddenly so much more aware of the torment in it when she was involved, when I had always favored the self control. I comforted myself by thinking of a better collar for her if this went as I wanted it to. It had to be an obvious collar, not a discreet one, something she could enjoy for her masochistic humiliation every day. Although, it had to be careful too, so she could get away with wearing it every day. I fell asleep when I heard deep, even, sleepy rabbit breathing from the cage against the wall.",
        "\u2014\u2014\u2014\u2014\n\n\"Pain was always something I had a dark fascination with.\" Honey shuddered, tied to the table setup I had in my dungeon. I had to confess, too, that I far preferred my table to Sulfur's, not that there was anything wrong with Ash's choices. They just weren't mine, weren't in my home. My table was harder and uncomfortable, deliberately so.\n\nI had her tied spread eagle on her stomach after breakfast together. Of course, for that, I'd had her on her knees at my dining room table, and I'd used a riding crop for encouragement while she sat at my feet and ate and drank from her dog bowls. And at the end I'd fed her a mouthful of my cum when I'd been so aroused from the thought of having her as mine.\n\nBut for the dungeon morning session, I'd chosen a nice, easy torment, as opposed to one that would end in our frantic rape game fucking. \"Oh, M-master? How come?\" She stuttered when I pierced another play piercing needle through her back.\n\nI hadn't expected to enjoy this session as much as I was. I actually just meant for a morning wake up one and it was working for that, but oh, was it a nice wake up. My God, it'd been ages since I'd had a vacation and this one was turning into the most fucking perfect one I'd ever had. Of course, there was always that crowd of people who would crucify me for what I considered relaxation. I positioned another play piercing needle in Honey's back and pressed it through, enjoying the way her skin shivered around the pierce, the way she reacted to the small sensation. It wasn't entirely random either, as I had an end design in mind. \"Mhmm. There's so many different types and then there's the way people react to each one. I've had masochists who turn more quiet under the pain, ones that sink into it and bow all the harder for it. All of them seemed to be opened up with the sensation, made hollow. It gives them a form of peace. And then, of course, there's you...\"\n\nShe gave me a breathless little sound when I pierced another one through. The play piercing kit didn't have a high enough gauge of needle to be overly terrible, but there were a lot of them in my kits and my design was intricate. It came to a blend of sharp pain in a continuous, over and over fashion. \"Which one am I?\"\n\n\"All of them. None of them. I'm not sure. You're... something special.\" I thrilled to the romantic vision of being a torturer talking with his little victim. It gave me a rush to consider how she was forced prone and tethered, naked and stretched out for me to play with. \"You bow lower even while you get more bold and flirt harder with me, as if the pain makes you forget to be so shy about your kinks. You smile up at me even while your eyes get that emptiness... but it's not emotional masochism for you. It's almost like, for you, the pain and force hollows you out until you're peaceful and happy.\" I cleaned up where she bled a little, using gauze and carefully avoiding getting the drops on my black talc gloves. I kept the needle hub colors methodically, carefully separated, soothed by that separation, using different colors for different concentric circles so that the design was nice and organized. Pink formed lines at her shoulder blades for instance, while blue was at her lower back. The design wasn't something immediately obvious, but I could see parts of what it would be when I added the final touches.\n\n\"You're s-something special, too, Master.\" She breathed deep and even and I stroked a palm over her ass in rewarding encouragement, soothing over a belt harness that held inflated dildos in her pussy and ass so that she arched. \"Other Doms-\" She cut off, tilting her head to glance up at me with an abrupt fear that made me smile while I pierced another needle through her, wearing one of the half demon masks.\n\n\"Other Doms were jealous types, I take it, in addition to whatever you were about to say.\"\n\nShe smiled shyly. \"Well, yes and no. I mean more so in the way that- ouch- in the way that most people don't like hearing about past things.\" She grinned up at me. \"You're scary. I don't want to make you angry.\"\n\nI chuckled at that, prepping another needle. \"Fair enough, but I can promise that my past experiences were such that I'm well aware of the extreme side of things I'm on. For someone like you, I'm fairly secure in the fact that I'm unique enough to have your attention. Be respectful and you'll find me a lenient Master. Believe it or not...\" I paused to touch her rabbit nose, winking. \"I'm even patient.\"\n\nShe laughed and her eyes were warm, turning glazed when I pierced another needle through her. \"Yes, Master. I was going to say... going to say that others would play games where they'd want their sub to stand still on their own instead of being tied down. Because it's harder for the submissive.\"\n\nI laughed. \"And they want little slaves and subs to behave on their own. I think I can guess where this is going.\"\n\nHoney giggled. \"Oh, you can? Ouch.\"\n\n\"Aww, how cute when you say it so pathetically like that.\" I used gauze to clean her, then carried on. \"And yes, I can. I know the games and I know the variations. I'll admit it's enjoyable to see a little sub try so hard to suffer in stillness, only to fail and cry when punishment comes. I prefer a different kind of game, though.\"\n\nShe giggled, then gasped with another needle. \"You like it when I struggle and can't get away, when I scrabble at the stocks and I'm forced to take more weight and I'm begging and crying and it's real submission how there's no one coming to save me from you when you're so big and mean and bad.\"\n\nI laughed at the dreamy look in her eyes, even with what I was doing. \"I think that's what you like, little maso slut.\" But then I winked at her sheepish smile. \"But yes, that's part of it. The other part is I prefer a lot of torture and pain and it's better for me to walk a line of caution and tether you so you don't hurt yourself with your mad laughter and excitement. We're about 90% done.\"\n\nHer back was an intricately colorful design and she moaned in a satisfying way with the knowledge. \"Yes, Master. W-will you tell me what it will be like to be your slave?\"\n\nI smiled, working, taking a guess at what she probably wanted to hear. \"Painful. Awful.\"\n\nShe shuddered and sighed happily. \"That's not what I mean. I mean that you said I could maybe sleep with you one day when I think like your slave.\"\n\n\"Ah.\" I stroked a hand between her legs, smiling with how strongly she smelled like cum, and she gasped when the action pressed the toys inside of her. \"Is that the thoughts making you so horny for the moment? Since you're being such a good pain bunny, I'll play along. I feel like you already know what I mean, since you're such good friends with Pet, though. When you get used to the routine of eating at my knees, for instance, and when you understand to blow me when I take you by the collar a certain way, I think you'll know. For right now, you're not used to my routines or what that collar means. Some of those are things I haven't decided on yet.\" Oh, she definitely enjoyed this conversation, so much that I found it promising for asking her for a relationship at the end of our time together. \"I haven't had a playmate before so open and resilient to heavy pain play. I know that I want a routine of it. So, for an instance of my decisions still in the works, I know that I would like days set aside for tit torture fun, something like a day every week or two, depending on how hard I play.\" I leaned over her to caress her cheek, whispering in her ear. \"That way you can anticipate when it happens and dread it all the more.\"\n\nShe whimpered and then giggled breathlessly. \"You're so mean.\"\n\n\"I've said it before, but I'll repeat it. God help us both that you like me that way. But there's day to day routines I want you to have as well. Reinforcement, that kind of thing. Most of these have a lot to do with my taking care of you for both our sakes. I'd lose my mind if I couldn't have you under control enough to satisfy that part of me.\"\n\nShe sighed under a needle, eyes fluttering closed. \"So dreamy and mean and Master-ish...\"\n\nI smiled wryly. \"Master-ish. Wow. I was going to say there's other sides to it as well, parts that have to do with you pleasing me, since-\"\n\nShe squeaked happily. \"Like a good little slave!\"\n\n\"Since you like approval and structure in the way most submissives do,\" I finished, touching her nose again.\n\n\"I do, though! Ouch...\" She settled under the pain when the excitement tried to rise in her that time, I noticed. \"It makes me feel all warm and fuzzy and happy.\"\n\n\"Oh? In the way that seeing a cute little bunny might, for instance?\"\n\nShe grinned up at me, eyes glazed by then. Continual, over and over pain did her well. \"Are you saying I make you feel all warm and fuzzy?\"\n\n\"No, I'm saying bunnies do in general. Are you claiming to be one of those?\"\n\n\"Yes. I'm a rape bunny.\"\n\nI stood up, placing the last needle. \"I see. Then you probably don't want things to feel very good.\" I placed the forceps for the finishing touches and she squealed in fear.\n\n\"No! No, what are you doing? Please don't, please!\"\n\n\"Quiet. Take what you know you deserve.\" Every time. That dark excitement felt almost choking with the sound of her begging, with the feel of denying it. Forceps meant more pain for her. Because forceps came with piercings of a higher caliber than I'd been giving her with my play piercing kits. For instance, 8 gauge fish hooks. I stabbed one through and she yelped, turning tearful, while I calmed to the sight of her blood pooling up. I gauzed it neatly and did the other side, prepping, then setting, then... piercing...\n\nShe whimpered. \"Please. Please, are there any more?\"\n\n\"There will be if you don't hush. Stop being a whiney rabbit and take what you're given.\"\n\n\"Yes, Master, I'm sorry.\"\n\nI smiled, stroking and soothing her. \"Don't be. I like your protesting, but let's clarify a rule for it right now. I won't have a conflicted little slave uncertain of when I want her to struggle me and when I want her to cooperate. Struggle all you like until I say to hush. It turns me on.\"\n\nShe made a low sound that I'd never forget, equal parts fear and gratitude, fiery arousal and submission. \"Yes, Master, thank you.\"\n\n\"You're welcome.\" I worked around the needles I'd set, using the fish hooks as a placement for the ribbons and other decoration I used down her back. It took time to place everything just so, but it was for the best, since I could also use it to settle my little tormented maso with soft petting down her sides. \"There we go, Honey. Well. A few last things.\" I fixed her black bunny ears to her head with pins and then fixed the pigtails she seemed to like most with it before I finally released her straps. Adorably, she stared at her wrists and ankles when they were free as if she didn't know what to do with them for a moment, then blinked up at me. I rolled my eyes, but I felt a sense of pleasure as well in the way she looked to me for guidance, a little lost after extended lengths of pain.\n\nShe looked to where I gestured when I stood up and went to the wall, feeling a brief moment of shyness before I tugged the black sheeting off the side. It had been a design work of mine that one wall of my dungeon be a mirror when I felt particularly cruel and wanted a little victim to see every grotesque thing I did. Of course I hadn't quite managed to use it like that, at least not by then since the idea proved too extreme and intense to go along with my admittedly twisted tastes, and I got used to keeping it covered.\n\nI uncovered it for her, though, and had a moment where I found it surreal that she was probably the first playmate I'd met that could play those visual torment games with me... and yet, I finally used the mirror for a more romantic reason. How strange that I should find myself in this position when I had fantasized over that game for so long. When I let the sheet fall, I stood to the side, so that my little rabbit sat up on her knees on the cruel table and stared at her reflection in the muted light of the torture dungeon. She shouted and clapped her hand to her mouth so that I smiled, stroking my talc gloved fingertips over my mouth to hide the expression in the midst of that strange shyness. \"I take it that you like it,\" I finally said softly.\n\n\"I have wings!\" She squealed it, crying happily. \"Feathery, silky, painful wings! I'm an angel bunny! It's so pretty, it's so pretty!\"\n\nThe long feathers hadn't been so hard to attach to the needle hubs with some wire work, but the black lines of silk had been a little trickier. Those were what the fish hooks had been for in the end, so I could have something to twist lines of wire around and use those to hold the silk ribbons. The end result really was a set of gorgeous wings. Of course, for my tastes, I thought there could be no wings more beautiful than hers that came with so much of my playtime.\n\nThere was one last thing. Well, two last things. First, I helped her off the table and carefully settled her on her knees when those shook beneath her. And last, I held out the thornless rose. \"Open your mouth.\" When she obeyed, I placed it and let her hold it there. She knelt quietly at my knees when I settled a chair in front of her and leaned my head back in another sense of repletion, closing my eyes while I basked in the sensation of having my little slave near, petting her hair with the joy of getting to wake up like this. When I chanced a glance or two at the scene, she was still bowed.\n\nAnd her eyes darted happily to the mirror so that I had to smile and when she nuzzled my knee a few times...\n\nIt will sound egotistical, but I felt like a king with his crown lovingly given and a rather cruel tyrant with his power forcibly taken at the same time. They were two impossible dualities that I couldn't philosophically reconcile in my mind, but with her, somehow, someway, she had just the right blend of sanity and crazy daydreams that it blended. And I was grateful.\n\n\u2014\u2014\u2014\u2014\n\nNynaeve\n\nHe was so awful and wonderful all at once! There was no one like him, no one. Who did the things that he did? After he sat above me like such a Master, he eventually made a small sound and stood, so that I looked up and watched him. I practically squealed when he opened a cabinet and got a camera out of a case. \"Would you like to model for me, lovely?\" But he was already smiling after the way I hopped carefully on the floor, working to not harm my needles. \"Sit still for Master and here, first, let's do this.\" I couldn't even figure out why he wrapped an arm around my shoulder, removed his mask, and placed his head next to mine, taking a quick four or five snapshots with us and the mirror behind us, making sure the dungeon was in relief. I swear that it just didn't occur to me. I wondered at it when he stood back, replacing the mask, and the real pictures began because he was far more careful in having me pose for them. He had me spread my pussy with my knees up, my wings flared behind me, as if I was a humiliated, tortured, and defiled angel, something made all the worse with how my pussy was gaped from the toy he'd had inflated inside of me after he finally removed it. And, of course, he had me roll over so he could get close ups of his work, purring over how some of the needles still welled with my blood. He spanked me and had me spread my asscheeks, making me show off my hole, then made me show off his awful marks of tit torture from before.\n\nOf course, somewhere in modeling how evil my Master was for the camera was when I realized why he'd started the reel with pictures that had his face in them. The mere thought of him using something like images for a form of control made me want to howl with laughter, though. After intense enough games of being on that wavelength and realizing how violent he liked his rape just made that kind of coercion seem... ah, highly unlikely from a man who'd rather I never enjoyed it at all.\n\nIt was the kind of thing that made me sad when it was over, when he finally put the camera away, when I was degraded and happy about that fact from the pictures, and I begged him to count how many needles I had endured. \"Please, Master, please! For my pain puppy pride.\"\n\nHe'd given me a flat stare. \"Pain puppy pride?\"\n\n\"Yeah! My maso count, you know? Like how we brag to ourselves about how much we can take!\"\n\nHis lips had curved up into an exasperated smile. \"Of course.\" But then he'd paused and softly said, without counting, \"128.\"\n\n128. So many and so carefully placed in their designs across my back. And the fact that he knew. He'd intimately known even when I couldn't keep track, and I was someone who always kept track. I stared up at him, shivering, feeling the spots of wetness on my back where some had bled. \"You didn't need nearly that many for the picture, did you?\"\n\nHe gave me a very amused stare. \"I could have done that with about 25, although I don't know that it would have looked anywhere near as lovely. I only stopped because of the time factor when I wish to have my real fun with you later. Although, it has inspired a fun fantasy of piercing you all over, with more needles like these down your legs for instance.\" He stroked a finger across my tits, eyes caressing some of the whip marks. \"I have larger ones to hammer through these gorgeous tits of yours, ones we'll add weights to on their ends so you can feel them painfully pulled down from, say, here.\" His eyes were almost clinically thoughtful when he touched the sides of my breast.\n\nThe thought made me sink to my knees to give him kisses all over his cock again while he lifted an eyebrow curiously. \"One time, I read this story about a guy playing edge games with this girl and she got all worried and upset that he might be making her bleed and he laughingly said that he would never make her bleed because he loved her, but would always hurt her and you're so bad and you like making me bleed, too. You're terrible, Master.\"\n\nI said it all breathlessly and I think he knew by then that phrases like \"you're so evil\" or \"you're awful, Master\" really meant \"I adore you, Master\". His smile was pleased instead of hurt in any way and it made me happy. \"I know, but I just can't help it when I have a flirty rabbit who struggles and begs so nicely.\" I giggled and he did that thing where he touched my nose and made me feel all cute. \"Come on,\" he finally said, tugging the scruff of my collar so I was lifted. \"Up you get, naughty girl. I have to take your wings off and take care of some things before tonight. You need some time to yourself before I start anyway.\"\n\nHis voice was even as always and it made me shudder. \"Oh, no.\" I skipped at his side, laying on the table when he guided me there. \"Your threats are so scary and it's even worse that you have all the terrible toys to follow through right here and your dungeon is so stark and evil...\" He had shelves of toys and some of them were sexual, like the inflating ones that he loved to stuff me with, but they were always either a thick, black color or stainless steel metal that glistened in harsh appearance. They looked all the more frightening when set next to his hooks and knives and eye screws and heavy clamps on another shelf. And then there were the weights - shudder - and they were so big. He had a shelf of heavy padlocks too and his furniture wasn't any better. His table was cold steel and he mostly seemed to prefer things along the lines of wooden slats and stocks. His suspension hook was deliberately something out of a horror movie and it still didn't get any better if you looked down either because he had - gulp - one of the industrial drains like Sulfur's had in the back shower room, where you went if you were feeling really hardcore for a night.\n\nAnd then there was that mirror wall and I could take a guess what it's intended purpose was for, could guess how it'd amuse him for someone to see what was happening to them in stark relief, when he'd put so much effort into making his toys grotesque and horrific. He'd said the pain was what most people started to have problems with after a time and it wasn't hard to see why.",
        "He was hard, a torturer with the soul of a romantic. And he didn't get lighter either. His sessions were promised pain after promised pain. I wondered if his past playmates had started to develop something like a firearms type of flinch. When people shot, they'd start to anticipate the pain of the backlash and tense before it happened so that it fucked up the shot.\n\n\"What are we thinking about that we're so quiet, little rabbit?\" There was strangely little sensation while he removed everything, using those sharps containers of his to dispose of the needles.\n\n\"I'm wondering about your past relationships and how you said you were divorced, Master.\"\n\n\"Ah. And what questions did that lead to?\"\n\n\"Why they failed for you when you're so perfect and dreamy and evil.\"\n\nHe laughed above me. \"This is just a guess, but I believe it might have been that last word that ended up being a dealbreaker, beautiful girl.\"\n\n\"But why does it work with me?\"\n\nThere were clatters from the containers when he lightly dropped the needle hubs in them and he worked so quickly at removing them that it was disconcerting. It spoke of so much experience. \"I'll show you why tonight. Actually, it would be my pleasure to show you.\" He kissed the back of my hair. \"It's something that I think will make you more terrified that ever. Lay still while I clean you.\"\n\nHis words were never promising. It made me shiver and then I fell quiet with the soft terry cloth across my back, but that was only one of the deeply terrifying part of the clean up. But there were definitely things that were scary besides his threat, like how he seemed to enjoy the delight of cleaning his torture scenes as much as he enjoyed the setup, even if there was no longer a sense of demonic excitement about him. He seemed more like a purring cat after its bloody chase, calmly and lazily keeping his space sanitary. He sprayed off the table while I knelt to the side and he was so thorough, lovingly making sure his evil toys were cared for.\n\nWhen he was done, he did another thing I was starting to enjoy, and that was grasp me by the scruff of my collar to tug me along beside him. Of course, even that had a sweet tang of fear from the gesture, because it wasn't even a cruel gesture on his part. It was just the type of thing that suggested that level of control soothed him and if he took pleasure in holding tighter to his little slave, then he damn well would do it. It made me bow my head obediently, made me feel like a harnessed rabbit, tinier than he was and skipping along at his side.\n\n\"I need to do a few things,\" was what he'd said and I appreciated the experience that made him end the scene so early before he had to get to those things. Because he certainly wasn't in any rush. He had left apparently as much time as he needed to end and make sure I was cared for, no matter how many aftercare hours either of us required afterwards, when I hadn't even orgasmed. I shuddered at the thought, remembering the inflation being released, the way my pussy had squeezed the toy in protest, wanting to be filled again, the walls almost painfully swollen with my arousal after the extended penetration... I had been a horny mess and his gaze when he studied the cum I dripped from his morning entertainment had been calmly distant, unaffected except for a vague amusement, so much that it made me burn.\n\n\"Here we are.\" He released my collar and I missed the controlling, forceful touch, but then I forgot about it when he opened the door.\n\nAt first, I clapped my hands to my mouth, squeaking. It was right across the hall from his room and slightly down from his office. And it was amazing! The bed was massive and circular, like something out of a fairy tale. There was a cage to one side and one of his evil suspension hooks hung from the center of the ceiling, but there were bookshelves, too, and- \"Cosmere!\" I squealed it and he smiled beside me.\n\nBut that's when the real terror set in because I danced inside the doorway and turned to meet his eyes and there was something there, something speculative. He watched me with a depraved look I couldn't quite discern. \"There's a closet, although it's not as filled as I would like it to be, yet. You'll find it in sections. While in my house, you choose from the right side rack, understood?\"\n\nOh, no. It started to sink in. My back throbbed a little from all the lingering soreness, fueling that deep terror. Past fears inspired by how quick he was with the forceps and rubber bands, how deliberate he was with the hammer, how adoring he was when he licked up any blood only served to amplify the sensation. \"Yes, Master.\" I said it in a whisper and his eyes darkened with excited lust the way they always did. \"What is... what is this?\"\n\nDarker than me. He pressed me back against the doorway, his lips brushing my forehead, and my heart didn't exactly race. This wasn't that kind of jump fear. This was bone deep, instead, and I whimpered with the thought of how much bigger he was than me. That morning he hadn't been feeling overly theatrical, as it happened, and his needle game had been for a lazy morning session on his vacation.\n\nR and motherfucking R. I shivered when he lifted a hand to encircle my collar. For a moment, I wondered if he might kiss me with the way he watched me and lowered his face closer to mine, but he only licked my lips like he had before. Because slaves didn't kiss like that. They kissed and nuzzled their Master's cock instead. \"Little slaves might find their lives easier if they don't ask so many questions.\" Oh, no. I whimpered and he chuckled, then tugged me into the room. He was going so fast, while I was stuck in the mindset that something was really wrong and I was in a state of denial about it. Except even in my denial, I couldn't ignore how elaborate that room was. But then my denial wouldn't face it outright and-\n\nHe carefully connected a chain to the ceiling hook and hooked the free end to my collar, short enough that I couldn't sit down. \"Wait here for me, little rape bunny. I don't suggest you free yourself.\" He pointed to the wall and I followed the line, swallowing at the sight of the camera. His eyes were so excited, so dark with some awful intent. \"I have a game in mind for tonight and I'll be a rather upset Master if you force me to forego it in favor of punishing you for disobeying. Behave.\" I nodded, too frightened to speak, and bowed my head, waiting on my short leash.\n\nIt was a good thing I didn't try to get free and go to the door, too, because he truly didn't take long at all to come back with my puppy bowls that he fed me from. When he sat them, he had the motions that I had seen in other Masters, this X factor that always turned me on. It was a kind of nurturing collectedness, a quiet intent to take care of someone. It was part of what made Masters so scary to me, actually, even if it was probably the softest quality they had. It struck me as erotic that my Master moved with that same intent, even if he was so very cruel in his games. That blend of cruelty and nurturing twisted together to form something that was both degrading and adoring, so that I knelt when he freed me from the leash and pressed my shoulders and I didn't fight when he tugged my collar to where he sat the bowls by the side of the circular bed. I hesitated, looking up at him, still more scared than I'd ever been in my life. But his smile was even and calm as always and he stroked my hair. \"Eat, little rabbit.\"\n\nRabbit. Little rape bunny. Honey, because of the amount of cum I poured for him.\n\nDemon masks. Red roses to match the color of my blood when he drew it. Darker than me. The real thing. Oh, no.\n\nI ate, sniffling quietly, knowing better than to use my hands because slaves ate like puppies at Master's knees. \"There will be sometimes,\" he said softly over me, \"when I will have you eat here by yourself. You still eat like this like a good little Honey bunny. Understood?\"\n\nHis tone demanded an answer, so I whispered, \"Yes, Master,\" and ate at his knees, my pussy as drenched as I was terrified.\n\nWhen he left, I felt... calm, at least, if stunned. He reassured both of us with a thorough checking and petting all over my body and left me cuddled in my circular slave's bed. After he left, I pushed the covers back quickly, and hopped out of the bed to open the door.\n\nIt was locked. I turned in a circle around me, taking in the books that I loved most, the hook from the ceiling. It looked so strangely exotic, in the way a Master might make it if he wished to flaunt how well cared for his little slave was. I couldn't keep from going to the closet and glancing at the shelves. There were ones with evening dresses that made me blink, ones with jeans and different types of shirts, all of which were form fitting. There were a few long sleeved ones and he'd claimed it wasn't overly elaborate at the moment, but to me it was far too elaborate. And then, of course, there was the shelf he'd specified, the only one he'd specified as a rule for when I had to wear it.\n\nI sat down in the floor and stared up at the different styles of leather and lace and rabbit ears and fur, tugging my collar, which suddenly felt very tight, as if it choked me. And then my eyes fell on the piercing rings, little half hoops and barbells. I scampered from the closet and grabbed a spare blanket from the bed, throwing it over the cage to make sure it was covered up, and then I hid.\n\n\u2014\u2014\u2014\u2014\n\n\"How are we feeling, Honey?\"\n\nI shifted in all the ropes he had used for suspension bondage. There at the beginning, when he'd come to fetch me for playtime, I'd almost gotten enough will up to fight him. I'd even stared up at him from my rabbit cage and managed to ask through the terror and denial, \"Are you g-going to let me up when you're done hurting me?\"\n\nHis smile had been sadistic with that terrible excitement he always got at the sound of my fear. \"Yes, little rabbit, and then it will be the same thing as last night. Bath and bed.\"\n\nI'd nodded and taken his hand, wondering what I had done in coming to play with him. \"Yes, Master.\" It horrified me a little then, that I didn't know his name and it felt right that I didn't. I followed him to the dungeon and he'd gotten to work with an elaborate form of bondage.\n\n\"I was going to keep the suspension a little more simple, but I think you need the comfort of more ropes for right now. Just relax and let it happen.\" Ropes, so many ropes like snakes, coiled ever so slowly around me, as if he had all the time in the world. He worked in that ease, with that dark background excitement waiting to come to the forefront and torture.\n\nHe was good at it. So, how was I feeling? Still terrified. But that wasn't what he cared about hearing. He was enjoying the sight of my fear. \"Good, Master.\"\n\nHe paced away and chose a demon mask so that I shivered in my bondage. \"I'm glad to hear it. Listen to how scared you sound, little slave girl. Let's work on directing that fear somewhere else.\" I shifted in the ropes that held me secure. Not a one of them was too tight or out of balance and the position he'd tied me in was a cradled one, with my legs spread wide open, my back exposed in places in a position that held me upright, almost like a secure swing. I squeaked when he walked back to me, when he caught some of the rope from behind and sent me swinging helplessly. It would have been fun if I wasn't in a dark, head fucked place. \"Aww, not even a little bunny giggle.\"\n\nI couldn't answer because I caught sight of the toys he had with him on the medical tray and got too distracted with begging for his mercy. \"No! No, please.\"\n\nHe smiled. \"Oh, but yes. Talking with you earlier, I think I told you that I was considering how I wanted to go about pain in a routine. I do love giving my slaves something to anticipate, but it came with other thoughts too. Like how I might go about choosing a day for your tits, your ass...\" He stroked over my breasts with clover clamps and that was the toy that was the least of my worries. \"Of course, I haven't played with your little cunt yet, but that's what tonight is for. And then I had the idea of how much you hate having your asshole fucked and played with and how maybe it would make things more bearable for a little slave if I were to choose a night to dilate and stretch your ass for you. Of course, I'd find ways to hurt it with fun electro toys and pepper based lubricants, but it does seem awful mean to force my slave to only have orgasms from assfuckings and pain without helping her.\"\n\nI shuddered when he applied the clover clamps at the base of my nipples, choking for a moment with how terrible it was, noticing how he expertly placed the clamps so they wouldn't pincer into the holes. He crushed them from the top and bottom, rather than the sides where he'd pierced them and at first I wondered if his torture might be bad for that part, but then realized that people I knew took out nipple rings for better clamp use all the time and of course he'd know that with his needles and awful toys. He made me sniffle when he used two separate sets of clamps, one for each nipple, so he could attach weights to the other end of each. My teeth chattered when I sucked air through them and I shifted in my bondage. The wave of dizzy, stunning nausea, followed by the floating sensation of crazy adrenaline, was a mercy on his part, one that dissociated my mind from the preexisting terror I'd had along with the terror for the toy he lifted next. He held my gaze while he lubricated the most evil inflating dildo I'd ever seen in my life. And he'd mostly been kind with those toys, actually, although it felt more like that was because he'd been more interested in other forms of torture at the time. Somehow, I hadn't anticipated that he might cease to be nice with those toys and felt crazy for not expecting it. \"Be a good girl for me and let's get it clear now. There's nothing you can do about it, there's no one to hear you beg except for me, and you're not getting free until I let you down. This goes in your ass, so I can squeeze the inflation and spread you nice and wide. You can fight me and I'll cane you until you give in while crying or you can behave. Either way, it happens and then I torture your pussy anyway.\"\n\nI moaned, tears falling down my cheeks already, but it was more from a sense of desolate brokenness than anything. He smiled in satisfaction at the sight, a deep, sadistic sense of it too. I shifted in terror when he came back and spread the lubricant across my asshole, and whispered, \"Thank you, Master,\" like a good, pathetic rabbit.\n\nHe was so pleased that he cooed with it. \"How sweet of a rape bunny you can be. Just relax and take it while I gape your asshole into something more fitting of a torture slave.\" I whimpered as soon as he started and the toy was fucking massive, even when it wasn't inflated. The wide head nudged against my opening while he worked and he was smiling with how hard he had to press it to force it inside of me.\n\n\"It hurts! Please!\" My clit pulsed with a horrifying amount of need when his smile only widened, his eyes cold and distant and so damned mean. \"Please don't, please! It feels like-\" I cut off with a shriek when he gave a particularly hard thrust, not that my words mattered anyway. I couldn't have used ones good enough to describe the terrible sensation. It was like I should be split open, an abrasive pressure of being spread far wider than anyone should be. I shrieked again with one more hard press, opening and closing my fists in my suspension bondage.\n\n\"That's it. That's the widest part of it... for right now anyway.\" I sobbed, actually sobbed, with that reminder. Mercifully, the toy was only obscenely wide, although not as long as some of the toys I knew he had on the shelf. Of course, the longer toys didn't fit his cruel purposes for the moment. He made that clear that his intention was to see me gape, not to necessarily stuff me. \"Let's use a harness for you. I had to adjust and toy with a design specially for you and how much you hate anal, Honey. What do you say for my consideration?\"\n\nI sniffled when he came back with the strange harness to hold the toy in my ass, a design that ensured my pussy was bare again. And I thought of the room that was too elaborate, the room that locked from the outside. The room of a slave that had later to worry about with a Master who knew little of lenience. \"Thank you, Master,\" I whispered.\n\n\"Such a good girl you're being tonight.\" He fixed the harness around me, a design that fit around the wide toy. And the toy was such that it wasn't a plug with a flange base to hold easier inside of me. It was one designed to stay wide to better gape and dilate my hole for him, but Master had cleverly used small straps and cords to hold the dildo in place, ones that ended up fitting like his usual harnesses in the end. By that, I mean that there was no way I was getting rid of it until he was done. \"Let's see how much we can ruin that hole.\" I shrieked when he squeezed the inflation bulb and released it, widening the largest toy I'd already ever used, ass or pussy.\n\nI cried in misery when he did it again. \"Please! Please, stop, it hurts!\"\n\n\"Aww, I know. We'll let you get used to that size for right now and go onto something else. How are these clamps? Maybe a little more weight will take your mind off having your asshole turned into a slutty fucking cavern.\"\n\nI pant with the next padlock weights, then forced myself to breathe. My ass felt like it'd never be the same. It made me think of those gaping videos where the girl could lay still for hours and her hole still wouldn't be back to normal, after something like a double fisting. My world turned into that special place that only he had ever taken me to so far, that place where he ruled me because he had to when I couldn't even see through the haze of masochistic lust, couldn't think through the adrenaline blitzing through my body. It was even worse that I was swinging in suspension somehow, that all I could do was stay helplessly still and let the waves pulse through me.\n\nHe smiled when he came back to me, holding another of the tools he favored. And I didn't even have a word for what these were called, actually. They were something like forceps crossed with hideous clamps, but the eyes of them were huge and they crushed when they locked. I shivered when he stroked one down my cheek. \"Now, that is a gorgeous look for you. Let me tell you about these fun things. See the weight lifting style weights?\" I nodded to where he pointed, biting my lip at the sight of the 25 pound circular weights. Other sizes rested against separate dividers, too. \"That's one of the things that these are for. They're rather terrible, if I'm being honest. You see, if I use these on your nipples instead of the eye screws I used last night, I can hang the hooks and chains from this center part. And they're so tight and heavy that the added weight isn't going anywhere until I'm through with my little maso slut.\"\n\n\"Oh, no,\" I whispered when I realized where this was going.\n\nHis eyes danced, excited. \"You keep saying that and I keep answering the same way. Oh, but yes.\" He had eight of them on the tray and I breathed evenly when he lowered the first one and pinched the left side of my outer labia. \"I might be subject to wishful thinking in the hopes to use so many when you have such a small little pussy, but we'll try.\" I choked when it fell closed, eyes going wide with the strange sensation. Somehow it hurt less than my nipple clamps in one way... and hurt way more in another. I struggled the ropes, whimpering, trying to squeal out a protest, but he was already on the second one.\n\n\"Please don't! Please, I'm scared!\" I don't know where the words came from, don't even know if they were true. Actually I think they weren't true because I couldn't think straight enough to find any fear anymore. I just shuddered, unsure what to process and what I felt besides pain. My God, they really were heavy. He went to the inner labia and it only got worse. My vision blurred and I let my head fall back, then laughed one of those mad little sounds from before.",
        "He chuckled and the atmosphere changed like it had then as well. \"Aww, how much fun we can have together with nights like these all the time.\" He kept fitting and locking... and he did fit them all.\n\nI pant a little when he finished and he stared down at the heavy, swinging metal between my legs with obvious delight. He seemed to drink in the way I tried to be more still, the way I tried to keep the weight from shaking so much. \"Now, that does look painful. Let's see what we can do to make them swing. But first, I think you had a question for me earlier.\"\n\n\"M-master?\" I couldn't think and he smiled at me, pausing to caress my cheek. The action felt strange when my world was so much hell.\n\n\"Poor little torture rabbit. It's alright, Master knows what a maso like you needs and I'll take care of you. You asked me why things seem to work with you and I when it didn't with others, Honey.\"\n\nChrist, it felt like I was thinking to a past age where there wasn't so much burning pressure tugging on my pussy's lips, stretching them. I sniffled, wishing I could clean the tears off my face. \"I remember, Master.\" It seemed strange to me, with that much adrenaline racing through me, that I had been so terrified with what that other room meant.\n\nBroken and hurting at his mercy, held in suspension, my world was narrowed down to pleasing him and suffering. He stroked my hair and I couldn't stop the smile again. It just hurt that damn bad that every last soft touch was a grace of the most amorous intent. \"Sweet little rabbit.\" He tugged the clover clamp chains so that I yelped and went stiff before falling back in still surrender, shivering. \"See, it works between you and I for the same reason I'm starting to get so fucking horny every time I see these tears you give me. I've always loved tears and blood, but your tears... those are something truly special. It's starting to get where I see them and already want to fuck you into bliss. Want to know why?\"\n\nI watched him warily and nodded so that his smile widened before he licked up my cheek, purring eagerly to the taste. \"Because you're such a maso slut in such a complete way, Honey, that the more tears I see in your eyes, the more drenched it means your cunt is.\"\n\nI shrieked when he slapped the metal clamps between my legs and then yanked one side of them apart so that I screamed from it... only to scream again when he pumped two fingers inside of me, my eyes going wide with the foul sound, while he laughed over me. \"God, that sound. Such a horny fucking girl you are for all this pain and that dildo must be massive when it's pumped. Such a tight fit it is.\" He worked anyway, forcefully thrusting his fingers, so that I thrashed in the suspension ropes. \"Look at you, you little slut. You probably want some more pain if you liked what you've already gotten this much and you're definitely craving a nice hard struggle and rape.\"\n\n\"Oh, my God, no!\" I shouted it when he slapped his other hand against the shaking forceps, when he spanked rapidly to watch the metal clink together.\n\n\"Oh, yes.\" He looked, to me, like the demon mask should be welded to his face because he'd earned it so well. But his eyes were in that transcendent zone I had seen them the night before. This was him in the way that the mad laughter and freedom in the agony was me.\n\nI couldn't stop one of those smiles then, the breathless, almost crazed kind. The rush was so intense, it flooded everything. \"No,\" I whispered, but it was a flirt.\n\nHe laughed at the sight of it and paced away from me again, turning on more of that playful, twisted hard rock before he got one of his whips. \"Look at you. You truly earned those wings earlier.\" I shrieked when he stood back and flicked the whip in a striping slice, but it didn't touch me.\n\nBecause he was just getting his bearing, figuring out his distance and aim. It was perfect, of course, the radius around him gauged so he wouldn't harm me without intention and he wouldn't mar any of his precious chamber. But of course there was a lot of intention to that first one. He took a second stripe to solidify his bearing, staring at the pincers between my legs with vicious deliberation.\n\nAnd then he flicked for real, almost lazily, his eyes alive in the most sinful way. I thrashed and yelped when the clamping pincers were jarred and they shook almost violently, evil silver tinkling against more silver. He whipped my thigh with a smile and didn't even hit a clamp, except the action made me shake them anyway, torturing myself for him. A third whip line made my sanity feel shredded and I laughed again. A fourth and I finally reached it more fully with him, that perfect headspace. It might have taken longer due to that terror from the slave's rooms and what those piercings might mean.\n\nBut then, under the pain, I just. Quit. Caring. It felt like a mental vacation. What did I care about any of that, when he was the demonic god that finally made me feel safe and whole and free. I looked up at him, swinging in the coiled ropes, and met his intense gaze, felt his sparking excitement and his eager joy.\n\nAnd knew, without a doubt, that, even if I was in danger in one way, I had also never been safer. He paced to me, switching the whip handle to his other hand, and jerked the clover clamp chains so that I shrieked. His lips curved up in response to the sound and he shushed me in that way that only he could do... then stroked his hand up my abused pussy, so that I took a shuddering, laughing breath with the sudden assault of that much pleasure when it came at such a high price. My mind had a lot of vague, racing thought trails about the nature of contrasts and how my pussy had never felt so sensitive in my life.\n\n\"Look at you,\" he breathed. \"Like a fucking goddess.\"\n\n\"It hurts. It's so bad...\" It came out a begging whisper. And I didn't think it was begging for mercy anymore.\n\nHe smiled and I felt like his lips should be dripping with sin every time he did. \"Does it? Let's wind you up a little more, if this is what bad does for you.\"\n\n\"Oh, no...\" My head fell back and I closed my eyes when he squeezed the inflation bulb and my asshole was forced painfully wider.\n\nBut then he followed it up with leaning closer over me, lowering his face between my legs to give a single, long lick up my slit, to my clit. I couldn't keep from shrieking wildly, stunned with a sunburst of sensation. Some of it was good, a lot of it was awful, but the best of it was downright hellish. \"Look at how red you get between the eyes of the hooks. Jesus fucking Christ, it looks like torture should look. See it?\"\n\nI had to force myself to look down between my legs, where he stroked his fingertips down to touch the massive eyes of the cruel clamps. It was a different kind of terrible to see it because it was horribly reddened, dark with cut off blood flow and garish with so much weight and pressure. Against his pale, stroking fingertip, it looked vulgar, my pussy's flesh turned into something grotesque.\n\nBreathe. I made myself do it, then choked, then looked up to him, unable to keep from that slow, stunned smile of exhilaration. It felt like this physical elation, fueled by adrenaline, that I could take these things. He smiled back down at me, standing over me in my oh, so humiliating suspension. \"Fucking maso slut,\" he purred, stroking my chin.\n\nI shrieked, tears wet in my eyes even while I giggled with how he flicked my already wounded flesh. He went to work in cruel, rapid flicking, too, right between those eye holes and all around it, making sure to hit every tortured spot where he knew it would most hurt. \"Evil, awful Master!\"\n\nHe slapped his palm between my legs, right in the middle of all that medical silver, so that it shuddered and sent cascades of agony through me. \"Can't argue that.\" He spanked in a rhythm, hard spanks that went with the beat of his playful rock music and his eyes were so fucking alive, so much like a god in his home. Once again, I had that sensation that weights had been lifted from his shoulders, and I had been the one who took him there, my body's tortured sense of masochism his release.\n\nFor the first time, it didn't feel like something I should hate, didn't feel like something that made me wonder why I was born sick and messed up. It made me happy and free and-\n\nAnd his. \"Master!\" I yelped it when the sudden wave of sensation turned into too much and it was the kind of thing that took my breath away with how abrupt it was.\n\nHe didn't even need me to ask. But he never had needed that. He chuckled darkly and grasped some of those pincers, pulling them apart and wide open. I watched the way he stared at the visual with pure violent lust and quivered at how awful and hot with pain it was to feel. But I couldn't look with him. I couldn't because I didn't have permission and I'd lose control if I did see that horrible image. But then he smiled at me, his eyes moving slowly back up to meet mine. \"I'll count this as having your slutty asshole stuffed enough. Go on.\"\n\nI looked down. He had grasped the four pincers that held my inner labia and he had them, not just spread, but pulled wide apart. The lips were obscenely stretched and the flesh was something that looked like it should be in a gory movie. The sight made me more aware of the pain than even before and my asshole pulsed around the huge toy.\n\nI orgasmed with a screech and it was a good thing that he had so tightly tied me in suspension because I would have hurt myself otherwise. My body throbbed with the force of it and it felt like a death of some kind, or a rebirth. I don't know, but it was like the world ceased to exist for a moment. There was nothing but pure agony.\n\nExcept it was a fucking orgasm.\n\n\u2014\u2014\u2014\u2014\n\nI collapsed when he put me in my cage that night. I couldn't even flirt and talk with him when he bathed me, although I did stir sleepily when he caressed the whip lashes he'd left. \"When you've recovered more from harder scenes like the first one, I think we should let your pussy have a turn with the play piercing needles and we'll have to work up to much more impact...\" he'd said softly, and I'd shuddered happily.\n\nAfter my orgasm, I had been totally submissive to the depths of my soul and he'd known. He'd turned quieter with a pleased, soothed smile, as if the level of that amount of control was his OxyContin. It took his pain, took his stress, and made him fly with wings like the ones he'd given me. I'd never forget the image of him releasing the weighted clamps and standing back again, stroking the whip before he snapped it. I'd been beyond protesting by then, been deep in the waves and smiling soft, almost insane smiles with every added lash.\n\nBut of course, it was the gift of masochism that I could traverse the dark insanity and come back whole. After he'd broken with a growl and removed the monster dildo in my asshole, he'd lowered the suspension ropes holding me upright, so that I was spread out and at the perfect height for him to fuck me while I found the strength to finally shout and struggle. Because I knew it turned him on more when I didn't like it. \"No! No, please! It hurts so bad after being filled like that! It hurts, sir, please don't.\"\n\nHe'd growled and shoved inside of me in one swift motion, laughing at me. \"What a fucking liar. You can't tell me that hurt you when I could fill you up so easily. My God, look at this asshole after it's been so dilated. That hole is almost worthless.\" He pounded inside of me, his eyes closing with bliss even while his lips parted with the pleasure it gave him.\n\nBecause his words made me cry and it excited him. \"Imagine how it's going to be after a few more sessions. I'll have to buy more g-strings for you to wear so that I can see how it gapes behind the fabric. We'll have entire fun little forays dedicated to releasing the inflation and pumping you back up until that little hole of yours stays wide open for me.\"\n\n\"No, please don't, Master! Please, I hate the dildo so much, it's awful!\"\n\nHe'd started really getting rough with his pace then, his eyes blazing with sadistic ecstasy. \"Okay, little rape bunny, we don't have to use that one. I can use the other, bigger one.\"\n\nI'd burst into tears at the thought of it and he'd orgasmed with a growl, his body turning tight with shaking tension when the force of it shook through his musculature. He'd been laughing at the end because I'd orgasmed again with him, twitching around him.\n\nAnd I do remember parts of the bath, like his cleaning my whip licks and stroking his hand over my hole. Because he took the moment to gently reassure me. \"Just so you know, little Honey, I won't gape you until it doesn't give me pleasure anymore. If that's what you're worried about, don't be. I'll always give your tight little asshole enough time to recover.\" He'd held me from behind, stroking the cloth down between my legs while he whispered his erotic threats. \"I wouldn't dream of training you well enough that it wouldn't hurt you anymore, wouldn't dream of a time when I couldn't feel it squeezing my dick with how much I hurt you.\"\n\n\"Oh, god...\"\n\nHe'd chuckled and I was too weak to even protest. But then it got worse when he tugged me along by my collar to the side of his bed. \"At times, I'll allow you to sleep in the slave's toy room. But after sessions like this one, Honey stays with me in her cage or in my bed, at a later time. Repeat it from me. 'Honey sleeps with Master'.\"\n\n\"Honey sleeps with Master.\" Honey bunny. Such a cute name. Hadn't I protested that at another point because it seemed so humiliating? Why would I ever do that? The cum I dripped for Master pleased him and was part of that wild hedonistic creature that took him to his freedom.\n\n\"Good girl.\" I smiled, shivering. \"We'll start to train your masochism well. You already have so much of it and with those orgasms as hard as I can make them, it won't take long for you to crave those dark joy games. And then, of course, eventually you won't want orgasms any other way at all. I can see you cry all the time when you dread what you start to need from me.\"\n\nI whimpered so that he chuckled, and crawled into my cage when prompted, shivering at the thoughts of his evil, long term conditioning. The ultimate, permanent torture, forced to love my masochism, subject to it as a sole source of pleasure. I slept in restlessness, waking up from gasping nightmares where my pussy throbbed, and I must have cried out because his bedside light came on and I went still, worried I had irritated him.\n\nBut he only watched me for a moment, then tilted his head, as if considering before he stood up. He opened the cage door and tugged me by my collar scruff again so that I throbbed all the harder. \"Oh, please!\"\n\nHis cock was huge and hard when he filled my asshole and I sobbed, wanting to beg him to stop, needing him to make me full and whole. \"I've always wondered about the dreams of maso sluts.\" I moaned, thinking he probably didn't want to know. \"I imagine it must be a wild place of the kind a sadist can't even fathom. Sadists often have their violence or domination or degradation fantasies to temper their dreams, but a masochist? Oh, how horrible must you dream when given the safe freedom to fly in the nightmares, to bask in the terror?\"\n\nI came with a cry, somewhere in a strange place. I think a lot of the effect was how strenuous his continual torment through the weekend ended up being. Think of it like spending the day at the lake or spending hours swimming against the tide while playing in the ocean. It's so much fun playing that you don't notice the exhaustion.\n\nThe exhaustion set in... and everything else was finally allowed to rise in a wave that made me a fiendish, frightened, horny little creature. Fight him? Even when I had that background terror of what was in that other room? I couldn't. He had beaten too hard, had tortured too effectively, and then taken me to hardest pleasure so wildly. \"Thank you, Master,\" I whispered when he finished his own release, inside my asshole of course.\n\n\"You're very welcome. Come back to your cage, but let me fix it first.\" His fixing it entailed him placing the bedding in the crawl opening of the cage door and setting me only partially inside. \"When I have to wake up and fuck my little nightmare fueled, horny bunny, I don't want to have to work too hard over it.\" I whimpered when I realized he could easily tug me back and fuck me in the new position. \"Don't worry, slutty little rabbit. Fortunately for you, I tend to approve of and value these things in a slave. I'll take care of you. Back to sleep now.\"\n\nTake care of me. I whimpered when it was all too clear that he was conditioning me to be darker, to addict me to the fear and the struggle. He liked me as his little rape bunny.\n\nWhen I was starting to get cozy at his knees, he found ways to encourage me to struggle even so, and I suddenly had a dark insight that his slavery and conditioning would ensure I never got cozy enough to enjoy his use and abuse. I would struggle always under his careful nurturing, twisted control, and adoring sadism.\n\nI woke up again, scared with thoughts of those rings in the slave's toy room, in such a dark place, the darkest I'd ever been in my life. Hot arousal felt like it flooded me and I didn't just crave, I felt like I was burning. My pussy was so sore and there was lingering torment from the play piercing session and my breasts had light amounts of bruising. It felt right when he used me again, when he shushed me to soothe me, holding my head down even while he had my ass up, like a little whore bunny.\n\nDarker than me. Demon masks. Roses as red as my blood. Torment conditioning.\n\nOh, no.\n\n\u2014\u2014\u2014\u2014\u2014\n\n\"You did so well this weekend. Did you have fun, Honey?\"\n\nI was shocked and I didn't know what to make of this session. It only served to enforce the sense of unreality that had taken hold of my world with my lurid nightmares and long night. I had grotesque images of being a soul trapped in a cage from something out of a level of Doom Eternal. Except, in the dreams, playful hard rock pulsed around me instead of the metal track to the game and he stood outside the bars of my prison, wearing a king's twisted crown, made of sharp points rather than jewels. And he'd had the demon mask from the first night, except it was no longer a mask. The teeth of it moved when he spoke, as part of his face.\n\n\"Sometimes they send me a special soul, a promising one. Let's see how promising you truly are. You'll find I'm quite good at pressing the limits of extreme even in this place...\"\n\n\"Honey.\" He stroked my hair and I stared at him and then stared down to where he was tethering my wrist to a torturer's cross. I called it that because it was a modified Saint Andrew's Cross, with extra slats for more options. He worked at the harsh leather cuffs at my wrist, strapping me nice and secure. \"Like the cross?\"\n\nI finally looked back to him, still processing, still in a strange mental place. \"Yes, Master, I've never seen one like it.\"\n\nHe stroked my hair, smiling, his demon mask a fit to his stark hair that morning. \"I made it.\"\n\nI blinked. \"Oh?\"\n\nHe started on another strap, his voice thoughtful. \"Mhm. I worked a lot of the wood I use, actually. It felt more perfect that way.\" He touched my nose. \"The BDSM furniture I found wasn't quite... enough.\"\n\nI couldn't stop a breathless giggle. Of course it wasn't. \"And I d-did have fun. You're not hurting me.\" I said the last, staring at him curiously, feeling strange that he wasn't doing so and apparently this wasn't even really a scene.\n\nHe kissed my forehead. \"I think I'd rather see my little slave tethered in submission for the morning. How do we feel? Nice and cozy?\"\n\nI shifted on my cross and then nodded. \"Yes, Master. Master?\"\n\nHe tilted his head, coming back to me with the eye mask that would blind me to his terrible dungeon and evil, gleaming toys. Somehow, I wasn't as scared of being blind in that place as I would have thought. But, then, I had a lot of feelings that confused me, ones inspired by the other room. Even more confusing, there was the emotion that seemed to fuel him and the fact that he wasn't hurting me.",
        "Was this what he was doing, maybe, to send me home? I didn't like that thought, of leaving him. I took one more glance around the dungeon and blinked, confused at how I was attached to this place that was so awful. This felt... maybe like a goodbye? Was that it? I felt tears in my eyes and then Master's eyes turned soft. \"Hey, there, Honey. Why these tears?\"\n\n\"I don't know.\" I blinked, smiling in a little fear. \"You don't like them.\"\n\n\"Those tears of yours? Not at the moment.\" He stroked my cheek. \"These aren't the ones I can lick along with your blood and cum.\" He pat me, a soft affectionate slap against my cheek and I shifted on my cross. He lowered his voice conspiratorially. \"They taste wrong.\"\n\n\"Oh, no,\" I whispered back. \"Tears with a wrong taste must be like brownies with nuts in them. Not only do you not get a brownie, but it could have been a delicious joy.\"\n\nHe froze and then pulled back to throw his head back, his laughter a thing alive. I couldn't keep from grinning while he calmed down, couldn't keep from giggling when he came back to my side. \"Exactly. Now, why the wrong tears?\"\n\n\"I was thinking that I'm very attached to being here with you and I want to come back!\" It finally burst out of me. \"And I'm scared! I'm scared and I don't know why, but it feels like something is wrong and I'm so confused. And you're not hurting me and last night, I- I-\"\n\nHe shushed me again and I went still, whimpering. \"It's okay. It's okay. Let Master worry about those things while you're still mine. All I want you to do for right now is be still, think of your slavery, and rest on my cross. Trust me, little Honey bunny.\"\n\nI stared up at him, blinking, and I still felt like something was wrong, but I nodded fearfully, warily. He wasn't explaining it. He wasn't saying if this was our goodbye. But he was...\n\nMaster. I whimpered in fear, bowing my head and shivering only a little while he blinded me. He didn't have to explain anything to me. Not yet. Of course, maybe that meant that he had ideas but wanted to wait until the weekend was fully over and the mindset wasn't so deep. But then my thoughts turned more afraid when he gently tapped my lips and breathed, \"Open up.\"\n\nI opened and was gagged as well. He left me alone in the darkness and silence, opening the door once to leave me be, and I wondered. And the more I wondered, the more scared I started to get.\n\nThe nightmares from the night before didn't make it any easier, especially when the time felt like it continued for an age. And of course, I was sleepy enough and the cross really wasn't so bad. He had built it with enough beams and attachments that he could add all kinds of evil toys and I didn't doubt that he had and would if given the chance. For the moment though, the head rest was padded and I fell back against it, so tired from so much fear, from so much sex the night before. I made the mistake of resting.\n\nThe dreams chased me there as well, dreams where I whimpered under him, trapped forever in a bleak hellscape. I had images of being surrounded by a gray sky that blended in the distance with the death of the land I walked on, the blend all the more complete with the mist around me. Bones crunched under my feet and I ran through trees that never ended, but I couldn't remember what I was running from, until I heard the twisted laughter chasing me. I woke up and moaned, so horny again, and then let my head fall back, wondering why this was happening. Was it the atmosphere, was it him, was it his dungeon? I tried to breathe through the rise of hot lust, remembering different intense tortures, and then felt myself sweating as if fires were waiting near me.\n\nOnly to shudder and realize there was actually heat near me. Not in my dreams. I woke fully, jarred awake, and yelped, thrashing on my cross, more fully realizing where I was.\n\nI yelped again when I heard him shush me, in a real state of panic. What time was it? It was too late and I didn't know how I knew that but I knew it. I knew it from some internal clock, maybe, or some instinct of what was happening to me, what was always going to happen to me as soon as I walked through his door. I screeched behind my gag, thinking of the toy room and I couldn't stay in denial anymore. Why would he have it if I was leaving him? Why expend that much elaborate effort for someone who was just a play slave? It was tailored specially with the books he knew I loved. Why hadn't he spent the morning hurting me when he loved that more than anything, when it was how he showed his love for me?\n\nUnless he planned on torturing me that night, when I was supposed to be free again. My thrashing was pathetic and I mean even I could tell how pathetic it was. It took me a moment to realize that I was more tied down than before, that I was held as tightly as possible. No. Oh, no.\n\nHe sighed and took the blindfold off. \"I can see you aren't going to calm for me. Naughty rabbit.\"\n\nBut I was staring past him to the fire. And the iron. And the medical tray, the forceps, the gloves, the disinfectant. I broke and the tears flowed, the ones that pleased him, and it was obvious they did with how he smiled vaguely, releasing the gag's clasp to hear my begging. \"Please. Please don't. You can't do this. You can't, please.\"\n\n\"But, little Honey cum bunny, I can.\" I cried harder and he purred, licking up my cheek. \"And I'm going to. And after I'm done, I'm going to punish you for trying to tell Master what I can and can't do.\"\n\nI thrashed in one more effort, sobbing. \"No! Please let me go, please!\"\n\n\"Be still and look at me, little rabbit.\" I choked when that voice was as implacable as always, when it was calm and collected... and when it was filled with pleasure at my misery. I looked at him. And I went still. His eyes blazed, the snake with a bird, and he held me a hypnotized thrall. \"This is what's happening to you. There is nothing you can do. No one is going to save you.\" I sniffled and looked down, squeezing my eyes shut. \"Aww, don't cry, little bunny. You can stay here and play all you like and I have a prettier collar for you.\"\n\nI shivered when he started with the new collar, delicately unlocking the one from before. He stared at that one and smiled in a kind of fondness while I watched in a dazed horror. \"That was a cute interim collar. Let's try a new one, though, one that's a little more difficult than this was to remove.\"\n\nMore tears fell when he turned around, holding a large band of black. \"Please,\" I whispered. \"Please, does it have to be s-such an obvious collar.\" If he let me leave his side, anyone would know what it was, at least I thought they would.\n\nHe fixed it around my throat, his eyes dark in a kind of lust that was far deeper than most kinds of arousal I had ever seen. This was possessive, filled with a kind of absolute ownership. \"It's a bit wide, but it could be worse, don't you think? See how pretty the O-rings glitter at your throat? And look at the lock that goes with it.\" He held it for me to see, a heart shaped lock, and it really could be worse. He had carefully chosen a collar with a silver underlay so that it could be cleaned and wouldn't easily collect skin oil. What did collect anything could be scrubbed nice and easy without ever being removed from my throat. As for the size... It... Perhaps it wasn't so bad. It was over an inch in width, at least, and black, but maybe I could use charms with the O-rings if he let me. Maybe I could make it not so stark looking.\n\n\"It is a little pretty.\" I sniffled, tears falling down my cheeks.\n\nHe stroked them from my eyes before fixing the collar just so. \"There, there. It's not so bad. You'll turn quite used to it when you see it in the mirror every day, beautiful little slave bunny.\" He clicked the lock shut and I shuddered, then realized something.\n\n\"How do you mean by a collar more difficult to take off, Master?\"\n\nHe finished adjusting it how he liked it and then fixed a light over me, smiling slightly. \"Dear girl, you should also learn to ask permission for questioning me.\" I sniffled, fearful of the punishment coming to me. \"It's alright for now. You will learn after you've suffered a little more for me. As for what I meant.\" He turned around, tugging an extension cord already set up, and I quaked with the sight of the soldering gun in his hand. \"We're going to make our own adjustments to this already lovely collar for you.\"\n\n\"No. Please. Please.\" But he only worked silently and my voice was far too soft and hopeless anyway. He was so twistedly gentle too, his hand quite careful when he held my head back and he held the gun with that adoration in his eyes, that romance that wasn't quite light enough to be romance, that devotion that was filled with a little too much ownership.\n\n\"There we are.\" He stroked my hair, carefully working the gun while I stared at the table with its wooden slats, at the suspension hook that already seemed forever away. \"Good girl. That's pretty and now, this collar will stay nice and secure where it belongs on a little maso slut's throat.\"\n\nWhy was my pussy aching to be filled? Even while I was sobbing, it throbbed for him to abuse me. It didn't make any sense when he didn't even fuck my pussy and that only spurred the curiosity of how long it might take before my asshole started to pulse for him in those moments instead. Which of course made me remember his threat, that he would carefully nurture my masochism until I had to have it and I wondered when I would start to need pain to get off at all. Which, of course, made me sob.\n\n\"No, no, little rabbit. No hysterics. Is it really so terrible?\" I considered that and his words actually worked when I thought of his baths, his petting, the crop down my back while I ate at his feet.\n\n\"No, Master. Not s-so terrible.\"\n\nHe smiled and came back with a razor and water to shave my already silky skin. Silky, because he really was quite careful and adoring with his baths. Looking at him was a comfort too, in his pretty mask, and so far, he liked hearing about things I liked when he spoke with me. I shivered while he shaved, glancing at the heated iron. He finally broke for a moment, smiling with humor in his eyes at where I looked. \"Want to hear a joke?\" I stared at him, blinking, then nodded, still trying to process. \"The iron and fire is totally fucking useless for us. I just thought it would be fun to see you panic from the heat.\" He finished what he was doing, not hurried in the slightest. Because there was no time frame. Because I wasn't going home. Or to Sulfur's.\n\nJust to his room or his slave's toy room. I sniffled and finally managed to speak for my own comfort. \"May I ask you questions?\"\n\nHis eyes practically glowed with his pleasure at the way I asked permission and he took his mask off to switch for something that almost looked like a partial gas mask, letting it hang loose for the moment so he could speak. \"How pretty you are when you obey. Go on, but be respectful.\" I frowned when he got out the strangest setup I'd ever seen in my life and he chuckled. \"I'll answer the question in your eyes for free. This is an electrical unit.\" He held up something that looked almost like a pen, except with wires at the end. \"This has a neat little arc that sears the flesh and vaporizes it. Far less painful, unfortunately for our purposes.\" He winked and touched my nose so that I even managed to smile. \"But far more intricate for neater pictures.\"\n\nHe was so calm, so methodical while he set the stencil on my outer thigh, making sure he liked it. That's when it turned terrible, was when I couldn't see the design and he was studying it for his own criticism. Because the design didn't matter for a slave. The padlock soldered around my throat felt even heavier than the previous collar and my pussy felt so very empty. I ached and wanted to cry that this was my reaction to this. I seized the first thought I had for distraction. \"Will I still get to go to my law classes and see Pet, please?\"\n\nHe looked up, a little bit of surprise in his eyes. \"Of course you will. We have all summer to work together to fix you into the mindset of being a slave and break you to it.\"\n\nA little bit of hope made its way back to my mind. That wasn't so terrible. \"Really?\"\n\n\"Really, really.\"\n\nOf course there was the second thing to think of, how I didn't think he'd need the summer to break me down into that dark place where I was so free to love the pain he gave, where I was an owned little plaything, where he conditioned my mentality into something down a dark path. I shivered and he pat my thigh. \"This is what's happening, Honey,\" he repeated softly, and this time I sank into the words, feeling calmer with them. \"There's nothing you can do about it.\" I rested my head back against the cross, while his words from earlier sank in, too, how it amused him to see me panic.\n\nHe fixed his mask and took the surgical unit in hand, that small delicate little pen. I closed my eyes, finishing the word repetition he had started. No one is coming to save you. Let it happen. Such a sadist's thing to say. Let it wash over you, let it sink in, let it make you empty, let it have control, and let me take over.\n\nLet it happen. I gasped a little when the pain of it started and there was pain, although it was nothing like the types I had already suffered at his hands. This was calmer, for a start. It was almost muted, but it itched, and there was definitely a sensation of heat. It was also an even, continuous drone of a sensation that turned into something more and more acceptable for me.\n\nI felt a little horrified with how wet it made me, so much so that I felt like he was going to notice soon when I was too much of a slut. I heard a soft chuckle behind his mask and cringed because it had to be from my finally dripping on the floor, but it was a little of a relief after the fact, to have it out and visible like that. It was freeing, to have him know for sure how much of a pain bunny I was and to hear him only find his amusement in the fact and carry on. It reiterated how pleased it made him with how much of a masochist I was and let me calm down. My world went cold and empty and I sank into the steady drone of pain, like falling into quicksand ever so slowly. What was better was how my body felt like it was heated with the branding, while my insides felt like clean, untouched snow. Fire and ice.\n\nSadist and Master, for him. His sadism was so excited and his mastery was so calm.\n\nHome. I was home, I supposed. It made me sniffle again when I faced the thought, but I could take it like I could take the pain and I did. I made myself go further into the thought, that it was home for me, but not my home in the possessive sense. Slaves didn't own things like that when they were owned. They had gifts, though, like the toy room, and they were adorned for their Master's pleasure. Like with the humiliating collar around my throat with the heart charm. I had a romantic image of being by his side in a fantasy ballroom. Partners danced together while he led me around the dance floor and I watched a woman kiss her husband. Of course in my mind's eye, I thought it looked nice for her, but didn't think of myself as part of that world either. I was the only slave there, a singular occurrence and I was dressed beautifully. The fantasy warped into something even worse with the thought that someone would look at me and notice the collar at my throat and they'd be more afraid of my Master than ever.\n\n\"There we are.\" I made a soft whimpering sound when he cleaned his work and I didn't even feel much curiosity at what had been seared into my skin. It was magical actually, the kind of thing I had always seen with Pet and wondered about, the kind of mindset that I had touched on in games, but had never kept.\n\nThis felt real, soul deep and real. \"Yes, Master.\"\n\nHe stood back, small flecks of blood on his talc gloves, and came back with the tray and a new set of gloves. \"Don't worry. I'll let you see it when I'm done, but while I have you here, there's a few more touches.\"\n\nI obediently tilted my head back when he pressed it, whimpering only a little when he set the forceps to my septum and locked it with a rubber band. Please don't hurt too bad, please be fast, please be fast... It seemed an odd moment for a masochist of my caliber to be so terrified of a piercing, but I'd heard enough horror stories about how this was the worst piercing to get, even worse than a clitoral hood ring. He was merciful to me, lifting the needle in one swift, secure motion and- \"Youchie,\" I whispered, eyes watering. It might have been the worst piercing in some people's book, but after what he'd done to me? It was stunningly smooth. Painful still, but over fast.\n\nHe finished so quickly, too, my demon Master, and then he moved on. \"Hold out your tongue.\"\n\nAgain, I brokenly obeyed, and again, he went quickly, until I sniffled around my new rings. \"Do I look pretty?\" My voice was small and I didn't know why I needed to hear his pleasure specifically, but I did. If anyone else had validated me, I don't think it would have had much meaning in that empty mindset.\n\nHe stroked my hair back against my head and his voice was low and intense when he answered. \"You look like the most beautiful thing I've ever seen in my life.\" Warmth flooded through me, so much that it must have been obvious because he smiled gently, seeming to sense that I needed his reassurance. He was a sadist who wanted to care for his little masochist, but of course, that would make sense. He balanced the cruelty of what he was doing with a soft petting motion and a calming voice. \"Honey, you'll find that life as a slave, or at least life as my slave, is a very reassuring thing for that fear of approval you have. If I disliked the image of your pretty jewelry, I wouldn't give it to you. Slowly, but surely, I think you'll learn to dispense with the questions of whether or not you're beautiful for me. The answer will start to come to you easily when I choose what you wear or how your hair is for a night. And it will be, 'Of course I'm pleasing to him. I'm his slave.'\"\n\nI rested my head against his when he gave me the touch and he was even kinder then. He stayed that way for a while because of course, he had all the time in the world to do everything else he wished.\n\nAnd then he stood up and donned his demon mask again. \"Now for your punishment. Afterwards, we'll eat and I'll give you a bath like always. It's early but you've been through one hell of a weekend. When you take punishment, you sleep in the slave's toy room and not in my cage or bed.\" Now that I was heavily under the waters of that mindset, I could see more of him, too. He was incredibly satisfied with teaching, lecturing me. It seemed like such a Master's quality that went with that need to nurture and caretake. It fit well on him, even with the burning excitement to hurt me. \"Normally, I wouldn't mind those protests of yours, but that one specifically is one you should avoid, at least for now, when you're adjusting. You don't tell Master what he can't do. Beg all you like, tell me you can't do something, protest, struggle, and all the rest. Sometimes the atmosphere won't let you think so straight and I'll understand that, but this one sets a bad precedent right now. Learn to avoid that one, understood?\"\n\n\"Yes, Master.\" It felt like the quicksand almost had me covered when he came back with the cane.\n\n\"Count to 25 and thank me for each one.\"\n\nHe started at my breasts and where he was so playful with his sadistic playtimes, I learned quickly enough what made his punishments so terrible when his pain was something always freely given. It was the way he stood so distantly, the way he didn't flirt with me, the way he didn't lick my tears when I knew he would have loved to. It felt awful to force him to withhold from those little things he loved so much, felt even worse that this wasn't the rape game we had where I begged him to stop, and then it sank in how much I had come to love him in that game. Eventually, he tired of my tits and made it clear what was next when he rapidly spanked my pussy with his palm to heat it, then stood back again. I shrieked with those, when they became so harsh that it felt like my sex should be swollen. I pant in relief when he went to my thighs instead, and he took a great amount of care to not touch the outside of my left one, where my new brand was. And he ended it with those, choosing to draw my blood with two of them, something that made me sob all the harder with how he loved to lick my blood and didn't.",
        "But as hard of a sadist as he was, he was that much of a fair Master and he didn't just hold me when he was done. He soothed me, pet me first, and when he let me off the cross, he lifted me to his chest, bridal style. \"It's over,\" he said softly. \"All over now. Come here, little rabbit, and let me show you something to cheer you up.\" He uncovered the mirror and I stared, sniffling softly. He still pet me when he set me on my knees and gently pulled off the gauze bandage over my brand, while I took in the sight of me. My collar really was rather pretty, despite how obvious it was, and the heart padlock was glittery, despite being clearly a padlock at my throat. The septum ring seemed too large on my smaller face, just enough to be a humiliation for a slave, but it wasn't garish and I remembered all the other rings in the slave's toy room, cute ones with things like stars and rabbits at the ends. Of course, at the moment my eyes were red and my tits had lines from the cane, while my thighs were even worse.\n\nMy eyes fell to my thigh when he pulled back the bandage and, if the pain hadn't already settled me well below the quicksand's embrace, then I fell most completely with the sight of the brand.\n\nIt was a wolf's head, surrounded by the roses.\n\nBy the time he put me to bed - after eating at his feet under the crop and his bathing me in a shower since I couldn't soak my wounded thigh - I was a subdued, calm little slave, albeit in a residual state of shock. But I was quite subjugated when he cuffed me loosely and comfortably to the bed. \"So you don't roll on your left side, restless little rabbit.\"\n\n\"Thank you, Master.\"\n\nHe touched my nose. \"You're welcome and I hope the weekend was everything you could have hoped when we planned it.\"\n\nI shuddered at his amused tone, knowing what it was for. Because it was a weekend that was never going to end for me, a masochist's hellscape that I'd never leave. I fell asleep after he left, but that night it was dreamless with the hopeless acceptance reinforced by all the times he had said the words to me.\n\nThis was what was happening and there was nothing I could do.\n\n\u2014\u2014\u2014\u2014\n\nSeth\n\nIt felt like I was burning.\n\nJesus, the look in her eyes when the knowledge that she wasn't leaving set in, the way she cried. It was so fucking gorgeous, filled with a masochist's blend of terror and arousal, that heady mix that only someone like her could ever have, and she had it more purely than anyone I'd ever met in my life. How the hell did she exist? I didn't know but I was grateful for it.\n\nIn all my years of playing, it was a fantasy I would never forget, one I would have never dreamed I'd get to experience. It was the kind of intensity that a sadist might read about and never expect to get to feel. Of course, it was far different than the ecstasy of seeing physical suffering and feeling a body vibrate with vitality when a cane struck them.\n\nBut this? This was a slow, eager joy that spread through me. It felt like it was useless to masturbate when I'd just be hard again 30 minutes afterwards and I couldn't go to her for help. I'd pressed her harder than hard for one weekend and she'd been through enough to please me as it was.\n\nGod, the images that she'd given me. Branding her, piercing her, collaring her. I fucking throbbed. I'd never been this awful to someone, this absolutely cruel and twisted, and she had fed back to me and flirted with me, had adored me even while she gave me the fear I craved.\n\nSo this was what love was like. It was this sensation of feeling accepted, of feeling okay and at home, of peace and devotion, and it was devotion. I didn't crave for more after her, except for more of her, of course.\n\nBut, as the saying goes, all good things...\n\n\u2014\u2014\u2014\u2014\n\nNynaeve\n\nI'd never been so fucked out in my life... and he hadn't even fucked me the night before. But when I came awake, I had that body soreness from having slept so damned soundly from one hell of a weekend. When I stretched, the heavy red covers of my circle bed slid over my cane tracks and made me flinch. He had chosen a nightie for me, also red, and I shivered when the first thought I had was that I missed my Master and far preferred waking up in the cage.\n\nI crawled over the covers, meeting my reflection's gaze in the massive vanity mirror and blinking. The collar had shifted in my sleep and I fixed it just so, just how it should be, and then twisted my mouth so my nose made a cute little circle, fantasizing I was a little rabbit coming awake. Not so bad, he had said. Even with punishment, my covers really were cozy and my collar really wasn't so bad. His cane stripe work was always so even and he gave his marks so carefully. And then of course there was all the clothing he had for me in the closet, cute little rings for my piercings when they healed, and he had said the closet wasn't as full as he intended it to be. He was rather romantic with his painful angel wings, too. And then there was-\n\nMy eyes fell on the rose on the dresser by the door and I grinned. The roses! Maybe if I begged my Master, he'd be kind enough to get me a press book so I could keep them forever. The thought of them fading made my heart hurt and how many females always wished to be sent flowers? He gave them all the time. Well, one of them and it was usually an exchange for my blood, but that was even better, somehow.\n\nHanging from the dresser was a day dress and matching shoes, something that made me tilt my head. I looked down at my ankle and realized the cuff had been unlocked and I could easily unstrap it. It made me nervous for a moment, seeing the dress, because I wasn't a submissive who was very good with unspoken commands and hints, which was one of the reasons why I most definitely appreciated his taking whatever he damn well pleased. For a law school student, I was pretty damned oblivious to subtlety sometimes, but even that was carefully addressed with the note on the vanity.\n\nGet dressed and go to the sitting room.\n\nAnd I'd seen where that was when he'd taken me through to the dining room to eat. That was another thing. Good Lord, I had an ostentatious Master. I could eat in that decor, wear the kind of luxury most people only dreamed about, and he was a very good caretaker.\n\nYeah, but I doubt most would dream about being taken care of like this. Like an object owned, a slave and not a play one, but the real thing, with a Master who found it relaxing to use weightlifting weights for tit torture. Even so, for someone like me, it wasn't terrible. I tugged my collar, shivering at the thought of breaking for him, at how long it would take for me to wonder why he didn't hurt me one night, when I would start to associate his love with pain. How long would it take me to get confused and to crave those dark sensations only he could give so well and with such cold experience?\n\nI paused when I was dressed, resting my head against the door to breathe for a moment, trying to focus through the hot arousal pulsing through me. Just the thought of those twisted nightmares were an aphrodisiac to drive me insane. The thought of Two and Pet didn't help any. They would call me insane for this kind of fiery lust at what was happening and what I was afraid of, both of them for different reasons.\n\nI shook myself and thought of different things, like the dress he had chosen to display his slave in and how gorgeous it was for being a day wear dress, and opened the door. One step at a time.\n\nHe was there, in the sitting room where he'd commanded me to, and he wasn't alone. I stared at Ash when he looked up from the chess game he was playing with my Master. And then I snapped my gaze to Master's when he stood up.\n\nAsh cut him off, pointed Master back to his chair. \"Not yet, you don't.\"\n\nBut once I met Master's eyes, I couldn't look away again. \"You... you...\" I stuttered.\n\nAsh stepped closer to me. \"Hey, Evey. You know how brutal this can be already, remember? Come back slowly, yeah?\"\n\nI glanced at him but then shot my gaze back to Master's and he was starting to smile because I think he understood all too well. \"I th-thought- I thought- I thought it w-was real.\" It came out breathless. \"You made me think I was never going to be free, ever. You broke me! The solder gun!\"\n\n\"The brand,\" he finally answered softly. \"And I did do that.\"\n\n\"You were so mean! You're the worst!\"\n\nAt that he quit trying so hard to hide his smile. \"I'm terrible, absolutely evil.\"\n\nWhen I finally looked back to Ash, he looked both exasperated and resigned when I had tears in my eyes. \"It was a fairy tale! Oh, it was the worst, best thing ever! I felt broken and terrified and like I was trapped forever in a torturer's dungeon! He didn't even take my sense of time! I- I-\"\n\nAsh sighed, but Master looked victorious. He finally stood and Ash let him go to me, so that I quivered in fear and love all at once when he tugged me to his arms. \"Sorry I had to break your illusion, but my lack of conscious doesn't seem able to outlive the strength of your masochism.\" He stroked a finger down my cheek. \"You can go back to it, though, if you like.\"\n\nAsh snorted. \"Romantic bloody proposal, Seth.\"\n\n\"You mean it?\" I whispered it, knowing I shouldn't make a decision like that when I was flying so high, so fucking high. I had thought of myself as an object, for Christ's sake. I still partially thought of myself as that and I couldn't seem to come out of it and what the hell was wrong with me that I didn't even seem to want to be free of it? I started to shake, wondering if I'd ever even make it back from that dark place...\n\nWhen I kind of didn't want to.\n\n\"Ahhh.\" Master smiled. \"Maybe I was wrong. Maybe the voice of my conscious becomes too loud at the exact, perfect time that your masochism finds its limit. Come here. Too intense. We do this slowly.\"\n\nHe did something more than amazing to me, then. Master caught me by the scruff of my collar and I bowed my head while he guided me to where he and Ash had been playing chess. And he had me kneel at his knees so that I tumbled safely back beneath that quicksand, away from that terrifying light that was freedom and decisions.\n\nAlthough, I didn't fall quite so deep. While he spoke with Ash about Sulfur's and played chess, I came back little by little with small actions. At first, it was looking up at my Master for his permission to talk with Ash. And then it was speaking a little more. And then it was talking without permission. And then it was talking about law school plans and forcing my mentality to remember that I was Evey and not Honey.\n\nWhen I looked at Master while he watched, his hand stroking me the entire way through, I think we both knew how it was going to end, though, even if I was still terrified of the thought of wearing his collar, even if his slavery was absolute. Somehow it made it all the worse that he had given me that taste of it, that glimpse of the mindset he would carefully enforce and condition. It was proof of a kind for how awful and capable he was.\n\nBut there was something in the sorrow in his eyes that said his conscious wouldn't let him keep me under after that weekend, even if I think he likely could have gotten away with it, no matter how meticulous Ash was.\n\nPart of me wondered how dangerously close I had come to having him do it in full.\n\nI do know that when Ash helped me to my feet and softly said we really needed to get back to Pet, Master's eyes turned fierce for a moment before he quelled it. Because I think he knew there was no way in hell that Ash was letting me stay there when he would have Stockholm Syndrome concerns. I know that's what I for damn sure knew.\n\nBut then Master waved and my weekend was over. When I finally sat in the car, I wondered if I was ever going to be the same and then wondered if I wasn't the luckiest girl alive. I touched the collar at my throat, where I hadn't made the decision to take it off or keep it yet, and stared out the window.\n\n\u2014\u2014\u2014\u2014\n\n\"Ugh, why is it the worst feeling ever coming back to reality like this?\"\n\nI took another drink of wine and Two laughed. \"I don't know as much about that part of it.\"\n\nPet grinned. \"I'm... actually a terrible person to talk with about that too. You know, the whole taking drugs thing at the time and all. Everything was really surreal when I ran from Master.\"\n\n\"I wish everything was surreal right now.\" I paused, staring into my wine, and finally made myself whisper it. \"I felt beautiful. Gorgeous. Like the most treasured object ever. It was so scary.\" I let the romance take over my words, helped by the wine. \"I was decorated with cane stripes and they were lovingly spaced in a perfect pattern.\"\n\nPet laughed quietly. \"Weird how it works, huh? There's something about feeling owned. It's like a fantasy book. And all the time you think about how you must make him look by being his slave, because owning you has to make him look more ethereal or mysterious or something.\"\n\n\"Exactly!\" I breathed it in excitement, leaning my head on Two's shoulder so that she wrapped her arm around me comfortingly.\n\n\"I don't know about that part of things, but I do know about the cane stripe thing. Canes are the best already because they're... Oh, man. It's this love-hate-thrill-lust thing, you know? They hurt something fierce and you hate it... but you don't though. You want to stay away, but you can't and it's the worst and best thing ever all at once.\"\n\nPet tucked a strand of her hair behind her ear and after my weekend, I couldn't stop staring at her hair. It was icy blonde in color, and Ash had meticulously glossed and cared for it until it shimmered in the light, so exact in how he nurtured his slave. I remembered when she was first getting back to being his, her hair had been messed up where she'd cut it and he had calmly and methodically fixed it. It made me wonder if my hair might eventually become so beautiful when I remembered Master so lovingly brushing my locks. \"You're both crazy. The cane just sucks.\" She paused. \"Well, okay, not entirely. Sometimes, it is really nice to have a session when Master feels dark and it hurts. I like knowing it's hard to serve him or please him in some way and succeeding to do it anyway. It makes me... happy. Like I earned it.\"\n\n\"Mmm.\" I closed my eyes, smiling. \"It's so romantic.\"\n\nTwo laughed and pet me. \"It's okay, Evey. You know why Ash is keeping you here right now, right?\"\n\n\"Huh?\" I looked up. \"Oh, yeah, no. I totally do. The place I was in that last night was... Oh man, it was definitely insane. It was the kind of thing I never would have dared to dream for. So no, I get it, you know?\"\n\nTwo smiled down at me. \"Just making sure. God, you're actually kind of amazing, Evey, you know that? Like, that's the kind of balls deep headfuck game that can jack up a psyche and you just... I don't know, you're one of the most grounded, well adjusted maso sluts I've ever met, I guess. It might be in large part because I can't understand the depth of the slave mentality thing at all, but it's the kind of thing I think is pretty cool.\"\n\nI blushed, then laughed. \"Well, thanks, but I don't know how much credit you should be giving me. I've had to stop myself from correcting it when you say my name, like, every time now and it's been a fucking week.\"\n\n\"You and him have been texting now, right?\"\n\nI grinned when Pet burst out laughing and it was Pet who answered. \"Yeah! Last night, oh man, last night was the funniest thing I've ever seen in my life. Okay, have you seen Seth for a picture of what he looks like, how much of a monster he is?\" Two nodded and Pet's grin widened. \"So, last night we're playing Fortnite together.\"\n\nTwo rolled her eyes at that. \"What losers. Real men play Apex.\"\n\n\"Yeah, if they want an anxiety attack. Hush. So we're playing Fortnite and when we log on, Evey sees this skin that she dies over. I mean she goes into a laughing fit. It's called the Nighthare and it looks like a rabbit from hell. She starts messaging him to send him pictures and voice chat messages about how this cartoon skin has meathooks hanging from his ears and it's the most hilarious thing ever. Master is reading a book in the bondage bed and watching this with that look he gets when he's vaguely wondering how his life ended up this weird sometimes. But we start playing, right, and then when we back out, Evey has a gift.\"\n\nTwo froze with her wine. \"He bought it for her.\"\n\nI couldn't quite meet her eyes. I was laughing too hard. \"He's a cartoon rabbit and he has meathooks.\"\n\n\"Dear God.\" Two closed her eyes. \"That is true love. The man had to make an epic games account to buy that. That's a stain he's going to take to his email grave and never be rid of. And he does not look like the type of person who plays goddamned Fortnite. Like that's true humiliation, I'm just saying, especially when you consider that he and Ivory buy their skewers from the same place.\"\n\nI grinned. \"And he branded me. With a brand.\"\n\n\"No shit, is that what branding means?\"\n\nI laughed and Pet giggled across from us. And then I closed my eyes, hugging Two. \"He's so dreamy. I've been trying to say his name since I left.\"\n\nPet had a smile in her voice. \"I can't say Master's name anymore. Well, like you, he wouldn't give me his name to begin with. I'm sure I could have found it online though.\"\n\nTwo snorted. \"You mean right on the website of this fetish club he owns? Yeah, you definitely could have. It's not like he's hidden about who and what he is. The man lives in the back of Sulfur's and sleeps in a bondage bed.\" She nudged me. \"I know I've heard Pet call him by his name before though and I've said Ivy's name all the time. Ivory. Ivy. Flatline. Master.\" She grinned. \"I like all of them.\"\n\nPet smiled again, bashfully this time. \"I don't like saying it very much. I mean I love his name but I never want to be disrespectful, you know? But sometimes when we're out with vanilla people around, I have to and it always makes me giggle a little, how much of a hang up I sometimes have with it. The only scary part for me is how I know some people would heavily judge me for feeling that way about his name and the disrespect thing and it stresses me out trying to hide the worries. But I can say it in a sentence like this: 'Master's name is Ash'.\"\n\nShe lowered her voice on the name and grinned so adorably that I had to smile too. Even Two had to smile crookedly and she wouldn't know romance unless it nailed her tits to a board after writing in permanent marker on them. The truth was that Ash's proposing to Pet came with an engagement ring that would make anyone feel starry eyed. Her ring was as sparkling as her eternity collar and cuffs were discreet. \"Okay,\" I finally said, tugging my own collar. I still wore it but I had to make the decision on whether or not I wanted to keep it. Ash had rolled his eyes when he learned the soldering gun part of it.\n\n\"Really?\" He'd said, looking at Master. \"You couldn't choose an option with, I don't know, a hex key or something?\"\n\nTo which, of course, Master had merely been calm again. \"Not dramatic enough. I made sure the lock part was smaller in design and left room with the collar so it will easily cut off without jarring her.\" He smiled at me, winking, while Ash ran a hand through his hair in exasperation.\n\nI pulled my thoughts away from that wink, from how dreamy he was. Because he was. Of course he couldn't choose something so easy as an eternity collar that came off with a hex key. He had his sadist's pride to be met with flair, after all. \"Okay, I'll say it. Master's name.\" I froze and took a breath, laughing a little. \"Master's name is Seth.\"\n\nThe soft voice behind me made my heart leap fit to burst my chest and Pet had a grin that said she'd set me up. \"Honey's name is Nynaeve, but that was rather mean of her parents, so we call her Eve or Evey.\"",
        "I turned in my chair to face him. \"Master! That's plagiarism of Pet's words.\"\n\n\"It is,\" he answered, studying me with a small smile, and then he fell quiet, as if unsure what to say and I understood that, actually.\n\nI teetered on a ledge. Part of me, the part that had always been terrified of that dark self inside of me, wanted to stay in my only partially dark world. Part of me wanted to stay in the shallower end of kink, where I knew it was safer, where it would be one play date at a time with different Doms and Sadists, where I'd only wish for my worst nightmares and I was the worst demon in my night. I'd be lying if I tried to claim that part of me didn't question myself.\n\nThat comforted me actually. A rash state of mind wouldn't have questioned at all and he was not a light Master. He was hard and his lifestyle was all encompassing. Of course, he wouldn't be him if he wasn't like that.\n\nHe held out his hand, leather clad again, and I glanced at Pet and Two, which was another thing that comforted me. A girl should always look to her girlfriends, but they both had that smile that said even if they did think I was crazy and even if they wouldn't want it, that it seemed to clearly make me happy.\n\nSo I took his hand and it was a moment where I think we both knew what it was. His eyes lit up in pure triumph and I felt like a fall from grace all over again when I closed my eyes and nestled into his cruel embrace. He lowered his voice so that only I could hear it. \"It's going to be a thing of nightmares, Honey, you know that, don't you? I'm going to twist you into a pain goddess and it's going to be a wonderland.\"\n\nI closed my eyes, grinning with those thoughts that had haunted me for a week now. I had been in a state of perpetual hell, where I woke up in a frenzy from nightmares that only got darker. I was masturbating seven times a day and it wasn't enough and felt like it would never be enough. The night before, I had woken up from a nightmare where I was kidnapped, where I woke up chained to a chair. It was in a room where blood surrounded me on the floor and walls. Hooks and chains hung from the ceiling and they dripped with something that looked like tar. A man in a demon mask was a silently pacing torturer and at first he had bolt cutters that he snapped in the direction of a diamond choker at my throat. And I didn't know why that diamond choker was more precious than my life, only knew that I screamed with each snap in the direction of it. But my masked captor didn't actually touch the choker and it turned out he wouldn't be so cruel as to cut it from me. He only taunted before he disappeared again and came back with a miniature drill and forceps. He placed the latter on my nipples... before he went to drill the holes through them and that was where I woke up, more aroused that I'd ever been in my life. \"Yes, Master.\"\n\nHe chuckled low. \"I heard that you had to use Ash's Pet after you had nightmares.\"\n\nI flushed because that had been the other part of waking up in the night. \"You seem like you're in pain, Evey, and isn't it such a good thing that my slave is heavily trained in oral?\"\n\nHe had stroked Pet's hair back, while her eyes said she floated happily in her slavery headspace, and he helped me crawl over her face, so that she used both her hands to ever so gently spread my pussy and then started with a long lick that made me moan. And Pet was deeply trained to take pleasure when she gave it so her body had shuddered with the sound and she gave her own soft whine before she thrust her tongue up inside me so that I rode her face. Our whimpers and mewls blended together while Ash watched at first and then came back with his riding crop. I soared when he cropped my nipples. \"Sit straighter, Evey.\"\n\nI obeyed and then Pet's moans increased into something frantic, her tongue lapping in eager, hungry strokes, so that I looked back to see Ash stroking the crop delicately up her thighs to tap lightly around the stainless steel chastity belt that held her filled. But the look in his eyes was clear, calm and distant.\n\nNothing like my Master. Oh, he was most definitely implacable like Ash was in some ways, but he turned excited when he picked up a toy. Of course, his toys were to hurt, not to tease with pleasure. If he made me an oral slave, it would be because I wasn't permitted a kiss to the lips as his degraded rabbit. It made me shudder in deep humiliation, how quickly I had gotten used to thinking of kissing him and picturing my lips at his cock when I did.\n\nThat thought had been enough to make me cum with a shout on Pet's face.\n\n\"Yes, Master.\"\n\nHe smiled. \"But, of course, they're not really nightmares for you.\" I had to grin because they truly weren't. They were romance for me, dreams of the most twisted kind, and they made me go so hot. Master looked over my head and raised his voice back for Pet and Two. \"Mind if I borrow your friend for a walk? I'll bring her back.\"\n\nTwo was the one who grinned, while Pet looked bashful. She always turned a little quieter in the safety of her Master's playground, especially in the presence of a Master, even if outside of it she could argue with the best of them. \"Well, if you insist and all that.\" And Pet giggled, inclining her head in something more of a subservient bow, rather than a nod of affirmation.\n\nMaster snorted and shook his head at Two, who grinned wickedly, pat Pet's head, who bowed lower in joy, and guided me with a hand around my shoulder so that we left Sulfur's. The sunshine on my face made me smile and I was glad I hadn't been drinking overly much that day. It was enough for a daytime glow, so to speak, but under the sun and with him, it was easy to forget about it. \"I believe it was Ivy who said, 'God save us from submissives and masochists,' back in the day and it still holds true.\"\n\nI cuddled close to his arm, smiling up at him. \"He still says it.\"\n\n\"Good, he should. Especially with you three hanging out together. The lot of you are trouble.\"\n\nI giggled. \"Perhaps the three of us need our Masters to keep us in hand.\"\n\nThat made him smile down at me. Out in the streets, during the day, it was busy, but no one looked at my collar or paid attention to us. It felt like they looked at my collar, though. It wasn't tacky or anything like that, but it just felt so big and noticeable with its soldered padlock. It felt even larger when Master's eyes fell to it. \"Is that right?\"\n\n\"Mhmm. You knooooow.\" I drew out the word so that his eyes darkened. \"Before you and I met, I had this conversation with Ash.\" I was held in the grip of recklessness but it was a kind of premeditated and acknowledged recklessness, as impossible as that sounds. Once the words started, they excited me with terror too much to stop them or take them back. \"Where I was trying to describe to him why I hate telling people my limits even though I know you're supposed to do things like that for safety and sanity. But I was telling him how I didn't want to like things, how I wanted to absolutely hate it, and telling people limits felt like giving permission and that ruined everything.\"\n\nDanger thrilled down my spine with the look in his eyes and the knowledge that I better damn well shut up if I wanted any hope of escaping him, if it wasn't too late already. \"That's an interesting conversation to have. Little rape bunny.\"\n\nBut his voice on that last phrase made it clear that it was the nail in the coffin. He lifted my face to look into my eyes where we waited at a crosswalk and the motion felt painful with how we were standing at a publicly acceptable distance, when it made my skin itch to be that far apart. His eyes searched mine thoughtfully, a soul search that scared me when I knew what he'd find because the real thing was the secret torture in my maso heart. At last, he smiled and the moment was over so that he walked on, holding me close again. \"Tell me more about the book you're reading. It sounded interesting over the phone.\"\n\nI spoke quickly to override the surges of terror beating outwards from my chest. \"It is! It's a trilogy version of Wheel of Time and it's really cool! It goes super fast though, especially if you've already read Wheel of Time.\"\n\nHis smile was warm and calm when I spoke on and on in a state of heightened anxiety and fear, wondering one word.\n\nWhen?\n\n\u2014\u2014\u2014\u2014\n\nSeth\n\nI let her fear take a nice, dark hold. For weeks, I went and found her at Sulfur's, asked her on dates. I would take her out for coffee, feeling like an animal waiting in a predatory stance, the way a crocodile might be still before it snaps in a sudden burst. It felt twisted, sitting across from her, thinking that the collar on her throat was more permanent than she knew. I would think delighted thoughts about how I could let my little rabbit enjoy her free mentality before I dragged her back under the dark silt and held her there, no matter how hard and often she struggled me.\n\nMessed up, sure, but it was supposed to be. That's what made it such fun. With her, that's what made it so good. I still remember how she'd start to chatter sporadically with nerves and fear after she'd see something in my eyes, after some speculation must have crossed my face. God, it made my chest tight, to have her say it so easily, to hear how she didn't hide from who she was and that she didn't want to give permission.\n\nBut of course she wouldn't. A masochist of her level? She needed to burn in helpless force. It was something I could appreciate, when I did too.\n\nI tortured us both, though, because it was fun. It felt like my little bunny was free of the dragon coil of my tail. Instead of holding her captive with it, I wagged that tail behind me like a cat, on my paws in a crouch, my snout pressed against her rabbit nose while we played a wicked little game of chase without the chase. I would snap my teeth and she would hop away in a kicking circle only to make her way right back to me and press her little rabbit nose back to my snout in a stand-off. For weeks, I let it go too. It was beyond joy. After that first week, I invited her over to my place again and she walked through the door with blatant terror in her eyes. You could just tell that's when she thought it was game over. She paused at the door, staring up at me where I stood inside, and I smiled at her, waiting, making my expression as innocent as possible.\n\nShe swallowed and stepped inside, taking my hand. \"Do you like chess?\" I asked softly.\n\nShe choked, her answer stunned. \"W-what?\"\n\n\"Chess, Honey bunny. Do you like it?\"\n\nThat's when she laughed and I had to smile at how breathless it was. \"I know how the pieces move, but that's all I've gotten. I'm afraid I'll be akin to a chaotic squirrel when it comes to any real strategy challenge.\"\n\nI stroked her hair. \"I'll teach you. Come and play with me?\"\n\nAnd she shivered, while I felt something very dark, the undertone a delicious charge for something so mundane. It struck me as a twisted form of romance. How often would a man turn an ordinary day into magic for his loved one by sending her flowers? How often would one feel like they were floating when new love had them before a date night?\n\nPeople often have a hard time understanding me and I can see why, but for me, this was something twin to that, only darker and more violent, a wilder, more evil type of romance, I suppose. In the same vein, I imagined a demon's possessive build up to taking what he covets by force something much like an angel asking his beloved for her hand. Something similar, only vastly different due to that black charge of satanic energy.\n\nOr perhaps a simpler way to say it is that some tied their loved ones with velvet ropes and I used spiked chains that pierced the flesh and ensure my beloved wasn't escaping.\n\nI let her leave that first day and she was quaking. \"You didn't hurt me,\" she whispered.\n\n\"I haven't for a while.\" I winked, letting her know that I was damn well aware and that I hadn't forgotten. Even when I found her at Sulfur's, I didn't touch her. Sometimes I would watch a scene with her, stroking her shoulder while we both burned, but I didn't touch her.\n\nWeeks. Each time she stepped through my door, she looked terrified, but then after enough time, she seemed tied in knots in general. She jumped when I touched her at Sulfur's, when I went to say hello and ask her about the movie she had watched the night before. Of course, when I interrupted her with Pet and Two on those days, there would be a small secretive smile between them that made me feel all the more playful. The result was a blend of that darkness and something that made that darkness acceptable without forcing me to withhold from it. I'm sure a psychiatrist would already have a field day with me, but it was something that made my shadow self an entity I could embrace, as extreme as it was.\n\nFor a while, I wondered. How to go about it? It seemed so obvious to do it at my house, like something too easily expected, and I wanted to feel the sadism satisfaction of her broken misery, that pure, deep feeling I'd had that one magical night. But I hated the thought of being someplace like Sulfur's, where I couldn't have her in my dungeon. It wasn't a bad thing to make myself wait while I tried to figure out something perfect. It gave me a chance to really crank the screws of fear in her every now and again.\n\nFor instance, one night when we were playing chess, I had a pretty memorable moment. She was figuring out the strategies, even if she had a problem with the logic change from what she was used to. Her lawyer mind was well trained to a certain flow. If A came before C and C came before D, then A also came before D kind of thing. The change up to the strategy of chess made her frustrated at first, but she seemed determined to conquer the challenge in the same way she seemed determined to take ridiculous amounts of pain. While she was deciding on a move, I spoke up with a thought that came to me. \"You know, Pet and Two should be setting a date for their weddings.\"\n\nAt first, she grinned up at me. \"Yeah, I know! I get to be in both of them.\"\n\nI smiled, then softly added the killer part. \"I won't give an engagement ring. Just a heavier collar. There will never be a wedding to let a slave pretend they're anything but something I own for my torturing desires, just more long needles pierced through their skin. There won't be a kiss from a bride like in the movies, just more submissive begging and nuzzling against my cock.\"\n\nShe froze, the meaning making her eyes dilate with fear and my God, it made me so hard it hurt. She lost that chess game, but I didn't win as well as I should have, not when the scent of her horny slit was a flood to my senses with how aroused it made her.\n\nAnd I let her go again, smiling, wondering. How to make this good? How to go about really breaking her when I was given free reign?\n\nI thought through everything I knew about her, sifting through her small antics and those little routines. And I finally remembered one that might work for the brokenness I wished to see.\n\n\u2014\u2014\u2014\u2014\n\nNynaeve\n\nFridays were usually special, if I wasn't busy. See, here's how it went. I'd been staying with Ash a lot lately and he still hadn't let me go home, which meant usually, on Fridays, I was having fun in Sulfur's. Those first two weeks after my Hell Weekend, as I had come to affectionately think of it, I realized something. See, my collar marked me, but even with it, Ash could set me up if I wanted to play. And I wasn't technically attached yet, something that Master would come to softly say to me when we watched scenes together and I suffered at his side, when I considered how he hadn't hurt me in ages.\n\nBut I didn't want to anymore. It was a moment of horror where I realized... Nothing was going to be like him for me. I hung out still, though, because the people were awesome there, but since my Friday fun time had a little bit of a kink in it - heh heh - I set up another date to, shall we say, supplement it.\n\nAlmost outside of the city, there was this magical, glorious, wonderful place. It was fantasy land, almost as good as Sulfur's. Okay, that's a total lie because nothing was as good as Sulfur's, but it was great is all I mean.\n\nThe coffee shop and bookstore. I got a Venti Cinnamon Dolci Latte, with a double shot of espresso and extra cinnamon flakes on top. And I bought one book for myself every Friday. That night I was having a problem deciding, actually. There were a couple of books I wanted and the personal rule was one. I could have one. Ugh. When I looked out and realized it was starting to get dark, I finally forced myself to reconsider all my options. I had to get back to Sulfur's by a certain time or Ash would be worried and I wanted to play anyway.\n\nI turned around to one of the shelves I'd been looking at for a specific book consideration and froze, then felt my heart start in double time. A red rose sat on top of the shelf.\n\n\"Oh, no.\" I whispered it, trying to not shout. Here, now? This was the only place I hadn't been expecting things to end. Darker than me. Oh, no.\n\nWhy had I done this? Why was my masochism like this? Somehow, in all my considerations, I had forgotten to take into account how bad the night might be when this happened after weeks and weeks of his sadism being left frustrated and denied. He had been as teased and taunted as I had with those scenes we had watched together.\n\nI picked up the rose and didn't end up buying anything at all. I just forgot about it in the sudden rush at the sight of that rose. Where was he? I shivered and walked to the left for the subway, wondering why I had agreed to this, when it was going to be so bad. He was evil, a monster! I looked right and left while walking, but was too wrought up to really focus and he ended up making me yelp anyway when he caught my wrist from a side alley, cupping a hand over my lips almost tenderly. \"Poor little masochist,\" he said quietly. \"It's so awful, isn't it? You hate the thought and you don't want it... but, of course, that's exactly what makes you do want it so badly. It's such a rare gift and so twisted already.\"\n\nI was following where he tugged me, whimpering, and too cowed to make a sound. The thought of fighting him here in the middle of witnesses made me become terrified, made me curl into his side fearfully, my soldered collar so heavy. I had that much of a slave heart and he knew that about me, damn him, damn him, and damn him again because it was the worst way he could have done it. It left the option for me to fight... and it was an option I was incapable of taking with my dual nature. He practically flaunted the fact in my face, taking me to a parking garage, and he was amused when he looked at me. \"I had a theory that your strange blend of pleasures might work quite a bit like mine does. I've struggled with it for years, you know, the thought that one side wants to break and the other wants to nurture. It made me wonder which side of yours would take over in different atmospheres. Call this an experiment, of a sort, to show me more about my little slave and how to manipulate her. Come on.\"\n\nHe was watching me with a mild curiosity, a surgeon's curiosity really, as if vaguely fascinated if this would be the place where I snapped and ran from him, if this would be the place I might let the masochist's need for rape and struggle have reign. I wondered what he'd do if it was, right beside his car in a parking garage in a large city, but the thought of that made me cringe into the passenger seat and I lifted my knees to my chin. \"There, there, little rabbit. I had a feeling that I might be the devil you know, so to speak. Like I said, I've always had such problems with my two desires, but how fun it is to torture you and enslave you at the same time. You'll have your chances to fight me soon enough, all you like.\"",
        "The devil I knew. I had thought that I would never know the wonderful torment that was the absolute broken hopelessness he had give me that one night. I didn't know how, but he had found a way to give me that sensation again and it wasn't in the way I expected. I had been ready for violence, had been braced for a wild night at Sulfur's where he would grab me and cover my mouth, snarling erotic threats in my ear. We had played that game.\n\nThis one was worse. This one was way worse. I bowed my head and shivered, then shivered harder when he reached over to stroke my hair, knowing it to be that twisted form he had of caressing his distraught little slave.\n\n\u2014\u2014\u2014\u2014\n\n\"No! No, please, stop!\"\n\nHe laughed behind me in his dungeon and when we'd gotten to his house was when the ability to fight finally kicked in. He'd been gleeful when I ran when the door closed, chasing me to the fireplace while taunting me. \"You know what's coming to you, you little maso slut. You're so fucking far gone that you couldn't leave until you were locked in with me and you're going to get what you deserve, what you know you deserve.\" When I'd managed to get away long enough to hide behind a sofa, he'd been a monster chasing me, like something in a horror movie. \"Come out, come out and play, little rabbit. I just want to torture you until you scream and rape you a little bit. Come on, it'll be fun.\"\n\nThat last word was an emphatic snarl when he grabbed my ankle and I shrieked, letting the terror have its way. True, I couldn't protest him out in the light - because I was his - but here in the safety, where no one was around to judge and I was sheltered in the demon's haven where it was okay to be a maso, with the sadist bad enough that he could handle it when I loved to make it rape? I could be as scared and tortured as I liked and he could be the big, evil monster in the night.\n\nAnd it was the most amazing thing I never hoped would happen when most sadists wouldn't even make me bleed. I had always felt like Drusilla from Buffy. \"You won't even hurt me just a little bit.\"\n\nBut after that chase and after he took his prize to tie me in the dungeon was when the real pain came.\n\n\"No, I don't think I will stop. Come on, say it again for me. Say the words.\"\n\nI sobbed. He'd already gotten my arms spread out over me, using chains and bolted ceiling hooks to hold me, and was fixing my ankles the same way, so that I felt stretched wide apart. And even worse was the head harness that forced my face up and back. \"I'm a filthy maso slut and I deserve to be tortured.\"\n\n\"Good girl. It's so much better when you just admit to it, isn't it?\" I was already fighting and the axe hadn't even fallen yet, the threat and promise of what this scene would be, and I thought it would be bad. I really didn't know how bad, though. \"You know.\" His breath was hot at my ear when he finished. \"I wondered how to do this. It did seem so lacking in drama to take you like that, but I really couldn't resist that hopeless look of misery you get. Your eyes glisten like you're about to cry and it's so damned cute. But then I thought that if I did it that way, I would have to make this scene a really bloody good one. I sifted through fantasies I'd had over the years, ones I rarely got to indulge, ones I never got to indulge, and others I hadn't considered. I thought about changing up the tit torture and we'll do that eventually, but it's one you've already got the idea of.\" I sniffled, waiting, dreading. My suffering was his to dictate... and he had already established that he didn't have any mercy. \"So I kept considering. Over and over pain soothes you, little rabbit, for instance. I considered how it needed to be something to help you bask in all the torture, to let you fade back into happy slavery like a good girl. I wanted something that would be good enough to make you cuddle up in your cage without fighting, even if you know that this time you aren't leaving again.\n\n\"And I settled on a fantasy that I haven't gotten to make real yet, one I've been dying to live out. It's a sadist's perfect dream to have a little victim that's all his, one to mark from the tips of your fingers.\" He trailed up to stroke my hand while the tears started. \"And down to your toes. All except your beautiful face and we won't mark that up, but everywhere else.\" Oh, God. It was going to take an age for him to do that and the amount of stripes it would be was more than anything I'd ever gotten to do. I shuddered, realizing why my head was pulled back, why he'd fixed my hair in pigtails to keep it out of the way. He didn't want me jerking too much when he marked my tits, for instance.\n\nI was shaking when he pulled away, as best I could in my spread eagled, stretched bondage. I didn't even try to brace myself for it, although I wished I could find my way back to that slave mind from before. It'd be better somehow to wait for that amount of pain. \"Please don't,\" I whispered one last time. \"Please.\"\n\n\"So pretty.\" He sighed it adoringly. \"But, like always, I think I will. Let's start with the cane on your thighs and ass. We'll have to switch things up for places like your back when there's too much vital there to hurt and we never want that, beautiful rabbit.\"\n\nHe came back with the evil cane that he loved the most. \"B-because y-you can't really harm me when y-you want to keep hurting me for always.\"\n\nHe stroked my ass with the cane. \"For certain, that's true enough, but I don't think it's the correct words. I think, little rabbit, it might be better to say that I'd sooner wound myself than do something unintentionally harmful for you. Or you might phrase it in a certain other way, one I'll condition you to know more completely than you know anything else in life. It's a concept I'm certain a masochist like you most definitely understands, but maybe hasn't placed in words yet.\"\n\nI shrieked when the cane stripe slashed my ass, and he didn't go easy even though this was going to be a strenuous night. He made it clear he was done talking and this was the real thing, no going back, with the bridge burned. I closed my eyes and it made me grateful that he started with hard pain first, because I'd had one foot dipped in that quicksand still. It was like I'd had just enough leverage to hold myself out of it, but I didn't entirely pull back, because I was just waiting on an excuse to stop struggling and fall back under the warm, awful surface with him, where I so badly wanted to be anyway.\n\nIt took a little while, true. My ass felt like it'd never be the same and I was shrieking for him when he started with the cane on my thighs. He gave me a break to trail his tongue up my ass, while I moaned to the knowledge that he was laving up the blood. It earned me a chuckle and the pleasure of him pumping three fingers in my pussy, which spread eagerly open to accept him and sounded like porn.\n\nThat was when I laughed a little breathlessly, when I reached that place, that wonderful place that only he had taken me to, where pain turned into... I don't know the words. It became something wild, something fierce, something animal. This was him, who he was, and it was me, too, and I didn't feel guilty about it anymore when I reached that place in his dungeon.\n\n\"It's because you love me!\" It was an excited, flirting cry, borne of something awful and dark, which made it all the more wonderful. He had reached that moment where he went to choose a mask and turned on his playful music and he cupped my cheek, standing to my side with the cane at my tits to start his marking there. The whip waited to mark up and down my arms and legs and back, where I knew he'd be more than careful enough with the kind of experience he had.\n\n\"What is?\" He watched me, stroking the cane over my nipples in silent threat.\n\n\"Why you can't really harm me ever. It's because you have to keep me to hurt me more, since you hurt me because you love me.\"\n\n\"That's a good girl.\" He striped the cane over my tits and I yelped. \"We'll call this another kind of kiss you're allowed, in your new life.\"\n\n\"Oh, please!\" But I knew what to look for, what to see. It was in the way he smiled so freely while tapping the cane to strike me again. It was in the way his eyes blazed with that heat when he saw the mark he left and it gave him such possessive pleasure. There were a lot of reasons why it was love for us. My body was his to mark and he adored to mark it.\n\nBut I think the biggest reason was that he turned more into... himself in his dungeon. I think those weights he always seemed to carry with him were something that went with those feelings of self loathing and guilt that a lot of people had, those same ones that I used pain to relieve myself of. It was like he found me on his level enough that he could finally be who he wanted to be.\n\nI was glad for that because that almost insane place was who I wanted to be, too. It was always almost insane, too, always almost a throw into madness, but never fully because he couldn't break me for the same reason he couldn't harm me. I wouldn't be as much fun to be around if I was truly broken or insane.\n\nWell. That was my own romantic maso reason. Of course, for him, it was because of the love thing, too. Well, okay, and secretly, definitely, for me but it was just so much more fun to pretend otherwise.\n\nI moaned when he paused his caning my tits to squeeze and slap them instead, tracing his thumbs over the lines on the curves. \"God, Honey bunny. Just saying it's because I love you doesn't cover it, though. Sometimes it's painful, how good it feels. You suffer all of this for me, you play the worst games with me, and you let me abuse you in the worst ways. And the marks of it are...\" He trailed off, staring down at the lines with this look that made me smile, even while I sweat a little.\n\n\"They're your kisses,\" I repeated with a giggle. \"But they're better because they leave marks and you get to see me cry when you give them, every time.\" Because, even then, I was crying a little. It would always make my eyes water.\n\nHe lowered his lips to lick some of the tears in response, a soft purr escaping him. \"Romantic little rabbit. I'm going to cover you in them, like a uniform I put in your skin. And soon, you'll start to think to yourself with every cane stripe that your Master is loving you. After that, it won't be long until you crave for the next thing you dread... and the next.\"\n\n\"Oh, no!\" I yelped it again when he stood back, slicing the cane down my thigh so that he could hear me protest when his affection made him feel more violent. I tumbled through the sand, down into darkness, and let him curl over me like a demon possessive of the prey it intended to feed on forever.\n\nThe best thing about being an extreme maso slut, at least for me, is that I could have these insane romance fantasies and let myself have fun being crazy. And then when it was over, I could come back off the joy ride, like hopping off a roller coaster and jumping up and down to say, \"Again, again!\"\n\nAnd now I had a gorgeous demon to let me ride it as much as I liked. Of course, it came with a price of enslavement, but when a price like that is really another roller coaster that's just as fun? Well, it's a little hard to mind it.\n\n\u2014\u2014\u2014\u2014\n\nI moaned, rolling over on the floor at his feet the next morning. My Master was in his office, working, and now that he wasn't on a vacation, he was setting other routines in day to day life. He gave a small laugh above me, glancing down from his laptop. \"Little rabbit, you're going to have to learn to be quieter on those days when I want you here at my side.\"\n\n\"I will, Master, I promise, but can I talk for just a little today? It's special.\"\n\n\"I suppose it is, at that. Go on, but understand that the next time I tell you to quietly bow at my side while I work, you'll suffer punishment if you make me regret my lenience today.\"\n\n\"Oh, yes, Master! Thank you for today. I'm so excited that my heart is going to explode and it's so special and you're so kind and evil! Look at how pretty you made me. It's so sore and dreamy and I'm such a maso slut and it's the best.\"\n\nHis laugh was even more pronounced at that. \"Well, if I ever had doubts of your self security, I'm reassured for the time being, at any rate.\"\n\n\"Look at all my marks, Master! And the ones on my ass with the big paddle are like big abrasion burns...\" I purred with that one. That had been absolutely awful after the cane stripes but he'd come back with a pale wooden, massive paddle and told me to count to 25 twice, once for each asscheek.\n\nAt that, he did look down again, with a kind of fondness. \"I don't need your bad influence to have more of a reason to keep looking at them. Especially with that nightie and those rabbit ears.\"\n\nI grinned because he'd let me choose those last two for myself. Because he was an awesome, awful, terrible, sadistic, wonderful, adoring Master. It had taken me an hour to find the right outfit to adjust it just so and I'd ended up with a lacy nightie that flared open down my abdomen. The sheer pink of it matched my perfect rape bunny ears and I was coated, covered, in marks. It'd been so wonderfully horrible. He'd been as bad as his word and everything! Whip stripes ran in lines down my ankles and the cane had left welts all over my tits and thighs and ass and a longer whip had been carefully taken to strategic parts of my back and when he'd finally released me from my tethers, I'd fallen because I couldn't even stand anymore. But he'd fallen with me, over me, in a frenzy, where he'd kissed the marks all over me, all of them, his tongue lapping where he could find blood, and I'd been so dazed I couldn't even protest when he lubricated himself and fucked my ass, whispering in my ear that I was his gorgeous slave and I was such a good girl and he had the intention to make me associate every last mark he gave me with how much he adored me. He'd pressed his cane welts and called them kisses, making me repeat it while he bit me, while he reminded me that slaves had different kisses with their Masters than others had together.\n\nEvery sore motion felt like heaven. \"It's so beautiful and perfect! I'm so pretty and covered with love...\"\n\nMy phone interrupted his reply and I lifted it up to show him, grinning, so that he rolled his eyes when he saw Pet's name on the messages. \"Go on and use the mirror to take pictures and model. I know you want to. Look at me, little slave.\" His tone had turned hard on the last word so that I met his gaze seriously, remembering his emphatic voice telling me that slavery was not a game to my Master. \"Play in here as you like. You do not leave my office and you will not ask to for a change of clothes.\"\n\nI tried to suppress my grin, nodding. \"Yes, Master.\" But he shook his head when it was apparently too obvious and I quit trying to hide it when I was terrible at doing so anyway, choosing to grin eagerly. I pranced in front of his mirrors and took the pictures while he chuckled wryly. I made sure to get all the lines and welts, especially the ones that had bled, and they were terrible to look at the next morning. Master looked up when I giggled at Pet's answers. \"She's telling me I'm fucking crazy.\"\n\n\"She's also not a hard masochist, ridiculous rabbit.\"\n\nI snickered. \"I love hearing how bad I am from other people, though.\"\n\n\"You're at least as bad as me and that's saying something. When do you get your class schedule?\"\n\n\"Oh, right! I got on early enough for all the times I signed for, it turned out. Here, I'm sending it right meow.\" I shot it to him in a message and he opened it. \"Pet's in, like, half of them, too, and oh, oh! I just realized that we both have pretty collars now.\"\n\nThe most wonderful thing about my Master is how he let me have these moments at his knees and he was ever calm about them. \"You do. If you're done, come back by me. I made it clear that I like you by my side, so when you're not busy, that's where you should be, little slave.\"\n\nI crawled back to his side and happily sat there, resting my head on his knee and thinking he was the most wonderful, terrible, amazing, awful, patient, painful Master ever.\n\nThe night where he marked me all over was enough to break me back to where he wanted me, to drag me back to the mindset where I was a little possession, well tortured with his care. I went quiet when he went back to work, cuddling close, sore all over, almost asleep against his thigh.\n\n\"Master?\" He looked down at me, eyebrow lifted, and nodded for me to ask. \"What happens now? W-will it be like that weekend?\"\n\nHis lips curved and he shut his laptop. \"Now is as good a time as any to stop, I suppose.\" I swallowed when he got the riding crop from his desk side. Normally, crops were wonderful and not terrible, but I was so damned sore. \"I let you have freedom too long before pulling you back to me. Let's go over some basics. What's your name?\"\n\nI smiled shyly up at him, nuzzling the crop when he stroked my cheek with it. \"Honey. My name is Honey.\"\n\nHe tapped my lips in stern control. \"Good girl. And what's my name?\"\n\n\"Master.\"\n\n\"That's it. Who branded you?\"\n\n\"You did.\"\n\n\"Who soldered your collar?\"\n\nI fell back to that night where it had seemed so terrifying. \"You did.\"\n\n\"That's it.\" He crouched in front of me, crooking his finger through the O-ring of my collar so that I fell forward on my hands and knees. \"The way things went was an oddity between us, it's true, but what I said that night still stands. You're my slave and there is no ring involved, save for that collar around your throat. There are other things to talk about, aspects of life that you will have input with and we will go over them this weekend together. For right now, what happens is you stay at my side, you obey what I say, and you suffer when I wish.\" He leaned forward to kiss my forehead because slaves of his did not kiss on the lips. His words were dark, soft, and emphatic when he whispered the rest. \"This is what's happening. There's nothing you can do about it.\n\n\"And there's no one coming to save you.\"\n\nI curled into his arms and whispered the rest. \"And, really, is it such a bad thing?\"\n\n\"Good girl. That's the spirit we like. Come on. It seems obvious that some of the relaxed leniency I've given you made you insecure. We'll go back to stricture until you're used to it.\" He tugged me with a hand at the scruff of my collar again and I smiled happily, bowing my head. \"Let's go to my room so that you can serve me a little bit and get rid of that confusion right now. Tell me the ending phrases.\"\n\n\"This is what's happening,\" I repeated happily. \"And there's nothing I can do about it.\"\n\nAnd because my Master was an evil, perfect Master, he gave me a little pain as a reminder.\n\nAnd because he loved me, he gave me just a bit more, with no one coming to save me from his love, although he was quite careful about keeping his love taps and kisses gentle, since I was so well adored to begin with."
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "slave",
        "sex slave"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/nightmare-master-pt-02"
}