{
    "title": "Lilith's Emporium Pt. 06: Lilith Returns",
    "pages": [
        "Nessira was placing a few new pieces of merchandise on the shelves to replace some recently sold or released items when she suddenly sensed something strange. A wind blew her hair as she felt a presence enter the shop. Feeling a little nervous she turned around to see a tall blonde woman standing there with a smile on her face. She took a deep breath before she moved towards her \n\n\"Hello, Moth... Ahem, I mean Lilith.\" Nessira said correcting herself still feeling a little nervous that she was standing there.\n\nAfter a moment of just staring at her, Lilith finally steps closer to her. She has a stern look on her face which made Nessira feel even more uncomfortable as she had no idea what this visit was about. Had she done something wrong, had she released a creature that should not have been released, all these questions flooded her mind as the tension in the air built.\n\nFinally after what felt like forever Lilith smiled and said: \"None of that, come here,\" she said holding out her hands as Nessira walked over before Lilith wrapped her arms around her and held her tightly. \"Just because you are no longer one of the daughters of Lilith, doesn't mean you won't always be my little Nessie.\"\n\nWith a small tear in her eye, Nessira held her tight for a moment as it had been a while since she had seen her and she felt some relief. Lilith had been watching everything that had happened in the shop since the day it opened and she was proud of how well Nessira had done at pairing off these creatures to proper mates, and the things she had accomplished in her personal life.\n\n\"I'm sorry mother,\" Nessira said breaking the silence.\n\n\"I know you are, but you know I will always love you.\"\n\nNessira felt a great weight lifted off her shoulders when she heard those words. Everything she had done over the past few years and how she had changed her ways since then had felt they had gone unnoticed. Deep down she knew Lilith still loved her but her punishments made her feel ashamed of what she had done.\n\n\"So,\" she said as the finally separating from her and wiping her eyes. \"what brings you here, I haven't seen you in quite some time?\"\n\n\"I am always around, I've been watching you, you have done quite well with the shop, I am so proud of you my dear,\" she said running her fingers through Nessira's red hair. \"But where is this Patrick of yours?\"\n\n\"Oh um, yea about that...\"\n\n\"You mean how you removed your heart so you wouldn't risk feeling the pain of love again, then you gave it to him to save his life and he also may be a reincarnation of Sebastion?\"\n\n\"You really do see everything don't you?\"\n\n\"I do, and that little Shadow of yours, so dangerous but I see you have been nursing the good in her, not so easy is it?\"\n\n\"Yeah, I think I owe you a few apologies.\"\n\n\"Not at all, now,\" she said sitting down in a chair in the back of the store. \"Come sit with me.\"\n\nNessira walked over and sat done across from Lilith before she said: \"So Mother, it is so good to see but what brings you here?\"\n\n\"Some dumb young man decided he wanted to play around with dark magic and tried to summon me, so I might pay him a visit.\"\n\n\"Really, and do what?\"\n\n\"Not sure yet, but I have some ideas.\"\n\n\"Well good, you need to get laid.\"\n\n\"Now is that any way to speak to your mother?\"\n\n\"What, how many men died with a big smile on their face after a visit from you?\"\n\n\"I've lost count, but that was long ago, times have changed, I've changed, you know what that's like, right?\"\n\n\"I do, but those dark thoughts never go away.\"\n\n\"Even with Patrick?\"\n\n\"He makes the dark thoughts not feel so dark, I know it sounds silly but he brings light to my life. There are times when we are in bed and I imagine what it would be like to take everything from him, just imagining the feeling as I drain the life from his body, it's intoxicating.\"\n\n\"Good thing for those condoms, but seriously what's the story with him?\"\n\n\"I don't know how to describe it, he just takes my breath away, I look forward to seeing him every day, even Shadow likes him, and it's more than just the condom, even though I have imagined it, I would never actually hurt him, it's almost like I can control myself better when I'm around him. You'd like him because since I met him my outlook on life has changed dramatically and I'm not even sure why.\"\n\n\"Oh, there she is, my little girl, I can't wait to meet him.\"\n\n\"Stop it, I fear that little girl you loved so much may be gone forever, but I am trying mother, I am finally at a point where I want to be better.\"\n\n\"That's what happened to me Nessie, sometimes it takes someone else to show us the light.\"\n\n\"Well anyway, so what about you, when are you going to settle down?\"\n\n\"Seriously? Not going to happen, I'm sort of, what's the word, unobtainable Goddess?\"\n\n\"Oh come on, someday maybe some guy will sweep you off your feet.\"\n\n\"Well, you keep hoping.\"\n\n\"What about this young fool who summoned you, what do you have planned for him?\"\n\n\"Not sure yet, but nothing wrong with me having a little fun right, I am torn between giving him the best night of his life, or the worst.\" \n\n\"Isn't that the same thing?\"\n\n\"Sometimes it is, I think he's just some heartbroken fool hoping for the Goddess Lilith to show him pity.\"\n\n\"And will she?\"\n\n\"Like I said, I'm not sure, but I am excited to find out.\"\n\n\"Oh really, why is that?\"\n\n\"Because, I haven't been with a mortal in a long time and I am feeling, frisky.\"\n\n\"That poor lucky bastard.\"\n\n\"Speaking of lucky bastards,\" Lilith said as the front door opened and she saw a face she recognized. \"Ah, this is him,\" she said before standing up as Nessira was both nervous and excited to see Patrick.\n\n\"Um, hello?\" He said seeing the tall blonde there talking to Nessira before going to shake her hand. \n\n\"Patrick, this my Mother, Lilith.\"\n\n\"Oh, OH! Hello, it is so nice to meet you,\" he said shaking her hand as she took a tight grip on him and pulled him closer smelling him. \n\n\"Hmm, it is so nice to finally meet you,\" she said getting even closer to him.\n\n\"Uh, you too?\" He said a little confused as he looked over at Nessira who was just smiling at what she was witnessing. \"I have heard so much about you, I can see where Nessira gets her good looks from.\"\n\n\"Flattery, your attempt at good manors intrigues me, now what have you heard, was it from Nessira or from the history books?\"\n\n\"A little of both, actually.\"\n\n\"I see, so you're curious aren't you, you're curious as to what I am capable of?\"\n\n\"Oh no, I've heard enough stories to know what you can do.\" \n\n\"But the stories don't do me the justice I deserve, here let me give you a taste,\" she said suddenly planting her lips on his before he ever had a chance to protest as strange visions began to fill his head.\n\nPatrick suddenly is seeing hundreds and thousands of visions involving men being seduced and taken by a beautiful woman that had Lilith's face but with red hair similar to Nessira's. There were men being given their wildest fantasies and sexual desires as she would ride them sucking the life from their very bodies leaving just an empty shell with a satisfied look on their face. He even saw the woman being seduced and transformed into succubi and he would hear the words \"Daughter of Lilith\" whispered in his ear over and over again. The woman would go to their husbands or just random men before seducing them and fucking them to death.\n\nThe visions were a little disturbing but also very arousing as she would send her children to seduce and kill others leaving a trail of bodies through the ages. Things suddenly got a little more intense as he found himself on top of a hill looking out over a sea of succubi and men being drained of their bodily fluids and more. The sky was blood red and he turned to see Lilith standing there with her attention on him before stepping forward and kissing him passionately. He then found himself naked on the ground with Lilith having her way with him. He felt a little violated but couldn't help but enjoy the sensation of the goddess on top of him showing him pleasures he didn't think were possible. Everything happened so quickly almost like it was a dream until he was suddenly back in the shop as Lilith pulled her lips away.\n\nPatrick stumbled falling backwards onto the floor. He was confused by what had just happened and felt a little dizzy with a great pressure in his pants as he was extremely aroused. As he looked up at Lilith as she licked her lips savoring his flavor as Nessira walked over to check on him knowing the effect Lilith had on people and knowing what to do to fix it.\n\n\"How did... That was... My God!\" He stammered out as his head was spinning.\n\n\"I like him Nessira, you chose a good one.\"\n\n\"Now Mother, you know your effect on people.\" \n\n\"Oh I do, I hope you don't mind Daughter.\"\n\n\"Not at all, just let me fix this,\" Nessira said kneeling down and unzipping his pants.\n\n\"Wait, what are you?\" Patrick said as she pulled out his throbbing member that was so hard it almost hurt.\n\n\"Just give me a moment,\" Nessira said examining his throbbing erection before grabbing it and planting a soft kiss right below the tip in the soft spot which made his cock erupt with little hesitation.\n\nThe orgasm was intense as Nessira held her other hand up collecting his semen in a ball floating in the air before placing it in a small glass jar. After his orgasm finally stopped he almost felt a little embarrassed as he sat there with his cock just cumming violently in front of his girlfriend and her mother.\n\n\"Sorry about that, I don't know my own strength sometimes.\" Lilith said admiring what had just happened. \"So this is the cock that satisfies Nessira the red,\" she said as she kneeled down and began to get a closer look which only made Patrick feel even more embarrassed.\n\n\"That's enough mother, you can't have this one,\" Nessira said pulling him to his feet as he tucked his cock back in his pants.\n\n\"I wouldn't dream of it, but he is a very good example of a human male, I just want to make sure his, heart, is in the right place,\" she said placing her hand on his chest feeling Nessira's heart beating within. \"This heart is very special to me, and I trust it is to you as well?\"\n\n\"More than you know,\" Patrick replied still feeling strange around her.\n\n\"Patrick, why don't you go upstairs and rest, I'll be up soon.\" Nessira said giving him a kiss in the lips before he turned around still a bit confused before he began climbing the stairs towards Nessira's bedroom.\n\n\"I'm sorry about that my Dear.\"\n\n\"It's gonna take me all afternoon to work off what you did to him.\"\n\n\"You're welcome.\"\n\n\"It is so good to see you Mother,\" Nessira said giving her another hug. \"I wish I could see you more often.\"\n\n\"Oh don't worry Nessie, you will, I think it's time for me to return for a while.\"\n\n\"I am so happy to hear that.\"\n\n\"Now go to Patrick, that little moment has gotten me a little turned on, maybe there is someone I can take it out on?\"\n\n\"He has no idea what is coming for him does he?\"\n\n\"When I am done, he will be begging for death or begging for more.\"\n\n---\n\nLater that night a young man by the name of Eliott was sitting alone in his apartment staring at the symbol he had made on the floor with the bowl in the middle filled with the ashes of what he burned to summon Lilith. It was from last night and he realized he must have screwed up as nothing had happened so he wasn't sure what to do with himself now.\n\nEliott had just been dumped by his girlfriend and was hoping he could just speak to Lilith and try to learn how to be a better lover or how to impress woman enough to get her back. He had only dabbled in witchcraft and wasn't even sure what he was doing or if he was doing it correctly. He also didn't know much about Lilith only that she was a Goddess of lust and sex, and despite the warnings he had read about summoning her he didn't listen to them.\n\nHe got off his bed and went to start cleaning up the mess he had made when he suddenly heard a woman's voice say: \"do you know what you did wrong?\"\n\nEliott jumped dropping the bowl he had picked up off the floor only to see a beautiful blonde woman sitting on the edge of his bed where he was moments ago. She was wearing a dress that had a very low v cut and was open on each side of her legs showing them off.\n\n\"Who are you?\" He said feeling nervous.\n\n\"Who am I? You summoned me did you not?\"\n\n\"What, Lilith?\"\n\n\"In the flesh, but like I said you made a few mistakes.\"\n\n\"Uh, what um, what do you mean?\"\n\n\"You didn't place a protection spell, which means I can anything I want to you and there is nothing you can do about it.\"\n\n\"Oh?\" he said suddenly getting very nervous as he backed up realizing the door was across the room.\n\n\"Don't bother trying to run, I can get you anywhere now.\"\n\n\"Please,\" he said dropping to his knees. \"I meant no disrespect or harm in summoning you, I was desperate and wasn't thinking clearly.\"\n\n\"I see, so what, you were hoping you'd summon me and I would do your bidding?\"\n\n\"What, no, I was hoping you could help me become a better man.\"\n\n\"Interesting, how so?\"\n\n\"I have heard that you send your daughters to some men to have there way with them.\"\n\n\"So you want one of my daughters?\"\n\n\"I honestly don't know what I want, I want to learn how to please a woman, and I don't know, like I said, I was desperate.\"\n\n\"Desperate enough to summon me, a Goddess you could snatch your very soul from your body at the snap of my fingers?\" She said standing up and walking towards him as he cowered on his knees. \"Luckily for you, I have had a good day, and therefore I am in a good mood.\"\n\n\"So, what does this mean?\"\n\n\"It means that you are mine to do with as I please for as long as I want.\"\n\nFeeling nervous and stupid for what he had done he did not move before he said: \"what do you want from me, Ms. Lilith, the most beautiful Goddess.\"\n\n\"Ah, you have nice manors for an idiot, but flattery won't help you, I can smell the fear on you but even in your fear you are aroused, you have no idea what I am going to do to you but you want it don't you?\" She said kneeling down in front of him. \"You want me, you want to taste me, even if it costs you your life.\"\n\nEliott was sweating as Lilith taunted him. Her scent was intoxicating and he could feel the pressure against his pants as he couldn't help but be aroused by the Goddess in front of him. She was more attractive than anything he could have imagined and was afraid he was going to cum in his pants at any moment.\n\n\"You are going to please me, you are going to pleasure me and only when I am satisfied, I'm sorry, only if I am satisfied, will you get release.\" She said pulling him to his feet. \"Now, Kiss me.\"\n\n\"What?\"\n\n\"You are not to speak unless I tell you to, and I said to kiss me!\" Eliott was still nervous but stepped forward and pressed his lips to hers for only a second before she said: \"Nope, that was terrible, you need to try harder!\" \n\nEliott slapped himself in the face trying to psych himself up and calm his nerves. He knew he could do this so he stepped forward and tried again this time trying harder to impress her.\n\n\"Better but still sloppy,\" she said still disappointed. \"Come on, are you incapable of such a simple...\" She stopped as he grabbed her waist and pulled her in kissing her again with as much passion as he could muster. He was afraid that he had to be a little forceful but he felt her hand on the back of his head as she kissed him back. \"That is better, but I may have to punish you for that,\" she said licking his lips before she stepped back from him.\n\nLilith walked over to the end of the bed before she waved her hands stretching her arms up in the air as her dress seemed to disappear completely. Eliott wasn't sure if he should look away or not as he saw the backside of Lilith completely naked and it was breathtaking. He placed his hand on the budge in his pants rubbing it a little as it was getting harder for him to contain himself.\n\n\"Hey, keep your hands off,\" she said seeing him touching himself. \"I told you that you would only get release if I allow it.\"\n\n\"Yes Ma'am.\" he said trying not to upset her.\n\n\"Now,\" she said crawling onto the bed looking back at him with a smile. \"Now show me what you can do,\" she added as she got comfortable against the pillows and spread her legs.\n\nEliott was blown away by what he was seeing. There was a wet circle in his jeans at the tip of his cock from all the precum dribbling from it. He walked to the front of the bed and began crawling towards her before she stopped him and pointed down at the joist alit between her legs. It was suddenly clear what she wanted him to do as he got his face down close to her hole.\n\nEliott had little experience eating anyone out so he was nervous that she would get angry with him but he did his beat. He got close and stuck his tongue out and tapping at her clit a few times trying to get a little more forceful with each pass. For a while she was silent but he kept going.\n\n\"Teasing is a good way to start but don't linger in the same spot, you are trying to please me so you better try harder, remember your soul is on the line.\" she said as Eliott got more nervous.\n\nHe pressed his lips to her clit and began to suck on it teasing with his tongue, even more, making little circles. Lilith let out a mild loan as she could tell he was trying and she didn't dislike what she was feeling so she humored him for the moment. After he removed his lips he shoved his tongue inside her trying to hit any sweet spot he could find to which she tried not to laugh. She began to run her fingers through his hair before pushing his face into her pussy with a little force trying to get him to try even harder.\n\nShe knew from the start that he would not be able to please her sexually. She was doing this to try to get him to a point where he could please a mortal woman with his skill as she was in a good mood and he had some of her pitty. She felt him trying as hard as he could and she still didn't dislike what he was doing but it was not enough to get her anywhere close to where she wanted to be.\n\n\"That's enough,\" she said pushing his face away from her with a little force.\n\n\"My apologies Goddess, I have little experience in this.\"\n\n\"Well I am bored but I came here for something, and I am not leaving without it,\" she said rolling out if bed and pushing him down on it.\n\n\"Please forgive me, I...\"\n\n\"Hush foolish mortal, we are going to do things my way now.\" she said raising her hand and Eliott's clothes started to come off of him.\n\nHis pants unbuckled themselves before sliding off. His shirt slid up over his head before his shoes and socks went flying leaving him there in nothing but his boxer shorts. He realized he couldn't move at all as she seemed to have him pinned down with some sort of magic so he felt nervous and vulnerable as she crawled onto the bed to get a look at his manhood.\n\nShe waved her hand causing his shorts to rip apart and go flying as she examined the erect penis before her and said: \"Well, I have seen better, but I have also seen worse, there is no reason you cannot satisfy a mortal woman with this, even some of my daughters would enjoy it, however, it will not work for me,\"\n\nEliott was a bit concerned that he was unable to please her but she leaned down close to it and began to chant something that made his dick feel a little weird as she continued. Lilith kept speaking a language that he couldn't understand but he felt strange and knew something unnatural was going on as his cock seemed to start to pulse and swell a little.\n\n\"Now, resurgemus, colem Koldak!\" She said as his cock suddenly started to spasm and jolt back and forth as it grew and swelled changing into a darker color almost a charcoal grey. It grew to about 12 inches long and maybe 3 inches thick as he wasn't sure as Lilith smiled at her work before she said: \"now there is a cock that can please me.\"",
        "\"Wha... What did you do?\"\n\n\"What did I say about talking?\" She said as Eliott closed his mouth but was concerned by what she had done to his penis. \"But to answer your question, I called in a little help, this here is the cock of the Demon Koldak, a long time friend of mine, Koldak, Baby,\" she said as his cock twitched as if responding to her. \"Show this mortal how to please a woman.\"\n\nSuddenly Eliott was no longer in control of his body as he sat up and grabbed Lilith and forcefully pushing her back down on the bed. He grabbed her legs and pulled her towards him before burying his face back between her legs as he started to work on her pussy practically molesting it with his tongue. He couldn't control himself but he could feel and taste everything that was happening as he heard Lilith moan out as she enjoyed the sensation. \n\nEliott didn't know who or what Koldak was but he was apparently very good at pleasing a woman, even a Goddess by the looks of it. He used his tongue and his lips to pleasure Lilith to the point she was screaming out in ecstasy. The sound of her voice whining just got him even more turned on even though he wasn't the one actually pleasuring her. As he continued he felt a fountain of juices start to spray into his face and mouth as Lilith moaned loudly.\n\n\"Oh yes, that's how it is done.\" she said as he pulled away seeing her start to transform a little. \n\nEliot wasn't sure what he was seeing but her hair suddenly turned red starting at the roots and working it's way to the tips. Her eye's seemed to get a little darker on the skin around them and her breasts seemed to plump up a little as he nipples extended. She was beautiful before but now she seemed even more exotic and he couldn't look away.\n\n\"What do you think of me now mortal, you wanted Lilith, the Goddess herself, now here I am,\" she said in a sexy voice as she got up close to him pressing her lips to his as their bodies pressed together. \n\nHe could feel her skin which felt amazing as he wasn't sure if he was with a Goddess or a demon at this point. Her lips tasted amazing as Koldak continued to have his way with her. Her breasts were soft beneath the palms of his hands as they were bigger than any he had ever seen in person before. The way she moved and wiggled her body it was obvious she was not human but he began to see a more playful side of her as she began to kiss his chest and stomach before getting down close to his enormous cock.\n\nHe had been waiting for the moment since she showed up. The moment he would feel Lilith herself touch his penis. The idea was enough to make him want to blow his load right there but Koldak had much more control. He could feel her breath against his erection as she was mere inches away from it. He was anxiously awaiting her to do something, anything to the point it was almost driving him mad.\n\n\"Are you two ready for me?\" She said as Eliott heard himself growl a little.\n\nShe took her finger and traced it along his shaft making his cock twitch as he wanted to scream out his lust. The sensation was intense as she knew how to hit every pleasurable nerve in he cock and she did over and over again. She pushed him down on the bed before she hovered above his expanded cock still stroking it gently. She placed a gentle kiss on the tip which sent a shock through his body that he was not expecting. He knew he was playing with fire and wasn't sure if he could handle what she was about to do to him but he knew even if he died it would be worth it.\n\nShe took her two large breasts and placed his cock between them before squeezing them together and sliding them up and down his shaft. The sensation made his soul want to rip from his body as she continued to please him. He didn't know what Koldak was thinking or if he was enjoying it but he didn't care as long as he could enjoy himself. She suddenly spits down onto his cock which felt like liquid fire as it slid down lubricating him as she continued to squeeze her mounds together.\n\nShe kept going with a smile on her face enjoying how much she was teasing him. Her face looked the same but there was something almost sinister in her eyes and he knew he was her prisoner to do with as she pleased. Whether or not she was truly evil or simply just a Goddess of chaos it didn't matter to him anymore.\n\nShe finally released his cock from her breasts as she began to smell it. It shined with the saliva she had spit onto it and was waiting for more as she looked it over growling at it a little. She traced her finger from his balls all the way up to the tip making his cock twitch and tremble as he had no choice to endure.\n\n\"Foolish mortal, you summoned me and have awakened the fire inside me that I haven't felt for a long time, when this day is over, live or die, you will not be the same, are you ready?\"\n\nEliott had no control as he looked up at her. He couldn't even speak as Koldak had control of him still. He tried to respond but he honestly wasn't even sure what to say as all that mattered to him was the pleasure. He wanted her and wanted her to finish him off whatever the consequences were.\n\n\"I'll take that as a yes,\" she said before she engulfed his cock into her mouth letting it slide deeper than what he thought was possible. \n\nBoth Koldak and he arched their back as they screamed out at the sensation. All he could hear was the low roar of the demon controlling his body but it didn't matter as Lilith sucked on his cock sending him to heaven and hell at the same time. The pleasure felt like it was ripping his soul apart but he wanted more. Her lips were so soft and her tongue so playful that if he could have given his cock to her gift wrapped he would have.\n\nShe removed her lips from his member letting stand there twitching as her spit dripped down before she said: \" I want you inside me.\"\n\nShe stroked it a few more times spreading the goo all over it as Koldak stood up and grabbed her bending her over and shoving their cock inside her. Everything was happening a little fast but Koldak rammed their cock into her over and over again as they reached around and squeezed her breasts. He began to kiss her neck and her back as her pussy squeezed their penis and ways that weren't humanly possible. Lilith's moans were music to his ears as he continued to fuck her getting rougher to the point the room began to shake.\n\nEliott didn't know or care what was happening at this point as he just wanted to empty his seed into the warm moist heavily hole his cock was sliding in right now. If the option was his he would give her his soul just so he could die happy. She suddenly pulled off his cock and threw him down on the bed before impaling herself back down on his throbbing member. He sat up as they embraced each other sharing spit between their lips as the tongues battled inside their mouths. He grabbed her breasts and sucked on both her nipples feeling some sort of warm liquid come out that tasted amazing and sent a fire through his body which only added to the pleasure.\n\nKoldak began to moan and growl as Eliott could tell they were about to cum and cum hard. He didn't know how this was going to end and he didn't care. He had to finish this and he had to empty himself into her as it was all that mattered now. Time seemed to slow down as he got closer to orgasm which was a bit frustrating as he needed a release. Soon all he could hear was silence except for a ringing in his ear as the world around him didn't matter anymore. He slid his hands down cupping her ass as he looked into the eyes of the Goddess on top of him watching her move her lips as if saying something to him.\n\n\"Now!\" he heard Lilith's voice say as it seemed to be the only sound in the universe.\n\nThe word made his cock swell as the orgasm crawled up his nerves and he screamed out like a demonic banshee as he finally felt release and the fluids of his genitals rushed into her with a force he couldn't fathom. The pleasure made him feel like he was in heaven and he didn't want to leave but she caught him holding his sound in place as the energy swirled through him showing extreme lust that would have destroyed him if not for her magic. He felt like he was flying until she returned him to earth laying him down gently on his own bed as she sucked every last drop of cum from him.\n\nThe world was spinning as he laid there not sure if he was alive or dead. He felt a gentle kiss on his lips as he heard her voice so to him \"Use what you have learned, it is a gift from Lilith, but never summon me again!\" Before everything went dark and he was asleep.\n\n--\n\nEliott awoke with a huge headache as he realized he was still in his room. He was naked but had control of his body again as he sat up trying to process what had happened. He grabbed his phone off the nightstand and was shocked to see he had been asleep for 3 days.\n\n\"What the fuck!\" He said jumping out of bed before he suddenly heard a frantic knock at his door.\n\nConfused he felt something strange as he looked down and noticed his penis was a little larger than before. It wasn't as big as Koldaks but it was impressive looking even in its flaccid state. He admired it for a moment remembering what Lilith had said to him about a gift before he grabbed a blanket and wrapped it around his waist as he ran to the door to answer the knocking that didn't seem to stop.\n\n\"Bev?\" He said as he opened the door and saw his Ex standing there with a worried look on her face.\n\n\"Eliott, are you alright?\" She asked suddenly seemingly angry with him.\n\n\"What are you talking about?\"\n\n\"I've been trying to reach you, I thought you were just ignoring my calls but then your friend Jessie said nobody has seen you in days,\"\n\n\"Yeah, I don't know what happened I...\" He stooped when she walked in and wrapped her arms around him happy he was okay.\n\n\"I thought you died or something.\" she said as he could hear her starting to cry.\n\n\"I'm fine, really, I promise.\"\n\nShe held him tight for a long time sobbing into his shoulder. He was confused but happy to have her in his arms again so he just enjoyed it for what it was and ket her emotions run their course.\n\n\"Look, I'm sorry, I've missed you, and when I thought that you were dead... Listen, I know you're mad at me, but I think you and I,\" he stopped her from speaking with a kiss on the lips letting her know he was okay and that he forgave her.\n\nTheir kiss went on for a while as he closed the door and wrapped his arms around her. The blanket fell off of him and his newer bigger cock was starting to get hard and poke against her to the point she broke then kiss and looked down. Her eye's widened at the sight of his larger penis and she was both confused and aroused by what she was seeing.\n\n\"What the... How?\"\n\n\"Well um, do you want to know now or after you test it out?\"\n\n---\n\nPatrick had just gotten home from work and was back at his apartment. He was going to head to the shop to see Nessira but he wanted to change first as he threw his jacket down and headed for the bedroom when he noticed someone standing in his living room. He turned and saw Lilith standing there with her eyebrow raised staring at him.\n\n\"Lilith?\" He said confused.\n\n\"We need to talk, please sit down,\" she said as she sat down herself before he walked in.\n\n\"Can I get you something?\"\n\n\"I said sit, please,\" he listened to her request and sat down across from her curious as to why she was here. \"I assume you have questions?\"\n\n\"Um, well maybe a few.\"\n\n\"Go ahead then.\"\n\n\"Well first off, why are you here?\"\n\n\"We will get to that, but first ask the questions you really want the answer to.\"\n\n\"Okay, so that kiss, the vision you showed me, what was that all about?\"\n\n\"Long ago I was angry and vengeful, and the people of this world paid the price for it.\"\n\n\"So what changed?\"\n\n\"Nessira.\"\n\n\"Nessira?\"\n\n\"What has she told you about her past?\"\n\n\"Not much, I know about that massacre at the village after Sebastian died.\"\n\n\"That was a heartbreaking day, you see I was all-powerful for a long time, turning countless women into the Daughters of Lilith and sucking men dry of their energy, but then one day I grew tired of that existence, I felt empty and without purpose, but then who should I find abandoned in the woods but a small beautiful baby girl in a basket next to the body of an old woman who had died to try to save her from my wrath.\"\n\n\"A Baby?\"\n\n\"Yes, an innocent victim, it was Nessira, which is the name I gave her after I took her.\"\n\n\"She never mentioned that, so you actually raised her?\"\n\n\"Yes, she truly is my daughter, at least from that perspective, she is someone I care about deeply, but she was sick from the cold so I had to turn her to save her life. Despite being a young succubus she was such a sweet innocent girl who could make my heart melt with her smile, that red hair helped too.\"\n\n\"Speaking of which what is with the blonde, in the vision you were a redhead like her.\"\n\n\"Red hair was the sign of evil back then, women with red hair were considered to be witches working with Satan himself, so I changed it blonde to lure men in and change it back when it was too late for them.\"\n\n\"Nice, so please continue.\"\n\n\"I raised Nessira and she always had a good heart, I gave her power and she used it to help others, even when she had to feed she would try to find ways to do it without killing her victim, she was everything I wasn't but it made me want to be better, to be a good role model for her.\"\n\n\"Then she fell in love?\"\n\n\"Yes, Sebastian was her whole world, the way they loved each other was, special, and when the worst happened I saw my sweet girl die a little inside, she became drunk with power summoning demons and other dark creatures to make herself more powerful. She was becoming what I used to be which broke my heart to see, I tried to help her but the darkness in her heart took over to the point I had to trap her in a statue.\"\n\n\"Until she found Victoria, I know that story, the three virgins, and her stabbing Nessira in the heart to save Rick.\"\n\n\"Yes, she is so clever, so when that happened I took away her title which in turn took away some of her powers, and put her in charge of the store as a way of paying for her sins, I was sure she would never change her evil ways, that my sweet little Nessie was gone, and then you walked in.\"\n\n\"Me?\"\n\n\"You changed her, so now I am curious, how?\"\n\n\"What do you mean?\"\n\n\"She loves you, she loves you so much that her heart is beating in your chest, she has the same look in her eye that she did when she was with Sebastian, so I just am curious about you, that is why I am here.\"\n\n\"Well, I was told by some warlock that I am the reincarnation of her former lover.\"\n\n\"Perhaps, you have a similar aura, but I think my question is more about you personally.\"\n\n\"I don't know honestly, I mean I love her, I know the night we met she was planning on killing me but she changed her mind for whatever reason.\"\n\n\"Interesting, you appear to be the missing piece.\"\n\n\"Meaning?\"\n\n\"All those creatures in the shop, we try to find a compatible souls for them, pair them off, find the person that gives them happiness and meaning, you two have been on a path to this for a long time, the woman whose body she stole being your former lover, it is like fate has plans for you both.\"\n\n\"I don't believe in fate, I like to make my own plans.\"\n\n\"Then what is your plan?\"\n\n\"What do you mean, are you asking me what my intentions are with your daughter?\"\n\n\"She has shown you this crazy world we live in and you are still here, even after what I showed you yesterday you speak to me calmly.\"\n\n\"Well, to be honest, I am a little nervous around you.\"\n\n\"Yes you are, but not because of what I am, because of who I am, Nessira's mother, you seek my approval.\"\n\n\"Well, it's funny you say that because I want to ask you something?\" He said standing up.\n\n\"Please.\"\n\nHe reached into his pocket and pulled out a small box and said: \"maybe you can tell me if I am crazy for thinking this is a good idea or if I should even try, but I also want your permission as well.\"\n\n\"For what?\" \n\nHe showed her the box and opened it revealing a small ring with a blood red diamond in it. \"I love her, more than anything and I know our lives will never be normal and there are creatures and rules and powerful magic that I'm sure will fuck things up, and also there is Shadow to consider as well but, I am willing to face it with her for as long as I am alive, am I stupid for thinking she'd say yes, and would you be okay if I asked?\"\n\nLilith sat there staring at the ring in shock at what was happening, as her eyes began to water she said: \"I don't know, but I do know that love is the most powerful magic there is.\"\n\n\"Really?\"\n\n\"You truly are special,\" she said standing up and stepping towards him.\n\n\"So is Nessira.\"\n\n\"Even if only you and I can see it.\"\n\n\"Does anyone else matter.\"\n\nShe smiled and gave him a hug before she said: \"you have my blessing.\""
    ],
    "authorname": "maestro84",
    "tags": [
        "demon possessed",
        "lilith",
        "succubus",
        "succubus summoning",
        "succubus sex",
        "blow job",
        "eating out",
        "cock transformation",
        "demon transformation",
        "absorb energy"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-lilith-returns"
}