{
    "title": "Sis-in-law Incentives Ch. 05",
    "pages": [
        "Ch. 05: Hot Tub Interlude\n\n===========================\n\nGirl's night out becomes a wet and wonderful thing. Holly has friends too.\n\n===========================\n\nWhether I liked it or not, the little episode with the bondage and strange women was just the motivation I needed. I became very strict with myself when it came to dieting, not lowering the calories any, but eating clean, and making sure I spread the 6 meals equally throughout the day. I added the ECA stack to my supplements, Ephedrine-Caffeine-Aspirin, despite the fact that Ephedrine was \"officially\" frowned upon, and was even considering getting something even more powerful.\n\nI'd also gotten away from the early morning/pre-breakfast cardio, and I made a point of rolling out of bed each morning and heading straight for 45 minutes on the elliptical. That early morning workout also served a dual purpose, allowing me to mentally get my day in order, as well as concentrate on achieving the peak physical conditioning I was looking for.\n\nI had added a short run at lunch, 20 minutes or so, and an evening workout that I followed with a 45 minute bike ride. I was pondering doing my first triathlon, a half-Ironman, if I could just find the time to add swimming to my rather full schedule.\n\nAt the same time, three days after the 'fuck-fest', Jenny's house sitting was done, and she was moving back into the house. I knew I was going to be at my goal weight any day now, and was wondering how I was going to pay off my next 'reward'. I'd promised her 2 new clients, if I reached the next target. \n\nTo cover the first client, I just started paying for Holly's sessions. She was happy because now she could get a fixed time slot, instead of having to settle for whatever openings showed up in Jenny's schedule. And of course Jenny was happy that she was now getting paid for the sessions.\n\nI don't think it was a coincidence that this 'happy' Holly did something that completely blew my mind. She usually went out for a 'girl's night out' about once every two-three weeks. The day after I told her about the new paid sessions, she and two of her best friends came over after the carousing, and insisted I make them drinks which they wanted out by the pool. I mixed my favorite 'relaxer', Long Island Ice Teas, and headed to the backyard where I found the three of them in the hot-tub. Naked. Or as our west Texas friend Dawn liked to say, \"Nekkid.\"\n\nYou couldn't see much, it was pretty dark out there, but they were obviously trashed. I started to rethink the Long Island Ice Teas, they were awfully potent, and I hadn't recognized how drunk they were to start with. It was surprisingly early for them to be this gone; these flings of theirs usually lasted until midnight, but it was barely 10:00. I gave them the drinks and chatted, hoping to see a little more, but after a bit I was directed to get another round. I didn't want the girls passing out, so I made them some sipping shots, and some shooters that were a little more risque but a little less powerful. By the time I walked back out, I had a tray with two full shakers on it, 3 plastic shot glasses(filled), a hip flask, some lime slices, and a salt shaker. As well as the beginnings of a plan.\n\n\"You took long enough!\" Dawn griped. \"What have you got for us?\"\n\nI placed the shot glasses along the edge of the hot tub. Each one a couple of feet apart.\n\n\"Blow-Jobs,\" I announced with a smile. \n\nDawn looked at me with a glint in her eye, but Holly and Beth had a more confused look. \n\n\"Why don't you explain how it works, Dawn?\" I said. The hot tub was a large, rectangular pool, raised about a foot from the patio, next to the swimming pool. It had a built in bench along the two short sides, and the near long side. The side facing the pool had no seats. It held 6 pretty easily. I sat on the corner nearest the house. Coincidentally it was the corner nearest Dawn, and furthest from my wife.\n\nDawn giggled and stood up facing the other girls. I had an amazing view of her breasts for just a second before she turned away from me. \"You put your hands behind your back,\" she said, doing as she described, and then she hesitated, and turned to me, hands still behind her back, her large breasts pushed out toward me. \"We have any extra over there so I can show them?\"\n\n\"Absolutely,\" I told her tits.\n\nShe turned back to the other girls for a second, then said, \"You have to drink them like this,\" and at that she kneeled on the bench bringing the edge of her closely cropped pussy to the top of the water, and bent over from the waist, taking the shot glass in her mouth, hands behind her, then threw her head back draining the shot. She held that position for a bit, head back, breasts thrust out, back arched, her crotch barely visible at the edge of the water. Then she lowered the cup back to the ledge, her tits hanging nicely as she bent over. I was in sensory overload.\n\nShe looked at me with a twinkle in her eye. \"I didn't think I'd be doing a blow-job tonight. How'd I do?\"\n\nI tore my eyes off her naked body long enough to refill her shot glass.\n\n\"Very good, Dawn. It'll be interesting to see who does the best blow-job out of the three of you. It certainly looks like you have the most experience.\" The obvious sexual overtones of the whole conversation were not likely to be missed by anyone.\n\nBeth spoke up, \"What's it taste like?\" she asked, looking askance at the drink in front of her. \n\n\"Give it a taste,\" I suggested.\n\nShe did, dipping her finger into the shot glass, tasting the Bailey's and Amaretto. \"Not bad,\" she said, sucking on her finger.\n\nI was ready to bust my shorts. \n\n\"So is it a contest?\" Holly asked, with a smirk. \n\n\"Just a friendly competition,\" I answered, returning her smile. \"All right ladies, assume your positions.\"\n\nBeth suddenly realized she'd have to lift up out of the water to do the shot. She hesitated while Holly and Dawn got on their knees, then joined her drunken buddies. Beth's breasts were the smallest of the group, but that would be the same for about 90% of the female population. Both Dawn and Holly had certified 'bodacious ta-tas'. Beth's were merely amazing. \n\n\"Ready...\" Each of the girls put their hands behind their backs, tits on display.\n\n\"Set...\" The three mommies leaned over, carefully maintaining their balance, boobs hanging down. I leaned to the side and enjoyed a great view of all of their asses, coming up almost completely out of the water, as their mouths settled over the top of shot glasses.\n\n\"GO!\" They all leaned back and chugged their drinks. Dawn did it too quickly and fell into the hot-tub coming up sputtering. Beth had to give it two tries, before she took the glass from her mouth and placed it on the tub edge. Only Holly finished it in one shot, and then leaned over and put the glass back where it belonged.\n\nThe girls all settled into the tub, and I proudly proclaimed my wife the winner. \n\nHolly leaned over and pressed the controller next to the hot tub. It turned on the lights inside the pool. \"Losers have to jump in the pool.\" The pool was probably pretty cool at that hour.\n\n\"Holly!\" Beth protested.\n\nDawn didn't say a word. She stood up, got out of the water just inches away from me, and stood on the edge of the ledge for just a minute, doing a small pirouette, displaying all of her charms to me before jumping into the pool with a splash. She'd always been a show-off, but I didn't realize how much of an exhibitionist she could be. This was definitely turning out to be a memorable night.\n\n\"You too, Beth,\" Holly teased, pushing Beth toward the edge.\n\nI don't know if it was the alcohol, or what, but Beth came over in front of me, and held out her hand, looking for help getting out of the water. I gave her a tug, and she hopped out, into my arms.\n\n\"Oops. Sorry.\" She said, leaning into me for a bit, before pulling away. \"Looks like I got you wet,\" she said softly. \n\nDaringly, I replied, \"I hope I can say the same.\"\n\nShe blushed, before leaping into the pool herself. \n\nI'd seen both ladies in their bikinis, but this was so much more exciting that I was afraid my heart was going to stop. \n\n\"Why don't you strip down to your shorts, and come in?\" my wife Holly encouraged. \n\nInteresting suggestion. She didn't suggest I get naked, but she did invite me to participate. I wasn't sure what it meant, but I wasn't about to over analyze it. I took her up on her suggestion, stripping down to my boxers, my erection standing straight out. Before I got in the hot-tub, I refilled the shot glasses from the second shaker.\n\nBy the time I was done, Dawn and Beth were slipping back into the hot tub, complaining about the cold. Their nipples were reflecting the coolness of the water. Dawn had large aureole, which crinkled up with the cold. Her nipples stood out almost as big as the end of my pinkie. Beth had smaller nipples. The deep pink color wasn't much larger than a quarter, and almost disappeared when the nipple got hard. The hardened nipples were even longer than Dawn's but smaller around.\n\n\"What do you have for us now, Alex,\" Dawn asked, her hand holding the new shot, but her eyes lingering on the tent in my shorts.\n\n\"Buttery nipples,\" I answered with a wicked smile. \n\n\"There seems to be a theme to these drinks, doesn't there,\" Holly said, giving me a bit of a cautionary look.\n\nI just grinned sheepishly.\n\nThe girls took their shots in hand and tasted them. I slipped into the water among them, my embarrassingly hard tool hidden under the water.\n\n\"Take it easy girls, these are just for sipping.\" I announced.\n\n\"Aren't you drinking?\" Beth asked.\n\n\"I thought I might have some body shots off my lovely wife.\" I answered.\n\n\"Alex!\" Holly squealed, but at my encouragement she laid down on the pool edge, her hands clasped below her waist, giving her a modicum of modesty. I placed a lime wedge between her teeth, sprinkled some salt on her hip, and took my flask and poured a small shot into her belly button. I then licked the salt at her hip, sucked her belly button dry, and bit down on the lime wedge she held between her lips. As soon as I was done she was slipping into the water.\n\nBeth, spoke up. \"That was the wildest thing I ever saw,\" she said breathlessly.\n\n\"It feels even wilder,\" Holly admitted. \"You should try it.\"\n\n\"Oh, God, I couldn't, I mean, oh!\" Beth seemed bewildered and shocked.\n\n\"I'm game,\" Dawn laughed, laying out on the poolside. \"I've always wanted to do this.\"\n\nI looked over at Holly, to see if this was what she really wanted.\n\nShe smiled, as she took the ingredients and prepared Dawn for the body shot. Dawn was less modest in her pose, one arm tucked behind her head, her legs spread a bit, one foot dangling in the water. Holly placed the lime in Dawn's mouth, filled her belly button, and then shook a liberal amount of salt no more than an inch away from Dawn's nearly clean shaven pussy. Now that I could observe it at leisure, I could see that she had shaved it down to a small triangle, pointing toward the center of pleasure. It looked a little prickly, and I thought she could use a touch up shave. I wouldn't mind helping.\n\n\"Ready, Dawn?\" I asked.\n\n\"Do me,\" she said huskily.\n\nI leaned over and licked the salt, a long slow lick that ended just brushing her clit. I then slurped up the tequila, and went for the lime. If it was in Dawn's mouth, I couldn't see it. Then she opened her mouth wide, and I could see it was deep in her mouth. I didn't hesitate. I leaned over and placed my mouth on hers. We tangled tongues before she pressed the lime forward into my mouth.\n\nDawn stretched, raising her outside leg, and stretching her arms over her head. \"God, that was nice.\" She then slowly settled back into the water. As she slid past me, her hand brushed against my cock, quite firmly.\n\n\"One to go, Beth,\" Holly said.\n\n\"Oh, Holly, I don't know.\" She said, but I watched in awe as she slid out of the water and sat on the edge of the hot tub. She eased back, her hands covering the glory between her legs, and my wife guided her body into place. Holly prepared her as well, but when she went to put the salt on her, Beth had most of the her hips covered with her hands and forearms. Holly settled for sprinkling it at the top of Beth's abs, just below her breasts.\n\nAs I licked the salt off of Beth's body, I could see her breasts rising and lowering with her shallow excited breath, and could feel her pulse on my tongue. Pulling away, my tongue 'accidentally' brushed her breast. I lingered on her navel, tracing its perimeter, before I emptied it. Beth held the lime high in her mouth, just allowing our lips to meet. Still, by the time I was finished, I was almost ready to come without anyone even touching me.\n\nBeth quickly slipped back into the water, and took her shot glass in hand, which she promptly pounded. It looked like maybe I got to her a bit. \n\n\"I need a refill,\" Dawn said.\n\n\"Me too,\" answered Holly.\n\nI got the shaker and refilled their shots, my hands trembling. When I was done, I was seated in the corner, between Dawn to the outside, and Holly. Beth was sitting almost opposite me, and I had a great view of her breasts bobbing at the water's surface.\n\nHolly took that moment to turn on the bubbles in the hot tub. I was a little disappointed, because it blurred the view under the water.\n\nI was a little less disappointed when Holly's hand started stroking me underwater. \n\nWe chatted a bit, and it was obvious they were all too drunk to carry on much of a conversation. I did find out that the girls left the bar because they'd been getting a little wild, and when one of the guys showed too much interest, Dawn dumped a pitcher on him. They figured their welcome was worn thin, even though the bartender encouraged them to stay. While they continued their tales, I had to wonder if everyone knew my wife was beating me off. The girls were slurring their words, and getting distracted, and you couldn't help but notice how trashed they were. Then Dawn realized her shot glass had been empty a while, and she wanted to do another round of blow-jobs.\n\n\"Let's do it. Alex can be the judge, the winner gets to set up the next round of body shots.\" Dawn insisted.\n\nThe girls acquiesced, and before long I was on the outside of the pool again, setting up the drinks, and looking at the incredible sea of womanhood presented before me. My cock was tenting my shorts badly, but there was nothing I could do about that. Even my wife couldn't blame me, this time. I was wondering if they'd be able to finish, they were appearing more and more drunk by the minute.\n\nOn the command of \"GO!\" the girls once again drank their shots down. But this time Holly fell into Beth, knocking them both backward. Dawn on the other hand finished her shot neatly, then she brought her hands forward, lowered her face and pressed her tits together to hold the shot glass in place. Then she looked up at me and licked it clean, her tongue caressing her breasts as often as cleaning the shot. She then took the shot glass back in her mouth, and placed it, clean back on the edge. I couldn't believe it. I was jealous of a damned shot glass.\n\n\"I'd have to say that makes Dawn the winner, this round.\" \n\n\"Ok, you first Holly.\" Dawn announced, pushing Holly to the edge. It took some work; Holly was really feeling the effect of her evening of drinking. Once Holly was in position, Dawn put the lime slice within the valley at the top of her breasts. She filled Holly's belly button with the Tequila, and then sprinkled the salt in a line from her navel to the top of her bush. Holly looked like she'd had about enough, and appeared to be half-asleep, with a silly little grin plastered on her face. She allowed Dawn to do as she wanted, even letting her position her arms and legs.\n\n\"Dawn!\" Beth exclaimed.\n\n\"Relax, it's her husband right?\" She answered.\n\nI licked the small salt trail up to her navel, before draining it slowly. I looked down on my wife who seemed to be completely out of it. I placed my face between her breasts and retrieved the lime slice.\n\n\"Delicious,\" I announced. \"Thank you.\"\n\n\"Next,\" Dawn announced.\n\n\"Give me a second,\" I told her. \"Holly?\" Holly hadn't moved and her eyes were closed. I gave her a little shake. \n\nShe slowly opened her eyes. \"I have to potty,\" she answered, slurring. It was as if the liquor had hit her all at once. She slid off the ledge and headed in.\n\n\"Maybe we should all head in. I can take you home, you're in no shape to drive.\" I told the girls, thinking it might be time to call it quits. \n\nI expected an argument from Dawn, but it was Beth who answered me. \"Ok, let's just finish our shots, and we can go.\" \n\nShe raised her Buttery Nipple, which she had just refilled, and wiggled it. She then filled Dawn's shot as well. While she was doing that, Dawn turned off the bubbles, allowing the water to settle.\n\nIt was much quieter, and we could speak softly without having to make ourselves be heard above the noise of the jets. We passed some pleasantries about how nice the drinks were, and I gave them the ingredients. It was a little awkward all of a sudden. Misbehaving, with my wife there to egg us on was one thing. Me, sitting in a hot-tub with two beautiful naked women, married, naked women, was something else.\n\nHolly didn't come back out, and after a couple of minutes Dawn announced it was time for my next shot. Beth didn't need much encouragement this time and she laid down before me. It took two tries, the first time she slipped off the edge back into the water, coming up sputtering. But finally she was there, laid out in all her MILFish beauty, and this time not bothering to cover up that sexy V between her legs. \n\nDawn was absolutely wicked. She went down between Beth's legs, and opened them slightly. I watched as she set the lime wedge between Beth's legs, almost pressed against her extended pussy lips. Beth surprised me again by allowing it to happen. Then she filled Beth's belly button again, finally taking the shaker and liberally sprinkling salt on both of Beth's tits.\n\nUnbelievable. Dawn was just aching to cause trouble, and Beth was further out of control then I ever had imagined possible. I wondered just what thew limits were here. For a second I hesitated. Perhaps it would be better if I set some limits. My wife had been more than generous in setting up this whole opportunity. But then, maybe she had left on purpose, leaving us to play. Decisions, decisions, decisions.\n\nI couldn't help myself. I went at Beth's tits like a newborn baby, licking and sucking and nibbling for an eternity. I kept glancing toward the house out of the corner of my eye, watching for Holly, who remained a no-show. My hands assisted, holding her tits, squeezing them, guiding them to my mouth. Beth was moaning loudly when I licked her navel dry. I went to retrieve the lime, but Dawn stopped me, turning Beth sideways, so her legs were in the pool, and her ass was just on the edge. \n\n\"Raise up,\" she told Beth.\n\nBeth did, obediently, and Dawn placed the lime out of sight under her ass. \n\n\"Get it big boy.\" Dawn announced.\n\nI required no more encouragement; all reason had fled several minutes earlier. I ignored the lime, and ate out the hot little mother of two like there was no tomorrow. The wetness of the pool, slowly replaced by her own seeping lubrication urged me on. Her smell was almost lost in the tangy odor of the chlorine. It was only a couple of minutes before she came heavily on my face. I couldn't stop myself, lifting her legs high and driving two fingers inside of her, while I captured her clit and tongued it firmly. She cried out, coming hard again, her hands grasping my hair and pulling me into her slit. I think it was only then that she realized what she'd done. She pushed me away, her breath heaving. She looked dazed for a second.",
        "\"Oh, I need to use the powder room too,\" she murmured, climbing out of the hot-tub and almost running for the house.\n\nI turned to look for Dawn, and she was sidling over next to me, until her body was pressed against mine.\n\n\"You are bad,\" she told me, belying her own words by letting her hand settle on my aching cock.\n\n\"Look who's talking,\" I answered, my hand sliding down her side and caressing her ass.\n\n\"That was incredible. I never dreamed she'd allow that to happen. She sounds so cold when she talks about her sex life, but, Damn, you had her hot!\" Her hand wasn't still, as she slowly stroked up and down my full length.\n\nI whispered, \"Your turn?\"\n\n\"Maybe you'd prefer a 'Buttery Nipple' to start,\" she said. \"But before that you HAVE to lose these stupid boxers.\" As good as her word she tried to tug them off me. I let her. \n\nDawn pushed me back to sit on the underwater bench, then sat in my lap, my cock pressed up between her legs. She dribbled a few drops of her shot onto her right nipple. Then held it up to me. I saw the tiny brown drop, almost fall from her nipple, and my tongue darted out, almost involuntarily and caught the drop of liquor, following up with a lick to her pronounced nipple. She poured the rest of her shot all over her breasts, and I couldn't deny the offer. I dove in and sucked and nibbled on her magnificent full breasts as I had done with Beth. \n\nAfter a minute she grabbed my hair and roughly pulled my head back, lowering her mouth onto mine and kissing me fiercely. Our tongues dueled, as her crotch ground against me. Breathless, she pulled away, hugging me tightly and burying her face in my neck. \n\n\"I need to cum, Alex,\" she purred. She climbed off and sat on the edge of the hot tub, her legs open. It took me several minutes, and my tongue was numb, but cum she did. We were alone the whole time, with neither Beth nor Holly joining us. Dawn was slow to reach her peak, and seemed to hover just around it. Finally she clasped me tightly and came fiercely. She was as hot as a firecracker. \n\nDawn slid back into the water, then slipped into my arms kissing me deeply. \"Get up on the edge,\" she told me.\n\nI did, my cock standing up proudly, arrogantly.\n\n\"I'd love to let you fuck me with that big fat cock, but I've never cheated on JT, and I don't think I want to start when I'm this drunk.\" She reached over and stroked my cock. \"So you'll have to be happy with this.\" She stroked me smoothly, up and down, easily beating me off. She seemed enthralled by the action, her face getting closer and closer, until I heard her mumble, \"Fuck it\". At that she put her mouth over the head of my cock, and proceeded to swallow me. Slowly, until more than half had disappeared and I was pressing into the back of her throat. She pushed harder, taking another inch, and holding it there, before she pulled off of me gasping. I was impressed, and said so.\n\nShe pulled her head back and smiled. \"I'm glad you like it.\" She went back to sucking me, and then she was grabbing my hands and placing them on her head. I was trying to stay in control, but that was too much, and I took her head in my hands and fucked her face. Up and down on my cock I forced her, penetrating deep into her throat, listening to her gasp as I let her off. She was growling and mewling as she sucked me ferociously. \n\nIt was only a couple of minutes later that I announced to her \"I'm cumming.\" She immediately pushed down hard, taking nearly my entire cock, and I creamed down her throat. It was the most incredible feeling. I never saw a drop of my cum. As I finished inside her mouth, she slowly drew back, sucking me clean the whole way. At the end, she pulled off of me and smiled. She opened her mouth to show it completely clean. She then took my flask of Tequila and took a shot.\n\n\"God I needed that,\" she murmured. \"We better go in.\" \n\nHolly was passed out in the bed. Beth had gotten sick in the bathroom, and was helpless, sitting on my couch. She wasn't unconscious, but she was certainly dazed. Dawn headed back to the bedroom, to dress herself. Unbelievably I heard the hair dryer go on. I looked down at pretty Beth, and found her bra. I pulled her forward as I tried to put it on her, attaching it behind her back. I was getting hard again, just from being around her like this.\n\nShe reached out and grabbed my cock, tugging at it as she slid back into the couch. I leaned over her, while her hand gripped my hardening cock, and I nibbled on her ear and neck. \n\n\"Don't you want me?\" she murmured, drawing me closer, and stroking me.\n\nI did a bad thing. She was in no shape for it, but I couldn't help myself. As her hand guided my cock between her legs I went along, and when she placed the head at the opening of her nether-lips, I pushed. A couple of shoves later and I was balls deep in this sweet, innocent and incredibly drunken beauty. She seemed content and leaned back into the pillows, her eyes closed.\n\nAnd I fucked her.\n\nI fucked her with long full strokes, enjoying the sensation of her moist pussy, my hand cupping those perfect breasts, playing with her nipples, and just using her. There was a rhythm to the sound of the hair dryer, almost like a humming, and I fell into that rhythm, short strokes when called for, longer strokes when necessary. I was only in her about 5 minutes, and I was ready to come again. But the rhythm of the hair dryer hung onto me, controlling me, driving me in and out of the semi-conscious nearly naked beauty. Then abruptly it shut off, and I slammed into her, driving my cock mercilessly against her open pussy. I was coming inside of her, thrust to the very root, recklessly filling her womb with my seed. I quickly pulled out and slipped her panties up her legs, following these with her pants. I was glad she hadn't worn tight jeans. \n\n\"I'll finish dressing her, you better put something on.\" Dawn said from behind me, as I turned Beth's shirt right-side out.\n\n\"Ok, I'll be ready in a sec.\" I went to throw on gym shorts and a t-shirt.\n\nI tucked Holly under the sheets, and she mumbled, but rolled over and let me tuck her in. \n\nSemi-dressed, I guided the two thirty-something hotties out to Dawn's suburban. I would drive them home and walk the 4 blocks back. We took Beth home first even though she lived the furthest away, since I had to end up at Dawn's. I wondered if Beth would catch hell for getting so drunk - her husband was a jealous guy. Dawn escorted her in while I waited.\n\nShe came out angry. \"What a fucking asshole. She should leave the fucker. Fuck him.\"\n\n\"What happened?\" I asked her, concerned for Beth.\n\n\"Just the usual. He was calling her names, insulting her for being a slut, and then for being frigid. What a jerk. Then he started in on me, blaming me for her condition. She deserves better than that prick.\"\n\nWe were quiet. \n\n\"I never expected anything like this night,\" I confessed to Dawn, at a stoplight.\n\n\"Nothing happened, Ok?\" she said to me, leaning back in her chair, eyes closed.\n\n\"Nothing,\" I agreed.\n\n\"Good. I hope we get to do nothing again sometime. Soon.\" I looked over and saw a smile on her lips. \n\n\"Me too. Maybe even more of nothing.\" I reached out and let my fingers cup her near breast, before they settled down to her crotch, rubbing her pussy through her tight jeans.\n\n\"Mmm. That would be nice,\" she giggled, pushing up against my hand.\n\nWe were about two blocks away, when she told me to park, opening her jeans and tugging them and her panties down around her ankles. The car was barely in park before she was thrusting my hand back between her legs. I pulled my hand away and she almost cried. I climbed into the back seat, between the captain's chairs and she followed me. \n\n\"Alex, we can't do it,\" she warned me. \n\n\"I know,\" I answered. I sat back, and guided her next to me. She turned and laid down in my lap, giving me easy access to her burning twat. My left hand caressed her face and breasts, through her shirt, while I fingered her. It was only a couple of minutes before she was coming hard on my hand.\n\nShe sat up and kissed me warmly. Then she was opening my pants. \n\n\"Dawn, you don't have to...\" I tried to tell her.\n\n\"No shit. I don't HAVE to do anything,\" she told me diving mouth first for my cock. She was an incredible cocksucker. But after just a few seconds she pulled off of me. \"Where has this been?\" she asked. She licked it again. Then she looked at me with a look of surprise, \"Oh, Jesus, you ARE a bad boy!\" I guess maybe I should have cleaned up after I used it on sweet Beth. It didn't seem to deter her, and she gobbled me like it was the only thing that mattered in the world.\n\nOnce again she pulled off, and then she shocked me, pushing my legs down, straddling me, with her back to me, and pressing my thick, wet cock, against her bare pussy.\n\n\"Don't you dare come in me. I just want to get a feel. It's so damn thick.\" That settled, she eased down onto my cock, taking the entire length easily.\n\nShe fucked me. I don't care what she calls it. She fucked me and fucked me well. I held her warm round ass in my hands, helping her raise and lower herself on my throbbing meat. She had to bend over, after bouncing her head off the roof a couple of times, but it didn't slow her down a bit. With a gasp, she pulled off of me, then turned around, pulled me forward on the seat, then settled on my lap, facing me, taking me inside of her again. She leaned back, her exquisite body stretched out in front of me, while I delved her depths. I fondled her breast through her shirt, and she reached down and peeled her shirt and bra up and over her huge tits, pushing them out for me. When she was gasping from the exertion, I turned her around and leaned her over the console, wedged between the two front seats. Grabbing her hips in my hands I fucked her forcefully, pounding her, making her cry out. I looked down, by the dim light of the street lamps, and grasped her ass cheeks in my hands, spreading her open, so I could see both her tight little brown hole, and the view of my cock sliding in and out of her repeatedly. I was in heaven. When I told her I was getting close, she pulled off, twisting from between the captain chairs, and wrapped those naughty lips back around my yearning cock. She sucked me and stroked me, and it was only a few more moments before I finished in her talented mouth.\n\nShe wiped her lips with the back of her hand, then looked at me and gave me a wink. \"Couldn't have you making a mess in my car now, could I?\" \n\nI zipped up and climbed back up front, while my wife's best friend got her panties and jeans back on, which was a bit of work. Damn, they were tight.\n\nThen I was dropping her off. JT met us at the door. \n\n\"Sorry, buddy. They weren't too much trouble were they? You know how she gets when drinking.\" He looked askance at his wife, who was wobbly.\n\n\"They went skinny dipping. Surprised the hell out of me,\" I told him.\n\n\"Yep,\" Dawn replied, \"and we were nekkid.\"\n\n\"That's kind of implied when we talk about skinny dipping. All three of them?\" he asked, and I nodded. \"Shit. You didn't tell Eric did you? He'll have a cow.\" he was holding Dawn so she wouldn't fall over.\n\n\"Hell no! The fucker was yelling at her for getting home late and drunk,\" Dawn interjected. \"The asshole asked her why her hair was wet, and she said she'd gotten sick, and rinsed her hair under the faucet.\"\n\n\"Damn, I don't want to hear about this from him,\" he said to me. \"He always blames this one.\" He wiggled her under his arm, and she groped for his crotch.\n\n\"I'll leave you to take care of her, I've got one to take care of at home.\"\n\n\"You need a ride?\" he asked.\n\n\"I need a ride,\" Dawn whined.\n\n\"Nope, just a short walk, I'll see you later.\" I started heading down the driveway.\n\n\"If they go skinny dipping again, I'd like to see that.\" He said to my back.\n\n\"Sounds like a plan to me.\" I told him, wondering how far it could go, openly, between four consenting adults. Maybe five with Beth. \n\n=====\n\nI hope you'll forgive the little detour from the main line of the story. Don't worry we'll be back on track in the next episode. And if you liked this one, please take the time out to vote!"
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "hot tub",
        "sharing",
        "body shots",
        "drunk",
        "oral",
        "blow jobs",
        "milf",
        "best friends"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/sis-in-law-incentives-ch-05"
}