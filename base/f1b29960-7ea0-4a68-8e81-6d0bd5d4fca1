{
    "title": "Finding Your Way Back",
    "pages": [
        " This is not a stroke piece. I had planned a modest grind or two but in the end deleted the sex because I felt it detracted from the story. There is love.\n\nMy story ideas tend to flow from a single memorable incident and then I expand that incident or encounter into a story---a fictional story. I sat down next to an icy blond whose name I don't recall, if I ever knew it, at a bar in Atlanta many years ago. I listened as a couple on business types tried to pick her up and laughed when she shot them down in flames. I'm pretty sure she didn't believe me when I told her I was a pilot; she torched me in short order. What follows is my fantasy of what might have been her story and what might have happened. \n\nIt's about overcoming---coming back from---something that happens in your life that almost kills you and fucks you up in the head just enough to dull your humanity. You can still function, even function at a very high level. You're not suicidal, not even depressed. It's as if the affect side of your brain---the feelings side---has just shut down because the pain of what you saw or experienced is too massive to deal with.\n\nIf you've ever been in or witnessed a serious auto accident---one in which people die, are dismembered, or you watched them die---you've felt it. A tornado ripping out every house around you---that'll do it. Watching people die or lose essential body parts in combat is a sure bet. If you are lucky, you mope through a few days or weeks and come out the other end reasonably whole again. If you're unlucky, you gradually slip into a death spiral from which there is no recovery. My character, Marty is somewhere in between, still functioning at a high level but dangerously close to slipping into that death spiral, because we can't live without affect---genuine, true emotions---for too long before it takes an irreversible toll. \n\nThis was only his second visit to this particular Atlanta watering hole. He'd been told it was a good pickup spot which college students did not frequent. He wasn't interested in fucking some college cunt. There was an open seat at the bar. He gave the bartender the high sign. His name was Bernie and they had chatted during his first visit a couple of nights earlier.\n\nHe always got carded even at twenty-six. He'd looked fourteen since he'd been fourteen. The barkeep had scrutinized his driver's license carefully. During a slow period the two men had chatted.\n\n\"Son, something about you says that you did a spell in Uncle Sam's employ. I'm Bernie.\" The two men had shaken hands.\n\n\"Wes. Wes Crandall. Right as rain, Bernie. U.S. Army, eight years.\"\n\n\"Lot of years to hang it up.\"\n\n\"It stopped being fun; if I didn't get out, it would have just gotten harder to do so every additional year.\"\n\n\"Vietnam?\"\n\n\"Twice. Helicopter pilot.\"\n\n\"Glad I missed that one. Made the last one, though---2/5 Marines. What are you into now?\"\n\n\"A little charter work, bootlegging time with a couple of corporate guys, on call with a commuter flying twin Otters, giving flying lessons...trying to get on with the airlines.\"\n\n\"Any luck?\"\n\n\"Bad timing. Pan Am just bellied up, Braniff is on the ropes and the word is things at Eastern aren't great. There are too many zoomies with lots of multi-engine turbofan time in front of me. I'm on a waiting list for whatever that's worth.\" \n\n\"How many hours have you got?\"\n\n\"Over 6,000---80% of it is rotary wing. I got my Airline Transport Rating with the GI Bill. Got a degree in night school in the Army---have to have one of those to get on with the big boys.\"\n\n\"Haven't seen you in here before; what brought you into my bar?\"\n\n\"Trying to get lucky.\"\n\n\"You're a good looking kid. You shouldn't have any problem in here. We got 'em. Shop girls, young professionals, business travelers, flight attendants---you pick. Most of 'em aren't looking for Mr. Right\u2014just Mr. Right Now. I'll try to steer you straight.\"\n\n\"Appreciate it.\"\n\nAs he slipped on to the bar stool during his second visit he was aware of a woman sitting next to him on the left. Without being obvious and with a little help from the mirror behind the bar, he checked her out. She looked young; she was blond and pretty but also had a hard edge. She was taller than average with a leanness that on a man would have been considered wiry. She was some kind of athlete or worked out. The sleeveless blouse showed definite muscularity in her shoulders and arms. She didn't remotely acknowledge his arrival and Bernie had been too busy to chat.\n\nHe'd always hated this part: starting a conversation. As he sipped his drink, two guys sat down on her other side. A quick look told him they were young business types. He took an instant dislike to them without knowing them. He knew their type. They struck up a conversation with the tall, cool blond. She didn't seem interested, answering the queries in monosyllables if at all.\n\n\"My name's Brett and this is my good buddy Chad and you are...\"\n\n\"Marty.\" She had answered without turning toward Brett.\n\nHe had to give them credit for effort. The two were pouring on the charm and not getting a hell of a lot of encouragement back. Wes would have long since gotten the message and moved on to greener pastures. As their attempts at bar seduction became more creative, Wes had to smile. If it actually worked, he'd have to remember some of the patter.\n\n\"So, Marty, what do you do for fun?\"\n\n\"Sky dive.\"\n\n\"Really? Wow! Chad and I...we've gone sky diving a few times.\"\n\nUh, oh! That was bullshit and if Wes knew it---so did the ice cold blond named Marty.\n\n\"What kind of chute do you use, Chad?\" \n\nShe had spit out the co-conspirator's first name. He began to stumble. She threw some more parachutist specific technical crap at them and they knew they had made a fatal mistake.\n\n\"The only friggin' thing you two weenies have ever jumped out of is your bed. I teach sky diving, dick wads. If you'd like to learn how to jump out of airplanes, come by South Lake Airpark any Saturday or Sunday; I'll be there. Just ask for Marty.\"\n\nThe two young junior executives moved away with their tails between their legs. Wes couldn't keep from laughing. She noted, turned toward him and prepared to cut off her third dick of the evening.\n\n\"What's so funny? Don't tell me! You're into sports parachuting too?\"\n\n\"No, ma'am. Nothing would convince me to jump out of a perfectly good airplane.\"\n\n\"Don't knock it if you haven't tried it.\"\n\n\"I've looked over my head and seen a parachute once in my life.\"\n\n\"I thought you had never sky dived.\"\n\n\"I haven't. And the airplane in question wasn't 'perfectly good' anymore. It was falling apart. I ejected.\"\n\n\"Now I suppose you're going to tell me you're an airline pilot.\"\n\n\"Nope. I'd like to be, always wanted to be---plan to be.\"\n\n\"That'd be as soon as you take flying lessons?\"\n\n\"Funny! I give flying lessons. I'm an instructor pilot, do a little charter work, some corporate left seat, part time with a commuter outfit.\"\n\n\"Bernie! Are you sure you carded this kid? He doesn't look twenty-one to me.\" Bernie waved her off. She turned her attention back to Wes. \n\n\"I suppose you're going to tell me you have your own airplane and you'd be happy to take me up so I can jump out?\"\n\n\"I do have my own airplane---Cessna 172---but I'm not certified to drop jumpers.\"\n\n\"What---daddy bought it for you?\"\n\n\"I won it playing Bingo.\"\n\n\"That's creative!\"\n\n\"I'm dead serious. The Officer's Club at Fort Rucker used to have these mega-prizes. It would take months before anyone won them. A big fancy Cadillac one time, a Winnebago on another occasion and, since it's an aviation post, a fully instrumented 172. It was the only time I'd played. I had to pay the taxes on it---which damn near cleaned out my savings.\"\n\n\"That story is too unbelievable for anyone to make up.\" She was smiling. That was progress. \"Let's try this again. I'm Marty.\"\n\n\"Wes.\" He said, shaking her hand. Her grip was not remotely feminine.\n\n\"Air Force---Military Police, one hitch.\"\n\n\"Army, eight years.\"\n\n\"Almost a lifer.\"\n\n\"Got out before I started acting like one.\"\n\n\"Vietnam?\"\n\n\"Twice.\"\n\n\"I did a tour at the Danang Airbase.\"\n\n\"I've been there.\"\n\n\"Are you from Atlanta, Wes?\"\n\n\"Nope. It was the first big city north of Enterprise, Alabama.\"\n\n\"I'm a transplant too. My last military duty station was South of here. Drove north until I hit the first big city. Got a job. Can't say I love it here.\"\n\n\"I can't argue with that.\"\n\n\"Where's your airplane parked, Wes?\"\n\n\"Small world. South Lake.\"\n\n\"I've been thinking about taking flying lessons. Are you any good? How many hours do you have? What's it going to cost me?\"\n\n\"I'm good. I've got over 6,000 hours. The first lesson is free and I'm competitive.\"\n\n\"Were you serious when you said you weren't interested in leaning to sky dive? And did you really eject? I didn't know the Army had any aircraft with ejection seats.\"\n\n\"Only one---the OV-1---and they're phasing it out. I was a test pilot for three years down at Fort Rucker. I got in a flat spin---intentionally---in an OV-1D. It's a single pilot aircraft with dual controls in some configurations with an observer in the right seat. I didn't have an observer that day. We were testing its flat spin characteristics---trying to determine how much altitude it took to get it out of the spin. We'd already lost a senior test pilot and an observer on a previous test. They didn't eject. I did. It scared the shit out of me---more than anything that happened in two tours in Vietnam.\"\n\n\"How much altitude does it take?\"\n\n\"It's not definitive. It depends on the conditions---and the pilot. What we put in the book was, if you're still spinning at 10,000 feet, pull the curtain. The spin just gets tighter and the centrifugal force jams you to one side of the seat. The Gs build; you probably won't be able to reach the overhead ring---no titanium face curtain to deflect all the flying plastic. You'll have to pull the one between your legs. You'll go through the overhead canopy bent. You won't have enough forward airspeed to clear the tail. If the triple-tail doesn't cut you in half, you're back probably broke when the Martin-Baker seat went off. You might even be blind from plastic shards that got sucked up under your visor. Blind and paralyzed---or dead.\"\n\n\"When did you eject?\"\n\n\"The sink rate was something in excess of 10,000 feet a minute and building. I almost made the decision too late. I pulled the lever between my legs at 10,000 give or take...couldn't reach the overhead. I'd gotten as straight as I could. X-rays showed some spinal compression fractures but they told me they'd heal since I was young and healthy---but I wasn't supposed to fly an airplane with an ejection seat for a few years---if ever. I apologize! I haven't talked about that aspect of my life to anyone since right after it happened. I didn't mean to bore you with old war stories.\"\n\n\"It wasn't boring at all! Thank you for sharing it with me. This place is filled with poseurs. My spider sense tells me you're not one of those. How old are you, Wes?\"\n\n\"A month shy of twenty-seven. You?\"\n\n\"Almost a year shy of twenty-seven. You look a lot younger.\"\n\n\"Story of my life---so do you.\"\n\n\"After you ejected---when you were coming down---what were you feeling?\"\n\n\"I was checking for body parts; my face was bleeding---so was my foot---broke a couple of toes. My back hurt like hell but I could move all my limbs. Once I knew I was alive and reasonably in one piece, I started thinking about how much it was going to hurt when I landed---praying I didn't do something irreversible to my back. Trying to remember ejection seat training...terrified I was going to spend the rest of my life in a wheelchair. Beginning to have doubts about the typical young pilot's belief in his own immortality.\"\n\n\"That does not sound like fun. Well, if you ever decide to get back on the horse---parachuting, I mean---look me up. I've got over a thousand jumps---and I'm a damn good instructor. Nice meeting you, Wes! Maybe we'll run into each other in here or at South Lake. I had a long day. I'm heading for the barn.\" She touched his arm as she stood up to leave. Things had slowed a little at the bar and Bernie walked over to chat.\n\n\"I promised to steer you right, Wes. Sorry I got tied up. I'm pretty sure Marty is not the girl you're looking for. I've never seen her leave with anyone---and she talked to you longer than I've ever seen her talk to anyone. She's a pretty woman but she's hard!\"\n\n\"It didn't start out real well, but I thought we were getting somewhere as time went on.\"\n\n\"I've chatted with Marty a few times, Wes, the old former military thing. She joined up on her eighteenth birthday. I got the distinct sense that there wasn't a happy home life in her past and she joined the Air Force to get away from something. Her line of work doesn't help her prospects.\"\n\n\"Her line of work?\"\n\n\"She's a cop. She's worked undercover. Used to work vice---her apparent youth was evidently an asset. She passed the sergeant's exam on the first try and while being a female in today's world probably didn't hurt...I've got some friends in the local PD. They tell me she's a damn good cop. Any one of them would be proud to be her partner---it wasn't that way when she started.\"\n\n\"Sounds like there's a story here, Bernie.\"\n\n\"There is---and I don't have time to tell it. Wes, are you trying to get lucky tonight or just hanging out?\"\n\n\"I'm not very good at this whole bar scene pickup thing, Bernie---why?\"\n\n\"I want you to meet someone. He's former Navy but I don't hold it against him. Son, you got more out of Marty than I've ever seen anyone get before. She actually had a conversation with you. I like her; she's good people---but she's not in here looking to get picked up. This place is close to work and we have more than a few cops who stop in here on the way home. I'm not suggesting you take a shot at her---because I'm pretty sure it'd be an uphill climb. But your eyes say she got to you---you're not the first. Want to know more?\"\n\n\"Sure. Yeah. I'd like that.\"\n\nBernie went down to the other end of the bar and spoke to a man whom Wes judged to be a couple of decades older than he was. The man ambled over and took the seat beside Wes. Bernie made the introductions. He was a cop named George Carr. After getting to know each other, George ventured into the topic of Marty...Marty Simms.\n\n\"I was her training officer when she came on board a little over four years ago. None of us were very happy with the whole 'equal opportunity' thing and some of the younger guys did and said some things that were wrong. Anyone who worked with her back then knew she was different. She'd been a military cop for almost four years and been to Vietnam. She'd seen some nasty shit over there. She won a Bronze Star with V for her actions when sappers got inside the air base in Danang. She was tough---mentality and physically. She had good law enforcement instincts. She was head and shoulders above any probationary officer I'd ever worked with.\n\n\"She was one tough, gritty undercover officer. She got into some bad shit and got her self out of it. The other guys began to realize that you could depend on her. They started to accept her. Any doubts vanished nine months ago---right before I recommended her for sergeant. Son, I don't know what you know about law enforcement. I've been a cop for twenty years. I've drawn my weapon a half a dozen times and fired it twice. I've shot someone once---and he lived.\n\n\"Marty was assigned to a felony warrant team along with cops from other agencies---feds, state and local. It was all crap---politicians just trying to show how well we were all cooperating. They'd even called the press to cover the damn thing. I don't know what happened. I've always believed that one of the reporters tipped off the people we were serving. They were ready, they were armed and there were two feds down before the good guys even returned fire. The police vehicles were caught in a cross fire. Marty wasn't even supposed to serve the warrant---it was a fed deal and they didn't really want our help. She was supposed to stay in the car.\n\n\"She saw it unfolding and tried to get the feds in the lead car to abort but they thought they knew more than she did. She called for backup from us, the local PD. We knew Marty; we sent every officer we had. Marty is former military; she knows her away around a shotgun and an AR15. She got out of the car, sought cover and concealment and found herself a shooting position. And then she just started picking those bastards off. She'd nailed four of then before they even knew it---there were a dozen. The other cops were down, under-armed and generally ineffective. \n\n\"They started to converge on her position; she stood up and took out two more of them with the twelve gage. She took two rounds in her vest. She moved to the fed car, dragging one of the wounded cops on the ground with her. She took out two more at close range with the pump-action. One of the state cops finally got his shit together and started putting down suppressive fire. Marty took a hit in the thigh.\n\n\"Our first cars came up the street from both directions and the bad guys realized they were screwed and decided to go out in a blaze of glory. Marty took out one more with the AR after pulling a second cop to cover behind one of the cars. Ballistics indicated that she took the tenth\u2014the fucking tenth---down with her side arm before the reinforcements nailed the last two. I was the first one to get to her. She was lying on her side there on the ground, blood dripping out of her leg in spite of her attempt to tie it off. She had her side arm in one hand while trying to give mouth to mouth to one of the downed cops. Eight LE personnel wounded, with two critically so. We cleared the EMTs in. I wanted her to wait for a stretcher. Not Marty. She was going to walk out of there if it killed her.\n\n\"It was all on tape from multiple cameras---the press---and the ballistics confirmed it. One of the feds died---the other wounded all survived. The press and the black reverends tried to get everyone riled up with charges of \"excessive force.\" It didn't fly. There were black cops and white cops bleeding in the street that day. The community review board saw it the same way. She was decorated multiple times---even got a medal from the president. She'd already taken the sergeant's exam and maxed it. She made sergeant a month later.\"\n\n\"That's a remarkable saga.\"\n\n\"That it is but I told it to you to make a point.\"\n\n\"Okay.\"\n\n\"Wes, Marty is just as good a cop today as she was that day but something's missing. It's not her instincts or her skills. Somehow that day changed her---hardened her...took away her sense of humor...her humanity. It's as if she's some kind of robot. She does the job and still does it well but she's like a machine. I don't like her that way; I don't think it's healthy.\"\n\n\"Why tell me? We just met and it didn't go all that well.\"\n\n\"Maybe not, maybe so. But you made her smile and it has been too damn long since anybody made Marty smile. I was watching from the other end of the bar. You just had the longest conversation with Marty Simms that anyone has had since nine months ago. What were you talking about?\"\n\n\"I told her a true story about a day when I knew I was going to die...or worse. I hadn't planned on it; I've never really talked about it before...it just came out.\"\n\n\"Son of a bitch! She's seen the department shrinks---which is mandatory---and we've tried but none of us have ever been through anything like that. Maybe you struck a nerve...a good nerve.\"\n\nSaturday morning Wes had two flight lessons scheduled. Neither of the students showed any real promise. They both just thought it would be cool to learn how to fly. The money barely paid the cost of owning, parking, fueling, maintaining and insuring the Cessna. He had a couple of hours before his next student. The later one already had a private license and was going for an instrument ticket. She was a damn good student and a competent pilot.",
        "With some time on his hands, he ambled over to where a group of parachutists were gathering up their nylon after a jump. He saw her, recognizing her form and carriage before he saw her face. He waited patiently as she debriefed her students and then approached.\n\n\"Marty?\"\n\n\"Wes, isn't it?\"\n\n\"That's right.\"\n\n\"Come for your first sky diving lesson?\" she said with a certain degree of sarcasm.\n\n\"Nope. Not sure that's ever going to happen. Came to offer you your free first hour of flight instruction---if you've got the time.\"\n\n\"Are you serious?\"\n\n\"I don't have another student for a couple of hours.\"\n\n\"Why not?\" she said with a hint of a real smile. \"Let me dump my stuff in the truck. I'm free for a couple of hours myself.\"\n\nWes followed her to her truck at which point she peeled out of her jump suit. She was wearing shorts and a simple tee shirt beneath. She was an even prettier girl than he had realized in the dimly lit bar. In spite of her muscularity no one would have missed the fact that she was a girl.\n\n\"What's an airplane like this cost?\" she inquired.\n\n\"With the avionics and instrument package, a little over forty. I'm considering trading it for a twin; something maybe a couple of years older but still in top-notch condition. Multi-engine would significantly increase my teaching opportunities and improve the caliber of the clientele.\"\n\n\"Only one engine? Should I go back and get my chute?\"\n\n\"It's a very reliable engine. The glide characteristics are excellent and you don't need a hell of a lot of room to put her down.\"\n\n\"Have you ever 'put her down' without the engine running?\"\n\n\"In training. Twice in a helicopter---a Huey and an OH13. We'll give you a taste of what it feels like today---back to the runway, of course.\"\n\nThere aren't a hell of a lot of gages and instruments in a small Cessna. Marty had been up in enough airplanes to have some familiarity with the control layout. Wes got clearance to taxi. As he did so he gave Marty the typical IP patter for a normal fixed wing, VFR takeoff.\n\n\"Marty, there's five times more runway here than this puppy needs. Follow along with me on the controls---stay very light, particularly on the rudder. This type of airplane pretty much takes off by itself. If you don't do anything other then keep it lined up on the centerline---it's going to fly. No gear to retract---a very tame flying machine. Ready?\"\n\nWes turned the airplane over to her as soon as they were airborne, explaining the coordination between the pedals and the yoke, demonstrating a slip versus a coordinated turn...the old needle and ball. She had good instincts...an easy control touch. He demonstrated some basic flight maneuvers and let her execute them.\n\n\"Let's reenter the traffic pattern and do a normal approach. We'll take a couple of runs around the pattern so you can get the feel of it. Then we'll do some emergency procedures.\"\n\nAs a jumper, she understood the concept of sight picture. Her second, virtually unassisted landing was almost perfect. He called the tower for permission to do the power off landing, chopping the throttle on crosswind.\n\n\"It's very quiet. Like sky diving.\"\n\n\"Do you jump with a foil---I don't know what you call it---a chute you can steer?\"\n\n\"Yes.\"\n\n\"Same thing. We've got lots of wing area for our gross weight. Trading airspeed for altitude. Keep it above a stall, no sharp turns, shoot long...kiss it on...like this.\"\n\nThey went around and did it two more times with Marty essentially in control on the final one. They left the traffic pattern. He demonstrated some more advanced maneuvers and then let her perform them. She was a very quick learner.\n\n\"Okay, let's try a stall. Essentially it means the wing ceases to be aerodynamic---no longer produces lift. The aircraft falls off to one side and without correction enters into a spin. You start falling out the sky. The untrained instinct says pull back on the yoke---get the nose up. Completely the wrong action---the nose is already too far up, that's why you stalled. You have to get airspeed back---get clean air over the wings---fly out of the stall or spin. Don't fight the spin with the rudder---you'll lose. Nose down....build airspeed. This is a very hard airplane to stall---you virtually have to cheat to get it into a sustained spin. As long as you have sufficient altitude, it wants to fly again. As we slow down and begin to enter the stall, the yoke will start to shake---it's not natural, they built it into the controls as a warning.\"\n\nHe demonstrated one, had her follow along on the controls on the second and let her fly for the third. She got it on the first try.\n\n\"Okay, one more emergency procedure. Engine failure. Before you attempt to restart the engine, turn into the wind, adjust the rudder for the loss of thrust, make your mayday call---look for a place to land. Then and only then, attempt a restart while always keeping at the forefront of your mind where you're going to put it down.\"\n\nMarty understood and absorbed the final lesson as well as she had all the others.\n\n\"Marty, you're a very competent pilot for a first ride. You have aerodynamic sense---thanks to your sky diving experience. You pay attention and absorb instruction remarkably quickly. I'd expect you'd solo in under six hours. Then it's thirty hours, give or take, mostly solo time followed by a check ride and you have a VFR private pilot's license. You'd need to study some ground school stuff, take a written test and file some forms with the FAA but it would be no big deal.\"\n\n\"No chance we could trade for sky diving lessons?\" She said with a grin. She instantly regretted it. \"I'm sorry...I apologize.\"\n\n\"You really want me to jump out of an airplane---don't you?\"\n\n\"No. Yes. Although I believe it might be a good thing. Forget it! I don't know what I'm talking about.\"\n\n\"Okay. I'll do it. On one condition: dinner. You put on a nice dress, I'll even wear a coat and tie. We go to dinner some place nice. Just you and me.\"\n\n\"You'll strap on a chute if I let you take me to dinner? I thought your were scared of...\"\n\n\"Absolutely terrified beyond anything you could imagine. You'll probably have to throw me out of the airplane and I'll scream and piss my pants all the way down. Might even throw up in there somewhere. I didn't tell you something the other night. Someone else had the idea that jumping out of an airplane after the accident would be good for me. I bit---even went through the ground school and went up in a plane with a parachute on my back. I couldn't do it---wouldn't do it.\"\n\n\"But you'd do it for a date with me? I don't get it.\"\n\n\"In case you haven't looked in a mirror recently, you're a very pretty girl. It's more than that. ...but you are a very pretty girl---particularly when you smile. You've got a hard edge to you---so do I. I don't have any friends in this town, Marty. I don't sense that you are exactly a social butterfly. I told you some shit the other night that I've never told anyone...not that way. I don't open up to people, Marty---never have. I did to you---a perfect stranger. I'm not looking for miracles here...no grand expectations...I need a friend. You do too. Dinner's a start.\"\n\nMarty had Wes strapped into a chute in less than thirty minutes. She had quickly discerned from quizzing him that he had retained everything he needed from his prior ground training in skydiving. Fifteen minutes later they were over the drop zone; she would jump with him. It would be just the two of them.\n\nHe was even more terrified than he had let on. All the memories came back...all the terror...the certainty of his own death...or worse.\n\nShe sensed it. \"Wes, I'll be right there with you; you can do this. I'm not going to let anything happen to you.\" \n\nShe took his hands in her own and then did something completely unexpected. She kissed him softly on the lips.\n\nHe registered his surprise. \"All I had to do to get a kiss was jump out of a perfectly good airplane? Why didn't you say so?\" \n\nShe punched him playfully in the arm. Before he realized it, he was out the door...falling. He frantically glanced around...couldn't find her...where the fuck was she? And then she was there, filling his field of vision...calming him...smiling...mouthing words he couldn't really here. She gave the signal, close enough to activate his chute for him if he failed to do so. He pulled the D-ring; his peaceful descent abruptly slowed. This was what he remembered...the chute opening...the searing pain in his back...not there today...but soon the ground would come up to meet him and then...it did. And he was still alive...and he could wiggle his toes.\n\nHe was crying and laughing at the same time, again frantically searching for her. And then she was there...holding him...laughing and crying with him...softly touching his face...kissing his face...his lips...and he was okay...all was good.\n\n\"Son of a bitch!\" he exclaimed. \"Okay, I have to admit it had its moments. I'm not completely sold but...thank you. Thank you for caring...thank you for being there.\"\n\nMarty agreed to pay up regarding the dinner date that evening but insisted on splitting the tab. He didn't argue. He went to pick her up, surprised to discover that she lived not ten minutes from where he did. He rang the bell and waited. Oh my, where do women get those damn little black dresses? He was speechless.\n\n\"You clean up pretty good, officer, if I may be so bold.\"\n\n\"You don't look so bad yourself, flyboy.\"\n\nThey lingered for several hours over dinner in one of Buckhead's finest eateries. They learned about each other. Candor prevailed in most areas with the exception of the traumatic event in her life nine months earlier. Wes decided not to push it.\n\nLater came that awkward moment at her front doorstep. There was a kiss and an embrace and then uncertainty. Wes decided to take charge.\n\n\"Marty, I haven't enjoyed an evening with anyone in as long as---ever. I'd like to think you've given some thought to inviting me in and if so, as much as I'd like to say yes, I'm going to let us both off the hook and say goodnight. One question: do I have to jump out of an airplane again to get another date?\" \n\n\"No, flyboy. You earned your wings today. I enjoyed it...it's been a long time. Thanks for letting me off the hook. I'm not...I'm not very good relationship material, Wes. Don't know if I ever will be...again. But I'd like to see you again.\"\n\nA few days later, Wes embarked on a quest. He was not remotely sure he was doing the right thing for Marty or for any chance they might have to be more than friends. He sought out Marty's former training officer, George Carr. He had a plan but needed help to implement it.\n\n\"I don't know, Wes. The idea makes sense. I'm not sure how she'll take it. I can set it up at a place forty-five minutes south and east. We can simulate it---to a point. Give me a few days.\"\n\nWes and Marty went out together several more times. Their ardor in the car and at her front door had certainly increased dramatically. If he just wanted to get laid they were probably at the stage where she would have said yes. \n\nIn the long days of summer, it would stay light until nine. He called her and told her he would pick her up after work on Friday. It was a surprise. He hoped it wouldn't be the surprise that would make her never want to see him again.\n\nShe knew the place---had been there before. It was a private shooting club...South River. She'd fired there in a competition. Many of the regular members were LE types.\n\n\"Wes...this isn't such a good idea...what...\"\n\n\"You never told me about it. Marty...that day...nine months ago...but I know about it...George told me...told me that first night we met at Bernie's. I don't know how this is going to work out. I do know that from the day you made me jump out of that fucking airplane---the dreams...nightmares...they're gone...for the first time in eighteen months. It wasn't a perfect replication, no spin, no Martin-Baker ride through the canopy, no broken toes or bleeding face but as imperfect as it was, it was enough. You have friends Marty---I'm jealous. You have many more friends than I do. They're here. They care. They want to help. More important, they need your help. They love you. I love you. Please don't hate me.\"\n\nAll of the survivors were there to meet them. A stage had been set in the center pit of the small arms tactical range. The bad guys would be represented by corrugated. The faces of the men she had killed that day were pasted on the targets. It was set up as a live fire range with all appropriate safety protocols.\n\n\"I can't do this, Wes...what were you thinking?\"\n\n\"You can do this Marty---if I can jump out of an airplane, you can do this. You have to do this. I know it's just a simulation but it's as real as is humanly possible. You've got more fortitude inside you than anyone I've ever known. These are the people that were with you that day---the only ones on the face of the earth that know how it felt. They need to do this too. If you don't want to do it for you---do it for them. They have nightmares...horrible visions that won't go away. They need you here. They need to relive it one last time---and then never again. Help them---as you helped me. You can do this...you have to do this...for them...for you...for us.\"\n\nThe former comrades in arms greeted each other, spoke softly...exchanged hugs...rekindled an old bond. They walked through the staging several times for the sake of safety. It was Marty's call; it was her show. The players took their positions; each gave the range safety officer the thumbs up. And then it began.\n\nThe original firefight had begun and ended in all of three minutes. For Marty it all came back...almost in slow motion. She moved as she had that day...her comrades fell as they had that day...she did her job as she had done it that day. She hit the corrugated targets as precisely as she had hit the people she had killed that day...remembering the faces...the impact of the rounds as they tore through human flesh every bit as real as it had been that day. In three minutes, it was over. She was on the ground behind a car as she had been that day, not shot this time but feeling all the pain of that wound. Beside her was a plastic form...a representation of the man she had tried to save... the one who had died in spite of her efforts.\n\nThe safety officer called, \"Clear?\"\n\nMagazines were ejected and slides locked to the rear. The confirmations came, each visually confirmed by the safety officer.\n\n\"The range is clear. The range is cold.\"\n\nWes ran to her. She was sobbing uncontrollably, sitting on the ground surrounded by what to the unknowing was simply mock carnage but to her was horrifyingly real. She fought him...beating her fists against his chest...and then she let go...let his arms surround her...let his voice comfort her...his lips caress her. He could hear the soft sobs of others around him...and then a change...almost a collective release...a sigh...letting go. It was done. It was over...finally over.\n\n\"And then you stood up and walked out...alone...too proud to ask for assistance...wait for a stretcher. You're not alone now, Marty...you have friends around you...people who care deeply about you and a man who...\"\n\n\"A man who what?\" She almost spit the words out.\n\n\"A man who wants to love you...wants you to love him back...needs you to.\"\n\n\"A crazy man.\"\n\n\"Damn straight!\"\n\nAnd then she smiled. The others came up to her...hugged her...thanked her.\n\n\"Thank him---the crazy one. It was his idea...his insane plan.\" And they did so.\n\n\"You want to love me....for me to love you?\"\n\n\"Enough to risk making you hate me and never want to speak to me again.\"\n\n\"You did this for me? You got nothing out of it?\"\n\n\"Oh, I don't know. Time will tell. If I get the girl, then it wasn't so crazy after all---was it?\"\n\n\"Men! What they won't do to get in a girl's panties!\"\n\n\"I hadn't thought about it that way, but now that you mention it...\"\n\nShe kissed him. \"Thank you. Who could have known? Some guy who doesn't look old enough to legally buy a drink...tries to pick me up in a bar...tells me some crazy story...will wonders never cease.\"\n\n\"Are you okay?\"\n\n\"I'm okay. It'll always be there but hopefully, now, not right there. I'm damaged goods, my friend...you don't know what you're getting into.\"\n\n\"Does that mean...?\"\n\n\"Yeah, it does, cowboy. You got the girl---if you're sure you really want her. Now comes the hard part.\"\n\n\"I've always loved a challenge.\"\n\n\"You have no idea.\"\n\nEpilogue</B\n\nA man I knew survived a horrific series of events in combat. He was shot down while flying a small observation aircraft. The person riding with him was blown to bits in front of his eyes and he had to evade the enemy for three days and nights. They came within inches of his buried hiding place and even pissed on him. Think about it: he had literally buried himself alive in a desperate attempt to avoid capture or death. No food, little water...all alone.\n\nThe weather broke and we finally got him out; physically he was fine. Mentally he wasn't. He never flew again. They shipped him home a couple of weeks later and discharged him not long after. His brain had been so scrambled that he couldn't even do the one thing he loved the most---fly. This all happened before his twenty-first birthday.\n\nI clearly recall how difficult we all found it to be around him---to talk to him. We all just figured that he'd be okay. We assumed that maybe he didn't want to talk about it---that he would work it out.\n\nHe never got to celebrate his majority. He blew his brains out with a .45 ACP the day before with his medical discharge notification in his hand. No party was in the offing. He died alone in a BOQ room. He didn't leave a note."
    ],
    "authorname": "Dinsmore",
    "tags": [
        "romance",
        "love",
        "parachute"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/finding-your-way-back"
}