{
    "title": "The Emperor has No Clothes",
    "pages": [
        "\"Jeni, you bitch! I *hate* you!\" Grace bounced up off the chaise and into the shade provided by the cabana, but the damage was already done. Judging by the position of the sun, she'd dozed long enough it might not have mattered anyway, but *somebody* had folded the umbrella between the lounge chairs.\n\nThe \"somebody\" in question rolled onto her side and looked up at Grace. \"Chill out, girl,\" Jeni suggested. \"It's not like a little tan is going to kill you or anything.\" It was obvious she was trying not to laugh. The brunette adjusted the strap of her racerback swimsuit and rolled over again, determined not to waste a minute of their break.\n\n\"Easy for you to say,\" muttered Grace. Jeni obviously had a lot of Mediterranean ancestry, with dark hair cut short for convenience and an olive-toned complexion that never seemed to change, no matter how long she stayed out. It was annoying.\n\nGrace's ancestors hailed from more northern climes. She was blessed with gorgeous auburn hair that she wouldn't have traded for anything, but her skin tanned easily. Not burned, thankfully, but tanned - a golden brown, as the cookbooks put it.\n\n\"I don't understand why you have a problem, anyway,\" offered Jeni, not quite missing the point. \"You look so hot, and you know it!\"\n\n\"Oh, but in my workout clothes,\" Grace sighed, already visualizing the damage. She always had problems with so-called farmer's tans, where the unsightly change of color at hems and sleeves ruined whatever effect the tan might have produced. \"I'll look like a freak!\"\n\nJeni gave up on pretending not to be amused and laughed. \"Oh come on, Grace. You are not a freak. I bet nobody will even notice. Besides, this is swim camp, not Fashion Week.\"\n\nGrudgingly, Grace admitted to herself the brunette probably had a point. The Parker Training Academy, misnamed as it was, had nothing to do with fashion and everything to do with fitness. It was the second summer she'd attended, and Grace was as enthusiastic about it as she'd been doubtful the previous year.\n\nParker College wasn't a very exciting or visible institution. Located away from any major cities or interesting attractions, it had managed to avoid \"Commuity\" in its name, while attracting students who couldn't afford to travel out of the area and attend more prestigious schools.\n\nGrace was determined to leave waitressing and farming behind her, and the relatively low tuition rates made the student loans a gamble worth taking. So far, things were working out, better than she'd hoped.\n\nSwimming hadn't been on her radar, but it turned out that the Parker swim team was a big fish in a small pond. They were small in number, few enough to welcome walk-ons (including an intrigued Grace), but ferocious competitors. Nobody deluded themselves into thinking they were Olympic-caliber athletes, but the coaches had an amazing talent for getting every last bit of native ability out of their swimmers and divers.\n\nIn large part, apparently, the secret was the Parker Training Academy, colloquially known as \"swim camp.\" It looked like just another rustic summer camp stuck in the middle of nowhere, but it boasted an Olympic size pool and diving platforms. For a month each summer the coaches, swim team, and other attendees secluded themselves there and worked like dogs.\n\nGrace had been sure she was going to die the first summer. The days were long, and filled entirely with swimming and conditioning work (as if hours of swimming by itself somehow wouldn't be enough). The absence of any local cell towers virtually eliminated electronic distractions. Coach Rod and his assistants had a rotating series of visiting coaches lined up to provide diverse points of view and constructive assistance, and Grace was sure - she'd counted - there were more coaches than swimmers.\n\nNot only had she survived, that month had transformed Grace into one of the better swimmers on the team. She'd won several events in subsequent meets, but mostly it was her improved physical fitness that impressed Grace. She felt it when she bounced out of bed, felt it when she still had energy at the end of the day, and felt it when men's eyes followed her across campus.\n\nSo Grace had kept swimming, even in the frozen depths of winter, and her name had been first on Coach Rod's signup list that spring. Armed with an idea of what to expect and better conditioning, it had been a joy and Grace wasn't looking forward to going back to school.\n\nThe best part was that it didn't even cost anything, since she was on the swim team. How Parker College could afford to put on the camp was an open question, although there were rumors that other attendees paid enough to more than offset the costs. The once Grace had raised the subject with Jeni - one of the paid swimmers - there'd been some vague mention of a sponsorship or scholarship or something, and they'd let the subject drop.\n\nNow it was nearly the end of summer, and Grace would have to spend the next few weeks looking like a zebra or something. The camp didn't spend a lot on uniforms, and the white T-shirts and navy shorts ran slightly on the large side, meaning there was no way the tan lines on Grace's arms and thighs wouldn't show in anything she wore.\n\n\"Well, come on,\" Grace snapped, trying to fight off her sulk. \"I don't want to do extra push-ups if we're late, and you still have to change.\" She'd changed before lunch, but Jeni had put off switching out of her suit so she could catch some rays.\n\nThe two women left the relatively secluded side of the cabana and walked towards the oversized \"log cabin\" that housed the locker rooms and workout equipment. They were surrounded by the bustle of the others also headed to their afternoon training sessions; there were the familiar faces of the other students, coaches with the same utilitarian outfits but the largely-symbolic heavy whistles on lanyards, and the current rotation of visiting guest coaches.\n\nGrace had given up trying to understand where Coach Rod found the guest trainers. Most of them didn't look like coaches, even if they wore the same shorts and T-shirts, and many of them didn't act much like coaches, either. But there was no question they were dedicated to helping the camp participants excel, and they always left Grace breathless at the end of a workout.\n\nJeni stopped in front of her locker and started to pull off her suit, but Grace walked to the mirror behind the sinks and stared at her reflection. She looked good, hair pulled up in a casual bun, her arms and legs tanned and toned. Cautiously, Grace tugged at a sleeve, looking to see how abrupt the transition from tanned to pale skin was. Her arm remained the same golden tan.\n\nPerhaps her sleeve had been shoved further up than she remembered? The redhead pulled up one leg of her shorts, revealing an expanse of evenly tanned thigh. It was ridiculous! She was clearly darker than yesterday, and Grace knew that even she didn't tan through clothing!\n\nAs if her frustration had been a trigger, Grace felt suddenly lightheaded and her vision swam momentarily. Even as she blinked rapidly, her clothing shimmered and faded away like a desert mirage. Grace gulped at the sight of herself standing totally naked and evenly bronzed from head to toe!\n\n\"Oh My God!\" Grace screamed, turning to look for Jeni.\n\n\"What?\" the brunette asked, walking over to join her friend. \"Have you decided if you'll survive yet?\"\n\nGrace gasped, \"I can't--\" and stuttered to a halt.\n\nJeni wasn't wearing anything either, although she wasn't showing any signs of it bothering her. Her full breasts bobbed slightly as she ran her fingers quickly through her hair. \"Come on - aren't you the one who said you didn't want to be late?\" She turned towards the exercise room.\n\nIt was impossible to understand how it could be happening, but Grace wasn't entirely sure this wasn't some elaborate prank Jeni was playing. \"Just a minute; I need to, um...\" She couldn't say, \"get some clothes because mine have disappeared.\" It was almost tempting to see how far Jeni would go, but Grace would die if somebody else - especially one of the boys - walked in on them.\n\nShe hurried back to her locker and rapidly spun the combination lock. Grace opened the door and found her swim goggles and skullcap, but the swimsuit she'd put there just before lunch was missing. Two could play at that game, she decided, happy she knew Jeni's combination.\n\nThe faint smile Grace was wearing slipped when Jeni's locker turned out to be equally devoid of clothing or swimwear. Jeni had walked in with her suit on five minutes ago, and there was *nowhere* she could have hidden it! What was going on?\n\n\"Grace!\" The redhead jumped at Jeni's shout. \"Come on, already! It's just a fucking tan line - get over it!\"\n\nWith a gulp, Grace slammed the locker closed and headed for the door. She didn't understand what was happening, but Jeni would have to spill the beans or else...\n\nThe brunette, however, seemed poised to head right out for their session, which was a pretty ballsy move in Grace's opinion. The redhead started to cringe away from the door when Jeni pushed it open, but stopped in stupification at the sights she glimpsed through the opening.\n\nGrace stumbled when Jeni caught her wrist and pulled, and was too dazed to resist before she was out of the locker room. She looked around in shock, eyes wide.\n\n*Everyone* was naked! Well, there were a few of the visiting trainers in the bleachers across from the small indoor pool with clothes on, but everybody else was as naked as herself. Grace stumbled on the edge of a floor mat, but kept walking as if she were in a trance, and felt her face heat. Not only was she surrounded by casual nudity, but all of the men were rigidly erect. Grace wasn't a prude or a virgin, but she'd just seen more cock in 20 seconds than in the 20 years before that.\n\nLuckily, nobody seemed to be paying much attention to them - at least until they reached the beginning of their exercise circuit. Coach Evan speared them both with a look. \"Lemaire, Cartright - you're late! Give me 50 squat-thrusts and then get in your circuit!\" His tone and expression were exactly normal, but the heavy whistle on its lanyard looked incongruous above the heavy cock projecting from his hairless groin.\n\nGrace hesitated a moment as Jeni dropped into her first squat and then complied, trying to position herself so she wasn't directly facing anybody. It felt bizarre, but at least her breasts weren't as large as Jeni's.\n\n\"See?\" puffed the brunette, her breasts bouncing, \"I told you nobody would notice.\"\n\nThe redhead declined to answer, choosing instead to study her surroundings. The activities she'd always dismissed as routine now took on unsettling and perverse meaning. The girl on the outer thigh apparatus strained, her legs spread far apart, as the trainer with her urged her to push wider, his eyes glued to her crotch.\n\nOne of her male classmates crouched on the rowing machine, pushing the rolling platform beneath him back and forth. Each backward stroke impaled his glistening anus on the cock of the trainer counting time behind him.\n\nGrace looked away, only to catch sight of Bethany, one of the divers, standing on the yoga mats. Beth quivered, holding form with her arms stretched above her, while the hands of the woman beside her teased and stroked her body into position, lingering on her breasts and between her legs.\n\nCloser to hand, Trish lay back on a weight bench, seemingly unaware of the way Adam's penis nearly brushed her face as he checked the weights on the bar, or the lustful stare of the trainer who was leaning forward to study the swell of her breasts at close range. A large drop of precum leaked from the tip of his cock to her thigh, unnoticed by either of them.\n\nBeyond unnerved, Grace realized she was alone; Jeni was doing arm curls. The redhead looked longingly in the direction of the locker room, but several of the trainers were watching her and the last thing she wanted at this point was to be alone with them. She started her strength circuit, trying to vary her usual routine in ways that minimized her exposure, and did her best to ignore the lecherous stares of the onlookers.\n\nDespite her shaky nerves, the exercise soothed Grace as it usually did, and there was the usual light conversation with the other students - when they were using equipment behind her and Grace couldn't see them, it was easy to pretend everything was normal.\n\nWell, except when Jillian boasted about her tattoo that *nobody* except her boyfriend was ever going to see.The small rose centered on her bare mons was clearly visible, even through the load of semen covering it. Grace had the presence of mind to say nothing, even as her friends made fanciful guesses about what it might be.\n\nThe heavy grunting from the weight bench gave Grace an excuse to not look at the heavy-set man who was fisting himself and clearly waiting for her to get off the upper arm apparatus. He'd just suggested she work on her core flexibility, and bending over in front of him was the last thing she wanted to do at the moment.\n\nJeni was on the bench, but she wasn't the person making the noise. Grace's friend lay on her back, spread-eagled, a look of concentration on her face as her hands worked the cocks of two trainers standing to either side of her. Grace had seen that look any number of times, when Jeni was working on many quick repetitions of light lifts. In fact, that was one of the exercises in Grace's routine too, a fact that didn't bear thinking about.\n\nThe noise was coming from the third trainer, the one who was fucking Jeni with wild abandon. He huffed and puffed with exertion, but not so loudly Grace couldn't hear the liquid sounds of his cock churning in the brunette's wet cunt. One of the men getting a handjob suddenly sucked in his breath, and an instant later both of them were spilling their spunk on Jeni's face and tits.\n\nShe made no reaction except to blow out her breath and stretch her arms to the side, but the trainer fucking her increased his speed and then thrust solidly into her hard enough to make the bench tremble. He gasped and then withdrew, jism trailing from his cock, and jacked a few last globs onto her tummy. \"Good job, Jeni,\" he sighed, eliciting a smile of satisfaction from the girl.\n\nSudden drops of moist warmth spattered the small of Grace's back and she suddenly turned around, just in time to get a last spurt of semen across her arm and the side of a breast. The trainer behind Grace looked at her with narrowed eyes.\n\n\"Um...\" She could see the suspicion growing in his mind. \"Did you say something?\" Grace fought to ignore the disgusting feel of his sperm leaking down her breast and ass. She stood up to face him and arched her back, emphasizing the curve of her breasts.\n\n\"You should work on flexibility,\" the man grunted. \"And watch your intensity,\" he added. \"You slowed down a lot on that last set.\"\n\n\"Sorry, Coach,\" Grace apologized. \"Just a little tired today, I guess.\" For good measure, she turned around and gave him an eyeful as she bent over to retrieve her hand towel from the floor and reflexively wiped down the seat of the machine. The towel blurred out of existence, leaving the palm of her hand wet; the coed realized she'd been leaking more than just sweat.\n\nJeni bounded over, breaking Grace's train of thought. \"A new personal best! Do my arms look better to you?\" The brunette curled one arm, offering the muscle for inspection, and absentmindedly wiped a string of sticky fluid from her forehead with the other.\n\n\"Wow,\" Grace replied, glad to see her trainer finally turn and walk away. \"You really killed it today, Jeni.\"\n\n\"I know! I think I just got in the groove. Sometimes it feels like it's even better than sex!\" Jeni laughed at her own joke, not really paying attention to Grace's wan smile. \"I bet I beat you in laps today, too!\"\n\n\"Not happening,\" Grace retorted without even thinking. \"Come on; let's shower.\" She was desperate to wash the semen off her body, and Jeni looked just unspeakable.\n\nStill, it was hard not to watch the rolling asses of the others ahead of her as they walked quickly towards the locker rooms. Grace was firmly of the hetero persuasion, but there was something about those displayed crevices that kept tugging at her eyes. Resolutely she pulled her focus away and turned to look at Jeni, who was smearing semen all over her body as they walked. \"God! What are you doing?\"\n\nJeni looked confused. \"What? Towelling off? I can't help it if I sweated a lot today.\" A trace of concern colored her expression. \"I don't stink, do I? That guy on the weight bench was so cute - I don't want him to think I'm a pig or anything!\"\n\nGrace couldn't help giggling. \"You do *not* smell! Or at least, not any more than the rest of us.\" It wasn't until she held open the door for her friend that Grace realized her hands were sticky; a quick self-appraisal revealed she'd unconsciously redistributed the coach's load evenly across her buns, tummy and breasts. \"Oh, fuck!\"\n\nThe redhead made a beeline for the shower stalls, ignoring Jeni's quizzical expression. Relieved of the necessity to remove any clothing, she quickly was under the spray, scrubbing herself clean extra vigorously. Grace's hand shied away from the nub between her legs, which felt - not aroused, exactly, but... awake.\n\nGrace didn't quite know what to do while she stood in front of her nearly-empty locker and watched Jeni go through the motions of pulling on a non-existent swimsuit. It would have been ridiculous if every other girl in the room hadn't been doing exactly the same thing. She finally pulled on her skullcap and began tucking errant locks under it, all the while wondering if she had lost her mind or if even the cap was part of her imagination.\n\n\"Come on, ladies! Save the socializing for later!\" Coach Joan strolled through the locker room, urging the swimmers towards the exit. She was nude too, the glint of her whistle barely visible from where it nestled between swollen mammaries capped by erect nipples.\n\nThere'd always been rumors, based more on stereotypical humor than any actual facts, that Coach Joan was a dyke. Certainly there was no sign the woman realized that she, and everybody else, was naked. But the redhead knew it, and the way the coach's eyes slid across the trim bodies before her gave Grace chills.\n\nA half-formed plan to beg off the rest of the afternoon due to illness fizzled as quickly as Grace's clothing had. She abruptly snatched her goggles from the now-empty locker and joined the stream of bodies heading for the pool, trusting for safety in numbers.\n\nOf course, it meant they were rejoining the boys. Their swimsuits had never looked as large to Grace as they did now that they were gone, exposing hairless sacks and erect organs to her sidelong glances.\n\nGrace gulped and jumped quickly into her usual lane, rinsing her goggles before pulling them into position. They didn't change the view, but it let her get started on her laps. After the first length, she settled into her rhythm and was able to push away the real world and just focus on the flex of her muscles and the mechanics of her breathing. It was easy to forget she was skinnydipping.\n\nShe swam right into the obstruction before she realized it was there. \"Oh!\" Grace panted, her face flaming at the realization the object she'd rammed was a he rather than an it. \"I'm so sorry - I didn't see you!\" Just to make things worse, it was Wade Ferrari, the handsomest, dreamiest, most attractive stud on the swim team.\n\n\"Obviously,\" the boy grinned, making her want to kick herself for saying something so lame. \"Coach has been trying to get your attention for a lap and half - we're done for the day!\"\n\nGrace glanced in the direction of Wade's nod and accidentally inhaled some water, coughing it back up practically into his face.",
        "Coach Rod stood on the edge of the pool, looking down at them with a pleased expression, and sporting the largest cock Grace had ever seen in her life. It would have taken her breath away, if the pool water hadn't already seen to that. \"Great workout, Lemaire! If you keep this up, you'll be outswimming Ferrari!\"\n\nTorn between embarrassment and pleasure, Grace looked shyly back at Wade. She'd never be in his league, and she knew it. Worse, they were treading water right in front of each other; her boobs were practically in his face, and Grace *knew* if she just reached out, his stiff cock would be in her grasp. She'd dreamed about that cock, but not this way.\n\nBlushing furiously, Grace rolled on her side and scissored her legs to propel herself towards the ladder; Wade kept pace effortlessly. \"After you,\" she offered on reaching the side of the pool. It was perfectly normal to offer the senior swimmer the ladder first, and while she wouldn't go out of her way to look, if he just happened to climb out in front of her, well...\n\n\"Oh please; ladies first,\" Wade retorted with a grin that made Grace's knees feel weak.\n\n\"Quit pussyfooting around, you two,\" Coach Rod chuckled. \"Some of us want to eat, and I can't go until everybody's out of the pool.\"\n\nGrace was halfway out of the water on reflex, and then climbed slowly out, emphasizing each step with just the slightest roll of her hips. She was just as athletic as the other swimmers, and Wade had to be getting an eyeful; plus, her perky but too-small breasts were pointed away from him. Feeling breathless, and knowing there was more than just water leaking out of her, Grace pulled off her cap and shook out her hair, letting it fall forward and cover her boobs.\n\nShe watched Wade bounce up the ladder, his rigid penis swaying with every step and looking as delicious as she'd hoped. It looked long, with no hair to shroud its root; nothing like Coach Rod's monster, but just the right size. Grace pulled her eyes up and realized Wade was watching her. Aghast, she whirled away from him and started walking rapidly towards the end of the dwindling shower line.\n\nWet footsteps rapidly overtook her and then slowed to keep pace. \"Hey, you really kicked ass today, Grace,\" Wade complemented her. Even the sound of his voice made her wet. \"I like how you take this so seriously. I know Coach does, too.\"\n\nStartled, she looked at him. \"We're all serious - otherwise we wouldn't be here. And I'm hardly in your class, Wade - I'm still just a sophomore.\"\n\n\"You're in a class all by yourself,\" he muttered, and then elaborated. \"I mean, you're pushing yourself. You've gotten a lot better since last year. And nobody else did an extra 500 meters - not even me. I think Coach has his eye on you.\"\n\n\"Thanks,\" Grace replied. \"That means a lot, coming from you.\" She knew she'd worked hard, but it was unsettling to think they'd noticed her with so many other good swimmers around. The redhead stepped under the spray, rotating to let the cool shower wash the chlorine and some of the heat from her body.\n\nIt left her nipples stiff, but Grace ignored them and tried to maintain a casual air as she stepped aside for Wade. He moved into the shower, taking longer than she had. When he turned off the water stepped out, his erection had lost some of its urgency and his scrotum had tightened to a compact sack Grace longed to hold in her hands.\n\nWith a casual look at her, Wade reached to the empty shelf Grace knew was supposed to contain towels and closed on thin air. When he started wiping his empty hands across his skin, Grace jumped and pretended to grab a towel too.\n\nTouching herself in front of him was almost more than the redhead could bear. Turning slightly to block Wade's view, Grace dared a quick touch of her slit, only to find herself so hot and needy she had to stop immediately. Breathlessly, she made a production of wadding her imaginary towel and tossing it into the empty hamper.\n\nWade followed suit, his erection red and trembling. \"Hey, wanna sit together at dinner?\"\n\n\"No, I sit with Jeni,\" Grace blurted, and fled. It was a stupid thing to say and she knew it, but her self-control was frayed almost to breaking and she didn't trust herself - or the situation in which she found herself.\n\nGrace's room, when she reached it, was lacking in both clothing and roommate, although it was the latter that concerned her most at the moment. \"I sit with Jeni!\" she cursed herself in a singsong voice, and threw herself backwards on her bed. \"Could I say *anything* more stupid!\"\n\nThe redhead touched herself again, and looked at the closed door. With an abrupt exhalation, she let her finger slide between her slick folds. A fingertip found her clit already swollen, and moved deeper; she wished the digit was Wade's. Why couldn't she be sexier?\n\nGrace replayed their recent encounter in her mind, her questing fingers accenting the dialog as it should have unfolded. \"Can you get my back for me, Wade?\" \"Sure, Grace.\" His strong hands trailed down her back while she pulled on her nipples, teasing them to their maximum erection, and then turned to bring them into his grasp.\n\nWade slid his hands roughly down her flanks and pulled her against him. Grace opened her mouth in a ragged sigh at the feel of his hot erection pressing against her stomach, trapped between them. The sensation of his pecs rubbing against her nipples made her pant. \"I want to fuck you so bad,\" he husked. \"Oh fuck, Grace, you are so hot! Let me look at you.\"\n\nHe kissed her, and then pushed her firmly away, ignoring her mews of protest, until Grace was sitting on her bed. Precum leaked from the tip of his throbbing meat, and the redhead knew it was for her. Slowly, teasingly, she spread her knees wide until they reached the mattress, with her heels nestled against her butt.\n\n\"You make me so wet,\" Grace moaned, pulling herself open and displaying her glistening folds to Wade. She stabbed two fingers inside herself, listening to the liquid noises they made and watching his cock jerk as their heated gazes locked on each other. \"I feel like such a slut,\" she admitted, and continued, \"but I want you inside me!\"\n\nWade stepped closer, his cock harder than ever, and Grace just knew he needed her as much as she wanted him. \"Grace--\"\n\n\"Are you sleeping?\" Jeni asked, standing in the doorway.\n\nGrace's eyes flew open and she rolled quickly onto her side, pulling her hands free and crossing her arms over her breasts. Mortified, the redhead couldn't bring herself to speak. There was no way Jeni could have missing seeing her masturbating!\n\nExcept apparently, somehow, she had. \"Sorry about waking you,\" the brunette apologized, walking over to her own bed and plopping down on it as if nothing were wrong. \"I wouldn't mind a nap, myself. Today was intense, huh?\"\n\n\"Um, yeah,\" Grace cautiously replied, sitting up after she saw Jeni pick up an old *Cosmopolitan*. Grace's inner thighs were slick and she'd left a wet spot on the bed, but apparently her friend hadn't noticed anything! Okay, Jeni hadn't seemed to notice she'd gotten a royal fucking earlier that afternoon either, but still, it was spooky.\n\nGrace was still on edge, robbed of her orgasm, and her body was nearly vibrating with suppressed desire. She rolled to her feet and walked over to the dresser they shared; Jeni's eyes rose above the open magazine. \"What are you going to wear to dinner?\"\n\nJeni shrugged. \"Just the usual. Not like there's anything to get dressed up for, right?\"\n\n\"Not really,\" Grace answered, quickly checking each of the drawers to confirm all of them really were empty. Before she completely lost her nerve, the redhead turned to face her roommate, leaning against the dresser, and slipped a finger back into her dripping pussy. \"You don't think I look fat, do you?\"\n\n\"Grace!\" The brunette abruptly dropped the magazine and sat up, making Grace's blood freeze in her veins yet again. \"You are *not* fat!\" Jeni paused, but her eyes were on Grace's face, not her oh-so-inappropriately-engaged hand. \"This isn't about Wade, is it?\"\n\nIt was so about Wade! Well, not him so much as everybody. Well, mostly him. Grace absently chewed her lip and gently stroked her aching clit, thinking of how much better his cock would feel. She hadn't intended to say anything, but Grace couldn't restraint a soft gasp. \"Oh!\"\n\n\"No, my ass!\" Jeni exhalted, apparently misunderstanding. \"I saw you guys talking at the showers. Did he hit on you?\" Jeni's expression turned sly, and her voice dropped. \"I hear he has a nice cock.\"\n\n\"Jeni!\" Scandalized, but intrigued, Grace couldn't resist asking, \"How would you know?\" She worked herself a little harder, thinking of just exactly how nice his cock would be, but the redhead could feel Jeni's attention and the conversation pushing her orgasm out of reach.\n\n\"Are you blind?\" Jeni rolled her eyes. \"Those Speedos don't cover much; don't you check out their packages?\"\n\n\"Oh, yeah; I thought...\" Grace's voice trailed off.\n\nJeni just laughed. \"What? That I'd taken him for a test drive?\" She giggled again. \"Not that I wouldn't want to! But you know how they work us out here - I don't have any energy left for that, and neither does anybody else.\" The brunette collapsed back on the bed. \"We might as well all be priests and nuns - what a waste!\"\n\n\"You? A nun?\" Grace found the giggles contagious. The beautiful slut she'd watched service three men could never live a chaste life. She shook her head, realizing Jeni wasn't a slut. At least not consciously.\n\nGrace's mood sobered as she realized that, after nearly two summers of swim camp, this had been the first day she could remember being aroused. She wasn't a sex fiend, but Grace wasn't above a little masturbation now and again - but she hadn't used her slimline vibrator at all last year, and hadn't even packed it this summer.\n\nAnd it wasn't just her. She'd never heard even a rumor once of any of the hookups, late-night rendezvous, catfighting, or other drama that colored the rest of the year or her summers during high school.\n\nPerversely, Grace's train of thought just made her more aware of her heightened state of arousal. She eyed Jeni and thought of slinking into the bathroom or waiting until after dinner, but she was increasingly curious about the limits of the selective blindness around her. She stroked herself again. \"So, what do you know about Jillian's tattoo?\"\n\nIt wasn't hard to keep Jeni talking, and Grace spoke just enough to keep the other girl's attention from wandering away. The majority of her concentration focused on the needy pearl nestled between her spread thighs. It felt so bad to be exposing herself this way, not only showing her most private areas to Jeni, but exciting herself with increasing vigor.\n\nGrace told herself that she wasn't a slut, and that she wasn't doing anything wrong. Jeni hadn't noticed anything. And anyway, everybody jilled off, didn't they? Her eyes lost focus, making it easier to imagine it was Wade watching her, instead of Jeni.\n\nNot that she'd have the guts to do this in front of him, or any other guy. Not in a million years, not in real life. But in a fantasy? Grace's release moved closer, oh so close, almost there, and her left hand twisted and plucked a nipple. Her breasts heaved, lungs pumping like she'd just done a 50 meter sprint.\n\nOh God, just a little more and she'd cum like a slut right in front of Jeni, not really a slut but needing to cum so bad and her fingers were soaked, sliding in and out of her the same way Wade's cock would and fuck it would feel good for him to fill her up, but his cock couldn't tickle her clit the way her fingers could - Grace moaned helplessly - but a tongue could, a tongue could get her off, lick her over that precipice beneath her feet, tease the nectar that was leaking from her body.\n\nGrace's knees gave way and she sagged to the floor. Her knees splayed, the way they would if they were trapping that tongue inside her - not for long, not for much longer now, oh G-g-g-god she was so close and she was panting, and Wade could just push his cock between her lips and she'd have to take him, have to swallow - uh uh uh - his juice, just like the girl beneath her, the girl whose lips had fastened about her nubbin and were sucking it against a worming tongue and fuck oh fuck oh fuck she was falling over the edge, like Wade's jism was falling on their writhing bodies as he came at the sight of Coach Rod feeding his monster into Grace's mouth and it would split her and his sweet spunk was already spilling down her chin but she couldn't resist it and he was just using her like the slu-u-u-ut she...\n\nThe redhead bucked and spasmed against the base of the dresser, riding her fingers and fractured thoughts to the best solo orgasm of her life. What the fuck? Grace wondered, floating on endorphins but confused by the unexpected turn of her thoughts.\n\n\"Are you coming down with a cold?\" asked Jeni.\n\nGrace had meant to make some nocturnal explorations, but woke to the sound of the first breakfast bell instead. The previous day flooded into her consciousness, but had it really happened or was it merely a dream? She had her answer when Jeni stumbled out the door to visit the bathroom with nothing more than her toothbrush.\n\nThe redhead collected her own toiletries and followed, feeling a little more confident. It remained unsettling to be traipsing around naked like this, but she'd brought herself off in a raging orgasm right in front of Jeni the previous afternoon, and compared to that, a little casual bathroom nudity was nothing.\n\n\"Hey, Grace, can I borrow some of your cream? Mine ran out.\"\n\n\"Sure, Trish, no problem,\" Grace replied, absently handing the shaving cream to her neighbor. She paused, razor in hand, as she realized her pubis was half covered with cream, the bare swaths of skin showing where she'd already shaved. A sideways glance at Trish revealed the other girl was doing the same thing.\n\nGrace finished the job and moved on to her armpits after getting her shaving cream back, all the while musing on the bizarre reality she found herself trapped in. Did people always see clothing or just what they expected to see? She looked at Trish again. \"Um, can you take a look and see if I missed anything?\"\n\n\"Just a sec,\" Trish replied, finishing herself with the same finicky precision she brought to everything she did. She set her razor aside and slid off the bench to kneel in front of Grace, brushing her dirty blonde hair back behind an ear. She peered closely at Grace's slit, which became almost instantly moist.\n\nThe impulse to pull Trish's face into her crotch took Grace by surprise. She fought to remain still, hoping Trish wouldn't notice her arousal. Visions of her masturbatory fantasies of the previous day flashed before her eyes.\n\n\"Okay, turn around,\" Trish chirped, tugging gently at one of Grace's legs.\n\nGrace wasn't expecting that, but she couldn't refuse after asking. Soft fingers spread her cheeks, and she felt Trish's breath on her wet skin.\n\n\"You missed a few here. Can you hold your cheeks open? I don't want to cut you.\" The blonde's voice was calm, almost analytical.\n\nThe redhead felt anything but. She spread her buns, trying to keep her hands from trembling too much. The feel of Trish dabbing a bit of cream in her crack nearly brought Grace to her knees. Standing this way felt unnatural, and the petite fingers weren't right. They should be thick and strong, pushing lube into her, preparing her to...\n\n\"All done,\" Trish said, breaking that train of thought. Grace hadn't even felt the razor. \"Can you return the favor?\"\n\n\"Sure,\" Grace replied shakily, dropping quickly to her knees so she wouldn't have to meet Trish's eyes. Instead, she looked at the blonde's perfectly bare pussy. The skin was smooth, and probably deliciously soft. Was Trish aroused too? It was hard to say; maybe there was a glint of moisture, but she'd have to lean closer to smell anything. \"Your front is fine,\" the redhead husked, leaning back to let the other girl turn around.\n\nNow it was Grace's turn to grasp and gently spread the mounds of flesh before her. They were buttery soft but overlaid on firm muscle that resisted her grip for a moment; Trish relaxed and arched her back, offering herself for inspection.\n\nGrace shifted slightly, spreading her legs to find a more comfortable position, and leaned closer. The bottom of Trish's labia were just visible, revealing a telltale trace of dew. But it was the pink rosebud a little higher that captured Grace's attention. It was clean and tight, but somehow Grace knew that it could expand to admit intruders. The same way she somehow knew she could spear her tongue into it.\n\nThe hint of musk was faint, but it drew Grace in, promising an earthy taste she couldn't quite place. A trickle of moisture leaked down Grace's inner thigh. Being here felt so right, but there was something missing. Something she could grasp and fondle, or suck gently between her lips. Grace swayed further forward, absently seeking, but found only that petite rose.\n\nSpell broken, Grace gasped and swayed back. What was she thinking! Kissing somebody's ass? A *girl's* ass? \"You're fine,\" she managed to say, and continued kneeling as Trish gave her a quick nod of thanks and walked off. Grace was so rattled she couldn't even think if she'd remembered to look for stray hairs.\n\nGrace forced herself to choke down breakfast, even though she wasn't hungry. Well, not for food, anyway. Her encounter with Trish had left the redhead unsettled but aroused, and she hadn't had time to do anything about it.\n\nThe novelty of being naked in public was beginning to wear off, but the opportunity for serious boy-watching hadn't. Grace poked at her egg-white omelet and listened to Jeni chattering beside her, all the while observing the boys entering and leaving the dining room.\n\nOther than the fact they were all uniformly erect and clean-shaven, there was an amazing variety on display. Grace's off hand slipped beneath the table and she began caressing herself, imagining what each cock would feel like inside her. She stroked herself harder at the sight of Wade among the last wave of late arrivals.\n\nHe briefly made eye contact with her, but frowned slightly before sitting at another table, his back to Grace.\n\n\"I thought you two hit it off yesterday,\" Jeni commented, not having missed the interplay.\n\nGrace wondered if the entire room had noticed her shame; it was worse than physical nudity. \"I think I offended him. God, I am such a screw-up!\" It was enough to quench her arousal, at least for the moment.\n\n\"You are not a screw-up. You only talked to him for like 5 minutes, Grace. Did you let him know you like him?\"\n\n\"He asked to sit with me at dinner, and I said I was sitting with you,\" Grace responded in a small voice.\n\n\"I take it back,\" moaned Jeni, theatrically smacking herself in the forehead. \"You *are* a screw-up. What are you guys, still in the seventh grade? It's a big table - we could all sit together.\" The brunette narrowed her eyes and suggestively added, \"*if* you feel like you need a chaperone...\"\n\n\"No! I mean... I don't know what I mean.\" Grace growled with frustration. \"I just turn into such an idiot when I'm around Wade. The right words don't come out - I'm sure he hates me now! He'll probably never talk to me again.\"\n\nJeni shook her head. \"I seriously doubt he hates you. Look - why not go over there now? Just say 'hi' and ask if that invitation is still open for tonight. It's no biggie.\" She gently elbowed Grace. \"If he's really interested, don't give one of the other girls a chance to grab his... *attention*.\" The brunette gave Grace a sly grin as she motioned suggestively with one hand.\n\n\"Jeni!\" squealed Grace, attracting momentary attention from their neighbors. \"OMG, it's not like that at all!\" She blushed, knowing it was exactly like that, even if she'd rather die than admit it. \"God, you're crude, girl!\"",
        "Besides, Grace thought, a hand job would be such a waste. She wanted - no, needed - a serious fucking. Hell, she could probably walk right over to Wade now, push the table back from his chair, and impale herself on his rod right there and nobody would notice. She could bounce up and down on him, her boobs in his face, and have a screaming orgasm, and nobody would say a thing.\n\nWould Wade notice, though? It was one thing to overlook the absence of clothing, but he wouldn't actually be able to orgasm, to empty his nuts into her creaming pussy while she screamed with delight, and just think he'd coughed or something, would he? And it wasn't like people didn't notice others at all - they just seemed to think normal things were happening.\n\nWho would think it was normal, even wearing her usual camp shorts and tee, if Grace walked up and ground herself all over Wade like some slut giving a lap dance? Maybe, Grace thought, furtively rubbing her clit again, he'd think she was just easy and lead her out the back door before standing her up against the faux log siding and giving her the wood she so obviously wanted. Her butt would be rubbed raw as she bounced on Wade's shaft with her legs wrapped around him.\n\nGrace shifted on her chair, aware of the small puddle she was creating on the plastic seat. Maybe if she made a move on Wade, the incongruity would snap him out of whatever it was that fuzzed everybody else's senses. He'd *know* that she was a cock-hungry slut willing to fuck him right there in the middle of everything! Wade would drop her right there on the table and - no, he'd flip her over and start doing her doggy style. Grace could practically feel the trays digging into her tits as every thrust slammed her against the wobbly table, burying that magnificent tool deeper in her creaming cunt...\n\n\"Hello? Earth to Grace!\" Jeni was shaking her shoulder. \"Quit playing with your food and go talk to him, already!\"\n\nGrace obediently stood up, and then almost sat right back down. She could just see herself saying something stupid again, and this time it would be in public, and everybody would think she was an idiot. Jeni pushed impatiently at her, and the redhead shied away from the hand on her bare ass. Okay, she could do this!\n\nGeorge looked up as she approached the table he was sharing with Wade, but kept talking about turning technique. Grace hovered uncertainly, just able to glimpse the tip of Wade's erection over his shoulder. She leaned in a little further for a better view, making George's eyebrows rise.\n\nWade finally sensed something and turned to follow George's sightline; the unexpected rotation was enough to make his shoulder brush Grace's breast, and both of them started violently.\n\n\"Fuck!\" Wade yelped, inadvertently tumbling the bowl of oatmeal in front of him into his lap. He shot to his feet with a louder yell and frantically began trying to scrape the sticky mess from his stomach, penis, and upper thighs.\n\nGrace froze for a moment, appalled, and then reached around to help remove the hot sludge from Wade's sensitive organ. \"Oh no! I'm so sorry!\"\n\nHe brusquely batted her hand aside and jumped back, nearly falling over the table and sending water glasses tumbling. \"*Don't touch me!* Just don't touch me! I need to - to change my clothes!\" Wade rushed out of the cafeteria, leaving Grace standing in a circle of silence, surrounded by wide eyes and open mouths.\n\nA moment later, she bolted in the opposite direction, through the back door she'd fantasized about, not caring if she left a smear of oatmeal on the knob. Grace tensed when the door opened again behind her, but relaxed a little at the sight of Jeni.\n\n\"You have to admit, that was pretty spectacular,\" the brunette smirked. \"For what it's worth, everybody's talking about Wade, not you.\"\n\nThat made Grace feel a little better. \"I don't know what happened; I didn't mean to startle him like that.\" But still, things hadn't turned out well at all. \"You can't believe he's going to want to be around me after that.\"\n\nJeni made a noncommittal sound and changed the subject. \"But what were you looking at? I thought you were going to talk to him, not hover over his shoulder.\"\n\nGrace hesitated. She couldn't say, \"I was crushing on his erection,\" even if it was the truth. \"Jeni, what am I wearing?\"\n\nThe brunette looked at her cautiously, obviously puzzled by the question. \"A T-shirt and shorts, like usual. Why?\"\n\n\"How about now?\" Grace wiped her hand clean on her breast and stomach, still watching Jeni.\n\n\"A dirty T-shirt?\" Her friend watched the redhead cross her arms until her hands brushed opposite hips, and then lift them slowly along her body and over her head, shaking her hair. \"What was that?\"\n\n\"I took off my shirt,\" announced Grace, pushing the point. \"See?\"\n\n\"No, you're losing your mind,\" Jeni retorted, smiling at the apparent joke even if she didn't understand it. \"It's still right there, with the oatmeal.\" She reached out and poked Grace's tit.\n\n\"Damnit,\" Grace growled. Jeni was still seeing what she expected to see, and that wasn't her friend going topless outdoors, even if they were in a fairly isolated area. \"How about this?\" She looked down, trying to pretend she was alone, and concentrated.\n\nIt wouldn't have worked at all if not for the fact that the wall of the dining room, the dumpster, and several evergreens screened the back door from nearly every angle, and that Grace had been too distracted to follow her normal routine that morning. The redhead told herself Jeni wasn't there, forced herself to relax, and was rewarded with a trickle of urine that quickly became a strong rush. She looked up, feeling triumphant, and met Jeni's shocked gaze.\n\n\"OMG, Grace, that is really fucked up! I can't believe you're peeing yourself in front of me!\"\n\nGrace could barely believe it herself, actually. It was hard to say if being naked instead of wetting her shorts made it worse or better. Apparently she had fewer inhibitions than she'd thought. Her bladder finished emptying itself, and she bounced on the balls of her feet. \"Well?\"\n\n\"I should be asking you that,\" Jeni quipped, her usual sense of humor noticeably muted. \"Are you well? What was that for? Your shorts are soaked!\"\n\n\"No they're not,\" retorted Grace, \"because I'm not wearing any shorts - and neither are you. Here; feel!\" She grabbed Jeni's wrist and started pulling it towards her crotch, but the other girl yanked it free.\n\n\"Oh, no!\" yelped the brunette, looking spooked. \"I'm not into this weird shit! You can just leave me out of your kinky games, okay?\" Jeni's eyes darted back and forth, charting possible escape routes.\n\n\"Okay, look, no games,\" Grace offered, holding up her hands and taking a small step back to defuse the tension. \"Now, you say I just wet my shorts. Would you say it's pretty noticeable?\"\n\nJeni snorted. \"Your crotch is soaked. Yeah, I'd say so.\"\n\nGrace nodded. \"So, I'll bet you I can walk back through the dining hall and absolutely nobody will say a word about it.\"\n\n\"Yeah, right,\" scoffed the brunette. \"You're gonna sneak through the kitchen, or pull your shirt down over it, or hide it with a tray or something, right?\"\n\n\"Absolutely not. I won't carry anything, and you can arrange my shirt however you like. I'll even stop and talk to people. My only condition is that you can't point it out to anybody - they have to notice it for themselves.\"\n\n\"And what's the bet?\" Jeni asked.\n\nGrace could see her friend thought it was a sucker's wager. The reality was that Grace had already thought up something she thought Jeni would jump at. She allowed a small smile to show on her face. \"The loser has to jump off the 5 meter platform during morning swim, naked.\"\n\n\"No way!\" squealed Jeni, bending over and trying to suppress a laugh. \"No way,\" she repeated, \"you would never do that in a million years!\"\n\n\"It doesn't matter, because I'm not going to be the one jumping,\" laughed Grace. \"You are.\"\n\n\"You are so full of it! How do I know you're not going to back out after you lose?\"\n\n\"Because I say so. Have I ever lied to you?\"\n\n\"Besides when you told me just now you didn't really piss your pants because you were naked?\" Jeni's protest was half-hearted. \"Aren't you worried about *me* chickening out?\"\n\nGrace laughed. \"No, because I know you're the kind of crazy bitch who would do it.\"\n\n\"Damn straight!\" Jeni agreed. \"Can you imagine how Coach's eyes are gonna bug out when he sees you? Come on; let's get going before you dry out.\"\n\nThe two women pushed through the door back into the dining hall. It was funny, Grace reflected, but she actually was more relaxed than ever; walking nude past the other swimmers was easy when her only worry was the nonexistent wet spot on the shorts she wasn't even wearing.\n\nJeni showed increasing signs of frustration as they made their way past one person after another. Grace would stop to say \"hello\" or duck good-natured queries about what had happened with Wade, but nobody commented on her appearance.\n\n\"I love your rose,\" Grace confided to Jillian, earning a startled look from her and a puzzled expression from Jeni. Another few steps and she was out the door, home free.\n\n\"I don't know how you did that,\" muttered Jeni. \"And what did you say to Jill?\"\n\n\"Nothing,\" Grace airily replied. \"And I already told you how I did it. Now, if you'll excuse me, I have to get ready for swim.\" She started out for their cabin.\n\n\"If you're naked, why do you need your suit?\" Jeni called from behind her.\n\n\"I don't - but I still want to wash off the oatmeal!\"\n\nCoach Rod had them working on starts that morning. One set of swimmers would mount the blocks, wait for the buzzer, and then sprint to the 25-meter mark. They'd continue on to the end and exit the pool to receive critiques while the next wave of swimmers repeated the process.\n\nAs usual, the bleachers fronting the pool were packed with spectators watching the students with careful eyes and furious note-taking. Grace would have felt more comfortable if she hadn't been promoted into the lead group with Wade. It was embarrassing to be considered on his level, even without her earlier breakfast fiasco.\n\nBeside her, Wade stepped onto the block at lane 4 and faced the crowd. \"Wade Ferrari,\" he announced, before turning back to face down the lane. The coaches always had the swimmers identify themselves so there'd be no confusion during the reviews.\n\n\"Grace Lemaire,\" she shouted, waving to the audience. It was sort of hot, standing there so totally exposed, but with nobody knowing it. She took another peek at Wade's erection, which didn't seem to have suffered too much from its unplanned oatmeal scrub. If only he hadn't been so abrupt! There were so many ways she could have cleansed and soothed his beautiful penis, and so pleasurably, too...\n\n\"Wake up, Lemaire!\" barked Coach Rod. \"Did we keep you up too late last night?\" Sniggers sounded around her. \"Okay, people, remember, swim hard to the halfway mark - no slacking! Swimmers, take your marks...\"\n\nThe tone sounded and Grace convulsed, arrowing into the water and dolphin kicking her way down the lane and slowly towards the surface. Ahead of her, on her left, Wade churned through the pool, his cock extending below him like a miniature rudder. Suddenly he stopped kicking, and Grace watched the 25 meter marker glide past beneath her. She put in two more strokes before rolling onto her back and kicking lazily for the wall.\n\n\"Hey, I'm really sorry about breakfast,\" Grace told Wade as they hung on the wall and watched the second heat of swimmers take their places on the blocks.\n\n\"It's okay - I just over-reacted,\" Wade replied tersely, and then pulled himself out of the pool.\n\nGrace scrambled to follow him, but he was already walking back down the side of the pool. She followed, watching his muscular ass, but spared a wave for Jeni as the brunette went past her in the opposite direction. Grace thought about trying to talk to Wade again, but she saw Coach Rod looking at her, and guiltily realized she was supposed to be thinking about her technique instead.\n\nSoon enough, she was back up on her block again, announcing her name and trying to ignore the fact she was naked. Grace had an excellent start and managed to stay nearly even with Wade out to the halfway mark; the two of them extended their unofficial competition until it was clear he was pulling away from her.\n\n\"You were on fire, Grace,\" Wade complemented her at the wall. \"I had to work for that one.\"\n\n\"I got a lucky start,\" she demurred, pausing as she noticed the block in lane 2 where Jeni should have been standing was empty.\n\n\"Hey, Grace!\" Jeni shouted from the top of the 5 meter platform. The brunette waved rapidly, spread her arms wide, and quickly performed a fairly credible dive, although she went over a little too far and her legs kicked up a fair amount of water when she went in.\n\nGrace realized instantly what had to be happening. \"Wade, do me a favor!\" she asked.\n\nHe turned from where he'd been watching Jeni. \"What is it?\"\n\n\"I know this sounds weird, but pretend Jeni is naked when she gets out of the pool!\"\n\n\"What?\" he repeated, obviously confused.\n\n\"Just pretend she's skinny-dipping! Sssssh!\" Grace turned away from him and watched Jeni break the surface and swim over to join them.\n\n\"How was that?\" Jeni crowed, eyes flashing with excitement and nerves.\n\nGrace laughed. \"I don't think you're ready to join the diving team.\" She pulled herself out of the water and offered a hand to Jeni.\n\n\"You didn't notice anything else?\" the brunette asked, looking about. The other members of Grace's heat were walking away, and the next wave of swimmers hadn't reached them yet. Wade didn't seem to be paying much attention, so she reluctantly popped out of the water to stand next to Grace.\n\n\"Did you lose your swimsuit somewhere?\" Wade asked unexpectedly, from where he still floated in the water alongside the wall. He eyed Jeni with evident appreciation.\n\n\"*What?!*\" With a strangled scream, Jeni contorted herself in a futile attempt to conceal her body; she succeeded only in drawing the attention of others. The brunette hastily jumped back into the pool and hugged the wall while she glared at her friend. \"You said nobody would notice!\"\n\nGrace, doubled over with laughter, couldn't find the breath to respond. She caught sight of Jeni's expression and laughed harder.\n\nAfter watching their somewhat mystifying byplay, Wade moved slightly closer to Jeni. \"She told me to pretend you were naked,\" he confessed, a hint of a twinkle in his eyes.\n\nThe brunette's mouth opened in outraged realization. \"You... You two deserve each other!\" She pushed Wade's head under water, using him to leverage herself out of the pool, and toppled the off-balance redhead back in. \"I'm gonna get you for that, bitch!\" The threat was somewhat undermined by the laugh that followed it.\n\n\"What was that all about?\" Wade asked, looking from where Jeni was doing something behind the base of the diving platform back to Grace.\n\n\"I--\" Grace's mouth opened but no further words emerged. She couldn't think of anything to say that wouldn't sound crazy or stupid, or both, and the swimmers from the following heat were climbing out around them. \"It was a private joke.\"\n\n\"So I gathered,\" Wade commented, moving a little closer but making no motion to get out. \"But as a helpful participant in your private joke, don't I get to hear the punchline?\"\n\nHis intent look made Grace feel a little breathless and rattled. \"Have you ever wondered what it would be like to be naked in front of everybody?\" Her nipples were tighter than the temperature could account for, and not all of the moisture gleaming on the redhead's toned thighs was chlorinated water.\n\nA slightly pained expression crossed Wade's face and Grace silently castigated herself for blurting out such a stupid question. \"You mean, like here, now?\" he rasped, evidently humoring her.\n\n\"Yes.\" Grace bit her tongue to avoid saying anything else dumb, and sat back on her heels while her fingers nervously felt for stray tendrils of hair that might be escaping the back of her cap.\n\nWade seemed content to bob in the pool, frustrating her. \"I dunno,\" he equivocated.\n\nWhy couldn't he just climb out? Grace was dying to lay eyes on his cock again. He could just hoist his ripped body out and stand on the deck beside her - that would put his wonderful meat right about eye level. Actually, it would be right about mouth level, too.\n\nGrace wasn't really that kind of girl, especially in public like this, but if Wade put his strong hands on her head and pulled her onto his cock, well, there really wouldn't be anything she could do about it, was there? She wouldn't want to make a scene, so she'd have to relax and let him pound into her mouth until he emptied his load down her throat. The thought of swallowing didn't seem as repulsive as she'd thought, and besides then he'd...\n\n\"Why don't you just get a room?\" Jeni jibed.\n\nHer eyes flew open. Grace hadn't realized she'd closed them, or that she'd let one of her hands drop to the juncture between her thighs. Actually, the way she had her legs spread and her tits stuck out would have had her mother frowning, even if Grace *had* been wearing a swimsuit. A sudden wave of heat swept her body, but it was arousal rather than embarrassment.\n\n\"Whatever, Jeni,\" Wade said, sounding bored, and finally emerged from the water. He strode past the two girls without another look.\n\n\"When I said you should talk to him, I didn't mean to throw youself at him,\" Jeni commented after a moment of silence. \"But hey, you were talking, right? I think he likes you.\"\n\n\"I don't,\" Grace said morosely, rising slowly to her feet. Her eyes hadn't been mislead by phantom swimwear, and she'd seen the way Wade's erection had drooped when he'd gotten out. Every guy in sight was sporting a hard-on, and when she accidentally gave Wade a little show, he *lost* his? \"Am I ugly?\"\n\n\"Where do you think up this shit?\" growled Jeni. \"You are hot, and you know it! If I had a cock, I'd fuck you myself!\" She slapped Grace on the ass, apparently not feeling the bare skin beneath her palm. \"Maybe next time *you* go off the high dive naked - I can't believe nobody's said anything!\" The brunette looked around, as if daring somebody to make a comment.\n\n\"I guess they were too distracted by my hotness!\" Grace joked, feeling better. \"C'mon - we're both behind, and Coach is looking a little pissed!\"\n\nCoach Rod *was* upset - and worse, from Grace's point of view, he was disappointed. She and Jeni spent the rest of the morning doing sprints under the watchful eyes of several trainers. After the first few lengths of the pool, Grace was too tired to care who was staring at her. Her legs felt rubbery by the time the two of them were released for lunch.\n\n\"Betcha they'd notice *now*,\" Jeni giggled to Grace under the spray of the outdoor shower. She ran a finger suggestively along the top of her shoulder, where a strap would be if she actually were wearing a suit.\n\nGrace covertly eyed the group of trainers observing them and making notes. The redhead wasn't so sure, although she was surprised Jeni would even joke about it. \"Don't even think about it,\" she threatened, lightly slapping away Jeni's hand. Grace was *almost* sure Jeni wouldn't actually flash anybody, but she didn't know how to explain away the lack of reaction, and she was too enervated to try and deal with it all now, anyway.\n\nShe stole another glance at their audience, wondering what they could find to write about, and inadvertently met the eyes of one of the women looking back at her.\n\nThe woman was tall, slim, and attractive, but distinguished mostly by the fact that she was one of the few people who actually *did* seem to be clothed. Her dress looked expensive and laughably out of place at the camp, and if Grace had owned a pair of heels like that, she wouldn't have worn them near a pool or anywhere else they might possibly get wet.",
        "Technically, with the sunglasses shielding her eyes, Grace couldn't really tell where the woman was looking, but she felt sure she was being examined. The woman's expression remained neutral, but it made Grace feel uncomfortable. The redhead turned away and reached for the water valve, wishing there really were towels on the empty shelf. \"C'mon, already - I'm starving; aren't you?\"\n\n\"You know food isn't going to distract me from plotting my revenge, right?\" Jeni asked, wiping herself down with her hands.\n\n\"Yeah, do your best,\" was Grace's distracted reply. She refused to let herself look back to see if the woman was still watching.\n\nGrace was still distracted during afternoon workout. Without trying to be obvious about it, she kept an eye on her surroundings, feeling somewhat relieved the woman in the dress was absent, but equally disappointed that Wade wasn't anywhere to be seen, either. Maybe it was her divided attention, and maybe it was the lingering effect of her extra morning sprints, but the redhead dropped a weight she'd thought was safely on the bar, barely missing her unprotected foot.\n\n\"I'm okay!\" she yelped sheepishly, certain everybody in the gym suddenly was looking at her. Worse, it seemed Grace's attempts to fly under the radar of the trainers were about to come to naught. \"Oh, no! Can't you distract them?\" she whispered to Jeni, who stared knowingly at her from the other end of the bar.\n\nThe brunette's eyes glinted as she turned to the first of the approaching trainers. \"Hey, Coach! You know those flexibility drills you were showing me yesterday?\"\n\nGrace smiled her appreciation, but frowned as Jeni continued talking.\n\n\"Grace, here, was asking me about them but I'm not sure I remember them correctly - can you show her?\" She grinned wickedly at the redhead's obvious lack of enthusiasm.\n\n\"No, it's okay...\" Grace demurred, starting to back away. She twitched as if prodded at the feel of something wet sliding across her ass, and tried to move away from the man behind her.\n\n\"Nonsense,\" said the trainer facing her. He smiled at Jeni like a cat watching a mouse, and his heavy cock pulsed, emitting a drop of gleaming moisture from its tip. \"That's what we're here for! We can take the time now to run through them with you, Grace, and help Jeni review at the same time.\"\n\nMurmurs of assent greeted his common-sense suggestion. Grace wanted no part of them, but was strangely reluctant to make a scene or offend them. After all, the trainers were just there to help, weren't they? She tried to hide her lack of enthusiasm as the men herded her and Jeni away from the weight benches.\n\n\"We'll just work freestyle, so the two of you can see each other,\" a trainer explained. \"That will make it easier for you to practice by yourselves. All you really need is a clear area of floor and something to brace yourself with.\"\n\nGrace hadn't really paid any attention to the apparatus in front of her before then, but frankly it was just a vertical pole set in the floor. Jeni carelessly grabbed it with one hand and let her weight pull her around it; Grace's eyes narrowed but her train of thought was broken by the coach.\n\n\"Okay, let's get you set up,\" the man directed, gesturing to the others. \"Jeni, Grace, you just stand on opposite sides facing each other. Good!\" His voice sounded a little rougher. \"So first, we're going to stretch. Reach up, touching as high as you can without bouncing or jumping.\"\n\nThe redhead positioned her feet just wide enough to provide some stability, and then reached out to grab the pole a little above her head. Grace stuck out her tongue at Jeni, who was doing the same thing opposite her, and then started walking her hands higher on the pole.\n\n\"Closer!\" grated one of the men behind her. A meaty hand pushed suddenly on Grace's ass, forcing her unexpectedly against the pole and making her gasp in surprise. She teetered and might have fallen, but the hand remained, trapping her in place. The smooth metal was chill between Grace's breasts. \"Stretch, come on, both of you!\"\n\nGrace vacillated momentarily, caught between chagrin at being taken off guard, gratitude for the assistance, and a momentary fear someone would notice how wet she was. Then she remembered they'd see only nondescript shorts and T-shirt, and vowed Jeni wasn't going to beat her here. The redhead extended herself, as if she were in a dive, going for every last fraction of an inch and trusting the hand behind her to keep her upright.\n\n\"Good girl,\" the trainer complemented her, his voice soft beside her ear, \"but you can do more - don't forget your toes!\" His hand shifted slightly higher, to the small of her back, but then its mate caught Grace between her legs and lifted, urging her higher.\n\nShe couldn't help blushing, fighting the urge to let all of the tone go out of her legs and let herself be impaled on those fingers that were just grazing the entrance to her molten core. Instead, Grace pushed higher, straightening en pointe like a ballerina, and prayed he wouldn't think she was just sweating - God, she'd die of embarrassment!\n\n\"And hold - excellent. Relax.\" That tantalizing touch lessened in force and then retreated fractionally, urging her body to follow it.\n\nGrace realized she'd closed her eyes and opened them again, to see Jeni grinning at her. \"See? I told you this wasn't hard!\" the brunette chortled.\n\n\"A little focus, please?\" reproved the trainer who was spotting for Jeni.\n\nHer trainer spoke gruffly but without emotion, as if the exchange were beneath him. \"And again: stretch!\" His hand moved firmly upwards, fingers dipping ever so slightly between Grace's folds, before her reaction carried her body higher and momentarily free of him.\n\nShe poised, trembling with concentration, proud that she was holding position with less assistance this time, and hoped she wouldn't have to stay there too long. Almost at the point Grace feared she might collapse, the \"and relax\" released her. Her tired legs took her down a little faster than she'd intended, driving those fingers ever so slightly into her before the trainer matched her rate of descent.\n\n\"Good,\" the man acknowledged, sounding pleased. \"Now, let's continue to repeat, but without the pauses. Stretch\" - his fingers prodded her - \"and relax, three. Stretch, and four.\"\n\nBoth girls were breathing deeply, and a thin sheen of perspiration allowed Grace's body to slide easily along the pole. Her nipples felt ready to burst as she chased those fingers up and down, and once she thought she felt Jeni's nipple brushing against her own. The men surrounding them moved closer, and Grace felt her trainer shifting his hand on her back again.\n\nAt the end of the tenth repetition, Grace's dripping pussy encountered something bulbous and much larger than a finger. \"Oh!\" she gasped, feeling the head of the trainer's penis spread her lips as she came down onto her heels.\n\n\"And stretch!\" he hissed, his breath warm on the back of Grace's neck.\n\nShe pushed herself reflexively off his erection, astonished at her reaction. Somehow, with all her focus on the issue of everybody's missing clothing, Grace had let herself forget about all of the graphic sex acts she'd witnessed the previous day. She hadn't really considered they could happen to her, too - or that, maybe, they already had!\n\nPart of her wanted to grab Jeni and run from there as fast as she could, until she found somebody who could see and believe what had happened to her. Another, shameful, part wanted to squat and bury that thick cock deep inside her, where it could scratch the needy itch that left her so wet.\n\n\"...and eleven...\"\n\nBoth lost out to the obedient part. Grace reluctantly settled back onto her heels and the fleshy shaft between her thighs, and just as reluctantly resisted the temptation to sink even lower. It left her, again, with the worst of both worlds - literally fucking the man behind her, but without getting more than a tease of sensation.\n\nShe couldn't believe she was doing this! At least, Grace told herself, she wasn't a slut. How could Jeni not feel what was happening? \"Just concentrate on the rhythm,\" the redhead told herself as she stretched on her toes for the twelfth time.\n\nGrace's resolve lasted three more strokes; by eighteen, she was holding onto the shuddering pole while her trainer plowed her forcefully from behind at a double-time pace, each thrust jarring her as his groin seated itself against her ass. Across from her, Jeni continued to smile into space and move slowly up and down while the trainer behind the brunette churned his cock into her.\n\nHer orgasm, when it came, surprised Grace with its intensity and the speed of its onset. She'd been aroused for so long that her peaking excitement hadn't really registered, and the sudden release left her limp and gasping. The redhead's hands straightened and then clenched on air, but there was no risk of falling with her body crushed against the pole and her drenched pussy impaled on that big cock.\n\nShe'd barely started to regain her breath when he slammed her against the pole a final time and Grace felt his cock contracting inside her, emptying the trainer's balls into her more-than-welcoming receptacle. \"And done,\" he panted; she could almost hear the smile in his voice. \"Good job, Lemaire,\" he added, pulling out and stepping away from her.\n\n\"Thank you, Coach,\" she replied, unsure how to respond. Grace felt her face heating and looked at the floor, unable to face either him or Jeni. She could feel his jism starting to leak down the inside of her thigh. Unwillingly she raised her eyes to look at his cock, still gleaming with her moisture, and then darted a quick look at his face, which looked back at her with a knowing expression. Grace felt simultaneously degraded and liberated, and curiously breathless. Nobody outside of the circle of trainers seemed to have taken any notice of any of it.\n\n\"Perhaps you'd like to lead the next exercise, Coach Gunter?\" The trainer who'd fucked Grace looked at an older man with salt-and-pepper hair and a weathered face.\n\nGunter nodded. \"Certainly, yes. Ladies, if you will arrange yourselves in front of the pole like so?\" He casually manhandled Jeni into position about three feet from the pole, nudged her feet apart, and bent her over from the waist until her back was nearly horizontal and she was gripping the pole tightly with outstretched hands.\n\nUnder his intent gaze, Grace positioned herself the same way, blushing again when he moved her legs wider, exposing her still-dripping pussy to her audience. She knew she was going to get fucked again; almost, she was anticipating it. One of the trainers had already stepped up behind Jeni and, without pretense, thrust himself into her. Again, none of the other students seemed to be paying any attention.\n\n\"I think we will want another spotter here,\" Gunter mused. \"You! You are between sets? Good; please to come here.\"\n\nGrace looked over her shoulder and saw George trotting over, his hard dick bobbing back and forth above his hairless groin. He absently wiped a smear of what looked like semen from his cheek. \"Hey, Coach - what's up?\"\n\nShe abruptly looked away. It was one thing to be doing this in front of Jeni - she looked like such a slut; already, the first trainer was spurting his load onto her back and a second was edging closer. The others were coaches - they were *supposed* to be watching her and helping her improve. But George was just another swimmer, and one of the guys. Did she have to do this in front of him?\n\nIt was worse. \"You must hold her here,\" instructed Gunter, placing George's hands on her waist, just above her hips. \"Firmly,\" he emphasized. An erect penis - it had to be George's - scraped across Grace's ass and then inserted itself into her sloppy pussy. \"Good.\"\n\nGeorge suddenly shoved himself deeper into the redhead, making her teeth click. \"Whoops! Sorry about that; wasn't expecting it.\" He withdrew slightly, and then lunged ahead with a slight grunt.\n\n\"Wow! Can't you feel it in your hamstrings? This always leaves me feeling so loose!\" Jeni sounded both pleased and totally oblivious to the shafting she was receiving, as well as the coach furiously stroking the cock he was aiming at her face. It suddenly erupted, spewing spunk onto the brunette's cheek and hair.\n\nGrace concentrated on her slowly warming pussy, trying to rock back against George and increase the power and amplitude of his thrusts. He was curiously uncoordinated, which she found especially unrewarding following the more satisfying fuck she'd experienced just before. A third man was plowing Jeni now - a waste, in Grace's estimation, since Jeni didn't seem to be appreciating the experience at all.\n\nGeorge paused; it was almost enough to make Grace scream with frustration. He started thrusting again, but still with far less force than she needed or wanted. Grace schooled her expression when she caught sight of Gunter out of the corner of her eye; he walked to stand beside her, his penis slick and showing a glob of semen at the tip.\n\nThe trainer watched her a moment longer before gesturing to the others. \"I believe Miss Lemaire may require some additional assistance.\" Before she could react, he grabbed Grace's breast and fondled it, squeezing a sensitive nipple between two rough fingers.\n\nShe writhed, her body jolted by the sudden sensation, and then somebody else was teasing her other breast and a finger was stroking her clit. Almost immediately, Grace exploded, and she would have fallen but for the men supporting her upper body. Warm spunk jetted onto her face, and somebody took advantage of her limp arms to stand in front of her and force his cock into her mouth.\n\nThey teased her relentlessly, heating Grace's body with their knowing touches, and then somebody replaced George behind her and the redhead climaxed again as the men used her like a rag fuckdoll. The penis filling her mouth emptied itself down her throat and retreated, only to be replaced with George's slim cock.\n\nA corner of Grace's mind noted the distinctive mole on his hairless groin as she sucked his stiff erection between her lips and tasted herself on him. More people must have joined the crowd, because Grace felt warm liquid spattering on her back and ass even as they coaxed another orgasm from her and a fresh load of semen overflowed her saturated pussy.\n\nThe next intruder quenched itself in her well-used snatch before withdrawing and pressing against her anus. Grace would have tensed if she hadn't been in total sensory overload, but her rosebud opened to accept the rigid weapon and she felt a perverse sense of satisfaction. A tongue began lapping at her clit, and the redhead bucked helplessly again.\n\nGrace's universe contracted; there was no exercise room, no onlookers - not even any men. Only the unchecked desire of her wanton body existed, along with the fleshy appendages that teased and penetrated her.\n\nOf them all, the penis in her mouth seemed curiously resistant to the redhead's charms. It remained unyieldingly rigid and teased her with the taste of precum that leaked from its tip, but George failed to give her his seed. Hazily, Grace quailed at the thought word might get out that she'd blown him but been inadequate, and redoubled her oral efforts.\n\nGeorge was trembling, leading Grace to believe she was about to be rewarded for her efforts, when he surprised her and stepped back, pulling his twitching cock out of her mouth. \"That was... harder... than it looked,\" he gasped apologetically to the trainer standing beside him with a hand on the swimmer's arm.\n\n\"I can do it,\" Jeni volunteered, moving to take his place. Her face glistened with moisture and cum was leaking from the pussy suddenly staring Grace in the face.\n\nGrace turned her face away, unenthusiastic about licking another girl, and found herself looking right at a trio of spectators watching them - watching her - from just beyond the circle of trainers. The woman from that morning was there, a clipboard held at her side, with the same unrevealing expression on her face. Two equally well-dressed gentlemen bracketed her; one studied the redhead with pursed lips while the other jotted something on his iPad.\n\nJeni moved closer, almost rubbing her snatch against Grace's face, but the spell was broken. All Grace could think of was that she'd let so many men fuck her that she'd lost count, right in the middle of the workout room, and gotten off so many times that she must be the biggest slut in the universe. Even as she considered the idea in appalled fascination, her hips continued to rotate for the benefit of her latest guest, who was churning the mixed loads of semen clogging her pussy with his well-proportioned manhood.\n\n\"I think that is enough exercise for one day,\" Gunter decided. Just that quickly, the men released her and Grace collapsed to her hands and knees, feeling like she'd just run a marathon. A final few spurts of jism landed on her lower back.\n\n\"Wow, Grace, you really got into the zone,\" Jeni said, offering the redhead a hand up.\n\n\"Really,\" agreed George, still apparently unconscious of his erection and the thin bead of precum drooling from it. \"I got tired, just watching you!\"\n\nGrace staggered to her feet, swaying momentarily, and wondered exactly what time it was. All of the other students already were gone; the three mysterious observers were just exiting, followed by the trainers and coaches. At least it meant she didn't have to face anybody else right away... \"Did you see Wade this afternoon?\" she whispered to Jeni after letting George get ahead of them.\n\n\"Not that I saw.\" Jeni smirked. \"What, hoping to impress him with your physical prowess? Why don't you just fall across his lap at dinner? Or spill something else on him and offer to help 'clean him up'?\" She made a rude gesture with her tongue.\n\nThe slim redhead laughed involuntarily. \"Maybe I'll try that,\" she retorted, trying to project more assurance than she felt. She wiped a hand half-heartedly across her sticky ass; after all, Wade was just one guy - no matter how cute he was.\n\n\"Oh, please!\" Jeni rolled her eyes theatrically. \"You know you freeze up like a deer in headlights every time a guy notices you. I bet if Wade ever actually touched you, you'd pass out on the spot!\"\n\n\"I'm tougher than that,\" snorted Grace, pushing open the door to the showers. \"And you lost the last bet you made, if you remember. Maybe you don't want to push your luck.\"\n\n\"Yeah, about that...\" Jeni crossed her arms and lifted her hands from the waist, apparently thinking she was removing her shirt. \"Don't think I'm not going to get even with you for telling Wade that!\"\n\n\"What?\" Grace paused, feeling confused.\n\nJeni peered at her for a moment, and then shook her head. \"Sometimes I think you really *are* delusional. When you had him tell me I was naked? God! I thought I was going to die when he told me it came off in the dive!\"\n\n\"Umm,\" the redhead mumbled, feeling as though she'd totally lost the thread of the conversation.\n\n\"Come *on*,\" Jeni laughed. \"You know what time it is - they'll be choosing the junior trainers any time now, and the big guns are in, giving everyone the eye. No *way* would I go skinny-dipping in broad daylight!\" She paused to look at Grace and then continued. \"I figured my gold thong would look like I was naked from a distance, but then when Wade spoke up...\"\n\n\"Oh,\" said Grace, her hand finding the water valve on the second try.\n\nJeni's face sobered. \"You noticed I was wearing it, right?\" She looked around, seeing nobody else, but lowered her voice anyway. \"Shit... Do you still think we're naked? I mean, before we took off our clothes for the shower?\"\n\nGrace thought about trying again to convince her friend, but decided to admit defeat - at least for the moment. \"No, of course not,\" she replied, forcing a smile. \"I was just trying to get even with you for cheating and wearing the thong.\"",
        "The brunette laughed, her good cheer instantly restored. \"Good, because can you imagine doing all those stretches in front of everybody in the nude? Oh my God!\"\n\n\"You have no idea,\" Grace responded, letting the warm spray sluice the copious male deposits from her body. \"You have no idea.\" She'd lost practically the entire afternoon to that orgiastic haze, and although she was a little sore, especially between the legs, the scary part was that Grace still felt turned on.\n\nConversation at dinner was all about who had performed well during that day's exercises, and rumors about what the coaching staff thought, and Jeni's crazy dive. Grace watched and listened with an air of detached bemusement, and tried to psych herself up to say something to Wade when he appeared.\n\nShe was simultaneously disappointed and relieved when he didn't appear, although George assured her Wade was okay when she got the nerve to ask. The redhead thought for a moment about grabbing him instead and finishing what she'd started that afternoon, but thought better of it. She was surrounded by hard cock, and told herself she wasn't looking just for physical gratification.\n\nNot that physical gratification wouldn't have been... gratifying, Grace admitted to herself. She kept losing the threads of the conversations that swirled around her, distracted by the toned bodies on display. Every erection she saw led to a mental image of her riding it; every pussy left the redhead wondering what it would look like stretched and filled by a hard, thrusting cock.\n\nGrace was keyed up and on edge all evening, and tossed restlessly on her bed after turning in. She wondered, again, why everybody was naked, and who had - or hadn't - noticed that fact, and how long it had been happening, and what it all meant. Distracted as she'd been, it hadn't escaped her notice that nobody talking to Jeni about her dive had mentioned a thing about what the brunette had been wearing until after they'd heard about the thong (either from Jeni herself, or indirectly from a friend).\n\nIt suggested some interesting opportunities for further experimentation when... \"Aaaaah!\" Grace silently screamed to herself; she was so horny she could hardly think straight. The redhead glanced at Jeni, sleeping quietly in her own bed, and gingerly touched herself, feeling the wetness that had collected between her lips. It felt wrong, somehow, and she stopped almost immediately.\n\nShe lay there, wide awake, a few minutes longer, and then slipped quietly from her bed. Nobody was supposed to be out after curfew, but Grace decided she'd sneak out anyway. Maybe she'd learn something, and at the very least, she'd burn off some nervous energy.\n\nThe camp was dark, with only scattered pools of light coming a few scattered security lamps and the windows of the common buildings. Grace ghosted across the grounds towards the staff offices; the air wasn't quite chill enough to warrant a windbreaker or sweatshirt, but it was a little uncomfortable for somebody who wasn't wearing anything.\n\nGrace edged up to the window outside Coach Rod's office, but it was unoccupied and the only illumination came from the hallway outside the opened door. She thought about it and headed towards the dining hall. Sure enough, there was a murmur of voices coming from inside the doors; the redhead edged along one corner, trying not to prick her bare feet on small sticks hidden behind the shrubbery, until she could dart a look through a window.\n\nAll of the coaches and visiting trainers were present, sitting casually on the floor in the cleared center of the room. Their attention, and Grace's, was focused on a bulletin board erected against a wall. It was covered with pictures of the swimmers, separated into several groups. As Grace watched, Coach Rod pinned a headshot to the center of the board, and then pulled another from the left side.\n\nHe turned to look at her, and she ducked guiltily. Level voices resumed, and Grace realized Coach hadn't seen her - he'd just been looking at the people sitting along the tables nearer the window. The redhead was tempted to stay longer, but the windows were too dirty to see clearly, and nobody was talking loud enough to be comprehensible from her position outside. Besides, Grace's nerves were still jumping from her scare - being caught breaking curfew would be bad enough, but to be found eavesdropping on their private discussions would be worse.\n\nCarefully, Grace retraced her steps as far as the sidewalk, and then hesitated only a moment before turning towards the pools; she was too wound up to consider sleeping, and if the entire staff was in the hall behind her, then she had free run of the rest of the camp.\n\nThe big pool was as smooth as glass, dimly illuminated by a single lamp situated at one end of the bleachers. Wisps of mist lifted from the warm water to eddy in the cooler air, but Grace's attention was fixed on the diving platform. What had Jeni felt when she'd climbed it that morning?\n\nGrace didn't consider herself an exhibitionist, the past two days notwithstanding, but she was getting accustomed to walking around naked when everyone else was too. But was there a difference between just being seen, and displaying yourself? She put a hand on the stair railing and looked around reflexively; there was nothing to see but the long, inky shadows cast by the light on the other side of the pool.\n\nThe redhead clambered upwards, imagining it was daytime. The swimmers would be in the water below her, churning down their lanes. The bleachers would be filled with people, but their eyes would be on the activity in the pool, not on her; not yet. She reached the lower platform, feeling the chill of a faint breeze that hadn't been evident before.\n\nShe walked slowly onto the platform, holding the rail and looking down at the near end of the pool. Grace was exposed now, but even her imaginary spectators might not have noticed her yet. And after all, it was a diving platform - people went up it all the time, even if they weren't members of the diving team.\n\nFeeling suddenly daring, Grace stepped to the center of the platform and faced away from the edge behind her. She spread her feet wide apart and bent at the waist, leaning just enough to support her upper body with her fingertips. Two quick twerks, just enough movement to attract attention from below, and Grace's heart hammered in her chest.\n\nShe flexed her hips again. It wasn't a ladylike position, and she was quite exposed, even if she'd been wearing her swimsuit. People would be looking at her, nudging their neighbors and pointing. But the thought that made Grace wet was that some of those watchers might realize she wasn't wearing a suit.\n\nThey'd laugh to themselves at the girl who thought she was teasing them without realizing she was showing all her secrets to the world. The platform wasn't so high that in daylight they couldn't see every inch of her. They'd look at her tight ass, the bared lips of her sex, and the generous mounds of her breasts. Those with sharp eyes would be able to see how hard her nipples were, and see the moisture leaking from her ready slit.\n\nGrace knew they'd be thinking about fucking her. She didn't understand what was happening, or how long it had been going on, but there'd be people down there waiting for her to dive into the water and emerge from the pool, and then they'd fuck her. There would be words and distracting gestures, but they'd haze her mind and then use her body like a pliant, warm fucktoy.\n\nThey wouldn't understand the joke was really on *them*. If she'd been asked before experiencing it, Grace would have been shocked, but the truth was, the slim coed *liked* getting fucked - a lot. She'd never imagined she could have so many orgasms, or be used so vigorously and still want more, but she did. The redhead knew she wasn't really a slut - there was no way she'd be exposing herself like this if there *really* had been people down there - but if those men were going to ram their cocks in her, why shouldn't she get off on it?\n\nJust the thought of it made her leak even more. Her clit was crying for attention, but Grace couldn't bring herself to masturbate out in the open, even at night; it was just too skanky. \"Plausible deniability,\" that was the phrase she was looking for. Surely she could \"unconsciously\" entice some man if she happened to find one, but the morning swim wouldn't start until 8 AM. God, was she horny, though! She stood up, feeling frustrated; how would she last the night like this?\n\nGrace eyed the still water below her and dove in, perhaps not as nicely as Bethany would have, but definitely with less \"tail\" than Jeni had managed. Any hopes for a \"cold shower\" effect were dashed by the pool temperature, which actually was warmer than the air. Nevertheless, Grace lazily eeled her way down the length of the pool, letting the familiar rhythmic motion sooth her.\n\nThe cold shower effect set in when Grace hoisted herself out of the pool and the warmth was sucked almost instantly out of her body. \"Oh, shit!\" she cursed quietly, and slipped back into the water to think.\n\nOf course, there weren't any towels to be had anywhere. She could head back to her room and use the sheet from the bed, but sleeping in damp linen was unappealing, she wouldn't be able to get another one from housekeeping right away, and she might wake up Jeni. The other alternative was to go somewhere more sheltered until she dried off... Grace's head pivoted towards the gymnasium.\n\nThe redhead pulled herself onto the deck, and then scampered rapidly in the direction of the darkened building. She bypassed the outdoor pool shower, figuring she could use the (heated) showers in the locker room to rinse the tell-tale chlorine out of her hair. Grace grinned at the thought there was nobody to see her streaking, and sighed in satisfaction when she found the building unlocked, as she'd expected.\n\nA muted \"clunk\" punctured her self-congratulatory mood, and Grace froze in place just inside the doorway, listening. She heard it again, maybe half a minute later, coming from the workout area. The redhead knew she should leave, but curiosity easily outweighed the prospect of a freezing run back to her room and a damp bed. She crept silently through the darkened locker room towards the gym itself.\n\nLight showed under the door; Grace gingerly eased it open, listening, and peered out when she heard no reaction to her presence. Her eyes widened and she caught her lower lip between her teeth, involuntarily sucking in a breath.\n\nWade Ferrari lay on one of the weight benches, his rock-hard erection projecting almost flat against his ripped abs as he pressed the weighted bar in his hands slowly higher, exhaling as his arms reached nearly full extension. Grace had been crushing on him since forever, and now there was nothing to distract her taking in the long lines of his body, the way the muscles ran under his skin, or the shock of dark hair that always made her want to run her fingers through it...\n\nAfter a few seconds, he released the hold and brought the bar down to the rests above the bench, sucking in a breath as the weights clunked to rest. Grace remembered to breath too, staring appreciately at every inch of him, especially the deliciously rigid tool projecting from his hairless groin. Below it, his equally bare sack called to her, begging to be caressed and licked. His skin gleamed with exertion, exuding a faint but entrancing musk that made her mouth and pussy water.\n\nGrace had never wanted to masturbate more than she did just then, but a sudden thought paralyzed her in the doorway. Why did she have to creep off and settle for second best when she had the real deal right in front of her? It would be unbearably humiliating if she said something and Wade turned her down, no matter what Jeni said, but who said he ever had to know?\n\nShe fought her expression back to studied nonchalance and eased the rest of the way into the gym. \"Hey, Wade, I didn't realize you were here.\"\n\nThe bar slammed back onto the rest, harder than it had a minute earlier. \"Grace!\" Wade sat up quickly, almost hitting his forehead on the bar, and lay back down. \"I was, um, just working out. What are you doing here?\"\n\n\"Just couldn't sleep,\" she answered, hoping he'd overlook her wet skin as easily as his mind filled in clothing. \"You know you aren't supposed to be doing this by yourself. It's dangerous; Coach would kick your ass if he knew.\"\n\n\"I'm okay,\" Wade objected, sounding a little defensive. \"It's just hard to concentrate during the day, with everybody staring at you, you know? It feels so... overpowering.\" He shrugged. \"I feel like I get twice as much done if I don't have to worry about somebody hovering over me and fixing every little thing.\"\n\n\"God, I know what you mean,\" Grace agreed, \"but that's still no excuse for breaking the rules. What if you got hurt?\"\n\n\"Give it a break already, okay, Grace? It's not like you wouldn't get your ass kicked just as hard if you were caught... skulking around.\" Wade looked away from her. \"I can take care of myself.\"\n\nGrace took a calming breath and walked around in front of him. \"I'm not saying you can't. But I could spot for you, and we'd be following the rules...\" His smirk flustered her. \"Mostly following the rules, and maybe I could learn something. You know you're the best athlete here.\"\n\nThe flattery, however true, didn't seem to affect him, and Grace felt herself getting frustrated. \"C'mon, Wade, I'm not as much of a spazz as you think I am; I'm serious about this too.\" Her voice almost broke at the end of the sentence, and she felt about ready to give up on him.\n\n\"I don't think you're a spazz,\" Wade said, his voice pinning her in place. \"You almost beat me in sprints this morning, Grace - you're an awesome swimmer, especially for a walk-on.\" He looked her right in the eyes for a timeless moment. \"There's nobody I'd rather work out with; you just took me by surprise, that's all.\"\n\nShe resisted the urge to bounce up and down like a little girl, and walked around to the head of the bench instead. \"So, are you ready for your next set?\" Grace needed a minute or two to think; she hadn't thought so far ahead, and she couldn't just jump on Wade and rape him - even if the thought of it made her wet. How did the coaches do it? They always seemed to have a way of making it seem so innocent that most people didn't even notice.\n\nWade had stretched back out on the bench, and looked up at her; his eyes seemed to take a long time to reach her face, although Grace reminded herself she was hot enough to be worth looking at even in shorts and a T-shirt. Besides, just because her mind was in the gutter didn't mean Wade's was; she smiled at him and tried not to look too blatantly at his throbbing erection.\n\n\"Actually, I finished my reps here,\" Wade said, sitting up again. \"Do you want to do some?\"\n\n\"Not at your weight,\" laughed Grace, pleased to buy some more time. \"Not unless you want to explain my crushed body to Coach Rod!\"\n\nWade laughed too. \"Shit, no! What do you want?\" Working together, they unloaded the bar and then set it up for Grace.\n\nThe redhead positioned herself on the bench, and it was her turn to look up at Wade, who was standing just behind her head. His ruddy cock projected above her face, not quite close enough to taste, although the male scent of his body was intoxicating. She ran off her first set of presses, moving the bar smoothly up and down a dozen times before setting it back onto the stand.\n\n\"Your position isn't quite right,\" Wade commented. \"Can you scoot up a little higher?\" Before Grace could respond, he reached down to grip her under the arms, and tugged her just a little bit closer to the head of the bench; she froze, electrified by the momentary feel of his hands grazing the sides of her breasts.\n\nHe seemed as flustered as she was. \"Sorry,\" he stuttered, yanking his hands back. \"It didn't look like your shoulders were under the bar. Try the next set and see if you can feel any difference.\"\n\nGrace obediently lifted the weights and lowered them before lifting. It did seem like it felt slightly easier, although it was difficult to concentrate on anything other than the tingling where Wade had touched her. She fought not to race through the second set, trying to maintain her form. \"Can we move on?\" she asked, as soon as the bar was back on the stand. \"I don't want to overtrain today.\" Her lack of breath wasn't from being winded.\n\n\"Sure,\" Wade answered agreeably, before turning to scan the other equipment. Together, they started removing the weights from the bar. \"Hey, how about the agonizer?\"\n\n\"The what?\" Grace laughed, trying not to drop the weight in her hands.\n\n\"The agonizer,\" he repeated, gesturing for her to follow. \"The thigh machine - maybe it's different for you, but no guy should have to spread his legs like that. Anyway, one of the trainers showed a few of us this killer workout.\"\n\nGrace watched Wade check the pads on the outside of the thigh arms, insert the pin at a preposterously low point on the weight stack, and then climb into the seat. \"Here, watch,\" he said, pressing the pads out against the insides of his legs. \"For me, this is the agonizing part!\" he quipped. After tugging his thighs a little farther apart, Wade engaged the weights.\n\n\"Are you doing anything?\" the redhead asked after a minute. It looked like Wade was just sitting there, spread wide, his erection on display. Of course, she reflected, his thighs would have had to be the size of her waist to budge the stupendous weight on the cable.\n\n\"Yeah,\" Wade answered, the stress in his voice at odds with his apparently relaxed appearance. \"Here,\" he gestured, beckoning her stand in front of him.\n\nGingerly, she complied; if the arms between his legs did close, she'd be squashed between them, but there was no chance of that happening. His throbbing cock was right in front of her.\n\n\"Give me your hand,\" he requested, reaching out but waiting for her acknowledgement. Grace let him take it and position it on his inner thigh. It wouldn't really have been worthy of notice if he'd been wearing shorts like he thought, but all she could think of was that it was less than a handspan from his manhood.\n\nShe could feel his muscles alternately contracting and relaxing beneath her palm. \"See, it's all about the resistance and isolation,\" Wade said, but Grace could barely hear him past the pulse that was beating in her ears.\n\n\"Oh, I see,\" Grace answered, and then with her heart either about to explode or rise up out of her throat, slid her hand sideways and grasped Wade's cock. Neither of them moved, although she felt the warm flesh twitch in her grip. \"Um, so you don't really move?\" she asked, feeling awkward and wanting to fill the silence.\n\n\"Not really,\" Wade said. \"My muscles are working, but you can't see it.\"\n\nThe redhead experimentally stroked his cock, watching for a reaction.\n\nWade hissed, making her jump, but she didn't let go. \"I swear, I think it would be easier to do splits. It always feels like this thing is going to tear me in half!\" He put his head back against the rest and closed his eyes.\n\nGrace unconsciously licked her lips. God, it was just like in her fantasies! She had Wade Ferrari's fucking cock *in her hand* and she could do anything she wanted with it! The redhead started pumping it harder; a bead of precum appeared at the tip, but Wade gave no sign of noticing anything was happening.\n\n\"Just keep going,\" she said unnecessarily, and gingerly squatted in front of the apparatus. Up close, the smell of his body was intoxicating and Grace knew she had to taste him. She leaned in and deposited a light kiss on his sack, tasting his sweat as her hand continued to work him.\n\nThe redhead could feel her arousal leaking out of her as she changed up and trailed her tongue up the length of Wade's shaft, while she cradled his balls gently in one hand and massaged them. It was so hot, and best of all, there were no judgmental eyes on her, to silently accuse her of being too clumsy or too slutty, or not slutty enough. She could just please herself!",
        "It didn't work out the way she'd imagined, however. Grace had just barely gotten her lips over the head of Wade's cock when it exploded. A jet of semen shot into her mouth, the next caught her in the face, and then several more bursts fountained onto his chest and stomach, as she stumbled backwards and tried not to fall.\n\n\"Are you okay?\"\n\nGrace realized Wade's eyes were open again, and he was staring at her with a concerned look on his face; she blushed. \"I'm fine; I just tripped over this stupid bar.\" She tried to resist the urge to wipe his creamy spend off her face, but it was about to ooze into one eye. The redhead settled for a quick swipe that got the rest of it and hopefully looked like she was just pushing back her hair. \"Don't let me mess you up.\"\n\nWade absently smeared the spunk on his chest around as he popped the pin to disengage the weight train. \"Nah, I'm done; otherwise I'll be walking bowlegged tomorrow.\" His erection still looked as hard as ever, even if it had a trail of semen leaking down it. \"You should give it a try.\"\n\nShe considered. \"Well... If you can show me how.\"\n\n\"It's not rocket science! C'mon, mount up.\"\n\nGrace waited for Wade to move aside, and stepped up into the seat. She hadn't really noticed before, but the machine was elevated a lot higher than it really needed to be, not that she was a mechanical engineer or anything. She swung each leg over the pad in term, realizing just how exposed she was in this position.\n\nWade stepped in front of her and pushed each pad against her thighs, re-engaging the set pins further out than they had been. \"Geez,\" he commented, \"this is what I mean - you girls really can spread 'em.\" An appalled look appeared on his face, followed by a hurried, \"No offense, right? You know what I mean.\"\n\n\"None taken,\" Grace assured him. She really was giving him an eyeful - if he'd been aware enough to notice it - and she'd just realized her dripping pussy was practically at the same level as his rigid cock.She engaged the weights and tried squeezing her thighs together, but predictably she might as well have been trying to move a wall. \"Can you check and see if I'm using the right force?\"\n\n\"Just squeeze,\" responded Wade, but he obligingly stepped between her spread legs and gingerly laid a hand against one thigh. Grace felt so hot she half-expected to burn him. \"Yeah, that feels right. Do you feel the burning?\"\n\n\"Oh, yeah,\" Grace gasped breathlessly. \"Here, check this too!\" She picked up his hand and, pulling him a little more forward, placed it atop her breast.\n\nThe hand squeezed slightly, eliciting an involuntary moan from Grace. \"I'm not feeling much tension,\" Wade reported, moving his fingers and pressing more firmly. The sensation left her nipple feeling hard enough to draw blood from his palm.\n\n\"Trust me,\" panted Grace, \"I'm pushing!\" The tip of his cock was not even an inch short of her creaming gash, and she was trying mightily to bridge that gap, but the weight stack represented an obstacle not even her heated desire could overcome.\n\nIt did not, however, prevent her from reaching out, grabbing Wade's cock, and pulling him close enough that she could guide it into her needy pussy. He stumbled, momentarily off-balance, and incidentally buried himself to the hilt inside Grace while mashing her breast almost hard enough to hurt.\n\n\"Sorry,\" Wade gasped, but Grace didn't feel sorry at all.\n\nShe felt filled and wanton and desperate to cum. Unfortunately, the damn exercise machine left her with practically no range of motion. As Wade regained his balance, the excited coed found she could move her hips a little more than an inch forward before the strain on her splayed thighs stopped her. It wasn't much, but the way Wade's cock slid along her clit felt like heaven.\n\n\"You're not supposed to move so much,\" Wade reproved, putting his hands on her hips and holding her in place. \"Isolate and just focus on the resistance.\" He gazed at Grace, their faces only a foot apart.\n\nHow could he stand there, inside her, and not do anything? Grace concentrated and bore down on the intruder piercing her silken folds, clenching it more tightly inside her. It felt so good, but it wasn't enough stimulation; she needed more. \"Oh fuck,\" she moaned, straining uselessly against her restraints. Shedding her remaining inhibitions, Grace reached down and pressed a trembling finger against her throbbing clit.\n\n\"What is it?\" Wade asked, looking concerned.\n\n\"Ah,\" gasped Grace, barely able to concentrate, \"ah, um, it's a - muscle cramp.\" She rubbed her finger along her bud, sending sharp tingles through her body. \"I'm, ah, just massaging it out.\"\n\n\"Those suck,\" Wade agreed. \"Here; let me get it for you.\" Before she could respond, he placed two fingers along side hers and twisted them into her.\n\nGrace shook helplessly in the throes of a monstrous orgasm that left her gasping for breath. Her body convulsed, squirming on the turgid shaft that still pierced her, and she could feel her fingers and toes curling involuntarily. The redhead gasped, \"Oh, fuck!\" again at the realization that Wade was still massaging her.\n\nHer clit was still super-sensitive, but those fingers were still circling, scraping and compressing it, occasionally trapping it between them and the rod penetrating her just below. It was so intense it verged on painful, and Grace clawed at Wade's hand, but his arm might well have been constructed of the same metal as the bars restraining her thighs. \"Wade, stop; it hurts!\" she cried.\n\n\"How about this?\" he asked, changing the motion. Most of the pressure vanished, but his fingers remained in place, flicking rapidly back and forth with just a featherweight whisper of contact between them and her throbbing bud.\n\nSuddenly Grace was pushing on his hand as hard as she could, inflamed by the faint teasing sensation that was sending jolts to every part of her nervous system. \"F-F-f-fuck,\" she gasped, discovering she could move a little after all. \"Oh my God! Oh, fuck, oh fuck!\" The redhead bucked against him frantically.\n\nPanting urgently, she spasmed against the seatback and tensed, emitting a deep moan as another powerful orgasm enveloped her. For a long moment, Grace completely forgot she was sitting in the middle of gym.\n\n\"I think that's enough for now,\" Wade commented with a faint grin; he appeared to be breathing a little heavily too. Grace almost whimpered in disappointment when he stepped back, unconsciously removing his cock from her sopping pussy. \"It's not really supposed to be a high-impact exercise, you know?\"\n\n\"Yeah,\" Grace answered, ducking her head unnecessarily as she felt for the locking pins and fighting an urge to blush. \"I got a little carried away, I guess.\"\n\n\"Well...\" Wade hesitated before continuing. \"Let's do some more then. It's your turn to teach me something.\" The statement came out sounding more like a question.\n\nGrace forced her eyes up away from his still-hard erection and to his face. \"Sure!\" she replied, with more bravado than she felt. Wade was willing to pass up an opportunity to escape gracefully in order to spend more time with her, and the coed wanted his cock when she had a chance to really do something with it. But what could she do that he wouldn't already know?\n\nShe wobbled a little when she stood up, and gratefully steadied herself for a moment on Wade's hand. A trickle of thicker liquid seeped down Grace's inner thigh; apparently he'd cum inside her without either of them even noticing it. \"Damnit!\" she muttered, disgusted with herself.\n\n\"What?\"\n\n\"Nothing,\" Grace assured him, shaking her head. \"Come on; I'll show you what they showed me this afternoon.\" She walked in the direction of the vertical pole, taking care to put a tiny extra roll into her hips for Wade.\n\nWade laughed. \"All right! The stripper pole?\"\n\n\"It is *not* a stripper pole!\" Grace whirled, momentarily embarrassed. She opened her mouth to say more, but Wade held up his hands in apology.\n\n\"It's just what the guys call it,\" he said. \"I don't really know what it is; I've never used it.\"\n\nThe redhead had to admit the justice of the observation, and reminded she was standing there naked. \"Well, yeah,\" she admitted with a smile, \"I can see what you mean. But I'm not doing any striptease for you!\" Her smile grew a little wider at her private joke.\n\n\"It's just a convenient brace for doing some stretching. Come here.\" Grace snagged Wade by a hand and pulled him closer to the pole. \"Stand as close to it as you can, and then see how high you can stretch.\"\n\n\"Aren't you going to demonstrate?\" he asked, looking sideways at her.\n\n\"It wouldn't really work,\" Grace replied, thinking about it. \"You kind of need help in spots, and you wouldn't know what to do.\" She pushed him against the pole. \"Just try it; I picked it up pretty fast.\"\n\nWordlessly, Wade turned back to the pole and reached upwards. \"Like this?\"\n\n\"More stretching, less talk,\" she giggled, and pressed a hand against his ass. \"As vertical as you can go; I won't let you fall.\"\n\nGrace could feel Wade's butt tighten beneath her hands. She moved closer, almost brushing his back with her nipples. He swayed unexpectedly, and the redhead grabbed quickly at the bar to steady them, leaving them pressed close together. \"Higher,\" she husked, letting her free hand follow the curve of his ass down and between his legs.\n\nHis body was warm and sweaty and intoxicating. Feeling scandalously dirty, Grace traced a finger along the rear of Wade's sensitive sack and then pushed against the pucker of his anus. The ring of muscle relaxed to admit her.\n\n\"Now, push up onto your toes,\" she whispered against his back, and felt goosebumps pop up on Wade's arm where it lay beneath hers. Grace let him push himself off her finger and stroked the inside of his thigh. More fresh moisture leaked from her own body. \"And slowly down.\"\n\nWade sunk back, impaling himself on her finger. \"Good?\" he asked.\n\n\"Oh, yeah,\" Grace smiled with secret pleasure. \"Just keep doing that.\"\n\nHis feet extended, freeing her finger. \"How many in a set?\"\n\nGrace realized she had no recollection, but had no intention of telling him that. \"Just keep going!\"\n\nIt was totally hot making Wade obey her, and the heat of his rectum around her finger was unexpectedly captivating, but the redhead hadn't forgotten what she really wanted. After a few more repetitions, she withdrew her hand and reached around him to grab his penis, instead.\n\nWade grunted but resumed the exercise without comment. His rigid tool, still slicked with their mingled spend, moved easily in her grasp. The excited coed wondered if this was what guys felt like when they jerked off; she tried, without much success, to keep her hand steady instead of pumping it up and down.\n\n\"I don't know how much more I can do,\" Wade gasped, his body trembling against hers. His cock quivered and jerked once in Grace's hand.\n\n\"Okay, stop,\" Grace answered, releasing him and reluctantly stepping back. She didn't know how many more orgasms Wade's cock had in it, but it was hard to believe it could be much more than three. No way was she going to waste it on thin air!\n\nHe turned to face her, looking flushed and totally edible. \"So now I spot you?\" he asked.\n\n\"Yes, for the next exercise,\" Grace answered, wiping her hand on the side of her leg. \"This one, I can demonstrate.\" Especially, she reminded herself, if Wade had no idea what the exercise was supposed to look like in the first place!\n\nShe positioned herself in front of the pole, but closer to it and with her feet closer together than in the afternoon, and gestured for Wade to stand behind her. \"Stay close,\" Grace advised, bending forward to grasp the pole. \"You need to catch me if I lose my grip, and also you can provide extra resistance for me to push against.\"\n\n\"This close?\" asked Wade, putting his hands on her hips.\n\n\"Closer,\" urged the redhead, wriggling with anticipation. \"As close as you can get.\" She felt the head of his manhood brush against the crack of her ass and quickly pushed up onto her toes and arched her back; it slid past her asshole and seated itself in her welcoming pussy.\n\nWade's groin was pressed against her butt. \"How's this?\"\n\n\"Perfect,\" Grace purred, lowering herself now that everything was in place. Then, trusting to whatever glamour was hazing everybody's perceptions, she abandoned further pretense and began rutting furiously on Wade's rod.\n\n\"Oh God, yes!\" she screamed, feeling Wade match her rhythm and bury himself deep inside her at the end of each thrust. Finally, that need that had been wakened within her was being satisfied in the most primal way possible.\n\nThis time, there was no mistaking it when Wade's cock contracted and jerked inside her, even if there was no copious spray of cum to coat her womb. Grace felt her insides liquefy as the physical stimulation combined with the knowledge that it was Wade behind her. She wasn't a slut; just a woman being used by a man the way she was meant to be used - the way she needed to be used.\n\nWade's arms took most of her weight when the shuddering redhead's knees gave out. \"I think that's enough for tonight,\" he panted, levering her back to lean against him, and then turning her to look Grace in the face. \"Are you okay?\"\n\n\"I'm pretty good,\" Grace admitted while trying to keep from looking too love-struck. She reveled in the feel of Wade's strong arms around her, the heat of his cock pressed between their sticky bellies, and especially the way he was looking at her. Please don't let this all be a dream, she told herself.\n\nThat was when Wade kissed her. \"Better now,\" she breathed into his mouth, clinging to his virile body with all the strength that was left in her arms. Both of them were smiling when they finally broke apart from each other.\n\nWade squeezed her hand in his. \"Let's get cleaned up; I feel like a mess.\"\n\n\"You look fine,\" Grace replied, suddenly feeling self-conscious. She must be a sweaty mess, not to mention the cum smeared across most of her body and still leaking from her pussy. What would Wade think if he could really see her as she was? Nevertheless, she let him guide them, still hand in hand, towards the showers.\n\nHe paused in front of the men's room, hand on the light switches. \"Do you, um, want to take a shower together?\" Wade asked, suddenly anxious and diffident.\n\nGrace's face flamed and she hesitated. It wasn't like they hadn't already shared practically everything there was to share, but Wade didn't know that. Obviously, she really liked him, but what kind of girl went from first kiss to coed shower in 30 seconds flat? He'd think she was a slut or something! And what if he didn't think she was beautiful?\n\n\"Don't worry about it,\" Wade said, releasing Grace's hand. \"Pretend I didn't ask.\" He turned off the lights, leaving the gym illuminated only by the glow filtering past him from the locker room.\n\n\"No,\" she objected, \"it's...\" How could she explain? \"I'm flattered, really.\" Grace forced a smile. \"But... I guess I'm just not ready.\" Seeing his expression, she couldn't help adding, \"yet.\"\n\nWade smiled at the last part. \"It's okay, really.\" He pushed open the door, but stopped halfway through and turned back to her. \"But if you'd like, I enjoyed working out with you. Maybe we can do it again?\"\n\n\"Absolutely!\" Grace agreed. \"Like you said, I got so much more out of it than the group sessions.\" She squirmed in anticipation. \"Maybe tomorrow night?\"\n\n\"Or sooner,\" Wade deadpanned, making her laugh. \"Night, then, Grace.\" He let the door close behind him.\n\nFeeling warm inside, Grace floated through the darkness to the women's showers and took shameless advantage of the hot water to rinse herself clean and heat her body in anticipation of the chill night air between her and her bed.\n\nShe didn't linger, however, thinking she might be able to walk back to the cabins with Wade. Grace turned off the lights behind her and slipped outside, feeling the cold almost immediately.\n\nWhat made her freeze, however, was the silhouette outside the men's entrance. Its bulk exceeded Wade's by a considerable margin, and Grace heard the rattle of keys in the door. Panicking, she took a quick breath and sprinted for the cover of the nearest trees.\n\nOnce there, she looked back at Coach Rod as he strolled to the door she'd just exited and locked it. He looked down where Grace had stood, and then up at her, so directly the redhead was certain she'd been found out. But after a moment that lasted forever, he simply turned and walked back the way he'd come.\n\nHardly daring to believe all the good fortune that had come her way that evening, Grace hurried carefully back to her cabin without encountering anybody else and finally slid, now only slightly damp, beneath her welcoming sheets.\n\nAcross the room from her, Jeni moaned and rolled over, apparently dreaming. Grace smiled in secret delight and closed her eyes; no dream could be better than what she'd experienced, and she'd get to do it again soon!\n\nThey were \"getting dressed\" the next morning when the knock sounded on the cabin door.\n\n\"Are you decent?\" Jeni asked, glancing at where Grace sat on her bed, fantasizing about Wade and wishing she dared to masturbate.\n\n\"Yeah, sure,\" the redhead answered, lying back and drawing up her knees. Maybe it was Wade, coming to ask about their workout plans. She could spread herself for him, displaying her more-than-ready sex, even if he didn't see it. Grace sighed, imagining the sight of his hard cock standing out above her, and how she'd ask him for a hand up...She'd tug, pulling him on top of her, and they'd get tangled up. The redhead hadn't decided if she'd pretend to be winded and just lie there, or if she should roll them over until she was on top, and then distract him with questions while she rode his tool to an orgasm, or if...\n\n\"Grace! Miss Lemaire! Are you listening to me?\" Coach Joan sounded annoyed, looking down at Grace with hands on her hips.\n\n\"Sorry, Coach, still waking up!\" Grace apologized, quickly rolling on her side. It was one thing to imagine Wade looking at her; seeing an obviously aroused woman doing the same thing was a little weird. \"What did you say?\"\n\n\"I said, Coach Rod wants to see you in his office, right away!\" Joan snapped. \"Don't make me use this,\" she warned, toying with the heavy whistle dangling between her heavy tits.\n\nGrace could imagine the sound of it in the confined space. \"I'll go right now!\" She quickly rolled onto her feet, on the side of the bed opposite the coach. \"Do you know what he wants me for?\"\n\n\"I'm sure he'll tell you himself when you get there,\" Joan grated. \"Do I look like a messenger service?\" With a final stern look at Grace, she left, leaving the door open behind her.\n\n\"OMG, Grace!\" squeeled Jeni, bouncing up and down with excitement. \"You know what this means?\"\n\n\"It means Coach Rod wants to see me,\" groaned Grace, remembering her fears from the previous night. She thought she'd gotten away, but apparently not.\n\n\"Dummy,\" Jeni exclaimed, hitting her on the shoulder. \"You know this is when they assign the junior trainers! I bet you're going to be one!\"\n\nStartled, Grace belatedly remembered the meeting she'd seen in the dining hall and thought about it. She was one of the better swimmers, but usually Coach Rod picked his new assistants from the seniors who were committed to the swim program; as an underclassman and a walk-on, she'd never thought seriously about it. \"Don't go blowing the whistle until you see it,\" the redhead admonished her eager friend.\n\n\"Oh, come on,\" Jeni rolled her eyes. \"Why else would Coach Rod want to see you?\" She stared at Grace. \"*Is* there another reason?\"\n\n\"I dunno,\" Grace shrugged, \"but I won't find out here.\" She ducked nervously out the door before Jeni could interrogate her further.\n\nThe redhead made her way across camp, past the other swimmers headed to the pool or gym, barely even conscious of the nudity around her as she weighed the possibilities in her mind. Reward or reprimand? Whistle or demerit?",
        "Coach Rod was sitting on the edge of his desk when Grace entered his office. His erection, far more massive than Wade's, was enough to make a horse jealous.\n\nGrace fought to stifle a giggle as she thought about how appropriate his name was, and tried to pretend the angry weapon wasn't on such blatant display. \"You wanted to see me, Coach?\"\n\nThe older man calmly eyed her from head to toe, and then surprised Grace by grabbing his erection and beginning to stroke it. \"Yes, Grace. Close the door, please.\"\n\nShe complied, trying to remember if she'd ever seen anybody masturbating since she'd \"woken up\" a few days ago, and couldn't recall another instance. Feeling a little uneasy, the redhead returned to her spot in front of the desk.\n\nCoach Rod watched her silently, continuing to fist his large slab of manmeat. Grace was increasingly convinced he was one of the people like her, who saw through the illusions, but she was more concerned about playing dumb than worried he might be seeing her crinkled nipples or bare mound. She shifted her weight and tried not to look at his cock; it was impossibly large, but Grace felt herself lubricating anyway at the thought of taking him.\n\n\"You're pretty good at this,\" he finally admitted, stroking harder, \"but you can drop the act in front of me, Grace. I know you know what's going on.\" He jerked harder and cum jetted from his hard organ.\n\nGrace flinched from the accusation as well as the semen, merely ducked her head as the coach's semen decorated her stomach and thigh. Her stomach churned; not only was she still displaying herself naked for this man, she'd just let him cum on her. She knew she should be feeling shock or outrage, but there was only that constant need between her legs.\n\n\"How did you know?\" she asked, feeling free to study him as frankly as he was assessing her.\n\nCoach Rod chuckled as he pushed himself off the desk and moved around to sit in his chair. \"You aren't the first person to travel down this road, Grace,\" he explained. \"We teach a lot more than swimming, here.\"\n\n\"Like what?\" asked Grace. She realized she'd been absently smearing his spend across her skin, and made a show of licking the palm of her hand. It tasted salty and sweet and male.\n\n\"Many things,\" was the vague answer, but he amplified it. \"Everybody here is conditioned to be constantly aroused, as I'm sure you've noticed. It boosts athletic performance, among other benefits. However, that edge is lost if you orgasm or masturbate, so that behavior is inhibited.\" He smiled thinly. \"Your workout session yesterday clearly indicated you've moved past that stage!\"\n\nGrace tensed, and then realized he was talking about her afternoon with the trainers and not her after-hours rendezvous with Wade. The thought that all those people around her had known what was happening to her was discomfiting, but Coach's face showed only approval. The redhead realized that the newfound knowledge didn't really change anything about that workout or her reaction to it, and stood up a little straighter.\n\n\"But why bother? Is everybody here a pervert, then?\"\n\nCoach Rod's face took on a slightly pained expression. \"Not at all. Think of it as, say, a special kind of brothel.\" He held up a hand before Grace could get a word in. \"A good swimming program is expensive. *College* is expensive. Some big-name places have football programs that can bring in that kind of money; Parker College never will. We have - *this*.\" He gestured broadly, taking in their surroundings.\n\n\"Our guest trainers and coaches are our clients. They pay well to come here, and that revenue funds this camp and subsidizes the College's academic programs, which benefits not only you, but all of the students at Parker College.\" He steadily met Grace's eyes.\n\n\"But this is still a swim camp, and I still coach a swim team. We're always on the lookout for help, people like yourself with genuine athletic talent and passion, who aren't afraid to grow in other ways.\"\n\n\"But-\"\n\n\"Consider it, Grace. Did you feel like you got something out of camp last year?\"\n\nShe stilled at the implication she'd been subjected to this then, and never realized it.\n\n\"Didn't it help your swimming? Aren't you proud of what you've accomplished? You have a chance to continue growing, to do even more. I'm giving you a chance to do that, full time.\" He reached into a desk drawer and produced a trainer's whistle and lanyard, holding it out to her. \"Join my staff; be an assistant trainer.\"\n\nGrace felt stunned. The foundations of her world had shifted, and she felt adrift, and there were more questions swirling in her head than she could count. All that she felt sure of was that her breasts and nipples were tight, her pussy was sopping, and that she ached to be fucked.\n\nBeing told she'd been made to feel this way didn't change the desire, or the remembered enjoyment. Grace wanted to ask how it could be right to take advantage of people this way. She wanted to know how many times she'd been used, robbed of pleasure. Was she really just a prostitute, a receptacle for peoples' sick desires? People actually had paid money to fuck her slick pussy, or fill her tight ass, or watch her swallow their cum? What if she just turned and walked out? What if the craving she felt never dissipated?\n\nShe swallowed nervously. \"Can I think about it?\" The redhead wasn't in the habit of willingly disappointing Coach Rod, and it didn't feel right to start now, but she didn't trust the part of her that wanted to accept.\n\nHe rose and walked around the desk before pressing the whistle into her hand. \"Certainly. Return it to me later, if you feel you can't accept.\"\n\nStrangely comforted by the implication she could refuse, Grace nodded jerkily and fled.\n\nShe headed for the pool without thinking. Jeni would be there, and the redhead badly needed to talk to somebody, even if she wouldn't be able to explain everything.\n\nMorning swim was still in progress, of course, and everything was the same, but different. Grace saw the students she knew standing on the blocks and announcing themselves, but this time she paid attention to the way the trainers in the stands looked at them.\n\nShe heard the high-pitched gasps coming from Daisy. The slightly built Korean girl was the shortest person on the squad, and her feet swung well above the ground as two \"coaches\" suspended her between them, working her up and down on the erections that penetrated her fore and aft.\n\nGrace tore her eyes away and scanned the crowd, looking for Jeni.\n\n\"Are you joining us, Miss Lemaire?\" asked Coach Joan, startling Grace.\n\nThe redhead shivered, unnerved by the coach's lustful expression and frank stare. \"Uh, not right now, I've got to do something for Coach Rod.\" She turned away and started walking rapidly towards the gymnasium, mostly because it happened to be in front of her.\n\nShe slowed down slightly at the sight of Wade rinsing off in the shower. Grace wasn't sure she was up to talking to him at the moment, but it would be rude to just walk away - especially when he'd just noticed her.\n\n\"Hey, Grace, what's up?\" the darkly handsome senior asked, turning off the spray. Goosebumps were visible on his arms, like they'd been last night, and - of course - his cock was erect and quivering.\n\n\"Nothing,\" she stammered, kicking herself for sounding so stupid and feeling distracted by a sudden recollection that it was supposed to be bad for men to have erections for too long. Well, if there was some problem, it evidently hadn't affected either Coach Road or Wade...\n\n\"Hey!\" Grace halted in her tracks, physically and mentally. \"You *came* in me last night!\" The memories of their encounter and her conversation with Coach Rod clicked together.\n\n\"What?\" Wade asked, looking mystified.\n\n\"You bastard!\" shouted the redhead, punching him ineffectually and managing to drop her whistle. \"You were using me!\" He had to have known what she was doing the entire time! Her anger was a mask for sudden embarrassment; which suddenly became a thousand times worse.\n\nWade smirked. \"You were using me too,\" he pointed out. \"The only muscle you were exercising on the stripper pole was this one,\" he added, tapping the head of his cock.\n\nGrace's eyes dropped as she writhed in mingled mortification and desired. God, she'd thrown herself at him and cum all over his cock like some totally debased slut, and *he knew it!* She thought longingly of drowning herself in the pool.\n\n\"Hey,\" repeated Wade, finally attracting her attention. \"Don't feel bad about it. I enjoyed it too. In fact...\"\n\nHe looked expectantly at her until she broke down and asked. \"What?\"\n\n\"I was really glad to see you last night. You know\" - he looked a trifle sheepish - \"I've been working out alone because you've been driving me crazy.\" At Grace's look of astonishment, he laughed and continued. \"You *have* to know you are so hot, Grace! You know we're not supposed to cum, right?\"\n\nShe nodded.\n\n\"Well, I just couldn't control myself around you; that's the only reason I've been trying to avoid you. When you dumped that oatmeal on me at breakfast, I barely made it out the door before blowing a load big enough to fill the bowl! I've been jerking off in private, at least until Coach caught me. I swear I couldn't sleep last night, thinking about being with you again.\"\n\nGrace couldn't help but be entranced by the frank declaration of lust, if not love, that so perfectly matched her own feelings. \"Well, if you're okay with me using you for sex...\" she purred.\n\n\"Absolutely,\" Wade grinned, stooping to pick up her whistle. \"So, you're gonna be a trainer, too?\"\n\nShe hadn't noticed the whistle hanging from his neck, a twin to the one in his hand. Grace accepted it back from him, looking at it closely for the first time. The shiny, chrome-plated instrument actually was shaped like an erect (if squat) cock and balls, and heavier than it looked.\n\nThe redhead thought about pursing her lips around the head of the shaft and blowing, but she'd never heard any of the coaches actually use one, much less a junior not-even-exactly-official assistant trainer. Besides, there were real cocks, of more pleasing dimensions, all around her. \"You'd still work out with me?\"\n\nWade's grin morphed into a leer. \"How else are we gonna stay ahead of the others?\" His prick twitched in anticipation.\n\nThat decided her. \"Then yeah, I'm a trainer now, too.\" Grace pulled the lanyard over her head and freed her hair, then let the symbol of her newfound status dangle between her breasts. \"So, what do we do?\"\n\nThey were interrupted by Jeni before he could answer. \"I thought I saw you sneaking over here,\" the brunette shouted to Grace, trotting over to join them. Her smile turned to open-mouthed excitement when she caught sight of the whistles. \"I *knew* it! There was no way Coach wasn't going to promote you!\"\n\nGrace couldn't get a word in edgewise, and Wade wisely didn't even try.\n\n\"This is so great! You guys will help me out, right? I mean, Wade, everybody knows how good you are, but you should have seen Grace yesterday! She *killed* this workout! I want to be that good, too.\" Jeni was practically bouncing up and down. \"Come on - they're ending swim early today, and I want to be your first. Say yes, please!\" She made puppy-dog eyes at Grace, who couldn't help laughing.\n\n\"Well... okay,\" the redhead capitulated. She couldn't very well say no to Jeni, although it had just entered her mind that \"coaching\" her friend probably meant having sex with her, too; hopefully Wade could take care of that and Grace could just \"supervise.\" It seemed like a cruel twist of fate that just when she'd gotten license to enjoy Wade herself, she'd have to give him away first.\n\n\"You'd better shower and change first,\" Wade told Jeni while maintaining an admirably straight face.\n\n\"I forgot,\" Grace confessed, as they watched the brunette race off in the direction of the locker room. She aimed a smouldering look at Wade. \"Maybe we could take that shower you mentioned last night?\"\n\n\"Save it for the students,\" interjected Coach Evan, who'd evidently walked into hearing distance on his way past them. \"Remember, you're not here for yourselves; got it?\"\n\n\"Yes, Coach,\" Grace gulped, feeling apologetic. Barely five minutes promoted, and she'd already put a foot wrong! \"How do I know what to do?\" she asked, not sure if the question was directed at the older man or Wade.\n\nCoach Evan stopped and faced her, his solid cock wet with some girl's unconscious desire. \"Look around. Do what everybody else does. If one of the guest coaches tells you to do something, obey them.\" He almost smiled, surprising Grace. \"You'll figure it out, soon enough. And we have evening sessions for the new trainers; I'm guessing Rod hasn't told you about those, yet.\"\n\n\"No, Coach; thank you, Coach.\" Their voices sounded almost in unison; Coach Evan nodded before walking away.\n\nWade looked at her and shrugged. \"Well, shall we go? I assume you don't need to change first?\"\n\nGrace snorted. \"No. How am I supposed to keep track of that, anyway? There's nothing to wear, anywhere. I don't even know where the clothes I arrived in went.\" She stopped dead in her tracks. \"God, we didn't come here naked, did we?\"\n\n\"Come on,\" Wade urged her. \"Worry about it later; nobody ever said anything to you at school, did they?\"\n\n\"Of course not,\" she replied, not without a sort of horrified fascination. It wasn't possible this effect extended beyond camp, was it? It would be too cold during winter, for one thing. Grace tried to imagine herself walking through her parents' front door for Christmas, wearing absolutely nothing, but the picture wouldn't come. Thank God.\n\n\"Then don't worry,\" chided Wade, interrupting her thoughts. \"Anyway, my plan is to say as little as possible. The coaches and trainers are always in shorts and shirts, and so is anybody who isn't going to or coming from the pool. That's not too hard, is it?\"\n\n\"I like the 'shut up' part,\" Grace admitted, then jumped as people started shouting at her. \"Sorry! I'm sorry!\" she repeated, backing out the door of the men's locker room she'd absently followed Wade through. \"Shit,\" she muttered to herself, going down to the women's entrance.\n\nGrace couldn't resist repeating the story to Jeni, who laughed uproariously.\n\n\"Jeez, Grace, you're too fucking much! Wade wasn't enough; you need to go perving on the other guys too? Why don't you leave some for the rest of us?\" The brunette turned and surveyed the other occupants of the gym.\n\nSo did the redhead, relieved of the necessity to hide her perceptions of the activity in progress. It was like a giant orgy, or maybe a scattering of smaller orgies. How could she ever have mistaken all those grunts and moans for simple physical exertion?\n\nShe stared, transfixed by the sight of Jerry wobbling between the parallel bars. Coach Rod's massive tool was buried in the young man's ass! Somehow, amazingly, Jerry hadn't seemed to notice that or the way the female trainer in front of him took his own erection deep into her throat.\n\n\"Couldn't happen to a nicer homophobe,\" Wade commented, joining them and seeing where Grace was looking.\n\nJeni glanced in the same direction. \"What? The way Jerry's trying to look down the top of that girl's shirt? He is such a douchebag; I don't know why Coach Rod doesn't ream him a new one!\" She looked at her companions, who were trying not to laugh. \"What?\"\n\n\"Never mind,\" Wade told her, and smiled. \"You were dumb enough to ask for us; let's get you started. Let's start on one of the benches.\"\n\nGrace trailed after them, feeling a new mix of excitement and apprehension. It was apparent they'd attracted some notice from the other spectators, and several coaches were beginning to drift casually in their direction.\n\nJeni eagerly lay back on the bench Wade pointed out, ignorant of what was going to happen. She smiled at Grace and wriggled until her butt was right at the end of the bench, which was sloped down towards her head.\n\n\"Okay,\" Wade said, looking a little too pleased about the whole thing for Grace's taste, \"now I'll brace you and I want you to do small planks.\" He moved the brunette's feet a little further apart, providing ready access to her glistening pussy. \"Grace will steady your head.\"\n\nThe redhead knew what he meant, but the thought didn't appeal to her. \"I think she'll be okay on her own,\" she stated, trying to sound authoritative.\n\n\"C'mon, Grace, we need to stick with the standard exercises for now,\" he chided. \"You know Jeni'd do the same for you.\" He buried himself in Jeni, making her breasts jiggle.\n\nGrace looked at the way her friend's eyes gazed sightlessly upwards, Jeni's breath already coming faster. She thought about all the times female trainers and coaches had assisted her with her workouts, and realized she must have done the same thing to them without realizing it.\n\nThen there was the circle of onlookers, other trainers and coaches who stood silently, watching and judging them. All of them were physically aroused, which seemed to be taken for granted, but more than a few showed evidence of appreciation or lust. Some of those looks were aimed her way, ignoring the small squeaks coming from Jeni as Wade began to fuck her.\n\nThe redhead didn't want to disappoint them, especially when she was beginning to sense she wouldn't be given the opportunity, anyway. Besides, watching Wade's shaft piston in and out of Jeni's juicy gash was making her hot and a tongue was better than nothing; she could pretend it was a guy's.\n\nA final thought brought a crooked grin to Grace's lips. She still owed Jeni a little payback for that tanning fiasco - and it would be just as rewarding, even if Jeni never knew it. Smiling, Grace carefully straddled the bench and lowered herself onto the brunette's face.\n\nAlmost immediately, Grace felt Jeni's tongue dart into her creaming slit. It traced her lips, collecting some of the copious moisture it found there, and Grace leaned forward. Soon the inquisitive intruder was teasing her clit, making her gasp.\n\nShe looked down the length of Jeni's shuddering body at Wade. His face was showing strain, and Grace knew he was about to cum. What they were doing to Jeni was wrong, so perversely wrong, but oh God it felt wickedly hot. And she was doing it in front of all these people, willingly this time, and they were going to see her cum like a slut. A slut who was going to squeal and orgasm into another girl's mouth like a slave to her cunt, helpless to control herself, beyond caring who saw her or knew and...\n\n\"Oh! Ugh! Ugh! Oh, yeah, oh -- *Aaaaaaah!*\" Grace spasmed and ground her crotch into Jeni's face.\n\nHer orgasm didn't take the edge off her need the way Grace had hoped. Her pussy needed more - it needed the cock still slamming in and out of Jeni's pussy. Jeni wasn't getting anything out of it, anyway, and Grace could show her how it was *supposed* to be done.\n\nShe swung off the brunette, motioning for Wade to stop. \"No, your positioning still isn't quite right,\" Grace panted, unable to quite meet Jeni's inquiring eyes. \"Let me demonstrate,\" she explained, gesturing to Wade as she quickly lay back on the adjacent bench.\n\nHe swayed back, as if to withdraw, but before Wade could actually do anything, the circle of spectators parted and Coach Rod appeared between Grace's spread thighs. Grinning devilishly, he grabbed her by the knees and thrust his gargantuan manhood into her.\n\n\"*Oh fuck yeah!*\" she screamed, amazed by the effortless way her pussy took him and the indescribable feeling of being *filled* like she couldn't believe. Coach Rod withdrew and thrust into her again, driving the breath out of Grace's lungs as his powerful tool battered its way back into her womb.\n\nShe wallowed in the physical overload of this monumental fucking, so far beyond anything she'd experienced that Grace didn't resist when a bare pussy covered her face, leaking feminine musk into her mouth.",
        "Strong fingers trapped her stiff nipples and squeezed, making Grace scream. As if it had suddenly recalled a duty it knew well, her tongue extended and teased its way between the fleshy lips pressing into her face, stimulating and collecting more nectar.\n\nGrace wasn't sure if she'd had multiple orgasms on the bench, or just a single really long one. She thought the woman perched on her face climaxed too, but all of those things were inconsequential compared to the mighty erection that simultaneously rewarded her and pushed her to new heights of sensation.\n\nSuddenly she was empty and gasped at the loss, vaguely surprised to realize she could. Grace opened her eyes to find Coach Joan staring down at her, looking flushed, but all she could think of was Coach Rod, who grinned - or was it a grimace? - as his cock began pumping a prodigious quantity of jism onto her sweaty body.\n\nAnother jet of semen caught the side of her face, and Grace realized the crowd had moved closer, all of them jacking spunk onto Jeni and herself. Wade's cock jerked repeatedly, unloading a torrent onto Jeni's tits and stomach.\n\nIt was beautiful to watch, and Grace realized it was mean of her to begrudge Jeni the use of such a fine cock - especially when she'd had the benefit of Coach Rod's attention herself. She couldn't even work up any annoyance at the realization it was a male trainer, hairless balls glistening with saliva, who stood at the head of Jeni's bench.\n\nThe watchers began to wander away, their immediate needs sated. Coach Joan smiled at Grace, then shared some unspoken message with Coach Rod before departing. The Coach just gave Wade and Grace each a nod, and turned to address one of the other trainers.\n\n\"Oh, wow,\" Jeni panted, slowly sitting up and spreading the cum across her body with both hands. \"That was an awesome exercise, Wade! I owe you big time.\" She turned to look at the redhead. \"Sorry, Grace. I was trying to follow what you were doing, but I just couldn't concentrate, I guess. Will you be mad if I ask you to show me again, next time?\"\n\nGrace realized she was smearing the male seed across her skin, too. It felt soothing, so she didn't stop. \"It's fine, Jeni. I'm learning, too.\" The words were out of her mouth before she realized they were absolutely true.\n\n\"I don't know about you two,\" Wade announced, \"but I'm starving. If we hit the showers now, we can be first in line for lunch!\"\n\nThey walked across the workout room together; Grace was quiet, listening to Jeni's enthusiastic chatter with a corner of her mind. Was it wrong to say nothing and be a party to the unknowing degradation of the others around her? She stopped suddenly and looked across at the bleachers along the side of the room, but they were unoccupied. A scan behind her showed they were no longer the center of attention; scattered grunts and moans sounded from the others nearing the climax of their workouts.\n\nGrace resumed walking, studying Wade's ass and then Jeni's. What would they look like, stretched by Coach Rod's tool, or by Grace's hands? The redhead felt her arousal returning, fueled by the speculation. How many people had she fucked, what acts had she performed, that she couldn't remember? Well, she was remembering now, and enjoying it!\n\nIf being forced to lick Coach Joan was the price Grace had to pay to get the fucking of her life - and, frankly, it hadn't been *too* distasteful, once she'd gotten started - then it was a price she could pay. Grace told herself she'd just concentrate more on the boys; was it *really* true they didn't cum? Her pussy contracted just thinking about finding out.\n\n\"You're awful quiet,\" Jeni observed in the showers. \"Are you thinking about doing it with Wade?\" she added, an exaggerated leer on her face.\n\n\"Among other people,\" retorted Grace, for once without a trace of embarrassment. \"Luckily for you, I'm not into girls. Otherwise, I might just take advantage of you.\"\n\nThey both laughed.\n\nCoach Rod watched the woman pace slowly across his office, the heels of her boots clicking on the wood flooring. From experience, he could guess what she would say before the words left her mouth; it was too early for their meeting, but it wasn't his place to say so.\n\n\"I admit it,\" the woman sighed, \"the little flame-haired cunt is quite delightful. \"The pictures really didn't do her justice, but I suppose that's my good fortune, isn't it?\"\n\nShe waved her hand imperiously in his direction, making it clear it was a rhetorical question. His visitor tossed her head, doubtless trying to rein in her impatience, and asked the question the coach was dreading. \"When will she be ready?\"\n\nRod pursed his lips and tried to contain his nervousness. \"At least a week.\" The woman's eyes narrowed, and he hurried on. \"The conditioning's been working great, but she only graduated to stage three a few days ago. Really, we weren't expecting her to move up until next year.\"\n\n\"That's your problem,\" she responded dismissively. \"But her performance with that other girl - both of them, really - was unbelievably pathetic. Totally unacceptable!\" She paused for a moment to look down her nose at him. \"Not up to your usual standards, I must say.\"\n\n\"I completely agree, of course,\" replied Rod, trying to tread a line between understanding and obsequiousness. \"But we're amping her full power, and she'll be dripping for pussy in no time.\" Being put in this position didn't make him happy, either, but there really wasn't a lot he could do other than try to steer the discussion back to their goals rather than Grace's admitted shortcomings. \"Have you decided if you want lesbian, or just bisexual?\"\n\n\"Bi, I suppose,\" the woman sighed, finally condescending to settle upon a chair in front of him. \"Sometimes there are guests to consider.\" She leaned forward and fixed an unwavering stare on Rod. \"But she'll be imprinted on me, of course.\"\n\n\"Of course,\" he echoed. Some might have been offended by her insistence on stating the obvious, or her tone of voice in saying it, but Rod wasn't one of them. Besides, by the time camp ended, it would be water under the bridge - and he knew his place.\n\nShe smiled as if reading his mind. \"Just so,\" she purred, and reached out to snag the short leash attached to the sturdy leather collar about his neck. A brief, and unnecessary, tug brought him out of his crouch and onto his hands and knees.\n\nSlave Rod's throbbing manhood bobbed beneath him, but he knew it wouldn't be called upon. Keeping his eyes lowered, he waited as the woman gracefully unfastened her wraparound dress, and then crawled forward to begin worshipping her exposed sex.\n\nThe subtle hitch in her breathing left precum leaking from the head of his shaft; while Rod derived great pleasure from finding and preparing new slaves for his masters and mistresses, there was still something to be said for the simplicity of direct, personal service."
    ],
    "authorname": "VirtualScottToo",
    "tags": [
        "conditioning",
        "exhibitionism",
        "masturbation",
        "sex slave",
        "slave",
        "romance",
        "romantic",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-emperor-has-no-clothes"
}