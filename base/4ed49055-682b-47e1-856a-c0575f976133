{
    "title": "The Big Tits Club Ch. 15-16",
    "pages": [
        "THE BIG TITS CLUB by bluedragon\n\n****\n\n-- CHAPTER 15: Tahoe --\n\n****\n\n\"Cheers! Ha ware ya? Ya muss be Matty's mam.\"\n\n\"Good morning, Mrs. O'Brien. Yes, I'm Matthew's mother. Pleased to meet both of you.\"\n\nNot expecting a parent to actually come out to the van, Mother had been seated in the front passenger seat. But as Naimh's parents came down the sidewalk, Mother did the polite thing by opening her door and stepping onto the sidewalk so she could shake hands and properly introduce herself.\n\nAs for me, I was rummaging around the trunk, playing a game of suitcase Tetris to make sure everything fit. I'd already packed the space beneath the middle row. The gap between the two front bucket seats was piled as high as my elbow. Belle lost her legroom when I had to stick a bag into that spot as well. And we even had to forego the usual seating arrangements by having Sam and Mari sit in the middle row together because they had the widest hips. I wondered for the umpteenth time if we would have just driven two cars had Alice been still with the BTC, because I couldn't see ANY way we would have fit both another girl and another suitcase in here.\n\nFinally, I got the trunk shut without crushing anyone's luggage, circled around to the front of the car where Naimh's parents were chatting quite happily with Mother, and announced, \"All set. Ready to go.\"\n\n\"Well again, it was nice to meet you both,\" Mother wrapped up, shaking hands with Naimh's mom. Naimh herself was now blushing pink in the third row with Belle and Zofi, a little embarrassed that her parents had actually come down to the van, although they weren't the only parents we'd seen this morning. Mari's mom and dad had waved to us from their front porch, and Zofi's dad had waved goodbye from inside his living room window. In truth, I figured all of the parents had wanted to confirm with their own eyes that their daughters were NOT driving off for a three-night ski vacation with a lone male and NO chaperone, and Mother's presence in the front seat had apparently mollified them. Sam's dad thought I was gay, so... whatever.\n\nNaimh was our last pickup, and we soon hit the road for the four-hour drive up to the \"cabin\" Mom had rented in North Lake Tahoe. It wasn't actually a cabin, that's just what all the rental houses up here in the mountains were called. We didn't have some four-thousand square foot luxury mansion right on the lake, but we had a decent-sized house on a relatively large lot only a couple of blocks away from the beach, and it would be perfectly adequate as a base of operations for us to enjoy ourselves until returning the girls back home to their families well before Christmas.\n\nI actually shaved fifteen minutes off the drive, with Mother dozing in her seat so I didn't feel bad about going 80mph the whole way, at least until we got into the mountains. Everyone was more than happy to get out of the cramped van, and Sam helped me get everyone organized to start ferrying in all our stuff, except for Mother of course. The one paying for the place shouldn't have to do any work. She had gone in first to make a phone call, promptly found a bottle of wine, and was half a glass down by the time I came inside with the last of the luggage.\n\nSam came to me. \"There are only two bedrooms, plus the loft, so somebody's gonna have to sleep out here in the living room. Assuming your mum gets the master, the rest of us were gonna pair up and ro-sham-bo for the other bedroom first, then the loft, and whoever is left gets stuck out here.\"\n\n\"Makes sense.\"\n\n\"The girls figured it wouldn't be appropriate for any of us to share a bed with you with your mum around,\" Sam began, giving me a look that suggested SHE would've taken the chance before glancing over to where Mother sat at the dining table reading a book. Mother wasn't quite out of earshot if she was paying attention, and from her posture I figured she might be listening. \"So, rather than have you take up one of the queen beds in the bedroom or the loft, you're gonna have to be one of those stuck out here.\"\n\nI didn't reply right away. Instead, I looked over at Mother and found her looking at me with an expression that told me she already knew what was on my mind. She had been listening after all, and she shrugged and gestured for me to go ahead.\n\n\"That won't be necessary,\" I said to Sam before raising my voice and announcing, \"Can I have everyone's attention, please?\"\n\nThe other four girls, clearly preoccupied with scoping out their sleeping options for the next three nights, had to come back to the living room from the bedroom and the loft. But once they were all in earshot, I explained, \"My apologies for bring you all here under false pretenses, but I genuinely don't think any of you will mind. Your parents would most likely not have let you come had they known, and rather than ask any of you to keep the secret, it was easier to just not tell any of you until we'd arrived.\"\n\n\"What secret? What false pretenses?\" Sam folded her arms across her chest, so used to being in control and NOT happy to be left out of the loop.\n\nI grinned and glanced back at Mother, arching an eyebrow. She glanced over at the clock, raised her hand with her fingers spread apart, and stated, \"Five minutes.\"\n\nI nodded and turned back to face the girls. \"My mother will not be staying with us tonight... or tomorrow night... or the night after. Actually, we probably won't see her again until Tuesday when it's time to go home. So Sam, you don't need to worry about playing musical beds or whatever. Nobody's going to have to sleep out in the living room.\"\n\nMari was closest to Mother, and she couldn't help but ask, \"Where are YOU going?\"\n\nMother glanced at me for a second before giving Mari a reassuring smile, and in a perfectly normal volume voice she explained, \"I'm staying with my boyfriend for the duration of this trip. But don't tell Matthew. He doesn't want to hear about that sort of thing.\"\n\n\"Anyway...\" I rolled my eyes. \"Can everyone please thank my mother for arranging this whole trip for us? It was one-hundred percent her idea. I had nothing to do with it.\"\n\nThe girls cheered, and Belle actually walked over to give Mother a hug. Sam was quick to give her a hug right after as well, holding on a few extra seconds while they whispered a short conversation that I couldn't hear.\n\n\"In the meantime,\" I continued, \"I need to drive over to the store to buy groceries that will last us for a few days. Anyone want to come?\"\n\n****\n\nNaimh accompanied me to the grocery store, the very picture of a winter snow bunny in form-fitting dark blue one-piece winter jumpsuit that hugged her slender figure and was tight enough across the chest that she needed to leave the zipper beneath her cleavage. Her luscious red hair hung loose and forward from the attached furry hood, and I rather enjoyed the stares of admiration I got from guys in passing to have such a gorgeous creature holding onto my arm.\n\nWe chatted a little bit about school as we nabbed everything the girls had put on the shopping list. The last week of classes before winter break had been a breeze. Teachers were more or less forbidden from assigning homework over the break, and half of them seemed as eager to spend two weeks away from campus as us students. We talked about my plans for the next few days, and she wanted to know if I had any other secret surprises in store.\n\n\"The house doesn't have a hot tub you didn't tell us about, does it?\" she asked excitedly.\n\n\"Sorry,\" I said, much to her visible disappointment. \"I know ski vacations and hot tubs sort of go hand in hand, but it's not like we can't hop in the hot tub back at my house anytime.\"\n\nWe collected all the groceries we needed, but as we passed the alcohol section, Naimh's emerald-green eyes flashed as she asked, \"Hey, what's the legal drinking age in Nevada?\"\n\n\"Still twenty-one, sorry,\" I apologized.\n\n\"Backwards Americans,\" she scoffed. \"Eighteen is legal in Ireland.\"\n\n\"Guess you'll have to take me there someday.\"\n\n\"I'd love to,\" she replied warmly, stopped to cradle my cheeks, and gave me a tender kiss right there in the market.\n\nWe returned to the cabin without incident, parking in the garage and bringing everything inside. While I was loading the fridge, Sam came to me in the kitchen.\n\n\"Okay, new plan on the bedrooms. We still paired up for ro-sham-bo, and your musical beds comment gave me the idea,\" she informed me with a grin.\n\n\"What idea?\"\n\n\"Well, my original idea was to have you rotate sleeping locations, spending one night with each of us. Musical beds right?\"\n\nI blinked twice.\n\n\"But the master has a king-size bed, much better for sleeping three, so we're putting you in there and the rest of US will rotate in to join you. Zofi and I are pairing up, no surprise, and Belle is with Mari. Neevie gets to have you to herself. We already ro-sham-boed using a proxy for Neevie. Belle and Mari get you tonight, Neevie has tomorrow, and Zofi and I are on Monday night.\"\n\n\"Uhhh... wowww...\" I stammered in surprise. \"All three nights?\"\n\nSam gave me a weird look. \"What did you THINK was gonna happen when you brought the BTC here without a chaperone?\"\n\n\"I dunno. I guess... I didn't want to presume.\" I gave her a frank look. \"I mean, I assumed we'd have sex while we were here, but I guess I hadn't thought about spending nights with all of you. Have you ever spent the night with a guy before?\"\n\nSam shook her head in the negative. \"Looking forward to it, though. I wasn't happy Zofi and I got dead last. I'm assuming you've never spent the night with a girl either.\"\n\nI shook my head as well.\n\nSam looked at me curiously. \"Not even Belle?\"\n\n\"Not even Belle,\" I confirmed. \"Her dad still doesn't know.\"\n\n\"Ah. Well it looks like she and Mari get to be your first.\" Sam sighed, giving me a rather wistful look at the idea of NOT being my first overnight. But then she shook her head and started chuckling. \"Seriously though, your mom is one of a kind. You're really lucky to have her.\"\n\nI popped both eyebrows. \"The idea that I'm lucky to have my mother is NOT something I'd ever considered before. But at this moment, I have to admit you're right.\"\n\nSam giggled and kissed me quickly. \"Hurry up. We're still getting settled, but the girls want to open that big box of alcohol and get started.\"\n\nI nodded and went back to putting away the groceries. But three seconds later my head jerked upright as I exclaimed, \"Wait, WHAT box of alcohol?!?\"\n\nIt turned out that Mother had left us another surprise. The wine bottle she'd started was still on the dining table, but it had not been alone. On the floor next to her chair there was a cardboard banker's box stuffed with bottles, not only wine but some hard liquor including tequila, vodka, whiskey, and coconut rum. I remembered idly wondering where in the world she'd gotten the bottle from in the first place, as she'd walked into the cabin without any luggage or boxes. My best guess was that her boyfriend had opened the cabin before our arrival and left behind the present, most likely at Mother's request. And when Sam showed it to me, I whistled in amazement.\n\nSam hugged me, kissed my cheek, and exclaimed, \"This weekend is gonna be AWESOME.\"\n\n****\n\n\"Let's play Truth or Dare!\" Naimh announced rather drunkenly. Proud of her Irish heritage, the busty redhead had proclaimed quite early on that she could outdrink any of us, including me. She'd hit the hard alcohol early and was one of the first to get buzzed. Thankfully, she was a happy drunk (and a flirty drunk), and she presently sat sideways in my lap, mostly paying attention to the group conversation but occasionally grabbing my head to make out with me for a minute or two. Given her behavior ever since the \"Alice incident\", I believed Mari's assessment that Naimh had been trying very hard to be group-centric, defer to the others, and generally not be as disruptive as she used to. But once the alcohol knocked down all her inhibitions, the horny redhead had come out full force. If it weren't for Sam hollering \"Neevie!\" every now and again, she might've started fucking me by now.\n\n\"Boooo!\" Belle immediately proclaimed in response to Naimh's suggestion. Truth or Dare had never been a popular game with the BTC. For one thing, the girls had always been very open with each other, sharing their secrets in sisterhood solidarity. For another, there really weren't that many truths to uncover with so many virgins in the group. \"The good truths we already know about, and the secret truths are secret for a reason.\"\n\n\"How about Spin the Bottle?\" Zofi suggested with a twinkle in her eye.\n\n\"Hear, hear!\" I enthused, raising my Jack and Coke tumbler.\n\n\"Not happening,\" Mari stated nervously. \"With a five-to-one ratio, I'm not THAT drunk.\"\n\n\"Try it. You might like it,\" Zofi shot back. She raised her wine glass in a salute to me, along with a wink. I did notice her exquisite manicure now that Mari had clued me in, but I also noted her perfect hair in a fancy up-do and dangling earrings even though the girls had all changed into \"comfortable clothes\".\n\n\"Maybe we should just play Dare or Dare,\" Naimh giggled while tapping my nose with her fingertip. \"Like Truth or Dare, but without any truths.\"\n\n\"Strip poker?\" Belle offered, waggling her rum and coke speculatively.\n\n\"Hear, hear!\" I enthused again, raising my Jack and Coke again as well.\n\n\"Why bother with the playing cards?\" Sam countered. \"We could just strip Matty and take turns using his dick for our relief.\"\n\n\"Hear, hear!\" Naimh enthused from my lap before cramming her tongue into my mouth.\n\n\"Neevie!\" Sam hollered. \"I meant the whole group, not just YOU.\"\n\nNaimh broke away and pouted cutely. \"Aww...\"\n\n\"We could play regular, non-strip poker?\" Mari proposed. \"Texas Hold 'Em was fun, wasn't it?\"\n\n\"Boooo!\" Zofi proclaimed. \"Where's the fun in that? You're not drinking enough.\"\n\n\"I'm drinking plenty, thank you,\" Mari disputed. She'd had a grand total of one glass of wine, with the second glass still mostly full and sitting on the coffee table.\n\n\"We don't have that many pennies,\" Belle pointed out. \"Hence the strip poker.\"\n\n\"Strip or Dare!\" Naimh squealed and started fiddling with her pajama top.\n\n\"We don't need a hot tub and we don't need to play Truth or Dare to have a good time,\" Sam argued while taking a big swig from her cocktail tumbler. \"There are six of us teenagers alone in a comfortable mountain cabin with no parental supervision. School is out for winter break. Nobody's gonna be checking on us for another three days. We have all the time in the world to-- NEEVIE!\"\n\n\"What? WHAT?\" Naimh yelped like a kid who'd gotten caught with her hand in the cookie jar. She twisted her head to look back at Sam, but my arms wrapped around her upper body prevented her from completely turning around. After all, I had a nipple in my mouth and didn't want to stop suckling at her big, beautiful breasts.\n\nShe also didn't stop pumping her hand up and down my throbbing dick.\n\n\"What are you--?\" Sam sputtered. \"Didn't I say--? How are you already--?\"\n\n\"What?\" Naimh gave her an innocent look. \"YOU were the one who said we should just strip Matty and take turns using his dick for relief.\"\n\nSam simply facepalmed.\n\n\"If you can't beat 'em, join 'em,\" Zofi cheered, ripping her own pajama top over her head and baring her big boobies. I'd noticed earlier that only Mari had come out of the room wearing a bra. And that was BEFORE anyone had started drinking. \"Neevie, scoot over.\"\n\nI groaned as the bodacious redhead slid off my lap to the right, drawing her tits away from my lips. I pouted dramatically, and she giggled before popping in to give me a quick peck. Zofi, on my left, quickly pulled my head to HER tits, and I was soon happily sucking away at fresh teats while Naimh had never really stopped stroking my dick.\n\nBut then Naimh let out a loud burp, drawing my attention. She patted her chest, looked at her empty tumbler, and announced that she needed another drink. She'd worn a pajama set in pastel purple, the button-up top remaining completely unbuttoned from throat to tails as she stood up unsteadily and bobbed and weaved her way into the kitchen around imaginary obstacles.\n\nZofi quickly dropped her left hand around my shaft to take Naimh's place, watching my face and listening to my happy moans as she pumped my prick for my pleasure while continuing to let me feed on her nipples. Another minute later, she bent to seal her lips over mine as we happily made out, and she simply hummed into my mouth when I reached up to play with and fondle her breasts. Even though the lissome brunette had yet to either suck my dick or show any interest in having sex with me, she certainly enjoyed French kissing with me a ton. And she'd handled my penis with aplomb enough times to convince me she was no closet lesbian.\n\n\"I call 'next'!\" Belle announced, surprisingly loud for such a small girl. She got up from her seat and came over to sit beside me and Zofi. But Zofi didn't make her wait, and before I knew it, Belle was bent over my lap bobbing her face up and down, her lips forming powerful suction over my cock while I threw my head back and gasped at the pleasure. Zofi stuck around, giggling and kissing my cheek while occasionally feeding me one of her nipples.\n\n\"No fucking,\" Sam ordered loudly, and quickly got a pair of boos from both Belle and Naimh. \"Not YET at least. We just fucking GOT here! We have three more days! Don't make him pop yet!\"\n\nMari laughed. \"It's not a BTC hangout if Sam isn't yelling, 'Don't make him pop!'\"\n\nSam rubbed her forehead. \"Truer than I care to admit. You wanna go next after Belle?\"\n\nMari smiled. \"Nah, you go ahead. Belle and I won the ro-sham-bo for tonight, remember?\"\n\n\"That's right, bitch.\"\n\nMari giggled. \"I think that may be the very first time you've ever called me a bitch. Jealous?\"\n\nSam waved her hand dismissively. \"I'll be jealous of every bitch who gets to be with him while I'm waiting my turn. But that's okay. I love every bitch in this room.\" She took another swig of her drink and scowled just a little morosely. While Naimh was certainly a happy drunk, I started to worry that Sam was the opposite.\n\nMari smiled and reached out to rub Sam's knee reassuringly. At the same time, I gently lifted Belle's head and asked, \"Hey, gimme a sec.\"\n\nBelle looked up at me curiously. She'd been too busy blowing me to pay attention to Mari's and Sam's exchange, but she let me get up and cross the room.\n\nSam scowled up at me and muttered, \"I don't want a pity fuck.\"\n\n\"I know. You ordered 'no fucking',\" I replied while sinking to my knees in front of her, taking the tumbler out of her hands, and setting it on the coffee table. I reached out with my left hand, hooked it behind Sam's head, and pulled her toward me while I leaned in and rammed my tongue into her mouth. She moaned instantly and wrapped both arms around my neck, kissing me back feverishly. And as she sat up straight she kept pushing more and more forward until she climbed out of her armchair and pushed me down onto my back across the thick living room rug.\n\nSam kept Frenching me... hard... taking charge while she wriggled around a little awkwardly until I realized she'd been taking off her pajama pants. And a moment later, the busty blonde broke our lip-lock so she could crawl over my head and straddle my face, presenting me with her bare-shaven pussy. \"No fucking,\" she stated evenly, and grinned before adding, \"Yet.\"\n\nAnd then she lowered herself down.\n\nI quickly grabbed onto Sam's ass and tilted my head forward to start devouring her snatch, determined to prove I could eat her out just as well as Zofi. My task was made more difficult a minute later, however, as I felt a mouth descend over my prick and start sucking away. I couldn't see who it was what with Sam's crotch filling my vision. And while I liked to think I'd started to discern between the different BTC girls by their particular blowjob styles, in my inebriated state every time my brain tried to start doing the calculations it just spun and whirred and crapped out, every coherent thought washed away by the next wave of pleasure.",
        "Sam noted my distracted state every time I stopped munching and furrowed my brow in concentration. The situation was made worse when my oral operative ceased operations and was swiftly replaced by a new technician. I couldn't decipher HER identity any better. I mean, maybe if Mari pulled a deep-throat or something I might've been able to figure it out, but then Mari started chuckling beside us, saying mirthfully, \"He looks like he's trying to figure out who's blowing him.\"\n\nI could practically see the lightbulb going off above Sam's head. She started snapping her fingers urgently at Mari. \"Hey-hey-hey. Does anybody have something we can use as a blindfold?\"\n\n****\n\nWhen I came on this trip, I had NOT expected to end up buck naked and seated in a dining table chair with Naimh's sleep mask over my eyes. And yet here I was. It was purple satin and trimmed in black, was quite soft and comfortable, utilized adjustable Velcro, and COMPLETELY blocked my vision. It was also quite big, shaped to come halfway down my cheeks and rise high enough to my hairline, and wrapped wide to almost cover my ears. Naimh said she didn't really use it at home that often, but had it for long plane flights and brought it on the trip in case she had trouble sleeping in a strange bed around so many other people.\n\nI had NOT been inclined to wear it.\n\n\"Trust me,\" Sam said encouragingly.\n\nI arched an eyebrow. \"Did you seriously just say that to me?\"\n\nSam blinked. \"What? Don't you trust me?\"\n\nI sighed and rolled my eyes. Everyone in the room knew this was happening, whether I liked it or not. At least they weren't tying me to the chair. Right after Naimh put the sleep mask on, she bent over and gave me a long, sweet kiss that ALMOST made me feel better about my situation, but not quite.\n\nSomeone else kissed me immediately after her, although I didn't know who until Belle said softly, \"Just think of it like the old days in your backyard by the pool, reclining in Matty's Chair while Sam dry humps your erection and shoves her big tits into your face, practically daring you to stick your tongue out and lick her nipple while knowing you never would. Trust us. Trust ME.\"\n\nI trusted Belle, nodded, and visibly relaxed. She gave me another quick kiss, and a moment later, I felt hands rubbing my chest.\n\nThen another pair started giving me a backrub.\n\nAnd another pair started rubbing my thighs.\n\nAnd someone else started stroking my dick.\n\nAnd someone else kissed my lips.\n\nFive different girls were all touching me at the very same time. Five different girls were all handling different parts of my naked body at the very same time.\n\nAnd I was too fucking drunk to have ANY idea who was doing WHAT.\n\nSomeone started sucking my cock. Ten seconds later, she gave herself away by swiftly dropping her lips all the way down to the base and massaging my rod with her throat muscles.\n\n\"Oh, Angel,\" I groaned.\n\nI heard a slap and somebody squawked, \"Mari!\"\n\nShe removed her mouth.\n\nSomebody else started blowing me, and I also got some fresh kisses. Meanwhile, whoever had been giving me a backrub reached around and tweaked my nipples. Deprived of my sense of sight, it felt like the other four senses had been heightened in compensation.\n\nOr maybe I was just drunk. One or the other.\n\nOne by one, the girls took turns sucking me. I had no idea of what order they went in, or even how many of them had gone. I had to assume only four of them were actually blowing me, since Zofi had yet to show any inclination to do so. But I didn't actually KNOW, and every now and again I found myself wondering, 'Is this it? Is this her? Is the tall, regal, exquisitely beautiful Zofia Zelazowska finally sucking my cock?' After a while, I started to imagine that ALL of them were Zofi, picturing her gorgeous face and bright blue eyes staring up at me while she orally pleasured me. I loved all of the girls and would of course had been happy for any of them to be my current fellatrix, but the idea of feeling a brand-new mouth wrapped around my prick was too enticing to shake free from my brain. Instead, the idea stuck and stayed and dominated my imagination.\n\nIt was a fantasy, of course, and an unlikely one at that. Besides, I remembered that Zofi had been wearing those dangling earrings, and while it was subtle, I could hear them tinkling every now and again like wind chimes. Truly, the tinkling never originated from my groin, but I could still fantasize.\n\nMeanwhile, Sam muttered from somewhere to my left. \"The chair was a stupid fucking idea.\"\n\n\"You told him to hold onto the legs to keep his hands from wandering,\" Belle reasoned.\n\n\"He's Matty,\" Sam insisted. \"If we tell him to keep his hands to himself, he'll keep his hands to himself. Let's lie him down on a bed.\"\n\nThirty seconds later, I found myself being led by the hand into a bedroom and onto the top of a bed. Now I could feel the weight of several girls crawling atop the mattress around me, moving without rhythm as they took turns sucking my cock, fondling my body, and as an added bonus for them, sitting on my face. The sleep mask covered my forehead, eyes, and the bridge of my nose, but I obviously still had a functioning mouth exposed and available for their use.\n\nI started identifying the girls by whether or not they were shaved. I knew that Belle, Sam, and Zofi had completely bare pussies. Mari and Naimh, on the other hand, were neatly trimmed. Also, there was no mistaking when Belle sat on my face; she was simply so much smaller and lighter than the others. Amongst the remaining two shaved girls, Sam and Zofi had significantly different derrieres: Sam the curvaceous one with junk in the trunk to match her Double-D bust, but Zofi the skinny one with a tight model's ass not quite in proportion with her big bosom. Mari and Naimh were a little harder to discern, and if they kept their weight off me so that I could only lap at their pussies, I wouldn't have been able to tell a thing, drunk or not. But all five of them would grunt and groan their way through orgasms, sitting down fully so I could feel their asscheeks pressing down into my neck and chest.\n\nThe thing is, while the girls would let each other sit on my face long enough to orgasm, they gave me no such consideration. I was kept rock hard by the succession of blowjobs, each one only lasting a minute or so, and sometimes less, before they moved on and were replaced. The end result was that I never got anywhere close to popping off. And it was starting to piss me off.\n\nBelle warned, \"His hands are getting twitchy.\"\n\n\"He's getting desperate to pop,\" Sam commented.\n\nMeanwhile, I had either Naimh or Mari on my face, which suggested that the other one was currently sucking my dick.\n\n\"Switch with me,\" Sam whispered quietly from somewhere down near my groin, but obviously not quietly enough if she didn't want me to hear. A moment later, my current fellatrix pulled off and was replaced by Sam's mouth. She fucked her face on me a few times, pushed herself down to within an inch of a deep-throat but no further, and even sat up to wrap her big hooters around my dick. But while she kept working me for more than a minute, she didn't get me off, either.\n\nSomeone else took over, probably either Naimh or Mari because she also gave me a pretty plush titty fuck along the way. But while I started getting close, she didn't bring me off either.\n\nA third mouth wrapped around my dick, different enough from the first two. She spent some time suckling on the head while using her hand to pump up and down. There was something familiar and yet very different about the hand pumping, but just when I started to key in on that, she let go and started bobbing her face up and down instead.\n\nThe first two blowjob artists had primed me with four or five minutes of intense oral stimulation, plus the always favorite titfucking. It felt to me like the girls were perhaps playing a game of Russian Roulette at this point, working me for two minutes straight before someone stopped the timer and they had to switch, just to see who would get my load when I finally went off. Settling for this explanation as the reasonably likely, I tried to estimate just how long it had been since she'd started, and guessed it was getting close to two minutes.\n\nAnd then a sudden thought hit me.\n\n\"Take off the sleep mask,\" Belle suggested. \"THAT will make him pop for sure.\"\n\nEager as I was to get the mask off, something had already crackled into my brain like a lightning bolt. Whoever was currently sucking my dick had gone back to pumping me with her hand, and I'd suddenly realized...\n\n... she was LEFT-HANDED.\n\nThe sleep mask came off, and my head jerked down to stare in absolute astonishment at the sight of Zofi's sparkling blue eyes staring back at me. Her pretty face and perfect cheekbones were somehow even more beautiful than ever with a mouth stretched wide around my cock, and she actually smiled around my meat to see the expression I was giving her right then.\n\nShe'd also taken off the dangling earrings at some point.\n\nMeanwhile, her left hand didn't stop pumping, and I felt my balls boiling from the mental high of seeing my fantasy come to life. Sam chose that moment to lean down and husk into my ear, \"How do you want her? Should I tell her to swallow it? You wanna cum all over that exquisite face? Or maybe blast all over her tits the way you always do to us?\"\n\n\"Yessss...\" I hissed in response, and then groaned as I felt the dam burst. \"Eeeyarrrghhh!!!\"\n\nZofi flinched as she felt the first shot splatter against the back of her mouth, and then the second. She quickly pulled me out of her mouth and took the next three shots straight into her face, one of them painting across her forehead while the other two squirted ribbons along her nose and down her chin. With me lying down, my remaining spurts didn't have enough power to splatter her tits, but no matter. Zofi's left hand kept pumping my cum out all over her hand like a leaking volcano\n\nAfter I had finished erupting, Zofi reached up and deliberately smeared my jizz all over both of her breasts before sitting back on her heels. With a smirk, the cum-covered cutie cocked her head, spread her arms out, and declared, \"Come and get it, bitches.\"\n\nBelle, Sam, and Naimh ALL jumped at her at once, Belle slurping cum off Zofi's right breast, Sam suckling at Zofi's left boob, and Naimh dragging her tongue all over Zofi's face before grabbing the brunette's head and jamming her cum-soaked tongue into the other girl's mouth.\n\nAnd that was just my FIRST ejaculation of the trip.\n\n****\n\nThe night was still young, but everyone was pretty wiped out. The alcohol consumption was starting to make everyone drowsy, as had the multiple orgasms for the girls. Also, we'd planned to go skiing the next day, which meant an early wakeup to get to the ski resort before it got crazy. Zofi went to take a shower to clean off the spit and semen still drying on her body, but Sam headed straight into the other bedroom they shared. Naimh would be up in the loft. And Belle and Mari would be bedding down with me tonight.\n\nNobody expected the three of us to be going to sleep immediately, but Mari closed the door behind her to give us some privacy. Even so, sex could wait a bit. I needed to recharge, for one thing, and the three of us wanted to cuddle and enjoy the bliss of (A) being on vacation without a chaperone, and (B) sleeping overnight on a king-size bed together.\n\nI found myself reclining against the headboard with a pillow propping up my lower back. Belle laid her head on my right shoulder and cuddled up against my side. Mari set her head on my chest, humming happily as she murmured, \"I love listening to your heartbeat. It's so soothing.\"\n\nThe three of us were still gloriously naked, and if we fell asleep naked, that would be another first for me.\n\n\"We did make a script for this situation, right?\" Belle asked Mari. \"I know neither of us was expecting to USE the script when we woke up this morning, but we do HAVE one, don't we?\"\n\n\"I don't remember it all right now,\" Mari sighed with her eyes closed, rubbing my belly. \"Just that it ends with you falling asleep with his cum in your pussy and then waking him up in the morning with a blowjob.\"\n\nBelle made a face. \"That script needs a revision then because he'll leak out of me and make a wet spot. And besides, 'Matty's Cumslut' would rather fall asleep with protein in her belly.\" She giggled at the last part.\n\n\"What Belle wants, Belle gets,\" I assured her with an extra squeeze.\n\n\"Not lately, she doesn't,\" Mari muttered.\n\nI frowned and looked down at her. \"What does that mean?\"\n\n\"Mari...\" Belle warned.\n\nThe Latina under my left arm looked up at me and then back at her best friend. With a wince, she put her head back down on my chest, muttering, \"Nothing...\"\n\nBelle sighed at the look on my face. Clearly, I wasn't convinced it was 'nothing', and she reached over and lightly bopped her friend on the head. \"Great, now you've got him all curious.\"\n\n\"Sorry!\" Mari whimpered, looking genuinely contrite.\n\n\"Is there something I should be curious about?\" I asked gently.\n\n\"It's nothing, really,\" Belle tried to say, unconvincingly.\n\n\"B...\"\n\nBelle rolled her eyes and bopped Mari on the head again. \"Go give him a blowjob and distract him.\"\n\n\"Oooh, yay!\" Mari enthused, but I squeezed her tightly and prevented her from getting off my chest.\n\n\"Belle...\" I intoned.\n\n\"It's nothing, I'm serious.\"\n\n\"Then if it's nothing, you can tell me. Otherwise I'll ask Mari.\"\n\n\"She's my best friend. She won't spill my secrets.\"\n\n'Wanna bet?' I didn't say. Arching an eyebrow, I actually said, \"Well, I'll withhold sex from her until she tells me.\"\n\n\"Matty!\" Mari exclaimed unhappily.\n\n\"I'm joking,\" I told her.\n\n\"It's NOTHING,\" Belle insisted.\n\n\"Well now it's clearly turning into a great big SOMETHING,\" I grumbled with a sigh.\n\nBelle bit her lip, but Mari explained, \"She's been whining to me about how you two don't spend as much time together anymore.\"\n\n\"MARI!\" Belle howled.\n\n\"What? Not like he doesn't already know.\"\n\nI sighed and said gently, \"Yes, I already knew. Well, not that you've been whining to Mari about it, but I could tell you wished we had more time alone.\"\n\nMari offered, \"You know, I can sleep out in the living room.\"\n\n\"What? No, of course not,\" Belle said immediately. \"This is YOUR first chance to sleep in bed with him overnight, too.\"\n\n\"But you've been dreaming of this moment for years,\" Mari countered, \"and I'm pretty sure having me on the other side of him wasn't in the script.\"\n\n\"Yeah, well, not everything goes exactly the way you imagined it.\"\n\n\"THAT'S for sure.\"\n\n\"But that doesn't mean I'm not going to enjoy it for what it is,\" Belle insisted. \"That's life: Accept what is, what has to be, and don't get your panties in a twist about the rest.\"\n\n\"But it still BUGS you.\"\n\n\"Of course it does.\"\n\n\"Then why don't you do something about it?\"\n\n\"Because.\"\n\n\"Because what?\"\n\n\"Oh we are NOT having this conversation again.\"\n\n\"But he's RIGHT HERE.\"\n\n\"And you're messing up my script right now!\"\n\n\"Which is why I offered to go sleep outside!\"\n\nI piped up, \"Can I say something?\"\n\nBoth girls turned to me to deliver in stereo, \"NO!\"\n\nI shut up.\n\nBelle sat up, brushed her bangs back from her eyes, and tucked them behind her ears. On the other side of me, Mari sat up as well. My eyes ping-ponged back and forth between the girls, briefly dropping down to ogle their naked breasts before forcing myself to concentrate on their faces.\n\nNeither of them spoke for a minute, both of them frowning and pondering their next words. I was still not completely sure about what was going on, and unable to keep it in, I finally looked at Belle and began, \"I'm sorry if it feels like I've been too busy for you lately. There's just so much going on right now and--\"\n\n\"Please don't apologize,\" she cut me off. \"I am fully aware that I still get more alone time with you than anyone else.\"\n\nI raised both eyebrows. \"But it's still less than we used to have.\"\n\n\"Not really. I mean, I went over the math and nothing's really changed. Every weekday the girls go home before dinner and I get you all to myself until after the meal. We're actually spending MORE Saturdays together than we used to. Truly, I have nothing to complain about.\"\n\n\"Then why does it sound like you're complaining?\"\n\n\"Because there's a finite amount of Matty to go around,\" Mari interjected, \"and while she used to get like eighty percent of you, now it feels like she's getting twenty percent.\"\n\n\"It's not twenty percent,\" Belle insisted.\n\nMari shrugged. \"Fifty? Forty? Either way, it's not eighty anymore.\"\n\n\"Even if it's fifty, by definition that's still more than anybody else gets,\" Belle reasoned.\n\n\"But it still feels like you're going backwards. You said so yourself.\"\n\n\"We are NOT having this conversation again.\" Belle folded her arms across her chest, took a deep breath, and turned to face me. \"I love you, Matty, that's no secret. And I love the time we spend together. Do I wish I could spend all day with you every day? Absolutely. Do I have a problem sharing you with our friends? Absolutely NOT. Like tonight. Tonight was amazing!\"\n\n\"Even though you barely got to play with him?\" Mari asked. \"Are you saying you wouldn't have rather had him all to yourself?\"\n\nBelle's eyes narrowed. \"I think you're trying to use ME as a proxy to complain that YOU'D rather have him all to yourself.\"\n\n\"Hey this isn't about me!\" Mari suddenly got defensive.\n\nBelle shook her head and turned back to me, explaining, \"Look, on Wednesday night after seeing Sam's Escalade parked in your driveway, I laid in bed thinking about how Sam most likely had her long legs in the air screaming bloody murder while you sawed your big dick in and out of her slutty cunt. Yes I'll admit that I rubbed myself while wishing it could be me instead. But the reality is that I never visited you on random Wednesday nights BEFORE, so I had no right to be jealous of time that was never mine to begin with in the first place.\"\n\nI raised my eyebrows at the imagery she'd just put into my head.\n\n\"On the other hand,\" Belle continued. \"Tonight was AMAZING. I had soooo much fun. We've established by now I'm a total voyeur. I REALLY get off watching all the shit the girls do to you. And to have all five of us crawling all over you while you were blindfolded? I came soooo many times today. I even let Zofi finally go down on me.\"\n\n\"Wait, WHAT?!?\" I bolted upright.\n\nMari started giggling, covering her mouth with one hand. The vibrations did wonderful things to her tits.\n\nBelle grinned and let her tongue trail out across your lips. \"If you're lucky, the next time she does it you won't have a sleep mask on your face.\"\n\nMy eyes were BIG.\n\n\"Ooh, look,\" Mari pointed out. \"He's getting hard again.\"\n\n\"Start sucking him,\" Belle ordered.\n\n\"Yes, sir. Thank you, sir!\" Mari actually saluted and bent over my lap. The next thing I knew, I had a warm, wet mouth around my dick.\n\n\"The romantic in me that grew up watching Disney princess movies wishes you and I could climb into a pumpkin carriage and ride off into the sunset,\" Belle continued. \"But the real me would rather pack that carriage with naked girls and have a big orgy in there on the way to the honeymoon, you know? And while the romantic dreamer lies in bed masturbating to thoughts of taking Sam's place on a Wednesday night, the horny slut wishes she could come watch.\"\n\n\"Then come watch,\" I breathed, my heartbeat accelerating. \"Pretty sure Sam wouldn't mind in the least, especially if 'Matty's Cumslut' sucked out the creampie afterward.\"\n\n\"Mmm... I need you to leave a creampie in Mari now so I can suck it out.\"\n\nMari picked her head up. \"Wait, what?\"\n\nBelle giggled. \"C'mon, bestie. You know you're curious. I saw you rubbing yourself yesterday when I sucked one out of Sam.\"",
        "\"I...\"\n\n\"Fuck her, Matty. Take her now. Don't fucking wait for an invitation, don't wait for her to mount herself on you. Don't fucking ask permission for once. Just grab her and roll her over and slam that fucking sausage dick into her and--\"\n\n\"AAAAAAUUUUUGGGGHHHH!!!\" Mari wailed as I suddenly filled her snatch with man meat, having done exactly as Belle instructed.\n\nBelle giggled. \"Bet all the other girls heard that. These walls seem pretty thin.\"\n\n\"Matty... Matty... Matty...\" Mari moaned, eyes rolling up into her head as I pounded into her over and again. At first, she tried to hold onto my shoulders but after a minute, she let her arms fall back limply as she simply absorbed the pounding I was giving her. I had no idea how many times she'd cum on my face during the whole sleep mask thing, but she was SUPER wet and I was able to get up to full-speed almost instantly, with minimal friction despite her still snug channel. And planting my hands flat to either side of her, I extended my arms and locked my elbows so I could really piledrive my way into her plush body and watch those big boobies bouncing all over the place.\n\n\"Soooo fucking hot,\" Belle breathed, rubbing herself beside me. \"You're such a fucking stud, Matty. You have no idea how proud I am of you. Satisfying four horny sluts all week and still coming back for more? I know I whined to Mari a little bit about not feeling as intimately close to you the way we used to be. But that's okay. We don't have as much time to just sit around talking when we're done with our homework because you're fucking my friends so much! And that's AWESOME. Don't overblow the whole 'quality time with Belle' thing so much, alright? I have LOVED what we've been doing the last few weeks. I LOVE what we're doing right now.\"\n\n\"Matty!\" Mari squealed. \"Oh my lord. I'm cumming already! I'm cumming already. I... EEEEEE!!!\"\n\nMy angel clenched up and came around me, and I dropped back down to kiss her through her climax. At the same time, I also heard Belle squealing, \"So hot!!! I'm cumming too!!! Aaaaahhhhhh!!!\"\n\nMari moaned and clutched my head to hers while our tongues twisted together, and she flexed her legs tightly around my calves while bucking and shuddering beneath me. I rode her all throughout her orgasm, maximizing her pleasure. And she only stopped kissing me after the tidal waves had passed and her arms and legs went limp once more.\n\n\"Your turn,\" Mari sighed wearily, panting for breath. For a second, I thought she was talking to me, but then I noticed she was holding Belle's hand and squeezed it warmly.\n\n\"You can keep going,\" Belle wheezed as she came down from her own climactic high. \"We just got done talking about how much I like watching.\"\n\n\"Well I like watching, too,\" Mari retorted. \"What did you say earlier? Hey Matty, grab her and roll her over and slam that-- Hahahaha!\"\n\nBelle had shrieked as I abruptly grabbed her, rolled her onto her back, and slammed my dick all the way into my little lover's snatch in a single thrust.\n\nWell, no, I didn't. That had been the idea, at least, but FUCKING A Belle was so tight. I'd never been able to slam it all in at once before, and tonight would not be the first, either. At least she was copiously wet, having already frigged herself to an orgasm just now, and I never felt that peeling skin sensation as I steadily burrowed through her tightness to get deeper and deeper and deeper.\n\nBelle's mouth gaped open like a fish the whole way, and it seemed like she wasn't getting any oxygen. I could only imagine what it felt like for her tiny vaginal canal to be forcibly stretched inch by inch, my thick dick quite literally taking her breath away. But once I hit bottom and felt that tell-tale spongy impact of my cockhead against her cervical wall, she inhaled abruptly and started spasming in orgasm, just like that.\n\n\"Shit, B, did you cum just from that?\" Mari swore.\n\n\"Fuuuuuck,\" Belle groaned gutturally, starting to breathe again as her neck and spine began to relax.\n\n\"Think you can do that again?\" Mari asked. \"Fuck me while she's jilling off and then make her cum just from your first thrust into her?\"\n\n\"Uh, I dunno.\"\n\nMari winked at me. \"Care to perform an experiment?\"\n\nI chuckled, took thirty seconds to withdraw completely from Belle (she was still TIGHT), and moved over to push myself back into Mari. Belle didn't mind. Her brain was still scrambled from that intense orgasm.\n\nBut eventually Belle woke up, realized I wasn't inside her, and looked over at us. She grinned and started rubbing herself again, not stopping until I made Mari cum on my cock once more. But this time when I pulled out and switched from the lush Latina to my petite \"little sister\", entry was a little easier but the result a lot less spectacular.\n\nDon't get me wrong, Belle still loved having me fuck her, but she didn't have a breathtaking orgasm on the first thrust, either.\n\n\"We should do this more often,\" Belle groaned while I pumped her steadily. \"Have you pull out and switch girls mid-fuck. Why have we NOT done this yet?\"\n\nI arched an eyebrow. \"Because you're all selfish bitches who want me to make them cum first?\"\n\nBoth girls giggled. \"You're probably right,\" Belle acknowledged. \"But I'm telling Sam this idea first thing in the morning.\"\n\nI frowned. \"Ugh, she's probably gonna make me wear the sleep mask again so I won't even know who I'm fucking.\"\n\n\"That's EXACTLY what I was thinking!\" Sam's voice suddenly rang out behind us.\n\nBelle, Mari, and I immediately froze and whipped our heads around to the doorway. Sam, Zofi, and Naimh all stood there in various stages of undress. Naimh had unbuttoned her pajama top and was currently fondling her left breast. Zofi stood immediately behind her, cupping Naimh's right breast with her dominant left hand reaching around and into Naimh's panties. And the brunette currently pulled her lips off Naimh's neck.\n\nI very much wanted a moment with the two of them together sooner than later.\n\nSam, on the other hand, stood against the wall, her pajama top dislodged a bit and her pajama pants down around mid-thigh to give herself easier access to make her fingers disappear.\n\n\"Uhhh, don't stop on our account,\" Naimh said apologetically. \"The walls are just thin and we couldn't sleep anyway.\"\n\nBelle giggled and started humping her hips against me. I looked down at her, glanced back at the other three, and finally returned my focus to the pixie currently skewered on my cock. She held me close and whispered into my ear, \"Let's give them a show. Make me cum one more time and then go fill Mari up with my creampie. Matty's Cumslut is hungry.\"\n\nI grinned and kissed her fiercely by way of answer.\n\nFive minutes later, I did as I'd been ordered. Belle gasped for breath in the aftermath of her orgasm but had her eyes firmly fixed on my clenching buttocks as I blasted wave after wave of creamy cum into the back of Mari's womb. Mari moaned. I groaned. And then I shivered just a little bit as a tingle went down my spine while squirting out the final few spurts into Mari's sucking snatch.\n\nI was pretty wiped out, and Mari's plush body just felt too good to leave immediately. She was like-minded, holding onto me in the afterglow while I set my forehead down against hers and grinned happily. But then Belle started tapping on my shoulder impatiently, and even whined, \"Hurry uh-uuup! I want my dessert!\"\n\nBut despite Belle's insistence, I focused on Mari's eyes. While Belle didn't know her secret, she HAD confided in me, and I had to make sure to my own satisfaction that she was ready for this and not feeling pressured into something she wasn't ready for. I stared down at her, asking with my eyes, 'Are you sure?'\n\nShe beamed up at me and pulled my face to hers for a sweet kiss before whispering into my ear, \"Thank you, but it's alright. I wanna try this.\"\n\nI pulled back far enough to see her nod at me, and then rolled off the lovely Latina's lush body to lie alongside her, scooping my left arm below her neck and setting my right arm across her midsection, my palm resting on her large breast. Mari draped her leg over mine, exposing her lewdly-stretched labia to the room full of her best friends, who all watched, intently, for the first drop of jism to leak out of her. The moment it appeared, Belle darted in like a barracuda hunting amidst a coral reef, loud and wet sucking sounds immediately emanating from her point of contact.\n\nMeanwhile, Mari had been staring straight at me, half-hiding her eyes behind her hands the way I'd often seen her do during the scary parts of movies. She squealed and her eyes got BIG the instant she first felt Belle's tongue touch her pussy, and she bit down on her left pinky nail. I held her in my arms while she alternated between staring goggle-eyed at me and staring goggle-eyed at Belle's head wriggling in her crotch. And while she didn't have an orgasm or anything by the time her best friend finished, she at least seemed to enjoy the experience.\n\nAnd THEN we all went to sleep.\n\n****\n\n-- CHAPTER 16: Tahoe II --\n\n****\n\nSomething tickled my balls, and with a start, I jerked awake.\n\n\"Mmph!\" somebody squeaked, promptly choked, and pulled away to start coughing.\n\nThe sound of a girl's anguish woke me up FAST, and I sat up to find out what had just happened. Belle was bent over, eyes bugged out and her tongue lolling out of her mouth as she pounded her chest and coughed violently to clear her throat.\n\n\"Oh, crap, Belle!\" I exclaimed. \"I'm sorry! What happened?\"\n\nShe held a hand up to me, palm out, while she dry-retched before coughing exactly twice more. After that, she started to catch her breath and begin gasping for air. A few seconds later, she managed to burble, \"That did NOT go the way I had planned.\"\n\n\"What happened?\" I asked again.\n\nMari, lying on her side facing away from me in the same position we'd been spooning in the night, mumbled without turning around or even opening her eyes. \"She wanted to wake you up with a blowjob, remember?\"\n\n\"Oh.\" Only then did I realize I must've unconsciously thrust upward, shoving my dick into Belle's throat when she wasn't prepared for it, hence the choking. I reached out to rub her spine. \"B, I'm sorry.\"\n\nShe shook her head and wiped tears from her eyes. \"Not your fault.\"\n\n\"C'mere. Let me make it up to you.\"\n\n\"Nuh-uh. I'm giving you a wake-up blowjob, and that's final.\" With that, she shoved my chest so that I fell back down, coughed once more, and then bent over my lap again. Soon, her lips and tongue bathed my prick in warm wetness, and I sighed while enjoying the oral love my beautiful little Annabelle chose to give me this morning.\n\nMari, meanwhile, rolled over sleepily and laid her head on my chest. She smacked her lips and hummed happily to once again be in direct contact with my skin. She had REALLY loved falling asleep with me spooned behind her, and I had loved it too. Her body was just made for spooning, her derriere nuzzling into my crotch like a puppy settling into her favorite pillow for a nap, and I'd fallen asleep cupping her big left breast in my right palm.\n\nBelle, on the other hand, had cuddled with me initially when I'd been on my back trying to hold both girls at the same time. But she just couldn't quite get comfortable, no matter how she adjusted herself. Finally, she ended up scooting away from us to have her own space and eventually nodded off on her own, freeing me to roll over and curl up with Mari instead. Combined with her interrupted morning blowjob, things certainly weren't going the way she'd dreamed.\n\nIn the end, though, I got to stroke my Annabelle's hair while she gazed at me adoringly with those pretty, pale green eyes while her face bobbed up and down my shaft. And even though I was barely touching her (nor was she touching herself), she looked like she had a mini-orgasm at the first taste of my cum gushing into her mouth.\n\nEventually we were all roused awake. Actually, Sam orgasmically screaming her bloody head off woke up the rest of the house; that girl seriously could not be quiet. Mari and Naimh started making breakfast for everyone, we got changed into our ski gear, and then headed out to the slopes.\n\nFor a so-called \"ski trip\", the actual skiing activities weren't particularly memorable in comparison to everything else we'd done on the trip. Nobody was a complete novice, as most of us had been to Tahoe with our families somewhat regularly over the years, and even Naimh had skied once on a family vacation in Europe. At first, the six of us stayed together and warmed up on the bunny slopes. Sam and Zofi naturally paired up, as did Belle and Mari. Naimh was only too happy to wrap herself around my arm and make out on the chairlift.\n\nThe gorgeous redhead was absolutely stunning. Her dark blue jumpsuit fit her like a glove, especially when she got the zipper over her sizeable chest. She kept the furry hood up for warmth, even over her cute beanie, but let her long red locks hang out through the front. But when we got back in line to take another ride up the mountain, she pulled her sunglasses above her forehead, dropped the hood, and wrapped her arms around my neck for a tongue-filled kiss. We heard a wolf-whistle a second later, and I glanced back to see a couple of guys flashing \"shaka\" signs at me.\n\n\"Dude, your girlfriend is smokin' HOT,\" one of them complimented.\n\nRather than correct him, I smirked and replied, \"I know.\" And then I went right back to making out with my 'girlfriend'. The four girls of the BTC were just in front of us, and they glanced back giggling.\n\nBut as nice as it was to be paired up with Naimh, we separated after the first two runs. She was the least-experienced skier of all of us, and while I'd shepherded her through those first trips down the mountain, I was itching to challenge myself on the more difficult runs.\n\nSo we split into two groups of three: Naimh, Mari, and Zofi would stay on the easier slopes while Sam, Belle, and I took the Mountain Express all the way up.\n\nSam took over Naimh's \"girlfriend\" role immediately. She wrapped herself around my arm, made out with me on the chairlifts, and generally stuck to my side like there was a physical tether attached to our waists. She was a GOOD skier, probably even better than me, but she had me take the lead and followed to make sure she never got ahead of me. If I fell, she'd pull up next to me and wait. If she fell, which she only rarely did, she'd catch up to me pretty quickly. And every now and again we'd both pull over to the side and wait for Belle to catch up to us.\n\nDuring those moments, Sam was quick to move in close, wrap her arms around me, and start a new makeout session. One time, we did so underneath a chairlift. And lo and behold, the \"shaka\" guys were passing overhead.\n\n\"DUDE! You've got TWO smokin' hot girlfriends?\" Shaka One called out.\n\n\"Wait, does the redhead know about the blonde?\" Shaka Two asked.\n\n\"Dude, does the blonde know about the redhead?!?\"\n\n\"Shit man, what if we just busted him? Sorry, bro!!!\" Shaka Two yelled backwards as the chairlift kept pulling them higher up the mountain.\n\nSam and I had a good laugh about that.\n\nIf Belle minded all the attention Sam was giving me, she didn't show it. Still, she happily accepted kisses going up the next chairlift when I decided I needed to pay her more attention as well. But as we got halfway back up the mountain, she pulled me close, whispered, \"Let Sam have this today. Go back to her.\"\n\n\"What about you?\" I asked softly.\n\n\"I'm still satisfied from breakfast,\" she replied, with an eye waggle that told me she wasn't talking about Mari's instant pancakes. And she promptly turned me around so I could make out with Sam instead.\n\nSam was more than happy to have me back.\n\nThe group rendezvoused for lunch, overpriced burgers and chili fries not feeling so expensive when you considered that we weren't paying for the cabin. When it was time to hit the slopes again, though, Belle surprised us by saying she was going to rejoin the other group.\n\n\"What?\" I gave her a look, silently asking if me kissing Sam so much was making her feel like a third wheel. Belle gave me a mysterious smile, shrugged, and explained, \"It's clear that I can't keep up with you two. I know you're itching to just smoke a black diamond, Matty.\"\n\nZofi frowned, looked thoughtful, and commented, \"There's a euphemism somewhere in there, I just know it.\"\n\nThe girls laughed, and soon we were on our way.\n\nFifteen minutes later, Sam and I wound up in the boonies at the top of a run serviced by a single old and creaky two-person chairlift. This far away from the main runs, the area was the exact opposite of crowded and full of fresh powder. We stood all alone atop the crest of a small hill, taking in the breathtaking view of the snowcapped scenery with the deep blue water of Lake Tahoe in the distance. For a moment, it felt like we were the only two people in the world.\n\nThe wind picked up and blew through Sam's long platinum-blonde hair spilling out the back of her cute beanie, and she looked unimaginably gorgeous as she glanced back at me over her shoulder with a twinkle in her eye. \"Last one down is a rotten egg?\" she teased, taking hold of her ski goggles and pulling them down over her eyes. \"One-two-three-GO!!!\"\n\n\"Hey, that's cheating!\" I squawked as she tore off down the mountain. I quickly dropped my own ski goggles and tore off after her.\n\nDespite the challenge, Sam actually pulled up a few hundred yards down. I pulled up alongside her, and we briefly talked about how to attack the run, miming turns with our hands. In the end, that first run was a bit exploratory. Sam and I skied through a little conservatively to make sure there weren't any big surprises that might wipe us out. The second run we took at full speed, each of us crashing more than once but having a great time while doing so.\n\nThe third run blew my mind.\n\nWell... not exactly my MIND.\n\nSam told me she wanted to lead, and I was perfectly amenable to letting her. She set a blistering pace on the top half of the run, but crashed her landing after jumping a cornice. I was moving so fast after my own landing that I couldn't stop until I was a good twenty yards further downhill.\n\nRather than ski down to continue her run or even just join me, Sam instead skied off the trail and into the trees nearby. I was worried that she was hurt, so I stepped out of my skis and carried them with me as I traversed the hill at a slight angle, heading for her position. For some reason she'd disappeared from view.\n\nBelle had worn a hot pink snowsuit which made it easy to spot her wherever she went, but Sam was clad in all black, which really made her platinum blonde hair stand out. The suit blended into the shadows of the trees, however, and while the tree trunks themselves were reasonably spaced apart, you couldn't see more than three rows into them before the overlapping trunks and branches blocked one's view.\n\n\"Sam?\" I called, a little confused.\n\n\"I'm over here,\" she called back, not too far away.\n\n\"Are you hurt?\" I asked in concern.\n\n\"No, I'm fine. Just come over here.\"\n\n\"What's going on?\"\n\nShe giggled. \"You'll see.\"\n\nI kept walking and spotted the track marks of her skis. Following them another three rows of trees into the forest, I came to a stop when I saw that she'd taken them off and set them aside. And that's when she stepped around the side of a particularly large tree trunk, put her hands on her hips, and grinned at me.\n\nSam's snow jacket was open throat to tails. Her vest had been unzipped throat to tails too. And she'd pulled both her thermal undershirt AND sports bra up around her neck. In short, Sam's big boobies were out in the open and her nipples were rock hard in the cold. I could even see goose bumps on her skin.",
        "\"Come warm me up?\" she asked coquettishly.\n\n\"Are you serious?\" I gaped.\n\n\"Matty, stop thinking and come HERE,\" she stated a little more urgently. \"I'm getting COLD.\"\n\nI quickly hurried up to her, bit my glove fingers to help rip them off, and promptly planted my hands right on top of her naked breasts. She shivered but smiled as I started fondling to my heart's content, knowing that my warm sweaty hands had to feel much better than the cold mountain air.\n\nAt the same time, she pulled my face to hers for a frenzied kiss, and we made out like that for a minute or two. Neither of us had taken our ski goggles off, so the chunky things bonked into each other now and again. And after I had enjoyed her tits for a while, I yanked down her sports bra and thermal, saying, \"As much as I loved that, I don't want to risk you getting frostbite on your nipples.\"\n\nSam giggled and started zipping her vest. \"Drop your pants,\" she said matter-of-factly.\n\n\"Excuse me?\"\n\nSam gave me an 'I think you heard me' look. She was used to me obeying her directives.\n\nBlinking, I dropped trou, looked around rather awkwardly to make sure we were completely out of view, and then backed up to the tree trunk, making sure I was on the exact opposite side from the trail.\n\nWhile the air had made her tits cold, it practically froze my balls in less than two seconds. Fortunately for me, Sam didn't leave me hanging (literally) for long. She squatted before me, and without the use of her ice-crusted gloved hands, she leaned forward, slurped my cold and mostly-limp penis into her mouth, and started going to work.\n\nOnce inside the warm confines of Sam's mouth, my dick rose quickly. Within a minute, she was bobbing her head back and forth along my elongated shaft instead of just suckling the whole thing, and the repetitive contrast between hot mouth and frigid air was definitely a new experience.\n\nI didn't hold back, not wanting to prolong the amount of time we were exposed out here. It was cold and even though not many people came down this way, I didn't want to get caught with my pants down (literally). Clearly, Sam wanted the thrill of giving me a blowjob out here by a ski trail, and lasting any longer than two minutes wouldn't necessarily make for a better experience. Her lips were cold but her mouth was hot, and the view was even hotter. For some damn reason, Sam didn't even take off her fucking ski goggles, and the sight of her flowing platinum blonde locks draping down from her cute beanie, with her eyes still covered by the goggles, was certainly unique, if nothing else. At least the lens wasn't mirrored, so I could still see her eyes.\n\n\"Oh, you're so fucking hot,\" I groaned when she took me as far as she could go and sucked powerfully. Thankfully, she wasn't testing her gag reflex trying to deep-throat me, instead blowing me for maximum pleasure right from the jump. Her full lips were a tight seal of pleasure, a shield containing warm ecstasy against the cold air, and when she stuck her tongue out and managed to tease my balls, I grunted, tensed up, and came.\n\nSam pulled back until only my cockhead was still in her mouth. She visibly flinched when the first shot impacted the roof of her mouth, but she swallowed quickly and bent forward, drinking down everything else I could give her. My vision swam, my legs turned to jello, and only the threat of my bare ass landing in the snow made me keep upright. Finally, I finished spurting, and Sam had consumed every last drop.\n\nPerky and energized, the beautiful blonde snow bunny popped up and grinned at me. \"Love you!\"\n\nWith a silly grin, I replied, \"Love you, too.\"\n\nBeaming proudly, Sam kissed me quickly, pulled her gaiter over her mouth and nose, and then helped me get my pants back up. I was still gloveless, although I'd tucked my hands inside the sleeves like a turtle head pulling back into its shell during the blowjob, so it was easy for me to get fastened up again. But she still got back into her skis before I did, and after flashing me a wink, she called, \"Last one down is a rotten egg! For real this time!!!\"\n\nAnd then she tore off down the mountain.\n\n****\n\n\"Really? Behind a fucking tree?\" Naimh exclaimed in amazement. She was wrapped around my left arm on the couch back in our cabin as Sam regaled everyone with the story of her blowjob on the mountain.\n\n\"My butt was freezing by the end of it,\" I muttered with a bit of a scowl as I took a drink from my tumbler, but chuckled and grinned afterward.\n\n\"Bet you loved every second of it,\" Belle drawled with a laugh.\n\n\"Definitely a first for me,\" I agreed. \"Especially since Sam kept her goggles on the whole time.\"\n\n\"You mean?\" Zofi asked in confusion, but then aped having goggles on her face with both hands over her eyes while miming a forward and back head bobbing motion with her mouth in an 'O' shape.\n\nMari laughed so hard she tipped over onto Belle's lap and didn't immediately come back up.\n\nNaimh raised her glass in a toast to Sam. \"You've got an imagination, I'll give you that.\"\n\nSam saluted back and took a sip of her drink. After that, though, the room lapsed into silence. It had been a long day on the mountain, and we were all pretty tired. The alcohol wasn't giving us any energy. If anything, Mari looked rather sleepy drunk, and even Sam was dragging quite a bit.\n\n\"A question for everyone,\" I began several decibels louder than normal conversation. Bleary-eyed Mari looked like she had to wake up just to pay attention. \"Did everyone get in enough skiing today? And by that I mean: Do we really need to go back tomorrow?\"\n\nBelle leaned forward and dropped her elbows onto her knees. \"What are you suggesting?\"\n\nI shrugged. \"I'm suggesting we skip going back to the mountain tomorrow and just sleep in.\"\n\nSam frowned. \"Kind of a wasted opportunity being up here and all. We all came here to ski, didn't we?\"\n\nNaimh licked her lips and snuggled in tighter to me. \"You may have come here to ski. I just came to be with my friends.\" She emphasized the last word by pecking my cheek.\n\nMari giggled and said to Sam, \"You just want to go skiing again because you're the only one who can keep up with him on the slopes.\"\n\n\"No, no,\" Sam said defensively, holding up a hand palm out. \"Not the motive, I promise. But if we don't take advantage of being up in the snow, what else are we gonna do?\"\n\n\"We can still get out and enjoy the snow,\" I reasoned and pointed to my left. \"The beach is a few blocks that way, and it's a snowy beach probably well-suited to building snowmen and taking pictures. The cabin has a big shovel and a foam sled, so we can drive up into the hills a bit and see if we can't find a nice place to build a sledding run. Those are the sorts of things we can all do together as a group.\"\n\n\"NOW you're talking.\" Zofi plopped her wine glass onto the coffee table. \"No more feeling like a cow on ice trying to ski.\"\n\nI blinked and let my eyes run up and down Zofi's svelte body. \"Nobody would EVER call you a cow.\"\n\nZofi blushed and smiled coyly at me.\n\nNaimh raised her hand. \"I vote sleep in and build a snowman tomorrow.\"\n\nMari's hand shot up. \"I vote sleep in no matter what we do after!\"\n\nBelle shrugged. \"I'm good whichever way, actually.\"\n\nZofi raised her hand. \"I vote NOT skiing tomorrow.\"\n\nSam raised her hand too. \"I'm good with not skiing actually. Matty and I covered the whole mountain. And I think I've got bruises on top of bruises. Ugh.\"\n\nI sat up straight and offered, \"Backrub?\"\n\n\"OOH, yes please.\" Sam raised her other hand, drink tumbler and all, managing not to spill anything.\n\n\"I call 'next'!\" Belle chirped.\n\n\"'Next'!\" Zofi called.\n\n\"Jus' lemme sleep,\" Mari moaned.\n\nI glanced back at Naimh, the only one who hadn't said anything. She gave me a mock innocent look and said, \"What? I'm spending the night with you tonight. I intend to get a LOT more than a backrub.\"\n\nThe girls laughed, and Sam got up rather gingerly from her armchair and started walking into the second bedroom, tugging at her sleeves along the way.\n\nI frowned. \"Where are you going?\"\n\n\"We're doing this on my bed,\" Sam stated wearily as she pulled her pajama top off entirely, leaving her completely topless.\n\nI chuckled, patted Naimh's knee, and went to follow her.\n\nTen minutes later, Sam had actually fallen asleep face-down across her mattress. She looked so peaceful, with a bit of a smile, utterly relaxed after a long day's exertion.\n\nBelle, who was going next, jerked a thumb back out of the room. \"Loft. Now. And you don't stop until I look like THAT, got it?\"\n\nI chuckled. \"Got it.\"\n\n****\n\nAfter ten minutes of steady massage, Belle conked out in the loft alongside Mari, who had fallen asleep on the bed beside us just watching me rub down her half-naked best friend.\n\nI then returned to the second bedroom to find Zofi waiting for me. She'd gotten Sam tucked underneath the covers, the blonde curled up on her side facing away from us, not quite snoring but making a rhythmic noise nonetheless. Zofi wasn't quite so exhausted that she fell asleep like the other two, but she was feeling quite relaxed AND satisfied after first getting a back massage and then asking me to slide her pajama shorts off and eat her to an orgasm. I'd been happy to throw her legs over my shoulders, suck her hard little clit into my mouth, and curl a finger inside her in a \"come hither\" gesture until she squeaked and came. Unlike her current bed partner, Zofi COULD keep quiet if she needed to.\n\nI was pretty rock hard by the end of that, but when she saw the tent in my pajama pants, Zofi just patted my bulge, saying, \"Save it for Neevie.\"\n\nI looked down at her, remembering the sight of her lips wrapped around my prick from just last night.\n\nZofi seemed to sense what I was thinking, and she giggled, saying, \"I love it when you look at me like that. But seriously, save it. I promise last night won't be the last.\"\n\nSo it was that I returned to the master bedroom with a rather large erection. Naimh sat up in bed in her pastel purple pajamas, reading a book. She looked up at my arrival, her emerald-green eyes glittering as they zeroed in on my crotch. \"Is that for me?\"\n\n\"All for you tonight. Everyone but Zofi fell asleep.\"\n\n\"Happy Christmas to ME.\" The horny Irish redhead dropped the book onto the nightstand and beckoned me forward with both hands.\n\nI closed the door behind me for all the good it would do, if the walls were as thin as the girls had said. \"Let's try to keep it down tonight, huh? Let the others sleep?\"\n\nNaimh shrugged. \"No promises.\"\n\nI chuckled and approached while she tapped her chin speculatively, muttering, \"Kiss the boy first or suck his dick first? Decisions, decisions...\"\n\nI laughed, dropped myself onto the bed beside her, and opened my arms, making the decision for her. Naimh quickly rolled into my embrace, our lips meeting firmly but not hurriedly. I felt much the way I had whenever she came to my house alone, without all the other girls around. Just me and the most gorgeous thing I'd ever seen.\n\nHer tongue dived into my mouth like a hunting osprey while my fingers went to the buttons of her pajamas. I had loved the teasing glimpses of bare titflesh I got through the gaps of the too-tight material, but now I wanted the soft cotton GONE and out of my way. Meanwhile, Naimh's hand slipped into my pajamas so she could wrap her fingers around my hot and throbbing shaft. We made out like the pair of horny teenagers we were, and once I divested her of the pajama top, I ripped my own shirt over my head so I could feel her big 34DD tits pressed up against my bare chest.\n\nAt the same time, I slipped my hands into the back of Naimh's bottoms and palmed her buttcheeks with both hands. She moaned into our kiss, let go of my dick, and settled her crotch over my rod so she could start dry-humping me. A second later she broke the kiss, moaned, \"I can't wait. I need you in me. Now!\"\n\nI nodded since that sounded like a great idea to me, and she abruptly rolled off me so she could yank down her pajama bottoms and panties. I was doing the same, and five seconds later, she climbed right back on top of me in the same position she'd just been in, only this time there was absolutely nothing between her neatly-trimmed pussy and my rock hard dick.\n\nI can't term what she did next as \"dry-humping\", since the horny redhead's pussy was juicing out of control and literally painting my rod with lubrication. But she only did that three or four times before snaking her hand between us, elevating my cock, and notching it into place. Then after putting both hands on my shoulders, she picked her head up, closed her eyes, and crooned in rapture as she slowly backed up, filling herself with Matty-dick in one slow, prolonged movement.\n\nAnd then she rested. Naimh had never seemed quite as tired as the other girls. Perhaps she had more endurance than them, or perhaps she simply hadn't exerted herself as much as they had. Perhaps she'd been conserving energy knowing that tonight was her night alone with me. But that didn't mean she was bright-eyed and bushy tailed. We were both a little worn down from a long day on the slopes, and for a long while we simply rested like that, Naimh cooing happily as she relaxed atop my chest while skewered on my cock.\n\n\"I wish I could do this every day with you,\" she muttered softly, her Irish lilt intoxicating. \"Lying here... naked... feeling you so deep inside me. It's... incredibly fulfilling.\"\n\n\"I wish that too.\"\n\n\"Is this what it would've been like as your girlfriend?\" she asked quietly. \"Cuddling close. Nobody else around. Falling asleep in your arms? I get the impression your mam wouldn't mind you having a girlfriend sleep overnight. I mean, she's letting all of us have three nights with you.\"\n\n\"You're probably right.\"\n\n\"Would that be okay with you? Even after we go home? Can I have more nights like this? Just the two of us, together, the way we should've been months ago?\"\n\nI turned my face to look at her. She was tall enough that her face was more or less at my level on the pillow, even while skewered. Her emerald-green eyes sparkled as she stared intently into mine, and with the waves of her brilliant red hair cascading around her face in the dim light of the lamp on the nightstand, I couldn't help but mutter, \"Good fucking lord you're so beautiful.\"\n\nNaimh grinned, showing off sparkling teeth as she kissed me quickly. But she pulled back a second later and said, \"You didn't answer my question.\"\n\nIt took me a moment to remember, but I finally replied, \"Yes, I would love that, actually. But...\" My voice trailed off.\n\n\"I wouldn't hide it from the girls, if that's what you're worried about.\"\n\nI shook my head. \"Wasn't worried about you hiding it. Neither of us would ever keep a secret from them. I'm just thinking about The Rule.\"\n\n\"Everything in balance?\" Naimh shrugged. \"I'd be perfectly fine with letting the others have overnights with you, so long as -I- get overnights with you. I'm not asking for much. Just one night a week, perhaps? One night to fantasize I'm the girlfriend we both always wanted me to be? Like tonight?\"\n\n\"Is that what you want?\"\n\nNaimh nodded. \"I'll never betray the BTC. I promise you that. I will never do anything to take you away from them. I'll do whatever I can to help bring Alice back to us. But...\" Now it was her turn for her voice to trail off.\n\nI brushed her hair back from her face and gave her a quick peck on the nose. She closed her eyes, and I was surprised to see a tear rolling down her cheek. But before I could say something about it, she opened her eyes and spoke again.\n\n\"I love you, Matty. I've been in love with you forever. It breaks my heart that I can't have you. But...\"\n\n\"Shhh...\" I soothed her and kissed her quietly, keeping my lips firmly pressed to hers until she stopped shuddering and calmed down. Only when she finally began kissing me back with greater intensity did I break away and look her straight in the eyes.\n\n\"One night,\" I told her. \"Tonight, it's just you and me. You're my girlfriend, and I love you. I'm not taking the BTC away. Our friends are still our friends. But for tonight, right now, there's nobody else here but you and me, okay?\"\n\nShe started crying then. \"I'm your girlfriend? You're my boyfriend? And you love me?\"\n\nI nodded and kissed her quickly. \"I love you, girlfriend. Now will you please make love to me?\"\n\nTears streaming down her face, Naimh shook her head in the negative, grabbed my head, and seared my lips with a kiss so hot I was surprised I didn't catch on fire. She broke away just as suddenly, growling, \"No. I'm gonna fuck the hell out of you!\"\n\nAs it turned out, it was the other way around.\n\n****\n\nShe didn't \"keep it down\". I'm pretty sure Naimh woke up the whole cabin, actually. But unlike last night with Belle and Mari, nobody came to the door to watch. The others left us alone.\n\nWe started by making out while she ground her clit down against my pelvic bone, but once she got heated up she started riding me roughly, trying to \"fuck the hell out of me\" as it were. She planted her hands on my chest and really humped her body up and down, clenching her inner muscles for my pleasure. I started making sucking faces then, and with a laugh the busty redhead bent over so I could grab onto her big tits and slobber all over them.\n\nI wanted to pound her then, so I rolled us over, wrapped her legs around my waist, and started pistoning in and out of her pussy at a rapid pace. She clutched my neck and crooned in my ear, and when my abs started to slow down, she husked, \"Fuck me deeper.\"\n\nSo I relocated her legs up and over my shoulders, bending the gorgeous girl in half beneath me so that I could take really long, powerful lunges. She grunted and groaned and moaned about how hard I was hammering her and how great it felt. And then she kissed me and whimpered, \"I love you so much.\"\n\nI kissed her back, fucked her even harder, and she tightened up and came, moaning her ecstasy into my mouth.\n\nThen it was my turn. She slipped her legs off my shoulders and grabbed them behind her knees, spreading herself open wide for me. \"Take me,\" she husked in a gravelly voice.\n\nSo I took her. I jackhammered the hell out of her, seeking my own release, until she abruptly opened her eyes and urged, \"In my mouth. Grab my head, fuck my face, and drown me with your sperm!\"\n\nWell, since she asked so nicely.\n\nI swiftly exited her sodden snatch, crawled up the bed, and straddled Naimh's chest. She stared up at me with an emerald glow in her irises as I took hold of her head behind her ears and fed her my dick. I tried pumping in and out a few inches but couldn't really get a rhythm. In the end, I just grabbed the top of the headboard and thrust back and forth, letting Naimh hold my hips to help control the depth while I fucked her face and listened in astonishment to the wet gagging sounds she made as I repeatedly invaded her throat. I tried stopping, just once, but she slapped my ass and forced her own face even deeper onto me. After that, I was so close to cumming that I just went with it.\n\n\"Fuck-fuck-fuck,\" I chanted as I ramped up to the edge. \"Fuck-fuck-fuck-HRRRK!\"\n\nI was there, slamming my dick forward one last time and letting the gates burst open. Naimh grabbed my ass and swallowed as fast as she could, which wasn't quite fast enough. She gagged at the very end and pulled off, the final few shots impacting against her cheek and running down her neck. But she didn't seem to mind, catching her breath quickly and scooping up what she'd spilled with a delicate finger before popping it into her mouth, humming happily.\n\n\"That was a good start,\" she said.\n\n\"Start?\" I asked, not understanding yet.\n\n\"It's my first night together with my boyfriend. You didn't think I was done with you yet, did you?\"",
        "The next thing I knew I was flat on my back across the mattress while she slowly bobbed her head up and down in my lap. The naked redhead knelt at a right angle to me, tickling my balls with her hand while her hot mouth worked to revive me. I reached out, rubbed the creamy white skin of her perfect ass, and slid a finger into her juicy pussy from behind. She wriggled a little at my touch but tried to focus on her oral technique. After a couple of minutes, though, I grabbed her leg and urged, \"Bring that ass over here.\"\n\nNaimh resisted at first, intent on her blowjob, but when she realized what I was doing, she let me guide her body into a sixty-nine position. She pulled her head off to moan the instant my tongue swiped through her wet labia. And even though she put her mouth back down around me, once I started to really go to work eating her out, her blowjob technique obviously started to suffer.\n\nWhimpering a little, Naimh pulled off and whined, \"You're distracting me.\"\n\n\"I'm already hard enough. I wanna get you off first,\" I muttered before diving back into my task.\n\nThe lusty, busty redhead put her forehead down on my thigh and moaned as lightning bolts of pleasure shot up her spine. She twitched and spasmed while my agile tongue wrapped around her clit. And after a minute, she put my dick back into her mouth, sucking on it like a pacifier while I pushed her up toward orgasm.\n\nShe was almost there when I impulsively pulled down on her ass and let my tongue swipe along her perineum and across her crinkled sphincter. Naimh screeched and clamped up in surprise. \"Matty!\" she exclaimed rather loudly, the tone in her voice rather positive.\n\nI chuckled and did it again, only this time I didn't stop. Remembering Mari's reactions, I kept going, licking her anus and even pushing my tongue inside.\n\n\"Eep! Matty! Matty! Ohmigawd! You're tonguing my ass!\"\n\n\"I noticed,\" I quipped and went back to giving her a rimjob. She was already so close to cumming before that it didn't take long for her to shudder and squeal as her climax rocked her body. And when she finally stopped shaking, I pushed her forward, slid myself out from beneath her body, and stepped off the side of the bed while yanking her butt back to me to put her in a doggy-style position on the bed.\n\n\"Matty, Matty, fuuuuuuuuuuccccckkk,\" Naimh whimpered as I swiftly re-buried my cock to the root. She was more in a frog-position, with her knees out to the sides and her chest pressed down on the mattress, lacking the energy to stay up on all fours. Still, I was able to grab her hips and angle them enough to start pounding her from behind while she closed her eyes, pressed her cheek into the sheets, and moaned while feeling each heavy impact of my pelvis against her ass.\n\n\"Fuuuuck meeeee...\" the gorgeous girl groaned. \"Fuuuuck meeeee...\"\n\nOn impulse, I reached out and spanked her right asscheek. Naimh squealed and shot up in surprise. \"Matty!\" Again, her surprised tone was quite positive, even delighted.\n\nSo I spanked her left asscheek. And then her right asscheek. And once I even slapped them both at the same time. The Irish redhead just got hotter and hotter every time I did that. She even reached back with both hands to grab her reddened cheeks and pulled them apart, spreading herself even more for my assault.\n\n\"Spank me! Spank your naughty girlfriend! Harder! More!\"\n\nThe thing is, her hands were now covering my prime spanking targets. So I grabbed both of her wrists and yanked them forward over the small of her back. I used my left hand to pin both wrists together, leaving her completely helpless to resist me having my way with her. And I swear Naimh got even HOTTER.\n\nShe started screaming in ecstasy while I rutted in and out of her cunt from behind. There were no coherent words, just howls and shrieks mixed with squeals and even a little crying. It was everything I had fantasized about during all those months masturbating to dreams of fucking the hell out of the most gorgeous thing I had ever seen, and she was LOVING IT. She must've cum three times from that round alone.\n\nIn the end, I pinned her wrists down with my left hand and rapidly spanked her asscheek with my right hand. She screamed and thrust and bucked and wriggled. And when she howled in orgasmic ecstasy for the third time, her spasming snatch drew the semen out from my pumping prick.\n\n\"Neevie! Neevie! FUUUCK!\" I grunted as I slammed forward one final time and blasted her cunt with all my cum.\n\n\"Ohhhhhhh... Myyyyyyyyy... Gaaaaawwwwwwwddddd...\" Naimh groaned as her body finally went still, my pelvis no longer pounding her forward over and over again. She drooled onto the mattress, groaning in mixed agony and ecstasy as I finally let go of her wrists, letting her arms fall limply to her sides. Her eyelids fluttered feeling each shot of sperm shooting into her snatch.\n\nAnd she had the BIGGEST grin on her face the whole time.\n\nAfter I was done creaming Naimh's cunt, I collapsed onto the mattress beside her. I kissed her nose and rubbed her sweaty body while panting for breath. I'd been fucking her so hard for so long that I was feeling pretty wiped out.\n\nBut she opened her eyes, looked at me with an expression of absolute adoration, and said, \"You are everything I've ever dreamed of. But we're not done yet.\"\n\nI blinked and groaned. \"Still? I'm TIRED.\"\n\nNaimh smiled, looking happier than she'd ever been in her life. \"I wanna give my boyfriend my last purity. Will you please fuck my virgin arse?\"\n\n****\n\nThe naked sweaty redhead between my spread legs popped off my prick for a moment, although her right hand still stroked my shaft. \"I'm finally gonna get one of Matty's cherries,\" she said happily. \"Holly was your first blowjob. Mari made you spurt with her hands first and was your first deep-throat. And Sam got your virginity, but I'm gonna give you your first arse.\" And then she went back to blowing me.\n\nI arched an eyebrow. \"Are you sure about this?\"\n\nShe nodded and popped off again. \"Never been more sure of anything in my life.\"\n\n\"Not worried at all about The Rule?\"\n\nNaimh giggled and replied, \"If they wanna keep 'everything in balance', that's up to them. I'm shivering just thinking about all five of us bent over a bed, waiting for you to sodomize us all in a row.\"\n\nMy cock visibly twitched at that thought, but it also gave me pause. Any guy would give his left nut to be in my position, and yet I couldn't help shake the feeling that things were getting a little out of control. What Naimh had just described fit perfectly into the name \"Matty's Harem\", and while that sounded awesome in theory, I did worry a little if we were changing too much from the original BTC.\n\nWhile Mari had told me the Monday morning after she'd given me her virginity that she regretted telling me so many secrets about the girls' true feelings for me, I reassured her that she hadn't really told me anything I didn't already know.\n\nBelle had already confessed back during that first blowjob that she was in love with me, and had been in love with me for a few years. I had worried initially that she'd be jealous of Sam getting my cherry first, but the reveal of her voyeuristic desires had taken me by surprise. And in a way, of all the girls I was worried the least about hurting her feelings. The little voyeur might even want Matty's Harem more than I did.\n\nSam, on the other hand, worried me the most. I'd been watching her this week, actively looking past the misdirection to see if her true face really did reveal itself. She kept a lid on her jealousy, mostly, but it came out in moments. She was quick to say \"I love you\" immediately after swallowing my cum or fucking me within an inch of my life, and visibly brightened when I replied, \"Love you, too.\" Those responses accurately reflected the way I felt for her in those moments, but I worried that she'd been right all along that she could successfully \"buy\" my love for her through sexual satisfaction. She was sex personified, the reincarnation of Aphrodite, and she turned me on like crazy. But I knew it needled her how close I was to Belle, and how much I lusted for Naimh, and I wondered what would happen if she ever decided to put her foot down and make me choose a favorite.\n\nMari wasn't in love with me, which was a relief in a way. She clearly valued the BTC and had integrated her sexuality rather seamlessly with the others. I had tried to spend equal time with her even when Sam, Belle, or Naimh were ready and willing for sex while Mari wasn't. This past week she'd simply been eager to climb aboard instead of finishing a blowjob, but otherwise things had been much the same.\n\nHer secret, on the other hand, was a bit of a ticking time bomb. I had encouraged her to come clean with Belle at least, stating that I was sure her best friend would understand. But Mari's fears had kept that secret locked away for years already, and she wasn't quite ready to open it up again. In the meantime, I knew how important it was to her that I remain the one man in the world she could trust and feel safe with, and I wouldn't violate that trust for anything in the whole world.\n\nZofi was a mystery. In my humble opinion, she and Naimh were empirically the two most beautiful girls in the entire club. But while she'd always enjoyed being part of the group and even stretching her boundaries with me physically, everything seemed more like a game to her. She sought out unique experiences for the sake of having a unique experience, not because she was horny, and CERTAINLY not because she was emotional. There was no love between us whatsoever, and I felt that she was the only one who still held to the original purpose of the BTC, treating me as the safe guy she could practice on. I didn't worry about her blowing up the club, but if things started to fall apart, we weren't emotionally bonded close enough for me to believe she'd be on my side.\n\nAnd then there was Naimh: the girl who, if I was being honest with myself, represented the greatest threat to the BTC. She was the one who wanted to be my girlfriend, who wanted me to be her boyfriend, and quite frankly, I wanted those things too. I wished I could go for that drive down the coast in a convertible, hold hands as we walked in the waves, and cuddle together to watch the sunset. I wished I could bring her to a concert, have a quiet dinner at a fancy restaurant, get jealous stares from guys admiring her beauty, and then take her home and make love until the sun came up the next morning.\n\nNevermind that doing so would destroy my relationships with the other girls. I was tempted. And to have the object of my lust worshiping my dick with her mouth while moaning about how she wanted me to plunder her virgin asshole only magnified that temptation.\n\nNot that either of us would willingly blow up the BTC for a relationship. Naimh would kill herself before betraying the others (hopefully not literally), and I would never intentionally do so either. But I had to admit, I could see myself laying the foundation for a romantic pair-bonded relationship with the gorgeous redhead \"just in case\". I mean, if things went wrong and the BTC broke up, at least we could be together then, right? And I knew that the very idea of having \"girlfriend Naimh\" as a backup plan could very well undermine my resolve to keep the BTC together, even if subconsciously.\n\nPresently, \"girlfriend Naimh\" pushed her face down as far as she could go around my cock, breathing shallowly through her nose while probing her own gag reflex. She pulled back slowly, took a long deep breath, and then sank her face all the way down.\n\nYes, I mean ALL the way down. The redhead's lips formed a tight ring around the very base of my cock, and I could feel the tense compression of her throat around my cockhead. She only held it for a second or two, whimpering softly before pulling all the way up and off, gasping for breath and coughing twice before flashing me a beaming grin.\n\n\"I did it!\" she cheered enthusiastically before repeating, \"I did it!\"\n\nMy eyes were huge, and I felt a little bad that my very first thought was, 'Sam is NOT gonna be happy about this.' But I grinned, started clapping slowly, and congratulated her by saying, \"You did it! That was amazing!\"\n\nNaimh did a little happy dance on her knees, making her big jugs jiggle. Then she bent over and promptly attempted to repeat the feat. She actually couldn't do it, gagging herself about an inch from the bottom over and again until she started to get frustrated. I started to tell her it was alright and that she didn't need to, echoes of that night with Sam after the wedding in my mind. But Naimh sat back for a moment, closed her eyes and became absolutely still. Exhaling slowly, she went into a meditative Zen state, calmed her breathing, and after a minute, she bent over to try again.\n\nShe succeeded.\n\nI knew she would. She had that look in her eye right before she pushed her head back down. This girl would succeed at anything she put her mind to.\n\nEven if that thing was... me.\n\nBut first, she had another goal in mind. Having completed her second deep-throat, she pulled off my prick and stared straight into my eyes. Her voice was deeper than usual, and deadly serious. \"I need you in my arse.\"\n\nI nodded slowly.\n\nWith a cocky little smile, not a single trace of nervousness, the gorgeous redhead crawled up my body and kissed me slowly. But just when I started to really kiss her back, she broke away and moved over to the side. She bent over in that frog-position again, her ass up in the air, and said, \"Fuck my pussy first to get nice and lubed up.\"\n\nI nodded my agreement and sat up to get into position, but the word \"lube\" ping-ponged around my brain for a few seconds until I suddenly jerked and exclaimed, \"Oh yeah!\"\n\nNaimh glanced back at me in surprise. \"What?\"\n\nI was already scrambling off the bed and rummaging through my suitcase. \"I have a bottle of lube.\"\n\n\"You do? Why?\"\n\nI flashed her a slightly embarrassed smile. \"Uh, well, Belle is really small down there, and I'm kinda thick. Sometimes we need a little help to get me in.\"\n\n\"Huh.\" Naimh blinked a couple of times but nodded her understanding. \"Lucky me. I was a bit worried how much this might hurt.\"\n\nI had climbed back onto the bed, but paused just before opening the cap. \"We don't HAVE to do this. I don't want to hurt you.\"\n\n\"Oh no, we're DOING this,\" she stated emphatically and put her head back down. \"Just don't be shy about using a lot of that stuff if you need to.\"\n\nWith that in mind, I went ahead and opened the cap. But the sight of Naimh's beautiful backside thrust up toward me was just too enticing to resist, and I set the bottle down on the nightstand so I could grab her ass with both hands and start rimming her anus again. Naimh squealed and giggled and shook her butt free, complaining, \"That tickles! I mean, I like it but just lube me up already, will ya?\"\n\nI laughed, retrieved the bottle, and squirted a healthy glob into my hand. I painted her sphincter first, then pushed first one lubricated finger and then a second into her colon while she groaned and gritted her teeth, trying to get used to the sensation. But then I brought my rock-hard dick up with my other hand and guided it into her sopping-wet pussy from behind. And my lusty Irish lover moaned in pleasure as I swiftly buried myself to the root.\n\nFor a few minutes, I slow-dicked her snatch while pumping two fingers in and out of her anus, adding more lube every now and again. Then, I pushed a third finger in, causing her to stop and tense up, but after about a minute she went back into that meditative Zen state, relaxed, and allowed me to resume thrusting.\n\n\"Soooo... fulllll...\" she mumbled into the mattress.\n\n\"Still wanna do this?\" I asked in concern.\n\n\"Mmm-hmm...\" Naimh opened her eyes, twisted her face back to me, and reached back with both hands to pull her own buttcheeks apart.\n\n\"Fuck my arse, Matty. Be the first one to ever fuck my arse. Be the only man to ever fuck my arse for the rest of my life.\"\n\nI choked up a little at that last part. The idea of spending the rest of my life with the most gorgeous girl I'd ever seen and having her profess that kind of fidelity to me hit me like Cupid's arrow to the heart. She was inviting me to sodomize her, but I kept my cock in her cunt and bent forward, planting my left hand on the mattress for support so I could get all the way down and kiss her lips.\n\n\"I love you, Matty,\" she told me sincerely.\n\n\"I love you, too,\" I replied with just as much emotion.\n\n\"Fuck my arse, lover,\" she crooned, eyes glittering.\n\nI grinned. \"Yes, ma'am.\"\n\nComing upright again, I pulled my dick out of her pussy first. She got a fresh grip on her asscheeks, spreading them wide. With the bottle of lube in hand, I pulled my fingers out of her anus and gazed in wonder at the gaping dark hole that remained. I squirted another healthy glob of lube right into that gap, set down the bottle, and aimed my cockhead into her open sphincter. And easier than I would have thought, I pushed the first three inches through.\n\n\"Holy shii-aaaaaaaAAAAAHHHH!!!\" Naimh's head SHOT up fast at the moment of penetration, and I could only imagine her eyes going saucer-shaped and her mouth gaping open. I suddenly wanted a mirror in front of her for the next time we did this so I could see actual expression on her face.\n\nFor my part, Naimh's asshole was unlike anything I'd ever felt before in my life. It was wet from all the lube, but still not nearly as moist as a pussy. She felt tight, almost as tight as Belle's virgin vagina, but less constricting at the same time. And it was HOT. Oh my gawd it was hot in her ass, and I groaned to feel such a uniquely amazing sensation for the very first time.\n\nWe were SO doing this again.\n\nMeanwhile, Naimh groaned as she felt her colon being filled with cock for the first time. She kept her head down now, breathing shallowly with her eyes closed, trying hard to maintain that meditative Zen state. I worried a little that I was still hurting her, and even though this felt absolutely amazing to me, I was ready to stop at the first sign of her discomfort.\n\nBut she had a wicked smile on her face, all the way up until I hit bottom and had given her every last inch of Matty-cock she could take. \"That's everything,\" I told her. \"You've got my entire dick in your ass.\"\n\n\"Yasss...\" Naimh hissed, still with that wicked grin. Only then did she open her eyes and look back at me. \"Fuck my arse, lover. Fuck my fuckin' arse.\"\n\nSo I fucked her \"arse\". I started slow, both letting her adjust to my thickness and absorbing the sensations myself. She got up onto all fours, a proper doggy-style position, and started bucking her butt back to meet my thrusts. We started speeding up, really building up a rhythm, although I would pause every now and again to ask her how she felt, getting answers like, \"So full\", \"So good\", and finally \"I'm fine stop asking just fuckin' FUCK me!\"\n\nSo I stopped asking and focused on fucking. But I still kept talking. So did she.\n\n\"Holy shit, Neevie, I love this. Your ass feels so fucking good.\"\n\n\"Fuck, fuck, fuck, fuck,\" she grunted. \"You're so fuckin' big!\"\n\n\"You're so fuckin' tight! And so hot! I mean your ass is literally HOT! Not that you're not hot, too. I mean you're the hottest thing I've ever seen. It's just... Ohmigawd...\"\n\n\"Ohmigawd is right. I can't believe you're fucking my arse, Matty! Fuck my arse, fuck my arse, fuck my arse!\"\n\n\"I'm gonna cum in your ass, Neevie. This is incredible.\"\n\n\"Yes, yes, I want it in my arse! You came in my mouth tonight. Then you came in my pussy. Now you're gonna cum in my arse! I want it all! I want it everywhere!\"\n\n\"Fuck! Fuck! Fuck! I'm gonna cum!\"\n\n\"I'm gonna cum too! I'm gonna cum with your cock in my arse! Cum with me! Cum in my arse! I'm gonna--! I'm gonna--! I'm gonna... AAAAAAUUUUUUGGGGHHHH!!!\"",
        "\"Neevie! Neevie! I'm... AAAAAAUUUUUUGGGGHHHH!!!\"\n\nHer butthole clamped down on my cock, grabbing on and not letting go. But I was already thrusting forward one final time, losing control and hammering her so hard that her forearms collapsed. She lay pinned beneath me, ass up in the air while I evacuated the contents of my balls and dumped it like a fire-fighting plane dropping water bombs.\n\nNeevie howled at the top of her lungs.\n\nI howled with her.\n\nAnd I was pretty sure everyone in the cabin could hear me filling up Naimh's little asshole.\n\nThis was gonna make for an interesting conversation in the morning."
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "mff",
        "teenager",
        "18-year-old",
        "orgy",
        "blindfold",
        "anal sex",
        "anal",
        "creampie",
        "ski trip",
        "harem"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-15-16"
}