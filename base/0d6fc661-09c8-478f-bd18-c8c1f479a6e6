{
    "title": "Catering Girl Ch. 04",
    "pages": [
        "Thank you to my intrepid crew of beta readers and editors, AwkwardMD, Bramblethorn, and BrokenSpokes, who all provided some critical suggestions and hopefully made this a smoother read. \n\nThere is an important character under the age of eighteen in this story. It's sort of hard to write a story about a young single mom and not have her munchkin in it. But don't worry, when we get to the adult playtime parts, the little one will be safely tucked in her own bed and sleeping while the grownups play. These are responsible adults after all.\n\nLittle Miss Madison is not old enough yet for chapter books, but if you're here, you must be. So please read the earlier chapters if you haven't done so yet. \n\nChapter Four\n\nJennifer\n\n\"Ugh, why am I wearing this? I hate dresses.\" I exhaled to collect my thoughts. \"Can you stand on the chair and zip Mommy up?\" \n\nI felt Madison's little fingers tugging at the zipper on my little black dress. \"There you go Mommy. Turn... see, you look pretty! Just like Miss Whitney said you would.\"\n\nI bent down to give her a kiss on the forehead. Normally I would kneel down, but that wasn't an option in this thing. \n\nHow did I let Whit talk me into this? Oh yes, on the car ride home from the island she suggested we go on a proper date, just the two of us. That's what couples do, right? Then she got a bee in her bonnet about what I was going to wear and insisted that I get a \"sexy\" dress. Thus, on Tuesday night we were at Nordstrom with her picking out a dress for me. She tried to get me in a pair of black pumps too, but at least I talked her out of that and into a pair of black boots. They still had a small heel to them, but what can you do? I did put on my favorite black tights instead of the thigh-high stockings she suggested. A girl has her limits.\n\nOr at least, this one does. Besides, the tights would keep me warmer on a cold January evening. I was brushing my hair when the doorbell rang. \n\n\"Coming,\" I yelled out as I went to the door. \"Hi, come on in,\" I said, greeting my usual babysitter. That is, when I hire one and not swap sitting with a friend. \n\n\"Annabelle!\" Madison ran over to give her a hug. Annabelle was one of Madi's favorite teens from the church. I liked her as she got along well with Madison, plus she was old enough to drive. \n\n\"You look good, Ms. DeLuca.\"\n\n\"Thanks. And please, call me Jennifer. I'm not that much older than you.\"\n\n\"Sure.\" She looked down at my daughter. \"Are you ready to have fun tonight?\" Madi took Annabelle's hand, and dragged her off to show off her Nani and Anna dolls, when the doorbell rang again.\n\nI opened the door and there was Whitney. Wow! I thought. Her red bandage dress left little to the imagination. The parts that were left to the imagination, I could easily complete in my mind. Annabelle insisted that we let her take our picture, not that I minded, as my hawt girlfriend put her arms around me. \n\nAs Annabelle texted me a copy of the picture, Whit leaned down and whispered in my ear, \"You look fucking hot tonight, my dear.\" \n\nApparently, she wasn't as quiet as she thought she was.\n\n\"Mommy, Miss Whitney said a swear.\" \n\nWhit looked at me and shrugged. \"Sorry Mommy, I guess I'll have to make it up to you later.\" She turned to Annabelle. \"Okay if we're home around eleven?\"\n\n\"Sure thing. I have a bunch of schoolwork to do once Madison goes to bed. Eight PM right?\"\n\n\"Yes.And don't let her talk you into a later one, okay?\"\n\n\"Sure, have fun you two.\"\n\n\"Bye Mommy, bye Miss Whitney,\" Madi said, waving as only little girls can.\n\nWhit held the door to her Jeep open for me and then we headed downtown in her Jeep. As we pulled up to the valet at the Seattle Art Museum, I had to giggle as I watched the valet girl check out Whitney as she opened her door. The other valet did the same to me as he helped me out, but I think both were looking at my girlfriend's ass as we sauntered away. Fine with me, the fewer eyes on me in this ridiculous dress, the better. \n\nWe headed up to the banquet room. The SAM was a popular spot for fundraisers. Tonight was some fundraiser for the children's hospital or something like that. Whit was waving the company flag I guess I was as well. There were about twenty tables set up, each with eight seats. I guess my catering instincts were kicking in for me to notice that. It dawned on me that this was the first time I'd ever been to an event like this where I wasn't on the catering staff. Looking around, I noticed all the other guests were all dressed up. For as much as I hated this dress, I was thankful that Whit had pushed me to dress fancy. I realized I would have really felt out of place if I hadn't. \n\nWhit must have sensed my nervousness and held my hand, which was reassuring. I dutifully followed her and tried to keep up with the small talk as she greeted the other guests she knew. I looked around at the catering staff and tried to see if there was anyone I knew, but there were no familiar faces. Not that there would have been any time for me to talk to them, but a simple smile and hello would have been nice. \n\nWhat I did notice was that we weren't the only lesbian couple in the room. There were four others that I spotted and a few gay men couples as well. Well, this was Seattle, so it wasn't all that surprising. But for me, it was the first time I noticed multiple LGBTQ+ couples at the same time. We had a few come through the diner now and then, but they were a rarity there. \n\nI watched how they interacted with each other and how people treated them. They all seemed just like any other ordinary couple \n\nWhitney introduced me to an older gentleman and his wife. \"This is Mario Lombardi and his wife Janet. Mario is the other half of Mitchell and Lombardi.\"\n\n\"How do you do Jennifer? It's a pleasure to meet you. Ben's been telling me about the young lady who's swept his daughter off her feet. You must be a special lady to capture this one's eye. I've had fun watching her grow up to be the confident woman she is today.\"\n\n\"It seems like only yesterday she was running around the company picnic in sandals and pigtails,\" Janet chimed in. \n\nI giggled. \"Now that is a sight I'd like to see.\"\n\n\"And if I recall correctly, you drank a ridiculous number of grape sodas that day.\"\n\n\"Yeah, Mom got mad at me for that. I was so sick that evening from all the sugar and carbonation. I don't think I've had grape soda since.\"\n\nThe hosts started going around trying to get people into their seats, so we said goodbye to the Lombardis and found our table. We were seated with three other couples. One of them was a lesbian pair, up from LA. I was seated next to the older of the two, Taylor, who as it turned out was from Idaho as well. They had been invited to the fundraiser as she was an artist who was exhibiting her work at the museum. Her show was opening the coming weekend. \n\nWe talked about Idaho, and although she was from Boise, she at least had heard of the wide spot on the road that was my hometown. I admired the dark gray men's style suit she was wearing. I had never thought about something like that for an event like this. It was classy, masculine but not manly, clearly made for the female form. Thinking about all the events I had worked, I probably had seen someone in something of the sort, but never mentally processed it before. \n\n\"I like your suit. I think I might have to get something like that if Whitney drags me to any more of these types of events. This dress, ugh, so not me. Just give me my jeans and a hoodie and I'm a happy girl.\"\n\n\"I know the feeling,\" Taylor said with a smile, \"I've been doing so many of these art shows and openings that my wife talked me into wearing this.\"\n\nWe had a really good conversation over dinner. I was impressed as to how she dealt with coming out to her family and the problems she faced doing that. I realized that I needed to think about how to come out to my mom. I thought she'd be fine with who I am; she wasn't the religious type by any stretch of the imagination. \n\nI showed her a picture from Christmas day of Madison in her Elsa dress and both Taylor and her wife, Aly, said she was cute. Whit scooched over closer to me, holding my hand as we listened to the presentation about the work the children's hospital was doing and what the funds that were raised tonight would be used for. I had caught bits and pieces of these while working at similar events and knew what was coming. Near the end, people were encouraged to go into the museum, which was closed to the public for the evening, to check out the exhibits and to bid on the various items up for silent auction. Taylor was introduced,and people were encouraged to see her sculptures. She and her wife took off as soon as her intro was done so she could get stationed near her exhibit to greet people. \n\nWhit and I made our way around the museum. I felt like I was a movie, walking through the museum while being served flutes of champagne as we navigated the exhibits. We stopped by Taylor's exhibit, her metal sculptures were beautiful. \n\nI stopped to admire a piece called \"Pacifica\". The note card said it was a miniature version of a signature installation she had on the North side of L.A. The model had clearly been her wife. In fact, you could see her wife's face in several pieces. I was studying the curves of the metal when Whit whispered in my ear, \"You know, we have a couple hours until we need to get back to relieve the sitter. We could stay here, or we could head back to my place for some adult playtime. Got a preference?\"\n\n\"Um, I think the only real question is which way is the coat check?\" We beelined out of there back to her place. I'm not sure what I was looking more forward to, getting out of that ridiculous dress or making love to my girl. Once again, Whit put on our not so little red friend, who we had taken to calling Big Red, and we made love until we collapsed. Best part was, we made it back with five minutes to spare before the agreed upon time to let Annabelle go home. \n\n<center>_\\|/_</center>\n\n\"Hand me that hot pad, will ya?\" \n\nI took the offered pad and checked the chicken in the oven for dinner that night. The three of us sat at my little table. Madi frowned at the piece of broccoli on her plate. \"It's just a single piece, okay honey?\" I looked at Whit. \"So how was work today?\"\n\n\"Good, getting the hang of the place. I was talking with Uncle Silas today and he said that his ski condo is available this weekend if we want it. It's a three-day weekend. Interested?\"\n\n\"Um, I don't know how to ski and we don't have gear.\"\n\n\"Don't worry about that. There are a ton of ski sets and lots of coats, ski pants and the like there. Even sizes for Madi. Come, it will be fun. All we have to do is buy lift tickets and food.\"\n\n\"Hmmm... where is it?\"\n\n\"Northern Idaho. Schwitzer Resort.\" \n\nI knew right where it was. \"That's about thirty minutes from where I grew up. Maybe we can swing by mom's and say hi. Been over a year since she's seen Madi, and she should probably meet you.\" I noticed little eyes perk up at the suggestion of visiting my mom.\n\n\"Have you told her about me yet? About us? About you?\"\n\n\"No, not that we're an item or that I'm dating you. Nor that I've realized I'm gay. She knows that I have a new friend that I have been hanging out with.\" Not that I haven't thought about it. I'd run through hundreds of conversations in my head, but never quite come up with how to say it.\n\n\"So, you're just going to spring it on her?\" Whit squinted a bit and rolled her lower lip under her teeth.\n\n\"I don't know. I... I just haven't figured out how to bring it up.\"\n\n\"Well, we should probably come up with a plan.\"\n\n\"I've been trying, I just don't know what to say,\" my toes began to wiggle in my socks and I noticed a hole starting to form in them. \"What if we don't say anything, are you okay with that?\" My finger started to pick my thumb.\n\n\"I don't know. I've never hid before. I mean, sure, it took me a couple months to tell my folks, but that was back in high school. I had a bad breakup with my boyfriend at the time and got rather introspective for a while. I started to figure it out when I went to a movie with 'a friend' which turned out to be my first date with Marci. We held hands. She gave me a goodnight kiss and then I knew for sure. My parents started to get a clue and asked me. For a while they thought it was a phase, just something I was going through. I'm not sure it clicked for them until I was well into college.\"\n\n\"Humm, interesting.\" I pondered this but knew I wouldn't come up with a good solution right now, so time to change the subject. \"So, for the ski weekend. Do we need lessons? You do know it's at least a 6-hour drive, longer if the pass is bad.\"\n\n\"You'll have the best private instructor there is, me! I used to race, you know? And yeah, it's a bit of a drive. Sometimes I've made it in one shot and get in late if I left right at the end of work on Friday, but sometimes I had to find a hotel in either Ellensburg or Spokane. But let's go, we can have fun. Just the three of us.\"\n\n\"Okay, okay. Well pumpkin, do you want to be a ski bunny?\"\n\n\"And see grandma?\" Madison said, bouncing in her seat and clapping her hands.\n\n\"Yes.\"\n\n\"Yeah! Will we see Babcia and Opa too?\" Dallas's parents didn't live far from my mom and loved to dote on their only granddaughter.\n\n\"Probably not pumpkin, but we'll see. We're not going to be there that long.\"\n\nFriday afternoon found Whit waiting for me in her Jeep with all our stuff already loaded. I must admit it's nice having your girlfriend work a block away. I shut the phones down for the weekend and a few minutes later we were on our way to pick up Madi from preschool and then head out. The mountain pass was clear, thankfully, and we made it to the condo late that night.\n\nMadi had slept in the back seat of the Jeep most of the way over, so while I would have liked to have slept in, Little Miss was up and bouncing on the bed early, ready to go. We got ready while Whit dug through the piles of coats and pants and found sets that worked well for both of us, including thick socks to keep my tootsies warm. \n\nWhit handed Madi a munchkin sized set of skis. \"I think you'll like these. This was my first pair.\" \n\nHer little eyes lit up, and she got even more excited. \n\nThe slopes were packed for the holiday weekend, but we were able to find enough space for Whit to show us the ropes. Of course, it helped that Little Miss took to the slopes like a duck to water to the point that she took off down the bunny slope and Whit had to go chasing after her. leaving me alone for a bit. I did okay. Being a skateboarder in high school gave me a few skills I could adapt to standing on a pair of skis. I wished Whit had a snowboard, as that might be a little closer to what I was used to, but apparently her family wasn't into snowboards, so it was skiing by default. \n\nI made it down without falling over too much, and found the two of them at the foot of the run. We went back up a couple more times before stopping for lunch. The caf\u00e9 was a busy place, so I grabbed a table while Whit and Madi got in line to grab some food. \n\nI was busy on my phone when I saw someone slide next to me at the table.\n\n\"Hey pretty lady, you here all alone? I saw you on the bunny slope by yourself. Do you need a personal instructor?\" The guy was in his mid-twenties and was clearly looking me up and down. His grin belied his carnal intentions. \n\n\"She's got a private instructor already.\" Whit's voice chimed in, as she returned to the table with our food.\n\n\"Hi mommy, I got you a pizza.\" \n\nThe douchebag took a look at me and then one look at my daughter and furrowed his brow. \n\n\"Sorry,\" I said, \"but I think my girlfriend is cuter than you.\" \n\nThe dude got up and muttered, \"Fucking dykes.\" as he left. \n\nI was about to follow him at full volume when Whit grabbed my arm. \"Let him be. Guys like that will never be convinced.\"\n\n\"Well, he shouldn't say stuff like that.\" I scowled.\n\n\"Welcome to our world, babe. There will always be a few troglodytes out there to contend with.\"\n\n\"It shouldn't be that way.\" She shrugged at me and we ate our lunch without saying much. \n\nWe spent the rest of the afternoon on the slopes. Yeah, I was having fun. Going down the slope was good, but what was better was seeing my daughter bond with my girlfriend. They were two peas in a pod. Madi had no fear, she just went for it. Of course, she did faceplant a few times. So did I, for that matter, but Whit was right there to pick us up and get us right again. \n\nIt was Madison who encouraged me to get onto the intermediate slope. Going up the chairlift wasn't so bad. I was focused on making sure Madi got off okay. But as soon as Whit cleared the chair behind us, she was ready to go. \n\n\"I'm right here with you. You got this.\" \n\nI was trying to get my nerve up to head down the much steeper slope, when I heard from behind me, \"Out of my way, you fucking dykes.\" Seeing the douche canoe from the cafe resolved my nerves, and I took off, passing the douche as he stopped to tighten a buckle on his boot. I got going a little faster than I wanted and almost biffed it when I came to a stop to wait for Madison. \n\nIt was good that I stopped where I did; it gave me a ringside seat for what happened next. Just as Whit pulled up next to me, the douche canoe went past us and as he was starting to yell at us , he instead had an epic face plant. We all had a laugh at his expense. As we skied past him, Whit yelled at him, \"You need a private instructor!\" \n\nBut the best was from my Madi, \"Maybe you should be nicer to my mommy!\" That made me smile. \n\nWe called it quits as the sun was setting behind the mountains. The little ski village was lit up like a postcard, and there were all kinds of people milling about. We dumped our wet clothing in the dryer and changed for dinner. I was getting myself ready after helping Madi when I overheard her and Whit talking.\n\n\"You look so pretty Miss Whitney.\"\n\n\"Thank you darling, so do you.\"\n\n\"You always look pretty.\"\n\n\"You want to know why? It's 'cos I want to look pretty for your mommy. It's one of the things adults do when they love someone, they want to look pretty for them.\"\n\n\"Then you must really love Mommy.\"\n\n\"That I do Madi, that I do.\" My heart leaped for joy when I heard this and since I was entering the living room where they were, I slipped my arms around her and gave her a kiss. I took a good look at what she was wearing, tight jeans, a thick green sweater, and what really did it for me were the black wedge boots that encased her lower legs. It was all I could do not to take her right then and there.\n\n\"And Mommy loves Miss Whitney too.\"\n\nThe three of us headed out for dinner. As we walked to the restaurant that Whit knew, we each held Miss Madi's hand. Whit and I traded smiles. Yeah, I had fallen for this woman. Not only did she like me, but she was 100% into my daughter. And my daughter felt the same for her. It was more than I could ask for from anyone. \n\nThe pub that Whit picked out was a fun place. It was hopping with people and since it was a Saturday night, there was a live Irish band playing. They played mostly traditional Irish tunes, but occasionally would play an adaptation of a modern rock or folk tune. Whit kept trying to pull me out onto the dance floor, but dancing wasn't my thing. Instead, my mini me went out with Whit. It was fun watching them cut a rug. The folks in the booth next to us were commenting on it as well, and the older man leaned over and said how nice it was that my girl took to my daughter so well. \n\nEventually the pair of them talked me onto the dance floor and we danced to a traditional jig. I wasn't expecting what came next. The singer announced that the next song was for all the lovers in the room. Whit shooed Madison back to our booth and took my hand. ",
        "Somehow my arms were wrapped around her neck and hers around my waist as we slow danced to Declan O'Rourke's Galileo (Someone Like You). I just rested my head on her shoulder and felt that all was well with the world. \n\nAt that moment I didn't have a care in the world. The song finished, and we slid back into the booth. We enjoyed the music a while longer until it was time for a certain little girl to get to her bed. \n\nAs I came out of Little Miss's room after tucking her in, Whit handed me a glass of wine and we relaxed by the fire. She held me in her arms as we sat on the sofa and watched the flames flicker. \n\nUpon finishing my glass, I relaxed in her arms. A hand crept up underneath my tee shirt and it began to cup my breast. \n\n\"Oh god, yes.\"\n\n\"You like that baby?\" \n\n\"Yes,\" I moaned. Her hands felt so good, teasing me, getting me excited. I grabbed her and pressed my lips to hers. \"Bedroom now,\" I panted. She pulled me up from the couch, and I followed her down the hall. As I locked the bedroom door, she pushed me against the wall and resumed kissing me. \n\nNot being able to take it any longer, I swung her around and pushed her back onto the bed. We wiggled her out of her sexy jeans, and when I lifted her sweater off, I saw my prize for the evening. Whit was wearing a sexy green satin bra with black lace and a pair of matching boy shorts. \n\nStripping myself down to my boxer briefs, I lay on top of her. Feeling the lace of her bra against my hardening nipples, and it made my arousal even stronger. My hand pressed against her satin shorts, and Whit writhed in response. Needless to say, it didn't take long, and I had her seeing stars. \n\nWhen she started to come down from her bliss, I held my Whitney and marveled at my feelings for her. So much has happened in the month since we first had tea together. \n\n\"Let me return the favor.\" Her voice was husky and sexy. But I had to put my hands on hers and stop her.\n\n\"Maybe in a few days? I'm a day early. But if you just want to hold me that would make me happy tonight.\" And that is how I was when sleep found me.\n\nThe next morning, we hit the slopes again. It was another fun day, but my mind was occupied by what might happen tonight when we got together with my mom. At lunch, my anxiety about the evening began to take hold, and I was starting to not feel that good. The anxiety just made my normal cramps worse. I left my two ski bunnies and treated myself to a nap. The large bed and the knowledge that I wasn't going to be disturbed for a while was glorious. \n\nI was feeling a bit less grouchy when my bunnies came in. Naps are a great thing.\n\n\"Mommy, we brought you something.\" Little hand held up a small grocery sack. I peeked inside to see a bar of my favorite dark chocolate. \n\n\"I thought you might need a little 'medicine' to help with your cramps.\"\n\n\"Thanks babe, this is the kind of surprise I like.\" I gave Whit a kiss. \"Well pumpkin, you ready to go see grandma?\" I put my best happy face on. Madison started to skip around. Where does she get all her energy? \n\nWe pulled into mom's tavern just after it got dark. \"The Rusty Spike huh?\" Whit was looking at the old fashion letter reader board on the street with some lights forming an arrow to the building. As usual, a few lights were burned out. \n\n\"'Now with family dining' that's new.\" I commented. Then I remembered that about six months ago mom said something about a small remodel. We walked in the door and I figured out what her small remodel was. Instead of there being a couple of pool tables as you walked in, there were some tables and a roped off divider separating the 'family dining' area from the bar. On one of the divider posts was the state required sign saying only those over 21 could be in the bar area. Yeah, right, like anyone was going to enforce that way out here.\n\n\"Grandma!\" Madi took off and leaped into my mom's arms. \n\n\"How is my favorite granddaughter?\"\n\n\"Good. I can ski now!\"\n\n\"She's a natural. Mom, this is my friend and ski instructor Whitney.\" Whit glanced at me with a bit of a look. I think she was expecting me to introduce her as my girlfriend. But at the moment, it was harder to say than I thought.\n\n\"Hi Mrs. DeLuca, pleasure to meet you.\" \n\n\"Well welcome to the Rusty Spike. Come over here and have a seat. Like what I did Jenny?\" I rolled my eyes at her. I hate being called Jenny, but only my mom can get away with it now.\n\n\"Don't get any ideas.\" I gave Whit the look.\n\nWhit laughed, \"Sure... Jenny.\" \n\n\"Grrr,\" I growled. \"So Mom, you got a dining area, getting much business?\" I looked around and a few tables were filled with guests. \n\n\"Yeah, it's paying for itself. Hershel's place closed so there was a lack of basic dining in the area, so I changed things up. Not making much, but it's better than nothing. Sit, take a load off. Can I get you something to drink? You want your normal Sprite honey?\" Madi and I slid into one side of the booth offered, and Whit took the opposite side. \n\n\"Sure mom, same for Madi. Whit?\"\n\n\"Ah, uh, Diet Coke for me, thanks.\" Mom went back to the bar to get drinks. \"Sort of dark in here.\" The place had old 70s wood paneling, and a few lights hung from the ceiling. \n\n\"Interesting, I was thinking it was more lit up now. Guess it's all in perspective.\" Mom came back with drinks and some menus. \n\n\"I brought you all some of our wings. I know they're your favorite.\" \n\nI do love them; she is right about that. It was a big basket of tasty, spicy goodness. And a proper bowl of blue cheese dressing to dip them in. But I knew what was coming next. \n\n\"Grandma, do you have any ranch?\"\n\n\"When did you start putting ranch on your wings little one? Who taught you that?\"\n\n\"Miss Whitney did.\" Mom looked at Whit with mock horror.\n\n\"Oh no, you're one of those, aren't you?\"\n\n\"Yes ma'am, ranch goes on everything. I think it was the eleventh commandment or something like that.\" \n\nMom laughed. \"I think I'm going to like you. Okay, I'll bring out some ranch. But I'm not going to have a lot of time to catch up with you and chit chat. My cook quit a week ago and I'm training a replacement. But I got a few minutes here and there.\" With a new cook, both Whit and I didn't feel all that adventurous with Mom's menu, but we figured whoever was back there couldn't screw up a burger too badly. Not that the menu was all that exotic. Most of it was burgers, sandwiches, and fried stuff. \n\nTrue to her word, Mom scurried back and forth from the kitchen to our table to talk to us. Much of the time, not surprising, she spent learning what was new with her granddaughter. How her new dolls have gone on great adventures, and how things are going in preschool with her friends.\n\nI filled her in on my new job and how great a place it's to work. In contrast to the food service work I have had in the past, I felt proud of my job and what I have been able to accomplish. Mom was also impressed that Whitney ran the accounting department for the corporate office. But we never quite got to the part that the company was her family's company. \n\nThere were a couple of times I was about to change the topic and let her know that Whitney is more than just a friend, but every time I got the conversation close to a point of being able to bring it up, Mom had to run back to the kitchen and check on things. \n\nWe had polished off everything. Whit and Madi were hungrier than I thought, but a day of skiing will do that to you. A couple of the bar flies had seen me and came over to say hi. In a sense, the Rusty Spike was home for me. Many an evening as a kid, I did my homework in Mom's office, and my first job after Madi was born was working behind the bar here. You can work a bar in Idaho at 19, just not drink what you are pouring. \n\nThe place did fill up for the dinner hour and mom was hopping. I even slipped behind the bar for a bit and lent a hand filling drink orders to help keep up. But eventually things died down and Mom sat down with us.\n\n\"So, Jenny, anything else new I need to know about. Any boyfriends?\"\n\n\"Well Mom, actually....\" and that is as far as I got before little miss no filter between brain and mouth spoke up.\n\n\"She doesn't need a boyfriend, Grandma; she's got Miss Whitney. I've seen them kiss.\" And with that truth bomb dropped, Madi grabbed a stray fry still in her basket and, after dunking it in her ranch, popped it in her mouth. \n\nWhit and I just looked at each other, sort of in disbelief. Nowhere in my thought processes thinking through how this would go did it ever turn out this way. I took a deep breath and exhaled. Mom was sitting there, still a little shocked.\n\n\"What I was about to say, Mom, is Madi is right. Whitney is more than a friend.\" I reached out and put my hand on hers. \"Mom, I'm gay.\" Whit squeezed my hand to let me know she was right there with me. \n\nA few minutes later we were getting a crying Madi into her car seat. I slumped into my seat, and Whit peeled out of the parking lot.\n\n\"That was unreal. I'm sorry Jenn.\"\n\n\"Does Grandma not love me anymore Mommy?\" It hurt to see my baby crying because of something someone who loved her said.\n\n\"I don't know, pumpkin. But Mommy does, and I always will, no matter what.\" I rubbed my temples; my head was throbbing. \"Sorry, I've never seen her lose her shit like that before. I mean she got mad when I told her I was pregnant, but this was on another whole level.\"\n\n\"Yeah, that big guy at the bar was cowering in the corner. But I'm proud of you Jenn, you kept your cool and were levelheaded the whole time.\"\n\n\"I hope that is not the last time I see her. I don't want to leave it this way.\"\n\n\"I know, but it might take time. Years maybe. And you realize it might never happen.\"\n\n\"That's what I am scared of, Whit.\"\n\nThe rest of our drive back to the condo was in silence. I rocked my baby to sleep, she was really upset. I was mad at my mom, not so much for what she said about me and Whit, but that she exploded and did it in front of Madison. My baby just is not developed enough as a person to understand let alone process what she heard and saw. She just saw the two people who mean so much to her fighting and one of them saying very mean and nasty things to her mommy. \n\nFinally, she fell asleep, and I stumbled into the living room. Whit just stood there and held me. The tears began to roll down my face, and I just cried in her arms. \n\n<center>_\\|/_</center>\n\n\"Whitney Maritime, how may I help you\u2014one moment please.\" I clicked off my headset and slumped back in my chair. The day after a long weekend is always hard to go back to work on, and when you had one as lousy as mine, well, I really didn't want to be here. It was one of those days where you put one foot in front of the other. \n\nThe one bright spot was midafternoon when a florist van pulled up in front of the office.\n\n\"Hi, I have a bouquet here for a Jennifer DeLuca.\"\n\n\"Oh my, that's me.\"\n\n\"Well, it's your lucky day. Someone is thinking of you. Have a great day.\" The delivery guy headed back out the door to his next stop.\n\nIt was a lovely bouquet with a few roses and other hothouse flowers. The note that came with them simply said:\n\n~~~~~\n\nThinking of you, be strong.\n\nLove you!\n\nYour Whitney\n\nxoxoxo\n\n~~~~~\n\nI smiled. I was rereading the card when my boss Ginny came out. \n\n\"Jennifer, those are lovely. Let me guess, those are from a certain brunette who works down the street?\"\n\n\"Yeah, she's trying to lift my spirits. I sorta had a tough weekend.\"\n\n\"You and Whitney had a fight? Is everything okay?\"\n\n\"Oh, we're fine. I came out to my mom, and well, it didn't go well.\" I flopped back in my chair. Please don't ask me to explain more, please??? I just want to get through this day. \n\n\"Well, we should at least get a picture of you and the flowers so you can send it to your girl.\" Now that was an idea I could get behind. I gave Ginny my phone and let her take my picture, which was quickly texted over my girl. \n\n\"The reason I came out here is to set up our usual 'Name the Tug' suggestion bin. We have a couple of new tugs being delivered this summer and need to name them. It's tradition that the employees suggest names for the new tugs.\" She set an old 3 lb coffee can with a slit cut in the plastic lid down on my counter with some slips of paper next to it. \"The winner gets a small spiff too.\"\n\nI could always use a few extra dollars so I took a slip and thought of an idea. After I put my thoughts down and slid the slip into the can, my phone dinged. It was a text from my Whitney, with a big thumbs up.\n\nThe afternoon plodded on and five couldn't get here fast enough. Finally, it did, and I shut the phones down and headed to my car. Once the flowers were safely set so they wouldn't tip over, I put my key in the ignition. A-a-a-and nothing. \n\nYou've got to be kidding me, right? Click, click, click. Nothing. My fists of fury pounded on the steering wheel. I tried the car again and, you guessed it, nothing. Just then there was some tapping on my window. I pressed the button to lower the window, and nothing happened. \n\nOpening the door, I looked at Captain Eriksen. \n\n\"Looks like you are having a bad day.\"\n\n\"And just when I didn't think it could get any worse, now my car won't start.\"\n\nCaptain Eriksen offered to take a look at it with me and quickly figured out my alternator was shot. \n\n\"Make you a deal Jennifer, if you can get a replacement from the auto parts store, I'll get a couple of the guys here and we'll replace it for you. I think we have enough tools floating around here to get the job done,\" he chuckled. \n\nI agreed, not like I had much choice in the matter. After a couple of texts, Whit came over and helped me get Madi from preschool, and we joined her for dinner. Probably a good thing too, as I didn't much feel like cooking. \n\nAs we sat down for dinner, I could feel the weight of the world resting on me. \n\n\"Let me help you with the alternator,\" Whit smiled as she offered to help me.\n\n\"Thanks, but I want, no I need, to get this on my own.\"\n\n\"Are you sure? This is going to be a few hundred dollars to get a replacement. Do you have that?\"\n\n\"I'll have to dip into my emergency fund, but yeah, that is why I have it in the first place.\" I remember being so proud of myself when I saw my savings account with $500 in it. For some of you, that is not much. For Whit, a drop in the bucket. But for someone like me, it was a feat. There was a lot of scrimping, saving, extra hours and side work to make it happen. And I had already resigned myself to doing it again to refill the fund. \n\n\"Please let me help? What are friends for but to help each other?\"\n\n\"I appreciate the offer, and maybe you can help me get to the parts store. But when I got my savings, I swore to myself that it was part of my path to being independent. To being a grown adult. Not a scared teen mom with no future. I need to take this step myself to prove that I can do it.\"\n\n\"Okay, I want to help you though. I like helping you.\"\n\nI just smiled back. She did help me with a trip to the auto parts store. The first one didn't have the right part in stock, but they checked and a nearby store did. \n\nWhit found a parking spot in front of the store and the three of us went in. I gave the manager behind the counter my name and he went into the back and returned a moment later with a box containing my new alternator. What I hadn't noticed was someone getting her credit card handy. \n\nAs the amount rang up on the display, I noticed her hand attempting to slip her card into the reader. \n\n\"Whitney!\" All the heads in the store turned towards us. \"I told you, I want to buy my own alternator. I don't want your help.\"\n\n\"Please? Let me help you.\" That look might have helped her get away with things as a teen, but it wasn't going to help her now.\n\n\"No, please. I need to do this on my own. Please, it's important to me.\"\n\n\"Fine.\" And she stormed out of the store.\n\nMadison and I exited a minute later to find a frustrated Whit behind her wheel, the motor already running. I got Madi in the Jeep and then climbed into the passenger seat.\n\n\"Whitney Mitchell! How could you try and do that to me? I told you I wanted to do this on my own. Did you even hear me?\" I probably would have completely lost my cool, but for a four-year-old in the back seat.\n\nI watched as she bowed her head, almost to the steering wheel. A small tear formed in the corner of her closed eye. \n\n\"So..so..sorry Jenn, I just wanted to\u2014\"\n\n\"I appreciate your offer to help, really I do.\" I leaned across the jeep and put my arm around her. \"But I need to prove to myself that I'm not helpless anymore. I know this is probably hard for you. You can just snap your fingers and solve problems like this, no sweat. But for some of us, when life happens, it takes some work to get over the hurdles.\"\n\nAs we drove in silence over to the Maritime parking lot, I looked at the receipt in the box. It was a little more expensive than I had wished for, but hey, who said adulting was easy? I put the box in the trunk so I wouldn't have to carry it on the bus the next morning. \n\nAs Whit dropped us off at our house, I leaned over and gave her a kiss.\n\n\"Thank you again for the lift. You really are helping me in more ways that you realize.\"\n\n\"I know, and I do get what you're trying to do. It's hard to see my friends struggle when I know I can help them.\" This time it was Whitney kissing me. It was good to know me being a bit of a stubborn mule wasn't causing any hard feelings.\n\n\"Miss Whitney, would you please stop kissing Mommy so we can go in the house? I's gots to pee badly,\" a little voice chirped up from the back. She was already out of her seat and had her door open. I hustled her in for the night before we had an accident. \n\nTrue to his word, Captain Eriksen and a few of the guys fixed my car the next day. They said it was easy due to where the alternator was located. They all seemed happy to help me out, but I think a couple of the younger guys were looking to see if they could use this as a lead-in to a date with me. Sorry boys, but I don't think you stand a chance. I did make sure to thank them though with a batch of chocolate chip cookies a few days later when their tug pulled up to our dock to drop off some paperwork.\n\n<center>_\\|/_</center>\n\nWhitney\n\n\"So, it's back to being Catering Girl again, huh? You know, you wouldn't have to do this if you just let me help you.\"\n\n\"Come on, we've covered this already. I need to cover my own bills. So that sometimes means picking up some extra work. And thank you by the way for taking care of Madi tonight.\"\n\n\"Well, I think I get the better end of the deal. You work at some cocktail party catering thing and I get to have a Friday night girl's night. Watch movies and eat popcorn with Madi. And then I get to snuggle with you when you come home from working.\"\n\n\"Yeah, but it will be late. I will probably be too tired to do anything. And I have to get Little Miss going tomorrow. She has a playdate at the park with her daddy.\"\n\n\"Oh, that's right, Dallas is coming. You're meeting him there, right?\" \n\n\"Yes, just a couple hour visit, this time. Just to get the two of them acquainted with each other. If this goes well, we'll do it again in a few weeks when he has a Saturday off again. Yikes, look at the time, I have to get going.\"\n\nJenn said goodbye and headed out to her catering gig. The two of us had a fun evening. It was a total girl's night. Pizza, popcorn and sodas. Some of the things Jenn never let her have at home. As I introduced her to the joy that is Ben and Jerry's, I reminded her, \"what happens at Miss Whitney's stays at Miss Whitney's.\"\n\n\"Right. Do you think Mommy's going to like my nails?\" She held out her freshly painted fingernails. The glitter in the purple polish caught the light and sparkled. I held out my matching nails next to hers.",
        "\"I hope so munchkin, or we're both in trouble.\" The rest of the night we watched movies and played with dolls until bedtime. I tucked her in what was the guest bed, but is now becoming her bed, with Nani and Anna and closed the door. \n\nThe couch was a little lonely without Jenn. I looked at my phone to see if there were any texts from her, but nothing. I figured I should let her be and not get her in trouble with her work. But there was a text from my mother. \n\nMom: Did you know your girlfriend is working for a caterer tonight?\n\nMe: Yes, how did you find out? \n\nMom: We're at the party she is working at.\n\nMe: Oh\n\nMe: Awkward\n\nMom: Why is she doing catering work again?\n\nI texted her back with a bit of the story, but Mom wasn't much of a texter, so no surprise when she didn't reply further. I tried to get into something from a streaming service, but I was just biding my time until Jenn came home. I found myself getting comfy on the couch. I'll just close my eyes for a moment. \n\n\"Sleeping on the job huh?\" A cute blond in all black was standing over me. \"Guess I still have to tuck someone in tonight. Good thing you gave me a security code to get in on my own tonight. Otherwise, I would still be standing outside.\"\n\nI dragged my lazy bones off the couch, and we went upstairs. I glanced at the clock and it was one thirty in the morning. She must be exhausted. \n\nAnd I was right. It was all she could do to get ready for bed. I began to massage her feet as she climbed into bed. \n\n\"m-m-m-m Whit...\" her voice trailed off and I could see her relax. A couple minutes later she was out. I still spooned her. I did so every chance I could get. \n\nThe next morning it was all I could do to get her out of bed. I had Madison ready to go for her daddy play date at the park, but Jenn needed to be the one to take her. \n\n\"Mmrphf, just wanna sleep,\" she mumbled as I rubbed her back. Madi came in and helped me to wake up her mommy. It took some work, and a couple cups of coffee, but I had the two of them out the door and to the park for the playdate. \n\nAs they pulled out of the driveway, I looked around my house. Skipper was curled up on the sofa, purring away. Probably dreaming about catching a bird or a mouse or something. Or maybe about getting her ears scratched by her four-year-old best friend. She and Madi have bonded well. \n\nThe stack of birthday invitations for Madi's birthday near the end of February called my name to get completed. I had quietly called her preschool and gotten a list of her classmates and was secretly planning a surprise birthday party for her. I think Madi is going to love it. Most of the plans were falling into place, just needed to get the invitations ready and out. \n\nIt was so quiet here, all alone. Jenn and Madi were now spending a couple evenings a week here and sleeping here over the weekends. Those nights when they weren't here, I was generally at their place. I was starting to think of asking them to move in with me, but hadn't figured out how to ask Jenn. And I'm not sure how she would take it either. Having her own place for just her and Madi was important to her. She still struggled to make ends meet. I had put together enough of the pieces to know that much. But having the place was confidence boosting for her, in a way that I would never understand from my place of privilege. \n\nSince it was a nice sunny day, I decided to go for a run. Turning up the street from my townhome, I began to remember the day I saw Jenn and Madi in the park. A lot had happened since that fateful day. \n\nJennifer\n\nWe were at the park for a few minutes when a familiar face walked up to me. There was a part of him that looked the same from our high school days, same smile, same gait. But he had filled out. I think the last time I saw him in person was shortly after Madi was born. He had come home on leave and came to visit his daughter. \n\n\"Looking good Dallas.\" I waved at him. Even with his fleece on, I could see the power in his arms. He gave me a hug, and we walked over to Madison, who was on a swing. \n\n\"Hi baby girl,\" he said with a smile to our daughter. \n\n\"Daddy?\" Madison got off her swing and timidly came over to us. I nodded to her, but she came over and held my hand. \n\n\"Madison, can you give your daddy a hug?\" I said. Dallas squatted down like a baseball catcher and held out his hands. She stepped into his arms and gave him a hug. \"I'm sorry I have not been around much for you, but I hope to do better for you. I'd like it if we could be friends.\"\n\nIt was awkward at first, for all of us. I tried to stay out of the way and let the two of them have their time, but I knew I was a safety blanket for both of them. Soon though, Dallas's silly side poked out and the two of them were running around the playground like old friends. Or better yet, like a father and daughter. \n\nThis was the side of Dallas I always liked, what had drawn us together back in high school. I sat on a bench and just watched them play. I had my phone out and whenever Dallas looked my way, I pretended to be on it, just to give him the appearance of not being watched. The two played for over an hour when he came and sat by me on the bench. I looked up and saw that Dijon had come to the park and the two besties were playing together now. I looked around for Chantal, but I didn't see her right away. She was over at a picnic table on the far side of the park from us. I'd have to go say hi later.\n\n\"She is sure full of energy.\" Dallas was a bit out of breath. \"This is a better workout than PT.\"\n\n\"Now you see why I sit on a bench and let her play. Otherwise, I get worn out, and she keeps going. So how are things with your new post?\"\n\nDallas and I spent the next bit catching up with each other's new jobs while Madi played with her friend. It was interesting to hear about what he did as a rescue swimmer and how he got into it. \n\n\"So why did you take the posting here and not stay in Hawaii?\"\n\n\"Well, my rotation was done there and at some point, I needed to transfer, and there was an opening close to Madi and I thought, okay, my CO 'suggested' that I move closer to my daughter. That it would be good for both of us if I had some involvement in her life. Even if it's just only seeing her every once in a while. At least then her dad will not be some abstract photograph.\"\n\n\"Dallas, I want you to be in her life. I don't want her to have a situation like I did.\"\n\n\"Your dad left when you were six, right?\"\n\n\"Five, but close enough. I wouldn't even know how to track him down if I wanted to. Last I knew, he was working on an oil platform in the Gulf of Mexico. I think that was ten years ago. Mom didn't talk much about him, and then it was never in good terms.\"\n\n\"How is your mom?\"\n\n\"Ugh, we had a big fight last week. I was out there last weekend with Madi and a friend and we went to see her. Not good.\"\n\n\"Sorry.\" We just sat in silence for a while, watching Madi and not sure what else to say.\n\n\"So, Jenn, Madison wasn't the only reason I wanted to move out here.\"\n\n\"No?\" I looked over at him and he was staring straight ahead out our daughter.\n\n\"I was kinda hoping that you and I could reconnect.\" I felt his hand take mine as he turned and looked at me.\n\n\"Dallas, I don't know what to say. I'm flattered, but I'm seeing someone right now.\" His head slumped a bit as I guess I burst his balloon.\n\n\"Does he love you? Treat you right? Does he treat Madison right?\" His voice was but a whisper as he asked. I put my hand on his thigh to give him some reassurance. \n\n\"Dallas, you have nothing to worry about. Whitney very much loves me and looks after Madison with as much love as I do. Those two get along almost too well. You saw her purple nails today, right?\" Dallas nodded. \"Well, the two of them did that last night while I was picking up some extra work.\" \n\n\"Wow, that's some boyfriend who will paint his nails with his girlfriend's daughter.\"\n\n\"Dallas?\" I took his hand a moment. Visions of my mother blowing up started to race through my head. My hands started to shake with fear, but I had to do this.\n\n\"It's okay Jenn, what is it?\"\n\n\"Dallas, please don't hate me, but Whitney isn't a guy.\" He looked confused for a moment, then his brow furrowed.\n\n\"Jenn, does that mean what I think it means?\"\n\n\"Yes.\" I was searching his eyes, his face, for a clue to his reaction.\n\n\"You said she loves you and treats Madison right?\" my head bobbed up and down. \"Then I'm happy for you.\" He reached over and gave me a hug. \"Gotta say I'm a bit bummed out, but maybe I didn't have much of a chance. I mean, I knew there was a good chance you would be seeing someone.\" Dallas looked out at the playground and as Madi and Dijon broke into a fit of giggles over something. \"I remember how you looked when Michelle Bloom entered the room in High School. You always perked up. Her and Amy Collins. No matter what, you always got a smile on your face when one of the two of them entered the room.\"\n\n\"Really? I had no idea I did that.\" \n\n\"Daddy, can you come push me on the swing?\" Dallas got up from our bench and went over to the swing set. I could see Dijon and Chantal walking away in the distance.\n\nDid I really look at Michelle and Amy like that? Frankly, I didn't remember looking at them all that differently in high school. Maybe I did. Hmm. I walked over to the swings to join them.\n\n\"Look how high I am going Mommy.\" I wondered what my life might have been like if I had followed Dallas to a base and continued our relationship. I snapped out of my deep thought and saw Dallas being a typical male, watching a hot babe run by the park we were at. \n\n\"Are you checking out that brunette in purple leggings over there?\"\n\n\"Uhh... uhh... no?\" He gave me a sheepish grin. I saw Whit spot us and head our way.\n\n\"Well, you got no chance with that one Dallas, trust me.\"\n\n\"Miss Whitney! Daddy is helping me on the swings.\" Dallas stood there with a dumb look on his face. He pointed at me, then at Whit, then back at me. \n\n\"Is this your girlfriend?\" He shook his head in disbelief. Even tired and sweaty, my girlfriend was hawt. \n\n\"Dallas, this hot sweaty mess is my Whitney, Whitney, Madi's daddy Dallas.\"\n\n\"Nice to meet you, Dallas.\"\n\n\"Likewise.\" \n\nWe made small talk for a few minutes before Whit excused herself and headed back to her place. Madi was still swinging away with help from Dallas. She was having a blast. \n\nDallas asked how Whit and I met, and I told him the story of the tree and of ice skating. He was a little surprised when I told him of her relationship to the company I worked for and how she was expected to take over the company someday.\n\nMadison and Dallas played together in the park for the next couple of hours. Swings, jungle gym, merry-go-round, everything. By the end, the two were best friends. I guess all the phone calls and Skypes over the years paid off. I don't think I could ask for much more for them. Eventually, I began to see the signs that Little Miss was getting tired.\n\n\"Madison it's getting time to get you home.\" I picked her up in my arms. \"Did you have fun with your daddy today?\" She enthusiastically bobbed her head. \"Do you want to do more stuff with him? Maybe just the two of you?\" More head bobbing. I turned to Dallas. \"Can I assume you would like to spend more time with your... our... daughter?\"\n\n\"I would love to. Here is a question for you. Could I have her in a couple weeks on the Saturday before Valentine's Day? There is a Father-Daughter dance that the VFW puts on, and all of us at the station are invited.\" \n\n\"I think we can make that happen. We'll have to figure out the logistics, I should probably talk to Whitney about it.\" I looked down at our daughter, \"Would you like to spend the day with your daddy and go to a special fancy dance? Just you and your daddy?\" \n\nAfter a moment she nodded and held up her arms to get a daddy hug. \n\n\"Ok, I should know my duty roster in a couple days and we can figure out the transportation plan. Thanks, when I heard about this, I knew I wanted to take Madison.\n\nMadison climbed out of his arms, we said goodbye and headed home. \n\n<center>_\\|/_</center>\n\n\"Hi Jennifer, would you mind looking over these concept pieces and giving me a bit of feedback on them? I have to present them later this week to the big bosses. You always have good ideas, so I would love to get your opinion on them.\"\n\n\"Sure Sal, be happy to.\" Sal was a nice guy, if you could get past his Brooklyn accent. He was primarily in sales, but did the marketing for Maritime as well. As a company we didn't have a marketing department per se. Since we didn't sell to the public, marketing was sort of viewed as unnecessary. Sales on the other hand were a big deal. Most of our contracts were huge multi-year deals with some of the biggest shipping companies in the world. Go drive past a container port or look at a train filled with containers and take a look at the names on the steel boxes. Those companies were our customers. \n\nI opened up the folder and began to look at the various pictures and draft messaging on them. Well, if he wanted my opinion, I was going to give it to him. This needed work, a lot of work. I thought back to my marketing class I took as part of my associate's degree and tried to remember what was said.\n\nIn our case, we were not trying to win new business, but make our current clients feel good about doing business with Whitney Maritime. Or to make the public feel safe about our tugs. I began to write a lot of notes down. Suggestions of pictures to use, what you wanted the picture to say or suggest. After an hour, with a couple of phone interruptions, I had most of the example pictures and documents marked up on sticky notes. And in many cases, there was more yellow visible than the underlying copy.\n\nI took it back to Sal, who eagerly opened up the folder, and then frowned. I don't think he was expecting this level of analysis.\n\n\"Sorry if I overstepped my bounds. You said you wanted my opinion, so I did my best to explain what I was thinking on each piece.\" I watched him read the notes on the first page.\n\n\"Jennifer, I have to admit that this is a little more than I was expecting. I was initially thinking you would just do some copy editing, checking for spelling, grammar, and the like. But this is way more detailed. Give me a bit, but I think I need to dive into this for a while.\"\n\nI headed back to my desk and spent the rest of the day doing my normal stuff. I watched the clock get to near going-home time when Sal came back to my desk.\n\n\"Are you sure you didn't get a degree in marketing? I'm going to eat a little humble pie here, but I think you have a better understanding of marketing than I do. These points are well said, and I can see the pictures you are describing.\"\n\n\"I particularly like the idea of the nature imagery along with our new hybrid tugs, or the call backs to the oneness of nature of the local tribes. We have good relations with a couple of the tribes, we might be able to do something with one or two of them. I took some of your ideas and created a few new mockups, what do you think?\"\n\nI looked at the offered prototypes and smiled. They were quick Photoshop jobs for sure, but got the ideas across. A good digital artist could make these ideas sing. It was nice to have my feedback so well received.\n\n\"If it's ok with you, I would like to let the executive committee know you had a hand in this. You have a natural eye for this kind of stuff. If you have more ideas like this, please share them with me. I'll see what I can do with them.\"\n\nAs Sal left my desk, my phone dinged with a text.\n\nDallas: Hi - looks like I have duty the morning of the dance, can you bring Madison over to Port Angeles that day?\n\nMe: Probably. What time should we be there?\n\nDallas: Three would be good. Also, I don't have dutry the following day, so if you like I can take Madison overnight. Give you and your girl a night out. I've got a spare futon Madi can sleep on.\n\nMe: That sounds like a good idea. Let me run it past Whit and get back to you.\n\nDallas: K\n\n<center>_\\|/_</center>\n\nWhitney\n\nThe Jeep made a familiar \"kathunk\" sound as we drove off the ramp of the Kingston ferry, heading to Port Angeles. Our first stop was going to be to drop Madison off. The address of the VFW Hall was actually in a neighboring town from his station, and fortunately for us, that meant a little less driving. For Jenn, the rest of our time would be a surprise.\n\nJenn had texted Dallas when we got off the ferry and when we pulled into the parking lot, he was there, waiting for us. I hadn't noticed much when I met him briefly in the park, but I have to admit he was attractive for a man. Not that he did anything for me, but I could respect and appreciate what my girlfriend saw in him years ago. And from what she said, he was a good man and did desire to see that his daughter is taken care of and has a positive male role model in her life. \n\n\"Hold still sailor.\" Jenn fussed with his uniform a minute, picking off some lint or something. \"Okay, Madison, I want a picture of you and your daddy.\" She got a couple of snaps with Dallas holding Madi and a couple more with her standing next to him.\n\n\"Jenn,\" I said. \"Now you get in the picture. Madi should have a few family pictures to look back on.\" It was a tad uncomfortable for the two adults, being in a picture with each other. But they sucked it up for their daughter. \n\nWe spent a few moments loading a sleeping bag and Madison's overnight bag into the trunk of Dallas's car. Jenn sent a group text to the three of us to make sure he had my phone as well, just in case there was an emergency. \n\n\"You sure about this? You're up for being a single dad for a night?\" Jenn was picking at her finger again and looked down at Madi.\n\n\"I'll be fine Jennifer. It's just one night.\" He gave her a little arm squeeze. \n\n\"Madison.\" Jenn got down to her level and gave her a hug. \"You be good for Daddy and do what he says okay? Whitney and I will pick you up in the morning.\"\n\n\"Okay Mommy, I love you.\" Jenn gave her a big hug, and then Madi insisted that I get a hug as well before she headed off into the dance hall. I looked at Jenn who had a tear dropping down her cheek. \n\n\"She'll be fine.\"\n\n\"It's not her I'm worried about.\"\n\nI laughed. \"He'll be fine as well.\"\n\n\"Not worried about him either. I was thinking about me. I've never spent a night without her under the same roof.\" I looked at my girl and gave her a hug. This was an aspect of motherhood I had not thought of before. \n\n\"Hey, it'll be okay. Enjoy your break. Your first day off in 4 years.\" I held her door open for her. \n\n\"Yeah, day off. I like the sounds of that. Okay mystery woman, what is the plan?\"\n\n\"Just get in.\" I started the Jeep up and headed back the direction we came. \n\n\"Going home?\"\n\n\"Nope, not far.\" Ten minutes later, we pulled into the hotel side of a tribal casino complex. \"Nothing fancy, not the Four Seasons for sure, but the nicest thing I could find without driving all the way back.\"\n\nWe walked into the cavernous lobby. A water feature was in the corner and the place was filled with Northwest tribal art. \n\n\"Nothing fancy huh?\" Jenn was looking wide eyed around. She held the sleeve of her hoodie with her other hand across her body while I checked us in. The desk clerk gave us our key cards, and I grabbed my large suitcase while Jenn slung her backpack on her shoulder. \n\n\"I'm sure we must have been a sight to the gal at the desk,\" Jenn said as we entered the elevator to the 6<sup>th</sup> floor. \"We're not your most traditional couple you know.\"\n\n\"Well, I'm sure we're not the first lesbians she's seen. Here we are. Room six-oh-one.\" I opened the door to our suite.",
        "\"Uh, this says executive suite on the room number sign.\" Jenn followed me into the room. \"Oh my! Whitney Mitchell, this is something else.\"\n\nThe room was just a nice suite, not an East coast billionaire hotel magnate fake ostentatious by any means. Just a large, nice room, tastefully appointed in a Pacific Northwest outdoors theme. Per my request when I reserved the room, a large bouquet of red roses was on the table, as was a bottle of bubbly on ice. \"You like?\"\n\n\"This is not a normal room. Normal is a bed or two in a small room with tv and maybe a chair. This is wow, just wow.\" I could see her reeling a bit. I popped the cork on the bottle and filled the two flutes next to it. I offered one to Jenn and enjoyed a sip. \n\n\"It's okay sweets. I just wanted a nice place for you to relax in. To not think about the rest of the world and just focus on us for a night.\"\n\n\"Fine, but in the future, can I be included in the planning? I'd like to have some say in what we do. You know I don't like surprises much. Also you know I'm just a simple girl with simple tastes, so you don't have to spend money like this to impress me.\" \n\nI slipped my arms around Jennifer from behind and nibbled her ear. I could feel my heart pitter patter for her. \"Okay 'simple girl,' what can a girl like me do to impress you?\"\n\n\"Take me in there?\" There was a grin on her face now as she looked into the bedroom.\n\n\"Take you in there? Or take you in there?\" \n\n\"Both!\" She spun in my arms and made eye contact. I felt her trace a finger up my back and pulled me down to kiss her. Pulling off her beanie, I ran my fingers through her hair. I could feel myself becoming aroused. \n\nI took her hand and led her in. We fell onto the bed as we jostled for who was kissing whom. I ended up on top, and as her hands roamed my clothed body, I almost came, I was that turned on. \n\nClimbing off for a moment, I began to lift my sweater. \"I have a present for you underneath.\" I had ordered it just for her, and since it was almost Valentine's, it was red. Jenn reached out to the jacquard silk bustier and began to trace her finger over the floral pattern while I shimmied out of my skinny jeans.\n\n\"You know I would be done faster if you could keep your hands off me for a moment. And you should be getting out of those clothes as well.\"\n\nI focused a moment on my jeans and then, once off, tossed them on a nearby chair. Spinning around I saw that Jenn was already naked and back in bed. The 'come here' motion with her finger was unnecessary, as the hunger in her eyes said it all.\n\nBarely getting back into the bed, I felt myself pinned down as she began to kiss me. And not just on the lips. Fuck, she found that spot just below my ear lobe that when you get it just right sends shivers up and down my spine. \n\n\"Yes, that's it.\" I moaned, and it wasn't a quiet moan by anyone's definition. Her thigh was pressed against my pussy, providing a gentle stimulation. Her hands were roaming all over the bustier and the three points of contact on my body were in sync with each other and felt wonderful.\n\nSuddenly it stopped, and I noticed Jenn sitting up, frustration plastered on her face.\n\n\"What male idiot designed your lingerie girl? How do I get this stupid thing off? I just want some of your magnificent boob for crying out loud.\"\n\nI showed her where her body had been covering up the side clasps, and she released her prizes into the wild. The only thing better than her hands on them was her lips. And unlike what Molls says most men are like, Jenn pleasured the whole breast and didn't just attack my nipples.\n\nKnowing what I like, Jenn slipped her hand down my boy shorts, picked up a bit of my natural lubrication, and began to play with my pussy. For not having done this very long, she sure had my number dialed up. Then again, my number is easy to get. Touch me for a little bit and pop. Just like now.\n\n\"Fuck me, oh yes, don't stop.\" I probably said more after that, but I don't recall it. I was too lost in the pleasure she was giving me. \n\nI came down from my high and lifted my head a little. Jenn was now between my legs and had my clit between her lips. Oh fuck, it's going to be one of those nights where she doesn't stop until I'm a gooey\u2014\n\n\"FUCK JENN!\" I came again, this time my whole body shook. I don't get orgasms that intense often, but I do enjoy them when they happen. \"Stop, please give me a chance to catch my breath.\" \n\nJenn sat up and gave me a smile that said, 'Look what I just did!' And if that wasn't enough, once again she did that little hair tuck behind her ear. Her sexy ass followed her as she got up and went to the bar nook and grabbed a couple of bottles of water from the fridge. \"I think you need this.\" \n\nI looked down and I was a sweaty mess. It was dark outside, which meant we had been going at it for a while. The cold water was refreshing, but even better was that my girl was holding me and letting me bask in the afterglow.\n\nA hot shower was waiting for me after I finished my water and had a pee. One of the deluxe features of this suite is a shower big enough for a basketball team. Maybe some people had orgies in here? I don't know, but more of Jenn's hands all over me as she lathered me up and washed my hair felt great. It was difficult not to try to take her right then, but I was hoping to help her have her first orgasm tonight, so I wanted to build her up and save it until after dinner. \n\n\"Are you about done in there?\" Jenn yelled into the bathroom where I was doing my hair and makeup for dinner. I guess the saying 'opposites attract' has some validity, at least for the two of us. We got done in the shower together and 5 minutes later, she was dressed and ready to go. Me, on the other hand, I took ten minutes to decide which of the four dresses I brought I would wear, and I thought I had decided quickly. Then I needed some mirror time to get myself ready.\n\n\"Almost ready,\" I hollered back. \n\n\"Meowerrr,\" Jenn purred as I came back into the bedroom. She stood up from the sofa she had been relaxing on and channel surfing while she waited. \"Be still my beating heart.\" She patted her chest, \"I'm going to dinner with the hawtest girl around.\"\n\n\"Do I meet with your satisfaction?\" I twirled around in my burgundy bandage dress. Okay, I spun around, there was no excess fabric for a twirl. \n\nShe was so cute standing there speechless, her eyes mentally undressing me. I took her hand and embraced her. \"Later tonight, you know what's on the dessert menu? You are.\" Her eyes flared, and I realized we needed to get down to dinner before I lost all control and had my way with her.\n\nEven though we had a reservation, there was a small wait for our table. The place was packed. Well, it was Valentine's weekend, and this was a bit of a destination getaway. \n\nWe got a few looks from others, but I suspected it was mainly due to me being dressed up and her in cargo pants and a beanie. But she had held my hand all the way from our room and I think she was starting to feel comfortable with us as a couple in public. \n\nThe fine dining restaurant at the casino was offering a six-course meal, with each course paired with a regional wine. Our waiter confirmed that we had no allergies or dietary restrictions and then brought forth our amuse-bouche and its initial pairing. The sommelier stopped by to explain the selections we would be having that evening. As he left, we both began to enjoy the food.\n\n\"Whit, this place, this food, is amazing.\"\n\n\"You like?\"\n\n\"Yeah, a bit overwhelmed by it, but yeah.\" I watched her eyes nervously flit around the room. \"This is so much beyond what I could do, I wouldn't even have dreamed about something like this. Before you, a nice dinner would have been Olive Garden.\"\n\nI put my hand on hers. \"Does this embarrass you?\"\n\n\"A bit. I mean, I barely scrape by on my own. I'm at the point now where I can sort of get by without the state assistance, which I dropped at the end of last month by the way. But I know I am one disaster away from going back. And here I am in the lap of luxury with you. it's sometimes hard to justify in my head.\"\n\n\"I don't mean to make you uncomfortable or anything. I just like to do nice things for those who mean the most to me. And you've moved into a very special spot in my heart, Jennifer DeLuca. I know we've been together for not quite two months, but I can't imagine being without you now. I have feelings for you that are way beyond anything I ever had with Heather or prior. I've had to work hard to keep myself in the present with you, and not let my mind get too far down the road.\"\n\nJenn let out a little sigh of relief. \"I'm glad I'm not the only one thinking this way. But it's still hard for me to wrap my brain around this... and you\u2014\" and she looked at me in the eye \"\u2014and me, and us. Honestly, part of me really struggles with being with you. I feel a bit like a sell-out. It's like I have a sugar mama now. That I am not getting by just on my own. For four years that is what I wanted. And now my life is all turned upside down.\"\n\n\"Do you really think I am just here for the sex? To be a sugar mama?\" I was a tad miffed.\n\nOur conversation paused as the waiter brought us our salad course and a new wine pairing. To this day I have never quite figured out where they get fresh strawberries this time of year here. They have to be flown in from some far away part of the world, but I wasn't complaining that night.\n\n\"No, Whit, it's just that you have so much, and I have so little, that it's easy to make that comparison. When we are just at your place, it's not so stark a contrast. But when we go elsewhere, to your parents' mansion, your island place, your uncle's ski condo, it all speaks of money, luxury and refinement. And if you want a definition of the opposite of that, you will see my picture. Tonight, is a perfect example. I'm in thrift store cargo pants and beanie, and you're in a dress that might cost more than what I make in a week.\"\n\n\"Actually...\" I was about to defend my dress, that I got it online for what to me is not that much money, but then I saw what she was saying. \"No, yeah, I get it. Jennifer, I don't want you to feel that anything I do is to make you feel bad or make a statement about the privilege I come from. I do these things because I love you, and this is one of the ways I show that. I told you early on that I show my love by giving gifts. So, some of it's that. And some is just who I am, how I was raised. I'm not ashamed of it and I want to share it with you and Madison.\"\n\n\"And I want to share my life with you as well. I just needed to let you know what I was thinking. How I have been feeling about things.\"\n\nI pushed the last of my salad around. It was then the waiter brought our soup course. The aroma of the French onion soup made my mouth water. We each eagerly took a bite, it melted in my mouth. I could see Jenn's head going from side to side. \n\n\"Not good for you?\"\n\n\"No, this is good. Second best I've had.\" She let out a little laugh. \"It might shock you, but the best was at my old diner. Gus, the cook there, was a crappy cook. But the one thing he could get right was French onion soup. He had it down to a science. I'll have to take you sometime. Just stick to the soup though.\"\n\n\"Got it, just the soup.\" We both ate our soup in silence. Both pondering what we had been talking about. \n\n\"Whit, can I ask you a personal question?\"\n\n\"Sure.\" \n\n\"I don't want to be rude or nosy, so feel free to tell me it's none of my business. But how much do you make?\" Jenn had a pensive look on her face, unsure if she had crossed a boundary or not.\n\n\"That's a fair question. I make an average salary for someone with my experience and education. Just because I work in the family business doesn't mean I get paid extra. But it's well over a hundred grand a year. But thanks to mom and dad, unlike most people, I left grad school with no debt and then when I got access to my trust fund, I used part of it to buy my house with cash.\"\n\n\"That's no mean feat in Seattle.\"\n\n\"I know.\" My voice was a bit reserved. I didn't want to sound like I was bragging or anything. \"So, I have good cash flow, and doing these things with you is way more fun than what else I might do with my money. I'm certainly not going to spend it all on cat toys for Skipper.\"\n\n\"Ha! You don't need to spend money on Skipper, just put her with Madison and she'll be happy.\"\n\n\"Which one?\"\n\n\"Both,\" we both giggled.\n\nI started to imagine Madison growing up in my house, playing with Skipper and making a family with Jennifer. I think she saw the smile on my face and took my hand and just held it for a bit. The rest of dinner was more lighthearted conversation. Much of it centered around the third person in our orbit who wasn't with us then. Jenn told me how Madi got in trouble in preschool with Dijon for taking a dump truck from a little boy so their dolls could have a big enough car to carry all their shopping around. I had to laugh some more when I found out their shopping was the little plastic produce toys from the kitchen set there. I could just see Madison with a dump truck full of icky, nasty, plastic broccoli. \n\nAlthough I had an itching to be a bit naughty, we simply held hands on the elevator ride back up to the top floor following our dinner, mainly because we were not the only ones on the elevator. That, and we were both stuffed. Unspoken between us but understood, we both needed to wait awhile before engaging in any strenuous activity after such a meal. \n\nI suggested to Jenn that she lie on the bed and I would give her a massage. Maybe I had an ulterior motive in doing so. The opportunity to rub my hands over her naked body wasn't lost on me. Or her for that matter. Her body relaxed and was putty in my hands as I worked some massage oil into her skin. I roamed from her back down to her thighs, and then after a while between them.\n\n\"Mmm, you're going to have to do something more there soon.\"\n\n\"Like this?\" \n\n\"Yes, gawd yes.\" She was borderline panting. \"Make love to me.\" She rolled over and pulled me to her. Her lips were begging for mine, and she held me tight as our lips reacquainted themselves with each other. \n\nI finally was able to break free for a moment to put my harness on and get our red friend ready. Part of me feels a bit bad for what I did to her next. But not really. I teased her and drew out our lovemaking for over an hour. Anytime I thought she was getting close, I would stop and change positions or let her come down a bit before starting up again. \n\nBut for as much as I tried, I got her nowhere. I felt like a total failure again.\n\n\"It's ok, really. I'm having fun, and I feel so connected to you like this. Our naked bodies all tangled together. it's just going to take me some time, I think. I have to figure out how to shut off mommy brain and be fully in girlfriend mode. Not something I am used to yet.\" \n\nWe snuggled the rest of the night, watching some mindless show we found on the tv. Our phones dinged at the same time. A series of pictures started to come through from Dallas, from the dance and the evening. The last one being a sleeping little girl snuggled in with her Nani. Eventually we fell asleep in our usual position of me spooning her. \n\nThe next morning, Jenn and I got to sleep in and then have some more play time. But I just got more frustrated as I was still not able to get her off. \n\nWe met Dallas in the parking lot at the hotel to pick up Madison. As we pulled out of the parking lot after saying a long goodbye, Jenn asked Madison, \"So, did you have a fun night with your Daddy?\"\n\n\"Yeah, we danced, took pictures and had dinner. And Daddy didn't make me eat any broccoli. Afterwards we got strawberry milkshakes.\"\n\n\"O-o-o-h, that sounds like fun.\"\n\n\"And this morning he made me a Mickey Mouse pancake and we watched YouTube. There was the cutest fox Mommy. HisnamewasFinnegan. Andhehadfriendsincludinganewbabyfox. BabyfoxesarecalledKits. HernameisFloofala.\"\n\n\"Slow down and breathe pumpkin, I know you're excited.\" \n\nI snickered at Jenn as she tried to keep up with an overstimulated and excited daughter. \n\n\"Mommy can we get a fox?\"\n\n\"As a pet?\"\n\n\"Yeah.\"\n\n\"I don't think so.\"\n\n\"Please?\"\n\nAnd the conversation went like that all the way home. \n\nJennifer\n\n\"Ok, so where are we going again?\"\n\n\"It's a surprise. Come on, Jenn, don't take the fun out of it.\"\n\n\"Birthday! I'm the birthday g-i-i-i-r-r-r-l.\" Madison sang from the back seat of Whitney's Jeep. She was in her Elsa dress, as Whit had instructed. She would be bouncing around the backseat if she wasn't buckled in. As it was, she was chair dancing to some tune in her head. I was a bit more skeptical. I don't like surprises. Maybe it's because there is so much that I can't control in my life that I want to know what is going on. \n\nWe had a small party on her actual birthday earlier that week over at Whit's place. Ben and Edith had come over for dinner and we had a small cake I had made, and Madison had unwrapped some presents from all of us. I was rather taken in by how much Whit's parents were becoming attached to Little Miss and wanting to be a part of my and her life. \n\nFor as cold as Edith was when I first met her, she has warmed up and was slowly becoming friendly now. We had a couple of nice but brief conversations when I had bumped into her over at the corporate office, when I had to run some papers over a time or two. And the other day when she had come by our office, she made it a point to chat with me on her way out. \n\nAs much as I reminded myself that this relationship was only three months old, it felt like we had been together for a lifetime. And it was a complete contrast to my mother. She who had never before missed a birthday, Christmas or who would call and check in to see what her granddaughter was doing had been completely silent since I had come out. \n\nWhit steered the Jeep into a nondescript business park and pulled in front of a place called the Jumperoo House. I gave her that look of 'what are you getting me into?' as we climbed out of the Jeep. \n\n\"Relax Jenn, it's going to be fun.\" Little Miss had climbed out on her own and we all walked hand in hand into the facility. \n\n\"Bounce houses!\" screamed Madi as she peered around the corner from the sign-in desk. This was a five-year-old's mecca, inflatable bounce houses of all types filled the old warehouse. It wasn't just bounce houses, but the place was decorated with light blue bunting and banners to make it an ice palace fit for a frozen princess. \n\nWithin minutes, other children began arriving, all of whom I knew or recognized. Almost all of Madison's preschool class was here, plus a few others from the Christmas pageant she had been in. \n\n\"You've been busy,\" I murmured to my girlfriend. \n\n\"Surprise, Mommy!\" And I felt a small peck on my cheek. Moments later Whit was bouncing off as well, chasing after Little Miss and her friends as they were in an inflatable castle. \n\nI found a spot to sit, somewhat out of the way, to watch what was going on. Kids were running and screaming and having a blast. So why wasn't I happy? Madison \"Elsa\" DeLuca was trying to do flips by bouncing as high as she could and then attempting to spin herself head over heels. \n\n\"Penny for your thoughts Jennifer.\" I looked up and to my surprise, it was Dallas. \n\n\"Hi there, didn't know you were coming.\"\n\n\"And miss my daughter's birthday party? Are you kidding? This makes moving from Hawaii all worth it. Some party you're throwing Jennifer.\" \n\n\"Not me, but Whitney. I'm just along for the ride.\" I leaned my elbow on my knee and rested my chin on my fist as I watched Whitney and the kids play. 'Some party,' I thought to myself, 'and I had nothing to do with it.'\n\n\"Look Mommy!\" I saw Madison finally getting the somersault thing down and she was flipping herself over. I gave her big thumbs up. ",
        "\"E-E-E-E-E\u2014 ELSA! ANNA!\" little girls shrieked from behind me. My head turned and two actresses entered the warehouse all dressed as a little girl's fantasy, and began interacting with the kiddos. Even the boys there were into them. \n\nMadison was front and center talking with 'Elsa' and of course the actresses paid special attention to the birthday girl. One of the warehouse staff members led them all to the party room that was all decked out in light blue. A throne was set up where each little girl (and boy) could sit and be flanked by the actresses for a photo op. Whitney was marshaling all the kiddos through so they could all get a turn. \n\nI was hanging in the back when I felt a hand on my shoulder. \"You doing ok?\" Dallas had a concerned look on his face. \n\n\"Yeah, I'm fine,\" I lied. Why was I having such a hard time today? My daughter was having the time of her life. Dallas went over and picked her up and sat on the throne with her. His navy-blue coat and Coast Guard ball cap went well with the blue theme. I could tell that father and daughter had bonded in their weekend together, and now she was rather attached to her daddy. \n\nI slipped out of the room and slumped down on a bench next to a now quiet bounce house. Why was this so hard? Maybe it was because for the first time, my mother had not sent anything. She was completely ghosting us. Well, we did get one thing from her. The invitation that Whitney had sent to her to the party had come back return to sender. And it was written in her handwriting. \n\nSince the fiasco, every attempt to call, text, or email her had gone unanswered. To ignore me and shut me out was one thing. But to do that to my little girl was something altogether different. And I was mad.\n\n\"Hey sister.\" Chantal had a worried look on her face. I had seen that look months before back in the shelter.\n\n\"Hey you.\"\n\n\"You and your girlfriend got quite the party going. These kids are going to be talking about it forever. Dijon is having a blast.\"\n\n\"Good to hear,\" I muttered.\n\n\"Hey, are you okay?\" \n\n\"Yeah, I'm fine.\"\n\n\"Don't bullshit me sister, I know you all too well, what's wrong?\"\n\nI took off my beanie and scratched the back of my head. \"I wish I knew. My daughter is having the time of her life, but I'm miserable.\"\n\n\"Well try and have some fun. Your girlfriend, who is a kick in the pants by the way, is looking for you. Maybe you should go back, and she can cheer you up?\" She patted my knee and headed back in. \n\nI did go back in, and soon mom mode kicked in and I was busy serving pizza to a room full of boisterous kids and parents. Many of the other parents there were also helping to corral wound-up children and then help to clean up the mess. Whitney and Chantal herded the kids back over to the throne where the birthday princess claimed her place and began to unwrap presents. Spying some paper and a pencil, I started to keep a list of what each kid brought so proper thank you notes could be sent. \n\nWhit made sure Madison said goodbye and thank you to each of her guests as Dallas and I stayed behind to clean up. It was hard for me not to notice what a kind, caring man he had turned into. I was proud that he was Madison's father. As the last person left, he helped me carry all the gifts out to the Jeep and get it loaded.\n\n\"Well, baby girl, I need to get going. I haveta be back at the air station in a couple of hours to see if anyone needs a rescue. You be a good girl for Mommy, ok?\"\n\n\"Ok Daddy, I love you.\" With a big hug, he drove off, leaving just the three of us.\n\nThe short drive back to my apartment was filled with Whitney and Madison singing Let It Go as loudly as they possibly could. They were both rocking it out as we hit a red light. Whitney, in particular, was bouncing to the song blaring from her stereo.\n\nWe both took a load into my apartment while the birthday princess twirled around, still on cloud nine. Whit followed me out as I went to collect the last few items. \n\n\"That was some party,\" I murmured. \n\n\"Yeah, the kids had fun, didn't they? I'm glad we could pull it off.\"\n\n\"We?\"\n\n\"Well...\" she went to take my hand, but I pulled it away.\n\n\"This was all you Whitney, as it usually is.\" My tone was more snide than I wanted it to be.\n\n\"What does that mean?\" she snapped back. \n\n\"I'm just frustrated that you are always going off and planning stuff for us, but never consult me. You just expect me and Madison to do whatever you want to do.\" I turned my back to her. I couldn't look her in the eye right now.\n\n\"Jennifer! I\u2014\"\n\n\"No Whitney, we talked about this. I want to have input in what we do. That I don't like surprises. And Madison is my daughter, not yours. It's my job to take care of her.\" I rubbed my forehead, this was giving me a splitting headache.\n\n\"Hey, I know you can't do stuff like that for her, so I thought you might like it if I helped you?\"\n\n\"That sounds like pity. I don't want your pity. I never have.\"\n\n\"Jennifer!\" \n\nI turned back to look at her. \"WHAT?\" I couldn't hide my exasperation any longer. \"Oh, the poor little single mom can't take care of her baby, so I am going to come in and do it for her? I don't want that. I don't need that Whitney Mitchell.\"\n\n\"I... I... didn't mean it that way.\"\n\nIt was all I could do not to scream my head off. Then I remembered something Dallas's mom told me years ago, that when you are most frustrated, lower your voice. It was originally given as parenting advice, but it felt appropriate here. I dropped my voice to just above a whisper, \"But that is what it was, wasn't it?\" \n\nWhit looked down at the ground. Her lack of an answer spoke volumes. We both stood there for a minute. My hand was shaking, but it became clear to me what I needed to do.\n\n\"I think I had best get back inside.\" I breathed in to garner the strength to say what came next. \"I think I need a break.\"\n\nWhitney looked up at me, her lips quivering. \"A break? As in a rest?\"\n\n\"No, as in a break from us.\" Tears began to fall down my face as I walked back into my apartment and closed the door.\n\nTo be continued...\n\n<center>_\\|/_</center>\n\nAuthor's note: Thank you for sticking around to the end of this chapter. I hope you enjoyed it. If so, please consider providing some feedback. Votes, comments, or PMs are all welcome. I have more chapters of this story in the works, so follow me to be notified when the next part is published. \n\nA special shout out goes to JCMcNeilly for permitting me to engage in a bit of Hero Worship of my own. Thank you for your encouragement to keep going when I was first drafting this tale. \n\nIf you are looking for something more to read, check out the authors I follow. Maybe you might find something there that you like."
    ],
    "authorname": "GinnyPPC",
    "tags": [
        "lesbian romance",
        "single mom",
        "ranch dressing",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/catering-girl-ch-04"
}