{
    "title": "A Lifetime in One Moment",
    "pages": [
        "Author's Note: I struggled with whether this was a \"First Time\" or a \"Mature\" story. In the end, I suppose it's about love and coming of age. So here it is.\n\n*****\n\nI was there when Laura Hollander learned of the death of her husband. I was cleaning the Hollanders' pool, and Laura was sitting at the patio table reading a magazine when the doorbell rang. That was a quarter century ago. I am still certain today that had I not been there at that moment, events would not have unfolded the way they did, and I would not be the man I am today.\n\nI was just a student back then, and cleaning pools after school was how I made my pocket money. I had about twelve regular customers in our gated community just north of Scottsdale. The Hollanders were my favorite customers because they didn't have any kids, so it was always peaceful in their backyard. It was professionally landscaped, too, and with its flowery hibiscus trees, billowing red bougainvilleas, and pungent gardenia bushes, it was a tranquil garden respite from an otherwise hectic, kid-infested neighborhood.\n\nThe Hollanders kept to themselves, and though Laura was usually at home when I was there, we didn't talk all that often (not before that day). She was always gracious, however. I would let myself into their backyard every Thursday at three, trying to be unobtrusive, but no matter where she was in the house or what she was doing, she would always come outside to say hello and offer me her hand and give mine a friendly squeeze. When I look back on it now, it was like the sun was always behind her at that moment, lighting up wayward strands of her curly sandy blonde hair. I remember her that way. \n\nShe always looked dressed up to me. Even in simple beach pants and a halter-top, I thought she was too elegant and attractive to be a housewife. She had long graceful limbs and a trim but womanly figure. There was a kindness in her hazel-green eyes that made me feel comfortable around her. She would occasionally bring out a pitcher of iced tea or fruit punch, and after about five exchanges of \"Thank you Mrs. Hollander\" and \"You can call me Laura,\" I finally got used to calling her Laura. \n\nOn the day Laura's husband died it was unusually warm, a bright fall afternoon in the desert highlands. The air was dry without the faintest hint of a breeze. I was patiently skimming oily brown leaves from the pool. Laura was wearing sunglasses, so I couldn't see her eyes, and as I often did, I imagined she was watching me, admiring my long, lean muscles and honey brown tan. I worked methodically that day, luxuriating in her presence and the calm of the garden. When the doorbell rang, she took off her sunglasses and looked at me. \"Who could that be?\" her eyes said.\n\nI went back to work. Moments later I heard her muffled gasp.\n\n\"Oh God no!\"\n\nI could see her bright sundress against the black silhouette of two police officers at the front door. One of the officers stepped into the house, hat in hand, and led her by the arm to an overstuffed chair. Laura sat down and put her face in her hands. The officer had his back to me, and I couldn't hear what he was saying. \n\nI put on my shirt and organized my equipment. I thought about leaving, but I couldn't. I knew something terrible had happened, and I felt like I shouldn't run from it. I learned later that evening that her husband, Dr. Peter Hollander, had died in a car accident while in L.A for a conference. \n\nIt seemed like the officer talked for a long time, but I suppose it was only a few minutes. He set some paperwork on the coffee table and noticed me. I think he asked Laura a question. I saw her shake her head no and say something. I guessed the question was, \"Is that your son?\"\n\nAfter a few more minutes, he showed himself to the door.\n\nI couldn't look away from her. Her face was still in her hands, elbows on her knees, and she looked like she wanted to melt into that big chair. The sun moved before either of us did. I thought to tiptoe away again, but it still didn't feel right. \n\nI wanted to say something, but I didn't want to startle her, so I moved some of my equipment around to make some noise. I saw her look up. I took a deep breath and walked over to the back screen door. She was looking at me, and her face was wet with tears, but she was not crying.\n\n\"Mrs. Hollander,\" I said knowing the moment called for some formality, \"is there someone I could call for you, something...anything I could do for you?\"\n\n\"No, Kevin,\" she whispered, \"there is nothing anyone can do for me right now.\" She kept looking at me, and the sadness seemed to radiate from her.\n\n\"I'm sorry,\" I whispered back. \"I'll go.\" I hung my head and began to turn away.\n\n\"Could you...\" she started and I turned back. \"Could you sit on the patio for a few minutes, just so I know someone's there, until I can get myself together a little bit.\"\n\n\"Yes ma'am. I can do that.\"\n\nSo I sat at the patio table and looked at the pool. I watched the sun make its way over the glistening ripples of water. I had never experienced such quiet. Then I heard her soft voice.\"\n\n\"Thank you Kevin. I'm okay. You can go.\"\n\n\"Are you sure?\"\n\n\"I am going to be fine. My sister is coming.\"\n\n\"I can stay until she gets her...\"\n\nShe pursed her lips in a way that told me she thought I was unnecessarily concerned. \"She'll be here any second,\" she said, \"and I really will be fine, Kevin. Don't worry.\"\n\nAs I looked at her I could sense her already growing resolve. Her face was still streaked with salty tears and her hair was in tangles around her face, but she had clear eyes and a determined expression. I felt strangely connected to her just then, like we were truly seeing each other in that moment. I saw that she was beautiful and strong-willed. I wondered what she saw in me.\n\n\"Thank you,\" she whispered and turned away.\n\nI went home and stretched out in my bed and I felt an unfamiliar pain in my heart. \n\nLaura's sister came to live with her for a while after that. It was about ten days after the funeral when I when I first came to clean the pool again. I wondered, curiously, whether I should ask Laura if she still wanted me to clean the pool. I don't know what I expected \u2013 that she'd let the pool go to hell now that her husband was dead? I brought a bouquet of flowers for her. The neighbors had gone in on some flowers for the funeral, but I wanted her to have something from me.\n\nLaura's sister answered the door. The flowers made her think I was a delivery boy and she asked me whether she needed to sign for them.\n\n\"I'm here to clean the pool,\" I said. \"I brought these for Mrs. Hollander.\"\n\n\"Oh you sweet boy,\" she replied with a genuine smile. She looked very much like Laura and she had Laura's same easy gracefulness.\n\n\"And I wanted to make sure it was okay to clean the pool.\"\n\n\"Oh, I am sure it is, but let me ask Laura...\" She turned her head. I heard Laura's voice approaching.\n\n\"It's okay, Doris, I'll get it.\" She sounded tired, but there was warmth in her voice.\n\nDoris opened the door wide for Laura.\n\n\"Oh Laura,\" Doris gushed. \"What a kind gesture, don't you think? What a wonderfully sweet pool boy you have.\n\nLaura looked at me and for the first time I noticed the bright amber streaks in her green eyes. \n\n\"He is not the pool boy, Doris,\" she said quietly. \"He is the young man who owns the company that cleans our pool.\"\n\nThat made me smile, and I thought I saw Laura's lips purse in a strained smile.\n\n\"Hi Kevin,\" she said in a whisper.\n\n\"These are for you.\" I stepped forward and handed her the flowers. \"I...\" I started to say I was sorry, but decided not to remind her of her loss. \"I hope you like them.\"\n\n\"There beautiful. Thank you.\" There was a long pause, and again I felt like she was looking inside of me. And then a tear streaked her cheek. \"I'm sorry,\" she started, and then she turned away.\n\n\"There very pretty,\" Doris said too loudly. \"She will be okay,\" Doris whispered to me unconvincingly, like she was surprised by Laura's reaction.\n\nThat night I was again afflicted with an unfamiliar pain in my heart. It would be a while before I learned of the importance of those moments with Laura. \n\nTime passed and the seasons changed, and Laura, to her credit, seemed to have grown out of her grief and returned to her relaxed and cheerful self. I could tell, however, that she now looked forward to my weekly visit; I figured she saw it as an opportunity to talk to someone. She would ask about school and friends and my plans for after graduation. \n\nOne time I was uncharacteristically gloomy, and Laura asked if I was having trouble with a girl. It was like she had read my mind, and I told her about my conflicted feelings for Cindy, a girl I was dating. \n\n\"But do you love her?\" she asked. She leaned toward me and peered at me as if she was trying to coax a truthful answer.\n\n\"Kind of.\" I replied.\n\n\"There is no 'kind of.' You either love someone, or you don't. So...?\"\n\n\"I guess not.\"\n\n\"Then there's your trouble. Don't waste time with girls you don't love, Kevin. You'll only hurt them and make yourself miserable. And don't pretend to be in love just to get attention. Go out and find someone you love. Love first, then everything else.\"\n\nI knew exactly what she meant. Though I had described my predicament cryptically, she had gone straight to the heart of my consternation. I broke up with Cindy even though I am certain that we would have lost our virginity together had we stayed together. But Laura was right; the time you spend with someone, the intimate time, is precious, and love and honesty are more important than sex (even if you're a virgin, or perhaps most importantly if you're a virgin). \n\nI finally received my acceptance and a scholarship award from the University of Southern California in the spring. A few of my buddies wanted to celebrate by taking me to a bordello just across the border in Nevada. I declined. I didn't want my first time to be with a hooker. Of course, I didn't tell my buddies that. I don't think they would have believed I was still a virgin.\n\nI had had a few opportunities since breaking up with Cindy, but every time I would recall Laura's advice. Then I would find myself wishing I could lose my virginity with someone I loved; it always killed my mood, and I always backed out of those one-night stands with some excuse or another. I know it seems silly now, but at the time I thought there was something wrong with me.\n\nThe summer after graduation Laura began to talk to me for longer periods of time. She had always been genuinely interested in what I had to say, and she listened intently, but I think my going off to college excited her and steeped her interest. She wanted to know about USC and what I wanted to study and where I pictured myself five, ten, twenty years. I sometimes spent an hour with her, sitting at her patio table drinking iced tea and talking. Her fascination with me made me feel good about myself. \n\nI learned more about her, too. She and Dr. Hollander had married right out of high school, and they went to college together at Cal Berkley. Then she worked full-time to put him through medical school. They moved to Scottsdale when he started his internship at St. Joseph's Hospital. Laura no longer had to work after that, and she got pregnant. They lost the baby in childbirth, and while she didn't come right out and say this, I knew that Laura had also lost the ability to have children and that it had devastated her. \n\nOne day she told me she wanted to go back to school \u2013 was planning on it actually, \"someday.\" It finally made sense to me, why she had been so fascinated about my situation. Unlike me, however, she knew exactly what she was going to study.\n\n\"Marine biology?\" I looked back at her across the patio table with a quizzical look. \n\n\"Yes. I want to spend some time on a boat, in the fresh air, do research, help animals, and learn something totally new.\" She was as animated as I had ever seen her. Her eyes sparkled, she was all but giggling, and it was like all the years that separated us had melted away.\n\n\"I don't even know where one would go to study something like that?\"\n\n\"San Diego,\" she said sprightly. Then she sighed. \"Oh, if only I were younger.\"\n\n\"Why?\"\n\n\"I am going to look pretty silly on a campus full of young people.\"\n\n\"I don't know about that.\" I meant it. She laughed.\n\n\"C'mon, Kevin. And it's not like there are many women at all, let alone any women my age, studying graduate level biology.\"\n\n\"Lie about your age.\" I said smiling. \"Tell 'em all you're... twenty-five!\" She shook her head and smiled. I continued. \"Heck, I'd believe it. Who knows, maybe you'd have some fun.\"\n\nThis made her burst out laughing. When she settled down she looked at me, but she wasn't looking inside me this time. Instead, it was like she was trying to figure out my hat size. I don't know what she was thinking.\n\n\"Thank you, Kevin,\" she said coyly. \n\nSeveral weeks later, I mentioned that I would only be cleaning her pool a few more times before I left for USC. A confused look came over her face, and I thought she was concerned about finding someone to replace me.\n\n\"Don't worry,\" I said, \"I sold all my equipment to my partner Brad, and he's reliable. I will bring him around to meet you.\"\n\n\"It's not that,\" she said, and she was looking into me again. \"I just...\" She had a look of pain on her face that seemed familiar to me as she struggled for words. \"I will miss you.\"\n\nWe were standing only a few feet away from each other. She was wearing an amethyst cotton shirtdress with a wide white leather belt, and I noticed that with the sunlit patio behind her I could see the silhouette of her hips and legs through her dress. Her hair was pulled back in a tight bun, and her face was flush with color. Her skin was creamy, and faint freckles were dappled across her nose and under her eyes. \n\nShe was lovely and alluring, and a powerful notion to kiss her surged up within me, and it surprised me, and I think I trembled. And then she stepped towards me, put a hand on me cheek, and kissed me on the lips. Not with \"passion\" per se, but it was no quick peck either. Her lips were moist and soft, and as our lips parted I felt something like the prick of a pin that sent a charge of electricity through me. Then she stepped back and spoke softly.\n\n\"I can't believe you are leaving; it is all happening so soon.\"\n\nShe hung her head. Then she turned and went inside.\n\nUntil that moment, I had not thought of Laura in a raw, sexual way. I had fantasized about her on occasion, but they were silly fantasies involving things like her greeting me in the nude, or imploring me to swim naked with her \u2013 mere trifles of the mind. Until that day, fantasizing about actual physical contact with her seemed ridiculous. My fantasies about Laura were about to take a turn, and the one I indulged that night was significantly more urgent, vivid, and physical than any I had imagined before.  \n\nI didn't leave my room until ten o'clock the following morning. My mother greeted me in the kitchen.\n\n\"Good morning sweetie,\" she said with her usual cheer. \"Oh, before I forget, Mrs. Hollander called. She has a project she wants some help with tomorrow morning. I told her you would rearrange your schedule. She said she would pay you. I think you should tell her you would be happy to do it for free.\"\n\n\"Okay.\"\n\nThen my mom walked over to me and made sure she had my attention. \"That poor, dear widow. You make sure you are especially kind and nice to her.\"\n\n\"I will.\"\n\nMy mom smiled. \"She is very fond of you, you know.\"\n\n\"Really?\"\n\n\"She told me I was very lucky to have such an intelligent, handsome, and considerate young man for a son.\"\n\n\"She said that?'\n\nMy mom only smiled and patted my head.\n\nI arrived at Laura's house at eight o'clock that Saturday morning. There was a small guesthouse with a garage in back of the main home, and the garage door was up. Laura was inside, going through some boxes. She waved me in.\n\n\"Oh thank you for coming, Kevin. It is so sweet of you.\"\n\nShe was wearing black stretch culottes that clung to her hips and legs like tights. Her sleeveless powder-blue blouse was open at the neck. Her hair was pulled back in a bob of sun-streaked curls. Her lips were a soft and deep red. As I took her hand, I noticed that her nails were manicured and painted to match her lips. She put her other hand on my shoulder and squeezed it affectionately.\n\n\"I have decided it is time for me to move,\" she said looking me in the eye.\n\n\"Like 'move' move?\" I asked.\n\n\"Yes. Move away from here, start a new life. So, today I am cleaning out the garage. All I need your help with is moving the heavy things and getting the stuff from the shelves I can't reach.\"\n\n\"You've got it.\"\n\nI spent the next few hours pulling down garden tools and boxes full of Christmas lights and the like. She organized the stuff, throwing most of it away, and she repackaged and marked the boxes she wanted to keep. \n\nAt one point she called me over and showed me a large framed picture of her husband and herself in front of a gaping expanse of canyon on what looked to me to be an antique motorcycle. The small, oxidized brass plaque said \"The Grand Canyon: July 15, 1953.\"\n\n\"We were eighteen then,\" she said wistfully. \"It was our honeymoon.\" \n\nLaura was stunning in the picture. Her hair was longer and blonder, and she was thinner, almost skinny. Peter Hollander's face looked nothing like mine, but in all other respects he could have been me \u2013 thick, wavy gold/blonde hair, lanky and tall, a broad smile.\n\nAnd then I did the math, and I almost blurted out something embarrassing; Laura was forty-six years old. She was three years older than my mother. That couldn't be. I looked at her and she was already looking at me. I must have looked a little bewildered because she smiled and her eyes flashed. She was so beautiful, I thought.\n\n\"Wow,\" was all I could offer. Then finally I said, \"You're a really great looking couple.\" \n\n\"Thank you,\" she said. \"Here.\" she started to reach for my face. \"You're going to get hair in your eye.\" She brushed my hair away from my face. It fell back to where it had been as soon as she pulled her hand away. She laughed. I palpably felt something change between us. For a faint moment, I thought we were going to kiss. And then she turned away.\n\nLater that morning, while I was sitting on a chair taking a break, she was clearing off a shelf above her head with her back to me. I had been watching her intently, and now some of my late-night thoughts were coming back to me. I caught myself admiring her tightly wrapped, shapely bottom. I sighed. What a great looking ass, I thought in my own juvenile way. I started to focus on her crotch and felt a stirring deep inside of me; then I heard her voice.\n\n\"Kevin, could you give me a hand here?\" She was on her tiptoes, arms raised, trying to prevent a box from tipping and falling to the floor. I jumped up to assist. I stood behind her and reached for the box. I had to reach under her arm, and my whole body was pressed against hers. The box was heavy.\n\n\"What is in here?\" I asked, my lips close to her ear.\n\n\"Medical Books.\"\n\n\"Here, let me...\" and I tried to push up with my legs to get the box to tip back. It was then that I noticed my erection. I was in a pair a fleece gym shorts, no underwear, and I could feel the softness of her bottom and the stretch of the fabric of her tight slacks as I lifted and pressed against her. I had to try again, and again there was the friction and the pressing. She reached back and put a hand on my hip to steady us, and then I could have sworn she arched her back ever so slightly, as if to offer herself for another rub.\n\n\"I think I've got it,\" I said as I pushed the box back onto the shelf.\n\nWe didn't move for a second. I was still pressed against her. Her hand was still on my hip. I was certain she could feel my erection.",
        "\"Oh my,\" she sighed, \"that was close.\"\n\nShe turned, swiping her bottom across my turgid condition. I took one step back. \n\n\"Whew,\" she wiped her brow. \"It's getting hot out here. Maybe we should think about calling it a day.\"\n\nI must have looked like a deer in headlights. She smiled, never taking her eyes from mine. She leaned closer to me, until I could feel her breath on my neck and chest. She pushed my hair away from my face again.\n\nThere was a long silence that made me feel awkward. When she spoke she startled me.\n\n\"Tell me something, Kevin, do you ever think about me?\" \n\nNow she looked down. I was still sprung below \u2013 straight out I am sure. I was too embarrassed to look. \n\n\"Yeah, sure.\"\n\n\"What do you think about?\"\n\nThat was a loaded question considering my recent thoughts. \n\n\"I think...\" I stammered. She put a hand on my chest and looked again in my eyes. \"I think you're beautiful,\" I said finally, meaning it.\n\n\"Really?\"\n\n\"Yes. I have always thought you were beautiful.\"\n\n\"Thank you. I think about you, too, you know?\" she offered.\n\n\"What do you think about?\"\n\n\"Same thing, mostly. How beautiful you are, and how lucky you are.\" Again she pushed my hair away from my face. This time, she petted my head. \"And I think about how much I am going to miss you.\"\n\nAgain I had the surging sensation that I wanted to kiss her.\n\n\"Do you ever think about...\" now she was grinning like she was about to laugh, \"...about kissing me?\"\n\n\"I just was.\"\n\n\"You can, you know.\"\n\n\"What?\" I was slow boy.\n\n\"Kiss me.\" She was more serious now.\n\nWe stood motionless. Finally she leaned in to me and closed her eyes. Our lips met. Her abdomen pressed against my erection, pushing it to one side, and then, as we moved, it adjusted between us. She had to have been aware of it. The kiss was soft at first, then firmer, then her tongue parted my lips. She put her arms over my shoulders, around my neck. I put my hands on the sides of her waist. \n\n\"We shouldn't be doing this,\" she whispered as she took a breath.\n\n\"No?\" I whispered back stupidly.\n\n\"Oh my,\" she sighed. She pulled me against her. She pressed her mouth against my neck and then under my ear, and I believe she was tasting me more than kissing me. Her body writhed against me. She was moving from flatfeet to tiptoes rhythmically, rubbing up against my erection, intentionally I was now sure. She took her arms from my neck and pushed my hands down over her behind. I cupped her giving flesh, and then pulled her into me as she continued to rub her body against mine.\n\n\"Oh Kevin,\" she took a breath and put her forehead to mine. \"Forgive me.\"\n\n\"It's okay.\"\n\nI kneaded her supple flesh. I wanted her to rub against me again. I was pushing her up against a hip-level workbench. She pushed my hands away from her bottom. I was devastated. I thought she was going to push me away. Then she backed up and sat on to the edge of the workbench. She wrapped her legs around me and pulled me against her. My erection was pressed fully against the soft expanse between her legs. I was rubbing against her now. \n\nWe kissed hard and long. I could hear the hiss of my fleece clad manhood against the fabric that sheathed her soft, blood-engorged flesh. She tasted of lipstick and salt and it smelled of oil and wet earth and the heat of the garage. I placed my hands on her breasts. We rubbed against each other. She started to tug at the waistband of my shorts. I had never felt more desire before. I knew we were going to make love right there, on the dirty floor of the garage if we had to.\n\n\"Wait,\" she whispered, pushing away from me gently. \"Not like this. Not here.\"\n\nI grimaced in agony. She eased off of the workbench. She reached between us and pushed her hand against my aching member.\n\n\"I am so sorry, Kevin, but not like this.\"\n\nI closed my eyes. I couldn't breathe.\n\n\"Oh God, you're so hard,\" she panted, steering me away from her, \"but I have to clean up \u2013 at least that much. Give me twenty minutes. Come up to the house.\"\n\n\"Okay,\" I said through clenched teeth.\n\n\"I wanted to make lunch for you. Let me do that for you, first, and then... then we'll see what happens, okay?\"\n\n\"Yes,\" I sighed.\n\nShe ran her hands through my hair again. \"It will be all right, Kevin; I promise.\" Then she kissed me delicately and left the garage.\n\nI felt ridiculous about what happened next, but I couldn't help myself. As soon as she was out of sight, I took my cock in my hands and begin to squeeze and manipulate it, trying to wring the pain and frustration from my body. I didn't want to masturbate. I was fairly certain now that we were going to make love, that I was finally going to lose my virginity, and to a real women, not a girl. I didn't want to mess that up, but she was right \u2013 I was SO HARD. I moved to a secluded corner of the garage and pulled my shorts down just enough to access my swollen manhood.\n\n*****\n\nIn my imagination, she says, \"Not like this. Not here.\" But then she says, \"I will help you, though,\" and grabbing my erection she moves behind me, pushing down my shorts, stroking my hot, bare penis with her tender hand. I have to place my hands against the shelves to steady myself. Faster and faster she pumps, with perfect rhythm, like she is reading my mind. I have to turn and lean back against the wall, and now she is beside me, stroking me, her mouth pressed against my ear.\n\n\"Come on, Kevin, come for me,\" she talks wetly into my ear.\n\nI am trying vainly not to swear. My whole body is convulsing.\n\n\"That's it, come on,\" she says softly, pleadingly.\n\n\"Oh jeez!\" I spew forth a rope of cum, and then another, and yet more. \n\nAnd then she is gone.\n\n*****\n\nI had almost collapsed on the floor in the corner of the garage. I had erupted, and when I regained my senses, I marveled at my effort. A small puddle of my ejaculate lay at least six feet from where I was standing, and then three or four long gooey strings were splattered on the oil-darkened garage floor. I was sweating from every pore of my body. I was dazed.\n\nI found a clean rag and cleaned myself up, and then I dabbed the floor. I threw the rag away and sat down on a folding chair. I tried to rest and recapture my breath. My T-shirt was dirty. I had soiled my shorts a bit. My hands were dirty, especially under my fingernails. She was right \u2013 not like this.\n\nI found a small powder room on the main floor of Laura's house. The air-conditioned coolness was a greater relief than I had expected. I washed up as best I could. I had taken my shirt off to wipe down my chest when Laura knocked on the door. I opened it. \n\n\"Here, try this,\" she said, handing me a T-shirt. I was startled. She was wearing a Japanese silk robe, jade with gold embroidery \u2013 it complimented her eyes. The hem brushed just above her knees. Her legs were satiny smooth. I smelled lemon and vanilla and soap this time. \n\n\"It was my husband's, so it should fit you.\" \n\nI held it open and finally turned my gaze from hers. It was a dark-blue, extra-large T-shirt with a gold \"Cal\" in script on the front.\n\n\"Thanks. Mine was kind of dirty.\"\n\n\"I know.\" She smiled. I put the shirt on.\n\n\"Great,\" I said. She appeared to be admiring me.\n\nShe had me sit at the kitchen table. It was a country farmhouse antique, nicked and scraped, the white paint worn away in places. Bread was baking in the oven, and the soothing aroma filled the house. In front of me there was a glass of ice water, an empty white plate, and a small bowl containing amber-green olive oil. In the middle of the table was a bottle of red wine and two glasses. She was peering into refrigerator, a hand on her hip.\n\n\"Are you adventurous?\" she asked without looking at me.\n\n\"Sure.\"\n\n\"Good.\"\n\nOne by one, she adorned my plate delicacies from white plastic containers: Roasted red peppers; thinly sliced and delicately marbled ham; black and green brine-cured olives; a salad of chopped tomatoes and capers in olive oil; and chunks of salami with a white, powdery crust. After that, she set out a wooden cutting board and placed small triangles and rounds of cheeses on it: Camembert, Gouda, Asiago, and fresh, wet mozzarella. Then she set out the hot bread, a round peasant loaf, and sat down.\n\n\"Wow,\" I complimented her. \"This is unbelievable.\"\n\n\"In Italy, they would call this antipasti \u2013 the first course. I think it makes a lovely lunch.\"\n\n\"I'd say,\" I said and laughed. \"Aren't you going to join me?\"\n\n\"I'll have some wine and nibble. You eat. Enjoy.\"\n\nAnd I did. And she watched me the whole time, sipping from her wine and occasionally picking an olive or a piece of salami from my plate and putting it on a crust of bread for herself. I finished all the food on my plate and half the cheese and bread. We finished the bottle of wine together. \n\n\"That was great,\" I offered when I was full.\n\n\"I love to watch a man with a good appetite eat,\" she said as she picked up my plate. She set it in the sink. \"It makes me feel...\" she turned from the sink to face me. Her robe was open to her navel, just covering her breasts. \"Okay, it turns me on. There, I said it.\"\n\n\"Did you do this for your husband?\" I shouldn't have asked. \n\n\"Yes.\"\n\n\"Do I remind you of your husband?\" Why was I asking this? Did I care? I got up and walked towards her.\n\n\"No,\" she said matter-of-factly. She stepped towards me. I put my arms on her shoulders. She put her hands against my chest. \"You remind me of a feeling.\" \n\n\"What kind of feeling?\"\n\n\"A very good feeling, one I haven't felt for a long time.\" She smiled.\n\n\"What I am feeling right now is new to me,\" I said, almost sounding caviler despite my electric nerves.\n\nWe kissed. I ran my hands up and down over her back. She put her head against my shoulder. \"What kind of feeling is it?\" she asked.\n\n\"I don't know. I feel... like a man.\"\n\n\"That's a good thing.\" We kissed again, lovingly, passionately, carefully. \"A very good thing,\" she exhaled.\n\nI slipped my hand under her robe, ran my fingers along her naked hips, brushed her thighs with my palms, took a pliant cheek in hand. My penis filled with blood and rose.\n\n\"Wait,\" she whispered. What now, I thought. \"There is something else I want to do for you.\"\n\nShe led me by the hand through the living room and down a hallway. We entered a large bathroom with dark, hardwood flooring. The windows were draped with creamy, gauzy curtains. In one corner there was a large pedestal sink and a mirrored medicine cabinet. \n\n\"There is a new toothbrush in there, if you would like to brush your teeth,\" she said pointing at the cabinet. \"I am going to run you a bath.\"\n\nShe walked to the other corner where there was a massive, claw-footed enamel and cast iron tub with old-fashioned piping and brass faucets. She placed a stopper in the tub and turned on the water. I didn't know what to do next. She stood in front of me.\n\n\"Here, give me your clothes.\" \n\nI took off my shirt.\n\n\"Come on, shorts too. I'll throw your clothes in the wash.\"\n\nI took off my shorts and handed them to her. She looked down at my erection, then looked in my eyes and smiled. A pause.\n\n\"Thank you,\" she said finally.\n\n\"For...?\" For what? For having an erection?\n\n\"For being here today.\" She turned and left the room, my shorts and her dead husband's T-shirt in hand.\n\nI stood motionless for a moment. I felt good \u2013 comfortable and calm. I looked down at my erection and smiled.\n\nI brushed my teeth and got into the steamy hot water. I was about to turn off the faucets when there was a tap at the door.\n\n\"Can I come in?\" she asked sweetly.\n\n\"Of course.\" It is your house, I thought.\n\nShe came over to the tub with a bottle and poured a few capfuls of liquid into the churning water.\n\n\"Bubble bath?\" I asked\n\n\"Skin-So-Soft. You will like it. Trust me.\"\n\nShe turned off the faucets and gently swirled her hand over the top of the water. She took a stool from against the wall and set it behind the tub.\n\n\"Here, I'll rub your shoulders and scrub your back,\" she offered, settling in behind me.\n\nThe treated water made my skin slippery smooth, something like oil, but clean, not greasy at all. Her hands felt marvelous on my shoulders and neck. She pushed me gently forward and rubbed my back with a washcloth. She took her time.\n\nJust when I was completely relaxed, she pulled me back and stroked my hair.\n\n\"Here, lean back your head and I will give you a hot lather shave.\"\n\nI did as I was told. I heard her run the water in the sink, the clank of equipment being removed from the cabinet. The shaving cream was warm when she spread it on my face. I closed my eyes. The straight razor was sharp and it glided effortlessly over the contours of my chin.\n\n\"A guy could get used to this kind of treatment,\" I uttered through the soapy lather, tasting it.\n\n\"Shhh,\" she whispered. \"Just relax.\"\n\nShe wiped the razor on a towel after each pass, and then she cleaned my face with a piping hot washcloth.\n\n\"There,\" she exclaimed proudly running her fingers over my cheek. \"Softer than a baby's bottom.\" She went to the front of the tub and pulled the stopper.\n\n\"Am I through?\" I started to whine.\n\n\"Not yet.\"\n\nShe turned on the hot water, stood up, and without the slightest hesitation let her robe fall to the floor. She faced me and my eyes devoured her. A soft, downy triangle of strawberry blonde pubic hair, her graceful limbs, the perfect shape of her plump breasts, her long, elegant neck: in that hazy, curtain-filtered light she was a vision of feminine beauty, and gazing at her, I felt like a grateful and undeserving child.\n\n\"Okay, make some room for me.\"\n\nI lifted up my legs and spread them against the sides of the tub. She re-stopped the tub. She turned and stepped in, her smooth, well-rounded bottom a wonder before my eyes. She settled in front of me, her back against my chest, with no effort, and I sensed she had done this before. She rested the back of her head against my shoulder and closed her eyes. She turned off the hot water with her right big toe, her foot pointed like a ballerina. \n\nI had gone soft in all the hot water, but now I felt my organ growing again, nuzzling in against the small of her back. She took my hands and placed them on her tummy, and then, with her hands on top of mine, she guided me on a tour of her soft, wet flesh. I massaged her breast with one hand, her abdomen and hips and sides with the other.\n\n\"This is nice,\" she sighed luxuriantly.\n\nThe air conditioner came on, rustling the curtains, cooling our skin. I rested my head against hers and breathed in the scent of her hair \u2013 butter and wheat and the remnants of a fragrant herbal shampoo. Under the water now, my hand brushed across her pubic mound, my fingers sifted through the fine, soft hair floating there. She sighed and pushed up against me. Her legs spread ever so slightly, inviting my fingers to explore the soft folds of skin between her legs. I gently massaged her clitoris, and I could feel it harden between my fingers.\n\n\"That feels good,\" she purred. Her head was beside mine now, and she turned her face towards mine, beckoning me to kiss her. As we kissed, she began to writhe, her smooth wet skin against mine, my now throbbing penis caught between us. She became bolder. She threw one leg over the edge of the tub, giving me full access to her intimate area. I, in turn, took her cue and began to rub more vigorously, with the whole of my hand, my palm pressed against her clit, my fingers rifling her labia and massaging the entrance to her sanctum. \n\nShe pulled her lips from mine. \n\n\"Oh, I like that. Oh Kevin.\" \n\nShe shuddered. Her breathing was shallower. I quickened my motion. I think she came. She brought her leg back into the tub and squeezed my hand between her thighs. She turned to her side, like she was cuddling against me.\n\n\"Oh, that was...\"\n\nShe didn't finish her thought. She rolled on top of me, her moist, tender breasts pressed against my chest. She raised herself up on a knee and rode her hand over my stiff and now silky smooth shaft. She kissed me as she squeezed and stroked me.\n\n\"You feel so good,\" she whispered into my mouth. \"So strong, so wonderful.\"\n\nShe let go of me and stepped out of the tub. She took a giant white terrycloth towel from a wicker stand. I started to get up and she motioned for me to wait. She stood on a brightly colored Mexican throw rug next to the tub, and she began to work the towel over her damp body. I watched as she slowly and tenderly dried herself. I took the liberty of tugging at myself as I watched her. I felt relaxed and anxious at the same time. \n\nShe tossed the towel into a hamper near the sink. She took another towel and stood beside the tub and held it open.\n\n\"Here, I will dry you.\"\n\nI got out of the tub. She positioned me on the throw rug, and just as slowly and tenderly, she dried my wet body, paying particular attention, I noted, to my stimulated genitalia.\n\nShe tossed the towel aside and stood naked before me. She pulled the band that was holding her hair back and shook her head, and the curls cascaded around her face, brushing her shoulders. There she was, Mrs. Hollander, Laura, my neighbor, a friend of my mother \u2013 beautiful and mysterious. And then I detected a profound melancholy in her eyes.\n\n\"Maybe I shouldn't have done this,\" she said softly.\n\n\"Why,\" I said, stepping towards her.\n\n\"Maybe this wasn't such a good idea.\" She looked at the floor.\n\nI knew I had to say something. I was scared she would send me away.\n\n\"Please don't say that,\" I said touching her cheek. \n\n\"It's not right.\"\n\n\"We've come too far.\" Yes too far to turn back now I wanted to say, but didn't. I put my arms around her. \"Look, there is nowhere in the whole world I would rather be than right here with you.\"\n\nShe rested her head on my shoulder. My erection pressed into her lower abdomen, but it meant nothing to me at the moment. I had to convince her to finish what we had started. \n\n\"You're so young.\" She looked at me, put her hands on my chest. I put my forehead against hers.\n\n\"That's not fair. I could love you.\"\n\n\"I suppose you could, if only for a moment,\" she said touching my lower lip with the tip of her finger.\n\n\"What?\"\n\nShe tilted her head. \"Do you think it is possible for two people to love one another for just one moment, for one brief period of time?\"\n\n\"For one afternoon...?\"\n\nShe smiled broadly. \"Yes, one brief, impossible afternoon.\"\n\n\"Yes, I believe it's possible.\" I so much wanted to believe it was possible.\n\n\"Good. So do I.\" She laughed. \"Okay then...\" She seemed to have resolved the issue. The sadness was gone from her eyes. \"You have to promise me you will never...\"\n\n\"Tell anyone, ever. I promise.\"\n\nI was not expecting what happened next. She kissed my lips playfully, and then my neck, and then my chest, and then she lowered herself until she was kneeling in front of me, whereupon she took my straining manhood in her mouth, lovingly, slowly, caressing it with her lips and tongue. \n\n\"Oh my,\" I sighed. Thank you God is what I wanted to say. I petted her head. I closed my eyes.\n\nTo this day, I don't know what she did or how she did it, but what I felt in her mouth over the next few minutes was the most exquisite sensation my genitals have ever experienced. With my eyes closed, I could imagine my penis lodged inside a wonderfully magic place. Just when I thought she couldn't possibly take anymore of me, she did. No teeth, no uncomfortable bending, just perfect, warm, moist passion surrounding me, kneading my fleshy organ. She would hold me there, her forehead pressed against my abdomen, and then... I don't know if she was swallowing or ever so gently opening and closing her mouth, but it was like she could reach a place deep within me, summoning some erotic core to open in the warm center of my being. It wasn't that I wanted to come. It was more spiritual than that. I wanted to grab her head and pull her into me, and I was in such a state I feared I might do just that.",
        "And then just as slowly as she had taken me into her mouth, she let me back out. She gripped my penis and stroked it slowly as she took my scrotum into her mouth. She turned her head to the side and sucked my testicles deep inside her mouth, and then she placed her mouth over the very base of my erection, where it disappeared inside my body, a place I wasn't sure I had been aware of before that moment. She nuzzled it and pressed her face against me. Now I did feel the stirrings within, the little triggers that hint that an eruption was eminent. I wanted to warn her. I didn't want to come in her hair.\n\n\"Oh, I think....\" I could hardly speak, \"...come, unh.\"\n\n\"It's okay. Come in my mouth,\" she whispered up to me. She released my balls and took the head of my penis in her mouth. She sucked at it while she stroked me with one hand and massaged my quickly ascending testicles with the other. And then I came in her mouth. I teetered a bit, and she put her hands on my hips to steady me, all the while suckling me and swallowing my cum. No one had ever done that to me before, but she didn't seem to mind. In fact, I believe she enjoyed it. \n\nShe stood up and wiped her mouth with the back of her hand.\n\n\"Oh my God,\" I exclaimed.\n\n\"Pretty good, huh?\" she asked with a knowing, girlish smile.\n\n\"That was incredible.\"\n\n\"I am glad you enjoyed it.\"\n\n\"'Enjoy' is hardly a strong enough word.\" \n\n\"Why don't you go lie on the bed and relax while I brush my teeth?\" She pointed to a second door in the bathroom. \"Right in there.\"\n\nIt wasn't the master bedroom. It was a sparsely but handsomely decorated guest room. The bed had four posts topped with small carved pineapples. It looked inordinately heavy. There were cream-colored sheets and a faded blue cotton blanket. I stretched out on top of the covers. The pillows were large, overstuffed, and I had to punch them in a bit to keep my head from being swallowed. The windows were in alcoves, and the pale curtains cast a shadowy light. I closed my eyes. There was a ceiling fan above the bed and it was on its slowest setting, gently wafting the cool air. I felt drained and fully relaxed, and had I thought I could get away with it I might have dropped off to sleep.\n\nWhen Laura came into the room she was in her robe again. She carried another bottle of wine, cold and white this time, and two fresh glasses. She set them on the nightstand and walked over to the dresser where there was a record player. She flipped through a stack of records.\n\n\"I suppose,\" she started, \"that if we are going to enjoy an affair in one afternoon, we can afford two bottles of wine, don't you think?\"\n\n\"Absolutely,\" I said as I sat up and filled the glasses. I was very thirsty, and the wine was icy cold and very dry; it tasted magnificent. \n\nThe record started. It sounded like Duke Ellington. \n\nShe stood beside the bed now, one hand on her hip, sipping her wine, looking at me.\n\n\"What are you thinking about?\" I asked.\n\n\"I am hoping you can stay the night,\" she said wistfully.\n\nShe had been tinkering with the idea of sending me home, so I thought this was a good development.\n\n\"I would like to. I am sure it can be arranged,\" I said, not adding that all I had to do was call my MOM and say I was staying at a friend's place. Sheesh.\n\nShe sat down on the bed cross-legged. Her robe was loose.\n\n\"You look very sexy in that robe,\" I offered.\n\n\"Thank you,\" she replied, adjusting the robe self-consciously to close it up a little.\n\n\"No, no: I liked it better open.\"\n\nShe casually flashed me a tit, laughed, and left the robe open. She seemed young enough to me in that moment.\n\nShe looked like she wanted to say something. I waited as she sipped her wine and gauged her words. \"Do you remember the time you brought me flowers after Peter died.\"\n\n\"Yes.\"\n\n\"I have been thinking about you ever since that day.\"\n\n\"Thinking about what?\"\n\n\"Just you. I could see you that day \u2013 see who you were, who you still are. You were standing there with those flowers in your hand, and I knew that you felt genuinely bad for me, that you wanted to do something to protect me, to make it better.\"\n\n\"I did feel that way.\"\n\n\"I know. I didn't see you as the pool boy, or the young man who lives up the street. I saw YOU.\" She pointed at my heart\n\n\"What did you see?\"\n\n\"Where should I start? Okay \u2013 you are the kind of boy who would be overcome by the loss of a pet.\"\n\nShe was right. I had lost two dogs before we had gotten our present dog. It was very hard on me.\n\n\"Go on.\"\n\n\"You well up at sentimental movies. You always hold the car door open for your girlfriend. You love and respect your mother. You're disappointed with your father. School is so easy for you it bores you to death. Should I go on?\"\n\nI turned on my side and leaned on my elbow. \"Sure.\"\n\nShe scooted closer to me so she could run her fingers through my hair. I felt momentarily awkward in my nakedness, and then it went away with the touch of her hand.\n\n\"And you like meaningful relationships with girls.\"\n\nI laughed and she stopped petting my head.\n\n\"What?\" she asked with a smile.\n\n\"Well, it was you who talked me out of the only non-meaningful relationship I have ever had with a girl.\"\n\n\"I did?\"\n\n\"You don't remember?\"\n\nShe looked like she was playfully thinking about it. \"You mean when I suggested you find a girl to love.\"\n\n\"Yes. You remember all right.\"\n\n\"I was right, wasn't I?\" she said slyly\n\n\"Yes, I suppose you were. What else?\" \n\n\"Let's see. When you're in college, or maybe it's grad school \u2013 it is a little hazy, grad school I think \u2013 you are going to meet a girl and fall in love and spend the rest of your life with her.\"\n\n\"I will?\"\n\n\"Yes.\"\n\n\"So you see all that?\"\n\nShe leaned against the headboard and stretched her legs out beside me. \"And when you think of me,\" she reached for my hair again, \"when you remember this day, it will all seem like a dream.\" \n\nI looked up into her eyes. She smiled.\n\nI put my head on her thigh. She fluffed a pillow behind her and adjusted her back against the headboard. Then she continued to stroke my hair. \n\n\"So for one day we can pretend to be lovers. I can feel young again; you can feel like a man. We can fall in love and get married and have children and grow old together \u2013 all in one day. A lifetime in one moment.\"\n\n\"I like that thought,\" I murmured. I untied the belt of her robe and slipped my hand inside and petted her thigh. She closed her eyes and leaned her head back.\n\n\"So do I,\" she sighed. \n\nI tried to imagine what she was thinking at that moment. With my head in her lap and my ear against her thigh, I felt like I was an Indian guide with my ear to the ground; I was trying to hear her thoughts through her skin, as if they were echoing inside her body. What I heard was the thud and echo of a weighty loneliness. \n\nShe had obviously given this day, our moment together, some thought. I was a visitor in her imagination. I could see her plan. She had wanted to feed me and bathe me and then relieve me of my initial sexual tension before sharing her bed with me. And then she had wanted me to understand the ephemeral nature of our relationship. We were free to give ourselves completely to the moment, we were free to love one another for the moment, but it would be a singular moment. I understood all that\n\nWhat I didn't understand was the desolation I sensed in her. Her robe was fully parted now. I was running my hand down from her shoulder over her breasts, her tummy, her hips, her thighs. She was exposed and vulnerable. And then I understood. She had made herself vulnerable to me. It was like she was handing me a precious, delicate gift, and she was waiting to see whether I was clumsy and stupid and would drop and break it, or whether I was man enough to handle it carefully and treat it with respect. She had placed herself at great emotional risk in the hope that I was worthy, that I could make her loneliness and sadness go away, that I could quell her desolation by sharing myself completely with her, if only for a time.\n\nI sat up. Her hand fell from my head. She opened her eyes and looked into mine.\n\n\"I understand,\" I said. \n\n\"Then I can say it;\" she whispered, \"what I feel for you right now, Kevin, is love.\"\n\n\"I love you, too,\" I replied, and we kissed to seal our pact. Laura then smiled and pulled me to her. I leaned into her and put my head against her chest. She held me tightly. The echoes of loneliness and sadness had quieted, I thought.\n\nLaura slipped off her robe and we lay on the bed our sides facing each other, our limbs entangled, our mouths pressed together. We kissed like reunited lovers after a long and arduous separation. We kissed passionately and purposefully. We kissed like we were searching for a connection, and slowly but certainly I felt that connection ignite and burn between us. \n\nWe fondled and explored each other's genitals. We were progressing, I knew, towards the act, and I felt like I had to say something.\n\n\"I am a virgin,\" I whispered in her ear.\n\nShe stopped moving as if she hadn't expected that. \"Oh,\" she uttered. I waited \"We don't have to do this, you know,\" she whispered finally. \n\n\"Oh, I think we definitely need to do this. I just wanted you to know that.\"\n\nThere was a pause and then she pushed away from me slightly. She looked at me like she was trying to gauge my feelings. \"Thank you, then. That makes me feel special.\"\n\n\"You are,\" I said. \n\n\"Then I'll let you in on a secret,\" she said with a broad smile.\n\n\"What?\"\n\n\"You are only the second man I have ever...\" she paused to gauge her words, \"... been like this with.\" She didn't seem satisfied with her choice.\n\n\"Ever loved?\"\n\n\"Yes, Kevin. You are the only other man I have ever loved.\"\n\nWe returned to kissing. We petted and fondled each other's genitals. I suckled her breasts and she gently pushed me on my back and straddled me. For some unknown reason, I felt compelled to say something.\n\n\"Of course, when I said I was a 'virgin,' I meant it in only the strictest, most technical sense.\"\n\n\"Of course.\" Laura laughed and smothered my face with kisses. She reached between us and positioned me for entry. The tip of my manhood quivered against her warm, moist flesh. Every muscle in my body tightened. Carefully, she descended on me, and as she did so she whispered in my ear. \n\n\"You're not a virgin in any sense anymore,\" she said breathily as she came to rest on my pelvis with me deep inside her. \n\nI sighed in utter relief. It was more wonderful than I had imagined. She rocked above me and she stared into my eyes, but I had to close my eyes in the throws of my pleasure. She kissed me on the forehead and cheek. All I could do was grip her hips and indulge the sensation. \n\nShe fell on to my chest and said, \"Hold me tightly.\" I wrapped my arms around her and squeezed. She held her cheek to mine. I took over the movement below by arching my hips.\n\n\"That feels good,\" she said.\n\n\"Yes it does,\" I replied with exasperated sincerity. \n\nI held Laura in my arms and I moved in and out of her and I wanted that moment to last for a long time. I didn't want to come. I didn't want to change positions. I didn't want let her go. I wanted to squeeze her until she became a part of me, or I became a part of her.\n\nWe made love slowly. Time passed. The sun was setting and the light in the room was fading from amber to lavender to deep purple. The record had ended long ago, and the only sounds were our breath and the occasionally creak of the bed. \n\nShe rolled off of me. She pulled me on top of her. She spread her legs wide and pulled up her knees. Completely exposed and as vulnerable as she could be, I thought \u2013 her gift to me. \n\nI began to enter her and she pulled me down into her. \"You are a beautiful, loving creature,\" she said looking in my eyes, \"and a good and decent man.\" I felt her earnestness. \"I love the way it feels to be in love with you,\" she said emphasizing \"love\" each time.\n\nIf it had been her intent to make me feel good about myself, she had succeeded. I felt lucky and proud and very much like a man. And then I realized that she was coaxing me with her arms and hips, with her whole body, wanting me to be the aggressor.\n\n\"Make love to me, Kevin,\" she pleaded more than commanded. \"Make love to me just as strongly as you can. Don't worry about me. Don't worry about coming. Just make love to me with all your heart.\"\n\nAnd I did. I plunged and bucked into her. Each time I thought I was being too rough she would encourage me with cries of pleasure \u2013 \"That's it,\" and, \"Oh god.\"\n\nI looked down at her, and for a moment I had an out-of-body experience. I could imagine it, I thought. I could see me making love to Laura thousands of times over, making love to the eighteen-year-old Laura I saw in the picture, to a thirty-year-old Laura, to the Laura in bed with me tonight, to an older and even more elegant Laura \u2013 to all of them, to all of her, all at the same time. \n\n\"I'm going to come,\" I announced. Thousands of times over, I whispered to myself.\n\n\"So am I,\" she moaned. \"Come inside me, Kevin. Come deep inside me.\" \n\nAnd it was if she had willed herself to a shuddering orgasm. The delight I felt in her pleasure was too much for me to bear and I pushed as far into her as I could and let loose with my own orgasm. \n\nAnd then we laughed and hugged and kissed.\n\nLater, I was lying on my back with my head on the pillow, and Laura was cuddled against me with her head on my chest. She was mindlessly fingering what little there was of the hair on my chest. I sighed deeply. I was experiencing an unfamiliar, whole-body sensation of euphoria. Laura had lit some candles and put on a record when she was up earlier, and the flickering light and the strumming of James Taylor's guitar had me in a trance. I knew the album well. It would end with \"Don't Let Me Be Lonely Tonight.\" I wondered if it was intentional. I decided not to ask.\n\nLaura sat up and took her wine glass from the nightstand and sipped from it. She was wearing her robe again. I was still naked.\n\n\"The realtor is going to put the for sale sign out in front of the house tomorrow,\" Laura said matter-of-factly.\n\n\"This house?\"\n\nShe smiled at me. \"Of course this house.\"\n\n\"So are you going back to school?\"\n\n\"Yes. Definitely.\"\n\n\"San Diego? Like you had planned?\"\n\n\"Yes.\"\n\n\"Good for you.\" I put my arms behind my head. I was thinking. \"You know it is a short drive from L.A. to San Diego.\" \n\n\"Kevin, that's not going to happen.\"\n\n\"It's not?\"\n\n\"No.\"\n\n\"Absolutely 'not!' or it would just be less complicated if it didn't happen.\"\n\n\"Absolutely NOT.\" She leaned down and kissed my forehead. \"There will never be an opportunity for anyone to confuse me as your mother.\"\n\nYikes. That was a scary thought. \n\n\"When do you leave for USC?\" she asked.\n\n\"Next Saturday.\"\n\n\"Well, Kevin, I am afraid we won't ever see each other after that.\"\n\nMy mind started to race. My euphoria was waning. I wanted to figure out how I could spend every moment between now and next Saturday with her. I wanted to start making love to her again right away, and not stop for a week.\n\n\"That was cold.\" I offered my opinion.\n\n\"Yes it was.\" She set down her wine and stretched out next to me and kissed me on the cheek. \"Please don't do this. Don't make me sorry we did this. You said you understood.\"\n\nYes, I had, and I did. \"You're right. I'm sorry.\" My euphoria was totally displaced. I ached inside now.\n\n\"It's okay.\" She rubbed my chest. \"Remember this, Kevin. Sex always complicates everything. What we are doing? It is dangerous. You can't have sex, not sex like THAT, without sharing a part of your soul. Maybe I should have known better.\"\n\n\"No. I understand. That doesn't mean I won't miss you.\"\n\n\"I will miss you too, Kevin \u2013 very much.\"\n\nI stared at the ceiling and played over in my head what she had said \u2013 sex like THAT!\n\n\"So,\" I started, hoping to change the subject and the mood, \"it was pretty good then?\"\n\n\"What?\"\n\n\"The sex?\"\n\nShe laughed out loud and then her hand started to wander from my chest down over my abdomen. \"It was great.\" Her hand found its mark. She began to stroke me, and I swelled with desire. \"Didn't you think so?\"\n\n\"Oh yeah, but then I don't have much experience in these matters, as you know.\"\n\n\"Well, let's see what we can do about that.\"\n\nWe made love again, and then yet again, much later that night. In between Laura cooked a dinner of pasta with mussels and white wine and butter. We watched an old movie and shared another bottle of wine. It was a romantic comedy with Cary Grant, and Laura watched it with her head in my lap part of the time, and when she'd laugh I could swear there was no age difference between us. She seemed as young as me. She could have been my summertime girlfriend. I wanted to take her to the amusement park and share a caramel apple with her. I wanted to take her to the movies and eat buttered popcorn. I wanted to stroll with her, hand-in-hand, through the park. It didn't seem so impossible right then, though I suppose I knew it was.\n\nWhat I learned that evening is that we don't get \"older.\" Oh sure, we get smarter and wiser, and we can also get run down a bit from life's disappointments. But deep down inside we don't \"age.\" We are not young or old. What Laura saw in me, the beauty I saw in her, that essential quality of being \u2013 it never changes, or at least it doesn't change because of time. Laura and I found a place together, inside of each other, and we stood there for a time; we held hands and watched the sun set and rise; we were brave enough to share our most intimate of possessions \u2013 ourselves \u2013 even if only for a moment. \n\nWhen I woke up the next morning it was already bright and Laura was already up. I found a big towel and wrapped it around my waist and ventured downstairs. \n\nShe was reading the paper on the patio in her robe. She offered me some coffee. I hadn't yet acquired the taste, but I agreed. \n\n\"I was hoping you would still be in bed when I woke up,\" I said slyly but truthfully.\n\n\"You're incorrigible,\" she said setting a steaming mug in front of me.\n\nWe talked about our plans for the day. I had to be home in a couple hours to go to church with my mom. I could tell I shouldn't have told Laura that because it changed her mood and hindered my efforts to get her back into bed. I tried a different tactic.\n\n\"Well then come swimming with me,\" I pleaded. I saw her hesitate, so I stood up and removed my towel. She laughed. \"C'mon,\" I coaxed her, holding out my hand.\n\n\"You expect me to go swimming naked with you right now?\" she asked rhetorically, and I could see she was staring at my semi-erect penis.\n\n\"Don't tell me you don't skinny-dip in your own pool.\"\n\nShe shook her head. \"Not since...\" \n\nShe looked up into my eyes. I knew what she had started to say \u2013 not since her husband had passed away.\n\n\"...Not for quite some time,\" she finally finished, and it was like she had waived a dark cloud away. \n\n\"I dare you, then.\"\n\nThat made her laugh. She stood up and let her robe drop into her chair, and then she hurried away from me playfully. I jumped in the water after her, and then I sought her out and wrapped her in my arms. We kissed.\n\n\"I was going to send you straight home this morning,\" she said pulling her lips from mine.\n\n\"That was your plan, huh?\"\n\n\"Yes, you naughty little boy,\" she whispered in my ear.\n\nThe blood rushed to my genitals.\n\nWe kissed with hot, wet mouths. She strapped her legs around me. I pulled at the flesh of her behind. My now fully aroused member was pressed flat against my abdomen and I could feel it nuzzle into the folds of her labia. It was too soon, I thought.\n\nI carried her to the edge of the pool and I lifted her up and set her bottom on the pool ledge.\n\n\"I want to taste you,\" I said to her, and as I descended on her flesh she brought her feet up on to the ledge and leaned back on her outstretched arms, readily offering herself to me. ",
        "I devoured her. I lapped and pulled and tickled and suckled her clitoris until I could hear the pleasure escape from her.\n\n\"Oh, Kevin,\" she repeated several times. I petted her wet, wispy red-blonde pubic hair and massaged her pubic mound with my hands, and then I spread her open, unsheathing her hard, pinkish-white nub. I sucked it into my mouth through pursed lips and kneaded it with my tongue.\n\n\"Oh good lord, I'm coming,\" Laura gasped. Her thighs shivered. A foot slipped of the ledge, and I had to catch her body as she fell back into the water.\n\nWe were laughing. Again she wrapped her legs around me. We were neck deep in the water, and we were buoyant. Slowly I slipped into her, and she was scalding compared to the cool water. We ground our hips as best we could. I carried her to shallower water and as she began to gain substance I was able to push in and out of her. \n\nI pushed her up against the steps, and after sever thrusts we would take a higher step. When her bottom was on the top step in only a few inches of water, I positioned my feet and I stood up, lifting her out of the water with me still pressed deep inside her. My arms were wrapped firmly around her waist, my hands supporting her buttocks. She clung to me neck and squeezed her legs around me. I moved to mid-thigh-deep water. I lifted her up with a thrust and pulled her up with my arms, and she pulled me back into her with her smooth, strong legs. Our mouths were clamped together, and our teeth clicked as we tried to maintain a kiss.\n\nI had never imagined making love could be like this. I felt powerful and animalistic. I lifted her and thrust into her with more vigor. She took her mouth from mine and leaned her head back. Her hands were clasped behind my neck now. Her heels dug into my buttocks. Her knees were clamped at my side. I was bouncing against her, and it was like she was a swinging pendulum of heated sex. \n\nI started to tire, and she began to take over the movement. She was riding me vertically, and all I could do was hold on to her tightly and help her impale herself on me.\n\nAll of our previous lovemaking sessions had been intimate and romantic. This was something entirely different. I was simply flat-out fucking the lovely Mrs. Hollander now. It was primordial and naughty and liberating. \n\n\"I am going to come,\" I announced too loudly. I think I lost conscious. The next thing I knew we were in the water an Laura was on top of me and our limbs were entangled. Water was splashing everywhere, and she was laughing.\n\n\"Are you all right?\" she asked with sparkling eyes.\n\n\"Oh man, that was...\" I couldn't think what to say.\n\n\"Ridiculous?\" Laura offered still laughing.\n\n\"Fun.\" I replied.\n\n\"Oh yes, very fun, assuming you're all right.\"\n\n\"I'm fine. Wow!\"\n\nAnd it was enlightening, too. I learned that a woman \u2013 an elegant, graceful, sexy, REAL woman \u2013 could truly enjoy simply flat-out fucking.\n\nLaura helped me up and kissed me and then she excused herself. As she dried off I found myself marveling at my good fortune. Then she wrapped the towel around her chest and disappeared inside.\n\nWhen she returned to the patio she was wearing designer jeans and a pink sleeveless blouse. I was still recuperating in the pool. She laid out my shorts and T-shirt on the chaise and set my shoes on the flagstone floor. Then she stood by the pool with her hands on her hips and looked at me. I was immediately overcome with embarrassment; Oh my God, I thought to myself, what the hell am I doing swimming naked in Mrs. Hollander's pool.\n\nShe looked at her watch. \"You better hustle if you are going to it to make church,\" she said.\n\nI crawled out of the pool, dried myself off, and got dressed.\n\nWhen I was through, she said, \"We need to talk, Kevin,\" with an eerily maternal tone. She motioned for me to join her at the patio table. \n\n\"We do?\" I replied sheepishly as I took my seat.\n\nShe looked at me and pouted. \"That really wasn't supposed to happen this morning.\"\n\n\"You mean that?\" I pointed at the pool and smiled.\n\n\"Yes.\" She shook her head and grimaced. She reached across the table and took my hand. \"Kevin, what happened yesterday and last night,\" and then she heaved a big sigh, \"and this morning \u2014\" she added with mock exasperation, \"is a one time only thing. Do you understand that?\"\n\nI didn't respond because I could tell she intended to say more.\n\n\"I am going to be brutally honest with you right now, okay?\"\n\nI nodded.\n\n\"What I did, throwing myself at you like that yesterday, it was very selfish of me...\"\n\n\"No it wasn't...\"\n\nShe squeezed my hand. \"Shh. Just listen. You don't leave for college till Saturday. Between now and then, you will...\" She stopped to gauge her words. \"All right both of us will want to, um...\"\n\n\"Do it again,\" I said nodding my head eagerly as I tried to help her along. She smiled\n\n\"Yes. Do it again,\" she acceded. That was great, I thought. \"But we can't,\" she added, bursting my bubble.\n\n\"Why not?\"\n\n\"Because it will spoil everything. I hadn't really thought this through until just now, Kevin.\" She was articulating her words carefully. \"I wanted to think that what happened yesterday was unique and special, our little secret. That's how I rationalized it. But really...\" She stopped and I got the impression she was welling up with tears. \"But really, I was just desperate.\" Now she stopped because she couldn't speak. I felt like I had to say something to let her know I understood. \n\n\"You were lonely and sad,\" I started, and she nodded, \"and you thought that maybe I could make that go away for a while.\"\n\n\"Yes.\" She forced out the word.\n\n\"And you trusted me.\"\n\nShe looked at me with a mix of embarrassment and pain and confusion. She closed her eyes. \"You are a remarkably perceptive young man.\" Then she opened her eyes and looked hard into mine. \"Yes I trusted you, but I was also taking advantage of you.\" \n\nI started to interrupt her but she squeezed my hand and cut me off. \"I wanted to be with you so badly, Kevin, that I was willing to overlook a lot of things, including your feelings and the obvious consequences, and that was selfish and wrong, and I'm sorry.\"\n\nI wholeheartedly disagreed, but I decided not to argue with her. \n\n\"Did it work?\" I asked finally.\n\n\"What?\" \n\n\"Did the loneliness and sadness go away?\"\n\nShe smiled and exhaled. \"Yes. You were wonderful.\"\n\n\"Then there is nothing to be sorry about.\" Again I understood. I stood up and pulled on her hand. \n\n\"One last kiss?\" I asked with resignation.\n\n\"Yes, of course,\" she replied.\n\nWe embraced and we kissed with great tenderness and affection. \n\nI would see Laura only two more times. \n\nOn Thursday I cleaned her pool. Brad was buying my business, and I brought him along so I could introduce Laura to him. There was a part of me that wanted to leave Brad out of the picture, a part of me that was hoping (just as she had predicted) that I would have a chance to make love to Laura that afternoon. But in the end I knew that was impossible. \n\nLaura was excited to see us and, of course, she made iced tea. After the pool was clean the three of us chatted on the patio. We talked mostly about my upcoming departure, but also about Laura's impending move to San Diego. She told Brad she would recommend him to the new owners. She was hoping it would be only a matter of weeks. \n\nWhen it was time to go, she pulled me aside and said, \"I wanted to give you something, but it can wait.\" Of course, my first thought was that I had made a mistake in bringing Brad, but then she said, \"It will only take a minute, just come by to see me Saturday morning, to say goodbye before you go.\"\n\nI had my Toyota pickup packed by nine o'clock Saturday morning. I strapped my bike to the tailgate, the finishing touch, and then I walked up to Laura's house to say goodbye. She had been watching me from the living room window, I discovered, and she opened the door just as I stepped onto her porch.\n\n\"Good morning, Kevin,\" she said brightly. \n\nI was full of nervous energy, and there was an awkward moment as we were standing in her foyer trying to figure out how to greet each other. We finally settled on a friendly hug and a peck on the cheek. She led me to the backyard.\n\nThere was what looked like an oversized ring box on the patio table. It was black and unmarked. We sat down next to each other.\n\n\"I hope you like it,\" she said. \"I don't know what else to do with it. I do want you to have it.\"\n\nI opened the box. It was a gold and stainless steel Rolex Oyster Perpetual watch. My eyes were wide.\n\n\"Now before you say anything, it was Peter's watch. He only wore it to business meetings and on special occasions, so I wasn't about to bury it with him, but it has been sitting on my dresser for a long time now, and, until now, I had absolutely no idea what I was going to do with it.\"\n\n\"It's beautiful.\"\n\n\"Yes, it is. A man should have a good watch.\"\n\n\"I can't take it?\"\n\n\"Why? Because you think it's weird?\" She looked hurt.\n\n\"No. But it belonged to your husband.\"\n\nShe put it on my wrist carefully and held my hand. \"There. A perfect fit.\" Then she made sure she had my attention. \n\n\"Kevin, please take it. It deserves to be on a man's wrist, not on my dresser. And it's not like I am going to get involved with some man in the future and want him to be wearing Peter's watch. I want YOU to have it.\" \n\nShe paused and swallowed. \"And Peter would want you to have it.\"\n\nHe would? It would take me a few years to understand what she had meant.\n\n\"Maybe when you look at it... I don't know \u2013 maybe every now and then you'll send a kind thought my way.\"\n\nI welled up a bit.\n\n\"Thank you,\" I said finally.\n\nOver a quarter century later, I still wear that watch almost everyday. My wife of twenty years \u2013 whom I met in my first year in grad school, by the way \u2013 knows its story. I worried when I first set to telling it to her; I thought she might try to stop me from wearing the watch. However, upon hearing the story, her exact words were, \"That's very sweet.\"\n\nLaura and I hug and kissed like old friends in her foyer. The kiss lingered. I started to open my mouth. She pulled away from me. \n\n\"You'd better go,\" she whispered with a smile.\n\nShe came outside and sat in her porch swing while I hustled back to my house. I said goodbye to my parents, and I was off. \n\nAs I was about to pull out of the cul de sac, I saw Laura standing in her driveway. It was the last time I would ever see her. Just as she was leaving my sightline, I saw her throw a little kiss in the air. At the time I assumed it was intended for me, but I now know it was intended for the sky and the heavens above."
    ],
    "authorname": "C.C. Rider",
    "tags": [
        "hollander",
        "wait whispered",
        "hair remember",
        "peter watch",
        "lifetime moment",
        "remember looked",
        "laura sister",
        "towel stood",
        "o'clock saturday",
        "started turned"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-lifetime-in-one-moment"
}